// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:458

#ifndef _TAO_IDL_COMMONS_V4ECE2_H_
#define _TAO_IDL_COMMONS_V4ECE2_H_

#include /**/ "ace/pre.h"

#include "CommonC.h"
#include "tao/StringSeqS.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class SArg_Traits< ::Stock::StockInfo>
    : public
        Var_Size_SArg_Traits_T<
            ::Stock::StockInfo,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_STOCK_STOCKNAMES__SARG_TRAITS_)
#define _STOCK_STOCKNAMES__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Stock::StockNames>
    : public
        Object_SArg_Traits_T<
            ::Stock::StockNames *,
            ::Stock::StockNames_var,
            ::Stock::StockNames_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_STOCK_COOKIE__SARG_TRAITS_)
#define _STOCK_COOKIE__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Stock::Cookie>
    : public
        Object_SArg_Traits_T<
            ::Stock::Cookie *,
            ::Stock::Cookie_var,
            ::Stock::Cookie_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_STOCK_TRIGGER__SARG_TRAITS_)
#define _STOCK_TRIGGER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Stock::Trigger>
    : public
        Object_SArg_Traits_T<
            ::Stock::Trigger_ptr,
            ::Stock::Trigger_var,
            ::Stock::Trigger_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_STOCK_STOCKNAMECONSUMER__SARG_TRAITS_)
#define _STOCK_STOCKNAMECONSUMER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Stock::StockNameConsumer>
    : public
        Object_SArg_Traits_T<
            ::Stock::StockNameConsumer_ptr,
            ::Stock::StockNameConsumer_var,
            ::Stock::StockNameConsumer_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_STOCK_STOCKQUOTER__SARG_TRAITS_)
#define _STOCK_STOCKQUOTER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Stock::StockQuoter>
    : public
        Object_SArg_Traits_T<
            ::Stock::StockQuoter_ptr,
            ::Stock::StockQuoter_var,
            ::Stock::StockQuoter_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:35

namespace POA_Stock
{
  

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class Trigger;
  typedef Trigger *Trigger_ptr;

  class  Trigger
    : public virtual PortableServer::ServantBase
  {
  protected:
    Trigger (void);
  
  public:
    /// Useful for template programming.
    typedef ::Stock::Trigger _stub_type;
    typedef ::Stock::Trigger_ptr _stub_ptr_type;
    typedef ::Stock::Trigger_var _stub_var_type;

    Trigger (const Trigger& rhs);
    virtual ~Trigger (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::Stock::Trigger *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void start (
      void) = 0;

    static void start_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void stop (
      void) = 0;

    static void stop_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class StockNameConsumer;
  typedef StockNameConsumer *StockNameConsumer_ptr;

  class  StockNameConsumer
    : public virtual PortableServer::ServantBase
  {
  protected:
    StockNameConsumer (void);
  
  public:
    /// Useful for template programming.
    typedef ::Stock::StockNameConsumer _stub_type;
    typedef ::Stock::StockNameConsumer_ptr _stub_ptr_type;
    typedef ::Stock::StockNameConsumer_var _stub_var_type;

    StockNameConsumer (const StockNameConsumer& rhs);
    virtual ~StockNameConsumer (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::Stock::StockNameConsumer *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void push_StockName (
      ::Stock::StockNames * the_stocknames) = 0;

    static void push_StockName_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual ::Stock::Cookie * cookie_ (
      void) = 0;

    static void _get_cookie__skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void cookie_ (
      ::Stock::Cookie * cookie_) = 0;

    static void _set_cookie__skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class StockQuoter;
  typedef StockQuoter *StockQuoter_ptr;

  class  StockQuoter
    : public virtual PortableServer::ServantBase
  {
  protected:
    StockQuoter (void);
  
  public:
    /// Useful for template programming.
    typedef ::Stock::StockQuoter _stub_type;
    typedef ::Stock::StockQuoter_ptr _stub_ptr_type;
    typedef ::Stock::StockQuoter_var _stub_var_type;

    StockQuoter (const StockQuoter& rhs);
    virtual ~StockQuoter (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::Stock::StockQuoter *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual ::Stock::StockInfo * get_stock_info (
      const char * stock_name) = 0;

    static void get_stock_info_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:66

} // module Stock

#include /**/ "ace/post.h"

#endif /* ifndef */

