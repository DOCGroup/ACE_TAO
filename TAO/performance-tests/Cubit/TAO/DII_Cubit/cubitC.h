// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:149

#ifndef _TAO_IDL_CUBITC_YG8TZY_H_
#define _TAO_IDL_CUBITC_YG8TZY_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include "tao/AnyTypeCode/Any_Arg_Traits.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 4 || TAO_MICRO_VERSION != 1
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_root/root_ch.cpp:157
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_interface.cpp:748

#if !defined (_CUBIT__VAR_OUT_CH_)
#define _CUBIT__VAR_OUT_CH_

class Cubit;
typedef Cubit *Cubit_ptr;

typedef
  TAO_Objref_Var_T<
      Cubit
    >
  Cubit_var;

typedef
  TAO_Objref_Out_T<
      Cubit
    >
  Cubit_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ch.cpp:40

class  Cubit
  : public virtual ::CORBA::Object
{
public:
  friend class TAO::Narrow_Utils<Cubit>;

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef Cubit_ptr _ptr_type;
  typedef Cubit_var _var_type;
  typedef Cubit_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static Cubit_ptr _duplicate (Cubit_ptr obj);

  static void _tao_release (Cubit_ptr obj);

  static Cubit_ptr _narrow (::CORBA::Object_ptr obj);
  static Cubit_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static Cubit_ptr _nil (void);

  virtual void cube_oneway (
    void);

  virtual void cube_void (
    void);

  virtual ::CORBA::Octet cube_octet (
    ::CORBA::Octet o);

  virtual ::CORBA::Short cube_short (
    ::CORBA::Short s);

  virtual ::CORBA::Long cube_long (
    ::CORBA::Long l);

  // TAO_IDL - Generated from
  // be/be_type.cpp:258

  struct Many;

  typedef
    ::TAO_Fixed_Var_T<
        Many
      >
    Many_var;

  typedef
    Many &
    Many_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:48

  struct  Many
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef Many_var _var_type;
    typedef Many_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Octet o;
    ::CORBA::Long l;
    ::CORBA::Short s;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  static ::CORBA::TypeCode_ptr const _tc_Many;

  virtual ::Cubit::Many cube_struct (
    const ::Cubit::Many & values);

  virtual ::CORBA::Any * cube_any (
    const ::CORBA::Any & value);

  virtual ::CORBA::Any * cube_any_struct (
    const ::CORBA::Any & value);

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum discrim
  {
    e_0th,
    e_1st,
    e_2nd,
    e_3rd
  };

  typedef discrim &discrim_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  static ::CORBA::TypeCode_ptr const _tc_discrim;

  // TAO_IDL - Generated from
  // be/be_type.cpp:258

  class oneof;

  typedef
    ::TAO_Fixed_Var_T<
        oneof
      >
    oneof_var;

  typedef
    oneof &
    oneof_out;

  class  oneof
  {
  public:
    oneof (void);
    oneof (const oneof &);
    ~oneof (void);

    oneof &operator= (const oneof &);

    // TAO_IDL - Generated from
    // be/be_visitor_union/discriminant_ch.cpp:67

    void _d (Cubit::discrim);
    Cubit::discrim _d (void) const;

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef oneof_var _var_type;
    typedef oneof_out _out_type;

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:449

    void o ( ::CORBA::Octet);
    ::CORBA::Octet o (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:449

    void s ( ::CORBA::Short);
    ::CORBA::Short s (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:449

    void l ( ::CORBA::Long);
    ::CORBA::Long l (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:656

    void cm (const Cubit::Many &);
    const Cubit::Many &cm (void) const;
    Cubit::Many &cm (void);

    // TAO_IDL - Generated from
    // be/be_visitor_union/union_ch.cpp:121

    void _default (void);
  private:
    Cubit::discrim disc_;

    union
    {
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:377
      ::CORBA::Octet o_;
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:377
      ::CORBA::Short s_;
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:377
      ::CORBA::Long l_;
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:519
      Cubit::Many cm_;
    } u_;

    /// TAO extension - frees any allocated storage.
    void _reset (void);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  static ::CORBA::TypeCode_ptr const _tc_oneof;

  virtual ::Cubit::oneof cube_union (
    const ::Cubit::oneof & values);

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:99

#if !defined (_CUBIT_LONG_SEQ_CH_)
#define _CUBIT_LONG_SEQ_CH_

  class long_seq;

  typedef
    ::TAO_FixedSeq_Var_T<
        long_seq
      >
    long_seq_var;

  typedef
    ::TAO_Seq_Out_T<
        long_seq
      >
    long_seq_out;

  class  long_seq
    : public
        ::TAO::unbounded_value_sequence<
            ::CORBA::Long
          >
  {
  public:
    long_seq (void);
    long_seq ( ::CORBA::ULong max);
    long_seq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Long* buffer,
      ::CORBA::Boolean release = false);
    long_seq (const long_seq &);
    virtual ~long_seq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef long_seq_var _var_type;
    typedef long_seq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  static ::CORBA::TypeCode_ptr const _tc_long_seq;

  virtual void cube_long_sequence (
    const ::Cubit::long_seq & input,
    ::Cubit::long_seq_out output);

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:99

#if !defined (_CUBIT_OCTET_SEQ_CH_)
#define _CUBIT_OCTET_SEQ_CH_

  class octet_seq;

  typedef
    ::TAO_FixedSeq_Var_T<
        octet_seq
      >
    octet_seq_var;

  typedef
    ::TAO_Seq_Out_T<
        octet_seq
      >
    octet_seq_out;

  class  octet_seq
    : public
        ::TAO::unbounded_value_sequence<
            ::CORBA::Octet
          >
  {
  public:
    octet_seq (void);
    octet_seq ( ::CORBA::ULong max);
    octet_seq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Octet* buffer,
      ::CORBA::Boolean release = false);
    octet_seq (const octet_seq &);
    virtual ~octet_seq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef octet_seq_var _var_type;
    typedef octet_seq_out _out_type;

    static void _tao_any_destructor (void *);

    

#if (TAO_NO_COPY_OCTET_SEQUENCES == 1)
    octet_seq (
        ::CORBA::ULong length,
        const ACE_Message_Block* mb
      )
      : ::TAO::unbounded_value_sequence< ::CORBA::Octet> (length, mb) {}
#endif /* TAO_NO_COPY_OCTET_SEQUENCE == 1 */
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  static ::CORBA::TypeCode_ptr const _tc_octet_seq;

  virtual void cube_octet_sequence (
    const ::Cubit::octet_seq & input,
    ::Cubit::octet_seq_out output);

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:99

#if !defined (_CUBIT_MANY_SEQ_CH_)
#define _CUBIT_MANY_SEQ_CH_

  class many_seq;

  typedef
    ::TAO_FixedSeq_Var_T<
        many_seq
      >
    many_seq_var;

  typedef
    ::TAO_Seq_Out_T<
        many_seq
      >
    many_seq_out;

  class  many_seq
    : public
        ::TAO::unbounded_value_sequence<
            Many
          >
  {
  public:
    many_seq (void);
    many_seq ( ::CORBA::ULong max);
    many_seq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      Many* buffer,
      ::CORBA::Boolean release = false);
    many_seq (const many_seq &);
    virtual ~many_seq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef many_seq_var _var_type;
    typedef many_seq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  static ::CORBA::TypeCode_ptr const _tc_many_seq;

  virtual void cube_many_sequence (
    const ::Cubit::many_seq & input,
    ::Cubit::many_seq_out output);

  virtual void shutdown (
    void);

  // TAO_IDL - Generated from
  // be/be_type.cpp:258

  struct RtiPacketHeader;

  typedef
    ::TAO_Fixed_Var_T<
        RtiPacketHeader
      >
    RtiPacketHeader_var;

  typedef
    RtiPacketHeader &
    RtiPacketHeader_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:48

  struct  RtiPacketHeader
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef RtiPacketHeader_var _var_type;
    typedef RtiPacketHeader_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::ULong packetLength;
    ::CORBA::UShort federationHandle;
    ::CORBA::ULong channelHandle;
    ::CORBA::ULong packetColor;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  static ::CORBA::TypeCode_ptr const _tc_RtiPacketHeader;

  // TAO_IDL - Generated from
  // be/be_type.cpp:258

  struct HandleValuePair;

  typedef
    ::TAO_Var_Var_T<
        HandleValuePair
      >
    HandleValuePair_var;

  typedef
    ::TAO_Out_T<
        HandleValuePair
      >
    HandleValuePair_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:48

  struct  HandleValuePair
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef HandleValuePair_var _var_type;
    typedef HandleValuePair_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::UShort handle;
    Cubit::octet_seq data;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  static ::CORBA::TypeCode_ptr const _tc_HandleValuePair;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum MessageHeaderTypes
  {
    objectUpdate,
    interaction
  };

  typedef MessageHeaderTypes &MessageHeaderTypes_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  static ::CORBA::TypeCode_ptr const _tc_MessageHeaderTypes;

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:99

#if !defined (_CUBIT_HANDLEVALUEPAIRSEQ_CH_)
#define _CUBIT_HANDLEVALUEPAIRSEQ_CH_

  class HandleValuePairSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        HandleValuePairSeq
      >
    HandleValuePairSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        HandleValuePairSeq
      >
    HandleValuePairSeq_out;

  class  HandleValuePairSeq
    : public
        ::TAO::unbounded_value_sequence<
            HandleValuePair
          >
  {
  public:
    HandleValuePairSeq (void);
    HandleValuePairSeq ( ::CORBA::ULong max);
    HandleValuePairSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      HandleValuePair* buffer,
      ::CORBA::Boolean release = false);
    HandleValuePairSeq (const HandleValuePairSeq &);
    virtual ~HandleValuePairSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef HandleValuePairSeq_var _var_type;
    typedef HandleValuePairSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  static ::CORBA::TypeCode_ptr const _tc_HandleValuePairSeq;

  // TAO_IDL - Generated from
  // be/be_type.cpp:258

  struct RtiObjectUpdateMessageHeader;

  typedef
    ::TAO_Var_Var_T<
        RtiObjectUpdateMessageHeader
      >
    RtiObjectUpdateMessageHeader_var;

  typedef
    ::TAO_Out_T<
        RtiObjectUpdateMessageHeader
      >
    RtiObjectUpdateMessageHeader_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:48

  struct  RtiObjectUpdateMessageHeader
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef RtiObjectUpdateMessageHeader_var _var_type;
    typedef RtiObjectUpdateMessageHeader_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::ULong updateLength;
    ::CORBA::ULong updateTag;
    ::CORBA::ULong objectHandle;
    ::CORBA::Double timestamp;
    ::CORBA::ULongLong eventRetractionHandle;
    ::CORBA::UShort classHandle;
    ::CORBA::UShort sendingFederateHandle;
    ::TAO::String_Manager userTag;
    Cubit::octet_seq regionData;
    ::CORBA::Octet transportationHandle;
    ::CORBA::Octet orderingHandle;
    Cubit::HandleValuePairSeq messagePayload;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  static ::CORBA::TypeCode_ptr const _tc_RtiObjectUpdateMessageHeader;

  // TAO_IDL - Generated from
  // be/be_type.cpp:258

  struct RtiInteractionMessageHeader;

  typedef
    ::TAO_Fixed_Var_T<
        RtiInteractionMessageHeader
      >
    RtiInteractionMessageHeader_var;

  typedef
    RtiInteractionMessageHeader &
    RtiInteractionMessageHeader_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:48

  struct  RtiInteractionMessageHeader
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef RtiInteractionMessageHeader_var _var_type;
    typedef RtiInteractionMessageHeader_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::ULong updateLength;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  static ::CORBA::TypeCode_ptr const _tc_RtiInteractionMessageHeader;

  // TAO_IDL - Generated from
  // be/be_type.cpp:258

  class MessageUnion;

  typedef
    ::TAO_Var_Var_T<
        MessageUnion
      >
    MessageUnion_var;

  typedef
    ::TAO_Out_T<
        MessageUnion
      >
    MessageUnion_out;

  class  MessageUnion
  {
  public:
    MessageUnion (void);
    MessageUnion (const MessageUnion &);
    ~MessageUnion (void);

    MessageUnion &operator= (const MessageUnion &);

    // TAO_IDL - Generated from
    // be/be_visitor_union/discriminant_ch.cpp:67

    void _d (Cubit::MessageHeaderTypes);
    Cubit::MessageHeaderTypes _d (void) const;

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef MessageUnion_var _var_type;
    typedef MessageUnion_out _out_type;

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:656

    void oumh (const Cubit::RtiObjectUpdateMessageHeader &);
    const Cubit::RtiObjectUpdateMessageHeader &oumh (void) const;
    Cubit::RtiObjectUpdateMessageHeader &oumh (void);

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:656

    void imh (const Cubit::RtiInteractionMessageHeader &);
    const Cubit::RtiInteractionMessageHeader &imh (void) const;
    Cubit::RtiInteractionMessageHeader &imh (void);

    // TAO_IDL - Generated from
    // be/be_visitor_union/union_ch.cpp:121

    void _default (void);
  private:
    Cubit::MessageHeaderTypes disc_;

    union
    {
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:519
      Cubit::RtiObjectUpdateMessageHeader *oumh_;
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:519
      Cubit::RtiInteractionMessageHeader imh_;
    } u_;

    /// TAO extension - frees any allocated storage.
    void _reset (void);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  static ::CORBA::TypeCode_ptr const _tc_MessageUnion;

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:99

#if !defined (_CUBIT_MESSAGEUNIONSEQ_CH_)
#define _CUBIT_MESSAGEUNIONSEQ_CH_

  class MessageUnionSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        MessageUnionSeq
      >
    MessageUnionSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        MessageUnionSeq
      >
    MessageUnionSeq_out;

  class  MessageUnionSeq
    : public
        ::TAO::unbounded_value_sequence<
            MessageUnion
          >
  {
  public:
    MessageUnionSeq (void);
    MessageUnionSeq ( ::CORBA::ULong max);
    MessageUnionSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      MessageUnion* buffer,
      ::CORBA::Boolean release = false);
    MessageUnionSeq (const MessageUnionSeq &);
    virtual ~MessageUnionSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef MessageUnionSeq_var _var_type;
    typedef MessageUnionSeq_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  static ::CORBA::TypeCode_ptr const _tc_MessageUnionSeq;

  // TAO_IDL - Generated from
  // be/be_type.cpp:258

  struct RtiPacket;

  typedef
    ::TAO_Var_Var_T<
        RtiPacket
      >
    RtiPacket_var;

  typedef
    ::TAO_Out_T<
        RtiPacket
      >
    RtiPacket_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:48

  struct  RtiPacket
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef RtiPacket_var _var_type;
    typedef RtiPacket_out _out_type;

    static void _tao_any_destructor (void *);
    
    Cubit::RtiPacketHeader packetHeader;
    Cubit::MessageUnionSeq msgs;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  static ::CORBA::TypeCode_ptr const _tc_RtiPacket;

  virtual void cube_rti_data (
    const ::Cubit::RtiPacket & input,
    ::Cubit::RtiPacket_out output);

  virtual void ping (
    void);

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:137

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  Cubit (void);

  // Concrete non-local interface only.
  Cubit (
      ::IOP::IOR *ior,
      TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  Cubit (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0);

  virtual ~Cubit (void);

private:
  // Private and unimplemented for concrete interfaces.
  Cubit (const Cubit &);

  void operator= (const Cubit &);
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Cubit;

// TAO_IDL - Generated from
// be/be_interface.cpp:748

#if !defined (_CUBIT_FACTORY__VAR_OUT_CH_)
#define _CUBIT_FACTORY__VAR_OUT_CH_

class Cubit_Factory;
typedef Cubit_Factory *Cubit_Factory_ptr;

typedef
  TAO_Objref_Var_T<
      Cubit_Factory
    >
  Cubit_Factory_var;

typedef
  TAO_Objref_Out_T<
      Cubit_Factory
    >
  Cubit_Factory_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ch.cpp:40

class  Cubit_Factory
  : public virtual ::CORBA::Object
{
public:
  friend class TAO::Narrow_Utils<Cubit_Factory>;

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef Cubit_Factory_ptr _ptr_type;
  typedef Cubit_Factory_var _var_type;
  typedef Cubit_Factory_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static Cubit_Factory_ptr _duplicate (Cubit_Factory_ptr obj);

  static void _tao_release (Cubit_Factory_ptr obj);

  static Cubit_Factory_ptr _narrow (::CORBA::Object_ptr obj);
  static Cubit_Factory_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static Cubit_Factory_ptr _nil (void);

  virtual ::Cubit_ptr make_cubit (
    void);

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:137

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  Cubit_Factory (void);

  // Concrete non-local interface only.
  Cubit_Factory (
      ::IOP::IOR *ior,
      TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  Cubit_Factory (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0);

  virtual ~Cubit_Factory (void);

private:
  // Private and unimplemented for concrete interfaces.
  Cubit_Factory (const Cubit_Factory &);

  void operator= (const Cubit_Factory &);
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Cubit_Factory;

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_CUBIT__ARG_TRAITS_)
#define _CUBIT__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::Cubit>
    : public
        Object_Arg_Traits_T<
            ::Cubit_ptr,
            ::Cubit_var,
            ::Cubit_out,
            TAO::Objref_Traits<Cubit>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::Cubit::Many>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Cubit::Many,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::Cubit::discrim>
    : public
        Basic_Arg_Traits_T<
            ::Cubit::discrim,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:1056

  template<>
  class Arg_Traits< ::Cubit::oneof>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Cubit::oneof,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class Arg_Traits< ::Cubit::long_seq>
    : public
        Var_Size_Arg_Traits_T<
            ::Cubit::long_seq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class Arg_Traits< ::Cubit::octet_seq>
    : public
        Var_Size_Arg_Traits_T<
            ::Cubit::octet_seq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class Arg_Traits< ::Cubit::many_seq>
    : public
        Var_Size_Arg_Traits_T<
            ::Cubit::many_seq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::Cubit::RtiPacketHeader>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Cubit::RtiPacketHeader,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::Cubit::HandleValuePair>
    : public
        Var_Size_Arg_Traits_T<
            ::Cubit::HandleValuePair,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::Cubit::MessageHeaderTypes>
    : public
        Basic_Arg_Traits_T<
            ::Cubit::MessageHeaderTypes,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class Arg_Traits< ::Cubit::HandleValuePairSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::Cubit::HandleValuePairSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::Cubit::RtiObjectUpdateMessageHeader>
    : public
        Var_Size_Arg_Traits_T<
            ::Cubit::RtiObjectUpdateMessageHeader,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::Cubit::RtiInteractionMessageHeader>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Cubit::RtiInteractionMessageHeader,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:1056

  template<>
  class Arg_Traits< ::Cubit::MessageUnion>
    : public
        Var_Size_Arg_Traits_T<
            ::Cubit::MessageUnion,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class Arg_Traits< ::Cubit::MessageUnionSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::Cubit::MessageUnionSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::Cubit::RtiPacket>
    : public
        Var_Size_Arg_Traits_T<
            ::Cubit::RtiPacket,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_CUBIT_FACTORY__ARG_TRAITS_)
#define _CUBIT_FACTORY__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::Cubit_Factory>
    : public
        Object_Arg_Traits_T<
            ::Cubit_Factory_ptr,
            ::Cubit_Factory_var,
            ::Cubit_Factory_out,
            TAO::Objref_Traits<Cubit_Factory>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_CUBIT__TRAITS_)
#define _CUBIT__TRAITS_

  template<>
  struct  Objref_Traits< ::Cubit>
  {
    static ::Cubit_ptr duplicate (
        ::Cubit_ptr p);
    static void release (
        ::Cubit_ptr p);
    static ::Cubit_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Cubit_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CUBIT_FACTORY__TRAITS_)
#define _CUBIT_FACTORY__TRAITS_

  template<>
  struct  Objref_Traits< ::Cubit_Factory>
  {
    static ::Cubit_Factory_ptr duplicate (
        ::Cubit_Factory_ptr p);
    static void release (
        ::Cubit_Factory_ptr p);
    static ::Cubit_Factory_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Cubit_Factory_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:41


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, Cubit_ptr); // copying
 void operator<<= (::CORBA::Any &, Cubit_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Cubit_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const Cubit::Many &); // copying version
 void operator<<= (::CORBA::Any &, Cubit::Many*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Cubit::Many *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Cubit::Many *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, Cubit::discrim);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Cubit::discrim &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_union/any_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const Cubit::oneof &); // copying version
 void operator<<= (::CORBA::Any &, Cubit::oneof*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Cubit::oneof *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Cubit::oneof *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const Cubit::long_seq &); // copying version
 void operator<<= ( ::CORBA::Any &, Cubit::long_seq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Cubit::long_seq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Cubit::long_seq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const Cubit::octet_seq &); // copying version
 void operator<<= ( ::CORBA::Any &, Cubit::octet_seq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Cubit::octet_seq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Cubit::octet_seq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const Cubit::many_seq &); // copying version
 void operator<<= ( ::CORBA::Any &, Cubit::many_seq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Cubit::many_seq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Cubit::many_seq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const Cubit::RtiPacketHeader &); // copying version
 void operator<<= (::CORBA::Any &, Cubit::RtiPacketHeader*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Cubit::RtiPacketHeader *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Cubit::RtiPacketHeader *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const Cubit::HandleValuePair &); // copying version
 void operator<<= (::CORBA::Any &, Cubit::HandleValuePair*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Cubit::HandleValuePair *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Cubit::HandleValuePair *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, Cubit::MessageHeaderTypes);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Cubit::MessageHeaderTypes &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const Cubit::HandleValuePairSeq &); // copying version
 void operator<<= ( ::CORBA::Any &, Cubit::HandleValuePairSeq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Cubit::HandleValuePairSeq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Cubit::HandleValuePairSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const Cubit::RtiObjectUpdateMessageHeader &); // copying version
 void operator<<= (::CORBA::Any &, Cubit::RtiObjectUpdateMessageHeader*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Cubit::RtiObjectUpdateMessageHeader *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Cubit::RtiObjectUpdateMessageHeader *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const Cubit::RtiInteractionMessageHeader &); // copying version
 void operator<<= (::CORBA::Any &, Cubit::RtiInteractionMessageHeader*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Cubit::RtiInteractionMessageHeader *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Cubit::RtiInteractionMessageHeader *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_union/any_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const Cubit::MessageUnion &); // copying version
 void operator<<= (::CORBA::Any &, Cubit::MessageUnion*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Cubit::MessageUnion *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Cubit::MessageUnion *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const Cubit::MessageUnionSeq &); // copying version
 void operator<<= ( ::CORBA::Any &, Cubit::MessageUnionSeq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Cubit::MessageUnionSeq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Cubit::MessageUnionSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const Cubit::RtiPacket &); // copying version
 void operator<<= (::CORBA::Any &, Cubit::RtiPacket*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Cubit::RtiPacket *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Cubit::RtiPacket *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:41


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, Cubit_Factory_ptr); // copying
 void operator<<= (::CORBA::Any &, Cubit_Factory_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Cubit_Factory_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:41

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Cubit_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Cubit_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Cubit::Many &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Cubit::Many &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Cubit::discrim _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Cubit::discrim &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_union/cdr_op_ch.cpp:38


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Cubit::oneof &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Cubit::oneof &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:65

#if !defined _TAO_CDR_OP_Cubit_long_seq_H_
#define _TAO_CDR_OP_Cubit_long_seq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Cubit::long_seq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Cubit::long_seq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Cubit_long_seq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:65

#if !defined _TAO_CDR_OP_Cubit_octet_seq_H_
#define _TAO_CDR_OP_Cubit_octet_seq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Cubit::octet_seq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Cubit::octet_seq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Cubit_octet_seq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:65

#if !defined _TAO_CDR_OP_Cubit_many_seq_H_
#define _TAO_CDR_OP_Cubit_many_seq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Cubit::many_seq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Cubit::many_seq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Cubit_many_seq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Cubit::RtiPacketHeader &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Cubit::RtiPacketHeader &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Cubit::HandleValuePair &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Cubit::HandleValuePair &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Cubit::MessageHeaderTypes _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Cubit::MessageHeaderTypes &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:65

#if !defined _TAO_CDR_OP_Cubit_HandleValuePairSeq_H_
#define _TAO_CDR_OP_Cubit_HandleValuePairSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Cubit::HandleValuePairSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Cubit::HandleValuePairSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Cubit_HandleValuePairSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Cubit::RtiObjectUpdateMessageHeader &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Cubit::RtiObjectUpdateMessageHeader &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Cubit::RtiInteractionMessageHeader &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Cubit::RtiInteractionMessageHeader &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_union/cdr_op_ch.cpp:38


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Cubit::MessageUnion &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Cubit::MessageUnion &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:65

#if !defined _TAO_CDR_OP_Cubit_MessageUnionSeq_H_
#define _TAO_CDR_OP_Cubit_MessageUnionSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Cubit::MessageUnionSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Cubit::MessageUnionSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Cubit_MessageUnionSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Cubit::RtiPacket &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Cubit::RtiPacket &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:41

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Cubit_Factory_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Cubit_Factory_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1700
#if defined (__ACE_INLINE__)
#include "cubitC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

