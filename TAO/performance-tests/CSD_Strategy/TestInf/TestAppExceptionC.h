// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:149

#ifndef _TAO_IDL_TESTAPPEXCEPTIONC_RRCDEP_H_
#define _TAO_IDL_TESTAPPEXCEPTIONC_RRCDEP_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "TestInf/CSD_PT_TestInf_Export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 4 || TAO_MICRO_VERSION != 1
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO CSD_PT_TestInf_Export

// TAO_IDL - Generated from
// be/be_visitor_exception/exception_ch.cpp:41

class CSD_PT_TestInf_Export TestAppException : public ::CORBA::UserException
{
public:

  TestAppException (void);
  TestAppException (const TestAppException &);
  ~TestAppException (void);

  TestAppException &operator= (const TestAppException &);

  static void _tao_any_destructor (void *);

  static TestAppException *_downcast ( ::CORBA::Exception *);
  static const TestAppException *_downcast ( ::CORBA::Exception const *);

  static ::CORBA::Exception *_alloc (void);

  virtual ::CORBA::Exception *_tao_duplicate (void) const;

  virtual void _raise (void) const;

  virtual void _tao_encode (TAO_OutputCDR &cdr) const;
  virtual void _tao_decode (TAO_InputCDR &cdr);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern CSD_PT_TestInf_Export ::CORBA::TypeCode_ptr const _tc_TestAppException;

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/any_op_ch.cpp:38
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



CSD_PT_TestInf_Export void operator<<= (::CORBA::Any &, const TestAppException &); // copying version
CSD_PT_TestInf_Export void operator<<= (::CORBA::Any &, TestAppException*); // noncopying version
CSD_PT_TestInf_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TestAppException *&); // deprecated
CSD_PT_TestInf_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const TestAppException *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_ch.cpp:37
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



CSD_PT_TestInf_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const TestAppException &);
CSD_PT_TestInf_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, TestAppException &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1700
#if defined (__ACE_INLINE__)
#include "TestAppExceptionC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

