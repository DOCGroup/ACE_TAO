// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:149

#ifndef _TAO_IDL_SEQUENCEC_VYU7OI_H_
#define _TAO_IDL_SEQUENCEC_VYU7OI_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/Sequence_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/StringSeqC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 4 || TAO_MICRO_VERSION != 1
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_type.cpp:258

struct Str_Sequences;

typedef
  ::TAO_Var_Var_T<
      Str_Sequences
    >
  Str_Sequences_var;

typedef
  ::TAO_Out_T<
      Str_Sequences
    >
  Str_Sequences_out;

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_ch.cpp:48

struct  Str_Sequences
{

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef Str_Sequences_var _var_type;
  typedef Str_Sequences_out _out_type;
  
  CORBA::StringSeq first_str;
  CORBA::StringSeq second_str;
};

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_ch.cpp:99

#if !defined (_STRSEQSEQ_CH_)
#define _STRSEQSEQ_CH_

class StrSeqSeq;

typedef
  ::TAO_VarSeq_Var_T<
      StrSeqSeq
    >
  StrSeqSeq_var;

typedef
  ::TAO_Seq_Out_T<
      StrSeqSeq
    >
  StrSeqSeq_out;

class  StrSeqSeq
  : public
      ::TAO::unbounded_value_sequence<
          Str_Sequences
        >
{
public:
  StrSeqSeq (void);
  StrSeqSeq ( ::CORBA::ULong max);
  StrSeqSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    Str_Sequences* buffer,
    ::CORBA::Boolean release = false);
  StrSeqSeq (const StrSeqSeq &);
  virtual ~StrSeqSeq (void);
  

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef StrSeqSeq_var _var_type;
  typedef StrSeqSeq_out _out_type;
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_type.cpp:258

struct Sequence_Str_Sequences;

typedef
  ::TAO_Var_Var_T<
      Sequence_Str_Sequences
    >
  Sequence_Str_Sequences_var;

typedef
  ::TAO_Out_T<
      Sequence_Str_Sequences
    >
  Sequence_Str_Sequences_out;

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_ch.cpp:48

struct  Sequence_Str_Sequences
{

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef Sequence_Str_Sequences_var _var_type;
  typedef Sequence_Str_Sequences_out _out_type;
  
  StrSeqSeq seq_str_seq;
};

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_ch.cpp:99

#if !defined (_REDUNDANT_SEQUENCES_CH_)
#define _REDUNDANT_SEQUENCES_CH_

class Redundant_Sequences;

typedef
  ::TAO_VarSeq_Var_T<
      Redundant_Sequences
    >
  Redundant_Sequences_var;

typedef
  ::TAO_Seq_Out_T<
      Redundant_Sequences
    >
  Redundant_Sequences_out;

class  Redundant_Sequences
  : public
      ::TAO::unbounded_value_sequence<
          Sequence_Str_Sequences
        >
{
public:
  Redundant_Sequences (void);
  Redundant_Sequences ( ::CORBA::ULong max);
  Redundant_Sequences (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    Sequence_Str_Sequences* buffer,
    ::CORBA::Boolean release = false);
  Redundant_Sequences (const Redundant_Sequences &);
  virtual ~Redundant_Sequences (void);
  

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef Redundant_Sequences_var _var_type;
  typedef Redundant_Sequences_out _out_type;
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_type.cpp:258

struct Biglist_Struct;

typedef
  ::TAO_Var_Var_T<
      Biglist_Struct
    >
  Biglist_Struct_var;

typedef
  ::TAO_Out_T<
      Biglist_Struct
    >
  Biglist_Struct_out;

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_ch.cpp:48

struct  Biglist_Struct
{

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef Biglist_Struct_var _var_type;
  typedef Biglist_Struct_out _out_type;
  
  Str_Sequences strs;
  Redundant_Sequences red_seqs;
};

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_ch.cpp:99

#if !defined (_BIGLISTSEQ_CH_)
#define _BIGLISTSEQ_CH_

class BigListSeq;

typedef
  ::TAO_VarSeq_Var_T<
      BigListSeq
    >
  BigListSeq_var;

typedef
  ::TAO_Seq_Out_T<
      BigListSeq
    >
  BigListSeq_out;

class  BigListSeq
  : public
      ::TAO::unbounded_value_sequence<
          Biglist_Struct
        >
{
public:
  BigListSeq (void);
  BigListSeq ( ::CORBA::ULong max);
  BigListSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    Biglist_Struct* buffer,
    ::CORBA::Boolean release = false);
  BigListSeq (const BigListSeq &);
  virtual ~BigListSeq (void);
  

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef BigListSeq_var _var_type;
  typedef BigListSeq_out _out_type;
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_type.cpp:258

struct Seq_Structs;

typedef
  ::TAO_Var_Var_T<
      Seq_Structs
    >
  Seq_Structs_var;

typedef
  ::TAO_Out_T<
      Seq_Structs
    >
  Seq_Structs_out;

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_ch.cpp:48

struct  Seq_Structs
{

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef Seq_Structs_var _var_type;
  typedef Seq_Structs_out _out_type;
  
  BigListSeq seq;
};

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::Str_Sequences>
    : public
        Var_Size_Arg_Traits_T<
            ::Str_Sequences,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class Arg_Traits< ::StrSeqSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::StrSeqSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::Sequence_Str_Sequences>
    : public
        Var_Size_Arg_Traits_T<
            ::Sequence_Str_Sequences,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class Arg_Traits< ::Redundant_Sequences>
    : public
        Var_Size_Arg_Traits_T<
            ::Redundant_Sequences,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::Biglist_Struct>
    : public
        Var_Size_Arg_Traits_T<
            ::Biglist_Struct,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class Arg_Traits< ::BigListSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::BigListSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::Seq_Structs>
    : public
        Var_Size_Arg_Traits_T<
            ::Seq_Structs,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Str_Sequences &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Str_Sequences &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:65

#if !defined _TAO_CDR_OP_StrSeqSeq_H_
#define _TAO_CDR_OP_StrSeqSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const StrSeqSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    StrSeqSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_StrSeqSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Sequence_Str_Sequences &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Sequence_Str_Sequences &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:65

#if !defined _TAO_CDR_OP_Redundant_Sequences_H_
#define _TAO_CDR_OP_Redundant_Sequences_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Redundant_Sequences &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Redundant_Sequences &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Redundant_Sequences_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Biglist_Struct &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Biglist_Struct &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:65

#if !defined _TAO_CDR_OP_BigListSeq_H_
#define _TAO_CDR_OP_BigListSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const BigListSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    BigListSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_BigListSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Seq_Structs &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Seq_Structs &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1700
#if defined (__ACE_INLINE__)
#include "sequenceC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

