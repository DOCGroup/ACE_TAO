// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:373


#include "sequenceC.h"
#include "tao/CDR.h"

#if !defined (__ACE_INLINE__)
#include "sequenceC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_cs.cpp:70

#if !defined (_STRSEQSEQ_CS_)
#define _STRSEQSEQ_CS_

StrSeqSeq::StrSeqSeq (void)
{}

StrSeqSeq::StrSeqSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        Str_Sequences
      > (max)
{}

StrSeqSeq::StrSeqSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    Str_Sequences * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        Str_Sequences
      >
    (max, length, buffer, release)
{}

StrSeqSeq::StrSeqSeq (
    const StrSeqSeq &seq)
  : ::TAO::unbounded_value_sequence<
        Str_Sequences
      > (seq)
{}

StrSeqSeq::~StrSeqSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_cs.cpp:70

#if !defined (_REDUNDANT_SEQUENCES_CS_)
#define _REDUNDANT_SEQUENCES_CS_

Redundant_Sequences::Redundant_Sequences (void)
{}

Redundant_Sequences::Redundant_Sequences (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        Sequence_Str_Sequences
      > (max)
{}

Redundant_Sequences::Redundant_Sequences (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    Sequence_Str_Sequences * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        Sequence_Str_Sequences
      >
    (max, length, buffer, release)
{}

Redundant_Sequences::Redundant_Sequences (
    const Redundant_Sequences &seq)
  : ::TAO::unbounded_value_sequence<
        Sequence_Str_Sequences
      > (seq)
{}

Redundant_Sequences::~Redundant_Sequences (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_cs.cpp:70

#if !defined (_BIGLISTSEQ_CS_)
#define _BIGLISTSEQ_CS_

BigListSeq::BigListSeq (void)
{}

BigListSeq::BigListSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        Biglist_Struct
      > (max)
{}

BigListSeq::BigListSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    Biglist_Struct * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        Biglist_Struct
      >
    (max, length, buffer, release)
{}

BigListSeq::BigListSeq (
    const BigListSeq &seq)
  : ::TAO::unbounded_value_sequence<
        Biglist_Struct
      > (seq)
{}

BigListSeq::~BigListSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:49

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Str_Sequences &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.first_str) &&
    (strm << _tao_aggregate.second_str);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Str_Sequences &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.first_str) &&
    (strm >> _tao_aggregate.second_str);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:93
#if !defined _TAO_CDR_OP_StrSeqSeq_CPP_
#define _TAO_CDR_OP_StrSeqSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const StrSeqSeq &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    StrSeqSeq &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_StrSeqSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:49

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Sequence_Str_Sequences &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.seq_str_seq);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Sequence_Str_Sequences &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.seq_str_seq);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:93
#if !defined _TAO_CDR_OP_Redundant_Sequences_CPP_
#define _TAO_CDR_OP_Redundant_Sequences_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Redundant_Sequences &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Redundant_Sequences &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_Redundant_Sequences_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:49

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Biglist_Struct &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.strs) &&
    (strm << _tao_aggregate.red_seqs);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Biglist_Struct &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.strs) &&
    (strm >> _tao_aggregate.red_seqs);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:93
#if !defined _TAO_CDR_OP_BigListSeq_CPP_
#define _TAO_CDR_OP_BigListSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const BigListSeq &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    BigListSeq &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_BigListSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:49

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Seq_Structs &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.seq);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Seq_Structs &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.seq);
}

TAO_END_VERSIONED_NAMESPACE_DECL



