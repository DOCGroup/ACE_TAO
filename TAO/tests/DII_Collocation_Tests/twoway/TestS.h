// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:458

#ifndef _TAO_IDL_TESTS_Y2ACQX_H_
#define _TAO_IDL_TESTS_Y2ACQX_H_

#include /**/ "ace/pre.h"

#include "TestC.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/BD_String_SArgument_T.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Fixed_Array_SArgument_T.h"
#include "tao/PortableServer/Var_Array_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class SArg_Traits< ::Test::Bounded_Var_Size_Arg>
    : public
        Var_Size_SArg_Traits_T<
            ::Test::Bounded_Var_Size_Arg,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class SArg_Traits< ::Test::Unbounded_Var_Size_Arg>
    : public
        Var_Size_SArg_Traits_T<
            ::Test::Unbounded_Var_Size_Arg,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class SArg_Traits< ::Test::Fixed_Array_tag>
    : public
        Fixed_Array_SArg_Traits_T<
            ::Test::Fixed_Array_var,
            ::Test::Fixed_Array_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class SArg_Traits< ::Test::Var_Array_tag>
    : public
        Var_Array_SArg_Traits_T<
            ::Test::Var_Array_out,
            ::Test::Var_Array_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#if !defined (_BOUNDED_STRING10__SARG_TRAITS_)
#define _BOUNDED_STRING10__SARG_TRAITS_

  template<>
  class SArg_Traits<Bounded_String_10>
    : public
        BD_String_SArg_Traits_T<
            CORBA::String_var,
            10,
            TAO::Any_Insert_Policy_Stream
        >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class SArg_Traits< ::Test::TimeOfDay>
    : public
        Fixed_Size_SArg_Traits_T<
            ::Test::TimeOfDay,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_TEST_SIMPLE_TEST__SARG_TRAITS_)
#define _TEST_SIMPLE_TEST__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Test::Simple_Test>
    : public
        Object_SArg_Traits_T<
            ::Test::Simple_Test_ptr,
            ::Test::Simple_Test_var,
            ::Test::Simple_Test_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_TEST_HELLO__SARG_TRAITS_)
#define _TEST_HELLO__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Test::Hello>
    : public
        Object_SArg_Traits_T<
            ::Test::Hello_ptr,
            ::Test::Hello_var,
            ::Test::Hello_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:35

namespace POA_Test
{


  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class Simple_Test;
  typedef Simple_Test *Simple_Test_ptr;

  class  Simple_Test
    : public virtual PortableServer::ServantBase
  {
  protected:
    Simple_Test (void);

  public:
    /// Useful for template programming.
    typedef ::Test::Simple_Test _stub_type;
    typedef ::Test::Simple_Test_ptr _stub_ptr_type;
    typedef ::Test::Simple_Test_var _stub_var_type;

    Simple_Test (const Simple_Test& rhs);
    virtual ~Simple_Test (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);

    ::Test::Simple_Test *_this (void);

    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void test_method (
      ::CORBA::ULong & error_count) = 0;

    static void test_method_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class Hello;
  typedef Hello *Hello_ptr;

  class  Hello
    : public virtual PortableServer::ServantBase
  {
  protected:
    Hello (void);

  public:
    /// Useful for template programming.
    typedef ::Test::Hello _stub_type;
    typedef ::Test::Hello_ptr _stub_ptr_type;
    typedef ::Test::Hello_var _stub_var_type;

    Hello (const Hello& rhs);
    virtual ~Hello (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);

    ::Test::Hello *_this (void);

    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void test_basic_arg (
      ::CORBA::Long inval,
      ::CORBA::Long_out outval) = 0;

    static void test_basic_arg_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void test_unbounded_string_arg (
      const char * message) = 0;

    static void test_unbounded_string_arg_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void test_unbounded_string_arg_out (
      const char * message,
      ::CORBA::String_out out_message) = 0;

    static void test_unbounded_string_arg_out_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void test_bounded_string_arg (
      const char * message) = 0;

    static void test_bounded_string_arg_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void test_fixed_array_arg (
      const ::Test::Fixed_Array message) = 0;

    static void test_fixed_array_arg_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void test_var_array_arg (
      const ::Test::Var_Array messages) = 0;

    static void test_var_array_arg_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void test_bounded_var_size_arg (
      const ::Test::Bounded_Var_Size_Arg & message) = 0;

    static void test_bounded_var_size_arg_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void test_unbounded_var_size_arg (
      const ::Test::Unbounded_Var_Size_Arg & message) = 0;

    static void test_unbounded_var_size_arg_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void test_fixed_size_arg (
      const ::Test::TimeOfDay & t) = 0;

    static void test_fixed_size_arg_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void test_special_basic_arg (
      ::CORBA::Char value) = 0;

    static void test_special_basic_arg_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void test_objref_arg (
      ::Test::Simple_Test_ptr test) = 0;

    static void test_objref_arg_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void test_object_arg (
      ::CORBA::Object_ptr o) = 0;

    static void test_object_arg_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void test_args_1 (
      ::CORBA::Object_ptr arg1,
      ::CORBA::Char arg2,
      ::Test::Simple_Test_ptr arg3) = 0;

    static void test_args_1_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void test_args_2 (
      const char * arg1,
      const ::Test::Fixed_Array arg2,
      const ::Test::TimeOfDay & arg3) = 0;

    static void test_args_2_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void test_args_3 (
      const char * arg1,
      const ::Test::Bounded_Var_Size_Arg & arg2,
      const ::Test::Unbounded_Var_Size_Arg & arg3,
      const ::Test::Var_Array arg4) = 0;

    static void test_args_3_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual char * get_string (
      void) = 0;

    static void get_string_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void shutdown (
      void) = 0;

    static void shutdown_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:66

} // module Test

#include /**/ "ace/post.h"

#endif /* ifndef */

