// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:458

#ifndef _TAO_IDL_CHILDS_Q57PVI_H_
#define _TAO_IDL_CHILDS_Q57PVI_H_

#include /**/ "ace/pre.h"

#include "ChildC.h"
#include "ParentS.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Messaging/MessagingS.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_MESSAGING_EXCEPTIONHOLDER__SARG_TRAITS_)
#define _MESSAGING_EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Messaging::ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::Messaging::ExceptionHolder *,
            ::Messaging::ExceptionHolder_var,
            ::Messaging::ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_CHILDINTERFACE__SARG_TRAITS_)
#define _CHILDINTERFACE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::ChildInterface>
    : public
        Object_SArg_Traits_T<
            ::ChildInterface_ptr,
            ::ChildInterface_var,
            ::ChildInterface_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_AMI_CHILDINTERFACEHANDLER__SARG_TRAITS_)
#define _AMI_CHILDINTERFACEHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_ChildInterfaceHandler>
    : public
        Object_SArg_Traits_T<
            ::AMI_ChildInterfaceHandler_ptr,
            ::AMI_ChildInterfaceHandler_var,
            ::AMI_ChildInterfaceHandler_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_CHILDMODULE_CHILDINTERFACE__SARG_TRAITS_)
#define _CHILDMODULE_CHILDINTERFACE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::ChildModule::ChildInterface>
    : public
        Object_SArg_Traits_T<
            ::ChildModule::ChildInterface_ptr,
            ::ChildModule::ChildInterface_var,
            ::ChildModule::ChildInterface_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_CHILDMODULE_AMI_CHILDINTERFACEHANDLER__SARG_TRAITS_)
#define _CHILDMODULE_AMI_CHILDINTERFACEHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::ChildModule::AMI_ChildInterfaceHandler>
    : public
        Object_SArg_Traits_T<
            ::ChildModule::AMI_ChildInterfaceHandler_ptr,
            ::ChildModule::AMI_ChildInterfaceHandler_var,
            ::ChildModule::AMI_ChildInterfaceHandler_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/interface_sh.cpp:73

class POA_ChildInterface;
typedef POA_ChildInterface *POA_ChildInterface_ptr;

class  POA_ChildInterface
  : public virtual POA_ParentInterface
{
protected:
  POA_ChildInterface (void);

public:
  /// Useful for template programming.
  typedef ::ChildInterface _stub_type;
  typedef ::ChildInterface_ptr _stub_ptr_type;
  typedef ::ChildInterface_var _stub_var_type;

  POA_ChildInterface (const POA_ChildInterface& rhs);
  virtual ~POA_ChildInterface (void);

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);

  ::ChildInterface *_this (void);

  virtual const char* _interface_repository_id (void) const;
};

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_sh.cpp:73

class POA_AMI_ChildInterfaceHandler;
typedef POA_AMI_ChildInterfaceHandler *POA_AMI_ChildInterfaceHandler_ptr;

class  POA_AMI_ChildInterfaceHandler
  : public virtual POA_AMI_ParentInterfaceHandler
{
protected:
  POA_AMI_ChildInterfaceHandler (void);

public:
  /// Useful for template programming.
  typedef ::AMI_ChildInterfaceHandler _stub_type;
  typedef ::AMI_ChildInterfaceHandler_ptr _stub_ptr_type;
  typedef ::AMI_ChildInterfaceHandler_var _stub_var_type;

  POA_AMI_ChildInterfaceHandler (const POA_AMI_ChildInterfaceHandler& rhs);
  virtual ~POA_AMI_ChildInterfaceHandler (void);

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);

  ::AMI_ChildInterfaceHandler *_this (void);

  virtual const char* _interface_repository_id (void) const;
};

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:35

namespace POA_ChildModule
{


  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class ChildInterface;
  typedef ChildInterface *ChildInterface_ptr;

  class  ChildInterface
    : public virtual POA_ParentModule::ParentInterface
  {
  protected:
    ChildInterface (void);

  public:
    /// Useful for template programming.
    typedef ::ChildModule::ChildInterface _stub_type;
    typedef ::ChildModule::ChildInterface_ptr _stub_ptr_type;
    typedef ::ChildModule::ChildInterface_var _stub_var_type;

    ChildInterface (const ChildInterface& rhs);
    virtual ~ChildInterface (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);

    ::ChildModule::ChildInterface *_this (void);

    virtual const char* _interface_repository_id (void) const;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class AMI_ChildInterfaceHandler;
  typedef AMI_ChildInterfaceHandler *AMI_ChildInterfaceHandler_ptr;

  class  AMI_ChildInterfaceHandler
    : public virtual POA_ParentModule::AMI_ParentInterfaceHandler
  {
  protected:
    AMI_ChildInterfaceHandler (void);

  public:
    /// Useful for template programming.
    typedef ::ChildModule::AMI_ChildInterfaceHandler _stub_type;
    typedef ::ChildModule::AMI_ChildInterfaceHandler_ptr _stub_ptr_type;
    typedef ::ChildModule::AMI_ChildInterfaceHandler_var _stub_var_type;

    AMI_ChildInterfaceHandler (const AMI_ChildInterfaceHandler& rhs);
    virtual ~AMI_ChildInterfaceHandler (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);

    ::ChildModule::AMI_ChildInterfaceHandler *_this (void);

    virtual const char* _interface_repository_id (void) const;
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:66

} // module ChildModule

#include /**/ "ace/post.h"

#endif /* ifndef */

