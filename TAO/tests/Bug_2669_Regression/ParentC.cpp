// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:373


#include "ParentC.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/AnyTypeCode/Value_TypeCode_Static.h"
#include "tao/AnyTypeCode/TypeCode_Value_Field.h"
#include "tao/CDR.h"
#include "tao/Messaging/Asynch_Invocation_Adapter.h"
#include "tao/Messaging/ExceptionHolder_i.h"
#include "tao/Valuetype/ValueFactory.h"
#include "tao/Object_T.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "ParentC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:48

// Traits specializations for ParentInterface.

ParentInterface_ptr
TAO::Objref_Traits<ParentInterface>::duplicate (
    ParentInterface_ptr p)
{
  return ParentInterface::_duplicate (p);
}

void
TAO::Objref_Traits<ParentInterface>::release (
    ParentInterface_ptr p)
{
  ::CORBA::release (p);
}

ParentInterface_ptr
TAO::Objref_Traits<ParentInterface>::nil (void)
{
  return ParentInterface::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<ParentInterface>::marshal (
    const ParentInterface_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

ParentInterface::ParentInterface (void)
{
}

ParentInterface::~ParentInterface (void)
{
}

void
ParentInterface::_tao_any_destructor (void *_tao_void_pointer)
{
  ParentInterface *_tao_tmp_pointer =
    static_cast<ParentInterface *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

ParentInterface_ptr
ParentInterface::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<ParentInterface>::narrow (
        _tao_objref,
        "IDL:parent.pragma.prefix/ParentInterface:1.0");
}

ParentInterface_ptr
ParentInterface::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<ParentInterface>::unchecked_narrow (
        _tao_objref);
}

ParentInterface_ptr
ParentInterface::_nil (void)
{
  return 0;
}

ParentInterface_ptr
ParentInterface::_duplicate (ParentInterface_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
ParentInterface::_tao_release (ParentInterface_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
ParentInterface::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:parent.pragma.prefix/ParentInterface:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* ParentInterface::_interface_repository_id (void) const
{
  return "IDL:parent.pragma.prefix/ParentInterface:1.0";
}

::CORBA::Boolean
ParentInterface::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:70

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_ParentInterface (
    ::CORBA::tk_objref,
    "IDL:parent.pragma.prefix/ParentInterface:1.0",
    "ParentInterface");
  
::CORBA::TypeCode_ptr const _tc_ParentInterface =
  &_tao_tc_ParentInterface;

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:48

// Traits specializations for AMI_ParentInterfaceHandler.

AMI_ParentInterfaceHandler_ptr
TAO::Objref_Traits<AMI_ParentInterfaceHandler>::duplicate (
    AMI_ParentInterfaceHandler_ptr p)
{
  return AMI_ParentInterfaceHandler::_duplicate (p);
}

void
TAO::Objref_Traits<AMI_ParentInterfaceHandler>::release (
    AMI_ParentInterfaceHandler_ptr p)
{
  ::CORBA::release (p);
}

AMI_ParentInterfaceHandler_ptr
TAO::Objref_Traits<AMI_ParentInterfaceHandler>::nil (void)
{
  return AMI_ParentInterfaceHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<AMI_ParentInterfaceHandler>::marshal (
    const AMI_ParentInterfaceHandler_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

AMI_ParentInterfaceHandler::AMI_ParentInterfaceHandler (void)
{
}

AMI_ParentInterfaceHandler::~AMI_ParentInterfaceHandler (void)
{
}

void
AMI_ParentInterfaceHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMI_ParentInterfaceHandler *_tao_tmp_pointer =
    static_cast<AMI_ParentInterfaceHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

AMI_ParentInterfaceHandler_ptr
AMI_ParentInterfaceHandler::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<AMI_ParentInterfaceHandler>::narrow (
        _tao_objref,
        "IDL:parent.pragma.prefix/AMI_ParentInterfaceHandler:1.0");
}

AMI_ParentInterfaceHandler_ptr
AMI_ParentInterfaceHandler::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<AMI_ParentInterfaceHandler>::unchecked_narrow (
        _tao_objref);
}

AMI_ParentInterfaceHandler_ptr
AMI_ParentInterfaceHandler::_nil (void)
{
  return 0;
}

AMI_ParentInterfaceHandler_ptr
AMI_ParentInterfaceHandler::_duplicate (AMI_ParentInterfaceHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
AMI_ParentInterfaceHandler::_tao_release (AMI_ParentInterfaceHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
AMI_ParentInterfaceHandler::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/Messaging/ReplyHandler:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:parent.pragma.prefix/AMI_ParentInterfaceHandler:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* AMI_ParentInterfaceHandler::_interface_repository_id (void) const
{
  return "IDL:parent.pragma.prefix/AMI_ParentInterfaceHandler:1.0";
}

::CORBA::Boolean
AMI_ParentInterfaceHandler::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:70

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_AMI_ParentInterfaceHandler (
    ::CORBA::tk_objref,
    "IDL:parent.pragma.prefix/AMI_ParentInterfaceHandler:1.0",
    "AMI_ParentInterfaceHandler");
  
::CORBA::TypeCode_ptr const _tc_AMI_ParentInterfaceHandler =
  &_tao_tc_AMI_ParentInterfaceHandler;

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:48

// Traits specializations for ParentModule::ParentInterface.

ParentModule::ParentInterface_ptr
TAO::Objref_Traits<ParentModule::ParentInterface>::duplicate (
    ParentModule::ParentInterface_ptr p)
{
  return ParentModule::ParentInterface::_duplicate (p);
}

void
TAO::Objref_Traits<ParentModule::ParentInterface>::release (
    ParentModule::ParentInterface_ptr p)
{
  ::CORBA::release (p);
}

ParentModule::ParentInterface_ptr
TAO::Objref_Traits<ParentModule::ParentInterface>::nil (void)
{
  return ParentModule::ParentInterface::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<ParentModule::ParentInterface>::marshal (
    const ParentModule::ParentInterface_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

ParentModule::ParentInterface::ParentInterface (void)
{
}

ParentModule::ParentInterface::~ParentInterface (void)
{
}

void
ParentModule::ParentInterface::_tao_any_destructor (void *_tao_void_pointer)
{
  ParentInterface *_tao_tmp_pointer =
    static_cast<ParentInterface *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

ParentModule::ParentInterface_ptr
ParentModule::ParentInterface::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<ParentInterface>::narrow (
        _tao_objref,
        "IDL:parent.pragma.prefix/ParentModule/ParentInterface:1.0");
}

ParentModule::ParentInterface_ptr
ParentModule::ParentInterface::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<ParentInterface>::unchecked_narrow (
        _tao_objref);
}

ParentModule::ParentInterface_ptr
ParentModule::ParentInterface::_nil (void)
{
  return 0;
}

ParentModule::ParentInterface_ptr
ParentModule::ParentInterface::_duplicate (ParentInterface_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
ParentModule::ParentInterface::_tao_release (ParentInterface_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
ParentModule::ParentInterface::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:parent.pragma.prefix/ParentModule/ParentInterface:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* ParentModule::ParentInterface::_interface_repository_id (void) const
{
  return "IDL:parent.pragma.prefix/ParentModule/ParentInterface:1.0";
}

::CORBA::Boolean
ParentModule::ParentInterface::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:70

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_ParentModule_ParentInterface (
    ::CORBA::tk_objref,
    "IDL:parent.pragma.prefix/ParentModule/ParentInterface:1.0",
    "ParentInterface");
  

namespace ParentModule
{
  ::CORBA::TypeCode_ptr const _tc_ParentInterface =
    &_tao_tc_ParentModule_ParentInterface;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:48

// Traits specializations for ParentModule::AMI_ParentInterfaceHandler.

ParentModule::AMI_ParentInterfaceHandler_ptr
TAO::Objref_Traits<ParentModule::AMI_ParentInterfaceHandler>::duplicate (
    ParentModule::AMI_ParentInterfaceHandler_ptr p)
{
  return ParentModule::AMI_ParentInterfaceHandler::_duplicate (p);
}

void
TAO::Objref_Traits<ParentModule::AMI_ParentInterfaceHandler>::release (
    ParentModule::AMI_ParentInterfaceHandler_ptr p)
{
  ::CORBA::release (p);
}

ParentModule::AMI_ParentInterfaceHandler_ptr
TAO::Objref_Traits<ParentModule::AMI_ParentInterfaceHandler>::nil (void)
{
  return ParentModule::AMI_ParentInterfaceHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<ParentModule::AMI_ParentInterfaceHandler>::marshal (
    const ParentModule::AMI_ParentInterfaceHandler_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

ParentModule::AMI_ParentInterfaceHandler::AMI_ParentInterfaceHandler (void)
{
}

ParentModule::AMI_ParentInterfaceHandler::~AMI_ParentInterfaceHandler (void)
{
}

void
ParentModule::AMI_ParentInterfaceHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMI_ParentInterfaceHandler *_tao_tmp_pointer =
    static_cast<AMI_ParentInterfaceHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

ParentModule::AMI_ParentInterfaceHandler_ptr
ParentModule::AMI_ParentInterfaceHandler::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<AMI_ParentInterfaceHandler>::narrow (
        _tao_objref,
        "IDL:parent.pragma.prefix/ParentModule/AMI_ParentInterfaceHandler:1.0");
}

ParentModule::AMI_ParentInterfaceHandler_ptr
ParentModule::AMI_ParentInterfaceHandler::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<AMI_ParentInterfaceHandler>::unchecked_narrow (
        _tao_objref);
}

ParentModule::AMI_ParentInterfaceHandler_ptr
ParentModule::AMI_ParentInterfaceHandler::_nil (void)
{
  return 0;
}

ParentModule::AMI_ParentInterfaceHandler_ptr
ParentModule::AMI_ParentInterfaceHandler::_duplicate (AMI_ParentInterfaceHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
ParentModule::AMI_ParentInterfaceHandler::_tao_release (AMI_ParentInterfaceHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
ParentModule::AMI_ParentInterfaceHandler::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/Messaging/ReplyHandler:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:parent.pragma.prefix/ParentModule/AMI_ParentInterfaceHandler:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* ParentModule::AMI_ParentInterfaceHandler::_interface_repository_id (void) const
{
  return "IDL:parent.pragma.prefix/ParentModule/AMI_ParentInterfaceHandler:1.0";
}

::CORBA::Boolean
ParentModule::AMI_ParentInterfaceHandler::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:70

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_ParentModule_AMI_ParentInterfaceHandler (
    ::CORBA::tk_objref,
    "IDL:parent.pragma.prefix/ParentModule/AMI_ParentInterfaceHandler:1.0",
    "AMI_ParentInterfaceHandler");
  

namespace ParentModule
{
  ::CORBA::TypeCode_ptr const _tc_AMI_ParentInterfaceHandler =
    &_tao_tc_ParentModule_AMI_ParentInterfaceHandler;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:38
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<ParentInterface>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    ParentInterface_ptr _tao_elem)
{
  ParentInterface_ptr _tao_objptr =
    ParentInterface::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    ParentInterface_ptr *_tao_elem)
{
  TAO::Any_Impl_T<ParentInterface>::insert (
      _tao_any,
      ParentInterface::_tao_any_destructor,
      _tc_ParentInterface,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    ParentInterface_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<ParentInterface>::extract (
        _tao_any,
        ParentInterface::_tao_any_destructor,
        _tc_ParentInterface,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:38
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<AMI_ParentInterfaceHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    AMI_ParentInterfaceHandler_ptr _tao_elem)
{
  AMI_ParentInterfaceHandler_ptr _tao_objptr =
    AMI_ParentInterfaceHandler::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    AMI_ParentInterfaceHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<AMI_ParentInterfaceHandler>::insert (
      _tao_any,
      AMI_ParentInterfaceHandler::_tao_any_destructor,
      _tc_AMI_ParentInterfaceHandler,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    AMI_ParentInterfaceHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<AMI_ParentInterfaceHandler>::extract (
        _tao_any,
        AMI_ParentInterfaceHandler::_tao_any_destructor,
        _tc_AMI_ParentInterfaceHandler,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:38
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<ParentModule::ParentInterface>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ParentModule
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      ParentInterface_ptr _tao_elem)
  {
    ParentInterface_ptr _tao_objptr =
      ParentInterface::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      ParentInterface_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<ParentInterface>::insert (
        _tao_any,
        ParentInterface::_tao_any_destructor,
        _tc_ParentInterface,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      ParentInterface_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<ParentInterface>::extract (
          _tao_any,
          ParentInterface::_tao_any_destructor,
          _tc_ParentInterface,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    ParentModule::ParentInterface_ptr _tao_elem)
{
  ParentModule::ParentInterface_ptr _tao_objptr =
    ParentModule::ParentInterface::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    ParentModule::ParentInterface_ptr *_tao_elem)
{
  TAO::Any_Impl_T<ParentModule::ParentInterface>::insert (
      _tao_any,
      ParentModule::ParentInterface::_tao_any_destructor,
      ParentModule::_tc_ParentInterface,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    ParentModule::ParentInterface_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<ParentModule::ParentInterface>::extract (
        _tao_any,
        ParentModule::ParentInterface::_tao_any_destructor,
        ParentModule::_tc_ParentInterface,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:38
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<ParentModule::AMI_ParentInterfaceHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace ParentModule
{
  

  /// Copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      AMI_ParentInterfaceHandler_ptr _tao_elem)
  {
    AMI_ParentInterfaceHandler_ptr _tao_objptr =
      AMI_ParentInterfaceHandler::_duplicate (_tao_elem);
    _tao_any <<= &_tao_objptr;
  }

  /// Non-copying insertion.
  void
  operator<<= (
      ::CORBA::Any &_tao_any,
      AMI_ParentInterfaceHandler_ptr *_tao_elem)
  {
    TAO::Any_Impl_T<AMI_ParentInterfaceHandler>::insert (
        _tao_any,
        AMI_ParentInterfaceHandler::_tao_any_destructor,
        _tc_AMI_ParentInterfaceHandler,
        *_tao_elem);
  }

  ::CORBA::Boolean
  operator>>= (
      const ::CORBA::Any &_tao_any,
      AMI_ParentInterfaceHandler_ptr &_tao_elem)
  {
    return
      TAO::Any_Impl_T<AMI_ParentInterfaceHandler>::extract (
          _tao_any,
          AMI_ParentInterfaceHandler::_tao_any_destructor,
          _tc_AMI_ParentInterfaceHandler,
          _tao_elem);
  }
}

#else

TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    ParentModule::AMI_ParentInterfaceHandler_ptr _tao_elem)
{
  ParentModule::AMI_ParentInterfaceHandler_ptr _tao_objptr =
    ParentModule::AMI_ParentInterfaceHandler::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    ParentModule::AMI_ParentInterfaceHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<ParentModule::AMI_ParentInterfaceHandler>::insert (
      _tao_any,
      ParentModule::AMI_ParentInterfaceHandler::_tao_any_destructor,
      ParentModule::_tc_AMI_ParentInterfaceHandler,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    ParentModule::AMI_ParentInterfaceHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<ParentModule::AMI_ParentInterfaceHandler>::extract (
        _tao_any,
        ParentModule::AMI_ParentInterfaceHandler::_tao_any_destructor,
        ParentModule::_tc_AMI_ParentInterfaceHandler,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:51

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ParentInterface_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ParentInterface_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::ParentInterface RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:51

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const AMI_ParentInterfaceHandler_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    AMI_ParentInterfaceHandler_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::AMI_ParentInterfaceHandler RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:51

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ParentModule::ParentInterface_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ParentModule::ParentInterface_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::ParentModule::ParentInterface RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:51

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const ParentModule::AMI_ParentInterfaceHandler_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    ParentModule::AMI_ParentInterfaceHandler_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::ParentModule::AMI_ParentInterfaceHandler RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



