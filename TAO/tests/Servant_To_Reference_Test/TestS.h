// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:458

#ifndef _TAO_IDL_TESTS_S0IBAZ_H_
#define _TAO_IDL_TESTS_S0IBAZ_H_

#include /**/ "ace/pre.h"

#include "TestC.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_TEST_ONE__SARG_TRAITS_)
#define _TEST_ONE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Test::One>
    : public
        Object_SArg_Traits_T<
            ::Test::One_ptr,
            ::Test::One_var,
            ::Test::One_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_TEST_TWO__SARG_TRAITS_)
#define _TEST_TWO__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Test::Two>
    : public
        Object_SArg_Traits_T<
            ::Test::Two_ptr,
            ::Test::Two_var,
            ::Test::Two_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_TEST_THREE__SARG_TRAITS_)
#define _TEST_THREE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Test::Three>
    : public
        Object_SArg_Traits_T<
            ::Test::Three_ptr,
            ::Test::Three_var,
            ::Test::Three_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:35

namespace POA_Test
{


  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class One;
  typedef One *One_ptr;

  class  One
    : public virtual PortableServer::ServantBase
  {
  protected:
    One (void);

  public:
    /// Useful for template programming.
    typedef ::Test::One _stub_type;
    typedef ::Test::One_ptr _stub_ptr_type;
    typedef ::Test::One_var _stub_var_type;

    One (const One& rhs);
    virtual ~One (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);

    ::Test::One *_this (void);

    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual char * get_string (
      void) = 0;

    static void get_string_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class Two;
  typedef Two *Two_ptr;

  class  Two
    : public virtual PortableServer::ServantBase
  {
  protected:
    Two (void);

  public:
    /// Useful for template programming.
    typedef ::Test::Two _stub_type;
    typedef ::Test::Two_ptr _stub_ptr_type;
    typedef ::Test::Two_var _stub_var_type;

    Two (const Two& rhs);
    virtual ~Two (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);

    ::Test::Two *_this (void);

    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual char * get_string (
      void) = 0;

    static void get_string_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class Three;
  typedef Three *Three_ptr;

  class  Three
    : public virtual PortableServer::ServantBase
  {
  protected:
    Three (void);

  public:
    /// Useful for template programming.
    typedef ::Test::Three _stub_type;
    typedef ::Test::Three_ptr _stub_ptr_type;
    typedef ::Test::Three_var _stub_var_type;

    Three (const Three& rhs);
    virtual ~Three (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);

    ::Test::Three *_this (void);

    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual char * get_string (
      void) = 0;

    static void get_string_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:66

} // module Test

#include /**/ "ace/post.h"

#endif /* ifndef */

