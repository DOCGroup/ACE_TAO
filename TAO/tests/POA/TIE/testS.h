// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:458

#ifndef _TAO_IDL_TESTS_VX62WW_H_
#define _TAO_IDL_TESTS_VX62WW_H_

#include /**/ "ace/pre.h"

#include "testC.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_A__SARG_TRAITS_)
#define _A__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::A>
    : public
        Object_SArg_Traits_T<
            ::A_ptr,
            ::A_var,
            ::A_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_OUTER_B__SARG_TRAITS_)
#define _OUTER_B__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Outer::B>
    : public
        Object_SArg_Traits_T<
            ::Outer::B_ptr,
            ::Outer::B_var,
            ::Outer::B_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_OUTER_INNER_C__SARG_TRAITS_)
#define _OUTER_INNER_C__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Outer::Inner::C>
    : public
        Object_SArg_Traits_T<
            ::Outer::Inner::C_ptr,
            ::Outer::Inner::C_var,
            ::Outer::Inner::C_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/interface_sh.cpp:73

class POA_A;
typedef POA_A *POA_A_ptr;

class  POA_A
  : public virtual PortableServer::ServantBase
{
protected:
  POA_A (void);

public:
  /// Useful for template programming.
  typedef ::A _stub_type;
  typedef ::A_ptr _stub_ptr_type;
  typedef ::A_var _stub_var_type;

  POA_A (const POA_A& rhs);
  virtual ~POA_A (void);

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);

  ::A *_this (void);

  virtual const char* _interface_repository_id (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual ::CORBA::Long doit (
    void) = 0;

  static void doit_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:35

namespace POA_Outer
{


  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class B;
  typedef B *B_ptr;

  class  B
    : public virtual PortableServer::ServantBase
  {
  protected:
    B (void);

  public:
    /// Useful for template programming.
    typedef ::Outer::B _stub_type;
    typedef ::Outer::B_ptr _stub_ptr_type;
    typedef ::Outer::B_var _stub_var_type;

    B (const B& rhs);
    virtual ~B (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);

    ::Outer::B *_this (void);

    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual ::CORBA::Long doit (
      void) = 0;

    static void doit_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_sh.cpp:35

  namespace Inner
  {


    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_sh.cpp:73

    class C;
    typedef C *C_ptr;

    class  C
      : public virtual PortableServer::ServantBase
    {
    protected:
      C (void);

    public:
      /// Useful for template programming.
      typedef ::Outer::Inner::C _stub_type;
      typedef ::Outer::Inner::C_ptr _stub_ptr_type;
      typedef ::Outer::Inner::C_var _stub_var_type;

      C (const C& rhs);
      virtual ~C (void);

      virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

      virtual void _dispatch (
          TAO_ServerRequest & req,
          TAO::Portable_Server::Servant_Upcall *servant_upcall);

      ::Outer::Inner::C *_this (void);

      virtual const char* _interface_repository_id (void) const;

      // TAO_IDL - Generated from
      // be/be_visitor_operation/operation_sh.cpp:36

      virtual ::CORBA::Long doit (
        void) = 0;

      static void doit_skel (
          TAO_ServerRequest &server_request,
          TAO::Portable_Server::Servant_Upcall *servant_upcall,
          TAO_ServantBase *servant);
    };

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_sh.cpp:66

  } // module Outer::Inner

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:66

} // module Outer

#include "testS_T.h"


#include /**/ "ace/post.h"

#endif /* ifndef */

