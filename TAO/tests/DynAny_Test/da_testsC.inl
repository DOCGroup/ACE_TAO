// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/


// TAO_IDL - Generated from
// be/be_visitor_array/array_ci.cpp:147

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


ACE_INLINE
void
TAO::Array_Traits<DynAnyTests::test_array_forany>::free (
    DynAnyTests::test_array_slice * _tao_slice)
{
  DynAnyTests::test_array_free (_tao_slice);
}

ACE_INLINE
DynAnyTests::test_array_slice *
TAO::Array_Traits<DynAnyTests::test_array_forany>::dup (
    const DynAnyTests::test_array_slice * _tao_slice)
{
  return DynAnyTests::test_array_dup (_tao_slice);
}

ACE_INLINE
void
TAO::Array_Traits<DynAnyTests::test_array_forany>::copy (
    DynAnyTests::test_array_slice * _tao_to,
    const DynAnyTests::test_array_slice * _tao_from)
{
  DynAnyTests::test_array_copy (_tao_to, _tao_from);
}

ACE_INLINE
void
TAO::Array_Traits<DynAnyTests::test_array_forany>::zero (
    DynAnyTests::test_array_slice * _tao_slice)
{
  // Zero each individual element.
  for ( ::CORBA::ULong i0 = 0; i0 < 2; ++i0)
    {
      _tao_slice[i0] = ::CORBA::Long ();
    }
}

ACE_INLINE
DynAnyTests::test_array_slice *
TAO::Array_Traits<DynAnyTests::test_array_forany>::alloc (void)
{
  return DynAnyTests::test_array_alloc ();
}


TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union DynAnyTests::test_union
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:55

// Accessor to set the discriminant.
ACE_INLINE
void
DynAnyTests::test_union::_d (DynAnyTests::test_enum discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
DynAnyTests::test_enum
DynAnyTests::test_union::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
DynAnyTests::test_union::tc (const ::CORBA::TypeCode_ptr val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = DynAnyTests::TE_SECOND;
  this->u_.tc_ = ::CORBA::TypeCode::_duplicate (val);
}

/// Retrieve the member.
ACE_INLINE
::CORBA::TypeCode_ptr
DynAnyTests::test_union::tc (void) const
{
  return this->u_.tc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:229

/// Accessor to set the member.
ACE_INLINE
void
DynAnyTests::test_union::te (DynAnyTests::test_enum val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = DynAnyTests::TE_FOURTH;
  // Set the value.
  this->u_.te_ = val;
}

/// Retrieve the member.
ACE_INLINE
DynAnyTests::test_enum
DynAnyTests::test_union::te (void) const
{
  return this->u_.te_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
DynAnyTests::test_union::s (CORBA::Short val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = DynAnyTests::TE_FIRST;
  // Set the value.
  this->u_.s_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Short
DynAnyTests::test_union::s (void) const
{
  return this->u_.s_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:862

/// Accessor to set the member.
ACE_INLINE
void
DynAnyTests::test_union::str (char *val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = DynAnyTests::TE_THIRD;
  this->u_.str_ = val;
}

// Accessor to set the member.
ACE_INLINE
void
DynAnyTests::test_union::str (const char *val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = DynAnyTests::TE_THIRD;
  // Set the value.
  this->u_.str_ = ::CORBA::string_dup (val);
}

/// Accessor to set the member.
ACE_INLINE
void
DynAnyTests::test_union::str (const ::CORBA::String_var &val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = DynAnyTests::TE_THIRD;
  // Set the value.
  ::CORBA::String_var str_var = val;
  this->u_.str_ = str_var._retn ();
}

ACE_INLINE
const char *
DynAnyTests::test_union::str (void) const // get method
{
  return this->u_.str_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
DynAnyTests::test_union::o (CORBA::Octet val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = DynAnyTests::TE_ZEROTH;
  // Set the value.
  this->u_.o_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Octet
DynAnyTests::test_union::o (void) const
{
  return this->u_.o_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union DynAnyTests::test_implicit_def
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:145

ACE_INLINE
void
DynAnyTests::test_implicit_def::_default ()
{
  this->_reset ();
  this->disc_ = false;
}

// Accessor to set the discriminant.
ACE_INLINE
void
DynAnyTests::test_implicit_def::_d ( ::CORBA::Boolean discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
::CORBA::Boolean
DynAnyTests::test_implicit_def::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:229

/// Accessor to set the member.
ACE_INLINE
void
DynAnyTests::test_implicit_def::tenum (DynAnyTests::test_enum val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = true;
  // Set the value.
  this->u_.tenum_ = val;
}

/// Retrieve the member.
ACE_INLINE
DynAnyTests::test_enum
DynAnyTests::test_implicit_def::tenum (void) const
{
  return this->u_.tenum_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union DynAnyTests::test_union_no_active_member
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:145

ACE_INLINE
void
DynAnyTests::test_union_no_active_member::_default ()
{
  this->_reset ();
  this->disc_ = -2147483647;
}

// Accessor to set the discriminant.
ACE_INLINE
void
DynAnyTests::test_union_no_active_member::_d ( ::CORBA::Long discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
::CORBA::Long
DynAnyTests::test_union_no_active_member::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
DynAnyTests::test_union_no_active_member::field_long (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 1;
  // Set the value.
  this->u_.field_long_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
DynAnyTests::test_union_no_active_member::field_long (void) const
{
  return this->u_.field_long_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:862

/// Accessor to set the member.
ACE_INLINE
void
DynAnyTests::test_union_no_active_member::field_string (char *val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 2;
  this->u_.field_string_ = val;
}

// Accessor to set the member.
ACE_INLINE
void
DynAnyTests::test_union_no_active_member::field_string (const char *val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 2;
  // Set the value.
  this->u_.field_string_ = ::CORBA::string_dup (val);
}

/// Accessor to set the member.
ACE_INLINE
void
DynAnyTests::test_union_no_active_member::field_string (const ::CORBA::String_var &val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 2;
  // Set the value.
  ::CORBA::String_var field_string_var = val;
  this->u_.field_string_ = field_string_var._retn ();
}

ACE_INLINE
const char *
DynAnyTests::test_union_no_active_member::field_string (void) const // get method
{
  return this->u_.field_string_;
}

