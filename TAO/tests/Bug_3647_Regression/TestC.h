// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:149

#ifndef _TAO_IDL_TESTC_8MVCRK_H_
#define _TAO_IDL_TESTC_8MVCRK_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 4 || TAO_MICRO_VERSION != 1
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO

// TAO_IDL - Generated from
// be/be_visitor_root/root_ch.cpp:157
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:35

namespace Bug_3647_Regression
{

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:99

#if !defined (_BUG_3647_REGRESSION_PAYLOAD_CH_)
#define _BUG_3647_REGRESSION_PAYLOAD_CH_

  class Payload;

  typedef
    ::TAO_FixedSeq_Var_T<
        Payload
      >
    Payload_var;

  typedef
    ::TAO_Seq_Out_T<
        Payload
      >
    Payload_out;

  class  Payload
    : public
        ::TAO::unbounded_value_sequence<
            ::CORBA::Octet
          >
  {
  public:
    Payload (void);
    Payload ( ::CORBA::ULong max);
    Payload (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Octet* buffer,
      ::CORBA::Boolean release = false);
    Payload (const Payload &);
    virtual ~Payload (void);


    // TAO_IDL - Generated from
    // be/be_type.cpp:304


    typedef Payload_var _var_type;
    typedef Payload_out _out_type;

    static void _tao_any_destructor (void *);



#if (TAO_NO_COPY_OCTET_SEQUENCES == 1)
    Payload (
        ::CORBA::ULong length,
        const ACE_Message_Block* mb
      )
      : ::TAO::unbounded_value_sequence< ::CORBA::Octet> (length, mb) {}
#endif /* TAO_NO_COPY_OCTET_SEQUENCE == 1 */
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_Payload;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:748

#if !defined (_BUG_3647_REGRESSION_BACKEND__VAR_OUT_CH_)
#define _BUG_3647_REGRESSION_BACKEND__VAR_OUT_CH_

  class Backend;
  typedef Backend *Backend_ptr;

  typedef
    TAO_Objref_Var_T<
        Backend
      >
    Backend_var;

  typedef
    TAO_Objref_Out_T<
        Backend
      >
    Backend_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:40

  class  Backend
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<Backend>;

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef Backend_ptr _ptr_type;
    typedef Backend_var _var_type;
    typedef Backend_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Backend_ptr _duplicate (Backend_ptr obj);

    static void _tao_release (Backend_ptr obj);

    static Backend_ptr _narrow (::CORBA::Object_ptr obj);
    static Backend_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Backend_ptr _nil (void);

    virtual void startup_test (
      void);

    virtual void ping (
      const ::Bug_3647_Regression::Payload & the_payload);

    virtual void freeze (
      ::CORBA::ULong seconds);

    virtual void shutdown (
      void);

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    // Concrete interface only.
    Backend (void);

    // Concrete non-local interface only.
    Backend (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);

    // Non-local interface only.
    Backend (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~Backend (void);

  private:
    // Private and unimplemented for concrete interfaces.
    Backend (const Backend &);

    void operator= (const Backend &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_Backend;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:748

#if !defined (_BUG_3647_REGRESSION_MIDDLE__VAR_OUT_CH_)
#define _BUG_3647_REGRESSION_MIDDLE__VAR_OUT_CH_

  class Middle;
  typedef Middle *Middle_ptr;

  typedef
    TAO_Objref_Var_T<
        Middle
      >
    Middle_var;

  typedef
    TAO_Objref_Out_T<
        Middle
      >
    Middle_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:40

  class  Middle
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<Middle>;

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef Middle_ptr _ptr_type;
    typedef Middle_var _var_type;
    typedef Middle_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Middle_ptr _duplicate (Middle_ptr obj);

    static void _tao_release (Middle_ptr obj);

    static Middle_ptr _narrow (::CORBA::Object_ptr obj);
    static Middle_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Middle_ptr _nil (void);

    virtual void startup_test (
      void);

    virtual void ping (
      void);

    virtual void shutdown (
      void);

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    // Concrete interface only.
    Middle (void);

    // Concrete non-local interface only.
    Middle (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);

    // Non-local interface only.
    Middle (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~Middle (void);

  private:
    // Private and unimplemented for concrete interfaces.
    Middle (const Middle &);

    void operator= (const Middle &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_Middle;

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:64

} // module Bug_3647_Regression

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class Arg_Traits< ::Bug_3647_Regression::Payload>
    : public
        Var_Size_Arg_Traits_T<
            ::Bug_3647_Regression::Payload,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_BUG_3647_REGRESSION_BACKEND__ARG_TRAITS_)
#define _BUG_3647_REGRESSION_BACKEND__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::Bug_3647_Regression::Backend>
    : public
        Object_Arg_Traits_T<
            ::Bug_3647_Regression::Backend_ptr,
            ::Bug_3647_Regression::Backend_var,
            ::Bug_3647_Regression::Backend_out,
            TAO::Objref_Traits<Bug_3647_Regression::Backend>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_BUG_3647_REGRESSION_MIDDLE__ARG_TRAITS_)
#define _BUG_3647_REGRESSION_MIDDLE__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::Bug_3647_Regression::Middle>
    : public
        Object_Arg_Traits_T<
            ::Bug_3647_Regression::Middle_ptr,
            ::Bug_3647_Regression::Middle_var,
            ::Bug_3647_Regression::Middle_out,
            TAO::Objref_Traits<Bug_3647_Regression::Middle>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_BUG_3647_REGRESSION_BACKEND__TRAITS_)
#define _BUG_3647_REGRESSION_BACKEND__TRAITS_

  template<>
  struct  Objref_Traits< ::Bug_3647_Regression::Backend>
  {
    static ::Bug_3647_Regression::Backend_ptr duplicate (
        ::Bug_3647_Regression::Backend_ptr p);
    static void release (
        ::Bug_3647_Regression::Backend_ptr p);
    static ::Bug_3647_Regression::Backend_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Bug_3647_Regression::Backend_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_BUG_3647_REGRESSION_MIDDLE__TRAITS_)
#define _BUG_3647_REGRESSION_MIDDLE__TRAITS_

  template<>
  struct  Objref_Traits< ::Bug_3647_Regression::Middle>
  {
    static ::Bug_3647_Regression::Middle_ptr duplicate (
        ::Bug_3647_Regression::Middle_ptr p);
    static void release (
        ::Bug_3647_Regression::Middle_ptr p);
    static ::Bug_3647_Regression::Middle_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Bug_3647_Regression::Middle_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Bug_3647_Regression
{
   void operator<<= ( ::CORBA::Any &, const ::Bug_3647_Regression::Payload &); // copying version
   void operator<<= ( ::CORBA::Any &, ::Bug_3647_Regression::Payload*); // noncopying version
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Bug_3647_Regression::Payload *&); // deprecated
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Bug_3647_Regression::Payload *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const Bug_3647_Regression::Payload &); // copying version
 void operator<<= ( ::CORBA::Any &, Bug_3647_Regression::Payload*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Bug_3647_Regression::Payload *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Bug_3647_Regression::Payload *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:41



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Bug_3647_Regression
{
   void operator<<= ( ::CORBA::Any &, Backend_ptr); // copying
   void operator<<= ( ::CORBA::Any &, Backend_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Backend_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, Bug_3647_Regression::Backend_ptr); // copying
 void operator<<= (::CORBA::Any &, Bug_3647_Regression::Backend_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Bug_3647_Regression::Backend_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:41



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Bug_3647_Regression
{
   void operator<<= ( ::CORBA::Any &, Middle_ptr); // copying
   void operator<<= ( ::CORBA::Any &, Middle_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Middle_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, Bug_3647_Regression::Middle_ptr); // copying
 void operator<<= (::CORBA::Any &, Bug_3647_Regression::Middle_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Bug_3647_Regression::Middle_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:65

#if !defined _TAO_CDR_OP_Bug_3647_Regression_Payload_H_
#define _TAO_CDR_OP_Bug_3647_Regression_Payload_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Bug_3647_Regression::Payload &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Bug_3647_Regression::Payload &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Bug_3647_Regression_Payload_H_ */

// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:41

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Bug_3647_Regression::Backend_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Bug_3647_Regression::Backend_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:41

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Bug_3647_Regression::Middle_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Bug_3647_Regression::Middle_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1700
#if defined (__ACE_INLINE__)
#include "TestC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

