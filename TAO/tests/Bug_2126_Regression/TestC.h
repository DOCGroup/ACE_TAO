// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:149

#ifndef _TAO_IDL_TESTC_DN1L1D_H_
#define _TAO_IDL_TESTC_DN1L1D_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/VarOut_T.h"
#include "tao/Array_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Fixed_Array_Argument_T.h"
#include "tao/Var_Array_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 4 || TAO_MICRO_VERSION != 1
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_type.cpp:258

class FirstUnion;

typedef
  ::TAO_Fixed_Var_T<
      FirstUnion
    >
  FirstUnion_var;

typedef
  FirstUnion &
  FirstUnion_out;

class  FirstUnion
{
public:
  FirstUnion (void);
  FirstUnion (const FirstUnion &);
  ~FirstUnion (void);

  FirstUnion &operator= (const FirstUnion &);

  // TAO_IDL - Generated from
  // be/be_visitor_union/discriminant_ch.cpp:100

  void _d ( ::CORBA::Boolean);
  ::CORBA::Boolean _d (void) const;

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef FirstUnion_var _var_type;
  typedef FirstUnion_out _out_type;

  // TAO_IDL - Generated from
  // be/be_visitor_union_branch/public_ch.cpp:449

  void first_union_foo ( ::CORBA::Long);
  ::CORBA::Long first_union_foo (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_union_branch/public_ch.cpp:449

  void first_union_bar ( ::CORBA::Long);
  ::CORBA::Long first_union_bar (void) const;
private:
  ::CORBA::Boolean disc_;

  union
  {
    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/private_ch.cpp:377
    ::CORBA::Long first_union_foo_;
    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/private_ch.cpp:377
    ::CORBA::Long first_union_bar_;
  } u_;

  /// TAO extension - frees any allocated storage.
  void _reset (void);
};

// TAO_IDL - Generated from
// be/be_visitor_array/array_ch.cpp:52

typedef FirstUnion FirstUnionArray[2];
typedef FirstUnion FirstUnionArray_slice;
struct FirstUnionArray_tag {};


typedef
  TAO_FixedArray_Var_T<
      FirstUnionArray,
      FirstUnionArray_slice,
      FirstUnionArray_tag
    >
  FirstUnionArray_var;

typedef
  FirstUnionArray
  FirstUnionArray_out;

typedef
  TAO_Array_Forany_T<
      FirstUnionArray,
      FirstUnionArray_slice,
      FirstUnionArray_tag
    >
  FirstUnionArray_forany;

TAO_EXPORT_MACRO FirstUnionArray_slice *
FirstUnionArray_alloc (void);

TAO_EXPORT_MACRO void
FirstUnionArray_free (
    FirstUnionArray_slice *_tao_slice);

TAO_EXPORT_MACRO FirstUnionArray_slice *
FirstUnionArray_dup (
    const FirstUnionArray_slice *_tao_slice);

TAO_EXPORT_MACRO void
FirstUnionArray_copy (
    FirstUnionArray_slice *_tao_to,
    const FirstUnionArray_slice *_tao_from);

// TAO_IDL - Generated from
// be/be_type.cpp:258

struct MyStruct;

typedef
  ::TAO_Fixed_Var_T<
      MyStruct
    >
  MyStruct_var;

typedef
  MyStruct &
  MyStruct_out;

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_ch.cpp:48

struct  MyStruct
{

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef MyStruct_var _var_type;
  typedef MyStruct_out _out_type;
  
  FirstUnionArray my_struct_foo;
};

// TAO_IDL - Generated from
// be/be_type.cpp:258

class SecondUnion;

typedef
  ::TAO_Fixed_Var_T<
      SecondUnion
    >
  SecondUnion_var;

typedef
  SecondUnion &
  SecondUnion_out;

class  SecondUnion
{
public:
  SecondUnion (void);
  SecondUnion (const SecondUnion &);
  ~SecondUnion (void);

  SecondUnion &operator= (const SecondUnion &);

  // TAO_IDL - Generated from
  // be/be_visitor_union/discriminant_ch.cpp:100

  void _d ( ::CORBA::Boolean);
  ::CORBA::Boolean _d (void) const;

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef SecondUnion_var _var_type;
  typedef SecondUnion_out _out_type;

  // TAO_IDL - Generated from
  // be/be_visitor_union_branch/public_ch.cpp:656

  void second_union_struct_member (const MyStruct &);
  const MyStruct &second_union_struct_member (void) const;
  MyStruct &second_union_struct_member (void);

  // TAO_IDL - Generated from
  // be/be_visitor_union_branch/public_ch.cpp:449

  void wibble ( ::CORBA::Long);
  ::CORBA::Long wibble (void) const;
private:
  ::CORBA::Boolean disc_;

  union
  {
    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/private_ch.cpp:519
    MyStruct *second_union_struct_member_;
    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/private_ch.cpp:377
    ::CORBA::Long wibble_;
  } u_;

  /// TAO extension - frees any allocated storage.
  void _reset (void);
};

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:1056

  template<>
  class Arg_Traits< ::FirstUnion>
    : public
        Fixed_Size_Arg_Traits_T<
            ::FirstUnion,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  template<>
  class Arg_Traits< ::FirstUnionArray_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::FirstUnionArray_var,
            ::FirstUnionArray_forany,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::MyStruct>
    : public
        Fixed_Size_Arg_Traits_T<
            ::MyStruct,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:1056

  template<>
  class Arg_Traits< ::SecondUnion>
    : public
        Fixed_Size_Arg_Traits_T<
            ::SecondUnion,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
  template<>
  struct  Array_Traits<
      FirstUnionArray_forany
    >
  {
    static void free (
        FirstUnionArray_slice * _tao_slice);
    static FirstUnionArray_slice * dup (
        const FirstUnionArray_slice * _tao_slice);
    static void copy (
        FirstUnionArray_slice * _tao_to,
        const FirstUnionArray_slice * _tao_from);
    static FirstUnionArray_slice * alloc (void);
    static void zero (
        FirstUnionArray_slice * _tao_slice);
  };
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_union/cdr_op_ch.cpp:38


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const FirstUnion &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, FirstUnion &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:99


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const ::FirstUnionArray_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, ::FirstUnionArray_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const MyStruct &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, MyStruct &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_union/cdr_op_ch.cpp:38


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const SecondUnion &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, SecondUnion &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1700
#if defined (__ACE_INLINE__)
#include "TestC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

