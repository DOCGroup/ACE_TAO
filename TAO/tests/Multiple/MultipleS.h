// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:458

#ifndef _TAO_IDL_MULTIPLES_OPZ63N_H_
#define _TAO_IDL_MULTIPLES_OPZ63N_H_

#include /**/ "ace/pre.h"

#include "MultipleC.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_MULTIPLE_TOP__SARG_TRAITS_)
#define _MULTIPLE_TOP__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Multiple::Top>
    : public
        Object_SArg_Traits_T<
            ::Multiple::Top_ptr,
            ::Multiple::Top_var,
            ::Multiple::Top_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_MULTIPLE_LEFT__SARG_TRAITS_)
#define _MULTIPLE_LEFT__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Multiple::Left>
    : public
        Object_SArg_Traits_T<
            ::Multiple::Left_ptr,
            ::Multiple::Left_var,
            ::Multiple::Left_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_MULTIPLE_RIGHT__SARG_TRAITS_)
#define _MULTIPLE_RIGHT__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Multiple::Right>
    : public
        Object_SArg_Traits_T<
            ::Multiple::Right_ptr,
            ::Multiple::Right_var,
            ::Multiple::Right_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_MULTIPLE_BOTTOM__SARG_TRAITS_)
#define _MULTIPLE_BOTTOM__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Multiple::Bottom>
    : public
        Object_SArg_Traits_T<
            ::Multiple::Bottom_ptr,
            ::Multiple::Bottom_var,
            ::Multiple::Bottom_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:35

namespace POA_Multiple
{
  

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class Top;
  typedef Top *Top_ptr;

  class _TAO_Top_Direct_Proxy_Impl;

  class  Top
    : public virtual PortableServer::ServantBase
  {
  protected:
    Top (void);
  
  public:
    /// Useful for template programming.
    typedef ::Multiple::Top _stub_type;
    typedef ::Multiple::Top_ptr _stub_ptr_type;
    typedef ::Multiple::Top_var _stub_var_type;

    Top (const Top& rhs);
    virtual ~Top (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::Multiple::Top *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual char * top_quote (
      void) = 0;

    static void top_quote_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void shutdown (
      void) = 0;

    static void shutdown_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/direct_proxy_impl_sh.cpp:25

  ///////////////////////////////////////////////////////////////////////
  //                    Direct  Impl. Declaration
  //

  class  _TAO_Top_Direct_Proxy_Impl
  {
  public:
    virtual ~_TAO_Top_Direct_Proxy_Impl (void);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/proxy_impl_xh.cpp:26

    static void
    top_quote (
      TAO_Abstract_ServantBase *servant, TAO::Argument **args);
    

    // TAO_IDL - Generated from
    // be/be_visitor_operation/proxy_impl_xh.cpp:26

    static void
    shutdown (
      TAO_Abstract_ServantBase *servant, TAO::Argument **args);
    
  };

  //
  //                Direct  Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class Left;
  typedef Left *Left_ptr;

  class _TAO_Left_Direct_Proxy_Impl;

  class  Left
    : public virtual POA_Multiple::Top
  {
  protected:
    Left (void);
  
  public:
    /// Useful for template programming.
    typedef ::Multiple::Left _stub_type;
    typedef ::Multiple::Left_ptr _stub_ptr_type;
    typedef ::Multiple::Left_var _stub_var_type;

    Left (const Left& rhs);
    virtual ~Left (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::Multiple::Left *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual char * left_quote (
      void) = 0;

    static void left_quote_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/direct_proxy_impl_sh.cpp:25

  ///////////////////////////////////////////////////////////////////////
  //                    Direct  Impl. Declaration
  //

  class  _TAO_Left_Direct_Proxy_Impl
    : public virtual ::POA_Multiple::_TAO_Top_Direct_Proxy_Impl
  {
  public:
    virtual ~_TAO_Left_Direct_Proxy_Impl (void);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/proxy_impl_xh.cpp:26

    static void
    left_quote (
      TAO_Abstract_ServantBase *servant, TAO::Argument **args);
    
  };

  //
  //                Direct  Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class Right;
  typedef Right *Right_ptr;

  class _TAO_Right_Direct_Proxy_Impl;

  class  Right
    : public virtual POA_Multiple::Top
  {
  protected:
    Right (void);
  
  public:
    /// Useful for template programming.
    typedef ::Multiple::Right _stub_type;
    typedef ::Multiple::Right_ptr _stub_ptr_type;
    typedef ::Multiple::Right_var _stub_var_type;

    Right (const Right& rhs);
    virtual ~Right (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::Multiple::Right *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual char * right_quote (
      void) = 0;

    static void right_quote_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/direct_proxy_impl_sh.cpp:25

  ///////////////////////////////////////////////////////////////////////
  //                    Direct  Impl. Declaration
  //

  class  _TAO_Right_Direct_Proxy_Impl
    : public virtual ::POA_Multiple::_TAO_Top_Direct_Proxy_Impl
  {
  public:
    virtual ~_TAO_Right_Direct_Proxy_Impl (void);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/proxy_impl_xh.cpp:26

    static void
    right_quote (
      TAO_Abstract_ServantBase *servant, TAO::Argument **args);
    
  };

  //
  //                Direct  Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class Bottom;
  typedef Bottom *Bottom_ptr;

  class _TAO_Bottom_Direct_Proxy_Impl;

  class  Bottom
    : public virtual POA_Multiple::Left,
      public virtual POA_Multiple::Right
  {
  protected:
    Bottom (void);
  
  public:
    /// Useful for template programming.
    typedef ::Multiple::Bottom _stub_type;
    typedef ::Multiple::Bottom_ptr _stub_ptr_type;
    typedef ::Multiple::Bottom_var _stub_var_type;

    Bottom (const Bottom& rhs);
    virtual ~Bottom (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::Multiple::Bottom *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual char * bottom_quote (
      void) = 0;

    static void bottom_quote_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/direct_proxy_impl_sh.cpp:25

  ///////////////////////////////////////////////////////////////////////
  //                    Direct  Impl. Declaration
  //

  class  _TAO_Bottom_Direct_Proxy_Impl
    : public virtual ::POA_Multiple::_TAO_Left_Direct_Proxy_Impl,
      public virtual ::POA_Multiple::_TAO_Right_Direct_Proxy_Impl
  {
  public:
    virtual ~_TAO_Bottom_Direct_Proxy_Impl (void);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/proxy_impl_xh.cpp:26

    static void
    bottom_quote (
      TAO_Abstract_ServantBase *servant, TAO::Argument **args);
    
  };

  //
  //                Direct  Proxy Impl. Declaration
  ///////////////////////////////////////////////////////////////////////

  

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:66

} // module Multiple

#include /**/ "ace/post.h"

#endif /* ifndef */

