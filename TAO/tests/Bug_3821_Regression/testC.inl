// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/


// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union test::UnionAllCovered_EnumerationDiscriminant
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:55

ACE_INLINE
void
test::UnionAllCovered_EnumerationDiscriminant::_default ()
{
  this->_reset ();
  this->disc_ = static_cast <test::Enumeration> (-1);
}

// Accessor to set the discriminant.
ACE_INLINE
void
test::UnionAllCovered_EnumerationDiscriminant::_d (test::Enumeration discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
test::Enumeration
test::UnionAllCovered_EnumerationDiscriminant::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionAllCovered_EnumerationDiscriminant::e_enum1 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum1;
  // Set the value.
  this->u_.e_enum1_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionAllCovered_EnumerationDiscriminant::e_enum1 (void) const
{
  return this->u_.e_enum1_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionAllCovered_EnumerationDiscriminant::e_enum2 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum2;
  // Set the value.
  this->u_.e_enum2_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionAllCovered_EnumerationDiscriminant::e_enum2 (void) const
{
  return this->u_.e_enum2_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionAllCovered_EnumerationDiscriminant::e_enum3 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum3;
  // Set the value.
  this->u_.e_enum3_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionAllCovered_EnumerationDiscriminant::e_enum3 (void) const
{
  return this->u_.e_enum3_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union test::UnionAllCoveredWithDefault_EnumerationDiscriminant
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:55

// Accessor to set the discriminant.
ACE_INLINE
void
test::UnionAllCoveredWithDefault_EnumerationDiscriminant::_d (test::Enumeration discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
test::Enumeration
test::UnionAllCoveredWithDefault_EnumerationDiscriminant::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionAllCoveredWithDefault_EnumerationDiscriminant::e_enum1 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum1;
  // Set the value.
  this->u_.e_enum1_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionAllCoveredWithDefault_EnumerationDiscriminant::e_enum1 (void) const
{
  return this->u_.e_enum1_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionAllCoveredWithDefault_EnumerationDiscriminant::e_enum2 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum2;
  // Set the value.
  this->u_.e_enum2_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionAllCoveredWithDefault_EnumerationDiscriminant::e_enum2 (void) const
{
  return this->u_.e_enum2_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionAllCoveredWithDefault_EnumerationDiscriminant::e_def (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum3;
  // Set the value.
  this->u_.e_def_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionAllCoveredWithDefault_EnumerationDiscriminant::e_def (void) const
{
  return this->u_.e_def_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union test::UnionWithDefault_EnumerationDiscriminant
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:55

// Accessor to set the discriminant.
ACE_INLINE
void
test::UnionWithDefault_EnumerationDiscriminant::_d (test::Enumeration discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
test::Enumeration
test::UnionWithDefault_EnumerationDiscriminant::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithDefault_EnumerationDiscriminant::e_enum1 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum1;
  // Set the value.
  this->u_.e_enum1_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithDefault_EnumerationDiscriminant::e_enum1 (void) const
{
  return this->u_.e_enum1_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithDefault_EnumerationDiscriminant::e_enum2 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum2;
  // Set the value.
  this->u_.e_enum2_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithDefault_EnumerationDiscriminant::e_enum2 (void) const
{
  return this->u_.e_enum2_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithDefault_EnumerationDiscriminant::e_def (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum3;
  // Set the value.
  this->u_.e_def_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithDefault_EnumerationDiscriminant::e_def (void) const
{
  return this->u_.e_def_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union test::UnionWithImplicitDefault_EnumerationDiscriminant
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:55

ACE_INLINE
void
test::UnionWithImplicitDefault_EnumerationDiscriminant::_default ()
{
  this->_reset ();
  this->disc_ = test::Enum3;
}

// Accessor to set the discriminant.
ACE_INLINE
void
test::UnionWithImplicitDefault_EnumerationDiscriminant::_d (test::Enumeration discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
test::Enumeration
test::UnionWithImplicitDefault_EnumerationDiscriminant::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithImplicitDefault_EnumerationDiscriminant::e_enum1 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum1;
  // Set the value.
  this->u_.e_enum1_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithImplicitDefault_EnumerationDiscriminant::e_enum1 (void) const
{
  return this->u_.e_enum1_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithImplicitDefault_EnumerationDiscriminant::e_enum2 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum2;
  // Set the value.
  this->u_.e_enum2_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithImplicitDefault_EnumerationDiscriminant::e_enum2 (void) const
{
  return this->u_.e_enum2_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union test::UnionAllCovered_TypedefedEnumerationDiscriminant
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:55

ACE_INLINE
void
test::UnionAllCovered_TypedefedEnumerationDiscriminant::_default ()
{
  this->_reset ();
  this->disc_ = static_cast <test::Enumeration> (-1);
}

// Accessor to set the discriminant.
ACE_INLINE
void
test::UnionAllCovered_TypedefedEnumerationDiscriminant::_d (test::Enumeration discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
test::Enumeration
test::UnionAllCovered_TypedefedEnumerationDiscriminant::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionAllCovered_TypedefedEnumerationDiscriminant::e_enum1 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum1;
  // Set the value.
  this->u_.e_enum1_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionAllCovered_TypedefedEnumerationDiscriminant::e_enum1 (void) const
{
  return this->u_.e_enum1_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionAllCovered_TypedefedEnumerationDiscriminant::e_enum2 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum2;
  // Set the value.
  this->u_.e_enum2_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionAllCovered_TypedefedEnumerationDiscriminant::e_enum2 (void) const
{
  return this->u_.e_enum2_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionAllCovered_TypedefedEnumerationDiscriminant::e_enum3 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum3;
  // Set the value.
  this->u_.e_enum3_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionAllCovered_TypedefedEnumerationDiscriminant::e_enum3 (void) const
{
  return this->u_.e_enum3_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union test::UnionAllCoveredWithDefault_TypedefedEnumerationDiscriminant
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:55

// Accessor to set the discriminant.
ACE_INLINE
void
test::UnionAllCoveredWithDefault_TypedefedEnumerationDiscriminant::_d (test::Enumeration discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
test::Enumeration
test::UnionAllCoveredWithDefault_TypedefedEnumerationDiscriminant::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionAllCoveredWithDefault_TypedefedEnumerationDiscriminant::e_enum1 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum1;
  // Set the value.
  this->u_.e_enum1_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionAllCoveredWithDefault_TypedefedEnumerationDiscriminant::e_enum1 (void) const
{
  return this->u_.e_enum1_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionAllCoveredWithDefault_TypedefedEnumerationDiscriminant::e_enum2 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum2;
  // Set the value.
  this->u_.e_enum2_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionAllCoveredWithDefault_TypedefedEnumerationDiscriminant::e_enum2 (void) const
{
  return this->u_.e_enum2_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionAllCoveredWithDefault_TypedefedEnumerationDiscriminant::e_def (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum3;
  // Set the value.
  this->u_.e_def_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionAllCoveredWithDefault_TypedefedEnumerationDiscriminant::e_def (void) const
{
  return this->u_.e_def_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union test::UnionWithDefault_TypedefedEnumerationDiscriminant
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:55

// Accessor to set the discriminant.
ACE_INLINE
void
test::UnionWithDefault_TypedefedEnumerationDiscriminant::_d (test::Enumeration discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
test::Enumeration
test::UnionWithDefault_TypedefedEnumerationDiscriminant::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithDefault_TypedefedEnumerationDiscriminant::e_enum1 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum1;
  // Set the value.
  this->u_.e_enum1_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithDefault_TypedefedEnumerationDiscriminant::e_enum1 (void) const
{
  return this->u_.e_enum1_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithDefault_TypedefedEnumerationDiscriminant::e_enum2 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum2;
  // Set the value.
  this->u_.e_enum2_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithDefault_TypedefedEnumerationDiscriminant::e_enum2 (void) const
{
  return this->u_.e_enum2_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithDefault_TypedefedEnumerationDiscriminant::e_def (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum3;
  // Set the value.
  this->u_.e_def_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithDefault_TypedefedEnumerationDiscriminant::e_def (void) const
{
  return this->u_.e_def_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union test::UnionWithImplicitDefault_TypedefedEnumerationDiscriminant
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:55

ACE_INLINE
void
test::UnionWithImplicitDefault_TypedefedEnumerationDiscriminant::_default ()
{
  this->_reset ();
  this->disc_ = test::Enum3;
}

// Accessor to set the discriminant.
ACE_INLINE
void
test::UnionWithImplicitDefault_TypedefedEnumerationDiscriminant::_d (test::Enumeration discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
test::Enumeration
test::UnionWithImplicitDefault_TypedefedEnumerationDiscriminant::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithImplicitDefault_TypedefedEnumerationDiscriminant::e_enum1 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum1;
  // Set the value.
  this->u_.e_enum1_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithImplicitDefault_TypedefedEnumerationDiscriminant::e_enum1 (void) const
{
  return this->u_.e_enum1_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithImplicitDefault_TypedefedEnumerationDiscriminant::e_enum2 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = test::Enum2;
  // Set the value.
  this->u_.e_enum2_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithImplicitDefault_TypedefedEnumerationDiscriminant::e_enum2 (void) const
{
  return this->u_.e_enum2_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union test::UnionAllCovered_BooleanDiscriminant
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:145



// Accessor to set the discriminant.
ACE_INLINE
void
test::UnionAllCovered_BooleanDiscriminant::_d ( ::CORBA::Boolean discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
::CORBA::Boolean
test::UnionAllCovered_BooleanDiscriminant::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionAllCovered_BooleanDiscriminant::e_true (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = true;
  // Set the value.
  this->u_.e_true_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionAllCovered_BooleanDiscriminant::e_true (void) const
{
  return this->u_.e_true_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionAllCovered_BooleanDiscriminant::e_false (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = false;
  // Set the value.
  this->u_.e_false_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionAllCovered_BooleanDiscriminant::e_false (void) const
{
  return this->u_.e_false_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union test::UnionWithDefault_BooleanDiscriminant
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:145



// Accessor to set the discriminant.
ACE_INLINE
void
test::UnionWithDefault_BooleanDiscriminant::_d ( ::CORBA::Boolean discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
::CORBA::Boolean
test::UnionWithDefault_BooleanDiscriminant::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithDefault_BooleanDiscriminant::e_true (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = true;
  // Set the value.
  this->u_.e_true_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithDefault_BooleanDiscriminant::e_true (void) const
{
  return this->u_.e_true_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithDefault_BooleanDiscriminant::e_def (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = false;
  // Set the value.
  this->u_.e_def_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithDefault_BooleanDiscriminant::e_def (void) const
{
  return this->u_.e_def_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union test::UnionWithImplicitDefault_BooleanDiscriminant
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:145

ACE_INLINE
void
test::UnionWithImplicitDefault_BooleanDiscriminant::_default ()
{
  this->_reset ();
  this->disc_ = false;
}

// Accessor to set the discriminant.
ACE_INLINE
void
test::UnionWithImplicitDefault_BooleanDiscriminant::_d ( ::CORBA::Boolean discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
::CORBA::Boolean
test::UnionWithImplicitDefault_BooleanDiscriminant::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithImplicitDefault_BooleanDiscriminant::e_true (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = true;
  // Set the value.
  this->u_.e_true_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithImplicitDefault_BooleanDiscriminant::e_true (void) const
{
  return this->u_.e_true_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union test::UnionAllCovered_CharDiscriminant
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:145



// Accessor to set the discriminant.
ACE_INLINE
void
test::UnionAllCovered_CharDiscriminant::_d ( ::CORBA::Char discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
::CORBA::Char
test::UnionAllCovered_CharDiscriminant::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionAllCovered_CharDiscriminant::e_chars (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = '\x0';
  // Set the value.
  this->u_.e_chars_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionAllCovered_CharDiscriminant::e_chars (void) const
{
  return this->u_.e_chars_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union test::UnionWithDefault_CharDiscriminant
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:145



// Accessor to set the discriminant.
ACE_INLINE
void
test::UnionWithDefault_CharDiscriminant::_d ( ::CORBA::Char discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
::CORBA::Char
test::UnionWithDefault_CharDiscriminant::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithDefault_CharDiscriminant::e_chars (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = '\x0';
  // Set the value.
  this->u_.e_chars_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithDefault_CharDiscriminant::e_chars (void) const
{
  return this->u_.e_chars_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithDefault_CharDiscriminant::e_def (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = '\10';
  // Set the value.
  this->u_.e_def_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithDefault_CharDiscriminant::e_def (void) const
{
  return this->u_.e_def_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union test::UnionWithImplicitDefault_CharDiscriminant
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:145

ACE_INLINE
void
test::UnionWithImplicitDefault_CharDiscriminant::_default ()
{
  this->_reset ();
  this->disc_ = '\10';
}

// Accessor to set the discriminant.
ACE_INLINE
void
test::UnionWithImplicitDefault_CharDiscriminant::_d ( ::CORBA::Char discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
::CORBA::Char
test::UnionWithImplicitDefault_CharDiscriminant::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithImplicitDefault_CharDiscriminant::e_chars (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = '\x0';
  // Set the value.
  this->u_.e_chars_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithImplicitDefault_CharDiscriminant::e_chars (void) const
{
  return this->u_.e_chars_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union test::UnionWithDefault_LongDiscriminant
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:145



// Accessor to set the discriminant.
ACE_INLINE
void
test::UnionWithDefault_LongDiscriminant::_d ( ::CORBA::Long discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
::CORBA::Long
test::UnionWithDefault_LongDiscriminant::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithDefault_LongDiscriminant::e_case1 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 1;
  // Set the value.
  this->u_.e_case1_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithDefault_LongDiscriminant::e_case1 (void) const
{
  return this->u_.e_case1_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithDefault_LongDiscriminant::e_case2 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 2;
  // Set the value.
  this->u_.e_case2_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithDefault_LongDiscriminant::e_case2 (void) const
{
  return this->u_.e_case2_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithDefault_LongDiscriminant::e_case3 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 3;
  // Set the value.
  this->u_.e_case3_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithDefault_LongDiscriminant::e_case3 (void) const
{
  return this->u_.e_case3_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithDefault_LongDiscriminant::e_def (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = -2147483647;
  // Set the value.
  this->u_.e_def_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithDefault_LongDiscriminant::e_def (void) const
{
  return this->u_.e_def_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union test::UnionWithImplicitDefault_LongDiscriminant
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:145

ACE_INLINE
void
test::UnionWithImplicitDefault_LongDiscriminant::_default ()
{
  this->_reset ();
  this->disc_ = -2147483647;
}

// Accessor to set the discriminant.
ACE_INLINE
void
test::UnionWithImplicitDefault_LongDiscriminant::_d ( ::CORBA::Long discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
::CORBA::Long
test::UnionWithImplicitDefault_LongDiscriminant::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithImplicitDefault_LongDiscriminant::e_case1 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 1;
  // Set the value.
  this->u_.e_case1_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithImplicitDefault_LongDiscriminant::e_case1 (void) const
{
  return this->u_.e_case1_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithImplicitDefault_LongDiscriminant::e_case2 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 2;
  // Set the value.
  this->u_.e_case2_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithImplicitDefault_LongDiscriminant::e_case2 (void) const
{
  return this->u_.e_case2_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
test::UnionWithImplicitDefault_LongDiscriminant::e_case3 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 3;
  // Set the value.
  this->u_.e_case3_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
test::UnionWithImplicitDefault_LongDiscriminant::e_case3 (void) const
{
  return this->u_.e_case3_;
}

