// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:149

#ifndef _TAO_IDL_IF_EXE_M_R_ENUMSC_TZMNAU_H_
#define _TAO_IDL_IF_EXE_M_R_ENUMSC_TZMNAU_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 4 || TAO_MICRO_VERSION != 1
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:35

namespace IF_EXE_M_R
{

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum FOOAMode_E
  {
    FOOAMODE_E_THROUG_WATER,
    FOOAMODE_E_OVER_GROUND,
    FOOAMODE_E_X_NOT_SET
  };

  typedef FOOAMode_E &FOOAMode_E_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_FOOAMode_E;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum FOOBMode_E
  {
    FOOBMODE_E_ABSOLUTE,
    FOOBMODE_E_HEIGHT_OVER_GROUND,
    FOOBMODE_E_X_NOT_SET
  };

  typedef FOOBMode_E &FOOBMode_E_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_FOOBMode_E;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum FOOCMode_E
  {
    FOOCMODE_E_CORPEN,
    FOOCMODE_E_TURN
  };

  typedef FOOCMode_E &FOOCMode_E_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_FOOCMode_E;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum ENUM_Selection
  {
    X_YES,
    X_NO
  };

  typedef ENUM_Selection &ENUM_Selection_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_ENUM_Selection;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum ENUM_FOOD
  {
    FOOH_FOOG,
    FOOH_FOOP,
    FOOH_Q_FOOO,
    FOOH_GPS_UPDATE,
    FOOH_DESCENT,
    FOOH_SURFACE,
    FOOH_FOON,
    BASE_FOOG,
    BASE_ARC,
    BASE_CROSS,
    IMCMS_FOOG,
    BASE_CIRCLE,
    FOOH_SV_PROFILE,
    FOOQ_FOOG,
    FOOQ_FOOJ,
    FOOQ_FULL_FOOR_1,
    FOOQ_FINAL_FOOR_1,
    FOOQ_FULL_FOOR_2,
    FOOQ_FINAL_FOOR_2,
    FOOQ_RETRANSIT,
    FOOQ_PASS_SAFETY_AREA,
    FOOQ_DIRECT_TARGET_FOOR
  };

  typedef ENUM_FOOD &ENUM_FOOD_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_ENUM_FOOD;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum ENUM_FOOE
  {
    ABORT_FOOI,
    ABORT_FOOH
  };

  typedef ENUM_FOOE &ENUM_FOOE_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_ENUM_FOOE;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum ENUM_FOOF
  {
    MAXIMUM,
    ECOX_NOMY
  };

  typedef ENUM_FOOF &ENUM_FOOF_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_ENUM_FOOF;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum ENUM_ControlMode
  {
    LINEAR,
    IMMEDIATELY
  };

  typedef ENUM_ControlMode &ENUM_ControlMode_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_ENUM_ControlMode;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum ENUM_FOOPDirection
  {
    LEFT_TO_RIGHT,
    RIGHT_TO_LEFT
  };

  typedef ENUM_FOOPDirection &ENUM_FOOPDirection_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_ENUM_FOOPDirection;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum ENUM_QFOOODirection
  {
    MIDDLE_TO_LEFT,
    MIDDLE_TO_RIGHT
  };

  typedef ENUM_QFOOODirection &ENUM_QFOOODirection_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_ENUM_QFOOODirection;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum ENUM_FOONDirection
  {
    CLOCKWISE,
    COUNTERCLOCKWISE
  };

  typedef ENUM_FOONDirection &ENUM_FOONDirection_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_ENUM_FOONDirection;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum ENUM_FOOMMode
  {
    OFF,
    ON_COMPLETE_FOOI,
    ON_ONLY_ON_FOOGS
  };

  typedef ENUM_FOOMMode &ENUM_FOOMMode_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_ENUM_FOOMMode;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum ENUM_TransitionStatus
  {
    X_NO_TRANSITION,
    FOOGTRANSITION,
    ENDTRANSITION
  };

  typedef ENUM_TransitionStatus &ENUM_TransitionStatus_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_ENUM_TransitionStatus;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum ENUM_ParameterType
  {
    SET1,
    SET2,
    SET3
  };

  typedef ENUM_ParameterType &ENUM_ParameterType_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_ENUM_ParameterType;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum ENUM_FOOHType
  {
    FOOH,
    IMCMS,
    FOOQ
  };

  typedef ENUM_FOOHType &ENUM_FOOHType_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_ENUM_FOOHType;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum ENUM_FOOKType
  {
    WP_UNDEF,
    WP_1,
    WP_2,
    WP_3,
    WP_A,
    WP_0,
    WP_S,
    WP_TGT
  };

  typedef ENUM_FOOKType &ENUM_FOOKType_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_ENUM_FOOKType;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum ENUM_CL_FOOSMode
  {
    FOOROACH_CONTROL,
    FOOG_CONTROL
  };

  typedef ENUM_CL_FOOSMode &ENUM_CL_FOOSMode_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_ENUM_CL_FOOSMode;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum ENUM_FOOLSide
  {
    LP_STARBOARD,
    LP_PORT,
    LP_STERN
  };

  typedef ENUM_FOOLSide &ENUM_FOOLSide_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_ENUM_FOOLSide;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:44

  enum ENUM_FOOJType
  {
    LEFT_2_RIGHT_BOTTOM_2_TOP,
    RIGHT_2_LEFT_BOTTOM_2_TOP,
    LEFT_2_RIGHT_TOP_2_BOTTOM,
    RIGHT_2_LEFT_TOP_2_BOTTOM,
    INSIDE_2_OUTSIDE_BOTTOM_2_TOP_CW,
    INSIDE_2_OUTSIDE_BOTTOM_2_TOP_CTR_CW,
    INSIDE_2_OUTSIDE_TOP_2_BOTTOM_CW,
    INSIDE_2_OUTSIDE_TOP_2_BOTTOM_CTR_CW
  };

  typedef ENUM_FOOJType &ENUM_FOOJType_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_ENUM_FOOJType;

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:64

} // module IF_EXE_M_R

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::FOOAMode_E>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::FOOAMode_E,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::FOOBMode_E>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::FOOBMode_E,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::FOOCMode_E>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::FOOCMode_E,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::ENUM_Selection>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::ENUM_Selection,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::ENUM_FOOD>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::ENUM_FOOD,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::ENUM_FOOE>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::ENUM_FOOE,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::ENUM_FOOF>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::ENUM_FOOF,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::ENUM_ControlMode>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::ENUM_ControlMode,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::ENUM_FOOPDirection>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::ENUM_FOOPDirection,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::ENUM_QFOOODirection>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::ENUM_QFOOODirection,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::ENUM_FOONDirection>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::ENUM_FOONDirection,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::ENUM_FOOMMode>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::ENUM_FOOMMode,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::ENUM_TransitionStatus>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::ENUM_TransitionStatus,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::ENUM_ParameterType>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::ENUM_ParameterType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::ENUM_FOOHType>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::ENUM_FOOHType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::ENUM_FOOKType>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::ENUM_FOOKType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::ENUM_CL_FOOSMode>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::ENUM_CL_FOOSMode,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::ENUM_FOOLSide>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::ENUM_FOOLSide,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::IF_EXE_M_R::ENUM_FOOJType>
    : public
        Basic_Arg_Traits_T<
            ::IF_EXE_M_R::ENUM_FOOJType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::FOOAMode_E);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::FOOAMode_E &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::FOOAMode_E);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::FOOAMode_E &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::FOOBMode_E);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::FOOBMode_E &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::FOOBMode_E);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::FOOBMode_E &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::FOOCMode_E);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::FOOCMode_E &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::FOOCMode_E);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::FOOCMode_E &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::ENUM_Selection);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::ENUM_Selection &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::ENUM_Selection);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::ENUM_Selection &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOOD);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOOD &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::ENUM_FOOD);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::ENUM_FOOD &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOOE);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOOE &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::ENUM_FOOE);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::ENUM_FOOE &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOOF);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOOF &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::ENUM_FOOF);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::ENUM_FOOF &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::ENUM_ControlMode);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::ENUM_ControlMode &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::ENUM_ControlMode);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::ENUM_ControlMode &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOOPDirection);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOOPDirection &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::ENUM_FOOPDirection);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::ENUM_FOOPDirection &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::ENUM_QFOOODirection);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::ENUM_QFOOODirection &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::ENUM_QFOOODirection);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::ENUM_QFOOODirection &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOONDirection);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOONDirection &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::ENUM_FOONDirection);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::ENUM_FOONDirection &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOOMMode);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOOMMode &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::ENUM_FOOMMode);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::ENUM_FOOMMode &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::ENUM_TransitionStatus);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::ENUM_TransitionStatus &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::ENUM_TransitionStatus);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::ENUM_TransitionStatus &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::ENUM_ParameterType);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::ENUM_ParameterType &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::ENUM_ParameterType);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::ENUM_ParameterType &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOOHType);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOOHType &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::ENUM_FOOHType);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::ENUM_FOOHType &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOOKType);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOOKType &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::ENUM_FOOKType);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::ENUM_FOOKType &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::ENUM_CL_FOOSMode);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::ENUM_CL_FOOSMode &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::ENUM_CL_FOOSMode);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::ENUM_CL_FOOSMode &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOOLSide);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOOLSide &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::ENUM_FOOLSide);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::ENUM_FOOLSide &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36

#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace IF_EXE_M_R
{
  

   void operator<<= (::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOOJType);
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::IF_EXE_M_R::ENUM_FOOJType &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, IF_EXE_M_R::ENUM_FOOJType);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, IF_EXE_M_R::ENUM_FOOJType &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::FOOAMode_E _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::FOOAMode_E &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::FOOBMode_E _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::FOOBMode_E &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::FOOCMode_E _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::FOOCMode_E &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::ENUM_Selection _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::ENUM_Selection &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::ENUM_FOOD _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::ENUM_FOOD &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::ENUM_FOOE _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::ENUM_FOOE &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::ENUM_FOOF _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::ENUM_FOOF &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::ENUM_ControlMode _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::ENUM_ControlMode &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::ENUM_FOOPDirection _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::ENUM_FOOPDirection &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::ENUM_QFOOODirection _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::ENUM_QFOOODirection &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::ENUM_FOONDirection _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::ENUM_FOONDirection &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::ENUM_FOOMMode _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::ENUM_FOOMMode &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::ENUM_TransitionStatus _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::ENUM_TransitionStatus &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::ENUM_ParameterType _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::ENUM_ParameterType &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::ENUM_FOOHType _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::ENUM_FOOHType &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::ENUM_FOOKType _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::ENUM_FOOKType &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::ENUM_CL_FOOSMode _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::ENUM_CL_FOOSMode &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::ENUM_FOOLSide _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::ENUM_FOOLSide &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, IF_EXE_M_R::ENUM_FOOJType _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, IF_EXE_M_R::ENUM_FOOJType &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1700
#if defined (__ACE_INLINE__)
#include "IF_EXE_M_R_EnumsC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

