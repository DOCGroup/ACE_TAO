// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/


// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union CityBlue
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:145



// Accessor to set the discriminant.
ACE_INLINE
void
CityBlue::_d ( ::CORBA::ULongLong discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
::CORBA::ULongLong
CityBlue::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
CityBlue::ucb_long (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = ACE_UINT64_LITERAL (1);
  // Set the value.
  this->u_.ucb_long_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
CityBlue::ucb_long (void) const
{
  return this->u_.ucb_long_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
CityBlue::ucb_short (CORBA::Short val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 0;
  // Set the value.
  this->u_.ucb_short_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Short
CityBlue::ucb_short (void) const
{
  return this->u_.ucb_short_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union CityMan
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:145



// Accessor to set the discriminant.
ACE_INLINE
void
CityMan::_d ( ::CORBA::LongLong discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
::CORBA::LongLong
CityMan::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
CityMan::ucm_long (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = ACE_INT64_LITERAL (1);
  // Set the value.
  this->u_.ucm_long_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
CityMan::ucm_long (void) const
{
  return this->u_.ucm_long_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
CityMan::ucm_short (CORBA::Short val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 0;
  // Set the value.
  this->u_.ucm_short_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Short
CityMan::ucm_short (void) const
{
  return this->u_.ucm_short_;
}

