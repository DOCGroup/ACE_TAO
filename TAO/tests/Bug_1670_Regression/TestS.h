// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:458

#ifndef _TAO_IDL_TESTS_GZYRVW_H_
#define _TAO_IDL_TESTS_GZYRVW_H_

#include /**/ "ace/pre.h"

#include "TestC.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"
#include "tao/Messaging/AMH_Response_Handler.h"

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_FOO_BAR_A__SARG_TRAITS_)
#define _FOO_BAR_A__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Foo::Bar::A>
    : public
        Object_SArg_Traits_T<
            ::Foo::Bar::A_ptr,
            ::Foo::Bar::A_var,
            ::Foo::Bar::A_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_FOO_BAR_AMH_AEXCEPTIONHOLDER__SARG_TRAITS_)
#define _FOO_BAR_AMH_AEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Foo::Bar::AMH_AExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::Foo::Bar::AMH_AExceptionHolder *,
            ::Foo::Bar::AMH_AExceptionHolder_var,
            ::Foo::Bar::AMH_AExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_FOO_BAR_B__SARG_TRAITS_)
#define _FOO_BAR_B__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Foo::Bar::B>
    : public
        Object_SArg_Traits_T<
            ::Foo::Bar::B_ptr,
            ::Foo::Bar::B_var,
            ::Foo::Bar::B_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_FOO_BAR_AMH_BEXCEPTIONHOLDER__SARG_TRAITS_)
#define _FOO_BAR_AMH_BEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Foo::Bar::AMH_BExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::Foo::Bar::AMH_BExceptionHolder *,
            ::Foo::Bar::AMH_BExceptionHolder_var,
            ::Foo::Bar::AMH_BExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_BAZ_C__SARG_TRAITS_)
#define _BAZ_C__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Baz::C>
    : public
        Object_SArg_Traits_T<
            ::Baz::C_ptr,
            ::Baz::C_var,
            ::Baz::C_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_BAZ_AMH_CEXCEPTIONHOLDER__SARG_TRAITS_)
#define _BAZ_AMH_CEXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Baz::AMH_CExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::Baz::AMH_CExceptionHolder *,
            ::Baz::AMH_CExceptionHolder_var,
            ::Baz::AMH_CExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:35

namespace POA_Foo
{
  

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_sh.cpp:35

  namespace Bar
  {
    

    // TAO_IDL - Generated from
    // be/be_visitor_interface/amh_sh.cpp:46

    class AMH_A;
    typedef AMH_A *AMH_A_ptr;

    class  AMH_A
      : public virtual PortableServer::ServantBase
    {
    protected:
      AMH_A (void);
    
    public:
      AMH_A (const AMH_A& rhs);
      virtual ~AMH_A (void);


      virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

      virtual void _dispatch (
          TAO_ServerRequest &req,
          TAO::Portable_Server::Servant_Upcall *_servant_upcall);
      
      Foo::Bar::A *_this (void);

    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/amh_sh.cpp:127

    static void op1_skel (
        TAO_ServerRequest &_tao_req,
        TAO::Portable_Server::Servant_Upcall *_tao_obj,
        TAO_ServantBase *_tao_servant_upcall);
      
    virtual void op1 (
        Foo::Bar::AMH_AResponseHandler_ptr _tao_rh
      ) = 0;
    

    // TAO_IDL - Generated from
    // be/be_visitor_operation/amh_sh.cpp:127

    static void op2_skel (
        TAO_ServerRequest &_tao_req,
        TAO::Portable_Server::Servant_Upcall *_tao_obj,
        TAO_ServantBase *_tao_servant_upcall);
      
    virtual void op2 (
        Foo::Bar::AMH_AResponseHandler_ptr _tao_rh
      ) = 0;
    
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class A;
  typedef A *A_ptr;

  class  A
    : public virtual PortableServer::ServantBase
  {
  protected:
    A (void);
  
  public:
    /// Useful for template programming.
    typedef ::Foo::Bar::A _stub_type;
    typedef ::Foo::Bar::A_ptr _stub_ptr_type;
    typedef ::Foo::Bar::A_var _stub_var_type;

    A (const A& rhs);
    virtual ~A (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);
    
    ::Foo::Bar::A *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual ::CORBA::Long op1 (
      void) = 0;

    static void op1_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual ::CORBA::Long op2 (
      void) = 0;

    static void op2_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/amh_rh_sh.cpp:50

  class TAO_AMH_AResponseHandler;
  typedef TAO_AMH_AResponseHandler *TAO_AMH_AResponseHandler_ptr;

  class  TAO_AMH_AResponseHandler
    : public TAO_AMH_Response_Handler,
      public ::Foo::Bar::AMH_AResponseHandler
  {
  public:
    TAO_AMH_AResponseHandler (void);
    virtual ~TAO_AMH_AResponseHandler (void);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/amh_rh_sh.cpp:60

    virtual void op1 (
      ::CORBA::Long return_value);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/amh_rh_sh.cpp:60

    virtual void op1_excep (
      ::Foo::Bar::AMH_AExceptionHolder * holder);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/amh_rh_sh.cpp:60

    virtual void op2 (
      ::CORBA::Long return_value);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/amh_rh_sh.cpp:60

    virtual void op2_excep (
      ::Foo::Bar::AMH_AExceptionHolder * holder);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/amh_sh.cpp:46

  class AMH_B;
  typedef AMH_B *AMH_B_ptr;

  class  AMH_B
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_B (void);
  
  public:
    AMH_B (const AMH_B& rhs);
    virtual ~AMH_B (void);


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    Foo::Bar::B *_this (void);

  virtual const char* _interface_repository_id (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_operation/amh_sh.cpp:127

  static void op3_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void op3 (
      Foo::Bar::AMH_BResponseHandler_ptr _tao_rh
    ) = 0;
  
};

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_sh.cpp:73

class B;
typedef B *B_ptr;

class  B
  : public virtual PortableServer::ServantBase
{
protected:
  B (void);

public:
  /// Useful for template programming.
  typedef ::Foo::Bar::B _stub_type;
  typedef ::Foo::Bar::B_ptr _stub_ptr_type;
  typedef ::Foo::Bar::B_var _stub_var_type;

  B (const B& rhs);
  virtual ~B (void);

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::Foo::Bar::B *_this (void);
  
  virtual const char* _interface_repository_id (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual ::CORBA::Long op3 (
    void) = 0;

  static void op3_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};

// TAO_IDL - Generated from
// be/be_visitor_interface/amh_rh_sh.cpp:50

class TAO_AMH_BResponseHandler;
typedef TAO_AMH_BResponseHandler *TAO_AMH_BResponseHandler_ptr;

class  TAO_AMH_BResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::Foo::Bar::AMH_BResponseHandler
{
public:
  TAO_AMH_BResponseHandler (void);
  virtual ~TAO_AMH_BResponseHandler (void);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/amh_rh_sh.cpp:60

  virtual void op3 (
    ::CORBA::Long return_value);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/amh_rh_sh.cpp:60

  virtual void op3_excep (
    ::Foo::Bar::AMH_BExceptionHolder * holder);
};

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:66

} // module Foo::Bar

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:66

} // module Foo

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:35

namespace POA_Baz
{
  

  // TAO_IDL - Generated from
  // be/be_visitor_interface/amh_sh.cpp:46

  class AMH_C;
  typedef AMH_C *AMH_C_ptr;

  class  AMH_C
    : public virtual POA_Foo::Bar::AMH_A
      , public virtual POA_Foo::Bar::AMH_B
      
  {
  protected:
    AMH_C (void);
  
  public:
    AMH_C (const AMH_C& rhs);
    virtual ~AMH_C (void);


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    Baz::C *_this (void);

  virtual const char* _interface_repository_id (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_operation/amh_sh.cpp:127

  static void op4_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void op4 (
      Baz::AMH_CResponseHandler_ptr _tao_rh
    ) = 0;
  

  // TAO_IDL - Generated from
  // be/be_visitor_operation/amh_sh.cpp:127

  static void shutdown_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void shutdown (
      Baz::AMH_CResponseHandler_ptr _tao_rh
    ) = 0;
  
};

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_sh.cpp:73

class C;
typedef C *C_ptr;

class  C
  : public virtual POA_Foo::Bar::A,
    public virtual POA_Foo::Bar::B
{
protected:
  C (void);

public:
  /// Useful for template programming.
  typedef ::Baz::C _stub_type;
  typedef ::Baz::C_ptr _stub_ptr_type;
  typedef ::Baz::C_var _stub_var_type;

  C (const C& rhs);
  virtual ~C (void);

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::Baz::C *_this (void);
  
  virtual const char* _interface_repository_id (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual ::CORBA::Long op4 (
    void) = 0;

  static void op4_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void shutdown (
    void) = 0;

  static void shutdown_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};

// TAO_IDL - Generated from
// be/be_visitor_interface/amh_rh_sh.cpp:50

class TAO_AMH_CResponseHandler;
typedef TAO_AMH_CResponseHandler *TAO_AMH_CResponseHandler_ptr;

class  TAO_AMH_CResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::Baz::AMH_CResponseHandler
{
public:
  TAO_AMH_CResponseHandler (void);
  virtual ~TAO_AMH_CResponseHandler (void);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/amh_rh_sh.cpp:60

  virtual void op4 (
    ::CORBA::Long return_value);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/amh_rh_sh.cpp:60

  virtual void op4_excep (
    ::Baz::AMH_CExceptionHolder * holder);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/amh_rh_sh.cpp:60

  virtual void shutdown (
    void);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/amh_rh_sh.cpp:60

  virtual void shutdown_excep (
    ::Baz::AMH_CExceptionHolder * holder);
};

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:66

} // module Baz

#include /**/ "ace/post.h"

#endif /* ifndef */

