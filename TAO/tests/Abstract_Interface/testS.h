// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:458

#ifndef _TAO_IDL_TESTS_4SVCED_H_
#define _TAO_IDL_TESTS_4SVCED_H_

#include /**/ "ace/pre.h"

#include "testC.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_BASE__SARG_TRAITS_)
#define _BASE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::base>
    : public
        Object_SArg_Traits_T<
            ::base_ptr,
            ::base_var,
            ::base_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_FOO__SARG_TRAITS_)
#define _FOO__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::foo>
    : public
        Object_SArg_Traits_T<
            ::foo_ptr,
            ::foo_var,
            ::foo_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_PASSER__SARG_TRAITS_)
#define _PASSER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::passer>
    : public
        Object_SArg_Traits_T<
            ::passer_ptr,
            ::passer_var,
            ::passer_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_BASENODE__SARG_TRAITS_)
#define _BASENODE__SARG_TRAITS_

  template<>
  class SArg_Traits< ::BaseNode>
    : public
        Object_SArg_Traits_T<
            ::BaseNode *,
            ::BaseNode_var,
            ::BaseNode_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_STRINGNODE__SARG_TRAITS_)
#define _STRINGNODE__SARG_TRAITS_

  template<>
  class SArg_Traits< ::StringNode>
    : public
        Object_SArg_Traits_T<
            ::StringNode *,
            ::StringNode_var,
            ::StringNode_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_TREECONTROLLER__SARG_TRAITS_)
#define _TREECONTROLLER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::TreeController>
    : public
        Object_SArg_Traits_T<
            ::TreeController *,
            ::TreeController_var,
            ::TreeController_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/interface_sh.cpp:73

class POA_foo;
typedef POA_foo *POA_foo_ptr;

class  POA_foo
  : public virtual PortableServer::ServantBase
{
protected:
  POA_foo (void);

public:
  /// Useful for template programming.
  typedef ::foo _stub_type;
  typedef ::foo_ptr _stub_ptr_type;
  typedef ::foo_var _stub_var_type;

  POA_foo (const POA_foo& rhs);
  virtual ~POA_foo (void);

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::foo *_this (void);
  
  virtual const char* _interface_repository_id (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual char * foo_op (
    const char * inarg) = 0;

  static void foo_op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual char * base_op (
    const char * inarg) = 0;

  static void base_op_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_sh.cpp:73

class POA_passer;
typedef POA_passer *POA_passer_ptr;

class  POA_passer
  : public virtual PortableServer::ServantBase
{
protected:
  POA_passer (void);

public:
  /// Useful for template programming.
  typedef ::passer _stub_type;
  typedef ::passer_ptr _stub_ptr_type;
  typedef ::passer_var _stub_var_type;

  POA_passer (const POA_passer& rhs);
  virtual ~POA_passer (void);

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::passer *_this (void);
  
  virtual const char* _interface_repository_id (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void pass_ops (
    ::base_out outarg) = 0;

  static void pass_ops_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void pass_state (
    ::base_out outarg) = 0;

  static void pass_state_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void pass_nil (
    ::base_out outarg) = 0;

  static void pass_nil_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void shutdown (
    void) = 0;

  static void shutdown_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};

#include /**/ "ace/post.h"

#endif /* ifndef */

