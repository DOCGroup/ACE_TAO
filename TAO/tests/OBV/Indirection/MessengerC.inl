// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/


// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ci.cpp:44

ACE_INLINE
demo::value::idl::ConfigValue::ConfigValue (void)
{}

ACE_INLINE const char*
demo::value::idl::ConfigValue::_tao_obv_static_repository_id ()
{
  return "IDL:demo/value/idl/ConfigValue:1.0";
}

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ci.cpp:44

ACE_INLINE
demo::value::idl::BaseValue::BaseValue (void)
{}

ACE_INLINE const char*
demo::value::idl::BaseValue::_tao_obv_static_repository_id ()
{
  return "IDL:demo/value/idl/BaseValue:1.0";
}

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ci.cpp:44

ACE_INLINE
demo::value::idl::TValue::TValue (void)
{
  this->is_truncatable_ = true;
}

ACE_INLINE const char*
demo::value::idl::TValue::_tao_obv_static_repository_id ()
{
  return "IDL:demo/value/idl/TValue:1.0";
}

// TAO_IDL - Generated from
// be/be_visitor_valuebox/valuebox_ci.cpp:579

ACE_INLINE
demo::value::idl::boxedLong::boxedLong (void)
{}

ACE_INLINE
demo::value::idl::boxedLong::boxedLong (const demo::value::idl::boxedLong& val)
  : ::CORBA::ValueBase (val),
    ::CORBA::DefaultValueRefCountBase (val)
{
  this->_pd_value = val._pd_value;
}

ACE_INLINE
demo::value::idl::boxedLong::boxedLong (CORBA::Long val)
{
  this->_pd_value = val;
}

ACE_INLINE demo::value::idl::boxedLong &
demo::value::idl::boxedLong::operator= (CORBA::Long val)
{
  this->_pd_value = val;
  return *this;
}

ACE_INLINE CORBA::Long
demo::value::idl::boxedLong::_value (void) const
{
  return this->_pd_value;
}

ACE_INLINE void
demo::value::idl::boxedLong::_value (CORBA::Long val)
{
  this->_pd_value = val;
}

ACE_INLINE CORBA::Long
demo::value::idl::boxedLong::_boxed_in (void) const
{
  return this->_pd_value;
}

ACE_INLINE CORBA::Long&
demo::value::idl::boxedLong::_boxed_inout (void)
{
  return this->_pd_value;
}

ACE_INLINE CORBA::Long&
demo::value::idl::boxedLong::_boxed_out (void)
{
  return this->_pd_value;
}



// TAO_IDL - Generated from
// be/be_visitor_valuebox/valuebox_ci.cpp:49
ACE_INLINE const char*
demo::value::idl::boxedLong::_tao_obv_static_repository_id ()
{
  return "IDL:demo/value/idl/boxedLong:1.0";
}



// TAO_IDL - Generated from
// be/be_visitor_valuebox/valuebox_ci.cpp:282

ACE_INLINE
demo::value::idl::boxedString::boxedString (void)
{}

ACE_INLINE
demo::value::idl::boxedString::boxedString (char * val)
{
  this->_pd_value = val;
}

ACE_INLINE
demo::value::idl::boxedString::boxedString (const demo::value::idl::boxedString& val)
  : ::CORBA::ValueBase (val),
    ::CORBA::DefaultValueRefCountBase (val)
{
  this->_pd_value = val._pd_value;
}

ACE_INLINE demo::value::idl::boxedString &
demo::value::idl::boxedString::operator= (char * val)
{
  this->_pd_value = val;
  return *this;
}

ACE_INLINE
demo::value::idl::boxedString::boxedString (const char * val)
{
  this->_pd_value = val;
}

ACE_INLINE
demo::value::idl::boxedString::boxedString (const ::CORBA::String_var& var)
{
  this->_pd_value = var;
}

ACE_INLINE demo::value::idl::boxedString &
demo::value::idl::boxedString::operator= (const char * val)
{
  this->_pd_value = val;
  return *this;
}

ACE_INLINE demo::value::idl::boxedString &
demo::value::idl::boxedString::operator= (const ::CORBA::String_var& var)
{
  this->_pd_value = var;
  return *this;
}

ACE_INLINE const char *
demo::value::idl::boxedString::_value (void) const
{
  return this->_pd_value.in ();
}

ACE_INLINE void
demo::value::idl::boxedString::_value (char * val)
{
  this->_pd_value = val;
}

ACE_INLINE void
demo::value::idl::boxedString::_value (const char * val)
{
  this->_pd_value = val;
}

ACE_INLINE void
demo::value::idl::boxedString::_value (const ::CORBA::String_var& var)
{
  this->_pd_value = var;
}

ACE_INLINE const char *
demo::value::idl::boxedString::_boxed_in (void) const
{
  return this->_pd_value.in ();
}

ACE_INLINE char *&
demo::value::idl::boxedString::_boxed_inout (void)
{
  return this->_pd_value.inout ();
}

ACE_INLINE char *&
demo::value::idl::boxedString::_boxed_out (void)
{
  return this->_pd_value.out ();
}

ACE_INLINE ::CORBA::Char &
demo::value::idl::boxedString::operator[] ( ::CORBA::ULong slot)
{
  return this->_pd_value[slot];
}

ACE_INLINE ::CORBA::Char
demo::value::idl::boxedString::operator[] ( ::CORBA::ULong slot) const
{
  return this->_pd_value[slot];
}



// TAO_IDL - Generated from
// be/be_visitor_valuebox/valuebox_ci.cpp:49
ACE_INLINE const char*
demo::value::idl::boxedString::_tao_obv_static_repository_id ()
{
  return "IDL:demo/value/idl/boxedString:1.0";
}



// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ci.cpp:44

ACE_INLINE
demo::value::idl::boxedValue::boxedValue (void)
{}

ACE_INLINE const char*
demo::value::idl::boxedValue::_tao_obv_static_repository_id ()
{
  return "IDL:demo/value/idl/boxedValue:1.0";
}

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ci.cpp:44

ACE_INLINE
demo::value::idl::Node::Node (void)
{}

ACE_INLINE const char*
demo::value::idl::Node::_tao_obv_static_repository_id ()
{
  return "IDL:demo/value/idl/Node:1.0";
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ci.cpp:59

ACE_INLINE
demo::value::idl::ValueServer::ValueServer (
    TAO_Stub *objref,
    ::CORBA::Boolean _tao_collocated,
    TAO_Abstract_ServantBase *servant,
    TAO_ORB_Core *oc)
  : ::CORBA::Object (objref, _tao_collocated, servant, oc)
{
}

ACE_INLINE
demo::value::idl::ValueServer::ValueServer (
    ::IOP::IOR *ior,
    TAO_ORB_Core *oc)
  : ::CORBA::Object (ior, oc)
{
}

