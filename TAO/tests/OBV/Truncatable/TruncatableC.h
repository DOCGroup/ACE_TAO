// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:149

#ifndef _TAO_IDL_TRUNCATABLEC_BTLPO7_H_
#define _TAO_IDL_TRUNCATABLEC_BTLPO7_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/Valuetype/Valuetype_Adapter_Factory_Impl.h"
#include "tao/Valuetype/ValueFactory.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/String_Manager_T.h"
#include "tao/Valuetype/Value_VarOut_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include "tao/AnyTypeCode/Any_Arg_Traits.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 4 || TAO_MICRO_VERSION != 1
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_root/root_ch.cpp:157
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:35

namespace OBV_TruncatableTest
{

  // TAO_IDL - Generated from
  // be/be_valuetype.cpp:564

  

#if !defined (_OBV_TRUNCATABLETEST_BASEVALUE__VAR_OUT_CH_)
#define _OBV_TRUNCATABLETEST_BASEVALUE__VAR_OUT_CH_

  class BaseValue;
  typedef
    TAO_Value_Var_T<
        BaseValue
      >
    BaseValue_var;
  
  typedef
    TAO_Value_Out_T<
        BaseValue
      >
    BaseValue_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:50

  class  BaseValue
    : public virtual ::CORBA::ValueBase
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef BaseValue * _ptr_type;
    typedef BaseValue_var _var_type;
    typedef BaseValue_out _out_type;

    static void _tao_any_destructor (void *);

    static BaseValue* _downcast ( ::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        BaseValue *&new_object);
    
    virtual const char* _tao_obv_repository_id (void) const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id (void);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  
  public:

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/field_ch.cpp:459

    virtual void basic_data (const ::CORBA::ULong) = 0;
    virtual ::CORBA::ULong basic_data (void) const = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/valuetype_ch.cpp:238
  
  protected:
    BaseValue (void);
    virtual ~BaseValue (void);

    virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
    virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
    
  private:
    BaseValue (const BaseValue &);
    void operator= (const BaseValue &);
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__OBV_TruncatableTest_BaseValue (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

    virtual ::CORBA::Boolean
    _tao_unmarshal__OBV_TruncatableTest_BaseValue (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_init_ch.cpp:57

  class  BaseValue_init
    : public virtual ::CORBA::ValueFactoryBase
  {
  public:
    BaseValue_init (void);

    static BaseValue_init* _downcast ( ::CORBA::ValueFactoryBase *);

    virtual ::CORBA::ValueBase *
    create_for_unmarshal (void);

    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  
  protected:
    virtual ~BaseValue_init (void);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_BaseValue;

  // TAO_IDL - Generated from
  // be/be_valuetype.cpp:564

  

#if !defined (_OBV_TRUNCATABLETEST_TVALUE1__VAR_OUT_CH_)
#define _OBV_TRUNCATABLETEST_TVALUE1__VAR_OUT_CH_

  class TValue1;
  typedef
    TAO_Value_Var_T<
        TValue1
      >
    TValue1_var;
  
  typedef
    TAO_Value_Out_T<
        TValue1
      >
    TValue1_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:50

  class  TValue1
    : public virtual BaseValue
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef TValue1 * _ptr_type;
    typedef TValue1_var _var_type;
    typedef TValue1_out _out_type;

    static void _tao_any_destructor (void *);

    static TValue1* _downcast ( ::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        TValue1 *&new_object);
    
    virtual const char* _tao_obv_repository_id (void) const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id (void);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  
  public:

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/field_ch.cpp:459

    virtual void data1 (const ::CORBA::ULong) = 0;
    virtual ::CORBA::ULong data1 (void) const = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/valuetype_ch.cpp:238
  
  protected:
    TValue1 (void);
    virtual ~TValue1 (void);

    virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
    virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
    
  private:
    TValue1 (const TValue1 &);
    void operator= (const TValue1 &);
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__OBV_TruncatableTest_TValue1 (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

    virtual ::CORBA::Boolean
    _tao_unmarshal__OBV_TruncatableTest_TValue1 (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_init_ch.cpp:57

  class  TValue1_init
    : public virtual ::CORBA::ValueFactoryBase
  {
  public:
    TValue1_init (void);

    static TValue1_init* _downcast ( ::CORBA::ValueFactoryBase *);

    virtual ::CORBA::ValueBase *
    create_for_unmarshal (void);

    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  
  protected:
    virtual ~TValue1_init (void);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_TValue1;

  // TAO_IDL - Generated from
  // be/be_valuetype.cpp:564

  

#if !defined (_OBV_TRUNCATABLETEST_TVALUE2__VAR_OUT_CH_)
#define _OBV_TRUNCATABLETEST_TVALUE2__VAR_OUT_CH_

  class TValue2;
  typedef
    TAO_Value_Var_T<
        TValue2
      >
    TValue2_var;
  
  typedef
    TAO_Value_Out_T<
        TValue2
      >
    TValue2_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:50

  class  TValue2
    : public virtual TValue1
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef TValue2 * _ptr_type;
    typedef TValue2_var _var_type;
    typedef TValue2_out _out_type;

    static void _tao_any_destructor (void *);

    static TValue2* _downcast ( ::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        TValue2 *&new_object);
    
    virtual const char* _tao_obv_repository_id (void) const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id (void);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  
  public:

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/field_ch.cpp:459

    virtual void data2 (const ::CORBA::ULong) = 0;
    virtual ::CORBA::ULong data2 (void) const = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/valuetype_ch.cpp:238
  
  protected:
    TValue2 (void);
    virtual ~TValue2 (void);

    virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
    virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
    
  private:
    TValue2 (const TValue2 &);
    void operator= (const TValue2 &);
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__OBV_TruncatableTest_TValue2 (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

    virtual ::CORBA::Boolean
    _tao_unmarshal__OBV_TruncatableTest_TValue2 (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_init_ch.cpp:57

  class  TValue2_init
    : public virtual ::CORBA::ValueFactoryBase
  {
  public:
    TValue2_init (void);

    static TValue2_init* _downcast ( ::CORBA::ValueFactoryBase *);

    virtual ::CORBA::ValueBase *
    create_for_unmarshal (void);

    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  
  protected:
    virtual ~TValue2_init (void);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_TValue2;

  // TAO_IDL - Generated from
  // be/be_valuetype.cpp:564

  

#if !defined (_OBV_TRUNCATABLETEST_TVALUE3__VAR_OUT_CH_)
#define _OBV_TRUNCATABLETEST_TVALUE3__VAR_OUT_CH_

  class TValue3;
  typedef
    TAO_Value_Var_T<
        TValue3
      >
    TValue3_var;
  
  typedef
    TAO_Value_Out_T<
        TValue3
      >
    TValue3_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:50

  class  TValue3
    : public virtual TValue1
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef TValue3 * _ptr_type;
    typedef TValue3_var _var_type;
    typedef TValue3_out _out_type;

    static void _tao_any_destructor (void *);

    static TValue3* _downcast ( ::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        TValue3 *&new_object);
    
    virtual const char* _tao_obv_repository_id (void) const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id (void);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  
  public:

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/field_ch.cpp:459

    virtual void data3 (const ::CORBA::ULong) = 0;
    virtual ::CORBA::ULong data3 (void) const = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/valuetype_ch.cpp:238
  
  protected:
    TValue3 (void);
    virtual ~TValue3 (void);

    virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
    virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
    
  private:
    TValue3 (const TValue3 &);
    void operator= (const TValue3 &);
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__OBV_TruncatableTest_TValue3 (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

    virtual ::CORBA::Boolean
    _tao_unmarshal__OBV_TruncatableTest_TValue3 (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_init_ch.cpp:57

  class  TValue3_init
    : public virtual ::CORBA::ValueFactoryBase
  {
  public:
    TValue3_init (void);

    static TValue3_init* _downcast ( ::CORBA::ValueFactoryBase *);

    virtual ::CORBA::ValueBase *
    create_for_unmarshal (void);

    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  
  protected:
    virtual ~TValue3_init (void);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_TValue3;

  // TAO_IDL - Generated from
  // be/be_valuetype.cpp:564

  

#if !defined (_OBV_TRUNCATABLETEST_NESTEDVALUE__VAR_OUT_CH_)
#define _OBV_TRUNCATABLETEST_NESTEDVALUE__VAR_OUT_CH_

  class NestedValue;
  typedef
    TAO_Value_Var_T<
        NestedValue
      >
    NestedValue_var;
  
  typedef
    TAO_Value_Out_T<
        NestedValue
      >
    NestedValue_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:50

  class  NestedValue
    : public virtual ::CORBA::ValueBase
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef NestedValue * _ptr_type;
    typedef NestedValue_var _var_type;
    typedef NestedValue_out _out_type;

    static void _tao_any_destructor (void *);

    static NestedValue* _downcast ( ::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        NestedValue *&new_object);
    
    virtual const char* _tao_obv_repository_id (void) const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id (void);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  
  public:

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/field_ch.cpp:459

    virtual void data (const ::CORBA::Long) = 0;
    virtual ::CORBA::Long data (void) const = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/valuetype_ch.cpp:238
  
  protected:
    NestedValue (void);
    virtual ~NestedValue (void);

    virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
    virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
    
  private:
    NestedValue (const NestedValue &);
    void operator= (const NestedValue &);
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__OBV_TruncatableTest_NestedValue (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

    virtual ::CORBA::Boolean
    _tao_unmarshal__OBV_TruncatableTest_NestedValue (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_init_ch.cpp:57

  class  NestedValue_init
    : public virtual ::CORBA::ValueFactoryBase
  {
  public:
    NestedValue_init (void);

    static NestedValue_init* _downcast ( ::CORBA::ValueFactoryBase *);

    virtual ::CORBA::ValueBase *
    create_for_unmarshal (void);

    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  
  protected:
    virtual ~NestedValue_init (void);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_NestedValue;

  // TAO_IDL - Generated from
  // be/be_valuetype.cpp:564

  

#if !defined (_OBV_TRUNCATABLETEST_TVALUE4__VAR_OUT_CH_)
#define _OBV_TRUNCATABLETEST_TVALUE4__VAR_OUT_CH_

  class TValue4;
  typedef
    TAO_Value_Var_T<
        TValue4
      >
    TValue4_var;
  
  typedef
    TAO_Value_Out_T<
        TValue4
      >
    TValue4_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:50

  class  TValue4
    : public virtual BaseValue
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef TValue4 * _ptr_type;
    typedef TValue4_var _var_type;
    typedef TValue4_out _out_type;

    static void _tao_any_destructor (void *);

    static TValue4* _downcast ( ::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        TValue4 *&new_object);
    
    virtual const char* _tao_obv_repository_id (void) const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id (void);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  
  public:

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/field_ch.cpp:361

    virtual void nv4 (OBV_TruncatableTest::NestedValue *) = 0;
    virtual OBV_TruncatableTest::NestedValue *nv4 (void) const = 0;
  
  public:

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/field_ch.cpp:459

    virtual void data4 (const ::CORBA::ULong) = 0;
    virtual ::CORBA::ULong data4 (void) const = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/valuetype_ch.cpp:238
  
  protected:
    TValue4 (void);
    virtual ~TValue4 (void);

    virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
    virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
    
  private:
    TValue4 (const TValue4 &);
    void operator= (const TValue4 &);
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__OBV_TruncatableTest_TValue4 (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

    virtual ::CORBA::Boolean
    _tao_unmarshal__OBV_TruncatableTest_TValue4 (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_init_ch.cpp:57

  class  TValue4_init
    : public virtual ::CORBA::ValueFactoryBase
  {
  public:
    TValue4_init (void);

    static TValue4_init* _downcast ( ::CORBA::ValueFactoryBase *);

    virtual ::CORBA::ValueBase *
    create_for_unmarshal (void);

    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  
  protected:
    virtual ~TValue4_init (void);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_TValue4;

  // TAO_IDL - Generated from
  // be/be_valuetype.cpp:564

  

#if !defined (_OBV_TRUNCATABLETEST_TVALUE5__VAR_OUT_CH_)
#define _OBV_TRUNCATABLETEST_TVALUE5__VAR_OUT_CH_

  class TValue5;
  typedef
    TAO_Value_Var_T<
        TValue5
      >
    TValue5_var;
  
  typedef
    TAO_Value_Out_T<
        TValue5
      >
    TValue5_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:50

  class  TValue5
    : public virtual TValue4
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef TValue5 * _ptr_type;
    typedef TValue5_var _var_type;
    typedef TValue5_out _out_type;

    static void _tao_any_destructor (void *);

    static TValue5* _downcast ( ::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        TValue5 *&new_object);
    
    virtual const char* _tao_obv_repository_id (void) const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id (void);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
  
  public:

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/field_ch.cpp:608

    virtual void str1 (char *val) = 0;
    virtual void str1 (const char *val) = 0;
    virtual void str1 (const ::CORBA::String_var &val) = 0;
    virtual const char *str1 (void) const = 0;
  
  public:

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/field_ch.cpp:459

    virtual void data5 (const ::CORBA::ULong) = 0;
    virtual ::CORBA::ULong data5 (void) const = 0;
  
  public:

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/field_ch.cpp:361

    virtual void nv5 (OBV_TruncatableTest::NestedValue *) = 0;
    virtual OBV_TruncatableTest::NestedValue *nv5 (void) const = 0;
  
  public:

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/field_ch.cpp:608

    virtual void str2 (char *val) = 0;
    virtual void str2 (const char *val) = 0;
    virtual void str2 (const ::CORBA::String_var &val) = 0;
    virtual const char *str2 (void) const = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/valuetype_ch.cpp:238
  
  protected:
    TValue5 (void);
    virtual ~TValue5 (void);

    virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
    virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
    
  private:
    TValue5 (const TValue5 &);
    void operator= (const TValue5 &);
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__OBV_TruncatableTest_TValue5 (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

    virtual ::CORBA::Boolean
    _tao_unmarshal__OBV_TruncatableTest_TValue5 (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_init_ch.cpp:57

  class  TValue5_init
    : public virtual ::CORBA::ValueFactoryBase
  {
  public:
    TValue5_init (void);

    static TValue5_init* _downcast ( ::CORBA::ValueFactoryBase *);

    virtual ::CORBA::ValueBase *
    create_for_unmarshal (void);

    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  
  protected:
    virtual ~TValue5_init (void);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_TValue5;

  // TAO_IDL - Generated from
  // be/be_valuetype.cpp:564

  

#if !defined (_OBV_TRUNCATABLETEST_TVALUE6__VAR_OUT_CH_)
#define _OBV_TRUNCATABLETEST_TVALUE6__VAR_OUT_CH_

  class TValue6;
  typedef
    TAO_Value_Var_T<
        TValue6
      >
    TValue6_var;
  
  typedef
    TAO_Value_Out_T<
        TValue6
      >
    TValue6_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:50

  class  TValue6
    : public virtual BaseValue
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef TValue6 * _ptr_type;
    typedef TValue6_var _var_type;
    typedef TValue6_out _out_type;

    static void _tao_any_destructor (void *);

    static TValue6* _downcast ( ::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        TValue6 *&new_object);
    
    virtual const char* _tao_obv_repository_id (void) const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id (void);

    virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/valuetype_ch.cpp:238
  
  protected:
    TValue6 (void);
    virtual ~TValue6 (void);

    virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
    virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
    virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
    
  private:
    TValue6 (const TValue6 &);
    void operator= (const TValue6 &);
    
  protected:
    virtual ::CORBA::Boolean
    _tao_marshal__OBV_TruncatableTest_TValue6 (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

    virtual ::CORBA::Boolean
    _tao_unmarshal__OBV_TruncatableTest_TValue6 (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_init_ch.cpp:57

  class  TValue6_init
    : public virtual ::CORBA::ValueFactoryBase
  {
  public:
    TValue6_init (void);

    static TValue6_init* _downcast ( ::CORBA::ValueFactoryBase *);

    virtual ::CORBA::ValueBase *
    create_for_unmarshal (void);

    // TAO-specific extensions
  public:
    virtual const char* tao_repository_id (void);
  
  protected:
    virtual ~TValue6_init (void);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_TValue6;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:748

#if !defined (_OBV_TRUNCATABLETEST_TEST__VAR_OUT_CH_)
#define _OBV_TRUNCATABLETEST_TEST__VAR_OUT_CH_

  class Test;
  typedef Test *Test_ptr;

  typedef
    TAO_Objref_Var_T<
        Test
      >
    Test_var;
  
  typedef
    TAO_Objref_Out_T<
        Test
      >
    Test_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:40

  class  Test
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<Test>;

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef Test_ptr _ptr_type;
    typedef Test_var _var_type;
    typedef Test_out _out_type;

    static void _tao_any_destructor (void *);

    // The static operations.
    static Test_ptr _duplicate (Test_ptr obj);

    static void _tao_release (Test_ptr obj);

    static Test_ptr _narrow (::CORBA::Object_ptr obj);
    static Test_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Test_ptr _nil (void);

    virtual void op1 (
      const char * id,
      ::OBV_TruncatableTest::BaseValue * iv,
      ::OBV_TruncatableTest::BaseValue_out ov,
      char *& desc);

    virtual void op2 (
      ::OBV_TruncatableTest::TValue1 * iv,
      const char * id,
      ::OBV_TruncatableTest::TValue1_out ov,
      char *& desc);

    virtual void op3 (
      const char * id,
      ::OBV_TruncatableTest::TValue4 * iv,
      ::OBV_TruncatableTest::TValue4_out ov,
      char *& desc);

    virtual ::OBV_TruncatableTest::BaseValue * op4 (
      const char * id,
      ::OBV_TruncatableTest::TValue1 * iv1,
      ::CORBA::Short x,
      ::OBV_TruncatableTest::TValue4 * iv2,
      ::OBV_TruncatableTest::TValue4 * iv3,
      ::OBV_TruncatableTest::TValue1 * iv4,
      char *& desc);

    virtual void op5 (
      const ::CORBA::Any & val,
      const char * id,
      ::OBV_TruncatableTest::TValue1_out ov,
      char *& desc);

    virtual void shutdown (
      void);

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:137

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    Test (void);

    // Concrete non-local interface only.
    Test (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    Test (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~Test (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Test (const Test &);

    void operator= (const Test &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern  ::CORBA::TypeCode_ptr const _tc_Test;

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:64

} // module OBV_TruncatableTest

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_OBV_TRUNCATABLETEST_BASEVALUE__ARG_TRAITS_)
#define _OBV_TRUNCATABLETEST_BASEVALUE__ARG_TRAITS_

  template<>
  class Arg_Traits< ::OBV_TruncatableTest::BaseValue>
    : public
        Object_Arg_Traits_T<
            ::OBV_TruncatableTest::BaseValue *,
            ::OBV_TruncatableTest::BaseValue_var,
            ::OBV_TruncatableTest::BaseValue_out,
            TAO::Value_Traits<OBV_TruncatableTest::BaseValue>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_OBV_TRUNCATABLETEST_TVALUE1__ARG_TRAITS_)
#define _OBV_TRUNCATABLETEST_TVALUE1__ARG_TRAITS_

  template<>
  class Arg_Traits< ::OBV_TruncatableTest::TValue1>
    : public
        Object_Arg_Traits_T<
            ::OBV_TruncatableTest::TValue1 *,
            ::OBV_TruncatableTest::TValue1_var,
            ::OBV_TruncatableTest::TValue1_out,
            TAO::Value_Traits<OBV_TruncatableTest::TValue1>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_OBV_TRUNCATABLETEST_TVALUE2__ARG_TRAITS_)
#define _OBV_TRUNCATABLETEST_TVALUE2__ARG_TRAITS_

  template<>
  class Arg_Traits< ::OBV_TruncatableTest::TValue2>
    : public
        Object_Arg_Traits_T<
            ::OBV_TruncatableTest::TValue2 *,
            ::OBV_TruncatableTest::TValue2_var,
            ::OBV_TruncatableTest::TValue2_out,
            TAO::Value_Traits<OBV_TruncatableTest::TValue2>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_OBV_TRUNCATABLETEST_TVALUE3__ARG_TRAITS_)
#define _OBV_TRUNCATABLETEST_TVALUE3__ARG_TRAITS_

  template<>
  class Arg_Traits< ::OBV_TruncatableTest::TValue3>
    : public
        Object_Arg_Traits_T<
            ::OBV_TruncatableTest::TValue3 *,
            ::OBV_TruncatableTest::TValue3_var,
            ::OBV_TruncatableTest::TValue3_out,
            TAO::Value_Traits<OBV_TruncatableTest::TValue3>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_OBV_TRUNCATABLETEST_NESTEDVALUE__ARG_TRAITS_)
#define _OBV_TRUNCATABLETEST_NESTEDVALUE__ARG_TRAITS_

  template<>
  class Arg_Traits< ::OBV_TruncatableTest::NestedValue>
    : public
        Object_Arg_Traits_T<
            ::OBV_TruncatableTest::NestedValue *,
            ::OBV_TruncatableTest::NestedValue_var,
            ::OBV_TruncatableTest::NestedValue_out,
            TAO::Value_Traits<OBV_TruncatableTest::NestedValue>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_OBV_TRUNCATABLETEST_TVALUE4__ARG_TRAITS_)
#define _OBV_TRUNCATABLETEST_TVALUE4__ARG_TRAITS_

  template<>
  class Arg_Traits< ::OBV_TruncatableTest::TValue4>
    : public
        Object_Arg_Traits_T<
            ::OBV_TruncatableTest::TValue4 *,
            ::OBV_TruncatableTest::TValue4_var,
            ::OBV_TruncatableTest::TValue4_out,
            TAO::Value_Traits<OBV_TruncatableTest::TValue4>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_OBV_TRUNCATABLETEST_TVALUE5__ARG_TRAITS_)
#define _OBV_TRUNCATABLETEST_TVALUE5__ARG_TRAITS_

  template<>
  class Arg_Traits< ::OBV_TruncatableTest::TValue5>
    : public
        Object_Arg_Traits_T<
            ::OBV_TruncatableTest::TValue5 *,
            ::OBV_TruncatableTest::TValue5_var,
            ::OBV_TruncatableTest::TValue5_out,
            TAO::Value_Traits<OBV_TruncatableTest::TValue5>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_OBV_TRUNCATABLETEST_TVALUE6__ARG_TRAITS_)
#define _OBV_TRUNCATABLETEST_TVALUE6__ARG_TRAITS_

  template<>
  class Arg_Traits< ::OBV_TruncatableTest::TValue6>
    : public
        Object_Arg_Traits_T<
            ::OBV_TruncatableTest::TValue6 *,
            ::OBV_TruncatableTest::TValue6_var,
            ::OBV_TruncatableTest::TValue6_out,
            TAO::Value_Traits<OBV_TruncatableTest::TValue6>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_OBV_TRUNCATABLETEST_TEST__ARG_TRAITS_)
#define _OBV_TRUNCATABLETEST_TEST__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::OBV_TruncatableTest::Test>
    : public
        Object_Arg_Traits_T<
            ::OBV_TruncatableTest::Test_ptr,
            ::OBV_TruncatableTest::Test_var,
            ::OBV_TruncatableTest::Test_out,
            TAO::Objref_Traits<OBV_TruncatableTest::Test>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/obv_module.cpp:44

namespace OBV_OBV_TruncatableTest
{

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

  // OBV_ class
  class  BaseValue
    : public virtual OBV_TruncatableTest::BaseValue,
      public virtual ::CORBA::DefaultValueRefCountBase
  {

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:459

  virtual void basic_data (const ::CORBA::ULong);
  virtual ::CORBA::ULong basic_data (void) const;

public:
  BaseValue (void);
  BaseValue (
      ::CORBA::ULong _tao_init_basic_data
    );
  virtual ~BaseValue (void);

public:
  virtual ::CORBA::ValueBase *_copy_value (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OBV_TruncatableTest_BaseValue (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OBV_TruncatableTest_BaseValue (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  ::CORBA::ULong _pd_basic_data;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

// OBV_ class
class  TValue1
  : public virtual OBV_TruncatableTest::TValue1,
    public virtual OBV_OBV_TruncatableTest::BaseValue
{

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:459

  virtual void data1 (const ::CORBA::ULong);
  virtual ::CORBA::ULong data1 (void) const;

public:
  TValue1 (void);
  TValue1 (
      ::CORBA::ULong _tao_init_basic_data,
      ::CORBA::ULong _tao_init_data1
    );
  virtual ~TValue1 (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OBV_TruncatableTest_TValue1 (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OBV_TruncatableTest_TValue1 (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  ::CORBA::ULong _pd_data1;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

// OBV_ class
class  TValue2
  : public virtual OBV_TruncatableTest::TValue2,
    public virtual OBV_OBV_TruncatableTest::TValue1
{

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:459

  virtual void data2 (const ::CORBA::ULong);
  virtual ::CORBA::ULong data2 (void) const;

public:
  TValue2 (void);
  TValue2 (
      ::CORBA::ULong _tao_init_basic_data,
      ::CORBA::ULong _tao_init_data1,
      ::CORBA::ULong _tao_init_data2
    );
  virtual ~TValue2 (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OBV_TruncatableTest_TValue2 (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OBV_TruncatableTest_TValue2 (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  ::CORBA::ULong _pd_data2;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

// OBV_ class
class  TValue3
  : public virtual OBV_TruncatableTest::TValue3,
    public virtual OBV_OBV_TruncatableTest::TValue1
{

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:459

  virtual void data3 (const ::CORBA::ULong);
  virtual ::CORBA::ULong data3 (void) const;

public:
  TValue3 (void);
  TValue3 (
      ::CORBA::ULong _tao_init_basic_data,
      ::CORBA::ULong _tao_init_data1,
      ::CORBA::ULong _tao_init_data3
    );
  virtual ~TValue3 (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OBV_TruncatableTest_TValue3 (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OBV_TruncatableTest_TValue3 (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  ::CORBA::ULong _pd_data3;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

// OBV_ class
class  NestedValue
  : public virtual OBV_TruncatableTest::NestedValue,
    public virtual ::CORBA::DefaultValueRefCountBase
{

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:459

  virtual void data (const ::CORBA::Long);
  virtual ::CORBA::Long data (void) const;

public:
  NestedValue (void);
  NestedValue (
      ::CORBA::Long _tao_init_data
    );
  virtual ~NestedValue (void);

public:
  virtual ::CORBA::ValueBase *_copy_value (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OBV_TruncatableTest_NestedValue (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OBV_TruncatableTest_NestedValue (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  ::CORBA::Long _pd_data;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

// OBV_ class
class  TValue4
  : public virtual OBV_TruncatableTest::TValue4,
    public virtual OBV_OBV_TruncatableTest::BaseValue
{

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:361

  virtual void nv4 (OBV_TruncatableTest::NestedValue *);
  virtual OBV_TruncatableTest::NestedValue *nv4 (void) const;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:459

  virtual void data4 (const ::CORBA::ULong);
  virtual ::CORBA::ULong data4 (void) const;

public:
  TValue4 (void);
  TValue4 (
      ::CORBA::ULong _tao_init_basic_data,
      ::OBV_TruncatableTest::NestedValue * _tao_init_nv4,
      ::CORBA::ULong _tao_init_data4
    );
  virtual ~TValue4 (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OBV_TruncatableTest_TValue4 (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OBV_TruncatableTest_TValue4 (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  OBV_TruncatableTest::NestedValue_var _pd_nv4;
  ::CORBA::ULong _pd_data4;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

// OBV_ class
class  TValue5
  : public virtual OBV_TruncatableTest::TValue5,
    public virtual OBV_OBV_TruncatableTest::TValue4
{

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:608

  virtual void str1 (char *val);
  virtual void str1 (const char *val);
  virtual void str1 (const ::CORBA::String_var &val);
  virtual const char *str1 (void) const;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:459

  virtual void data5 (const ::CORBA::ULong);
  virtual ::CORBA::ULong data5 (void) const;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:361

  virtual void nv5 (OBV_TruncatableTest::NestedValue *);
  virtual OBV_TruncatableTest::NestedValue *nv5 (void) const;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:608

  virtual void str2 (char *val);
  virtual void str2 (const char *val);
  virtual void str2 (const ::CORBA::String_var &val);
  virtual const char *str2 (void) const;

public:
  TValue5 (void);
  TValue5 (
      ::CORBA::ULong _tao_init_basic_data,
      ::OBV_TruncatableTest::NestedValue * _tao_init_nv4,
      ::CORBA::ULong _tao_init_data4,
      const char * _tao_init_str1,
      ::CORBA::ULong _tao_init_data5,
      ::OBV_TruncatableTest::NestedValue * _tao_init_nv5,
      const char * _tao_init_str2
    );
  virtual ~TValue5 (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OBV_TruncatableTest_TValue5 (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OBV_TruncatableTest_TValue5 (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  ::TAO::String_Manager _pd_str1;
  ::CORBA::ULong _pd_data5;
  OBV_TruncatableTest::NestedValue_var _pd_nv5;
  ::TAO::String_Manager _pd_str2;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

// OBV_ class
class  TValue6
  : public virtual OBV_TruncatableTest::TValue6,
    public virtual OBV_OBV_TruncatableTest::BaseValue
{

public:
  TValue6 (void);
  TValue6 (
      ::CORBA::ULong _tao_init_basic_data
    );
  virtual ~TValue6 (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__OBV_TruncatableTest_TValue6 (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__OBV_TruncatableTest_TValue6 (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  CORBA::Boolean require_truncation_;
};
}

// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_OBV_TRUNCATABLETEST_BASEVALUE__TRAITS_)
#define _OBV_TRUNCATABLETEST_BASEVALUE__TRAITS_

  template<>
  struct  Value_Traits<OBV_TruncatableTest::BaseValue>
  {
    static void add_ref (OBV_TruncatableTest::BaseValue *);
    static void remove_ref (OBV_TruncatableTest::BaseValue *);
    static void release (OBV_TruncatableTest::BaseValue *);
  };

#endif /* end #if !defined */

#if !defined (_OBV_TRUNCATABLETEST_TVALUE1__TRAITS_)
#define _OBV_TRUNCATABLETEST_TVALUE1__TRAITS_

  template<>
  struct  Value_Traits<OBV_TruncatableTest::TValue1>
  {
    static void add_ref (OBV_TruncatableTest::TValue1 *);
    static void remove_ref (OBV_TruncatableTest::TValue1 *);
    static void release (OBV_TruncatableTest::TValue1 *);
  };

#endif /* end #if !defined */

#if !defined (_OBV_TRUNCATABLETEST_TVALUE2__TRAITS_)
#define _OBV_TRUNCATABLETEST_TVALUE2__TRAITS_

  template<>
  struct  Value_Traits<OBV_TruncatableTest::TValue2>
  {
    static void add_ref (OBV_TruncatableTest::TValue2 *);
    static void remove_ref (OBV_TruncatableTest::TValue2 *);
    static void release (OBV_TruncatableTest::TValue2 *);
  };

#endif /* end #if !defined */

#if !defined (_OBV_TRUNCATABLETEST_TVALUE3__TRAITS_)
#define _OBV_TRUNCATABLETEST_TVALUE3__TRAITS_

  template<>
  struct  Value_Traits<OBV_TruncatableTest::TValue3>
  {
    static void add_ref (OBV_TruncatableTest::TValue3 *);
    static void remove_ref (OBV_TruncatableTest::TValue3 *);
    static void release (OBV_TruncatableTest::TValue3 *);
  };

#endif /* end #if !defined */

#if !defined (_OBV_TRUNCATABLETEST_NESTEDVALUE__TRAITS_)
#define _OBV_TRUNCATABLETEST_NESTEDVALUE__TRAITS_

  template<>
  struct  Value_Traits<OBV_TruncatableTest::NestedValue>
  {
    static void add_ref (OBV_TruncatableTest::NestedValue *);
    static void remove_ref (OBV_TruncatableTest::NestedValue *);
    static void release (OBV_TruncatableTest::NestedValue *);
  };

#endif /* end #if !defined */

#if !defined (_OBV_TRUNCATABLETEST_TVALUE4__TRAITS_)
#define _OBV_TRUNCATABLETEST_TVALUE4__TRAITS_

  template<>
  struct  Value_Traits<OBV_TruncatableTest::TValue4>
  {
    static void add_ref (OBV_TruncatableTest::TValue4 *);
    static void remove_ref (OBV_TruncatableTest::TValue4 *);
    static void release (OBV_TruncatableTest::TValue4 *);
  };

#endif /* end #if !defined */

#if !defined (_OBV_TRUNCATABLETEST_TVALUE5__TRAITS_)
#define _OBV_TRUNCATABLETEST_TVALUE5__TRAITS_

  template<>
  struct  Value_Traits<OBV_TruncatableTest::TValue5>
  {
    static void add_ref (OBV_TruncatableTest::TValue5 *);
    static void remove_ref (OBV_TruncatableTest::TValue5 *);
    static void release (OBV_TruncatableTest::TValue5 *);
  };

#endif /* end #if !defined */

#if !defined (_OBV_TRUNCATABLETEST_TVALUE6__TRAITS_)
#define _OBV_TRUNCATABLETEST_TVALUE6__TRAITS_

  template<>
  struct  Value_Traits<OBV_TruncatableTest::TValue6>
  {
    static void add_ref (OBV_TruncatableTest::TValue6 *);
    static void remove_ref (OBV_TruncatableTest::TValue6 *);
    static void release (OBV_TruncatableTest::TValue6 *);
  };

#endif /* end #if !defined */

#if !defined (_OBV_TRUNCATABLETEST_TEST__TRAITS_)
#define _OBV_TRUNCATABLETEST_TEST__TRAITS_

  template<>
  struct  Objref_Traits< ::OBV_TruncatableTest::Test>
  {
    static ::OBV_TruncatableTest::Test_ptr duplicate (
        ::OBV_TruncatableTest::Test_ptr p);
    static void release (
        ::OBV_TruncatableTest::Test_ptr p);
    static ::OBV_TruncatableTest::Test_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::OBV_TruncatableTest::Test_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/any_op_ch.cpp:43



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace OBV_TruncatableTest
{
   void operator<<= ( ::CORBA::Any &, BaseValue *); // copying
   void operator<<= ( ::CORBA::Any &, BaseValue **); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, BaseValue *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, OBV_TruncatableTest::BaseValue *); // copying
 void operator<<= (::CORBA::Any &, OBV_TruncatableTest::BaseValue **); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OBV_TruncatableTest::BaseValue *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_valuetype/any_op_ch.cpp:43



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace OBV_TruncatableTest
{
   void operator<<= ( ::CORBA::Any &, TValue1 *); // copying
   void operator<<= ( ::CORBA::Any &, TValue1 **); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TValue1 *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, OBV_TruncatableTest::TValue1 *); // copying
 void operator<<= (::CORBA::Any &, OBV_TruncatableTest::TValue1 **); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OBV_TruncatableTest::TValue1 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_valuetype/any_op_ch.cpp:43



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace OBV_TruncatableTest
{
   void operator<<= ( ::CORBA::Any &, TValue2 *); // copying
   void operator<<= ( ::CORBA::Any &, TValue2 **); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TValue2 *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, OBV_TruncatableTest::TValue2 *); // copying
 void operator<<= (::CORBA::Any &, OBV_TruncatableTest::TValue2 **); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OBV_TruncatableTest::TValue2 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_valuetype/any_op_ch.cpp:43



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace OBV_TruncatableTest
{
   void operator<<= ( ::CORBA::Any &, TValue3 *); // copying
   void operator<<= ( ::CORBA::Any &, TValue3 **); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TValue3 *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, OBV_TruncatableTest::TValue3 *); // copying
 void operator<<= (::CORBA::Any &, OBV_TruncatableTest::TValue3 **); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OBV_TruncatableTest::TValue3 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_valuetype/any_op_ch.cpp:43



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace OBV_TruncatableTest
{
   void operator<<= ( ::CORBA::Any &, NestedValue *); // copying
   void operator<<= ( ::CORBA::Any &, NestedValue **); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, NestedValue *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, OBV_TruncatableTest::NestedValue *); // copying
 void operator<<= (::CORBA::Any &, OBV_TruncatableTest::NestedValue **); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OBV_TruncatableTest::NestedValue *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_valuetype/any_op_ch.cpp:43



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace OBV_TruncatableTest
{
   void operator<<= ( ::CORBA::Any &, TValue4 *); // copying
   void operator<<= ( ::CORBA::Any &, TValue4 **); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TValue4 *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, OBV_TruncatableTest::TValue4 *); // copying
 void operator<<= (::CORBA::Any &, OBV_TruncatableTest::TValue4 **); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OBV_TruncatableTest::TValue4 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_valuetype/any_op_ch.cpp:43



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace OBV_TruncatableTest
{
   void operator<<= ( ::CORBA::Any &, TValue5 *); // copying
   void operator<<= ( ::CORBA::Any &, TValue5 **); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TValue5 *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, OBV_TruncatableTest::TValue5 *); // copying
 void operator<<= (::CORBA::Any &, OBV_TruncatableTest::TValue5 **); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OBV_TruncatableTest::TValue5 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_valuetype/any_op_ch.cpp:43



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace OBV_TruncatableTest
{
   void operator<<= ( ::CORBA::Any &, TValue6 *); // copying
   void operator<<= ( ::CORBA::Any &, TValue6 **); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, TValue6 *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, OBV_TruncatableTest::TValue6 *); // copying
 void operator<<= (::CORBA::Any &, OBV_TruncatableTest::TValue6 **); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OBV_TruncatableTest::TValue6 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:41



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace OBV_TruncatableTest
{
   void operator<<= ( ::CORBA::Any &, Test_ptr); // copying
   void operator<<= ( ::CORBA::Any &, Test_ptr *); // non-copying
   ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Test_ptr &);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, OBV_TruncatableTest::Test_ptr); // copying
 void operator<<= (::CORBA::Any &, OBV_TruncatableTest::Test_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, OBV_TruncatableTest::Test_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (OBV_TruncatableTest::BaseValue *);
  extern  void remove_ref (OBV_TruncatableTest::BaseValue *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OBV_TruncatableTest::BaseValue *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, OBV_TruncatableTest::BaseValue *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (OBV_TruncatableTest::TValue1 *);
  extern  void remove_ref (OBV_TruncatableTest::TValue1 *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OBV_TruncatableTest::TValue1 *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, OBV_TruncatableTest::TValue1 *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (OBV_TruncatableTest::TValue2 *);
  extern  void remove_ref (OBV_TruncatableTest::TValue2 *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OBV_TruncatableTest::TValue2 *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, OBV_TruncatableTest::TValue2 *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (OBV_TruncatableTest::TValue3 *);
  extern  void remove_ref (OBV_TruncatableTest::TValue3 *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OBV_TruncatableTest::TValue3 *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, OBV_TruncatableTest::TValue3 *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (OBV_TruncatableTest::NestedValue *);
  extern  void remove_ref (OBV_TruncatableTest::NestedValue *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OBV_TruncatableTest::NestedValue *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, OBV_TruncatableTest::NestedValue *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (OBV_TruncatableTest::TValue4 *);
  extern  void remove_ref (OBV_TruncatableTest::TValue4 *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OBV_TruncatableTest::TValue4 *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, OBV_TruncatableTest::TValue4 *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (OBV_TruncatableTest::TValue5 *);
  extern  void remove_ref (OBV_TruncatableTest::TValue5 *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OBV_TruncatableTest::TValue5 *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, OBV_TruncatableTest::TValue5 *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (OBV_TruncatableTest::TValue6 *);
  extern  void remove_ref (OBV_TruncatableTest::TValue6 *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OBV_TruncatableTest::TValue6 *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, OBV_TruncatableTest::TValue6 *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:41

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const OBV_TruncatableTest::Test_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, OBV_TruncatableTest::Test_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1700
#if defined (__ACE_INLINE__)
#include "TruncatableC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

