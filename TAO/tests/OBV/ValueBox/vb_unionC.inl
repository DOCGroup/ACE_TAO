// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/


// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union Fixed_Union1
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:145

ACE_INLINE
void
Fixed_Union1::_default ()
{
  this->_reset ();
  this->disc_ = -2147483647;
}

// Accessor to set the discriminant.
ACE_INLINE
void
Fixed_Union1::_d ( ::CORBA::Long discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
::CORBA::Long
Fixed_Union1::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
Fixed_Union1::m1 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 1;
  // Set the value.
  this->u_.m1_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
Fixed_Union1::m1 (void) const
{
  return this->u_.m1_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
Fixed_Union1::m2 (CORBA::Short val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 2;
  // Set the value.
  this->u_.m2_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Short
Fixed_Union1::m2 (void) const
{
  return this->u_.m2_;
}

// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:36

// *************************************************************
// Inline operations for union Variable_Union1
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:145

ACE_INLINE
void
Variable_Union1::_default ()
{
  this->_reset ();
  this->disc_ = -2147483647;
}

// Accessor to set the discriminant.
ACE_INLINE
void
Variable_Union1::_d ( ::CORBA::Long discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
::CORBA::Long
Variable_Union1::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:577

// Accessor to set the member.
ACE_INLINE
void
Variable_Union1::m1 (CORBA::Long val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 1;
  // Set the value.
  this->u_.m1_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Long
Variable_Union1::m1 (void) const
{
  return this->u_.m1_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:862

/// Accessor to set the member.
ACE_INLINE
void
Variable_Union1::m2 (char *val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 2;
  this->u_.m2_ = val;
}

// Accessor to set the member.
ACE_INLINE
void
Variable_Union1::m2 (const char *val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 2;
  // Set the value.
  this->u_.m2_ = ::CORBA::string_dup (val);
}

/// Accessor to set the member.
ACE_INLINE
void
Variable_Union1::m2 (const ::CORBA::String_var &val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = 2;
  // Set the value.
  ::CORBA::String_var m2_var = val;
  this->u_.m2_ = m2_var._retn ();
}

ACE_INLINE
const char *
Variable_Union1::m2 (void) const // get method
{
  return this->u_.m2_;
}

// TAO_IDL - Generated from
// be/be_visitor_valuebox/valuebox_ci.cpp:479

ACE_INLINE
VBfixed_union1::VBfixed_union1 (void)
{
  Fixed_Union1* p = 0;
  ACE_NEW (
    p,
    Fixed_Union1);
  this->_pd_value = p;
}

ACE_INLINE
VBfixed_union1::VBfixed_union1 (const Fixed_Union1& value)
{
  Fixed_Union1* p = 0;
  ACE_NEW (
    p,
    Fixed_Union1 (value));
  this->_pd_value = p;
}

ACE_INLINE
VBfixed_union1::VBfixed_union1 (const VBfixed_union1& val)
  : ::CORBA::ValueBase (val),
    ::CORBA::DefaultValueRefCountBase (val)
{
  Fixed_Union1* p = 0;
  ACE_NEW (
    p,
    Fixed_Union1 (val._pd_value.in ()));
  this->_pd_value = p;
}

ACE_INLINE VBfixed_union1 &
VBfixed_union1::operator= (const Fixed_Union1& value)
{
  Fixed_Union1* p = 0;
  ACE_NEW_RETURN (
    p,
    Fixed_Union1 (value),
    *this);
  
  this->_pd_value = p;
  return *this;
}

ACE_INLINE const Fixed_Union1 &
VBfixed_union1::_value (void) const
{
  return this->_pd_value.in ();
}

ACE_INLINE Fixed_Union1 &
VBfixed_union1::_value (void)
{
  return this->_pd_value.inout ();
}

ACE_INLINE void
VBfixed_union1::_value (const Fixed_Union1& value)
{
  Fixed_Union1* p = 0;
  ACE_NEW (
    p,
    Fixed_Union1 (value));
  this->_pd_value = p;
}

ACE_INLINE const Fixed_Union1 &
VBfixed_union1::_boxed_in (void) const
{
  return this->_pd_value.in ();
}

ACE_INLINE Fixed_Union1&
VBfixed_union1::_boxed_inout (void)
{
  return this->_pd_value.inout ();
}

ACE_INLINE Fixed_Union1&
VBfixed_union1::_boxed_out (void)
{
  return this->_pd_value.out ();
}



// TAO_IDL - Generated from
// be/be_visitor_valuebox/union_member_ci.cpp:298

// Modifier to set the member.
ACE_INLINE void
VBfixed_union1::m1 ( ::CORBA::Long val)
{
  this->_pd_value->m1 (val);
}

/// Accessor to retrieve the member.
ACE_INLINE  ::CORBA::Long
VBfixed_union1::m1 (void) const
{
  return this->_pd_value->m1 ();
}



// TAO_IDL - Generated from
// be/be_visitor_valuebox/union_member_ci.cpp:298

// Modifier to set the member.
ACE_INLINE void
VBfixed_union1::m2 ( ::CORBA::Short val)
{
  this->_pd_value->m2 (val);
}

/// Accessor to retrieve the member.
ACE_INLINE  ::CORBA::Short
VBfixed_union1::m2 (void) const
{
  return this->_pd_value->m2 ();
}

ACE_INLINE void
VBfixed_union1::_d (::CORBA::Long val)
{
  this->_pd_value->_d (val);
}

ACE_INLINE ::CORBA::Long
VBfixed_union1::_d (void) const
{
  return this->_pd_value->_d ();
}



// TAO_IDL - Generated from
// be/be_visitor_valuebox/valuebox_ci.cpp:49
ACE_INLINE const char*
VBfixed_union1::_tao_obv_static_repository_id ()
{
  return "IDL:VBfixed_union1:1.0";
}



// TAO_IDL - Generated from
// be/be_visitor_valuebox/valuebox_ci.cpp:479

ACE_INLINE
VBvariable_union1::VBvariable_union1 (void)
{
  Variable_Union1* p = 0;
  ACE_NEW (
    p,
    Variable_Union1 ());
  this->_pd_value = p;
}

ACE_INLINE
VBvariable_union1::VBvariable_union1 (const Variable_Union1& value)
{
  Variable_Union1* p = 0;
  ACE_NEW (
    p,
    Variable_Union1 (value));
  this->_pd_value = p;
}

ACE_INLINE
VBvariable_union1::VBvariable_union1 (const VBvariable_union1& val)
  : ::CORBA::ValueBase (val),
    ::CORBA::DefaultValueRefCountBase (val)
{
  Variable_Union1* p = 0;
  ACE_NEW (
    p,
    Variable_Union1 (val._pd_value.in ()));
  this->_pd_value = p;
}

ACE_INLINE VBvariable_union1 &
VBvariable_union1::operator= (const Variable_Union1& value)
{
  Variable_Union1* p = 0;
  ACE_NEW_RETURN (
    p,
    Variable_Union1 (value),
    *this);
  
  this->_pd_value = p;
  return *this;
}

ACE_INLINE const Variable_Union1 &
VBvariable_union1::_value (void) const
{
  return this->_pd_value.in ();
}

ACE_INLINE Variable_Union1 &
VBvariable_union1::_value (void)
{
  return this->_pd_value.inout ();
}

ACE_INLINE void
VBvariable_union1::_value (const Variable_Union1& value)
{
  Variable_Union1* p = 0;
  ACE_NEW (
    p,
    Variable_Union1 (value));
  this->_pd_value = p;
}

ACE_INLINE const Variable_Union1 &
VBvariable_union1::_boxed_in (void) const
{
  return this->_pd_value.in ();
}

ACE_INLINE Variable_Union1&
VBvariable_union1::_boxed_inout (void)
{
  return this->_pd_value.inout ();
}

ACE_INLINE Variable_Union1*&
VBvariable_union1::_boxed_out (void)
{
  return this->_pd_value.out ();
}



// TAO_IDL - Generated from
// be/be_visitor_valuebox/union_member_ci.cpp:298

// Modifier to set the member.
ACE_INLINE void
VBvariable_union1::m1 ( ::CORBA::Long val)
{
  this->_pd_value->m1 (val);
}

/// Accessor to retrieve the member.
ACE_INLINE  ::CORBA::Long
VBvariable_union1::m1 (void) const
{
  return this->_pd_value->m1 ();
}



// TAO_IDL - Generated from
// be/be_visitor_valuebox/union_member_ci.cpp:388

// Modifier to set the member.
ACE_INLINE void
VBvariable_union1::m2 (char * val)
{
  this->_pd_value->m2 (val);
}

// Modifier to set the member.
ACE_INLINE void
VBvariable_union1::m2 (const char * val)
{
  this->_pd_value->m2 (val);
}

// Modifier to set the member.
ACE_INLINE void
VBvariable_union1::m2 (const ::CORBA::String_var & val)
{
  this->_pd_value->m2 (val);
}

/// Accessor to retrieve the member.
ACE_INLINE const char *
VBvariable_union1::m2 (void) const
{
  return this->_pd_value->m2 ();
}

ACE_INLINE void
VBvariable_union1::_d (::CORBA::Long val)
{
  this->_pd_value->_d (val);
}

ACE_INLINE ::CORBA::Long
VBvariable_union1::_d (void) const
{
  return this->_pd_value->_d ();
}



// TAO_IDL - Generated from
// be/be_visitor_valuebox/valuebox_ci.cpp:49
ACE_INLINE const char*
VBvariable_union1::_tao_obv_static_repository_id ()
{
  return "IDL:VBvariable_union1:1.0";
}



