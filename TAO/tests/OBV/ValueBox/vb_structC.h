// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:149

#ifndef _TAO_IDL_VB_STRUCTC_E5PXUB_H_
#define _TAO_IDL_VB_STRUCTC_E5PXUB_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/CDR.h"
#include "tao/Valuetype/Valuetype_Adapter_Factory_Impl.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/AnyTypeCode/TypeCode.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Valuetype/Value_VarOut_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Array_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include "tao/Fixed_Array_Argument_T.h"
#include "tao/Var_Array_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 4 || TAO_MICRO_VERSION != 1
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_root/root_ch.cpp:157
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_type.cpp:258

struct Fixed_Struct1;

typedef
  ::TAO_Fixed_Var_T<
      Fixed_Struct1
    >
  Fixed_Struct1_var;

typedef
  Fixed_Struct1 &
  Fixed_Struct1_out;

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_ch.cpp:48

struct  Fixed_Struct1
{

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef Fixed_Struct1_var _var_type;
  typedef Fixed_Struct1_out _out_type;

  static void _tao_any_destructor (void *);
  
  ::CORBA::Long l;
  

  // TAO_IDL - Generated from
  // be/be_type.cpp:258

  struct Bstruct;

  typedef
    ::TAO_Fixed_Var_T<
        Bstruct
      >
    Bstruct_var;

  typedef
    Bstruct &
    Bstruct_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:48

  struct  Bstruct
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef Bstruct_var _var_type;
    typedef Bstruct_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Short s1;
    ::CORBA::Short s2;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  static ::CORBA::TypeCode_ptr const _tc_Bstruct;Bstruct abstruct;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Fixed_Struct1;

// TAO_IDL - Generated from
// be/be_type.cpp:258

struct Variable_Struct1;

typedef
  ::TAO_Var_Var_T<
      Variable_Struct1
    >
  Variable_Struct1_var;

typedef
  ::TAO_Out_T<
      Variable_Struct1
    >
  Variable_Struct1_out;

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_ch.cpp:48

struct  Variable_Struct1
{

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef Variable_Struct1_var _var_type;
  typedef Variable_Struct1_out _out_type;

  static void _tao_any_destructor (void *);
  
  ::CORBA::Long l;
  ::TAO::String_Manager str;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Variable_Struct1;

// TAO_IDL - Generated from
// be/be_visitor_typedef/typedef_ch.cpp:510

typedef Variable_Struct1 TDvariable_struct1;
typedef Variable_Struct1_var TDvariable_struct1_var;
typedef Variable_Struct1_out TDvariable_struct1_out;

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_TDvariable_struct1;

// TAO_IDL - Generated from
// be/be_interface.cpp:748

#if !defined (_INTERFACEFWD__VAR_OUT_CH_)
#define _INTERFACEFWD__VAR_OUT_CH_

class InterfaceFwd;
typedef InterfaceFwd *InterfaceFwd_ptr;

typedef
  TAO_Objref_Var_T<
      InterfaceFwd
    >
  InterfaceFwd_var;

typedef
  TAO_Objref_Out_T<
      InterfaceFwd
    >
  InterfaceFwd_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_interface.cpp:748

#if !defined (_INTERFACE1__VAR_OUT_CH_)
#define _INTERFACE1__VAR_OUT_CH_

class Interface1;
typedef Interface1 *Interface1_ptr;

typedef
  TAO_Objref_Var_T<
      Interface1
    >
  Interface1_var;

typedef
  TAO_Objref_Out_T<
      Interface1
    >
  Interface1_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ch.cpp:40

class  Interface1
  : public virtual ::CORBA::Object
{
public:
  friend class TAO::Narrow_Utils<Interface1>;

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef Interface1_ptr _ptr_type;
  typedef Interface1_var _var_type;
  typedef Interface1_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static Interface1_ptr _duplicate (Interface1_ptr obj);

  static void _tao_release (Interface1_ptr obj);

  static Interface1_ptr _narrow (::CORBA::Object_ptr obj);
  static Interface1_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static Interface1_ptr _nil (void);

  virtual ::CORBA::Long getval (
    ::CORBA::Short s);

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:137

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  Interface1 (void);

  // Concrete non-local interface only.
  Interface1 (
      ::IOP::IOR *ior,
      TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  Interface1 (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0);

  virtual ~Interface1 (void);

private:
  // Private and unimplemented for concrete interfaces.
  Interface1 (const Interface1 &);

  void operator= (const Interface1 &);
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Interface1;

// TAO_IDL - Generated from
// be/be_visitor_enum/enum_ch.cpp:44

enum Pet
{
  dog,
  cat,
  fish,
  rhinoceros
};

typedef Pet &Pet_out;

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Pet;

// TAO_IDL - Generated from
// be/be_visitor_array/array_ch.cpp:52

typedef ::CORBA::Short short_array[15];
typedef ::CORBA::Short short_array_slice;
struct short_array_tag {};


typedef
  TAO_FixedArray_Var_T<
      short_array,
      short_array_slice,
      short_array_tag
    >
  short_array_var;

typedef
  short_array
  short_array_out;

typedef
  TAO_Array_Forany_T<
      short_array,
      short_array_slice,
      short_array_tag
    >
  short_array_forany;

TAO_EXPORT_MACRO short_array_slice *
short_array_alloc (void);

TAO_EXPORT_MACRO void
short_array_free (
    short_array_slice *_tao_slice);

TAO_EXPORT_MACRO short_array_slice *
short_array_dup (
    const short_array_slice *_tao_slice);

TAO_EXPORT_MACRO void
short_array_copy (
    short_array_slice *_tao_to,
    const short_array_slice *_tao_from);

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_short_array;

// TAO_IDL - Generated from
// be/be_type.cpp:258

class Union1;

typedef
  ::TAO_Fixed_Var_T<
      Union1
    >
  Union1_var;

typedef
  Union1 &
  Union1_out;

class  Union1
{
public:
  Union1 (void);
  Union1 (const Union1 &);
  ~Union1 (void);

  Union1 &operator= (const Union1 &);

  // TAO_IDL - Generated from
  // be/be_visitor_union/discriminant_ch.cpp:100

  void _d ( ::CORBA::Long);
  ::CORBA::Long _d (void) const;

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef Union1_var _var_type;
  typedef Union1_out _out_type;

  static void _tao_any_destructor (void *);

  // TAO_IDL - Generated from
  // be/be_visitor_union_branch/public_ch.cpp:449

  void m1 ( ::CORBA::Long);
  ::CORBA::Long m1 (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_union_branch/public_ch.cpp:189

  void m2 (Pet);
  Pet m2 (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_union/union_ch.cpp:121

  void _default (void);
private:
  ::CORBA::Long disc_;

  union
  {
    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/private_ch.cpp:377
    ::CORBA::Long m1_;
    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/private_ch.cpp:140
    Pet m2_;
  } u_;

  /// TAO extension - frees any allocated storage.
  void _reset (void);
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Union1;

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_ch.cpp:99

#if !defined (_LONGSEQ_CH_)
#define _LONGSEQ_CH_

class LongSeq;

typedef
  ::TAO_FixedSeq_Var_T<
      LongSeq
    >
  LongSeq_var;

typedef
  ::TAO_Seq_Out_T<
      LongSeq
    >
  LongSeq_out;

class  LongSeq
  : public
      ::TAO::unbounded_value_sequence<
          ::CORBA::Long
        >
{
public:
  LongSeq (void);
  LongSeq ( ::CORBA::ULong max);
  LongSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Long* buffer,
    ::CORBA::Boolean release = false);
  LongSeq (const LongSeq &);
  virtual ~LongSeq (void);
  

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef LongSeq_var _var_type;
  typedef LongSeq_out _out_type;

  static void _tao_any_destructor (void *);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_LongSeq;

// TAO_IDL - Generated from
// be/be_visitor_array/array_ch.cpp:52

typedef ::CORBA::Octet oct_array[10];
typedef ::CORBA::Octet oct_array_slice;
struct oct_array_tag {};


typedef
  TAO_FixedArray_Var_T<
      oct_array,
      oct_array_slice,
      oct_array_tag
    >
  oct_array_var;

typedef
  oct_array
  oct_array_out;

typedef
  TAO_Array_Forany_T<
      oct_array,
      oct_array_slice,
      oct_array_tag
    >
  oct_array_forany;

TAO_EXPORT_MACRO oct_array_slice *
oct_array_alloc (void);

TAO_EXPORT_MACRO void
oct_array_free (
    oct_array_slice *_tao_slice);

TAO_EXPORT_MACRO oct_array_slice *
oct_array_dup (
    const oct_array_slice *_tao_slice);

TAO_EXPORT_MACRO void
oct_array_copy (
    oct_array_slice *_tao_to,
    const oct_array_slice *_tao_from);

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_oct_array;

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_ch.cpp:99

#if !defined (_PETSEQ_CH_)
#define _PETSEQ_CH_

class PetSeq;

typedef
  ::TAO_FixedSeq_Var_T<
      PetSeq
    >
  PetSeq_var;

typedef
  ::TAO_Seq_Out_T<
      PetSeq
    >
  PetSeq_out;

class  PetSeq
  : public
      ::TAO::unbounded_value_sequence<
          Pet
        >
{
public:
  PetSeq (void);
  PetSeq ( ::CORBA::ULong max);
  PetSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    Pet* buffer,
    ::CORBA::Boolean release = false);
  PetSeq (const PetSeq &);
  virtual ~PetSeq (void);
  

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef PetSeq_var _var_type;
  typedef PetSeq_out _out_type;

  static void _tao_any_destructor (void *);
};

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_PetSeq;

// TAO_IDL - Generated from
// be/be_type.cpp:258

struct Variable_Struct2;

typedef
  ::TAO_Var_Var_T<
      Variable_Struct2
    >
  Variable_Struct2_var;

typedef
  ::TAO_Out_T<
      Variable_Struct2
    >
  Variable_Struct2_out;

// TAO_IDL - Generated from
// be/be_visitor_structure/structure_ch.cpp:48

struct  Variable_Struct2
{

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef Variable_Struct2_var _var_type;
  typedef Variable_Struct2_out _out_type;

  static void _tao_any_destructor (void *);
  
  ::CORBA::Long len;
  ::CORBA::Any whatever;
  Pet apet;
  oct_array octet_array;
  short_array td_array;
  Interface1_var intf1;
  InterfaceFwd_var intf2;
  ::TAO::String_Manager str;
  ::TAO::WString_Manager wstr;
  LongSeq ls;
  PetSeq sqq;
  

  // TAO_IDL - Generated from
  // be/be_type.cpp:258

  struct NestedStruct1;

  typedef
    ::TAO_Var_Var_T<
        NestedStruct1
      >
    NestedStruct1_var;

  typedef
    ::TAO_Out_T<
        NestedStruct1
      >
    NestedStruct1_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:48

  struct  NestedStruct1
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef NestedStruct1_var _var_type;
    typedef NestedStruct1_out _out_type;

    static void _tao_any_destructor (void *);
    
    ::CORBA::Short s;
    ::TAO::String_Manager str2;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  static ::CORBA::TypeCode_ptr const _tc_NestedStruct1;NestedStruct1 ns1;
  Variable_Struct1 NestedStruct2;
  TDvariable_struct1 NestedStruct3;
  

  Union1 un;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Variable_Struct2;

// TAO_IDL - Generated from
// be/be_visitor_valuebox/valuebox_ch.cpp:41

class VBfixed_struct1;

typedef
  TAO_Value_Var_T<
      VBfixed_struct1
    >
  VBfixed_struct1_var;

typedef
  TAO_Value_Out_T<
      VBfixed_struct1
    >
  VBfixed_struct1_out;

class  VBfixed_struct1
  : public virtual ::CORBA::DefaultValueRefCountBase
{
public:

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef VBfixed_struct1_var _var_type;
  typedef VBfixed_struct1_out _out_type;

  static void _tao_any_destructor (void *);

  static VBfixed_struct1* _downcast ( ::CORBA::ValueBase *);
  ::CORBA::ValueBase * _copy_value (void);

  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &ids) const;

  static const char* _tao_obv_static_repository_id (void);

  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &,
      VBfixed_struct1 *&
    );
  
  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/valuebox_ch.cpp:478

  // Constructors
  VBfixed_struct1 (void);
  VBfixed_struct1 (const Fixed_Struct1& val);
  VBfixed_struct1 (const VBfixed_struct1& val);
  
  // Assignment operator
  VBfixed_struct1& operator= (const Fixed_Struct1& val);

  // Accessors and modifier
  const Fixed_Struct1& _value (void) const;
  Fixed_Struct1& _value (void);
  void _value (const Fixed_Struct1& val);

  // Access to the boxed value for method signatures
  const Fixed_Struct1& _boxed_in (void) const;
  Fixed_Struct1& _boxed_inout (void);
  Fixed_Struct1& _boxed_out (void);
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:286

  void l ( ::CORBA::Long);
   ::CORBA::Long l (void) const;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:428

  void abstruct (const Fixed_Struct1::Bstruct &);
  const Fixed_Struct1::Bstruct & abstruct (void) const;
  Fixed_Struct1::Bstruct & abstruct (void) ;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/valuebox_ch.cpp:546
private:
  Fixed_Struct1_var _pd_value;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/valuebox_ch.cpp:114

protected:
  virtual ~VBfixed_struct1 (void);
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  void operator= (const VBfixed_struct1 & val);
  
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_VBfixed_struct1;

// TAO_IDL - Generated from
// be/be_visitor_valuebox/valuebox_ch.cpp:41

class VBvariable_struct1;

typedef
  TAO_Value_Var_T<
      VBvariable_struct1
    >
  VBvariable_struct1_var;

typedef
  TAO_Value_Out_T<
      VBvariable_struct1
    >
  VBvariable_struct1_out;

class  VBvariable_struct1
  : public virtual ::CORBA::DefaultValueRefCountBase
{
public:

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef VBvariable_struct1_var _var_type;
  typedef VBvariable_struct1_out _out_type;

  static void _tao_any_destructor (void *);

  static VBvariable_struct1* _downcast ( ::CORBA::ValueBase *);
  ::CORBA::ValueBase * _copy_value (void);

  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &ids) const;

  static const char* _tao_obv_static_repository_id (void);

  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &,
      VBvariable_struct1 *&
    );
  
  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/valuebox_ch.cpp:478

  // Constructors
  VBvariable_struct1 (void);
  VBvariable_struct1 (const Variable_Struct1& val);
  VBvariable_struct1 (const VBvariable_struct1& val);
  
  // Assignment operator
  VBvariable_struct1& operator= (const Variable_Struct1& val);

  // Accessors and modifier
  const Variable_Struct1& _value (void) const;
  Variable_Struct1& _value (void);
  void _value (const Variable_Struct1& val);

  // Access to the boxed value for method signatures
  const Variable_Struct1& _boxed_in (void) const;
  Variable_Struct1& _boxed_inout (void);
  Variable_Struct1*& _boxed_out (void);
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:286

  void l ( ::CORBA::Long);
   ::CORBA::Long l (void) const;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:377

  void str (char *);
  void str (const char *);
  void str (const ::CORBA::String_var &);
  const char * str (void) const;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/valuebox_ch.cpp:546
private:
  Variable_Struct1_var _pd_value;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/valuebox_ch.cpp:114

protected:
  virtual ~VBvariable_struct1 (void);
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  void operator= (const VBvariable_struct1 & val);
  
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_VBvariable_struct1;

// TAO_IDL - Generated from
// be/be_visitor_valuebox/valuebox_ch.cpp:41

class VBvariable_struct2;

typedef
  TAO_Value_Var_T<
      VBvariable_struct2
    >
  VBvariable_struct2_var;

typedef
  TAO_Value_Out_T<
      VBvariable_struct2
    >
  VBvariable_struct2_out;

class  VBvariable_struct2
  : public virtual ::CORBA::DefaultValueRefCountBase
{
public:

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef VBvariable_struct2_var _var_type;
  typedef VBvariable_struct2_out _out_type;

  static void _tao_any_destructor (void *);

  static VBvariable_struct2* _downcast ( ::CORBA::ValueBase *);
  ::CORBA::ValueBase * _copy_value (void);

  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &ids) const;

  static const char* _tao_obv_static_repository_id (void);

  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &,
      VBvariable_struct2 *&
    );
  
  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/valuebox_ch.cpp:478

  // Constructors
  VBvariable_struct2 (void);
  VBvariable_struct2 (const Variable_Struct2& val);
  VBvariable_struct2 (const VBvariable_struct2& val);
  
  // Assignment operator
  VBvariable_struct2& operator= (const Variable_Struct2& val);

  // Accessors and modifier
  const Variable_Struct2& _value (void) const;
  Variable_Struct2& _value (void);
  void _value (const Variable_Struct2& val);

  // Access to the boxed value for method signatures
  const Variable_Struct2& _boxed_in (void) const;
  Variable_Struct2& _boxed_inout (void);
  Variable_Struct2*& _boxed_out (void);
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:286

  void len ( ::CORBA::Long);
   ::CORBA::Long len (void) const;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:286

  void whatever (const ::CORBA::Any &);
  const ::CORBA::Any & whatever (void) const;
   ::CORBA::Any & whatever (void) ;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:164

  void apet (Pet);
  Pet apet (void) const;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:126

  void octet_array (oct_array);
  const oct_array_slice *octet_array (void) const;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:126

  void td_array (short_array);
  const short_array_slice *td_array (void) const;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:200

  void intf1 (Interface1_ptr);
  Interface1_ptr intf1 (void) const;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:200

  void intf2 (InterfaceFwd_ptr);
  InterfaceFwd_ptr intf2 (void) const;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:377

  void str (char *);
  void str (const char *);
  void str (const ::CORBA::String_var &);
  const char * str (void) const;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:377

  void wstr (CORBA::WChar *);
  void wstr (const CORBA::WChar *);
  void wstr (const ::CORBA::WString_var &);
  const CORBA::WChar * wstr (void) const;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:339

  void ls (const LongSeq &);
  const LongSeq & ls (void) const;
  LongSeq & ls (void) ;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:339

  void sqq (const PetSeq &);
  const PetSeq & sqq (void) const;
  PetSeq & sqq (void) ;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:428

  void ns1 (const Variable_Struct2::NestedStruct1 &);
  const Variable_Struct2::NestedStruct1 & ns1 (void) const;
  Variable_Struct2::NestedStruct1 & ns1 (void) ;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:428

  void NestedStruct2 (const Variable_Struct1 &);
  const Variable_Struct1 & NestedStruct2 (void) const;
  Variable_Struct1 & NestedStruct2 (void) ;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:428

  void NestedStruct3 (const TDvariable_struct1 &);
  const TDvariable_struct1 & NestedStruct3 (void) const;
  TDvariable_struct1 & NestedStruct3 (void) ;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/field_ch.cpp:488

  void un (const Union1 &);
  const Union1 & un (void) const;
  Union1 & un (void) ;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/valuebox_ch.cpp:546
private:
  Variable_Struct2_var _pd_value;
  

  // TAO_IDL - Generated from
  // be/be_visitor_valuebox/valuebox_ch.cpp:114

protected:
  virtual ~VBvariable_struct2 (void);
  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  void operator= (const VBvariable_struct2 & val);
  
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_VBvariable_struct2;

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ch.cpp:40

class  InterfaceFwd
  : public virtual ::CORBA::Object
{
public:
  friend class TAO::Narrow_Utils<InterfaceFwd>;

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef InterfaceFwd_ptr _ptr_type;
  typedef InterfaceFwd_var _var_type;
  typedef InterfaceFwd_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static InterfaceFwd_ptr _duplicate (InterfaceFwd_ptr obj);

  static void _tao_release (InterfaceFwd_ptr obj);

  static InterfaceFwd_ptr _narrow (::CORBA::Object_ptr obj);
  static InterfaceFwd_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static InterfaceFwd_ptr _nil (void);

  virtual ::CORBA::Long getval (
    ::CORBA::Short s);

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:137

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  InterfaceFwd (void);

  // Concrete non-local interface only.
  InterfaceFwd (
      ::IOP::IOR *ior,
      TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  InterfaceFwd (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0);

  virtual ~InterfaceFwd (void);

private:
  // Private and unimplemented for concrete interfaces.
  InterfaceFwd (const InterfaceFwd &);

  void operator= (const InterfaceFwd &);
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_InterfaceFwd;

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::Fixed_Struct1>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Fixed_Struct1,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::Fixed_Struct1::Bstruct>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Fixed_Struct1::Bstruct,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::Variable_Struct1>
    : public
        Var_Size_Arg_Traits_T<
            ::Variable_Struct1,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_INTERFACEFWD__ARG_TRAITS_)
#define _INTERFACEFWD__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::InterfaceFwd>
    : public
        Object_Arg_Traits_T<
            ::InterfaceFwd_ptr,
            ::InterfaceFwd_var,
            ::InterfaceFwd_out,
            TAO::Objref_Traits<InterfaceFwd>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_INTERFACE1__ARG_TRAITS_)
#define _INTERFACE1__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::Interface1>
    : public
        Object_Arg_Traits_T<
            ::Interface1_ptr,
            ::Interface1_var,
            ::Interface1_out,
            TAO::Objref_Traits<Interface1>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class Arg_Traits< ::Pet>
    : public
        Basic_Arg_Traits_T<
            ::Pet,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::short_array_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::short_array_var,
            ::short_array_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:1056

  template<>
  class Arg_Traits< ::Union1>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Union1,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class Arg_Traits< ::LongSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::LongSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class Arg_Traits< ::oct_array_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::oct_array_var,
            ::oct_array_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class Arg_Traits< ::PetSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::PetSeq,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::Variable_Struct2>
    : public
        Var_Size_Arg_Traits_T<
            ::Variable_Struct2,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::Variable_Struct2::NestedStruct1>
    : public
        Var_Size_Arg_Traits_T<
            ::Variable_Struct2::NestedStruct1,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:250

  template<>
  class Arg_Traits< ::VBfixed_struct1>
    : public
        Object_Arg_Traits_T<
            ::VBfixed_struct1 *,
            ::VBfixed_struct1_var,
            ::VBfixed_struct1_out,
            TAO::Value_Traits<VBfixed_struct1>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:250

  template<>
  class Arg_Traits< ::VBvariable_struct1>
    : public
        Object_Arg_Traits_T<
            ::VBvariable_struct1 *,
            ::VBvariable_struct1_var,
            ::VBvariable_struct1_out,
            TAO::Value_Traits<VBvariable_struct1>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:250

  template<>
  class Arg_Traits< ::VBvariable_struct2>
    : public
        Object_Arg_Traits_T<
            ::VBvariable_struct2 *,
            ::VBvariable_struct2_var,
            ::VBvariable_struct2_out,
            TAO::Value_Traits<VBvariable_struct2>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_INTERFACE1__TRAITS_)
#define _INTERFACE1__TRAITS_

  template<>
  struct  Objref_Traits< ::Interface1>
  {
    static ::Interface1_ptr duplicate (
        ::Interface1_ptr p);
    static void release (
        ::Interface1_ptr p);
    static ::Interface1_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Interface1_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
  template<>
  struct  Array_Traits<
      short_array_forany
    >
  {
    static void free (
        short_array_slice * _tao_slice);
    static short_array_slice * dup (
        const short_array_slice * _tao_slice);
    static void copy (
        short_array_slice * _tao_to,
        const short_array_slice * _tao_from);
    static short_array_slice * alloc (void);
    static void zero (
        short_array_slice * _tao_slice);
  };
  template<>
  struct  Array_Traits<
      oct_array_forany
    >
  {
    static void free (
        oct_array_slice * _tao_slice);
    static oct_array_slice * dup (
        const oct_array_slice * _tao_slice);
    static void copy (
        oct_array_slice * _tao_to,
        const oct_array_slice * _tao_from);
    static oct_array_slice * alloc (void);
    static void zero (
        oct_array_slice * _tao_slice);
  };

#if !defined (_INTERFACEFWD__TRAITS_)
#define _INTERFACEFWD__TRAITS_

  template<>
  struct  Objref_Traits< ::InterfaceFwd>
  {
    static ::InterfaceFwd_ptr duplicate (
        ::InterfaceFwd_ptr p);
    static void release (
        ::InterfaceFwd_ptr p);
    static ::InterfaceFwd_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::InterfaceFwd_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_VBFIXED_STRUCT1__TRAITS_)
#define _VBFIXED_STRUCT1__TRAITS_

  template<>
  struct  Value_Traits<VBfixed_struct1>
  {
    static void add_ref (VBfixed_struct1 *);
    static void remove_ref (VBfixed_struct1 *);
    static void release (VBfixed_struct1 *);
  };

#endif /* end #if !defined */

#if !defined (_VBVARIABLE_STRUCT1__TRAITS_)
#define _VBVARIABLE_STRUCT1__TRAITS_

  template<>
  struct  Value_Traits<VBvariable_struct1>
  {
    static void add_ref (VBvariable_struct1 *);
    static void remove_ref (VBvariable_struct1 *);
    static void release (VBvariable_struct1 *);
  };

#endif /* end #if !defined */

#if !defined (_VBVARIABLE_STRUCT2__TRAITS_)
#define _VBVARIABLE_STRUCT2__TRAITS_

  template<>
  struct  Value_Traits<VBvariable_struct2>
  {
    static void add_ref (VBvariable_struct2 *);
    static void remove_ref (VBvariable_struct2 *);
    static void release (VBvariable_struct2 *);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const Fixed_Struct1 &); // copying version
 void operator<<= (::CORBA::Any &, Fixed_Struct1*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Fixed_Struct1 *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Fixed_Struct1 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const Fixed_Struct1::Bstruct &); // copying version
 void operator<<= (::CORBA::Any &, Fixed_Struct1::Bstruct*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Fixed_Struct1::Bstruct *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Fixed_Struct1::Bstruct *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const Variable_Struct1 &); // copying version
 void operator<<= (::CORBA::Any &, Variable_Struct1*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Variable_Struct1 *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Variable_Struct1 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:41


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, Interface1_ptr); // copying
 void operator<<= (::CORBA::Any &, Interface1_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Interface1_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_ch.cpp:36
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, Pet);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Pet &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/any_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const short_array_forany &);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, short_array_forany &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_union/any_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const Union1 &); // copying version
 void operator<<= (::CORBA::Any &, Union1*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Union1 *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Union1 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const LongSeq &); // copying version
 void operator<<= ( ::CORBA::Any &, LongSeq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, LongSeq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const LongSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/any_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const oct_array_forany &);
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, oct_array_forany &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:47


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= ( ::CORBA::Any &, const PetSeq &); // copying version
 void operator<<= ( ::CORBA::Any &, PetSeq*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, PetSeq *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const PetSeq *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const Variable_Struct2 &); // copying version
 void operator<<= (::CORBA::Any &, Variable_Struct2*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Variable_Struct2 *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Variable_Struct2 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:42


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, const Variable_Struct2::NestedStruct1 &); // copying version
 void operator<<= (::CORBA::Any &, Variable_Struct2::NestedStruct1*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Variable_Struct2::NestedStruct1 *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Variable_Struct2::NestedStruct1 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuebox/any_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, VBfixed_struct1 *); // copying
 void operator<<= (::CORBA::Any &, VBfixed_struct1 **); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, VBfixed_struct1 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuebox/any_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, VBvariable_struct1 *); // copying
 void operator<<= (::CORBA::Any &, VBvariable_struct1 **); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, VBvariable_struct1 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuebox/any_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, VBvariable_struct2 *); // copying
 void operator<<= (::CORBA::Any &, VBvariable_struct2 **); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, VBvariable_struct2 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:41


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, InterfaceFwd_ptr); // copying
 void operator<<= (::CORBA::Any &, InterfaceFwd_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, InterfaceFwd_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Fixed_Struct1 &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Fixed_Struct1 &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Fixed_Struct1::Bstruct &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Fixed_Struct1::Bstruct &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Variable_Struct1 &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Variable_Struct1 &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:41

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Interface1_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Interface1_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:34


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Pet _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Pet &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:99


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const ::short_array_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, ::short_array_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_union/cdr_op_ch.cpp:38


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Union1 &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Union1 &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:65

#if !defined _TAO_CDR_OP_LongSeq_H_
#define _TAO_CDR_OP_LongSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const LongSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    LongSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_LongSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:99


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const ::oct_array_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, ::oct_array_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:65

#if !defined _TAO_CDR_OP_PetSeq_H_
#define _TAO_CDR_OP_PetSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const PetSeq &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    PetSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_PetSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Variable_Struct2 &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Variable_Struct2 &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Variable_Struct2::NestedStruct1 &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Variable_Struct2::NestedStruct1 &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuebox/cdr_op_ch.cpp:39


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const VBfixed_struct1 *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, VBfixed_struct1 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuebox/cdr_op_ch.cpp:39


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const VBvariable_struct1 *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, VBvariable_struct1 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuebox/cdr_op_ch.cpp:39


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const VBvariable_struct2 *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, VBvariable_struct2 *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:41

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const InterfaceFwd_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, InterfaceFwd_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1700
#if defined (__ACE_INLINE__)
#include "vb_structC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

