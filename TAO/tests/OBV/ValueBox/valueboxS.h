// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:458

#ifndef _TAO_IDL_VALUEBOXS_60RSOP_H_
#define _TAO_IDL_VALUEBOXS_60RSOP_H_

#include /**/ "ace/pre.h"

#include "valueboxC.h"
#include "vb_basicS.h"
#include "vb_structS.h"
#include "vb_unionS.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Fixed_Array_SArgument_T.h"
#include "tao/PortableServer/Var_Array_SArgument_T.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:250

  template<>
  class SArg_Traits< ::VBstring>
    : public
        Object_SArg_Traits_T<
            ::VBstring *,
            ::VBstring_var,
            ::VBstring_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:250

  template<>
  class SArg_Traits< ::VBwstring>
    : public
        Object_SArg_Traits_T<
            ::VBwstring *,
            ::VBwstring_var,
            ::VBwstring_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class SArg_Traits< ::TDseqlong>
    : public
        Var_Size_SArg_Traits_T<
            ::TDseqlong,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:250

  template<>
  class SArg_Traits< ::VBseqlong>
    : public
        Object_SArg_Traits_T<
            ::VBseqlong *,
            ::VBseqlong_var,
            ::VBseqlong_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class SArg_Traits< ::LongArray_tag>
    : public
        Fixed_Array_SArg_Traits_T<
            ::LongArray_var,
            ::LongArray_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:250

  template<>
  class SArg_Traits< ::VBlongarray>
    : public
        Object_SArg_Traits_T<
            ::VBlongarray *,
            ::VBlongarray_var,
            ::VBlongarray_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  template<>
  class SArg_Traits< ::StringArray_tag>
    : public
        Var_Array_SArg_Traits_T<
            ::StringArray_out,
            ::StringArray_forany,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:250

  template<>
  class SArg_Traits< ::VBstringarray>
    : public
        Object_SArg_Traits_T<
            ::VBstringarray *,
            ::VBstringarray_var,
            ::VBstringarray_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_TEST__SARG_TRAITS_)
#define _TEST__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Test>
    : public
        Object_SArg_Traits_T<
            ::Test_ptr,
            ::Test_var,
            ::Test_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/interface_sh.cpp:73

class POA_Test;
typedef POA_Test *POA_Test_ptr;

class  POA_Test
  : public virtual PortableServer::ServantBase
{
protected:
  POA_Test (void);

public:
  /// Useful for template programming.
  typedef ::Test _stub_type;
  typedef ::Test_ptr _stub_ptr_type;
  typedef ::Test_var _stub_var_type;

  POA_Test (const POA_Test& rhs);
  virtual ~POA_Test (void);

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);

  ::Test *_this (void);

  virtual const char* _interface_repository_id (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual ::VBlong * basic_op1 (
    ::VBlong * p1,
    ::VBlong *& p2,
    ::VBlong_out p3) = 0;

  static void basic_op1_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual ::vb_basic::M_VBlong * basic_op2 (
    ::vb_basic::M_VBlong * p1,
    ::vb_basic::M_VBlong *& p2,
    ::vb_basic::M_VBlong_out p3) = 0;

  static void basic_op2_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual ::CORBA::Long basic_op3 (
    ::CORBA::Long p1,
    ::CORBA::Long & p2,
    ::CORBA::Long_out p3) = 0;

  static void basic_op3_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual ::VBstring * string_op1 (
    ::VBstring * p1,
    ::VBstring *& p2,
    ::VBstring_out p3) = 0;

  static void string_op1_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual char * string_op2 (
    const char * p1,
    char *& p2,
    ::CORBA::String_out p3) = 0;

  static void string_op2_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual ::VBseqlong * seq_op1 (
    ::VBseqlong * p1,
    ::VBseqlong *& p2,
    ::VBseqlong_out p3) = 0;

  static void seq_op1_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void seq_op2 (
    const ::TDseqlong & p1,
    ::TDseqlong & p2,
    ::TDseqlong_out p3) = 0;

  static void seq_op2_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual ::VBfixed_struct1 * struct_op1 (
    ::VBfixed_struct1 * p1,
    ::VBfixed_struct1 *& p2,
    ::VBfixed_struct1_out p3) = 0;

  static void struct_op1_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void struct_op2 (
    const ::Fixed_Struct1 & p1,
    ::Fixed_Struct1 & p2,
    ::Fixed_Struct1_out p3) = 0;

  static void struct_op2_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual ::VBvariable_struct1 * struct_op3 (
    ::VBvariable_struct1 * p1,
    ::VBvariable_struct1 *& p2,
    ::VBvariable_struct1_out p3) = 0;

  static void struct_op3_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void struct_op4 (
    const ::Variable_Struct1 & p1,
    ::Variable_Struct1 & p2,
    ::Variable_Struct1_out p3) = 0;

  static void struct_op4_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual ::VBlongarray * array_op1 (
    ::VBlongarray * p1,
    ::VBlongarray *& p2,
    ::VBlongarray_out p3) = 0;

  static void array_op1_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void array_op2 (
    const ::LongArray p1,
    ::LongArray p2,
    ::LongArray_out p3) = 0;

  static void array_op2_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual ::VBstringarray * array_op3 (
    ::VBstringarray * p1,
    ::VBstringarray *& p2,
    ::VBstringarray_out p3) = 0;

  static void array_op3_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void array_op4 (
    const ::StringArray p1,
    ::StringArray p2,
    ::StringArray_out p3) = 0;

  static void array_op4_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual ::VBfixed_union1 * union_op1 (
    ::VBfixed_union1 * p1,
    ::VBfixed_union1 *& p2,
    ::VBfixed_union1_out p3) = 0;

  static void union_op1_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void union_op2 (
    const ::Fixed_Union1 & p1,
    ::Fixed_Union1 & p2,
    ::Fixed_Union1_out p3) = 0;

  static void union_op2_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual ::VBvariable_union1 * union_op3 (
    ::VBvariable_union1 * p1,
    ::VBvariable_union1 *& p2,
    ::VBvariable_union1_out p3) = 0;

  static void union_op3_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void union_op4 (
    const ::Variable_Union1 & p1,
    ::Variable_Union1 & p2,
    ::Variable_Union1_out p3) = 0;

  static void union_op4_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void shutdown (
    void) = 0;

  static void shutdown_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};

#include /**/ "ace/post.h"

#endif /* ifndef */

