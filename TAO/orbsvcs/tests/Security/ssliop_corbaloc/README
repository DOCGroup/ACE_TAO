These application tests address various features of TAO's
Naming Service. The functionality is the same as in the
Simple_Naming test, but the difference is that all the
communication is done over SSLIOP and clients are using
INS-style corbaloc URLs.

To run all tests automatically -
  execute Perl script run_test.pl

To run tests manually -
  start the Naming Service (see
  TAO/orbsvcs/Naming_Service/README for valid options).
        Make sure you use " -ORBSvcConf server.conf" and
        "-ORBEndpoint iiop://localhost:23456/ssl_port=12345"

  Then run ./client with one of the options below.
        Make sure you add " -ORBSvcConf client.conf" and
        "-ORBInitRef NameService=corbaloc:ssliop:localhost:12345/NameService"

NOTE: if running tests manually, Naming Service has to be restarted
before each test (this is due to some tests not 'cleaning up' bindings
after themselves).

The following options exist:
---------------------------
-s  Run the Simple test of the Naming Service.

-t  Run the Tree test of the Naming Service.

-e  Run the Exceptions test of the Naming Service

-i  Run the Iterator test of the Naming Service.

-y  Run the Destroy test of the Naming Service.

Persistent test consists of two parts (below).

-p <file_name>
        Run the Persistent Naming Service test, part 1.  Requires an
        argument specifying the name of the file in which to store an ior for
        use by Persistent Naming Service test, part 2.  Note, in order
        to test out persistent capabilities of the Naming Service, the
        Naming Service must be started with -f and -ORBendpoint options.
        The values for these options must be the same for both runs of
        the Naming Service (i.e., for part 1 and part 2 of persistent test).

-c <ior>
        Run the Persistent Naming Service test, part 2.  Requires an
        argument specifying the ior, which was produced in part 1 of
        the test.  Note, in order to test out persistent capabilities
        of the Naming Service, the Naming Service must be started with
        -f and -ORBendpoint options.  The values for these options
        must remain the same for both runs of the Naming Service (i.e.,
        for part 1 and part 2 of persistent test).

        Example of testing persistence on a Unix system:
        $ ../../Naming_Service -f log -ORBendpoint iiop://localhost:20000
        $ ./client -p ior_file
        kill the Naming_Service process
        $ ../../Naming_Service -f log -ORBendpoint iiop://localhost:20000
        $ ./client -c file://ior_file

        where the steps correspond to 1)starting the Naming Service on
        port 20000 in persistent mode, with persistent state being
        stored in file called "log", 2) running the first part of the
        client persistent naming test, and sending its data to file
        called "ior_file", 3) killing the Naming Service process, 4)
        restarting the Naming Service on the same port with the same
        persistent state storage file, and 5) running the second part
        of the client persistence test by specifying the ior from part
        1 in the file format.

        We kill the Naming Service process between 2 client runs to
        make sure it can recreate its state from persistent storage.
        It is necessary to restart the Naming Service on the same
        host/port in order for the persistent IORs from the first
        run to be valid for the second run.

If no option is specified, Simple test is run.  If more than one
option is specified, only one test runs.

DESCRIPTION AND EXPECTED OUTPUT FOR EACH TEST
*******************************************
Please see $TAO_ROOT/orbsvcs/tests/Simple_Naming/README
