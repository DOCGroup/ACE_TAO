// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:458

#ifndef _TAO_IDL_MESSENGERS_FCJBMW_H_
#define _TAO_IDL_MESSENGERS_FCJBMW_H_

#include /**/ "ace/pre.h"

#include "MessengerC.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"
#include "tao/Messaging/AMH_Response_Handler.h"

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_DEVGUIDE_MESSENGER__SARG_TRAITS_)
#define _DEVGUIDE_MESSENGER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::DevGuide::Messenger>
    : public
        Object_SArg_Traits_T<
            ::DevGuide::Messenger_ptr,
            ::DevGuide::Messenger_var,
            ::DevGuide::Messenger_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_DEVGUIDE_AMH_MESSENGEREXCEPTIONHOLDER__SARG_TRAITS_)
#define _DEVGUIDE_AMH_MESSENGEREXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::DevGuide::AMH_MessengerExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::DevGuide::AMH_MessengerExceptionHolder *,
            ::DevGuide::AMH_MessengerExceptionHolder_var,
            ::DevGuide::AMH_MessengerExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:35

namespace POA_DevGuide
{
  

  // TAO_IDL - Generated from
  // be/be_visitor_interface/amh_sh.cpp:46

  class AMH_Messenger;
  typedef AMH_Messenger *AMH_Messenger_ptr;

  class  AMH_Messenger
    : public virtual PortableServer::ServantBase
  {
  protected:
    AMH_Messenger (void);
  
  public:
    AMH_Messenger (const AMH_Messenger& rhs);
    virtual ~AMH_Messenger (void);


    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest &req,
        TAO::Portable_Server::Servant_Upcall *_servant_upcall);
    
    DevGuide::Messenger *_this (void);

  virtual const char* _interface_repository_id (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_operation/amh_sh.cpp:127

  static void send_message_skel (
      TAO_ServerRequest &_tao_req,
      TAO::Portable_Server::Servant_Upcall *_tao_obj,
      TAO_ServantBase *_tao_servant_upcall);
    
  virtual void send_message (
      DevGuide::AMH_MessengerResponseHandler_ptr _tao_rh,
      const char * user_name,
      const char * subject,
      const char * message
    ) = 0;
  
};

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_sh.cpp:73

class Messenger;
typedef Messenger *Messenger_ptr;

class  Messenger
  : public virtual PortableServer::ServantBase
{
protected:
  Messenger (void);

public:
  /// Useful for template programming.
  typedef ::DevGuide::Messenger _stub_type;
  typedef ::DevGuide::Messenger_ptr _stub_ptr_type;
  typedef ::DevGuide::Messenger_var _stub_var_type;

  Messenger (const Messenger& rhs);
  virtual ~Messenger (void);

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);
  
  ::DevGuide::Messenger *_this (void);
  
  virtual const char* _interface_repository_id (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual ::CORBA::Boolean send_message (
    const char * user_name,
    const char * subject,
    char *& message) = 0;

  static void send_message_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};

// TAO_IDL - Generated from
// be/be_visitor_interface/amh_rh_sh.cpp:50

class TAO_AMH_MessengerResponseHandler;
typedef TAO_AMH_MessengerResponseHandler *TAO_AMH_MessengerResponseHandler_ptr;

class  TAO_AMH_MessengerResponseHandler
  : public TAO_AMH_Response_Handler,
    public ::DevGuide::AMH_MessengerResponseHandler
{
public:
  TAO_AMH_MessengerResponseHandler (void);
  virtual ~TAO_AMH_MessengerResponseHandler (void);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/amh_rh_sh.cpp:60

  virtual void send_message (
    ::CORBA::Boolean return_value,
    const char * message);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/amh_rh_sh.cpp:60

  virtual void send_message_excep (
    ::DevGuide::AMH_MessengerExceptionHolder * holder);
};

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:66

} // module DevGuide

#include /**/ "ace/post.h"

#endif /* ifndef */

