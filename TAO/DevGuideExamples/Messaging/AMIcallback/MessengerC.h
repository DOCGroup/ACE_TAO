// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:149

#ifndef _TAO_IDL_MESSENGERC_WTZLIK_H_
#define _TAO_IDL_MESSENGERC_WTZLIK_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/Valuetype/Valuetype_Adapter_Factory_Impl.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/UserException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/Messaging/Messaging.h"
#include "tao/Valuetype/Value_VarOut_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 4 || TAO_MICRO_VERSION != 1
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_root/root_ch.cpp:157
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/exception_ch.cpp:41

class  MessengerUnableToSendMessage : public ::CORBA::UserException
{
public:

  MessengerUnableToSendMessage (void);
  MessengerUnableToSendMessage (const MessengerUnableToSendMessage &);
  ~MessengerUnableToSendMessage (void);

  MessengerUnableToSendMessage &operator= (const MessengerUnableToSendMessage &);

  static void _tao_any_destructor (void *);

  static MessengerUnableToSendMessage *_downcast ( ::CORBA::Exception *);
  static const MessengerUnableToSendMessage *_downcast ( ::CORBA::Exception const *);

  static ::CORBA::Exception *_alloc (void);

  virtual ::CORBA::Exception *_tao_duplicate (void) const;

  virtual void _raise (void) const;

  virtual void _tao_encode (TAO_OutputCDR &cdr) const;
  virtual void _tao_decode (TAO_InputCDR &cdr);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_MessengerUnableToSendMessage;

// TAO_IDL - Generated from
// be/be_interface.cpp:748

#if !defined (_MESSENGER__VAR_OUT_CH_)
#define _MESSENGER__VAR_OUT_CH_

class AMI_MessengerHandler;
typedef AMI_MessengerHandler *AMI_MessengerHandler_ptr;

class Messenger;
typedef Messenger *Messenger_ptr;

typedef
  TAO_Objref_Var_T<
      Messenger
    >
  Messenger_var;

typedef
  TAO_Objref_Out_T<
      Messenger
    >
  Messenger_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ch.cpp:40

class  Messenger
  : public virtual ::CORBA::Object
{
public:
  friend class TAO::Narrow_Utils<Messenger>;

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef Messenger_ptr _ptr_type;
  typedef Messenger_var _var_type;
  typedef Messenger_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static Messenger_ptr _duplicate (Messenger_ptr obj);

  static void _tao_release (Messenger_ptr obj);

  static Messenger_ptr _narrow (::CORBA::Object_ptr obj);
  static Messenger_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static Messenger_ptr _nil (void);

  virtual ::CORBA::Boolean send_message (
    const char * user_name,
    const char * subject,
    char *& message,
    ::CORBA::Long_out time_sent);

  virtual void sendc_send_message (
    ::AMI_MessengerHandler_ptr ami_handler,
    const char * user_name,
    const char * subject,
    const char * message);

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:137

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  Messenger (void);

  // Concrete non-local interface only.
  Messenger (
      ::IOP::IOR *ior,
      TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  Messenger (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0);

  virtual ~Messenger (void);

private:
  // Private and unimplemented for concrete interfaces.
  Messenger (const Messenger &);

  void operator= (const Messenger &);
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Messenger;

// TAO_IDL - Generated from
// be/be_interface.cpp:748

#if !defined (_AMI_MESSENGERHANDLER__VAR_OUT_CH_)
#define _AMI_MESSENGERHANDLER__VAR_OUT_CH_

class AMI_MessengerHandler;
typedef AMI_MessengerHandler *AMI_MessengerHandler_ptr;

typedef
  TAO_Objref_Var_T<
      AMI_MessengerHandler
    >
  AMI_MessengerHandler_var;

typedef
  TAO_Objref_Out_T<
      AMI_MessengerHandler
    >
  AMI_MessengerHandler_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ch.cpp:40

class  AMI_MessengerHandler
  : public virtual ::Messaging::ReplyHandler

{
public:
  friend class TAO::Narrow_Utils<AMI_MessengerHandler>;

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef AMI_MessengerHandler_ptr _ptr_type;
  typedef AMI_MessengerHandler_var _var_type;
  typedef AMI_MessengerHandler_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static AMI_MessengerHandler_ptr _duplicate (AMI_MessengerHandler_ptr obj);

  static void _tao_release (AMI_MessengerHandler_ptr obj);

  static AMI_MessengerHandler_ptr _narrow (::CORBA::Object_ptr obj);
  static AMI_MessengerHandler_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static AMI_MessengerHandler_ptr _nil (void);

  virtual void send_message (
    ::CORBA::Boolean ami_return_val,
    const char * message,
    ::CORBA::Long time_sent);

  static void
  send_message_reply_stub (
    TAO_InputCDR &_tao_reply_cdr,
    ::Messaging::ReplyHandler_ptr _tao_reply_handler,
    ::CORBA::ULong reply_status);

  virtual void send_message_excep (
    ::Messaging::ExceptionHolder * excep_holder);

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:137

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  AMI_MessengerHandler (void);

  // Concrete non-local interface only.
  AMI_MessengerHandler (
      ::IOP::IOR *ior,
      TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  AMI_MessengerHandler (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0);

  virtual ~AMI_MessengerHandler (void);

private:
  // Private and unimplemented for concrete interfaces.
  AMI_MessengerHandler (const AMI_MessengerHandler &);

  void operator= (const AMI_MessengerHandler &);
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_AMI_MessengerHandler;

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_)
#define _MESSAGING_EXCEPTIONHOLDER__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Messaging::ExceptionHolder>
    : public
        Object_Arg_Traits_T<
            ::Messaging::ExceptionHolder *,
            ::Messaging::ExceptionHolder_var,
            ::Messaging::ExceptionHolder_out,
            TAO::Value_Traits<Messaging::ExceptionHolder>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_MESSENGER__ARG_TRAITS_)
#define _MESSENGER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::Messenger>
    : public
        Object_Arg_Traits_T<
            ::Messenger_ptr,
            ::Messenger_var,
            ::Messenger_out,
            TAO::Objref_Traits<Messenger>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_AMI_MESSENGERHANDLER__ARG_TRAITS_)
#define _AMI_MESSENGERHANDLER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::AMI_MessengerHandler>
    : public
        Object_Arg_Traits_T<
            ::AMI_MessengerHandler_ptr,
            ::AMI_MessengerHandler_var,
            ::AMI_MessengerHandler_out,
            TAO::Objref_Traits<AMI_MessengerHandler>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_MESSENGER__TRAITS_)
#define _MESSENGER__TRAITS_

  template<>
  struct  Objref_Traits< ::Messenger>
  {
    static ::Messenger_ptr duplicate (
        ::Messenger_ptr p);
    static void release (
        ::Messenger_ptr p);
    static ::Messenger_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Messenger_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_AMI_MESSENGERHANDLER__TRAITS_)
#define _AMI_MESSENGERHANDLER__TRAITS_

  template<>
  struct  Objref_Traits< ::AMI_MessengerHandler>
  {
    static ::AMI_MessengerHandler_ptr duplicate (
        ::AMI_MessengerHandler_ptr p);
    static void release (
        ::AMI_MessengerHandler_ptr p);
    static ::AMI_MessengerHandler_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::AMI_MessengerHandler_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/any_op_ch.cpp:38
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 void operator<<= (::CORBA::Any &, const MessengerUnableToSendMessage &); // copying version
 void operator<<= (::CORBA::Any &, MessengerUnableToSendMessage*); // noncopying version
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, MessengerUnableToSendMessage *&); // deprecated
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const MessengerUnableToSendMessage *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:41


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, Messenger_ptr); // copying
 void operator<<= (::CORBA::Any &, Messenger_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Messenger_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:41


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, AMI_MessengerHandler_ptr); // copying
 void operator<<= (::CORBA::Any &, AMI_MessengerHandler_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, AMI_MessengerHandler_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_ch.cpp:37
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const MessengerUnableToSendMessage &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, MessengerUnableToSendMessage &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:41

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Messenger_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Messenger_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:41

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const AMI_MessengerHandler_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, AMI_MessengerHandler_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1700
#if defined (__ACE_INLINE__)
#include "MessengerC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

