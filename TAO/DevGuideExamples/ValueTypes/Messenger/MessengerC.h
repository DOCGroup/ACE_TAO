// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:149

#ifndef _TAO_IDL_MESSENGERC_06XVJ8_H_
#define _TAO_IDL_MESSENGERC_06XVJ8_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/Valuetype/Valuetype_Adapter_Factory_Impl.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Valuetype/Value_VarOut_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 4 || TAO_MICRO_VERSION != 1
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO

// TAO_IDL - Generated from
// be/be_visitor_root/root_ch.cpp:157
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:564



#if !defined (_MESSAGE__VAR_OUT_CH_)
#define _MESSAGE__VAR_OUT_CH_

class Message;
typedef
  TAO_Value_Var_T<
      Message
    >
  Message_var;

typedef
  TAO_Value_Out_T<
      Message
    >
  Message_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:50

class  Message
  : public virtual ::CORBA::ValueBase
{
public:

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef Message * _ptr_type;
  typedef Message_var _var_type;
  typedef Message_out _out_type;

  static void _tao_any_destructor (void *);

  static Message* _downcast ( ::CORBA::ValueBase *v);

  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      Message *&new_object);

  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:99

#if !defined (_MESSAGE_ADDRLIST_CH_)
#define _MESSAGE_ADDRLIST_CH_

  class AddrList;

  typedef
    ::TAO_VarSeq_Var_T<
        AddrList
      >
    AddrList_var;

  typedef
    ::TAO_Seq_Out_T<
        AddrList
      >
    AddrList_out;

  class  AddrList
    : public
        ::TAO::unbounded_basic_string_sequence<char>
  {
  public:
    AddrList (void);
    AddrList ( ::CORBA::ULong max);
    AddrList (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Char ** buffer,
      ::CORBA::Boolean release = false);
    AddrList (const AddrList &);
    virtual ~AddrList (void);


    // TAO_IDL - Generated from
    // be/be_type.cpp:304


    typedef AddrList_var _var_type;
    typedef AddrList_out _out_type;

    static void _tao_any_destructor (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  static ::CORBA::TypeCode_ptr const _tc_AddrList;

protected:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:533

  virtual void addrs_ (const Message::AddrList &) = 0;
  virtual const Message::AddrList &addrs_ (void) const = 0;
  virtual Message::AddrList &addrs_ (void) = 0;

protected:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:608

  virtual void user_ (char *val) = 0;
  virtual void user_ (const char *val) = 0;
  virtual void user_ (const ::CORBA::String_var &val) = 0;
  virtual const char *user_ (void) const = 0;

protected:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:608

  virtual void subject_ (char *val) = 0;
  virtual void subject_ (const char *val) = 0;
  virtual void subject_ (const ::CORBA::String_var &val) = 0;
  virtual const char *subject_ (void) const = 0;

protected:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:608

  virtual void text_ (char *val) = 0;
  virtual void text_ (const char *val) = 0;
  virtual void text_ (const ::CORBA::String_var &val) = 0;
  virtual const char *text_ (void) const = 0;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:396

public:
  virtual ::Message::AddrList * getAddresses (void) = 0;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:396

public:
  virtual void addAddress (
      const char *
    ) = 0;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:396

public:
  virtual char * user (void) = 0;

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:396

public:
  virtual void user (
      const char *
    ) = 0;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:396

public:
  virtual char * subject (void) = 0;

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:396

public:
  virtual void subject (
      const char *
    ) = 0;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:396

public:
  virtual char * text (void) = 0;

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:396

public:
  virtual void text (
      const char *
    ) = 0;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:396

public:
  virtual void print (void) = 0;

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:238

protected:
  Message (void);
  virtual ~Message (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;

private:
  Message (const Message &);
  void operator= (const Message &);

protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Message (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Message (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Message;

// TAO_IDL - Generated from
// be/be_interface.cpp:748

#if !defined (_MESSENGER__VAR_OUT_CH_)
#define _MESSENGER__VAR_OUT_CH_

class Messenger;
typedef Messenger *Messenger_ptr;

typedef
  TAO_Objref_Var_T<
      Messenger
    >
  Messenger_var;

typedef
  TAO_Objref_Out_T<
      Messenger
    >
  Messenger_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ch.cpp:40

class  Messenger
  : public virtual ::CORBA::Object
{
public:
  friend class TAO::Narrow_Utils<Messenger>;

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef Messenger_ptr _ptr_type;
  typedef Messenger_var _var_type;
  typedef Messenger_out _out_type;

  static void _tao_any_destructor (void *);

  // The static operations.
  static Messenger_ptr _duplicate (Messenger_ptr obj);

  static void _tao_release (Messenger_ptr obj);

  static Messenger_ptr _narrow (::CORBA::Object_ptr obj);
  static Messenger_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static Messenger_ptr _nil (void);

  virtual ::CORBA::Boolean send_message (
    ::Message *& msg);

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:137

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  Messenger (void);

  // Concrete non-local interface only.
  Messenger (
      ::IOP::IOR *ior,
      TAO_ORB_Core *orb_core);

  // Non-local interface only.
  Messenger (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0);

  virtual ~Messenger (void);

private:
  // Private and unimplemented for concrete interfaces.
  Messenger (const Messenger &);

  void operator= (const Messenger &);
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Messenger;

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_MESSAGE__ARG_TRAITS_)
#define _MESSAGE__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Message>
    : public
        Object_Arg_Traits_T<
            ::Message *,
            ::Message_var,
            ::Message_out,
            TAO::Value_Traits<Message>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class Arg_Traits< ::Message::AddrList>
    : public
        Var_Size_Arg_Traits_T<
            ::Message::AddrList,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_MESSENGER__ARG_TRAITS_)
#define _MESSENGER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::Messenger>
    : public
        Object_Arg_Traits_T<
            ::Messenger_ptr,
            ::Messenger_var,
            ::Messenger_out,
            TAO::Objref_Traits<Messenger>,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

// OBV_ class
class  OBV_Message
  : public virtual Message
{

public:

protected:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:533

  virtual void addrs_ (const Message::AddrList &);
  virtual const Message::AddrList &addrs_ (void) const;
  virtual Message::AddrList &addrs_ (void);

protected:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:608

  virtual void user_ (char *val);
  virtual void user_ (const char *val);
  virtual void user_ (const ::CORBA::String_var &val);
  virtual const char *user_ (void) const;

protected:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:608

  virtual void subject_ (char *val);
  virtual void subject_ (const char *val);
  virtual void subject_ (const ::CORBA::String_var &val);
  virtual const char *subject_ (void) const;

protected:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:608

  virtual void text_ (char *val);
  virtual void text_ (const char *val);
  virtual void text_ (const ::CORBA::String_var &val);
  virtual const char *text_ (void) const;

protected:
  OBV_Message (void);
  OBV_Message (
      const ::Message::AddrList & _tao_init_addrs_,
      const char * _tao_init_user_,
      const char * _tao_init_subject_,
      const char * _tao_init_text_
    );
  virtual ~OBV_Message (void);

protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Message (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Message (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  AddrList _pd_addrs_;
  ::TAO::String_Manager _pd_user_;
  ::TAO::String_Manager _pd_subject_;
  ::TAO::String_Manager _pd_text_;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_MESSAGE__TRAITS_)
#define _MESSAGE__TRAITS_

  template<>
  struct  Value_Traits<Message>
  {
    static void add_ref (Message *);
    static void remove_ref (Message *);
    static void release (Message *);
  };

#endif /* end #if !defined */

#if !defined (_MESSENGER__TRAITS_)
#define _MESSENGER__TRAITS_

  template<>
  struct  Objref_Traits< ::Messenger>
  {
    static ::Messenger_ptr duplicate (
        ::Messenger_ptr p);
    static void release (
        ::Messenger_ptr p);
    static ::Messenger_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Messenger_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/any_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, Message *); // copying
 void operator<<= (::CORBA::Any &, Message **); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Message *&);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:41


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 void operator<<= (::CORBA::Any &, Messenger_ptr); // copying
 void operator<<= (::CORBA::Any &, Messenger_ptr *); // non-copying
 ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Messenger_ptr &);
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (Message *);
  extern  void remove_ref (Message *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Message *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Message *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:65

#if !defined _TAO_CDR_OP_Message_AddrList_H_
#define _TAO_CDR_OP_Message_AddrList_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Message::AddrList &_tao_sequence);
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Message::AddrList &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Message_AddrList_H_ */

// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:41

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Messenger_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Messenger_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1700
#if defined (__ACE_INLINE__)
#include "MessengerC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

