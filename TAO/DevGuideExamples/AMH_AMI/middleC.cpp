// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:373

#include "amh_ami_pch.h"
#include "middleC.h"
#include "tao/AnyTypeCode/Null_RefCount_Policy.h"
#include "tao/AnyTypeCode/TypeCode_Constants.h"
#include "tao/AnyTypeCode/Alias_TypeCode_Static.h"
#include "tao/AnyTypeCode/Objref_TypeCode_Static.h"
#include "tao/AnyTypeCode/String_TypeCode_Static.h"
#include "tao/AnyTypeCode/Value_TypeCode_Static.h"
#include "tao/AnyTypeCode/TypeCode_Value_Field.h"
#include "tao/CDR.h"
#include "tao/Exception_Data.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Messaging/Asynch_Invocation_Adapter.h"
#include "tao/Messaging/ExceptionHolder_i.h"
#include "tao/Object_T.h"
#include "tao/CDR.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/AnyTypeCode/Any_Impl_T.h"
#include "ace/OS_NS_string.h"
#include "ace/Auto_Ptr.h"

#if !defined (__ACE_INLINE__)
#include "middleC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:48

// Traits specializations for Middle.

Middle_ptr
TAO::Objref_Traits<Middle>::duplicate (
    Middle_ptr p)
{
  return Middle::_duplicate (p);
}

void
TAO::Objref_Traits<Middle>::release (
    Middle_ptr p)
{
  ::CORBA::release (p);
}

Middle_ptr
TAO::Objref_Traits<Middle>::nil (void)
{
  return Middle::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Middle>::marshal (
    const Middle_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:88

char *
Middle::get_the_answer (
  const char * question)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  TAO::Arg_Traits< char *>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_question (question);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_question
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "get_the_answer",
      14,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY

    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/ami_cs.cpp:55

void
Middle::sendc_get_the_answer (
  ::AMI_MiddleHandler_ptr ami_handler,
  const char * question)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }



  TAO::Arg_Traits<void>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_question (question);

  TAO::Argument *_the_tao_operation_signature[] =
    {
      &_tao_retval,
      &_tao_question
    };

  TAO::Asynch_Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "get_the_answer",
      14,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
    );

  _tao_call.invoke (
      ami_handler,
      &AMI_MiddleHandler::get_the_answer_reply_stub
    );
}

Middle::Middle (void)
{
}

Middle::~Middle (void)
{
}

void
Middle::_tao_any_destructor (void *_tao_void_pointer)
{
  Middle *_tao_tmp_pointer =
    static_cast<Middle *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

Middle_ptr
Middle::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<Middle>::narrow (
        _tao_objref,
        "IDL:Middle:1.0");
}

Middle_ptr
Middle::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<Middle>::unchecked_narrow (
        _tao_objref);
}

Middle_ptr
Middle::_nil (void)
{
  return 0;
}

Middle_ptr
Middle::_duplicate (Middle_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Middle::_tao_release (Middle_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Middle::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:Middle:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* Middle::_interface_repository_id (void) const
{
  return "IDL:Middle:1.0";
}

::CORBA::Boolean
Middle::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:70

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_Middle (
    ::CORBA::tk_objref,
    "IDL:Middle:1.0",
    "Middle");

::CORBA::TypeCode_ptr const _tc_Middle =
  &_tao_tc_Middle;

// TAO_IDL - Generated from
// be/be_visitor_typecode/value_typecode.cpp:65

static TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const * const _tao_fields_AMH_MiddleExceptionHolder = 0;
static TAO::TypeCode::Value<char const *,
                     ::CORBA::TypeCode_ptr const *,
                     TAO::TypeCode::Value_Field<char const *, ::CORBA::TypeCode_ptr const *> const *,
                     TAO::Null_RefCount_Policy>
  _tao_tc_AMH_MiddleExceptionHolder (
    ::CORBA::tk_value,
    "IDL:AMH_MiddleExceptionHolder:1.0",
    "AMH_MiddleExceptionHolder",
    ::CORBA::VM_NONE,
    &::CORBA::_tc_null,
    _tao_fields_AMH_MiddleExceptionHolder,
    0);

::CORBA::TypeCode_ptr const _tc_AMH_MiddleExceptionHolder =
  &_tao_tc_AMH_MiddleExceptionHolder;

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_cs.cpp:53

void
TAO::Value_Traits<AMH_MiddleExceptionHolder>::add_ref (
    AMH_MiddleExceptionHolder * p)
{
  ::CORBA::add_ref (p);
}

void
TAO::Value_Traits<AMH_MiddleExceptionHolder>::remove_ref (
    AMH_MiddleExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

void
TAO::Value_Traits<AMH_MiddleExceptionHolder>::release (
    AMH_MiddleExceptionHolder * p)
{
  ::CORBA::remove_ref (p);
}

AMH_MiddleExceptionHolder *
AMH_MiddleExceptionHolder::_downcast ( ::CORBA::ValueBase *v)
{
  return dynamic_cast< ::AMH_MiddleExceptionHolder * > (v);
}

const char *
AMH_MiddleExceptionHolder::_tao_obv_repository_id (void) const
{
  return this->_tao_obv_static_repository_id ();
}

void
AMH_MiddleExceptionHolder::_tao_obv_truncatable_repo_ids (Repository_Id_List& ids) const
{
  ids.push_back (this->_tao_obv_static_repository_id ());
}

void
AMH_MiddleExceptionHolder::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_MiddleExceptionHolder *_tao_tmp_pointer =
    static_cast<AMH_MiddleExceptionHolder *> (_tao_void_pointer);
  ::CORBA::remove_ref (_tao_tmp_pointer);
}

// TAO extension - the virtual _type method.
::CORBA::TypeCode_ptr AMH_MiddleExceptionHolder::_tao_type (void) const
{
  return ::_tc_AMH_MiddleExceptionHolder;
}

AMH_MiddleExceptionHolder::~AMH_MiddleExceptionHolder (void)
{}

::CORBA::ValueBase *
AMH_MiddleExceptionHolder::_copy_value (void)
{
  ::CORBA::ValueBase *ret_val = 0;
  ACE_NEW_THROW_EX (
    ret_val,
    AMH_MiddleExceptionHolder (),
    ::CORBA::NO_MEMORY ()
  );
  return ret_val;
}

::CORBA::Boolean
AMH_MiddleExceptionHolder::_tao_marshal_v (TAO_OutputCDR &) const
{
  return true;
}

::CORBA::Boolean
AMH_MiddleExceptionHolder::_tao_unmarshal_v (TAO_InputCDR &)
{
  return true;
}

::CORBA::Boolean
AMH_MiddleExceptionHolder::_tao_match_formal_type (ptrdiff_t ) const
{
  return false;
}

::CORBA::Boolean
AMH_MiddleExceptionHolder::_tao_marshal__AMH_MiddleExceptionHolder (TAO_OutputCDR &, TAO_ChunkInfo&) const
{
  return true;
}

::CORBA::Boolean
AMH_MiddleExceptionHolder::_tao_unmarshal__AMH_MiddleExceptionHolder (TAO_InputCDR &, TAO_ChunkInfo&)
{
  return true;
}

::CORBA::Boolean
AMH_MiddleExceptionHolder::_tao_unmarshal (
    TAO_InputCDR &strm,
    AMH_MiddleExceptionHolder *&new_object
  )
{
  ::CORBA::ValueBase *base = 0;
  ::CORBA::Boolean is_indirected = false;
  ::CORBA::Boolean is_null_object = false;
  ::CORBA::Boolean const retval =
    ::CORBA::ValueBase::_tao_unmarshal_pre (
        strm,
        base,
        AMH_MiddleExceptionHolder::_tao_obv_static_repository_id (),
        is_null_object,
        is_indirected
      );

  ::CORBA::ValueBase_var owner (base);

  if (!retval)
    return false;

  if (is_null_object)
    return true;

  if (!is_indirected && !base->_tao_unmarshal_v (strm))
    return false;

  // Now base must point to the unmarshaled object.
  // Align the pointer to the right subobject.
  new_object = AMH_MiddleExceptionHolder::_downcast (base);
  if (0 == new_object)
    return false;

  if (is_indirected)
    new_object->_add_ref ();

  owner._retn ();
  return true;
}

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_cs.cpp:421

void
AMH_MiddleExceptionHolder::raise_get_the_answer (void)
{
auto_ptr< ::CORBA::Exception> safety (this->exception);
this->exception->_raise ();
}


// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_cs.cpp:421

void
AMH_MiddleExceptionHolder::raise_sendc_get_the_answer (void)
{
auto_ptr< ::CORBA::Exception> safety (this->exception);
this->exception->_raise ();
}


// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:48

// Traits specializations for AMH_MiddleResponseHandler.

AMH_MiddleResponseHandler_ptr
TAO::Objref_Traits<AMH_MiddleResponseHandler>::duplicate (
    AMH_MiddleResponseHandler_ptr p)
{
  return AMH_MiddleResponseHandler::_duplicate (p);
}

void
TAO::Objref_Traits<AMH_MiddleResponseHandler>::release (
    AMH_MiddleResponseHandler_ptr p)
{
  ::CORBA::release (p);
}

AMH_MiddleResponseHandler_ptr
TAO::Objref_Traits<AMH_MiddleResponseHandler>::nil (void)
{
  return AMH_MiddleResponseHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<AMH_MiddleResponseHandler>::marshal (
    const AMH_MiddleResponseHandler_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

AMH_MiddleResponseHandler::AMH_MiddleResponseHandler (void)
{}

AMH_MiddleResponseHandler::~AMH_MiddleResponseHandler (void)
{
}

void
AMH_MiddleResponseHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMH_MiddleResponseHandler *_tao_tmp_pointer =
    static_cast<AMH_MiddleResponseHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

AMH_MiddleResponseHandler_ptr
AMH_MiddleResponseHandler::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return AMH_MiddleResponseHandler::_duplicate (
      dynamic_cast<AMH_MiddleResponseHandler_ptr> (_tao_objref)
    );
}

AMH_MiddleResponseHandler_ptr
AMH_MiddleResponseHandler::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return AMH_MiddleResponseHandler::_duplicate (
      dynamic_cast<AMH_MiddleResponseHandler_ptr> (_tao_objref)
    );
}

AMH_MiddleResponseHandler_ptr
AMH_MiddleResponseHandler::_nil (void)
{
  return 0;
}

AMH_MiddleResponseHandler_ptr
AMH_MiddleResponseHandler::_duplicate (AMH_MiddleResponseHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
AMH_MiddleResponseHandler::_tao_release (AMH_MiddleResponseHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
AMH_MiddleResponseHandler::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:AMH_MiddleResponseHandler:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* AMH_MiddleResponseHandler::_interface_repository_id (void) const
{
  return "IDL:AMH_MiddleResponseHandler:1.0";
}

::CORBA::Boolean
AMH_MiddleResponseHandler::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:70

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_AMH_MiddleResponseHandler (
    ::CORBA::tk_local_interface,
    "IDL:AMH_MiddleResponseHandler:1.0",
    "AMH_MiddleResponseHandler");

::CORBA::TypeCode_ptr const _tc_AMH_MiddleResponseHandler =
  &_tao_tc_AMH_MiddleResponseHandler;

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:48

// Traits specializations for AMI_MiddleHandler.

AMI_MiddleHandler_ptr
TAO::Objref_Traits<AMI_MiddleHandler>::duplicate (
    AMI_MiddleHandler_ptr p)
{
  return AMI_MiddleHandler::_duplicate (p);
}

void
TAO::Objref_Traits<AMI_MiddleHandler>::release (
    AMI_MiddleHandler_ptr p)
{
  ::CORBA::release (p);
}

AMI_MiddleHandler_ptr
TAO::Objref_Traits<AMI_MiddleHandler>::nil (void)
{
  return AMI_MiddleHandler::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<AMI_MiddleHandler>::marshal (
    const AMI_MiddleHandler_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:88

void
AMI_MiddleHandler::get_the_answer (
  const char * ami_return_val)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_ami_return_val (ami_return_val);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_ami_return_val
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "get_the_answer",
      14,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY

    );

  _tao_call.invoke (0, 0);
}

void
AMI_MiddleHandler::get_the_answer_reply_stub (
  TAO_InputCDR &_tao_in,
  ::Messaging::ReplyHandler_ptr _tao_reply_handler,
  ::CORBA::ULong reply_status)
{
  // Retrieve Reply Handler object.
  AMI_MiddleHandler_var _tao_reply_handler_object =
    AMI_MiddleHandler::_narrow (_tao_reply_handler);

  // Exception handling
  switch (reply_status)
  {
    case TAO_AMI_REPLY_OK:
    {

      ::CORBA::String_var ami_return_val;      // Demarshall all the arguments.
      if (!(

            (_tao_in >> ami_return_val.out ())
         ))
        throw ::CORBA::MARSHAL ();

      // Invoke the call back method.
      _tao_reply_handler_object->get_the_answer (

          ami_return_val.in ()
        );
      break;
    }
    case TAO_AMI_REPLY_USER_EXCEPTION:
    case TAO_AMI_REPLY_SYSTEM_EXCEPTION:
    {
      const ACE_Message_Block* cdr = _tao_in.start ();
      ::CORBA::OctetSeq _tao_marshaled_exception (
          static_cast <CORBA::ULong> (cdr->length ()),
          static_cast <CORBA::ULong> (cdr->length ()),
          reinterpret_cast <unsigned char*> (cdr->rd_ptr ()),
          0
        );
      ::Messaging::ExceptionHolder* exception_holder_ptr = 0;
      ACE_NEW (
          exception_holder_ptr,
          ::TAO::ExceptionHolder (
            (reply_status == TAO_AMI_REPLY_SYSTEM_EXCEPTION),
            _tao_in.byte_order (),
            _tao_marshaled_exception,
            0,
            0,
            _tao_in.char_translator (),
            _tao_in.wchar_translator ())
          );

      ::Messaging::ExceptionHolder_var exception_holder_var = exception_holder_ptr;
      _tao_reply_handler_object->get_the_answer_excep (
          exception_holder_var
        );
      break;
    }
    case TAO_AMI_REPLY_NOT_OK:
      // @@ Michael: Not even the spec mentions this case.
      //             We have to think about this case.
      break;
  }
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:88

void
AMI_MiddleHandler::get_the_answer_excep (
  ::Messaging::ExceptionHolder * excep_holder)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Messaging::ExceptionHolder>::in_arg_val _tao_excep_holder (excep_holder);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_excep_holder
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "get_the_answer_excep",
      20,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY

    );

  _tao_call.invoke (0, 0);
}

AMI_MiddleHandler::AMI_MiddleHandler (void)
{
}

AMI_MiddleHandler::~AMI_MiddleHandler (void)
{
}

void
AMI_MiddleHandler::_tao_any_destructor (void *_tao_void_pointer)
{
  AMI_MiddleHandler *_tao_tmp_pointer =
    static_cast<AMI_MiddleHandler *> (_tao_void_pointer);
  ::CORBA::release (_tao_tmp_pointer);
}

AMI_MiddleHandler_ptr
AMI_MiddleHandler::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<AMI_MiddleHandler>::narrow (
        _tao_objref,
        "IDL:AMI_MiddleHandler:1.0");
}

AMI_MiddleHandler_ptr
AMI_MiddleHandler::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<AMI_MiddleHandler>::unchecked_narrow (
        _tao_objref);
}

AMI_MiddleHandler_ptr
AMI_MiddleHandler::_nil (void)
{
  return 0;
}

AMI_MiddleHandler_ptr
AMI_MiddleHandler::_duplicate (AMI_MiddleHandler_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
AMI_MiddleHandler::_tao_release (AMI_MiddleHandler_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
AMI_MiddleHandler::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/Messaging/ReplyHandler:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:AMI_MiddleHandler:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* AMI_MiddleHandler::_interface_repository_id (void) const
{
  return "IDL:AMI_MiddleHandler:1.0";
}

::CORBA::Boolean
AMI_MiddleHandler::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:70

static TAO::TypeCode::Objref<char const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_AMI_MiddleHandler (
    ::CORBA::tk_objref,
    "IDL:AMI_MiddleHandler:1.0",
    "AMI_MiddleHandler");

::CORBA::TypeCode_ptr const _tc_AMI_MiddleHandler =
  &_tao_tc_AMI_MiddleHandler;

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_cs.cpp:44

OBV_AMH_MiddleExceptionHolder::OBV_AMH_MiddleExceptionHolder (void)
: require_truncation_ (false)
{}

OBV_AMH_MiddleExceptionHolder::~OBV_AMH_MiddleExceptionHolder (void)
{}

::CORBA::Boolean
OBV_AMH_MiddleExceptionHolder::_tao_marshal__AMH_MiddleExceptionHolder (TAO_OutputCDR &strm, TAO_ChunkInfo& ci) const
{
  return _tao_marshal_state (strm, ci);
}

::CORBA::Boolean
OBV_AMH_MiddleExceptionHolder::_tao_unmarshal__AMH_MiddleExceptionHolder (TAO_InputCDR &strm, TAO_ChunkInfo& ci)
{
  return _tao_unmarshal_state (strm, ci);
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:38
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<Middle>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    Middle_ptr _tao_elem)
{
  Middle_ptr _tao_objptr =
    Middle::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    Middle_ptr *_tao_elem)
{
  TAO::Any_Impl_T<Middle>::insert (
      _tao_any,
      Middle::_tao_any_destructor,
      _tc_Middle,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    Middle_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<Middle>::extract (
        _tao_any,
        Middle::_tao_any_destructor,
        _tc_Middle,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/any_op_cs.cpp:45
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<AMH_MiddleExceptionHolder>::to_value (
      ::CORBA::ValueBase *&_tao_elem
    ) const
  {
    ::CORBA::add_ref (this->value_);
    _tao_elem = this->value_;
    return true;
  }
}


TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    AMH_MiddleExceptionHolder *_tao_elem
  )
{
  #ifdef TAO_VALUETYPE_COPYING_ANY_INSERTION_USES_COPY_VALUE
    AMH_MiddleExceptionHolder *_tao_copy =
      _tao_elem ?
        AMH_MiddleExceptionHolder::_downcast (_tao_elem->_copy_value ())
        : 0;
    _tao_any <<= &_tao_copy;
  #else
    ::CORBA::add_ref (_tao_elem);
    _tao_any <<= &_tao_elem;
  #endif
}

// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    AMH_MiddleExceptionHolder **_tao_elem
  )
{
  TAO::Any_Impl_T<AMH_MiddleExceptionHolder>::insert (
      _tao_any,
      AMH_MiddleExceptionHolder::_tao_any_destructor,
      _tc_AMH_MiddleExceptionHolder,
      *_tao_elem
    );
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    AMH_MiddleExceptionHolder *&_tao_elem
  )
{
  return
    TAO::Any_Impl_T<AMH_MiddleExceptionHolder>::extract (
        _tao_any,
        AMH_MiddleExceptionHolder::_tao_any_destructor,
        _tc_AMH_MiddleExceptionHolder,
        _tao_elem
      );
}


TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:38
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<AMH_MiddleResponseHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}

namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<AMH_MiddleResponseHandler>::marshal_value (TAO_OutputCDR &)
  {
    return false;
  }

  template<>
  ::CORBA::Boolean
  Any_Impl_T<AMH_MiddleResponseHandler>::demarshal_value (TAO_InputCDR &)
  {
    return false;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    AMH_MiddleResponseHandler_ptr _tao_elem)
{
  AMH_MiddleResponseHandler_ptr _tao_objptr =
    AMH_MiddleResponseHandler::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    AMH_MiddleResponseHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<AMH_MiddleResponseHandler>::insert (
      _tao_any,
      AMH_MiddleResponseHandler::_tao_any_destructor,
      _tc_AMH_MiddleResponseHandler,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    AMH_MiddleResponseHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<AMH_MiddleResponseHandler>::extract (
        _tao_any,
        AMH_MiddleResponseHandler::_tao_any_destructor,
        _tc_AMH_MiddleResponseHandler,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:38
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<>
  ::CORBA::Boolean
  Any_Impl_T<AMI_MiddleHandler>::to_object (
      ::CORBA::Object_ptr &_tao_elem) const
  {
    _tao_elem = ::CORBA::Object::_duplicate (this->value_);
    return true;
  }
}
TAO_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL



/// Copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    AMI_MiddleHandler_ptr _tao_elem)
{
  AMI_MiddleHandler_ptr _tao_objptr =
    AMI_MiddleHandler::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

/// Non-copying insertion.
void
operator<<= (
    ::CORBA::Any &_tao_any,
    AMI_MiddleHandler_ptr *_tao_elem)
{
  TAO::Any_Impl_T<AMI_MiddleHandler>::insert (
      _tao_any,
      AMI_MiddleHandler::_tao_any_destructor,
      _tc_AMI_MiddleHandler,
      *_tao_elem);
}

::CORBA::Boolean
operator>>= (
    const ::CORBA::Any &_tao_any,
    AMI_MiddleHandler_ptr &_tao_elem)
{
  return
    TAO::Any_Impl_T<AMI_MiddleHandler>::extract (
        _tao_any,
        AMI_MiddleHandler::_tao_any_destructor,
        _tc_AMI_MiddleHandler,
        _tao_elem);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:51

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Middle_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Middle_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::Middle RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:512

void
CORBA::add_ref (AMH_MiddleExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_add_ref ();
    }
}

void
CORBA::remove_ref (AMH_MiddleExceptionHolder * vt)
{
  if (vt != 0)
    {
      vt->_remove_ref ();
    }
}

// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_cs.cpp:60


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean
operator<< (
    TAO_OutputCDR &strm,
    const AMH_MiddleExceptionHolder *_tao_valuetype
  )
{
  return
    ::CORBA::ValueBase::_tao_marshal (
        strm,
        _tao_valuetype,
        reinterpret_cast<ptrdiff_t> (&AMH_MiddleExceptionHolder::_downcast)
      );
}

::CORBA::Boolean
operator>> (
    TAO_InputCDR &strm,
    AMH_MiddleExceptionHolder *&_tao_valuetype
  )
{
  return AMH_MiddleExceptionHolder::_tao_unmarshal (strm, _tao_valuetype);
}


TAO_END_VERSIONED_NAMESPACE_DECL

// TAO_IDL - Generated from
// be/be_visitor_valuetype/marshal_cs.cpp:33

::CORBA::Boolean
OBV_AMH_MiddleExceptionHolder::_tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo&) const
{
  return true;
}

::CORBA::Boolean
OBV_AMH_MiddleExceptionHolder::_tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo&)
{
  return true;
}

void
OBV_AMH_MiddleExceptionHolder::truncation_hook (void)
{
  this->require_truncation_ = true;
}



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:51

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const AMI_MiddleHandler_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    AMI_MiddleHandler_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::AMI_MiddleHandler RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



