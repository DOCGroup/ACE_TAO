// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:149

#ifndef _TAO_IDL_KOKYU_QOSC_P27VJ6_H_
#define _TAO_IDL_KOKYU_QOSC_P27VJ6_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "Kokyu_dsrt_schedulers_export.h"
#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/String_Manager_T.h"
#include "tao/AnyTypeCode/TimeBaseA.h"
#include "tao/RTCORBA/RTCORBA_includeA.h"
#include "tao/Sequence_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/TimeBaseC.h"
#include "tao/RTCORBA/RTCORBA_includeC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 4 || TAO_MICRO_VERSION != 1
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO Kokyu_DSRT_Schedulers_Export

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:35

namespace Kokyu
{

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:99

#if !defined (_KOKYU_GUIDTYPE_CH_)
#define _KOKYU_GUIDTYPE_CH_

  class GuidType;

  typedef
    ::TAO_FixedSeq_Var_T<
        GuidType
      >
    GuidType_var;

  typedef
    ::TAO_Seq_Out_T<
        GuidType
      >
    GuidType_out;

  class Kokyu_DSRT_Schedulers_Export GuidType
    : public
        ::TAO::unbounded_value_sequence<
            ::CORBA::Octet
          >
  {
  public:
    GuidType (void);
    GuidType ( ::CORBA::ULong max);
    GuidType (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Octet* buffer,
      ::CORBA::Boolean release = false);
    GuidType (const GuidType &);
    virtual ~GuidType (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef GuidType_var _var_type;
    typedef GuidType_out _out_type;

    static void _tao_any_destructor (void *);

    

#if (TAO_NO_COPY_OCTET_SEQUENCES == 1)
    GuidType (
        ::CORBA::ULong length,
        const ACE_Message_Block* mb
      )
      : ::TAO::unbounded_value_sequence< ::CORBA::Octet> (length, mb) {}
#endif /* TAO_NO_COPY_OCTET_SEQUENCE == 1 */
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern Kokyu_DSRT_Schedulers_Export ::CORBA::TypeCode_ptr const _tc_GuidType;

  // TAO_IDL - Generated from
  // be/be_type.cpp:258

  struct Svc_Ctxt_DSRT_QoS;

  typedef
    ::TAO_Var_Var_T<
        Svc_Ctxt_DSRT_QoS
      >
    Svc_Ctxt_DSRT_QoS_var;

  typedef
    ::TAO_Out_T<
        Svc_Ctxt_DSRT_QoS
      >
    Svc_Ctxt_DSRT_QoS_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:48

  struct Kokyu_DSRT_Schedulers_Export Svc_Ctxt_DSRT_QoS
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef Svc_Ctxt_DSRT_QoS_var _var_type;
    typedef Svc_Ctxt_DSRT_QoS_out _out_type;

    static void _tao_any_destructor (void *);
    
    Kokyu::GuidType guid;
    ::CORBA::Long importance;
    ::CORBA::Long criticality;
    RTCORBA::Priority desired_priority;
    TimeBase::TimeT deadline;
    TimeBase::TimeT estimated_initial_execution_time;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:34

  extern Kokyu_DSRT_Schedulers_Export ::CORBA::TypeCode_ptr const _tc_Svc_Ctxt_DSRT_QoS;

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:64

} // module Kokyu

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class Arg_Traits< ::Kokyu::GuidType>
    : public
        Var_Size_Arg_Traits_T<
            ::Kokyu::GuidType,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class Arg_Traits< ::Kokyu::Svc_Ctxt_DSRT_QoS>
    : public
        Var_Size_Arg_Traits_T<
            ::Kokyu::Svc_Ctxt_DSRT_QoS,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:47



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Kokyu
{
  Kokyu_DSRT_Schedulers_Export void operator<<= ( ::CORBA::Any &, const ::Kokyu::GuidType &); // copying version
  Kokyu_DSRT_Schedulers_Export void operator<<= ( ::CORBA::Any &, ::Kokyu::GuidType*); // noncopying version
  Kokyu_DSRT_Schedulers_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Kokyu::GuidType *&); // deprecated
  Kokyu_DSRT_Schedulers_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Kokyu::GuidType *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Kokyu_DSRT_Schedulers_Export void operator<<= ( ::CORBA::Any &, const Kokyu::GuidType &); // copying version
Kokyu_DSRT_Schedulers_Export void operator<<= ( ::CORBA::Any &, Kokyu::GuidType*); // noncopying version
Kokyu_DSRT_Schedulers_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Kokyu::GuidType *&); // deprecated
Kokyu_DSRT_Schedulers_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Kokyu::GuidType *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_structure/any_op_ch.cpp:42



#if defined (ACE_ANY_OPS_USE_NAMESPACE)

namespace Kokyu
{
  Kokyu_DSRT_Schedulers_Export void operator<<= (::CORBA::Any &, const ::Kokyu::Svc_Ctxt_DSRT_QoS &); // copying version
  Kokyu_DSRT_Schedulers_Export void operator<<= (::CORBA::Any &, ::Kokyu::Svc_Ctxt_DSRT_QoS*); // noncopying version
  Kokyu_DSRT_Schedulers_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, ::Kokyu::Svc_Ctxt_DSRT_QoS *&); // deprecated
Kokyu_DSRT_Schedulers_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const ::Kokyu::Svc_Ctxt_DSRT_QoS *&);
}

#else


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Kokyu_DSRT_Schedulers_Export void operator<<= (::CORBA::Any &, const Kokyu::Svc_Ctxt_DSRT_QoS &); // copying version
Kokyu_DSRT_Schedulers_Export void operator<<= (::CORBA::Any &, Kokyu::Svc_Ctxt_DSRT_QoS*); // noncopying version
Kokyu_DSRT_Schedulers_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, Kokyu::Svc_Ctxt_DSRT_QoS *&); // deprecated
Kokyu_DSRT_Schedulers_Export ::CORBA::Boolean operator>>= (const ::CORBA::Any &, const Kokyu::Svc_Ctxt_DSRT_QoS *&);
TAO_END_VERSIONED_NAMESPACE_DECL



#endif

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:65

#if !defined _TAO_CDR_OP_Kokyu_GuidType_H_
#define _TAO_CDR_OP_Kokyu_GuidType_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


Kokyu_DSRT_Schedulers_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Kokyu::GuidType &_tao_sequence);
Kokyu_DSRT_Schedulers_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Kokyu::GuidType &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Kokyu_GuidType_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:43


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Kokyu_DSRT_Schedulers_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Kokyu::Svc_Ctxt_DSRT_QoS &);
Kokyu_DSRT_Schedulers_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Kokyu::Svc_Ctxt_DSRT_QoS &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1700
#if defined (__ACE_INLINE__)
#include "Kokyu_qosC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

