// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:458

#ifndef _TAO_IDL_TESTS_UQL1NN_H_
#define _TAO_IDL_TESTS_UQL1NN_H_

#include /**/ "ace/pre.h"

#include "testC.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Messaging/MessagingS.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_MESSAGING_EXCEPTIONHOLDER__SARG_TRAITS_)
#define _MESSAGING_EXCEPTIONHOLDER__SARG_TRAITS_

  template<>
  class SArg_Traits< ::Messaging::ExceptionHolder>
    : public
        Object_SArg_Traits_T<
            ::Messaging::ExceptionHolder *,
            ::Messaging::ExceptionHolder_var,
            ::Messaging::ExceptionHolder_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_PEER__SARG_TRAITS_)
#define _PEER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Peer>
    : public
        Object_SArg_Traits_T<
            ::Peer_ptr,
            ::Peer_var,
            ::Peer_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class SArg_Traits< ::PeerSet>
    : public
        Var_Size_SArg_Traits_T<
            ::PeerSet,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_AMI_PEERHANDLER__SARG_TRAITS_)
#define _AMI_PEERHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_PeerHandler>
    : public
        Object_SArg_Traits_T<
            ::AMI_PeerHandler_ptr,
            ::AMI_PeerHandler_var,
            ::AMI_PeerHandler_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_PROGRESS__SARG_TRAITS_)
#define _PROGRESS__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Progress>
    : public
        Object_SArg_Traits_T<
            ::Progress_ptr,
            ::Progress_var,
            ::Progress_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_AMI_PROGRESSHANDLER__SARG_TRAITS_)
#define _AMI_PROGRESSHANDLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::AMI_ProgressHandler>
    : public
        Object_SArg_Traits_T<
            ::AMI_ProgressHandler_ptr,
            ::AMI_ProgressHandler_var,
            ::AMI_ProgressHandler_out,
            TAO::Any_Insert_Policy_Stream
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/interface_sh.cpp:73

class POA_Peer;
typedef POA_Peer *POA_Peer_ptr;

class  POA_Peer
  : public virtual PortableServer::ServantBase
{
protected:
  POA_Peer (void);

public:
  /// Useful for template programming.
  typedef ::Peer _stub_type;
  typedef ::Peer_ptr _stub_ptr_type;
  typedef ::Peer_var _stub_var_type;

  POA_Peer (const POA_Peer& rhs);
  virtual ~POA_Peer (void);

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);

  ::Peer *_this (void);

  virtual const char* _interface_repository_id (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual ::CORBA::Long request (
    ::CORBA::Long id) = 0;

  static void request_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void start (
    const ::PeerSet & the_peers,
    ::CORBA::Long iterations) = 0;

  static void start_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void shutdown (
    void) = 0;

  static void shutdown_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_sh.cpp:73

class POA_AMI_PeerHandler;
typedef POA_AMI_PeerHandler *POA_AMI_PeerHandler_ptr;

class  POA_AMI_PeerHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI_PeerHandler (void);

public:
  /// Useful for template programming.
  typedef ::AMI_PeerHandler _stub_type;
  typedef ::AMI_PeerHandler_ptr _stub_ptr_type;
  typedef ::AMI_PeerHandler_var _stub_var_type;

  POA_AMI_PeerHandler (const POA_AMI_PeerHandler& rhs);
  virtual ~POA_AMI_PeerHandler (void);

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);

  ::AMI_PeerHandler *_this (void);

  virtual const char* _interface_repository_id (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void request (
    ::CORBA::Long ami_return_val) = 0;

  static void request_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void request_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void request_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_sh.cpp:73

class POA_Progress;
typedef POA_Progress *POA_Progress_ptr;

class  POA_Progress
  : public virtual PortableServer::ServantBase
{
protected:
  POA_Progress (void);

public:
  /// Useful for template programming.
  typedef ::Progress _stub_type;
  typedef ::Progress_ptr _stub_ptr_type;
  typedef ::Progress_var _stub_var_type;

  POA_Progress (const POA_Progress& rhs);
  virtual ~POA_Progress (void);

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);

  ::Progress *_this (void);

  virtual const char* _interface_repository_id (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void sent_request (
    ::CORBA::Long id) = 0;

  static void sent_request_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void recv_reply (
    ::CORBA::Long id) = 0;

  static void recv_reply_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual ::CORBA::Long bind (
    ::Peer_ptr a_peer) = 0;

  static void bind_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_sh.cpp:73

class POA_AMI_ProgressHandler;
typedef POA_AMI_ProgressHandler *POA_AMI_ProgressHandler_ptr;

class  POA_AMI_ProgressHandler
  : public virtual POA_Messaging::ReplyHandler
{
protected:
  POA_AMI_ProgressHandler (void);

public:
  /// Useful for template programming.
  typedef ::AMI_ProgressHandler _stub_type;
  typedef ::AMI_ProgressHandler_ptr _stub_ptr_type;
  typedef ::AMI_ProgressHandler_var _stub_var_type;

  POA_AMI_ProgressHandler (const POA_AMI_ProgressHandler& rhs);
  virtual ~POA_AMI_ProgressHandler (void);

  virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

  virtual void _dispatch (
      TAO_ServerRequest & req,
      TAO::Portable_Server::Servant_Upcall *servant_upcall);

  ::AMI_ProgressHandler *_this (void);

  virtual const char* _interface_repository_id (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void bind (
    ::CORBA::Long ami_return_val) = 0;

  static void bind_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);

  // TAO_IDL - Generated from
  // be/be_visitor_operation/operation_sh.cpp:36

  virtual void bind_excep (
    ::Messaging::ExceptionHolder * excep_holder) = 0;

  static void bind_excep_skel (
      TAO_ServerRequest &server_request,
      TAO::Portable_Server::Servant_Upcall *servant_upcall,
      TAO_ServantBase *servant);
};

#include /**/ "ace/post.h"

#endif /* ifndef */

