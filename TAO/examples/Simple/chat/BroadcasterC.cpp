// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:373


#include "BroadcasterC.h"
#include "tao/CDR.h"
#include "tao/Exception_Data.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "tao/SystemException.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "BroadcasterC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:48

// Traits specializations for Broadcaster.

Broadcaster_ptr
TAO::Objref_Traits<Broadcaster>::duplicate (
    Broadcaster_ptr p)
{
  return Broadcaster::_duplicate (p);
}

void
TAO::Objref_Traits<Broadcaster>::release (
    Broadcaster_ptr p)
{
  ::CORBA::release (p);
}

Broadcaster_ptr
TAO::Objref_Traits<Broadcaster>::nil (void)
{
  return Broadcaster::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Broadcaster>::marshal (
    const Broadcaster_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

// TAO_IDL - Generated from
// be/be_visitor_exception/exception_ctor.cpp:51

Broadcaster::CannotAdd::CannotAdd (
    const char * _tao_reason_)
  : ::CORBA::UserException (
        "IDL:Broadcaster/CannotAdd:1.0",
        "CannotAdd"
      )
{
  this->reason_ = ::CORBA::string_dup (_tao_reason_);
}



// TAO_IDL - Generated from
// be/be_visitor_exception/exception_cs.cpp:98

Broadcaster::CannotAdd::CannotAdd (void)
  : ::CORBA::UserException (
        "IDL:Broadcaster/CannotAdd:1.0",
        "CannotAdd"
      )
{
}

Broadcaster::CannotAdd::~CannotAdd (void)
{
}

Broadcaster::CannotAdd::CannotAdd (const ::Broadcaster::CannotAdd &_tao_excp)
  : ::CORBA::UserException (
        _tao_excp._rep_id (),
        _tao_excp._name ()
      )
{
  this->reason_ = ::CORBA::string_dup (_tao_excp.reason_.in ());
}

Broadcaster::CannotAdd&
Broadcaster::CannotAdd::operator= (const ::Broadcaster::CannotAdd &_tao_excp)
{
  this->::CORBA::UserException::operator= (_tao_excp);
  this->reason_ = ::CORBA::string_dup (_tao_excp.reason_.in ());
  return *this;
}

Broadcaster::CannotAdd *
Broadcaster::CannotAdd::_downcast ( ::CORBA::Exception *_tao_excp)
{
  return dynamic_cast<CannotAdd *> (_tao_excp);
}

const Broadcaster::CannotAdd *
Broadcaster::CannotAdd::_downcast ( ::CORBA::Exception const *_tao_excp)
{
  return dynamic_cast<const CannotAdd *> (_tao_excp);
}

::CORBA::Exception *Broadcaster::CannotAdd::_alloc (void)
{
  ::CORBA::Exception *retval = 0;
  ACE_NEW_RETURN (retval, ::Broadcaster::CannotAdd, 0);
  return retval;
}

::CORBA::Exception *
Broadcaster::CannotAdd::_tao_duplicate (void) const
{
  ::CORBA::Exception *result = 0;
  ACE_NEW_RETURN (
      result,
      ::Broadcaster::CannotAdd (*this),
      0
    );
  return result;
}

void Broadcaster::CannotAdd::_raise (void) const
{
  throw *this;
}

void Broadcaster::CannotAdd::_tao_encode (TAO_OutputCDR &cdr) const
{
  if (!(cdr << *this))
    {
      throw ::CORBA::MARSHAL ();
    }
}

void Broadcaster::CannotAdd::_tao_decode (TAO_InputCDR &cdr)
{
  if (!(cdr >> *this))
    {
      throw ::CORBA::MARSHAL ();
    }
}



// TAO_IDL - Generated from
// be/be_visitor_exception/exception_ctor.cpp:51

Broadcaster::CannotRemove::CannotRemove (
    const char * _tao_reason_)
  : ::CORBA::UserException (
        "IDL:Broadcaster/CannotRemove:1.0",
        "CannotRemove"
      )
{
  this->reason_ = ::CORBA::string_dup (_tao_reason_);
}



// TAO_IDL - Generated from
// be/be_visitor_exception/exception_cs.cpp:98

Broadcaster::CannotRemove::CannotRemove (void)
  : ::CORBA::UserException (
        "IDL:Broadcaster/CannotRemove:1.0",
        "CannotRemove"
      )
{
}

Broadcaster::CannotRemove::~CannotRemove (void)
{
}

Broadcaster::CannotRemove::CannotRemove (const ::Broadcaster::CannotRemove &_tao_excp)
  : ::CORBA::UserException (
        _tao_excp._rep_id (),
        _tao_excp._name ()
      )
{
  this->reason_ = ::CORBA::string_dup (_tao_excp.reason_.in ());
}

Broadcaster::CannotRemove&
Broadcaster::CannotRemove::operator= (const ::Broadcaster::CannotRemove &_tao_excp)
{
  this->::CORBA::UserException::operator= (_tao_excp);
  this->reason_ = ::CORBA::string_dup (_tao_excp.reason_.in ());
  return *this;
}

Broadcaster::CannotRemove *
Broadcaster::CannotRemove::_downcast ( ::CORBA::Exception *_tao_excp)
{
  return dynamic_cast<CannotRemove *> (_tao_excp);
}

const Broadcaster::CannotRemove *
Broadcaster::CannotRemove::_downcast ( ::CORBA::Exception const *_tao_excp)
{
  return dynamic_cast<const CannotRemove *> (_tao_excp);
}

::CORBA::Exception *Broadcaster::CannotRemove::_alloc (void)
{
  ::CORBA::Exception *retval = 0;
  ACE_NEW_RETURN (retval, ::Broadcaster::CannotRemove, 0);
  return retval;
}

::CORBA::Exception *
Broadcaster::CannotRemove::_tao_duplicate (void) const
{
  ::CORBA::Exception *result = 0;
  ACE_NEW_RETURN (
      result,
      ::Broadcaster::CannotRemove (*this),
      0
    );
  return result;
}

void Broadcaster::CannotRemove::_raise (void) const
{
  throw *this;
}

void Broadcaster::CannotRemove::_tao_encode (TAO_OutputCDR &cdr) const
{
  if (!(cdr << *this))
    {
      throw ::CORBA::MARSHAL ();
    }
}

void Broadcaster::CannotRemove::_tao_decode (TAO_InputCDR &cdr)
{
  if (!(cdr >> *this))
    {
      throw ::CORBA::MARSHAL ();
    }
}



// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:88

void
Broadcaster::add (
  ::Receiver_ptr receiver_,
  const char * nickname)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Receiver>::in_arg_val _tao_receiver_ (receiver_);
  TAO::Arg_Traits< char *>::in_arg_val _tao_nickname (nickname);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_receiver_,
      &_tao_nickname
    };

  static TAO::Exception_Data
  _tao_Broadcaster_add_exceptiondata [] =
    {
      {
        "IDL:Broadcaster/CannotAdd:1.0",
        Broadcaster::CannotAdd::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , 0
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "add",
      3,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY

    );

  _tao_call.invoke (
      _tao_Broadcaster_add_exceptiondata,
      1
    );
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:88

void
Broadcaster::remove (
  ::Receiver_ptr receiver_)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Receiver>::in_arg_val _tao_receiver_ (receiver_);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_receiver_
    };

  static TAO::Exception_Data
  _tao_Broadcaster_remove_exceptiondata [] =
    {
      {
        "IDL:Broadcaster/CannotRemove:1.0",
        Broadcaster::CannotRemove::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , 0
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "remove",
      6,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY

    );

  _tao_call.invoke (
      _tao_Broadcaster_remove_exceptiondata,
      1
    );
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:88

void
Broadcaster::say (
  ::Receiver_ptr receiver_,
  const char * text)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }

  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Receiver>::in_arg_val _tao_receiver_ (receiver_);
  TAO::Arg_Traits< char *>::in_arg_val _tao_text (text);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_receiver_,
      &_tao_text
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "say",
      3,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY

    );

  _tao_call.invoke (0, 0);
}

Broadcaster::Broadcaster (void)
{
}

Broadcaster::~Broadcaster (void)
{
}

Broadcaster_ptr
Broadcaster::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<Broadcaster>::narrow (
        _tao_objref,
        "IDL:Broadcaster:1.0");
}

Broadcaster_ptr
Broadcaster::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<Broadcaster>::unchecked_narrow (
        _tao_objref);
}

Broadcaster_ptr
Broadcaster::_nil (void)
{
  return 0;
}

Broadcaster_ptr
Broadcaster::_duplicate (Broadcaster_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Broadcaster::_tao_release (Broadcaster_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Broadcaster::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:Broadcaster:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* Broadcaster::_interface_repository_id (void) const
{
  return "IDL:Broadcaster:1.0";
}

::CORBA::Boolean
Broadcaster::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_cs.cpp:48
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Broadcaster::CannotAdd &_tao_aggregate
  )
{
  // First marshal the repository ID.
  if (strm << _tao_aggregate._rep_id ())
    {
      // Now marshal the members (if any).
      return (
        (strm << _tao_aggregate.reason_.in ())
       );
    }
  else
    {
      return false;
    }
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Broadcaster::CannotAdd &_tao_aggregate
  )
{
  // Demarshal the members.
  return (
    (strm >> _tao_aggregate.reason_.out ())
  );
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_cs.cpp:48
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Broadcaster::CannotRemove &_tao_aggregate
  )
{
  // First marshal the repository ID.
  if (strm << _tao_aggregate._rep_id ())
    {
      // Now marshal the members (if any).
      return (
        (strm << _tao_aggregate.reason_.in ())
       );
    }
  else
    {
      return false;
    }
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Broadcaster::CannotRemove &_tao_aggregate
  )
{
  // Demarshal the members.
  return (
    (strm >> _tao_aggregate.reason_.out ())
  );
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:51

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Broadcaster_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Broadcaster_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }

  typedef ::Broadcaster RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());

  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



