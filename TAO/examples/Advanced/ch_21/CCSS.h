// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:458

#ifndef _TAO_IDL_CCSS_QJ26KF_H_
#define _TAO_IDL_CCSS_QJ26KF_H_

#include /**/ "ace/pre.h"

#include "CCSC.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_CCS_THERMOMETER__SARG_TRAITS_)
#define _CCS_THERMOMETER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::CCS::Thermometer>
    : public
        Object_SArg_Traits_T<
            ::CCS::Thermometer_ptr,
            ::CCS::Thermometer_var,
            ::CCS::Thermometer_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_CCS_THERMOSTAT__SARG_TRAITS_)
#define _CCS_THERMOSTAT__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::CCS::Thermostat>
    : public
        Object_SArg_Traits_T<
            ::CCS::Thermostat_ptr,
            ::CCS::Thermostat_var,
            ::CCS::Thermostat_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class SArg_Traits< ::CCS::Thermostat::BtData>
    : public
        Var_Size_SArg_Traits_T<
            ::CCS::Thermostat::BtData,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_CCS_CONTROLLER__SARG_TRAITS_)
#define _CCS_CONTROLLER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::CCS::Controller>
    : public
        Object_SArg_Traits_T<
            ::CCS::Controller_ptr,
            ::CCS::Controller_var,
            ::CCS::Controller_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class SArg_Traits< ::CCS::Controller::ThermometerSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::CCS::Controller::ThermometerSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class SArg_Traits< ::CCS::Controller::ThermostatSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::CCS::Controller::ThermostatSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:902

  template<>
  class SArg_Traits< ::CCS::Controller::SearchCriterion>
    : public
        Basic_SArg_Traits_T<
            ::CCS::Controller::SearchCriterion,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:1056

  template<>
  class SArg_Traits< ::CCS::Controller::KeyType>
    : public
        Var_Size_SArg_Traits_T<
            ::CCS::Controller::KeyType,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class SArg_Traits< ::CCS::Controller::SearchType>
    : public
        Var_Size_SArg_Traits_T<
            ::CCS::Controller::SearchType,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class SArg_Traits< ::CCS::Controller::SearchSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::CCS::Controller::SearchSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:945

  template<>
  class SArg_Traits< ::CCS::Controller::ErrorDetails>
    : public
        Var_Size_SArg_Traits_T<
            ::CCS::Controller::ErrorDetails,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class SArg_Traits< ::CCS::Controller::ErrSeq>
    : public
        Var_Size_SArg_Traits_T<
            ::CCS::Controller::ErrSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:35

namespace POA_CCS
{


  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class Thermometer;
  typedef Thermometer *Thermometer_ptr;

  class  Thermometer
    : public virtual PortableServer::ServantBase
  {
  protected:
    Thermometer (void);

  public:
    /// Useful for template programming.
    typedef ::CCS::Thermometer _stub_type;
    typedef ::CCS::Thermometer_ptr _stub_ptr_type;
    typedef ::CCS::Thermometer_var _stub_var_type;

    Thermometer (const Thermometer& rhs);
    virtual ~Thermometer (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);

    ::CCS::Thermometer *_this (void);

    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual char * model (
      void) = 0;

    static void _get_model_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual ::CCS::AssetType asset_num (
      void) = 0;

    static void _get_asset_num_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual ::CCS::TempType temperature (
      void) = 0;

    static void _get_temperature_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual char * location (
      void) = 0;

    static void _get_location_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void location (
      const char * location) = 0;

    static void _set_location_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void remove (
      void) = 0;

    static void remove_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class Thermostat;
  typedef Thermostat *Thermostat_ptr;

  class  Thermostat
    : public virtual POA_CCS::Thermometer
  {
  protected:
    Thermostat (void);

  public:
    /// Useful for template programming.
    typedef ::CCS::Thermostat _stub_type;
    typedef ::CCS::Thermostat_ptr _stub_ptr_type;
    typedef ::CCS::Thermostat_var _stub_var_type;

    Thermostat (const Thermostat& rhs);
    virtual ~Thermostat (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);

    ::CCS::Thermostat *_this (void);

    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual ::CCS::TempType get_nominal (
      void) = 0;

    static void get_nominal_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual ::CCS::TempType set_nominal (
      ::CCS::TempType new_temp) = 0;

    static void set_nominal_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class Controller;
  typedef Controller *Controller_ptr;

  class  Controller
    : public virtual PortableServer::ServantBase
  {
  protected:
    Controller (void);

  public:
    /// Useful for template programming.
    typedef ::CCS::Controller _stub_type;
    typedef ::CCS::Controller_ptr _stub_ptr_type;
    typedef ::CCS::Controller_var _stub_var_type;

    Controller (const Controller& rhs);
    virtual ~Controller (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);

    ::CCS::Controller *_this (void);

    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual ::CCS::Thermometer_ptr create_thermometer (
      ::CCS::AssetType anum,
      const char * loc) = 0;

    static void create_thermometer_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual ::CCS::Thermostat_ptr create_thermostat (
      ::CCS::AssetType anum,
      const char * loc,
      ::CCS::TempType temp) = 0;

    static void create_thermostat_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual ::CCS::Controller::ThermometerSeq * list (
      void) = 0;

    static void list_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void find (
      ::CCS::Controller::SearchSeq & slist) = 0;

    static void find_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void change (
      const ::CCS::Controller::ThermostatSeq & tlist,
      ::CORBA::Short delta) = 0;

    static void change_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:66

} // module CCS

#include /**/ "ace/post.h"

#endif /* ifndef */

