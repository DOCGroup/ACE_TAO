// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:149

#ifndef _TAO_IDL_EVENT_TYPESC_QY3CMD_H_
#define _TAO_IDL_EVENT_TYPESC_QY3CMD_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/AnyTypeCode/AnyTypeCode_methods.h"
#include "tao/AnyTypeCode/Any.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/Valuetype/Valuetype_Adapter_Factory_Impl.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Valuetype/Value_VarOut_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Array_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include "tao/Fixed_Array_Argument_T.h"
#include "tao/Var_Array_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 4 || TAO_MICRO_VERSION != 1
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from
// be/be_visitor_root/root_ch.cpp:157
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:564



#if !defined (_EVENT__VAR_OUT_CH_)
#define _EVENT__VAR_OUT_CH_

class Event;
typedef
  TAO_Value_Var_T<
      Event
    >
  Event_var;

typedef
  TAO_Value_Out_T<
      Event
    >
  Event_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:50

class  Event
  : public virtual ::CORBA::ValueBase
{
public:

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef Event * _ptr_type;
  typedef Event_var _var_type;
  typedef Event_out _out_type;

  static Event* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      Event *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:396
  
public:
  virtual void do_print (void) = 0;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:459

  virtual void time_ (const ::CORBA::Long) = 0;
  virtual ::CORBA::Long time_ (void) const = 0;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:459

  virtual void origin_id_ (const ::CORBA::ULong) = 0;
  virtual ::CORBA::ULong origin_id_ (void) const = 0;

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:238

protected:
  Event (void);
  virtual ~Event (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  Event (const Event &);
  void operator= (const Event &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Event (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Event (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Event;

// TAO_IDL - Generated from
// be/be_valuetype.cpp:564



#if !defined (_TEMPERATURE__VAR_OUT_CH_)
#define _TEMPERATURE__VAR_OUT_CH_

class Temperature;
typedef
  TAO_Value_Var_T<
      Temperature
    >
  Temperature_var;

typedef
  TAO_Value_Out_T<
      Temperature
    >
  Temperature_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:50

class  Temperature
  : public virtual Event
{
public:

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef Temperature * _ptr_type;
  typedef Temperature_var _var_type;
  typedef Temperature_out _out_type;

  static Temperature* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      Temperature *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:459

  virtual void temperature_ (const ::CORBA::Float) = 0;
  virtual ::CORBA::Float temperature_ (void) const = 0;

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:238

protected:
  Temperature (void);
  virtual ~Temperature (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  Temperature (const Temperature &);
  void operator= (const Temperature &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Temperature (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Temperature (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Temperature;

// TAO_IDL - Generated from
// be/be_visitor_array/array_ch.cpp:52

typedef ::CORBA::Float Point[3];
typedef ::CORBA::Float Point_slice;
struct Point_tag {};


typedef
  TAO_FixedArray_Var_T<
      Point,
      Point_slice,
      Point_tag
    >
  Point_var;

typedef
  Point
  Point_out;

typedef
  TAO_Array_Forany_T<
      Point,
      Point_slice,
      Point_tag
    >
  Point_forany;

TAO_EXPORT_MACRO Point_slice *
Point_alloc (void);

TAO_EXPORT_MACRO void
Point_free (
    Point_slice *_tao_slice);

TAO_EXPORT_MACRO Point_slice *
Point_dup (
    const Point_slice *_tao_slice);

TAO_EXPORT_MACRO void
Point_copy (
    Point_slice *_tao_to,
    const Point_slice *_tao_from);

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Point;

// TAO_IDL - Generated from
// be/be_valuetype.cpp:564



#if !defined (_POSITION__VAR_OUT_CH_)
#define _POSITION__VAR_OUT_CH_

class Position;
typedef
  TAO_Value_Var_T<
      Position
    >
  Position_var;

typedef
  TAO_Value_Out_T<
      Position
    >
  Position_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:50

class  Position
  : public virtual Event
{
public:

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef Position * _ptr_type;
  typedef Position_var _var_type;
  typedef Position_out _out_type;

  static Position* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      Position *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:396
  
public:
  virtual ::CORBA::Float x (void) = 0;

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:396

public:
  virtual void x (
      ::CORBA::Float
    ) = 0;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:396
  
public:
  virtual ::CORBA::Float y (void) = 0;

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:396

public:
  virtual void y (
      ::CORBA::Float
    ) = 0;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:396
  
public:
  virtual ::CORBA::Float z (void) = 0;

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:396

public:
  virtual void z (
      ::CORBA::Float
    ) = 0;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:90

  virtual void xyz (const Point) = 0;
  virtual Point_slice *xyz (void) = 0;
  virtual const Point_slice *xyz (void) const = 0;

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:238

protected:
  Position (void);
  virtual ~Position (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  Position (const Position &);
  void operator= (const Position &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Position (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Position (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Position;

// TAO_IDL - Generated from
// be/be_valuetype.cpp:564



#if !defined (_LOG_MSG__VAR_OUT_CH_)
#define _LOG_MSG__VAR_OUT_CH_

class Log_Msg;
typedef
  TAO_Value_Var_T<
      Log_Msg
    >
  Log_Msg_var;

typedef
  TAO_Value_Out_T<
      Log_Msg
    >
  Log_Msg_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:50

class  Log_Msg
  : public virtual Event
{
public:

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef Log_Msg * _ptr_type;
  typedef Log_Msg_var _var_type;
  typedef Log_Msg_out _out_type;

  static Log_Msg* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      Log_Msg *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:459

  virtual void urgency (const ::CORBA::Short) = 0;
  virtual ::CORBA::Short urgency (void) const = 0;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:608

  virtual void message (char *val) = 0;
  virtual void message (const char *val) = 0;
  virtual void message (const ::CORBA::String_var &val) = 0;
  virtual const char *message (void) const = 0;

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:238

protected:
  Log_Msg (void);
  virtual ~Log_Msg (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  Log_Msg (const Log_Msg &);
  void operator= (const Log_Msg &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Log_Msg (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Log_Msg (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Log_Msg;

// TAO_IDL - Generated from
// be/be_valuetype.cpp:564



#if !defined (_EVENT_LIST_LINK__VAR_OUT_CH_)
#define _EVENT_LIST_LINK__VAR_OUT_CH_

class Event_List_Link;
typedef
  TAO_Value_Var_T<
      Event_List_Link
    >
  Event_List_Link_var;

typedef
  TAO_Value_Out_T<
      Event_List_Link
    >
  Event_List_Link_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:50

class  Event_List_Link
  : public virtual ::CORBA::ValueBase
{
public:

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef Event_List_Link * _ptr_type;
  typedef Event_List_Link_var _var_type;
  typedef Event_List_Link_out _out_type;

  static Event_List_Link* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      Event_List_Link *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:396
  
public:
  virtual ::Event * get_event (void) = 0;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:396
  
public:
  virtual ::Event_List_Link * get_next_link (void) = 0;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:396
  
public:
  virtual void attach_next_link (
      ::Event_List_Link *
    ) = 0;

protected:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:361

  virtual void my_event (Event *) = 0;
  virtual Event *my_event (void) const = 0;

protected:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:361

  virtual void next (Event_List_Link *) = 0;
  virtual Event_List_Link *next (void) const = 0;

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:238

protected:
  Event_List_Link (void);
  virtual ~Event_List_Link (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  Event_List_Link (const Event_List_Link &);
  void operator= (const Event_List_Link &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Event_List_Link (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Event_List_Link (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Event_List_Link;

// TAO_IDL - Generated from
// be/be_valuetype.cpp:564



#if !defined (_EVENT_LIST__VAR_OUT_CH_)
#define _EVENT_LIST__VAR_OUT_CH_

class Event_List;
typedef
  TAO_Value_Var_T<
      Event_List
    >
  Event_List_var;

typedef
  TAO_Value_Out_T<
      Event_List
    >
  Event_List_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:50

class  Event_List
  : public virtual ::CORBA::ValueBase
{
public:

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef Event_List * _ptr_type;
  typedef Event_List_var _var_type;
  typedef Event_List_out _out_type;

  static Event_List* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      Event_List *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:396
  
public:
  virtual void store_event (
      ::Event *
    ) = 0;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:361

  virtual void first_link (Event_List_Link *) = 0;
  virtual Event_List_Link *first_link (void) const = 0;

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:238

protected:
  Event_List (void);
  virtual ~Event_List (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  Event_List (const Event_List &);
  void operator= (const Event_List &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Event_List (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Event_List (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Event_List;

// TAO_IDL - Generated from
// be/be_interface.cpp:748

#if !defined (_CHECKPOINT__VAR_OUT_CH_)
#define _CHECKPOINT__VAR_OUT_CH_

class Checkpoint;
typedef Checkpoint *Checkpoint_ptr;

typedef
  TAO_Objref_Var_T<
      Checkpoint
    >
  Checkpoint_var;

typedef
  TAO_Objref_Out_T<
      Checkpoint
    >
  Checkpoint_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ch.cpp:40

class  Checkpoint
  : public virtual ::CORBA::Object
{
public:
  friend class TAO::Narrow_Utils<Checkpoint>;

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef Checkpoint_ptr _ptr_type;
  typedef Checkpoint_var _var_type;
  typedef Checkpoint_out _out_type;

  // The static operations.
  static Checkpoint_ptr _duplicate (Checkpoint_ptr obj);

  static void _tao_release (Checkpoint_ptr obj);

  static Checkpoint_ptr _narrow (::CORBA::Object_ptr obj);
  static Checkpoint_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static Checkpoint_ptr _nil (void);

  virtual void put_event (
    ::Event * e);

  virtual ::Event_List * get_critical_events (
    void);

  virtual void shutdown (
    void);

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:137

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Concrete interface only.
  Checkpoint (void);

  // Concrete non-local interface only.
  Checkpoint (
      ::IOP::IOR *ior,
      TAO_ORB_Core *orb_core);
  
  // Non-local interface only.
  Checkpoint (
      TAO_Stub *objref,
      ::CORBA::Boolean _tao_collocated = false,
      TAO_Abstract_ServantBase *servant = 0,
      TAO_ORB_Core *orb_core = 0);

  virtual ~Checkpoint (void);

private:
  // Private and unimplemented for concrete interfaces.
  Checkpoint (const Checkpoint &);

  void operator= (const Checkpoint &);
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Checkpoint;

// TAO_IDL - Generated from
// be/be_valuetype.cpp:564



#if !defined (_CRITERION__VAR_OUT_CH_)
#define _CRITERION__VAR_OUT_CH_

class Criterion;
typedef
  TAO_Value_Var_T<
      Criterion
    >
  Criterion_var;

typedef
  TAO_Value_Out_T<
      Criterion
    >
  Criterion_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:50

class  Criterion
  : public virtual ::CORBA::ValueBase
{
public:

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef Criterion * _ptr_type;
  typedef Criterion_var _var_type;
  typedef Criterion_out _out_type;

  static Criterion* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      Criterion *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:396
  
public:
  virtual ::CORBA::Boolean is_critical (
      ::Event *
    ) = 0;

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:238

protected:
  Criterion (void);
  virtual ~Criterion (void);

  
private:
  Criterion (const Criterion &);
  void operator= (const Criterion &);
  
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Criterion;

// TAO_IDL - Generated from
// be/be_valuetype.cpp:564



#if !defined (_TEMPERATURE_CRITERION__VAR_OUT_CH_)
#define _TEMPERATURE_CRITERION__VAR_OUT_CH_

class Temperature_Criterion;
typedef
  TAO_Value_Var_T<
      Temperature_Criterion
    >
  Temperature_Criterion_var;

typedef
  TAO_Value_Out_T<
      Temperature_Criterion
    >
  Temperature_Criterion_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:50

class  Temperature_Criterion
  : public virtual Event,
    public virtual Criterion
{
public:

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef Temperature_Criterion * _ptr_type;
  typedef Temperature_Criterion_var _var_type;
  typedef Temperature_Criterion_out _out_type;

  static Temperature_Criterion* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      Temperature_Criterion *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

protected:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:361

  virtual void meltingpoint (Temperature *) = 0;
  virtual Temperature *meltingpoint (void) const = 0;

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:238

protected:
  Temperature_Criterion (void);
  virtual ~Temperature_Criterion (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  Temperature_Criterion (const Temperature_Criterion &);
  void operator= (const Temperature_Criterion &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Temperature_Criterion (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Temperature_Criterion (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Temperature_Criterion;

// TAO_IDL - Generated from
// be/be_valuetype.cpp:564



#if !defined (_POSITION_CRITERION__VAR_OUT_CH_)
#define _POSITION_CRITERION__VAR_OUT_CH_

class Position_Criterion;
typedef
  TAO_Value_Var_T<
      Position_Criterion
    >
  Position_Criterion_var;

typedef
  TAO_Value_Out_T<
      Position_Criterion
    >
  Position_Criterion_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:50

class  Position_Criterion
  : public virtual Event,
    public virtual Criterion
{
public:

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef Position_Criterion * _ptr_type;
  typedef Position_Criterion_var _var_type;
  typedef Position_Criterion_out _out_type;

  static Position_Criterion* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      Position_Criterion *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

protected:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:361

  virtual void leftbottom (Position *) = 0;
  virtual Position *leftbottom (void) const = 0;

protected:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:361

  virtual void topright (Position *) = 0;
  virtual Position *topright (void) const = 0;

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:238

protected:
  Position_Criterion (void);
  virtual ~Position_Criterion (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  Position_Criterion (const Position_Criterion &);
  void operator= (const Position_Criterion &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Position_Criterion (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Position_Criterion (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Position_Criterion;

// TAO_IDL - Generated from
// be/be_valuetype.cpp:564



#if !defined (_LOG_MSG_CRITERION__VAR_OUT_CH_)
#define _LOG_MSG_CRITERION__VAR_OUT_CH_

class Log_Msg_Criterion;
typedef
  TAO_Value_Var_T<
      Log_Msg_Criterion
    >
  Log_Msg_Criterion_var;

typedef
  TAO_Value_Out_T<
      Log_Msg_Criterion
    >
  Log_Msg_Criterion_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:50

class  Log_Msg_Criterion
  : public virtual Event,
    public virtual Criterion
{
public:

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef Log_Msg_Criterion * _ptr_type;
  typedef Log_Msg_Criterion_var _var_type;
  typedef Log_Msg_Criterion_out _out_type;

  static Log_Msg_Criterion* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      Log_Msg_Criterion *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:238

protected:
  Log_Msg_Criterion (void);
  virtual ~Log_Msg_Criterion (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  Log_Msg_Criterion (const Log_Msg_Criterion &);
  void operator= (const Log_Msg_Criterion &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Log_Msg_Criterion (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Log_Msg_Criterion (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Log_Msg_Criterion;

// TAO_IDL - Generated from
// be/be_valuetype.cpp:564



#if !defined (_CRITERION_LIST__VAR_OUT_CH_)
#define _CRITERION_LIST__VAR_OUT_CH_

class Criterion_List;
typedef
  TAO_Value_Var_T<
      Criterion_List
    >
  Criterion_List_var;

typedef
  TAO_Value_Out_T<
      Criterion_List
    >
  Criterion_List_out;

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:50

class  Criterion_List
  : public virtual ::CORBA::ValueBase
{
public:

  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef Criterion_List * _ptr_type;
  typedef Criterion_List_var _var_type;
  typedef Criterion_List_out _out_type;

  static Criterion_List* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      Criterion_List *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

  virtual ::CORBA::TypeCode_ptr _tao_type (void) const;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:396
  
public:
  virtual void store_criterion (
      ::Criterion *
    ) = 0;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:396
  
public:
  virtual ::CORBA::Boolean is_critical (
      ::Event *
    ) = 0;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:361

  virtual void my_list (Event_List *) = 0;
  virtual Event_List *my_list (void) const = 0;

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:238

protected:
  Criterion_List (void);
  virtual ~Criterion_List (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  Criterion_List (const Criterion_List &);
  void operator= (const Criterion_List &);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Criterion_List (TAO_OutputCDR &, TAO_ChunkInfo &) const = 0;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Criterion_List (TAO_InputCDR &, TAO_ChunkInfo &) = 0;
};

// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_decl.cpp:34

extern  ::CORBA::TypeCode_ptr const _tc_Criterion_List;

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_EVENT__ARG_TRAITS_)
#define _EVENT__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Event>
    : public
        Object_Arg_Traits_T<
            ::Event *,
            ::Event_var,
            ::Event_out,
            TAO::Value_Traits<Event>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_TEMPERATURE__ARG_TRAITS_)
#define _TEMPERATURE__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Temperature>
    : public
        Object_Arg_Traits_T<
            ::Temperature *,
            ::Temperature_var,
            ::Temperature_out,
            TAO::Value_Traits<Temperature>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  template<>
  class Arg_Traits< ::Point_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::Point_var,
            ::Point_forany,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_POSITION__ARG_TRAITS_)
#define _POSITION__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Position>
    : public
        Object_Arg_Traits_T<
            ::Position *,
            ::Position_var,
            ::Position_out,
            TAO::Value_Traits<Position>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_LOG_MSG__ARG_TRAITS_)
#define _LOG_MSG__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Log_Msg>
    : public
        Object_Arg_Traits_T<
            ::Log_Msg *,
            ::Log_Msg_var,
            ::Log_Msg_out,
            TAO::Value_Traits<Log_Msg>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_EVENT_LIST_LINK__ARG_TRAITS_)
#define _EVENT_LIST_LINK__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Event_List_Link>
    : public
        Object_Arg_Traits_T<
            ::Event_List_Link *,
            ::Event_List_Link_var,
            ::Event_List_Link_out,
            TAO::Value_Traits<Event_List_Link>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_EVENT_LIST__ARG_TRAITS_)
#define _EVENT_LIST__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Event_List>
    : public
        Object_Arg_Traits_T<
            ::Event_List *,
            ::Event_List_var,
            ::Event_List_out,
            TAO::Value_Traits<Event_List>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_CHECKPOINT__ARG_TRAITS_)
#define _CHECKPOINT__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::Checkpoint>
    : public
        Object_Arg_Traits_T<
            ::Checkpoint_ptr,
            ::Checkpoint_var,
            ::Checkpoint_out,
            TAO::Objref_Traits<Checkpoint>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_CRITERION__ARG_TRAITS_)
#define _CRITERION__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Criterion>
    : public
        Object_Arg_Traits_T<
            ::Criterion *,
            ::Criterion_var,
            ::Criterion_out,
            TAO::Value_Traits<Criterion>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_TEMPERATURE_CRITERION__ARG_TRAITS_)
#define _TEMPERATURE_CRITERION__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Temperature_Criterion>
    : public
        Object_Arg_Traits_T<
            ::Temperature_Criterion *,
            ::Temperature_Criterion_var,
            ::Temperature_Criterion_out,
            TAO::Value_Traits<Temperature_Criterion>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_POSITION_CRITERION__ARG_TRAITS_)
#define _POSITION_CRITERION__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Position_Criterion>
    : public
        Object_Arg_Traits_T<
            ::Position_Criterion *,
            ::Position_Criterion_var,
            ::Position_Criterion_out,
            TAO::Value_Traits<Position_Criterion>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_LOG_MSG_CRITERION__ARG_TRAITS_)
#define _LOG_MSG_CRITERION__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Log_Msg_Criterion>
    : public
        Object_Arg_Traits_T<
            ::Log_Msg_Criterion *,
            ::Log_Msg_Criterion_var,
            ::Log_Msg_Criterion_out,
            TAO::Value_Traits<Log_Msg_Criterion>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:306

#if !defined (_CRITERION_LIST__ARG_TRAITS_)
#define _CRITERION_LIST__ARG_TRAITS_

  template<>
  class Arg_Traits< ::Criterion_List>
    : public
        Object_Arg_Traits_T<
            ::Criterion_List *,
            ::Criterion_List_var,
            ::Criterion_List_out,
            TAO::Value_Traits<Criterion_List>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

// OBV_ class
class  OBV_Event
  : public virtual Event
{

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:459

  virtual void time_ (const ::CORBA::Long);
  virtual ::CORBA::Long time_ (void) const;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:459

  virtual void origin_id_ (const ::CORBA::ULong);
  virtual ::CORBA::ULong origin_id_ (void) const;

protected:
  OBV_Event (void);
  OBV_Event (
      ::CORBA::Long _tao_init_time_,
      ::CORBA::ULong _tao_init_origin_id_
    );
  virtual ~OBV_Event (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Event (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Event (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  ::CORBA::Long _pd_time_;
  ::CORBA::ULong _pd_origin_id_;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

// OBV_ class
class  OBV_Temperature
  : public virtual Temperature,
    public virtual OBV_Event
{

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:459

  virtual void temperature_ (const ::CORBA::Float);
  virtual ::CORBA::Float temperature_ (void) const;

protected:
  OBV_Temperature (void);
  OBV_Temperature (
      ::CORBA::Long _tao_init_time_,
      ::CORBA::ULong _tao_init_origin_id_,
      ::CORBA::Float _tao_init_temperature_
    );
  virtual ~OBV_Temperature (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Temperature (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Temperature (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  ::CORBA::Float _pd_temperature_;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

// OBV_ class
class  OBV_Position
  : public virtual Position,
    public virtual OBV_Event
{

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:90

  virtual void xyz (const Point);
  virtual Point_slice *xyz (void);
  virtual const Point_slice *xyz (void) const;

protected:
  OBV_Position (void);
  OBV_Position (
      ::CORBA::Long _tao_init_time_,
      ::CORBA::ULong _tao_init_origin_id_,
      const ::Point _tao_init_xyz
    );
  virtual ~OBV_Position (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Position (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Position (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  Point _pd_xyz;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

// OBV_ class
class  OBV_Log_Msg
  : public virtual Log_Msg,
    public virtual OBV_Event
{

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:459

  virtual void urgency (const ::CORBA::Short);
  virtual ::CORBA::Short urgency (void) const;

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:608

  virtual void message (char *val);
  virtual void message (const char *val);
  virtual void message (const ::CORBA::String_var &val);
  virtual const char *message (void) const;

protected:
  OBV_Log_Msg (void);
  OBV_Log_Msg (
      ::CORBA::Long _tao_init_time_,
      ::CORBA::ULong _tao_init_origin_id_,
      ::CORBA::Short _tao_init_urgency,
      const char * _tao_init_message
    );
  virtual ~OBV_Log_Msg (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Log_Msg (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Log_Msg (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  ::CORBA::Short _pd_urgency;
  ::TAO::String_Manager _pd_message;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

// OBV_ class
class  OBV_Event_List_Link
  : public virtual Event_List_Link
{

protected:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:361

  virtual void my_event (Event *);
  virtual Event *my_event (void) const;

protected:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:361

  virtual void next (Event_List_Link *);
  virtual Event_List_Link *next (void) const;

protected:
  OBV_Event_List_Link (void);
  OBV_Event_List_Link (
      ::Event * _tao_init_my_event,
      ::Event_List_Link * _tao_init_next
    );
  virtual ~OBV_Event_List_Link (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Event_List_Link (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Event_List_Link (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  Event_var _pd_my_event;
  Event_List_Link_var _pd_next;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

// OBV_ class
class  OBV_Event_List
  : public virtual Event_List
{

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:361

  virtual void first_link (Event_List_Link *);
  virtual Event_List_Link *first_link (void) const;

protected:
  OBV_Event_List (void);
  OBV_Event_List (
      ::Event_List_Link * _tao_init_first_link
    );
  virtual ~OBV_Event_List (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Event_List (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Event_List (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  Event_List_Link_var _pd_first_link;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

// OBV_ class
class  OBV_Temperature_Criterion
  : public virtual Temperature_Criterion,
    public virtual OBV_Event
{

protected:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:361

  virtual void meltingpoint (Temperature *);
  virtual Temperature *meltingpoint (void) const;

protected:
  OBV_Temperature_Criterion (void);
  OBV_Temperature_Criterion (
      ::CORBA::Long _tao_init_time_,
      ::CORBA::ULong _tao_init_origin_id_,
      ::Temperature * _tao_init_meltingpoint
    );
  virtual ~OBV_Temperature_Criterion (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Temperature_Criterion (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Temperature_Criterion (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  Temperature_var _pd_meltingpoint;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

// OBV_ class
class  OBV_Position_Criterion
  : public virtual Position_Criterion,
    public virtual OBV_Event
{

protected:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:361

  virtual void leftbottom (Position *);
  virtual Position *leftbottom (void) const;

protected:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:361

  virtual void topright (Position *);
  virtual Position *topright (void) const;

protected:
  OBV_Position_Criterion (void);
  OBV_Position_Criterion (
      ::CORBA::Long _tao_init_time_,
      ::CORBA::ULong _tao_init_origin_id_,
      ::Position * _tao_init_leftbottom,
      ::Position * _tao_init_topright
    );
  virtual ~OBV_Position_Criterion (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Position_Criterion (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Position_Criterion (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  Position_var _pd_leftbottom;
  Position_var _pd_topright;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

// OBV_ class
class  OBV_Log_Msg_Criterion
  : public virtual Log_Msg_Criterion,
    public virtual OBV_Event
{

protected:
  OBV_Log_Msg_Criterion (void);
  OBV_Log_Msg_Criterion (
      ::CORBA::Long _tao_init_time_,
      ::CORBA::ULong _tao_init_origin_id_
    );
  virtual ~OBV_Log_Msg_Criterion (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Log_Msg_Criterion (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Log_Msg_Criterion (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_obv_ch.cpp:44

// OBV_ class
class  OBV_Criterion_List
  : public virtual Criterion_List
{

public:

  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:361

  virtual void my_list (Event_List *);
  virtual Event_List *my_list (void) const;

protected:
  OBV_Criterion_List (void);
  OBV_Criterion_List (
      ::Event_List * _tao_init_my_list
    );
  virtual ~OBV_Criterion_List (void);
  
protected:
  virtual ::CORBA::Boolean
  _tao_marshal__Criterion_List (TAO_OutputCDR &, TAO_ChunkInfo &) const;

  virtual ::CORBA::Boolean
  _tao_unmarshal__Criterion_List (TAO_InputCDR &, TAO_ChunkInfo &);

  ::CORBA::Boolean _tao_marshal_state (TAO_OutputCDR &, TAO_ChunkInfo &) const;
  ::CORBA::Boolean _tao_unmarshal_state (TAO_InputCDR &, TAO_ChunkInfo &);
  virtual void truncation_hook (void);

private:
  Event_List_var _pd_my_list;
  CORBA::Boolean require_truncation_;
};

// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_EVENT__TRAITS_)
#define _EVENT__TRAITS_

  template<>
  struct  Value_Traits<Event>
  {
    static void add_ref (Event *);
    static void remove_ref (Event *);
    static void release (Event *);
  };

#endif /* end #if !defined */

#if !defined (_TEMPERATURE__TRAITS_)
#define _TEMPERATURE__TRAITS_

  template<>
  struct  Value_Traits<Temperature>
  {
    static void add_ref (Temperature *);
    static void remove_ref (Temperature *);
    static void release (Temperature *);
  };

#endif /* end #if !defined */
  template<>
  struct  Array_Traits<
      Point_forany
    >
  {
    static void free (
        Point_slice * _tao_slice);
    static Point_slice * dup (
        const Point_slice * _tao_slice);
    static void copy (
        Point_slice * _tao_to,
        const Point_slice * _tao_from);
    static Point_slice * alloc (void);
    static void zero (
        Point_slice * _tao_slice);
  };

#if !defined (_POSITION__TRAITS_)
#define _POSITION__TRAITS_

  template<>
  struct  Value_Traits<Position>
  {
    static void add_ref (Position *);
    static void remove_ref (Position *);
    static void release (Position *);
  };

#endif /* end #if !defined */

#if !defined (_LOG_MSG__TRAITS_)
#define _LOG_MSG__TRAITS_

  template<>
  struct  Value_Traits<Log_Msg>
  {
    static void add_ref (Log_Msg *);
    static void remove_ref (Log_Msg *);
    static void release (Log_Msg *);
  };

#endif /* end #if !defined */

#if !defined (_EVENT_LIST_LINK__TRAITS_)
#define _EVENT_LIST_LINK__TRAITS_

  template<>
  struct  Value_Traits<Event_List_Link>
  {
    static void add_ref (Event_List_Link *);
    static void remove_ref (Event_List_Link *);
    static void release (Event_List_Link *);
  };

#endif /* end #if !defined */

#if !defined (_EVENT_LIST__TRAITS_)
#define _EVENT_LIST__TRAITS_

  template<>
  struct  Value_Traits<Event_List>
  {
    static void add_ref (Event_List *);
    static void remove_ref (Event_List *);
    static void release (Event_List *);
  };

#endif /* end #if !defined */

#if !defined (_CHECKPOINT__TRAITS_)
#define _CHECKPOINT__TRAITS_

  template<>
  struct  Objref_Traits< ::Checkpoint>
  {
    static ::Checkpoint_ptr duplicate (
        ::Checkpoint_ptr p);
    static void release (
        ::Checkpoint_ptr p);
    static ::Checkpoint_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Checkpoint_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CRITERION__TRAITS_)
#define _CRITERION__TRAITS_

  template<>
  struct  Value_Traits<Criterion>
  {
    static void add_ref (Criterion *);
    static void remove_ref (Criterion *);
    static void release (Criterion *);
  };

#endif /* end #if !defined */

#if !defined (_TEMPERATURE_CRITERION__TRAITS_)
#define _TEMPERATURE_CRITERION__TRAITS_

  template<>
  struct  Value_Traits<Temperature_Criterion>
  {
    static void add_ref (Temperature_Criterion *);
    static void remove_ref (Temperature_Criterion *);
    static void release (Temperature_Criterion *);
  };

#endif /* end #if !defined */

#if !defined (_POSITION_CRITERION__TRAITS_)
#define _POSITION_CRITERION__TRAITS_

  template<>
  struct  Value_Traits<Position_Criterion>
  {
    static void add_ref (Position_Criterion *);
    static void remove_ref (Position_Criterion *);
    static void release (Position_Criterion *);
  };

#endif /* end #if !defined */

#if !defined (_LOG_MSG_CRITERION__TRAITS_)
#define _LOG_MSG_CRITERION__TRAITS_

  template<>
  struct  Value_Traits<Log_Msg_Criterion>
  {
    static void add_ref (Log_Msg_Criterion *);
    static void remove_ref (Log_Msg_Criterion *);
    static void release (Log_Msg_Criterion *);
  };

#endif /* end #if !defined */

#if !defined (_CRITERION_LIST__TRAITS_)
#define _CRITERION_LIST__TRAITS_

  template<>
  struct  Value_Traits<Criterion_List>
  {
    static void add_ref (Criterion_List *);
    static void remove_ref (Criterion_List *);
    static void release (Criterion_List *);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (Event *);
  extern  void remove_ref (Event *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Event *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Event *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (Temperature *);
  extern  void remove_ref (Temperature *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Temperature *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Temperature *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:99


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 CORBA::Boolean operator<< (TAO_OutputCDR &strm, const ::Point_forany &_tao_array);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, ::Point_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (Position *);
  extern  void remove_ref (Position *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Position *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Position *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (Log_Msg *);
  extern  void remove_ref (Log_Msg *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Log_Msg *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Log_Msg *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (Event_List_Link *);
  extern  void remove_ref (Event_List_Link *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Event_List_Link *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Event_List_Link *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (Event_List *);
  extern  void remove_ref (Event_List *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Event_List *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Event_List *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:41

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Checkpoint_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Checkpoint_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (Criterion *);
  extern  void remove_ref (Criterion *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Criterion *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Criterion *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (Temperature_Criterion *);
  extern  void remove_ref (Temperature_Criterion *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Temperature_Criterion *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Temperature_Criterion *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (Position_Criterion *);
  extern  void remove_ref (Position_Criterion *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Position_Criterion *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Position_Criterion *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (Log_Msg_Criterion *);
  extern  void remove_ref (Log_Msg_Criterion *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Log_Msg_Criterion *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Log_Msg_Criterion *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_valuetype.cpp:456


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  extern  void add_ref (Criterion_List *);
  extern  void remove_ref (Criterion_List *);
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/cdr_op_ch.cpp:49


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Criterion_List *);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, Criterion_List *&);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1700
#if defined (__ACE_INLINE__)
#include "Event_TypesC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

