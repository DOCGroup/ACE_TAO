// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:373


#include "QuoterC.h"
#include "tao/CDR.h"
#include "tao/Exception_Data.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "tao/SystemException.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "QuoterC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_exception/exception_cs.cpp:98

Stock::Invalid_Stock::Invalid_Stock (void)
  : ::CORBA::UserException (
        "IDL:Stock/Invalid_Stock:1.0",
        "Invalid_Stock"
      )
{
}

Stock::Invalid_Stock::~Invalid_Stock (void)
{
}

Stock::Invalid_Stock::Invalid_Stock (const ::Stock::Invalid_Stock &_tao_excp)
  : ::CORBA::UserException (
        _tao_excp._rep_id (),
        _tao_excp._name ()
      )
{
}

Stock::Invalid_Stock&
Stock::Invalid_Stock::operator= (const ::Stock::Invalid_Stock &_tao_excp)
{
  this->::CORBA::UserException::operator= (_tao_excp);
  return *this;
}

Stock::Invalid_Stock *
Stock::Invalid_Stock::_downcast ( ::CORBA::Exception *_tao_excp)
{
  return dynamic_cast<Invalid_Stock *> (_tao_excp);
}

const Stock::Invalid_Stock *
Stock::Invalid_Stock::_downcast ( ::CORBA::Exception const *_tao_excp)
{
  return dynamic_cast<const Invalid_Stock *> (_tao_excp);
}

::CORBA::Exception *Stock::Invalid_Stock::_alloc (void)
{
  ::CORBA::Exception *retval = 0;
  ACE_NEW_RETURN (retval, ::Stock::Invalid_Stock, 0);
  return retval;
}

::CORBA::Exception *
Stock::Invalid_Stock::_tao_duplicate (void) const
{
  ::CORBA::Exception *result = 0;
  ACE_NEW_RETURN (
      result,
      ::Stock::Invalid_Stock (*this),
      0
    );
  return result;
}

void Stock::Invalid_Stock::_raise (void) const
{
  throw *this;
}

void Stock::Invalid_Stock::_tao_encode (TAO_OutputCDR &cdr) const
{
  if (!(cdr << *this))
    {
      throw ::CORBA::MARSHAL ();
    }
}

void Stock::Invalid_Stock::_tao_decode (TAO_InputCDR &cdr)
{
  if (!(cdr >> *this))
    {
      throw ::CORBA::MARSHAL ();
    }
}



// TAO_IDL - Generated from
// be/be_visitor_exception/exception_cs.cpp:98

Stock::Invalid_Quoter::Invalid_Quoter (void)
  : ::CORBA::UserException (
        "IDL:Stock/Invalid_Quoter:1.0",
        "Invalid_Quoter"
      )
{
}

Stock::Invalid_Quoter::~Invalid_Quoter (void)
{
}

Stock::Invalid_Quoter::Invalid_Quoter (const ::Stock::Invalid_Quoter &_tao_excp)
  : ::CORBA::UserException (
        _tao_excp._rep_id (),
        _tao_excp._name ()
      )
{
}

Stock::Invalid_Quoter&
Stock::Invalid_Quoter::operator= (const ::Stock::Invalid_Quoter &_tao_excp)
{
  this->::CORBA::UserException::operator= (_tao_excp);
  return *this;
}

Stock::Invalid_Quoter *
Stock::Invalid_Quoter::_downcast ( ::CORBA::Exception *_tao_excp)
{
  return dynamic_cast<Invalid_Quoter *> (_tao_excp);
}

const Stock::Invalid_Quoter *
Stock::Invalid_Quoter::_downcast ( ::CORBA::Exception const *_tao_excp)
{
  return dynamic_cast<const Invalid_Quoter *> (_tao_excp);
}

::CORBA::Exception *Stock::Invalid_Quoter::_alloc (void)
{
  ::CORBA::Exception *retval = 0;
  ACE_NEW_RETURN (retval, ::Stock::Invalid_Quoter, 0);
  return retval;
}

::CORBA::Exception *
Stock::Invalid_Quoter::_tao_duplicate (void) const
{
  ::CORBA::Exception *result = 0;
  ACE_NEW_RETURN (
      result,
      ::Stock::Invalid_Quoter (*this),
      0
    );
  return result;
}

void Stock::Invalid_Quoter::_raise (void) const
{
  throw *this;
}

void Stock::Invalid_Quoter::_tao_encode (TAO_OutputCDR &cdr) const
{
  if (!(cdr << *this))
    {
      throw ::CORBA::MARSHAL ();
    }
}

void Stock::Invalid_Quoter::_tao_decode (TAO_InputCDR &cdr)
{
  if (!(cdr >> *this))
    {
      throw ::CORBA::MARSHAL ();
    }
}



// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:48

// Traits specializations for Stock::Quoter.

Stock::Quoter_ptr
TAO::Objref_Traits<Stock::Quoter>::duplicate (
    Stock::Quoter_ptr p)
{
  return Stock::Quoter::_duplicate (p);
}

void
TAO::Objref_Traits<Stock::Quoter>::release (
    Stock::Quoter_ptr p)
{
  ::CORBA::release (p);
}

Stock::Quoter_ptr
TAO::Objref_Traits<Stock::Quoter>::nil (void)
{
  return Stock::Quoter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Stock::Quoter>::marshal (
    const Stock::Quoter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:88

::CORBA::Long
Stock::Quoter::get_quote (
  const char * stock_name)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::CORBA::Long>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_stock_name (stock_name);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_stock_name
    };

  static TAO::Exception_Data
  _tao_Stock_Quoter_get_quote_exceptiondata [] = 
    {
      {
        "IDL:Stock/Invalid_Stock:1.0",
        Stock::Invalid_Stock::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , 0
#endif /* TAO_HAS_INTERCEPTORS */
      },

      {
        "IDL:Stock/Invalid_Quoter:1.0",
        Stock::Invalid_Quoter::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , 0
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "get_quote",
      9,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (
      _tao_Stock_Quoter_get_quote_exceptiondata,
      2
    );

  return _tao_retval.retn ();
}

Stock::Quoter::Quoter (void)
{
}

Stock::Quoter::~Quoter (void)
{
}

Stock::Quoter_ptr
Stock::Quoter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<Quoter>::narrow (
        _tao_objref,
        "IDL:Stock/Quoter:1.0");
}

Stock::Quoter_ptr
Stock::Quoter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<Quoter>::unchecked_narrow (
        _tao_objref);
}

Stock::Quoter_ptr
Stock::Quoter::_nil (void)
{
  return 0;
}

Stock::Quoter_ptr
Stock::Quoter::_duplicate (Quoter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Stock::Quoter::_tao_release (Quoter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Stock::Quoter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CosLifeCycle/LifeCycleObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Stock/Quoter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* Stock::Quoter::_interface_repository_id (void) const
{
  return "IDL:Stock/Quoter:1.0";
}

::CORBA::Boolean
Stock::Quoter::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:48

// Traits specializations for Stock::Quoter_Factory.

Stock::Quoter_Factory_ptr
TAO::Objref_Traits<Stock::Quoter_Factory>::duplicate (
    Stock::Quoter_Factory_ptr p)
{
  return Stock::Quoter_Factory::_duplicate (p);
}

void
TAO::Objref_Traits<Stock::Quoter_Factory>::release (
    Stock::Quoter_Factory_ptr p)
{
  ::CORBA::release (p);
}

Stock::Quoter_Factory_ptr
TAO::Objref_Traits<Stock::Quoter_Factory>::nil (void)
{
  return Stock::Quoter_Factory::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Stock::Quoter_Factory>::marshal (
    const Stock::Quoter_Factory_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:88

::Stock::Quoter_ptr
Stock::Quoter_Factory::create_quoter (
  const char * name)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::Stock::Quoter>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_name (name);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_name
    };

  static TAO::Exception_Data
  _tao_Stock_Quoter_Factory_create_quoter_exceptiondata [] = 
    {
      {
        "IDL:Stock/Invalid_Quoter:1.0",
        Stock::Invalid_Quoter::_alloc
#if TAO_HAS_INTERCEPTORS == 1
        , 0
#endif /* TAO_HAS_INTERCEPTORS */
      }
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "create_quoter",
      13,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (
      _tao_Stock_Quoter_Factory_create_quoter_exceptiondata,
      1
    );

  return _tao_retval.retn ();
}

Stock::Quoter_Factory::Quoter_Factory (void)
{
}

Stock::Quoter_Factory::~Quoter_Factory (void)
{
}

Stock::Quoter_Factory_ptr
Stock::Quoter_Factory::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<Quoter_Factory>::narrow (
        _tao_objref,
        "IDL:Stock/Quoter_Factory:1.0");
}

Stock::Quoter_Factory_ptr
Stock::Quoter_Factory::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<Quoter_Factory>::unchecked_narrow (
        _tao_objref);
}

Stock::Quoter_Factory_ptr
Stock::Quoter_Factory::_nil (void)
{
  return 0;
}

Stock::Quoter_Factory_ptr
Stock::Quoter_Factory::_duplicate (Quoter_Factory_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Stock::Quoter_Factory::_tao_release (Quoter_Factory_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Stock::Quoter_Factory::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:Stock/Quoter_Factory:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* Stock::Quoter_Factory::_interface_repository_id (void) const
{
  return "IDL:Stock/Quoter_Factory:1.0";
}

::CORBA::Boolean
Stock::Quoter_Factory::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:48

// Traits specializations for Stock::Quoter_Factory_Finder.

Stock::Quoter_Factory_Finder_ptr
TAO::Objref_Traits<Stock::Quoter_Factory_Finder>::duplicate (
    Stock::Quoter_Factory_Finder_ptr p)
{
  return Stock::Quoter_Factory_Finder::_duplicate (p);
}

void
TAO::Objref_Traits<Stock::Quoter_Factory_Finder>::release (
    Stock::Quoter_Factory_Finder_ptr p)
{
  ::CORBA::release (p);
}

Stock::Quoter_Factory_Finder_ptr
TAO::Objref_Traits<Stock::Quoter_Factory_Finder>::nil (void)
{
  return Stock::Quoter_Factory_Finder::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Stock::Quoter_Factory_Finder>::marshal (
    const Stock::Quoter_Factory_Finder_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

Stock::Quoter_Factory_Finder::Quoter_Factory_Finder (void)
{
}

Stock::Quoter_Factory_Finder::~Quoter_Factory_Finder (void)
{
}

Stock::Quoter_Factory_Finder_ptr
Stock::Quoter_Factory_Finder::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<Quoter_Factory_Finder>::narrow (
        _tao_objref,
        "IDL:Stock/Quoter_Factory_Finder:1.0");
}

Stock::Quoter_Factory_Finder_ptr
Stock::Quoter_Factory_Finder::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<Quoter_Factory_Finder>::unchecked_narrow (
        _tao_objref);
}

Stock::Quoter_Factory_Finder_ptr
Stock::Quoter_Factory_Finder::_nil (void)
{
  return 0;
}

Stock::Quoter_Factory_Finder_ptr
Stock::Quoter_Factory_Finder::_duplicate (Quoter_Factory_Finder_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Stock::Quoter_Factory_Finder::_tao_release (Quoter_Factory_Finder_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Stock::Quoter_Factory_Finder::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CosLifeCycle/FactoryFinder:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Stock/Quoter_Factory_Finder:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* Stock::Quoter_Factory_Finder::_interface_repository_id (void) const
{
  return "IDL:Stock/Quoter_Factory_Finder:1.0";
}

::CORBA::Boolean
Stock::Quoter_Factory_Finder::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:48

// Traits specializations for Stock::Quoter_Generic_Factory.

Stock::Quoter_Generic_Factory_ptr
TAO::Objref_Traits<Stock::Quoter_Generic_Factory>::duplicate (
    Stock::Quoter_Generic_Factory_ptr p)
{
  return Stock::Quoter_Generic_Factory::_duplicate (p);
}

void
TAO::Objref_Traits<Stock::Quoter_Generic_Factory>::release (
    Stock::Quoter_Generic_Factory_ptr p)
{
  ::CORBA::release (p);
}

Stock::Quoter_Generic_Factory_ptr
TAO::Objref_Traits<Stock::Quoter_Generic_Factory>::nil (void)
{
  return Stock::Quoter_Generic_Factory::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Stock::Quoter_Generic_Factory>::marshal (
    const Stock::Quoter_Generic_Factory_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

Stock::Quoter_Generic_Factory::Quoter_Generic_Factory (void)
{
}

Stock::Quoter_Generic_Factory::~Quoter_Generic_Factory (void)
{
}

Stock::Quoter_Generic_Factory_ptr
Stock::Quoter_Generic_Factory::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<Quoter_Generic_Factory>::narrow (
        _tao_objref,
        "IDL:Stock/Quoter_Generic_Factory:1.0");
}

Stock::Quoter_Generic_Factory_ptr
Stock::Quoter_Generic_Factory::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<Quoter_Generic_Factory>::unchecked_narrow (
        _tao_objref);
}

Stock::Quoter_Generic_Factory_ptr
Stock::Quoter_Generic_Factory::_nil (void)
{
  return 0;
}

Stock::Quoter_Generic_Factory_ptr
Stock::Quoter_Generic_Factory::_duplicate (Quoter_Generic_Factory_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Stock::Quoter_Generic_Factory::_tao_release (Quoter_Generic_Factory_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Stock::Quoter_Generic_Factory::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CosLifeCycle/GenericFactory:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Stock/Quoter_Generic_Factory:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* Stock::Quoter_Generic_Factory::_interface_repository_id (void) const
{
  return "IDL:Stock/Quoter_Generic_Factory:1.0";
}

::CORBA::Boolean
Stock::Quoter_Generic_Factory::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:48

// Traits specializations for Stock::Quoter_Life_Cycle_Service.

Stock::Quoter_Life_Cycle_Service_ptr
TAO::Objref_Traits<Stock::Quoter_Life_Cycle_Service>::duplicate (
    Stock::Quoter_Life_Cycle_Service_ptr p)
{
  return Stock::Quoter_Life_Cycle_Service::_duplicate (p);
}

void
TAO::Objref_Traits<Stock::Quoter_Life_Cycle_Service>::release (
    Stock::Quoter_Life_Cycle_Service_ptr p)
{
  ::CORBA::release (p);
}

Stock::Quoter_Life_Cycle_Service_ptr
TAO::Objref_Traits<Stock::Quoter_Life_Cycle_Service>::nil (void)
{
  return Stock::Quoter_Life_Cycle_Service::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Stock::Quoter_Life_Cycle_Service>::marshal (
    const Stock::Quoter_Life_Cycle_Service_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:88

void
Stock::Quoter_Life_Cycle_Service::register_factory (
  const char * name,
  const char * location,
  const char * description,
  ::CORBA::Object_ptr object)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< char *>::in_arg_val _tao_location (location);
  TAO::Arg_Traits< char *>::in_arg_val _tao_description (description);
  TAO::Arg_Traits< ::CORBA::Object>::in_arg_val _tao_object (object);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_name,
      &_tao_location,
      &_tao_description,
      &_tao_object
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      5,
      "register_factory",
      16,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);
}

Stock::Quoter_Life_Cycle_Service::Quoter_Life_Cycle_Service (void)
{
}

Stock::Quoter_Life_Cycle_Service::~Quoter_Life_Cycle_Service (void)
{
}

Stock::Quoter_Life_Cycle_Service_ptr
Stock::Quoter_Life_Cycle_Service::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<Quoter_Life_Cycle_Service>::narrow (
        _tao_objref,
        "IDL:Stock/Quoter_Life_Cycle_Service:1.0");
}

Stock::Quoter_Life_Cycle_Service_ptr
Stock::Quoter_Life_Cycle_Service::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<Quoter_Life_Cycle_Service>::unchecked_narrow (
        _tao_objref);
}

Stock::Quoter_Life_Cycle_Service_ptr
Stock::Quoter_Life_Cycle_Service::_nil (void)
{
  return 0;
}

Stock::Quoter_Life_Cycle_Service_ptr
Stock::Quoter_Life_Cycle_Service::_duplicate (Quoter_Life_Cycle_Service_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Stock::Quoter_Life_Cycle_Service::_tao_release (Quoter_Life_Cycle_Service_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Stock::Quoter_Life_Cycle_Service::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CosLifeCycle/GenericFactory:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Stock/Quoter_Life_Cycle_Service:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* Stock::Quoter_Life_Cycle_Service::_interface_repository_id (void) const
{
  return "IDL:Stock/Quoter_Life_Cycle_Service:1.0";
}

::CORBA::Boolean
Stock::Quoter_Life_Cycle_Service::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:48

// Traits specializations for Stock::Criteria_Evaluator.

Stock::Criteria_Evaluator_ptr
TAO::Objref_Traits<Stock::Criteria_Evaluator>::duplicate (
    Stock::Criteria_Evaluator_ptr p)
{
  return Stock::Criteria_Evaluator::_duplicate (p);
}

void
TAO::Objref_Traits<Stock::Criteria_Evaluator>::release (
    Stock::Criteria_Evaluator_ptr p)
{
  ::CORBA::release (p);
}

Stock::Criteria_Evaluator_ptr
TAO::Objref_Traits<Stock::Criteria_Evaluator>::nil (void)
{
  return Stock::Criteria_Evaluator::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Stock::Criteria_Evaluator>::marshal (
    const Stock::Criteria_Evaluator_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_cs.cpp:70

#if !defined (_STOCK_CRITERIA_EVALUATOR_SEQNAMEDVALUEPAIR_CS_)
#define _STOCK_CRITERIA_EVALUATOR_SEQNAMEDVALUEPAIR_CS_

Stock::Criteria_Evaluator::SeqNamedValuePair::SeqNamedValuePair (void)
{}

Stock::Criteria_Evaluator::SeqNamedValuePair::SeqNamedValuePair (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        CosLifeCycle::NameValuePair
      > (max)
{}

Stock::Criteria_Evaluator::SeqNamedValuePair::SeqNamedValuePair (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    CosLifeCycle::NameValuePair * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        CosLifeCycle::NameValuePair
      >
    (max, length, buffer, release)
{}

Stock::Criteria_Evaluator::SeqNamedValuePair::SeqNamedValuePair (
    const SeqNamedValuePair &seq)
  : ::TAO::unbounded_value_sequence<
        CosLifeCycle::NameValuePair
      > (seq)
{}

Stock::Criteria_Evaluator::SeqNamedValuePair::~SeqNamedValuePair (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_exception/exception_ctor.cpp:51

Stock::Criteria_Evaluator::NotAvailable::NotAvailable (
    const char * _tao_reason)
  : ::CORBA::UserException (
        "IDL:Stock/Criteria_Evaluator/NotAvailable:1.0",
        "NotAvailable"
      )
{
  this->reason = ::CORBA::string_dup (_tao_reason);
}



// TAO_IDL - Generated from
// be/be_visitor_exception/exception_cs.cpp:98

Stock::Criteria_Evaluator::NotAvailable::NotAvailable (void)
  : ::CORBA::UserException (
        "IDL:Stock/Criteria_Evaluator/NotAvailable:1.0",
        "NotAvailable"
      )
{
}

Stock::Criteria_Evaluator::NotAvailable::~NotAvailable (void)
{
}

Stock::Criteria_Evaluator::NotAvailable::NotAvailable (const ::Stock::Criteria_Evaluator::NotAvailable &_tao_excp)
  : ::CORBA::UserException (
        _tao_excp._rep_id (),
        _tao_excp._name ()
      )
{
  this->reason = ::CORBA::string_dup (_tao_excp.reason.in ());
}

Stock::Criteria_Evaluator::NotAvailable&
Stock::Criteria_Evaluator::NotAvailable::operator= (const ::Stock::Criteria_Evaluator::NotAvailable &_tao_excp)
{
  this->::CORBA::UserException::operator= (_tao_excp);
  this->reason = ::CORBA::string_dup (_tao_excp.reason.in ());
  return *this;
}

Stock::Criteria_Evaluator::NotAvailable *
Stock::Criteria_Evaluator::NotAvailable::_downcast ( ::CORBA::Exception *_tao_excp)
{
  return dynamic_cast<NotAvailable *> (_tao_excp);
}

const Stock::Criteria_Evaluator::NotAvailable *
Stock::Criteria_Evaluator::NotAvailable::_downcast ( ::CORBA::Exception const *_tao_excp)
{
  return dynamic_cast<const NotAvailable *> (_tao_excp);
}

::CORBA::Exception *Stock::Criteria_Evaluator::NotAvailable::_alloc (void)
{
  ::CORBA::Exception *retval = 0;
  ACE_NEW_RETURN (retval, ::Stock::Criteria_Evaluator::NotAvailable, 0);
  return retval;
}

::CORBA::Exception *
Stock::Criteria_Evaluator::NotAvailable::_tao_duplicate (void) const
{
  ::CORBA::Exception *result = 0;
  ACE_NEW_RETURN (
      result,
      ::Stock::Criteria_Evaluator::NotAvailable (*this),
      0
    );
  return result;
}

void Stock::Criteria_Evaluator::NotAvailable::_raise (void) const
{
  throw *this;
}

void Stock::Criteria_Evaluator::NotAvailable::_tao_encode (TAO_OutputCDR &cdr) const
{
  if (!(cdr << *this))
    {
      throw ::CORBA::MARSHAL ();
    }
}

void Stock::Criteria_Evaluator::NotAvailable::_tao_decode (TAO_InputCDR &cdr)
{
  if (!(cdr >> *this))
    {
      throw ::CORBA::MARSHAL ();
    }
}



// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:88

::Stock::Criteria_Evaluator::SeqNamedValuePair *
Stock::Criteria_Evaluator::getInitialization (
  void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::Stock::Criteria_Evaluator::SeqNamedValuePair>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "getInitialization",
      17,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:88

char *
Stock::Criteria_Evaluator::getFilter (
  void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< char *>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "getFilter",
      9,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:88

::Stock::Criteria_Evaluator::SeqNamedValuePair *
Stock::Criteria_Evaluator::getLogicalLocation (
  void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::Stock::Criteria_Evaluator::SeqNamedValuePair>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "getLogicalLocation",
      18,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:88

char *
Stock::Criteria_Evaluator::getPreferences (
  void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< char *>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "getPreferences",
      14,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY,
      TAO::TAO_TWOWAY_INVOCATION
      ,
      TAO::TAO_SYNCHRONOUS_INVOCATION,
      false
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:88

void
Stock::Criteria_Evaluator::setCriteria (
  const ::Stock::Criteria_Evaluator::Criteria & criteria_)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::Stock::Criteria_Evaluator::Criteria>::in_arg_val _tao_criteria_ (criteria_);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_criteria_
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setCriteria",
      11,
      TAO::TAO_CO_NONE | TAO::TAO_CO_THRU_POA_STRATEGY
      
    );

  _tao_call.invoke (0, 0);
}

Stock::Criteria_Evaluator::Criteria_Evaluator (void)
{
}

Stock::Criteria_Evaluator::~Criteria_Evaluator (void)
{
}

Stock::Criteria_Evaluator_ptr
Stock::Criteria_Evaluator::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<Criteria_Evaluator>::narrow (
        _tao_objref,
        "IDL:Stock/Criteria_Evaluator:1.0");
}

Stock::Criteria_Evaluator_ptr
Stock::Criteria_Evaluator::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<Criteria_Evaluator>::unchecked_narrow (
        _tao_objref);
}

Stock::Criteria_Evaluator_ptr
Stock::Criteria_Evaluator::_nil (void)
{
  return 0;
}

Stock::Criteria_Evaluator_ptr
Stock::Criteria_Evaluator::_duplicate (Criteria_Evaluator_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Stock::Criteria_Evaluator::_tao_release (Criteria_Evaluator_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Stock::Criteria_Evaluator::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:Stock/Criteria_Evaluator:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* Stock::Criteria_Evaluator::_interface_repository_id (void) const
{
  return "IDL:Stock/Criteria_Evaluator:1.0";
}

::CORBA::Boolean
Stock::Criteria_Evaluator::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_cs.cpp:48
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Stock::Invalid_Stock &_tao_aggregate
  )
{
  // Marshal the repository ID.
  return (strm << _tao_aggregate._rep_id ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &,
    Stock::Invalid_Stock&
  )
{
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_cs.cpp:48
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Stock::Invalid_Quoter &_tao_aggregate
  )
{
  // Marshal the repository ID.
  return (strm << _tao_aggregate._rep_id ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &,
    Stock::Invalid_Quoter&
  )
{
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:51

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Stock::Quoter_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Stock::Quoter_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::Stock::Quoter RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:51

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Stock::Quoter_Factory_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Stock::Quoter_Factory_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::Stock::Quoter_Factory RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:51

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Stock::Quoter_Factory_Finder_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Stock::Quoter_Factory_Finder_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::Stock::Quoter_Factory_Finder RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:51

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Stock::Quoter_Generic_Factory_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Stock::Quoter_Generic_Factory_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::Stock::Quoter_Generic_Factory RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:51

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Stock::Quoter_Life_Cycle_Service_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Stock::Quoter_Life_Cycle_Service_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::Stock::Quoter_Life_Cycle_Service RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:93
#if !defined _TAO_CDR_OP_Stock_Criteria_Evaluator_SeqNamedValuePair_CPP_
#define _TAO_CDR_OP_Stock_Criteria_Evaluator_SeqNamedValuePair_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Stock::Criteria_Evaluator::SeqNamedValuePair &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Stock::Criteria_Evaluator::SeqNamedValuePair &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_Stock_Criteria_Evaluator_SeqNamedValuePair_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_exception/cdr_op_cs.cpp:48
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Stock::Criteria_Evaluator::NotAvailable &_tao_aggregate
  )
{
  // First marshal the repository ID.
  if (strm << _tao_aggregate._rep_id ())
    {
      // Now marshal the members (if any).
      return (
        (strm << _tao_aggregate.reason.in ())
       );
    }
  else
    {
      return false;
    }
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Stock::Criteria_Evaluator::NotAvailable &_tao_aggregate
  )
{
  // Demarshal the members.
  return (
    (strm >> _tao_aggregate.reason.out ())
  );
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:51

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Stock::Criteria_Evaluator_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Stock::Criteria_Evaluator_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::Stock::Criteria_Evaluator RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (obj.in ());
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



