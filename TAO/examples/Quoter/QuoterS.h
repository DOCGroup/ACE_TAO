// -*- C++ -*-
/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.4.1
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.dre.vanderbilt.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:458

#ifndef _TAO_IDL_QUOTERS_LLVDGP_H_
#define _TAO_IDL_QUOTERS_LLVDGP_H_

#include /**/ "ace/pre.h"

#include "QuoterC.h"
#include "orbsvcs/CosLifeCycleS.h"
#include "tao/PortableServer/Basic_SArguments.h"
#include "tao/PortableServer/Special_Basic_SArguments.h"
#include "tao/PortableServer/Fixed_Size_SArgument_T.h"
#include "tao/PortableServer/Var_Size_SArgument_T.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/UB_String_SArguments.h"
#include "tao/PortableServer/Object_SArg_Traits.h"
#include "tao/PortableServer/get_arg.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_STOCK_QUOTER__SARG_TRAITS_)
#define _STOCK_QUOTER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Stock::Quoter>
    : public
        Object_SArg_Traits_T<
            ::Stock::Quoter_ptr,
            ::Stock::Quoter_var,
            ::Stock::Quoter_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_STOCK_QUOTER_FACTORY__SARG_TRAITS_)
#define _STOCK_QUOTER_FACTORY__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Stock::Quoter_Factory>
    : public
        Object_SArg_Traits_T<
            ::Stock::Quoter_Factory_ptr,
            ::Stock::Quoter_Factory_var,
            ::Stock::Quoter_Factory_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_STOCK_QUOTER_FACTORY_FINDER__SARG_TRAITS_)
#define _STOCK_QUOTER_FACTORY_FINDER__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Stock::Quoter_Factory_Finder>
    : public
        Object_SArg_Traits_T<
            ::Stock::Quoter_Factory_Finder_ptr,
            ::Stock::Quoter_Factory_Finder_var,
            ::Stock::Quoter_Factory_Finder_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_STOCK_QUOTER_GENERIC_FACTORY__SARG_TRAITS_)
#define _STOCK_QUOTER_GENERIC_FACTORY__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Stock::Quoter_Generic_Factory>
    : public
        Object_SArg_Traits_T<
            ::Stock::Quoter_Generic_Factory_ptr,
            ::Stock::Quoter_Generic_Factory_var,
            ::Stock::Quoter_Generic_Factory_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_STOCK_QUOTER_LIFE_CYCLE_SERVICE__SARG_TRAITS_)
#define _STOCK_QUOTER_LIFE_CYCLE_SERVICE__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Stock::Quoter_Life_Cycle_Service>
    : public
        Object_SArg_Traits_T<
            ::Stock::Quoter_Life_Cycle_Service_ptr,
            ::Stock::Quoter_Life_Cycle_Service_var,
            ::Stock::Quoter_Life_Cycle_Service_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:145

#if !defined (_STOCK_CRITERIA_EVALUATOR__SARG_TRAITS_)
#define _STOCK_CRITERIA_EVALUATOR__SARG_TRAITS_

  template<>
  class  SArg_Traits< ::Stock::Criteria_Evaluator>
    : public
        Object_SArg_Traits_T<
            ::Stock::Criteria_Evaluator_ptr,
            ::Stock::Criteria_Evaluator_var,
            ::Stock::Criteria_Evaluator_out,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:683

  template<>
  class SArg_Traits< ::Stock::Criteria_Evaluator::SeqNamedValuePair>
    : public
        Var_Size_SArg_Traits_T<
            ::Stock::Criteria_Evaluator::SeqNamedValuePair,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:35

namespace POA_Stock
{


  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class Quoter;
  typedef Quoter *Quoter_ptr;

  class  Quoter
    : public virtual POA_CosLifeCycle::LifeCycleObject
  {
  protected:
    Quoter (void);

  public:
    /// Useful for template programming.
    typedef ::Stock::Quoter _stub_type;
    typedef ::Stock::Quoter_ptr _stub_ptr_type;
    typedef ::Stock::Quoter_var _stub_var_type;

    Quoter (const Quoter& rhs);
    virtual ~Quoter (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);

    ::Stock::Quoter *_this (void);

    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual ::CORBA::Long get_quote (
      const char * stock_name) = 0;

    static void get_quote_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class Quoter_Factory;
  typedef Quoter_Factory *Quoter_Factory_ptr;

  class  Quoter_Factory
    : public virtual PortableServer::ServantBase
  {
  protected:
    Quoter_Factory (void);

  public:
    /// Useful for template programming.
    typedef ::Stock::Quoter_Factory _stub_type;
    typedef ::Stock::Quoter_Factory_ptr _stub_ptr_type;
    typedef ::Stock::Quoter_Factory_var _stub_var_type;

    Quoter_Factory (const Quoter_Factory& rhs);
    virtual ~Quoter_Factory (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);

    ::Stock::Quoter_Factory *_this (void);

    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual ::Stock::Quoter_ptr create_quoter (
      const char * name) = 0;

    static void create_quoter_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class Quoter_Factory_Finder;
  typedef Quoter_Factory_Finder *Quoter_Factory_Finder_ptr;

  class  Quoter_Factory_Finder
    : public virtual POA_CosLifeCycle::FactoryFinder
  {
  protected:
    Quoter_Factory_Finder (void);

  public:
    /// Useful for template programming.
    typedef ::Stock::Quoter_Factory_Finder _stub_type;
    typedef ::Stock::Quoter_Factory_Finder_ptr _stub_ptr_type;
    typedef ::Stock::Quoter_Factory_Finder_var _stub_var_type;

    Quoter_Factory_Finder (const Quoter_Factory_Finder& rhs);
    virtual ~Quoter_Factory_Finder (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);

    ::Stock::Quoter_Factory_Finder *_this (void);

    virtual const char* _interface_repository_id (void) const;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class Quoter_Generic_Factory;
  typedef Quoter_Generic_Factory *Quoter_Generic_Factory_ptr;

  class  Quoter_Generic_Factory
    : public virtual POA_CosLifeCycle::GenericFactory
  {
  protected:
    Quoter_Generic_Factory (void);

  public:
    /// Useful for template programming.
    typedef ::Stock::Quoter_Generic_Factory _stub_type;
    typedef ::Stock::Quoter_Generic_Factory_ptr _stub_ptr_type;
    typedef ::Stock::Quoter_Generic_Factory_var _stub_var_type;

    Quoter_Generic_Factory (const Quoter_Generic_Factory& rhs);
    virtual ~Quoter_Generic_Factory (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);

    ::Stock::Quoter_Generic_Factory *_this (void);

    virtual const char* _interface_repository_id (void) const;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class Quoter_Life_Cycle_Service;
  typedef Quoter_Life_Cycle_Service *Quoter_Life_Cycle_Service_ptr;

  class  Quoter_Life_Cycle_Service
    : public virtual POA_CosLifeCycle::GenericFactory
  {
  protected:
    Quoter_Life_Cycle_Service (void);

  public:
    /// Useful for template programming.
    typedef ::Stock::Quoter_Life_Cycle_Service _stub_type;
    typedef ::Stock::Quoter_Life_Cycle_Service_ptr _stub_ptr_type;
    typedef ::Stock::Quoter_Life_Cycle_Service_var _stub_var_type;

    Quoter_Life_Cycle_Service (const Quoter_Life_Cycle_Service& rhs);
    virtual ~Quoter_Life_Cycle_Service (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);

    ::Stock::Quoter_Life_Cycle_Service *_this (void);

    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void register_factory (
      const char * name,
      const char * location,
      const char * description,
      ::CORBA::Object_ptr object) = 0;

    static void register_factory_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:73

  class Criteria_Evaluator;
  typedef Criteria_Evaluator *Criteria_Evaluator_ptr;

  class  Criteria_Evaluator
    : public virtual PortableServer::ServantBase
  {
  protected:
    Criteria_Evaluator (void);

  public:
    /// Useful for template programming.
    typedef ::Stock::Criteria_Evaluator _stub_type;
    typedef ::Stock::Criteria_Evaluator_ptr _stub_ptr_type;
    typedef ::Stock::Criteria_Evaluator_var _stub_var_type;

    Criteria_Evaluator (const Criteria_Evaluator& rhs);
    virtual ~Criteria_Evaluator (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    virtual void _dispatch (
        TAO_ServerRequest & req,
        TAO::Portable_Server::Servant_Upcall *servant_upcall);

    ::Stock::Criteria_Evaluator *_this (void);

    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual ::Stock::Criteria_Evaluator::SeqNamedValuePair * getInitialization (
      void) = 0;

    static void getInitialization_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual char * getFilter (
      void) = 0;

    static void getFilter_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual ::Stock::Criteria_Evaluator::SeqNamedValuePair * getLogicalLocation (
      void) = 0;

    static void getLogicalLocation_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual char * getPreferences (
      void) = 0;

    static void getPreferences_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:36

    virtual void setCriteria (
      const ::Stock::Criteria_Evaluator::Criteria & criteria_) = 0;

    static void setCriteria_skel (
        TAO_ServerRequest &server_request,
        TAO::Portable_Server::Servant_Upcall *servant_upcall,
        TAO_ServantBase *servant);
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:66

} // module Stock

#include /**/ "ace/post.h"

#endif /* ifndef */

