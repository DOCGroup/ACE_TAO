##  Process this file with automake to create Makefile.in
##
## $Id$
##
## This file was generated by MPC.  Any changes made directly to
## this file will be lost the next time it is generated.
##
## MPC Command:
## /acebuilds/ACE_wrappers-repository/bin/mwc.pl -include /acebuilds/MPC/config -include /acebuilds/MPC/templates -feature_file /acebuilds/ACE_wrappers-repository/local.features -noreldefs -type automake -exclude build,Kokyu

ACE_BUILDDIR = $(top_builddir)
ACE_ROOT = $(top_srcdir)

CLEANFILES =
BUILT_SOURCES =
noinst_PROGRAMS =

## Makefile.adainset.am 

if !BUILD_USES_WCHAR

BUILT_SOURCES += \
  ada.cpp

CLEANFILES += \
  ada.cpp \
  ada-stamp

ada.cpp: ada-stamp

ada-stamp: $(srcdir)/ada.gperf
	../src/gperf -a -k1,4,$$ $(srcdir)/ada.gperf > ada.cpp
	@touch $@

noinst_PROGRAMS += aout

aout_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR)

aout_SOURCES = \
  ada.cpp \
  test.cpp

aout_LDADD = \
  $(ACE_BUILDDIR)/ace/libACE.la

endif !BUILD_USES_WCHAR

## Makefile.cinset.am 

if !BUILD_USES_WCHAR

BUILT_SOURCES += \
  c.cpp

CLEANFILES += \
  c.cpp \
  c-stamp

c.cpp: c-stamp

c-stamp: $(srcdir)/c.gperf
	../src/gperf -a -p -c -l -S1 -o $(srcdir)/c.gperf > c.cpp
	@touch $@

noinst_PROGRAMS += cout

cout_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR)

cout_SOURCES = \
  c.cpp \
  test.cpp

cout_LDADD = \
  $(ACE_BUILDDIR)/ace/libACE.la

endif !BUILD_USES_WCHAR

## Makefile.cppinset.am 

if !BUILD_USES_WCHAR

BUILT_SOURCES += \
  cpp.cpp

CLEANFILES += \
  cpp.cpp \
  cpp-stamp

cpp.cpp: cpp-stamp

cpp-stamp: $(srcdir)/cpp.gperf
	../src/gperf -a -D $(srcdir)/cpp.gperf > cpp.cpp
	@touch $@

noinst_PROGRAMS += cppout

cppout_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR)

cppout_SOURCES = \
  cpp.cpp \
  test.cpp

cppout_LDADD = \
  $(ACE_BUILDDIR)/ace/libACE.la

endif !BUILD_USES_WCHAR

## Makefile.iinset.am 

if !BUILD_USES_WCHAR

BUILT_SOURCES += \
  idl.cpp

CLEANFILES += \
  idl.cpp \
  idl-stamp

idl.cpp: idl-stamp

idl-stamp: $(srcdir)/idl.gperf
	../src/gperf -m -M -c -C -D -S1 -E -T -a -o -p $(srcdir)/idl.gperf > idl.cpp
	@touch $@

noinst_PROGRAMS += iout

iout_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR)

iout_SOURCES = \
  idl.cpp \
  test.cpp

iout_LDADD = \
  $(ACE_BUILDDIR)/ace/libACE.la

endif !BUILD_USES_WCHAR

## Makefile.iinset2.am 

if !BUILD_USES_WCHAR

BUILT_SOURCES += \
  iout2_gen/idl.cpp

CLEANFILES += \
  iout2_gen/idl.cpp \
  iout2_gen/idl-stamp

iout2_gen/idl.cpp: iout2_gen/idl-stamp

iout2_gen/idl-stamp: $(srcdir)/idl.gperf
	mkdir -p iout2_gen
	../src/gperf -m -M -c -C -D -E -T -a -o -p $(srcdir)/idl.gperf > iout2_gen/idl.cpp
	@touch $@

noinst_PROGRAMS += iout2

iout2_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR)

iout2_SOURCES = \
  iout2_gen/idl.cpp \
  test.cpp

iout2_LDADD = \
  $(ACE_BUILDDIR)/ace/libACE.la

endif !BUILD_USES_WCHAR

## Makefile.m3inset.am 

if !BUILD_USES_WCHAR

BUILT_SOURCES += \
  modula3.cpp

CLEANFILES += \
  modula3.cpp \
  modula3-stamp

modula3.cpp: modula3-stamp

modula3-stamp: $(srcdir)/modula3.gperf
	../src/gperf -a -k1,2,$$ $(srcdir)/modula3.gperf > modula3.cpp
	@touch $@

noinst_PROGRAMS += m3out

m3out_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR)

m3out_SOURCES = \
  modula3.cpp \
  test.cpp

m3out_LDADD = \
  $(ACE_BUILDDIR)/ace/libACE.la

endif !BUILD_USES_WCHAR

## Makefile.pinset.am 

if !BUILD_USES_WCHAR

BUILT_SOURCES += \
  pascal.cpp

CLEANFILES += \
  pascal.cpp \
  pascal-stamp

pascal.cpp: pascal-stamp

pascal-stamp: $(srcdir)/pascal.gperf
	../src/gperf -a -o -S2 -p $(srcdir)/pascal.gperf > pascal.cpp
	@touch $@

noinst_PROGRAMS += pout

pout_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR)

pout_SOURCES = \
  pascal.cpp \
  test.cpp

pout_LDADD = \
  $(ACE_BUILDDIR)/ace/libACE.la

endif !BUILD_USES_WCHAR

## Makefile.preinset.am 

if !BUILD_USES_WCHAR

BUILT_SOURCES += \
  adadefs.cpp

CLEANFILES += \
  adadefs.cpp \
  adadefs-stamp

adadefs.cpp: adadefs-stamp

adadefs-stamp: $(srcdir)/adadefs.gperf
	../src/gperf -a -p -D -k1,$$ -s 2 -o $(srcdir)/adadefs.gperf > adadefs.cpp
	@touch $@

noinst_PROGRAMS += preout

preout_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR)

preout_SOURCES = \
  adadefs.cpp \
  test.cpp

preout_LDADD = \
  $(ACE_BUILDDIR)/ace/libACE.la

endif !BUILD_USES_WCHAR

## Makefile.taoinset.am 

if !BUILD_USES_WCHAR

BUILT_SOURCES += \
  tao.cpp

CLEANFILES += \
  tao.cpp \
  tao-stamp

tao.cpp: tao-stamp

tao-stamp: $(srcdir)/tao.gperf
	../src/gperf -c -C -D -E -f 0 -a -o $(srcdir)/tao.gperf > tao.cpp
	@touch $@

noinst_PROGRAMS += taoout

taoout_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR)

taoout_SOURCES = \
  tao.cpp \
  test.cpp

taoout_LDADD = \
  $(ACE_BUILDDIR)/ace/libACE.la

endif !BUILD_USES_WCHAR

## Makefile.tinset.am 

if !BUILD_USES_WCHAR

BUILT_SOURCES += \
  corba.cpp

CLEANFILES += \
  corba.cpp \
  corba-stamp

corba.cpp: corba-stamp

corba-stamp: $(srcdir)/corba.gperf
	../src/gperf -a -o $(srcdir)/corba.gperf > corba.cpp
	@touch $@

noinst_PROGRAMS += tout

tout_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR)

tout_SOURCES = \
  corba.cpp \
  test.cpp

tout_LDADD = \
  $(ACE_BUILDDIR)/ace/libACE.la

endif !BUILD_USES_WCHAR

## Clean up template repositories, etc.
clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
