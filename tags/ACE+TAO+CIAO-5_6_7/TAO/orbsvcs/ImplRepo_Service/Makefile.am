##  Process this file with automake to create Makefile.in
##
## $Id$
##
## This file was generated by MPC.  Any changes made directly to
## this file will be lost the next time it is generated.
##
## MPC Command:
## ../bin/mwc.pl -type automake -noreldefs TAO.mwc

ACE_BUILDDIR = $(top_builddir)/..
ACE_ROOT = $(top_srcdir)/..
TAO_BUILDDIR = $(top_builddir)
TAO_IDL = ACE_ROOT=$(ACE_ROOT) TAO_ROOT=$(TAO_ROOT) $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDL_DEP = $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDLFLAGS = -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I$(TAO_ROOT) -I$(srcdir) -g $(ACE_BUILDDIR)/apps/gperf/src/ace_gperf
TAO_ROOT = $(top_srcdir)

noinst_LTLIBRARIES =
CLEANFILES =
BUILT_SOURCES =
bin_PROGRAMS =
noinst_HEADERS =

## Makefile.ImR_Activator_IDL.am

if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  ImR_ActivatorC.cpp \
  ImR_ActivatorC.h \
  ImR_ActivatorC.inl \
  ImR_ActivatorS.cpp \
  ImR_ActivatorS.h \
  ImR_ActivatorS.inl

CLEANFILES += \
  ImR_Activator-stamp \
  ImR_ActivatorC.cpp \
  ImR_ActivatorC.h \
  ImR_ActivatorC.inl \
  ImR_ActivatorS.cpp \
  ImR_ActivatorS.h \
  ImR_ActivatorS.inl

ImR_ActivatorC.cpp ImR_ActivatorC.h ImR_ActivatorC.inl ImR_ActivatorS.cpp ImR_ActivatorS.h ImR_ActivatorS.inl: ImR_Activator-stamp

ImR_Activator-stamp: $(srcdir)/ImR_Activator.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -I$(TAO_ROOT)/orbsvcs -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Wb,export_macro=ActivatorIDL_Export -Wb,export_include=activator_idl_export.h $(srcdir)/ImR_Activator.idl
	@touch $@

noinst_LTLIBRARIES += libTAO_ImR_Activator_IDL.la

libTAO_ImR_Activator_IDL_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs \
  -DACTIVATOR_IDL_BUILD_DLL

libTAO_ImR_Activator_IDL_la_SOURCES = \
  ImR_ActivatorC.cpp \
  ImR_ActivatorS.cpp

noinst_HEADERS += \
  ImR_Activator.idl \
  ImR_ActivatorC.h \
  ImR_ActivatorC.inl \
  ImR_ActivatorS.h \
  ImR_ActivatorS.inl \
  activator_idl_export.h

endif BUILD_EXCEPTIONS

## Makefile.ImR_Locator_IDL.am

if BUILD_CORBA_MESSAGING
if BUILD_EXCEPTIONS

BUILT_SOURCES += \
  ImR_LocatorC.cpp \
  ImR_LocatorC.h \
  ImR_LocatorC.inl \
  ImR_LocatorS.cpp \
  ImR_LocatorS.h \
  ImR_LocatorS.inl

CLEANFILES += \
  ImR_Locator-stamp \
  ImR_LocatorC.cpp \
  ImR_LocatorC.h \
  ImR_LocatorC.inl \
  ImR_LocatorS.cpp \
  ImR_LocatorS.h \
  ImR_LocatorS.inl

ImR_LocatorC.cpp ImR_LocatorC.h ImR_LocatorC.inl ImR_LocatorS.cpp ImR_LocatorS.h ImR_LocatorS.inl: ImR_Locator-stamp

ImR_Locator-stamp: $(srcdir)/ImR_Locator.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -I$(TAO_ROOT)/orbsvcs -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Wb,export_macro=LocatorIDL_Export -Wb,export_include=locator_idl_export.h $(srcdir)/ImR_Locator.idl
	@touch $@

BUILT_SOURCES += \
  AsyncStartupWaiterC.cpp \
  AsyncStartupWaiterC.h \
  AsyncStartupWaiterC.inl \
  AsyncStartupWaiterS.cpp \
  AsyncStartupWaiterS.h \
  AsyncStartupWaiterS.inl

CLEANFILES += \
  AsyncStartupWaiter-stamp \
  AsyncStartupWaiterC.cpp \
  AsyncStartupWaiterC.h \
  AsyncStartupWaiterC.inl \
  AsyncStartupWaiterS.cpp \
  AsyncStartupWaiterS.h \
  AsyncStartupWaiterS.inl

AsyncStartupWaiterC.cpp AsyncStartupWaiterC.h AsyncStartupWaiterC.inl AsyncStartupWaiterS.cpp AsyncStartupWaiterS.h AsyncStartupWaiterS.inl: AsyncStartupWaiter-stamp

AsyncStartupWaiter-stamp: $(srcdir)/AsyncStartupWaiter.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -I$(TAO_ROOT)/orbsvcs -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL -Wb,export_macro=LocatorIDL_Export -Wb,export_include=locator_idl_export.h -GH $(srcdir)/AsyncStartupWaiter.idl
	@touch $@

noinst_LTLIBRARIES += libTAO_ImR_Locator_IDL.la

libTAO_ImR_Locator_IDL_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs \
  -DLOCATOR_IDL_BUILD_DLL

libTAO_ImR_Locator_IDL_la_SOURCES = \
  AsyncStartupWaiterC.cpp \
  AsyncStartupWaiterS.cpp \
  ImR_LocatorC.cpp \
  ImR_LocatorS.cpp

noinst_HEADERS += \
  AsyncStartupWaiter.idl \
  AsyncStartupWaiterC.h \
  AsyncStartupWaiterC.inl \
  AsyncStartupWaiterS.h \
  AsyncStartupWaiterS.inl \
  ImR_Locator.idl \
  ImR_LocatorC.h \
  ImR_LocatorC.inl \
  ImR_LocatorS.h \
  ImR_LocatorS.inl \
  locator_idl_export.h

endif BUILD_EXCEPTIONS
endif BUILD_CORBA_MESSAGING

## Makefile.ImR_Activator.am

if BUILD_ACEXML
if BUILD_CORBA_MESSAGING
if BUILD_EXCEPTIONS
if !BUILD_ACE_FOR_TAO

noinst_LTLIBRARIES += libTAO_ImR_Activator.la

libTAO_ImR_Activator_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs \
  -I$(ACE_ROOT)/ACEXML/common \
  -DACTIVATOR_BUILD_DLL

if BUILD_ZLIB
if BUILD_ZZIP
libTAO_ImR_Activator_la_CPPFLAGS += \
  $(ACE_ZZIP_CPPFLAGS) \
  $(ACE_ZLIB_CPPFLAGS)
endif BUILD_ZZIP
endif BUILD_ZLIB

libTAO_ImR_Activator_la_SOURCES = \
  Activator_Loader.cpp \
  Activator_Options.cpp \
  ImR_Activator_i.cpp

libTAO_ImR_Activator_la_LDFLAGS = 

if BUILD_ZLIB
if BUILD_ZZIP
libTAO_ImR_Activator_la_LDFLAGS += \
  $(ACE_ZZIP_LDFLAGS) \
  $(ACE_ZLIB_LDFLAGS)
endif BUILD_ZZIP
endif BUILD_ZLIB

noinst_HEADERS += \
  Activator_Loader.h \
  Activator_Options.h \
  ImR_Activator_i.h \
  activator_export.h

endif !BUILD_ACE_FOR_TAO
endif BUILD_EXCEPTIONS
endif BUILD_CORBA_MESSAGING
endif BUILD_ACEXML

## Makefile.ImR_Activator_Service.am

if BUILD_ACEXML
if BUILD_CORBA_MESSAGING
if BUILD_EXCEPTIONS
if !BUILD_ACE_FOR_TAO

bin_PROGRAMS += ImR_Activator

ImR_Activator_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(ACE_ROOT)/ACEXML/common \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs

if BUILD_ZLIB
if BUILD_ZZIP
ImR_Activator_CPPFLAGS += \
  $(ACE_ZZIP_CPPFLAGS) \
  $(ACE_ZLIB_CPPFLAGS)
endif BUILD_ZZIP
endif BUILD_ZLIB

ImR_Activator_SOURCES = \
  Activator_NT_Service.cpp \
  ImR_Activator.cpp \
  Activator_NT_Service.h

ImR_Activator_LDFLAGS = 

if BUILD_ZLIB
if BUILD_ZZIP
ImR_Activator_LDFLAGS += \
  $(ACE_ZZIP_LDFLAGS) \
  $(ACE_ZLIB_LDFLAGS)
endif BUILD_ZZIP
endif BUILD_ZLIB

ImR_Activator_LDADD = \
  libTAO_ImR_Activator.la \
  libTAO_ImR_Activator_IDL.la \
  libTAO_ImR_Locator_IDL.la \
  $(TAO_BUILDDIR)/tao/libTAO_ImR_Client.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_Svc_Utils.la \
  $(TAO_BUILDDIR)/tao/libTAO_Messaging.la \
  $(TAO_BUILDDIR)/tao/libTAO_PI.la \
  $(TAO_BUILDDIR)/tao/libTAO_CodecFactory.la \
  $(TAO_BUILDDIR)/tao/libTAO_PortableServer.la \
  $(TAO_BUILDDIR)/tao/libTAO_Valuetype.la \
  $(ACE_BUILDDIR)/ACEXML/parser/parser/libACEXML_Parser.la \
  $(ACE_BUILDDIR)/ACEXML/common/libACEXML.la \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

if BUILD_ZLIB
if BUILD_ZZIP
ImR_Activator_LDADD += \
  $(ACE_ZZIP_LIBS) \
  $(ACE_ZLIB_LIBS)
endif BUILD_ZZIP
endif BUILD_ZLIB

endif !BUILD_ACE_FOR_TAO
endif BUILD_EXCEPTIONS
endif BUILD_CORBA_MESSAGING
endif BUILD_ACEXML

## Makefile.ImR_Locator.am

if BUILD_ACEXML
if BUILD_CORBA_MESSAGING
if BUILD_EXCEPTIONS
if !BUILD_ACE_FOR_TAO

noinst_LTLIBRARIES += libTAO_ImR_Locator.la

libTAO_ImR_Locator_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs \
  -I$(ACE_ROOT)/ACEXML/common \
  -DLOCATOR_BUILD_DLL

if BUILD_ZLIB
if BUILD_ZZIP
libTAO_ImR_Locator_la_CPPFLAGS += \
  $(ACE_ZZIP_CPPFLAGS) \
  $(ACE_ZLIB_CPPFLAGS)
endif BUILD_ZZIP
endif BUILD_ZLIB

libTAO_ImR_Locator_la_SOURCES = \
  Activator_Info.cpp \
  Adapter_Activator.cpp \
  AsyncStartupWaiter_i.cpp \
  Forwarder.cpp \
  INS_Locator.cpp \
  ImR_Locator_i.cpp \
  Iterator.cpp \
  Locator_Loader.cpp \
  Locator_Options.cpp \
  Locator_Repository.cpp \
  Locator_XMLHandler.cpp \
  Server_Info.cpp

libTAO_ImR_Locator_la_LDFLAGS = 

if BUILD_ZLIB
if BUILD_ZZIP
libTAO_ImR_Locator_la_LDFLAGS += \
  $(ACE_ZZIP_LDFLAGS) \
  $(ACE_ZLIB_LDFLAGS)
endif BUILD_ZZIP
endif BUILD_ZLIB

noinst_HEADERS += \
  Activator_Info.h \
  Adapter_Activator.h \
  AsyncStartupWaiter_i.h \
  Forwarder.h \
  INS_Locator.h \
  ImR_Locator_i.h \
  Iterator.h \
  Locator_Loader.h \
  Locator_Options.h \
  Locator_Repository.h \
  Locator_XMLHandler.h \
  Server_Info.h \
  locator_export.h \
  utils.h

endif !BUILD_ACE_FOR_TAO
endif BUILD_EXCEPTIONS
endif BUILD_CORBA_MESSAGING
endif BUILD_ACEXML

## Makefile.ImR_Locator_Service.am

if BUILD_ACEXML
if BUILD_CORBA_MESSAGING
if BUILD_EXCEPTIONS
if !BUILD_ACE_FOR_TAO

bin_PROGRAMS += ImplRepo_Service

ImplRepo_Service_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(ACE_ROOT)/ACEXML/common \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs

if BUILD_ZLIB
if BUILD_ZZIP
ImplRepo_Service_CPPFLAGS += \
  $(ACE_ZZIP_CPPFLAGS) \
  $(ACE_ZLIB_CPPFLAGS)
endif BUILD_ZZIP
endif BUILD_ZLIB

ImplRepo_Service_SOURCES = \
  ImR_Locator.cpp \
  Locator_NT_Service.cpp \
  Locator_NT_Service.h

ImplRepo_Service_LDFLAGS =

if BUILD_ZLIB
if BUILD_ZZIP
ImplRepo_Service_LDFLAGS += \
  $(ACE_ZZIP_LDFLAGS) \
  $(ACE_ZLIB_LDFLAGS)
endif BUILD_ZZIP
endif BUILD_ZLIB

ImplRepo_Service_LDADD = \
  libTAO_ImR_Locator.la \
  libTAO_ImR_Activator_IDL.la \
  libTAO_ImR_Locator_IDL.la \
  $(TAO_BUILDDIR)/tao/libTAO_ImR_Client.la \
  $(TAO_BUILDDIR)/tao/libTAO_PI_Server.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_Svc_Utils.la \
  $(ACE_BUILDDIR)/ACEXML/parser/parser/libACEXML_Parser.la \
  $(ACE_BUILDDIR)/ACEXML/common/libACEXML.la \
  $(TAO_BUILDDIR)/tao/libTAO_Messaging.la \
  $(TAO_BUILDDIR)/tao/libTAO_PI.la \
  $(TAO_BUILDDIR)/tao/libTAO_CodecFactory.la \
  $(TAO_BUILDDIR)/tao/libTAO_PortableServer.la \
  $(TAO_BUILDDIR)/tao/libTAO_Valuetype.la \
  $(TAO_BUILDDIR)/tao/libTAO_IORTable.la \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

if BUILD_ZLIB
if BUILD_ZZIP
ImplRepo_Service_LDADD += \
  $(ACE_ZZIP_LIBS) \
  $(ACE_ZLIB_LIBS)
endif BUILD_ZZIP
endif BUILD_ZLIB

endif !BUILD_ACE_FOR_TAO
endif BUILD_EXCEPTIONS
endif BUILD_CORBA_MESSAGING
endif BUILD_ACEXML

## Makefile.tao_imr.am

if BUILD_EXCEPTIONS

bin_PROGRAMS += tao_imr

tao_imr_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR)

tao_imr_SOURCES = \
  tao_imr.cpp \
  tao_imr_i.cpp \
  tao_imr_i.h

tao_imr_LDADD = \
  $(TAO_BUILDDIR)/tao/libTAO_ImR_Client.la \
  $(TAO_BUILDDIR)/tao/libTAO_PortableServer.la \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

endif BUILD_EXCEPTIONS

## Clean up template repositories, etc.
clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
