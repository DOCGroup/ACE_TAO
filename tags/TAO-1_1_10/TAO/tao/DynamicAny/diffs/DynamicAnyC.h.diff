--- orig/DynamicAnyC.h	Fri Aug 25 15:14:31 2000
+++ DynamicAnyC.h	Sun Aug 27 12:29:17 2000
@@ -10,6 +10,10 @@
 #ifndef _TAO_IDL_ORIG_DYNAMICANYC_H_
 #define _TAO_IDL_ORIG_DYNAMICANYC_H_
 
+#ifndef TAO_DYNAMICANY_SAFE_INCLUDE
+#error "You should not include DynamicAnyC.h directly, use DynamicAny.h"
+#endif /* !TAO_DYNAMICANY_SAFE_INCLUDE */
+
 #include "ace/pre.h"
 #include "tao/corba.h"
 
@@ -474,6 +478,7 @@
         DynamicAny::DynAny::InvalidValue
       )) = 0;
 
+#ifdef TAO_HAS_VALUETYPE
     virtual void insert_val (
         CORBA::ValueBase_ptr value,
         CORBA::Environment &ACE_TRY_ENV = 
@@ -484,6 +489,7 @@
         DynamicAny::DynAny::TypeMismatch,
         DynamicAny::DynAny::InvalidValue
       )) = 0;
+#endif /* TAO_HAS_VALUETYPE */
 
     virtual CORBA::Boolean get_boolean (
         CORBA::Environment &ACE_TRY_ENV = 
@@ -675,6 +681,7 @@
         DynamicAny::DynAny::InvalidValue
       )) = 0;
 
+#ifdef TAO_HAS_VALUETYPE
     virtual CORBA::ValueBase_ptr get_val (
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
@@ -684,6 +691,7 @@
         DynamicAny::DynAny::TypeMismatch,
         DynamicAny::DynAny::InvalidValue
       )) = 0;
+#endif /* TAO_HAS_VALUETYPE */
 
     virtual CORBA::Boolean seek (
         CORBA::Long index,
@@ -737,3308 +745,840 @@
   private:
     DynAny (const DynAny &);
     void operator= (const DynAny &);    
-#if (TAO_HAS_INTERCEPTORS == 1)
-        // Generation of interceptors related RequestInfo classes per operation.
-    // This needed to be able to store the arguments, exceptiosn, constexts
-    // and build the lists dynamically on demand so that unnecessary time overhead
-    // of building these lists when they arent used is avoided.
-            class TAO_ClientRequest_Info_DynamicAny_DynAny_type : public TAO_ClientRequest_Info
-    {
-    public:
-      friend class DynamicAny::DynAny;
-      TAO_ClientRequest_Info_DynamicAny_DynAny_type (
-        const char *_tao_operation,
-        IOP::ServiceContextList &_tao_service_context_list,
-        CORBA::Object *_tao_target      ,
-            CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-      );
-
-       virtual Dynamic::ParameterList * arguments (
-        CORBA::Environment &ACE_TRY_ENV =
-           TAO_default_environment ())
-       ACE_THROW_SPEC ((CORBA::SystemException));
     
-        virtual Dynamic::ExceptionList * exceptions ( 
-      CORBA::Environment &ACE_TRY_ENV =
-         TAO_default_environment ())
-     ACE_THROW_SPEC ((CORBA::SystemException));
-  
-    virtual CORBA::Any * result (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+};
 
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_type (const TAO_ClientRequest_Info_DynamicAny_DynAny_type &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_type &);
-void result (CORBA::TypeCode_ptr  result);
- // update the result 
-CORBA::TypeCode_ptr  result_;
-};
+#endif /* end #if !defined */
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_assign : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_assign (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  DynamicAny::DynAny_ptr dyn_any  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
 
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+#if !defined (_DYNAMICANY_DYNFIXED___PTR_CH_)
+#define _DYNAMICANY_DYNFIXED___PTR_CH_
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+class DynFixed;
+typedef DynFixed *DynFixed_ptr;
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#endif /* end #if !defined */
 
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_assign (const TAO_ClientRequest_Info_DynamicAny_DynAny_assign &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_assign &);
-DynamicAny::DynAny_ptr & dyn_any_;
-};
+#if !defined (_DYNAMICANY_DYNFIXED___VAR_CH_)
+#define _DYNAMICANY_DYNFIXED___VAR_CH_
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_from_any : public TAO_ClientRequest_Info
+class TAO_DynamicAny_Export DynFixed_var : public TAO_Base_var
 {
 public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_from_any (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  const CORBA::Any & value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+  DynFixed_var (void); // default constructor
+  DynFixed_var (DynFixed_ptr p) : ptr_ (p) {}
+  DynFixed_var (const DynFixed_var &); // copy constructor
+  ~DynFixed_var (void); // destructor
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+  DynFixed_var &operator= (DynFixed_ptr);
+  DynFixed_var &operator= (const DynFixed_var &);
+  DynFixed_ptr operator-> (void) const;
 
+  operator const DynFixed_ptr &() const;
+  operator DynFixed_ptr &();
+  // in, inout, out, _retn
+  DynFixed_ptr in (void) const;
+  DynFixed_ptr &inout (void);
+  DynFixed_ptr &out (void);
+  DynFixed_ptr _retn (void);
+  DynFixed_ptr ptr (void) const;
 
 private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_from_any (const TAO_ClientRequest_Info_DynamicAny_DynAny_from_any &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_from_any &);
-const CORBA::Any & value_;
+  DynFixed_ptr ptr_;
+  // Unimplemented - prevents widening assignment.
+  DynFixed_var (const TAO_Base_var &rhs);
+  DynFixed_var &operator= (const TAO_Base_var &rhs);
 };
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_to_any : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_to_any (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
 
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+#endif /* end #if !defined */
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#if !defined (_DYNAMICANY_DYNFIXED___OUT_CH_)
+#define _DYNAMICANY_DYNFIXED___OUT_CH_
 
+class TAO_DynamicAny_Export DynFixed_out
+{
+public:
+  DynFixed_out (DynFixed_ptr &);
+  DynFixed_out (DynFixed_var &);
+  DynFixed_out (const DynFixed_out &);
+  DynFixed_out &operator= (const DynFixed_out &);
+  DynFixed_out &operator= (const DynFixed_var &);
+  DynFixed_out &operator= (DynFixed_ptr);
+  operator DynFixed_ptr &();
+  DynFixed_ptr &ptr (void);
+  DynFixed_ptr operator-> (void);
 
 private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_to_any (const TAO_ClientRequest_Info_DynamicAny_DynAny_to_any &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_to_any &);
-void result (CORBA::Any *  result);
- // update the result 
-CORBA::Any *  result_;
+  DynFixed_ptr &ptr_;
 };
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_equal : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_equal (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  DynamicAny::DynAny_ptr dyn_any  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
 
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+#endif /* end #if !defined */
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#if !defined (_DYNAMICANY_DYNFIXED_CH_)
+#define _DYNAMICANY_DYNFIXED_CH_
 
+class TAO_DynamicAny_Export DynFixed: public virtual DynAny
+{
+public:
+#if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
+  typedef DynFixed_ptr _ptr_type;
+  typedef DynFixed_var _var_type;
+#endif /* ! __GNUC__ || g++ >= 2.8 */
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_equal (const TAO_ClientRequest_Info_DynamicAny_DynAny_equal &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_equal &);
-DynamicAny::DynAny_ptr & dyn_any_;
-void result (CORBA::Boolean  result);
- // update the result 
-CORBA::Boolean  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_destroy : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_destroy (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
+  // the static operations
+  static DynFixed_ptr _duplicate (DynFixed_ptr obj);
+  static DynFixed_ptr _narrow (
+      CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV = 
     TAO_default_environment ()
   );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_destroy (const TAO_ClientRequest_Info_DynamicAny_DynAny_destroy &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_destroy &);
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_copy : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_copy (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
+  static DynFixed_ptr _unchecked_narrow (
+      CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV = 
     TAO_default_environment ()
   );
+  static DynFixed_ptr _nil (void)
+    {
+      return (DynFixed_ptr)0;
+    }
 
-   virtual Dynamic::ParameterList * arguments (
+  virtual char * get_value (
     CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+        TAO_default_environment ()
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException
+    )) = 0;
 
-virtual Dynamic::ExceptionList * exceptions ( 
+  virtual CORBA::Boolean set_value (
+      const char * val,
   CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+        TAO_default_environment ()
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException,
+      DynamicAny::DynAny::TypeMismatch,
+      DynamicAny::DynAny::InvalidValue
+    )) = 0;
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+  virtual void *_tao_QueryInterface (ptr_arith_t type);
 
+  virtual const char* _interface_repository_id (void) const;
 
+protected:
+  DynFixed (void);
+  virtual ~DynFixed (void);
 private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_copy (const TAO_ClientRequest_Info_DynamicAny_DynAny_copy &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_copy &);
-void result (DynamicAny::DynAny_ptr  result);
- // update the result 
-DynamicAny::DynAny_ptr  result_;
+  DynFixed (const DynFixed &);
+  void operator= (const DynFixed &);
+
 };
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_boolean : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_boolean (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::Boolean value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
 
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+#endif /* end #if !defined */
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#if !defined (_DYNAMICANY_DYNENUM___PTR_CH_)
+#define _DYNAMICANY_DYNENUM___PTR_CH_
 
+class DynEnum;
+typedef DynEnum *DynEnum_ptr;
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_boolean (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_boolean &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_boolean &);
-CORBA::Boolean & value_;
-};
+#endif /* end #if !defined */
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_octet : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_octet (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::Octet value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
 
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+#if !defined (_DYNAMICANY_DYNENUM___VAR_CH_)
+#define _DYNAMICANY_DYNENUM___VAR_CH_
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+class TAO_DynamicAny_Export DynEnum_var : public TAO_Base_var
+{
+public:
+  DynEnum_var (void); // default constructor
+  DynEnum_var (DynEnum_ptr p) : ptr_ (p) {}
+  DynEnum_var (const DynEnum_var &); // copy constructor
+  ~DynEnum_var (void); // destructor
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+  DynEnum_var &operator= (DynEnum_ptr);
+  DynEnum_var &operator= (const DynEnum_var &);
+  DynEnum_ptr operator-> (void) const;
 
+  operator const DynEnum_ptr &() const;
+  operator DynEnum_ptr &();
+  // in, inout, out, _retn
+  DynEnum_ptr in (void) const;
+  DynEnum_ptr &inout (void);
+  DynEnum_ptr &out (void);
+  DynEnum_ptr _retn (void);
+  DynEnum_ptr ptr (void) const;
 
 private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_octet (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_octet &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_octet &);
-CORBA::Octet & value_;
+  DynEnum_ptr ptr_;
+  // Unimplemented - prevents widening assignment.
+  DynEnum_var (const TAO_Base_var &rhs);
+  DynEnum_var &operator= (const TAO_Base_var &rhs);
 };
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_char : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_char (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::Char value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#endif /* end #if !defined */
 
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_char (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_char &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_char &);
-CORBA::Char & value_;
-};
+#if !defined (_DYNAMICANY_DYNENUM___OUT_CH_)
+#define _DYNAMICANY_DYNENUM___OUT_CH_
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_short : public TAO_ClientRequest_Info
+class TAO_DynamicAny_Export DynEnum_out
 {
 public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_short (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::Short value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
+  DynEnum_out (DynEnum_ptr &);
+  DynEnum_out (DynEnum_var &);
+  DynEnum_out (const DynEnum_out &);
+  DynEnum_out &operator= (const DynEnum_out &);
+  DynEnum_out &operator= (const DynEnum_var &);
+  DynEnum_out &operator= (DynEnum_ptr);
+  operator DynEnum_ptr &();
+  DynEnum_ptr &ptr (void);
+  DynEnum_ptr operator-> (void);
 
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+private:
+  DynEnum_ptr &ptr_;
+};
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#endif /* end #if !defined */
 
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_short (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_short &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_short &);
-CORBA::Short & value_;
-};
+#if !defined (_DYNAMICANY_DYNENUM_CH_)
+#define _DYNAMICANY_DYNENUM_CH_
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_ushort : public TAO_ClientRequest_Info
+class TAO_DynamicAny_Export DynEnum: public virtual DynAny
 {
 public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_ushort (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::UShort value  ,
+#if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
+  typedef DynEnum_ptr _ptr_type;
+  typedef DynEnum_var _var_type;
+#endif /* ! __GNUC__ || g++ >= 2.8 */
+
+  // the static operations
+  static DynEnum_ptr _duplicate (DynEnum_ptr obj);
+  static DynEnum_ptr _narrow (
+      CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV = 
     TAO_default_environment ()
   );
-
-   virtual Dynamic::ParameterList * arguments (
+  static DynEnum_ptr _unchecked_narrow (
+      CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+        TAO_default_environment ()
+    );
+  static DynEnum_ptr _nil (void)
+    {
+      return (DynEnum_ptr)0;
+    }
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
+  virtual char * get_as_string (
   CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_ushort (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_ushort &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_ushort &);
-CORBA::UShort & value_;
-};
+        TAO_default_environment ()
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException
+    )) = 0;
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_long : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_long (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::Long value  ,
+  virtual void set_as_string (
+      const char * value,
     CORBA::Environment &ACE_TRY_ENV = 
     TAO_default_environment ()
-  );
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException,
+      DynamicAny::DynAny::InvalidValue
+    )) = 0;
 
-   virtual Dynamic::ParameterList * arguments (
+  virtual CORBA::ULong get_as_ulong (
     CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+        TAO_default_environment ()
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException
+    )) = 0;
 
-virtual Dynamic::ExceptionList * exceptions ( 
+  virtual void set_as_ulong (
+      CORBA::ULong value,
   CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+        TAO_default_environment ()
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException,
+      DynamicAny::DynAny::InvalidValue
+    )) = 0;
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+  virtual void *_tao_QueryInterface (ptr_arith_t type);
 
+  virtual const char* _interface_repository_id (void) const;
 
+protected:
+  DynEnum (void);
+  virtual ~DynEnum (void);
 private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_long (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_long &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_long &);
-CORBA::Long & value_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_ulong : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_ulong (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::ULong value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
+  DynEnum (const DynEnum &);
+  void operator= (const DynEnum &);
 
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+};
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#endif /* end #if !defined */
 
+typedef char * FieldName;
+typedef CORBA::String_var FieldName_var;
+typedef CORBA::String_out FieldName_out;
+TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_FieldName;
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_ulong (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_ulong &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_ulong &);
-CORBA::ULong & value_;
-};
+struct NameValuePair;
+class NameValuePair_var;
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_float : public TAO_ClientRequest_Info
+struct TAO_DynamicAny_Export NameValuePair
 {
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_float (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::Float value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
+  typedef NameValuePair_var _var_type;
+#endif /* ! __GNUC__ || g++ >= 2.8 */
 
+  static void _tao_any_destructor (void*);
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_float (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_float &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_float &);
-CORBA::Float & value_;
+  TAO_String_Manager id;
+  CORBA::Any value;
 };
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_double : public TAO_ClientRequest_Info
+class TAO_DynamicAny_Export NameValuePair_var
 {
 public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_double (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::Double value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+  NameValuePair_var (void); // default constructor
+  NameValuePair_var (NameValuePair *);
+  NameValuePair_var (const NameValuePair_var &); // copy constructor
+  ~NameValuePair_var (void); // destructor
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+  NameValuePair_var &operator= (NameValuePair *);
+  NameValuePair_var &operator= (const NameValuePair_var &);
+  NameValuePair *operator-> (void);
+  const NameValuePair *operator-> (void) const;
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+  operator const NameValuePair &() const;
+  operator NameValuePair &();
+  operator NameValuePair &() const;
+  operator NameValuePair *&(); // variable-size types only
 
+  // in, inout, out, _retn
+  const NameValuePair &in (void) const;
+  NameValuePair &inout (void);
+  NameValuePair *&out (void);
+  NameValuePair *_retn (void);
+  NameValuePair *ptr (void) const;
 
 private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_double (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_double &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_double &);
-CORBA::Double & value_;
+  NameValuePair *ptr_;
 };
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_string : public TAO_ClientRequest_Info
+class TAO_DynamicAny_Export NameValuePair_out
 {
 public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_string (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  const char * value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
+  NameValuePair_out (NameValuePair *&);
+  NameValuePair_out (NameValuePair_var &);
+  NameValuePair_out (const NameValuePair_out &);
+  NameValuePair_out &operator= (const NameValuePair_out &);
+  NameValuePair_out &operator= (NameValuePair *);
+  operator NameValuePair *&();
+  NameValuePair *&ptr (void);
+  NameValuePair *operator-> (void);
 
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+private:
+  NameValuePair *&ptr_;
+  // assignment from T_var not allowed
+  void operator= (const NameValuePair_var &);
+};
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_NameValuePair;
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
 
+#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_string (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_string &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_string &);
-const char *& value_;
-};
+#if !defined (__TAO_UNBOUNDED_SEQUENCE_DYNAMICANY_NAMEVALUEPAIRSEQ_CH_)
+#define __TAO_UNBOUNDED_SEQUENCE_DYNAMICANY_NAMEVALUEPAIRSEQ_CH_
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_reference : public TAO_ClientRequest_Info
+  class TAO_EXPORT_NESTED_MACRO _TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq : public TAO_Unbounded_Base_Sequence
 {
 public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_reference (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::Object_ptr value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+    // = Initialization and termination methods.
 
+    _TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq (void); // Default constructor.
+    _TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq (CORBA::ULong maximum);
+    _TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq (CORBA::ULong maximum,
+      CORBA::ULong length,
+      NameValuePair *data,
+      CORBA::Boolean release = 0);
+    _TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq (const _TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq &rhs);
+    _TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq &operator= (const _TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq &rhs);
+    virtual ~_TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq (void); // Dtor.
+    // = Accessors.
+    NameValuePair &operator[] (CORBA::ULong i);
+    const NameValuePair &operator[] (CORBA::ULong i) const;
+    // = Static operations.
+    static NameValuePair *allocbuf (CORBA::ULong size);
+    static void freebuf (NameValuePair *buffer);
+    virtual void _allocate_buffer (CORBA::ULong length);
+    virtual void _deallocate_buffer (void);
+    // Implement the TAO_Base_Sequence methods (see Sequence.h)
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_reference (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_reference &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_reference &);
-CORBA::Object_ptr & value_;
+    NameValuePair *get_buffer (CORBA::Boolean orphan = 0);
+    const NameValuePair *get_buffer (void) const;
+    void replace (CORBA::ULong max,
+      CORBA::ULong length,
+      NameValuePair *data,
+      CORBA::Boolean release);
 };
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_typecode : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_typecode (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::TypeCode_ptr value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
+#endif /* end #if !defined */
 
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#if !defined (_DYNAMICANY_NAMEVALUEPAIRSEQ_CH_)
+#define _DYNAMICANY_NAMEVALUEPAIRSEQ_CH_
 
+class NameValuePairSeq;
+class NameValuePairSeq_var;
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_typecode (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_typecode &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_typecode &);
-CORBA::TypeCode_ptr & value_;
-};
+// *************************************************************
+// NameValuePairSeq
+// *************************************************************
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_longlong : public TAO_ClientRequest_Info
+class TAO_DynamicAny_Export NameValuePairSeq : public
+#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
+  _TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq
+#else /* TAO_USE_SEQUENCE_TEMPLATES */
+  TAO_Unbounded_Sequence<NameValuePair>
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
 {
 public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_longlong (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::LongLong value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
+  NameValuePairSeq (void); // default ctor
+  NameValuePairSeq (CORBA::ULong max); // uses max size
+  NameValuePairSeq (
+    CORBA::ULong max,
+    CORBA::ULong length,
+    NameValuePair *buffer,
+    CORBA::Boolean release=0
   );
+  NameValuePairSeq (const NameValuePairSeq &); // copy ctor
+  ~NameValuePairSeq (void);
+  static void _tao_any_destructor (void*);
 
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+#if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
+  typedef NameValuePairSeq_var _var_type;
+#endif /* ! __GNUC__ || g++ >= 2.8 */
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+};
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#endif /* end #if !defined */
 
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_longlong (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_longlong &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_longlong &);
-CORBA::LongLong & value_;
-};
+#if !defined (_DYNAMICANY_NAMEVALUEPAIRSEQ___VAR_CH_)
+#define _DYNAMICANY_NAMEVALUEPAIRSEQ___VAR_CH_
+
+// *************************************************************
+// class DynamicAny::NameValuePairSeq_var
+// *************************************************************
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_ulonglong : public TAO_ClientRequest_Info
+class TAO_DynamicAny_Export NameValuePairSeq_var
 {
 public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_ulonglong (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::ULongLong value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+  NameValuePairSeq_var (void); // default constructor
+  NameValuePairSeq_var (NameValuePairSeq *);
+  NameValuePairSeq_var (const NameValuePairSeq_var &); // copy constructor
+  ~NameValuePairSeq_var (void); // destructor
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+  NameValuePairSeq_var &operator= (NameValuePairSeq *);
+  NameValuePairSeq_var &operator= (const NameValuePairSeq_var &);
+  NameValuePairSeq *operator-> (void);
+  const NameValuePairSeq *operator-> (void) const;
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+  operator const NameValuePairSeq &() const;
+  operator NameValuePairSeq &();
+  operator NameValuePairSeq &() const;
+  operator NameValuePairSeq *&(); // variable-size base types only
 
+  NameValuePair &operator[] (CORBA::ULong index);
+  // in, inout, out, _retn
+  const NameValuePairSeq &in (void) const;
+  NameValuePairSeq &inout (void);
+  NameValuePairSeq *&out (void);
+  NameValuePairSeq *_retn (void);
+  NameValuePairSeq *ptr (void) const;
 
 private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_ulonglong (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_ulonglong &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_ulonglong &);
-CORBA::ULongLong & value_;
+  NameValuePairSeq *ptr_;
 };
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_longdouble : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_longdouble (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::LongDouble value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
 
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#endif /* end #if !defined */
 
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_longdouble (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_longdouble &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_longdouble &);
-CORBA::LongDouble & value_;
-};
+#if !defined (_DYNAMICANY_NAMEVALUEPAIRSEQ___OUT_CH_)
+#define _DYNAMICANY_NAMEVALUEPAIRSEQ___OUT_CH_
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_wchar : public TAO_ClientRequest_Info
+class TAO_DynamicAny_Export NameValuePairSeq_out
 {
 public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_wchar (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::WChar value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
+  NameValuePairSeq_out (NameValuePairSeq *&);
+  NameValuePairSeq_out (NameValuePairSeq_var &);
+  NameValuePairSeq_out (const NameValuePairSeq_out &);
+  NameValuePairSeq_out &operator= (const NameValuePairSeq_out &);
+  NameValuePairSeq_out &operator= (NameValuePairSeq *);
+  operator NameValuePairSeq *&();
+  NameValuePairSeq *&ptr (void);
+  NameValuePairSeq *operator-> (void);
+  NameValuePair &operator[] (CORBA::ULong index);
 
 private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_wchar (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_wchar &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_wchar &);
-CORBA::WChar & value_;
+  NameValuePairSeq *&ptr_;
+  // assignment from T_var not allowed
+  void operator= (const NameValuePairSeq_var &);
 };
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_wstring : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_wstring (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  const CORBA::WChar * value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#endif /* end #if !defined */
 
+TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_NameValuePairSeq;
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_wstring (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_wstring &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_wstring &);
-const CORBA::WChar *& value_;
-};
+struct NameDynAnyPair;
+class NameDynAnyPair_var;
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_any : public TAO_ClientRequest_Info
+struct TAO_DynamicAny_Export NameDynAnyPair
 {
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_any (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  const CORBA::Any & value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
 
+#if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
+  typedef NameDynAnyPair_var _var_type;
+#endif /* ! __GNUC__ || g++ >= 2.8 */
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_any (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_any &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_any &);
-const CORBA::Any & value_;
+    TAO_String_Manager id;
+  ACE_NESTED_CLASS (DynamicAny, DynAny_var) value;
 };
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_dyn_any : public TAO_ClientRequest_Info
+class TAO_DynamicAny_Export NameDynAnyPair_var
 {
 public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_dyn_any (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  DynamicAny::DynAny_ptr value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+  NameDynAnyPair_var (void); // default constructor
+  NameDynAnyPair_var (NameDynAnyPair *);
+  NameDynAnyPair_var (const NameDynAnyPair_var &); // copy constructor
+  ~NameDynAnyPair_var (void); // destructor
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+  NameDynAnyPair_var &operator= (NameDynAnyPair *);
+  NameDynAnyPair_var &operator= (const NameDynAnyPair_var &);
+  NameDynAnyPair *operator-> (void);
+  const NameDynAnyPair *operator-> (void) const;
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+  operator const NameDynAnyPair &() const;
+  operator NameDynAnyPair &();
+  operator NameDynAnyPair &() const;
+  operator NameDynAnyPair *&(); // variable-size types only
 
+  // in, inout, out, _retn
+  const NameDynAnyPair &in (void) const;
+  NameDynAnyPair &inout (void);
+  NameDynAnyPair *&out (void);
+  NameDynAnyPair *_retn (void);
+  NameDynAnyPair *ptr (void) const;
 
 private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_dyn_any (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_dyn_any &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_dyn_any &);
-DynamicAny::DynAny_ptr & value_;
+  NameDynAnyPair *ptr_;
 };
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_insert_val : public TAO_ClientRequest_Info
+class TAO_DynamicAny_Export NameDynAnyPair_out
 {
 public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_insert_val (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::ValueBase_ptr value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
+  NameDynAnyPair_out (NameDynAnyPair *&);
+  NameDynAnyPair_out (NameDynAnyPair_var &);
+  NameDynAnyPair_out (const NameDynAnyPair_out &);
+  NameDynAnyPair_out &operator= (const NameDynAnyPair_out &);
+  NameDynAnyPair_out &operator= (NameDynAnyPair *);
+  operator NameDynAnyPair *&();
+  NameDynAnyPair *&ptr (void);
+  NameDynAnyPair *operator-> (void);
 
 private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_insert_val (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_val &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_insert_val &);
-CORBA::ValueBase_ptr & value_;
+  NameDynAnyPair *&ptr_;
+  // assignment from T_var not allowed
+  void operator= (const NameDynAnyPair_var &);
 };
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_boolean : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_boolean (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
 
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#if !defined (__TAO_UNBOUNDED_SEQUENCE_DYNAMICANY_NAMEDYNANYPAIRSEQ_CH_)
+#define __TAO_UNBOUNDED_SEQUENCE_DYNAMICANY_NAMEDYNANYPAIRSEQ_CH_
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+  class TAO_EXPORT_NESTED_MACRO _TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq : public TAO_Unbounded_Base_Sequence
+  {
+  public:
+    // = Initialization and termination methods.
 
+    _TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq (void); // Default constructor.
+    _TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq (CORBA::ULong maximum);
+    _TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq (CORBA::ULong maximum,
+      CORBA::ULong length,
+      NameDynAnyPair *data,
+      CORBA::Boolean release = 0);
+    _TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq (const _TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq &rhs);
+    _TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq &operator= (const _TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq &rhs);
+    virtual ~_TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq (void); // Dtor.
+    // = Accessors.
+    NameDynAnyPair &operator[] (CORBA::ULong i);
+    const NameDynAnyPair &operator[] (CORBA::ULong i) const;
+    // = Static operations.
+    static NameDynAnyPair *allocbuf (CORBA::ULong size);
+    static void freebuf (NameDynAnyPair *buffer);
+    virtual void _allocate_buffer (CORBA::ULong length);
+    virtual void _deallocate_buffer (void);
+    // Implement the TAO_Base_Sequence methods (see Sequence.h)
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_boolean (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_boolean &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_boolean &);
-void result (CORBA::Boolean  result);
- // update the result 
-CORBA::Boolean  result_;
+    NameDynAnyPair *get_buffer (CORBA::Boolean orphan = 0);
+    const NameDynAnyPair *get_buffer (void) const;
+    void replace (CORBA::ULong max,
+      CORBA::ULong length,
+      NameDynAnyPair *data,
+      CORBA::Boolean release);
 };
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_octet : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_octet (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
+#endif /* end #if !defined */
 
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#if !defined (_DYNAMICANY_NAMEDYNANYPAIRSEQ_CH_)
+#define _DYNAMICANY_NAMEDYNANYPAIRSEQ_CH_
 
+class NameDynAnyPairSeq;
+class NameDynAnyPairSeq_var;
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_octet (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_octet &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_octet &);
-void result (CORBA::Octet  result);
- // update the result 
-CORBA::Octet  result_;
-};
+// *************************************************************
+// NameDynAnyPairSeq
+// *************************************************************
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_char : public TAO_ClientRequest_Info
+class TAO_DynamicAny_Export NameDynAnyPairSeq : public
+#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
+  _TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq
+#else /* TAO_USE_SEQUENCE_TEMPLATES */
+  TAO_Unbounded_Sequence<NameDynAnyPair>
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
 {
 public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_char (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
+  NameDynAnyPairSeq (void); // default ctor
+  NameDynAnyPairSeq (CORBA::ULong max); // uses max size
+  NameDynAnyPairSeq (
+    CORBA::ULong max,
+    CORBA::ULong length,
+    NameDynAnyPair *buffer,
+    CORBA::Boolean release=0
   );
+  NameDynAnyPairSeq (const NameDynAnyPairSeq &); // copy ctor
+  ~NameDynAnyPairSeq (void);
+  static void _tao_any_destructor (void*);
 
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+#if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
+  typedef NameDynAnyPairSeq_var _var_type;
+#endif /* ! __GNUC__ || g++ >= 2.8 */
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+};
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#endif /* end #if !defined */
 
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_char (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_char &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_char &);
-void result (CORBA::Char  result);
- // update the result 
-CORBA::Char  result_;
-};
+#if !defined (_DYNAMICANY_NAMEDYNANYPAIRSEQ___VAR_CH_)
+#define _DYNAMICANY_NAMEDYNANYPAIRSEQ___VAR_CH_
+
+// *************************************************************
+// class DynamicAny::NameDynAnyPairSeq_var
+// *************************************************************
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_short : public TAO_ClientRequest_Info
+class TAO_DynamicAny_Export NameDynAnyPairSeq_var
 {
 public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_short (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+  NameDynAnyPairSeq_var (void); // default constructor
+  NameDynAnyPairSeq_var (NameDynAnyPairSeq *);
+  NameDynAnyPairSeq_var (const NameDynAnyPairSeq_var &); // copy constructor
+  ~NameDynAnyPairSeq_var (void); // destructor
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+  NameDynAnyPairSeq_var &operator= (NameDynAnyPairSeq *);
+  NameDynAnyPairSeq_var &operator= (const NameDynAnyPairSeq_var &);
+  NameDynAnyPairSeq *operator-> (void);
+  const NameDynAnyPairSeq *operator-> (void) const;
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+  operator const NameDynAnyPairSeq &() const;
+  operator NameDynAnyPairSeq &();
+  operator NameDynAnyPairSeq &() const;
+  operator NameDynAnyPairSeq *&(); // variable-size base types only
 
+  NameDynAnyPair &operator[] (CORBA::ULong index);
+  // in, inout, out, _retn
+  const NameDynAnyPairSeq &in (void) const;
+  NameDynAnyPairSeq &inout (void);
+  NameDynAnyPairSeq *&out (void);
+  NameDynAnyPairSeq *_retn (void);
+  NameDynAnyPairSeq *ptr (void) const;
 
 private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_short (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_short &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_short &);
-void result (CORBA::Short  result);
- // update the result 
-CORBA::Short  result_;
+  NameDynAnyPairSeq *ptr_;
 };
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_ushort : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_ushort (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#endif /* end #if !defined */
 
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_ushort (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_ushort &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_ushort &);
-void result (CORBA::UShort  result);
- // update the result 
-CORBA::UShort  result_;
-};
+#if !defined (_DYNAMICANY_NAMEDYNANYPAIRSEQ___OUT_CH_)
+#define _DYNAMICANY_NAMEDYNANYPAIRSEQ___OUT_CH_
 
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_long : public TAO_ClientRequest_Info
+class TAO_DynamicAny_Export NameDynAnyPairSeq_out
 {
 public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_long (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_long (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_long &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_long &);
-void result (CORBA::Long  result);
- // update the result 
-CORBA::Long  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_ulong : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_ulong (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_ulong (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_ulong &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_ulong &);
-void result (CORBA::ULong  result);
- // update the result 
-CORBA::ULong  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_float : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_float (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_float (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_float &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_float &);
-void result (CORBA::Float  result);
- // update the result 
-CORBA::Float  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_double : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_double (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_double (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_double &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_double &);
-void result (CORBA::Double  result);
- // update the result 
-CORBA::Double  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_string : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_string (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_string (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_string &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_string &);
-void result (char *  result);
- // update the result 
-char *  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_reference : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_reference (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_reference (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_reference &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_reference &);
-void result (CORBA::Object_ptr  result);
- // update the result 
-CORBA::Object_ptr  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_typecode : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_typecode (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_typecode (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_typecode &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_typecode &);
-void result (CORBA::TypeCode_ptr  result);
- // update the result 
-CORBA::TypeCode_ptr  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_longlong : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_longlong (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_longlong (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_longlong &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_longlong &);
-void result (CORBA::LongLong  result);
- // update the result 
-CORBA::LongLong  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_ulonglong : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_ulonglong (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_ulonglong (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_ulonglong &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_ulonglong &);
-void result (CORBA::ULongLong  result);
- // update the result 
-CORBA::ULongLong  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_longdouble : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_longdouble (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_longdouble (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_longdouble &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_longdouble &);
-void result (CORBA::LongDouble  result);
- // update the result 
-CORBA::LongDouble  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_wchar : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_wchar (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_wchar (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_wchar &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_wchar &);
-void result (CORBA::WChar  result);
- // update the result 
-CORBA::WChar  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_wstring : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_wstring (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_wstring (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_wstring &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_wstring &);
-void result (CORBA::WChar *  result);
- // update the result 
-CORBA::WChar *  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_any : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_any (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_any (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_any &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_any &);
-void result (CORBA::Any *  result);
- // update the result 
-CORBA::Any *  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_dyn_any : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_dyn_any (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_dyn_any (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_dyn_any &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_dyn_any &);
-void result (DynamicAny::DynAny_ptr  result);
- // update the result 
-DynamicAny::DynAny_ptr  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_get_val : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_get_val (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_get_val (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_val &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_get_val &);
-void result (CORBA::ValueBase_ptr  result);
- // update the result 
-CORBA::ValueBase_ptr  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_seek : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_seek (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::Long index  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_seek (const TAO_ClientRequest_Info_DynamicAny_DynAny_seek &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_seek &);
-CORBA::Long & index_;
-void result (CORBA::Boolean  result);
- // update the result 
-CORBA::Boolean  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_rewind : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_rewind (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_rewind (const TAO_ClientRequest_Info_DynamicAny_DynAny_rewind &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_rewind &);
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_next : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_next (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_next (const TAO_ClientRequest_Info_DynamicAny_DynAny_next &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_next &);
-void result (CORBA::Boolean  result);
- // update the result 
-CORBA::Boolean  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_component_count : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_component_count (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_component_count (const TAO_ClientRequest_Info_DynamicAny_DynAny_component_count &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_component_count &);
-void result (CORBA::ULong  result);
- // update the result 
-CORBA::ULong  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAny_current_component : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAny;
-  TAO_ClientRequest_Info_DynamicAny_DynAny_current_component (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAny_current_component (const TAO_ClientRequest_Info_DynamicAny_DynAny_current_component &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAny_current_component &);
-void result (DynamicAny::DynAny_ptr  result);
- // update the result 
-DynamicAny::DynAny_ptr  result_;
-};
-
-#endif /* TAO_HAS_INTERCEPTORS */
-
-};
-
-
-#endif /* end #if !defined */
-
-
-#if !defined (_DYNAMICANY_DYNFIXED___PTR_CH_)
-#define _DYNAMICANY_DYNFIXED___PTR_CH_
-
-class DynFixed;
-typedef DynFixed *DynFixed_ptr;
-
-#endif /* end #if !defined */
-
-
-#if !defined (_DYNAMICANY_DYNFIXED___VAR_CH_)
-#define _DYNAMICANY_DYNFIXED___VAR_CH_
-
-class TAO_DynamicAny_Export DynFixed_var : public TAO_Base_var
-{
-public:
-  DynFixed_var (void); // default constructor
-  DynFixed_var (DynFixed_ptr p) : ptr_ (p) {} 
-  DynFixed_var (const DynFixed_var &); // copy constructor
-  ~DynFixed_var (void); // destructor
-  
-  DynFixed_var &operator= (DynFixed_ptr);
-  DynFixed_var &operator= (const DynFixed_var &);
-  DynFixed_ptr operator-> (void) const;
-  
-  operator const DynFixed_ptr &() const;
-  operator DynFixed_ptr &();
-  // in, inout, out, _retn 
-  DynFixed_ptr in (void) const;
-  DynFixed_ptr &inout (void);
-  DynFixed_ptr &out (void);
-  DynFixed_ptr _retn (void);
-  DynFixed_ptr ptr (void) const;
-
-private:
-  DynFixed_ptr ptr_;
-  // Unimplemented - prevents widening assignment.
-  DynFixed_var (const TAO_Base_var &rhs);
-  DynFixed_var &operator= (const TAO_Base_var &rhs);
-};
-
-
-#endif /* end #if !defined */
-
-
-#if !defined (_DYNAMICANY_DYNFIXED___OUT_CH_)
-#define _DYNAMICANY_DYNFIXED___OUT_CH_
-
-class TAO_DynamicAny_Export DynFixed_out
-{
-public:
-  DynFixed_out (DynFixed_ptr &);
-  DynFixed_out (DynFixed_var &);
-  DynFixed_out (const DynFixed_out &);
-  DynFixed_out &operator= (const DynFixed_out &);
-  DynFixed_out &operator= (const DynFixed_var &);
-  DynFixed_out &operator= (DynFixed_ptr);
-  operator DynFixed_ptr &();
-  DynFixed_ptr &ptr (void);
-  DynFixed_ptr operator-> (void);
-  
-private:
-  DynFixed_ptr &ptr_;
-};
-
-
-#endif /* end #if !defined */
-
-
-#if !defined (_DYNAMICANY_DYNFIXED_CH_)
-#define _DYNAMICANY_DYNFIXED_CH_
-
-class TAO_DynamicAny_Export DynFixed: public virtual DynAny
-{
-public:
-#if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
-  typedef DynFixed_ptr _ptr_type;
-  typedef DynFixed_var _var_type;
-#endif /* ! __GNUC__ || g++ >= 2.8 */
-
-  // the static operations
-  static DynFixed_ptr _duplicate (DynFixed_ptr obj);
-  static DynFixed_ptr _narrow (
-      CORBA::Object_ptr obj,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    );
-  static DynFixed_ptr _unchecked_narrow (
-      CORBA::Object_ptr obj,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    );
-  static DynFixed_ptr _nil (void)
-    {
-      return (DynFixed_ptr)0;
-    }
-
-  virtual char * get_value (
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException
-    )) = 0;
-
-  virtual CORBA::Boolean set_value (
-      const char * val,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException,
-      DynamicAny::DynAny::TypeMismatch,
-      DynamicAny::DynAny::InvalidValue
-    )) = 0;
-
-  virtual void *_tao_QueryInterface (ptr_arith_t type);
-  
-  virtual const char* _interface_repository_id (void) const;
-
-protected:
-  DynFixed (void);
-  virtual ~DynFixed (void);
-private:
-  DynFixed (const DynFixed &);
-  void operator= (const DynFixed &);  
-#if (TAO_HAS_INTERCEPTORS == 1)
-    // Generation of interceptors related RequestInfo classes per operation.
-  // This needed to be able to store the arguments, exceptiosn, constexts
-  // and build the lists dynamically on demand so that unnecessary time overhead
-  // of building these lists when they arent used is avoided.
-      class TAO_ClientRequest_Info_DynamicAny_DynFixed_get_value : public TAO_ClientRequest_Info
-  {
-  public:
-    friend class DynamicAny::DynFixed;
-    TAO_ClientRequest_Info_DynamicAny_DynFixed_get_value (
-      const char *_tao_operation,
-      IOP::ServiceContextList &_tao_service_context_list,
-      CORBA::Object *_tao_target    ,
-        CORBA::Environment &ACE_TRY_ENV = 
-      TAO_default_environment ()
-    );
-
-     virtual Dynamic::ParameterList * arguments (
-      CORBA::Environment &ACE_TRY_ENV =
-         TAO_default_environment ())
-     ACE_THROW_SPEC ((CORBA::SystemException));
-  
-    virtual Dynamic::ExceptionList * exceptions ( 
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynFixed_get_value (const TAO_ClientRequest_Info_DynamicAny_DynFixed_get_value &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynFixed_get_value &);
-void result (char *  result);
- // update the result 
-char *  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynFixed_set_value : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynFixed;
-  TAO_ClientRequest_Info_DynamicAny_DynFixed_set_value (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  const char * val  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynFixed_set_value (const TAO_ClientRequest_Info_DynamicAny_DynFixed_set_value &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynFixed_set_value &);
-const char *& val_;
-void result (CORBA::Boolean  result);
- // update the result 
-CORBA::Boolean  result_;
-};
-
-#endif /* TAO_HAS_INTERCEPTORS */
-
-};
-
-
-#endif /* end #if !defined */
-
-
-#if !defined (_DYNAMICANY_DYNENUM___PTR_CH_)
-#define _DYNAMICANY_DYNENUM___PTR_CH_
-
-class DynEnum;
-typedef DynEnum *DynEnum_ptr;
-
-#endif /* end #if !defined */
-
-
-#if !defined (_DYNAMICANY_DYNENUM___VAR_CH_)
-#define _DYNAMICANY_DYNENUM___VAR_CH_
-
-class TAO_DynamicAny_Export DynEnum_var : public TAO_Base_var
-{
-public:
-  DynEnum_var (void); // default constructor
-  DynEnum_var (DynEnum_ptr p) : ptr_ (p) {} 
-  DynEnum_var (const DynEnum_var &); // copy constructor
-  ~DynEnum_var (void); // destructor
-  
-  DynEnum_var &operator= (DynEnum_ptr);
-  DynEnum_var &operator= (const DynEnum_var &);
-  DynEnum_ptr operator-> (void) const;
-  
-  operator const DynEnum_ptr &() const;
-  operator DynEnum_ptr &();
-  // in, inout, out, _retn 
-  DynEnum_ptr in (void) const;
-  DynEnum_ptr &inout (void);
-  DynEnum_ptr &out (void);
-  DynEnum_ptr _retn (void);
-  DynEnum_ptr ptr (void) const;
-
-private:
-  DynEnum_ptr ptr_;
-  // Unimplemented - prevents widening assignment.
-  DynEnum_var (const TAO_Base_var &rhs);
-  DynEnum_var &operator= (const TAO_Base_var &rhs);
-};
-
-
-#endif /* end #if !defined */
-
-
-#if !defined (_DYNAMICANY_DYNENUM___OUT_CH_)
-#define _DYNAMICANY_DYNENUM___OUT_CH_
-
-class TAO_DynamicAny_Export DynEnum_out
-{
-public:
-  DynEnum_out (DynEnum_ptr &);
-  DynEnum_out (DynEnum_var &);
-  DynEnum_out (const DynEnum_out &);
-  DynEnum_out &operator= (const DynEnum_out &);
-  DynEnum_out &operator= (const DynEnum_var &);
-  DynEnum_out &operator= (DynEnum_ptr);
-  operator DynEnum_ptr &();
-  DynEnum_ptr &ptr (void);
-  DynEnum_ptr operator-> (void);
-  
-private:
-  DynEnum_ptr &ptr_;
-};
-
-
-#endif /* end #if !defined */
-
-
-#if !defined (_DYNAMICANY_DYNENUM_CH_)
-#define _DYNAMICANY_DYNENUM_CH_
-
-class TAO_DynamicAny_Export DynEnum: public virtual DynAny
-{
-public:
-#if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
-  typedef DynEnum_ptr _ptr_type;
-  typedef DynEnum_var _var_type;
-#endif /* ! __GNUC__ || g++ >= 2.8 */
-
-  // the static operations
-  static DynEnum_ptr _duplicate (DynEnum_ptr obj);
-  static DynEnum_ptr _narrow (
-      CORBA::Object_ptr obj,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    );
-  static DynEnum_ptr _unchecked_narrow (
-      CORBA::Object_ptr obj,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    );
-  static DynEnum_ptr _nil (void)
-    {
-      return (DynEnum_ptr)0;
-    }
-
-  virtual char * get_as_string (
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException
-    )) = 0;
-
-  virtual void set_as_string (
-      const char * value,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException,
-      DynamicAny::DynAny::InvalidValue
-    )) = 0;
-
-  virtual CORBA::ULong get_as_ulong (
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException
-    )) = 0;
-
-  virtual void set_as_ulong (
-      CORBA::ULong value,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException,
-      DynamicAny::DynAny::InvalidValue
-    )) = 0;
-
-  virtual void *_tao_QueryInterface (ptr_arith_t type);
-  
-  virtual const char* _interface_repository_id (void) const;
-
-protected:
-  DynEnum (void);
-  virtual ~DynEnum (void);
-private:
-  DynEnum (const DynEnum &);
-  void operator= (const DynEnum &);  
-#if (TAO_HAS_INTERCEPTORS == 1)
-    // Generation of interceptors related RequestInfo classes per operation.
-  // This needed to be able to store the arguments, exceptiosn, constexts
-  // and build the lists dynamically on demand so that unnecessary time overhead
-  // of building these lists when they arent used is avoided.
-      class TAO_ClientRequest_Info_DynamicAny_DynEnum_get_as_string : public TAO_ClientRequest_Info
-  {
-  public:
-    friend class DynamicAny::DynEnum;
-    TAO_ClientRequest_Info_DynamicAny_DynEnum_get_as_string (
-      const char *_tao_operation,
-      IOP::ServiceContextList &_tao_service_context_list,
-      CORBA::Object *_tao_target    ,
-        CORBA::Environment &ACE_TRY_ENV = 
-      TAO_default_environment ()
-    );
-
-     virtual Dynamic::ParameterList * arguments (
-      CORBA::Environment &ACE_TRY_ENV =
-         TAO_default_environment ())
-     ACE_THROW_SPEC ((CORBA::SystemException));
-  
-    virtual Dynamic::ExceptionList * exceptions ( 
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynEnum_get_as_string (const TAO_ClientRequest_Info_DynamicAny_DynEnum_get_as_string &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynEnum_get_as_string &);
-void result (char *  result);
- // update the result 
-char *  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynEnum_set_as_string : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynEnum;
-  TAO_ClientRequest_Info_DynamicAny_DynEnum_set_as_string (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  const char * value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynEnum_set_as_string (const TAO_ClientRequest_Info_DynamicAny_DynEnum_set_as_string &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynEnum_set_as_string &);
-const char *& value_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynEnum_get_as_ulong : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynEnum;
-  TAO_ClientRequest_Info_DynamicAny_DynEnum_get_as_ulong (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynEnum_get_as_ulong (const TAO_ClientRequest_Info_DynamicAny_DynEnum_get_as_ulong &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynEnum_get_as_ulong &);
-void result (CORBA::ULong  result);
- // update the result 
-CORBA::ULong  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynEnum_set_as_ulong : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynEnum;
-  TAO_ClientRequest_Info_DynamicAny_DynEnum_set_as_ulong (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::ULong value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynEnum_set_as_ulong (const TAO_ClientRequest_Info_DynamicAny_DynEnum_set_as_ulong &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynEnum_set_as_ulong &);
-CORBA::ULong & value_;
-};
-
-#endif /* TAO_HAS_INTERCEPTORS */
-
-};
-
-
-#endif /* end #if !defined */
-
-typedef char * FieldName;
-typedef CORBA::String_var FieldName_var;
-typedef CORBA::String_out FieldName_out;
-TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_FieldName;
-
-struct NameValuePair;
-class NameValuePair_var;
-
-struct TAO_DynamicAny_Export NameValuePair
-{
-
-#if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
-  typedef NameValuePair_var _var_type;
-#endif /* ! __GNUC__ || g++ >= 2.8 */
-
-  static void _tao_any_destructor (void*);
-
-  TAO_String_Manager id;
-  CORBA::Any value;
-};
-
-class TAO_DynamicAny_Export NameValuePair_var
-{
-public:
-  NameValuePair_var (void); // default constructor
-  NameValuePair_var (NameValuePair *);
-  NameValuePair_var (const NameValuePair_var &); // copy constructor
-  ~NameValuePair_var (void); // destructor
-  
-  NameValuePair_var &operator= (NameValuePair *);
-  NameValuePair_var &operator= (const NameValuePair_var &);
-  NameValuePair *operator-> (void);
-  const NameValuePair *operator-> (void) const;
-  
-  operator const NameValuePair &() const;
-  operator NameValuePair &();
-  operator NameValuePair &() const;
-  operator NameValuePair *&(); // variable-size types only
-  
-  // in, inout, out, _retn 
-  const NameValuePair &in (void) const;
-  NameValuePair &inout (void);
-  NameValuePair *&out (void);
-  NameValuePair *_retn (void);
-  NameValuePair *ptr (void) const;
-
-private:
-  NameValuePair *ptr_;
-};
-
-class TAO_DynamicAny_Export NameValuePair_out
-{
-public:
-  NameValuePair_out (NameValuePair *&);
-  NameValuePair_out (NameValuePair_var &);
-  NameValuePair_out (const NameValuePair_out &);
-  NameValuePair_out &operator= (const NameValuePair_out &);
-  NameValuePair_out &operator= (NameValuePair *);
-  operator NameValuePair *&();
-  NameValuePair *&ptr (void);
-  NameValuePair *operator-> (void);
-  
-private:
-  NameValuePair *&ptr_;
-  // assignment from T_var not allowed
-  void operator= (const NameValuePair_var &);
-};
-
-TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_NameValuePair;
-
-
-#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  
-#if !defined (__TAO_UNBOUNDED_SEQUENCE_DYNAMICANY_NAMEVALUEPAIRSEQ_CH_)
-#define __TAO_UNBOUNDED_SEQUENCE_DYNAMICANY_NAMEVALUEPAIRSEQ_CH_
-
-  class TAO_EXPORT_NESTED_MACRO _TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq : public TAO_Unbounded_Base_Sequence
-  {
-  public:
-    // = Initialization and termination methods.
-    
-    _TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq (void); // Default constructor.
-    _TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq (CORBA::ULong maximum); 
-    _TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq (CORBA::ULong maximum,
-      CORBA::ULong length,
-      NameValuePair *data,
-      CORBA::Boolean release = 0);
-    _TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq (const _TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq &rhs);
-    _TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq &operator= (const _TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq &rhs);
-    virtual ~_TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq (void); // Dtor.
-    // = Accessors.
-    NameValuePair &operator[] (CORBA::ULong i);
-    const NameValuePair &operator[] (CORBA::ULong i) const;
-    // = Static operations.
-    static NameValuePair *allocbuf (CORBA::ULong size);
-    static void freebuf (NameValuePair *buffer);
-    virtual void _allocate_buffer (CORBA::ULong length);
-    virtual void _deallocate_buffer (void);
-    // Implement the TAO_Base_Sequence methods (see Sequence.h)
-    
-    NameValuePair *get_buffer (CORBA::Boolean orphan = 0);
-    const NameValuePair *get_buffer (void) const;
-    void replace (CORBA::ULong max,
-      CORBA::ULong length,
-      NameValuePair *data,
-      CORBA::Boolean release);
-  };
-
-#endif /* end #if !defined */
-
-
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
-
-#if !defined (_DYNAMICANY_NAMEVALUEPAIRSEQ_CH_)
-#define _DYNAMICANY_NAMEVALUEPAIRSEQ_CH_
-
-class NameValuePairSeq;
-class NameValuePairSeq_var;
-
-// *************************************************************
-// NameValuePairSeq
-// *************************************************************
-
-class TAO_DynamicAny_Export NameValuePairSeq : public 
-#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  _TAO_Unbounded_Sequence_DynamicAny_NameValuePairSeq
-#else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<NameValuePair>
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
-{
-public:
-  NameValuePairSeq (void); // default ctor
-  NameValuePairSeq (CORBA::ULong max); // uses max size
-  NameValuePairSeq (
-    CORBA::ULong max, 
-    CORBA::ULong length, 
-    NameValuePair *buffer, 
-    CORBA::Boolean release=0
-  );
-  NameValuePairSeq (const NameValuePairSeq &); // copy ctor
-  ~NameValuePairSeq (void);
-  static void _tao_any_destructor (void*);
-
-#if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
-  typedef NameValuePairSeq_var _var_type;
-#endif /* ! __GNUC__ || g++ >= 2.8 */
-
-};
-
-#endif /* end #if !defined */
-
-
-#if !defined (_DYNAMICANY_NAMEVALUEPAIRSEQ___VAR_CH_)
-#define _DYNAMICANY_NAMEVALUEPAIRSEQ___VAR_CH_
-
-// *************************************************************
-// class DynamicAny::NameValuePairSeq_var
-// *************************************************************
-
-class TAO_DynamicAny_Export NameValuePairSeq_var
-{
-public:
-  NameValuePairSeq_var (void); // default constructor
-  NameValuePairSeq_var (NameValuePairSeq *);
-  NameValuePairSeq_var (const NameValuePairSeq_var &); // copy constructor
-  ~NameValuePairSeq_var (void); // destructor
-  
-  NameValuePairSeq_var &operator= (NameValuePairSeq *);
-  NameValuePairSeq_var &operator= (const NameValuePairSeq_var &);
-  NameValuePairSeq *operator-> (void);
-  const NameValuePairSeq *operator-> (void) const;
-  
-  operator const NameValuePairSeq &() const;
-  operator NameValuePairSeq &();
-  operator NameValuePairSeq &() const;
-  operator NameValuePairSeq *&(); // variable-size base types only
-  
-  NameValuePair &operator[] (CORBA::ULong index);
-  // in, inout, out, _retn 
-  const NameValuePairSeq &in (void) const;
-  NameValuePairSeq &inout (void);
-  NameValuePairSeq *&out (void);
-  NameValuePairSeq *_retn (void);
-  NameValuePairSeq *ptr (void) const;
-
-private:
-  NameValuePairSeq *ptr_;
-};
-
-
-#endif /* end #if !defined */
-
-
-#if !defined (_DYNAMICANY_NAMEVALUEPAIRSEQ___OUT_CH_)
-#define _DYNAMICANY_NAMEVALUEPAIRSEQ___OUT_CH_
-
-class TAO_DynamicAny_Export NameValuePairSeq_out
-{
-public:
-  NameValuePairSeq_out (NameValuePairSeq *&);
-  NameValuePairSeq_out (NameValuePairSeq_var &);
-  NameValuePairSeq_out (const NameValuePairSeq_out &);
-  NameValuePairSeq_out &operator= (const NameValuePairSeq_out &);
-  NameValuePairSeq_out &operator= (NameValuePairSeq *);
-  operator NameValuePairSeq *&();
-  NameValuePairSeq *&ptr (void);
-  NameValuePairSeq *operator-> (void);
-  NameValuePair &operator[] (CORBA::ULong index);
-  
-private:
-  NameValuePairSeq *&ptr_;
-  // assignment from T_var not allowed
-  void operator= (const NameValuePairSeq_var &);
-};
-
-
-#endif /* end #if !defined */
-
-TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_NameValuePairSeq;
-
-struct NameDynAnyPair;
-class NameDynAnyPair_var;
-
-struct TAO_DynamicAny_Export NameDynAnyPair
-{
-
-#if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
-  typedef NameDynAnyPair_var _var_type;
-#endif /* ! __GNUC__ || g++ >= 2.8 */
-
-    TAO_String_Manager id;
-  ACE_NESTED_CLASS (DynamicAny, DynAny_var) value;
-};
-
-class TAO_DynamicAny_Export NameDynAnyPair_var
-{
-public:
-  NameDynAnyPair_var (void); // default constructor
-  NameDynAnyPair_var (NameDynAnyPair *);
-  NameDynAnyPair_var (const NameDynAnyPair_var &); // copy constructor
-  ~NameDynAnyPair_var (void); // destructor
-  
-  NameDynAnyPair_var &operator= (NameDynAnyPair *);
-  NameDynAnyPair_var &operator= (const NameDynAnyPair_var &);
-  NameDynAnyPair *operator-> (void);
-  const NameDynAnyPair *operator-> (void) const;
-  
-  operator const NameDynAnyPair &() const;
-  operator NameDynAnyPair &();
-  operator NameDynAnyPair &() const;
-  operator NameDynAnyPair *&(); // variable-size types only
-  
-  // in, inout, out, _retn 
-  const NameDynAnyPair &in (void) const;
-  NameDynAnyPair &inout (void);
-  NameDynAnyPair *&out (void);
-  NameDynAnyPair *_retn (void);
-  NameDynAnyPair *ptr (void) const;
-
-private:
-  NameDynAnyPair *ptr_;
-};
-
-class TAO_DynamicAny_Export NameDynAnyPair_out
-{
-public:
-  NameDynAnyPair_out (NameDynAnyPair *&);
-  NameDynAnyPair_out (NameDynAnyPair_var &);
-  NameDynAnyPair_out (const NameDynAnyPair_out &);
-  NameDynAnyPair_out &operator= (const NameDynAnyPair_out &);
-  NameDynAnyPair_out &operator= (NameDynAnyPair *);
-  operator NameDynAnyPair *&();
-  NameDynAnyPair *&ptr (void);
-  NameDynAnyPair *operator-> (void);
-  
-private:
-  NameDynAnyPair *&ptr_;
-  // assignment from T_var not allowed
-  void operator= (const NameDynAnyPair_var &);
-};
-
-
-#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  
-#if !defined (__TAO_UNBOUNDED_SEQUENCE_DYNAMICANY_NAMEDYNANYPAIRSEQ_CH_)
-#define __TAO_UNBOUNDED_SEQUENCE_DYNAMICANY_NAMEDYNANYPAIRSEQ_CH_
-
-  class TAO_EXPORT_NESTED_MACRO _TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq : public TAO_Unbounded_Base_Sequence
-  {
-  public:
-    // = Initialization and termination methods.
-    
-    _TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq (void); // Default constructor.
-    _TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq (CORBA::ULong maximum); 
-    _TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq (CORBA::ULong maximum,
-      CORBA::ULong length,
-      NameDynAnyPair *data,
-      CORBA::Boolean release = 0);
-    _TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq (const _TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq &rhs);
-    _TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq &operator= (const _TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq &rhs);
-    virtual ~_TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq (void); // Dtor.
-    // = Accessors.
-    NameDynAnyPair &operator[] (CORBA::ULong i);
-    const NameDynAnyPair &operator[] (CORBA::ULong i) const;
-    // = Static operations.
-    static NameDynAnyPair *allocbuf (CORBA::ULong size);
-    static void freebuf (NameDynAnyPair *buffer);
-    virtual void _allocate_buffer (CORBA::ULong length);
-    virtual void _deallocate_buffer (void);
-    // Implement the TAO_Base_Sequence methods (see Sequence.h)
-    
-    NameDynAnyPair *get_buffer (CORBA::Boolean orphan = 0);
-    const NameDynAnyPair *get_buffer (void) const;
-    void replace (CORBA::ULong max,
-      CORBA::ULong length,
-      NameDynAnyPair *data,
-      CORBA::Boolean release);
-  };
-
-#endif /* end #if !defined */
-
-
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
-
-#if !defined (_DYNAMICANY_NAMEDYNANYPAIRSEQ_CH_)
-#define _DYNAMICANY_NAMEDYNANYPAIRSEQ_CH_
-
-class NameDynAnyPairSeq;
-class NameDynAnyPairSeq_var;
-
-// *************************************************************
-// NameDynAnyPairSeq
-// *************************************************************
-
-class TAO_DynamicAny_Export NameDynAnyPairSeq : public 
-#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  _TAO_Unbounded_Sequence_DynamicAny_NameDynAnyPairSeq
-#else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<NameDynAnyPair>
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
-{
-public:
-  NameDynAnyPairSeq (void); // default ctor
-  NameDynAnyPairSeq (CORBA::ULong max); // uses max size
-  NameDynAnyPairSeq (
-    CORBA::ULong max, 
-    CORBA::ULong length, 
-    NameDynAnyPair *buffer, 
-    CORBA::Boolean release=0
-  );
-  NameDynAnyPairSeq (const NameDynAnyPairSeq &); // copy ctor
-  ~NameDynAnyPairSeq (void);
-  static void _tao_any_destructor (void*);
-
-#if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
-  typedef NameDynAnyPairSeq_var _var_type;
-#endif /* ! __GNUC__ || g++ >= 2.8 */
-
-};
-
-#endif /* end #if !defined */
-
-
-#if !defined (_DYNAMICANY_NAMEDYNANYPAIRSEQ___VAR_CH_)
-#define _DYNAMICANY_NAMEDYNANYPAIRSEQ___VAR_CH_
-
-// *************************************************************
-// class DynamicAny::NameDynAnyPairSeq_var
-// *************************************************************
-
-class TAO_DynamicAny_Export NameDynAnyPairSeq_var
-{
-public:
-  NameDynAnyPairSeq_var (void); // default constructor
-  NameDynAnyPairSeq_var (NameDynAnyPairSeq *);
-  NameDynAnyPairSeq_var (const NameDynAnyPairSeq_var &); // copy constructor
-  ~NameDynAnyPairSeq_var (void); // destructor
-  
-  NameDynAnyPairSeq_var &operator= (NameDynAnyPairSeq *);
-  NameDynAnyPairSeq_var &operator= (const NameDynAnyPairSeq_var &);
-  NameDynAnyPairSeq *operator-> (void);
-  const NameDynAnyPairSeq *operator-> (void) const;
-  
-  operator const NameDynAnyPairSeq &() const;
-  operator NameDynAnyPairSeq &();
-  operator NameDynAnyPairSeq &() const;
-  operator NameDynAnyPairSeq *&(); // variable-size base types only
-  
-  NameDynAnyPair &operator[] (CORBA::ULong index);
-  // in, inout, out, _retn 
-  const NameDynAnyPairSeq &in (void) const;
-  NameDynAnyPairSeq &inout (void);
-  NameDynAnyPairSeq *&out (void);
-  NameDynAnyPairSeq *_retn (void);
-  NameDynAnyPairSeq *ptr (void) const;
-
-private:
-  NameDynAnyPairSeq *ptr_;
-};
-
-
-#endif /* end #if !defined */
-
-
-#if !defined (_DYNAMICANY_NAMEDYNANYPAIRSEQ___OUT_CH_)
-#define _DYNAMICANY_NAMEDYNANYPAIRSEQ___OUT_CH_
-
-class TAO_DynamicAny_Export NameDynAnyPairSeq_out
-{
-public:
-  NameDynAnyPairSeq_out (NameDynAnyPairSeq *&);
-  NameDynAnyPairSeq_out (NameDynAnyPairSeq_var &);
-  NameDynAnyPairSeq_out (const NameDynAnyPairSeq_out &);
-  NameDynAnyPairSeq_out &operator= (const NameDynAnyPairSeq_out &);
-  NameDynAnyPairSeq_out &operator= (NameDynAnyPairSeq *);
-  operator NameDynAnyPairSeq *&();
-  NameDynAnyPairSeq *&ptr (void);
-  NameDynAnyPairSeq *operator-> (void);
-  NameDynAnyPair &operator[] (CORBA::ULong index);
-  
-private:
-  NameDynAnyPairSeq *&ptr_;
-  // assignment from T_var not allowed
-  void operator= (const NameDynAnyPairSeq_var &);
-};
-
-
-#endif /* end #if !defined */
-
-
-#if !defined (_DYNAMICANY_DYNSTRUCT___PTR_CH_)
-#define _DYNAMICANY_DYNSTRUCT___PTR_CH_
-
-class DynStruct;
-typedef DynStruct *DynStruct_ptr;
-
-#endif /* end #if !defined */
-
-
-#if !defined (_DYNAMICANY_DYNSTRUCT___VAR_CH_)
-#define _DYNAMICANY_DYNSTRUCT___VAR_CH_
-
-class TAO_DynamicAny_Export DynStruct_var : public TAO_Base_var
-{
-public:
-  DynStruct_var (void); // default constructor
-  DynStruct_var (DynStruct_ptr p) : ptr_ (p) {} 
-  DynStruct_var (const DynStruct_var &); // copy constructor
-  ~DynStruct_var (void); // destructor
-  
-  DynStruct_var &operator= (DynStruct_ptr);
-  DynStruct_var &operator= (const DynStruct_var &);
-  DynStruct_ptr operator-> (void) const;
-  
-  operator const DynStruct_ptr &() const;
-  operator DynStruct_ptr &();
-  // in, inout, out, _retn 
-  DynStruct_ptr in (void) const;
-  DynStruct_ptr &inout (void);
-  DynStruct_ptr &out (void);
-  DynStruct_ptr _retn (void);
-  DynStruct_ptr ptr (void) const;
-
-private:
-  DynStruct_ptr ptr_;
-  // Unimplemented - prevents widening assignment.
-  DynStruct_var (const TAO_Base_var &rhs);
-  DynStruct_var &operator= (const TAO_Base_var &rhs);
-};
-
-
-#endif /* end #if !defined */
-
-
-#if !defined (_DYNAMICANY_DYNSTRUCT___OUT_CH_)
-#define _DYNAMICANY_DYNSTRUCT___OUT_CH_
-
-class TAO_DynamicAny_Export DynStruct_out
-{
-public:
-  DynStruct_out (DynStruct_ptr &);
-  DynStruct_out (DynStruct_var &);
-  DynStruct_out (const DynStruct_out &);
-  DynStruct_out &operator= (const DynStruct_out &);
-  DynStruct_out &operator= (const DynStruct_var &);
-  DynStruct_out &operator= (DynStruct_ptr);
-  operator DynStruct_ptr &();
-  DynStruct_ptr &ptr (void);
-  DynStruct_ptr operator-> (void);
-  
-private:
-  DynStruct_ptr &ptr_;
-};
-
-
-#endif /* end #if !defined */
-
-
-#if !defined (_DYNAMICANY_DYNSTRUCT_CH_)
-#define _DYNAMICANY_DYNSTRUCT_CH_
-
-class TAO_DynamicAny_Export DynStruct: public virtual DynAny
-{
-public:
-#if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
-  typedef DynStruct_ptr _ptr_type;
-  typedef DynStruct_var _var_type;
-#endif /* ! __GNUC__ || g++ >= 2.8 */
-
-  // the static operations
-  static DynStruct_ptr _duplicate (DynStruct_ptr obj);
-  static DynStruct_ptr _narrow (
-      CORBA::Object_ptr obj,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    );
-  static DynStruct_ptr _unchecked_narrow (
-      CORBA::Object_ptr obj,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    );
-  static DynStruct_ptr _nil (void)
-    {
-      return (DynStruct_ptr)0;
-    }
-
-  virtual char * current_member_name (
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException,
-      DynamicAny::DynAny::TypeMismatch,
-      DynamicAny::DynAny::InvalidValue
-    )) = 0;
-
-  virtual CORBA::TCKind_ptr current_member_kind (
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException,
-      DynamicAny::DynAny::TypeMismatch,
-      DynamicAny::DynAny::InvalidValue
-    )) = 0;
-
-  virtual DynamicAny::NameValuePairSeq * get_members (
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException
-    )) = 0;
-
-  virtual void set_members (
-      const DynamicAny::NameValuePairSeq & value,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException,
-      DynamicAny::DynAny::TypeMismatch,
-      DynamicAny::DynAny::InvalidValue
-    )) = 0;
-
-  virtual DynamicAny::NameDynAnyPairSeq * get_members_as_dyn_any (
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException
-    )) = 0;
-
-  virtual void set_members_as_dyn_any (
-      const DynamicAny::NameDynAnyPairSeq & value,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException,
-      DynamicAny::DynAny::TypeMismatch,
-      DynamicAny::DynAny::InvalidValue
-    )) = 0;
-
-  virtual void *_tao_QueryInterface (ptr_arith_t type);
-  
-  virtual const char* _interface_repository_id (void) const;
-
-protected:
-  DynStruct (void);
-  virtual ~DynStruct (void);
-private:
-  DynStruct (const DynStruct &);
-  void operator= (const DynStruct &);  
-#if (TAO_HAS_INTERCEPTORS == 1)
-    // Generation of interceptors related RequestInfo classes per operation.
-  // This needed to be able to store the arguments, exceptiosn, constexts
-  // and build the lists dynamically on demand so that unnecessary time overhead
-  // of building these lists when they arent used is avoided.
-      class TAO_ClientRequest_Info_DynamicAny_DynStruct_current_member_name : public TAO_ClientRequest_Info
-  {
-  public:
-    friend class DynamicAny::DynStruct;
-    TAO_ClientRequest_Info_DynamicAny_DynStruct_current_member_name (
-      const char *_tao_operation,
-      IOP::ServiceContextList &_tao_service_context_list,
-      CORBA::Object *_tao_target    ,
-        CORBA::Environment &ACE_TRY_ENV = 
-      TAO_default_environment ()
-    );
-
-     virtual Dynamic::ParameterList * arguments (
-      CORBA::Environment &ACE_TRY_ENV =
-         TAO_default_environment ())
-     ACE_THROW_SPEC ((CORBA::SystemException));
-  
-    virtual Dynamic::ExceptionList * exceptions ( 
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynStruct_current_member_name (const TAO_ClientRequest_Info_DynamicAny_DynStruct_current_member_name &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynStruct_current_member_name &);
-void result (char *  result);
- // update the result 
-char *  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynStruct_current_member_kind : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynStruct;
-  TAO_ClientRequest_Info_DynamicAny_DynStruct_current_member_kind (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynStruct_current_member_kind (const TAO_ClientRequest_Info_DynamicAny_DynStruct_current_member_kind &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynStruct_current_member_kind &);
-void result (CORBA::TCKind_ptr  result);
- // update the result 
-CORBA::TCKind_ptr  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynStruct_get_members : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynStruct;
-  TAO_ClientRequest_Info_DynamicAny_DynStruct_get_members (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynStruct_get_members (const TAO_ClientRequest_Info_DynamicAny_DynStruct_get_members &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynStruct_get_members &);
-void result (DynamicAny::NameValuePairSeq *  result);
- // update the result 
-DynamicAny::NameValuePairSeq *  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynStruct_set_members : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynStruct;
-  TAO_ClientRequest_Info_DynamicAny_DynStruct_set_members (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  const DynamicAny::NameValuePairSeq & value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynStruct_set_members (const TAO_ClientRequest_Info_DynamicAny_DynStruct_set_members &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynStruct_set_members &);
-const DynamicAny::NameValuePairSeq & value_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynStruct_get_members_as_dyn_any : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynStruct;
-  TAO_ClientRequest_Info_DynamicAny_DynStruct_get_members_as_dyn_any (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynStruct_get_members_as_dyn_any (const TAO_ClientRequest_Info_DynamicAny_DynStruct_get_members_as_dyn_any &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynStruct_get_members_as_dyn_any &);
-void result (DynamicAny::NameDynAnyPairSeq *  result);
- // update the result 
-DynamicAny::NameDynAnyPairSeq *  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynStruct_set_members_as_dyn_any : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynStruct;
-  TAO_ClientRequest_Info_DynamicAny_DynStruct_set_members_as_dyn_any (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  const DynamicAny::NameDynAnyPairSeq & value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
+  NameDynAnyPairSeq_out (NameDynAnyPairSeq *&);
+  NameDynAnyPairSeq_out (NameDynAnyPairSeq_var &);
+  NameDynAnyPairSeq_out (const NameDynAnyPairSeq_out &);
+  NameDynAnyPairSeq_out &operator= (const NameDynAnyPairSeq_out &);
+  NameDynAnyPairSeq_out &operator= (NameDynAnyPairSeq *);
+  operator NameDynAnyPairSeq *&();
+  NameDynAnyPairSeq *&ptr (void);
+  NameDynAnyPairSeq *operator-> (void);
+  NameDynAnyPair &operator[] (CORBA::ULong index);
 
 private:
-TAO_ClientRequest_Info_DynamicAny_DynStruct_set_members_as_dyn_any (const TAO_ClientRequest_Info_DynamicAny_DynStruct_set_members_as_dyn_any &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynStruct_set_members_as_dyn_any &);
-const DynamicAny::NameDynAnyPairSeq & value_;
-};
-
-#endif /* TAO_HAS_INTERCEPTORS */
-
+  NameDynAnyPairSeq *&ptr_;
+  // assignment from T_var not allowed
+  void operator= (const NameDynAnyPairSeq_var &);
 };
 
 
 #endif /* end #if !defined */
 
 
-#if !defined (_DYNAMICANY_DYNUNION___PTR_CH_)
-#define _DYNAMICANY_DYNUNION___PTR_CH_
+#if !defined (_DYNAMICANY_DYNSTRUCT___PTR_CH_)
+#define _DYNAMICANY_DYNSTRUCT___PTR_CH_
 
-class DynUnion;
-typedef DynUnion *DynUnion_ptr;
+class DynStruct;
+typedef DynStruct *DynStruct_ptr;
 
 #endif /* end #if !defined */
 
 
-#if !defined (_DYNAMICANY_DYNUNION___VAR_CH_)
-#define _DYNAMICANY_DYNUNION___VAR_CH_
+#if !defined (_DYNAMICANY_DYNSTRUCT___VAR_CH_)
+#define _DYNAMICANY_DYNSTRUCT___VAR_CH_
 
-class TAO_DynamicAny_Export DynUnion_var : public TAO_Base_var
+class TAO_DynamicAny_Export DynStruct_var : public TAO_Base_var
 {
 public:
-  DynUnion_var (void); // default constructor
-  DynUnion_var (DynUnion_ptr p) : ptr_ (p) {} 
-  DynUnion_var (const DynUnion_var &); // copy constructor
-  ~DynUnion_var (void); // destructor
+  DynStruct_var (void); // default constructor
+  DynStruct_var (DynStruct_ptr p) : ptr_ (p) {}
+  DynStruct_var (const DynStruct_var &); // copy constructor
+  ~DynStruct_var (void); // destructor
   
-  DynUnion_var &operator= (DynUnion_ptr);
-  DynUnion_var &operator= (const DynUnion_var &);
-  DynUnion_ptr operator-> (void) const;
+  DynStruct_var &operator= (DynStruct_ptr);
+  DynStruct_var &operator= (const DynStruct_var &);
+  DynStruct_ptr operator-> (void) const;
   
-  operator const DynUnion_ptr &() const;
-  operator DynUnion_ptr &();
+  operator const DynStruct_ptr &() const;
+  operator DynStruct_ptr &();
   // in, inout, out, _retn 
-  DynUnion_ptr in (void) const;
-  DynUnion_ptr &inout (void);
-  DynUnion_ptr &out (void);
-  DynUnion_ptr _retn (void);
-  DynUnion_ptr ptr (void) const;
+  DynStruct_ptr in (void) const;
+  DynStruct_ptr &inout (void);
+  DynStruct_ptr &out (void);
+  DynStruct_ptr _retn (void);
+  DynStruct_ptr ptr (void) const;
 
 private:
-  DynUnion_ptr ptr_;
+  DynStruct_ptr ptr_;
   // Unimplemented - prevents widening assignment.
-  DynUnion_var (const TAO_Base_var &rhs);
-  DynUnion_var &operator= (const TAO_Base_var &rhs);
+  DynStruct_var (const TAO_Base_var &rhs);
+  DynStruct_var &operator= (const TAO_Base_var &rhs);
 };
 
 
 #endif /* end #if !defined */
 
 
-#if !defined (_DYNAMICANY_DYNUNION___OUT_CH_)
-#define _DYNAMICANY_DYNUNION___OUT_CH_
+#if !defined (_DYNAMICANY_DYNSTRUCT___OUT_CH_)
+#define _DYNAMICANY_DYNSTRUCT___OUT_CH_
 
-class TAO_DynamicAny_Export DynUnion_out
+class TAO_DynamicAny_Export DynStruct_out
 {
 public:
-  DynUnion_out (DynUnion_ptr &);
-  DynUnion_out (DynUnion_var &);
-  DynUnion_out (const DynUnion_out &);
-  DynUnion_out &operator= (const DynUnion_out &);
-  DynUnion_out &operator= (const DynUnion_var &);
-  DynUnion_out &operator= (DynUnion_ptr);
-  operator DynUnion_ptr &();
-  DynUnion_ptr &ptr (void);
-  DynUnion_ptr operator-> (void);
+  DynStruct_out (DynStruct_ptr &);
+  DynStruct_out (DynStruct_var &);
+  DynStruct_out (const DynStruct_out &);
+  DynStruct_out &operator= (const DynStruct_out &);
+  DynStruct_out &operator= (const DynStruct_var &);
+  DynStruct_out &operator= (DynStruct_ptr);
+  operator DynStruct_ptr &();
+  DynStruct_ptr &ptr (void);
+  DynStruct_ptr operator-> (void);
   
 private:
-  DynUnion_ptr &ptr_;
+  DynStruct_ptr &ptr_;
 };
 
 
 #endif /* end #if !defined */
 
 
-#if !defined (_DYNAMICANY_DYNUNION_CH_)
-#define _DYNAMICANY_DYNUNION_CH_
+#if !defined (_DYNAMICANY_DYNSTRUCT_CH_)
+#define _DYNAMICANY_DYNSTRUCT_CH_
 
-class TAO_DynamicAny_Export DynUnion: public virtual DynAny
+class TAO_DynamicAny_Export DynStruct: public virtual DynAny
 {
 public:
 #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
-  typedef DynUnion_ptr _ptr_type;
-  typedef DynUnion_var _var_type;
+  typedef DynStruct_ptr _ptr_type;
+  typedef DynStruct_var _var_type;
 #endif /* ! __GNUC__ || g++ >= 2.8 */
 
   // the static operations
-  static DynUnion_ptr _duplicate (DynUnion_ptr obj);
-  static DynUnion_ptr _narrow (
+  static DynStruct_ptr _duplicate (DynStruct_ptr obj);
+  static DynStruct_ptr _narrow (
       CORBA::Object_ptr obj,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
-  static DynUnion_ptr _unchecked_narrow (
+  static DynStruct_ptr _unchecked_narrow (
       CORBA::Object_ptr obj,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
-  static DynUnion_ptr _nil (void)
+  static DynStruct_ptr _nil (void)
     {
-      return (DynUnion_ptr)0;
+      return (DynStruct_ptr)0;
     }
 
-  virtual DynamicAny::DynAny_ptr get_discriminator (
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException
-    )) = 0;
-
-  virtual void set_discriminator (
-      DynamicAny::DynAny_ptr d,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException,
-      DynamicAny::DynAny::TypeMismatch
-    )) = 0;
-
-  virtual void set_to_default_member (
+  virtual char * current_member_name (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException,
-      DynamicAny::DynAny::TypeMismatch
+      DynamicAny::DynAny::TypeMismatch,
+      DynamicAny::DynAny::InvalidValue
     )) = 0;
 
-  virtual void set_to_no_active_member (
+  virtual CORBA::TCKind current_member_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException,
-      DynamicAny::DynAny::TypeMismatch
-    )) = 0;
-
-  virtual CORBA::Boolean has_no_active_member (
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException
+      DynamicAny::DynAny::TypeMismatch,
+      DynamicAny::DynAny::InvalidValue
     )) = 0;
 
-  virtual CORBA::TCKind_ptr discriminator_kind (
+  virtual DynamicAny::NameValuePairSeq * get_members (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -4046,30 +1586,33 @@
       CORBA::SystemException
     )) = 0;
 
-  virtual DynamicAny::DynAny_ptr member (
+  virtual void set_members (
+      const DynamicAny::NameValuePairSeq & value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException,
+      DynamicAny::DynAny::TypeMismatch,
       DynamicAny::DynAny::InvalidValue
     )) = 0;
 
-  virtual char * member_name (
+  virtual DynamicAny::NameDynAnyPairSeq * get_members_as_dyn_any (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
-      CORBA::SystemException,
-      DynamicAny::DynAny::InvalidValue
+      CORBA::SystemException
     )) = 0;
 
-  virtual CORBA::TCKind_ptr member_kind (
+  virtual void set_members_as_dyn_any (
+      const DynamicAny::NameDynAnyPairSeq & value,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException,
+      DynamicAny::DynAny::TypeMismatch,
       DynamicAny::DynAny::InvalidValue
     )) = 0;
 
@@ -4078,333 +1621,203 @@
   virtual const char* _interface_repository_id (void) const;
 
 protected:
-  DynUnion (void);
-  virtual ~DynUnion (void);
+  DynStruct (void);
+  virtual ~DynStruct (void);
 private:
-  DynUnion (const DynUnion &);
-  void operator= (const DynUnion &);  
-#if (TAO_HAS_INTERCEPTORS == 1)
-    // Generation of interceptors related RequestInfo classes per operation.
-  // This needed to be able to store the arguments, exceptiosn, constexts
-  // and build the lists dynamically on demand so that unnecessary time overhead
-  // of building these lists when they arent used is avoided.
-      class TAO_ClientRequest_Info_DynamicAny_DynUnion_get_discriminator : public TAO_ClientRequest_Info
-  {
-  public:
-    friend class DynamicAny::DynUnion;
-    TAO_ClientRequest_Info_DynamicAny_DynUnion_get_discriminator (
-      const char *_tao_operation,
-      IOP::ServiceContextList &_tao_service_context_list,
-      CORBA::Object *_tao_target    ,
-        CORBA::Environment &ACE_TRY_ENV = 
-      TAO_default_environment ()
-    );
-
-     virtual Dynamic::ParameterList * arguments (
-      CORBA::Environment &ACE_TRY_ENV =
-         TAO_default_environment ())
-     ACE_THROW_SPEC ((CORBA::SystemException));
-  
-    virtual Dynamic::ExceptionList * exceptions ( 
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
+  DynStruct (const DynStruct &);
+  void operator= (const DynStruct &);
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynUnion_get_discriminator (const TAO_ClientRequest_Info_DynamicAny_DynUnion_get_discriminator &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynUnion_get_discriminator &);
-void result (DynamicAny::DynAny_ptr  result);
- // update the result 
-DynamicAny::DynAny_ptr  result_;
 };
 
-class TAO_ClientRequest_Info_DynamicAny_DynUnion_set_discriminator : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynUnion;
-  TAO_ClientRequest_Info_DynamicAny_DynUnion_set_discriminator (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  DynamicAny::DynAny_ptr d  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynUnion_set_discriminator (const TAO_ClientRequest_Info_DynamicAny_DynUnion_set_discriminator &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynUnion_set_discriminator &);
-DynamicAny::DynAny_ptr & d_;
-};
+#endif /* end #if !defined */
 
-class TAO_ClientRequest_Info_DynamicAny_DynUnion_set_to_default_member : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynUnion;
-  TAO_ClientRequest_Info_DynamicAny_DynUnion_set_to_default_member (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
 
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+#if !defined (_DYNAMICANY_DYNUNION___PTR_CH_)
+#define _DYNAMICANY_DYNUNION___PTR_CH_
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+class DynUnion;
+typedef DynUnion *DynUnion_ptr;
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#endif /* end #if !defined */
 
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynUnion_set_to_default_member (const TAO_ClientRequest_Info_DynamicAny_DynUnion_set_to_default_member &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynUnion_set_to_default_member &);
-};
+#if !defined (_DYNAMICANY_DYNUNION___VAR_CH_)
+#define _DYNAMICANY_DYNUNION___VAR_CH_
 
-class TAO_ClientRequest_Info_DynamicAny_DynUnion_set_to_no_active_member : public TAO_ClientRequest_Info
+class TAO_DynamicAny_Export DynUnion_var : public TAO_Base_var
 {
 public:
-  friend class DynamicAny::DynUnion;
-  TAO_ClientRequest_Info_DynamicAny_DynUnion_set_to_no_active_member (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+  DynUnion_var (void); // default constructor
+  DynUnion_var (DynUnion_ptr p) : ptr_ (p) {}
+  DynUnion_var (const DynUnion_var &); // copy constructor
+  ~DynUnion_var (void); // destructor
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+  DynUnion_var &operator= (DynUnion_ptr);
+  DynUnion_var &operator= (const DynUnion_var &);
+  DynUnion_ptr operator-> (void) const;
 
+  operator const DynUnion_ptr &() const;
+  operator DynUnion_ptr &();
+  // in, inout, out, _retn
+  DynUnion_ptr in (void) const;
+  DynUnion_ptr &inout (void);
+  DynUnion_ptr &out (void);
+  DynUnion_ptr _retn (void);
+  DynUnion_ptr ptr (void) const;
 
 private:
-TAO_ClientRequest_Info_DynamicAny_DynUnion_set_to_no_active_member (const TAO_ClientRequest_Info_DynamicAny_DynUnion_set_to_no_active_member &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynUnion_set_to_no_active_member &);
+  DynUnion_ptr ptr_;
+  // Unimplemented - prevents widening assignment.
+  DynUnion_var (const TAO_Base_var &rhs);
+  DynUnion_var &operator= (const TAO_Base_var &rhs);
 };
 
-class TAO_ClientRequest_Info_DynamicAny_DynUnion_has_no_active_member : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynUnion;
-  TAO_ClientRequest_Info_DynamicAny_DynUnion_has_no_active_member (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#endif /* end #if !defined */
 
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynUnion_has_no_active_member (const TAO_ClientRequest_Info_DynamicAny_DynUnion_has_no_active_member &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynUnion_has_no_active_member &);
-void result (CORBA::Boolean  result);
- // update the result 
-CORBA::Boolean  result_;
-};
+#if !defined (_DYNAMICANY_DYNUNION___OUT_CH_)
+#define _DYNAMICANY_DYNUNION___OUT_CH_
 
-class TAO_ClientRequest_Info_DynamicAny_DynUnion_discriminator_kind : public TAO_ClientRequest_Info
+class TAO_DynamicAny_Export DynUnion_out
 {
 public:
-  friend class DynamicAny::DynUnion;
-  TAO_ClientRequest_Info_DynamicAny_DynUnion_discriminator_kind (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
+  DynUnion_out (DynUnion_ptr &);
+  DynUnion_out (DynUnion_var &);
+  DynUnion_out (const DynUnion_out &);
+  DynUnion_out &operator= (const DynUnion_out &);
+  DynUnion_out &operator= (const DynUnion_var &);
+  DynUnion_out &operator= (DynUnion_ptr);
+  operator DynUnion_ptr &();
+  DynUnion_ptr &ptr (void);
+  DynUnion_ptr operator-> (void);
 
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+private:
+  DynUnion_ptr &ptr_;
+};
 
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+#endif /* end #if !defined */
 
 
-private:
-TAO_ClientRequest_Info_DynamicAny_DynUnion_discriminator_kind (const TAO_ClientRequest_Info_DynamicAny_DynUnion_discriminator_kind &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynUnion_discriminator_kind &);
-void result (CORBA::TCKind_ptr  result);
- // update the result 
-CORBA::TCKind_ptr  result_;
-};
+#if !defined (_DYNAMICANY_DYNUNION_CH_)
+#define _DYNAMICANY_DYNUNION_CH_
 
-class TAO_ClientRequest_Info_DynamicAny_DynUnion_member : public TAO_ClientRequest_Info
+class TAO_DynamicAny_Export DynUnion: public virtual DynAny
 {
 public:
-  friend class DynamicAny::DynUnion;
-  TAO_ClientRequest_Info_DynamicAny_DynUnion_member (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
+#if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
+  typedef DynUnion_ptr _ptr_type;
+  typedef DynUnion_var _var_type;
+#endif /* ! __GNUC__ || g++ >= 2.8 */
+
+  // the static operations
+  static DynUnion_ptr _duplicate (DynUnion_ptr obj);
+  static DynUnion_ptr _narrow (
+      CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV = 
     TAO_default_environment ()
   );
-
-   virtual Dynamic::ParameterList * arguments (
+  static DynUnion_ptr _unchecked_narrow (
+      CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+        TAO_default_environment ()
+    );
+  static DynUnion_ptr _nil (void)
+    {
+      return (DynUnion_ptr)0;
+    }
 
-virtual Dynamic::ExceptionList * exceptions ( 
+  virtual DynamicAny::DynAny_ptr get_discriminator (
   CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+        TAO_default_environment ()
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException
+    )) = 0;
 
-virtual CORBA::Any * result (
+  virtual void set_discriminator (
+      DynamicAny::DynAny_ptr d,
   CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynUnion_member (const TAO_ClientRequest_Info_DynamicAny_DynUnion_member &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynUnion_member &);
-void result (DynamicAny::DynAny_ptr  result);
- // update the result 
-DynamicAny::DynAny_ptr  result_;
-};
+        TAO_default_environment ()
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException,
+      DynamicAny::DynAny::TypeMismatch
+    )) = 0;
 
-class TAO_ClientRequest_Info_DynamicAny_DynUnion_member_name : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynUnion;
-  TAO_ClientRequest_Info_DynamicAny_DynUnion_member_name (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
+  virtual void set_to_default_member (
     CORBA::Environment &ACE_TRY_ENV = 
     TAO_default_environment ()
-  );
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException,
+      DynamicAny::DynAny::TypeMismatch
+    )) = 0;
 
-   virtual Dynamic::ParameterList * arguments (
+  virtual void set_to_no_active_member (
     CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+        TAO_default_environment ()
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException,
+      DynamicAny::DynAny::TypeMismatch
+    )) = 0;
 
-virtual Dynamic::ExceptionList * exceptions ( 
+  virtual CORBA::Boolean has_no_active_member (
   CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+        TAO_default_environment ()
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException
+    )) = 0;
 
-virtual CORBA::Any * result (
+  virtual CORBA::TCKind discriminator_kind (
   CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynUnion_member_name (const TAO_ClientRequest_Info_DynamicAny_DynUnion_member_name &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynUnion_member_name &);
-void result (char *  result);
- // update the result 
-char *  result_;
-};
+        TAO_default_environment ()
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException
+    )) = 0;
 
-class TAO_ClientRequest_Info_DynamicAny_DynUnion_member_kind : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynUnion;
-  TAO_ClientRequest_Info_DynamicAny_DynUnion_member_kind (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
+  virtual DynamicAny::DynAny_ptr member (
     CORBA::Environment &ACE_TRY_ENV = 
     TAO_default_environment ()
-  );
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException,
+      DynamicAny::DynAny::InvalidValue
+    )) = 0;
 
-   virtual Dynamic::ParameterList * arguments (
+  virtual char * member_name (
     CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+        TAO_default_environment ()
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException,
+      DynamicAny::DynAny::InvalidValue
+    )) = 0;
 
-virtual Dynamic::ExceptionList * exceptions ( 
+  virtual CORBA::TCKind member_kind (
   CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+        TAO_default_environment ()
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException,
+      DynamicAny::DynAny::InvalidValue
+    )) = 0;
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+  virtual void *_tao_QueryInterface (ptr_arith_t type);
 
+  virtual const char* _interface_repository_id (void) const;
 
+protected:
+  DynUnion (void);
+  virtual ~DynUnion (void);
 private:
-TAO_ClientRequest_Info_DynamicAny_DynUnion_member_kind (const TAO_ClientRequest_Info_DynamicAny_DynUnion_member_kind &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynUnion_member_kind &);
-void result (CORBA::TCKind_ptr  result);
- // update the result 
-CORBA::TCKind_ptr  result_;
-};
-
-#endif /* TAO_HAS_INTERCEPTORS */
+  DynUnion (const DynUnion &);
+  void operator= (const DynUnion &);
 
 };
 
@@ -4795,300 +2208,84 @@
   static DynSequence_ptr _narrow (
       CORBA::Object_ptr obj,
       CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    );
-  static DynSequence_ptr _unchecked_narrow (
-      CORBA::Object_ptr obj,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    );
-  static DynSequence_ptr _nil (void)
-    {
-      return (DynSequence_ptr)0;
-    }
-
-  virtual CORBA::ULong get_length (
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException
-    )) = 0;
-
-  virtual void set_length (
-      CORBA::ULong len,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException,
-      DynamicAny::DynAny::InvalidValue
-    )) = 0;
-
-  virtual DynamicAny::AnySeq * get_elements (
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException
-    )) = 0;
-
-  virtual void set_elements (
-      const DynamicAny::AnySeq & value,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException,
-      DynamicAny::DynAny::TypeMismatch,
-      DynamicAny::DynAny::InvalidValue
-    )) = 0;
-
-  virtual DynamicAny::DynAnySeq * get_elements_as_dyn_any (
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException
-    )) = 0;
-
-  virtual void set_elements_as_dyn_any (
-      const DynamicAny::DynAnySeq & value,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
-    )
-    ACE_THROW_SPEC ((
-      CORBA::SystemException,
-      DynamicAny::DynAny::TypeMismatch,
-      DynamicAny::DynAny::InvalidValue
-    )) = 0;
-
-  virtual void *_tao_QueryInterface (ptr_arith_t type);
-  
-  virtual const char* _interface_repository_id (void) const;
-
-protected:
-  DynSequence (void);
-  virtual ~DynSequence (void);
-private:
-  DynSequence (const DynSequence &);
-  void operator= (const DynSequence &);  
-#if (TAO_HAS_INTERCEPTORS == 1)
-    // Generation of interceptors related RequestInfo classes per operation.
-  // This needed to be able to store the arguments, exceptiosn, constexts
-  // and build the lists dynamically on demand so that unnecessary time overhead
-  // of building these lists when they arent used is avoided.
-      class TAO_ClientRequest_Info_DynamicAny_DynSequence_get_length : public TAO_ClientRequest_Info
-  {
-  public:
-    friend class DynamicAny::DynSequence;
-    TAO_ClientRequest_Info_DynamicAny_DynSequence_get_length (
-      const char *_tao_operation,
-      IOP::ServiceContextList &_tao_service_context_list,
-      CORBA::Object *_tao_target    ,
-        CORBA::Environment &ACE_TRY_ENV = 
-      TAO_default_environment ()
-    );
-
-     virtual Dynamic::ParameterList * arguments (
-      CORBA::Environment &ACE_TRY_ENV =
-         TAO_default_environment ())
-     ACE_THROW_SPEC ((CORBA::SystemException));
-  
-    virtual Dynamic::ExceptionList * exceptions ( 
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynSequence_get_length (const TAO_ClientRequest_Info_DynamicAny_DynSequence_get_length &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynSequence_get_length &);
-void result (CORBA::ULong  result);
- // update the result 
-CORBA::ULong  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynSequence_set_length : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynSequence;
-  TAO_ClientRequest_Info_DynamicAny_DynSequence_set_length (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::ULong len  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynSequence_set_length (const TAO_ClientRequest_Info_DynamicAny_DynSequence_set_length &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynSequence_set_length &);
-CORBA::ULong & len_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynSequence_get_elements : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynSequence;
-  TAO_ClientRequest_Info_DynamicAny_DynSequence_get_elements (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynSequence_get_elements (const TAO_ClientRequest_Info_DynamicAny_DynSequence_get_elements &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynSequence_get_elements &);
-void result (DynamicAny::AnySeq *  result);
- // update the result 
-DynamicAny::AnySeq *  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynSequence_set_elements : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynSequence;
-  TAO_ClientRequest_Info_DynamicAny_DynSequence_set_elements (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  const DynamicAny::AnySeq & value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynSequence_set_elements (const TAO_ClientRequest_Info_DynamicAny_DynSequence_set_elements &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynSequence_set_elements &);
-const DynamicAny::AnySeq & value_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynSequence_get_elements_as_dyn_any : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynSequence;
-  TAO_ClientRequest_Info_DynamicAny_DynSequence_get_elements_as_dyn_any (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
+        TAO_default_environment ()
+    );
+  static DynSequence_ptr _unchecked_narrow (
+      CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV = 
     TAO_default_environment ()
   );
+  static DynSequence_ptr _nil (void)
+    {
+      return (DynSequence_ptr)0;
+    }
 
-   virtual Dynamic::ParameterList * arguments (
+  virtual CORBA::ULong get_length (
     CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+        TAO_default_environment ()
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException
+    )) = 0;
 
-virtual Dynamic::ExceptionList * exceptions ( 
+  virtual void set_length (
+      CORBA::ULong len,
   CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+        TAO_default_environment ()
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException,
+      DynamicAny::DynAny::InvalidValue
+    )) = 0;
 
-virtual CORBA::Any * result (
+  virtual DynamicAny::AnySeq * get_elements (
   CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynSequence_get_elements_as_dyn_any (const TAO_ClientRequest_Info_DynamicAny_DynSequence_get_elements_as_dyn_any &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynSequence_get_elements_as_dyn_any &);
-void result (DynamicAny::DynAnySeq *  result);
- // update the result 
-DynamicAny::DynAnySeq *  result_;
-};
+        TAO_default_environment ()
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException
+    )) = 0;
 
-class TAO_ClientRequest_Info_DynamicAny_DynSequence_set_elements_as_dyn_any : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynSequence;
-  TAO_ClientRequest_Info_DynamicAny_DynSequence_set_elements_as_dyn_any (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  const DynamicAny::DynAnySeq & value  ,
+  virtual void set_elements (
+      const DynamicAny::AnySeq & value,
     CORBA::Environment &ACE_TRY_ENV = 
     TAO_default_environment ()
-  );
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException,
+      DynamicAny::DynAny::TypeMismatch,
+      DynamicAny::DynAny::InvalidValue
+    )) = 0;
 
-   virtual Dynamic::ParameterList * arguments (
+  virtual DynamicAny::DynAnySeq * get_elements_as_dyn_any (
     CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
+        TAO_default_environment ()
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException
+    )) = 0;
 
-virtual Dynamic::ExceptionList * exceptions ( 
+  virtual void set_elements_as_dyn_any (
+      const DynamicAny::DynAnySeq & value,
   CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+        TAO_default_environment ()
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException,
+      DynamicAny::DynAny::TypeMismatch,
+      DynamicAny::DynAny::InvalidValue
+    )) = 0;
 
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
+  virtual void *_tao_QueryInterface (ptr_arith_t type);
 
+  virtual const char* _interface_repository_id (void) const;
 
+protected:
+  DynSequence (void);
+  virtual ~DynSequence (void);
 private:
-TAO_ClientRequest_Info_DynamicAny_DynSequence_set_elements_as_dyn_any (const TAO_ClientRequest_Info_DynamicAny_DynSequence_set_elements_as_dyn_any &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynSequence_set_elements_as_dyn_any &);
-const DynamicAny::DynAnySeq & value_;
-};
-
-#endif /* TAO_HAS_INTERCEPTORS */
+  DynSequence (const DynSequence &);
+  void operator= (const DynSequence &);
 
 };
 
@@ -5240,152 +2437,6 @@
 private:
   DynArray (const DynArray &);
   void operator= (const DynArray &);  
-#if (TAO_HAS_INTERCEPTORS == 1)
-    // Generation of interceptors related RequestInfo classes per operation.
-  // This needed to be able to store the arguments, exceptiosn, constexts
-  // and build the lists dynamically on demand so that unnecessary time overhead
-  // of building these lists when they arent used is avoided.
-      class TAO_ClientRequest_Info_DynamicAny_DynArray_get_elements : public TAO_ClientRequest_Info
-  {
-  public:
-    friend class DynamicAny::DynArray;
-    TAO_ClientRequest_Info_DynamicAny_DynArray_get_elements (
-      const char *_tao_operation,
-      IOP::ServiceContextList &_tao_service_context_list,
-      CORBA::Object *_tao_target    ,
-        CORBA::Environment &ACE_TRY_ENV = 
-      TAO_default_environment ()
-    );
-
-     virtual Dynamic::ParameterList * arguments (
-      CORBA::Environment &ACE_TRY_ENV =
-         TAO_default_environment ())
-     ACE_THROW_SPEC ((CORBA::SystemException));
-  
-    virtual Dynamic::ExceptionList * exceptions ( 
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynArray_get_elements (const TAO_ClientRequest_Info_DynamicAny_DynArray_get_elements &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynArray_get_elements &);
-void result (DynamicAny::AnySeq *  result);
- // update the result 
-DynamicAny::AnySeq *  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynArray_set_elements : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynArray;
-  TAO_ClientRequest_Info_DynamicAny_DynArray_set_elements (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  const DynamicAny::AnySeq & value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynArray_set_elements (const TAO_ClientRequest_Info_DynamicAny_DynArray_set_elements &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynArray_set_elements &);
-const DynamicAny::AnySeq & value_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynArray_get_elements_as_dyn_any : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynArray;
-  TAO_ClientRequest_Info_DynamicAny_DynArray_get_elements_as_dyn_any (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynArray_get_elements_as_dyn_any (const TAO_ClientRequest_Info_DynamicAny_DynArray_get_elements_as_dyn_any &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynArray_get_elements_as_dyn_any &);
-void result (DynamicAny::DynAnySeq *  result);
- // update the result 
-DynamicAny::DynAnySeq *  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynArray_set_elements_as_dyn_any : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynArray;
-  TAO_ClientRequest_Info_DynamicAny_DynArray_set_elements_as_dyn_any (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  const DynamicAny::DynAnySeq & value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynArray_set_elements_as_dyn_any (const TAO_ClientRequest_Info_DynamicAny_DynArray_set_elements_as_dyn_any &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynArray_set_elements_as_dyn_any &);
-const DynamicAny::DynAnySeq & value_;
-};
-
-#endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
@@ -5499,7 +2550,7 @@
       DynamicAny::DynAny::InvalidValue
     )) = 0;
 
-  virtual CORBA::TCKind_ptr current_member_kind (
+  virtual CORBA::TCKind current_member_kind (
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     )
@@ -5557,224 +2608,6 @@
 private:
   DynValue (const DynValue &);
   void operator= (const DynValue &);  
-#if (TAO_HAS_INTERCEPTORS == 1)
-    // Generation of interceptors related RequestInfo classes per operation.
-  // This needed to be able to store the arguments, exceptiosn, constexts
-  // and build the lists dynamically on demand so that unnecessary time overhead
-  // of building these lists when they arent used is avoided.
-      class TAO_ClientRequest_Info_DynamicAny_DynValue_current_member_name : public TAO_ClientRequest_Info
-  {
-  public:
-    friend class DynamicAny::DynValue;
-    TAO_ClientRequest_Info_DynamicAny_DynValue_current_member_name (
-      const char *_tao_operation,
-      IOP::ServiceContextList &_tao_service_context_list,
-      CORBA::Object *_tao_target    ,
-        CORBA::Environment &ACE_TRY_ENV = 
-      TAO_default_environment ()
-    );
-
-     virtual Dynamic::ParameterList * arguments (
-      CORBA::Environment &ACE_TRY_ENV =
-         TAO_default_environment ())
-     ACE_THROW_SPEC ((CORBA::SystemException));
-  
-    virtual Dynamic::ExceptionList * exceptions ( 
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynValue_current_member_name (const TAO_ClientRequest_Info_DynamicAny_DynValue_current_member_name &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynValue_current_member_name &);
-void result (char *  result);
- // update the result 
-char *  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynValue_current_member_kind : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynValue;
-  TAO_ClientRequest_Info_DynamicAny_DynValue_current_member_kind (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynValue_current_member_kind (const TAO_ClientRequest_Info_DynamicAny_DynValue_current_member_kind &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynValue_current_member_kind &);
-void result (CORBA::TCKind_ptr  result);
- // update the result 
-CORBA::TCKind_ptr  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynValue_get_members : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynValue;
-  TAO_ClientRequest_Info_DynamicAny_DynValue_get_members (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynValue_get_members (const TAO_ClientRequest_Info_DynamicAny_DynValue_get_members &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynValue_get_members &);
-void result (DynamicAny::NameValuePairSeq *  result);
- // update the result 
-DynamicAny::NameValuePairSeq *  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynValue_set_members : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynValue;
-  TAO_ClientRequest_Info_DynamicAny_DynValue_set_members (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  const DynamicAny::NameValuePairSeq & value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynValue_set_members (const TAO_ClientRequest_Info_DynamicAny_DynValue_set_members &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynValue_set_members &);
-const DynamicAny::NameValuePairSeq & value_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynValue_get_members_as_dyn_any : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynValue;
-  TAO_ClientRequest_Info_DynamicAny_DynValue_get_members_as_dyn_any (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynValue_get_members_as_dyn_any (const TAO_ClientRequest_Info_DynamicAny_DynValue_get_members_as_dyn_any &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynValue_get_members_as_dyn_any &);
-void result (DynamicAny::NameDynAnyPairSeq *  result);
- // update the result 
-DynamicAny::NameDynAnyPairSeq *  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynValue_set_members_as_dyn_any : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynValue;
-  TAO_ClientRequest_Info_DynamicAny_DynValue_set_members_as_dyn_any (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  const DynamicAny::NameDynAnyPairSeq & value  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynValue_set_members_as_dyn_any (const TAO_ClientRequest_Info_DynamicAny_DynValue_set_members_as_dyn_any &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynValue_set_members_as_dyn_any &);
-const DynamicAny::NameDynAnyPairSeq & value_;
-};
-
-#endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
@@ -5941,86 +2774,6 @@
 private:
   DynAnyFactory (const DynAnyFactory &);
   void operator= (const DynAnyFactory &);  
-#if (TAO_HAS_INTERCEPTORS == 1)
-    // Generation of interceptors related RequestInfo classes per operation.
-  // This needed to be able to store the arguments, exceptiosn, constexts
-  // and build the lists dynamically on demand so that unnecessary time overhead
-  // of building these lists when they arent used is avoided.
-      class TAO_ClientRequest_Info_DynamicAny_DynAnyFactory_create_dyn_any : public TAO_ClientRequest_Info
-  {
-  public:
-    friend class DynamicAny::DynAnyFactory;
-    TAO_ClientRequest_Info_DynamicAny_DynAnyFactory_create_dyn_any (
-      const char *_tao_operation,
-      IOP::ServiceContextList &_tao_service_context_list,
-      CORBA::Object *_tao_target        ,    const CORBA::Any & value    ,
-        CORBA::Environment &ACE_TRY_ENV = 
-      TAO_default_environment ()
-    );
-
-     virtual Dynamic::ParameterList * arguments (
-      CORBA::Environment &ACE_TRY_ENV =
-         TAO_default_environment ())
-     ACE_THROW_SPEC ((CORBA::SystemException));
-  
-    virtual Dynamic::ExceptionList * exceptions ( 
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAnyFactory_create_dyn_any (const TAO_ClientRequest_Info_DynamicAny_DynAnyFactory_create_dyn_any &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAnyFactory_create_dyn_any &);
-const CORBA::Any & value_;
-void result (DynamicAny::DynAny_ptr  result);
- // update the result 
-DynamicAny::DynAny_ptr  result_;
-};
-
-class TAO_ClientRequest_Info_DynamicAny_DynAnyFactory_create_dyn_any_from_type_code : public TAO_ClientRequest_Info
-{
-public:
-  friend class DynamicAny::DynAnyFactory;
-  TAO_ClientRequest_Info_DynamicAny_DynAnyFactory_create_dyn_any_from_type_code (
-    const char *_tao_operation,
-    IOP::ServiceContextList &_tao_service_context_list,
-    CORBA::Object *_tao_target    ,  CORBA::TypeCode_ptr type  ,
-    CORBA::Environment &ACE_TRY_ENV = 
-    TAO_default_environment ()
-  );
-
-   virtual Dynamic::ParameterList * arguments (
-    CORBA::Environment &ACE_TRY_ENV =
-       TAO_default_environment ())
-   ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual Dynamic::ExceptionList * exceptions ( 
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-virtual CORBA::Any * result (
-  CORBA::Environment &ACE_TRY_ENV =
-     TAO_default_environment ())
- ACE_THROW_SPEC ((CORBA::SystemException));
-
-
-private:
-TAO_ClientRequest_Info_DynamicAny_DynAnyFactory_create_dyn_any_from_type_code (const TAO_ClientRequest_Info_DynamicAny_DynAnyFactory_create_dyn_any_from_type_code &);
-void operator= (const TAO_ClientRequest_Info_DynamicAny_DynAnyFactory_create_dyn_any_from_type_code &);
-CORBA::TypeCode_ptr & type_;
-void result (DynamicAny::DynAny_ptr  result);
- // update the result 
-DynamicAny::DynAny_ptr  result_;
-};
-
-#endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
