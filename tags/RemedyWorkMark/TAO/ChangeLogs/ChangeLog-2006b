Mon Nov 20 10:10:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * NEWS:

          Slight tidy-up, to keep release notes / NEWS in step.

Fri Nov 17 09:08:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * NEWS:
        * orbsvcs/tests/ImplRepo/Bug_2604_Regression/MessengerServer.cpp

          Slight tidy-up, to keep release notes / NEWS in step.
          Wallace Zhang's fix for shutdown run-time windows test problem.

Thu Nov 16 10:20:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * tao/IIOP_Profile.cpp:

          Committed for Phil Mesnier. Patch so that Bug_2604_Regression
          test passes on windows. The problem was that an IIOP_Profile
          that is decoded from a CDR buffer does not correctly set the
          is_ipv6_decimal_ flag for the first endpoint only. After the
          beta is out more changes have to be made to remove the friend
          relationships and cleanup more code. Need to also update
          tests/IPV6 so that we have a regression in the repo for this
          problem. Thanks to Johnny Willemsen and Martin Corino for
          quickly testing this fix.

Thu Nov 16 00:07:30 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated.

        * tao/DynamicAny.mpc:

          Changed to inherit from core.mpb, so that library and headers
          will be installed for automake build.

Wed Nov 15 16:38:29 UTC 2006  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Event/EC_Thread_Flags.h:
        * orbsvcs/orbsvcs/Event/EC_Thread_Flags.cpp:

          Removed code that had been in #if 0/#endif, which had been part
          of an earlier, more complete design but more difficult to
          implement.

          Eliminated #include of non-existent inline file that gave the
          fuzz build heartburn.

Wed Nov 15 10:35:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * NEWS:

          Added entries.

Wed Nov 15 10:05:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * tests/Oneway_Timeouts/client.cpp:

          Windows warnings removed (for Phil Mesnier).

Wed Nov 15 08:04:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/Options.html:

          Added ORBServiceConfigLoggerKey, thanks to Doug and Abdul for
          finding out this was lacking.

Wed Nov 15 04:00:22 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile.am:
        * examples/RTScheduling/MIF_Scheduler/Makefile.am:
        * examples/RTScheduling/Makefile.am:

          Regenerated.

Wed Nov 15 02:04:44 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated.

        * tao/tao.mpc:

          Add Header_Files section containing all the fooA.h headers
          generated from *.pidl files.  These aren't automagically
          added (possibly because of the use of MPC's >> construct),
          which results in these headers not being installed in
          automake builds.

Tue Nov 14 16:17:04 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/RTScheduling/RTSchedTestLib.mpc:
        * examples/RTScheduling/rtschedtestlib_export.h:

          New files, representing a new build created to hold common
          code factored out from the other builds. Motivated not only
          by good design, but by necessity on our scoreboard
          platforms with parallel builds, where strict dependency
          ordering in required.

        * examples/RTScheduling/Thread_Task.h:
        * examples/RTScheduling/Synch_i.h:
        * examples/RTScheduling/Job.mpc:
        * examples/RTScheduling/POA_Holder.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler\FP_DT_Creator.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler\FP_DT_Creator.h:
        * examples/RTScheduling/Fixed_Priority_Scheduler\Fixed_Priority_Scheduler.mpc:
        * examples/RTScheduling/POA_Holder.h:
        * examples/RTScheduling/Synch.mpc:
        * examples/RTScheduling/Job_i.cpp:
        * examples/RTScheduling/Starter.cpp:
        * examples/RTScheduling/Task_Stats.h:
        * examples/RTScheduling/DT_Creator.cpp:
        * examples/RTScheduling/Job_i.h:
        * examples/RTScheduling/MIF_Scheduler\MIF_Scheduler.mpc:
        * examples/RTScheduling/MIF_Scheduler\MIF_Scheduler.h:
        * examples/RTScheduling/MIF_Scheduler\test.cpp:
        * examples/RTScheduling/MIF_Scheduler\test.h:
        * examples/RTScheduling/MIF_Scheduler\MIF_Task.cpp:
        * examples/RTScheduling/Starter.h:
        * examples/RTScheduling/Thread_Task.cpp:
        * examples/RTScheduling/DT_Creator.h:

          Factored files and dependencies out of existing MPC files to
          be consistent with the new MPC file above. Also, in C++
          files, re-ordered includes, added export macros, and made
          other cosmetic changes.

Tue Nov 14 15:23:43 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * NEWS:

          Updated this file with information about my two bug fixes.

Tue Nov 14 13:49:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Wait_Strategy.cpp:
        * tao/Wait_On_Leader_Follower.cpp:
        * tao/default_client.cpp:
          Added some missing markers for FOCUS to work

Tue Nov 14 09:00:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * NEWS:

          Submitted by Jeff Parsons.

Tue Nov 14 04:59:41 UTC 2006  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Event/EC_Thread_Flags.cpp:

          Correct problems related to missing string functions on
          non-inline builds.

Mon Nov 13 22:40:11 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/Event/ThreadFlags/Makefile.am:

          Regenerated.

Mon Nov 13 22:36:51 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile.am:
        * examples/RTScheduling/MIF_Scheduler/Makefile.am:
        * examples/RTScheduling/Makefile.am:

          Regenerated.

Mon Nov 13 20:01:51 UTC 2006  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Event/EC_Thread_Flags.h:
        * orbsvcs/orbsvcs/Event/EC_Thread_Flags.cpp:
        * orbsvcs/tests/Event/ThreadFlags/testflags.cpp:

          Various fixes to enable Versioned Namespace builds to complete.

Mon Nov 13 19:22:06 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/RTScheduling/Job.mpc:
        * examples/RTScheduling/job_export.h:
        * examples/RTScheduling/Synch.mpc:
        * examples/RTScheduling/synch_export.h:

          New files, factored out IDL files common to some or all
          of the examples in this directory into separate builds,
          to eliminate problems with parallel builds when IDL
          files are repeated in builds in the same directory.

        * examples/RTScheduling/Fixed_Priority_Scheduler/Fixed_Priority_Scheduler.mpc:
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.mpc:

          Modified these files to make them consistent with the
          changes above.

Mon Nov 13 15:23:05 UTC 2006  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.cpp (TAO_EC_TPC_debug_level):

          Moved declaration to fix versioned namespace builds.

        * orbsvcs/orbsvcs/Event/EC_Thread_Flags.h:
        * orbsvcs/orbsvcs/Event/EC_Thread_Flags.cpp:

          Add in versioned namespace boundary macros to fix versioned
          namespace builds.

Mon Nov 13 15:21:58 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/default_resource.h:

          It turns out, exporting of the TAO_Codeset_Parameters is indeed
          necessary (the advanced resource factory needs it,
          too). Partially reverting "Fri Nov 10 21:09:53 UTC 2006".

Sat Nov 11 17:19:31 UTC 2006  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/tests/Event/ThreadFlags/testflags.cpp: Remove extraneous
          semicolon after ACE_RCSID.  There should be a fuzz check for
          this.

Sat Nov 11 09:31:30 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/Event/ThreadFlags/tftest.mpc:

          Fix broken dependency by inheriting from rtevent_serv.mpb
          instead of appending TAO_RTEvent_Serv to libs.

Fri Nov 10 21:09:53 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/default_resource.h:

          Cleaning up the code that fixes bug #2651 to fix typos and
          eliminate unnecessary exports. (Thanks Johnny!)

Fri Nov 10 15:51:29 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/ORB_Core.cpp (fini, ~TAO_ORB_Core):

          Calling TAO::ORB::close_services() prior to the dtor may cause
          non-yet-destroyed-heap-allocated objects to end up in unmapped
          memory (like the policy_factory_registry_, for example).  This
          can happen if the dynamic service object, which allocated them
          gets unloaded before the core dtor deletes them.  The change
          ensures the core sevice destruction (close_services) is
          postponed until everything else the core owns has been deleted.

Fri Nov 10 09:08:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Wait_On_Read.cpp:
        * tao/SystemException.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/Base_Transport_Property.cpp:
          Const improvements

        * tao/Stub.cpp:
          Removed TAO_Synchronous_Cancellation_Required, not used and
          const improvements

Fri Nov 10 08:53:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Unbounded_Octet_Sequence_T.h:
          Export this template specialization to resolve application link
          errors with Intel 9.0

Fri Nov 10 01:29:39 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/CosEvent/Makefile.am:
        * orbsvcs/tests/Event/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Makefile.am:

          Regenerated to recurse into new test directories.

        * configure.ac:

          Configure Makefiles in new test directories.

        * orbsvcs/tests/CosEvent/Timeout/Makefile.am:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/Makefile.am:
        * orbsvcs/tests/Event/ThreadFlags/Makefile.am:

          New files.  Makefile.am's for new test directories.

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/RTEC_MCast_Federated.mpc:
          Add automake specific section so that includes is set relative
          to $(srcdir).  Fix includes so it is correct on case-sensitive
          filesystems.

Thu Nov  9 22:34:28 UTC 2006  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Event/EC_Thread_Flags.cpp:

          Removed semicolon after ACE_RCSID that caused problems with some
          compilers, but not others, and caused a domino effect of no
          RTEC-related stuff to build.

Thu Nov  9 19:27:16 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated (again, to catch changes made while I was preparing
          the last set of changes).

Thu Nov  9 18:52:15 UTC 2006  Chris Cleeland  <cleeland_c@ociweb.com>

        * NEWS: Updated to reflect RTEC changes.

Thu Nov  9 15:42:32 UTC 2006  Chris Cleeland  <cleeland_c@ociweb.com>

        * docs/ec_options.html: Add documentation for TPC and
          -ECDispatchingThreadFlags options.

        * orbsvcs/orbsvcs/Event/EC_Default_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.cpp:

          Added new option, -ECDispatchingThreadsFlags, that allows the
          user to pass in a list of thread creation flags and priority for
          dispatching threads.  These can be used for either the MT
          dispatching strategy or the TPC dispatching strategy.

          Also added -ECDebug option to enable debugging output from the
          RTEC.  Only the option and variable was added, but no messages.
          Therefore, at the moment, this does not generate much output.

        * orbsvcs/orbsvcs/Event/EC_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Factory.cpp:

          Added support for RTEC's debug level.

        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.cpp:

          (CTOR) Changed so that thread flags can be passed in just like
          with the MT dispatching strategy.

          (add_consumer) Modified so that it passes the thread flags set
          in the CTOR to the dispatching task's activate call.

        * orbsvcs/orbsvcs/Event/EC_TPC_Factory.cpp (create_dispatching):

          Update to reflect new CTOR args for EC_TPC_Dispatching.

        * orbsvcs/orbsvcs/Event/EC_TPC_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxySupplier.inl:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxySupplier.cpp:

          Change references to EC_TPC_debug_level to
          TAO_EC_TPC_debug_level for proper scoping.

        * orbsvcs/orbsvcs/Event/EC_Thread_Flags.h:
        * orbsvcs/orbsvcs/Event/EC_Thread_Flags.cpp:

          Added new abstraction around thread flags.  This also handles
          parsing of text representation of THR_* options.  Ideally this
          is part of ACE, but such a low-level change is difficult to push
          through in general, much less in a patch.

        * orbsvcs/orbsvcs/RTEvent_Serv.mpc:

          Updated with new files.

        * orbsvcs/tests/Event/ThreadFlags/testflags.cpp:
        * orbsvcs/tests/Event/ThreadFlags/tftest.mpc:

          Added unit test for TAO_EC_Thread_Flags abstraction.
          Unfortunately, due to the way that some of the thread flags
          are encoded on some platforms, e.g., Linux, the test can
          give false failing indications.  I've left this as-is for
          now because I haven't decided if this is a flaw in the test,
          a flaw in the TAO_EC_Thread_Flags abstraction, or a flaw in
          the way ACE assigns values when a THR_ symbol is not provided
          by the platform itself.

Thu Nov  9 12:17:10 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * docs/tutorials/Quoter/AMI/Makefile.am:
        * docs/tutorials/Quoter/Event_Service/Makefile.am:
        * docs/tutorials/Quoter/Makefile.am:
        * docs/tutorials/Quoter/On_Demand_Activation/Makefile.am:
        * docs/tutorials/Quoter/RT_Event_Service/Makefile.am:
        * docs/tutorials/Quoter/Simple/ImprovedServer/Makefile.am:
        * docs/tutorials/Quoter/idl/Makefile.am:
        * examples/AMH/Sink_Server/Makefile.am:
        * examples/AMI/FL_Callback/Makefile.am:
        * examples/Buffered_AMI/Makefile.am:
        * examples/Buffered_Oneways/Makefile.am:
        * examples/CSD_Strategy/ThreadPool/Makefile.am:
        * examples/CSD_Strategy/ThreadPool2/Makefile.am:
        * examples/CSD_Strategy/ThreadPool3/Makefile.am:
        * examples/CSD_Strategy/ThreadPool4/Makefile.am:
        * examples/CSD_Strategy/ThreadPool5/Makefile.am:
        * examples/CSD_Strategy/ThreadPool6/Makefile.am:
        * examples/Callback_Quoter/Makefile.am:
        * examples/Content_Server/AMI_Iterator/Makefile.am:
        * examples/Content_Server/AMI_Observer/Makefile.am:
        * examples/Content_Server/SMI_Iterator/Makefile.am:
        * examples/Event_Comm/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.am:
        * examples/Load_Balancing/Makefile.am:
        * examples/Load_Balancing_persistent/Makefile.am:
        * examples/Logging/Makefile.am:
        * examples/Makefile.am:
        * examples/OBV/Typed_Events/Makefile.am:
        * examples/POA/Adapter_Activator/Makefile.am:
        * examples/POA/DSI/Makefile.am:
        * examples/POA/Default_Servant/Makefile.am:
        * examples/POA/Explicit_Activation/Alt_Resources/Makefile.am:
        * examples/POA/Explicit_Activation/Makefile.am:
        * examples/POA/FindPOA/Makefile.am:
        * examples/POA/Forwarding/Makefile.am:
        * examples/POA/Generic_Servant/Makefile.am:
        * examples/POA/Loader/Makefile.am:
        * examples/POA/NewPOA/Makefile.am:
        * examples/POA/On_Demand_Activation/Makefile.am:
        * examples/POA/On_Demand_Loading/Makefile.am:
        * examples/POA/POA_BiDir/Makefile.am:
        * examples/POA/Reference_Counted_Servant/Makefile.am:
        * examples/POA/RootPOA/Makefile.am:
        * examples/POA/TIE/Makefile.am:
        * examples/Persistent_Grid/Makefile.am:
        * examples/PluggableUDP/tests/Basic/Makefile.am:
        * examples/PluggableUDP/tests/Performance/Makefile.am:
        * examples/PluggableUDP/tests/SimplePerformance/Makefile.am:
        * examples/Quoter/Makefile.am:
        * examples/RTCORBA/Activity/Makefile.am:
        * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile.am:
        * examples/RTScheduling/MIF_Scheduler/Makefile.am:
        * examples/Simple/bank/Makefile.am:
        * examples/Simple/chat/Makefile.am:
        * examples/Simple/echo/Makefile.am:
        * examples/Simple/grid/Makefile.am:
        * examples/Simple/time-date/Makefile.am:
        * examples/Simple/time/Makefile.am:
        * examples/Simulator/Event_Supplier/Makefile.am:
        * examples/TypeCode_Creation/Makefile.am:
        * examples/ior_corbaloc/Makefile.am:
        * examples/mfc/Makefile.am:
        * interop-tests/wchar/Makefile.am:
        * orbsvcs/Concurrency_Service/Makefile.am:
        * orbsvcs/CosEvent_Service/Makefile.am:
        * orbsvcs/Dump_Schedule/Makefile.am:
        * orbsvcs/Event_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Event_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Factory_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Gateway_Service/Makefile.am:
        * orbsvcs/FT_ReplicationManager/Makefile.am:
        * orbsvcs/Fault_Detector/Makefile.am:
        * orbsvcs/Fault_Notifier/Makefile.am:
        * orbsvcs/IFR_Service/Makefile.am:
        * orbsvcs/ImplRepo_Service/Makefile.am:
        * orbsvcs/LifeCycle_Service/Makefile.am:
        * orbsvcs/LoadBalancer/Makefile.am:
        * orbsvcs/Logging_Service/Basic_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/Event_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/Makefile.am:
        * orbsvcs/Naming_Service/Makefile.am:
        * orbsvcs/Notify_Service/Makefile.am:
        * orbsvcs/Scheduling_Service/Makefile.am:
        * orbsvcs/TAO_Service/Makefile.am:
        * orbsvcs/Time_Service/Makefile.am:
        * orbsvcs/Trading_Service/Makefile.am:
        * orbsvcs/examples/CosEC/Factory/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/bin/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Basic/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Makefile.am:
        * orbsvcs/examples/CosEC/Simple/Makefile.am:
        * orbsvcs/examples/CosEC/TypedSimple/Makefile.am:
        * orbsvcs/examples/FaultTolerance/RolyPoly/Makefile.am:
        * orbsvcs/examples/LoadBalancing/Makefile.am:
        * orbsvcs/examples/Log/Basic/Makefile.am:
        * orbsvcs/examples/Log/Event/Makefile.am:
        * orbsvcs/examples/Log/Notify/Makefile.am:
        * orbsvcs/examples/Log/RTEvent/Makefile.am:
        * orbsvcs/examples/Notify/Federation/Agent/Makefile.am:
        * orbsvcs/examples/Notify/Federation/Gate/Makefile.am:
        * orbsvcs/examples/Notify/Federation/SpaceCraft/Makefile.am:
        * orbsvcs/examples/Notify/Filter/Makefile.am:
        * orbsvcs/examples/Notify/Lanes/Makefile.am:
        * orbsvcs/examples/Notify/Subscribe/Makefile.am:
        * orbsvcs/examples/Notify/ThreadPool/Makefile.am:
        * orbsvcs/examples/ORT/Makefile.am:
        * orbsvcs/examples/RtEC/IIOPGateway/Makefile.am:
        * orbsvcs/examples/RtEC/Kokyu/Makefile.am:
        * orbsvcs/examples/RtEC/MCast/Makefile.am:
        * orbsvcs/examples/RtEC/Schedule/Makefile.am:
        * orbsvcs/examples/RtEC/Simple/Makefile.am:
        * orbsvcs/examples/Security/Send_File/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/lib/Makefile.am:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/Makefile.am:
        * orbsvcs/tests/AVStreams/Component_Switching/Makefile.am:
        * orbsvcs/tests/AVStreams/Full_Profile/Makefile.am:
        * orbsvcs/tests/AVStreams/Latency/Makefile.am:
        * orbsvcs/tests/AVStreams/Modify_QoS/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/Makefile.am:
        * orbsvcs/tests/AVStreams/Multiple_Flows/Makefile.am:
        * orbsvcs/tests/AVStreams/Pluggable/Makefile.am:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/Makefile.am:
        * orbsvcs/tests/BiDir_CORBALOC/Makefile.am:
        * orbsvcs/tests/Bug_1334_Regression/Makefile.am:
        * orbsvcs/tests/Bug_1393_Regression/Makefile.am:
        * orbsvcs/tests/Bug_1395_Regression/Makefile.am:
        * orbsvcs/tests/Bug_1630_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2074_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2137_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2247_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2248_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2285_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2287_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2316_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2377_Regression/Makefile.am:
        * orbsvcs/tests/Concurrency/Makefile.am:
        * orbsvcs/tests/CosEvent/Basic/Makefile.am:
        * orbsvcs/tests/CosEvent/Makefile.am:
        * orbsvcs/tests/CosEvent/lib/Makefile.am:
        * orbsvcs/tests/EC_Custom_Marshal/Makefile.am:
        * orbsvcs/tests/EC_MT_Mcast/Makefile.am:
        * orbsvcs/tests/EC_Mcast/Makefile.am:
        * orbsvcs/tests/EC_Multiple/Makefile.am:
        * orbsvcs/tests/EC_Throughput/Makefile.am:
        * orbsvcs/tests/Event/Basic/Makefile.am:
        * orbsvcs/tests/Event/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Common/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Complex/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Simple/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Two_Way/Makefile.am:
        * orbsvcs/tests/Event/Performance/Makefile.am:
        * orbsvcs/tests/Event/lib/Makefile.am:
        * orbsvcs/tests/FT_App/Makefile.am:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Makefile.am:
        * orbsvcs/tests/FaultTolerance/IOGR/Makefile.am:
        * orbsvcs/tests/FaultTolerance/IOGRManipulation/Makefile.am:
        * orbsvcs/tests/FtRtEvent/Makefile.am:
        * orbsvcs/tests/HTIOP/AMI/Makefile.am:
        * orbsvcs/tests/HTIOP/BiDirectional/Makefile.am:
        * orbsvcs/tests/HTIOP/Hello/Makefile.am:
        * orbsvcs/tests/IOR_MCast/Makefile.am:
        * orbsvcs/tests/ImplRepo/Makefile.am:
        * orbsvcs/tests/ImplRepo/NameService/Makefile.am:
        * orbsvcs/tests/ImplRepo/scale/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Application_Test/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Persistence_Test/Makefile.am:
        * orbsvcs/tests/Interoperable_Naming/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/Makefile.am:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/Makefile.am:
        * orbsvcs/tests/Log/Basic_Log_Test/Makefile.am:
        * orbsvcs/tests/Makefile.am:
        * orbsvcs/tests/Miop/McastHello/Makefile.am:
        * orbsvcs/tests/Notify/Basic/Makefile.am:
        * orbsvcs/tests/Notify/Blocking/Makefile.am:
        * orbsvcs/tests/Notify/Destroy/Makefile.am:
        * orbsvcs/tests/Notify/Discarding/Makefile.am:
        * orbsvcs/tests/Notify/Driver/Makefile.am:
        * orbsvcs/tests/Notify/MT_Dispatching/Makefile.am:
        * orbsvcs/tests/Notify/Ordering/Makefile.am:
        * orbsvcs/tests/Notify/PluggableTopology/Makefile.am:
        * orbsvcs/tests/Notify/RT_lib/Makefile.am:
        * orbsvcs/tests/Notify/Reconnecting/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Test_Filter/Makefile.am:
        * orbsvcs/tests/Notify/XML_Persistence/Makefile.am:
        * orbsvcs/tests/Notify/lib/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Makefile.am:
        * orbsvcs/tests/Property/Makefile.am:
        * orbsvcs/tests/Redundant_Naming/Makefile.am:
        * orbsvcs/tests/Sched/Makefile.am:
        * orbsvcs/tests/Sched_Conf/Makefile.am:
        * orbsvcs/tests/Security/BiDirectional/Makefile.am:
        * orbsvcs/tests/Security/Big_Request/Makefile.am:
        * orbsvcs/tests/Security/Callback/Makefile.am:
        * orbsvcs/tests/Security/Crash_Test/Makefile.am:
        * orbsvcs/tests/Security/MT_IIOP_SSL/Makefile.am:
        * orbsvcs/tests/Security/MT_SSLIOP/Makefile.am:
        * orbsvcs/tests/Security/Secure_Invocation/Makefile.am:
        * orbsvcs/tests/Security/ssliop_corbaloc/Makefile.am:
        * orbsvcs/tests/Simple_Naming/Makefile.am:
        * orbsvcs/tests/Time/Makefile.am:
        * orbsvcs/tests/Trading/Makefile.am:
        * orbsvcs/tests/ior_corbaname/Makefile.am:
        * orbsvcs/tests/tests_svc_loader/Makefile.am:
        * performance-tests/Anyop/Makefile.am:
        * performance-tests/CSD_Strategy/TestApps/Makefile.am:
        * performance-tests/CSD_Strategy/TestInf/Makefile.am:
        * performance-tests/CSD_Strategy/TestServant/Makefile.am:
        * performance-tests/Callback/Makefile.am:
        * performance-tests/Cubit/TAO/DII_Cubit/Makefile.am:
        * performance-tests/Cubit/TAO/IDL_Cubit/Makefile.am:
        * performance-tests/Cubit/TAO/MT_Cubit/Makefile.am:
        * performance-tests/Latency/AMH_Single_Threaded/Makefile.am:
        * performance-tests/Latency/AMI/Makefile.am:
        * performance-tests/Latency/Collocation/Makefile.am:
        * performance-tests/Latency/DII/Makefile.am:
        * performance-tests/Latency/DSI/Makefile.am:
        * performance-tests/Latency/Deferred/Makefile.am:
        * performance-tests/Latency/Single_Threaded/Makefile.am:
        * performance-tests/Latency/Thread_Per_Connection/Makefile.am:
        * performance-tests/Latency/Thread_Pool/Makefile.am:
        * performance-tests/Memory/IORsize/Makefile.am:
        * performance-tests/Memory/Single_Threaded/Makefile.am:
        * performance-tests/POA/Create_Reference/Makefile.am:
        * performance-tests/POA/Demux/Makefile.am:
        * performance-tests/POA/Implicit_Activation/Makefile.am:
        * performance-tests/POA/Object_Creation_And_Registration/Makefile.am:
        * performance-tests/Pluggable/Makefile.am:
        * performance-tests/Protocols/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Common/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/Makefile.am:
        * performance-tests/RTCorba/Oneways/Reliable/Makefile.am:
        * performance-tests/RTCorba/Thread_Pool/Makefile.am:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/Makefile.am:
        * performance-tests/Sequence_Latency/AMI/Makefile.am:
        * performance-tests/Sequence_Latency/DII/Makefile.am:
        * performance-tests/Sequence_Latency/DSI/Makefile.am:
        * performance-tests/Sequence_Latency/Deferred/Makefile.am:
        * performance-tests/Sequence_Latency/Single_Threaded/Makefile.am:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Makefile.am:
        * performance-tests/Sequence_Latency/Thread_Pool/Makefile.am:
        * performance-tests/Throughput/Makefile.am:
        * tao/Makefile.am:
        * utils/catior/Makefile.am:
        * utils/nslist/Makefile.am:
        * utils/wxNamingViewer/Makefile.am:

          Regenerate.

Thu Nov  9 09:54:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * tests/Bug_2654_Regression/Hello.cpp:

          Fixed the last fix to get rid of compile warning;-).

Thu Nov  9 06:46:21 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * docs/Options.html:

          Added description of new "dev_poll" Advanced_Resource_Factory
          reactor type.

Thu Nov  9 01:19:02 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_decl.cpp:
        * TAO_IDL/be_include/be_decl.h:

          Fixed bug where TIE class skeleton code is generated twice
          when AMH code generation is enabled.

Wed Nov  8 16:16:37 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * docs/releasenotes/index.html:
        * docs/compiler.html:

          Update IDL compiler documentation to reflect the changes in

          Tue Nov  7 23:13:51 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

Wed Nov  8 14:12:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * tests/AMH_Exceptions/Test.idl:
        * tests/AMH_Exceptions/server.cpp:
        * tests/AMH_Exceptions/client.cpp:
        * tests/AMH_Exceptions/run_test.pl:

          Added clean shutdown option.

Wed Nov  8 13:22:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * tests/Muxing/Test.idl:
        * tests/Muxing/Receiver{.h .cpp}:
        * tests/Muxing/server.cpp:
        * tests/Muxing/client.cpp:
        * tests/Muxing/run_test.pl:

          Added clean shutdown option.

Wed Nov  8 13:14:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * tests/Bug_2654_Regression/Hello.cpp:

          Fixed typo causing compile error.

Wed Nov  8 07:31:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DSI_Gateway/client.cpp:
        * tests/DSI_Gateway/test_i.{h,cpp,inl}:
        * tests/DSI_Gateway/test.idl:
          Extended this test to also test an attribute, this extension
          exhibits a few bugs in the DII code. Thanks to Venkat
          <swara101 at yahoo dot com> for extending this test.

        * tao/DynamicInterface/Context.cpp:
        * tao/DynamicInterface/DII_Arguments.cpp:
        * tao/DynamicInterface/DII_Arguments_Converter_Impl.cpp:
          Const changes and small performance improvements

        * tao/DynamicInterface/Request.cpp:
          Fixed a few bugs related to the number of arguments, also
          applied a few const and performance improvements.

Tue Nov  7 23:13:51 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_operation/tie_si.cpp:
        * TAO_IDL/be/be_visitor_interface/tie_si.cpp:
        * TAO_IDL/be_include/be_visitor_interface/tie_si.h:
        * TAO_IDL/be_include/be_visitor_operation/tie_si.h:

          Removed these files.

        * TAO_IDL/be/be_visitor_operation/tie_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/tie_ss.cpp:
        * TAO_IDL/be_include/be_visitor_interface/tie_ss.h:
        * TAO_IDL/be_include/be_visitor_operation/tie_ss.h:

          Added these files, in effect renaming the ones listed
          as removed above.

        * TAO_IDL/be/be_visitor_operation.cpp:
        * TAO_IDL/be/be_visitor_interface.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_si.cpp:
        * TAO_IDL/be/be_visitor_interface/interface.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/tie_sh.cpp:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_visitor_root/root_si.cpp:
        * TAO_IDL/be/be_visitor_root/root_sth.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_root/root_ss.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_visitor_attribute/attribute.cpp:
        * TAO_IDL/be_include/be_codegen.h:
        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/be_include/be_visitor_interface.h:
        * TAO_IDL/be_include/be_visitor_operation.h:

          Uninlined the generated code for TIE classes, since much
          of this code consists of virtual functions, and can thus
          cause problems related to RTTI on some compilers. Thanks
          to Ossama Othman <ossama@dre.vanderbilt.edu> for
          reporting the problem. This fix closes [BUGID:2699].

Tue Nov  7 19:45:02 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Bug_2654_Regression/Hello.cpp:
          ACE_OS::exit() doesn't seem to work well when called from
          non-main threads on windows. Switching to ORB::shutdown() may
          improve the performance a bit.

        * tests/Oneway_Timeouts/client.cpp:
          Replaced cout/cerr with ACE_DEBUG/ACE_ERROR. Also reset the
          timeout test value before issuing the shutdown invocation. I
          believe this invocation was the major cause of failures because
          it would cause a timeout after a delay in a scenaro that is
          otherwise intended to be asynchronous and otherwise have no
          delay at all. I also increased the TIME_THRESHOLD value to
          better accomodate preemptively multitasking test hosts.

Tue Nov  7 20:00:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * be/be_visitor_exception/exception_cs.cpp:
          Generate the constructor taking all members as first method. The
          gcc 3.2.3 based rtems compiler seems to get confused in the
          generated tests/IDL_Test/anonymousC.cpp file when it is the last
          method. For other compilers it doesn't make a difference but at
          least with this change we have an error free compilation for
          rtems

        * be/be_visitor_valuetype/valuetype_cs.cpp:
          Generate const for retval

Tue Nov  7 19:06:12 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/ORB_Core.cpp (orbinitializer_registry_i):

          Temporarily reverted
          "Thu Nov  2 23:23:16 UTC 2006  Ossama Othman  <ossama_othman at
          symantec.com>" change.  It's not completely correct since it
          prevents dynamic ORB unloading from working properly when
          ORBInitializers have been registered.  The existing code isn't
          correct either but go with it for now since it has been tested
          more.

Tue Nov  7 12:44:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Two_Objects/worker.{h,cpp}:
        * tests/Two_Objects/server.cpp:
          Renamed timeout to orb_timeout, resolves the warnings in the
          rtems build where timeout is also something in the rtems
          glue code.

Tue Nov  7 09:26:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
          Fixed warning abour variable not used in rtems build

Tue Nov  7 06:30:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2654_Regression/client.cpp:
          Fixed warning in vc7 builds

Mon Nov  6 20:04:53 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Bug_2654_Regression/Hello.cpp:
          Replace ::exit() with ACE_OS::exit() for portability.

Mon Nov  6 19:33:15 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Object.cpp (_set_policy_overrides):

           When setting the policy overrides on an Object, we need to ensure
           that when it is collocated it has a collocated servant.
           Otherwise, narrowing the Object afterward will cause an exception
           to be thrown.  Thanks to Artur DeEsperanto <DrEsperanto at gmx
           dot net> for reporting this.

        * tests/Bug_2134_Regression/Bug_2134_Regression.mpc:
        * tests/Bug_2134_Regression/Hello.cpp:

          Modified this test to utilize _set_policy_overrides() on the
          collocated object to exercise the change above.

Mon Nov  6 09:30:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CollocationLockup/CollocationLockup.cpp:
        * tests/CollocationLockup/AB.idl:
          Renamed struct B to struct C to resolve compile problems with
          rtems which seems to have a struct B.

        * tests/Multiple_Inheritance/client.cpp:
        * tests/Multiple_Inheritance/Multiple_Inheritance.idl:
          Renamed B to intB to resolve compile problems with
          rtems which seems to have a struct B.

Fri Nov  3 22:16:28 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_sequence.cpp (in_recursion):

          Fixed a possible bug in the check for recursive IDL type.
          The change will in any case speed up the performance of
          this method somewhat, since it will short-circuit the
          checking if the sequence's element type is neither a struct,
          a union, nor a sequence.

Fri Nov  3 18:05:20 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_field/field_ch.cpp (visit_predefined_type):

          Simplified the code in this method, owing to the changes in

          Thu Nov  2 20:53:16 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

          to AST_Type::nested_name().

Fri Nov  3 16:10:31 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_union_branch/private_ch.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_ch.cpp:

          More cases of ad hoc generation of the global "::" that can be
          removed because such generation is now handled systematically
          in AST_Type::nested_name(), see

          Thu Nov  2 20:53:16 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

          Thanks to Simon Massey <simon.massey@prismtechnologies.com> for
          pointing out the code generation errors in the Security Service
          that uncovered the omissions.

Fri Nov  3 15:54:35 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Strategies/SHMIOP_Connector.cpp (make_connection):
          scoreboard cleanup.

Fri Nov  3 12:35:41 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Connection_Handler.inl:

          Added a missing #include "tao/Transport.h".

Fri Nov  3 00:22:27 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * tao/Connection_Handler.h:
        * tao/Connection_Handler.inl:
        * tao/Connection_Handler.cpp:
        * tao/IIOP_Connection_Handler.h:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/IIOP_Connector.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.cpp:
        * tao/Strategies/SCIOP_Connector.cpp:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
        * tao/Strategies/SHMIOP_Connector.cpp:
        * tao/Strategies/UIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Connector.cpp:

          Propagating the changes applied just to IIOP for bug 2654 to the
          other DOC managed ESIOPs.

Thu Nov  2 23:23:16 UTC 2006  Ossama Othman  <ossama_othman at symantec.com>

        * tao/ORB_Core.cpp (orbinitializer_registry_i):

          The ORBInitializer registry is supposed to be (and originally
          was) a singleton.  Store it in the global service configuration,
          not the ORB-specific one.  Addresses disjoint ORBInitializer
          lists, and redundant ORBInitializer registrations.

        * tests/Portable_Interceptors/Register_Initial_References/Server_ORBInitializer.cpp (pre_init):

          Corrected CORBA::BAD_PARAM minor code check to use
          CORBA::OMGVMCID instead.  Easier to read and understand.

Thu Nov  2 20:28:04 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.cpp
          (send_reply):

          Fixed exit(1) to be ACE_OS::exit(1).

Thu Nov  2 20:53:16 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:
        * TAO_IDL/be/be_visitor_union/discriminant_ch.cpp:
        * TAO_IDL/be/be_visitor_field/field_ch.cpp:
        * TAO_IDL/ast/ast_type.cpp:

          Fixed generation of nested type name to add a double
          colon if the name includes the canonical CORBA
          namespace, to disambiguate it from any scoped
          name which may include a different, nested namespace
          named CORBA. Thanks to N Johnson <nj@artesys.info>
          for reporting the bug.

        * tests/IDL_Test/nested_scope.idl:

          Added use case from the bug report above to the IDL file.

Wed Nov  1 18:48:26 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * tests/Bug_2174_Regression/run_test.pl:

          Add a sleep to prevent spurious fails on win32.

Mon Oct 30 19:49:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * tests/CodeSets/simple/simple.idl:
        * tests/CodeSets/simple/client.cpp:
        * tests/CodeSets/simple/server.cpp:
        * tests/CodeSets/simple/run_test.pl:

          Added proper shutdown operation to have test behave better
          under (at least) OpenVMS.

Mon Oct 30 19:08:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * tests/Muxing/client.cpp:
        * tests/Muxing/Server_Task.cpp:
        * tests/Muxing/run_test.pl:

          Some adjustments of testparameters for when test running on
          OpenVMS where the original test takes far too long for the
          the timeouts set.

Mon Oct 30 18:56:03 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp (to_object):

          Modified the decoding to be from a copy of the class
          member CDR stream, rather than from the stream itself,
          so the Any will retain ownership of the value as
          mandated by the CORBA spec. Thanks to Phil Mesnier
          <mesnier_p@ociweb.com> for reporting the bug and
          suggesting the fix. Also changed several instances of
          '0' to 'false' where CORBA::Boolean is referenced.

        * tao/AnyTypeCode/Marshal.cpp:

          Added CORBA::tk_event case values to the switch
          statements in perform_append() and perform_skip(),
          so that IDL eventtypes will be handled correctly.

Mon Oct 30 15:09:24 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:

          Set the correct pragma prefix value on the AMI reply handlers
          for inherited interfaces.

        * tests/Bug_2669_Regression/Bug_2669_Regression.mpc:
        * tests/Bug_2669_Regression/Child.idl:
        * tests/Bug_2669_Regression/Parent.idl:
        * tests/Bug_2669_Regression/README:
        * tests/Bug_2669_Regression/client.cpp:
        * tests/Bug_2669_Regression/run_test.pl:

          Regression test for the above fix.

Mon Oct 30 14:35:24 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Bug_2654_Regression/Bug_2654_Regression.mpc:
          Do not build on minimum_corba platforms.

Mon Oct 30 13:48:48 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Bug_2654_Regression/client.cpp (init_callback):
          Scoreboard cleanup.

Sun Oct 29 17:08:21 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Bug_2654_Regression/Hello.cpp:
          Took out temporary, unix-only, header.

Sun Oct 29 16:51:47 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Connection_Handler.cpp:
        * tao/IIOP_Connector.cpp:
        * tao/Transport.h:
        * tao/Transport.cpp:

          The fix for bug 2654. Thanks to Chris Reed <cr at progress dot
          com> an Scott Mitchell <rsm at progress dot com> for help
          tracking this down.

        * tests/Bug_2654_Regression/Bug_2654_Regression.mpc:
        * tests/Bug_2654_Regression/Hello.h:
        * tests/Bug_2654_Regression/Hello.idl:
        * tests/Bug_2654_Regression/Hello.cpp:
        * tests/Bug_2654_Regression/README:
        * tests/Bug_2654_Regression/client.cpp:
        * tests/Bug_2654_Regression/run_test.pl:
        * tests/Bug_2654_Regression/server.cpp:

          The new test for ensuring bug 2654 is fixed.

Sun Oct 29 10:58:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * tao/Strategies/advanced_resource.cpp:

          Changed size argument for TP_Reactor construction from
          ACE_TP_Reactor::DEFAULT_SIZE to ACE::max_handles () (as it is in
          default_resource.cpp) to solve CTOR failures on OpenVMS (and
          most likely also LynxOS) in OctetSeq and Leader_Followers
          tests.

Sat Oct 28 16:11:12 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IIOP_Acceptor.cpp (open):

          When using an explicit, default address for the endpoint such as
          iiop://:12345 this change is necessary to ensure the encoded
          address is correct for either IPv4 or IPv6 as configured.

Fri Oct 28 03:23:18 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * examples/POA/On_Demand_Loading/Servant_Manager.cpp:
        * examples/POA/Loader/Servant_Activator.cpp:
        * examples/POA/Loader/Servant_Locator.cpp:

          Addressed 64-bit conversion warnings.

Thu Oct 27 02:53:53 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/GIOP_Message_Base.cpp (parse_request_id):

          Corrected GIOP version check so that the GIOP 1.{0,1} case
          doesn't apply to all major versions greater than or equal to
          one, i.e. {1,2,3,...,N}.{0,1}.  The case in question is only
          meant for GIOP 1.0 or 1.1.

Thu Oct 27 01:59:19 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/GIOP_Message_Base.cpp (parse_request_id):

          Simplified error return logic.  Addresses "code not reached"
          warning.

        * tao/ORB.cpp (ORB_init):

          Do not pass down the default CORBA::Environment from TSS in the
          native C++ exception case.  Simply pass a locally instantiated
          CORBA::Environment.  Removes an unnecessary TSS access.

        * tao/EndpointPolicy/Endpoint_Acceptor_Filter.h:

          Moved TAO_POA_Manager forward declaration into the versioned
          namespace.

        * tao/PortableServer/Servant_var.h:

          Removed suggestion of adding an exception specification.
          They've fallen out of favor by most C++ gurus.

        * tao/Strategies/advanced_resource.cpp:
        * tao/Strategies/advanced_resource.h:

          Added support ACE_Dev_Poll_Reactor.

        * tao/Valuetype/ValueBase.cpp (_tao_write_value_header):

          Fixed Coverity DEADCODE error.

        From Russell Mora <russell_mora at symantec dot com>
        * examples/Content_Server/AMI_Iterator/Content_Iterator_i.cpp:
        * examples/Content_Server/SMI_Iterator/Content_Iterator_i.cpp:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/SHMIOP_Acceptor.h:
        * tao/Strategies/SHMIOP_Factory.h:

          Added support for 64-bit file offsets.

        From Duane Binder <duane_binder at symantec dot com>
        * TAO_IDL/be/be_helper.cpp:

          Buffer I/O by removing fflush() calls.  Greatly improves tao_idl
          performance, particularly over networked filesystems.

        * TAO_IDL/be/be_interface.cpp (gen_gperf_lookup_methods):

          Flush the output stream. Gperf also uses it as output.  Ensure
          current contents are written before gperf writes.

Thu Oct 26 14:20:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Event/UDP/receiver.cpp:
          Register the value factory

        * orbsvcs/tests/Event/UDP/run_test.pl:
          Also run the test with a valuetype in the event.

Thu Oct 26 13:30:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp:
          Reverted the change below. Thew new UDP RTEC test showed
          that the consumer was receiving duplicate events without being
          able to detect that. So a single send resulted in two events
          being received. The original problem needs to be resolved in
          a different way because this breaks any assumptions about events

          Mon Aug 21 15:37:23 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>
          * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.i:
          * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp: Made the
            simplest fix to the problem where if a UDP RTEC supplier
            restarts while the consumer is still running, it gets duplicate
            fragment errors.  The cost of this fix is that duplicate
            completed requests are no longer detected.  Thanks to Keith
            Nicewarner for these fixes.

Thu Oct 26 12:54:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:
          Const improvements

Thu Oct 26 10:53:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Event/UDP/*:
          New regression test for the RTEC using UDP federations. By default
          we just send the string ACE/TAO/CIAO in the Any and this works, but
          when -v is passed to the run_test.pl we send a valuetype which
          contains the string. With the current svn head version of today
          this fails because on the receiver side we can't extract the valuetype
          out of the Any

Wed Oct 25 15:33:27 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tao/PortableServer/Root_POA.cpp:

          My change from Mon Oct 23 12:24:57 UTC 2006 uncovered yet another
          reference counting problem.  The TAO_Root_POA was not manipulating
          the reference count of the TAO_POA_Manager that it held.

Mon Oct 23 12:24:57 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tao/PortableServer/Object_Adapter.h:
        * tao/PortableServer/Object_Adapter.cpp:

          Added a helper method to correctly release the
          TAO_POAManager_Factory which is used in both the destructor and
          the close method.

        * tao/PortableServer/POAManagerFactory.h:
        * tao/PortableServer/POAManagerFactory.cpp:

          When CORBA::release() is called on the POAManagerFactory, the
          reference count does not necessarily go to zero because it has a
          set of objects that are still holding on to a reference to the
          factory.

          I added a method to the POAManagerFactory to remove all the
          registered poa managers.  This is called by the helper method in
          the TAO_Object_Adapter class.

          Thanks to Artur DeEsperanto <DrEsperanto at gmx dot net> for
          reporting this.  This fixes bugid 2686.

Fri Oct 20 16:54:32 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tao/ORB_Core.cpp:

          Fixed a memory leak where the TAO_Adapter would be leaked in the
          event that an exception occurred before the adapter was added to
          the adapter registry.  Thanks to Artur DeEsperanto <DrEsperanto
          at gmx dot net> for reporting this.

        * tao/PortableServer/Object_Adapter.cpp:

          Clean up the TAO_Root_POA and TAO_POAManager_Factory pointers in
          the destructor in the event that the close() method was never
          called.

Fri Oct 20 07:44:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport_Connector.cpp:
          Updated formatting of a debug message to match the others
          in TAO

        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.cpp:
          Use LM_ERROR together with ACE_ERROR, const improvements

Tue Oct 17 22:04:33 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tao/Strategies/advanced_resource.cpp:
          Believe the default reactor for advanced resources and default
          resources should be the same. No reason for the advanced
          resources recator not to automatically restart upon signal
          interruption.

Tue Oct 17 18:02:25 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IORTable/Table_Adapter.cpp:
          Fix to improve compiling on borland.

Tue Oct 17 15:41:50 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_typedef/any_op_cs.cpp:

          Cosmetic changes.

        * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/any_op_cs.cpp:

          Changed generated implementation of Any operators to
          pass the alias typecode for typedefed sequences and
          arrays. Formerly the raw sequence or array typecode
          was used in all cases.

Tue Oct 17 14:40:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:
          Fixed warning in VxWorks 5.5.2PPC build, some layout changes
          and use prefix increment instead of postfix

Tue Oct 17 14:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Optimized_Connection/run_test.pl:
          Removed commented out test code

Tue Oct 17 11:58:02 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IORTable/IOR_Table_Impl.h:
        * tests/Bug_2683_Regression/server.cpp:

          Clean up scoreboard related problems.

Mon Oct 16 21:16:14 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IORTable/Table_Adapter.cpp:
        * tao/IORTable/Table_Adapter.h:
        * tao/IORTable/IOR_Table_Impl.cpp:
        * tao/IORTable/IOR_Table_Impl.h:
          Added var type for the impl, to avoid casting.

Mon Oct 16 10:59:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Nested_Upcall_Crash/run_test.pl:
          Check whether we could spawn the server, if not, give an error
          and exit directly.

Mon Oct 16 08:43:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          Const changes

Sun Oct 15 23:23:53 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IORTable/Table_Adapter.cpp:
        * tao/IORTable/Table_Adapter.h:
          Fix for bug 2683. The problem was that if ORB::shutdown() was
          called by another thread, the Table_Adapter::root_ reference
          could go to nil while it was needed for processing in the
          find_object() method. The fix is to use the reference counting
          already supplied for the root_ reference to ensure the pointer
          can never go nil while it is needed. Further, a synchronized
          flag is used to restrict access to find_object() to ensure it is
          not called once ORB::shutdown() was invoked.

        * tests/Bug_2683_Regression/*:
          A new regression test for this bug. As this bug is the result of
          a race condition, it is hard to detect anyway. The best way to
          observe the bug is to revert the above change to Table_Adapter*
          and add a small sleep to the find_object() method. This simply
          forces the race condition. Adding a small sleep along with the
          above fix demonstrates that the problem no longer occurs.

          Thanks to Chris Reed, cr at progress dot com, for reporting this
          bug.

Fri Oct 13 10:28:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/COIOP/*:
          Extended this test so that we check whether a call should
          succeed or not. This test requires that COIOP is the only
          pluggable protocol available.

Thu Oct 12 14:17:11 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:

          Split a debug message into two messages to work around a strange
          bug in Visual Studio 2005.

Thu Oct 12 14:13:44 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/run_test.pl:

          Use a random port number for the Naming_Service instead of a
          hard-coded port number.

Tue Oct 10 12:11:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/ORT/README:
          Layout improvement

        * orbsvcs/orbsvcs/CosConcurrencyControl.idl:
        * orbsvcs/orbsvcs/CosLoadBalancing.idl:
        * orbsvcs/orbsvcs/CosNaming.idl:
          Doxygen improvements

        * orbsvcs/LoadBalancing/LB_ObjectReferenceFactory.cpp:
          Const/bool improvements

Tue Oct 10 09:24:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/ior_parsing.html:
          Updated that match_prefix returns bool

Tue Oct 10 09:19:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Connection_Handler.cpp:
          Layout change

        * tao/CORBALoc_Parser.{h,cpp}:
        * tao/CORBAName_Parser.{h,cpp}:
        * tao/DLL_Parser.{h,cpp}:
        * tao/FILE_Parser.{h,cpp}:
        * tao/IOR_Parser.{h,cpp}:
        * tao/MCAST_Parser.{h,cpp}:
          Changed match_prefix to return a bool instead of an int.

        * tao/CORBALoc_Parser.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Strategy_Factory.cpp:
        * tao/Environment.cpp:
        * tao/Exception.cpp:
        * tao/IIOP_Connector.cpp:
        * tao/IIOP_Profile.cpp:
        * tao/ORB_Core.cpp:
        * tao/Strategies/SCIOP_Connector.cpp:
        * tao/Strategies/UIOP_Connector.cpp:
        * tao/SystemException.cpp:
          When using LM_ERROR, use ACE_ERROR as macro

        * tao/IIOP_Connection_Handler.cpp:
          Const improvment

        * tao/ObjRefTemplate/ObjectReferenceTemplate.pidl:
          Cleanup of comment

        * tao/Strategies/DIOP_Profile.cpp:
          Small code improvement assuming the fact that operator>> returns
          bool

Tue Oct 10 06:08:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/COIOP/*:
          New test for COIOP

Thu Oct 05 00:35:37 2006  William R. Otte  wotte@dre.vanderbilt.edu

        * TAO version 1.5.3 released.

Tue Oct  3 17:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/tutorials/Quoter/Simple/Client/index.html:
          Corrected filenames generated by tao_idl

Tue Oct  3 14:13:55 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * NEWS

          Updated NEWS file.

Mon Oct  2 12:59:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/POAManagerFactory/POAManagerFactory.cpp:
          Renamed VERIFY macro to fix warning in mfc build and use
          ACE_ERROR instead of ACE_DEBUG

Thu Sep 28 15:13:49 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * tao/Connection_Handler.h:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.cpp:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Connection_Handler.cpp:

          Fixing a regression on bug 2074 caused by CH::handle_timeout()
          trying to update its instance, when the latter has already been
          deallocated by CH::close(). This case only occurs when the
          reference count on the Connection handler drops down to one. The
          solution is to use a kind of auto pointer (TAO_Auto_Reference)
          which magically increments the reference count in its
          constructor and decrements it in its destructor.

Thu Sep 28 14:55:06 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Bug_2188_Regression/broken_i.cpp:
          Silence the Borland warning.

Wed Sep 27 07:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        Merged in the patch from bugzilla bug 2425, this fixes the crashing
        of the notification service with vc8. This matches earlier investigations,
        calling the set_qos seems to crash with vc8 because it is implemented
        in a strange multiple inheritance setup.

        * orbsvcs/orbsvcs/Notify/ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.cpp:
          Changed to call TAO_Notify_Object::set_qos()
          directly within the init() method (within the scope
          of a guard) to work around an apparent memory
          corruption error that is seen only in Visual C++ 8
          builds.  Thanks to zhamak dehghani <zhamakd at gmail
          dot com> for initially reporting the problem and
          providing a proposed fix, and to Charles Calkins
          <calkinsc at ociweb dot com> for testing and
          tweaking the proposed fix and further analyzing the
          problem.  (Not yet found, however, is the actual
          cause of the memory corruption that existed before
          this work around.)

Tue Sep 26 11:59:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/COIOP_*.*:
          New pluggable protocol COIOP, this is Collocated Only IOP. It is
          almost finished, some small improvements are pending which will
          be added soon. This protocol only allows collocated invocations and
          must be explicitly enabled by defined TAO_HAS_COIOP to 1. At the
          moment all other protocols are disabled with their defines it is
          then possible to run a collocated TAO application without using
          any network API's which safes footprint for an application.

        * tao/DynamicAny/DynCommon.h:
          No need for a pragma push/pop

        * tao/ORB_Constants.h:
          Added COIOP profile constant

        * tao/Strategies.mpc:
          Extended for COIOP

        * tao/Strategies/advanced_resource.cpp:
          Added COIOP factory

        * utils/catior/catior.cpp:
          Added support for COIOP

        * docs/releasenotes/index.html:
          Added COIOP

Tue Sep 26 06:21:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Timeout/run_test.pl:
          Don't use a hardcoded timeout and when there is no executable, exit
          directly

Mon Sep 25 22:27:24 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * tao/Connection_Handler.cpp:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.cpp:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Connection_Handler.cpp:

          Removed the call to release_os_resources call from the base
          Connection_Handler destructor, and added code to each of the
          protocol-specific CHs to report an error if release_os_resources
          returns -1.

Mon Sep 25 17:09:58 UTC 2006  Edward R. Mulholland  <emulholl@atl.lmco.com>

        * tests/Timeout/client.cpp:
        * tests/Timeout/run_test.pl:
        * tests/Timeout/test_i.cpp:
        * tests/Timeout/README.expected_behavior:
        * tests/Timeout/README:

          Made relatively modest changes to track statistics on per type
          of timeout.  Also added a file README.expected_behavior that
          carefully describes the timeout behavior that we should observe
          on a proper real-time platform.  Please address comments and
          questions to Gautam Thaker <gthaker@atl.lmco.com>.

Fri Sep 22 21:29:26 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicAny/DynAnyFactory.h:
        * tao/DynamicAny/DynamicAny.pidl:
        * tao/DynamicAny/DynCommon.cpp:
        * tao/DynamicAny/DynCommon.h:
        * tao/DynamicAny/DynAnyFactory.cpp:
        * tao/DynamicAny.mpc:

          Updated spec IDL to conform to CORBA
          3.0.3 (formal/2004-03-01) and added
          dummy implementations of new operations
          in existing interfaces. Also modified
          the MPC file to inherit from valuetype.mpb,
          to accommodate the new DynValue and
          DynValueBox interfaces.

        * tao/DynamicAny/DynValue_i.cpp:
        * tao/DynamicAny/DynValue_i.h:
        * tao/DynamicAny/DynValueCommon_i.cpp:
        * tao/DynamicAny/DynValueBox_i.cpp:
        * tao/DynamicAny/DynValueBox_i.h:
        * tao/DynamicAny/DynValueCommon_i.h:

          New files containing implementation classes
          for new DynAny types related to valuetypes.
          All of the operations in these classes are
          dummy impls at present.

Fri Sep 22 15:31:54 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IIOP_Acceptor.cpp:
          Fix for remaining IPV6 test failures.

        * tests/Bug_2188_Regression/broken.mpc:
        * tests/Bug_2188_Regression/client.cpp:
          Updated the mpc file to be consistent with current builds. Added
          an explicit type case to the client to silence some build warnings.


Thu Sep 21 14:59:37 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Bug_2188_Regression:
        * tests/Bug_2188_Regression/broken.idl:
        * tests/Bug_2188_Regression/broken.mpc:
        * tests/Bug_2188_Regression/broken_i.h:
        * tests/Bug_2188_Regression/broken_i.cpp:
        * tests/Bug_2188_Regression/client.cpp:
        * tests/Bug_2188_Regression/run_test.pl:
        * tests/Bug_2188_Regression/server.cpp:

          A new test for an old problem. The actual problem is now
          resolved, but I never got around to adding this test when I
          should have.

Wed Sep 20 21:37:58 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IIOP_Acceptor.cpp:

          Fix for non-IPV6 builds. This relates back to the test for an
          explicitly supplied any addr.

Wed Sep 20 21:02:14 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IIOP_Acceptor.cpp:

          Make sure the port_separator_loc value is used to compute the
          string length only when it is not 0.

Wed Sep 20 01:10:58 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/default_resource.cpp:

          Fixing the extra semicolon, causing hickups on some
          platforms. Thanks to Phil Mesnier for catching it.

Tue Sep 19 19:31:15 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IIOP_Acceptor.h:
        * tao/IIOP_Acceptor.cpp:

          Fix the treatment of explicitly defaulted endpoints on
          potentially dual-stack hosts. Prior to this fix, expressing
          certain forms of defaulted endpoints are inappropriately encoded
          in the IOR using the literal string provided, rather than using
          the probed interface addresses. When an endpoint is specified as
          iiop://[::]:, iiop://[]:, or iiop://0.0.0.0:, this patch now
          treats the first two as indicating that all IPv6 interfaces
          should be included, but no IPv4. The third indicates that only
          IPv4 interface addresses should be listed in the IOR. Using
          iiop://: means that both IPv4 and IPv6 interface addresses are
          to be included.

Mon Sep 18 23:53:29 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/TAO_Internal.cpp:

          Replacing the usage of the global ACE lock with a separate
          mutex, because the DLL Manager is also using the global
          lock. This can cause a race condition in applications, which
          re-enter the Service Configurator to load another DLL as part of
          their own initialization.

Mon Sep 18 23:11:31 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

          This change fixes bug#2651, related to the order of destruction
          of Codeset Manager instances, owned by the Default Resource
          Factory. It is a prerequisite for correctly fixing bug#2612 and
          also fixes a design artifact left over from the splitting of the
          codesets in their own library. See the bugzilla entry for more
          details.

        * tao/ORB_Core.h:
        * tao/ORB_Core.cpp:

          The Core is now responsible for managing the life-cycle of the
          Codeset Manager instance, instead of the Resource Factory.

        * tao/default_resource.h:
        * tao/default_resource.cpp:

          Introducing a TAO_Codeset_Parameters class, which encapsulates
          codeset configuration information. Keeping the configuration
          information instead of the configured instance, allows the
          Resource Factory to give up ownership of objects it creates (as
          it should). Removed the ACE_Dynamic_Service_Dependency instance
          member, which was a crude attempt at solving the issue,
          described in bug#2651.

Mon Sep 18 19:54:49 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_union_branch/private_ch.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_ch.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:
        * TAO_IDL/be/be_visitor_union_branch/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_argument/arglist.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype.cpp:
        * TAO_IDL/be/be_visitor_sequence/buffer_type.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_predefined_type.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_field/field_ch.cpp:
        * TAO_IDL/be/be_decl.cpp:

          Fixed cases of code generation involving
          CORBA::AbstractBase that were overlooked in

          Fri Sep 15 19:02:58 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

Mon Sep 18 16:44:10 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tao/Transport_Connector.cpp:
          Removed an extra semi-colon.

Fri Sep 15 19:02:58 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/include/ast_predefined_type.h:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/ast/ast_predefined_type.cpp:
        * TAO_IDL/fe/fe_init.cpp:
        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/util/utl_scope.cpp:

          Added recognition of CORBA::AbstractBase as a pseudo
          object, similarly to the existing support for Object,
          ValueBase, and TypeCode. Also added automatic inclusion
          of tao/Valuetype/AbstractBase.h in generated code
          if AbstractBase is seen in IDL.

Wed Sep 13 14:58:24 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tao/Transport_Connector.h:
        * tao/Transport_Connector.inl:
        * tao/Transport_Connector.cpp:
          The TransportCleanupGuard class is for local usage, so am moving
          it into an anonymous namespace.

Fri Sep  8 20:03:26 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Connection_Handler.cpp:
        * NEWS:
          Applied fix from Tue Aug 29 17:40:01 UTC 2006  Phil Mesnier
          <mesnier_p@ociweb.com> to other protocols. This explicitly calls
          release_os_resources from the derived destructor, as was
          originally intended. This resolves bug 2649.

Thu Sep  7 14:19:58 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tao/Transport_Connector.inl:
          Removed the extra semicolon. This was creating havoc on the
          windows builds.

Tue Sep  5 20:39:15 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tao/PortableServer/Servant_var.h:
        * tao/PortableServer/Servant_var.inl:
          Commented out the member templates code. See:
          Tue Aug 15 21:25:50 UTC 2006  Ciju John  <johnc@ociweb.com>

Tue Sep  5 13:56:58 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tests/Bug_1476_Test/run_test.pl:
          Took out a debug print statement.

Thu Aug 31 23:05:46 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tao/ORB_Core.cpp:
          Access to the TAO_ORB_Core_Static_Resources was through the
          static instance() API. This created a bug when the object which
          earlier was a true singleton was converted to a service object
          under the control of the service config. The service config
          depending upon the access point can either return the global
          object or the object local to the particular orb. In this case
          (during an invocation) we need to access the local object and
          the service config was returning the global object. This led to
          incorrect synch-scope policies being set in invocations via a
          non-default orb (named orb). Since at this point the ORB_Core
          has a pointer to the local service config, its safe to query it
          to request the local service object.

        * tao/Transport_Connector.h:
        * tao/Transport_Connector.inl:
        * tao/Transport_Connector.cpp:

          In case of a asynch connection establishment failure or
          registration failure we need to clean up teh transport, else we
          have a file descriptor leak. The 'TransportCleanupGuard' takes
          care of that.

        * tests/Bug_1476_Test:
        * tests/Bug_1476_Test/Bug_1476_Test.mpc:
        * tests/Bug_1476_Test/Hello.idl:
        * tests/Bug_1476_Test/README:
        * tests/Bug_1476_Test/client.cpp:
        * tests/Bug_1476_Test/run_test.pl:
          Add new regression test for buzilla 1476

Fri Sep  1 14:05:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * tests/Bug_2183_Regression/run_test.pl:
          Fixed spawning of PERL process on OpenVMS.

        * tests/File_IO/run_test.pl:
          Replaced literal timeout value ('10') with platformdependent
          variable defined in PerlACE/Run_Test.pm for that purpose.

        * tests/Faults/test_i.cpp:
        * tests/Crashed_Callback/Crashed_Callback.cpp:
        * tests/Nested_Upcall_Crash/Client_Peer.cpp:
          Fixed these tests for OpenVMS replacing ACE_OS::abort() as deliberate
          crash trigger by ACE_OS::_exit() as using abort() causes these tests
          to 'hang' instead of crash.

Thu Aug 31 18:28:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableServer.cpp:
          With CORBA/e micro don't use single thread strategy and non
          retain servant retention strategy

Thu Aug 31 11:22:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/Messaging_Loader.cpp:
          Changed called_once to a real bool

        * tao/Base_Transport_Property.{cpp,inl}:
        * tao/Cache_Entries.inl:
        * tao/Transport_Descriptor_Interface.{h,cpp}:
          Use true/false instead of 1/0

        * tao/Transport_Cache_Manager.cpp:
          Const improvements

Thu Aug 31 03:35:14 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Asynch_Queued_Message.cpp:
        * tao/Invocation_Adapter.cpp:
          Fix for timed, asynch messages that happen to expire during
          transport resolution. This fixes part of the Oneway_Timeout test.

        * tests/Big_Oneways/run_test.pl:
          This test still has an undefined intermittent deadlock, but I
          lowered the timeout thresholds so it doesn't wait 15 minutes in
          a deadlock condition. If any client fails, they all deadlock, so
          there is no reason to wait 5 minutes before killing clients 2
          and 3.

        * tests/Oneway_Timeouts/client.cpp:
        * tests/Oneway_Timeouts/run_test.pl:

          Fixed a math error in run_test.pl that falsely triggered a
          timeout failure every time. Rearranged the semantics of forced
          connection establishment to ensure it always works without
          regard to messaging timeouts.

Wed Aug 30 13:20:38 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IIOP_Connection_Handler.h:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/IIOP_Connector.cpp:

          Revised the fix for bug 2417. That fix added a reference count
          to IIOP Connection Handlers associated with pending asynch
          connections to accomodate a reference held by an ACE component
          that does not participate in reference counting. However,
          blindly adding a reference caused the Connection_Handler to not
          get cleaned up as part of ORB destruction. This then caused
          trouble on windows platforms where any sockets that were open at
          program termination were aborted with a RST and undelivered
          stream content purged.

          This fix gives control of this additional reference to the
          connection handler itself, so that upon successful completion of
          connection establishment, that reference is removed and no
          resource is leaked.

Wed Aug 30 13:29:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableServer.cpp:

          Don't do the process_directives for the policies that aren't
          supported with CORBA/e micro, this will reduce the footprint for
          a static build.

Wed Aug 30 06:05:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2560_Regression/server.cpp:

          No need to explicitly set the defaul thread policy, makes it possible
          to use this test when minimum corb is enabled

Wed Aug 30 04:20:00 UTC 2006  Frank Rehberger <frehberger@prismtech.com>

        * NEWS: explains user-visible implications of patch #2301

Tue Aug 29 21:55:05 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Profile_Transport_Resolver.cpp:
          Fixing syntax to comply with ACE coding guidelines.

Tue Aug 29 20:02:01 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * examples/POA/Forwarding/Servant_Activator.h:

        * examples/POA/Loader/Servant_Activator.h:
        * examples/POA/Loader/Servant_Locator.h:

        * examples/POA/On_Demand_Activation/Servant_Activator.h:
        * examples/POA/On_Demand_Activation/Servant_Locator.h:

        * examples/POA/On_Demand_Loading/Servant_Activator.h:
        * examples/POA/On_Demand_Loading/Servant_Locator.h:

          These all use Servant Managers which are local objects, but need
          to be reference counted so that they may be shutdown properly
          and thereby release their reference to the ORB_Core so it can be
          finalized and clean up resources it owns.

Tue Aug 29 17:40:01 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IIOP_Connection_Handler.cpp:
          Explicitly call release_os_resources from the dtor.
          Release_os_resources is a virtual method, but of course calling
          that from the base class's destructor won't work. This fix
          ensures that sockets are really closed when the connection
          handler is destroyed.

Tue Aug 29 17:26:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2560_Regression/Bug_2560_Regression.mpc:
          Set needed idlflags and fixed build order, should fix the gcc4 linker
          errors

Tue Aug 29 13:46:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport.cpp (schedule_output_i):
          Check whether we have a reactor, if not, return -1, this fixes
          bugzilla bug 2560. Thanks to Andy Salnikov <a_salnikov at yahoo dot com>
          for reporting this bug and making a test program

Tue Aug 29 12:53:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2560_Regression/*:
          New regression for bug 2560. Thanks to Andy Salnikov
          <a_salnikov at yahoo dot com> for creating this test.

Tue Aug 29 11:48:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Makefile.am:
          Fixed small bug

        * orbsvcs/orbsvcs/RTEvent.mpc:
          Replaced .i with .inl

Tue Aug 29 07:54:00 UTC 2006  Frank Rehberger   <frehberger@prismtech.com>

        * tao/PortableServer/Object_Adapter.cpp:

          Handle location forward requests raised by colocal
          ServerInterceptor. This fixes bug #2301.

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/server.cpp:

          Extend test to verify the forward request raised by colocal
          ServerInterceptor is handled correctly

Mon Aug 28 14:30:11 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * orbsvcs/tests/Security/BiDirectional/run_test.pl:

          Updated the test to run in SSL mode by default.

        * orbsvcs/tests/Security/BiDirectional/ssl/ca.pem:
        * orbsvcs/tests/Security/BiDirectional/ssl/client-cert.pem:
        * orbsvcs/tests/Security/BiDirectional/ssl/client-key.pem:
        * orbsvcs/tests/Security/BiDirectional/ssl/server-cert.pem:
        * orbsvcs/tests/Security/BiDirectional/ssl/server-key.pem:

          Updated expired certificates.

Mon Aug 28 12:05:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DII_Collocation_Tests/twoway/Hello.cpp:
          Added needed include to fix test failures in static builds

Mon Aug 28 09:39:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/OBV/Simple/run_test.pl:
          Updated for VxWorks

Mon Aug 28 09:12:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Makefile.am:
          Regenerated

Mon Aug 28 07:18:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bounded_Sequence_CDR_T.h:
        * tao/Unbounded_Sequence_CDR_T.h:
          Only deliver the CORBA::WChar specialization when ACE_LACKS_NATIVE_WCHAR_T
          is not defined. Thanks to Birgit Platt <bhe at newbase dot de> and
          Jules Colding <colding at omesc dot com> for reporting this problem

Sun Aug 27 11:10:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DII_Collocation_Tests/twoway/DII_Collocation_Tests.mpc:
          New file to build this test

        * tests/DII_Collocation_Tests/twoway/run_test.pl:
          Also cleanup the simple test ior file

        * tests/DII_Collocation_Tests/twoway/Server_Task.cpp:
          Layout changes and initialiser pointer to 0

Sat Aug 26 11:44:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2429_Regression/run_test.pl:
          Updated work with vxworks

Fri Aug 25 21:53:55 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/tao_idl.cpp:

          Added an output message with the name of the IDL file
          being processed.

Fri Aug 25 15:02:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.cpp:
          Use true/false for opt_for_collocation and use_global_collocation

        * tao/GIOP_Message_Lite.cpp:
        * tao/GIOP_Message_Base.cpp:
          Add include of ace/Min_Max.h to resolve compile errors with VxWorks
          6.3 and the diab 5.4.0 compiler

Thu Aug 24 13:37:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/HTIOP/HTIOP_Factory.{h,cpp}:
          Removed minor_ and major_ members, where not used at all

Thu Aug 24 10:41:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Security/BiDirectional/run_test.pl:
        * orbsvcs/tests/Security/ssliop_corbaloc/run_test.pl:
          Check the result of spawn so that when there is no executable we
          directly return an error

Wed Aug 23 18:41:15 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.inl: Reverted changes
          to the copy constructor so that it initializes the data members
          properly.

Wed Aug 23 17:43:29 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * tao\PortableServer\DII_Arguments_Converter.h:
        * tao\PortableServer\DII_Arguments_Converter.cpp:
        * tao\DynamicInterface\DII_Arguments_Converter_Impl.h:
        * tao\DynamicInterface\DII_Arguments_Converter_Impl.cpp:

          Reverted back the changes
          "Tue Aug 22 20:28:26 UTC 2006  Yan Dai  <dai_y@ociweb.com>".
          Added the virtual destructor to TAO_DII_Arguments_Converter
          class to let the rtti work with gcc4 to resolve the oneway
          test failure on gcc4 builds.

Wed Aug 23 12:49:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Factory.{h,cpp}:
        * tao/IIOP_Lite_Factory.{h,cpp}:
        * tao/Strategies/DIOP_Factory.{h,cpp}:
        * tao/Strategies/SCIOP_Factory.{h,cpp}:
        * tao/Strategies/SCIOP_Lite_Factory.{h,cpp}:
        * tao/Strategies/SHMIOP_Factory.{h,cpp}:
        * tao/Strategies/UIOP_Factory.{h,cpp}:
        * tao/Strategies/UIOP_Lite_Factory.{h,cpp}:
          Removed the minor_ and major_ members, they where only initialized
          to a value and then never used at all. Saves a few bytes of footprint

Tue Aug 22 20:28:26 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * tao\PortableServer\DII_Arguments_Converter.cpp:
        * tao\PortableServer\DII_Arguments_Converter.h:
        * tao\DynamicInterface\DII_Arguments_Converter_Impl.h:
        * tao\DynamicInterface\DII_Arguments_Converter_Impl.cpp:

          Made the TAO_DII_Arguments_Converter service object registered
          when PortableServer lib is loaded and the TAO_DII_Arguments_Converter_Impl
          object will overwrite the registered "DII_Arguments_Converter" service
          object. This would fix dynamic_cast failure when accessing the
          "DII_Arguments_Converter" dynamic service object in Upcall_Wrapper::upcall()
          on FC4 with gcc4.x builds. This should fix the
          $TAO_ROOT/tests/DII_Collocation_Tests/oneway test failure on FC4 with
          gcc4.x builds.

Tue Aug 22 19:39:07 UTC 2006  Ciju John  <john@ociweb.com>

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventConsumerMain.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventSupplierMain.cpp:
          For increased portability replaced iostream API with ACE IO
          macros.

        * tao/Wait_On_Read.cpp:
          If reactor registration fails, the 'is_registered_' flag
          shouldn't be set.

        * tests/Oneway_Timeouts/client.cpp:
          Std header <cmath> is contains the signature for std::abs ().

Tue Aug 22 14:57:18 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Oneway_Timeouts/client.cpp:
          Added a test case for transient exceptions. The TAO-specific
          connection timout causes a connection attempt to give up, which
          in turn causes the invocation endpoint selector to try
          connecting to a new endpoint. If no more endpoints are available
          for connecting, a transient exception is raised. Thus the ORB
          code is working correctly, but the test was not handing the
          transient exception as it should.

Tue Aug 22 11:27:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Trader/Constraint_Interpreter.cpp:
          Initialise pointer with 0 to fix gcc4 warning

Tue Aug 22 09:58:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport_Conector.cpp:
          Made some debug statements consistent with the regular
          way we format things in TAO

Tue Aug 22 09:49:48 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * tao/Client_Strategy_Factory.h:
        * tao/Client_Strategy_Factory.cpp:
        * tao/Fault_Tolerance_Service.h:
        * tao/Fault_Tolerance_Service.inl:
        * tao/Fault_Tolerance_Service.cpp:
        * tao/ORB.h:
        * tao/ORB.cpp:
        * tao/default_client.h:
        * tao/default_client.cpp:

          Remove spurious FT methods. This fixes bug #2644.

Tue Aug 22 09:26:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI_Server.mpc:
          Removed invalid -Sc flag, thanks to Simon McQueen for reporting
          this.

Tue Aug 22 07:45:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.inl:
          Added missing include

Mon Aug 21 21:38:15 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * docs/tutorials/Quoter/RTCORBA/Stock_Database.h
        * docs/tutorials/Quoter/RTCORBA/Distributor_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Stock_Database.tpp

          Removed a dependancy that the Stock_Database had on IDL.

Mon Aug 21 18:42:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Seq_Var_T.{cpp,inl}:
          Moved include of OS_Memory.h from cpp to inl file to resolve
          compile problems when building static and TAO_NO_COPY_OCTET_SEQUENCES
          is defined to 0. This file is included to get ACE_NEW which is
          only used in the inl file

Mon Aug 21 18:04:51 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.h:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.cpp:

          Changed a CORBA::Boolean class member to native boolean,
          since it isn't used in a CORBA call.

        * orbsvcs/tests/InterfaceRepo/IDL3_Test/test.idl:

          Added a workaround IDL module called 'Components',
          containing just enough for the IFR loader to look up
          necessary stuff, eliminating the need to include
          Components.idl and the corresponding dependency on CIAO.

        * orbsvcs/tests/InterfaceRepo/IDL3_Test/run_test.pl:

          Removed CIAO_ROOT/ciao from the list of include paths.

Mon Aug 21 15:37:23 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.i:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp: Made the
          simplest fix to the problem where if a UDP RTEC supplier
          restarts while the consumer is still running, it gets duplicate
          fragment errors.  The cost of this fix is that duplicate
          completed requests are no longer detected.  Thanks to Keith
          Nicewarner for these fixes.

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_T.cpp
          (set_state): Fixed a problem with type punning.  Thanks to
          Thomas Girard <thomas.g.girard at free dot fr> for reporting
          this.

        * examples/Advanced/ch_8_and_10/server.cpp: Fixed a compile error
          by adding a _duplicate() call.  Thanks to Christoph Schmalhofer
          <christoph dot schmalhofer at gmx dot net> for contributing this
          fix.  This fixes bugid 2611.

Mon Aug 21 16:28:51 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * docs/tutorials/Quoter/RTCORBA/Stock_Database.cpp
        * docs/tutorials/Quoter/RTCORBA/StockNameConsumer_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Stock_Database.h
        * docs/tutorials/Quoter/RTCORBA/StockNameConsumer_i.h
        * docs/tutorials/Quoter/RTCORBA/Common.idl
        * docs/tutorials/Quoter/RTCORBA/StockQuoter.mpc
        * docs/tutorials/Quoter/RTCORBA/Distributor_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Distributor_i.h
        * docs/tutorials/Quoter/RTCORBA/Broker_i.cpp

          More updates to the Quoter tutorial, the most significant
          being a redesign on the Stock_Database to make is more generic
          and easily plugged into other Quoter examples.

Mon Aug 21 10:07:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Bug_2510_Regression/*:
          Integrated more advanced test, thanks to Martin Cornelius
          <Martin dot Cornelius at smiths-heimann dot com> for creating
          this version. This test doesn't crash anymore, probably due
          to the recent PI refactoring

Mon Aug 21 05:58:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Unbounded_Octet_Sequence_T.h:
          When TAO_NO_COPY_OCTET_SEQUENCES is defined to 0 use the global
          operator == and != to resolve compile errors with TAO. Some compilers
          had problems with these operators so they where fully commented out
          but this made it impossible to define TAO_NO_COPY_OCTET_SEQUENCES to
          0 completely

Sat Aug 19 22:03:03 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DII_Collocation_Tests/oneway/Collocated_Test.cpp:

          Added the DII_Arguments_Converter_Impl.h include to force static builds
          to load the DII_Arguments_Converter service.

Fri Aug 18 17:00:15 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        Merged OCI changes that fix the problem that CORBA::Request::send_oneway()
        crashes on get_in_arg() or gives incorrect arguments when the request is
        collocated oneway request. These fixes are combination of
        "Tue Dec 27 13:20:58 USMST 2005  Yan Dai  <dai_y@ociweb.com>" and
        "Tue May  2 16:52:43 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>"
        (See BugZilla #2545 for details).
        Note this only fixed the oneway DII collocation requests, the twoway
        collocation request was not tested yet.

        * tao/Invocation_Adapter.cpp:
        * tao/Invocation_Adapter.h:
        * tao/Invocation_Adapter.inl:

          Added is_dii_request_ data member.
          Added an extra parameter is_dii_request(defaults to false - not a dii request)
          to the invoke() function so it can be passed to the Operation_Details
          to mark the request is a dii request.

        * tao/operation_details.h:
        * tao/operation_details.i:

          Added is_dii_request_ data member and the accessor and added the is_dii_request
          parameter to the constructor.

        * tao/DynamicInterface/DII_Arguments.h:
        * tao/DynamicInterface/DII_Arguments.inl:

          Added accessor to the NVList.

        * tao/PortableServer/Upcall_Wrapper.cpp:

          Updated upcall () to use the DII_Argument_Convert to expand the
          DII request parameter from NVList to list of *SArgument.
          This would make DII request parameters in NVList from the client
          side to be changed to the list of arguments so the server side
          can correctly retrieve the arguments.

        * tao/DynamicInterface/DII_Arguments_Converter_Impl.cpp:
        * tao/DynamicInterface/DII_Arguments_Converter_Impl.h:
        * tao/PortableServer/DII_Arguments_Converter.h:

          An abstract class DII_Arguments_Converter is added for conversion
          of the NVList to list of *SArgument.
          These new files are added to resolve the library circuit dependency
          problem. This makes the conversion of NVList to list of *SArgument
          can be done in DynamicInterface instead of in PortableServer. The
          expanded skel args are used in get_in_arg() to give the correct
          "IN" arguments.

        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:

          Passed is_dii_request true to Invocation_Adapter constructor to
          indicate it's a dii request invocation.

        * tao/DynamicInterface/Request.cpp:

          Passed is_dii_request true to construct Invocation_Adapter object to
          indicate it's a dii request invocation.

        * tests/DII_Collocation_Tests/oneway/Collocated_Test.cpp:

          Removed the commented include.

Fri Aug 18 16:18:35 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Timed_Buffered_Oneways/client.cpp:
        * tests/Timed_Buffered_Oneways/test_i.cpp:

          I am unable to reproduce the failure in this test locally. The
          output in the scoreboard files is inconclusive, but the failure
          seems to be consistent on the affected platforms. This is just
          some additional output to help make sense of what might be
          causing the failure.

Fri Aug 18 13:34:43 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Profile_Transport_Resolver.cpp:
          Fix for connection timeout errors introduced by Adam's commit of
          Justin's changes in Tue Aug 15 14:56:35 UTC 2006  Adam Mitz
          <mitza@ociweb.com>

Fri Aug 18 13:27:02 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * tests/Oneway_Timeouts/client.cpp:
          Eliminated warnings due to using var's without ".in()".

Fri Aug 18 09:09:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Generator_Parser*.*:
          Changed all write_* methods to return a bool instead of int, the
          return value was used as bool, so made this explicit. Also added
          more const usage when possible.

        * tao/GIOP_Message_Base.cpp:
          Use true for a bool

        * tao/GIOP_Mesage_Locate_Header.{h,inl}:
          Const improvements

        * tao/GIOP_Utils.h:
          Removed stuff that was not used

        * tao/GIOP_Utils.cpp:
          Removed this file, not used at all

        * tao/tao.mpc:
          Removed GIOP_Utils.cpp

Fri Aug 18 07:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Base.cpp:
          Fixed incorrect method name in debug macro. When the parsing of the
          request header has failed, throw the marshal exception directly, don't
          try to process the service context and assign translators, we just
          don't know at this stage if that is safe to do, so don't do that.
          Also in parse_request_id do the demarshaling of the service contexts
          and the request id in two seperate steps, if the demarshaling of the
          service context fails, then we can't demarshal the request id
          safely.

        * tao/GIOP_Message_Generator_Parser.cpp (parse_reply):
          When the demarshaling of the request id failed then return with -1
          instead of trying to demarshal anymore data. Also when we have
          received an unknow reply status return -1 instead of returning 0

        * tao/GIOP_Message_Generator_Parser_10.cpp :
          In parse_request_header check whether the demarshaling of the
          service contexts didn't fail. Also in parse_reply log an error when
          demarshaling fails.

        * tao/IIOP_Connection_Handler.cpp:
        * tao/Transport_Cache_Manager.cpp:
          Const improvement

Thu Aug 17 20:46:29 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/tests/ImplRepo/Bug_2604_Regression/Bug_2604.mpc:
          Set the exename explicitly, the default wasn't behaving as expected.

        * tests/Oneway_Timeouts/client.cpp:
          Added a cast to int to eliminate Borland compiler error due to
          ambiguous call to std::abs().

        * tests/Timed_Buffered_Oneways/client.cpp:
          Eliminated warnings due to using var's without ".in()".

Thu Aug 17 12:54:58 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/lex.yy.cpp:

          Touched this file, to eliminate warnings about it being possible
          outdated, since minor changes were made in

          Wed Aug 16 17:29:44 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

          to idl.ll, which generates it.

Wed Aug 16 21:48:22 UTC 2006  Shanshan Jiang <shanshan.jiang@vanderbilt.edu>

        * docs/tutorials/Quoter/RTCORBA/docs/broker.html
        * docs/tutorials/Quoter/RTCORBA/docs/database.html
        * docs/tutorials/Quoter/RTCORBA/docs/distributor.html
        * docs/tutorials/Quoter/RTCORBA/docs/idl.html
        * docs/tutorials/Quoter/RTCORBA/docs/index.html
        * docs/tutorials/Quoter/RTCORBA/docs/mpc.html
        * docs/tutorials/Quoter/RTCORBA/docs/nameConsumer.html
        * docs/tutorials/Quoter/RTCORBA/docs/prioritymapping.html
        * docs/tutorials/Quoter/RTCORBA/docs/run.html
          Update these files according to William R. Otte's modification to the
          corresponding source code.

Wed Aug 16 18:09:44 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * docs/tutorials/Quoter/RTCORBA/StockNameConsumer_i.cpp
        * docs/tutorials/Quoter/RTCORBA/StockNameConsumer_i.h

          Improved valuetype memory management.

Wed Aug 16 17:29:44 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/lex.yy.cpp:

          Cosmetic changes.

        * TAO_IDL/fe/idl.ll:

          Replace overlooked instances of idl_bool with native bool,
          and corresponding values I_TRUE and I_FALSE with the
          native versions.

        * TAO_IDL/util/utl_identifier.cpp:

          In the constructor from char*, if the input arg begins
          with '_cxx_', the logic is changed. If the tail of the
          arg matches a C++ keyword, the arg is left unchanged.
          Otherwise, the leading underscore is stripped as with
          all other 'escaped' input args. This fix closes [BUGID:2634],
          thanks to Boris Kolpackov <boris@dre.vanderbilt.edu> for
          reporting it.

Wed Aug 16 17:17:30 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * docs/tutorials/Quoter/RTCORBA/Common_Export.h
        * docs/tutorials/Quoter/RTCORBA/Stock_PriorityMapping.cpp
        * docs/tutorials/Quoter/RTCORBA/Distributor.idl
        * docs/tutorials/Quoter/RTCORBA/Common_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Broker_i.h
        * docs/tutorials/Quoter/RTCORBA/Common_i.h
        * docs/tutorials/Quoter/RTCORBA/Stock_PriorityMapping.h
        * docs/tutorials/Quoter/RTCORBA/Stock_Database.cpp
        * docs/tutorials/Quoter/RTCORBA/StockNameConsumer_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Distributor.cpp
        * docs/tutorials/Quoter/RTCORBA/Broker.idl
        * docs/tutorials/Quoter/RTCORBA/Stock_Database.h
        * docs/tutorials/Quoter/RTCORBA/StockNameConsumer_i.h
        * docs/tutorials/Quoter/RTCORBA/Common.idl
        * docs/tutorials/Quoter/RTCORBA/StockQuoter.mpc
        * docs/tutorials/Quoter/RTCORBA/Distributor_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Broker.cpp
        * docs/tutorials/Quoter/RTCORBA/Distributor_i.h
        * docs/tutorials/Quoter/RTCORBA/Admin.cpp
        * docs/tutorials/Quoter/RTCORBA/Broker_i.cpp

          This is a major overhaul of the RTCORBA tutorial to fix bugs,
          correct a broken priority model, and add new features.

          Thanks to Doug Schmidt for providing code, feedback, and suggestions.

Wed Aug 16 15:35:29 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connector.cpp: fixed warning (unused arg)
        * tao/Asynch_Queued_Message.h: fixed error in VERSIONED_NAMESPACE build

Tue Aug 15 21:25:50 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tao/PortableServer/Servant_var.h:
        * tao/PortableServer/Servant_var.inl:

          Removed the member templates as
          - They dodn't seem to be serving any purpose. It appears that the
          only reason these member templates were defined was so that the
          hand-crafted constructor could be declared to be
          explicit. However since the member template constructor is
          implicit this just adds complexity without any benefits.
          - They were causing build problems in SunStudio 11 builds and
          VxWorks builds using gcc 2.96.

          Made the Servant_var constructor implicit to comply with the c++
          language mapping.

Wed Aug 16 08:18:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ObjRefTemplate/ObjectReferenceTemplate_include.pidl
        * tao/PortableServer/PortableServer_include.pidl
        * tao/RTCORBA/RTCORBA_include.pidl
          Added empty pragma prefix to be able to compile these pidl files
          correctly when the visual age preprocessor is used on AIX

Wed Aug 16 04:47:24 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * tests/Timed_Buffered_Oneways/client.cpp:
          Added #include for ACE_OS::gettimeofday().

Tue Aug 15 19:36:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Policies/Policies.mpc:
          Simplified this file

Tue Aug 15 17:57:20 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_preproc.cpp (drv_post_init):

          Added check for environment variable CIAO_ROOT when adding
          default include paths for CIAO_ROOT and CIAO_ROOT/ciao. This
          check is necessary if the middleware SubVersion modules have
          been checked out in non-nested mode, since in that case,
          CIAO_ROOT cannot be derived from TAO_ROOT or ACE_ROOT.

Tue Aug 15 17:24:05 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/Strategies/SCIOP_Endpoint.cpp (preferred_interfaces):

          Use new ACE_CString::size_type type to hold string
          position/index value, instead of "int".  Addresses "comparison
          between signed and unsigned" warnings.

Tue Aug 15 14:56:35 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        Checking in on behalf of Justin Michel <michel_j at ociweb dot com>...

        Fixed bugs related to OCI RT8769. There were several problems
        identified in this ticket.

        All of these changes are on the branch "OCI_Oneway_Buffering".

        1. The SyncScopes SYNC_NONE, SYNC_DELAYED_BUFFERING, and
           SYNC_EAGER_BUFFERING use non-blocking connects, but the
           non-blocking connect mechanism allows the caller to
           effectively block, because it enters the reactor.  (Even
           though it used a timeout of zero, this still makes it
           possible for the caller to be blocked.)  The solution is to
           queue any messages until the connection is complete, and to
           rely on the reactor to complete the connection. This was
           already implemented, and the fix just involved NOT polling
           the reactor. A side-effect of this change, is that
           applications that make connections within oneway requests
           with the above SyncScope policies must call orb->run() to
           complete the connection. Alternatively an invocation that
           doesn't use the above SyncScopes can be made to complete
           the connection.

        2. Connection and request timeouts did not work correctly for
           every scenario. (e.g. For non-blocking connects, the
           request timeout should not be used even if it's less than
           the connect timeout, because the connect does not happen in
           the context of the request.)  The fix required numerous
           changes detailed below.

        3. Queued messages would never be expired even if a roundtrip
           request timeout policy was in place. The solution is to
           calculate an absolute expiration time for queued
           asynchronous messages that have timeouts. The messages are
           then discarded in Transport::drain_queue_i() if expired.

        4. Connection timeouts result in TRANSIENT instead of TIMEOUT.
           The fix required numerous changes detailed below.

        5. Queued messages were flushed at connection startup, which
           effectively ignored the buffering constraint policies.
           Removed the code that flushed the messages.

        * NEWS: explains user-visible implications of these changes

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.cpp:
        * tao/Messaging/Connection_Timeout_Policy_i.cpp:
        * tao/Messaging/Messaging_Policy_i.cpp:

          Enhanced display of millisecond timeouts in log
          messages. Log messages now say "Connect timeout <50ms>" or
          "Request timeout <100ms>" instead of "timeout <100>".

        * examples/Buffered_Oneways/client.cpp:

          Add a check to make sure that the test is run with a valid
          buffering constraint policy.

        * tao/Connection_Handler.h:
        * tao/Connection_Handler.inl:

          Added an is_timeout() method for Connection_Handler() so that
          we can tell the difference between a timeout and a close.

        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connector.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/IIOP_Connector.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.cpp:
        * tao/Strategies/SCIOP_Connector.cpp:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Connector.cpp:

          Update log message during IIOP_Connection_Handler::open() to
          show ip address and port instead of just ip address.

          Update all connection handlers that closed a connection due
          to timeout to set the state to TAO_LF_Event::LFS_TIMEOUT
          instead of closed.

          Changed xxx_Connector to NOT set synch_options.timeout() to
          ACE_Time_Value::zero when the connect is
          non-blocking. Setting it here is unnecessary and prevents
          non-blocking timeouts from working.

          Update the IIOP_Connector logged error message to show
          errno in addition to the errno description.

          Increment the reference count of the xxx_Connection_Handler
          when the xxx_Connector is unable to complete the connection
          synchronously. (Same as BugZilla 2417, but for all protocols
          instead of just IIOP.)

        * tao/Invocation_Adapter.cpp:

          Move the max_wait_time variable to an inner scope in
          Invocation_Adapter::invoke_i(), because it wasn't needed in
          most code paths.

        * tao/Profile_Transport_Resolver.cpp:

          Fixed the logic in profile_transport_resolver::resolve() to
          correctly detect TIMEOUT exceptions, and to ensure that the
          connection timeout uses the minimum of the connection
          timeout policy and request timeout for blocking
          connects. Also ensure that request timeout is never used as
          the connection timeout for non-blocking connects.

        * tao/Asynch_Queued_Message.h:
        * tao/Asynch_Queued_Message.cpp:
        * tao/Queued_Message.h:
        * tao/Queued_Message.cpp:
        * tao/Synch_Queued_Message.cpp:

          Add expiration time to Asynch_Queued_Messages. The
          constructor now takes an ACE_Time_Value for the relative
          timeout. If the timeout is nonzero and nonnull then it is
          used to calculate an absolute expiration time using the high
          res timer.

          Update Queued_Message constructor to allow specifying an
          absolute timeout, and a new is_expired() method to check
          whether the queued message is expired.


        * tao/Synch_Invocation.cpp:
        * tao/Transport.h:
        * tao/Transport.cpp:

          Update various places in Transport and Synch_Invocation to
          create queued messages with the correct timeout value. This
          includes ensuring that partially delivered messages can
          never timeout.

          Update Transport to discard expired messages. This happens
          in drain_queue_i().

          Add more descriptive logging output to
          Transport::cleanup_queue_i.

          Update Transport post_open to NOT flush queued
          messages. This effectively ignored the specified buffering
          constraint policies.

        * tao/Transport_Connector.cpp:

          Update Transport_Connector to correctly detect timed out
          connections. Also fixed the code that checked the return
          value of
          base_transport->wait_strategy()->register_handler(). This
          was recently changed from "if != 0" to "if == 0", but the
          correct check for failure should be "if == -1".

          Updated Transport_Connector to not enter the wait strategy
          for non-blocking connects. Instead we rely on the
          application to eventually call orb->run() which will
          complete the connection, and send any queued messages.

        * tao/Transport_Queueing_Strategies.cpp:

          Update Eager_Transport_Queuing_Strategy to not use a pointer
          to something that looks like it could go out of scope. I
          think the code was actually safe, but it was confusing.

        * tao/Block_Flushing_Strategy.cpp:
        * tao/Flushing_Strategy.h:

          Change block_flushing strategy to NOT synchronously flush in
          the schedule_output() method. Instead we added a new special
          return value indicating that the caller should do the flush
          immediately. This allows the calling code to hold a lock
          during the call to schedule_output() that can be released
          before calling flush_transport().

        * tests/AMI_Buffering/client.cpp:
        * tests/AMI_Buffering/run_buffer_size.pl:
        * tests/AMI_Buffering/run_message_count.pl:
        * tests/AMI_Buffering/run_test.pl:
        * tests/AMI_Buffering/run_timeout.pl:
        * tests/AMI_Buffering/run_timeout_reactive.pl:
        * tests/Oneway_Buffering/client.cpp:
        * tests/Oneway_Buffering/run_buffer_size.pl:
        * tests/Oneway_Buffering/run_message_count.pl:
        * tests/Oneway_Buffering/run_test.pl:
        * tests/Oneway_Buffering/run_timeout.pl:
        * tests/Oneway_Buffering/run_timeout_reactive.pl:
        * tests/Queued_Message_Test/Queued_Message_Test.cpp:
        * tests/Timed_Buffered_Oneways/client.cpp:
        * tests/Timed_Buffered_Oneways/run_test.pl:
        * tests/Timed_Buffered_Oneways/server.cpp:
        * tests/Timed_Buffered_Oneways/test.idl:
        * tests/Timed_Buffered_Oneways/test_i.h:
        * tests/Timed_Buffered_Oneways/test_i.cpp:

          Updated various tests to comply with the above changes.

          Fixed tests that used sync_none or sync_delayed_buffering
          without calling orb->run().

        * tests/Oneway_Timeouts:
        * tests/Oneway_Timeouts/Test.idl:
        * tests/Oneway_Timeouts/client.cpp:
        * tests/Oneway_Timeouts/run_test.pl:
        * tests/Oneway_Timeouts/server.cpp:
        * tests/Oneway_Timeouts/test.mpc:

          Added new test for various combinations of timeouts with oneways:
          connection timeouts and relative round-trip timeouts.

Tue Aug 15 14:02:23 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:

          Before cloning the arguments, check to make sure that we have at
          least one argument/return value.

Tue Aug 15 11:37:06 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tao/AnyTypeCode/TypeCode.h:

          Changed the export on In_Object_Argument_Cloner_T from TAO_Export
          to TAO_AnyTypeCode_Export.  Thanks to Johnny Willemsen for
          pointing out the build warnings.

Tue Aug 15 11:19:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_Reply/Client_Task.cpp:
          Added some more debug output to better see why this test fails on
          OpenVMS.

Tue Aug 15 10:50:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/RTCORBA/Server_Protocol/run_test.pl:
          OpenVMS doesn't have uiop

Tue Aug 15 10:45:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2503_Regression/run_test.pl:
          Extended wait time for server to let this test succeed on OpenVMS

        * tests/RTCORBA/Client_Protocol/run_test.pl:
          Small update for OpenVMS

Tue Aug 15 08:40:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_1393_Regression/run_test.pl:
        * tests/CollocationLockup/CollocationLockup.mpc:
        * tests/Bug_2494_Regression/Bug_2494_Regression.mpc:
        * tests/Abstract_Interface/Abstract_Interface.mpc:
        * orbsvcs/tests/Trading/Trading.mpc:
        * orbsvcs/tests/ImplRepo/Bug_2604_Regression/Bug_2604.mpc:
        * orbsvcs/tests/Bug_2248_Regression/Bug_2248_Regression.mpc:
        * orbsvcs/orbsvcs/SSLIOP.mpc:
        * orbsvcs/orbsvcs/HTIOP.mpc:
        * tao/ImR_Client.mpc:
        * tao/PI.mpc:
          Don't use -Sc as tao_idl option, this doesn't exist anymore

Tue Aug 15 08:02:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_cs.cpp:
          Const improvement

        * tao/RTPortableServer.mpc:
        * tao/RTScheduler.mpc:
          Fixed regeneration instructions

        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:
          Cleanup of old stuff

Mon Aug 14 19:05:38 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * tao/PortableServer/Object_Adapter.h:
        * tao/PortableServer/Object_Adapter.cpp:

          Made the TAO_Object_Adapter keep a reference to POAManager
          object on minimum corba builds to fix leaking of POAManager object.

Mon Aug 14 17:21:00 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * tao/PortableServer/Object_Adapter.cpp:

          Fixed a bug in open() on minimum corba builds. The problems is
          the new poa_manager passed to create_Root_POA() was actually
          destructed when exit from open() function. This would cause
          access violation when application access the poa manager in
          the Root_POA.

Mon Aug 14 13:45:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/*.h:
          Added /**/ to the include of the export and versioned
          namespace files to get them out of the doxygen include
          pictures

Mon Aug 14 13:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer.mpc:
          Enabed regeneration of PortableServer.pidl

        * tao/PortableServer/PortableServer{A,C,S}.{h,cpp}:
        * tao/PortableServer/diffs/PortableServer.diff:
          Removed from the repo

Mon Aug 14 12:59:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CodecFactory.mpc:
        * tao/ObjRefTemplate.mpc:
        * tao/PortableServer.mpc:
        * tao/RTCORBA.mpc:
        * tao/RTPortableServer.mpc:
        * tao/RTScheduler.mpc:
        * tao/PI_Server.mpc:
          Enabed regeneration of *_include.pidl files, this will result
          in an almost empty C.cpp file but that is needed to retrigger
          the regeneration of the header files.

        * tao/CodecFactory/IOP_Codec_include{A,C,S}.h:
        * tao/ObjRefTemplate/ObjectReferenceTemplate_include{A,C,S}.h:
        * tao/PI_Server/PI_Server_include{A,C,S}.h:
        * tao/PortableServer/PortableServer_include{A,C,S}.h:
        * tao/RTCORBA/RTCORBA_include{A,C,S}.h:
        * tao/RTPortableServer/RTPortableServer_include{A,C,S}.h:
        * tao/RTScheduling/RTScheduler_include{A,C,S}.h:
        * tao/RTScheduling/diffs/RTScheduler.diff:
        * tao/RTPortableServer/RTPortableServerA.h:
          Removed from the archive

Mon Aug 14 12:49:11 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be_include/be_global.h:

          Added a new option (-b) which controls the use of clonable in
          arguments on oneway calls.

        * tao/AnyTypeCode/TypeCode.h:
        * tao/AnyTypeCode/TypeCode.cpp:
        * tao/Argument.h:
        * tao/Argument.cpp:
        * tao/BD_String_Argument_T.h:
        * tao/BD_String_Argument_T.inl:
        * tao/BD_String_Argument_T.cpp:
        * tao/Basic_Argument_T.h:
        * tao/Basic_Argument_T.inl:
        * tao/Basic_Argument_T.cpp:
        * tao/Basic_Arguments.h:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/Fixed_Array_Argument_T.h:
        * tao/Fixed_Array_Argument_T.inl:
        * tao/Fixed_Array_Argument_T.cpp:
        * tao/Fixed_Size_Argument_T.h:
        * tao/Fixed_Size_Argument_T.inl:
        * tao/Fixed_Size_Argument_T.cpp:
        * tao/Object.h:
        * tao/Object.cpp:
        * tao/Object_Argument_T.h:
        * tao/Object_Argument_T.inl:
        * tao/Object_Argument_T.cpp:
        * tao/Special_Basic_Argument_T.h:
        * tao/Special_Basic_Argument_T.inl:
        * tao/Special_Basic_Argument_T.cpp:
        * tao/UB_String_Argument_T.h:
        * tao/UB_String_Argument_T.inl:
        * tao/UB_String_Argument_T.cpp:
        * tao/Var_Array_Argument_T.h:
        * tao/Var_Array_Argument_T.inl:
        * tao/Var_Array_Argument_T.cpp:
        * tao/Var_Size_Argument_T.h:
        * tao/Var_Size_Argument_T.inl:
        * tao/Var_Size_Argument_T.cpp:

          Created "clonable" template classes based on all In_*_Argument_T.
          Through the use of traits, the clonable templates are not
          instantiated unless the idl generated code uses them (through the
          -b option).

          Code in the CSD_FW_Server_Request is able to determine if the
          arguments (for collocated oneway's) can be cloned or not.  If they
          can be, they will be cloned during the copy of the server request.
          If they can not be cloned, it will use the original method of
          marshaling the pararameters to copy them. [RT 8372]

        * tests/CSD_Strategy_Tests/TP_Foo_B/csd_tp_foo_b_lib.mpc:
        * tests/CSD_Strategy_Tests/TP_Foo_C/csd_tp_foo_c_lib.mpc:

          Use the -b option for the idl files in these projects.  I left
          some CSD tests to not use the -b option to exercise both methods
          of argument copying.

Mon Aug 14 11:39:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/TypeCode_Case_Enum_T.{h,cpp,inl}:
          Fixed gcc warnings

Mon Aug 14 10:43:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be_include/be_codegen.h:
          Part of fixes for bug 2605, when generating the include of
          config-all.h, Versioned_Namespace.h and the export include
          do generate /**/ between the include statement and the filename
          so that doxygen doesn't add these standard includes to the
          include picture to make them more readable.

Mon Aug 14 09:50:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/compiler.html:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be_include/be_global.h:
          Added -Wb,unique_include as option, when this is specifified
          instead of the normal includes only the specified include is
          done. This is needed for regeneration the *_include.pidl files
          in the archive as part of the regular build

        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
          Generate false instead of 0

Mon Aug 14 09:07:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * examples/Simulator/Event_Supplier/Logging_Sup.cpp:
          Small OpenVMS compatibility changes.

Mon Aug 14 08:35:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/Messaging.h:
        * tao/Messaging/messaging_export.h:
          Moved the undef of TRANSPART to the export file to fix
          compile errors on solaris. This way we don't need to handcraft
          generated files for the messaging lib

Mon Aug 14 07:44:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/TypeCode_Case_Enum_T.{h,cpp,inl}:
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp:
          Fixed handling of union with enums. This fixes bugzilla bug
          2446, thanks to Tommy Persson <tpe at ida dot liu dot se> for
          reporting this bug. Also it fixes bugzilla bug 2539 which
          has been reported by sdjiangwei@sina.com. The real fix has
          been made by Dale Boan <boan at sedsystems dot ca>, many thanks
          to him.

Sun Aug 13 23:30:02 UTC 2006  Yan Dai  <dai_y@ociweb.com>

          These changes excluded the POAManagerFactory and EndpointPolicy
          from minimum corba, minimum poa and CORBA/e builds.

        * tao/PortableServer/POA.pidl:

          Excluded the_POAManagerFactory attribute in POA.

        * tao/PortableServer/POAManagerFactory.pidl:

          Excluded POAManagerFactory interface.

        * tao/PortableServer/POAManager.cpp:
        * tao/PortableServer/POAManager.inl:
        * tao/PortableServer/POAManager.h:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Object_Adapter.h:
        * tao/PortableServer/Acceptor_Filter_Factory.cpp:
        * tao/PortableServer/Acceptor_Filter_Factory.h:
        * tao/PortableServer/POAManagerFactory.cpp:
        * tao/PortableServer/POAManagerFactory.h:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Root_POA.h:

          Excluded the use of POAManagerFactory in the code.

        * tao/EndpointPolicy.mpc:
        * tests/POA/EndpointPolicy/EndpointPolicy.mpc:
        * tests/POA/POAManagerFactory/POAManagerFactory.mpc:

          Made these projects inherit from minimum_corba.

Fri Aug 11 12:49:55 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tests/Optimized_Connection/Optimized_Connection.mpc:
        * tests/Optimized_Connection/README:
        * tests/Optimized_Connection/Test.idl:
        * tests/Optimized_Connection/oc.ior:

          This test was failing on OpenVMS due to the way the linker
          handles template instantiations. Copied the Hello test IDL here,
          so the test is now self-contained.

Fri Aug 11 11:55:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTPortableServer/RT_POA.{h,cpp}:
          CORBA/e changes

        * tao/Utils/Auto_Function.h:
          Marked this header as deprecated

Fri Aug 11 09:10:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IFR_Client.mpc:
          Added -GX to the generation of the pidl files to get empty
          A.h files

        * tao/IFR_Client/*A.h:
          Removed from the repo, do get regenerated now automatically

Fri Aug 11 07:35:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_produce.cpp:
        * TAO_IDL/be_include/be_global.h:
        * docs/compiler.html:
          Added -Scc to suppress generation of client stub and -Ssc of
          generation of server skeleton file. These options don't check
          if something is generated in these files or not, they just
          suppress the generation. Usefull for some pidl files in the
          core libraries. This fixes bugzilla 2631

Fri Aug 11 07:35:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:
          Initialise pointer with 0 to address gcc 4.1 warning

Fri Aug 11 07:09:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/Messaging_Types.pidl:
          Moved all policy type constants to this new pidl file that is
          included by the other pidl files. This way the catior utility
          only needs to include the generated client file for this pidl
          file.

        * tao/Messaging/Messaging_No_Impl.pidl:
        * tao/Messaging/Messaging_RT_Policy.pidl:
        * tao/Messaging/Messaging_SyncScope_Policy.pidl:
          Moved the policy constants out of these file and included the
          new file above

        * tao/Messaging.mpc:
          Added new pidl file

        * tao/utils/catior/catior.cpp:
          Include Messaging_TypesC.h instead of all seperate messaging
          files.

Thu Aug 10 12:20:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging.mpc:
          Enabled regeneration of Messaging_No_Impl.pidl. This had a diff
          to undef TRANSPARENT if it was defined, we moved that to
          Messaging.h

        * tao/Messaging/diffs/*:
          Removed, not needed anymore

        * tao/Messaging/Messaging.h:
          Undef TRANSPARENT when it is defined

        * tao/Messaging/Messaging.pidl:
          Documentation cleanup

        * tao/Messaging/Messaging_No_Impl{A,C,S}.{h,cpp,inl}:
          Removed, will get regenerated as part of the build

Thu Aug 10 12:03:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          In the server header include the safe include when this is defined

        * tao/Messaging.mpc:
          Enabled regeneration of Messaging.pidl and added some -GX flags to
          get the empty A.h files

        * tao/Messaging/Messaging_No_ImplS.h:
          Added empty file, needed because Messaging.pidl gets regenerated

        * tao/Messaging/Messaging.pidl:
          Removed include of OldExceptionHolder.pidl which got removed some
          time ago.

        * tao/Messaging/Messaging{A,C,S}.{h,cpp,inl}:
          Removed because they get regenerated as part of the build

Thu Aug 10 10:29:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/be/be_codegen.cpp:
        * docs/compiler.html
          Added -GX option, generates an empty A.h file. This can be used
          for the pidl files in the archive which can't be build with -GA
          but we do need an A.h file to not get compile errors when end
          users do include the pidl files directly.

        * tao/CodecFactory.mpc:
        * tao/ImR_Client.mpc:
        * tao/ObjRefTemplate.mpc:
        * tao/PI.mpc:
        * tao/RTScheduler.mpc:
        * tao/IORManipulation.mpc:
          Use the new -GX option

        * tao/CodecFactory/IOP_CodecA.h:
        * tao/ImR_Client/ImplRepoA.h:
        * tao/IORManipulation/IORA.h:
        * tao/ObjRefTemplate/ObjectReferenceTemplateA.h:
        * tao/PI/ORBInitInfoA.h:
        * tao/RTScheduling/RTSchedulerA.h:
          Removed from the repo, do get generated now with -GX.

Thu Aug 10 09:43:56 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CodecFactory/IOP_Codec.pidl:
        * tao/CSD_Framework/CSD_Framework.pidl:
          Documentation improvements

        * tao/Connector_Registry.cpp:
          Improved some debug statements to mention the class and method
          where the debug message is coming from

        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
          Initialize some pointers with 0

        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/Invocation_Adapter.cpp:
        * tao/LocateRequest_Invocation_Adapter.cpp:
        * tao/operation_details.{h,inl}:
          Removed the argument_flag as member, we just determine whether
          we have arguments or not on the number of arguments. Changed the
          accessor to just check it when requested. Introduced a flag
          whether the stub arguments should be used or not, this can
          then be changed is some part of the code knows the stub
          arguments are not valid, for example with AMI.

        * tao/operation_details.h:
          Guarded the ft_* methods with TAO_HAS_INTERCEPTORS, the
          implementation did use the macro, just not the declaration

        * tao/extra_core.mpb:
          Removed a generated file from the list of files

        * tao/GIOP_Message_Generator_Parser_12.cpp:
        * tao/Service_Context.{h,inl}:
          is_service_id is now returning a real bool

        * tao/Messaging/Async_Invocation_Adapter.{h,cpp}:
          Overruled invoke_collocated_i to set the use_stub_args
          flag in the operations details to false, when using
          collocation we should use the skeleton arguments. This fixes
          bugzilla bug 2503, thanks to Charles Frasch <cfrash at atdesk dot com>
          for reporting this bug.

        * tao/PortableServer/get_arg.h:
          Use the operation_details stub_args method to determine
          which args should be used

        * TAO_IDL/be/be_visitor_operation/ami_cs.cpp:
          Small optimization for AMI operations with just out arguments as
          supplied by Ossama Othman as partly fix for bug 2503.

        * tao/PortableServer/Root_POA.cpp:
          Don't use POAManagerFactory with CORBA/e compact.

Wed Aug  9 15:00:55 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/tests/ImplRepo/Bug_2604_Regression/Bug_2604.mpc:
        * orbsvcs/tests/ImplRepo/Bug_2604_Regression/MessengerServer.cpp:
          Added dependency on ImR_Client library so that static builds can make
          use of ImR features without dynamic library loading.

Tue Aug  8 22:39:56 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tao/CSD_ThreadPool.mpc:
          Replaced the requires for threads with dependency upon
          threads.mpb which does essentially the same thing. Only looks
          cleaner.

Wed Aug  9 13:18:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2503_Regression/run_test.pl:
          No need to run the client with orb debug level 10

Wed Aug  9 08:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/RT_Protocol_Hooks.cpp:
          Use true instead of 1

        * tao/RTCORBA/RTCORBA.pidl:
          Doxygen changes

Tue Aug  8 14:55:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BiDIR_GIOP/BiDir_PolicyFactory.cpp:
          No need to extract the value twice out of the any

Tue Aug  8 14:13:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/tests/Codesets/libs/IBM1047_ISO8859/Char_IBM1047_ISO8859_Factory.h:
        * tao/tests/Codesets/libs/IBM1047_ISO8859/Wchar_IBM1047_ISO8859_Factory.h:
        * tao/tests/Codesets/libs/UCS4_UTF16/WUCS4_UTF16_Factory.h:
          Updated includes because of the removal of Codeset_Translator_Factory.h
          from the core TAO directory

Tue Aug  8 09:38:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:
          Initailize some pointers explicitly with 0 to fix gcc41 warnings

Tue Aug  8 09:33:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/ast/ast_interface.cpp:
        * TAO_IDL/ast/ast_type.cpp:
          Initailize some pointers explicitly with 0 to fix gcc41 warnings

Tue Aug  8 08:30:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Codeset_Translator_Factory.h:
          Removed, it was deprecated for more then a year

        * tao/tao.mpc:
          Removed remark about Codeset_Translator_Factory.h

Tue Aug  8 07:53:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO-INSTALL.html:
          Removed vc6 info, added VxWorks 6.3 as supported platform

Tue Aug  8 07:49:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_operation/operation.cpp:
          Fixed typo in comment

Mon Aug  7 19:29:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/EndpointPolicy.mpc:
          Enabed regeneration of EndpointPolicyType.pidl:

        * tao/EndpointPolicy/EndpointPolicy{A,C}.{h,cpp}:
          Removed, not needed anymore

        * tao/EndpointPolicy/EndpointPolicyType.pidl:
          Include Policy_Forward.pidl, Policy.pidl pulls in too
          much.

        * tao/BiDIR_GIOP/BiDIR_GIOP.{h,cpp}:
          Changed is_activated to a bool

        * tao/Profile.cpp (decode):
          Only get encap_len when ACE_NLOGGING is not defined, if it is
          defined then we don't use this variable, so no need to get it.

Mon Aug  7 17:06:52 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * tao/PortableServer/POAManagerFactory.cpp:

          Removed hard coded policy checking in create_POAManager().
          Instead, the TAO_Policy_Validator is used to validate the
          policies.

        * tao/orbconf.h:

          Fixed a bug that the TAO_CACHED_POLICY_ENDPOINT was set
          after TAO_CACHED_POLICY_MAX_CACHED. This would fix the
          access beyond cached_policies_ array bound problem.

        * tao/EndpointPolicy/EndpointPolicy_Factory.cpp:

          Fixed a bug in TAO_EndpointPolicy_Factory::create_policy()
          that initializes the local variable "found_one" to true which
          makes the supplied endpoints are never verified against
          the ORB listening endpoints.

        * tao/EndpointPolicy/Endpoint_Acceptor_Filter.cpp:
        * tao/EndpointPolicy/Endpoint_Acceptor_Filter.h:
        * tao/EndpointPolicy/Endpoint_Acceptor_Filter_Factory.cpp:

          Fixed a bug that does not count all endpoints if multiple
          endpoint policies are supplied. Previously, it just counted
          the endpoints in the first endpoint policy.

        * tao/EndpointPolicy/EndpointPolicy_i.cpp:
        * tao/EndpointPolicy/EndpointPolicy_i.h:

          Added virtual destructor and reset endpoint_list to length 0
          when the policy is destroyed.

        * tao/EndpointPolicy/IIOPEndpointValue_i.cpp:

          Removed the duplicate of the const char* ("") since the
          CORBA::String_var constructor duplicates the string internally.

Mon Aug  7 11:41:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IORManipulation/IOR.pidl:
          Converted documentation to doxygen style

Fri Aug  4 09:06:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/default_resource.{h,cpp}:
        * tao/IIOP_Transport.{h,cpp}:
        * tao/MMAP_Allocator.{h,cpp}:
        * tao/orbconf.h:
        * tao/Transport.{h,cpp}:
        * docs/Options.html:
          Added TAO_HAS_SENDFILE, this is set to 1 when ACE_HAS_SENDFILE
          is enabled, else it is set to 0. Users can explicitly define
          this to 0 also to build TAO without sendfile support, this
          reduces then the footprint for applications running on a
          platform that supports sendfile but where the app doesn't
          use it. This fixes bugzilla bug 2587.

Wed Aug  2 22:47:53 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * NEWS:

          Added a note about the valuetype fix.

Wed Aug  2 21:51:51 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Valuetype/ValueBase.cpp:
        * tao/Valuetype/ValueBase.h:

          Restore the ability to properly interpret indirect repository
          IDs for valuetypes to improve interoperability with other ORBs,
          notably JacORB. Secondarily, I've renamed some internal
          (private) methods to include the prefix _tao_ so as to avoid
          potential namespace collisions with names generated by the IDL
          compiler.

          Thanks to Eric Danielou <eric dot danielou at eads dot com>
          for identifying this flaw.

Wed Aug  2 21:32:27 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/examples/ImR/Advanced/run_test.pl:
        * orbsvcs/tests/CosEvent/Timeout/run_test.pl:
        * orbsvcs/tests/ImplRepo/scale/run_test.pl:
        * orbsvcs/tests/Notify/Reconnecting/run_test.pl:
        * orbsvcs/tests/Notify/XML_Persistence/run_test.pl:

          In each case, the Perl scripts were depending on the fact that
          $TAO_ROOT and $ACE_ROOT/TAO were the same value.  These changes
          make use of the new $PerlACE::TAO_ROOT variable so that the tests
          will run when $TAO_ROOT is not $ACE_ROOT/TAO but still assume that
          $TAO_ROOT is $ACE_ROOT/TAO if $TAO_ROOT is not set.

Wed Aug  2 20:15:37 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:
          Updated comment to reflect what's actually in the code.

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.h:
        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:

          This is a fix for bugzilla bug #2604.  This only applies to
          per_client activation mode.  The ImR may receive
          "server_is_running()" invocations from servers that it did
          not launch (they may have been launched by a prior instance
          of the ImR or manually).  When this happens the ImR records
          the info about the running server and places it on a queue.
          Later, when a client request comes in a new server is
          launched (as it should be), but the old queued server info is
          used to ping it.  This can fail with various exceptions
          depending on if the old process is still alive or if some
          other process is now running on its port.  If it fails enough
          times (greater than the retry count) the client invocation
          will fail.  The fix is simply to keep track of whether or not
          the ImR expects a new server (that it launched) to be coming
          online.  If not, it can ignore the server_is_running().  This
          mechanism is already in place for normal activation, but due
          to differences in per_client it doesn't work there.

        * orbsvcs/tests/ImplRepo/Bug_2604_Regression:
        * orbsvcs/tests/ImplRepo/Bug_2604_Regression/Bug_2604.mpc:
        * orbsvcs/tests/ImplRepo/Bug_2604_Regression/Messenger.idl:
        * orbsvcs/tests/ImplRepo/Bug_2604_Regression/MessengerClient.cpp:
        * orbsvcs/tests/ImplRepo/Bug_2604_Regression/MessengerServer.cpp:
        * orbsvcs/tests/ImplRepo/Bug_2604_Regression/Messenger_i.h:
        * orbsvcs/tests/ImplRepo/Bug_2604_Regression/Messenger_i.cpp:
        * orbsvcs/tests/ImplRepo/Bug_2604_Regression/README:
        * orbsvcs/tests/ImplRepo/Bug_2604_Regression/run_test.pl:

          New regeression test for the bugfix described above.

Wed Aug  2 15:11:08 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:

          Do not transmit a FT_REQUEST service context if the destination is
          not an IOGR (i.e. does not contain a IOP::TAG_FT_GROUP component).

        * orbsvcs/tests/Bug_2615_Regression/Bug_2615_Regression.mpc:
        * orbsvcs/tests/Bug_2615_Regression/Hello.h:
        * orbsvcs/tests/Bug_2615_Regression/Hello.cpp:
        * orbsvcs/tests/Bug_2615_Regression/README:
        * orbsvcs/tests/Bug_2615_Regression/ServerORBInitializer2.h:
        * orbsvcs/tests/Bug_2615_Regression/ServerORBInitializer2.cpp:
        * orbsvcs/tests/Bug_2615_Regression/ServerRequest_Interceptor2.h:
        * orbsvcs/tests/Bug_2615_Regression/ServerRequest_Interceptor2.cpp:
        * orbsvcs/tests/Bug_2615_Regression/Test.idl:
        * orbsvcs/tests/Bug_2615_Regression/client.cpp:
        * orbsvcs/tests/Bug_2615_Regression/run_test.pl:
        * orbsvcs/tests/Bug_2615_Regression/server.cpp:

          Regression test for the above.

Wed Aug  2 13:03:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/DII_Invocation_Adapter.{h,cpp}:
          Doxygen improvements

Wed Aug  2 12:58:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Cubit/TAO/IDL_Cubit/run_test.pl:
          Don't run the UIOP test on OpenVMS

Tue Aug  1 07:06:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/Bug_2619_Regression.idl:
        * tests/IDL_Test/IDL_Test.mpc:
          New regression for bug 2619, confirms that this is fixed. Thanks
          to Graeme Bell <graemeb at econz dot com> for reporting this.

Fri Jul 28 18:54:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/Bug_2616_Regression.idl:
          Made the types unique within the IDL_Test project

Fri Jul 28 15:38:11 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Makefile.am
        * orbsvcs/tests/Event/lib/Makefile.am
        * orbsvcs/tests/Security/Crash_Test/Makefile.am
        * orbsvcs/tests/Security/MT_SSLIOP/Makefile.am
        * orbsvcs/tests/EC_Mcast/Makefile.am
        * orbsvcs/tests/HTIOP/BiDirectional/Makefile.am
        * orbsvcs/examples/Security/Send_File/Makefile.am
        * tao/Makefile.am
        * performance-tests/POA/Demux/Makefile.am
        * performance-tests/RTCorba/Oneways/Reliable/Makefile.am
        * performance-tests/RTCorba/Multiple_Endpoints/Common/Makefile.am
        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.am
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.am
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.am

          Fixed Makefile.ams to reflect changes from
          Thu Jul 27 20:50:17 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

Fri Jul 28 14:29:53 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * Most remaining run_test.pl and run_all.pl scripts

          These scripts were missing from
          Fri Jul 28 00:44:26 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>,
          as they used " instead of ' in their use lib line.

Fri Jul 28 14:08:35 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/fe/fe_lookup.cpp

          Rolled this file back a version, accidentally got pulled in by
          Thu Jul 27 20:50:17 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/fe/lex.yy.cpp

          Re committing this file to update the timestamp.

Fri Jul 28 12:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.inl:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.inl:
          Fixed file tag

Fri Jul 28 10:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/Bug_2616_Regression.idl:
        * tests/IDL_Test/IDL_Test.mpc:
          Added regression for bug 2616. Thanks to Keith Nicewarner
          <Keith dot Nicewarner at SpaceDev dot com> for delivering this
          test case, it failed with 1.5.2 but works on the head version,
          just storing it to prevent the bug to appear in the future.

Fri Jul 28 00:44:26 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * Most run_test.pl scripts in the TAO repository

          Updated to use the ACE_ROOT environment variable to find
          PerlACE.  This is necessary for the flattened ACE/TAO/CIAO
          Thanks to Adam Mitz for reporting the problem and
          suggesting a solution.

Thu Jul 27 20:50:17 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Scheduler_Factory.inl
        * orbsvcs/orbsvcs/Event_Utilities.inl
        * orbsvcs/orbsvcs/Scheduler_Utilities.h
        * orbsvcs/orbsvcs/Scheduler_Utilities.i
        * orbsvcs/orbsvcs/Metrics/Metrics_FrameManager_T.inl
        * orbsvcs/orbsvcs/Metrics/Metrics_FrameManager_T.cpp
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor_T.cpp
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor_T.inl
        * orbsvcs/orbsvcs/Metrics/Metrics_FrameManager_T.h
        * orbsvcs/orbsvcs/Metrics/Metrics_FrameManager_T.i
        * orbsvcs/orbsvcs/Metrics/Metrics_LocalCache.cpp
        * orbsvcs/orbsvcs/Metrics/Metrics_LocalCache.inl
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor_T.h
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor_T.i
        * orbsvcs/orbsvcs/Metrics/Metrics_LocalCache.h
        * orbsvcs/orbsvcs/Metrics/Metrics_LocalCache.i
        * orbsvcs/orbsvcs/Metrics/Metrics_FrameManager.cpp
        * orbsvcs/orbsvcs/Metrics/Metrics_FrameManager.inl
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor.cpp
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor.inl
        * orbsvcs/orbsvcs/Metrics/Metrics_FrameManager.h
        * orbsvcs/orbsvcs/Metrics/Metrics_FrameManager.i
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor.h
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor.i
        * orbsvcs/orbsvcs/Metrics/Metrics_Utils.cpp
        * orbsvcs/orbsvcs/Metrics/Metrics_Utils.inl
        * orbsvcs/orbsvcs/Metrics/Metrics_Utils.h
        * orbsvcs/orbsvcs/Metrics/Metrics_Utils.i
        * orbsvcs/orbsvcs/Time_Utilities.h
        * orbsvcs/orbsvcs/Time_Utilities.i
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor.cpp
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor.inl
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor.h
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor.i
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Endpoint.cpp
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Endpoint.inl
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Endpoint.h
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Endpoint.i
        * orbsvcs/orbsvcs/Sched/DynSched.cpp
        * orbsvcs/orbsvcs/Sched/DynSched.inl
        * orbsvcs/orbsvcs/Sched/DynSched.h
        * orbsvcs/orbsvcs/Sched/DynSched.i
        * orbsvcs/orbsvcs/Sched/SchedEntry.inl
        * orbsvcs/orbsvcs/Sched/SchedEntry.cpp
        * orbsvcs/orbsvcs/Sched/SchedEntry.h
        * orbsvcs/orbsvcs/Sched/SchedEntry.i
        * orbsvcs/orbsvcs/Scheduler_Factory.h
        * orbsvcs/orbsvcs/Scheduler_Factory.i
        * orbsvcs/orbsvcs/Channel_Clients_T.cpp
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.h
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.i
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.h
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.i
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.cpp
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.inl
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.inl
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.h
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.i
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Endpoint.inl
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Endpoint.h
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Endpoint.i
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Endpoint.cpp
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.inl
        * orbsvcs/orbsvcs/Event_Utilities.h
        * orbsvcs/orbsvcs/Event_Utilities.i
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Changes.h
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Changes.i
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Command.cpp
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Command.inl
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_List.cpp
        * orbsvcs/orbsvcs/ESF/ESF_Peer_Workers.h
        * orbsvcs/orbsvcs/ESF/ESF_RefCount_Guard.h
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_List.inl
        * orbsvcs/orbsvcs/ESF/ESF_Peer_Workers.i
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RefCount_Guard.h
        * orbsvcs/orbsvcs/ESF/ESF_RefCount_Guard.i
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RefCount_Guard.i
        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Write.inl
        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Write.cpp
        * orbsvcs/orbsvcs/ESF/ESF_Shutdown_Proxy.h
        * orbsvcs/orbsvcs/ESF/ESF_Shutdown_Proxy.i
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RB_Tree.h
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RB_Tree.i
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Admin.cpp
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Admin.inl
        * orbsvcs/orbsvcs/ESF/ESF_Busy_Lock.cpp
        * orbsvcs/orbsvcs/ESF/ESF_Busy_Lock.inl
        * orbsvcs/orbsvcs/ESF/ESF_Immediate_Changes.h
        * orbsvcs/orbsvcs/ESF/ESF_Immediate_Changes.i
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Changes.cpp
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Changes.inl
        * orbsvcs/orbsvcs/ESF/ESF_RefCount_Guard.cpp
        * orbsvcs/orbsvcs/ESF/ESF_Peer_Workers.cpp
        * orbsvcs/orbsvcs/ESF/ESF_Peer_Workers.inl
        * orbsvcs/orbsvcs/ESF/ESF_RefCount_Guard.inl
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RefCount_Guard.cpp
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RefCount_Guard.inl
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Command.h
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Command.i
        * orbsvcs/orbsvcs/ESF/ESF_Shutdown_Proxy.cpp
        * orbsvcs/orbsvcs/ESF/ESF_Shutdown_Proxy.inl
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_List.h
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_List.i
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RB_Tree.cpp
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RB_Tree.inl
        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Write.h
        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Write.i
        * orbsvcs/orbsvcs/ESF/ESF_Immediate_Changes.cpp
        * orbsvcs/orbsvcs/ESF/ESF_Immediate_Changes.inl
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Admin.h
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Admin.i
        * orbsvcs/orbsvcs/ESF/ESF_Busy_Lock.h
        * orbsvcs/orbsvcs/ESF/ESF_Busy_Lock.i
        * orbsvcs/orbsvcs/Channel_Clients_T.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullConsumer.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_DynamicImplementation.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushConsumer.h
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushConsumer.i
        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerAdmin.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.h
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.i
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierAdmin.h
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierAdmin.i
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.h
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.i
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedSupplierAdmin.h
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEvent.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedSupplierAdmin.i
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushConsumer.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_DynamicImplementation.h
        * orbsvcs/orbsvcs/CosEvent/CEC_DynamicImplementation.i
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerAdmin.h
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerAdmin.i
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierAdmin.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_Pulling_Strategy.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.h
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.i
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedSupplierAdmin.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_DynamicImplementation.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullConsumer.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.h
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.i
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEvent.h
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEvent.i
        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerAdmin.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.h
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.i
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.h
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.i
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.h
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_Pulling_Strategy.h
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.i
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.h
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_Pulling_Strategy.i
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.i
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEvent.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushConsumer.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullConsumer.h
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullConsumer.i
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.h
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.i
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierAdmin.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_Pulling_Strategy.inl
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.h
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.i
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedSupplierAdmin.cpp
        * orbsvcs/orbsvcs/Scheduler_Utilities.cpp
        * orbsvcs/orbsvcs/AV/Policy.cpp
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.cpp
        * orbsvcs/orbsvcs/AV/MCast.cpp
        * orbsvcs/orbsvcs/AV/QoS_UDP.inl
        * orbsvcs/orbsvcs/AV/AVStreams_i.inl
        * orbsvcs/orbsvcs/AV/UDP.cpp
        * orbsvcs/orbsvcs/AV/Transport.h
        * orbsvcs/orbsvcs/AV/Transport.i
        * orbsvcs/orbsvcs/AV/AVStreams_i.h
        * orbsvcs/orbsvcs/AV/AVStreams_i.i
        * orbsvcs/orbsvcs/AV/Transport.inl
        * orbsvcs/orbsvcs/AV/UDP.h
        * orbsvcs/orbsvcs/AV/UDP.i
        * orbsvcs/orbsvcs/AV/Policy.inl
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.inl
        * orbsvcs/orbsvcs/AV/MCast.inl
        * orbsvcs/orbsvcs/AV/QoS_UDP.cpp
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp
        * orbsvcs/orbsvcs/AV/UDP.inl
        * orbsvcs/orbsvcs/AV/Policy.h
        * orbsvcs/orbsvcs/AV/Policy.i
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.h
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.i
        * orbsvcs/orbsvcs/AV/MCast.h
        * orbsvcs/orbsvcs/AV/MCast.i
        * orbsvcs/orbsvcs/AV/QoS_UDP.h
        * orbsvcs/orbsvcs/AV/QoS_UDP.i
        * orbsvcs/orbsvcs/AV/Transport.cpp
        * orbsvcs/orbsvcs/Time_Utilities.cpp
        * orbsvcs/orbsvcs/Event/EC_Busy_Lock.inl
        * orbsvcs/orbsvcs/Event/EC_Filter_Builder.cpp
        * orbsvcs/orbsvcs/Event/EC_Timeout_Generator.cpp
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.h
        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.h
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.i
        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.i
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter.cpp
        * orbsvcs/orbsvcs/Event/EC_Reactive_ConsumerControl.inl
        * orbsvcs/orbsvcs/Event/EC_Per_Supplier_Filter.inl
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.cpp
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.cpp
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxySupplier.h
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxySupplier.i
        * orbsvcs/orbsvcs/Event/EC_Sched_Factory.h
        * orbsvcs/orbsvcs/Event/EC_Sched_Factory.i
        * orbsvcs/orbsvcs/Event/EC_Filter.h
        * orbsvcs/orbsvcs/Event/EC_Filter.i
        * orbsvcs/orbsvcs/Event/EC_Filter_Builder.h
        * orbsvcs/orbsvcs/Event/EC_Filter_Builder.i
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.cpp
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.h
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.i
        * orbsvcs/orbsvcs/Event/EC_Reactive_ConsumerControl.h
        * orbsvcs/orbsvcs/Event/EC_Per_Supplier_Filter.h
        * orbsvcs/orbsvcs/Event/EC_Reactive_ConsumerControl.i
        * orbsvcs/orbsvcs/Event/EC_Per_Supplier_Filter.i
        * orbsvcs/orbsvcs/Event/EC_Null_Scheduling.h
        * orbsvcs/orbsvcs/Event/EC_Null_Scheduling.i
        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.h
        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.i
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.h
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.i
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.cpp
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.inl
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.h
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.i
        * orbsvcs/orbsvcs/Event/EC_Prefix_Filter_Builder.h
        * orbsvcs/orbsvcs/Event/EC_Prefix_Filter_Builder.i
        * orbsvcs/orbsvcs/Event/EC_Null_Scheduling.inl
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.h
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.i
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Factory.cpp
        * orbsvcs/orbsvcs/Event/EC_Sched_Filter_Builder.inl
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.inl
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Scheduling.cpp
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.cpp
        * orbsvcs/orbsvcs/Event/EC_Sched_Factory.cpp
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.inl
        * orbsvcs/orbsvcs/Event/EC_Filter.cpp
        * orbsvcs/orbsvcs/Event/EC_Timeout_Filter.cpp
        * orbsvcs/orbsvcs/Event/EC_Basic_Filter_Builder.inl
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp
        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.inl
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.cpp
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.inl
        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.cpp
        * orbsvcs/orbsvcs/Event/EC_Timeout_Filter.h
        * orbsvcs/orbsvcs/Event/EC_Timeout_Filter.i
        * orbsvcs/orbsvcs/Event/EC_Prefix_Filter_Builder.inl
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.inl
        * orbsvcs/orbsvcs/Event/EC_QOS_Info.inl
        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.inl
        * orbsvcs/orbsvcs/Event/EC_Busy_Lock.cpp
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter_Builder.inl
        * orbsvcs/orbsvcs/Event/EC_Reactive_ConsumerControl.cpp
        * orbsvcs/orbsvcs/Event/EC_Per_Supplier_Filter.cpp
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.h
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.i
        * orbsvcs/orbsvcs/Event/EC_Priority_Scheduling.inl
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.inl
        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.h
        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.i
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.inl
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter.h
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.h
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter.i
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.i
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.inl
        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.inl
        * orbsvcs/orbsvcs/Event/EC_Priority_Scheduling.h
        * orbsvcs/orbsvcs/Event/EC_Priority_Scheduling.i
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Factory.h
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Factory.i
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.cpp
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.h
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.i
        * orbsvcs/orbsvcs/Event/EC_Null_Scheduling.cpp
        * orbsvcs/orbsvcs/Event/EC_QOS_Info.h
        * orbsvcs/orbsvcs/Event/EC_QOS_Info.i
        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.h
        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.inl
        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.i
        * orbsvcs/orbsvcs/Event/EC_Busy_Lock.h
        * orbsvcs/orbsvcs/Event/EC_Busy_Lock.i
        * orbsvcs/orbsvcs/Event/EC_Basic_Filter_Builder.h
        * orbsvcs/orbsvcs/Event/EC_Sched_Filter_Builder.cpp
        * orbsvcs/orbsvcs/Event/EC_Basic_Filter_Builder.i
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxySupplier.inl
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.cpp
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.h
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.i
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter_Builder.h
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter_Builder.i
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.h
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.i
        * orbsvcs/orbsvcs/Event/EC_Filter_Builder.inl
        * orbsvcs/orbsvcs/Event/EC_Basic_Filter_Builder.cpp
        * orbsvcs/orbsvcs/Event/EC_Timeout_Generator.inl
        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.cpp
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter.inl
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.inl
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.inl
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.cpp
        * orbsvcs/orbsvcs/Event/EC_Prefix_Filter_Builder.cpp
        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.h
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.inl
        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.i
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.cpp
        * orbsvcs/orbsvcs/Event/EC_QOS_Info.cpp
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.h
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.i
        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.cpp
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.h
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.i
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.inl
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Scheduling.h
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Scheduling.i
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter_Builder.cpp
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.h
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.i
        * orbsvcs/orbsvcs/Event/EC_Priority_Scheduling.cpp
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Factory.inl
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.cpp
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.h
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.i
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Scheduling.inl
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.inl
        * orbsvcs/orbsvcs/Event/EC_Sched_Factory.inl
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.cpp
        * orbsvcs/orbsvcs/Event/EC_Filter.inl
        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.cpp
        * orbsvcs/orbsvcs/Event/EC_Timeout_Filter.inl
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.inl
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.inl
        * orbsvcs/orbsvcs/Event/EC_Sched_Filter_Builder.h
        * orbsvcs/orbsvcs/Event/EC_Sched_Filter_Builder.i
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.h
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.i
        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.cpp
        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.inl
        * orbsvcs/orbsvcs/Event/EC_Timeout_Generator.h
        * orbsvcs/orbsvcs/Event/EC_Timeout_Generator.i
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxySupplier.cpp
        * orbsvcs/orbsvcs/Scheduler_Factory.cpp
        * orbsvcs/orbsvcs/Event_Utilities.cpp
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.h
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.i
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.cpp
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.inl
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.inl
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.h
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.i
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.inl
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.cpp
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.h
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.i
        * orbsvcs/orbsvcs/Scheduler_Utilities.inl
        * orbsvcs/orbsvcs/Channel_Clients_T.h
        * orbsvcs/orbsvcs/Channel_Clients_T.i
        * orbsvcs/orbsvcs/Time_Utilities.inl
        * orbsvcs/tests/Event/lib/Driver.h
        * orbsvcs/tests/Event/lib/Driver.i
        * orbsvcs/tests/Event/lib/Driver.inl
        * orbsvcs/tests/Event/lib/Driver.cpp
        * orbsvcs/tests/Security/Crash_Test/test_i.inl
        * orbsvcs/tests/Security/Crash_Test/test_i.cpp
        * orbsvcs/tests/Security/Crash_Test/test_i.h
        * orbsvcs/tests/Security/Crash_Test/test_i.i
        * orbsvcs/tests/Security/MT_SSLIOP/test_i.cpp
        * orbsvcs/tests/Security/MT_SSLIOP/test_i.inl
        * orbsvcs/tests/Security/MT_SSLIOP/test_i.h
        * orbsvcs/tests/Security/MT_SSLIOP/test_i.i
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp
        * orbsvcs/tests/EC_Mcast/EC_Mcast.inl
        * orbsvcs/tests/EC_Mcast/EC_Mcast.h
        * orbsvcs/tests/EC_Mcast/EC_Mcast.i
        * orbsvcs/tests/HTIOP/BiDirectional/test_i.cpp
        * orbsvcs/tests/HTIOP/BiDirectional/test_i.inl
        * orbsvcs/tests/HTIOP/BiDirectional/test_i.h
        * orbsvcs/tests/HTIOP/BiDirectional/test_i.i
        * orbsvcs/examples/Security/Send_File/test_i.cpp
        * orbsvcs/examples/Security/Send_File/test_i.inl
        * orbsvcs/examples/Security/Send_File/test_i.h
        * orbsvcs/examples/Security/Send_File/test_i.i
        * tao/Tagged_Components.cpp
        * tao/IIOP_Endpoint.h
        * tao/operation_details.cpp
        * tao/IIOP_Endpoint.i
        * tao/CDR.cpp
        * tao/Tagged_Profile.inl
        * tao/Endpoint.cpp
        * tao/ORB_Core.cpp
        * tao/target_specification.h
        * tao/target_specification.i
        * tao/GIOP_Message_Locate_Header.h
        * tao/Object.inl
        * tao/GIOP_Message_Locate_Header.i
        * tao/Fault_Tolerance_Service.h
        * tao/Fault_Tolerance_Service.i
        * tao/LocalObject.inl
        * tao/Asynch_Reply_Dispatcher_Base.cpp
        * tao/Policy_Set.cpp
        * tao/PortableServer/Servant_Base.cpp
        * tao/PortableServer/POA_Cached_Policies.inl
        * tao/PortableServer/POA_Cached_Policies.h
        * tao/PortableServer/POA_Cached_Policies.i
        * tao/PortableServer/POA_Policy_Set.h
        * tao/PortableServer/POA_Policy_Set.i
        * tao/PortableServer/POAManager.cpp
        * tao/PortableServer/POAManager.h
        * tao/PortableServer/POAManager.i
        * tao/PortableServer/Active_Object_Map.h
        * tao/PortableServer/Active_Object_Map.i
        * tao/PortableServer/Object_Adapter.h
        * tao/PortableServer/Object_Adapter.i
        * tao/PortableServer/POA_Cached_Policies.cpp
        * tao/PortableServer/Active_Object_Map.inl
        * tao/PortableServer/Object_Adapter.inl
        * tao/PortableServer/POA_Policy_Set.inl
        * tao/PortableServer/Servant_Base.inl
        * tao/PortableServer/Active_Object_Map.cpp
        * tao/PortableServer/Object_Adapter.cpp
        * tao/PortableServer/Servant_Base.h
        * tao/PortableServer/Servant_Base.i
        * tao/PortableServer/POAManager.inl
        * tao/PortableServer/POA_Policy_Set.cpp
        * tao/CORBALOC_Parser.cpp
        * tao/IIOP_Endpoint.inl
        * tao/Tagged_Components.h
        * tao/Tagged_Components.i
        * tao/Tagged_Profile.h
        * tao/IIOP_Acceptor.cpp
        * tao/Tagged_Profile.i
        * tao/MCAST_Parser.h
        * tao/Parser_Registry.h
        * tao/MCAST_Parser.i
        * tao/Parser_Registry.i
        * tao/Acceptor_Registry.h
        * tao/Acceptor_Registry.i
        * tao/Buffering_Constraint_Policy.h
        * tao/Buffering_Constraint_Policy.i
        * tao/Exception.h
        * tao/Exception.i
        * tao/Bind_Dispatcher_Guard.inl
        * tao/Stub.cpp
        * tao/MCAST_Parser.cpp
        * tao/Endpoint.h
        * tao/Endpoint.i
        * tao/Exception.inl
        * tao/MProfile.inl
        * tao/params.h
        * tao/params.i
        * tao/Reply_Dispatcher.cpp
        * tao/MProfile.h
        * tao/MProfile.i
        * tao/params.cpp
        * tao/Parser_Registry.cpp
        * tao/target_specification.cpp
        * tao/Policy_Manager.inl
        * tao/GIOP_Message_Locate_Header.inl
        * tao/Asynch_Reply_Dispatcher_Base.h
        * tao/Asynch_Reply_Dispatcher_Base.i
        * tao/Tagged_Components.inl
        * tao/CORBALOC_Parser.h
        * tao/operation_details.inl
        * tao/CORBALOC_Parser.i
        * tao/CDR.inl
        * tao/IIOP_Acceptor.h
        * tao/IIOP_Acceptor.i
        * tao/Reply_Dispatcher.h
        * tao/Reply_Dispatcher.i
        * tao/Leader_Follower.h
        * tao/Leader_Follower.i
        * tao/Endpoint.inl
        * tao/Fault_Tolerance_Service.cpp
        * tao/ORB_Core.inl
        * tao/Profile.cpp
        * tao/Asynch_Reply_Dispatcher_Base.inl
        * tao/Environment.h
        * tao/Policy_Set.inl
        * tao/Environment.i
        * tao/ORB.cpp
        * tao/CORBALOC_Parser.inl
        * tao/IIOP_Acceptor.inl
        * tao/RTPortableServer/RT_POA.cpp
        * tao/RTPortableServer/RT_POA.inl
        * tao/RTPortableServer/RT_POA.h
        * tao/RTPortableServer/RT_POA.i
        * tao/ORB.h
        * tao/ORB.i
        * tao/Leader_Follower.cpp
        * tao/Stub.inl
        * tao/MCAST_Parser.inl
        * tao/Acceptor_Registry.cpp
        * tao/Environment.cpp
        * tao/Profile.h
        * tao/Profile.i
        * tao/Object.h
        * tao/Object.i
        * tao/Stub.h
        * tao/Stub.i
        * tao/Messaging/Messaging_Policy_i.cpp
        * tao/Messaging/Messaging_Policy_i.inl
        * tao/Messaging/Messaging_Policy_i.h
        * tao/Messaging/Messaging_Policy_i.i
        * tao/Policy_Manager.h
        * tao/Policy_Manager.i
        * tao/Reply_Dispatcher.inl
        * tao/Pluggable_Messaging_Utils.cpp
        * tao/Principal.cpp
        * tao/TAO_Server_Request.cpp
        * tao/Connector_Registry.cpp
        * tao/params.inl
        * tao/Parser_Registry.inl
        * tao/target_specification.inl
        * tao/ORB_Core.h
        * tao/ORB_Core.i
        * tao/Connector_Registry.h
        * tao/Connector_Registry.i
        * tao/Strategies/SHMIOP_Endpoint.inl
        * tao/Strategies/SCIOP_Endpoint.cpp
        * tao/Strategies/DIOP_Acceptor.h
        * tao/Strategies/UIOP_Endpoint.h
        * tao/Strategies/DIOP_Acceptor.i
        * tao/Strategies/UIOP_Endpoint.i
        * tao/Strategies/DIOP_Endpoint.inl
        * tao/Strategies/SCIOP_Acceptor.inl
        * tao/Strategies/SHMIOP_Endpoint.h
        * tao/Strategies/SHMIOP_Endpoint.i
        * tao/Strategies/DIOP_Acceptor.cpp
        * tao/Strategies/UIOP_Endpoint.inl
        * tao/Strategies/SHMIOP_Endpoint.cpp
        * tao/Strategies/DIOP_Endpoint.h
        * tao/Strategies/DIOP_Endpoint.i
        * tao/Strategies/SCIOP_Acceptor.h
        * tao/Strategies/SCIOP_Acceptor.i
        * tao/Strategies/SCIOP_Endpoint.inl
        * tao/Strategies/DIOP_Endpoint.cpp
        * tao/Strategies/SCIOP_Acceptor.cpp
        * tao/Strategies/DIOP_Acceptor.inl
        * tao/Strategies/UIOP_Endpoint.cpp
        * tao/Strategies/SCIOP_Endpoint.h
        * tao/Strategies/SCIOP_Endpoint.i
        * tao/Buffering_Constraint_Policy.cpp
        * tao/CDR.h
        * tao/CDR.i
        * tao/Policy_Set.h
        * tao/Policy_Set.i
        * tao/TAO_Server_Request.h
        * tao/Principal.h
        * tao/TAO_Server_Request.i
        * tao/Principal.i
        * tao/Fault_Tolerance_Service.inl
        * tao/Profile.inl
        * tao/Tagged_Profile.cpp
        * tao/Object.cpp
        * tao/RTScheduling/RTScheduler_Manager.inl
        * tao/RTScheduling/RTScheduler_Manager.cpp
        * tao/RTScheduling/RTScheduler_Manager.h
        * tao/RTScheduling/RTScheduler_Manager.i
        * tao/ORB.inl
        * tao/Bind_Dispatcher_Guard.h
        * tao/Bind_Dispatcher_Guard.i
        * tao/LocalObject.cpp
        * tao/Pluggable_Messaging_Utils.h
        * tao/Pluggable_Messaging_Utils.i
        * tao/Leader_Follower.inl
        * tao/Acceptor_Registry.inl
        * tao/IIOP_Endpoint.cpp
        * tao/Environment.inl
        * tao/operation_details.h
        * tao/operation_details.i
        * tao/Bind_Dispatcher_Guard.cpp
        * tao/Pluggable_Messaging_Utils.inl
        * tao/Principal.inl
        * tao/TAO_Server_Request.inl
        * tao/Connector_Registry.inl
        * tao/LocalObject.h
        * tao/LocalObject.i
        * tao/Exception.cpp
        * tao/MProfile.cpp
        * tao/Policy_Manager.cpp
        * tao/Buffering_Constraint_Policy.inl
        * tao/GIOP_Message_Locate_Header.cpp
        * tao/RTCORBA/Network_Priority_Mapping_Manager.inl
        * tao/RTCORBA/Priority_Mapping_Manager.h
        * tao/RTCORBA/Priority_Mapping_Manager.i
        * tao/RTCORBA/Network_Priority_Mapping_Manager.h
        * tao/RTCORBA/Network_Priority_Mapping_Manager.i
        * tao/RTCORBA/Priority_Mapping_Manager.inl
        * tao/RTCORBA/Network_Priority_Mapping_Manager.cpp
        * tao/RTCORBA/Priority_Mapping_Manager.cpp
        * performance-tests/POA/Demux/demux_test_client.cpp
        * performance-tests/POA/Demux/demux_test_client.inl
        * performance-tests/POA/Demux/demux_test_client.i
        * performance-tests/RTCorba/Oneways/Reliable/test_i.cpp
        * performance-tests/RTCorba/Oneways/Reliable/test_i.inl
        * performance-tests/RTCorba/Oneways/Reliable/test_i.h
        * performance-tests/RTCorba/Oneways/Reliable/test_i.i
        * performance-tests/RTCorba/Multiple_Endpoints/Common/test_i.cpp
        * performance-tests/RTCorba/Multiple_Endpoints/Common/test_i.inl
        * performance-tests/RTCorba/Multiple_Endpoints/Common/test_i.h
        * performance-tests/RTCorba/Multiple_Endpoints/Common/test_i.i
        * tests/Faults/ping_i.cpp
        * tests/Faults/ping_i.inl
        * tests/Faults/ping_i.h
        * tests/Faults/ping_i.i
        * tests/Faults/test_i.inl
        * tests/Faults/test_i.cpp
        * tests/Faults/test_i.h
        * tests/Faults/test_i.i
        * tests/Muxed_GIOP_Versions/test_i.cpp
        * tests/Muxed_GIOP_Versions/test_i.inl
        * tests/Muxed_GIOP_Versions/test_i.h
        * tests/Muxed_GIOP_Versions/test_i.i
        * tests/DSI_Gateway/test_dsi.cpp
        * tests/DSI_Gateway/test_dsi.inl
        * tests/DSI_Gateway/test_dsi.h
        * tests/DSI_Gateway/test_dsi.i
        * tests/DSI_Gateway/test_i.inl
        * tests/DSI_Gateway/test_i.cpp
        * tests/DSI_Gateway/test_i.h
        * tests/DSI_Gateway/test_i.i
        * tests/MT_Client/test_i.inl
        * tests/MT_Client/test_i.cpp
        * tests/MT_Client/test_i.h
        * tests/MT_Client/test_i.i
        * tests/OctetSeq/test_i.inl
        * tests/OctetSeq/test_i.cpp
        * tests/OctetSeq/test_i.h
        * tests/OctetSeq/test_i.i
        * tests/BiDirectional_DelayedUpcall/test_i.cpp
        * tests/BiDirectional_DelayedUpcall/test_i.inl
        * tests/BiDirectional_DelayedUpcall/test_i.h
        * tests/BiDirectional_DelayedUpcall/test_i.i
        * tests/MT_Server/test_i.cpp
        * tests/MT_Server/test_i.inl
        * tests/MT_Server/test_i.h
        * tests/MT_Server/test_i.i
        * tests/BiDirectional/test_i.cpp
        * tests/BiDirectional/test_i.inl
        * tests/BiDirectional/test_i.h
        * tests/BiDirectional/test_i.i
        * tests/Strategies/simple_test_i.cpp
        * tests/Strategies/simple_test_i.inl
        * tests/Strategies/simple_test_i.h
        * tests/Strategies/simple_test_i.i
        * tests/MProfile_Forwarding/test_i.cpp
        * tests/MProfile_Forwarding/test_i.inl
        * tests/MProfile_Forwarding/test_i.h
        * tests/MProfile_Forwarding/test_i.i
        * tests/Native_Exceptions/test_i.cpp
        * tests/Native_Exceptions/test_i.inl
        * tests/Native_Exceptions/test_i.h
        * tests/Native_Exceptions/test_i.i
        * tests/Forwarding/test_i.cpp
        * tests/Forwarding/test_i.inl
        * tests/Forwarding/test_i.h
        * tests/Forwarding/test_i.i
        * tests/BiDirectional_NestedUpcall/test_i.cpp
        * tests/BiDirectional_NestedUpcall/test_i.inl
        * tests/BiDirectional_NestedUpcall/test_i.h
        * tests/BiDirectional_NestedUpcall/test_i.i
        * TAO_IDL/fe/fe_lookup.cpp
        * examples/Kokyu_dsrt_schedulers/fp_example/test_i.cpp
        * examples/Kokyu_dsrt_schedulers/fp_example/test_i.inl
        * examples/Kokyu_dsrt_schedulers/fp_example/test_i.h
        * examples/Kokyu_dsrt_schedulers/fp_example/test_i.i
        * examples/Kokyu_dsrt_schedulers/mif_example/test_i.cpp
        * examples/Kokyu_dsrt_schedulers/mif_example/test_i.inl
        * examples/Kokyu_dsrt_schedulers/mif_example/test_i.h
        * examples/Kokyu_dsrt_schedulers/mif_example/test_i.i
        * examples/Kokyu_dsrt_schedulers/muf_example/test_i.cpp
        * examples/Kokyu_dsrt_schedulers/muf_example/test_i.inl
        * examples/Kokyu_dsrt_schedulers/muf_example/test_i.h
        * examples/Kokyu_dsrt_schedulers/muf_example/test_i.i

          Moved .i to .inl, and updated the associated header and source files.

Thu Jul 27 19:21:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO-INSTALL.html:
          Updated to use subversion and updated minimum corba documentation

Thu Jul 27 18:59:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/minimumTAO.html:
          Fixed some incorrect hyperlinks

Thu Jul 27 18:07:44 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO_ACE.mwc

          Replaced relative reference to ACE with an environment variable.
          This is necessary to allow TAO to build in flattened repo layout.

Wed Jul 26 07:59:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO-INSTALL.html:
        * tao/Transport.h:
        * docs/releasenotes/ftcorba_services.html:
        * docs/Security/SSLIOP-Usage.html:
          Updated documentation to point to the new svn repository

Mon Jul 24 21:54:22 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/HTIOP/htiop_endpointsC.cpp
        * orbsvcs/orbsvcs/HTIOP/htiop_endpointsC.h
        * orbsvcs/orbsvcs/SSLIOP/ssl_endpointsC.h
        * orbsvcs/orbsvcs/SSLIOP/ssl_endpointsC.cpp
        * tao/RTScheduling/RTSchedulerC.cpp
        * tao/RTScheduling/RTSchedulerC.h

          Removed these, they were kept around erroneously.

        * ./TAO/performance-tests/AMI_Latency
        * ./TAO/performance-tests/Deferred_Latency
        * ./TAO/performance-tests/DII_Latency
        * ./TAO/performance-tests/DSI_Latency
        * ./TAO/performance-tests/Single_Threaded_Latency
        * ./TAO/performance-tests/Thread_Per_Connection_Latency
        * ./TAO/performance-tests/Thread_Pool_Latency

          Removed these directories, which had been previously merged into
          performance-tests/Latency

Mon Jul 24 19:02:33 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO/RTScheduling/RTSchedulerA.h

          Should not have been removed.

Mon Jul 24 18:52:33 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO/RTScheduling/RTSchedulerA.cpp

          Removed, these were kept around erroneously by the conversion script.

Mon Jul 24 17:39:38 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/fe/fe_lookup.cpp

          Re committing this file, as the subversion script probably backdated
          the timestamp on the file, which was causing it to be regenerated as
          part of the build process.

Mon Jul 24 15:45:34 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * Subversion conversion completed at revision 73730

Sun Jul 23 15:44:43 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * Repository frozen for repository conversion

Sat Jul 22 11:16:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/QtTests/client.cpp:
          Updated include because of QtResource move

Fri Jul 21 14:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Reliable_Oneways/server.cpp:
          Initialise pointer with 0

Fri Jul 21 14:13:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/RTScheduling/Current/Thread_Task.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:
          Simplified printing the elements of a string sequence

Fri Jul 21 14:09:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/PICurrent/client.cpp:
        * tests/Portable_Interceptors/PICurrent/test.idl:
        * tests/Portable_Interceptors/PICurrent/test_i.{h,cpp}:
          Extended this test

Fri Jul 21 13:27:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Connection_Timeout/Connection_Timeout.mpc:
          Simplified this file

Fri Jul 21 13:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2503_Regression/client.cpp:
        * tests/Bug_2503_Regression/server.cpp:
        * tests/Bug_2503_Regression/Test.idl:
        * tests/Bug_2503_Regression/test_i.{h,cpp}:
          Extended this test in such a way that the client does a shutdown
          invocation on the server when it is ready.

Fri Jul 21 12:05:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1551_Regression/Reply_Handler.cpp:
          At the moment there is a bug in the AMI code it could happen that
          the exception holder pointer is nill, in that case print an error
          message instead of trying to invoke a method on it. This shouldn't
          normally happen, but makes it a lot easier to analyze the problem
          because we now just get an error message instead of an access
          violation.

Fri Jul 21 11:48:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Notify/lib/Peer.cpp:
          Removed include of Arg_Shifter.h, it is already done in the header
          file

Fri Jul 21 08:40:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/catior/catior.cpp:
          Added needed include to build catior when IIOP has been disabled
          in the orb

        * tao/Object_T.cpp:
          Const improvements, use true/false for bool

Fri Jul 21 07:40:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/UIOP_Profile.cpp:
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Strategies/SCIOP_Profile.cpp:
          Use true/false instead of 1/0

Fri Jul 21 07:31:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Load_Protocol_Factory_T.h:
          Added missing return statement

Thu Jul 20 20:38:08 UTC 2006  Shanshan Jiang <shanshan.jiang@vanderbilt.edu>

        * docs/tutorials/Quoter/RTCORBA/Broker.cpp
        * docs/tutorials/Quoter/RTCORBA/Broker_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Broker_i.h
        * docs/tutorials/Quoter/RTCORBA/Common_i.h
        * docs/tutorials/Quoter/RTCORBA/Distributor_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Distributor_i.h
        * docs/tutorials/Quoter/RTCORBA/Stock_Database.cpp
        * docs/tutorials/Quoter/RTCORBA/Stock_Database.h
        * docs/tutorials/Quoter/RTCORBA/Stock_PriorityMapping.cpp
        * docs/tutorials/Quoter/RTCORBA/Stock_PriorityMapping.h

          Fixed some errors. Addressed the comments from Will.

Thu Jul 20 13:16:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Profile.cpp (do_is_equivalent):
          Use true/false

Thu Jul 20 12:36:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/DIOP_Endpoint.{h,cpp}:
          Made object_addr_set_ a bool instead of int

Thu Jul 20 12:34:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/DIOP_Endpoint.h:
          Removed commented out method

Thu Jul 20 12:26:59 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * tests/Bug_2549_Regression/test.idl:

          Replace <> with "" to fix fuxx error.

Thu Jul 20 11:38:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Load_Protocol_Factory_T.h:
          New template method that can be used to load a specific pluggable
          protocol.

        * tao/tao.mpc:
          Added new file

        * tao/default_resource.cpp:
        * tao/Strategies/advanced_resource.cpp:
          Use the new template method to load the pluggable protocols. This
          way we can remove a lot of duplicated code that was copied just for
          each specific protocol.

Thu Jul 20 10:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/DIOP_Transport.h:
          Removed commented out methods

Thu Jul 20 10:00:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/tao.mpc:
        * tao/EndpointPolicy.mpc:
          Add tao_no_iiop as base project, when we enable this feature these
          projects are affected

        * tao/IIOP.pidl:
        * tao/EndpointPolicy/IIOPEndpointValue.pidl:
          Guard this with !TAO_LACKS_IIOP, when tao_no_iiop is enabled as MPC
          feature we don't generate code for these files.

        * tao/Endpoint_Acceptor_Filter.cpp:
          No need to include IIOP specific files, base classes are all we need
          here.

        * tao/EndpointPolicy/IIOPEndpointValue_i.{h,cpp}:
          Don't compile these files when IIOP is disabled.

Thu Jul 20 08:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1639_Regression/struct_client.cpp:
        * tests/DynAny_Test/test_dynany.cpp:
        * tests/DynAny_Test/analyzer.h:
          Reordered includes to fix problems with gcc4

Thu Jul 20 07:08:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/IDL_Test.mpc:
          Added regression for bug 2582 again

Thu Jul 20 03:43:30 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * docs/tutorials/Quoter/RTCORBA/Broker_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Distributor_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Stock_Database.cpp

          Added some comments for Shanshan.

Wed Jul 19 22:44:16 UTC 2006  Ciju John  <johnc@ociweb.com>

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/SimpleAddressServer.h:

          Add version macros.

Wed Jul 19 22:28:50 UTC 2006  Ciju John  <johnc@ociweb.com>

        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:

          The open() initializes the underlying socket that is later
          enabled to be non-blocking. Without open() the enable call will
          fail as it should. This fixes the scoreboard failure introduced
          in:

          Mon Jul 17 14:26:08 UTC 2006  Ciju John  <john_c@ociweb.com>

Wed Jul 19 19:20:28 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be_include/be_global.h:
        * docs/compiler.html:
        * docs/releasenotes/index.html:

          - Added IDL compiler command line option -oS, which sets an
            output directory for all skeleton (*S*) files, similar to what
            the -oA option does for *A.* files. Overrides the -o option
            value, if any. Also updated IDL compiler and related docs.
            This feature will make it easier to automate the generation
            from IDL files for services like the Interface Repository,
            where the stub and skeleton files go to different directories.
            This fix closes [BUGID:2603].

          - Changed all occurrences of 'base_name_only' parameters from
          int to bool.

Wed Jul 19 17:49:47 UTC 2006  Nanbor Wang  <nanbor (a) txcorp (d) com>

        * orbsvcs/examples/FaultTolerance/RolyPoly/client.cpp: Enhanced
          the client to use more than 2 replicas.  The limitation of using
          2 replicas was causing the client to exit when one of the server
          crashes.  This is due to the way ACE_TMCase handling a single
          server as a fault.  But allowing more than 2 replicas, the 2
          remaining servers can continue to work and thus demonstrate how
          FT work.

        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly_i.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly_i.h:
          Minor fixup to throw spec.

Wed Jul 19 17:07:12 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_arg_traits.cpp:

          Fixed bug in the logic of the decisioin whether or not to generate
          the arg traits template specialization for a typedef. This fix
          addresses the reopening of [BUGID:2582], which will now be set
          to FIXED unless and until another bug is found.

Wed Jul 19 17:21:38 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Connection_Manager.cpp
          (load_ep_addr):

          Use new ACE_CString::size_type type to hold string
          position/index value, instead of "int".  Addresses "comparison
          between signed and unsigned" warnings.

        * tao/Strategies/DIOP_Acceptor.cpp (parse_options):
        * tao/Strategies/SCIOP_Acceptor.cpp (parse_options):
        * tao/Strategies/SHMIOP_Acceptor.cpp (parse_options):
        * tao/Strategies/UIOP_Acceptor.cpp (parse_options):

          Applied Ciju's substring fix.  See "Tue Jul 18 21:38:55 UTC 2006
          Ciju John  <johnc@ociweb.com>" below for details.

Wed Jul 19 15:52:11 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/IDL_Test/anonymous.idl:
        * tests/IDL_Test/typedef.idl:
        * tests/IDL_Test/valuetype.idl:

          Entries to test sequence of valuetype as valuetype member
          and typedefs of string with the same bound repeated in
          different compilation units that are linked in the same
          build.

Wed Jul 19 15:03:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbscvs/orbsvcs/IFRService/*S.h:
          Replace ace\pre.h with ace/pre.h, seems generation with MPC is
          dependent on windows or linux

Wed Jul 19 13:18:41 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Codeset/Codeset_Descriptor.cpp:
        * tao/Codeset/UTF16_BOM_Translator.cpp:

          Added static casts to remove build warnings from some 64-bit
          compilers where unsigned long and ACE_CDR::ULong were mixed.
          It was necessary to use static_cast<> as the size of the data in
          most cases needed to be size_t/unsigned long.

Wed Jul 19 12:31:50 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tao/LocalObject.cpp:
        * tao/ORB.h:
        * tao/ORB.i:
        * tao/ORB_Core.h:
        * tao/ORB_Core.i:
        * tao/Principal.h:
        * tao/Principal.i:
        * tao/Profile.h:
        * tao/Profile.cpp:

          In my change from Mon Jul 17 14:40:43 UTC 2006, I modified these
          files to use an ACE_Atomic_Op<> with an unsigned long.  They all
          had instances where unsigned long and CORBA::ULong were being
          mixed which causes warnings with some 64-bit compilers.  I have
          modified these to all use unsigned long in places where
          CORBA::ULong was previously used.

Wed Jul 19 12:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbscvs/orbsvcs/IFRService/*.S*.*:
          Regenerated these files

        * tao/IFR_Client.mpc:
          Only use the stub export tao_idl options

Wed Jul 19 10:23:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTScheduler.mpc:
          Enabled regeneration of the pidl file

        * tao/RTScheduling/RTSchedulerA.cpp:
        * tao/RTScheduling/RTSchedulerC.cpp:
        * tao/RTScheduling/RTSchedulerC.h:
        * tao/RTScheduling/RTSchedulerS.h:
          Removed from the repo

Wed Jul 19 10:03:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_module.cpp:
        * TAO_IDL/be/be_visitor_module/module.cpp:
        * TAO_IDL/be_include/be_visitor_module/module.h:
          Support generating native within a module

Wed Jul 19 08:45:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * utils/nslist/nslist.cpp:

          Bug fix for over optimizing Borland compiler.

Wed Jul 19 08:03:36 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * tao/CodecFactory/IOP_CodecA.h:
        * tao/ObjRefTemplate/ObjectReferenceTemplateA.h:
        * tao/PortableServer/PortableServerA.h:
        * tao/RTCORBA/RTCORBAA.h:
        * tao/RTCORBA/RTCORBAS.h:
        * tao/RTPortableServer/RTPortableServerA.h:
        * tao/RTPortableServer/RTPortableServer_includeA.h:
        * tao/RTScheduling/RTSchedulerA.h:
        * tao/RTScheduling/RTSchedulerS.h:

          Added these 'empty' files. Works around problems with the IDL
          preprocessing. This fixes bug #2549. See ticket for more.

        * tests/Bug_2549_Regression/Bug_2549_Regression.mpc:
        * tests/Bug_2549_Regression/README:
        * tests/Bug_2549_Regression/test.cpp:
        * tests/Bug_2549_Regression/test.idl:

          Compile only regression test for the above fix.

Wed Jul 19 08:08:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_native/native_ch.cpp:
          Add generation for CORBA::VoidData which is a native that is used
          in the RTScheduling library.

Tue Jul 18 21:38:55 UTC 2006  Ciju John  <johnc@ociweb.com>

        * tao/IIOP_Acceptor.cpp:

          substring() 2nd parameter is supposed to be the relative
          length, not the absolute position as before.

Tue Jul 18 14:21:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/HTIOP.mpc:
          Simplified this file

        * orbsvcs/orbsvcs/SSLIOP.mpc:
          Regenerate the pidl file

        * orbsvcs/orbsvcs/SSLIOP/ssl_endpointsC.{h,cpp}:
          Removed from the repo

Tue Jul 18 13:51:09 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/tests/CosEvent/Timeout/Timeout.mpc:
          Added the "threads" base project to exclude this test from single-
          threaded builds.

Tue Jul 18 11:19:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/VarOut_T.inl:
          Fixed bug 2595, when the _var is nil and the .out() is invoked
          we have to allocate a new instance instead of deference a
          nill pointer. This matches the latest CORBA C++ mapping, thanks
          to Abdul Sowayan <abdullah dot sowayan at lmco dot com> for
          reporting this bug

Tue Jul 18 10:29:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2595_Regression/*
          New regression for bug 2595, not fixed yet, makes it possible
          to retest things on linux before we enable this test in
          the regression suite

Tue Jul 18 10:29:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1639_Regression/struct_client.cpp:
        * tests/DynAny_Test/test_dynany.h:
          Fixed compile errors with gcc4

Tue Jul 18 10:01:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.cpp:
          Use true/false

        * orbsvcs/orbsvcs/SSLIOP/ssl_endpoints.pidl:
          Updated comments

Tue Jul 18 09:55:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Acceptor.cpp:
          Const improvement

Tue Jul 18 09:37:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/HTIOP.mpc:
          Enabled regeneration of the pidl file

        * orbsvcs/orbsvcs/HTIOP/htiop_endpoints.pidl:
          Updated comments

        * orbsvcs/orbsvcs/HTIOP/htiop_endpointsC.{h,cpp}:
          Removed from the repo

Tue Jul 18 09:29:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/QtTests/server.cpp:
        * tests/FL_Cube/client.cpp:
          Fixed include paths because resource factories got moved

Tue Jul 18 08:15:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * orbsvcs/orbsvcs/Naming/Storable.h:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:

          Fix bugzilla 2600 - Naming Service Flat File Persistance with
          Federated naming contexts.

Mon Jul 17 18:35:32 UTC 2006  Shanshan Jiang <shanshan.jiang@vanderbilt.edu>

        * docs/tutorials/Quoter/RTCORBA/Admin.cpp
        * docs/tutorials/Quoter/RTCORBA/Broker.cpp
        * docs/tutorials/Quoter/RTCORBA/Broker_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Broker_i.h
        * docs/tutorials/Quoter/RTCORBA/Common_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Common_i.h
        * docs/tutorials/Quoter/RTCORBA/Distributor.cpp
        * docs/tutorials/Quoter/RTCORBA/Distributor_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Distributor_i.h
        * docs/tutorials/Quoter/RTCORBA/Stock_Database.cpp
        * docs/tutorials/Quoter/RTCORBA/Stock_Database.h

        * docs/tutorials/Quoter/RTCORBA/docs/broker.html
        * docs/tutorials/Quoter/RTCORBA/docs/common.html
        * docs/tutorials/Quoter/RTCORBA/docs/database.html
        * docs/tutorials/Quoter/RTCORBA/docs/distributor.html
        * docs/tutorials/Quoter/RTCORBA/docs/idl.html
        * docs/tutorials/Quoter/RTCORBA/docs/run.html

          Make some minor changes.

Mon Jul 17 17:49:41 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * examples/POA/On_Demand_Loading/Servant_Manager.cpp:
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
        * orbsvcs/orbsvcs/AV/AV_Core.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor.cpp:
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:
        * orbsvcs/ImplRepo_Service/utils.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Connection_Manager.cpp:
        * orbsvcs/tests/InterfaceRepo/Application_Test/test_i.cpp:
        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/UIOP_Acceptor.cpp:

          Use new ACE_CString::size_type type to hold string
          position/index value, instead of "int".  Addresses "comparison
          between signed and unsigned" warnings.

Mon Jul 17 14:46:26 UTC 2006  Ciju John  <johnc@ociweb.com>

        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:

          Replaced deprecated call to ACE_SOCK_Dgram_Mcast::subscribe()
          with ACE_SOCK_Dgram_Mcast::join(). Thanks to Johnny for pointing
          this out.

Mon Jul 17 14:40:43 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/be/be_visitor_union/union_cs.cpp:

          The memset of the discriminator was redundant as it is assigned
          directly after the memset of the union data.

        * tao/CDR.h:
        * tao/CDR.cpp:

          Added a constructor that takes an ACE_Data_Block* which can be
          used to avoid an allocation while constructing the
          ACE_Message_Block held by the ACE_OutputCDR. [RT 8372]

        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.h:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:

          Use the new inline TAO_ServerRequest constructor.  This avoids
          having to allocate a costly dummy input and output cdr.

          Avoid using ACE_CString for the operation name which will avoid
          memory allocations when it isn't necessary.  Most of the time, the
          operation name can be shared from the operation_details_ object.

          When the type of TAO_Tagged_Profile::type_id_ changed in the
          previous commit, the cloning needed to take that into account.
          [RT 8372]

          When cloning the operation details, allocate an input cdr with a
          "large" message block that will be shared by the output cdr as
          the marshaling of the arguments is done.  This allows us to
          avoid the copying of the data block, in most situations, from the
          output cdr into the input cdr as was done in the previous version.
          [RT 8372]

        * tao/CSD_ThreadPool.mpc:

          Added a requires for threads as this project shouldn't be built if
          thread support is not going to be built into TAO.

        * tao/Client_Strategy_Factory.h:
        * tao/Client_Strategy_Factory.cpp:
        * tao/Configurable_Refcount.h:
        * tao/Configurable_Refcount.inl:
        * tao/Configurable_Refcount.cpp:
        * tao/Object.h:
        * tao/Object.i:
        * tao/Object.cpp:
        * tao/Profile.h:
        * tao/Profile.cpp:
        * tao/Resource_Factory.h:
        * tao/Resource_Factory.cpp:
        * tao/default_client.h:
        * tao/default_client.cpp:
        * tao/default_resource.h:
        * tao/tao.mpc:

          The TAO_Configurable_Refcount can be used as an ACE_Atomic_Op with
          either a null mutex or a thread mutex.  Those classes that use it
          used to use either a null mutex or a thread mutex and an integer
          based reference count.

        * tao/GIOP_Message_Base.cpp:

          When processing a request, a character buffer is allocated on the
          stack.  Previously, it was passed as a parameter to the
          TAO_OutputCDR and an ACE_Data_Block was heap allocated during the
          construction of the ACE_Message_Block held by the ACE_OutputCDR.

          Now, the ACE_Data_Block is constructed on the stack as well and
          passed in during the construction of the ACE_Message_Block to
          avoid heap allocations altogether. [RT 8372]

        * tao/GIOP_Message_Lite.cpp:
        * tao/Incoming_Message_Queue.h:
        * tao/Incoming_Message_Queue.cpp:

          Factored various forms of creating a TAO_Queued_Data (with and
          without an ACE_Message_Block) into a single method.  Doing this
          allows us to avoid extra manipulations of the reference count in
          the ACE_Data_Block involved.

        * tao/Environment.i:
        * tao/Leader_Follower.cpp:
        * tao/TAO_Singleton_Manager.cpp:
        * tao/Var_Size_Argument_T.cpp:
        * tao/default_resource.cpp:
        * tao/IORTable/Table_Adapter.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:

          Replace many instances of the use of a bare 'new' with the
          equivalent ACE_NEW or ACE_NEW_RETURN macro. [RT 8372]

        * tao/LocalObject.h:
        * tao/Principal.h:
        * tao/Stub.h:
        * tao/Stub.cpp:
        * tao/AnyTypeCode/Any_Impl.h:
        * tao/AnyTypeCode/NVList.h:
        * tao/Messaging/AMH_Response_Handler.cpp:
        * tao/Valuetype/ValueBase.h:

          Use unsigned long instead of CORBA::ULong to be able to take
          advantage of the ACE_Atomic_Op<> template specialization.
          CORBA::ULong doesn't necessarily equate to unsigned long.

        * tao/ORB.h:
        * tao/ORB.i:
        * tao/ORB.cpp:
        * tao/ORB_Core.h:
        * tao/ORB_Core.i:

          Switch from using a thread mutex and CORBA::ULong to an
          ACE_Atomic_Op<> with a thread mutex and unsigned long.  When the
          assembler based specialization of ACE_Atomic_Op<> is used, there
          is a performance benefit.

        * tao/PortableServer/POA_Current_Impl.h:
        * tao/PortableServer/POA_Current_Impl.inl:
        * tao/PortableServer/POA_Current_Impl.cpp:
        * tao/PortableServer/Servant_Upcall.h:
        * tao/PortableServer/Servant_Upcall.cpp:

          Use an octet sequence array of a specific size (512 bytes by
          default) when constructing the ObjectId.  This allows us to avoid
          allocations during an upcall in most situations. [RT 8372]

        * tao/PortableServer/Root_POA.cpp:

          Begin the starting_at index at the TAO_OBJECTKEY_PREFIX_SIZE
          instead of starting it at zero and then adding the value directly
          after that.  This is probably immeasurable performance-wise.

        * tao/TAO_Server_Request.h:
        * tao/TAO_Server_Request.i:
        * tao/TAO_Server_Request.cpp:

          Avoid using ACE_CString for the operation name which will avoid
          memory allocations when it isn't necessary.  Most of the time, the
          operation name can be shared from the operation_details_ object.

        * tao/Tagged_Profile.h:
        * tao/Tagged_Profile.i:
        * tao/Tagged_Profile.cpp:

          Avoid using ACE_CString as the type_id_.  The type_id_ was never
          used for anything more than a holder of a char* that it didn't
          own, but incurred allocation penalties during construction.

Mon Jul 17 14:26:08 UTC 2006  Ciju John  <john_c@ociweb.com>

        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:

          Addendum to
          Fri Jul 14 18:34:41 UTC 2006  john_c  <johnc@ociweb.com>

          Previously the code created a connection, then made the socket
          non-blocking. This change first make the socket
          non-blocking then initiates the connection. Previous code left a
          small window, which I think was causing a hangup in certain
          conditions.

Mon Jul 17 13:15:58 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/examples/ORT/client.cpp:

          Modified this code to correctly utilize the exception macros.  It
          was using ACE_TRY_ENV as a parameter to CORBA::ORB_init().

Mon Jul 17 12:55:48 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Event/Mcast/Complex/consumer.cpp:

          Modified this code to correctly utilize the exception macros.  It
          was using ACE_TRY_ENV as a parameter to CORBA::ORB_init().

Mon Jul 18 11:37:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies.mpc:
          Enabled regeneration of the pidl files

        * tao/Strategies/sciop_endpoints.pidl:
        * tao/Strategies/uiop_endpoints.pidl:
          Updated comments block to resolve warnings during recompilation

        * tao/Strategies/uiop_endpointsC.{h,cpp}:
        * tao/Strategies/sciop_endpointsC.{h,cpp}:
          Removed from the repo

Mon Jul 18 11:00:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype/ValueBase.{h,cpp}:
          Removed typecode for ValueModifier, it is also in the AnyTypeCode
          library but it seems that in the handcrafted code the export
          of this typecode was gone, now we regenate things automatically
          some linkers complain about the duplicate symbols

Mon Jul 18 10:10:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicAny/*.cpp:
          Reordered includes and added missing includes to fix compile
          errors with gcc

Mon Jul 17 09:50:45 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/tests/CosEvent/Timeout/TimeoutTestMain.cpp:
          Eliminate warning with String_var usage on GCC 2.96.

Mon Jul 18 07:58:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IFR_Client.mpc:
          Removed -Sorb, gives problems for users of this lib

Sun Jul 17 06:49:21 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/PortableServer/Servant_var.inl (_retn):

          Removed extraneous "this" pointer usage on local variable.

Mon Jul 17 00:20:29 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * NEWS:
          Added news entry re Bug 2593.

Sun Jul 16 23:28:27 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Factory.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullConsumer.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullConsumer.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushConsumer.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.cpp:

          Change method signatures to pass ACE_Time_Value by const-reference.

Sat Jul 15 22:08:58 UTC 2006  Shanshan Jiang <shanshan.jiang@vanderbilt.edu>

        * docs/tutorials/Quoter/RTCORBA/Admin.cpp
        * docs/tutorials/Quoter/RTCORBA/Broker.cpp
        * docs/tutorials/Quoter/RTCORBA/Broker_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Broker_i.h
        * docs/tutorials/Quoter/RTCORBA/Common_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Common_i.h
        * docs/tutorials/Quoter/RTCORBA/Distributor.cpp
        * docs/tutorials/Quoter/RTCORBA/Distributor_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Distributor_i.h
        * docs/tutorials/Quoter/RTCORBA/Stock_Database.cpp
        * docs/tutorials/Quoter/RTCORBA/Stock_Database.h
        * docs/tutorials/Quoter/RTCORBA/Stock_PriorityMapping.h

        * docs/tutorials/Quoter/RTCORBA/docs/broker.html
        * docs/tutorials/Quoter/RTCORBA/docs/common.html
        * docs/tutorials/Quoter/RTCORBA/docs/database.html
        * docs/tutorials/Quoter/RTCORBA/docs/distributor.html
        * docs/tutorials/Quoter/RTCORBA/docs/index.html
        * docs/tutorials/Quoter/RTCORBA/docs/mpc.html

          Modify these files based on the suggestions of William R. Otte.

Sat Jul 15 12:25:11 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_1393_Regression/client.cpp:
        * orbsvcs/tests/Bug_1630_Regression/testclient.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/main.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.h:
        * orbsvcs/tests/InterfaceRepo/Persistence_Test/Ptest.h:
          Added needed include

Sat Jul 15 05:07:11 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * docs/tutorials/Quoter/index.html

          Added a link to the RTCORBA tutorial.

        * docs/tutorials/Quoter/RTCORBA/Broker.idl
        * docs/tutorials/Quoter/RTCORBA/Common.idl
        * docs/tutorials/Quoter/RTCORBA/Distributor.idl

          Corrected IDL files which had been corrupted by overzealous
          removal of DOS style line endings.

Sat Jul 15 00:47:30 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/IDL_Test.mpc:
          Disabled the regression for bug 2582, I tested it weeks ago and
          it worked, but now it fails when I added the test

Sat Jul 15 00:42:30 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/tao.mpc:
          Fixed casing of include

Fri Jul 14 23:44:45 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/Utils/Servant_Var.h:

          Removed "#warning" preprocess directive.  It's not portable.
          Thanks to Jeff for pointing this out.

Fri Jul 14 23:42:30 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          When generating a pidl file change the guard we generate in the
          header file. Fixes problems with TimeBase.pidl and TimeBase.idl
          which both exist.

Fri Jul 14 21:43:55 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IIOP_Acceptor.cpp (parse_address):
          Reverted change at Johnny's request. See bug 2599 for a
          discussion of the reason why.

Fri Jul 14 21:43:58 UTC 2006  john_c  <johnc@ociweb.com>

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventConsumer_i.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventSupplierMain.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventSupplier_i.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/RTEC_MCast_Federated.mpc:
        * tests/Optimized_Connection/oc_client.cpp:

          Minor fixes to make Fuzz builds happy.

Fri Jul 14 21:42:30 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/BooleanSeqA.*
        * tao/AnyTypeCode/CharSeqA.*
        * tao/AnyTypeCode/CONV_FRAMEA.*
        * tao/AnyTypeCode/CurrentA.*
        * tao/AnyTypeCode/DoubleSeqA.*
        * tao/AnyTypeCode/FloatSeqA.*
        * tao/AnyTypeCode/GIOPA.*
        * tao/AnyTypeCode/IIOP_EndpointsA.*
        * tao/AnyTypeCode/IIOPA.*
        * tao/AnyTypeCode/IOP_IORA.*
        * tao/AnyTypeCode/IOPA.*
        * tao/AnyTypeCode/LongDoubleSeqA.*
        * tao/AnyTypeCode/LongLongSeqA.*
        * tao/AnyTypeCode/LongSeqA.*
        * tao/AnyTypeCode/Messaging_PolicyValueA.*
        * tao/AnyTypeCode/Messaging_SyncScopeA.*
        * tao/AnyTypeCode/ObjectIdListA.*
        * tao/AnyTypeCode/orb_typesA.*
        * tao/AnyTypeCode/ParameterModeA.*
        * tao/AnyTypeCode/PI_ForwardA.*
        * tao/AnyTypeCode/Policy_ForwardA.*
        * tao/AnyTypeCode/PortableInterceptorA.*
        * tao/AnyTypeCode/ServicesA.*
        * tao/AnyTypeCode/ShortSeqA.*
        * tao/AnyTypeCode/TAOA.*
        * tao/AnyTypeCode/TimeBaseA.*
        * tao/AnyTypeCode/ULongLongSeqA.*
        * tao/AnyTypeCode/ULongSeqA.*
        * tao/AnyTypeCode/WCharSeqA.*
        * tao/AnyTypeCode/WStringSeqA.*
        * tao/BooleanSeqC.*
        * tao/CharSeqC.*
        * tao/CONV_FRAMEC.*
        * tao/CurrentC.*
        * tao/DoubleSeqC.*
        * tao/FloatSeqC.*
        * tao/GIOPC.*
        * tao/IIOP_EndpointsC.*
        * tao/IIOPC.*
        * tao/IOP_IORC.*
        * tao/IOPC.*
        * tao/LongDoubleSeqC.*
        * tao/LongLongSeqC.*
        * tao/LongSeqC.*
        * tao/Messaging_PolicyValueC.*
        * tao/Messaging_SyncScopeC.*
        * tao/ObjectIdListC.*
        * tao/orb_typesC.*
        * tao/ParameterModeC.*
        * tao/PI_ForwardC.*
        * tao/Policy_ForwardC.*
        * tao/PortableInterceptorC.*
        * tao/ServicesC.*
        * tao/ShortSeqC.*
        * tao/StringSeqC.*
        * tao/TAOC.*
        * tao/TimeBaseC.*
        * tao/ULongLongSeqC.*
        * tao/ULongSeqC.*
        * tao/WCharSeqC.*
        * tao/WStringSeqC.*
          Removed from the repo, all regenerated as part of the build

        * tao/tao.mpc:
          Enabled regeneration for a lot of pidl files

        * tao/DynamicAny/diffs/DynamicAny.diff:
          Removed, not needed anymore

Fri Jul 14 21:10:30 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicAny.mpc:
          Enabled regeneration of the pidl files

        * tao/DynamicAny/DynamicAnyC.{h,cpp}:
          Removed from the repo, will get regenerated automatically

        * tao/*Resource*.*:
          Moved the different resources files (Qt,Fl,Tk, and Xt) to
          subdirectories so that in TAO/tao we only have the tao lib
          core

Fri Jul 14 21:15:32 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * TAO_IDL/ast/ast_decl.cpp (version):
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:
        * tao/Acceptor_Registry.cpp:
        * tao/CORBANAME_Parser.cpp:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Endpoint.cpp:
        * tao/IIOP_Profile.cpp:
        * tao/Transport_Connector.cpp:
        * tao/params.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Strategy_Factory.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:

          ACE string class  operations now consistently return and accept an
          unsigned index/position value instead of a mix of signed and
          unsigned return index types.  Use the "size_type" typedef
          instead of int or ssize_t, and the "npos" constant instead of
          "-1".

        * TAO_IDL/fe/fe_init.cpp:

          Use ACE_CString::npos instead of ACE_String_Base_Const::npos.
          The latter is not meant for use outside of ACE.

        * orbsvcs/Trading_Service/Trading_Service.h:
        * orbsvcs/orbsvcs/Shutdown_Utilities.h:

          Include "ace/Sig_Handler.h" to pull in ACE_Sig_Handler class
          declaration.

        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.h:

          Moved TAO_Notify_ProxySupplier forward declaration within the
          TAO versioned namespace.

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Accept_Strategy.cpp
          (accept_svc_handler):

          Ensure that errno is preserved in case the svc_handler close()
          method resets it.

        * orbsvcs/tests/CosEvent/lib/CosEvent_lib.mpc:

          Removed "naming" MPC base project from "CosEvent Test Lib"
          project.  That test library does not depending on the Naming
          Service.

        * tao/GIOP_Message_Base.cpp:

          Cosmetic changes.

        * tao/ORB_Core.cpp:

          Access ORB table lock using the new lock accessor rather than
          directly using the lock member because of a (now removed) friend
          declaration.  Folks, stop being lazy. :)

        * tao/ORB_Table.h:
        * tao/ORB_Table.inl:

          The ORB table now has no friends, nor should it!  HP aCC 3.63
          was confused by the global scope qualifier in the friend
          declaration, due to broken namespace scoping support.

          Added a public lock accessor method.

        * tao/Policy_Manager.h (TAO_Policy_Manager, operator=):

          Added private and unimplemented copy constructor and assignment
          operator.  TAO_Policy_Manager should not be copied.

        * tao/PortableServer.mpc (Template_Files):

          Explicitly list template files since the Servant_var.* template
          sources will otherwise not be considered template sources.

        * tao/AnyTypeCode/Any_Array_Impl_T.cpp (marshal_value, value):
        * tao/AnyTypeCode/Any_Array_Impl_T.inl:
        * tao/AnyTypeCode/Any_Basic_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Basic_Impl_T.inl:
        * tao/AnyTypeCode/Any_Dual_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Dual_Impl_T.inl:
        * tao/AnyTypeCode/Any_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Impl_T.inl:
        * tao/AnyTypeCode/Any_Special_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Special_Impl_T.inl:

          Moved inline virtual methods out of line.  Virtual methods
          generally should not be inlined.  Addresses potential RTTI
          problems with g++ 4.x.

        * tao/PortableServer/Object_Adapter.cpp
          (wait_for_non_servant_upcalls_to_complete):

          Removed explicit use of CORBA::Environment in native C++
          exception builds.  It isn't needed.

          (dispatch, get_collocated_servant):

          Prevent potential buffer overread.  (From Andrew Schnable)

        * tao/PortableServer/Object_Adapter.h
          (wait_for_non_servant_upcalls_to_complete):

          Removed explicit use of CORBA::Environment in native C++
          exception builds.  It isn't needed.

        * tao/PortableServer/PS_ForwardC.h:

          PortableServer::ServantBase_var is now a specialization of the
          new (standard) PortableServer::Servant_var<> class template.

        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/Servant_Base.h:
        * tao/PortableServer/Servant_Base.i:

          Removed TAO_ServantBase_var class.  It's functionality is now
          provided by the PortableServer::Servant_var<> class template.

        * tao/PortableServer/Servant_Upcall.cpp (upcall_cleanup):

          Renamed wait_for_non_servant_upcall_to_complete() method
          call to the name (..._to_complete_no_throw()).

        * tao/PortableServer/Servant_var.cpp:
        * tao/PortableServer/Servant_var.h:
        * tao/PortableServer/Servant_var.inl:

          Implementation of the standard PortableServer::Servant_var<>
          class template.

        * tao/Utils/Servant_Var.h:

          Marked TAO::Utils::Servant_var<> class template as deprecated.
          Use standard PortableServer::Servant_var class template
          instead.

        * utils/catior/catior.cpp (catior):

          Fixed crash due to buffer overrun.  The message block write
          pointer should be set to the end of the message block, not twice
          the length of message block.  Thanks to Sriram Chandramouli
          <sriram_chandramouli at symantec dot com> for pointing out this
          problem.

Fri Jul 14 21:10:30 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicAny.mpc:
          Enabled regeneration of the pidl files

        * tao/DynamicAny/DynamicAnyC.{h,cpp}:
          Removed from the repo, will get regenerated automatically

        * tao/*Resource*.*:
          Moved the different resources files (Qt,Fl,Tk, and Xt) to
          subdirectories so that in TAO/tao we only have the tao lib
          core

Fri Jul 14 21:03:30 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/IDL_Test.mpc:
          This fix closes [BUGID:2582]. Thanks to Heesuk Shin
          <heesuks@econz.com> for reporting the bug.
          Also fixes bug 2583.

Fri Jul 14 20:50:30 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_decl.cpp:
        * TAO_IDL/ast/ast_typedef.cpp:
        * TAO_IDL/include/ast_decl.h:
        * TAO_IDL/include/ast_typedef.h:

          Fixed bug in the recursive check for local type
          containment that was causing CDR operators to
          get generated for types that contain a local
          interface at some level of nesting. This fix
          closes [BUGID:2583].

Fri Jul 14 20:38:07 UTC 2006  john_c  <johnc@ociweb.com>

        * tests/AlternateIIOP/run_test.pl:

          Split a long string.

        * tests/Optimized_Connection/Optimized_Connection.mpc:
        * tests/Optimized_Connection/README:
        * tests/Optimized_Connection/oc.ior:
        * tests/Optimized_Connection/oc_client.cpp:
        * tests/Optimized_Connection/oc_svc.conf:
        * tests/Optimized_Connection/run_test.pl:

          Created new test to test the Optimized_Connection Selector.

        * tests/AlternateIIOP/svc.conf:

          Removed this file. This test shouldn't be testing the Optimized
          Connection Selector.

Fri Jul 14 19:20:34 UTC 2006  William R. Otte  <wotte@dre.vanderbilt.edu>

        * docs/tutorials/Quoter/RTCORBA/Admin.cpp
        * docs/tutorials/Quoter/RTCORBA/Broker.cpp
        * docs/tutorials/Quoter/RTCORBA/Broker.idl
        * docs/tutorials/Quoter/RTCORBA/Broker_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Broker_i.h
        * docs/tutorials/Quoter/RTCORBA/Common.idl
        * docs/tutorials/Quoter/RTCORBA/Common_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Common_i.h
        * docs/tutorials/Quoter/RTCORBA/Distributor.cpp
        * docs/tutorials/Quoter/RTCORBA/Distributor.idl
        * docs/tutorials/Quoter/RTCORBA/Distributor_i.cpp
        * docs/tutorials/Quoter/RTCORBA/Distributor_i.h
        * docs/tutorials/Quoter/RTCORBA/StockQuoter.mpc
        * docs/tutorials/Quoter/RTCORBA/Stock_Database.cpp
        * docs/tutorials/Quoter/RTCORBA/Stock_Database.h
        * docs/tutorials/Quoter/RTCORBA/Stock_PriorityMapping.cpp
        * docs/tutorials/Quoter/RTCORBA/Stock_PriorityMapping.h
        * docs/tutorials/Quoter/RTCORBA/docs/broker.html
        * docs/tutorials/Quoter/RTCORBA/docs/common.html
        * docs/tutorials/Quoter/RTCORBA/docs/database.html
        * docs/tutorials/Quoter/RTCORBA/docs/distributor.html
        * docs/tutorials/Quoter/RTCORBA/docs/idl.html
        * docs/tutorials/Quoter/RTCORBA/docs/index.html
        * docs/tutorials/Quoter/RTCORBA/docs/mpc.html
        * docs/tutorials/Quoter/RTCORBA/docs/prioritymapping.html
        * docs/tutorials/Quoter/RTCORBA/docs/run.html

          A RTCORBA tutorial based on the Quoter by Shanshan Jiang.

Fri Jul 14 18:34:41 UTC 2006  john_c  <johnc@ociweb.com>

        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:

          Set handle options after a proper handle has been assigned. This
          was causing a race condition at a client location. We couldn't
          reproduce the problem, but the change is valid.

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventConsumerMain.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventConsumer_i.h:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventConsumer_i.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventSupplierMain.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventSupplier_i.h:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventSupplier_i.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/README:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/RTEC_MCast_Federated.mpc:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/SimpleAddressServer.h:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/SimpleAddressServer.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/run_test.pl:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/supplier.conf:

          Adding a test to traverse the changed code path.

Fri Jul 14 17:00:49 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * tao/EndpointPolicy/Endpoint_Acceptor_Filter_Factory.cpp:

          Fixed a bug in create_object() that uses an incorrect index
          to access the policy in the policy list.

Fri Jul 14 16:01:38 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * tests/Bug_2494_Regression/client.cpp:
        * tests/Bug_2494_Regression/run_test.pl:

        Eliminate false failures of this test due to the client process
        printing the exception or exiting with a non-zero status.

Fri Jul 14 15:11:11 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Factory.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullConsumer.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullConsumer.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushConsumer.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.cpp:

        Added two new options to the CEC_Default_Factory,
        -CECConsumerOperationTimeout and -CECSupplierOperationTimeout.
        These options apply relative roundtrip timeout policies for consumer
        and supplier objects.  This allows users to minimize the ill effects of
        unresponsive consumer and supplier operations (i.e. push() or pull()).
        See bugzilla #2594 and docs/cec_options.html.
        Also, exposed the "disconnect_callbacks" event channel attribute
        as the "-b" option to the CosEvent_Service executable.

        * NEWS
        * docs/cec_options.html:

        Documented the Timeout feature described above.

        * orbsvcs/tests/CosEvent/Timeout/README:
        * orbsvcs/tests/CosEvent/Timeout/TestEventConsumer_i.h:
        * orbsvcs/tests/CosEvent/Timeout/TestEventConsumer_i.cpp:
        * orbsvcs/tests/CosEvent/Timeout/Timeout.mpc:
        * orbsvcs/tests/CosEvent/Timeout/TimeoutTestMain.cpp:
        * orbsvcs/tests/CosEvent/Timeout/cosevent.conf:
        * orbsvcs/tests/CosEvent/Timeout/run_test.pl:

        Functional test for the Timeout feature described above.

Fri Jul 14 02:02:55 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IIOP_Acceptor.cpp:
          Fix for parsing IPv6 endpoints not using the enclosing []. An
          address such as fe80::a0f2:2510:7549:12345 is a legitemate IPv6
          address but would be misinterpreted.

        * tao/Profile.cpp:
        * tests/Bug_2593_Regression/Bug_2593_Regression.mpc:
        * tests/Bug_2593_Regression/Hello.h:
        * tests/Bug_2593_Regression/Hello.cpp:
        * tests/Bug_2593_Regression/README:
        * tests/Bug_2593_Regression/Test.idl:
        * tests/Bug_2593_Regression/client.cpp:
        * tests/Bug_2593_Regression/run_test.pl:
        * tests/Bug_2593_Regression/server.conf:
        * tests/Bug_2593_Regression/server.cpp:
          A fix and a new regression test for bug 2593. Thanks to Jules
          Colding, <colding at omesc dot com> for finding this.

Thu Jul 13 10:26:42 UTC 2006  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/EndpointPolicy/EndpointPolicyTypeA.h:
        * tao/EndpointPolicy/Endpoint_Value_Impl.cpp:

          Added missing versioned namespace macros.

Thu Jul 12 18:45:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ObjRefTemplate.mpc:
          Added versioning base project

Wed Jul 12 18:01:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IORManipulation.mpc:
          Enabled regeneration of pidl files

        * tao/IORManipulation/IORA.h:
          Temporarily new file to keep other A.h files happy

        * tao/IORManipulation/IORC.{h,cpp}:
        * tao/IORManipulation/IORA.cpp:
          Removed from the repo

Wed Jul 12 10:25:12 UTC 2006  Martin Corino <mcorino@remedy.nl>

        * tests/CollocationLockup/CollocationLockup.cpp:
        * tests/CollocationLockup/run_test.pl:
          Added some customization to have this test run correctly on OpenVMS.

        * tests/Object_Loader/Loader.cpp:
        * tests/Smart_Proxies/On_Demand/Smart_Test_Factory.cpp:
          Removed deprecated OpenVMS specific include.

Tue Jul 11 12:12:01 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BiDir_GIOP/diffs/BiDirPolicy.diff:
        * tao/CodecFactory/diff/IOP_Codec.diff:
        * tao/IORInterceptor/diff/IORInterceptor.diff:
        * tao/IORTable/diff/IORTable.diff:
        * tao/ObjRefTemplate/diffs/ObjectReferenceTemplate.diff:
        * tao/RTPortableServer/diffs/RTPortableServer.diff:
          Removed, not needed anymore

        * tao/RTPortableServer.mpc:
          Enabed regeneration of the pidl files

        * tao/RTPortableServer/RTPortableServerA.cpp:
        * tao/RTPortableServer/RTPortableServerC.cpp:
        * tao/RTPortableServer/RTPortableServerC.h:
        * tao/RTPortableServer/RTPortableServerS.h:
          Removed from the repo

Tue Jul 11 12:07:01 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode.mpc:
          Enabled regeneration of the pidl files

        * tao/AnyTypeCode/TypeCode.h:
          Added include that was first pulled in indirectly

        * tao/AnyTypeCode/AnySeqA.cpp
        * tao/AnyTypeCode/AnySeqA.h
        * tao/AnyTypeCode/AnySeqC.cpp
        * tao/AnyTypeCode/AnySeqC.h
        * tao/AnyTypeCode/AnySeqS.h
        * tao/AnyTypeCode/BoundsA.cpp
        * tao/AnyTypeCode/BoundsA.h
        * tao/AnyTypeCode/BoundsC.cpp
        * tao/AnyTypeCode/BoundsC.h
        * tao/AnyTypeCode/Dynamic_ParameterA.cpp
        * tao/AnyTypeCode/Dynamic_ParameterA.h
        * tao/AnyTypeCode/Dynamic_ParameterC.cpp
        * tao/AnyTypeCode/Dynamic_ParameterC.h
        * tao/AnyTypeCode/ValueModifierA.cpp
        * tao/AnyTypeCode/ValueModifierA.h
        * tao/AnyTypeCode/ValueModifierC.cpp
        * tao/AnyTypeCode/ValueModifierC.h
        * tao/AnyTypeCode/ValueModifierS.h
        * tao/AnyTypeCode/VisibilityA.cpp
        * tao/AnyTypeCode/VisibilityA.h
        * tao/AnyTypeCode/VisibilityC.cpp
        * tao/AnyTypeCode/VisibilityC.h
        * tao/AnyTypeCode/VisibilityS.h
          Removed from the repository, regenerated now automatically

Tue Jul 11 11:59:01 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
          Fix for CORBA/e

Tue Jul 11 11:08:01 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BiDir_GIOP.mpc:
          Fixed casing of include

Tue Jul 11 08:30:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * utils/nslist/nslist.cpp:
        * utils/nslist/run_test.pl:
          Fix bugzilla 2592.

Tue Jul 11 08:10:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp:
          Fix bugzilla 2591.

Tue Jul 11 01:43:01 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/Bug_2582_Regression.idl:
        * tests/IDL_Test/Bug_2583_Regression.idl:
          New tests for TAO_IDL, mpc file will be committed when the latest
          change from Jeff is in the archive

Tue Jul 11 01:40:01 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/TAO_Singleton_Manager.cpp:
          Initialise pointer with 0

Tue Jul 11 01:20:01 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/be/be_global.cpp:
        * docs/compiler.html:
        * TAO_IDL/be/be_codegen.cpp:
          Added support for -Wb,include_guard= and -Wb,safe_include=.
          The include guard is a define that is generated in the C.h file
          that prevents the user from including this generated file, the
          safe_include is the file that the user should include instead
          of the C.h and which is also used in the generated A.cpp and
          C.cpp. With these new options a lot of generated files can be
          removed also from the repository

        * tao/RTCORBA/RT_Transport_Descriptor.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tao/Valuetype/ValueBase.cpp:
          Bool and const changes

        * tao/PI_Server/PortableServer_ORBInitializer.cpp:
        * tao/PI_Server/PortableServer_PolicyFactory.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
          Fixes for CORBA/e

        * tao/CodecFactory.mpc:
        * tao/BiDir_GIOP.mpc:
        * tao/IORInterceptor.mpc:
        * tao/IORTable.mpc:
        * tao/ObjRefTemplate.mpc:
          Enabled regeneration of the pidl files

        * tao/CodecFactory/IOP_CodecC.{h,cpp}:
        * tao/CodecFactory/IOP_CodecS.h:
        * tao/BiDir_GIOP/BiDirPolicyC.{h,cpp}:
        * tao/IORInterceptor/IORInfoC.{h,cpp}:
        * tao/IORInterceptor/IORInterceptorC.{h,cpp}:
        * tao/IORTable/IORTableC.{h,cpp}:
        * tao/ObjRefTemplate/Default_ORTC.{h,cpp,inl}:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.{h,cpp,inl}:
          Removed from the repo, will get regenerated as part of the
          building of the core lib.

        * tao/BiDir_GIOP/BiDirPolicy.pidl:
        * tao/IIOP_Endpoints.pidl:
          Updated comments to resolve warnings during recompilation

Sun Jul 09 05:56:55 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO version 1.5.2 released.

Tue Jul  3 07:51:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.h:
          Fixed missing 'const' in argument declaration.

Mon Jul  3 15:05:55 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_typedef.cpp:
        * TAO_IDL/be/be_visitor_arg_traits.cpp:
        * TAO_IDL/be_include/be_typedef.h:

          Changed logic of how the seen_in_operation_ flag is handled
          and how the arg traits visitor works for typedefs. There
          was an interaction between a typedef valuetype member
          and the use of the base type in an interface operation.
          This fix closes [BUGID:2577]. Thanks to Heesuk Shin
          <heesuks@econz.com> for reporting the bug.

        * tests/IDL_Test/Bug_2577_Regression.idl:

          Removed the preprocessor condition around the line that
          reproduces the bug, and added a comment.

Mon Jul  3 14:29:07 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/OBV/Any/client.cpp:
          Guard against running the test using Any::to_value() with a
          streamed any when compiled with optimized valuetype marshaling
          as this test case still fails. See the verbose comment in the
          source for details.

Mon Jul  3 14:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/EndpointPolicy/EndpointPolicyTypeC.h:
          Fixed versioning macros

Mon Jul  3 14:07:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_valuebox/valuebox_ci.cpp:
          Fixed versioning macros

Mon Jul  3 13:06:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/ast/ast_decl.cpp:
          Const improvements

        * TAO_IDL/fe/fe_init.cpp:
        * TAO_IDL/util/utl_stack.cpp:
          Initialise pointer with 0

Mon Jul  3 11:41:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/ORBInitInfoA.h:
          Added this file, needed because other files can include the
          pidl file and this file isn't generated by the idl compiler
          because we don't use -GA when regenerating the pidl file

Mon Jul  3 11:15:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/Sequence_Unit_Tests.mpc:
          Temporarily disabled the array sequence ut, the mock_array
          isn't updated after all array refactoring and this needs
          more time then we have for the upcoming beta

Mon Jul  3 10:59:59 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/OBV/Any/OBV_Any.mpc:
        * tests/OBV/Any/client.cpp:

        * tests/OBV/Truncatable/OBV_Truncatable.mpc:
        * tests/OBV/Truncatable/TruncatableS_impl.cpp:
        * tests/OBV/Truncatable/client.cpp:

          Bug 2576 turned out to be invalid. There is already a mechanism
          present to address the problem I raised. I've updated the tests
          to work with the correct value extraction methods.

Mon Jul  3 12:00:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/Bug_2577_Regression.idl:
        * tests/IDL_Test/IDL_Test.mpc:
          Added regression for bug 2577, this is not fixed yet, but I had
          this in my workspace, so commit the test for others. The
          file should be changed to reproduce the bug. Thanks to
          Heesuk Shin <heesuks at econz dot com> for delivering this test
          case.

Mon Jul  3 10:21:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/ORBInitializer.pidl:
          Added workaround for bug 2569 to get the solaris/icc builds
          running again.

        * tests/IDL_Test/typeprefix.idl:
          Comment part of this test case to get the builds running again

Mon Jul  3 09:27:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:
        * TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp
        * TAO_IDL/be/be_visitor_typecode/enum_typecode.cpp
        * TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp
        * TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp
        * TAO_IDL/be/be_visitor_typecode/union_typecode.cpp
        * TAO_IDL/be/be_visitor_typecode/value_typecode.cpp
          Fixed versioning macros generation

Mon Jul  3 00:54:37 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/AnyTypeCode/skip.cpp:
        * tao/Valuetype/Valuetype_Adapter_Impl.h:
        * tao/Valuetype/Valuetype_Adapter_Impl.cpp:
        * tao/Valuetype_Adapter.h:
          Reworked the new interfaces added to the valuetype adapter to be
          a little more logical, and added one for detecting chunking.
          Skipping the chunks turns out to be really easy, the chunk start
          is the length in bytes to skip. Skip that length, then get the
          chunk end tag, which is the negated length. If the chunk start
          value is negative, that indicates the end of a nesting level, so
          this process is repeated until a nesting level of -1 is reached,
          indicating the end of the value.

          This change enables truncatable values to be encapsulated in
          anys.

        * tao/Valuetype/ValueBase.cpp:
          Reformatted a long comment

        * tests/OBV/Any/Any.idl:
        * tests/OBV/Any/AnyS_impl.h:
        * tests/OBV/Any/AnyS_impl.cpp:
        * tests/OBV/Any/OBV_Any.mpc:
        * tests/OBV/Any/client.cpp:
        * tests/OBV/Truncatable/Extra.idl:
        * tests/OBV/Truncatable/OBV_Truncatable.mpc:
        * tests/OBV/Truncatable/Truncatable.idl:
        * tests/OBV/Truncatable/TruncatableS_impl.h:
        * tests/OBV/Truncatable/TruncatableS_impl.cpp:
        * tests/OBV/Truncatable/client.cpp:

          Adding the change for encapsulating truncatables gave rise to a
          new bug, 2576. This bug illustrates that TAO does not properly
          extract a valuetype to a base value pointer, even though the
          base value type is carried as part of the Any's typeID
          information. So as not to increase the number of failures on the
          scoreboard at this time the test code illustrating this bug is
          guarded by a #if defined (TAO_TEST_BUG_2576).

Sat Jul  1 19:16:11 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * NEWS:
          Documented the TAO_HAS_OPTIMIZED_VALUETYPE_MARSHALING switch.

Sat Jul  1 15:32:43 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/AnyTypeCode/skip.cpp:
        * tao/Valuetype/Valuetype_Adapter_Impl.h:
        * tao/Valuetype/Valuetype_Adapter_Impl.cpp:
        * tao/Valuetype_Adapter.h:

          Added an exclusion for Valuetypes marshaled with implied types.
          Implicitly typed values are those for which the actual valuetype
          matches the formal valuetype. For values inserted into an Any
          this is always true as the Any separately marshals the typecode
          making it redundant to do this again by the value itself.

          TAO only marshals values this way when compiled to use optimized
          valuetype marshaling which is not the default case since it
          breaks backwards compatibility.

          This resolves bug 2575.

        * tao/TAO_Server_Request.h:

          Fixed a typo in a comment.

Sat Jul  1 12:16:20 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Valuetype/ValueBase.cpp:
          Fixed spelling of TAO_HAS_OPTIMIZED_VALUETYPE_MARSHALING

Fri Jun 30 13:14:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Profile.cpp (is_equivalent):
          Use true/false for bool

Fri Jun 30 10:36:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_module/module_ch.cpp:
          Removed some versioning macro calls

Thu Jun 29 14:26:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Notify/performance-tests/RedGreen/RedGreen_Test.{h,cpp}:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/main.cpp:
          Moved destroy_ec out of the destructor to a seperate method

Thu Jun 29 10:35:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/include/utl_string.h:
        * TAO_IDL/util/utl_string.cpp:
          Changed compare_quiet to return a real bool.

        * TAO_IDL/util/utl_identifier.cpp:
          Const improvement

Thu Jun 29 09:54:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bounded_Array_Sequence_T.h:
        * tao/Bounded_Sequence_CDR_T.h:
        * tao/Unbounded_Array_Sequence_T.h:
        * tao/Unbounded_Sequence_CDR_T.h:
          Moved (de)marshal_sequence methods from CDR file to the Array
          file.

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be_include/be_codegen.h:
          Slightly reworked the way the any includes are generated. This
          way the versioning macros are generated better in the A.cpp file.

Thu Jun 29 08:53:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * rules.tao.GNU:
          Removed check for templates=explicit

Thu Jun 29 01:45:29 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated.

Wed Jun 28 15:23:37 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * docs/libraries.html:
          Added text describing the new TAO_EndpointPolicy library.

Wed Jun 28 13:34:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/typeprefix.idl:
          New file with small example of IDL construct with typeprefix
          that fails to compile when TAO_IDL is build with Intel C++
          and Sun C++ at this moment. Changing the forward declared
          interface B to a real interface makes it compiling, no idea
          what happens and why this only fails with the mentioned
          compilers

        * tests/IDL_Test/IDL_Test.mpc:
          Added new file

Wed Jun 28 12:45:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * utils/nslist/nslist.cpp:
          Fix overzellous VuWorks renaming of variables from last fix.

Wed Jun 28 11:02:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/LoadBalancer/LoadManager.cpp:
          When we can't register the signal handler, use ACE_ERROR_RETURN
          so that it is visible from the test output why things fail.

Wed Jun 28 09:55:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype/AbstractBase.cpp:
          Use false instead of 0 for a bool

Wed Jun 28 09:51:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Profile.h:
          Removed commented out method

        * tao/Profile.cpp:
          Compilation fix for CORBA/e micro

Wed Jun 28 09:00:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/tao.mpc:
          Added base projects for corba/e and minimum corba

Wed Jun 28 08:00:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * utils/nslist/nsadd.cpp:
        * utils/nslist/nslist.cpp:
          Fix minor compiler warnings. Anoying cut and paste
          ; subsitution for a , in nsadd.cpp.

Wed Jun 28 06:42:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/catior/catior.mpc:
          Removed not needed libpaths and added messaging as base project
          so that we are sure we build this exe after messaging

Tue Jun 27 19:30:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POAManager.pidl:
          Added missing checks for minimum poa

Tue Jun 27 19:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Content_Server/SMI_Iterator/Content_Iterator_i.{h,cpp}:
        * examples/Content_Server/SMI_Iterator/Iterator_Factory_i.cpp:
        * examples/Content_Server/SMI_Iterator/Web_Server.idl:
        * examples/Content_Server/AMI_Iterator/Content_Iterator_i.{h,cpp}:
        * examples/Content_Server/AMI_Iterator/Web_Server.idl:
          Made the filesize a CORBA::ULongLong so that we could handle files
          bigger then 2Gb, this also resolves some warnings we have on
          windows

Tue Jun 27 19:14:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI_Server.mpc:
        * tao/PI_Server/ServerRequestInterceptor{A,C,S}.{h,cpp}:
          Readded these generated files and removed the regeneration of these
          files from the core libs. The generated files had a diff that I
          missed this morning, need to resolve that handcrafting first

Tue Jun 27 19:06:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/WCharSeqA.cpp:
          Removed some versioning macros that don't seem correct, if this
          solves the errors in the versioning builds I have to change the
          IDL compiler for this.

Tue Jun 27 18:59:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/XtResource.mpc:
          And the last mpc file to get an empty IDL_Files section. Thanks to
          Chad Elliot for noticing this last missing file

Tue Jun 27 18:50:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Domain/DomainS.cpp:
          Fixed compile error

Tue Jun 27 18:38:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/FlResource.mpc:
        * tao/QtResource.mpc:
        * tao/TkResource.mpc:
          Added empty IDL_Files section to prevent orb.idl to appear in these
          projects when building for corba/e or minimum corba. Thanks to Chad
          Elliot for bringing these files to my attention.

Tue Jun 27 17:35:02 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tao/CSD_Framework.mpc:
        * tao/EndpointPolicy.mpc:
        * tao/ImR_Client.mpc:
        * tao/Messaging.mpc:
        * tao/PI.mpc:
        * tao/PI_Server.mpc:
        * tao/PortableServer.mpc:

          Reverted the work-around for MPC where generated A.cpp files
          needed to be added.  The bug in MPC has been fixed.

Tue Jun 27 14:48:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Fixed_Array_SArgument_T.{h,cpp,inl}:
          Fixed crashing of multdim array part of the param test

Tue Jun 27 14:40:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * utils/nslist/nsadd.cpp:
          Fix a resource leak.

Tue Jun 27 12:07:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO-INSTALL.html:
          Updated supported platforms

Tue Jun 27 12:03:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CSD_Framework.mpc:
          Enabled recompilation for the pidl files of CSD_Framework

        * tao/CSD_Framework/CSD_Framework.pidl:
          Updated instructions, removed comments about the patch, not needed

        * tao/CSD_Framework/CSD_Framework*.*:
          Removed from the repo

        * tao/CSD_Framework/diffs/CSD_Framework.diff:
          Removed, not needed anymore

Tue Jun 27 11:50:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI_Server.mpc:
          Enabled recompilation for the pidl files of PI_Server

        * tao/PI_Server/ServerRequestInterceptor*.*:
        * tao/PI_Server/ServerRequestInfo*.*:
          Removed from the repo

Tue Jun 27 10:46:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI.mpc:
          Enabled recompilation for the pidl files of PI

        * tao/PI/ClientRequestInfo*.*:
        * tao/PI/ClientRequestInterceptor*.*:
        * tao/PI/Interceptor*.*:
        * tao/PI/InvalidSlot*.*:
        * tao/PI/ORBInitializer*.*:
        * tao/PI/ORBInitInfo*.*:
        * tao/PI/PICurrent*.*:
        * tao/PI/PIForwardRequest*.*:
        * tao/PI/ProcessingModePolicy*.*:
        * tao/PI/RequestInfo*.*:
          Removed from the repo

Tue Jun 27 10:25:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * NEWS:
        * utils/nslist/nsadd.cpp:
        * utils/nslist/nsdel.cpp:
        * utils/nslist/nslist.cpp:
          Enhanced the nslist utilities.

Tue Jun 27 10:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging.mpc:
          Enabled recompilation for the pidl files of Messaging

        * tao/Messaging/TAO_ExtC.*:
        * tao/Messaging/TAO_ExtA.*:
        * tao/Messaging/PollableC.*:
        * tao/Messaging/PollableA.*:
        * tao/Messaging/Messaging_SyncScope_PolicyC.*:
        * tao/Messaging/Messaging_SyncScope_PolicyA.*:
        * tao/Messaging/Messaging_RT_PolicyC.*:
        * tao/Messaging/Messaging_RT_PolicyA.*:
        * tao/Messaging/ExceptionHolderC.*:
        * tao/Messaging/ExceptionHolderA.*:
        * tao/Messaging/ExceptionHolderS.*:
          Removed from the repo

Tue Jun 27 09:52:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ImR_Client.mpc:
          Enabled recompilation for the pidl files of ImR_Client

        * tao/ImR_Client/ImplRepoS.*:
        * tao/ImR_Client/ImplRepoA.cpp:
        * tao/ImR_Client/ImplRepoC.*:
        * tao/ImR_Client/ServerObjectA.*:
        * tao/ImR_Client/ServerObjectC.*:
        * tao/ImR_Client/ServerObjectS.*:
          Removed from the repo, do get regenerated as part of the building
          of the core libs

        * tao/ImR_Client/ImplRepoA.h:
          Dummy file that just includes ImplRepoC.h, using -GA for this file
          doesn't work

Tue Jun 27 09:22:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/BiDirectional/run_test.pl:
          Use wait_interval_for_process_creation instead of hardcoded value

        * tests/Hello/server.cpp:
          Added newline after debug message

        * tests/Stack_Recursion/server.cpp:
          Initialise pointer with 0

        * tests/Stack_Recursion/Sender.{h,cpp}:
          Changed is_done to a real bool

Tue Jun 27 08:50:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PolicyS.cpp:
          Forgot to patch this file

Tue Jun 27 06:35:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/*.mpc:
          Removed tao_versioning_idl_defaults as explicit base, this is coming
          from taolib. Added empty IDL_Files section to all files that didn't
          had one to prevent the compilation of orb.idl in the corba/e builds

        * tao/IFR_Client/IFR_BaseC.*
        * tao/IFR_Client/IFR_BasicC.*
        * tao/IFR_Client/IFR_ComponentsC.*
        * tao/IFR_Client/IFR_ExtendedC.*
          Removed these files from the repo

        * tao/IFR_Client.mpc:
          Regenerate the pidl files as part of the build

        * tao/Basic_Arguments.h:
        * tao/Basic_Argument_T.{h,cpp.inl}:
        * tao/BD_String_Argument_T.{h,cpp,inl}:
        * tao/Fixed_Array_Argument_T.{h,cpp,inl}:
        * tao/Fixed_Size_Argument_T.{h,cpp,inl}:
        * tao/Object_Argument_T.{h,cpp,inl}:
        * tao/Object.h:
        * tao/Special_Basic_Argument_T.{h,cpp,inl}:
        * tao/Special_Basic_Arguments.h:
        * tao/UB_String_Argument_T.{h,cpp,inl}:
        * tao/UB_String_Argument.h:
        * tao/Var_Array_Argument_T.{h,cpp,inl}:
        * tao/Var_Size_Argument_T.{h,cpp,inl}:
        * tao/AnyTypeCode/Any_Arg_Traits.h:
        * tao/AnyTypeCode/TypeCode.h:
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp:
        * tao/PortableServer/Any_SArg_Traits.h:
        * tao/PortableServer/Basic_SArgument_T.{h,cpp,inl}:
        * tao/PortableServer/Basic_SArguments.h:
        * tao/PortableServer/BD_String_SArgument_T.{h,cpp,inl}:
        * tao/PortableServer/Fixed_Array_SArgument_T.{h,cpp,inl}:
        * tao/PortableServer/Fixed_Size_SArgument_T.{h,cpp,inl}:
        * tao/PortableServer/Object_SArgument_T.{h,cpp,inl}:
        * tao/PortableServer/Object_SArg_Traits.h:
        * tao/PortableServer/Var_Size_SArgument_T.{h,cpp,inl}:
        * tao/Valuetype/ValueBase.h:
        * tao/Valuetype/AbstractBase.h:
        * tao/PortableServer/Special_Basic_SArgument_T.{h,cpp,inl}:
        * tao/PortableServer/Special_Basic_SArgument.h:
        * tao/PortableServer/TypeCode_SArg_Traits.h:
        * tao/PortableServer/Var_Array_SArgument_T.{h,cpp,inl}:
        * TAO_IDL/be/be_visitor_arg_traits.cpp:
          Removed the introduction of template template arguments for any
          insertion strategy. The HP aCC3 compiler doesn't support this at
          all so it broke that support fully.

Mon Jun 26 13:27:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * NEWS:
          Added PICurrent refactoring note.

Sat Jun 24 22:13:38 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * docs/tutorials/Quoter/Simple/Impl-Repo/index.html: Enhanced this
          file so it explains how to run the Implementation Repository.
          Thanks to Ben Creech <bpcreech at alumni dot ncsu dot edu> for
          contributing the improvement.

Mon Jun 26 09:15:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * tao/ServerRequestInterceptor_Adapter.h:
        * tao/TAO_Server_Request.cpp:
        * tao/TAO_Server_Request.h:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/PI/ClientRequestInfo.cpp:
        * tao/PI/ClientRequestInfo.h:
        * tao/PI/PICurrent.h:
        * tao/PI/PICurrent_Copy_Callback.cpp: (Deleted)
        * tao/PI/PICurrent_Copy_Callback.h:   (Deleted)
        * tao/PI/PICurrent_Impl.cpp:
        * tao/PI/PICurrent_Impl.h:
        * tao/PI/PICurrent_Impl.inl:
        * tao/PI_Server/PICurrent_Guard.cpp:
        * tao/PI_Server/PICurrent_Guard.h:
        * tao/PI_Server/ServerInterceptorAdapter.cpp:
        * tao/PI_Server/ServerInterceptorAdapter.h:

          This refactors the PICurrent implimentaion and fixes issue 2552
          (TAO358).

Mon Jun 26 08:17:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * tao/RTScheduling/RTScheduler_includeA.h:
        * tao/RTScheduling/RTScheduler_includeC.h:
          Changed include for RTSheduler,h to make it compatible for OpenVMS.

        * tests/Bug_1020_Regression/server.cpp:
        * tests/Bug_1361_Regression/shutdown.cpp:
        * tests/Nested_Upcall_Crash/scavenger.cpp:
        * tests/Object_Loader/Loader.cpp:
        * tests/Smart_Proxies/On_Demand/Smart_Test_Factory.cpp:
          Small OpenVMS compatibility changes.

Fri Jun 23 19:03:21 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype.mpc:
        * tao/EndpointPolicy.mpc:
        * tao/PortableServer.mpc:
          Explicitly list the generated A.cpp in the source section because
          MPC doesn't add them at this moment

Fri Jun 23 18:39:21 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype.mpc:
        * tao/EndpointPolicy.mpc:
          Don't substract -Sa from the idlflags, it can be used for the
          pidl files

        * tao/PortableServer.mpc:
          Handle ForwardRequest.pidl differently because of special
          idlflags

        * orbsvcs/IFR_Service/IFR_Service.mpc:
          Fixed error in this file

Fri Jun 23 13:42:54 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/IFR_Service.mpc:

          Added $(TAO_ROOT) to the 'includes' line of the IFR loader
          executable project, because of a change in the way
          TAO/Version.h is included.

Fri Jun 23 07:36:21 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Fixed_Array_SArgument_T.h:
          Fixed compile problem

Thu Jun 22 15:27:04 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/ORB_Local_Config/Bug_1459/a.conf:
          Fix the test by making it use UIOP rather than SSLIOP as the
          alternative protocol. The original problem results from first
          using SSLIOP in the non-default ORB which loads the SSL library,
          which in turn registers with the ACE Object Manager. At shutdown
          time, the SSL library is unloaded in order, but then the ACE
          Object Manager tries to clean it up, but can't, because it is
          already gone.

Thu Jun 22 16:13:29 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/PortableServer/Fixed_Array_SArgument_T.cpp:
        * tao/PortableServer/Fixed_Array_SArgument_T.h:
        * tao/PortableServer/Fixed_Array_SArgument_T.inl:

          Changed the member type of all classes except the out arg
          class from array type to forany type. Almost every operation
          in these classes was first converting the member to forany
          type first, and there is no forany constructor directly from
          array type. This new design is similar to the stub argument
          classes for fixed arrays in TAO.

Thu Jun 22 15:01:21 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.h:

          Added missing SSLIOP namespace qualifier to typedef inside
          the SSLIOP_Credentials class.

Thu Jun 22 14:39:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/BD_String_SArgument_T.cpp:
          Fixed compile problems in Debian Core build

Thu Jun 22 07:14:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Var_Array_SArgument_T.cpp:
          Fixed compile problem

Thu Jun 22 06:59:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Any.{h,cpp,inl}:
          Moved include of Object.h to the header file to resolve compile
          problems with Borland in release mode when inlining is enabled

Thu Jun 22 06:47:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BD_String_Argument_T.cpp:
          Fixed bug in this file

Wed Jun 21 20:46:09 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Array_VarOut_T.h:

          Added a typedef of FORANY in the TAO_FixedArray_Var_T<> and
          TAO_VarArray_Var_T<> classes that just refer to the existing
          typedef for FORANY in the common base class. Some compilers,
          when parsing template code, will not look into a base class
          unless they are forced to, so the base class typedef was not
          seen when referenced in a derived class. Thanks to Will Otte
          <wotte@dre.vanderbilt.edu> for figuring this out.

Wed Jun 21 14:10:38 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Array_VarOut_T.h:

          Removed 'typename' qualifier in typedef of FORANY inside the
          TAO_Array_Var_Base_T template class, since it was causing
          problems on the FC4_CIAO_Core build.

Wed Jun 21 13:50:57 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_OwnCredentials.h:
        * orbsvcs/orbsvcs/Security/SL3_CredentialsCurator.h:

          Added typedefs _ptr_type, _var_type, and _out_type to
          these "interface" classes, since the typedefs are now
          required by the *_var and *_out template classes.

Wed Jun 21 12:13:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_traits.cpp:
        * TAO_IDL/be/be_visitor_array/array_ch.cpp:
        * TAO_IDL/be/be_visitor_array/array_ci.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:
        * tao/Array_Traits_T.h
        * tao/Array_VarOut_T.cpp
        * tao/Array_VarOut_T.h
        * tao/Array_VarOut_T.inl
        * tao/BD_String_Argument_T.cpp
        * tao/Bounded_Array_Sequence_T.h
        * tao/Bounded_Sequence_CDR_T.h
        * tao/Fixed_Array_Argument_T.cpp
        * tao/Unbounded_Array_Sequence_T.h
        * tao/Unbounded_Sequence_CDR_T.h
        * tao/Var_Array_Argument_T.cpp
          Reworked array support, remove the traits struct I added and use the
          forany class in most templates, this is how Jeff refactoring things
          earlier this week, my approach just gave to much problems.

Wed Jun 21 07:23:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BD_String_Argument_T.cpp:
          Fixed compile problems by added a seperate typedef and use
          this in the methods.

Wed Jun 21 07:15:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/EndpointPolicy.mpc:
        * tao/PortableServer.mpc:
        * tao/TypeCodeFactory.mpc:
        * tao/Valuetype.mpc:
          Removed the <%quote%>, it did break on several platforms, just
          don't add the quotes in the mpc file, the IDL compiler will
          add quotes around the include string

Wed Jun 21 02:02:59 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/Makefile.am:

          Regenerated.

        * TAO_IDL/tao_idl.mpc:

          Changed automake specific include "$(srcdir)/.." to $(TAO_ROOT).
          This is enough to trigger the MPC heuristic that this is a TAO
          rather than ACE project.  No more hand edits!

Tue Jun 20 20:58:35 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated with updated MPC automake.mpd.

Tue Jun 20 18:17:04 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/tao_idl.mpc:
          Changed include directive for "../tao/Version.h" to "tao/Version.h"
          and added ".." and "$(srcdir)/.." to the list of include dirs in
          tao_idl.mpc.
          OpenVMS doesn't grok the "../tao/Version.h" when toa_idl.cpp is
          compiled for the IFR project.

        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/be/be_interface.cpp:
          Changes to circumvent OpenVMS differences regarding subprocesses,
          redirection and file naming.

        * TAO_IDL/be/be_helper.cpp:
          Disabled ACE_OS::fflush () calls for OpenVMS as these slow down
          things dramatically.

Tue Jun 20 18:12:04 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_OwnCredentials.h:
          Fixed compile errors

Tue Jun 20 17:21:42 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/EndpointPolicy.mpc:
        * tao/PortableServer.mpc:
        * tao/TypeCodeFactory.mpc:
        * tao/Valuetype.mpc:

          Replaced double quotes in these files with <%quote%>. Thanks
          to Chad Elliott <elliott_c@ociweb.com> for providing
          the fix that allowed the generated *.vcproj files to
          load on MSVC 7.1.

Tue Jun 20 15:28:18 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/Makefile.am:
        * tao/Makefile.am:

          Regenerated.

        * tao/TypeCodeFactory.mpc:

          Remove TypeCodeFactory subdirectory from PIDL_Files section,
          as it's now listed in IDL_Files.

Tue Jun 20 13:43:05 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:

          Remove setting of servant retention policy when creating the new
          POA because this policy is not available with Minimum CORBA.  We
          were just being pedantic and setting it to the default value
          (RETAIN) anyway.

Tue Jun 20 13:35:04 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/HTIOP/htiop_endpointsC.h:
          Updated for all changes

Tue Jun 20 12:41:04 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/BD_String_SArgument_T.cpp:
          Fixed compilation problems with Borland

Tue Jun 20 12:29:04 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/Options.html:
          Document ORBOutputCDRAllocator and don't refer to cvs.doc.wustl.edu
          for files, just get them locally

        * docs/compiler.html:
          Document -Sorb

Tue Jun 20 10:21:04 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Security/SL3_CredentialsCurator.h:
          Fixed compile error

Tue Jun 20 08:12:04 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Any_Insert_Policy_T.h:
          Reworded the policies to just contain a static method so that we
          don't need to create an instance

        * tao/Argument.h:
          When we don't have interceptors, just don't declare the In/Out/InOut
          classes, just typedef them to Argument

        * tao/Basic_Arguments.h:
        * tao/Basic_Argument_T.{h,cpp.inl}:
        * tao/BD_String_Argument_T.{h,cpp,inl}:
        * tao/Fixed_Array_Argument_T.{h,cpp,inl}:
        * tao/Fixed_Size_Argument_T.{h,cpp,inl}:
        * tao/Object_Argument_T.{h,cpp,inl}:
        * tao/Object.h:
        * tao/Special_Basic_Argument_T.{h,cpp,inl}:
        * tao/Special_Basic_Arguments.h:
        * tao/UB_String_Argument_T.{h,cpp,inl}:
        * tao/UB_String_Argument.h:
        * tao/Var_Array_Argument_T.{h,cpp,inl}:
        * tao/Var_Size_Argument_T.{h,cpp,inl}:
        * tao/AnyTypeCode/Any_Arg_Traits.h:
        * tao/AnyTypeCode/TypeCode.h:
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp:
        * tao/PortableServer/Any_SArg_Traits.h:
        * tao/PortableServer/Basic_SArgument_T.{h,cpp,inl}:
        * tao/PortableServer/Basic_SArguments.h:
        * tao/PortableServer/BD_String_SArgument_T.{h,cpp,inl}:
        * tao/PortableServer/Fixed_Array_SArgument_T.{h,cpp,inl}:
        * tao/PortableServer/Fixed_Size_SArgument_T.{h,cpp,inl}:
        * tao/PortableServer/Object_SArgument_T.{h,cpp,inl}:
        * tao/PortableServer/Object_SArg_Traits.h:
        * tao/PortableServer/Var_Size_SArgument_T.{h,cpp,inl}:
        * tao/Valuetype/ValueBase.h:
        * tao/Valuetype/AbstractBase.h:
        * tao/PortableServer/Special_Basic_SArgument_T.{h,cpp,inl}:
        * tao/PortableServer/Special_Basic_SArgument.h:
        * tao/PortableServer/TypeCode_SArg_Traits.h:
        * tao/PortableServer/Var_Array_SArgument_T.{h,cpp,inl}:
        * TAO_IDL/be/be_visitor_arg_traits.cpp:
          The any insert policy has been changed to a template template
          argument.

        * tao/PortableServer/PolicyS.cpp:
        * tao/WCharSeqS.h:
        * tao/WCharSeqC.h:
        * tao/CONV_FRAMEC.h:
        * tao/DomainC.cpp:
        * tao/IIOP_EndpointsC.h:
        * tao/IIOPC.h:
        * tao/Messaging_PolicyValueC.h:
        * tao/IOP_IORC.h:
        * tao/OctetSeqC.h:
        * tao/WCharSeqC.cpp:
        * tao/Policy_ForwardC.h:
        * tao/PolicyC.cpp:
        * tao/StringSeqC.h:
        * tao/ServicesC.h:
        * tao/GIOPC.h:
        * tao/AnyTypeCode/Dynamic_ParameterC.h:
        * tao/AnyTypeCode/WCharSeqA.{h,cpp}:
        * tao/Domain/DomainS.cpp:
        * tao/DynamicAny/DynamicAnyC.h:
        * tao/IFR_Client/IFR_ExtendedC.{h,cpp}:
        * tao/IFR_Client/IFR_ComponentsC.{h,cpp}:
        * tao/IFR_Client/IFR_BasicC.{h,cpp}:
        * tao/IFR_Client/IFR_BaseC.{h,cpp}:
        * tao/ImR_Client/ImplRepoC.{h,cpp}:
        * tao/ImR_Client/ImplRepoS.cpp:
        * tao/ImR_Client/ServerObjectS.cpp:
        * tao/IORInterceptor/IORInfoC.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.cpp:
        * tao/RTCORBA/RTCORBAC.h:
        * tao/RTScheduling/RTSchedulerC.cpp:
        * tao/Strategies/sciop_endpointsC.h:
        * tao/Strategies/uiop_endpointsC.h:
        * tao/PortableServer/PortableServerC.{h,cpp}:
        * tao/PortableServer/PortableServerS.h:
          Updated for all template changes

        * tao/Sequence_T.h:
          Reordered includes

        * tao/Blocked_Connect_Strategy.{h,cpp}:
          Removed not needed virtual destructor

        * tao/Connection_Handler.cpp:
        * tao/Wait_On_Leader_Follower.cpp:
        * tao/Wait_On_Reactor.cpp:
        * tao/Wait_On_Read.cpp:
        * tao/Wait_Strategy.{h,cpp,inl}:
        * tao/Transport_Cache_Manager.cpp:
          Changed is_registered flag of the wait stratetegy to a real bool

        * tao/Object_Reference_Sequence_Element_T.h:
        * tao/String_Sequence_Element_T.h:
          Added in accessor

        * tao/Object.cpp:
        * tao/PortableServer/IdAssignmentPolicy.{h,cpp}:
        * tao/PortableServer/IdUniquenessPolicy.{h,cpp}:
        * tao/PortableServer/ImplicitActivationPolicy.{h,cpp}:
        * tao/PortableServer/LifespanPolicy.{h,cpp}:
        * tao/PortableServer/POA_Cached_Policies.cpp:
        * tao/PortableServer/POA_Policy_Set.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/POAManager.{h,cpp}:
        * tao/PortableServer/POAManagerFactory.{h,cpp}:
        * tao/PortableServer/RequestProcessingPolicy.{h,cpp}:
        * tao/ORB.{h,cpp}:
        * tao/PortableServer/PortableServer.cpp:
        * tao/PortableServer/RequestProcessingStrategyDefaultServant.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrategyDefaultServantFI.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrategyServantActivator.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrategyServantActivatorFI.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrategyServantLocator.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrategyServantLocatorFI.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrategyServantManager.{h,cpp}:
        * tao/PortableServer/Servant_Upcall.cpp:
        * tao/PortableServer/Root_POA.{h,cpp}:
        * tao/PortableServer/ThreadPolicy.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategyRetain.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategy.h:
        * tao/PortableServer/ServantRetentionPolicy.{h,cpp}:
          Added support for CORBA/e

        * tao/PortableServer/IdAssignmentPolicy.pidl:
        * tao/PortableServer/PS_Current.pidl:
        * tao/TypeCodeFactory/TypeCodeFactory.pidl:
        * tao/Valuetype/StringValue.pidl:
        * tao/PortableServer/RequestProcessingPolicy.pidl:
        * tao/PortableServer/ServantActivator.pidl:
        * tao/PortableServer/ServantLocator.pidl:
        * tao/PortableServer/ServantManager.pidl:
        * tao/PortableServer/ServantRetentionPolicy.pidl:
        * tao/PortableServer/ThreadPolicy.pidl:
          Updated regeneration instructions and support CORBA/e

        * tao/OctetSeq.pidl:
          Added -Sorb to the regeneration instructions

        * tao/Policy_Forward.pidl:
          Updated regeneration instructions, handcrafting is not needed anymore

        * tao/diffs/Policy_Forward.diff:
          Removed from the repo

        * tao/VarOut_T.{h,inl}:
          Zapped one template argument

        * tao/IIOP_Transport.{h,cpp}:
        * tao/default_resource.{h,cpp}:
        * tao/Transport.{h,cpp}:
          Added support for sendfile

        * tao/orbconf.h:
          Added TAO_USE_OUTPUT_CDR_MMAP_MEMORY_POOL with which sendfile
          can be forced during compilation

        * tao/Transport_Cache_Manager.cpp:
          Use ACE_TEXT with debug macros

        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/Valuetype/AbstractBase_T.cpp:
          Const improvements

        * tao/PortableServer/get_arg.h:
          Check if the details do have args before doing a cast, part of
          bug 2503

        * tao/PortableServer/POA.pidl:
        * tao/PortableServer/PortableServer.pidl:
          Moved most contents to POA.pidl to make regeneration easier

        * tao/Bounded_Sequence_CDR_T.h:
          Moved array code to this file

        * tao/Array_VarOut_T.{h,cpp,inl}:
        * tao/Array_Traits_T.h:
        * tao/Bounded_Array_Sequence_T.h:
        * tao/Unbounded_Array_Sequence_T.h:
        * tao/Unbounded_Sequence_CDR_T.h:
          Refactored array support, mix of the changes from Jeff from
          yesterday and my work. Need to cleanup a little when things
          compile again.

        * tao/TypeCodeFactory.mpc:
        * tao/Valuetype.mpc:
        * tao/PortableServer.mpc:
        * tao/ImR_Client.mpc:
        * tao/EndpointPolicy.mpc:
          Enabled regeneration of pidl files as part of building the core
          TAO libs. More pidl files will get regenerated as part of the
          build, this is the first step.

        * tao/tao.mpc:
          Added new sendfile files

        * tao/RTCORBA/RT_Transport_Descriptor.h:
          Use false for a boolean

        * tao/Strategies/FIFO_Connection_Purging_Strategy.{h,cpp}:
        * tao/Strategies/LFU_Connection_Purging_Strategy.{h,cpp}:
        * tao/Strategies/NULL_Connection_Purging_Strategy.{h,cpp}:
          Removed not needed virtual destructors

        * tao/PortableServer/diffs/AdapterActivator.diff
        * tao/PortableServer/diffs/ForwardRequest.diff
        * tao/PortableServer/diffs/ImplicitActivationPolicy.diff
        * tao/PortableServer/diffs/POAManager.diff
        * tao/PortableServer/diffs/RequestProcessingPolicy.diff
        * tao/PortableServer/diffs/ServantActivator.diff
        * tao/PortableServer/diffs/ServantLocator.diff
        * tao/PortableServer/diffs/ServantManager.diff
        * tao/PortableServer/diffs/ServantRetentionPolicy.diff
        * tao/PortableServer/diffs/ThreadPolicy.diff
          Removed, not needed anymore

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be_include/be_decl.h:
          Made generation of ORB.h optional, can be suppressed using -Sorb

        * TAO_IDL/be/be_decl.cpp:
        * TAO_IDL/be/be_interface_fwd.cpp:
        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/be/be_typedef.cpp:
        * TAO_IDL/be_include/be_decl.h:
        * TAO_IDL/be_include/be_interface_fwd.h:
        * TAO_IDL/be_include/be_type.h:
        * TAO_IDL/be_include/be_typedef.h:
          Removed old code related to explicit template instantiations

        * TAO_IDL/be/be_sequence.cpp:
          Updated generation of array sequences

        * TAO_IDL/be/be_visitor_array/array_ch.cpp:
        * TAO_IDL/be/be_visitor_array/array_ci.cpp:
        * TAO_IDL/be/be_visitor_array/array_cs.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_ch.cpp:
          Updated generation for arrays

        * TAO_IDL/be/be_visitor_interface.cpp:
          Added support for native keyword, needed to generate typedefs  from
          the pidl files

        * TAO_IDL/be/be_visitor_enum/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_enum/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_enum/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/buffer_type.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
          Small layout improvements

        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_module/module_ch.cpp:
        * TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp
        * TAO_IDL/be/be_visitor_typecode/enum_typecode.cpp
        * TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp
        * TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp
        * TAO_IDL/be/be_visitor_typecode/union_typecode.cpp
        * TAO_IDL/be/be_visitor_typecode/value_typecode.cpp
        * TAO_IDL/be/be_visitor_valuebox/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ci.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_cs.cpp:
          Added missing generation of versioning macros.

        * TAO_IDL/be/be_visitor_interface/interface.cpp:
        * TAO_IDL/be_include/be_visitor_interface/interface.h:
          Handle native

        * TAO_IDL/be/be_visitor_native/native_ch.cpp:
        * TAO_IDL/be_include/be_visitor_native.h:
        * TAO_IDL/be_include/be_visitor_native/native_ch.h:
          New file for native generation

        * TAO_IDL/be/be_visitor_typedef/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_typedef/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_typedef/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_ci.cpp:
          Updated for array changes

        * TAO_IDL/fe/fe_extern.cpp:
          Const improvement

Mon Jun 19 22:55:04 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Array_VarOut_T.h:

          Added 'typename' to the typedef of FORANY in class
          TAO_Array_Var_Base_T.

Mon Jun 19 19:39:25 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/EndpointPolicy/EndpointPolicyA.*:
        * tao/EndpointPolicy/EndpointPolicyC.*:
        * tao/EndpointPolicy/EndpointPolicyTypeA.*:
        * tao/EndpointPolicy/EndpointPolicyTypeC.*:
        * tao/EndpointPolicy/IIOPEndpointValueA.*:
        * tao/EndpointPolicy/IIOPEndpointValueC.*:
        * tao/PortableServer/AdapterActivatorC.*:
        * tao/PortableServer/AdapterActivatorA.*:
        * tao/PortableServer/ForwardRequestC.*:
        * tao/PortableServer/ForwardRequestA.*:
        * tao/PortableServer/IdAssignmentPolicyC.*:
        * tao/PortableServer/IdAssignmentPolicyA.*:
        * tao/PortableServer/IdUniquenessPolicyC.*:
        * tao/PortableServer/IdUniquenessPolicyA.*:
        * tao/PortableServer/ThreadPolicyC.*:
        * tao/PortableServer/ThreadPolicyA.*:
        * tao/PortableServer/ServantRetentionPolicyC.*:
        * tao/PortableServer/ServantRetentionPolicyA.*:
        * tao/PortableServer/ServantManagerC.*:
        * tao/PortableServer/ServantManagerA.*:
        * tao/PortableServer/ServantLocatorC.*:
        * tao/PortableServer/ServantLocatorA.*:
        * tao/PortableServer/ServantActivatorC.*:
        * tao/PortableServer/ServantActivatorA.*:
        * tao/PortableServer/RequestProcessingPolicyC.*:
        * tao/PortableServer/RequestProcessingPolicyA.*:
        * tao/PortableServer/PS_CurrentC.*:
        * tao/PortableServer/PortableServerA.cpp:
        * tao/PortableServer/POAManagerFactoryC.*:
        * tao/PortableServer/POAManagerC.*:
        * tao/PortableServer/LifespanPolicyC.*:
        * tao/PortableServer/LifespanPolicyA.*:
        * tao/PortableServer/ImplicitActivationPolicyC.*:
        * tao/PortableServer/ImplicitActivationPolicyA.*:
        * tao/TypeCodeFactory/TypeCodeFactoryA.*:
        * tao/TypeCodeFactory/TypeCodeFactoryC.*:
        * tao/Valuetype/StringValueC.*:
          Removed from the repo, will be generated with tao_idl during the build
          of the core libs in the future.

        * tao/EndpointPolicy/Endpoint_Acceptor_Filter.cpp:
          Const improvement

        * tao/EndpointPolicy/EndpointPolicy.pidl:
        * tao/EndpointPolicy/EndpointPolicyType.pidl:
        * tao/EndpointPolicy/IIOPEndpointValue.pidl:
          Removed regeneration instructions, stored in mpc file in the future

        * tao/PortableServer/AdapterActivator.pidl:
        * tao/PortableServer/ForwardRequest.pidl:
        * tao/PortableServer/IdUniquenessPolicy.pidl:
        * tao/PortableServer/ImplicitActivationPolicy.pidl:
        * tao/PortableServer/POAManagerFactory.pidl:
        * tao/PortableServer/POAManager.pidl:
        * tao/PortableServer/LifespanPolicy.pidl:
          Removed regeneration instructions and updated for CORBA/e

        * tao/PortableServer/Creation_Time.h:
          Made single argument constructor explicit

        * tao/Connector_Registry.{h,cpp,i}:
        * tao/Incoming_Message_Queue.{h,inl}:
          Const improvements

        * tao/MMAP_Allocator.{h,cpp}:
          New files part of the sendfile support

        * tao/Stub.h:
          Doxygen improvements

        * tao/PortableServer/Direct_Collocation_Upcall_Wrapper.cpp:
        * tao/PortableServer/Default_Policy_Validator.cpp:
        * tao/PortableServer/Adapter_Activator.{h,cpp}:
          Added support for CORBA/e

Mon Jun 19 14:49:25 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Abstract_Servant_Base.h:
        * tao/Adapter.h:
        * tao/Adapter_Registry.h:
        * tao/AnyTypeCode.mpc
        * tao/Array_Traits_T.h:
        * tao/Array_VarOut_T.cpp:
        * tao/Array_VarOut_T.h:
        * tao/Array_VarOut_T.inl:
        * tao/BD_String_Argument_T.cpp:
        * tao/BD_String_Argument_T.h:
        * tao/BD_String_Argument_T.inl:
        * tao/Basic_Argument_T.h:
        * tao/Basic_Arguments.h:
        * tao/BooleanSeqC.h:
        * tao/Bounded_Array_Sequence_T.h:
        * tao/CharSeqC.h:
        * tao/Collocation_Proxy_Broker.h:
        * tao/DoubleSeqC.h:
        * tao/Environment.h:
        * tao/Fixed_Array_Argument_T.cpp:
        * tao/Fixed_Array_Argument_T.h:
        * tao/Fixed_Array_Argument_T.inl:
        * tao/Fixed_Size_Argument_T.cpp:
        * tao/Fixed_Size_Argument_T.h:
        * tao/Fixed_Size_Argument_T.inl:
        * tao/FloatSeqC.h:
        * tao/LocalObject.h:
        * tao/LongDoubleSeqC.h:
        * tao/LongLongSeqC.h:
        * tao/LongSeqC.h:
        * tao/ORB.h:
        * tao/Object.h:
        * tao/Object_Argument_T.h:
        * tao/OctetSeqC.h:
        * tao/PolicyC.h:
        * tao/Policy_ForwardC.h:
        * tao/Principal.h:
        * tao/Pseudo_VarOut_T.h:
        * tao/Pseudo_VarOut_T.inl:
        * tao/Request_Dispatcher.h:
        * tao/ShortSeqC.h:
        * tao/StringSeqC.h:
        * tao/String_Traits_Base_T.h:
        * tao/TypeCodeFactory_Adapter.h:
        * tao/UB_String_Argument_T.cpp:
        * tao/UB_String_Argument_T.h:
        * tao/UB_String_Argument_T.inl:
        * tao/UB_String_Arguments.h:
        * tao/ULongLongSeqC.h:
        * tao/ULongSeqC.h:
        * tao/UShortSeqC.h:
        * tao/Unbounded_Array_Sequence_T.h:
        * tao/Var_Array_Argument_T.cpp:
        * tao/Var_Array_Argument_T.h:
        * tao/Var_Array_Argument_T.inl:
        * tao/Var_Size_Argument_T.cpp:
        * tao/Var_Size_Argument_T.h:
        * tao/Var_Size_Argument_T.inl:
        * tao/WCharSeqC.h:
        * tao/WStringSeqC.h:
        * tao/AnyTypeCode/Any.h:
        * tao/AnyTypeCode/AnySeqC.h:
        * tao/AnyTypeCode/Any_Arg_Traits.h:
        * tao/AnyTypeCode/NVList.h:
        * tao/AnyTypeCode/TypeCode.h:
        * tao/Domain/DomainS.cpp:
        * tao/DynamicInterface/Context.h:
        * tao/DynamicInterface/ExceptionList.h:
        * tao/DynamicInterface/Request.h:
        * tao/DynamicInterface/Server_Request.h:
        * tao/IFR_Client/IFR_BaseC.cpp:
        * tao/IFR_Client/IFR_BaseC.h:
        * tao/IFR_Client/IFR_BaseC.inl:
        * tao/IFR_Client/IFR_BasicC.cpp:
        * tao/IFR_Client/IFR_BasicC.h:
        * tao/IFR_Client/IFR_BasicC.inl:
        * tao/IFR_Client/IFR_ComponentsC.cpp:
        * tao/IFR_Client/IFR_ComponentsC.h:
        * tao/IFR_Client/IFR_ComponentsC.inl:
        * tao/IFR_Client/IFR_ExtendedC.cpp:
        * tao/IFR_Client/IFR_ExtendedC.h:
        * tao/IFR_Client/IFR_ExtendedC.inl:
        * tao/ImR_Client/ImplRepoC.cpp:
        * tao/ImR_Client/ImplRepoC.h:
        * tao/ImR_Client/ImplRepoS.cpp:
        * tao/ImR_Client/ServerObjectS.cpp:
        * tao/Messaging/MessagingS.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.cpp:
        * tao/PortableServer/Any_SArg_Traits.h:
        * tao/PortableServer/BD_String_SArgument_T.cpp:
        * tao/PortableServer/BD_String_SArgument_T.h:
        * tao/PortableServer/BD_String_SArgument_T.inl:
        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp:
        * tao/PortableServer/Direct_Collocation_Upcall_Wrapper.h:
        * tao/PortableServer/Fixed_Array_SArgument_T.cpp:
        * tao/PortableServer/Fixed_Array_SArgument_T.h:
        * tao/PortableServer/Fixed_Array_SArgument_T.inl:
        * tao/PortableServer/Fixed_Size_SArgument_T.h:
        * tao/PortableServer/Object_SArg_Traits.h:
        * tao/PortableServer/Object_SArgument_T.h:
        * tao/PortableServer/PolicyS.cpp:
        * tao/PortableServer/Servant_Upcall.h:
        * tao/PortableServer/TypeCode_SArg_Traits.h:
        * tao/PortableServer/Var_Array_SArgument_T.cpp:
        * tao/PortableServer/Var_Array_SArgument_T.h:
        * tao/PortableServer/Var_Array_SArgument_T.inl:
        * tao/PortableServer/Var_Size_SArgument_T.cpp:
        * tao/PortableServer/Var_Size_SArgument_T.h:
        * tao/PortableServer/Var_Size_SArgument_T.inl:
        * tao/PortableServer/get_arg.h:
        * tao/RTScheduling/RTSchedulerC.cpp:
        * tao/Valuetype/AbstractBase.h:
        * tao/Valuetype/ValueBase.h:

          Reduced the number of template parameters in _var,
          _out, _forany and arg template classes.

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_visitor_arg_traits.cpp:
        * TAO_IDL/be/be_visitor_traits.cpp:
        * TAO_IDL/be/be_visitor_array/array_ci.cpp:
        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/structure_ch.cpp:
        * TAO_IDL/be/be_visitor_union/union_ch.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:

          Changes to generated code corresponding with the
          changes to middleware code described above.

Mon Jun 19 12:11:09 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/driver/drv_preproc.cpp:
          Fixed copy past error which resulted in a non working tao_idl
          with BCB

Sat Jun 17 20:47:09 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:

          Changed the type of the DRV_arglist variable from char*[]
          to const char*[], since Borland compilers are strict about
          array types and won't implicitly qualify char*[] to be
          passed as const char*[]. This change also required
          casting away constness when the array elements are
          deleted during cleanup. Thanks to Johnny Willemsen
          <jwillemsen@rememdy.nl> for his expertise with Borland
          compilers.

Fri Jun 16 20:25:45 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_operation.cpp:

          Added CORBA::string_dup() around the identifier string of
          an argument, when it is inserted into the sequence of
          parameter descriptions that is passed to the IFR to make
          an entry for an operation or a factory. Since the
          sequence in question manages its own memory, we were
          getting double deletions of this identifier string before.
          Thanks to Johnny Willemsen <jwillemsen@remedy.nl> for
          pointing out the Interface Repository tests failures
          causes by this problem.

Fri Jun 16 14:29:23 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/fe_interface_header.cpp:
        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:

          Removed unused variables and identifiers for unused args.

Thu Jun 15 20:35:41 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * TAO_IDL/be/be_visitor_valuebox/valuebox_ci.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_cs.cpp:

          Partially reverted this mornings fix. The
          _tao_obv_static_repository_id function is not virtual and may
          safely stay inlined.

Thu Jun 15 15:05:43 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be_include/be_visitor_interface/remote_proxy_impl_cs.h:
        * TAO_IDL/be/be_visitor_interface/remote_proxy_impl_cs.cpp:

                Removed these files from the repository, they are no
                longer used.

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/ast/ast_argument.cpp:
        * TAO_IDL/ast/ast_array.cpp:
        * TAO_IDL/ast/ast_attribute.cpp:
        * TAO_IDL/ast/ast_check.cpp:
        * TAO_IDL/ast/ast_concrete_type.cpp:
        * TAO_IDL/ast/ast_constant.cpp:
        * TAO_IDL/ast/ast_decl.cpp:
        * TAO_IDL/ast/ast_enum.cpp:
        * TAO_IDL/ast/ast_exception.cpp:
        * TAO_IDL/ast/ast_expression.cpp:
        * TAO_IDL/ast/ast_factory.cpp:
        * TAO_IDL/ast/ast_field.cpp:
        * TAO_IDL/ast/ast_generator.cpp:
        * TAO_IDL/ast/ast_home.cpp:
        * TAO_IDL/ast/ast_interface.cpp:
        * TAO_IDL/ast/ast_interface_fwd.cpp:
        * TAO_IDL/ast/ast_module.cpp:
        * TAO_IDL/ast/ast_native.cpp:
        * TAO_IDL/ast/ast_operation.cpp:
        * TAO_IDL/ast/ast_predefined_type.cpp:
        * TAO_IDL/ast/ast_root.cpp:
        * TAO_IDL/ast/ast_sequence.cpp:
        * TAO_IDL/ast/ast_string.cpp:
        * TAO_IDL/ast/ast_structure.cpp:
        * TAO_IDL/ast/ast_structure_fwd.cpp:
        * TAO_IDL/ast/ast_type.cpp:
        * TAO_IDL/ast/ast_typedef.cpp:
        * TAO_IDL/ast/ast_union_branch.cpp:
        * TAO_IDL/ast/ast_union_label.cpp:
        * TAO_IDL/ast/ast_valuebox.cpp:
        * TAO_IDL/ast/ast_valuetype.cpp:
        * TAO_IDL/be/be_argument.cpp:
        * TAO_IDL/be/be_array.cpp:
        * TAO_IDL/be/be_attribute.cpp:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_constant.cpp:
        * TAO_IDL/be/be_decl.cpp:
        * TAO_IDL/be/be_enum.cpp:
        * TAO_IDL/be/be_exception.cpp:
        * TAO_IDL/be/be_factory.cpp:
        * TAO_IDL/be/be_field.cpp:
        * TAO_IDL/be/be_generator.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_home.cpp:
        * TAO_IDL/be/be_init.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_interface_fwd.cpp:
        * TAO_IDL/be/be_interface_strategy.cpp:
        * TAO_IDL/be/be_module.cpp:
        * TAO_IDL/be/be_native.cpp:
        * TAO_IDL/be/be_operation.cpp:
        * TAO_IDL/be/be_operation_strategy.cpp:
        * TAO_IDL/be/be_predefined_type.cpp:
        * TAO_IDL/be/be_produce.cpp:
        * TAO_IDL/be/be_root.cpp:
        * TAO_IDL/be/be_scope.cpp:
        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_string.cpp:
        * TAO_IDL/be/be_structure.cpp:
        * TAO_IDL/be/be_structure_fwd.cpp:
        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/be/be_union.cpp:
        * TAO_IDL/be/be_union_branch.cpp:
        * TAO_IDL/be/be_union_fwd.cpp:
        * TAO_IDL/be/be_union_label.cpp:
        * TAO_IDL/be/be_valuetype.cpp:
        * TAO_IDL/be/be_visitor_amh_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_arg_traits.cpp:
        * TAO_IDL/be/be_visitor_attribute.cpp:
        * TAO_IDL/be/be_visitor_ccm_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_context.cpp:
        * TAO_IDL/be/be_visitor_decl.cpp:
        * TAO_IDL/be/be_visitor_interface.cpp:
        * TAO_IDL/be/be_visitor_valuetype.cpp:
        * TAO_IDL/be/be_visitor_attribute/attribute.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/direct_proxy_impl_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/interface.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_si.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_interface_fwd/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_interface_fwd/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_sh.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_ch.cpp:
        * TAO_IDL/be/be_visitor_typecode/enum_typecode.cpp:
        * TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp:
        * TAO_IDL/be/be_visitor_typecode/union_typecode.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype.cpp:
        * TAO_IDL/be_include/be_argument.h:
        * TAO_IDL/be_include/be_array.h:
        * TAO_IDL/be_include/be_attribute.h:
        * TAO_IDL/be_include/be_codegen.h:
        * TAO_IDL/be_include/be_extern.h:
        * TAO_IDL/be_include/be_field.h:
        * TAO_IDL/be_include/be_generator.h:
        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/be_include/be_interface.h:
        * TAO_IDL/be_include/be_interface_strategy.h:
        * TAO_IDL/be_include/be_native.h:
        * TAO_IDL/be_include/be_operation_strategy.h:
        * TAO_IDL/be_include/be_root.h:
        * TAO_IDL/be_include/be_union_branch.h:
        * TAO_IDL/be_include/be_union_label.h:
        * TAO_IDL/be_include/be_valuebox.h:
        * TAO_IDL/be_include/be_visitor.h:
        * TAO_IDL/be_include/be_visitor_ami_pre_proc.h:
        * TAO_IDL/be_include/be_visitor_ccm_pre_proc.h:
        * TAO_IDL/be_include/be_visitor_decl.h:
        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/fe/fe_declarator.cpp:
        * TAO_IDL/fe/fe_extern.cpp:
        * TAO_IDL/fe/fe_init.cpp:
        * TAO_IDL/fe/fe_interface_header.cpp:
        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/fe/y.tab.cpp:.diff:
        * TAO_IDL/fe/y.tab.h:
        * TAO_IDL/include/ast_argument.h:
        * TAO_IDL/include/ast_array.h:
        * TAO_IDL/include/ast_attribute.h:
        * TAO_IDL/include/ast_concrete_type.h:
        * TAO_IDL/include/ast_decl.h:
        * TAO_IDL/include/ast_exception.h:
        * TAO_IDL/include/ast_expression.h:
        * TAO_IDL/include/ast_field.h:
        * TAO_IDL/include/ast_generator.h:
        * TAO_IDL/include/ast_interface.h:
        * TAO_IDL/include/ast_interface_fwd.h:
        * TAO_IDL/include/ast_native.h:
        * TAO_IDL/include/ast_sequence.h:
        * TAO_IDL/include/ast_structure.h:
        * TAO_IDL/include/ast_structure_fwd.h:
        * TAO_IDL/include/ast_typedef.h:
        * TAO_IDL/include/ast_union_branch.h:
        * TAO_IDL/include/ast_union_label.h:
        * TAO_IDL/include/ast_valuebox.h:
        * TAO_IDL/include/drv_extern.h:
        * TAO_IDL/include/fe_extern.h:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/include/utl_exceptlist.h:
        * TAO_IDL/include/utl_exprlist.h:
        * TAO_IDL/include/utl_labellist.h:
        * TAO_IDL/include/utl_list.h:
        * TAO_IDL/include/utl_namelist.h:
        * TAO_IDL/include/utl_scope.h:
        * TAO_IDL/util/utl_exceptlist.cpp:
        * TAO_IDL/util/utl_exprlist.cpp:
        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/util/utl_idlist.cpp:
        * TAO_IDL/util/utl_labellist.cpp:
        * TAO_IDL/util/utl_list.cpp:
        * TAO_IDL/util/utl_namelist.cpp:
        * TAO_IDL/util/utl_scope.cpp:
        * TAO_IDL/util/utl_string.cpp:

                - Plugged all memory leaks occuring during successful
                  execution, and most of the leaks occuring when there
                  is some kind of error. For some syntax errors
                  reported by the parser, it's not known how far
                  the parser has looked ahead (and thus what memory
                  it may have already allocated) when the error
                  is detected. Creating the AST out of types that
            manage their own memory, or creating the AST on
                  the stack, would solve all memory leak problems,
                  but would require substantial redesign of the IDL
                  compiler front end.

                - Added generation of sendc_* operations inherited
                  by local interfaces, if AMI code is being generated.

                - Fixed required check for parallel inheritance of
                  valuetypes and their corresponding supported
                  interfaces, if any.

                - Added workarounds to skip problem code generation
                  when IDL3 constructs and AMI code generation
                  occur together. Integration of AMI with components
                  is a future development item.

                - Fixed the logic of the decision whether or not to
                  generate inheritance of a reference counting
                  parent class for valuetype OBV_* classes.

                - Added default generation of Any insertion/extraction
                  operators for local interfaces, and a command line
                  option  - '-Sal' -  to suppress it.

        * orbsvcs/IFR_Service/be_extern.h:
        * orbsvcs/IFR_Service/be_init.cpp:
        * orbsvcs/IFR_Service/be_produce.cpp:

                Changes to the IFR loader backend corresponding to the
                memory leak fixes above.

        * docs/compiler.html:
        * docs/releasenotes/index.html:

          Documented new IDL compiler command line option
                described above.

Thu Jun 15 12:32:58 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * TAO_IDL/be/be_visitor_valuebox/valuebox_ci.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_cs.cpp:

          Moved virtual methods from inline to out-of-line.

Wed Jun 14 14:48:07 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * tests/ORB_Local_Config/ORB_Local_Config.mwc:

          Removed the nonexistent Limits directory from
          the workspace. This should correct the setup
          error shown on Win2003_VC71_Debug hosted by OCI.

Tue Jun 13 15:24:52 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.h

          Removed orb, added LogMgr argument to constructor.

          Changed constructor to create a new log-channel specific poa
          for iterators.  Activate iterators in the new poa.

          Changed destructor to destroy the new poa, which ensures any
          interators that may exist will be destroyed at the same time
          as the log channel.  This fixes bugzilla bug #2551.

        * orbsvcs/orbsvcs/Log/Hash_LogStore.cpp
        * orbsvcs/orbsvcs/Log/Hash_LogStore.h

          Removed orb argument from constructor.
          Changed to pass LogMgr to Hash_LogRecordStore constructor.

        * orbsvcs/orbsvcs/Log/Hash_Persistence_Strategy.cpp:

          Changed to pass only LogMgr to Hash_LogStore constructor.

        * orbsvcs/orbsvcs/Log/Hash_Persistence_Strategy.cpp:
        * orbsvcs/orbsvcs/Log/Hash_Persistence_Strategy.h:
        * orbsvcs/orbsvcs/Log/Log_Persistence_Strategy.h:

          Removed orb argument from create_log_store().

        * orbsvcs/orbsvcs/Log/LogMgr_i.cpp
        * orbsvcs/orbsvcs/Log/LogMgr_i.h

          Added orb(), factory_poa(), and log_poa() methods.  We're
          changing most objects to have a reference to the LogMgr, so we
          don't have pass orbs and poas around, especially for the cases
          where we're already passing the LogMgr.

          Changed to pass only "this" to strategy's create_log_store()
          method.

Tue Jun 13 14:56:01 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:

          Don't close the LogRecordStore in the TAO_Log_i destructor, if
          the log channel was destroyed, it will be a dangling reference.
          The LogStore should be responsible for opening and closing its
          LogRecordStores.

        * orbsvcs/orbsvcs/Log/Hash_LogStore.cpp (remove):

          Obtain and delete LogRecordStore when unbinding from map.
          Avoids leak.

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp (query_i):

          Re-indent to match coding conventions.

Tue Jun 13 13:51:11 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * tests/Bug_2494_Regression/client.cpp:

          The scoreboard was marking this test as "failed" because it printed
          "EXCEPTION" (from the client process).  This isn't a failure as long
          as the server process still exits cleanly.  The test is now modified
          so that it doesn't print "EXCEPTION".

Sun Jun 11 16:46:44 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/EventLog_i.cpp:
        * orbsvcs/orbsvcs/NotifyLog_i.cpp:
        * orbsvcs/orbsvcs/RTEventLog_i.cpp:

          Changed destructor to invoke destroy() on the event channel.
          This notifies suppliers and consumers, and avoids a resource
          leak.  Fixes bugzilla bug #2559.

Sun Jun 11 00:54:57 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/BasicLog_i.cpp:
        * orbsvcs/orbsvcs/Log/BasicLog_i.h:
        * orbsvcs/orbsvcs/Log/EventLog_i.cpp:
        * orbsvcs/orbsvcs/Log/EventLog_i.h:
        * orbsvcs/orbsvcs/Log/NotifyLog_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLog_i.h:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.h:

          Remove member variable logmgr_i_, as it's also a protected
          member in the base class.

Sat Jun 10 21:54:00 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * NEWS:

          Mention that NT_Naming_Service and NT_Notify_Service must
          be enabled by new MPC feature variable "winnt".

Sat Jun 10 18:30:42 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * performance-tests/Makefile.am:

          Disable building CSD_Strategy tests.

Sat Jun 10 10:40:02 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * examples/RTScheduling/Job_i.h:
        * examples/RTScheduling/POA_Holder.h:
        * orbsvcs/tests/Notify/lib/Periodic_Consumer.h:
        * orbsvcs/tests/Notify/lib/Periodic_Supplier.h:

          More files where ace/Arg_Shifter.h needed to be directly
          included.

Sat Jun 10 05:03:58 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Add AM_CONDITIONAL for BUILD_WINNT and BUILD_WXWINDOWS.

Sat Jun 10 04:34:32 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * docs/tutorials/Quoter/AMI/Makefile.am:
        * docs/tutorials/Quoter/Event_Service/Makefile.am:
        * docs/tutorials/Quoter/On_Demand_Activation/Makefile.am:
        * docs/tutorials/Quoter/RT_Event_Service/Makefile.am:
        * docs/tutorials/Quoter/idl/Makefile.am:
        * examples/AMH/Sink_Server/Makefile.am:
        * examples/AMI/FL_Callback/Makefile.am:
        * examples/Advanced/ch_3/Makefile.am:
        * examples/Buffered_AMI/Makefile.am:
        * examples/Buffered_Oneways/Makefile.am:
        * examples/CSD_Strategy/ThreadPool/Makefile.am:
        * examples/CSD_Strategy/ThreadPool2/Makefile.am:
        * examples/CSD_Strategy/ThreadPool3/Makefile.am:
        * examples/CSD_Strategy/ThreadPool4/Makefile.am:
        * examples/CSD_Strategy/ThreadPool5/Makefile.am:
        * examples/CSD_Strategy/ThreadPool6/Makefile.am:
        * examples/Callback_Quoter/Makefile.am:
        * examples/Content_Server/AMI_Iterator/Makefile.am:
        * examples/Content_Server/AMI_Observer/Makefile.am:
        * examples/Content_Server/SMI_Iterator/Makefile.am:
        * examples/Event_Comm/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.am:
        * examples/Load_Balancing/Makefile.am:
        * examples/Load_Balancing_persistent/Makefile.am:
        * examples/Logging/Makefile.am:
        * examples/OBV/Typed_Events/Makefile.am:
        * examples/POA/DSI/Makefile.am:
        * examples/POA/Default_Servant/Makefile.am:
        * examples/POA/Forwarding/Makefile.am:
        * examples/POA/Generic_Servant/Makefile.am:
        * examples/POA/TIE/Makefile.am:
        * examples/Persistent_Grid/Makefile.am:
        * examples/PluggableUDP/tests/Basic/Makefile.am:
        * examples/PluggableUDP/tests/Performance/Makefile.am:
        * examples/PluggableUDP/tests/SimplePerformance/Makefile.am:
        * examples/Quoter/Makefile.am:
        * examples/RTCORBA/Activity/Makefile.am:
        * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile.am:
        * examples/RTScheduling/MIF_Scheduler/Makefile.am:
        * examples/Simple/bank/Makefile.am:
        * examples/Simple/chat/Makefile.am:
        * examples/Simple/echo/Makefile.am:
        * examples/Simple/grid/Makefile.am:
        * examples/Simple/time/Makefile.am:
        * examples/Simple/time-date/Makefile.am:
        * examples/Simulator/Event_Supplier/Makefile.am:
        * examples/TypeCode_Creation/Makefile.am:
        * examples/ior_corbaloc/Makefile.am:
        * examples/mfc/Makefile.am:
        * interop-tests/wchar/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Factory_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Gateway_Service/Makefile.am:
        * orbsvcs/ImplRepo_Service/Makefile.am:
        * orbsvcs/Naming_Service/Makefile.am:
        * orbsvcs/Notify_Service/Makefile.am:
        * orbsvcs/examples/CosEC/Factory/Makefile.am:
        * orbsvcs/examples/CosEC/TypedSimple/Makefile.am:
        * orbsvcs/examples/FaultTolerance/RolyPoly/Makefile.am:
        * orbsvcs/examples/ImR/Advanced/Makefile.am:
        * orbsvcs/examples/ImR/Combined_Service/Makefile.am:
        * orbsvcs/examples/LoadBalancing/Makefile.am:
        * orbsvcs/examples/ORT/Makefile.am:
        * orbsvcs/examples/Security/Send_File/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/lib/Makefile.am:
        * orbsvcs/tests/BiDir_CORBALOC/Makefile.am:
        * orbsvcs/tests/Bug_1395_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2247_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2285_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2287_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2316_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2377_Regression/Makefile.am:
        * orbsvcs/tests/EC_Custom_Marshal/Makefile.am:
        * orbsvcs/tests/FT_App/Makefile.am:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Makefile.am:
        * orbsvcs/tests/FaultTolerance/IOGR/Makefile.am:
        * orbsvcs/tests/FtRtEvent/Makefile.am:
        * orbsvcs/tests/HTIOP/AMI/Makefile.am:
        * orbsvcs/tests/HTIOP/BiDirectional/Makefile.am:
        * orbsvcs/tests/HTIOP/Hello/Makefile.am:
        * orbsvcs/tests/IOR_MCast/Makefile.am:
        * orbsvcs/tests/ImplRepo/Makefile.am:
        * orbsvcs/tests/ImplRepo/scale/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Application_Test/Makefile.am:
        * orbsvcs/tests/Interoperable_Naming/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/Makefile.am:
        * orbsvcs/tests/Miop/McastHello/Makefile.am:
        * orbsvcs/tests/Notify/Blocking/Makefile.am:
        * orbsvcs/tests/Notify/Discarding/Makefile.am:
        * orbsvcs/tests/Notify/MT_Dispatching/Makefile.am:
        * orbsvcs/tests/Notify/Ordering/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/lib/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile.am:
        * orbsvcs/tests/Redundant_Naming/Makefile.am:
        * orbsvcs/tests/Security/BiDirectional/Makefile.am:
        * orbsvcs/tests/Security/Big_Request/Makefile.am:
        * orbsvcs/tests/Security/Callback/Makefile.am:
        * orbsvcs/tests/Security/Crash_Test/Makefile.am:
        * orbsvcs/tests/Security/MT_IIOP_SSL/Makefile.am:
        * orbsvcs/tests/Security/MT_SSLIOP/Makefile.am:
        * orbsvcs/tests/Security/Secure_Invocation/Makefile.am:
        * orbsvcs/tests/Security/ssliop_corbaloc/Makefile.am:
        * orbsvcs/tests/Simple_Naming/Makefile.am:
        * orbsvcs/tests/Trading/Makefile.am:
        * orbsvcs/tests/ior_corbaname/Makefile.am:
        * performance-tests/Makefile.am:
        * performance-tests/Anyop/Makefile.am:
        * performance-tests/CSD_Strategy/TestInf/Makefile.am:
        * performance-tests/CSD_Strategy/TestServant/Makefile.am:
        * performance-tests/Callback/Makefile.am:
        * performance-tests/Cubit/TAO/DII_Cubit/Makefile.am:
        * performance-tests/Cubit/TAO/IDL_Cubit/Makefile.am:
        * performance-tests/Cubit/TAO/MT_Cubit/Makefile.am:
        * performance-tests/Latency/AMH_Single_Threaded/Makefile.am:
        * performance-tests/Latency/AMI/Makefile.am:
        * performance-tests/Latency/Collocation/Makefile.am:
        * performance-tests/Latency/DII/Makefile.am:
        * performance-tests/Latency/DSI/Makefile.am:
        * performance-tests/Latency/Deferred/Makefile.am:
        * performance-tests/Latency/Single_Threaded/Makefile.am:
        * performance-tests/Latency/Thread_Per_Connection/Makefile.am:
        * performance-tests/Latency/Thread_Pool/Makefile.am:
        * performance-tests/Memory/IORsize/Makefile.am:
        * performance-tests/Memory/Single_Threaded/Makefile.am:
        * performance-tests/POA/Demux/Makefile.am:
        * performance-tests/POA/Implicit_Activation/Makefile.am:
        * performance-tests/POA/Object_Creation_And_Registration/Makefile.am:
        * performance-tests/Pluggable/Makefile.am:
        * performance-tests/Protocols/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Common/Makefile.am:
        * performance-tests/RTCorba/Oneways/Reliable/Makefile.am:
        * performance-tests/RTCorba/Thread_Pool/Makefile.am:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/Makefile.am:
        * performance-tests/Sequence_Latency/AMI/Makefile.am:
        * performance-tests/Sequence_Latency/DII/Makefile.am:
        * performance-tests/Sequence_Latency/DSI/Makefile.am:
        * performance-tests/Sequence_Latency/Deferred/Makefile.am:
        * performance-tests/Sequence_Latency/Single_Threaded/Makefile.am:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Makefile.am:
        * performance-tests/Sequence_Latency/Thread_Pool/Makefile.am:
        * performance-tests/Throughput/Makefile.am:
        * tao/Makefile.am:
        * utils/Makefile.am:

          Regenerated.

        * configure.ac:

          Configure utils/wxNamingViewer/Makefile.am.

        * utils/wxNamingViewer/Makefile.am:

          New file.

Sat Jun 10 03:52:25 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Naming_Service/Naming_Service.mpc:

          Changed NT_Naming_Service project to require new MPC feature
          variable "winnt". Avoids building and installing this on non
          Windows systems.  Fixes bugzilla bug #2412.

        * orbsvcs/Notify_Service/Notify_Service.mpc:

          Changed NT_Notify_Service project to require new MPC feature
          variable "winnt". Avoids building and installing this on non
          Windows systems.  Fixes bugzilla bug #2411.

Fri Jun  9 18:33:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/performance-tests/RTEvent/lib/Client_Options.{h,cpp}:
        * examples/RTCORBA/Activity/POA_Holder.{h,cpp}:
        * examples/RTCORBA/Activity/Periodic_Task.{h,cpp}:
        * examples/RTCORBA/Activity/Job_i.{h,cpp}:
        * examples/RTCORBA/Activity/Builder.{h,cpp}:
        * orbsvcs/tests/Notify/lib/Peer.h:
          Just include ACE_Arg_Shifter in the header file instead of
          using a forward declaration

Fri Jun  9 14:49:06 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Stack_Recursion/run_test.pl:

          Doubled the timeout to accomodate really slow machines. This was
          necessitated by new sequence initialization code.

Fri Jun  9 14:48:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Notify/lib/Options_Parser.{h,cpp}:
          Moved the include of Arg_Shifter.h from cpp to header file

Fri Jun  9 14:35:56 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Big_Request_Muxing/Client_Task.h:
        * tests/Big_Request_Muxing/Client_Task.cpp:
        * tests/Big_Request_Muxing/Payload_Receiver.h:
        * tests/Big_Request_Muxing/Payload_Receiver.cpp:
        * tests/Big_Request_Muxing/Test.idl:
        * tests/Big_Request_Muxing/client.cpp:
        * tests/Big_Request_Muxing/run_test.pl:
        * tests/Big_Request_Muxing/server.cpp:

          This test frequently shows false errors due dropped SYNC_NONE
          messages. These errors are false because dropping such messages
          is not an error. The test now separately accounts for SYNC_NONE
          invocations separately by using a different operation.

          I also modified the timeout loop in an earlier attempt to
          resolve the periodic dropped messages, thinking the timeout
          occured due to heavy loads. Now the timeout less about the whole
          event and more about the duration of individual requests.

Thu Jun  8 02:16:30 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * orbsvcs/Event_Service/Event_Service.cpp (parse_args): Added a
          missing break statement.  Thanks to Sunil Rottoo <sunil dot
          rottoo at idilia dot com> for reporting this.

Wed Jun  7 14:24:55 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.h:

          Now with all with the cleanup, we can switch from using a
          ACE_Hash_Map to a ACE_RB_Tree by changing one typedef.

          Now that LogRecords are ordered by RecordId, for all practical
          purposes this resolves bugzilla bugs #1980 and #1981.  While it
          doesn't handle the case where the RecordId's wrap, with 64 bits,
          that's not worth losing too much sleep over.  Even if we logged
          1,000,000 records per second, it would take nearly 600,000 years
          to wrap.

Wed Jun  7 09:04:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Invocation_Adapter.cpp:

          Corrected the check whether a request has arguments or not. This
          fixes interoperability issues with Orbix. Thanks to Phil
          Billingham <phil_billingham at ml dot com> for reporting
          this. This fixes bugzilla bug 2548

Tue Jun  6 21:05:19 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Sequence_Unit_Tests/unbounded_octet_sequence_nocopy_ut.cpp:
          There was a buffer overrun inside this test case.

Tue Jun  6 17:25:15 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/tao_idl.mpc:

          Combined two automake specific sections into one.

        * orbsvcs/FTRT_Event_Service/Factory_Service/FTRTEC_Factory_Service.mpc:
        * orbsvcs/FTRT_Event_Service/Gateway_Service/FTRTEC_Gateway_Service.mpc:
        * orbsvcs/tests/FtRtEvent/FtRtEvent.mpc:

          Replaced a gnuace specific section to link in tje TAO_Strategies
          library with the inheritance of the strategies base project.

Tue Jun  6 17:02:57 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DII_Collocation_Tests/Client_Task.cpp:
        * tests/DII_Collocation_Tests/Client_Task.h:
        * tests/DII_Collocation_Tests/Collocated_Test.cpp:
        * tests/DII_Collocation_Tests/Hello.cpp:
        * tests/DII_Collocation_Tests/Hello.h:
        * tests/DII_Collocation_Tests/README:
        * tests/DII_Collocation_Tests/run_test.pl:
        * tests/DII_Collocation_Tests/Server_Task.cpp:
        * tests/DII_Collocation_Tests/Server_Task.h:
        * tests/DII_Collocation_Tests/Test.idl:

          Added incomplete twoway test. More test cases (OUT, INOUT and
          RETURN) need be added.

Tue Jun  6 14:48:33 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Hash_Iterator_i.cpp:

          Use iter->item() instead of (*iter).int_id_ to dereference
          iterators.

          Changed get() to set the length of the output sequence to the
          maximum number of log records (this will be shrunk to the real
          value once we find how many records match the constraint).  We
          must have got lucky with the old sequence implementation...

Tue Jun  6 13:56:49 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Hash_Iterator_i.h:
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.h:

          Consistantly use the LOG_RECORD_STORE typedef instead of
          LOG_RECORD_HASH_MAP.  The former is supposed to abstract the
          latter.

Tue Jun  6 13:38:39 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.h:

          Rename rec_hash_ member variable to rec_map_, as we plan to
          change the type.

Tue Jun  6 13:23:06 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:

          Use iter->item() instead of (*iter).int_id_ to dereference
          iterators.

Tue Jun  6 12:29:03 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/ORB_Local_Config/Two_DLL_ORB/ORB_DLL.cpp:
          Explicitly duplicate the command-line arguments passed to the
          client and server ORBs. On some platforms, it wasn't enough to
          merely readjust the length by setting last argv to 0.

Mon Jun  5 03:19:58 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:

          There is a class for containing certain initialization values
          used by the ORB Core that are set during Dynamic loading of
          service configuration objects where there is no way to get a
          pointer to an ORB Core instance. These values were stored in
          a static instance of this class, TAO_ORB_Core_Static_Resources.
          However, using a static instance of this class is incongruent
          with the notion of per-ORB configuration, so this change
          addresses the problem by making the resources container a
          service object which is initialized in the local configuration
          context for each ORB, as well as a copy in the global
          configuration context.

          This fix specifically addresses the problem of having a later
          ORB initialization, such as for a second ORB, affecting the
          configuration of earlier ORBs. If this happens in separate
          threads, a race can occur leading to unpredictable results.

          However, it might be possible for some ORB-related configuration
          to be supplied via service configuration after ORB_init is
          called. If that is the case, then the appropriate configuration
          context must be set with ACE_Service_Config_Guard during the
          duration of the configuration. This will ensure the newly loaded
          configuration object goes into the correct context.

        * tao/CSD_Framework/CSD_Framework_Loader.cpp:

          Reverted the temporary fix, it is no longer needed.

Sun Jun  4 16:04:36 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/DII_Collocation_Tests/oneway/Server_Task.h:

          Add versioned namespace wrappers for the forward declaration of
          an ACE class.

Sun Jun  4 14:39:56 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/CSD_Framework/CSD_Default_Servant_Dispatcher.cpp:
        * tao/CSD_Framework/CSD_Framework_Loader.cpp:

          This is a temporary (duration unknown) resolution to a problem
          highlighted by the intermitant failure in the Two_DLL_ORB test.
          The problem is that the POA factory name and POA factory
          directive are held in a static instance of the
          TAO_ORB_Core_Static_Resoures. The problem is that with multiple
          configuration contexts, the ORBs are supposed to be configured
          separately, but this static resource violates that principle.

Sat Jun  3 19:38:44 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.h:

          Added new varient of remove_i() that takes an iterator instead
          of a record id as its argument.  In almost all cases, we have a
          current iterator when deleting removing a log record; if we use
          it when unbinding from the map, we avoid an extraneous lookup.
          Update callers.

Sat Jun  3 19:03:53 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:

          Remove TODO comments about storing the id on a list when a log
          record is deleted, and reusing those ids when a new log record
          is inserted.  If we did this, ids would be practically useless
          for use by client applications.  It's much more useful to have
          montonically increasing ids.

Sat Jun  3 17:37:11 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:

          Changed last instance of use of old iterator API to the new
          STL-like API.

          Changed purge_old_records(), delete_records(), and
          remove_old_records() to increment iterator before removing log
          record.  Removing the record invalidates the current iterator,
          and incrementing afterwards it resulted in undefined behavior.

Sat Jun  3 16:10:47 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.h:

          Changed the match() and delete_records() methods to iterate
          through the map by themselves instead of invoking match_i().
          While match_i() factored out common code, it did so at the
          expense of an extra conditional in the hot path.  Removed
          match_i().

Sat Jun  3 15:46:45 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.h:

          Remove private remove() method.  Update callers to invoke
          remove_i().

          Rename update() to update_i().
          Rename retrieve() to retrieve_i().

Sat Jun  3 05:25:09 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/PersistStore.cpp:
        * orbsvcs/orbsvcs/Log/PersistStore.h:
        * orbsvcs/orbsvcs/Log/LogRecordStore_persist.cpp:
        * orbsvcs/orbsvcs/Log/LogRecordStore_persist.h:

          Remove files.  This was an old attempt at log record persistence
          that predated the plug-in strategy.

Sat Jun  3 05:20:50 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.h:

          Declare LOG_RECORD_HASH_MAP_ENTRY and LOG_RECORD_HASH_MAP_ITER
          in terms of LOG_RECORD_HASH_MAP::ENTRY, ...::ITERATOR, instead
          of duplicating all the template stuff.  Will make it easier to
          migrate to an ordered ma types, for bugzilla bugs #1980, #1981,
          etc.

Sat Jun  3 05:19:59 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/examples/Log/Event/run_test.pl:
        * orbsvcs/examples/Log/Notify/run_test.pl:
        * orbsvcs/examples/Log/RTEvent/run_test.pl:

          Kill the Consumer process instead of considering the test to be
          failed if it did not exit itself.  The Consumer connects to the
          Log Factory's event channel, not the event/notification channel
          for the log, so even though its disconnect_push_consumer method
          invokes shutdown on the orb, the it doesn't matter since it's
          not going to be called when the log is destroyed.

Sat Jun  3 05:03:15 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/TAO_Internal.cpp:
          Added ACE_MT guards around new synchronization code to make it
          single-thread-build safe.

Sat Jun  3 04:26:08 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Two_DLL_ORB/README:

          Added a bit of a documentation on the test

        * tests/ORB_Local_Config/Two_DLL_ORB/Test.cpp:

          Modified to conditionaly excersise one of the two test
          scenarios. Originally, the test used SSLIOP, however that
          service is not built by default. So the change makes use of
          another service, which is normally available in "default"
          builds.

        * tests/ORB_Local_Config/Two_DLL_ORB/primary-csd.conf:
        * tests/ORB_Local_Config/Two_DLL_ORB/primary-ssl.conf:
        * tests/ORB_Local_Config/Two_DLL_ORB/secondary-csd.conf:
        * tests/ORB_Local_Config/Two_DLL_ORB/secondary-empty.conf:
        * tests/ORB_Local_Config/Two_DLL_ORB/secondary-ssl.conf:

          Added a simple names for the the configuration files.

        * tests/ORB_Local_Config/Two_DLL_ORB/Service_Config_ORB_Test.conf:
        * tests/ORB_Local_Config/Two_DLL_ORB/Service_Config_ORB_Test2.conf:
        * tests/ORB_Local_Config/Two_DLL_ORB/Service_Config_ORB_Test3.conf:

          Removed these files.

Fri Jun  2 21:02:46 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/CodeSets/libs/UCS4_UTF16/WUCS4_UTF16.cpp:
          Fixed a typo from the earlier commit.

Fri Jun  2 19:52:19 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DII_Collocation_Tests/twoway/Client_Task.cpp:
        * tests/DII_Collocation_Tests/twoway/Client_Task.h:
        * tests/DII_Collocation_Tests/twoway/Collocated_Test.cpp:
        * tests/DII_Collocation_Tests/twoway/DII_Collocation_Tests.mpc:
        * tests/DII_Collocation_Tests/twoway/Hello.cpp:
        * tests/DII_Collocation_Tests/twoway/Hello.h:
        * tests/DII_Collocation_Tests/twoway/README:
        * tests/DII_Collocation_Tests/twoway/run_test.pl:
        * tests/DII_Collocation_Tests/twoway/Server_Task.cpp:
        * tests/DII_Collocation_Tests/twoway/Server_Task.h:
        * tests/DII_Collocation_Tests/twoway/Test.idl:

          Removed twoway test.

Fri Jun  2 12:05:13 USMST 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DII_Collocation_Tests/oneway/Collocated_Test.cpp:

          Fixed compilation errors due to reference to a new file.

Fri Jun  2 13:33:19 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Big_Twoways/server.cpp:
          Fixed a minor memory leak caused by not cleaning up servants.

        * tests/CodeSets/libs/UCS4_UTF16/WUCS4_UTF16.cpp:
          Addressed compiler warnings generated by some platforms with
          2-byte wchars. This codeset translator should only be used on
          hosts with 4-byte wchars, since UCS4 is a 32-bit codeset, but
          not all of the test platforms meet that criterium.

Fri Jun  2 12:36:58 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/TAO_Internal.cpp:

           Adding synchronization, in the form of a condition variable to
           fix a race condition occurring when a non-default ORB enters
           open_services, before the default ORB has completed
           initializing the global service objects. According to the spec,
           the default ORB is the one that gets to call ORB_init
           first. The ORB-specific configuration implementation designates
           the default ORB to initialize globally available service
           objects, like the Resource Factory. If a non-default ORB beats
           it to the resource initialization, it would cause a SEGV.

        * tests/ORB_Local_Config/Two_DLL_ORB/Service_Config_ORB_Test.conf:

           As a consequence of implementing the ORB-specific
           configuration, we discovered many implicit assumptions about
           the lifetime of objects. For example, process-global Singletons
           are created by service objects, loaded by ORBs, which are
           themselves initialized from a DLL-loaded code. If that DLL,
           which also contains the code for tearing down the Singleton
           gets unloaded (for instance, as a consequence of calling
           orb->destroy()), its TEXT segment will no longer be mapped in
           memory when the Object Manager tries to destroy the Singleton.

           Ossama has a solution for a similar problem, involving the TAO
           Singleton Manager, for DLL-loaded ORBs (see the DLL_ORB test),
           however it doesn't cover the ACE Object Manager.

           This configuration change is a workaround the fact that SSLIOP,
           loaded as a private service object by a DLL-based ORB,
           registers a process-global Singleton - ACE_SLL_Context, with
           the Object Manager. In an use-case with multiple dynamically
           loaded components containing ORBs, SSLIOP should be loaded
           prior to loading any of the dynamic components using it. In
           general, any SO that uses ACE Singletons must be treated
           similarly, or rewritten.

Fri Jun  2 04:44:17 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/EventLog_i.cpp:
        * orbsvcs/orbsvcs/Log/EventLog_i.h:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.h:

          We must pass both the RootPOA and the Log POA to the log servant
          ctor, destroy() needs to deactivate the servant on the Log POA.

Thu Jun  1 23:13:58 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DII_Collocation_Tests/Client_Task.cpp:
        * tests/DII_Collocation_Tests/Client_Task.h:
        * tests/DII_Collocation_Tests/Collocated_Test.cpp:
        * tests/DII_Collocation_Tests/DII_Collocation_Tests.mpc:
        * tests/DII_Collocation_Tests/Hello.cpp:
        * tests/DII_Collocation_Tests/Hello.h:
        * tests/DII_Collocation_Tests/README:
        * tests/DII_Collocation_Tests/run_test.pl:
        * tests/DII_Collocation_Tests/Server_Task.cpp:
        * tests/DII_Collocation_Tests/Server_Task.h:
        * tests/DII_Collocation_Tests/Test.idl:

          These files are moved to the tests/DII_Collocation_Tests/oneway
          directory since a new test for twoway collocated DII request
          is added.

        * tests/DII_Collocation_Tests/oneway/Client_Task.cpp:
        * tests/DII_Collocation_Tests/oneway/Client_Task.h:
        * tests/DII_Collocation_Tests/oneway/Collocated_Test.cpp:
        * tests/DII_Collocation_Tests/oneway/DII_Collocation_Tests.mpc:
        * tests/DII_Collocation_Tests/oneway/Hello.cpp:
        * tests/DII_Collocation_Tests/oneway/Hello.h:
        * tests/DII_Collocation_Tests/oneway/README:
        * tests/DII_Collocation_Tests/oneway/run_test.pl:
        * tests/DII_Collocation_Tests/oneway/Server_Task.cpp:
        * tests/DII_Collocation_Tests/oneway/Server_Task.h:
        * tests/DII_Collocation_Tests/oneway/Test.idl:

          These files are moved from tests/DII_Collocation_Tests directory.

        * tests/DII_Collocation_Tests/twoway/Client_Task.cpp:
        * tests/DII_Collocation_Tests/twoway/Client_Task.h:
        * tests/DII_Collocation_Tests/twoway/Collocated_Test.cpp:
        * tests/DII_Collocation_Tests/twoway/DII_Collocation_Tests.mpc:
        * tests/DII_Collocation_Tests/twoway/Hello.cpp:
        * tests/DII_Collocation_Tests/twoway/Hello.h:
        * tests/DII_Collocation_Tests/twoway/README:
        * tests/DII_Collocation_Tests/twoway/run_test.pl:
        * tests/DII_Collocation_Tests/twoway/Server_Task.cpp:
        * tests/DII_Collocation_Tests/twoway/Server_Task.h:
        * tests/DII_Collocation_Tests/twoway/Test.idl:

          Added a test for twoway collocation DII request via invoke ().
          This test should fail now for the same reason as the
          oneway collocation DII request. See bugzilla bug #2545
          for details.

Thu Jun  1 17:53:33 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:

          Pass the RootPOA instead of the Log POA to the log servant ctor.
          The log servant creates and attempts to activate a event channel
          on the Log POA, which was failed because TAO's log event channel
          implementation uses implicit activation (_this), and the Log POA
          ImplicitActivationPolicy is NO_IMPLICIT_ACTIVATION.  In time, we
          should consider whether we should create another POA just for
          the event channels.

        * orbsvcs/examples/Log/Event/run_test.pl:
        * orbsvcs/examples/Log/Notify/run_test.pl:
        * orbsvcs/examples/Log/RTEvent/run_test.pl:

          New files.

Thu Jun  1 16:54:56 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * tests/DII_Collocation_Tests/Client_Task.cpp:
        * tests/DII_Collocation_Tests/Client_Task.h:
        * tests/DII_Collocation_Tests/Collocated_Test.cpp:
        * tests/DII_Collocation_Tests/DII_Collocation_Tests.mpc:
        * tests/DII_Collocation_Tests/Hello.cpp:
        * tests/DII_Collocation_Tests/Hello.h:
        * tests/DII_Collocation_Tests/README:
        * tests/DII_Collocation_Tests/run_test.pl:
        * tests/DII_Collocation_Tests/Server_Task.cpp:
        * tests/DII_Collocation_Tests/Server_Task.h:
        * tests/DII_Collocation_Tests/Test.idl:

          Added new DII_Collocation_Tests test to show bug #2545.
          The test crashes on get_in_arg() or gives incorrect arguments
          when the request is collocated oneway request and has "IN"
          arguments. See bugzilla bug #2545.

Thu Jun  1 14:16:06 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:

          Changed reset_capacity_alarm_thresholds() to do nothing if
          LogFullActionType is wrap.

Thu Jun  1 14:06:20 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/examples/Log/Basic/run_test.pl:

          New file.

Thu Jun  1 14:02:30 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:

          Changed set_records_attribute() to validate the query language
          grammar.

          Changed query_i() to set the length of the output sequence to
          the maximum number of log records (this will be shrunk to the
          real value once we find how many records match the constraint).
          We must have got lucky with the old sequence implementation...

Thu Jun  1 11:38:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype/ValueBase.cpp:
          Const improvements

Thu Jun  1 10:26:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/LocateRequest_Invocation_Adapter.cpp:
          Use false instead of 0

        * tao/operation_details.h:
          Improved documentation

Thu Jun  1 08:59:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Any_Dual_Impl_T.cpp:
          Return false instead 0

        * tao/AnyTypeCode/*.cpp:
          Fixed rcsid tags

Thu Jun  1 02:26:51 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/RTCORBA/RT_PolicyFactory.h:
        * tests/AMH_Oneway/client.cpp:
        * tests/AMH_Oneway/server.cpp:
          Memory leak fixes.

Wed May 31 17:47:55 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/AnyTypeCode/Marshal.cpp:
          Fuzz fix.

Wed May 31 13:35:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Marshal.cpp:
          Handle a valuebox in the same way as a regular valuetype. Fixes
          bugzilla bug 2542. Thanks to Jiang Wei
          <jiangwei_1976 at yahoo dot com dot cn> for reporting this.

Wed May 31 10:26:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/skip.cpp:
          Const improvements

Wed May 31 03:54:20 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/TAO_Internal.cpp:

          Revert Jeff's May 25 change, it prevented the calling of a
          necessary function if the debuglevel wasn't set high
          enough. Reworked the logic enough to ensure the value Jeff's
          change was protecting didn't start causing problems again.

        * tests/ORB_Local_Config/Two_DLL_ORB/ORB_DLL.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/Service_Config_ORB_Test.conf:
        * tests/ORB_Local_Config/Two_DLL_ORB/Service_Config_ORB_Test2.conf:
        * tests/ORB_Local_Config/Two_DLL_ORB/Service_Config_ORB_Test3.conf:
        * tests/ORB_Local_Config/Two_DLL_ORB/client.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/server.cpp:

          Update this test to resolve some runtime issues and to ensure
          the proper loading of subsequent service configuration files.

Tue May 30 19:17:28 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/Security/Security_PolicyFactory.h:

          Fix a memory leak resulting from the failure to use a reference
          counted local object for the policy factory.

        * tao/ORBInitializer_Registry.cpp:
        * tao/ORB_Core.cpp:

          Make use of changes in the ACE_Service_Gestalt and
          ACE_Dynamic_Service<> classes to address separation of
          configuration contexts.

        * tests/ORB_Local_Config/Bug_1459/Test.cpp:

          Fix for memory leaks induced through improper ORB destruction.

Tue May 30 18:33:12 UTC 2006  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * tao/DLL_Parser.h: Updated the documentation to explain the
         lookup scheme when a filename is given.  Thanks to Phlip
          <phlip2005 at gmail dot com> for motivating this.

Tue May 30 16:31:14 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Bug_2543_Regression/bug_2542_regression.cpp:

          Added .in() to an OctetSeq_var passed as an argument.

Tue May 30 16:25:24 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Bug_2542_Regression/bug_2542_regression.cpp:

          Added .in() to an OctetSeq_var passed as an argument.

Tue May 30 15:53:50 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp (set_records_attribute):

          Commented out unused argument.

Tue May 30 14:34:07 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/array.idl:
          Added FourDArray as testcase

Tue May 30 14:24:07 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
          Generate false instead of 0

        * TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:
          Const improvement to generated code

        * TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:
          Fixed 64bit conversion warning

        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
          Const improvement to generated code and use false instead of 0

Tue May 30 14:10:07 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Marshal.cpp:
        * tao/AnyTypeCode/Marshal.inl:
        * tao/AnyTypeCode/skip.cpp:
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp:
        * tao/AnyTypeCode/Any.cpp:
        * tao/CodecFactory/CDR_Encaps_Codec.cpp:
        * tao/PI/PI.cpp:
          Use true/false and const improvements

Tue May 30 13:42:07 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Base.{h,cpp}:
          Removed the buffer as member, let the cdr stream get the buffer
          from the allocator. This allocation is just done once at the
          creation so this shouldn't impact performance a lot. Also use
          the size argument passed to the constructor, specific protocol
          implementations to pass this down to its base to set a
          specific initial buffer size.

Tue May 30 10:04:07 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2543_Regression/bug_2543_regression.cpp:
        * tests/Bug_2542_Regression/bug_2542_regression.cpp:
          Fixed conversion warnings

Tue May 30 01:59:07 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:

          Changed set_records_attribute() to iterate through all the
          records in the hash map instead of calling query() and (if there
          are enough matching records) fiddling with iterators, etc.  This
          is not only faster, it also avoids a deadlock that shows up when
          the iterator takes the already held rwlock.

Tue May 30 01:01:39 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * NEWS:

          Document changes.

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.h:
        * orbsvcs/orbsvcs/Log/LogRecordStore.h:
        * orbsvcs/orbsvcs/Log/Log_i.cpp:

          When a log channel's LogFullActionType is wrap, the capacity
          threshold alarms "are triggered as if coupled to a gauge that
          counts from zero to the highest capacity threshold value and
          then resets to zero".

          The log service didn't implement such a gauge and compared the
          log channel's current size with the maximum size (as if the
          LogFullActionType was halt).  This could result in an alarm
          being sent for each log record, as the log channel will almost
          always be "full".

          Changed plug-in Strategy to maintain gauge.  Added get_gauge()
          and reset_gauge().

          Changed log channel to compare the value of the gauge with the
          maximum size when the LogFullActionType is wrap.

          Fixes bugzilla #2420.

Mon May 29 14:28:17 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * NEWS:

          Document changes.

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.h:
        * orbsvcs/orbsvcs/Log/LogRecordStore.h:
        * orbsvcs/orbsvcs/Log/Log_i.cpp:

          Changed plug-in Strategy interface.  Added get_record_attribute(),
          set_record_attribute(), and set_records_attribute(); removed
          retrieve(), update(), and remove().

          This will allow plug-in Strategies to handle these high-level
          operations more efficiently.

Mon May 29 08:05:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2542_Regression/*:
          New regression for Bug_2542. Thanks to Jiang Wei
          <jiangwei_1976 at yahoo dot com dot cn> for creating this regression.

        * tests/Bug_2543_Regression/*:
          New regression for Bug_2543. Thanks to Jiang Wei
          <jiangwei_1976 at yahoo dot com dot cn> for creating this regression.

Sun May 28 23:15:51 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:

          Reworked checks for the log being full.  Just log the record,
          the LogRecordStore will return an error if it is full.  This
          avoids extra conditions in the write hot path.

Sun May 28 23:10:03 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * docs/releasenotes/index.html:

          Update for changes to the telecom logging service that have been
          made over the last few months.

Sun May 28 16:24:24 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Valuetype/ValueBase.cpp:
          Add explicit dereferences where the ValueFactory_var is used in
          equality tests.

Sun May 28 15:18:19 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:

          Removed unused LogRecord variable in write_recordlist().  This
          avoids its construction and destruction in the write hot path.

Sat May 27 22:00:08 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:

          Don't invoke reset_capacity_thresholds() if no log records were
          actually removed.

Fri May 26 22:09:09 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Valuetype/ValueBase.cpp:
          Fixed a memory leak introduced by the refactoring of
          _tao_unmarshal_pre. The ValueFactory reference was moved into
          the unmarshal_pre method directly, and in doing so inadvertently
          got its _var status stripped.

Fri May 26 11:42:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:
          Applied workarounds for BCB2006 and BCB6 in release mode, the
          code results in the original form in an internal backend
          error, reported this to Borland as QC27961.

Thu May 25 23:12:56 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/TAO_Internal.cpp:

          Fixed logic in open_services() to eliminate an unused local
          variable warning (which happened when the TAO debug level
          was less than 3) and made many cosmetic changes to the
          whole file to bring the code into line with the ACE
          style guidelines.

Thu May 25 03:27:44 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/OctetSeqC.h:
        * tao/OctetSeqC.cpp:
        * tao/diffs/OctetSeq.diff:
          Reverted change from Tue May 16 19:08:49 UTC 2006 Phil Mesnier
          <mesnier_p@ociweb.com>

        * tao/Unbounded_Octet_Sequence_T.h:
          Moved the equality operations into the octet sequence class,
          making them member functions. This seems to resolve the
          namespace related problems.


Wed May 24 19:43:16 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/Server_Task.cpp:
          My fix for the servant reference counting used a ServantBase_var
          as the owner of the pointer to the servant instance, but that
          cannot be used as a target within ACE_NEW_RETURN macros on
          windows because the MSVC compiler doesn't appropriately map the
          post-assignment equality test. This minor change is to use a
          servant type pointer for initialization with ACE_NEW, then
          assign the result to a ServantBase_var for reference management.

Wed May 24 18:27:13 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/ImplRepo_Service/ImplRepo_Service.mpc:

          Along with the /FORCE:MULTIPLE link option that is added by
          MPC specifically for em3, nmake, vc6, and vc71 builds, added
          the /INCREMENTAL:NO link option since the above option is
          incompatible with incremental linking, and produces warnings
          on the platforms where it is in force.

Wed May 24 16:00:03 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/TAO_Internal.cpp:
          Refactored recent change to skip over global parameters after
          the first initialization pass.

Wed May 24 12:40:57 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/EndpointPolicy/IIOPEndpointValue_i.h:
          Fixed memory leak. Unlike servants, local objects are not
          intrinsically reference counted. Therefore it is still necessary
          to explicitly inherit from TAO_RefCount_LocalObject rather than
          from CORBA::LocalObject.

Wed May 24 10:36:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/String_Manager_T.h (out, _retn):
          Just set ptr_ to 0 instead of initializing it with an default
          string. Now we get the same behaviour as with the old string
          manager, fixes runtime memory leaks when the string managers
          are used

Wed May 24 09:12:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/DIOP_Connector.cpp:
          Const improvements

Wed May 24 09:09:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/performance.html:
          Added ACE_NLOGGING=1 as one of the options that can be used to
          reduce footprint. Adding this to the footprint build resulted in
          a footprint drop of about 10% for the Hello client.

Wed May 24 08:53:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bounded_Sequence_CDR_T.h:
        * tao/Unbounded_Sequence_CDR_T.h:
          Fixed memory leak in the demarshaling of (w)string sequences.

Wed May 24 03:01:14 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/PortableServer/POAManager.cpp:
        * tao/PortableServer/POAManagerFactory.cpp:

          Cleaned up redundant debug messages.

        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/Client_Task.cpp:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/Server_Task.cpp:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/interceptors.cpp:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/test.idl:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/test_i.cpp:

          Add (%P|%t) to many debug lines to improve ability to track
          thread behavior during collocated calls. Also switched the
          servant to using the modern reference counting method of using a
          ServantBase_var to manage the local reference to the servant
          rather than using an explicit call to _remove_ref() from within
          the shutdown operation. Finally, added a slight delay after
          orb->run() and before orb->destroy() to avoid thread races. See
          bugzilla bug #2538 for more information about this race.

Tue May 23 16:09:05 UTC 2006  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Endpoint.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Factory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
        * tao/ORB_Constants.h:

          See bugzilla #2500.  Around the time of TAO 1.4.7 the tags for UIPMC
          (multicast) changed from TAO-assigned to OMG-assigned.  The
          ComponentID and the ProfileID were added to tao/IOP_IORC.h but the
          change to the new ProfileID was never completed, since code still
          referred to the value in tao/ORB_Constants.h.  This change eliminates
          the old ProfileID and changes all uses to the new one.  This causes a
          break in multicast interoperability between applications using TAO
          before this change and TAO after this change, but should enable
          multicast interoperability between TAO and a different ORB.

Tue May 23 13:05:43 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/ORB_Core.cpp:
          Fixed a typo in a service name.

        * tao/TAO_Internal.cpp:

          Added a function to address the situation where a second ORB is
          initialized with arguments that are global and expected to be
          removed from argv before ORB_Core::init starts parsing args.

          Since the first initialized ORB is the default ORB, it is also
          the one that sets global options, such as debug level, and
          daemonization. In situations where multiple ORBs are initialized
          indeterminately, such as via dynamically loaded service objects,
          an application wanting a concrete set of global options should
          explicitly initialize a default ORB.

        * tao/IIOP_Acceptor.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tests/CollocationLockup/CollocationLockup.cpp:
        * tests/InterOp-Naming/INS_test_client.cpp:
        * tests/POA/EndpointPolicy/server.cpp:
          Fixed memory leaks.


Thu May 18 17:16:30 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Logging_Service/
        * orbsvcs/Logging_Service/Basic_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Makefile.am:

          Regenerated.

          NB: The reason the Makefile.am's for the Event and RTEvent
          Logging Services were not changed is because currently the
          automake config are generated with the typed event channel
          support enabled, which also requires valuetype.

        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.mpc:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.mpc:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.mpc:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.mpc:

          Changed to inherit from the valuetype base project.

          This is required in the case the event / log record embeds a
          valuetype.  A event or log record contains one or more CORBA
          anys.  The current implementation demarshals the any before
          touching any app code.  Thus if the any were to contain a
          valuetype, the valuetype library will be called upon to
          demarshal the data.

          The same change was made for the Notification Service in:
                Mon Jul 18 13:12:15 2005  Ciju John  <john_c@ociweb.com>

          This fixes bugzilla issue #2524.

Thu May 18 15:10:50 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/run_tests_all.pl:

          Updated to remove the Limits test from the list. The
          functionality has been moved to the Service_Config_Test under
          ACE.

        * tests/ORB_Local_Config/Limits/Limits.mpc:
        * tests/ORB_Local_Config/Limits/Test.cpp:
        * tests/ORB_Local_Config/Limits/run_test.pl:

          Removed these files.

Thu May 18 13:52:58 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Two_DLL_ORB/server.cpp:

          Replaced servant activation using _this() with one explicitly
          referencing the desired POA, using activate_object(). As usual,
          using _this() outside the scope of an upcall yields surprising
          results, because it is using the first ORB in the orb table, no
          matter which one that is. Within a single process, it is
          possible for the server's servant to get activated in the client
          ORB's POA and then the client will fail to communicate with it,
          because the client POA is not active.

Wed May 17 23:07:10 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/OctetSeqC.h:
        * tao/OctetSeqC.cpp:
        * tao/diffs/OctetSeq.diff:

          Fuzz removal.

Wed May 17 19:35:09 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuebox/valuebox_ci.cpp:

          In the generated code for setting the member value,
          removed the parentheses from the constructor call in
          ACE_NEW, if the member type is a fixed-size IDL struct.
          These parens were producing a warning on one of the
          scoreboard's VC 7.1 builds, due to a behavior change
          in the compiler. This behavior change is to initialize
          PODs (for which an IDL fixed struct qualifies) to the
          default value without requiring the parens denoting
          a default constructor call.

        * tests/Bug_2234_Regression/server.cpp:
        * tests/OBV/ValueBox/client.cpp:

          Made changes in hand-written client and server code in TAO/tests
          similar to the changes in IDL compiler generated code above.

Wed May 17 19:09:36 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        Merged OCI's changes
          "Fri May 12 21:59:41 UTC 2006  Yan Dai  <dai_y@ociweb.com>"

        * TAO/tao/Intrusive_Ref_Count_Handle_T.inl:

          Fixed a potential memory leaks in operator==(T*) function.
          The memory leak could happen when this assignment operator
          is used to assign the same instance.

        * TAO/tao/CSD_ThreadPool/CSD_TP_Task.cpp:

          Made the TP_Dispatchable_Visitor object reset() called after
          the request is dispatched. This would avoid the delay deletion
          of the request and its referenced objects.

        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:

          Made the transport object in TAO_ServerRequest be reference
          counted by the CSD. Increment the reference counter when the
          TAO_ServerRequest is cloned, and decrement the reference counter
          when the server request is destroyed. This would avoid crash
          when the transport object is destroyed but CSD has not finished
          dispatching the request.

        Merged OCI's changes
          "Thu Apr 20 13:29:44 2006  Ciju John  <john_c@ociweb.com>"

          Made an SSLIOP endpoint value of 'iiop://:/ssl_port=xyz' listen
          on all available network interfaces instead of listening on a
          specific IP address. These changes make the 'iiop://:/ssl_port=xyz'
          and 'iiop:///ssl_port=xyz' have same semantics.

        * tao/IIOP_Acceptor.h :
        * tao/IIOP_Acceptor.cpp :

          Refactored the address parsing code into a new method
          'parse_address'.

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.cpp (open):

          Use TAO_IIOP_Acceptor::parse_address() to initialize
          ACE_INET_Addr.

Wed May 17 18:47:22 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/AMH_Oneway/server.cpp:

          Fix for an error in the construction of the test. This error is
          a result of using a stack based servant, as well as a stack
          based helper ORB-running helper class. The main for this test
          instantiated the helper on the stack first, then the servant. It
          was done in this order so that the servant could obtain a
          reference to the helper's ORB. However, stack based objects are
          destroyed in reverse order, meaning that the servant instance
          was destroyed before the helper's instance. Thus the POA in the
          helper ended up with a stale pointer to a prematurely deleted
          servant when it came time to do an orderly shutdown.

          There were several options for cleaning this up, the servant
          could have been allocated on the stack and have all reference
          but the POA's removed, the servant's destructor could have
          deactivated itself from the POA, or an explicit cleanup method
          could be added to the helper class so the main could force the
          proper order of desctruction. I chose this last option since the
          main was in charge of determining the order of creation.

Wed May 17 16:34:44 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/AMI_Buffering/AMI_Buffering.h:

          Fix scoping for new nested class used to avoid spurious comm
          fail exceptions. This fix resolves build fails that only affect
          the BCB compiler.

Wed May 17 14:11:35 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:
        * TAO_IDL/be_include/be_visitor_typecode/typecode_defn.h:

          Added generation of an anonymous namespace inside the
          TAO::TypeCode namespaces already generated, for
          typecodes ggenerated for anonymous types (sequences,
          arrays, and bounded (w)stringts). This change prevents
          a multiple definition link error with a typecode
          generated for an identical type in another translation
          unit. The exisiting generated ifdef guards prevent
          the same error within the same translation unit.
          Thanks to Ossmama Othman <ossama.othman@symantec.com>
          for suggesting the fix. This fix closes [BUGID:2521].

          Also removed many lines of commented out code from
          this file.

Wed May 17 12:10:58 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Bounded_Sequence_CDR_T.h:

          Reverting this change, it didn't work.
          Mon May 15 22:25:23 UTC 2006  Phil Mesnier <mesnier_p@ociweb.com>

           * tao/Bounded_Sequence_CDR_T.h:
             Added explicit include to satisfy the HP compiler.


Wed May 17 11:34:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_traits.cpp:
          Added extra newline so that the zero method is on its own line

Wed May 17 09:48:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IOR_Endpoint_Hostnames/IOR_Endpoint_Hostnames.mpc:
          Simplified this mpc file

Tue May 16 19:08:49 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * NEWS:
          Add decription of new features/fixes.

        * tao/BiDir_GIOP/BiDirGIOP.h:
        * tao/CSD_Framework/CSD_Object_Adapter_Factory.h:
        * tao/EndpointPolicy/EndpointPolicy.h:
        * tao/EndpointPolicy/EndpointPolicy.cpp:
        * tao/Messaging/Messaging_Loader.h:
        * tao/PI_Server/PI_Server_Loader.h:
        * tao/RTScheduling/RTScheduler_Loader.h:

          Fix for certain static builds, notably VC71 on WinXP, for
          libraries that depend on the Portable Interceptors library for
          registering ORB Initializers.

        * tests/Bug_2417_Regression/publisher_impl.cpp:

          This test runs very long for what it is demonstrating. With the
          underlying reference counting problem resolved, the server now
          runs to completion. Since the test is using asynch connection
          establishment and SYNCH_NONE oneways, there is no way for the
          publisher to detect that the subscriber is gone until it makes a
          synchronizing twoway call. The period between synch tests was so
          long that on a slow machine the test would time out.

        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:
        * orbsvcs/orbsvcs/Trader/Interpreter_Utils.h:
        * tao/OctetSeqC.cpp:
        * tao/OctetSeqC.h:
        * tao/diffs/OctetSeq.diff:

          Applying fixes to the problems still remaining in the versioned
          namespace builds. Not all compilers found the problem in
          Reconfig_Scheduler_T.cpp, but gcc 3.3.1 did. The OctetSeq change
          might represent a candidate for a change to the IDL compiler,
          but for now I think not, as octet sequences are treated as a
          special case, having an explicit template instanciation provided
          along with explicit equality operators.

Tue May 16 14:15:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Strategies/Strategies.mpc:
        * tests/Bug_2134_Regression/Bug_2134_Regression.mpc:
        * tests/Bug_2494_Regression/Bug_2494_Regression.mpc:
          Simplified these mpc files

Tue May 16 14:09:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/AV/TCP.cpp:
          Const improvments and initialise some pointers with 0

        * orbsvcs/orbsvcs/AV/RTP.cpp:
        * orbsvcs/orbsvcs/AV/sfp.cpp:
          Use a CORBA::ULong to iterate through the TAO_AV_PolicyList

Tue May 16 14:03:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/CosProperty.idl:
          Corrected incorrect filename in the header of this file

Tue May 16 12:36:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Asynch_Queued_Message.cpp:
        * tao/Synch_Queued_Message.cpp:
        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/Object.cpp:
        * tao/Profile.cpp:
        * tao/IIOP_Profile.cpp:
        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/DIOP_Endpoint.cpp:
          Const improvements

        * tao/GIOP_Message_State.cpp:
          Improved error message when the GIOP header can't be parsed

        * tao/ORB.cpp:
          Initialise pointer with 0.

        * tao/PortableServer/PolicyS_T.h:
          Use true instead of 1

Tue May 16 05:22:15 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IIOP_Connector.cpp:

          This is a potential fix for the Bug 2417 flaw. The problem is
          that when using nonblocking connects, in conjunction with asynch
          invocations, it is possible for a transport to be returned by
          the connector even though the network connection has not
          completed. For asynchronous invocations using the SYNCH_NONE
          policy, this is appropriate, as request messages may be queued
          for delivery if/when the connection completes.

          Bug 2417 describes a scenario where such a nonblocking
          connection attempt fails, but the actual failure happens after
          the transport has already been returned to the caller. This
          causes a problem because the underlying ACE connector framework
          relies on "borrowing" the reference to the connection handler
          during the time it is waiting for connections to complete or
          fail. For blocked connects this is fine because either the
          transport will be returned to the caller associated with a
          completely established connection, or a failure will occur.

          The issue for nonblocking connects is that when a transport is
          returned associated with a pending connection, the existing
          transport connector and protocol-specific connector end up
          associating to referrers to the same connection handler, without
          incrementing the reference count. The two are the transport
          being returned and the ACE_NonBlock_Connection_Handler that is
          actually registered with the reactor waiting for success or
          failure on the pending connection.

          When a connection completes OK, the NBCH surrenders its
          reference to the connection handler, thus restoring parity, as
          the transport and/or cache entry will still hold the remaining
          references, and the count is OK. But when the connection fails,
          the base connector ends up calling close() on the connection
          handler which in turn decrements the reference count. This then
          sets the stage for a later crash from an apparent double delete.

        * tao/IIOP_Connection_Handler.cpp:
        * tao/Transport_Connector.cpp:

          Added some comments and cleaned up some whitespace.

Mon May 15 22:25:23 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Bounded_Sequence_CDR_T.h:
          Added explicit include to satisfy the HP compiler.

Mon May 15 18:17:23 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Codeset_Manager_Factory_Base.h:
        * tao/Codeset_Manager_Factory_Base.cpp:
        * tao/PortableServer/Acceptor_Filter_Factory.h:
        * tao/PortableServer/Acceptor_Filter_Factory.cpp:

          Moved the static initializer from inside the .cpp to the header
          file. This change was necesitated by the VC7.1 static build that
          was apparently skipping over the static initializer if it wasn't
          in the .h.

Mon May 15 13:28:01 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/AMI_Buffering/AMI_Buffering.h:
        * tests/AMI_Buffering/AMI_Buffering.cpp:
        * tests/AMI_Buffering/client.cpp:

          The tests still fail on a lot of machines with a series of
          COMM_FAIL exceptions being reported. These are due to a nesting
          problem within the server, since it is receiving requests from
          the client and also making requests to the admin. What happens
          is that with the asynchronous calls, a whole bunch of requests
          are sent to the server, and before it gets a chance to receive
          all the replies from the admin, the client sends a shutdown.
          This immediately closes the server's client-side connection to
          the admin, and if any replies were pending, those are lost,
          causing the comm fails. I've also added a log message reporting
          the maximum nesting level attained by the server.

          The client now delegates responsibility of shutting down the
          admin to the server as another way of eliminating any races that
          might cause spurious error reports.

Mon May 15 12:58:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Unbounded_Octet_Sequence_T.h:
          Fixed compile problem when TAO_NO_COPY_OCTET_SEQUENCES is defined
          to 0

Mon May 15 09:59:56 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Unbounded_Octet_Sequence_T.h:

          A potential solution to the namespace problem. This at least
          works for the gcc/linux build.

Mon May 15 02:50:56 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/AMI_Buffering/client.cpp:
        * tests/Oneway_Buffering/client.cpp:

          Add the header for defining sleep for the platforms that don't
          happen to get it indirectly.

Sun May 14 13:32:33 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/AMI_Buffering/client.cpp:
        * tests/Oneway_Buffering/client.cpp:

          Minor change to insert a pause after killing the server but
          before killing the admin. This gives the server a moment to
          flush out any messages it wants to send to the admin. Without
          this pause, the test occasionally reports spurious comm failures
          that cause the scoreboard to count the test as failed.

        * tests/Connection_Timeout/client.cpp:

          Added more information to failure output.

Sat May 13 22:07:04 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/LF_CH_Event.h:
        * tao/LF_CH_Event.cpp:
        * tao/Transport_Connector.cpp:

          This is a fix for intermittent timeout problems when using
          asynch connections. Some tests, most notably the AMI_Buffering
          timeout test, randomly fail in that the client seems to just
          stop dead. I found that this failure occured when using
          nonblocking connects with at least 2 threads, one of which is
          invoking ORB::run while the other is trying to connect.

          The problem is that an asynch connection might cause the
          transport to cached in an unconnected state, relying on a
          subsequent connection request to enter the connection wait
          strategy and complete the connection. When using the leader
          follower wait strategy, a non-blocking connect will "poll" by
          setting the timeout value to be ACE_Time_Value::zero. A race
          could occur when the other thread actually handles the
          connection completion, but after the interested thread starts to
          enter the leader-follower. In this case the timeout of zero
          causes the LF to change the connection handler's state to
          TIMEOUT, but this was not detected as an error condition. Thus
          the LF_Event relating to the connection completion was never
          successful or an error and the waiting thread became the leader
          and was then stuck.

          This fix works by first treating the TIMEOUT state as an error,
          to break out of the LF loop, then the connector will reset the
          timeout state if that is appropriate. Finally, a second error in
          the connector is fixed where the transport's register_handler
          method return value was incorrectly tested.

        * tests/AMI_Buffering/client.cpp:

          Adjusted the timeout values a bit. On a sufficiently fast
          computer, it is possible for the sender to overflow the TCP
          buffers thus taking too long to flush and spuriously reporting
          errors.

Sat May 13 14:34:23 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Two_DLL_ORB/server.cpp:

          Removing the use of ACE_OS::unlink() since it is causing
          unresolved link errors on windoze. Using alternative IOR file
          truncation method to get rid of "stale" IOR files from previous
          executions.

Fri May 12 14:00:17 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Two_DLL_ORB/client.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/run_test.pl:
        * tests/ORB_Local_Config/Two_DLL_ORB/server.cpp:

          Updated the test to account for the case where the server may
          not have completed writing out its IOR, by the time the client
          tries to use it to get an object reference. Added ACE_TEXT where
          appropriate.

Thu May 11 21:13:22 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/AnyTypeCode/Any_Unknown_IDL_Type.h:
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp:

          Having a lock_ as a global static makes this code subject to the
          whim of the specific compiler implementation and library
          ordering. It is up to the compiler to decide the order in which
          our instance is initialized and destroyed. Typically, this
          becomes a problem when a code that depends on that instance
          finds that the runtime has already destroyed it. The scenario
          plays almost always in the process shutdown code, after main()
          exits (which is a lot of fun to debug :).  The change replaces
          the static class member with static-local variable, defined
          within a static member function. C++ guarantees that the local
          static variable will be initialized at the first method
          invocation.

        * tao/ORB_Core.cpp:

          Reversing a changes, introduced by this:
          Wed Apr 26 20:21:49 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

          I had incorrectly assumed that the same pattern of dynamic
          loading of factories applies to all factories. In fact many of
          them are optional and their usage is predicated on having a svc
          conf file, having their library statically linked. This change
          removes the overly aggressive attempts to load such services and
          the incorrect usage of TAO_AS_STATIC_LIBS macro..

Thu May 11 19:21:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        Reverted the change below, it breaks some gcc builds, have to figure
        out another change.

        Thu May 11 13:23:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>
        * tao/Unbounded_Octet_Sequence_T.h:
          Moved equal and not equal operators for the octet sequence to
          the TAO namespace, this fixes the build error in the vc71
          namespace build.

Thu May 11 09:22:10 2006  Douglas C. Schmidt  <schmidt@cse.wustl.edu>

        * performance-tests/Throughput/Receiver.cpp (done),
        * performance-tests/Throughput/client.cpp (main): Changed
          division by 10000000 to division by 1000000.  Thanks to
          Jason Zhao <jason.zhao at lmco dot com>.

Thu May 11 13:49:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1254_Regression/BlobServer.h:
        * tests/Bug_1254_Regression/client.cpp:
          Fixed casing of includes

Thu May 11 13:23:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Unbounded_Octet_Sequence_T.h:
          Moved equal and not equal operators for the octet sequence to
          the TAO namespace, this fixes the build error in the vc71
          namespace build.

        * tests/OBV/Truncatable/client.cpp:
          Added missing string_dup calls, fixes crashing of this test
          with Borland C++

Thu May 11 10:35:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Generic_Sequence_T.h:
          Small layout change

Thu May 11 07:19:12 UTC 2006  Kees van Marle  <kvmarle@remedy.nl>

        * tests/Bug_1254_Regression/*
          New regression for bug 1254

        * tao/Unbounded_Octet_Sequence_T.h:
          Fixed a bug in the octet sequence when used as inout argument and
          when shrinking the lenght while a message block was being used
          the full message block was send back, not the smaller length.
          We now do a copy of the data to really make sure we don't
          modify the mb incorrectly. Thanks to Peter van Merkerk
          <Peter dot van dot Merkerk at meco dot nl> and
          Marc Walrave <marc dot walrave at meco dot nl> for reporting this.
          This fixes bugzilla bug 1254.

Wed May 10 20:13:45 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/PI/ORBInitializer_Registry_Impl.h:
        * tao/PI/ORBInitializer_Registry_Impl.cpp:
        * tao/PI/PI.cpp:

          My change from last night (04:26:14 UTC) swung the pendulum too
          far back in the other direction. I discovered that once again
          some dynamic PI tests were breaking. I've rectified this by
          putting Iliyan's code back in ORBInitialiser_Registry_Impl but
          with a !TAO_AS_STATIC_LIBS guard around the code to avoid the
          redundant processing that might occur with static libs.

Wed May 10 17:21:26 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/EndpointPolicy/Endpoint_Value_Impl.h:

          I missed committing this with the other versioned namespace
          changes.

Wed May 10 11:49:10 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/PortableServer/Acceptor_Filter_Factory.h:
        * tao/PortableServer/POAManagerFactoryC.h:
        * tao/PortableServer/POAManagerFactoryC.cpp:

          Cleaning up Versioned namespace related issues.

Wed May 10 04:26:14 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/ORB_Core.cpp:

          Removed the agressive loading of the IORInterceptor adaptor
          factory. It truely is optional, thus its failure to load is not
          an error. At least not an error in the ORB core.

        * tao/PI/ORBInitializer_Registry_Impl.h:
        * tao/PI/ORBInitializer_Registry_Impl.cpp:
        * tao/PI/PI.h:
        * tao/PI/PI.cpp:
        * tao/PI/PolicyFactory_Loader.h:
        * tao/PI/PolicyFactory_Loader.cpp:

          Reverted most of the changes used to resolve a circular
          dependency problem with the PI initialization. The problem is
          that the initial fix then broke the static builds. The solution
          of using TAO_AS_STATIC_BUILDS is a reasonable compromise as it
          allows dynamic builds to not get caught in a circular
          initialization situation, but lets static builds get the
          initialization they need.

Tue May  9 19:05:30 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/CSD_Strategy/ThreadPool6/CSD_Test_ThreadPool6.mpc:
        * examples/CSD_Strategy/ThreadPool6/Makefile.am:
          Added -GT to the idlflags

Tue May  9 16:32:01 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/ORB_Core.cpp:

          Added a clarifying comment.

        * tao/TAO_Internal.cpp:

          Fixing a problem in processing -ORBSvcConf command-line
          options. Both the process-wide and the ORB-local service
          gestalts were processing configuration files. This was causing
          the loading of the default svc.conf file, even when another one
          had been specified by -ORBSvcConf. The fix is to give the
          process-wide gestalt a chance to load the svc conf file, if it
          is being initialized for the first time.

        * tests/ORB_Local_Config/Bug_1459/Test.cpp:

          Minor updates.

        * tests/ORB_Local_Config/Two_DLL_ORB/client.cpp:

          Updated the tests to eliminate some possibilities for TRANSIENT
          exceptions.

Tue May  9 11:37:30 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/tutorials/Quoter/idl/Quoter_idl.mpc:
        * orbsvcs/orbsvcs/Makefile.am:
        * examples/POA/TIE/Makefile.am:
        * docs/tutorials/Quoter/idl/Makefile.am:
          Add -GT to the idlflags

Tue May  9 07:46:30 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/String_Alloc.cpp:
          Small const fix, simplified CORBA::string_dup a little bit

Tue May  9 07:36:30 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_global.cpp:
          Don't generate the TIE files (_S.*) by default anymore. The
          commandline option -Sc has been removed, this suppressed the
          generation of these files. The new option -GT has been added,
          if you need the TIE files, use the -GT option when compiling
          your idl files. This safes disk space on all systems and on
          slower machines the builds run then faster. Fixes bug 2525

        * docs/compiler.html:
          Removed -Sc, added -GT

        * NEWS:
          Mention the TIE behaviour change

        * examples/POA/TIE/POA_TIE.mpc:
          Added -GT to the idlflags

        * tao/*.pidl:
          Removed the -Sc flag in the regeneration instructions

Mon May  8 15:52:31 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be_visitor_union_branch/cdr_op_cs.cpp (visit_enum):

          Added code generation to initialize an enum member of a
          union when it is declared for demarshaling. This change
          eliminates warnings in gcc 4.0.2 and possibly other
          compilers.

Mon May  8 10:06:12 UTC 2006  Martin Corino  <mcorino@remedy.nl>

        * docs/Options.html:
        * docs/ORBEndpoint.html:
        * docs/INS.html:
          Added IPv6 specific info regarding endpoint and corbaloc
          definitions.
          Added some links for easier crossreferencing.

Mon May  8 09:22:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Hello/run_test.pl:
          Added support for a -debug commandline arugment, if this is
          passed when starting this script then -ORBDebugLevel 10 is
          passed to client and server.

Sun May  7 21:39:30 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Bunch/Test.cpp:

          Removed a misplaced semicolon.

Sun May  7 14:56:20 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Bunch/Test.cpp:

          Removed semicolons after if() - cleaning the residue from
          replacing the ACE_ASSERTs.

Sun May  7 06:59:54 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/ORB_Core.cpp:

          Replaced 'new' with ACE_NEW.

        * tests/ORB_Local_Config/Service_Dependency/Test.cpp:
        * tests/ORB_Local_Config/Shared/Test.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/run_test.pl:
        * tests/ORB_Local_Config/lib/Service_Configuration_Per_ORB.h:

          Minor edits and cleanup.

Fri Apr 28 10:47:26 2006  Douglas C. Schmidt  <schmidt@cse.wustl.edu>

        * tao/Stub.cpp: Added a #include of "tao/CDR.h" to support SunC++.
          Thanks to Vladimir Panov <gbr at voidland dot org> for reporting
          this.

Fri Apr 14 17:47:18 2006  Douglas C. Schmidt  <schmidt@cse.wustl.edu>

        * docs/releasenotes/index.html: Updated the documentation to
          include more pluggable protocols.  Thanks to Willie Chen
          <wchen12 at ucla dot edu> for motivating this.

Fri May  5 18:48:45 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/TAO_Internal.cpp:
        * tao/default_resource.cpp:
          In addtion to the reorganization Iliyan did, it was discovered
          that the codeset library was not getting properly
          initialized. When the codeset negotiation feature was made
          optional for footprint considerations, the loading of the
          codeset library was put into the default Resource
          Factory. However now that we have the potential for multiple
          service repositories, it was no longer sufficient do such late
          initialization of the codeset library. Doing so put it codeset
          manager and default translators in the configuration context of
          the first ORB, not in the global configuration context. Moving
          the bootstrap loading of the Codeset library to TAO internals
          resolves that. The -ORBNegotiateCodeset flag is still evaluated
          making codeset loading optional. It will be loaded to the global
          configuration context by the first ORB that needs it.

Fri May  5 18:05:04 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Bug_1459/Test.cpp:
        * tests/ORB_Local_Config/Bunch/Test.cpp:
        * tests/ORB_Local_Config/Limits/Test.cpp:
        * tests/ORB_Local_Config/Separation/Test.cpp:
        * tests/ORB_Local_Config/Service_Dependency/Test.cpp:
        * tests/ORB_Local_Config/Shared/Test.cpp:
        * tests/ORB_Local_Config/Simple/Test.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/Test.cpp:

          Eliminating the use of ACE_ASSERT and replacing with if's and
          ACE_ERROR. The ACE_ASSERT may cause an abort(), which will cause
          resources to not be cleaned correctly on embedded targets like
          VxWorks. Thanks to Johnny Willemsen <jwillemsen@remedy.nl> for
          clarifying this.

        * tests/ORB_Local_Config/lib/Service_Configuration_Per_ORB.h:

          A little cleanup.

Fri May  5 16:12:17 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/ORB_Core.cpp:
        * tao/TAO_Internal.cpp:

          The initialization of the additional services, which runs right
          after the global repository initialization (open()) was supposed
          to execute in the context of that same global repository. This
          is necessary in case the initialization causes additional
          services to be registered. Fixes a problem with
          $TAO_ROOT/tests/RTCORBA/ORB_init.

Fri May  5 11:26:42 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Asynch_Queued_Message.{h,cpp}:
        * tao/Synch_Queued_Message.{h,cpp}:
          Changed is_heap_allocated to a real bool so that it matches
          the base class.

        * tao/Unbounded_Octet_Sequence_T.h:
          Small const improvment

        * tao/GIOP_Message_Base.cpp:
          Fixed typo in comment

        * tao/DynamicInterface/Request.h:
          Removed commented out method

Thu May  4 16:22:42 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Two_DLL_ORB/ORB_DLL_Export.h:

          Regenerated the file to fix a problem with building the test in
          static builds.

Thu May  4 13:36:00 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Service_Dependency/Test.cpp:

          Eliminated a "magic" constant, used for the number of expected
          services, because it can vary dependent on the particular TAO
          configuration, like mincorba, static, etc.

Thu May  4 08:53:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/ClientRequestInfo.cpp:
          Fixed bug 2510 in such a way that TAO doesn't crash but it seems
          we then miss some functionalify. The reporter will extend the test
          to detect the missing functionality. Thanks to Martin Cornelius
          <Martin dot Cornelius at smiths-heimann dot com>
          for reporting this bug and providing a regression test

Thu May  4 07:54:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/EndpointPolicy/Endpoint_Acceptor_Filter.cpp:
          Fixed warning in VxWorks 5.5.1 builds

Thu May  4 00:45:45 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Removed EndpointPolicy/EndpointPolicyC.inl.

Wed May  3 21:26:07 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/TAO_Internal.cpp:
          The order of initialization of static services was modified as
          multi-orb configuration feature implementation. Somehow during
          that refactoring some services that are required to be initialized
          ended up having that done before the svc.conf file is processed.
          For instance RT_ORB_Loader. This change breaks up the loading of
          and initializing of these services to ensure that svc.conf always
          gets processed first before doing any default initialization.

Wed May  3 19:14:12 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Two_DLL_ORB/Two_DLL_ORB.mpc:

          Updated to resolve buld failures (vc71+Windows) - the two DLLs
          produced, now contain identical code. It determines at runtime,
          whether to act as a client or as a server - a decision
          influenced by a command-line option, in the service
          configuration file.

Wed May  3 18:32:29 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/POA/EndpointPolicy/run_test.pl:
          The test was failing on Windows because TAO apparently gets
          built with -ORBDottedDecimalAddresses defaulted to 1. The
          current version of the endpoint policy is very simple in that it
          uses literal string comparisons for determining the suitability
          of a given candidate profile endpoint. The test is specificly
          trying to match "localhost" but fails when the server
          substitutes "127.0.0.1" Perhaps an alternative solution would be
          to test both literal strings.

Wed May  3 16:54:41 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:

          Fix an apparent typo introduced the previous commit.

Wed May  3 16:06:56 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Bug_1459/Bug_1459.mpc:
        * tests/ORB_Local_Config/Bunch/Bunch.mpc:
        * tests/ORB_Local_Config/Limits/Limits.mpc:
        * tests/ORB_Local_Config/Separation/Separation.mpc:
        * tests/ORB_Local_Config/Service_Dependency/Service_Dependency.mpc:
        * tests/ORB_Local_Config/Shared/Shared.mpc:
        * tests/ORB_Local_Config/Simple/Simple.mpc:
        * tests/ORB_Local_Config/Two_DLL_ORB/Two_DLL_ORB.mpc:

          Removed the dependency on ACE test_output library to make it
          possible to build the TAO tests without having to build ACE
          tests. This is often the case on embedded platforms (VxWorks),
          where part of the tests run outside the host platform. Thanks to
          Johnny Willemsen for pointing that out.

        * tests/ORB_Local_Config/Bug_1459/Test.cpp:
        * tests/ORB_Local_Config/Bunch/Test.cpp:
        * tests/ORB_Local_Config/Limits/Test.cpp:
        * tests/ORB_Local_Config/Separation/Test.cpp:
        * tests/ORB_Local_Config/Service_Dependency/Test.cpp:
        * tests/ORB_Local_Config/Shared/Test.cpp:
        * tests/ORB_Local_Config/Simple/Test.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/ORB_DLL.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/Test.cpp:

          Updated the code to use its own ACE_MAIN and fixed some typos.

Wed May  3 15:42:14 UTC 2006  Yan Dai  <dai_y@ociweb.com>

        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:

          Fixed the DDS compilation errors due to the recent
          unbounded string sequence implementation changes.

Wed May  3 13:03:03 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated.

        * tao/tao.mpc:

          Fix yet another typo.

Wed May  3 09:56:10 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Bug_2510_Regression/client.cpp:
          At the end of the test shutdown the server

Wed May  3 03:35:10 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/LF_Multi_Event.h:
        * tao/LF_Multi_Event.cpp:
        * tao/PortableServer/POAManagerFactory.h:
        * tao/PortableServer/POAManagerFactory.cpp:
        * tao/PortableServer/POAManagerFactoryC.h:
          Adding in Versioned namespace macros.

Tue May  2 22:01:51 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/ORB_Local_Config/Two_DLL_ORB/Two_DLL_ORB.mpc:
          Added the portableserver base project to both the client lib and
          server lib projects, since both require client and server
          behavior. This is required for windows builds where apparently
          DLLs must have all symbols fully resolved at link time, unlike
          .so's where they only need to be satisfied at runtime.

Tue May  2 19:08:18 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Two_DLL_ORB/ORB_DLL.h:

        Changing auto_ptr to ACE_Auto_Ptr, because some platforms
        (WinXP64_Intel90_64bit) provide an auto_ptr<> without the reset
        method.

Tue May  2 15:30:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/bounded_sequence_cdr_ut.cpp:
        * tests/Sequence_Unit_Tests/unbounded_sequence_cdr_ut.cpp:
          Added missing includes. Thanks to Carlos O'Ryan for
          reporting this

Tue May  2 13:24:26 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/tao.mpc:
          Reverted J.T.'s change from Mon May  1 20:03:59 UTC 2006
          to flush out the cvs conflict markers and reapplied just his
          typo fix.

Tue May  2 11:47:55 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Separation/Test.cpp:
        * tests/ORB_Local_Config/Shared/Test.cpp:
        * tests/ORB_Local_Config/Simple/Test.cpp:

          The test don't need more specialized type than the base
          ACE_Service_Object, in order to demonstrate the intent.

Tue May  2 08:05:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/driver/drv_preproc.cpp:
          When we can't remove the input or output file use %p to print
          the error so that the info from the OS why this couldn't be
          done is also reported to the user.

Tue May  2 03:59:17 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IIOP_Connector.h:
        * tao/IIOP_Connector.cpp:
        * tao/Transport_Descriptor_Interface.h:
        * tao/Transport_Descriptor_Interface.cpp:

          This fix resolves a problem exposed by the
          performance-tests/RTCorba/Oneway/Reliable test. That failure was
          showing up as a pure virtual function call, but the root cause
          was related to the changes to the IIOP_Connector in how it
          cached new transports. I was creating a new transport descriptor
          out of the successful endpoint, but using creating a new
          Base_Transport_Descriptor rather than reusing the supplied
          transport descriptor. This broke RT tests in that subsequent
          invocations would fail to find the cached endpoint since the
          type was different. I've resolved that by adding the new
          reset_endpoint method on the Transport_Descriptor_Interface
          which allows the transport connector to set a new endpoint to
          the existing transport descriptor before caching the value.

Mon May  1 21:54:05 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Bunch/Test.cpp:

          Modified the test not to require the ability to fully
          instantiate TAO_CORBANAME_Parser, etc. which is a class in
          another library and it is not declared so that it is "visible"
          outside of it. The test does not require that in order to be
          functional - using the base class ACE_Service_Object.

        * tests/ORB_Local_Config/Two_DLL_ORB/client.cpp:

          Added some more logging.

Mon May  1 20:03:59 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated.

        * tao/tao.mpc:

          Fix typo.

Mon May  1 19:39:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/OBV/Simple/OBV_Simple.mpc:
          This test isn't dependent on minimum_corba

Mon May  1 18:55:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/TypeCode.{h,cpp}:
          Made type TypeCode_ptr argument of operator << const so that
          the signature is the same as declared in DynamicA.h

Mon May  1 15:33:00 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/OBV/Truncatable/client.cpp:
          This is an improvement to what I committed earlier. Since the
          valuetypes are passed by value, it is perfectly reasonable to
          allocate them on the stack locally. That way I could get away
          from the use of the var to store a reference to the local value
          instance, and also avoid the awkward initialization code used to
          avoid the ambiguity BCB6 was complaining about.

        * tests/POA/POAManagerFactory/POAManagerFactory.cpp:
          Changed the name of an internal catch value. I'm not sure, but I
          suspect this is what was causing the BCB compiler to complain at
          the point of ACE_CATCHANY.

Mon May  1 12:04:17 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/OBV/Truncatable/client.cpp:
        * tests/POA/POAManagerFactory/POAManagerFactory.cpp:
          The Borland BCB6 compiler has trouble with var types and const
          vs. non-const assignment or comparisons. These changes are an
          attempt to address this trouble. I don't like the nature of
          these changes as they are moving away from the built-in type
          safety C++ is supposed to provide.

Mon May  1 03:43:57 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Parallel_Connect_Strategy/run_test.pl:
          The fix for this test was to ensure the CORBALOC parser put all
          the listed endpoints into a single Profile.

Sun Apr 30 22:53:37 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/ORB_Core.cpp:
          Somehow when I applied my patch for the alternate connection
          timeout hook, used allow either or both the AMI connection
          timeout policy or the optimized connection endpoint selector to
          set the connection timeout hook, I managed to apply my change to
          the relative round trip timeout hook. This change addresses that
          and fixes the AMI_Timeout test.

Sun Apr 30 20:24:39 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Bug_1459/Bug_1459.mpc:
        * tests/ORB_Local_Config/Bunch/Bunch.mpc:
        * tests/ORB_Local_Config/Limits/Limits.mpc:
        * tests/ORB_Local_Config/Separation/Separation.mpc:
        * tests/ORB_Local_Config/Service_Dependency/Service_Dependency.mpc:
        * tests/ORB_Local_Config/Service_Dependency/Test.cpp:
        * tests/ORB_Local_Config/Shared/Shared.mpc:
        * tests/ORB_Local_Config/Simple/Simple.mpc:
        * tests/ORB_Local_Config/Two_DLL_ORB/Test.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/Two_DLL_ORB.mpc:
        * tests/ORB_Local_Config/lib/Service_Configuration_Per_ORB.h:

          Updated to simplify the tests and the build process

        * tests/ORB_Local_Config/lib/Service_Configuration_Per_ORB.cpp:
        * tests/ORB_Local_Config/lib/lib.mpc:

          Removed these files.

Sun Apr 30 15:36:21 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * examples/CSD_Strategy/ThreadPool4/ClientTask.cpp:
        * examples/CSD_Strategy/ThreadPool5/ClientTask.cpp:
          Fixed the assignment to the sequence to hand a buffer the
          sequence can properly release.

Sun Apr 30 14:24:20 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * TAO/tao/Profile_Transport_Resolver.cpp:
          Removed invalid semicolons.

        * TAO/tests/ORB_Local_Config/Two_DLL_ORB/Two_DLL_ORB.mpc:
          Fixed the dynamic flag for windows builds.

Sun Apr 30 04:54:25 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Bug_1459/Test.cpp:

          Cleaned up the test a bit to clarify the intent.

Sun Apr 30 00:47:10 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/ORB_Local_Config/Bug_1459/Test.cpp:
          Undoing the damage caused by my too-hasty previous checkin.

        * examples/CSD_Strategy/ThreadPool4/ClientTask.cpp:
        * examples/CSD_Strategy/ThreadPool5/ClientTask.cpp:
          Addressing some more compiler warnings

Sat Apr 29 15:34:15 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/PortableServer/POAManagerFactory.cpp:

        * tests/ORB_Local_Config/Bug_1459/Test.cpp:

        * tests/ORB_Local_Config/Service_Dependency/Service_Config_Test.conf:
        * tests/ORB_Local_Config/Service_Dependency/Test.cpp:

        * tests/ORB_Local_Config/Two_DLL_ORB/ORB_DLL.h:
        * tests/ORB_Local_Config/Two_DLL_ORB/ORB_DLL.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/client.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/server.cpp:

        * tests/ORT/ORT_test_IORInterceptor.cpp:

        * tests/POA/EndpointPolicy/server.cpp:

          Fixes for various build-specific errors/warnings.

Sat Apr 29 14:17:32 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Bug_1459/Test.cpp:

          Removed references  to <iostream> and unreferenced variables.

Sat Apr 29 13:13:20 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/ORB_Local_Config/Bug_1459/Test.cpp:
        * tests/ORB_Local_Config/Service_Dependency/Test.cpp:
          Fuzz cleanup.

Sat Apr 29 02:26:49 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/EndpointPolicy/EndpointPolicy_i.cpp:
          Removed the apparently redundant ACE_NESTED_CLASS macros.

Fri Apr 28 22:25:57 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Bunch/Test.cpp:
        * tests/ORB_Local_Config/Limits/Test.cpp:
        * tests/ORB_Local_Config/Separation/Test.cpp:
        * tests/ORB_Local_Config/Service_Dependency/Test.cpp:
        * tests/ORB_Local_Config/Shared/Test.cpp:
        * tests/ORB_Local_Config/Simple/Test.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/Test.cpp:

          Modified to eliminate warnings about unused variables on
          ACE_NDEBUG builds.

Fri Apr 28 22:04:50 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Bug_1459/Bug_1459.mpc:
        * tests/ORB_Local_Config/Bug_1459/README:
        * tests/ORB_Local_Config/Bug_1459/Test.cpp:
        * tests/ORB_Local_Config/Bug_1459/a.conf:
        * tests/ORB_Local_Config/Bug_1459/b.conf:
        * tests/ORB_Local_Config/Bug_1459/m.conf:
        * tests/ORB_Local_Config/Bug_1459/m1.conf:
        * tests/ORB_Local_Config/Bug_1459/run_test.pl:
        * tests/ORB_Local_Config/Bug_1459/server_cert.pem:
        * tests/ORB_Local_Config/Bug_1459/server_key.pem:

          Added a test I borrowed from bugzilla 1459. It tests the ability
          to have two differently configured ORBs in the same process.

        * examples/Simple/time-date/Time_Date.cpp:

          Provided an ID for the ORB, initialized in a code that was
          loaded from the DLL. The ORB-specific Service Repo changes
          eliminated the need to make TAO_Singleton_Manager not register
          with the Object Manager, when initialized from a DLL.

Fri Apr 28 15:14:04 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Bunch/Service_Config_Test.UTF-16.conf:
        * tests/ORB_Local_Config/Bunch/Service_Config_Test.UTF-16.conf.xml:
        * tests/ORB_Local_Config/Bunch/Service_Config_Test.WCHAR_T.conf:
        * tests/ORB_Local_Config/Bunch/Service_Config_Test.WCHAR_T.conf.xml:
        * tests/ORB_Local_Config/Bunch/Service_Config_Test.conf:
        * tests/ORB_Local_Config/Bunch/Service_Config_Test.conf.xml:

          Moved these files to Service_Dependency, which also received the
          code that uses these.

        * tests/ORB_Local_Config/Service_Dependency/Service_Config_Test.UTF-16.conf:
        * tests/ORB_Local_Config/Service_Dependency/Service_Config_Test.UTF-16.conf.xml:
        * tests/ORB_Local_Config/Service_Dependency/Service_Config_Test.WCHAR_T.conf:
        * tests/ORB_Local_Config/Service_Dependency/Service_Config_Test.WCHAR_T.conf.xml:
        * tests/ORB_Local_Config/Service_Dependency/Service_Config_Test.conf:
        * tests/ORB_Local_Config/Service_Dependency/Service_Config_Test.conf.xml:
        * tests/ORB_Local_Config/Service_Dependency/Test.cpp:

          Moved here the config files from the Bunch test as it may be run
          in single threaded builds and the code that uses these config
          files requires multiple threads.

Fri Apr 28 14:51:20 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/TAO_Internal.cpp:

          Fixed an error, that prevented the initialization of static
          services during Service_Config::open, The override for the
          default argument (ignore_static_svcs = 1) was missed during the
          refactoring.

Fri Apr 28 13:46:43 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Bunch/Test.cpp:
        * tests/ORB_Local_Config/Limits/Test.cpp:
        * tests/ORB_Local_Config/Service_Dependency/Test.cpp:
        * tests/ORB_Local_Config/Shared/Test.cpp:
        * tests/ORB_Local_Config/Simple/Test.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/Test.cpp:

          Updated to shut up unused variable warnings on builds where
          ACE_NDEBUG has been defined.

Thu Apr 27 21:09:51 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Profile.cpp:
          Fix a problem that caused the endpoint selector to spin when
          using shared profiles and none of the endpoints were valid.

Thu Apr 27 15:03:08 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tests/ORB_Local_Config/Bunch/Test.cpp:
        * tests/ORB_Local_Config/Limits/Test.cpp:
        * tests/ORB_Local_Config/Simple/Test.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/Test.cpp:

          Fixed fuzz issues (unmatched ACE_TRACE)

        * tests/ORB_Local_Config/Service_Dependency/Service_Config_DLL.cpp:
        * tests/ORB_Local_Config/Service_Dependency/Service_Dependency.mpc:

          Modified to change the DLL name to avoid name conflict with the
          one in ACE_ROOT/tests.

Thu Apr 27 14:20:02 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IIOP_Endpoint.cpp:
          Fixed a recursion problem with the IPv6 endpoint selection.

        * tao/PortableServer/POAManagerFactory.cpp:
          Cleaned up compiler warnings.

Thu Apr 27 06:55:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/ORB_Local_Config/lib/lib.mpc:
          Added base project, this would at least get our builds running again

Thu Apr 27 03:46:34 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/EndpointPolicy/Endpoint_Acceptor_Filter.cpp:

          Found the trouble that was crashing the endpoint test. It was
          nothing wierd with the new sequence code, it was merely an
          incorrect index variable - i should have been j.

Thu Apr 27 03:05:31 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/params.cpp:

          One of my patches inadvertently flipped the sense of the
          share_profiles default from 0 to 1. However, I think that 1
          should be the default, since it generates more compact IORs. It
          has been that way for years in the OCI version of TAO, but I am
          keeping the default 0 here for tradition. This value is
          overridden by using -ORBUseSharedProfile [0|1] ORB_init option.

Thu Apr 27 02:58:23 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/EndpointPolicy/Endpoint_Value_Impl.cpp:
        * tao/EndpointPolicy/Endpoint_Value_Impl.h:

          Added a virtual destructor to this otherwise abstract base
          class.

Wed Apr 26 21:24:54 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * NEWS:

          Added an entry to the NEWS file.

Wed Apr 26 20:21:49 UTC 2006  Iliyan Jeliazkov  <iliyan@ociweb.com>

          The motivation for these changes was to enable support for
          ORB-local Service Objects. This for instance, makes it possible
          for differently configured ORBs to coexist within the same
          proces.

          In order to accomplish this, each orb (core) owns a "Gestalt",
          i.e. a service object repository instance. There is also a
          process-wide, or "global" gestalt, which is the default
          repository where service objects are registered. The latter
          retains the interface and behavioral compatibility with any
          existing code. As a consequence of this design choice, any
          un-named orb(s) will default to using the ubergestalt, which is
          consistent with the prior behavior.

        * tao/DLL_Parser.cpp:

          Fixed the parse_string() method to use the correct ORB gestalt
          when looking up a dynamic service object. That resolves a
          failure in TAO/tests/Object_Loader test.

        * tao/ORB.cpp:

          Relocated some aging comments about having first to instantiate
          the singleton manager to the correct place (ORB_init). Added a
          gestalt parameter to the call to open_services. Edited a few
          lines to fit within the standard length requirement.

        * tao/ORB_Core.h:
        * tao/ORB_Core.i:
        * tao/ORB_Core.cpp:

          Added a member and an accessors for the private service gestalt,
          owned by the core. Replaced the call to methods that use the
          implicit ubergestalt with ones that specify the gestalt to use
          for service objects.

          Added an ACE_Service_Config_Guard to make sure the ORB
          initialization uses the correct repository.

          Updated more references to process_directive() and instance() to
          use ACE_TCHAR.  Updated references to process_directive() to use
          ACE_TCHAR for consistency.

          Added #if !defined(TAO_AS_STATIC_LIBS)/#endif around code, which
          is only meaningful when TAO is _not_ statically compiled;
          Updated the service and DLL symbol names used to load the
          CodecFactory_Loader, PolicyFactory_Loader and
          TypeCodeFactory_Loader dynamic services, in the cases where
          those services are not statically linked and TAO supports
          dynamic linking. (Thanks Ossama, for pointing that out.)  Added
          code to try and explicitly load an IORInterceptor adapter and
          Concrete_IORInterceptor_Adapter_Factory, if TAO supports (is
          built with) dynamic linking;

          Updated the code that loads the IORTable adapter to be exception
          safe; Edited a few lines to fit within the standard length
          requirement.

        * tao/Parser_Registry.cpp:

          Updated to explicitly specify the correct gestalt for the ORB.

        * tao/TAO_Internal.h:
        * tao/TAO_Internal.cpp:

          Refactored the initialization code to separate process-wide
          aspects of initialization from those having to do with the ORB
          instance. It is necessary to deal with global initialization
          because of the large number of use cases, where the first thing
          a process does is to call ORB_init, and consequently -
          open_services. There are also cases where a process calls
          Service_Config::open, initializing the process-wide
          configuration and only then proceeds to call ORB_init - for
          example when using Service Configurator to load a DLL that uses
          an ORB. The close_service is now only responsible for calling
          close in the ORB's own gestalt, the ACE Object Manager is the
          one that is clobering the process-wide Service Configuration.
          Updated to explicitly specify the correct gestalt to be used.

        * tao/default_resource.h:
        * tao/default_resource.cpp:

          Added the ACE_Dynamic_Service_Dependency member to the default
          resource factory to expressly maintain the factory's dependance
          on TAO_Codeset library, because the order of destruction may be
          reversed in some cases. The member help us keep our access to
          TAO_Codeset_Manager instances by upping the ref count on
          TAO_Codeset's DLL. This is far from elegant, but a complete
          reference counting scheme for the ORB services is a more complex
          undertaking than what the available resources currently permit.

        * tao/CSD_ThreadPool/CSD_TP_Strategy_Factory.cpp:

          Fixed an (unrelated) issue arising from a call to strcmp() with
          two different character types - only visible when ACE_USES_WCHAR
          is in effect.

        * tao/Codeset/Codeset_Manager_i.h:
        * tao/Codeset/Codeset_Manager_i.cpp:

          (minor) Added void as argument to the ctor and dtor.

        * tao/PI/ORBInitializer_Registry_Impl.h:
        * tao/PI/ORBInitializer_Registry_Impl.cpp:

          Implemented an init() method, which registers all the static
          services, usually taken for granted with the loading of
          TAO_PI. Previously, static initializers were used, however the
          dependent static services were being registered only globally,
          which broke the ORBs that needed ORB-local services.

        * tao/PI/PI.h:
        * tao/PI/PI.cpp:
        * tao/PI/PolicyFactory_Loader.h:
        * tao/PI/PolicyFactory_Loader.cpp:

          Removed the static initializers code and made it part of the
          dynamic service's init method. See the comment above.

        * tao/PortableServer/Root_POA.cpp:

          Explicitly specified the gestalt to be used for registering
          dynamic services.

        * tests/DLL_ORB/Test_Client_Module.cpp:
        * tests/DLL_ORB/Test_Server_Module.cpp:

          Provided an ID for the client and server's ORB.  In the future,
          an option may be devised so that the user can specify if they
          want any ORB to use its own gestalt, even if it does not have an
          ID. The reverse would be to force all ORBs to use the global SR,
          even if they have an ID.  Fixed a a SEGV upon process
          termination. The first thing a client process does in its main()
          is to load a dynamic service - Test_Client_Module, using a call
          to ACE_Service_Config::process_directive(). The service does
          call ORB_init(), which causes the population of the SR with a
          number of static and dynamic SOs. At process termination now
          however, any services registered following the ORB_init () call
          are destroyed first and will be unavailable when the
          Test_Client_Module is finalized. Like the Resource Factory, for
          example.

          The solution is to provide and ORB id for any ORB, which will
          loaded as part of a dynamic service.  Since the service gestalt
          is tied to the ORB id, this will cause the new ORBs to create
          and manage the lifetime of their own Service Repositories. The
          ORB_init() will be invoked in the context of each distinct SR
          and any SO an ORB needs will go there. At process termination,
          the Test_Client_Module will be finalized, which will clobber the
          ORB's SR and any SO registered there.

        * tests/ORB_Local_Config/ORB_Local_Config.mwc:
        * tests/ORB_Local_Config/README:
        * tests/ORB_Local_Config/run_tests_all.pl:

          Added tests and examples of the functionality affected by the
          introduction of the multiple private (per-ORB) service
          configuration repositories.

        * tests/ORB_Local_Config/lib/Service_Configuration_Per_ORB.h:
        * tests/ORB_Local_Config/lib/Service_Configuration_Per_ORB.cpp:
        * tests/ORB_Local_Config/lib/lib.mpc:

          Common test code.

        * tests/ORB_Local_Config/Bunch/Bunch.mpc:
        * tests/ORB_Local_Config/Bunch/Service_Config_Test.UTF-16.conf:
        * tests/ORB_Local_Config/Bunch/Service_Config_Test.UTF-16.conf.xml:
        * tests/ORB_Local_Config/Bunch/Service_Config_Test.WCHAR_T.conf:
        * tests/ORB_Local_Config/Bunch/Service_Config_Test.WCHAR_T.conf.xml:
        * tests/ORB_Local_Config/Bunch/Service_Config_Test.conf:
        * tests/ORB_Local_Config/Bunch/Service_Config_Test.conf.xml:
        * tests/ORB_Local_Config/Bunch/Test.cpp:
        * tests/ORB_Local_Config/Bunch/run_test.pl:

          A collection of miscellaneous tests for compatibility of the new
          interfaces with the old; Processing of the command-line
          directives; Loading dynamic services in a local repository;
          Loading the ORBInitializer_Registry locally; Test the helper
          components used to implement the temporary substitution of the
          repository currently used as "global" for the sake of
          registering static services, which are dependent on a dynamic
          service;

        * tests/ORB_Local_Config/Limits/Limits.mpc:
        * tests/ORB_Local_Config/Limits/Test.cpp:
        * tests/ORB_Local_Config/Limits/run_test.pl:

          Testing the size limits of a gestalt.

        * tests/ORB_Local_Config/Separation/Separation.mpc:
        * tests/ORB_Local_Config/Separation/Test.cpp:
        * tests/ORB_Local_Config/Separation/run_test.pl:

          Services registered with separate repositories must remain
          separate and inaccessible through anyone but the gestalt they
          were registered with.

        * tests/ORB_Local_Config/Service_Dependency/Service_Config_DLL.h:
        * tests/ORB_Local_Config/Service_Dependency/Service_Config_DLL.cpp:
        * tests/ORB_Local_Config/Service_Dependency/Service_Config_DLL_Export.h:
        * tests/ORB_Local_Config/Service_Dependency/Service_Dependency.mpc:
        * tests/ORB_Local_Config/Service_Dependency/Test.cpp:
        * tests/ORB_Local_Config/Service_Dependency/run_test.pl:

          Tests the working of the ACE_Dynamic_Service_Dependency class

        * tests/ORB_Local_Config/Shared/Shared.mpc:
        * tests/ORB_Local_Config/Shared/Test.cpp:
        * tests/ORB_Local_Config/Shared/run_test.pl:

          Test that the default repository is available through any
          Service Gestalt, created with its default ctor.

        * tests/ORB_Local_Config/Simple/Simple.mpc:
        * tests/ORB_Local_Config/Simple/Test.cpp:
        * tests/ORB_Local_Config/Simple/run_test.pl:

        * tests/ORB_Local_Config/Two_DLL_ORB/ORB_DLL.h:
        * tests/ORB_Local_Config/Two_DLL_ORB/ORB_DLL.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/ORB_DLL_Export.h:
        * tests/ORB_Local_Config/Two_DLL_ORB/Service_Config_ORB_Test.conf:
        * tests/ORB_Local_Config/Two_DLL_ORB/Service_Config_ORB_Test2.conf:
        * tests/ORB_Local_Config/Two_DLL_ORB/Test.idl:
        * tests/ORB_Local_Config/Two_DLL_ORB/Test.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/Test_i.h:
        * tests/ORB_Local_Config/Two_DLL_ORB/Test_i.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/Two_DLL_ORB.mpc:
        * tests/ORB_Local_Config/Two_DLL_ORB/client.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/run_test.pl:
        * tests/ORB_Local_Config/Two_DLL_ORB/server.cpp:

          Testing the loading a dynamic service, which initializes its own
          ORB. The test is a variant of the Hello test with the twist that
          both the client and the server are service objects, loaded by
          the Service Configuration mechanism.

Wed Apr 26 20:09:33 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/EndpointPolicy/EndpointPolicyC.h:
        * tao/EndpointPolicy/EndpointPolicyC.cpp:

          Fixed fuzz errors.

        * tao/EndpointPolicy/EndpointPolicyC.inl:

          Removed this file.

Wed Apr 26 19:44:36 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated.

        * tao/EndpointPolicy.mpc:

          Added Pkgconfig_Files definition.

        * tao/EndpointPolicy/TAO_EndpointPolicy.pc.in:

          New file, pkg-config *.pc template for TAO_EndpointPolicy
          library.

Wed Apr 26 19:08:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/OBV/Simple/Client_i.h:
          Fixed casing of include

Wed Apr 26 19:13:02 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IIOP_Connection_Handler.cpp:
        * tao/ORB_Core.cpp:
        * tao/params.h:
        * tao/params.i:
        * tao/params.cpp:

          This change was of OCI by David.Gibbs@igindex.co.uk. He had
          previously requested the addition of support for SO_KEEPALIVE
          and as a result we found that the framework existed for
          communicating a value of SO_DONTROUTE, so it was decided that we
          go ahead and add the feature. I consider this change provisional
          in that it isn't strictly required and so if someone strongly
          objects to its existence it can be pulled. Otherwise it is
          simply completing what someone else had started a while ago by
          adding configuration values for socket options to IIOP protocol
          properties definition.

Wed Apr 26 18:47:23 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:

          Add an alternate connection timeout hook. This is necessary for
          users of the Optimized Connect Endpoint Selector with its
          timeout while also using CORBA messaging and the Connection
          Timeout policy. Both of these connection timeouts are
          dynamically loaded and one would override the other. This change
          allows both to be loaded, and if both are initialized to nonzero
          values, the lesser of the two timeouts is used. This results
          from a bug originally reported to OCI by friedhelm.wolf@homag.de.

        * tao/Strategies/OC_Endpoint_Selector_Loader.cpp:
        * tao/Strategies/OC_Endpoint_Selector_Loader.h:

          Cleaned up the initializer to be more consistent with others.

        * tao/Strategies/Optimized_Connection_Endpoint_Selector.cpp:

          Fixed wihtespace in debug output.

Wed Apr 26 16:42:45 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * docs/Options.html:

          Adding text for the new commandline options used to control the
          parallel connect feature.

        * tao/Blocked_Connect_Strategy.h:
        * tao/Blocked_Connect_Strategy.cpp:
        * tao/CORBALOC_Parser.cpp:
        * tao/Client_Strategy_Factory.h:
        * tao/Client_Strategy_Factory.cpp:
        * tao/Connect_Strategy.h:
        * tao/Connect_Strategy.cpp:
        * tao/Endpoint.h:
        * tao/Endpoint.cpp:
        * tao/IIOP_Connection_Handler.h:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/IIOP_Connector.h:
        * tao/IIOP_Connector.cpp:
        * tao/IIOP_Endpoint.h:
        * tao/IIOP_Endpoint.cpp:
        * tao/IIOP_Profile.h:
        * tao/IIOP_Profile.cpp:
        * tao/Invocation_Endpoint_Selectors.h:
        * tao/Invocation_Endpoint_Selectors.cpp:
        * tao/LF_CH_Event.h:
        * tao/LF_Connect_Strategy.h:
        * tao/LF_Connect_Strategy.cpp:
        * tao/LF_Event.h:
        * tao/LF_Multi_Event.h:
        * tao/LF_Multi_Event.cpp:
        * tao/MProfile.h:
        * tao/MProfile.i:
        * tao/MProfile.cpp:
        * tao/ORB_Core.cpp:
        * tao/Profile.h:
        * tao/Profile.cpp:
        * tao/Profile_Transport_Resolver.h:
        * tao/Profile_Transport_Resolver.cpp:
        * tao/Reactive_Connect_Strategy.h:
        * tao/Reactive_Connect_Strategy.cpp:
        * tao/Transport.cpp:
        * tao/Transport_Connector.h:
        * tao/Transport_Connector.cpp:
        * tao/Transport_Descriptor_Interface.h:
        * tao/Transport_Descriptor_Interface.inl:
        * tao/Transport_Descriptor_Interface.cpp:
        * tao/default_client.h:
        * tao/default_client.cpp:
        * tao/params.h:
        * tao/params.i:
        * tao/params.cpp:
        * tao/tao.mpc:

          These changes support a new technique for active connection
          establishment when presented with a profile containing multiple
          possible endpoints. This commit resolves bugzilla bug #2485.

          The technique in question is "parallel connects" meaning
          attempting to connect to many endpoints simultaniously. It was
          conceived as a way to deal with timeouts when the Invocation
          Endpoint Selector would first try to connect to one or more
          unreachable endpoints. If those endpoints were defined as IP
          addresses (not hostnames) or as resolvable hostnames that
          pointed to unreachable IP addresses, the connection
          establishment would take potentially several minutes to time out
          and eventually encounter a reachable endpoint. In the case of
          shared profiles (those using TAG_ALTERNATE_IIOP_ENDPOINT) this
          delay impacts every single invocation.

          This parallel connect feature (also referred to somewhat
          inacurately as a strategy) avoids this by supplying all the
          endpoints in a profile to the connector and letting it first
          test to see if any are already cached and available, and if not,
          to open connections to each and wait for a winner. When the
          first connection completes, any pending connections are
          terminated.

          In order to minimize the use of pending connections, an iterator
          traverses the list of endpoints creating new connections and
          also checking any existing connections for completion. If the
          first endpoint happens to be reachable and the server responds
          quickly enough, the client may not open any more connections.

          If the server does not respond immediately, a wait strategy is
          entered. This wait strategy may be Reactive or Leader/Follower
          based. In either case, a specal "multi event" type is used to
          allow a single thread to wait on one of many connectors, and
          then to clean up those that didn't finish in time. The parallel
          connect feature is also available using blocking connects, but
          the only advantage there is in checking the cache for all
          endpoints in the profile, there is no performance gain during
          actual connection establishment.

          The parallel connect strategy differs from another endpoint
          selection optimization, available in
          tao/Strategies/Optimized_Connection_Endpoint_Selector.*. That
          strategy works by examining all profiles simultaniously, this
          feature still treats separate profiles separately. This profile
          separation is necessary to support Load Balancing and Fault
          Tolerence. Also, this feature requires additional support to be
          built into protocol specific connectors (IIOP is currently the
          only protocol supporting parallel connects) whereas the other
          feature works regardless of the protocol.

          As this is a new feature, it is disabled by default. Use the
          -ORBUseParallelConnects option to enable its use. A second
          option, -ORBParallelConnectDelay, is used to introduce a small
          delay between the opening of new potential connections if the
          server is particularly busy. This is useful to minimize the
          impact on a busy server if more than one of the available
          endpoints is reachable. Also, because this feature only focuses
          on one profile at a time, the server must be run with
          -ORBUseSharedProfile enabled (it is disabled by default).

        * tests/Parallel_Connect_Strategy/Parallel_Connect_Strategy.mpc:
        * tests/Parallel_Connect_Strategy/README:
        * tests/Parallel_Connect_Strategy/Test.idl:
        * tests/Parallel_Connect_Strategy/Test_i.h:
        * tests/Parallel_Connect_Strategy/Test_i.cpp:
        * tests/Parallel_Connect_Strategy/blocked.conf:
        * tests/Parallel_Connect_Strategy/client.cpp:
        * tests/Parallel_Connect_Strategy/reactive.conf:
        * tests/Parallel_Connect_Strategy/run_test.pl:
        * tests/Parallel_Connect_Strategy/server.cpp:

          This is a new test for the parallel connect feature. It works by
          having the server open two endpoints, one aliased to something
          unreachable. The client then uses different wait strategies to
          make invocations on the server and records the time for
          each. These tests also include counter-examples in which
          parallel connects are not used, and these take several minutes
          to run. On my Linux machine the timeout period is about 3
          minutes which causes the overall test to take about 9 minutes to
          run.

Wed Apr 26 16:30:56 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/PortableServer/POAManagerFactory.cpp:

          Correct a bug found by the Borland compiler.

Wed Apr 26 13:47:28 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/EndpointPolicy.mpc:
        * tao/EndpointPolicy/EndpointPolicy.h:
        * tao/EndpointPolicy/EndpointPolicy.pidl:
        * tao/EndpointPolicy/EndpointPolicy.cpp:
        * tao/EndpointPolicy/EndpointPolicyA.h:
        * tao/EndpointPolicy/EndpointPolicyA.cpp:
        * tao/EndpointPolicy/EndpointPolicyC.h:
        * tao/EndpointPolicy/EndpointPolicyC.inl:
        * tao/EndpointPolicy/EndpointPolicyC.cpp:
        * tao/EndpointPolicy/EndpointPolicyType.pidl:
        * tao/EndpointPolicy/EndpointPolicyTypeA.h:
        * tao/EndpointPolicy/EndpointPolicyTypeA.cpp:
        * tao/EndpointPolicy/EndpointPolicyTypeC.h:
        * tao/EndpointPolicy/EndpointPolicyTypeC.cpp:
        * tao/EndpointPolicy/EndpointPolicy_Export.h:
        * tao/EndpointPolicy/EndpointPolicy_Factory.h:
        * tao/EndpointPolicy/EndpointPolicy_Factory.cpp:
        * tao/EndpointPolicy/EndpointPolicy_ORBInitializer.h:
        * tao/EndpointPolicy/EndpointPolicy_ORBInitializer.cpp:
        * tao/EndpointPolicy/EndpointPolicy_i.h:
        * tao/EndpointPolicy/EndpointPolicy_i.cpp:
        * tao/EndpointPolicy/Endpoint_Acceptor_Filter.h:
        * tao/EndpointPolicy/Endpoint_Acceptor_Filter.cpp:
        * tao/EndpointPolicy/Endpoint_Acceptor_Filter_Factory.h:
        * tao/EndpointPolicy/Endpoint_Acceptor_Filter_Factory.cpp:
        * tao/EndpointPolicy/Endpoint_Value_Impl.h:
        * tao/EndpointPolicy/IIOPEndpointValue.pidl:
        * tao/EndpointPolicy/IIOPEndpointValueA.h:
        * tao/EndpointPolicy/IIOPEndpointValueA.cpp:
        * tao/EndpointPolicy/IIOPEndpointValueC.h:
        * tao/EndpointPolicy/IIOPEndpointValueC.cpp:
        * tao/EndpointPolicy/IIOPEndpointValue_i.h:
        * tao/EndpointPolicy/IIOPEndpointValue_i.cpp:

          The EndpointPolicy is a new, TAO-specific policy that is applied
          to POAManagers via the POAManagerFactory. This commit resolves
          Bugzilla bug #2484.

          The Endpoint policy acts as a filter for constraining the final
          endpoints or profiles listed in an IOR when it is created by a
          POA associated with the POAManager containing the policy. The
          EndpointPolicy value is a sequence, allow multiple endpoints to
          be published.

          The way this works is that the ORB is initialized with all the
          -ORBEndpoint options it needs to provide access to all the
          objects it will serve. Then POAManagers are created with
          Endpoint policies that contain only the endpoints that are to be
          used for its subset of objects. For instance, the ORB could
          define one endpoint for insecure, internal-use-only objects, and
          another for secure internet-facing objects. Using the Endpoint
          Policy these different objects would only get one or the other
          endpoint. Mechanically what happens is that first all Acceptors
          are queried to construct an MProfile, then the resulting
          profiles/endpoints are compared to entries in the policy, those
          not matching are eliminated. It is possible that an endpoint
          policy will exclude all the profiles, which would result in an
          exception being raised at object reference construction time.

          Endpoints are matched in their final form. This means that if an
          IIOP Endpoint makes use of the hostname_in_ior attribute, that
          is the name the policy will use to match.

          Endpoint values are protocol specific. A value for IIOP is
          provided, but new values must be defined to support other
          protocols. The Endpoint value is a local object. New protocol
          specific values do not have to be added to the
          TAO_EndpointPolicy library, but they must specialize
          EndpointPolicy::ValueBase and the implementation must derive
          from TAO_Endpoint_Value_Impl.

        * tao/IIOP_Endpoint.h:
        * tao/IIOP_Endpoint.cpp:
        * tao/IIOP_Profile.h:
        * tao/IIOP_Profile.cpp:
        * tao/Profile.h:
        * tao/Profile.cpp:

          The profile contains the base endpoint as an attribute. This
          caused a problem for the endpoint removal scheme mentioned
          above. If a profile contains two or more endpoints, and the base
          happens to be the one to be eliminated as a result of the
          endpoint comparison, the only thing that could be done is to
          copy the contents of the first alternate into the base, then
          eliminate the duplicate.

        * tao/orbconf.h:

          Added a tag for the new policy.

        * tests/POA/EndpointPolicy/EndpointPolicy.mpc:
        * tests/POA/EndpointPolicy/Hello.h:
        * tests/POA/EndpointPolicy/Hello.cpp:
        * tests/POA/EndpointPolicy/README:
        * tests/POA/EndpointPolicy/Test.idl:
        * tests/POA/EndpointPolicy/client.cpp:
        * tests/POA/EndpointPolicy/run_test.pl:
        * tests/POA/EndpointPolicy/server.cpp:
        * tests/POA/README:

          A new test case for the endpoint policy. This test currently
          fails due to an unresolved interaction with the sequence
          code. The error appears to be related to memory corruption, but
          the cause has not yet been determined. The error only manifests
          when the multiple profiles portion of the test is being
          run. This is where an unmodified IOR would contain two profiles,
          each with one endpoint. The problem does not occur when a single
          profile has two endpoints.

Wed Apr 26 14:04:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Smart_Proxies/client.cpp:
        * tests/Smart_Proxies/Benchmark/client.cpp:
        * tests/Smart_Proxies/dtor/client.cpp:
        * tests/Smart_Proxies/Policy/client.cpp:
          Removed remarks about the KAI compiler, more compilers do
          give these warnings and support for the KAI compilers
          has been removed

Wed Apr 26 13:29:44 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/examples/ORT/Server_IORInterceptor.h:
        * orbsvcs/examples/ORT/Server_IORInterceptor.cpp:

        * orbsvcs/orbsvcs/LoadBalancing/LB_IORInterceptor.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_IORInterceptor.cpp:

        * orbsvcs/orbsvcs/PortableGroup/GOA.h:
        * orbsvcs/orbsvcs/PortableGroup/GOA.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Servant_Dispatcher.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Servant_Dispatcher.cpp:

        * tao/AnyTypeCode/PI_ForwardA.h:

        * tao/CSD_Framework/CSD_Default_Servant_Dispatcher.h:
        * tao/CSD_Framework/CSD_Default_Servant_Dispatcher.cpp:
        * tao/CSD_Framework/CSD_POA.h:
        * tao/CSD_Framework/CSD_POA.cpp:

        * tao/IORInterceptor/IORInfo.h:
        * tao/IORInterceptor/IORInfo.cpp:
        * tao/IORInterceptor/IORInfoC.h:
        * tao/IORInterceptor/IORInterceptorC.h:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.h:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:

        * tao/IORInterceptor_Adapter.h:
        * tao/PI_Forward.pidl:
        * tao/PI_ForwardC.h:

        * tao/RTPortableServer/RT_POA.h:
        * tao/RTPortableServer/RT_POA.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.h:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:

        * tests/ORT/ORT_test_IORInterceptor.h:
        * tests/ORT/ORT_test_IORInterceptor.cpp:

        * tests/Portable_Interceptors/IORInterceptor/FOO_IORInterceptor.h:
        * tests/Portable_Interceptors/IORInterceptor/FOO_IORInterceptor.cpp:

          These are more changes related to the POAManagerFactory. They
          are coupled with my 13:10:59 utc checkin.

Wed Apr 26 13:10:59 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/PortableServer/Acceptor_Filter_Factory.h:
        * tao/PortableServer/Acceptor_Filter_Factory.cpp:
        * tao/PortableServer/Default_Acceptor_Filter.h:
        * tao/PortableServer/Default_Servant_Dispatcher.h:
        * tao/PortableServer/Default_Servant_Dispatcher.cpp:
        * tao/PortableServer/Object_Adapter.h:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/POAManager.h:
        * tao/PortableServer/POAManager.i:
        * tao/PortableServer/POAManager.pidl:
        * tao/PortableServer/POAManager.cpp:
        * tao/PortableServer/POAManagerC.h:
        * tao/PortableServer/POAManagerFactory.h:
        * tao/PortableServer/POAManagerFactory.cpp:
        * tao/PortableServer/POAManagerFactory.pidl:
        * tao/PortableServer/POAManagerFactoryC.h:
        * tao/PortableServer/POAManagerFactoryC.cpp:
        * tao/PortableServer/PortableServer.h:
        * tao/PortableServer/PortableServer.pidl:
        * tao/PortableServer/PortableServerC.h:
        * tao/PortableServer/Regular_POA.h:
        * tao/PortableServer/Regular_POA.cpp:
        * tao/PortableServer/Root_POA.h:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Servant_Dispatcher.h:

          These files are new/updated to support the POAManagerFactory,
          which was added to the CORBA 3.0.2 specification. The PMF is
          used to allow for the explicit creation of POA Managers which
          can then be supplied to POAs during POA creation. POA Managers
          may now also carry policies which will influence all POAs
          associated with it. This work builds on the effort originally
          started by Johnny Willemsen back in the pre-1.4.8 era. This
          commit resolves Bugzilla bug #1785.

        * tests/POA/POAManagerFactory/POAManagerFactory.cpp:
        * tests/POA/POAManagerFactory/POAManagerFactory.mpc:
        * tests/POA/POAManagerFactory/run_test.pl:

          This is a new test for the POAManagerFactory.

Wed Apr 26 13:01:48 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Valuetype/AbstractBase.cpp:
        * tao/Valuetype/AbstractBase.h:
          The _tao_marshal_v method is supposed to be const.

Wed Apr 26 13:01:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Bug_2511_Regression/*:
          Added new regression for bug 2511. Thanks to Martin Cornelius
          <Martin at Cornelius at smiths-heimann dot com> for creating
          this regression

Wed Apr 26 12:20:51 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/AMI/ami_test.idl:
        * tests/AMI/ami_test_i.cpp:
        * tests/AMI/simple_client.cpp:
          Reverting earlier test changes. They were causing problems on
          some platforms and I don't have a clear enough memory of the
          original motivation for the change.

Wed Apr 26 11:46:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/AVStreams/Pluggable/ftp.cpp:
        * orbsvcs/tests/AVStreams/Multicast/ftp.cpp:
          Fixed a bug in these tests, in the test code for element 0 of
          a string sequence was set and after that the length was set to 1.
          The setting of 0 is possible because the OMG doesn't define
          exceptions for this so it is allowed, then setting the length to
          1 does reinitialize element 0 so that we don't get old values.
          This was not done with the old sequences, then just the old
          value was returned and things worked then.

Wed Apr 26 11:21:57 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Valuetype/ValueBase.cpp:

          Fix for errant removal of throw, this corrects the OBV/Factory
          test.

Wed Apr 26 10:41:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Unbounded_Sequence_CDR_T.h:
          Added missing include of SystemException

Wed Apr 26 10:03:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/OBV/Simple/*:
          Added very simple OBV test

Wed Apr 26 09:53:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Bug_2510_Regression:
          New regression test, thanks to Martin Cornelius
          <Martin at Cornelius at smiths-heimann dot com> for creating
          this test. This bug is not fixed yet.

Wed Apr 26 09:44:12 UTC 2006  Kees van Marle  <kvmarle@remedy.nl>

        * tao/Bounded_Sequence_CDR_T.h:
        * tao/Unbounded_Sequence_CDR_T.h:
          Check in all marshal_sequence methods if we aren't trying to
          marshal a nill sequence, this can happen when the user doesn't
          initialize an out argument. In that case we throw a BAD_PARAM
          exception as described in the C++ spec. This fixes bugzilla bug
          1676.

Wed Apr 26 08:42:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ObjRefTemplate/ObjectReferenceTemplateC.h:
        * tao/ObjRefTemplate/Default_ORTC.h:
        * tao/Messaging/ExceptionHolderC.h:
          Include the Valuetype_Adapter_Factory_Impl.h so that the
          Valuetype library gets linked in a static build, this is
          already updated earlier in the IDL compiler

Wed Apr 26 08:17:12 UTC 2006  Kees van Marle  <kvmarle@remedy.nl>

        * tests/Bug_1676_Regression/client.cpp:
          Extended this test to explicitly test for BAD_PARAM exception
          when the server not initializes an out argument

Wed Apr 26 07:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Trader/Interpreter_Utils.h:
          Removed invalid template export

Wed Apr 26 03:46:16 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Valuetype/AbstractBase.cpp:

          Fixed scoreboard detected warning.

Tue Apr 25 19:24:48 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:

          Missed a patch from the earlier commit.

Tue Apr 25 19:09:08 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/examples/ORT/Server_IORInterceptor.h:
        * orbsvcs/examples/ORT/Server_IORInterceptor.cpp:

        * orbsvcs/orbsvcs/LoadBalancing/LB_IORInterceptor.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_IORInterceptor.cpp:

        * orbsvcs/orbsvcs/PortableGroup/GOA.h:
        * orbsvcs/orbsvcs/PortableGroup/GOA.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Servant_Dispatcher.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Servant_Dispatcher.cpp:

        * tao/AnyTypeCode/PI_ForwardA.h:

        * tao/CSD_Framework/CSD_Default_Servant_Dispatcher.h:
        * tao/CSD_Framework/CSD_Default_Servant_Dispatcher.cpp:
        * tao/CSD_Framework/CSD_POA.h:
        * tao/CSD_Framework/CSD_POA.cpp:

        * tao/IIOP_Endpoint.h:
        * tao/IIOP_Endpoint.cpp:
        * tao/IIOP_Profile.h:
        * tao/IIOP_Profile.cpp:

        * tao/IORInterceptor/IORInfo.h:
        * tao/IORInterceptor/IORInfo.cpp:
        * tao/IORInterceptor/IORInfoC.h:
        * tao/IORInterceptor/IORInterceptorC.h:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.h:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:

        * tao/IORInterceptor_Adapter.h:
        * tao/PI_Forward.pidl:
        * tao/PI_ForwardC.h:

        * tao/PortableServer/Default_Acceptor_Filter.h:
        * tao/PortableServer/Default_Servant_Dispatcher.h:
        * tao/PortableServer/Default_Servant_Dispatcher.cpp:
        * tao/PortableServer/Object_Adapter.h:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/POAManager.h:
        * tao/PortableServer/POAManager.i:
        * tao/PortableServer/POAManager.cpp:
        * tao/PortableServer/POAManager.pidl:
        * tao/PortableServer/POAManagerC.h:
        * tao/PortableServer/PortableServer.h:
        * tao/PortableServer/PortableServer.pidl:
        * tao/PortableServer/PortableServerC.h:
        * tao/PortableServer/Regular_POA.h:
        * tao/PortableServer/Regular_POA.cpp:
        * tao/PortableServer/Root_POA.h:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Servant_Dispatcher.h:

        * tao/Profile.h:
        * tao/Profile.cpp:

        * tao/RTPortableServer/RT_POA.h:
        * tao/RTPortableServer/RT_POA.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.h:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:

        * tao/orbconf.h:
        * tao/params.cpp:

        * tests/ORT/ORT_test_IORInterceptor.h:
        * tests/ORT/ORT_test_IORInterceptor.cpp:

        * tests/POA/EndpointPolicy/EndpointPolicy.mpc:
        * tests/POA/EndpointPolicy/Hello.h:
        * tests/POA/EndpointPolicy/Hello.cpp:
        * tests/POA/EndpointPolicy/README:
        * tests/POA/EndpointPolicy/Test.idl:
        * tests/POA/EndpointPolicy/client.cpp:
        * tests/POA/EndpointPolicy/run_test.pl:
        * tests/POA/EndpointPolicy/server.cpp:

        * tests/POA/POAManagerFactory/POAManagerFactory.cpp:
        * tests/POA/POAManagerFactory/POAManagerFactory.mpc:
        * tests/POA/POAManagerFactory/run_test.pl:

        * tests/POA/README:

        * tests/Portable_Interceptors/IORInterceptor/FOO_IORInterceptor.h:
        * tests/Portable_Interceptors/IORInterceptor/FOO_IORInterceptor.cpp:

Tue Apr 25 17:38:34 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * TAO_IDL/be/be_visitor_valuebox/valuebox_ch.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
        * tao/Messaging/ExceptionHolderC.h:
        * tao/Messaging/ExceptionHolderC.cpp:
        * tao/ObjRefTemplate/Default_ORTC.h:
        * tao/ObjRefTemplate/Default_ORTC.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.h:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.cpp:
        * tao/Valuetype/AbstractBase.h:
        * tao/Valuetype/AbstractBase.cpp:
        * tao/Valuetype/StringValueC.h:
        * tao/Valuetype/StringValueC.inl:
        * tao/Valuetype/ValueBase.h:
        * tao/Valuetype/ValueBase.cpp:

          These are further valuetype changes that are related to Bugzilla
          #2162. The problem is that TAO assumes that a valuetype's
          typecode is always encoded as 0x7FFFFF02 <repID> but that is not
          compliant with the spec. It is also valid to encode a valuetype
          typecode as 0x7FFFFF00 which indicates that the actual type of
          the value matches the formal type for the argument for which the
          value is a parameter.  TAO already had most of the hooks in
          place to support this, but was missing a key bit of
          functionality. This patch adds that functionality, the ability
          to test that the formal type matches the actual type when
          marshaling values.

          Valuetypes encoded this way are substantially more efficient, if
          the type can be implied then there is no need to carry the
          actual type id.  Unfortunately to do so blindly would break
          backwards compatibility with all previous versions of TAO.
          For the time being, the effective code to cause TAO to marshal
          values using the more efficient typecode is disabled using a new
          compile-time flag, TAO_HAS_OPTIMIMIZED_VALUETYPE_MARSHALING,
          which must be defined to give TAO the opportunity to use this
          new technique. THIS FLAG BREAKS BACKWARDS COMPATIBILITY. It is
          not a violation of the spec to always encode the valuetype's
          type ID when marshaling, so TAO can continue being backwards
          compatible and not be in violation of the spec. The only
          violation comes when failing to unmarshal a value which is using
          an implied type ID.

          I would prefer to not have a compiler flag to guard the use of
          optimized marshaling, but I don't know any other way to do it.
          At the point where the decision is made, there is no reference
          to an ORB Core so there is no easy way to set a dynamic option
          that could be used to selectively control this optimization.

Tue Apr 25 15:14:13 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

          Merging in truncatable valuetype support. This work was done on
          an OCI controlled patch then brought in via patch. The premise
          is to support the "truncatable" keyword for valuetypes as
          defined in sections 3.9.1.3, 5.2.5.3 and 15.3.4.1 of the CORBA
          3.0.3 specification. Practically, this means supporting the
          marshaling of typecode lists and chunked values. Chunked values
          requires the retention of state, namely nesting level, during
          the marshaling. This was handled by creating a new ChunkInfo
          type that is created on the stack during the marshaling of a
          valuetype and is passed through all the intermediate marshal
          methods. This commit resolves Bugzilla #2483

        * TAO_IDL/be/be_visitor_valuebox/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuebox/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ch.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_cs.cpp:

          Valueboxes by definition cannot be made truncatable, but they
          derive from the same valuebase, thus they must support the same
          signature for creating a list of repository ids. Otherwise these
          are whitespace only changes.

        * TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:

          These are changes for generating code that manages the chunkinfo
          data as it passes through the value members.

        * TAO_IDL/be/be_visitor_valuetype_fwd/cdr_op_ch.cpp:

          Whitespace changes.

        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/fe/idl.yy:

          Removed the warning about support for truncatables.

        * tao/AnyTypeCode/skip.cpp:

          Fixed the type for the valuetag.

        * tao/Messaging/ExceptionHolderC.h:
        * tao/Messaging/ExceptionHolderC.cpp:
        * tao/ObjRefTemplate/Default_ORTC.h:
        * tao/ObjRefTemplate/Default_ORTC.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.h:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.cpp:

          These are the changes required by the truncatable support that
          would ordinarily be generated by the IDL compiler.

        * tao/Valuetype/AbstractBase.h:
        * tao/Valuetype/AbstractBase.cpp:
        * tao/Valuetype/StringValueC.h:
        * tao/Valuetype/StringValueC.cpp:
        * tao/Valuetype/ValueBase.h:
        * tao/Valuetype/ValueBase.inl:
        * tao/Valuetype/ValueBase.cpp:
        * tao/Valuetype/Value_CORBA_methods.h:

          The changes for StringValue and AbstractBase are the same as the
          generated code. The changes in ValueBase are those common to all
          value types, used to determine how to marshal values if the
          truncatable keyword was defined or not. This also includes the
          definintion of the new ChunkInfo type.

        * tests/AMI/ami_test.idl:
        * tests/AMI/ami_test_i.cpp:
        * tests/AMI/simple_client.cpp:

          Changes test misc. fixes for support of wchar data in exceptions.

        * tests/OBV/Truncatable/OBV_Truncatable.mpc:
        * tests/OBV/Truncatable/README:
        * tests/OBV/Truncatable/Truncatable.idl:
        * tests/OBV/Truncatable/TruncatableS_impl.h:
        * tests/OBV/Truncatable/TruncatableS_impl.cpp:
        * tests/OBV/Truncatable/client.cpp:
        * tests/OBV/Truncatable/run_test.pl:
        * tests/OBV/Truncatable/server.cpp:

          A new test specific to validating the truncatable valuetypes.
          Note this test is also added to the ace/bin/tao_orb_tests.lst.

        * tests/Param_Test/svc.conf:

          Remove the explicit override of the wchar codeset for the

Tue Apr 25 14:25:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        Reverted this change below, this change broke this test

        Fri Apr 21 08:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>
        * orbsvcs/tests/Trading/TTest.idl:
          Use the CORBA predefined sequence types

Tue Apr 25 12:20:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/Sequence_Unit_Tests.mpc:
          Added missing unbouded array unit test

Tue Apr 25 11:40:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Trader/Constraint_Visitors.cpp
        * orbsvcs/orbsvcs/Trader/Interpreter_Utils.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Offer_Database.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Service_Type_Repository.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Trader.h
        * orbsvcs/orbsvcs/Trader/Trader_Constraint_Visitors.cpp
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.{h,cpp}:
          Fixed duplicate symbols when linking with vc7/vc8. The trading
          service used the TAO_String_Hash_Key class to store strings
          in hash maps, this class is derived from CORBA::String_var which
          has been refactored to a template. This causes problems with
          vc7/vc8 because the base template is exported from multiple
          libraries. This has been resolved by usign CORBA::String_var
          in the hash map and deliver an ACE_Hash, ACE_Equal_To and
          ACE_Less_Then template specialization. This solves now the
          link problems, the runtime issue that appeared after the
          sequence merge has not been fixed yet. Also see bugzilla bug
          2520 for more info.

Tue Apr 25 08:46:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.cpp:
          Removed runtime check of the sizes of the basic data types. We
          now always use bool for CORBA::Boolean independent of the size
          of bool, see also bugzilla 2515

Tue Apr 25 06:37:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Object.{h,cpp}:
          Made the signature of the static marshal method the same in the
          definition and the implementation.

Mon Apr 24 19:05:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Trader/Interpreter_Utils.h:
          Explicitly export the base template to fix duplicate symbol
          errors with vc71/vc8

Mon Apr 24 14:16:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.cpp:
          Improved debug messages so that we can see if a string is empty
          or not.

        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.h:
          Doxygen cleanup

        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
          Improved debugging output to resolve bug that seems to be introduced
          by the sequence changes, the flowspec sequence has length of 1 but
          just an empty string as value

Mon Apr 24 13:12:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/params.cpp:
          Small const improvement

        * tao/ORB.{h,cpp}:
          Updated CORBA::ORB::RequestSeq to CORBA::RequestSeq as the spec
          describes. Fixes bugzilla bug 2512.

Mon Apr 24 12:02:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.cpp:
          Added include of ObjectIdListC.h to resolve compile errors related
          to this type with Sun Studio 10

Mon Apr 24 11:56:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        Reverted change below, set method is IDL generated.

        Mon Apr 24 09:39:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>
        * orbsvcs/orbsvcs/Runtime_Scheduler.{h,cpp}:
          Made the arguments of the set method a const reference, this fixes
          the internal backend errors in the BCB2006 release builds.

Mon Apr 24 11:31:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.cpp:
          When we can't get a valuetype adapter throw an internal corba
          exception

        * TAO_IDL/be/be_codegen.cpp:
          Updated include generated for the valuetype library, makes sure
          that the valuetype library gets linked into the executable when
          building static.

Mon Apr 24 10:16:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1676_Regression/*:
          Added regression for bug 1676 written by Kees van Marle. This bug
          seems not to be fixed yet.

Mon Apr 24 09:39:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Runtime_Scheduler.{h,cpp}:
          Made the arguments of the set method a const reference, this fixes
          the internal backend errors in the BCB2006 release builds.

Mon Apr 24 06:59:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.inl:
          Removed some left over ACE_NESTED_CLASS usage

Sun Apr 23 11:26:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.cpp:
          Removed some left over ACE_NESTED_CLASS usage

Fri Apr 21 20:43:24 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/Makefile.am:
        * performance-tests/Makefile.am:

          Remove handful of subdirectories that have not yet been updated
          to work with autoconf builds.

Fri Apr 21 19:32:27 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Added orbsvcs/tests/Bug_2377_Regression/Makefile to
          AC_CONFIG_FILES.

        * orbsvcs/tests/Bug_2377_Regression/Makefile.am:

          New file.

Fri Apr 21 14:07:51 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/Makefile.am:
        * docs/Makefile.am:
        * docs/tutorials/Makefile.am:
        * docs/tutorials/Quoter/Makefile.am:
        * docs/tutorials/Quoter/AMI/Makefile.am:
        * docs/tutorials/Quoter/Event_Service/Makefile.am:
        * docs/tutorials/Quoter/Naming_Service/Makefile.am:
        * docs/tutorials/Quoter/On_Demand_Activation/Makefile.am:
        * docs/tutorials/Quoter/RT_Event_Service/Makefile.am:
        * docs/tutorials/Quoter/Simple/Makefile.am:
        * docs/tutorials/Quoter/Simple/Client/Makefile.am:
        * docs/tutorials/Quoter/Simple/Impl-Repo/Makefile.am:
        * docs/tutorials/Quoter/Simple/ImprovedServer/Makefile.am:
        * docs/tutorials/Quoter/Simple/Persistent/Makefile.am:
        * docs/tutorials/Quoter/Simple/Server/Makefile.am:
        * docs/tutorials/Quoter/idl/Makefile.am:
        * examples/Makefile.am:
        * examples/AMH/Makefile.am:
        * examples/AMH/Sink_Server/Makefile.am:
        * examples/AMI/Makefile.am:
        * examples/AMI/FL_Callback/Makefile.am:
        * examples/Advanced/Makefile.am:
        * examples/Advanced/ch_3/Makefile.am:
        * examples/Buffered_AMI/Makefile.am:
        * examples/Buffered_Oneways/Makefile.am:
        * examples/CSD_Strategy/Makefile.am:
        * examples/CSD_Strategy/ThreadPool/Makefile.am:
        * examples/CSD_Strategy/ThreadPool2/Makefile.am:
        * examples/CSD_Strategy/ThreadPool3/Makefile.am:
        * examples/CSD_Strategy/ThreadPool4/Makefile.am:
        * examples/CSD_Strategy/ThreadPool5/Makefile.am:
        * examples/CSD_Strategy/ThreadPool6/Makefile.am:
        * examples/Callback_Quoter/Makefile.am:
        * examples/Content_Server/Makefile.am:
        * examples/Content_Server/AMI_Iterator/Makefile.am:
        * examples/Content_Server/AMI_Observer/Makefile.am:
        * examples/Content_Server/SMI_Iterator/Makefile.am:
        * examples/Event_Comm/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.am:
        * examples/Load_Balancing/Makefile.am:
        * examples/Load_Balancing_persistent/Makefile.am:
        * examples/Logging/Makefile.am:
        * examples/OBV/Makefile.am:
        * examples/OBV/Typed_Events/Makefile.am:
        * examples/POA/Makefile.am:
        * examples/POA/Adapter_Activator/Makefile.am:
        * examples/POA/DSI/Makefile.am:
        * examples/POA/Default_Servant/Makefile.am:
        * examples/POA/Explicit_Activation/Makefile.am:
        * examples/POA/Explicit_Activation/Alt_Resources/Makefile.am:
        * examples/POA/FindPOA/Makefile.am:
        * examples/POA/Forwarding/Makefile.am:
        * examples/POA/Generic_Servant/Makefile.am:
        * examples/POA/Loader/Makefile.am:
        * examples/POA/NewPOA/Makefile.am:
        * examples/POA/On_Demand_Activation/Makefile.am:
        * examples/POA/On_Demand_Loading/Makefile.am:
        * examples/POA/POA_BiDir/Makefile.am:
        * examples/POA/Reference_Counted_Servant/Makefile.am:
        * examples/POA/RootPOA/Makefile.am:
        * examples/POA/TIE/Makefile.am:
        * examples/Persistent_Grid/Makefile.am:
        * examples/PluggableUDP/Makefile.am:
        * examples/PluggableUDP/tests/Makefile.am:
        * examples/PluggableUDP/tests/Basic/Makefile.am:
        * examples/PluggableUDP/tests/Performance/Makefile.am:
        * examples/PluggableUDP/tests/SimplePerformance/Makefile.am:
        * examples/Quoter/Makefile.am:
        * examples/RTCORBA/Makefile.am:
        * examples/RTCORBA/Activity/Makefile.am:
        * examples/RTScheduling/Makefile.am:
        * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile.am:
        * examples/RTScheduling/MIF_Scheduler/Makefile.am:
        * examples/Simple/Makefile.am:
        * examples/Simple/bank/Makefile.am:
        * examples/Simple/chat/Makefile.am:
        * examples/Simple/echo/Makefile.am:
        * examples/Simple/grid/Makefile.am:
        * examples/Simple/time/Makefile.am:
        * examples/Simple/time-date/Makefile.am:
        * examples/Simulator/Makefile.am:
        * examples/Simulator/Event_Supplier/Makefile.am:
        * examples/TypeCode_Creation/Makefile.am:
        * examples/ior_corbaloc/Makefile.am:
        * examples/mfc/Makefile.am:
        * interop-tests/Makefile.am:
        * interop-tests/wchar/Makefile.am:
        * orbsvcs/Makefile.am:
        * orbsvcs/Concurrency_Service/Makefile.am:
        * orbsvcs/CosEvent_Service/Makefile.am:
        * orbsvcs/Dump_Schedule/Makefile.am:
        * orbsvcs/Event_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Event_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Factory_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Gateway_Service/Makefile.am:
        * orbsvcs/FT_ReplicationManager/Makefile.am:
        * orbsvcs/Fault_Detector/Makefile.am:
        * orbsvcs/Fault_Notifier/Makefile.am:
        * orbsvcs/IFR_Service/Makefile.am:
        * orbsvcs/ImplRepo_Service/Makefile.am:
        * orbsvcs/LoadBalancer/Makefile.am:
        * orbsvcs/Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/Basic_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/Event_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/Makefile.am:
        * orbsvcs/Naming_Service/Makefile.am:
        * orbsvcs/Notify_Service/Makefile.am:
        * orbsvcs/Scheduling_Service/Makefile.am:
        * orbsvcs/TAO_Service/Makefile.am:
        * orbsvcs/Time_Service/Makefile.am:
        * orbsvcs/Trading_Service/Makefile.am:
        * orbsvcs/examples/Makefile.am:
        * orbsvcs/examples/CosEC/Makefile.am:
        * orbsvcs/examples/CosEC/Factory/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/bin/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Basic/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Makefile.am:
        * orbsvcs/examples/CosEC/Simple/Makefile.am:
        * orbsvcs/examples/CosEC/TypedSimple/Makefile.am:
        * orbsvcs/examples/FaultTolerance/Makefile.am:
        * orbsvcs/examples/FaultTolerance/RolyPoly/Makefile.am:
        * orbsvcs/examples/ImR/Makefile.am:
        * orbsvcs/examples/ImR/Advanced/Makefile.am:
        * orbsvcs/examples/ImR/Combined_Service/Makefile.am:
        * orbsvcs/examples/LoadBalancing/Makefile.am:
        * orbsvcs/examples/Log/Makefile.am:
        * orbsvcs/examples/Log/Basic/Makefile.am:
        * orbsvcs/examples/Log/Event/Makefile.am:
        * orbsvcs/examples/Log/Notify/Makefile.am:
        * orbsvcs/examples/Log/RTEvent/Makefile.am:
        * orbsvcs/examples/Notify/Makefile.am:
        * orbsvcs/examples/Notify/Federation/Makefile.am:
        * orbsvcs/examples/Notify/Federation/Agent/Makefile.am:
        * orbsvcs/examples/Notify/Federation/Gate/Makefile.am:
        * orbsvcs/examples/Notify/Federation/SpaceCraft/Makefile.am:
        * orbsvcs/examples/Notify/Filter/Makefile.am:
        * orbsvcs/examples/Notify/Lanes/Makefile.am:
        * orbsvcs/examples/Notify/Subscribe/Makefile.am:
        * orbsvcs/examples/Notify/ThreadPool/Makefile.am:
        * orbsvcs/examples/ORT/Makefile.am:
        * orbsvcs/examples/RtEC/Makefile.am:
        * orbsvcs/examples/RtEC/IIOPGateway/Makefile.am:
        * orbsvcs/examples/RtEC/Kokyu/Makefile.am:
        * orbsvcs/examples/RtEC/MCast/Makefile.am:
        * orbsvcs/examples/RtEC/Schedule/Makefile.am:
        * orbsvcs/examples/RtEC/Simple/Makefile.am:
        * orbsvcs/examples/Security/Makefile.am:
        * orbsvcs/examples/Security/Send_File/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/performance-tests/Makefile.am:
        * orbsvcs/performance-tests/LoadBalancing/Makefile.am:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/Makefile.am:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/lib/Makefile.am:
        * orbsvcs/tests/Makefile.am:
        * orbsvcs/tests/AVStreams/Makefile.am:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/Makefile.am:
        * orbsvcs/tests/AVStreams/Component_Switching/Makefile.am:
        * orbsvcs/tests/AVStreams/Full_Profile/Makefile.am:
        * orbsvcs/tests/AVStreams/Latency/Makefile.am:
        * orbsvcs/tests/AVStreams/Modify_QoS/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/Makefile.am:
        * orbsvcs/tests/AVStreams/Multiple_Flows/Makefile.am:
        * orbsvcs/tests/AVStreams/Pluggable/Makefile.am:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/Makefile.am:
        * orbsvcs/tests/BiDir_CORBALOC/Makefile.am:
        * orbsvcs/tests/Bug_1334_Regression/Makefile.am:
        * orbsvcs/tests/Bug_1393_Regression/Makefile.am:
        * orbsvcs/tests/Bug_1395_Regression/Makefile.am:
        * orbsvcs/tests/Bug_1630_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2074_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2137_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2247_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2248_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2285_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2287_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2316_Regression/Makefile.am:
        * orbsvcs/tests/Concurrency/Makefile.am:
        * orbsvcs/tests/CosEvent/Makefile.am:
        * orbsvcs/tests/CosEvent/Basic/Makefile.am:
        * orbsvcs/tests/CosEvent/lib/Makefile.am:
        * orbsvcs/tests/EC_Custom_Marshal/Makefile.am:
        * orbsvcs/tests/EC_MT_Mcast/Makefile.am:
        * orbsvcs/tests/EC_Mcast/Makefile.am:
        * orbsvcs/tests/EC_Multiple/Makefile.am:
        * orbsvcs/tests/EC_Throughput/Makefile.am:
        * orbsvcs/tests/Event/Makefile.am:
        * orbsvcs/tests/Event/Basic/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Common/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Complex/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Simple/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Two_Way/Makefile.am:
        * orbsvcs/tests/Event/Performance/Makefile.am:
        * orbsvcs/tests/Event/lib/Makefile.am:
        * orbsvcs/tests/FT_App/Makefile.am:
        * orbsvcs/tests/FaultTolerance/Makefile.am:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Makefile.am:
        * orbsvcs/tests/FaultTolerance/IOGR/Makefile.am:
        * orbsvcs/tests/FaultTolerance/IOGRManipulation/Makefile.am:
        * orbsvcs/tests/FtRtEvent/Makefile.am:
        * orbsvcs/tests/HTIOP/Makefile.am:
        * orbsvcs/tests/HTIOP/AMI/Makefile.am:
        * orbsvcs/tests/HTIOP/BiDirectional/Makefile.am:
        * orbsvcs/tests/HTIOP/Hello/Makefile.am:
        * orbsvcs/tests/IOR_MCast/Makefile.am:
        * orbsvcs/tests/ImplRepo/Makefile.am:
        * orbsvcs/tests/ImplRepo/NameService/Makefile.am:
        * orbsvcs/tests/ImplRepo/scale/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Application_Test/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Persistence_Test/Makefile.am:
        * orbsvcs/tests/Interoperable_Naming/Makefile.am:
        * orbsvcs/tests/LoadBalancing/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/Makefile.am:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/Makefile.am:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/Makefile.am:
        * orbsvcs/tests/Log/Makefile.am:
        * orbsvcs/tests/Log/Basic_Log_Test/Makefile.am:
        * orbsvcs/tests/Miop/Makefile.am:
        * orbsvcs/tests/Miop/McastHello/Makefile.am:
        * orbsvcs/tests/Notify/Makefile.am:
        * orbsvcs/tests/Notify/Basic/Makefile.am:
        * orbsvcs/tests/Notify/Blocking/Makefile.am:
        * orbsvcs/tests/Notify/Destroy/Makefile.am:
        * orbsvcs/tests/Notify/Discarding/Makefile.am:
        * orbsvcs/tests/Notify/Driver/Makefile.am:
        * orbsvcs/tests/Notify/MT_Dispatching/Makefile.am:
        * orbsvcs/tests/Notify/Ordering/Makefile.am:
        * orbsvcs/tests/Notify/PluggableTopology/Makefile.am:
        * orbsvcs/tests/Notify/RT_lib/Makefile.am:
        * orbsvcs/tests/Notify/Reconnecting/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Test_Filter/Makefile.am:
        * orbsvcs/tests/Notify/XML_Persistence/Makefile.am:
        * orbsvcs/tests/Notify/lib/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Makefile.am:
        * orbsvcs/tests/Property/Makefile.am:
        * orbsvcs/tests/Redundant_Naming/Makefile.am:
        * orbsvcs/tests/Sched/Makefile.am:
        * orbsvcs/tests/Sched_Conf/Makefile.am:
        * orbsvcs/tests/Security/Makefile.am:
        * orbsvcs/tests/Security/BiDirectional/Makefile.am:
        * orbsvcs/tests/Security/Big_Request/Makefile.am:
        * orbsvcs/tests/Security/Callback/Makefile.am:
        * orbsvcs/tests/Security/Crash_Test/Makefile.am:
        * orbsvcs/tests/Security/MT_IIOP_SSL/Makefile.am:
        * orbsvcs/tests/Security/MT_SSLIOP/Makefile.am:
        * orbsvcs/tests/Security/Secure_Invocation/Makefile.am:
        * orbsvcs/tests/Security/ssliop_corbaloc/Makefile.am:
        * orbsvcs/tests/Simple_Naming/Makefile.am:
        * orbsvcs/tests/Time/Makefile.am:
        * orbsvcs/tests/Trading/Makefile.am:
        * orbsvcs/tests/ior_corbaname/Makefile.am:
        * orbsvcs/tests/tests_svc_loader/Makefile.am:
        * performance-tests/Makefile.am:
        * performance-tests/Anyop/Makefile.am:
        * performance-tests/CSD_Strategy/Makefile.am:
        * performance-tests/CSD_Strategy/TestApps/Makefile.am:
        * performance-tests/CSD_Strategy/TestInf/Makefile.am:
        * performance-tests/CSD_Strategy/TestServant/Makefile.am:
        * performance-tests/Callback/Makefile.am:
        * performance-tests/Cubit/Makefile.am:
        * performance-tests/Cubit/TAO/Makefile.am:
        * performance-tests/Cubit/TAO/DII_Cubit/Makefile.am:
        * performance-tests/Cubit/TAO/IDL_Cubit/Makefile.am:
        * performance-tests/Cubit/TAO/MT_Cubit/Makefile.am:
        * performance-tests/Latency/Makefile.am:
        * performance-tests/Latency/AMH_Single_Threaded/Makefile.am:
        * performance-tests/Latency/AMI/Makefile.am:
        * performance-tests/Latency/Collocation/Makefile.am:
        * performance-tests/Latency/DII/Makefile.am:
        * performance-tests/Latency/DSI/Makefile.am:
        * performance-tests/Latency/Deferred/Makefile.am:
        * performance-tests/Latency/Single_Threaded/Makefile.am:
        * performance-tests/Latency/Thread_Per_Connection/Makefile.am:
        * performance-tests/Latency/Thread_Pool/Makefile.am:
        * performance-tests/Memory/Makefile.am:
        * performance-tests/Memory/IORsize/Makefile.am:
        * performance-tests/Memory/Single_Threaded/Makefile.am:
        * performance-tests/POA/Makefile.am:
        * performance-tests/POA/Create_Reference/Makefile.am:
        * performance-tests/POA/Demux/Makefile.am:
        * performance-tests/POA/Implicit_Activation/Makefile.am:
        * performance-tests/POA/Object_Creation_And_Registration/Makefile.am:
        * performance-tests/Pluggable/Makefile.am:
        * performance-tests/Protocols/Makefile.am:
        * performance-tests/RTCorba/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Common/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/Makefile.am:
        * performance-tests/RTCorba/Oneways/Makefile.am:
        * performance-tests/RTCorba/Oneways/Reliable/Makefile.am:
        * performance-tests/RTCorba/Thread_Pool/Makefile.am:
        * performance-tests/Sequence_Latency/Makefile.am:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/Makefile.am:
        * performance-tests/Sequence_Latency/AMI/Makefile.am:
        * performance-tests/Sequence_Latency/DII/Makefile.am:
        * performance-tests/Sequence_Latency/DSI/Makefile.am:
        * performance-tests/Sequence_Latency/Deferred/Makefile.am:
        * performance-tests/Sequence_Latency/Single_Threaded/Makefile.am:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Makefile.am:
        * performance-tests/Sequence_Latency/Thread_Pool/Makefile.am:
        * performance-tests/Throughput/Makefile.am:
        * tao/Makefile.am:
        * utils/Makefile.am:
        * utils/catior/Makefile.am:
        * utils/nslist/Makefile.am:

          Regenerate with latest MPC and *.mpc/*.mpb changes.

Fri Apr 21 09:25:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport_Connector.cpp:
          Removed the fix for bug 2417, according to the test stats things
          didn't got fixed.

Fri Apr 21 08:18:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/String_Traits_Base_T.h:
          Disabled the warning when wchar_t is not a native type. This
          makes the vxworks logs unreadable.

Fri Apr 21 08:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Trading/TTest.idl:
          Use the CORBA predefined sequence types

Fri Apr 21 07:38:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/IFRService/IFR_BaseS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.inl:
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.h:
        * orbsvcs/orbsvcs/Notify/EventTypeSeq.cpp:
        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduler.cpp:
        * tests/Smart_Proxies/Collocation/Smart_Proxy_Impl.cpp:
          Removed usage of ACE_NESTED_CLASS

Thu Apr 20 14:41:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/extra_core.mpb:
        * tao/tao.mpc:
          Moved ServicesC.cpp to tao.mpc

Thu Apr 20 14:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bounded_Sequence_CDR_T.h:
        * tao/Unbounded_Sequence_CDR_T.h:
          Include orbconf.h instead of one of the sequence header files

Thu Apr 20 13:37:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Asynch_Reply_Dispatcher_Base.{h,cpp}:
        * tao/ObjectKey_Table.cpp:
        * tao/Refcounted_ObjectKey.{h,cpp,inl}:
          Made the refcounts CORBA::ULong and only return the refcount
          from the incr/decr methods when really needed, using the refcount
          form external is always tricky. Fixes bugzilla bug 2505.

Thu Apr 20 12:28:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        Integrated ondemand branch to cvs head. This makes an ondemand write
        possible. The user specified maximum is at this moment not a hard
        maximum, it is more an indication how large the GIOP fragments
        should become, we can send out smaller and larger fragments if needed.

        * tao/tests/Ondemand_Write/*:
          New test

        Mon Apr  3 12:30:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/On_Demand_Fragmentation_Strategy.cpp:
          Print the debug message after we padded it so that sizes do match
          in the logs

        * tao/GIOP_Message_Base.cpp:
          For fragments also retrieve the request/reply id

        * tests/Ondemand_Write:
          Simple test for ondemand write, needs now inspection of output to
          check if things work ok

        Mon Apr  3 07:19:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CDR.h:
          Commented out write_octet_array decleration, there is no
          implementation yet.

        Thu Mar 30 13:02:18 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
          Added the missing transport parameter to the TAO_GIOP_Message_Base
          constructor.

        Thu Mar 30 12:41:17 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tao/CDR.cpp:
        * tao/On_Demand_Fragmentation_Strategy.cpp:

          Fixed checks for return values.

        Wed Mar 22 20:13:22 UTC 2006  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Messaging/Asynch_Invocation.cpp (remote_invocation):

          Added missing GIOP fragmentation support.

        Wed Mar 22 13:53:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.h:
          Fixed warning of the Intel compiler

        Wed Mar 22 01:33:47 UTC 2006  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/CDR.cpp:
        * tao/CDR.h:
        * tao/CDR.i:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Base.h:
        * tao/GIOP_Message_Generator_Parser.h:
        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/GIOP_Message_Generator_Parser_10.h:
        * tao/GIOP_Message_Generator_Parser_12.cpp:
        * tao/GIOP_Message_Generator_Parser_12.h:
        * tao/GIOP_Message_Lite.cpp:
        * tao/GIOP_Message_Lite.h:
        * tao/ORB_Core.cpp:
        * tao/On_Demand_Fragmentation_Strategy.cpp:
        * tao/Pluggable_Messaging.h:
        * tao/Remote_Invocation.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/TAO_Server_Request.cpp:
        * tao/default_resource.cpp:
        * tao/PortableServer/Upcall_Wrapper.cpp:

          Added remaining code necessary to send fragments through the
          underlying transport.

          Added missing outgoing GIOP reply fragment support.

        Tue Mar 21 22:18:45 UTC 2006  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * docs/Options.html:

          Document new "-ORBMaxMessageSize" ORB option.

        Tue Mar 21 15:16:43 UTC 2006  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/GIOP_Message_Base.cpp (set_giop_flags):

          Cast CDR stream buffer to an array of octets.

        * tao/GIOP_Message_Base.h (set_giop_flags):

          Added missing method declaration.

        * tao/Resource_Factory.h (fragmentation_strategy):
        * tao/default_resource.cpp:
        * tao/default_resource.h:

          Made factory method name consistent with existing naming
          convention, i.e. create_fragmentation_strategy().

          Corrected return value.  It should have been
          auto_ptr<TAO_GIOP_Fragmentation_Strategy>, not
          TAO_GIOP_Fragmentation_Strategy *.

        * tao/IIOP_Transport.cpp:
        * tao/Strategies/DIOP_Transport.cpp:
        * tao/Strategies/SCIOP_Transport.cpp:
        * tao/Strategies/SHMIOP_Transport.cpp:
        * tao/Strategies/UIOP_Transport.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Transport.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:

          The TAO_GIOP_Message_Base constructor now accepts a pointer to
          TAO_Transport parameter.  Updated constructor call accordingly.

        * tao/CDR.h:
        * tao/CDR.i:
        * tao/CDR.cpp:

          Added missing fragmentation-enabling constructor and
          fragmentation flag accessors.

          Removed legacy initial implementa code.  Addresses build
          errors.

        * tao/GIOP_Fragmentation_Strategy.h (TAO_GIOP_Fragmentation_Strategy):

          Export to allow users to provide their own implementation
          through the resource factory.

          (fragment):

          Return an "int" instead of "void".  Allows the error status of
          the underlying transport send to be propagated up the stack.

        * tao/Null_Fragmentation_Strategy.h (fragment):
        * tao/Null_Fragmentation_Strategy.cpp (fragment):
        * tao/On_Demand_Fragmentation_Strategy.h (fragment):
        * tao/On_Demand_Fragmentation_Strategy.cpp (fragment):

          Likewise.

        * tao/operation_details.cpp (marshal_args):

          Mark the CDR as having no other fragments to send after all
          arguments have been marshaled, not before the last one is
          marshaled.

        * ORB_Core.h (fragmentation_Strategy):

          Added missing transport parameter.

          Removed const qualifier.  The resource_factory() accessor isn't
          a const method.

        * ORB_Core.cpp (fragmentation_strategy):

          Likewise.

        * params.h:
        * params.i:
        * params.cpp:

          Added missing max_message_size attribute.

        Fri Mar 17 10:59:02 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Resource_Factory.h:
          Added missing include of Basic_Types and added forward declarations

        * tao/On_Demand_Fragmentation_Strategy.h:
          Fixed copy constructor/assignment operators

        * tao/CDR.h:
          Removed do_fragmentation method, there is no implementation, added
          fragment_stream

        * tao/CDR.i:
          Fixed typo

        * tao/default_resource.cpp:
          Added missing includes and updated signature of
          create_fragmentation_strategy to match header file

        Fri Mar 17 07:48:02 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

          Updated code after update from Ossama Othman

        * tao/On_Demand_Fragmentation_Strategy.{h,cpp}:
          New files

        * tao/default_resource.{h,cpp}:
          Added create_fragmentation_strategy

        * tao/GIOP_Fragmentation_Strategy.h:
          Doxygen improvements

        * tao/Resource_Factory.h:
          Added pure virtual fragmentation_strategy method

        * tao/ORB_Core.{h,cpp}:
          Added fragmentation_strategy accessor method

        * tao/GIOP_Message_Base.{h,cpp}:
          Added TAO_Transport to the constructor arguments

        * tao/GIOP_Message_Base.cpp:
          Added come comments

        * tao/True_Fragmentation_Strategy.{h,cpp}:
          Removed again, replaced by On_Demand so far as I can tell

        * tao/tao.mpc:
          Added new files

        Thu Mar 16 07:48:02 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

          Integrated first set of code from Ossama Othman

        * tao/GIOP_Fragmentation_Strategy.{h,cpp}:
        * tao/Null_Fragmentation_Strategy.{h,cpp}:
        * tao/True_Fragmentation_Strategy.{h,cpp}:
          New files

        * tao/operation_details.cpp:
          When marshaling the last argument put this information on the
          cdr_stream

        * tao/GIOP_Message_Base.cpp:
          Some refactoring

        * tao/CDR.{h,cpp,i}:
          Call fragment_stream as part of the streaming calls

Thu Apr 20 11:50:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/sfp.idl:
          Use CORBA::OctetSeq and CORBA::ULongSeq

        * tao/Strategies/SCIOP_Profile.cpp:
          Fixed compile error

Thu Apr 20 08:32:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.cpp:
          Fixed compile error

Thu Apr 20 07:15:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/ssl_endpointsC.h:
          Fixed template instantiation

Wed Apr 19 18:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/UShortSeqC.h:
        * tao/OctetSeqC.h:
          Do an explicit export of the base template

Wed Apr 19 16:01:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/ExceptionHolderC.{h,cpp}:
          Added constructor that accepts all values as generated now by the
          IDL compiler

        * tao/Messaging/ExceptionHolder_i.cpp:
          Use the new constructor

Wed Apr 19 14:19:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Exception.h:
          Made the copy constructor public again, vc7.1 complains when
          it is protected. Made a todo in this file again, have to retest
          this later.

Wed Apr 19 13:28:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_CredentialsAcquirer.cpp:
        * examples/Advanced/ch_12/icp.cpp:
        * examples/Advanced/ch_21/icp.cpp:
        * examples/Advanced/ch_18/icp.cpp:
        * examples/Advanced/ch_8_and_10/icp.cpp:
        * orbsvcs/orbsvcs/SSLIOP/params_dup.h:
          Removed workarounds for vc6

Wed Apr 19 13:16:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype/AbstractBase.cpp:
          Use true/false, const improvements

        * tao/Valuetype/AbstractBase.cpp:
          Use C++ cast instead of C cast

Wed Apr 19 13:03:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Any_Unknown_IDL_Type.h:
          Removed not needed forward declarations

        * tao/AnyTypeCode/Any.cpp:
        * tao/AnyTypeCode/Any_Impl.cpp:
        * tao/BiDir_GIOP/BiDirPolicy_Validator.cpp:
          Use false/true instead of 0/1 for bool

        * tao/PortableServer/Object_Adapter.h:
          Don't export poa_name_iterator and iteratable_poa_name

        * tao/PortableServer/Object_Adapter.cpp:
          Use true/false and when the object adapter can't be found
          throw a OBJECT_NOT_EXIST with minor code 2

Wed Apr 19 12:56:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport_Timer.h:
          No need to export this class from the TAO lib

        * tao/ORB.h:
          Use false for the default of the shutdown method

Wed Apr 19 12:51:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.mpc:
        * examples/RTScheduling/Fixed_Priority_Scheduler/Fixed_Priority_Scheduler.mpc:
          Made these projects dependent on each other to make sure
          that they don't build in parallel and generate the same idl
          file twice at the same moment. Thanks to Chad Elliot for the
          info how to do this the easiest

Wed Apr 19 12:42:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_interface/tie_sh.cpp:
          Generate doxygen documentation style and use true instead of 1

        * TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:
          Generate true for boolean instead of 1

        * TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:
          Generate also argument names in the header file so that doxygen
          can parse IDL generated code

Wed Apr 19 12:38:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushConsumer.{h,cpp,i}:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.{h,i}:
          Use bool and prefix increment/decrement

Wed Apr 19 11:58:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_Oneways/run_test.pl:
        * tests/Hello/run_test.pl:
        * performance-tests/Throughput/run_test.pl:
          Check the return value of spawn, speedsup the builds when no
          executable is build

        * performance-tests/Throughput/Receiver.cpp:
          Prefix increment

        * performance-tests/Throughput/Receiver_Factory.cpp:
          Initialise pointer with 0

        * performance-tests/Throughput/Throughput.mpc:
          Simplified

Wed Apr 19 11:39:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        Integrated iioptbranch. This fixes bugzilla 2467

        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
        No need to include IIOP files, just use the base classes

        Wed Mar 29 08:01:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/default_resource.cpp
        * tao/IIOP_Acceptor.cpp
        * tao/IIOP_Acceptor.h
        * tao/IIOP_Acceptor.i
        * tao/IIOP_Connection_Handler.cpp
        * tao/IIOP_Connection_Handler.h
        * tao/IIOP_Connector.cpp
        * tao/IIOP_Connector.h
        * tao/IIOP_Endpoint.cpp
        * tao/IIOP_Endpoint.h
        * tao/IIOP_Endpoint.i
        * tao/IIOP_Factory.cpp
        * tao/IIOP_Factory.h
        * tao/IIOP_Lite_Factory.cpp
        * tao/IIOP_Lite_Factory.h
        * tao/IIOP_Profile.cpp
        * tao/IIOP_Profile.h
        * tao/IIOP_Transport.cpp
        * tao/IIOP_Transport.h
        * tao/orbconf.h
        * tao/TAO_Internal.cpp
        Added TAO_HAS_IIOP. This is default set to 1 but can be overridden
        in the config.h file to 0 meaning we don't support IIOP. This is
        usefull for embedded systems that support one of the other
        pluggable protocols and don't need IIOP support at all. With
        TAO_HAS_IIOP set to 0 not everything will compile, just the
        core libs itself.

Wed Apr 19 07:48:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        Integrated sequpdate3 branch. Thanks to Carlos O'Ryan for the initial
        work for this new sequence implementation which I merged to cvs head
        and finished

        This fixes the following bugzilla entries:
        2492 - Simplify TAO_Seq_Out_T
        2493 - Simplify _reset method on union generated code
        2352 - Valuefactory operations not safe
        2353 - Valuefactories stored per process instead of per orb
        2349 - ORB::destroy() should throw BAD_INV_ORDER if called during a
        2315 - Reimplement (w)string_var/_out as templates
        1989 - Footprint reduction issue, split Sequence files
        2273 - Deprecate old AMI support
        2300 - Simplify serialize/deserialize of sequences
        2299 - Reimplement string/wstring managers as templates
        1936 - Unnecessary usage of virtual functions in sequence implementation
        1673 - operator[] of sequence<string> returns TAO_SeqElem_String_Manager
        instead of TAO_String_Manager. Thanks to Mark Paulus <mark dot paulus
        at mci dot com> for reporting this one.
        1930 - Assignment operator for sequences is not exception safe.
        1931 - The length() member function for sequences is not exception-safe.
        1933 - Incomplete implementation of freebuf() for reference types.
        1934 - const version of operator[] for string sequences allows assignment
        1938 - Possible incorrect duplication in sequences of references
        1928 - Assignment from T_mgr to sequence elements does not duplicate
        2417 - Double delete on Transport when using oneways with sync_none
        Thanks to Jan Ohlenburg <jan dot ohlenburg at fit dot fraunhofer dot de>
        for reporting this.
        2355 - oneway op. with timeout crashes client due to server termination
        Thans to Jan Zima <jan dot zima at sofis dot cz> for reporting this.

        Also did several const changes throughout the code

        Fri Apr  7 08:03:12 UTC 2006  Kees van Marle  <kvmarle@remedy.nl>

        * tao/Valuetype_Adapter_Factory.{h,cpp}:
        New files, value type adapter factory

        * tao/tao.mpc:
        Added new files

        * tao/Valuetype/Valuetype_Adapter_Factory_Impl.h:
        Value type adapter factory implementation

        * tao/Valuetype/ValueFactory_Map.{h,cpp}:
        Map isn't a singleton anymore and guard access with a mutex

        * tao/Valuetype/Valuetype_Adapter_Impl.{h,cpp}:
        The value type adapter isn't loaded with service configurator
        anymore, the value type factory is now the one we load on demand

        * tao/ORB.cpp:
        Updated the value type methods to use the new ORB_Core method
        to get the valuetype adapter, is the ORB_Core can't get the
        adapter it will throw already the internal exception

        * tao/ORB_Core.{h,cpp,i}:
        Get the value type adapter factory with svc conf instead of the
        adapter itself. Create a unique instance per orb.

        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp:
        * tao/AnyTypeCode/append.cpp:
        * tao/AnyTypeCode/skip.cpp:
        Changed the way we get the valuetype adapter

        Store the value type factories per orb and made things thread safe.
        This fixes bugzilla bugs 2352 and 23253.

        Thu Apr  6 09:17:25 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport_Connector.cpp:
        Applied fix of bug 2417, let us see what the results are in the
        branch build

        Thu Apr  6 09:08:25 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/POA/FindPOA/FindPOA.cpp:
        * tests/Bug_2349_Regression/client.cpp:
        * tests/Bug_2349_Regression/foo.idl:
        * tests/Bug_2349_Regression/server.cpp:
        Improved tests

        * tao/Adapter_Registry.{h,cpp}:
        Remove the empty throw spec for close and check_close. This way
        exceptions from lower layers are propagated up.

        * tao/ORB_Core.{h,cpp}:
        Removed empty throw spec from shutdown, if there are exceptions from
        a lower layer and as a result we can't shutdown, let the user be
        aware of it. This fixes bugzilla bug 2349

        Mon Apr  3 07:59:25 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO/IDL/be/be_visitor_union/discriminant_ci.cpp
        * TAO/IDL/be/be_visitor_union/union_ch.cpp
        * TAO/IDL/be/be_visitor_union/union_cs.cpp
        * TAO/IDL/be/be_visitor_union_branch/public_ci.cpp
        * tao/GIOPC.{h,cpp,inl}:
        Removed arguments from the _reset method on the union generated,
        these are not used.

        Sun Apr  2 18:56:25 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_exception/exception_ch.cpp
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ch.cpp
        * tao/BooleanSeqC.h
        * tao/CONV_FRAMEC.h
        * tao/CharSeqC.h
        * tao/DomainC.h
        * tao/DoubleSeqC.h
        * tao/FloatSeqC.h
        * tao/IIOPC.h
        * tao/IIOP_EndpointsC.h
        * tao/IOP_IORC.h
        * tao/LongDoubleSeqC.h
        * tao/LongLongSeqC.h
        * tao/LongSeqC.h
        * tao/Messaging_PolicyValueC.h
        * tao/ORB.h
        * tao/ObjectIdListC.h
        * tao/Object_KeyC.h
        * tao/OctetSeqC.h
        * tao/Policy_ForwardC.h
        * tao/Seq_Out_T.h
        * tao/Seq_Out_T.inl
        * tao/ServicesC.h
        * tao/ShortSeqC.h
        * tao/StringSeqC.h
        * tao/ULongLongSeqC.h
        * tao/ULongSeqC.h
        * tao/UShortSeqC.h
        * tao/WCharSeqC.h
        * tao/WStringSeqC.h
        * tao/AnyTypeCode/AnySeqC.h
        * tao/AnyTypeCode/DynamicC.h
        * tao/DynamicAny/DynamicAnyC.h
        * tao/IFR_Client/IFR_BaseC.h
        * tao/IFR_Client/IFR_BasicC.h
        * tao/IFR_Client/IFR_ComponentsC.h
        * tao/IFR_Client/IFR_ExtendedC.h
        * tao/IORManipulation/IORC.h
        * tao/ImR_Client/ImplRepoC.h
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.h
        * tao/PortableServer/PortableServerC.h
        * tao/RTCORBA/RTCORBAC.h
        * tao/RTScheduling/RTSchedulerC.h
        * tao/Strategies/sciop_endpointsC.h
        * tao/Strategies/uiop_endpointsC.h
        Simplified TAO_Seq_Out_T to just use one template argument. Updated
        the IDL compiler for this. Also use false for the release argument
        of generated sequence constructors and add an argument to
        _tao_encode/_tao_decode when generated in a header file to help
        doxygen.

        * tao/Objref_Out_T.{h,inl}:
        Assinging _var to _out is not allowed according to the spec

        * tao/Messaging/*:
        Removed old AMI mapping. Fixes partly bugzilla bug 2273, need to
        update the IDL compiler yet

        * tao/Exception.h:
        Moved constructors, assignment operator and copy constructor to
        protected now vc6 has been dropped. Also moved
        create_system_exception from TAO_Exceptions class to TAO namespace

        * tao/Messaging/Messaging.cpp:
        * tao/Sync_Invocation.cpp:
        * tao/SystemException.cpp:
        Updated because of the create_system_exception move

        * tao/String_Manager_T.h:
        Renamed String_Manager to String_Manager_T, this way we can have
        TAO::String_Manager and TAO::WString_Manager. These replace
        TAO_String_Manager and TAO_WString_Manager

        * CIAO/tools/Config_Handlers/DnC_Dump.cpp
        * CIAO/tools/Config_Handlers/DnC_Dump.h
        * TAO_IDL/be/be_visitor_array/array.cpp
        * TAO_IDL/be/be_visitor_field/field_ch.cpp
        * orbsvcs/PSS/PSDL_Exception_Visitor.cpp
        * orbsvcs/PSS/PSDL_Node.h
        * orbsvcs/PSS/PSDL_Struct_Visitor.cpp
        * orbsvcs/orbsvcs/HTIOP/htiop_endpointsC.h
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor_T.h
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor_T.i
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.cpp
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.h
        * tao/CORBA_String.h
        * tao/IIOPC.h
        * tao/IIOP_EndpointsC.h
        * tao/IOP_IORC.h
        * tao/String_Manager_T.h
        * tao/String_Traits_Base_T.h
        * tao/Tagged_Profile.h
        * tao/DynamicAny/DynamicAnyC.h
        * tao/IFR_Client/IFR_BaseC.h
        * tao/IFR_Client/IFR_BasicC.h
        * tao/IFR_Client/IFR_ComponentsC.h
        * tao/IFR_Client/IFR_ExtendedC.h
        * tao/ImR_Client/ImplRepoC.h
        * tao/PI/ORBInitInfoC.h
        * tao/Strategies/sciop_endpointsC.h
        * tao/Strategies/uiop_endpointsC.h
        Updated all these files because of TAO::String_Manager and
        TAO::WString_Manager introduction

        * tests/Sequence_Unit_Tests/mock_reference.cpp:
        * tests/Sequence_Unit_Tests/mock_reference.hpp:
        Added counter to count number of marshal calls

        * tests/Sequence_Unit_Tests/bounded_sequence_cdr_ut.cpp:
        * tests/Sequence_Unit_Tests/unbounded_sequence_cdr_ut.cpp:
        Check the right counter, should be marshal.

        * tao/PI/ClientRequestDetails.cpp:
        * tao/PI_Server/ServerRequestDetails.cpp:
        Added missing duplicate call

        * TAO_IDL/be/be_interface.cpp
        * TAO_IDL/be/be_visitor_component/component_cs.cpp
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp
        * TAO_IDL/be/be_visitor_interface/tie_si.cpp
        * TAO_IDL/be/be_visitor_root/root.cpp
        * tao/CurrentC.cpp
        * tao/DomainC.cpp
        * tao/ORB_Core.cpp
        * tao/Object.cpp
        * tao/Object_Ref_Table.cpp
        * tao/PolicyC.cpp
        * tao/Pseudo_VarOut_T.cpp
        * tao/Pseudo_VarOut_T.inl
        * tao/TAOC.cpp
        * tao/AnyTypeCode/Any_Array_Impl_T.cpp
        * tao/AnyTypeCode/Any_Basic_Impl.cpp
        * tao/AnyTypeCode/Any_Basic_Impl_T.cpp
        * tao/AnyTypeCode/Any_Dual_Impl_T.cpp
        * tao/AnyTypeCode/Any_Impl.cpp
        * tao/AnyTypeCode/Any_Impl_T.cpp
        * tao/AnyTypeCode/Any_Special_Impl_T.cpp
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp
        * tao/AnyTypeCode/TypeCode.cpp
        * tao/AnyTypeCode/TypeCode.inl
        * tao/BiDir_GIOP/BiDirPolicyC.cpp
        * tao/CSD_Framework/CSD_Default_Servant_Dispatcher.cpp
        * tao/CSD_Framework/CSD_FrameworkC.cpp
        * tao/CSD_Framework/CSD_POA.cpp
        * tao/CodecFactory/IOP_CodecC.cpp
        * tao/DynamicAny/DynamicAnyC.cpp
        * tao/DynamicInterface/Dynamic_Implementation.cpp
        * tao/DynamicInterface/ExceptionList.cpp
        * tao/DynamicInterface/Request.cpp
        * tao/DynamicInterface/Server_Request.cpp
        * tao/IFR_Client/IFR_BaseC.cpp
        * tao/IFR_Client/IFR_BasicC.cpp
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp
        * tao/IFR_Client/IFR_ComponentsC.cpp
        * tao/IFR_Client/IFR_ExtendedC.cpp
        * tao/IORInterceptor/IORInfoC.cpp
        * tao/IORInterceptor/IORInterceptorC.cpp
        * tao/IORManipulation/IORC.cpp
        * tao/IORManipulation/IORManipulation.cpp
        * tao/IORTable/IORTableC.cpp
        * tao/IORTable/Table_Adapter.cpp
        * tao/ImR_Client/ImplRepoC.cpp
        * tao/ImR_Client/ServerObjectC.cpp
        * tao/Messaging/MessagingC.cpp
        * tao/Messaging/Messaging_No_ImplC.cpp
        * tao/Messaging/Messaging_RT_PolicyC.cpp
        * tao/Messaging/Messaging_SyncScope_PolicyC.cpp
        * tao/Messaging/PollableC.cpp
        * tao/Messaging/TAO_ExtC.cpp
        * tao/PI/ClientRequestInfoC.cpp
        * tao/PI/ClientRequestInterceptorC.cpp
        * tao/PI/InterceptorC.cpp
        * tao/PI/ORBInitInfo.cpp
        * tao/PI/ORBInitInfoC.cpp
        * tao/PI/ORBInitializerC.cpp
        * tao/PI/PICurrentC.cpp
        * tao/PI/PolicyFactoryC.cpp
        * tao/PI/PolicyFactory_Registry.cpp
        * tao/PI/ProcessingModePolicyC.cpp
        * tao/PI/RequestInfoC.cpp
        * tao/PI_Server/ServerRequestInfoC.cpp
        * tao/PI_Server/ServerRequestInterceptorC.cpp
        * tao/PortableServer/AdapterActivatorC.cpp
        * tao/PortableServer/IdAssignmentPolicyC.cpp
        * tao/PortableServer/IdUniquenessPolicyC.cpp
        * tao/PortableServer/ImplicitActivationPolicyC.cpp
        * tao/PortableServer/LifespanPolicyC.cpp
        * tao/PortableServer/Object_Adapter.cpp
        * tao/PortableServer/POAManager.cpp
        * tao/PortableServer/POAManagerC.cpp
        * tao/PortableServer/PS_CurrentC.cpp
        * tao/PortableServer/PortableServerC.cpp
        * tao/PortableServer/RequestProcessingPolicyC.cpp
        * tao/PortableServer/Root_POA.cpp
        * tao/PortableServer/ServantActivatorC.cpp
        * tao/PortableServer/ServantLocatorC.cpp
        * tao/PortableServer/ServantManagerC.cpp
        * tao/PortableServer/ServantRetentionPolicyC.cpp
        * tao/PortableServer/ThreadPolicyC.cpp
        * tao/RTCORBA/RTCORBAC.cpp
        * tao/RTPortableServer/RTPortableServerC.cpp
        * tao/RTScheduling/Current.cpp
        * tao/RTScheduling/RTSchedulerC.cpp
        * tao/TypeCodeFactory/TypeCodeFactoryC.cpp
        * tao/Utils/Server_Main.cpp
        * tao/Valuetype/AbstractBase.cpp:
        Use :: before ::CORBA

        * TAO_IDL/be/be_interface.cpp
        * tao/DomainC.cpp
        * tao/DomainC.inl
        * tao/GIOPC.h
        * tao/PolicyC.cpp
        * tao/PolicyC.h
        * tao/PolicyC.inl
        * tao/WrongTransactionC.cpp
        * tao/AnyTypeCode/Alias_TypeCode.inl
        * tao/AnyTypeCode/Alias_TypeCode_Static.inl
        * tao/AnyTypeCode/BoundsC.cpp
        * tao/AnyTypeCode/Empty_Param_TypeCode.inl
        * tao/AnyTypeCode/Enum_TypeCode.inl
        * tao/AnyTypeCode/Enum_TypeCode_Static.inl
        * tao/AnyTypeCode/Fixed_TypeCode.inl
        * tao/AnyTypeCode/Objref_TypeCode.inl
        * tao/AnyTypeCode/Objref_TypeCode_Static.inl
        * tao/AnyTypeCode/Recursive_Type_TypeCode.cpp
        * tao/AnyTypeCode/Sequence_TypeCode.inl
        * tao/AnyTypeCode/Sequence_TypeCode_Static.inl
        * tao/AnyTypeCode/String_TypeCode.inl
        * tao/AnyTypeCode/String_TypeCode_Static.inl
        * tao/AnyTypeCode/Struct_TypeCode.inl
        * tao/AnyTypeCode/Struct_TypeCode_Static.inl
        * tao/AnyTypeCode/Union_TypeCode.inl
        * tao/AnyTypeCode/Union_TypeCode_Static.inl
        * tao/AnyTypeCode/Value_TypeCode.inl
        * tao/AnyTypeCode/Value_TypeCode_Static.inl
        * tao/BiDir_GIOP/BiDir_Policy_i.cpp
        * tao/CodecFactory/IOP_CodecC.cpp
        * tao/Domain/DomainS.cpp
        * tao/DynamicAny/DynamicAnyC.cpp
        * tao/IFR_Client/IFR_BaseC.cpp
        * tao/IFR_Client/IFR_BaseC.h
        * tao/IFR_Client/IFR_BaseC.inl
        * tao/IFR_Client/IFR_BasicC.cpp
        * tao/IFR_Client/IFR_BasicC.h
        * tao/IFR_Client/IFR_BasicC.inl
        * tao/IFR_Client/IFR_ComponentsC.cpp
        * tao/IFR_Client/IFR_ComponentsC.inl
        * tao/IFR_Client/IFR_ExtendedC.cpp
        * tao/IFR_Client/IFR_ExtendedC.h
        * tao/IFR_Client/IFR_ExtendedC.inl
        * tao/IORManipulation/IORC.cpp
        * tao/IORTable/IORTableC.cpp
        * tao/ImR_Client/ImplRepoC.cpp
        * tao/ImR_Client/ImplRepoC.inl
        * tao/ImR_Client/ServerObjectC.cpp
        * tao/ImR_Client/ServerObjectC.inl
        * tao/Messaging/Connection_Timeout_Policy_i.cpp
        * tao/Messaging/MessagingC.cpp
        * tao/Messaging/MessagingC.inl
        * tao/Messaging/Messaging_Policy_i.cpp
        * tao/Messaging/PollableC.cpp
        * tao/PI/InvalidSlotC.cpp
        * tao/PI/ORBInitInfoC.cpp
        * tao/PI/PIForwardRequestC.cpp
        * tao/PortableServer/ForwardRequestC.cpp
        * tao/PortableServer/POAManagerC.cpp
        * tao/PortableServer/PS_CurrentC.cpp
        * tao/PortableServer/PortableServerC.cpp
        * tao/RTCORBA/RTCORBAC.cpp
        * tao/RTCORBA/RT_Policy_i.cpp
        * tao/RTScheduling/RTSchedulerC.cpp
        * tao/TypeCodeFactory/Recursive_TypeCode.inl
        * tao/Valuetype/StringValueC.inl
        Removed ACE_NESTED_CLASS

        * TAO_IDL/ast/ast_type.cpp
        * TAO_IDL/be/be_interface.cpp
        * TAO_IDL/be/be_visitor_component/component_ci.cpp
        * TAO_IDL/be/be_visitor_component/component_cs.cpp
        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp
        * TAO_IDL/be/be_visitor_interface/amh_ss.cpp
        * TAO_IDL/be/be_visitor_interface/interface_ci.cpp
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp
        * TAO_IDL/be/be_visitor_interface/interface_is.cpp
        * TAO_IDL/be/be_visitor_operation/ami_cs.cpp
        * TAO_IDL/be/be_visitor_operation/operation.cpp
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ci.cpp
        * TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp
        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ss.cpp
        Removed generation of ACE_NESTED_CLASS, just use A::B instead

        All changes below is the merge of the branch sequenceupdate to
        sequpdate2. This is the new sequence implementation for TAO.

        * tao/Array_VarOut_T.h:
        Only do an empty forward declaration of Array_Traits. This will
        make sure that we have to do each specialization explicitly, if
        we lack one, we get a compile error instead of this empty default
        one.

        * tao/Objref_VarOut_T.h:
        Only do an empty forward declaration of Objref_Traits. This will
        make sure that we have to do each specialization explicitly, if
        we lack one, we get a compile error instead of this empty default
        one.

        * tao/Basic_Types.h:
        Updated the string types, these are implemented by a template now.

        * tao/BooleanSeqC.{h,cpp}:
        * tao/CharSeqC.{h,cpp}:
        * tao/CONV_FRAMEC.{h,cpp}:
        * tao/CurrentC.{h,cpp}:
        * tao/DomainC.{h,cpp}:
        * tao/DoubleSeqC.{h,cpp}:
        * tao/FloatSeqC.{h,cpp}:
        * tao/WStringSeqC.{h,cpp}:
        * tao/LongSeqC.{h,cpp}:
        * tao/WCharSeqC.{h,cpp}:
        * tao/Object_KeyC.{h,cpp}:
        * tao/ObjectIdListC.{h,cpp}:
        * tao/IIOP_EndpointsC.{h,cpp}:
        * tao/LongLongSeqC.{h,cpp}:
        * tao/IIOPC.{h,cpp}:
        * tao/IOP_IORC.{h,cpp}:
        * tao/LongDoubleSeqC.{h,cpp}:
        * tao/Messaging_PolicyValueC.{h,cpp}:
        * tao/OctetSeqC.{h,cpp}:
        * tao/Policy_ForwardC.{h,cpp}:
        * tao/PolicyC.{h,cpp}:
        * tao/ServicesC.{h,cpp}:
        * tao/ShortSeqC.{h,cpp}:
        * tao/StringSeqC.{h,cpp}:
        * tao/TAOC.{h,cpp}:
        * tao/ULongLongSeqC.{h,cpp}:
        * tao/ULongSeqC.{h,cpp}:
        * tao/UShortSeqC.{h,cpp}:
        * tao/AnyTypeCode/AnySeqC.{h,cpp}:
        * tao/AnyTypeCode/DynamicC.{h,cpp}:
        * tao/DynamicAny/DynamicAnyC.{h,cpp}:
        * tao/IFR_Client/IFR_ExtendedC.{h,cpp}:
        * tao/IFR_Client/IFR_ComponentsC.{h,cpp}:
        * tao/IFR_Client/IFR_BasicC.{h,cpp}:
        * tao/IFR_Client/IFR_BaseC.{h,cpp}:
        * tao/ImR_Client/ImplRepoC.{h,cpp}:
        * tao/IORManipulation/IORC.{h,cpp}:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.{h,cpp}:
        * tao/PortableServer/PortableServerC.{h,cpp}:
        * tao/RTCORBA/RTCORBAC.{h,cpp}:
        * tao/RTScheduling/RTSchedulerC.{h,cpp}:
        * tao/Strategies/sciop_endpointsC.{h,cpp}:
        * tao/Strategies/uiop_endpointsC.{h,cpp}:
        * orbsvcs/orbsvcs/HTIOP/htiop_endpointsC.{h,cpp}:
        Updated all these files because of the changes to the sequence
        implementation. The base classes are changed including the way we
        marshal and demarshal sequences. The argument to the marshal method
        is also const.

        * tao/Bounded_Array_Allocation_Traits.h:
        * tao/Bounded_Reference_Allocation_Traits_T.h:
        * tao/Bounded_Value_Allocation_Traits_T.h:
        New allocation traits for bounded sequences

        * tao/Value_Traits_T.h:
        New value traits.

        * tao/Bounded_Array_Sequence_T.h:
        New template for Bounded Array Sequences

        * tao/Bounded_Basic_String_Sequence_T.h:
        * tao/Bounded_String_Sequence_T.h:
        * tao/Bounded_Wstring_Sequence_T.h:
        New template for bounded strings, derived are string and wstring
        bounded sequences

        * tao/Bounded_Object_Reference_Sequence_T.h:
        New template for bounded object reference sequences

        New allocation traits for bounded reference

        * tao/Bounded_Sequence_CDR_T.h:
        Template method for sequence marshal/demarshal

        * tao/corba.h:
        Updated includes, Managed_Types.h is replaced with
        String_Manager_T.h

        * tao/CORBA_String.{h,cpp,inl}:
        The CORBA::String_var/_out and CORBA::WString_var/_out are now
        implemented with the new TAO::String_var/_out template

        * tao/Generic_Sequence_T.h:
        New generic sequence template

        * tao/Managed_Types.{h,cpp,i}:
        Removed these files

        * tao/MProfile.cpp:
        Initialise pointers with 0 and fixed retrieval of a policy

        * tao/Object.{h,cpp}:
        Made the argument of the marshal method const

        * tao/operation_details.i:
        Changed the way we reset the service info

        * tao/ORB.h:
        Updated all typedefs in this file

        * tao/Policy_Set.{h,cpp.i}:
        Made the get_policy_by_index const and fixed the
        set_policy_overrides to work with the new sequences, as a result
        the workarounds could be removed

        * tao/Sequence_T.{cpp,i}:
        Removed these files

        * tao/Sequence_T.h:
        Include all new sequence template files, makes it easy for old apps
        to keep compiling

        * tao/String_Alloc.{h,cpp}:
        All string allocation methods

        * tao/VarOut_T.h:
        Removed THIS_OUT_TYPE typedef

        * tao/DynamicInterface/Request.h:
        Removed include of Sequence.h, not needed

        * tao/Profile.h:
        Updated typedef for TAO_opaque

        * tao/Object_Reference_Sequence_Element_T.h:
        * tao/Object_Reference_Traits_Base_T.h:
        * tao/Object_Reference_Traits_T.h:
        * tao/Range_Checking_T.h:
        New files

        * tao/Seq_Out_T.{h,inl}:
        Removed TAO_MngSeq_Out_T, not needed anymore

        * tao/Sequence.{h,cpp,i}:
        Removed

        * tao/Seq_Var_T.{h,cpp.inl}:
        Removed TAO_MngSeq_Var_T, not needed anymore

        * tao/String_Manager_T.h:
        TAO string manager as template, new file

        * tao/String_Sequence_Element_T.h:
        Element in a string sequence

        * tao/String_Traits_Base_T.h:
        * tao/String_Traits_T.h:
        String traits

        * tao/Unbounded_Array_Allocation_Traits_T.h
        * tao/Unbounded_Array_Sequence_T.h
        * tao/Unbounded_Basic_String_Sequence_T.h
        * tao/Unbounded_Object_Reference_Sequence_T.h
        * tao/Unbounded_Octet_Sequence_T.h
        * tao/Unbounded_Reference_Allocation_Traits_T.h
        * tao/Unbounded_Sequence_CDR_T.h
        * tao/Unbounded_String_Sequence_T.h
        * tao/Unbounded_Value_Allocation_Traits_T.h
        * tao/Unbounded_Value_Sequence_T.h
        * tao/Unbounded_Wstring_Sequence_T.h
        Unbounded sequence files

        * tao/diffs/Object_Key.diff:
        Updated

        * tao/PI/ClientRequestInfo.cpp:
        * tao/PI_Server/ServerRequestInfo.cpp:
        Removed temporary object usage

        * tao/RTCORBA/RT_Stub.cpp:
        * tao/RTScheduling/Request_Interceptor.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
        Updated for the fact that an object sequence now returns a _ptr
        on the subscript operators instead of the _var which wasn't
        confirming to the CORBA C++ mapping

        * tao/RTScheduling/Current.h:
        Updated IdType typedef

        * tao/Valuetype/Bounded_Valuetype_Allocation_Traits_T.h
        * tao/Valuetype/Bounded_Valuetype_Sequence_T.h
        * tao/Valuetype/Unbounded_Valuetype_Allocation_Traits_T.h
        * tao/Valuetype/Unbounded_Valuetype_Sequence_T.h
        * tao/Valuetype/Valuetype_Sequence_Element_T.h
        * tao/Valuetype/Valuetype_Traits_Base_T.h
        * tao/Valuetype/Valuetype_Traits_T.h
        New sequence implementated for valuetypes

        * tao/Valuetype/Sequence_T.{cpp,inl}:
        Removed

        * tao/Valuetype/Sequence_T.h:
        Just include the new files, easier for backward compatibility

        * tao/Valuetype/Value_VarOut_T.{h,cpp}:
        Just define an empty Value_Traits, make sure we get all
        specializations

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_traits.cpp:
        * TAO_IDL/be/be_visitor_array/array_ch.cpp:
        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/array_cs.cpp:
        * TAO_IDL/be/be_visitor_array/array_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_ci.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
        * TAO_IDL/be_include/be_visitor_traits.h:
        Updated for new sequence implementation

        * examples/CSD_Strategy/ThreadPool4/ClientTask.cpp:
        * examples/CSD_Strategy/ThreadPool5/ClientTask.cpp:
        * examples/Load_Balancing/Identity_Client.cpp:
        * examples/Load_Balancing_persistent/Identity_Client.cpp:
        * examples/POA/NewPOA/NewPOA.cpp:
        * examples/POA/POA_BiDir/POA_BiDir.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_ClientEngine.cpp:
        * tests/DynAny_Test/test_dynsequence.cpp:
        * tests/Sequence_Unit_Tests/*:
        * tests/ORT/ServerRequestInterceptor.cpp:
        * tests/Param_Test/big_union.cpp:
        *
        tests/Portable_Interceptors/ForwardRequest/Client_ORBInitializer.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:
        * orbsvcs/orbsvcs/DsLogAdmin.idl:
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.{cpp,i}:
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.{h,cpp,i}
        * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.cpp
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp
        * orbsvcs/orbsvcs/IFRService/EnumDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/HomeDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/OperationDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ObjectReferenceFactory.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.h:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.h:
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.{h,cpp}
        * orbsvcs/tests/AVStreams/Component_Switching/distributer.cpp:
        * orbsvcs/tests/AVStreams/Component_Switching/receiver.cpp:
        * orbsvcs/tests/AVStreams/Component_Switching/sender.cpp:
        * orbsvcs/tests/Bug_1393_Regression/client.cpp:
        * orbsvcs/tests/FT_App/FT_Client.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.cpp:
        *
        orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/IOGR_Maker.cpp:
        * tests/RTScheduling/Current/Thread_Task.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:
        Updated for sequence implementation

        * tests/Sequence_Unit_Tests/*:
        Removed files that are now in the core TAO lib

Wed Apr 19 07:48:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2503_Regression/*:
          New regression for bug 2503. Thanks to Carlos O'Ryan for creating
          this test

Tue Apr 18 20:51:48 2006  Wallace Zhang  <zhangw@ociweb.com>

        * TAO version 1.5.1 released.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
