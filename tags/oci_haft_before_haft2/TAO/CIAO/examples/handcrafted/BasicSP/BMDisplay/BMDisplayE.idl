// $Id$

// ===========================================================
//
// @file BMDisplayE.idl
//
// Handlecrafted "generated" code. :)
//
// @author Balachandran Natarajan <bala@dre.vanderbilt.edu>
//
// ===========================================================

#ifndef CIAO_BMDISPLAYE_IDL
#define CIAO_BMDISPLAYE_IDL

#include "CCM_Container.idl"    // Found in $(CIAO_ROOT)/ciao
                                // For various definitions of container
                                // internal/callback interfaces
#include "BMDisplay.idl"       // Original component IDL definition
#include "../BasicSP.idl"

module BasicSP
{
  // Component Main Executor Interface.  We currently do not
  // support Executor-based implementation.

  local interface CCM_BMDisplay_Executor
  : Components::EnterpriseComponent
  {
  };

  // Monolithic component executor.
  // For implementing monolithic component call back interface.

  local interface CCM_BMDisplay
    : Components::EnterpriseComponent
  {
    void push_data_ready (in DataAvailable ev);
  };

  /**
   * Component Context Interface
   *
   * Notice that we are taking a shortcut here to inherit the
   * component-specific context from SessionContext directly instead
   * of CCMContext.
   */
  local interface CCM_BMDisplay_Context
    : Components::SessionContext
  {
    ReadData get_connection_comp_data ();
  };


  local interface CCM_BMDisplayHomeExplicit
    : Components::HomeExecutorBase
  {
  };

  local interface CCM_BMDisplayHomeImplicit
  {
    ::Components::EnterpriseComponent create ()
      raises (::Components::CCMException);
  };

  local interface CCM_BMDisplayHome
    : CCM_BMDisplayHomeExplicit,
      CCM_BMDisplayHomeImplicit
  {
  };
};

#endif /* CIAO_BMDISPLAYE_IDL */
