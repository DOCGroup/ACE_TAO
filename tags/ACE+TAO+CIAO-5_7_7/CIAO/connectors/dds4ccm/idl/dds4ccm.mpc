// $Id$

project (DDS4CCM_idl_gen) : dds4ccm, componentidldefaults {
  custom_only = 1
  idlflags += -Wb,stub_export_macro=DDS4CCM_STUB_Export \
              -Wb,stub_export_include=dds4ccm_stub_export.h \
              -Wb,skel_export_macro=DDS4CCM_SKEL_Export \
              -Wb,skel_export_include=dds4ccm_skel_export.h \
              -I$(CIAO_ROOT)/connectors -Glem

  IDL_Files {
    idlflags += -Gxhst -Gxhsk -SS
    dds4ccm_Base.idl
  }

  IDL_Files {
    idlflags -= -Gxhst -Gxhsk
    dds_rtf2_dcps.idl
    dds_rtf2_dcps_i_handle.idl
    dds4ccm_PortStatusListener.idl
    dds4ccm_DataListenerControl.idl
    dds4ccm_ConnectorStatusListener.idl
    dds4ccm_StateListenerControl.idl
    dds4ccm_Connector.idl
  }
}

project (DDS4CCM_lem_gen) : dds4ccm, ciaoidldefaults {
  custom_only = 1
  after += DDS4CCM_idl_gen
  idlflags += -I$(CIAO_ROOT)/connectors \
              -Wb,stub_export_macro=DDS4CCM_LEM_STUB_Export \
              -Wb,stub_export_include=dds4ccm_lem_stub_export.h -SS

  IDL_Files {
     idlflags += -Gxhst
     dds_rtf2_dcpsE.idl
  }

  IDL_Files {
     dds4ccm_BaseE.idl
     dds4ccm_PortStatusListenerE.idl
     dds4ccm_DataListenerControlE.idl
     dds4ccm_ConnectorStatusListenerE.idl
     dds4ccm_StateListenerControlE.idl
     dds4ccm_ConnectorE.idl
     dds_rtf2_dcps_i_handleE.idl
  }
}

project (DDS4CCM_stub) : dds4ccm, ccm_stub, ciaolib_with_idl, ciao_output, taolib {

  after += DDS4CCM_idl_gen
  includes += $(CIAO_ROOT)/connectors

  dynamicflags += DDS4CCM_STUB_BUILD_DLL
  IDL_Files {
  }

  Header_Files {
    dds4ccm_BaseC.h
    dds4ccm_PortStatusListenerC.h
    dds4ccm_DataListenerControlC.h
    dds4ccm_ConnectorStatusListenerC.h
    dds4ccm_StateListenerControlC.h
    dds_rtf2_dcpsC.h
  }

  Source_Files {
    dds4ccm_BaseC.cpp
    dds4ccm_PortStatusListenerC.cpp
    dds4ccm_DataListenerControlC.cpp
    dds4ccm_ConnectorStatusListenerC.cpp
    dds4ccm_StateListenerControlC.cpp
    dds4ccm_ConnectorC.cpp
    dds_rtf2_dcpsC.cpp
    dds_rtf2_dcps_i_handleC.cpp
    dds_rtf2_dcps_instance_handleC.cpp
  }
}

project (DDS4CCM_lem_stub) : dds4ccm, ccm_svnt, ciaolib_with_idl, ciao_output, taolib, valuetype, ifr_client {
  after += DDS4CCM_stub DDS4CCM_lem_gen
  libs  += DDS4CCM_stub
  includes += $(CIAO_ROOT)/connectors
  sharedname = DDS4CCM_lem_stub
  dynamicflags += DDS4CCM_LEM_STUB_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
   dds4ccm_BaseEC.cpp
   dds_rtf2_dcpsEC.cpp
   dds4ccm_PortStatusListenerEC.cpp
   dds4ccm_DataListenerControlEC.cpp
   dds4ccm_ConnectorStatusListenerEC.cpp
   dds4ccm_StateListenerControlEC.cpp
   dds4ccm_ConnectorEC.cpp
    dds_rtf2_dcps_i_handleEC.cpp
  }

  Header_Files {
   dds4ccm_BaseEC.h
   dds_rtf2_dcpsEC.h
   dds4ccm_PortStatusListenerEC.h
   dds4ccm_DataListenerControlEC.h
   dds4ccm_ConnectorStatusListenerEC.h
   dds4ccm_StateListenerControlEC.h
   dds4ccm_lem_stub_export.h
  }
}

project (DDS4CCM_skel) : dds4ccm, ciaolib_with_idl, ciao_output, taolib, portableserver, ciao_servant {
  after += DDS4CCM_stub
  libs  += DDS4CCM_stub
  includes += $(CIAO_ROOT)/connectors

  dynamicflags += DDS4CCM_SKEL_BUILD_DLL
  IDL_Files {
  }

  Header_Files {
    dds4ccm_BaseS.h
    dds4ccm_PortStatusListenerS.h
    dds4ccm_DataListenerControlS.h
    dds4ccm_StateListenerControlS.h
    dds4ccm_ConnectorStatusListenerS.h
    dds_rtf2_dcpsS.h
  }

  Source_Files {
    dds_rtf2_dcpsS.cpp
    dds4ccm_PortStatusListenerS.cpp
    dds4ccm_DataListenerControlS.cpp
    dds4ccm_ConnectorStatusListenerS.cpp
    dds4ccm_ConnectorS.cpp
    dds4ccm_StateListenerControlS.cpp
    dds_rtf2_dcps_i_handleS.cpp
  }
}
