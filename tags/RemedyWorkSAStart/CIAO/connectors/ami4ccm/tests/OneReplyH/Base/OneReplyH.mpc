// $Id$

project(AMI_OneReplyH_idl_gen) : componentidldefaults, ami, ami4ccm_stub {
  custom_only = 1
  idlflags += -Wb,stub_export_macro=ONEREPLYH_T_STUB_Export \
              -Wb,stub_export_include=OneReplyH_stub_export.h \
              -Wb,skel_export_macro=ONEREPLYH_T_SKEL_Export \
              -Wb,skel_export_include=OneReplyH_skel_export.h \
              -Wb,conn_export_macro=ONEREPLYH_T_CONN_Export \
              -Wb,conn_export_include=OneReplyH_conn_export.h \
              -Wb,exec_export_macro=ONEREPLYH_T_EXEC_Export \
              -Wb,exec_export_include=OneReplyH_exec_export.h \
              -I.. -GM -Gxhcn
  idlflags -= -Gsv

  IDL_Files {
    OneReplyH.idl
  }
}

project(AMI_OneReplyH_lem_gen) : ciaoidldefaults {
  after += AMI_OneReplyH_idl_gen AMI_OneReplyH_lema_gen
  custom_only = 1
  idlflags += -Wb,export_macro=ONEREPLYH_T_LEM_STUB_Export \
              -Wb,export_include=OneReplyH_lem_stub_export.h \
              -I.. -SS -Gxhst

  IDL_Files {
    OneReplyHE.idl
  }
}

project(AMI_OneReplyH_lema_gen) : ciaoidldefaults, typecode {
  after += AMI_OneReplyH_idl_gen
  custom_only = 1
  idlflags += -Wb,stub_export_macro=ONEREPLYH_T_STUB_Export \
              -Wb,stub_export_include=OneReplyH_stub_export.h \
              -Wb,conn_export_macro=ONEREPLYH_T_CONN_Export \
              -Wb,conn_export_include=OneReplyH_conn_export.h \
              -Wb,svnt_export_macro=ONEREPLYH_T_SVNT_Export \
              -Wb,svnt_export_include=OneReplyH_svnt_export.h \
              -Wb,skel_export_macro=ONEREPLYH_T_SKEL_Export \
              -Wb,skel_export_include=OneReplyH_skel_export.h \
              -I.. -Gsv -Gcn -Glem -GC -Gxhst -Gxhsv

  IDL_Files {
    OneReplyHA.idl
  }
}

project(AMI_OneReplyH_lemae_gen) : ciaoidldefaults {
  after += AMI_OneReplyH_lema_gen
  custom_only = 1
  idlflags += -Wb,stub_export_macro=ONEREPLYH_T_LEM_STUB_Export \
              -Wb,stub_export_include=OneReplyH_lem_stub_export.h \
              -I.. -SS

  IDL_Files {
    OneReplyHAE.idl
  }
}

project(AMI_OneReplyH_stub) : ccm_stub, ami, ami4ccm_stub {
  after += AMI_OneReplyH_lem_gen
  libs  +=
  libout = ../lib
  libpaths += ../lib
  includes +=   ..

  sharedname = OneReplyH_stub
  dynamicflags += ONEREPLYH_T_STUB_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    OneReplyHC.cpp
    OneReplyHAC.cpp
  }

  Header_Files {
    OneReplyHC.h
    OneReplyH_stub_export.h
}

  Inline_Files {
    OneReplyHC.inl
  }
}

project(AMI_OneReplyH_lem_stub) : ccm_executor, ami, ami4ccm_lem_stub {
  after += AMI_OneReplyH_lem_gen AMI_OneReplyH_stub AMI_OneReplyH_lemae_gen AMI_OneReplyH_skel
  libs += OneReplyH_stub OneReplyH_skel
  libout = ../lib
  libpaths += ../lib
  includes +=   ..

  sharedname = OneReplyH_lem_stub
  dynamicflags += ONEREPLYH_T_LEM_STUB_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    OneReplyHEC.cpp
    OneReplyHAEC.cpp
  }

  Header_Files {
    OneReplyHEC.h
    OneReplyH_lem_stub_export.h
}

  Inline_Files {
    OneReplyHEC.inl
  }
}

project(AMI_OneReplyH_skel) : ciao_executor, ami, ami4ccm_servant {
  after      += AMI_OneReplyH_stub
  sharedname  = OneReplyH_skel
  libs       += OneReplyH_stub
  libout = ../lib
  libpaths += ../lib
  includes +=   ..

  dynamicflags += ONEREPLYH_T_SKEL_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    OneReplyHS.cpp
    OneReplyHAS.cpp
  }

  Header_Files {
    OneReplyHS.h
   
    OneReplyH_skel_export.h
  }

  Inline_Files {
  }
}

project(AMI_OneReplyH_conn) : ciao_executor, ami, ami4ccm_lem_stub {
  after   += AMI_OneReplyH_lem_stub OneReplyH_Base_AMI_stub AMI_OneReplyH_skel AMI_OneReplyH_lema_gen AMI_OneReplyH_lemae_gen
  sharedname = OneReplyH_conn
  libs += OneReplyH_stub OneReplyH_skel OneReplyH_lem_stub
  libpaths += ../lib
  libout = ../lib
  dynamicflags += ONEREPLYH_T_CONN_BUILD_DLL
  includes += ..
  IDL_Files {
  }

  Source_Files {
    OneReplyHA_conn.cpp
  }

  Header_Files {
    OneReplyHA_conn.h
    OneReplyH_conn_export.h
  }

  Inline_Files {
  }
}

project(AMI_OneReplyH_svnt) : ciao_servant, ami, ami4ccm_servant {
  after   += AMI_OneReplyH_lem_stub OneReplyH_Base_AMI_stub AMI_OneReplyH_skel AMI_OneReplyH_lema_gen AMI_OneReplyH_lemae_gen AMI_OneReplyH_conn
  sharedname = OneReplyH_svnt
  libs += OneReplyH_stub OneReplyH_skel OneReplyH_lem_stub OneReplyH_conn
  libpaths += ../lib
  libout = ../lib
  dynamicflags += ONEREPLYH_T_SVNT_BUILD_DLL
  includes += ..
  IDL_Files {
  }

  Source_Files {
    OneReplyHA_svnt.cpp
  }

  Header_Files {
    OneReplyHA_svnt.h
    OneReplyHA_svnt_export.h
  }

  Inline_Files {
  }
}

