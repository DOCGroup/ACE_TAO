if $__TOS_WIN__ {
	option PlatformOptions = define ("ACE_HAS_WINSOCK2","1"),
	         define ("WIN32","1"),
        	 define ("_WINDOWS","1")
	TARG = "aced.lib"
}
if $__TOS_AIX__ {
	option PlatformOptions = null
	TARG = "libACE.a"
}

option
	 PlatformOptions,
         incl(searchPath,'..'),
       	 define ("__ACE_INLINE__","0"),
         define("ACE_HAS_DLL","0"),
         link(exportAll),
         link(linkwithsharedlib),
         link(linkWithMultiThreadLib,yes)
         {
               target type (lib) TARG
                {
                       option macros(global)
                        {
                             source type(cpp) "OS.h"
                        }
                 source type(cpp) "Log_Msg.cpp"
                 source type(cpp) "ACE.cpp"
                 source type(cpp) "Activation_Queue.cpp"
                 source type(cpp) "Active_Map_Manager.cpp"
                 source type(cpp) "Addr.cpp"
                 source type(cpp) "Arg_Shifter.cpp"
                 source type(cpp) "ARGV.cpp"
                 source type(cpp) "Asynch_IO.cpp"
                 source type(cpp) "Asynch_IO_Impl.cpp"
                 source type(cpp) "Basic_Types.cpp"
                 source type(cpp) "CDR_Base.cpp"
                 source type(cpp) "CDR_Stream.cpp"
                 source type(cpp) "Containers.cpp"
                 source type(cpp) "CORBA_Handler.cpp"
                 source type(cpp) "CORBA_Ref.cpp"
                 source type(cpp) "Date_Time.cpp"
                 source type(cpp) "DEV.cpp"
                 source type(cpp) "DEV_Addr.cpp"
                 source type(cpp) "DEV_Connector.cpp"
                 source type(cpp) "DEV_IO.cpp"
                 source type(cpp) "Dirent.cpp"
                 source type(cpp) "DLL.cpp"
                 source type(cpp) "Dump.cpp"
                 source type(cpp) "Dynamic.cpp"
                 source type(cpp) "Dynamic_Service.cpp"
                 source type(cpp) "Event_Handler.cpp"
                 source type(cpp) "Event_Handler_T.cpp"
                 source type(cpp) "FIFO.cpp"
                 source type(cpp) "FIFO_Recv.cpp"
                 source type(cpp) "FIFO_Recv_Msg.cpp"
                 source type(cpp) "FIFO_Send.cpp"
                 source type(cpp) "FIFO_Send_Msg.cpp"
                 source type(cpp) "FILE.cpp"
                 source type(cpp) "FILE_Addr.cpp"
                 source type(cpp) "FILE_Connector.cpp"
                 source type(cpp) "FILE_IO.cpp"
                 source type(cpp) "Filecache.cpp"
                 source type(cpp) "Functor.cpp"
                 source type(cpp) "Future.cpp"
                 source type(cpp) "Get_Opt.cpp"
                 source type(cpp) "Handle_Set.cpp"
                 source type(cpp) "Hash_Map_Manager.cpp"
                 source type(cpp) "High_Res_Timer.cpp"
                 source type(cpp) "INET_Addr.cpp"
                 source type(cpp) "IO_Cntl_Msg.cpp"
                 source type(cpp) "IO_SAP.cpp"
                 source type(cpp) "IOStream.cpp"
                 source type(cpp) "IPC_SAP.cpp"
                 source type(cpp) "Local_Name_Space.cpp"
                 source type(cpp) "Local_Tokens.cpp"
                 source type(cpp) "Log_Record.cpp"
                 source type(cpp) "LSOCK.cpp"
                 source type(cpp) "LSOCK_Acceptor.cpp"
                 source type(cpp) "LSOCK_CODgram.cpp"
                 source type(cpp) "LSOCK_Connector.cpp"
                 source type(cpp) "LSOCK_Dgram.cpp"
                 source type(cpp) "LSOCK_Stream.cpp"
                 source type(cpp) "Malloc.cpp"
                 source type(cpp) "Map.cpp"
                 source type(cpp) "Mem_Map.cpp"
                 source type(cpp) "Memory_Pool.cpp"
                 source type(cpp) "Message_Block.cpp"
                 source type(cpp) "Message_Queue.cpp"
                 source type(cpp) "Method_Request.cpp"
                 source type(cpp) "Msg_WFMO_Reactor.cpp"
                 source type(cpp) "Multiplexor.cpp"
                 source type(cpp) "Name_Proxy.cpp"
                 source type(cpp) "Name_Request_Reply.cpp"
                 source type(cpp) "Name_Space.cpp"
                 source type(cpp) "Naming_Context.cpp"
                 source type(cpp) "NT_Service.cpp"
                 source type(cpp) "Object_Manager.cpp"
                 source type(cpp) "Obstack.cpp"
                 source type(cpp) "OS.cpp"
                 source type(cpp) "OS_Dirent.cpp"
                 source type(cpp) "OS_Errno.cpp"
                 source type(cpp) "OS_Memory.cpp"
                 source type(cpp) "OS_String.cpp"
                 source type(cpp) "OS_TLI.cpp"
                 source type(cpp) "Pair.cpp"
                 source type(cpp) "Parse_Node.cpp"
                 source type(cpp) "Pipe.cpp"
                 source type(cpp) "Priority_Reactor.cpp"
                 source type(cpp) "Proactor.cpp"
                 source type(cpp) "Process.cpp"
                 source type(cpp) "Process_Manager.cpp"
                 source type(cpp) "Profile_Timer.cpp"
                 source type(cpp) "RB_Tree.cpp"
                 source type(cpp) "Reactor.cpp"
                 source type(cpp) "Read_Buffer.cpp"
                 source type(cpp) "Registry.cpp"
                 source type(cpp) "Registry_Name_Space.cpp"
                 source type(cpp) "Remote_Name_Space.cpp"
                 source type(cpp) "Remote_Tokens.cpp"
                 source type(cpp) "Sched_Params.cpp"
                 source type(cpp) "Select_Reactor.cpp"
                 source type(cpp) "Select_Reactor_Base.cpp"
                 source type(cpp) "Service_Config.cpp"
                 source type(cpp) "Service_Manager.cpp"
                 source type(cpp) "Service_Object.cpp"
                 source type(cpp) "Service_Repository.cpp"
                 source type(cpp) "Service_Types.cpp"
                 source type(cpp) "Shared_Memory.cpp"
                 source type(cpp) "Shared_Memory_MM.cpp"
                 source type(cpp) "Shared_Memory_SV.cpp"
                 source type(cpp) "Shared_Object.cpp"
                 source type(cpp) "Signal.cpp"
                 source type(cpp) "SOCK.cpp"
                 source type(cpp) "SOCK_Acceptor.cpp"
                 source type(cpp) "SOCK_CODgram.cpp"
                 source type(cpp) "SOCK_Connector.cpp"
                 source type(cpp) "SOCK_Dgram.cpp"
                 source type(cpp) "SOCK_Dgram_Bcast.cpp"
                 source type(cpp) "SOCK_Dgram_Mcast.cpp"
                 source type(cpp) "SOCK_IO.cpp"
                 source type(cpp) "SOCK_Stream.cpp"
                 source type(cpp) "SPIPE.cpp"
                 source type(cpp) "SPIPE_Acceptor.cpp"
                 source type(cpp) "SPIPE_Addr.cpp"
                 source type(cpp) "SPIPE_Connector.cpp"
                 source type(cpp) "SPIPE_Stream.cpp"
                 source type(cpp) "SString.cpp"
                 source type(cpp) "Stats.cpp"
                 source type(cpp) "Strategies.cpp"
                 source type(cpp) "SV_Message.cpp"
                 source type(cpp) "SV_Message_Queue.cpp"
                 source type(cpp) "SV_Semaphore_Complex.cpp"
                 source type(cpp) "SV_Semaphore_Simple.cpp"
                 source type(cpp) "SV_Shared_Memory.cpp"
                 source type(cpp) "Svc_Conf_l.cpp"
                 source type(cpp) "Svc_Conf_y.cpp"
                 source type(cpp) "Svc_Handler.cpp"
                 source type(cpp) "Synch.cpp"
                 source type(cpp) "Process_Semaphore.cpp"
                 source type(cpp) "Process_Mutex.cpp"
                 source type(cpp) "RW_Process_Mutex.cpp"
                 source type(cpp) "File_Lock.cpp"
                 source type(cpp) "Synch_Options.cpp"
                 source type(cpp) "System_Time.cpp"
                 source type(cpp) "Task.cpp"
                 source type(cpp) "Thread.cpp"
                 source type(cpp) "Base_Thread_Adapter.cpp"
                 source type(cpp) "OS_Thread_Adapter.cpp"
                 source type(cpp) "Thread_Adapter.cpp"
                 source type(cpp) "Thread_Manager.cpp"
                 source type(cpp) "Time_Request_Reply.cpp"
                 source type(cpp) "Timeprobe.cpp"
                 source type(cpp) "Timer_Hash.cpp"
                 source type(cpp) "Timer_Heap.cpp"
                 source type(cpp) "Timer_List.cpp"
                 source type(cpp) "Timer_Queue.cpp"
                 source type(cpp) "Timer_Queue_Adapters.cpp"
                 source type(cpp) "Timer_Wheel.cpp"
                 source type(cpp) "TLI.cpp"
                 source type(cpp) "TLI_Acceptor.cpp"
                 source type(cpp) "TLI_Connector.cpp"
                 source type(cpp) "TLI_Stream.cpp"
                 source type(cpp) "Token.cpp"
                 source type(cpp) "Token_Collection.cpp"
                 source type(cpp) "Token_Invariants.cpp"
                 source type(cpp) "Token_Manager.cpp"
                 source type(cpp) "Token_Request_Reply.cpp"
                 source type(cpp) "TP_Reactor.cpp"
                 source type(cpp) "Trace.cpp"
                 source type(cpp) "TTY_IO.cpp"
                 source type(cpp) "Typed_SV_Message.cpp"
                 source type(cpp) "Typed_SV_Message_Queue.cpp"
                 source type(cpp) "UNIX_Addr.cpp"
                 source type(cpp) "UPIPE_Acceptor.cpp"
                 source type(cpp) "UPIPE_Connector.cpp"
                 source type(cpp) "UPIPE_Stream.cpp"
                 source type(cpp) "WFMO_Reactor.cpp"
                 source type(cpp) "WIN32_Asynch_IO.cpp"
                 source type(cpp) "WIN32_Proactor.cpp"
                 source type(cpp) "XtReactor.cpp"
                 source type(cpp) "Active_Map_Manager_T.cpp"
                 source type(cpp) "Containers_T.cpp"
                 source type(cpp) "Dump_T.cpp"
                 source type(cpp) "Env_Value_T.cpp"
                 source type(cpp) "Event_Handler_T.cpp"
                 source type(cpp) "Functor_T.cpp"
                 source type(cpp) "Hash_Map_Manager_T.cpp"
                 source type(cpp) "IOStream_T.cpp"
                 source type(cpp) "Local_Name_Space_T.cpp"
                 source type(cpp) "Malloc_T.cpp"
                 source type(cpp) "Map_T.cpp"
                 source type(cpp) "Message_Block_T.cpp"
                 source type(cpp) "Message_Queue_T.cpp"
                 source type(cpp) "Pair_T.cpp"
                 source type(cpp) "Select_Reactor_T.cpp"
                 source type(cpp) "Strategies_T.cpp"
                 source type(cpp) "Synch_T.cpp"
                 source type(cpp) "Task_T.cpp"
                 source type(cpp) "Timeprobe_T.cpp"
                 source type(cpp) "Timer_Hash_T.cpp"
                 source type(cpp) "Timer_Heap_T.cpp"
                 source type(cpp) "Timer_List_T.cpp"
                 source type(cpp) "Timer_Queue_T.cpp"
                 source type(cpp) "Timer_Wheel_T.cpp"
                 // Template implementation files (#pragma implementation)
                 source type (cpp) "Acceptor.cpp"
                 source type (cpp) "Active_Map_Manager_T.cpp"
                 source type (cpp) "Containers.cpp"
                 source type (cpp) "Asynch_Acceptor.cpp"
                 source type (cpp) "Auto_Ptr.cpp"
                 source type (cpp) "CORBA_Ref.cpp"
                 source type (cpp) "Connector.cpp"
                 source type (cpp) "Containers_T.cpp"
                 source type (cpp) "Dump_T.cpp"
                 source type (cpp) "Env_Value_T.cpp"
                 source type (cpp) "Event_Handler_T.cpp"
                 source type (cpp) "Free_List.cpp"
                 source type (cpp) "Functor_T.cpp"
                 source type (cpp) "Future.cpp"
                 source type (cpp) "Hash_Map_Manager_T.cpp"
                 source type (cpp) "IOStream_T.cpp"
                 source type (cpp) "LOCK_SOCK_Acceptor.cpp"
                 source type (cpp) "Local_Name_Space_T.cpp"
                 source type (cpp) "Malloc_T.cpp"
                 source type (cpp) "Managed_Object.cpp"
                 source type (cpp) "Map_Manager.cpp"
                 source type (cpp) "Map_T.cpp"
                 source type (cpp) "Message_Block_T.cpp"
                 source type (cpp) "Message_Queue_T.cpp"
                 source type (cpp) "Module.cpp"
                 source type (cpp) "Pair_T.cpp"
                 source type (cpp) "RB_Tree.cpp"
                 source type (cpp) "Select_Reactor_T.cpp"
                 source type (cpp) "Singleton.cpp"
                 source type (cpp) "Strategies_T.cpp"
                 source type (cpp) "Stream.cpp"
                 source type (cpp) "Stream_Modules.cpp"
                 source type (cpp) "Svc_Handler.cpp"
                 source type (cpp) "Synch_T.cpp"
                 source type (cpp) "Task_T.cpp"
                 source type (cpp) "Timeprobe_T.cpp"
                 source type (cpp) "Timer_Hash_T.cpp"
                 source type (cpp) "Timer_Heap_T.cpp"
                 source type (cpp) "Timer_List_T.cpp"
                 source type (cpp) "Timer_Queue_T.cpp"
                 source type (cpp) "Timer_Wheel_T.cpp"
                 source type (cpp) "Typed_SV_Message.cpp"
                 source type (cpp) "Typed_SV_Message_Queue.cpp"

                // Libraries needed during linking
		if $__TOS_WIN__ {
			source type (lib) "advapi32.lib"
                 	source type (lib) "user32.lib"
		  	source type (lib) "ws2_32.lib"
		  	source type (lib) "wsock32.lib"
		  	source type (lib) "mswsock.lib"
		}
		if $__TOS_AIX__ {
                        source type (lib) "libtli_r.a"
                        source type (lib) "libpthreads.a"
                        source type (lib) "libc_r.a"
		}
        }
}
