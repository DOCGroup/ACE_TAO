--- orig/ImR_LocatorC.h	2003-04-25 17:36:28.000000000 -0500
+++ ./ImR_LocatorC.h	2003-04-25 17:38:32.000000000 -0500
@@ -30,17 +30,15 @@
 
 #ifndef _TAO_IDL_ORIG_IMR_LOCATORC_H_
 #define _TAO_IDL_ORIG_IMR_LOCATORC_H_
-
 #include "ace/pre.h"
-
-#include "tao/corba.h"
+#include "portableserver_export.h"
 
 #if !defined (ACE_LACKS_PRAGMA_ONCE)
 # pragma once
 #endif /* ACE_LACKS_PRAGMA_ONCE */
 
 
-#include "portableserver_export.h"
+
 
 #include "ImplRepoC.h"
 
@@ -72,31 +70,31 @@
 
 TAO_NAMESPACE  ImplementationRepository
 {
-  
+
   // TAO_IDL - Generated from
   // be/be_interface.cpp:570
 
 #if !defined (_IMPLEMENTATIONREPOSITORY_LOCATOR__ODDS_N_ENDS_CH_)
 #define _IMPLEMENTATIONREPOSITORY_LOCATOR__ODDS_N_ENDS_CH_
-  
+
   class Locator;
   typedef Locator *Locator_ptr;
   struct tao_Locator_life;
-  
+
   typedef
     TAO_Objref_Var_T<
         Locator,
         tao_Locator_life
       >
     Locator_var;
-  
+
   typedef
     TAO_Objref_Out_T<
         Locator,
         tao_Locator_life
       >
     Locator_out;
-  
+
   struct TAO_PortableServer_Export tao_Locator_life
   {
     static Locator_ptr tao_duplicate (Locator_ptr);
@@ -107,7 +105,7 @@
         TAO_OutputCDR &
       );
   };
-  
+
   struct TAO_PortableServer_Export tao_Locator_cast
   {
     static Locator_ptr tao_narrow (
@@ -118,18 +116,18 @@
   };
 
 #endif /* end #if !defined */
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/interface_ch.cpp:50
 
 #if !defined (_IMPLEMENTATIONREPOSITORY_LOCATOR_CH_)
 #define _IMPLEMENTATIONREPOSITORY_LOCATOR_CH_
-  
+
   class _TAO_Locator_Proxy_Impl;
   class _TAO_Locator_Remote_Proxy_Impl;
   class _TAO_Locator_Proxy_Broker;
   class _TAO_Locator_Remote_Proxy_Broker;
-  
+
   class TAO_PortableServer_Export Locator
     : public virtual ImplementationRepository::Administration
   {
@@ -137,30 +135,30 @@
     typedef Locator_ptr _ptr_type;
     typedef Locator_var _var_type;
     static int _tao_class_id;
-    
+
     // The static operations.
     static Locator_ptr _duplicate (Locator_ptr obj);
-    
+
     static Locator_ptr _narrow (
         CORBA::Object_ptr obj
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
       );
-    
+
     static Locator_ptr _unchecked_narrow (
         CORBA::Object_ptr obj
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
       );
-    
+
     static Locator_ptr _nil (void)
       {
         return (Locator_ptr)0;
       }
-    
+
     static void _tao_any_destructor (void *);
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual void activate_server_in_location (
         const char * server,
         const char * location
@@ -171,10 +169,10 @@
         , ImplementationRepository::NotFound
         , ImplementationRepository::CannotActivate
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual void remove_server_in_location (
         const char * server,
         const char * location
@@ -184,10 +182,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual void shutdown_server_in_location (
         const char * server,
         const char * location
@@ -197,10 +195,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual void server_is_shutting_down_in_location (
         const char * server,
         const char * location
@@ -210,10 +208,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual CORBA::ULong register_activator (
         const char * location,
         CORBA::Object_ptr object_ref
@@ -223,10 +221,10 @@
         CORBA::SystemException
         , ImplementationRepository::AlreadyRegistered
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual CORBA::ULong unregister_activator (
         const char * location,
         CORBA::Object_ptr object_ref
@@ -236,70 +234,70 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_interface/interface_ch.cpp:207
-    
+
     virtual CORBA::Boolean _is_a (
         const char *type_id
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
       );
-    
+
     virtual void *_tao_QueryInterface (ptr_arith_t type);
-    
+
     virtual const char* _interface_repository_id (void) const;
     virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
   private:
     _TAO_Locator_Proxy_Broker *the_TAO_Locator_Proxy_Broker_;
-  
+
   protected:
     Locator (int collocated = 0);
-    
+
     // These methods travese the inheritance tree and set the
     // parents piece of the given class in the right mode.
     virtual void ImplementationRepository_Locator_setup_collocation (int collocated);
-    
+
     Locator (IOP::IOR *ior,
       TAO_ORB_Core *orb_core = 0);
-      
+
     Locator (
-        TAO_Stub *objref, 
+        TAO_Stub *objref,
         CORBA::Boolean _tao_collocated = 0,
         TAO_Abstract_ServantBase *servant = 0,
         TAO_ORB_Core *orb_core = 0
       );
     virtual ~Locator (void);
-    
+
     friend class _TAO_Locator_Remote_Proxy_Impl;
     friend class _TAO_Locator_ThruPOA_Proxy_Impl;
     friend class _TAO_Locator_Direct_Proxy_Impl;
-  
+
   private:
     Locator (const Locator &);
     void operator= (const Locator &);
   };
-  
+
   // The Proxy Implementations are used by each interface to
   // perform a call. Each different implementation encapsulates
   // an invocation logic.
-  
-  
+
+
   ///////////////////////////////////////////////////////////////////////
   //                    Base Proxy Impl. Declaration
   //
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/base_proxy_impl_ch.cpp:35
-  
+
   class TAO_PortableServer_Export _TAO_Locator_Proxy_Impl
     : public virtual ImplementationRepository::_TAO_Administration_Proxy_Impl
   {
   public:
     virtual ~_TAO_Locator_Proxy_Impl (void) {}
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual void activate_server_in_location (
         CORBA::Object *_collocated_tao_target_,
         const char * server,
@@ -311,10 +309,10 @@
         , ImplementationRepository::NotFound
         , ImplementationRepository::CannotActivate
       )) = 0;
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual void remove_server_in_location (
         CORBA::Object *_collocated_tao_target_,
         const char * server,
@@ -325,10 +323,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       )) = 0;
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual void shutdown_server_in_location (
         CORBA::Object *_collocated_tao_target_,
         const char * server,
@@ -339,10 +337,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       )) = 0;
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual void server_is_shutting_down_in_location (
         CORBA::Object *_collocated_tao_target_,
         const char * server,
@@ -353,10 +351,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       )) = 0;
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual CORBA::ULong register_activator (
         CORBA::Object *_collocated_tao_target_,
         const char * location,
@@ -367,10 +365,10 @@
         CORBA::SystemException
         , ImplementationRepository::AlreadyRegistered
       )) = 0;
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual CORBA::ULong unregister_activator (
         CORBA::Object *_collocated_tao_target_,
         const char * location,
@@ -381,23 +379,23 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       )) = 0;
-  
+
   protected:
     _TAO_Locator_Proxy_Impl (void);
   };
-  
+
   //
   //               End Base Proxy Impl. Declaration
   ///////////////////////////////////////////////////////////////////////
-  
-  
+
+
   ///////////////////////////////////////////////////////////////////////
   //                Remote Proxy Impl. Declaration
   //
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/remote_proxy_impl_ch.cpp:37
-  
+
   class TAO_PortableServer_Export _TAO_Locator_Remote_Proxy_Impl
     : public virtual _TAO_Locator_Proxy_Impl,
       public virtual TAO_Remote_Object_Proxy_Impl,
@@ -405,12 +403,12 @@
   {
   public:
     _TAO_Locator_Remote_Proxy_Impl (void);
-    
+
     virtual ~_TAO_Locator_Remote_Proxy_Impl (void) {}
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual void activate_server_in_location (
         CORBA::Object *_collocated_tao_target_,
         const char * server,
@@ -422,10 +420,10 @@
         , ImplementationRepository::NotFound
         , ImplementationRepository::CannotActivate
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual void remove_server_in_location (
         CORBA::Object *_collocated_tao_target_,
         const char * server,
@@ -436,10 +434,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual void shutdown_server_in_location (
         CORBA::Object *_collocated_tao_target_,
         const char * server,
@@ -450,10 +448,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual void server_is_shutting_down_in_location (
         CORBA::Object *_collocated_tao_target_,
         const char * server,
@@ -464,10 +462,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual CORBA::ULong register_activator (
         CORBA::Object *_collocated_tao_target_,
         const char * location,
@@ -478,10 +476,10 @@
         CORBA::SystemException
         , ImplementationRepository::AlreadyRegistered
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual CORBA::ULong unregister_activator (
         CORBA::Object *_collocated_tao_target_,
         const char * location,
@@ -493,23 +491,23 @@
         , ImplementationRepository::NotFound
       ));
   };
-  
+
   //
   //             End Remote Proxy Impl. Declaration
   ///////////////////////////////////////////////////////////////////////
-  
+
   // The Proxy Brokers are used by each interface to get
-  // the right proxy for performing a call. In the new 
+  // the right proxy for performing a call. In the new
   // collocation scheme, the proxy to be used can vary on
   // a call by call basis.
-  
+
   ///////////////////////////////////////////////////////////////////////
-  //                 Base Proxy Broker Declaration 
+  //                 Base Proxy Broker Declaration
   //
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/base_proxy_broker_ch.cpp:35
-  
+
   class TAO_PortableServer_Export _TAO_Locator_Proxy_Broker
   {
   public:
@@ -518,56 +516,56 @@
         Locator *object
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
       ) = 0;
-    
+
   protected:
     _TAO_Locator_Proxy_Broker (void);
-    
+
   };
-  
+
   //
-  //              End Base Proxy Broker Declaration 
+  //              End Base Proxy Broker Declaration
   ///////////////////////////////////////////////////////////////////////
-  
-    
+
+
   ///////////////////////////////////////////////////////////////////////
-  //                 Remote Proxy Broker Declaration 
+  //                 Remote Proxy Broker Declaration
   //
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/remote_proxy_broker_ch.cpp:40
-  
+
   class TAO_PortableServer_Export _TAO_Locator_Remote_Proxy_Broker
     : public virtual _TAO_Locator_Proxy_Broker
   {
-  public: 
+  public:
     _TAO_Locator_Remote_Proxy_Broker (void);
-    
+
     virtual ~_TAO_Locator_Remote_Proxy_Broker (void);
-    
+
     virtual _TAO_Locator_Proxy_Impl &select_proxy (
         Locator *object
         ACE_ENV_ARG_DECL
       );
-    
+
   private:
     _TAO_Locator_Remote_Proxy_Impl remote_proxy_impl_;
-  
+
   public:
     // This member function is used to get an handle to the unique instance
     // of the Remote Proxy Broker that is available for a given
     // interface.
     static _TAO_Locator_Remote_Proxy_Broker *the_TAO_Locator_Remote_Proxy_Broker (void);
   };
-  
+
   //
-  //              End Remote Proxy Broker Declaration 
+  //              End Remote Proxy Broker Declaration
   ///////////////////////////////////////////////////////////////////////
 
 #endif /* end #if !defined */
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_typecode/typecode_decl.cpp:44
-  
+
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Locator;
 
 // TAO_IDL - Generated from
@@ -627,4 +625,3 @@
 
 #include "ace/post.h"
 #endif /* ifndef */
-
--- orig/ImR_LocatorC.i	2003-04-25 17:36:27.000000000 -0500
+++ ./ImR_LocatorC.i	2003-04-25 17:30:46.000000000 -0500
@@ -69,12 +69,12 @@
 // TAO_IDL - Generated from
 // be/be_visitor_interface/cdr_op_ci.cpp:72
 
-TAO_PortableServer_Export CORBA::Boolean operator<< (
+TAO_Export CORBA::Boolean operator<< (
     TAO_OutputCDR &,
     const ImplementationRepository::Locator_ptr
   );
 
-TAO_PortableServer_Export CORBA::Boolean operator>> (
+TAO_Export CORBA::Boolean operator>> (
     TAO_InputCDR &,
     ImplementationRepository::Locator_ptr &
   );
