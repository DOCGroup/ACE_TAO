// $Id$
//
// ******  Code generated by the The ACE ORB (TAO) IDL Compiler *******
// TAO ORB and the TAO IDL Compiler have been developed by Washington
// University Computer Science's Distributed Object Computing Group.
//
// Information on TAO is available at
//                 http://www.cs.wustl.edu/~schmidt/TAO.html

// skeleton destructor
ACE_INLINE
POA_PortableServer::ThreadPolicy::~ThreadPolicy (void)
{
}
ACE_INLINE void POA_PortableServer::ThreadPolicy::copy_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::ThreadPolicy_ptr) obj;
  POA_CORBA::Policy::copy_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
ACE_INLINE void POA_PortableServer::ThreadPolicy::destroy_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::ThreadPolicy_ptr) obj;
  POA_CORBA::Policy::destroy_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
ACE_INLINE void POA_PortableServer::ThreadPolicy::_get_policy_type_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::ThreadPolicy_ptr) obj;
  POA_CORBA::Policy::_get_policy_type_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
// skeleton destructor
ACE_INLINE
POA_PortableServer::LifespanPolicy::~LifespanPolicy (void)
{
}
ACE_INLINE void POA_PortableServer::LifespanPolicy::copy_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::LifespanPolicy_ptr) obj;
  POA_CORBA::Policy::copy_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
ACE_INLINE void POA_PortableServer::LifespanPolicy::destroy_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::LifespanPolicy_ptr) obj;
  POA_CORBA::Policy::destroy_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
ACE_INLINE void POA_PortableServer::LifespanPolicy::_get_policy_type_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::LifespanPolicy_ptr) obj;
  POA_CORBA::Policy::_get_policy_type_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
// skeleton destructor
ACE_INLINE
POA_PortableServer::IdUniquenessPolicy::~IdUniquenessPolicy (void)
{
}
ACE_INLINE void POA_PortableServer::IdUniquenessPolicy::copy_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::IdUniquenessPolicy_ptr) obj;
  POA_CORBA::Policy::copy_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
ACE_INLINE void POA_PortableServer::IdUniquenessPolicy::destroy_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::IdUniquenessPolicy_ptr) obj;
  POA_CORBA::Policy::destroy_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
ACE_INLINE void POA_PortableServer::IdUniquenessPolicy::_get_policy_type_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::IdUniquenessPolicy_ptr) obj;
  POA_CORBA::Policy::_get_policy_type_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
// skeleton destructor
ACE_INLINE
POA_PortableServer::IdAssignmentPolicy::~IdAssignmentPolicy (void)
{
}
ACE_INLINE void POA_PortableServer::IdAssignmentPolicy::copy_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::IdAssignmentPolicy_ptr) obj;
  POA_CORBA::Policy::copy_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
ACE_INLINE void POA_PortableServer::IdAssignmentPolicy::destroy_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::IdAssignmentPolicy_ptr) obj;
  POA_CORBA::Policy::destroy_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
ACE_INLINE void POA_PortableServer::IdAssignmentPolicy::_get_policy_type_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::IdAssignmentPolicy_ptr) obj;
  POA_CORBA::Policy::_get_policy_type_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
// skeleton destructor
ACE_INLINE
POA_PortableServer::ImplicitActivationPolicy::~ImplicitActivationPolicy (void)
{
}
ACE_INLINE void POA_PortableServer::ImplicitActivationPolicy::copy_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::ImplicitActivationPolicy_ptr) obj;
  POA_CORBA::Policy::copy_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
ACE_INLINE void POA_PortableServer::ImplicitActivationPolicy::destroy_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::ImplicitActivationPolicy_ptr) obj;
  POA_CORBA::Policy::destroy_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
ACE_INLINE void POA_PortableServer::ImplicitActivationPolicy::_get_policy_type_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::ImplicitActivationPolicy_ptr) obj;
  POA_CORBA::Policy::_get_policy_type_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
// skeleton destructor
ACE_INLINE
POA_PortableServer::ServantRetentionPolicy::~ServantRetentionPolicy (void)
{
}
ACE_INLINE void POA_PortableServer::ServantRetentionPolicy::copy_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::ServantRetentionPolicy_ptr) obj;
  POA_CORBA::Policy::copy_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
ACE_INLINE void POA_PortableServer::ServantRetentionPolicy::destroy_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::ServantRetentionPolicy_ptr) obj;
  POA_CORBA::Policy::destroy_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
ACE_INLINE void POA_PortableServer::ServantRetentionPolicy::_get_policy_type_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::ServantRetentionPolicy_ptr) obj;
  POA_CORBA::Policy::_get_policy_type_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
// skeleton destructor
ACE_INLINE
POA_PortableServer::RequestProcessingPolicy::~RequestProcessingPolicy (void)
{
}
ACE_INLINE void POA_PortableServer::RequestProcessingPolicy::copy_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::RequestProcessingPolicy_ptr) obj;
  POA_CORBA::Policy::copy_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
ACE_INLINE void POA_PortableServer::RequestProcessingPolicy::destroy_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::RequestProcessingPolicy_ptr) obj;
  POA_CORBA::Policy::destroy_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
ACE_INLINE void POA_PortableServer::RequestProcessingPolicy::_get_policy_type_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::RequestProcessingPolicy_ptr) obj;
  POA_CORBA::Policy::_get_policy_type_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}

// **************************************************
//
// TAO spcific POA locking policy (non-standard)
//
// **************************************************

// skeleton destructor
ACE_INLINE
POA_PortableServer::TAO_POA_LockingPolicy::~TAO_POA_LockingPolicy (void)
{
}
ACE_INLINE void POA_PortableServer::TAO_POA_LockingPolicy::copy_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::TAO_POA_LockingPolicy_ptr) obj;
  POA_CORBA::Policy::copy_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
ACE_INLINE void POA_PortableServer::TAO_POA_LockingPolicy::destroy_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::TAO_POA_LockingPolicy_ptr) obj;
  POA_CORBA::Policy::destroy_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}
ACE_INLINE void POA_PortableServer::TAO_POA_LockingPolicy::_get_policy_type_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &env)
{
  POA_CORBA::Policy_ptr impl = (POA_PortableServer::TAO_POA_LockingPolicy_ptr) obj;
  POA_CORBA::Policy::_get_policy_type_skel (req, (POA_CORBA::Policy_ptr) impl, context, env);
}

// skeleton destructor
ACE_INLINE
POA_PortableServer::POAManager::~POAManager (void)
{
}
// skeleton destructor
ACE_INLINE
POA_PortableServer::AdapterActivator::~AdapterActivator (void)
{
}
// skeleton destructor
ACE_INLINE
POA_PortableServer::ServantManager::~ServantManager (void)
{
}
// skeleton destructor
ACE_INLINE
POA_PortableServer::ServantActivator::~ServantActivator (void)
{
}
// skeleton destructor
ACE_INLINE
POA_PortableServer::ServantLocator::~ServantLocator (void)
{
}
// skeleton destructor
ACE_INLINE
POA_PortableServer::POA::~POA (void)
{
}
// skeleton destructor
ACE_INLINE
POA_PortableServer::Current::~Current (void)
{
}
