// $Id$

// ============================================================================
//
// = LIBRARY
//    TAO/tests/IDL_Test
//
// = FILENAME
//    reopened_modules.idl
//
// = DESCRIPTION
//    This file contains examples of IDL code that has 
//    caused problems in the past for the TAO IDL
//    compiler. This test is to make sure the problems
//    stay fixed.
//
// = AUTHORS
//    Jeff Parsons <parsons@cs.wustl.edu> and TAO users.
//
// ============================================================================

// These examples test the lookup abilities of the
// TAO IDL compiler, which must backtrack to find all
// the possibly reopened scopes.

module A 
{
  module B 
  {
    interface x1 
    {
      void op1 ();
    };
  };
};

module A 
{
  module C 
  {
    interface x2 
    {
      // 'A::' should be implicit
      void op2 (in B::x1 obj);
    };
  };
};


// Each occurrence of Party and Person should be
// recognized as being in the same scope as the
// previous occurrence(s).

module dot 
{ 
  interface Party;

  interface Person 
    {
      attribute Party someParty;
    };
};

module dot 
{ 
  interface Person;  
   
  interface Party 
    {
      attribute Person somePerson;
    };
};

// Should be no problem in lookup of all the
// arguments in Operation.
module Outside
{
  module Reopened
    {
      typedef short Tricky;
    };

  typedef long Tricky;

  module Reopened
    {
      typedef float Newdef;
    };
};

interface OpHolder
  {

    void  Operation (in ::Outside::Tricky p1,
                     out ::Outside::Reopened::Tricky p2,
                     inout ::Outside::Reopened::Newdef p3);
  };

