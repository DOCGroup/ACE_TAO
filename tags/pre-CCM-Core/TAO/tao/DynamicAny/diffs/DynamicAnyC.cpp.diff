--- orig/DynamicAnyC.cpp	Wed Apr 25 00:31:12 2001
+++ DynamicAnyC.cpp	Tue Apr 24 13:44:43 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -19,14 +19,7 @@
 // Information about TAO is available at:
 //     http://www.cs.wustl.edu/~schmidt/TAO.html
 
-#include "DynamicAnyC.h"
-
-#include "tao/Stub.h"
-#include "tao/Invocation.h"
-#include "tao/ClientRequestInfo.h"
-#if TAO_HAS_INTERCEPTORS == 1
-#include "tao/RequestInfo_Util.h"
-#endif  /* TAO_HAS_INTERCEPTORS == 1 */
+#include "DynamicAny.h"
 
 #if defined (__BORLANDC__)
 #pragma option -w-rvl -w-rch -w-ccc -w-aus
@@ -36,49 +29,6 @@
 #include "DynamicAnyC.i"
 #endif /* !defined INLINE */
 
-DynamicAny::DynAny_ptr
-tao_DynamicAny_DynAny_duplicate (
-    DynamicAny::DynAny_ptr p
-  )
-{
-  return DynamicAny::DynAny::_duplicate (p);
-}
-
-void
-tao_DynamicAny_DynAny_release (
-    DynamicAny::DynAny_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-DynamicAny::DynAny_ptr
-tao_DynamicAny_DynAny_nil (
-    void
-  )
-{
-  return DynamicAny::DynAny::_nil ();
-}
-
-DynamicAny::DynAny_ptr
-tao_DynamicAny_DynAny_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return DynamicAny::DynAny::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_DynamicAny_DynAny_upcast (
-    void *src
-  )
-{
-  DynamicAny::DynAny **tmp =
-    ACE_static_cast (DynamicAny::DynAny **, src);
-  return *tmp;
-}
-
 // *************************************************************
 // Operations for class DynamicAny::DynAny_var
 // *************************************************************
@@ -466,49 +416,6 @@
   return retval;
 }
 
-DynamicAny::DynFixed_ptr
-tao_DynamicAny_DynFixed_duplicate (
-    DynamicAny::DynFixed_ptr p
-  )
-{
-  return DynamicAny::DynFixed::_duplicate (p);
-}
-
-void
-tao_DynamicAny_DynFixed_release (
-    DynamicAny::DynFixed_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-DynamicAny::DynFixed_ptr
-tao_DynamicAny_DynFixed_nil (
-    void
-  )
-{
-  return DynamicAny::DynFixed::_nil ();
-}
-
-DynamicAny::DynFixed_ptr
-tao_DynamicAny_DynFixed_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return DynamicAny::DynFixed::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_DynamicAny_DynFixed_upcast (
-    void *src
-  )
-{
-  DynamicAny::DynFixed **tmp =
-    ACE_static_cast (DynamicAny::DynFixed **, src);
-  return *tmp;
-}
-
 // *************************************************************
 // Operations for class DynamicAny::DynFixed_var
 // *************************************************************
@@ -772,49 +679,6 @@
   return "IDL:DynamicAny/DynFixed:1.0";
 }
 
-DynamicAny::DynEnum_ptr
-tao_DynamicAny_DynEnum_duplicate (
-    DynamicAny::DynEnum_ptr p
-  )
-{
-  return DynamicAny::DynEnum::_duplicate (p);
-}
-
-void
-tao_DynamicAny_DynEnum_release (
-    DynamicAny::DynEnum_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-DynamicAny::DynEnum_ptr
-tao_DynamicAny_DynEnum_nil (
-    void
-  )
-{
-  return DynamicAny::DynEnum::_nil ();
-}
-
-DynamicAny::DynEnum_ptr
-tao_DynamicAny_DynEnum_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return DynamicAny::DynEnum::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_DynamicAny_DynEnum_upcast (
-    void *src
-  )
-{
-  DynamicAny::DynEnum **tmp =
-    ACE_static_cast (DynamicAny::DynEnum **, src);
-  return *tmp;
-}
-
 // *************************************************************
 // Operations for class DynamicAny::DynEnum_var
 // *************************************************************
@@ -1454,49 +1318,6 @@
 
 #endif /* end #if !defined */
 
-DynamicAny::DynStruct_ptr
-tao_DynamicAny_DynStruct_duplicate (
-    DynamicAny::DynStruct_ptr p
-  )
-{
-  return DynamicAny::DynStruct::_duplicate (p);
-}
-
-void
-tao_DynamicAny_DynStruct_release (
-    DynamicAny::DynStruct_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-DynamicAny::DynStruct_ptr
-tao_DynamicAny_DynStruct_nil (
-    void
-  )
-{
-  return DynamicAny::DynStruct::_nil ();
-}
-
-DynamicAny::DynStruct_ptr
-tao_DynamicAny_DynStruct_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return DynamicAny::DynStruct::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_DynamicAny_DynStruct_upcast (
-    void *src
-  )
-{
-  DynamicAny::DynStruct **tmp =
-    ACE_static_cast (DynamicAny::DynStruct **, src);
-  return *tmp;
-}
-
 // *************************************************************
 // Operations for class DynamicAny::DynStruct_var
 // *************************************************************
@@ -1760,49 +1581,6 @@
   return "IDL:DynamicAny/DynStruct:1.0";
 }
 
-DynamicAny::DynUnion_ptr
-tao_DynamicAny_DynUnion_duplicate (
-    DynamicAny::DynUnion_ptr p
-  )
-{
-  return DynamicAny::DynUnion::_duplicate (p);
-}
-
-void
-tao_DynamicAny_DynUnion_release (
-    DynamicAny::DynUnion_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-DynamicAny::DynUnion_ptr
-tao_DynamicAny_DynUnion_nil (
-    void
-  )
-{
-  return DynamicAny::DynUnion::_nil ();
-}
-
-DynamicAny::DynUnion_ptr
-tao_DynamicAny_DynUnion_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return DynamicAny::DynUnion::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_DynamicAny_DynUnion_upcast (
-    void *src
-  )
-{
-  DynamicAny::DynUnion **tmp =
-    ACE_static_cast (DynamicAny::DynUnion **, src);
-  return *tmp;
-}
-
 // *************************************************************
 // Operations for class DynamicAny::DynUnion_var
 // *************************************************************
@@ -2339,49 +2117,6 @@
 
 #endif /* end #if !defined */
 
-DynamicAny::DynSequence_ptr
-tao_DynamicAny_DynSequence_duplicate (
-    DynamicAny::DynSequence_ptr p
-  )
-{
-  return DynamicAny::DynSequence::_duplicate (p);
-}
-
-void
-tao_DynamicAny_DynSequence_release (
-    DynamicAny::DynSequence_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-DynamicAny::DynSequence_ptr
-tao_DynamicAny_DynSequence_nil (
-    void
-  )
-{
-  return DynamicAny::DynSequence::_nil ();
-}
-
-DynamicAny::DynSequence_ptr
-tao_DynamicAny_DynSequence_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return DynamicAny::DynSequence::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_DynamicAny_DynSequence_upcast (
-    void *src
-  )
-{
-  DynamicAny::DynSequence **tmp =
-    ACE_static_cast (DynamicAny::DynSequence **, src);
-  return *tmp;
-}
-
 // *************************************************************
 // Operations for class DynamicAny::DynSequence_var
 // *************************************************************
@@ -2645,49 +2380,6 @@
   return "IDL:DynamicAny/DynSequence:1.0";
 }
 
-DynamicAny::DynArray_ptr
-tao_DynamicAny_DynArray_duplicate (
-    DynamicAny::DynArray_ptr p
-  )
-{
-  return DynamicAny::DynArray::_duplicate (p);
-}
-
-void
-tao_DynamicAny_DynArray_release (
-    DynamicAny::DynArray_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-DynamicAny::DynArray_ptr
-tao_DynamicAny_DynArray_nil (
-    void
-  )
-{
-  return DynamicAny::DynArray::_nil ();
-}
-
-DynamicAny::DynArray_ptr
-tao_DynamicAny_DynArray_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return DynamicAny::DynArray::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_DynamicAny_DynArray_upcast (
-    void *src
-  )
-{
-  DynamicAny::DynArray **tmp =
-    ACE_static_cast (DynamicAny::DynArray **, src);
-  return *tmp;
-}
-
 // *************************************************************
 // Operations for class DynamicAny::DynArray_var
 // *************************************************************
@@ -2951,49 +2643,6 @@
   return "IDL:DynamicAny/DynArray:1.0";
 }
 
-DynamicAny::DynValue_ptr
-tao_DynamicAny_DynValue_duplicate (
-    DynamicAny::DynValue_ptr p
-  )
-{
-  return DynamicAny::DynValue::_duplicate (p);
-}
-
-void
-tao_DynamicAny_DynValue_release (
-    DynamicAny::DynValue_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-DynamicAny::DynValue_ptr
-tao_DynamicAny_DynValue_nil (
-    void
-  )
-{
-  return DynamicAny::DynValue::_nil ();
-}
-
-DynamicAny::DynValue_ptr
-tao_DynamicAny_DynValue_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return DynamicAny::DynValue::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_DynamicAny_DynValue_upcast (
-    void *src
-  )
-{
-  DynamicAny::DynValue **tmp =
-    ACE_static_cast (DynamicAny::DynValue **, src);
-  return *tmp;
-}
-
 // *************************************************************
 // Operations for class DynamicAny::DynValue_var
 // *************************************************************
@@ -3257,49 +2906,6 @@
   return "IDL:DynamicAny/DynValue:1.0";
 }
 
-DynamicAny::DynAnyFactory_ptr
-tao_DynamicAny_DynAnyFactory_duplicate (
-    DynamicAny::DynAnyFactory_ptr p
-  )
-{
-  return DynamicAny::DynAnyFactory::_duplicate (p);
-}
-
-void
-tao_DynamicAny_DynAnyFactory_release (
-    DynamicAny::DynAnyFactory_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-DynamicAny::DynAnyFactory_ptr
-tao_DynamicAny_DynAnyFactory_nil (
-    void
-  )
-{
-  return DynamicAny::DynAnyFactory::_nil ();
-}
-
-DynamicAny::DynAnyFactory_ptr
-tao_DynamicAny_DynAnyFactory_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return DynamicAny::DynAnyFactory::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_DynamicAny_DynAnyFactory_upcast (
-    void *src
-  )
-{
-  DynamicAny::DynAnyFactory **tmp =
-    ACE_static_cast (DynamicAny::DynAnyFactory **, src);
-  return *tmp;
-}
-
 // *************************************************************
 // Operations for class DynamicAny::DynAnyFactory_var
 // *************************************************************
@@ -3978,11 +3584,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
@@ -4025,11 +3626,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
