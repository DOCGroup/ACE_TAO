// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:390

#ifndef _TAO_IDL_ORIG_IFR_EXTENDEDS_H_
#define _TAO_IDL_ORIG_IFR_EXTENDEDS_H_

#include /**/ "ace/pre.h"

#include "IFR_BasicS.h"
#include "tao/IFR_Client/IFR_ExtendedC.h"
#include "tao/VisibilityS.h"
#include "tao/ValueModifierS.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Collocation_Proxy_Broker.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

#if defined(_MSC_VER)
#pragma warning(push)
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from
// be\be_visitor_module/module_sh.cpp:49

namespace POA_CORBA
{
  
  
  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_sh.cpp:87
  
  class FixedDef;
  typedef FixedDef *FixedDef_ptr;
  
  class _TAO_FixedDef_Strategized_Proxy_Broker;
  
  class  FixedDef
    : public virtual POA_CORBA::IDLType
  {
  protected:
    FixedDef (void);
  
  public:
    // Useful for template programming.
    typedef ::CORBA::FixedDef _stub_type;
    typedef ::CORBA::FixedDef_ptr _stub_ptr_type;
    typedef ::CORBA::FixedDef_var _stub_var_type;
    
    FixedDef (const FixedDef& rhs);
    virtual ~FixedDef (void);
    
    virtual CORBA::Boolean _is_a (
        const char* logical_type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall
        ACE_ENV_ARG_DECL
      );
    
    ::CORBA::FixedDef *_this (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual const char* _interface_repository_id (void) const;
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual CORBA::UShort digits (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _get_digits_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual void digits (
        ::CORBA::UShort digits
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _set_digits_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual CORBA::Short scale (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _get_scale_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual void scale (
        ::CORBA::Short scale
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _set_scale_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void
    _get_def_kind_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    destroy_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_type_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
  };
  
  ///////////////////////////////////////////////////////////////////////
  //               Strategized Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // be\be_visitor_interface/strategized_proxy_broker_sh.cpp:36
  
  class  _TAO_FixedDef_Strategized_Proxy_Broker
    : public virtual TAO::Collocation_Proxy_Broker
  {
  public: 
    _TAO_FixedDef_Strategized_Proxy_Broker (void);
    
    virtual ~_TAO_FixedDef_Strategized_Proxy_Broker (void);
    
    TAO::Collocation_Strategy
    get_strategy (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((CORBA::SystemException));
    
    void
    dispatch (
        CORBA::Object_ptr obj,
        CORBA::Object_out forward_obj,
        TAO::Argument ** args,
        int num_args,
        const char * op,
        size_t op_len,
        TAO::Collocation_Strategy strategy
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((CORBA::Exception));
    
    static _TAO_FixedDef_Strategized_Proxy_Broker *
    the_TAO_FixedDef_Strategized_Proxy_Broker (void);
  };
  
  //
  //            End Strategized Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
  
  
  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_sh.cpp:87
  
  class ValueMemberDef;
  typedef ValueMemberDef *ValueMemberDef_ptr;
  
  class _TAO_ValueMemberDef_Strategized_Proxy_Broker;
  
  class  ValueMemberDef
    : public virtual POA_CORBA::Contained
  {
  protected:
    ValueMemberDef (void);
  
  public:
    // Useful for template programming.
    typedef ::CORBA::ValueMemberDef _stub_type;
    typedef ::CORBA::ValueMemberDef_ptr _stub_ptr_type;
    typedef ::CORBA::ValueMemberDef_var _stub_var_type;
    
    ValueMemberDef (const ValueMemberDef& rhs);
    virtual ~ValueMemberDef (void);
    
    virtual CORBA::Boolean _is_a (
        const char* logical_type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall
        ACE_ENV_ARG_DECL
      );
    
    ::CORBA::ValueMemberDef *_this (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual const char* _interface_repository_id (void) const;
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual CORBA::TypeCode_ptr type (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _get_type_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual ::CORBA::IDLType_ptr type_def (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _get_type_def_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual void type_def (
        ::CORBA::IDLType_ptr type_def
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _set_type_def_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual CORBA::Visibility access (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _get_access_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual void access (
        ::CORBA::Visibility access
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _set_access_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void
    _get_def_kind_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    destroy_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_id_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_id_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_name_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_name_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_version_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_version_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_defined_in_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_absolute_name_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_containing_repository_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    describe_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    move_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
  };
  
  ///////////////////////////////////////////////////////////////////////
  //               Strategized Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // be\be_visitor_interface/strategized_proxy_broker_sh.cpp:36
  
  class  _TAO_ValueMemberDef_Strategized_Proxy_Broker
    : public virtual TAO::Collocation_Proxy_Broker
  {
  public: 
    _TAO_ValueMemberDef_Strategized_Proxy_Broker (void);
    
    virtual ~_TAO_ValueMemberDef_Strategized_Proxy_Broker (void);
    
    TAO::Collocation_Strategy
    get_strategy (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((CORBA::SystemException));
    
    void
    dispatch (
        CORBA::Object_ptr obj,
        CORBA::Object_out forward_obj,
        TAO::Argument ** args,
        int num_args,
        const char * op,
        size_t op_len,
        TAO::Collocation_Strategy strategy
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((CORBA::Exception));
    
    static _TAO_ValueMemberDef_Strategized_Proxy_Broker *
    the_TAO_ValueMemberDef_Strategized_Proxy_Broker (void);
  };
  
  //
  //            End Strategized Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
  
  
  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_sh.cpp:87
  
  class ValueDef;
  typedef ValueDef *ValueDef_ptr;
  
  class _TAO_ValueDef_Strategized_Proxy_Broker;
  
  class  ValueDef
    : public virtual POA_CORBA::Container,
      public virtual POA_CORBA::Contained,
      public virtual POA_CORBA::IDLType
  {
  protected:
    ValueDef (void);
  
  public:
    // Useful for template programming.
    typedef ::CORBA::ValueDef _stub_type;
    typedef ::CORBA::ValueDef_ptr _stub_ptr_type;
    typedef ::CORBA::ValueDef_var _stub_var_type;
    
    ValueDef (const ValueDef& rhs);
    virtual ~ValueDef (void);
    
    virtual CORBA::Boolean _is_a (
        const char* logical_type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall
        ACE_ENV_ARG_DECL
      );
    
    ::CORBA::ValueDef *_this (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual const char* _interface_repository_id (void) const;
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual ::CORBA::InterfaceDefSeq * supported_interfaces (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _get_supported_interfaces_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual void supported_interfaces (
        const ::CORBA::InterfaceDefSeq & supported_interfaces
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _set_supported_interfaces_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual ::CORBA::InitializerSeq * initializers (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _get_initializers_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual void initializers (
        const ::CORBA::InitializerSeq & initializers
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _set_initializers_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual ::CORBA::ValueDef_ptr base_value (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _get_base_value_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual void base_value (
        ::CORBA::ValueDef_ptr base_value
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _set_base_value_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual ::CORBA::ValueDefSeq * abstract_base_values (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _get_abstract_base_values_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual void abstract_base_values (
        const ::CORBA::ValueDefSeq & abstract_base_values
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _set_abstract_base_values_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual CORBA::Boolean is_abstract (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _get_is_abstract_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual void is_abstract (
        ::CORBA::Boolean is_abstract
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _set_is_abstract_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual CORBA::Boolean is_custom (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _get_is_custom_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual void is_custom (
        ::CORBA::Boolean is_custom
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _set_is_custom_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual CORBA::Boolean is_truncatable (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _get_is_truncatable_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual void is_truncatable (
        ::CORBA::Boolean is_truncatable
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _set_is_truncatable_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual CORBA::Boolean is_a (
        const char * id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void is_a_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual ::CORBA::ValueDef::FullValueDescription * describe_value (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void describe_value_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual ::CORBA::ValueMemberDef_ptr create_value_member (
        const char * id,
        const char * name,
        const char * version,
        ::CORBA::IDLType_ptr type,
        ::CORBA::Visibility access
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void create_value_member_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual ::CORBA::AttributeDef_ptr create_attribute (
        const char * id,
        const char * name,
        const char * version,
        ::CORBA::IDLType_ptr type,
        ::CORBA::AttributeMode mode
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void create_attribute_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual ::CORBA::OperationDef_ptr create_operation (
        const char * id,
        const char * name,
        const char * version,
        ::CORBA::IDLType_ptr result,
        ::CORBA::OperationMode mode,
        const ::CORBA::ParDescriptionSeq & params,
        const ::CORBA::ExceptionDefSeq & exceptions,
        const ::CORBA::ContextIdSeq & contexts
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void create_operation_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void
    _get_def_kind_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    destroy_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    lookup_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    contents_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    lookup_name_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    describe_contents_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_module_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_constant_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_struct_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_union_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_enum_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_alias_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_interface_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_value_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_value_box_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_exception_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_native_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_abstract_interface_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_local_interface_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_ext_value_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_id_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_id_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_name_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_name_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_version_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_version_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_defined_in_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_absolute_name_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_containing_repository_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    describe_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    move_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_type_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
  };
  
  ///////////////////////////////////////////////////////////////////////
  //               Strategized Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // be\be_visitor_interface/strategized_proxy_broker_sh.cpp:36
  
  class  _TAO_ValueDef_Strategized_Proxy_Broker
    : public virtual TAO::Collocation_Proxy_Broker
  {
  public: 
    _TAO_ValueDef_Strategized_Proxy_Broker (void);
    
    virtual ~_TAO_ValueDef_Strategized_Proxy_Broker (void);
    
    TAO::Collocation_Strategy
    get_strategy (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((CORBA::SystemException));
    
    void
    dispatch (
        CORBA::Object_ptr obj,
        CORBA::Object_out forward_obj,
        TAO::Argument ** args,
        int num_args,
        const char * op,
        size_t op_len,
        TAO::Collocation_Strategy strategy
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((CORBA::Exception));
    
    static _TAO_ValueDef_Strategized_Proxy_Broker *
    the_TAO_ValueDef_Strategized_Proxy_Broker (void);
  };
  
  //
  //            End Strategized Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
  
  
  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_sh.cpp:87
  
  class ExtValueDef;
  typedef ExtValueDef *ExtValueDef_ptr;
  
  class _TAO_ExtValueDef_Strategized_Proxy_Broker;
  
  class  ExtValueDef
    : public virtual POA_CORBA::ValueDef
  {
  protected:
    ExtValueDef (void);
  
  public:
    // Useful for template programming.
    typedef ::CORBA::ExtValueDef _stub_type;
    typedef ::CORBA::ExtValueDef_ptr _stub_ptr_type;
    typedef ::CORBA::ExtValueDef_var _stub_var_type;
    
    ExtValueDef (const ExtValueDef& rhs);
    virtual ~ExtValueDef (void);
    
    virtual CORBA::Boolean _is_a (
        const char* logical_type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall
        ACE_ENV_ARG_DECL
      );
    
    ::CORBA::ExtValueDef *_this (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual const char* _interface_repository_id (void) const;
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual ::CORBA::ExtInitializerSeq * ext_initializers (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _get_ext_initializers_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual void ext_initializers (
        const ::CORBA::ExtInitializerSeq & ext_initializers
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _set_ext_initializers_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual ::CORBA::ExtValueDef::ExtFullValueDescription * describe_ext_value (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void describe_ext_value_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual ::CORBA::ExtAttributeDef_ptr create_ext_attribute (
        const char * id,
        const char * name,
        const char * version,
        ::CORBA::IDLType_ptr type,
        ::CORBA::AttributeMode mode,
        const ::CORBA::ExceptionDefSeq & get_exceptions,
        const ::CORBA::ExceptionDefSeq & set_exceptions
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void create_ext_attribute_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void
    _get_def_kind_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    destroy_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    lookup_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    contents_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    lookup_name_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    describe_contents_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_module_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_constant_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_struct_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_union_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_enum_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_alias_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_interface_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_value_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_value_box_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_exception_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_native_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_abstract_interface_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_local_interface_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_ext_value_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_id_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_id_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_name_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_name_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_version_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_version_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_defined_in_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_absolute_name_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_containing_repository_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    describe_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    move_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_type_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_supported_interfaces_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_supported_interfaces_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_initializers_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_initializers_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_base_value_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_base_value_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_abstract_base_values_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_abstract_base_values_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_is_abstract_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_is_abstract_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_is_custom_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_is_custom_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_is_truncatable_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_is_truncatable_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    is_a_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    describe_value_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_value_member_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_attribute_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    create_operation_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
  };
  
  ///////////////////////////////////////////////////////////////////////
  //               Strategized Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // be\be_visitor_interface/strategized_proxy_broker_sh.cpp:36
  
  class  _TAO_ExtValueDef_Strategized_Proxy_Broker
    : public virtual TAO::Collocation_Proxy_Broker
  {
  public: 
    _TAO_ExtValueDef_Strategized_Proxy_Broker (void);
    
    virtual ~_TAO_ExtValueDef_Strategized_Proxy_Broker (void);
    
    TAO::Collocation_Strategy
    get_strategy (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((CORBA::SystemException));
    
    void
    dispatch (
        CORBA::Object_ptr obj,
        CORBA::Object_out forward_obj,
        TAO::Argument ** args,
        int num_args,
        const char * op,
        size_t op_len,
        TAO::Collocation_Strategy strategy
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((CORBA::Exception));
    
    static _TAO_ExtValueDef_Strategized_Proxy_Broker *
    the_TAO_ExtValueDef_Strategized_Proxy_Broker (void);
  };
  
  //
  //            End Strategized Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
  
  
  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_sh.cpp:87
  
  class ValueBoxDef;
  typedef ValueBoxDef *ValueBoxDef_ptr;
  
  class _TAO_ValueBoxDef_Strategized_Proxy_Broker;
  
  class  ValueBoxDef
    : public virtual POA_CORBA::TypedefDef
  {
  protected:
    ValueBoxDef (void);
  
  public:
    // Useful for template programming.
    typedef ::CORBA::ValueBoxDef _stub_type;
    typedef ::CORBA::ValueBoxDef_ptr _stub_ptr_type;
    typedef ::CORBA::ValueBoxDef_var _stub_var_type;
    
    ValueBoxDef (const ValueBoxDef& rhs);
    virtual ~ValueBoxDef (void);
    
    virtual CORBA::Boolean _is_a (
        const char* logical_type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall
        ACE_ENV_ARG_DECL
      );
    
    ::CORBA::ValueBoxDef *_this (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual const char* _interface_repository_id (void) const;
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual ::CORBA::IDLType_ptr original_type_def (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _get_original_type_def_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_sh.cpp:45
    
    virtual void original_type_def (
        ::CORBA::IDLType_ptr original_type_def
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    static void _set_original_type_def_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL
      );
    
    static void
    _get_def_kind_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    destroy_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_id_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_id_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_name_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_name_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_version_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _set_version_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_defined_in_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_absolute_name_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_containing_repository_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    describe_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    // TAO_IDL - Generated from
    // be\be_interface.cpp:1939
    
    static void
    move_skel (
        TAO_ServerRequest & server_request, 
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static void
    _get_type_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
  };
  
  ///////////////////////////////////////////////////////////////////////
  //               Strategized Proxy Broker Declaration 
  //
  
  // TAO_IDL - Generated from
  // be\be_visitor_interface/strategized_proxy_broker_sh.cpp:36
  
  class  _TAO_ValueBoxDef_Strategized_Proxy_Broker
    : public virtual TAO::Collocation_Proxy_Broker
  {
  public: 
    _TAO_ValueBoxDef_Strategized_Proxy_Broker (void);
    
    virtual ~_TAO_ValueBoxDef_Strategized_Proxy_Broker (void);
    
    TAO::Collocation_Strategy
    get_strategy (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((CORBA::SystemException));
    
    void
    dispatch (
        CORBA::Object_ptr obj,
        CORBA::Object_out forward_obj,
        TAO::Argument ** args,
        int num_args,
        const char * op,
        size_t op_len,
        TAO::Collocation_Strategy strategy
        ACE_ENV_ARG_DECL
      )
      ACE_THROW_SPEC ((CORBA::Exception));
    
    static _TAO_ValueBoxDef_Strategized_Proxy_Broker *
    the_TAO_ValueBoxDef_Strategized_Proxy_Broker (void);
  };
  
  //
  //            End Strategized Proxy Broker Declaration 
  ///////////////////////////////////////////////////////////////////////
  
  

// TAO_IDL - Generated from
// be\be_visitor_module/module_sh.cpp:80

} // module CORBA

// TAO_IDL - Generated from 
// be\be_codegen.cpp:997

#include "IFR_ExtendedS_T.h"

#if defined (__ACE_INLINE__)
#include "IFR_ExtendedS.inl"
#endif /* defined INLINE */

#if defined(_MSC_VER)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#include /**/ "ace/post.h"
#endif /* ifndef */

