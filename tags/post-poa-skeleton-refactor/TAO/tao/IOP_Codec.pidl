// -*- IDL -*-

/**
 * @file IOP_Codec.pidl
 *
 * $Id$
 *
 * @brief Pre-compiled IDL source for the IOP module.
 *
 * This file is used to generate IOPC.{h,inl,cpp}, using the following
 * command:
 *
 *   tao_idl.exe
 *        -o orig -Gp -Gd -Ge 1 -GT -GA -Sc
 *        -Wb,export_macro=TAO_Export
 *        -Wb,export_include=tao/TAO_Export.h
 *        -Wb,pre_include="ace/pre.h"
 *        -Wb,post_include="ace/post.h"
 *        IOP_Codec.pidl
 *
 */

#ifndef TAO_IOP_CODEC_PIDL
#define TAO_IOP_CODEC_PIDL

#include <Typecode_types.pidl>
#include <OctetSeq.pidl>

#pragma prefix "omg.org"

module IOP
{
    local interface Codec {
    exception InvalidTypeForEncoding {};
    exception FormatMismatch {};
    exception TypeMismatch {};

    CORBA::OctetSeq encode (in any data) raises (InvalidTypeForEncoding);
    any decode (in CORBA::OctetSeq data) raises (FormatMismatch);
    CORBA::OctetSeq encode_value (in any data) raises (InvalidTypeForEncoding);
    any decode_value (in CORBA::OctetSeq data, in CORBA::TypeCode tc)
      raises (FormatMismatch, TypeMismatch);
  };

  typedef short EncodingFormat;
  const EncodingFormat ENCODING_CDR_ENCAPS = 0;

  struct Encoding {
    EncodingFormat format;
    octet major_version;
    octet minor_version;
  };

  local interface CodecFactory {
    exception UnknownEncoding {};

    Codec create_codec (in Encoding enc) raises (UnknownEncoding);
  };
};

#pragma prefix ""

#endif  /* TAO_IOP_PIDL */
