#
# Makefile for building the TAO CosTrading library
#

NAME = TAO_CosTrading

TAO_IDL = $(CORE_BINDIR)\tao_idl -g $(CORE_BINDIR)\gperf.exe \
	-I..\.. -Ge 1 -Wb,export_macro=TAO_Trading_Export \
	-Wb,export_include=Trader/trading_export.h -Wb,pre_include=ace/pre.h \
	-Wb,post_include=ace/post.h

IDLFILES = \
	$(IDLDIR)\CosTrading.idl \
	$(IDLDIR)\CosTradingDynamic.idl \
	$(IDLDIR)\CosTradingRepos.idl

OBJFILES = \
	$(OBJDIR)\Constraint_Interpreter.obj \
	$(OBJDIR)\Constraint_l.obj \
	$(OBJDIR)\Constraint_Nodes.obj \
	$(OBJDIR)\Constraint_Visitors.obj \
	$(OBJDIR)\Constraint_y.obj \
	$(OBJDIR)\CosTradingC.obj \
	$(OBJDIR)\CosTradingDynamicC.obj \
	$(OBJDIR)\CosTradingDynamicS.obj \
	$(OBJDIR)\CosTradingReposC.obj \
	$(OBJDIR)\CosTradingReposS.obj \
	$(OBJDIR)\CosTradingS.obj \
	$(OBJDIR)\Interpreter.obj \
	$(OBJDIR)\Interpreter_Utils.obj \
	$(OBJDIR)\Offer_Database.obj \
	$(OBJDIR)\Offer_Iterators.obj \
	$(OBJDIR)\Service_Type_Repository.obj \
	$(OBJDIR)\Trader.obj \
	$(OBJDIR)\Trader_Constraint_Visitors.obj \
	$(OBJDIR)\Trader_Interfaces.obj \
	$(OBJDIR)\Trader_Utils.obj

RESOURCE = $(OBJDIR)\orbsvcs.res

!ifdef STATIC
CFLAGS = $(ACE_CFLAGS) $(TAO_CFLAGS) $(TAO_SVC_UTILS_CFLAGS) \
	$(TAO_NAMING_CFLAGS) $(TAO_TRADING_CFLAGS)
!else
CFLAGS = $(ACE_CFLAGS) $(TAO_CFLAGS) $(TAO_SVC_UTILS_CFLAGS) \
	$(TAO_NAMING_CFLAGS) $(TAO_TRADING_CFLAGS) -DTAO_TRADING_BUILD_DLL
!endif

CPPDIR = .;Trader

IDLDIR = .

LIBFILES = $(ACE_LIB) $(TAO_LIB) $(TAO_SVC_UTILS_LIB) $(TAO_NAMING_LIB)

all: idl_src_files trading_lib

!include <$(ACE_ROOT)\include\makeinclude\build_core_library.bor>

trading_lib: $(TARGET)


#
# IDL Build rules
#

idl_src_files: $(IDLFILES:.idl=C.cpp) $(IDLFILES:.idl=S.cpp)

$(IDLDIR)\CosTradingC.cpp $(IDLDIR)\CosTradingS.cpp: $(IDLDIR)\CosTrading.idl
	$(TAO_IDL) $**

$(IDLDIR)\CosTradingDynamicC.cpp $(IDLDIR)\CosTradingDynamicS.cpp: $(IDLDIR)\CosTradingDynamic.idl
	$(TAO_IDL) $**

$(IDLDIR)\CosTradingReposC.cpp $(IDLDIR)\CosTradingReposS.cpp: $(IDLDIR)\CosTradingRepos.idl
	$(TAO_IDL) $**
