// -*- MPC -*-
// $Id$

project(AV) : orbsvcslib, orbsvcs_output, install, property_serv, naming, qos, tao_versioning_idl_defaults {
  avoids       += ace_for_tao
  sharedname    = TAO_AV
  idlflags     += -Wb,export_macro=TAO_AV_Export -Wb,export_include=orbsvcs/AV/AV_export.h
  dynamicflags  = TAO_AV_BUILD_DLL
  tagchecks    += AV
  pch_header    =
  pch_source    =

  IDL_Files {
    AVStreams.idl
    Null_MediaCtrl.idl
    sfp.idl
  }

  Source_Files(ORBSVCS_COMPONENTS) {
    AV {
      AVStreamsC.cpp
      AVStreamsS.cpp
      Null_MediaCtrlC.cpp
      Null_MediaCtrlS.cpp
      sfpC.cpp
      sfpS.cpp
      AV/AVStreams_i.cpp
      AV/AV_Core.cpp
      AV/Endpoint_Strategy.cpp
      AV/Endpoint_Strategy_T.cpp
      AV/Fill_ACE_QoS.cpp
      AV/FlowSpec_Entry.cpp
      AV/Flows_T.cpp
      AV/MCast.cpp
      AV/md5c.cpp
      AV/Policy.cpp
      AV/Protocol_Factory.cpp
      AV/QoS_UDP.cpp
      AV/RTCP.cpp
      AV/RTCP_Channel.cpp
      AV/RTCP_Packet.cpp
      AV/RTP.cpp
      AV/TCP.cpp
      AV/Transport.cpp
      AV/UDP.cpp
      AV/default_resource.cpp
      AV/media_timer.cpp
      AV/sfp.cpp
      AV/SCTP_SEQ.cpp
    }
  }

  Header_Files {
    AV/AVStreams_i.h
    AV/AV_Core.h
    AV/AV_export.h
    AV/Endpoint_Strategy.h
    AV/Endpoint_Strategy_T.h
    AV/Fill_ACE_QoS.h
    AV/FlowSpec_Entry.h
    AV/Flows_T.h
    AV/MCast.h
    AV/md5.h
    AV/Policy.h
    AV/Protocol_Factory.h
    AV/QoS_UDP.h
    AV/RTCP.h
    AV/RTCP_Channel.h
    AV/RTCP_Packet.h
    AV/RTP.h
    AV/Resource_Factory.h
    AV/UDP.h
    AV/default_resource.h
    AV/global.h
    AV/media_timer.h
    AV/ntp-time.h
    AV/sfp.h
    AV/SCTP_SEQ.h
  }
  Template_Files {
    AV/Endpoint_Strategy_T.cpp
    AV/Flows_T.cpp
  }

}
