// $Id$

#ifndef CCM_DDS_MT_IDL
#define CCM_DDS_MT_IDL

#include <Components.idl>

#include "connectors/dds4ccm/idl/dds4ccm_DataListenerControl.idl"
#include "connectors/dds4ccm/idl/dds4ccm_StateListenerControl.idl"
#include "connectors/dds4ccm/idl/dds4ccm_PortStatusListener.idl"
#include "connectors/dds4ccm/idl/dds4ccm_ConnectorStatusListener.idl"

#pragma dds4ccm impl "MultiTopic_Connector_T.h"

#include <ccm_dds.idl>

/**
 * @namespace CCM_DDS_MT
 *
 * Module containing all @ref MT related entities. Non-typed constructs are
 * directly defined in this module, while typed constructs are in a templated
 * sub-module.
 */
module CCM_DDS_MT
{
  module Typed_MT<typename T, sequence<T> TSeq>
    {
      alias CCM_DDS::Typed<T, TSeq> DDS_Typed;
      typedef DDS_Typed::DataReader DataReader;
      typedef DDS_Typed::DataWriter DataWriter;

      // DDS MT Connector
      // ------------------
      connector DDS_MT_Event : CCM_DDS::DDS_Base {
        mirrorport DDS_Typed::DDS_Write  supplier_sq;
        mirrorport DDS_Typed::DDS_Get    pull_consumer_sq;
        mirrorport DDS_Typed::DDS_Listen push_consumer_sq;
        mirrorport DDS_Typed::DDS_Write  supplier_tr;
        mirrorport DDS_Typed::DDS_Get    pull_consumer_tr;
        mirrorport DDS_Typed::DDS_Listen push_consumer_tr;
        mirrorport DDS_Typed::DDS_Write  supplier_cl;
        mirrorport DDS_Typed::DDS_Get    pull_consumer_cl;
        mirrorport DDS_Typed::DDS_Listen push_consumer_cl;

        attribute string topic_name_sq;
        attribute string topic_name_tr;
        attribute string topic_name_cl;
      };
   };
};

#endif // CCM_DDS_MT_IDL

