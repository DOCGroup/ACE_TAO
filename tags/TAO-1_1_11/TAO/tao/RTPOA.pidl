//
// $Id$
//
// ================================================================
//
// = LIBRARY
//   TAO
//
// = FILENAME
//   RTPOA.pidl
//
// = DESCRIPTION
//
//   The RTPortableServer module specified in ptc/99-05-03 (Real-Time
//   CORBA Joint Revised Submission May 28, 1999).  This file is
//   equivalent to OMG's RTPortableServer.idl.
//
//   This file was used to generate the code in
//   RTPOA{C,S,S_T}.{h,i,cpp} The command used to generate code
//   is:
//
//     tao_idl -o orig -Gp -Gd -Ge 1 -Gv \
//          -Wb,export_macro=TAO_Export \
//          -Wb,export_include=corbafwd.h \
//          -Wb,pre_include="ace/pre.h" \
//          -Wb,post_include="ace/post.h" \
//          RTPOA.pidl
//
//   after the files are generated, patches located in tao/diffs
//   directory must be applied.  The patches fix the interface
//   repository IDs, disable the code under certain configurations,
//   and eliminate cycles in the include dependencies.  Those changes
//   are required because the generated code is part of the TAO
//   library, it hardly makes any sense to change the IDL compiler to
//   support changes that are very occasional.
//
// ================================================================

#ifndef _RT_PORTABLE_SERVER_IDL_
#define _RT_PORTABLE_SERVER_IDL_

//#include <orb.idl>
#include <POA.pidl>
#include <RTCORBA.pidl>

#pragma prefix "omg.org"

module RTPortableServer
{
  interface POA : PortableServer::POA
  {
    Object create_reference_with_priority (in CORBA::RepositoryId intf,
                                           in RTCORBA::Priority priority)
    raises (WrongPolicy);

    Object create_reference_with_id_and_priority (in PortableServer::ObjectId oid,
                                                  in CORBA::RepositoryId intf,
                                                  in RTCORBA::Priority priority)
    raises (WrongPolicy);

    ObjectId activate_object_with_priority (in PortableServer::Servant p_servant,
                                            in RTCORBA::Priority priority)
    raises (ServantAlreadyActive, WrongPolicy);

    void activate_object_with_id_and_priority (in PortableServer::ObjectId oid,
                                               in PortableServer::Servant p_servant,
                                               in RTCORBA::Priority priority)
    raises ( ServantAlreadyActive, ObjectAlreadyActive, WrongPolicy );
  };
};

#pragma prefix ""

#endif /* _RT_PORTABLE_SERVER_IDL_ */
