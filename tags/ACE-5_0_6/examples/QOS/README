$Id$

A Regression test for ACE QoS features. 
---------------------------------------

This test implements a simple Receiver-Sender program that ensures
Quality of Service (QoS) guarantees on the underlying network before
transmitting data. The program tests the ACE QoS APIs/features. The
test works only on Win2K because currently most QoS ACE APIs are
implemented as wrappers around WinSock2 APIs. In the future, RAPI, an
implementation of QoS APIs on Solaris will be incorporated into ACE
and this test should work "out of the box" for the underlying RAPI
APIs as should all the applications that use the ACE QoS APIs.

Build Requirements :
--------------------
1. Two Win2K machines.
2. June98 Platform SDK or later.
3. Link with ws2_32.lib 

The test consists of a server (which is the receiver) and a client
 (which is the sender). 
 
 The receiver is started first (though it is not mandatory) as :

 server -q:default -m

 The -q:default option makes the receiver use the default QoS parameters
   in the test. 

 The -m option specifies that the receiver is listening to multicast 
   from any potential senders that can negotiate and satisfy the QoS
   requirements of the receiver.

The Sender is started next as :

  client -q:default -n -m

 The -q:default option makes the sender use the default QoS parameters
   in the test. These are the same as those used by the receiver.

 The -n option specifies that this is a sender.

 The -m option specifies that the sender would be sending multicast to 
   any potential receivers that can negotiate and satisfy the QoS
   requirements of the sender.

The user must have administrative access to the machine to run this program.
It seems to be a pre-requisite to opening QoS sockets. 

The sender and receiver should be run on different Win2K machines. 

The test demonstrates how to GQOS enable an application using the ACE QoS APIs.
It concentrates on the use of various ACE QoS APIs and their correctness.

-----------------

If you run into any problems with this test please contact Vishal
Kachroo <vishal@cs.wustl.edu>.



 
