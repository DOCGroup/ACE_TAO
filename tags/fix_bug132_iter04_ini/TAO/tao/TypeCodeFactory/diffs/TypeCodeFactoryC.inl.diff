--- orig/TypeCodeFactoryC.inl	Mon Mar 12 22:17:35 2001
+++ TypeCodeFactoryC.inl	Mon Mar 12 22:32:17 2001
@@ -1,118 +1,99 @@
-// -*- C++ -*-
-//
-// $Id$
-
-// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
-// TAO and the TAO IDL Compiler have been developed by:
-//       Center for Distributed Object Computing
-//       Washington University
-//       St. Louis, MO
-//       USA
-//       http://www.cs.wustl.edu/~schmidt/doc-center.html
-// and
-//       Distributed Object Computing Laboratory
-//       University of California at Irvine
-//       Irvine, CA
-//       USA
-//       http://doc.ece.uci.edu/
-//
-// Information about TAO is available at:
-//     http://www.cs.wustl.edu/~schmidt/TAO.html
-
+/* -*- C++ -*- */
+//$Id$
 
 #if !defined (_CORBA_TYPECODEFACTORY___VAR_CI_)
 #define _CORBA_TYPECODEFACTORY___VAR_CI_
 
 // *************************************************************
-// Inline operations for class CORBA::TypeCodeFactory_var
+// Inline operations for class CORBA_TypeCodeFactory_var
 // *************************************************************
 
 ACE_INLINE
-CORBA::TypeCodeFactory_var::TypeCodeFactory_var (void) // default constructor
-  : ptr_ (TypeCodeFactory::_nil ())
+CORBA_TypeCodeFactory_var::CORBA_TypeCodeFactory_var (void) // default constructor
+  : ptr_ (CORBA_TypeCodeFactory::_nil ())
 {}
 
-ACE_INLINE ::CORBA::TypeCodeFactory_ptr
-CORBA::TypeCodeFactory_var::ptr (void) const
+ACE_INLINE ::CORBA_TypeCodeFactory_ptr
+CORBA_TypeCodeFactory_var::ptr (void) const
 {
   return this->ptr_;
 }
 
 ACE_INLINE
-CORBA::TypeCodeFactory_var::TypeCodeFactory_var (const ::CORBA::TypeCodeFactory_var &p) // copy constructor
+CORBA_TypeCodeFactory_var::CORBA_TypeCodeFactory_var (const ::CORBA_TypeCodeFactory_var &p) // copy constructor
   : TAO_Base_var (),
-    ptr_ (TypeCodeFactory::_duplicate (p.ptr ()))
+    ptr_ (CORBA_TypeCodeFactory::_duplicate (p.ptr ()))
 {}
 
 ACE_INLINE
-CORBA::TypeCodeFactory_var::~TypeCodeFactory_var (void) // destructor
+CORBA_TypeCodeFactory_var::~CORBA_TypeCodeFactory_var (void) // destructor
 {
   CORBA::release (this->ptr_);
 }
 
-ACE_INLINE CORBA::TypeCodeFactory_var &
-CORBA::TypeCodeFactory_var::operator= (TypeCodeFactory_ptr p)
+ACE_INLINE CORBA_TypeCodeFactory_var &
+CORBA_TypeCodeFactory_var::operator= (CORBA_TypeCodeFactory_ptr p)
 {
   CORBA::release (this->ptr_);
   this->ptr_ = p;
   return *this;
 }
 
-ACE_INLINE CORBA::TypeCodeFactory_var &
-CORBA::TypeCodeFactory_var::operator= (const ::CORBA::TypeCodeFactory_var &p)
+ACE_INLINE CORBA_TypeCodeFactory_var &
+CORBA_TypeCodeFactory_var::operator= (const ::CORBA_TypeCodeFactory_var &p)
 {
   if (this != &p)
   {
     CORBA::release (this->ptr_);
-    this->ptr_ = ::CORBA::TypeCodeFactory::_duplicate (p.ptr ());
+    this->ptr_ = ::CORBA_TypeCodeFactory::_duplicate (p.ptr ());
   }
   return *this;
 }
 
 ACE_INLINE 
-CORBA::TypeCodeFactory_var::operator const ::CORBA::TypeCodeFactory_ptr &() const // cast
+CORBA_TypeCodeFactory_var::operator const ::CORBA_TypeCodeFactory_ptr &() const // cast
 {
   return this->ptr_;
 }
 
 ACE_INLINE 
-CORBA::TypeCodeFactory_var::operator ::CORBA::TypeCodeFactory_ptr &() // cast 
+CORBA_TypeCodeFactory_var::operator ::CORBA_TypeCodeFactory_ptr &() // cast
 {
   return this->ptr_;
 }
 
-ACE_INLINE ::CORBA::TypeCodeFactory_ptr
-CORBA::TypeCodeFactory_var::operator-> (void) const
+ACE_INLINE ::CORBA_TypeCodeFactory_ptr
+CORBA_TypeCodeFactory_var::operator-> (void) const
 {
   return this->ptr_;
 }
 
-ACE_INLINE ::CORBA::TypeCodeFactory_ptr
-CORBA::TypeCodeFactory_var::in (void) const
+ACE_INLINE ::CORBA_TypeCodeFactory_ptr
+CORBA_TypeCodeFactory_var::in (void) const
 {
   return this->ptr_;
 }
 
-ACE_INLINE ::CORBA::TypeCodeFactory_ptr &
-CORBA::TypeCodeFactory_var::inout (void)
+ACE_INLINE ::CORBA_TypeCodeFactory_ptr &
+CORBA_TypeCodeFactory_var::inout (void)
 {
   return this->ptr_;
 }
 
-ACE_INLINE ::CORBA::TypeCodeFactory_ptr &
-CORBA::TypeCodeFactory_var::out (void)
+ACE_INLINE ::CORBA_TypeCodeFactory_ptr &
+CORBA_TypeCodeFactory_var::out (void)
 {
   CORBA::release (this->ptr_);
-  this->ptr_ = ::CORBA::TypeCodeFactory::_nil ();
+  this->ptr_ = ::CORBA_TypeCodeFactory::_nil ();
   return this->ptr_;
 }
 
-ACE_INLINE ::CORBA::TypeCodeFactory_ptr
-CORBA::TypeCodeFactory_var::_retn (void)
+ACE_INLINE ::CORBA_TypeCodeFactory_ptr
+CORBA_TypeCodeFactory_var::_retn (void)
 {
   // yield ownership of managed obj reference
-  ::CORBA::TypeCodeFactory_ptr val = this->ptr_;
-  this->ptr_ = ::CORBA::TypeCodeFactory::_nil ();
+  ::CORBA_TypeCodeFactory_ptr val = this->ptr_;
+  this->ptr_ = ::CORBA_TypeCodeFactory::_nil ();
   return val;
 }
 
@@ -124,64 +105,64 @@
 #define _CORBA_TYPECODEFACTORY___OUT_CI_
 
 // *************************************************************
-// Inline operations for class CORBA::TypeCodeFactory_out
+// Inline operations for class CORBA_TypeCodeFactory_out
 // *************************************************************
 
 ACE_INLINE
-CORBA::TypeCodeFactory_out::TypeCodeFactory_out (TypeCodeFactory_ptr &p)
+CORBA_TypeCodeFactory_out::CORBA_TypeCodeFactory_out (CORBA_TypeCodeFactory_ptr &p)
   : ptr_ (p)
 {
-  this->ptr_ = ::CORBA::TypeCodeFactory::_nil ();
+  this->ptr_ = ::CORBA_TypeCodeFactory::_nil ();
 }
 
 ACE_INLINE
-CORBA::TypeCodeFactory_out::TypeCodeFactory_out (TypeCodeFactory_var &p) // constructor from _var
+CORBA_TypeCodeFactory_out::CORBA_TypeCodeFactory_out (CORBA_TypeCodeFactory_var &p) // constructor from _var
   : ptr_ (p.out ())
 {
   CORBA::release (this->ptr_);
-  this->ptr_ = ::CORBA::TypeCodeFactory::_nil ();
+  this->ptr_ = ::CORBA_TypeCodeFactory::_nil ();
 }
 
 ACE_INLINE
-CORBA::TypeCodeFactory_out::TypeCodeFactory_out (const ::CORBA::TypeCodeFactory_out &p) // copy constructor
-  : ptr_ (ACE_const_cast (TypeCodeFactory_out &, p).ptr_)
+CORBA_TypeCodeFactory_out::CORBA_TypeCodeFactory_out (const ::CORBA_TypeCodeFactory_out &p) // copy constructor
+  : ptr_ (ACE_const_cast (CORBA_TypeCodeFactory_out &, p).ptr_)
 {}
 
-ACE_INLINE ::CORBA::TypeCodeFactory_out &
-CORBA::TypeCodeFactory_out::operator= (const ::CORBA::TypeCodeFactory_out &p)
+ACE_INLINE ::CORBA_TypeCodeFactory_out &
+CORBA_TypeCodeFactory_out::operator= (const ::CORBA_TypeCodeFactory_out &p)
 {
-  this->ptr_ = ACE_const_cast (TypeCodeFactory_out&, p).ptr_;
+  this->ptr_ = ACE_const_cast (CORBA_TypeCodeFactory_out&, p).ptr_;
   return *this;
 }
 
-ACE_INLINE CORBA::TypeCodeFactory_out &
-CORBA::TypeCodeFactory_out::operator= (const ::CORBA::TypeCodeFactory_var &p)
+ACE_INLINE CORBA_TypeCodeFactory_out &
+CORBA_TypeCodeFactory_out::operator= (const ::CORBA_TypeCodeFactory_var &p)
 {
-  this->ptr_ = ::CORBA::TypeCodeFactory::_duplicate (p.ptr ());
+  this->ptr_ = ::CORBA_TypeCodeFactory::_duplicate (p.ptr ());
   return *this;
 }
 
-ACE_INLINE CORBA::TypeCodeFactory_out &
-CORBA::TypeCodeFactory_out::operator= (TypeCodeFactory_ptr p)
+ACE_INLINE CORBA_TypeCodeFactory_out &
+CORBA_TypeCodeFactory_out::operator= (CORBA_TypeCodeFactory_ptr p)
 {
   this->ptr_ = p;
   return *this;
 }
 
 ACE_INLINE 
-CORBA::TypeCodeFactory_out::operator ::CORBA::TypeCodeFactory_ptr &() // cast
+CORBA_TypeCodeFactory_out::operator ::CORBA_TypeCodeFactory_ptr &() // cast
 {
   return this->ptr_;
 }
 
-ACE_INLINE ::CORBA::TypeCodeFactory_ptr &
-CORBA::TypeCodeFactory_out::ptr (void) // ptr
+ACE_INLINE ::CORBA_TypeCodeFactory_ptr &
+CORBA_TypeCodeFactory_out::ptr (void) // ptr
 {
   return this->ptr_;
 }
 
-ACE_INLINE ::CORBA::TypeCodeFactory_ptr
-CORBA::TypeCodeFactory_out::operator-> (void)
+ACE_INLINE ::CORBA_TypeCodeFactory_ptr
+CORBA_TypeCodeFactory_out::operator-> (void)
 {
   return this->ptr_;
 }
