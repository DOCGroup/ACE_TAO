--- orig/ImplRepoS.h	Sun Apr  1 16:33:09 2001
+++ ImplRepoS.h	Sun Apr  1 17:47:56 2001
@@ -56,7 +56,7 @@
   class _TAO_ServerObject_ThruPOA_Proxy_Impl;
   class _TAO_ServerObject_Direct_Proxy_Impl;
   class _TAO_ServerObject_Strategized_Proxy_Broker;
-  
+
   class TAO_PortableServer_Export ServerObject :  public virtual PortableServer::ServantBase
   {
   protected:
@@ -69,7 +69,7 @@
 
     virtual CORBA::Boolean _is_a (
         const char* logical_type_id,
-        CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       );
 
@@ -81,7 +81,7 @@
         TAO_ServerRequest &req,
         void *obj,
         void *context,
-        CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       );
 
@@ -89,7 +89,7 @@
         TAO_ServerRequest &req,
         void *obj,
         void *context,
-        CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       );
 
@@ -97,26 +97,26 @@
         TAO_ServerRequest &req,
         void *obj,
         void *context,
-        CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       );
 
     virtual void _dispatch (
         TAO_ServerRequest &_tao_req,
         void *_tao_context,
-        CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       );
 
     ::ImplementationRepository::ServerObject *_this (
-        CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       );
 
     virtual const char* _interface_repository_id (void) const;
 
     virtual void ping (
-        CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((
@@ -124,15 +124,15 @@
       )) = 0;
 
     static void ping_skel (
-        TAO_ServerRequest &_tao_req, 
-        void *_tao_obj, 
-        void *_tao_context, 
-        CORBA::Environment &ACE_TRY_ENV = 
+        TAO_ServerRequest &_tao_req,
+        void *_tao_obj,
+        void *_tao_context,
+        CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       );
 
     virtual void shutdown (
-        CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((
@@ -140,14 +140,14 @@
       )) = 0;
 
     static void shutdown_skel (
-        TAO_ServerRequest &_tao_req, 
-        void *_tao_obj, 
-        void *_tao_context, 
-        CORBA::Environment &ACE_TRY_ENV = 
+        TAO_ServerRequest &_tao_req,
+        void *_tao_obj,
+        void *_tao_context,
+        CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       );
 
-    
+
 #if (TAO_HAS_INTERCEPTORS == 1)
     // Generation of interceptors related RequestInfo classes per operation.
     // This needed to be able to store the arguments, exceptions, contexts
@@ -160,7 +160,7 @@
       TAO_ServerRequestInfo_ImplementationRepository_ServerObject_ping (
         TAO_ServerRequest &_tao_server_request,
         POA_ImplementationRepository::ServerObject *tao_impl,
-        CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       );
 
@@ -169,37 +169,37 @@
             TAO_default_environment ()
         )
         ACE_THROW_SPEC ((CORBA::SystemException));
-      
+
       virtual Dynamic::ExceptionList * exceptions (
           CORBA::Environment &ACE_TRY_ENV =
             TAO_default_environment ()
         )
         ACE_THROW_SPEC ((CORBA::SystemException));
-      
+
       virtual CORBA::Any * result (
           CORBA::Environment &ACE_TRY_ENV =
             TAO_default_environment ()
         )
         ACE_THROW_SPEC ((CORBA::SystemException));
-      
+
       virtual char * target_most_derived_interface (
           CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
         ACE_THROW_SPEC ((CORBA::SystemException));
-      
+
       virtual CORBA::Boolean target_is_a (
           const char * id,
           CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
         ACE_THROW_SPEC ((CORBA::SystemException));
-      
+
     private:
       TAO_ServerRequestInfo_ImplementationRepository_ServerObject_ping (const TAO_ServerRequestInfo_ImplementationRepository_ServerObject_ping &);
       void operator= (const TAO_ServerRequestInfo_ImplementationRepository_ServerObject_ping &);
-      
+
     private:
       POA_ImplementationRepository::ServerObject *_tao_impl;
-      
+
     };
-    
+
     class TAO_ServerRequestInfo_ImplementationRepository_ServerObject_shutdown : public TAO_ServerRequestInfo
     {
     public:
@@ -207,7 +207,7 @@
       TAO_ServerRequestInfo_ImplementationRepository_ServerObject_shutdown (
         TAO_ServerRequest &_tao_server_request,
         POA_ImplementationRepository::ServerObject *tao_impl,
-        CORBA::Environment &ACE_TRY_ENV = 
+        CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       );
 
@@ -216,103 +216,103 @@
             TAO_default_environment ()
         )
         ACE_THROW_SPEC ((CORBA::SystemException));
-      
+
       virtual Dynamic::ExceptionList * exceptions (
           CORBA::Environment &ACE_TRY_ENV =
             TAO_default_environment ()
         )
         ACE_THROW_SPEC ((CORBA::SystemException));
-      
+
       virtual CORBA::Any * result (
           CORBA::Environment &ACE_TRY_ENV =
             TAO_default_environment ()
         )
         ACE_THROW_SPEC ((CORBA::SystemException));
-      
+
       virtual char * target_most_derived_interface (
           CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
         ACE_THROW_SPEC ((CORBA::SystemException));
-      
+
       virtual CORBA::Boolean target_is_a (
           const char * id,
           CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
         ACE_THROW_SPEC ((CORBA::SystemException));
-      
+
     private:
       TAO_ServerRequestInfo_ImplementationRepository_ServerObject_shutdown (const TAO_ServerRequestInfo_ImplementationRepository_ServerObject_shutdown &);
       void operator= (const TAO_ServerRequestInfo_ImplementationRepository_ServerObject_shutdown &);
-      
+
     private:
       POA_ImplementationRepository::ServerObject *_tao_impl;
-      
+
     };
-    
+
     #endif /* TAO_HAS_INTERCEPTORS */
 
   };
 
-  
+
   ///////////////////////////////////////////////////////////////////////
-  //               Strategized Proxy Broker Declaration 
+  //               Strategized Proxy Broker Declaration
   //
-  
+
   class TAO_PortableServer_Export _TAO_ServerObject_Strategized_Proxy_Broker : public virtual ::ImplementationRepository::_TAO_ServerObject_Proxy_Broker
   {
-  public: 
+  public:
     _TAO_ServerObject_Strategized_Proxy_Broker (void);
-    
+
     virtual ~_TAO_ServerObject_Strategized_Proxy_Broker (void);
-    
+
     virtual ::ImplementationRepository::_TAO_ServerObject_Proxy_Impl &select_proxy (
       ::ImplementationRepository::ServerObject *object,
       CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
     );
-  
+
   private:
-  
+
   // Helper methods that takes care to create the proxy
   // as soon as their use is necessary.
     void create_proxy (
       int collocation_strategy,
       CORBA::Environment &ACE_TRY_ENV
     );
-  
+
   private:
-    
+
     // Caches the proxy implementations. The proxy implementation
     // are totally stateless, and those can be shared by all the
     // instances of a given IDL interface type.
     ::ImplementationRepository::_TAO_ServerObject_Proxy_Impl
      *proxy_cache_[TAO_Collocation_Strategies::CS_LAST];
-    
+
     TAO_SYNCH_MUTEX mutex_;
   // This funxtion is used to get an handle to the unique instance
   // of the Strategized Proxy Broker that is available for a given
   // interface.
-  
+
   public:
     static _TAO_ServerObject_Strategized_Proxy_Broker *the_TAO_ServerObject_Strategized_Proxy_Broker (void);
   };
-  
-  
+
+
   //
-  //            End Strategized Proxy Broker Declaration 
+  //            End Strategized Proxy Broker Declaration
   ///////////////////////////////////////////////////////////////////////
-  
-  
+
+
 ///////////////////////////////////////////////////////////////////////
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_PortableServer_Export _TAO_ServerObject_ThruPOA_Proxy_Impl : 
+class TAO_PortableServer_Export _TAO_ServerObject_ThruPOA_Proxy_Impl :
   public virtual ::ImplementationRepository::_TAO_ServerObject_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl
 {
 public:
   _TAO_ServerObject_ThruPOA_Proxy_Impl (void);
-  
+
   virtual ~_TAO_ServerObject_ThruPOA_Proxy_Impl (void) { }
-  
+
     virtual void ping (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
@@ -341,15 +341,15 @@
 //                    Direct  Impl. Declaration
 //
 
-class TAO_PortableServer_Export _TAO_ServerObject_Direct_Proxy_Impl : 
+class TAO_PortableServer_Export _TAO_ServerObject_Direct_Proxy_Impl :
   public virtual ImplementationRepository::_TAO_ServerObject_Proxy_Impl,
   public virtual TAO_Direct_Object_Proxy_Impl
 {
 public:
   _TAO_ServerObject_Direct_Proxy_Impl (void);
-  
+
   virtual ~_TAO_ServerObject_Direct_Proxy_Impl (void) { }
-  
+
     virtual void ping (
       CORBA_Object *_collocated_tao_target_,
       CORBA::Environment &ACE_TRY_ENV
@@ -390,7 +390,7 @@
   // ctor with T*, ownership flag and a POA
   ~ServerObject_tie (void);
   // dtor
-  
+
   // TIE specific functions
   T *_tied_object (void);
   // return the underlying object
@@ -402,14 +402,14 @@
   // do we own it
   void _is_owner (CORBA::Boolean b);
   // set the ownership
-  
+
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
   void ping (
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -417,7 +417,7 @@
     ));
 
   void shutdown (
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -428,7 +428,7 @@
   T *ptr_;
   PortableServer::POA_var poa_;
   CORBA::Boolean rel_;
-  
+
   // copy and assignment are not allowed
   ServerObject_tie (const ServerObject_tie &);
   void operator= (const ServerObject_tie &);
@@ -455,7 +455,7 @@
 
   virtual CORBA::Boolean _is_a (
       const char* logical_type_id,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -467,7 +467,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -475,7 +475,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -483,19 +483,19 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
   virtual void _dispatch (
       TAO_ServerRequest &_tao_req,
       void *_tao_context,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
   ::ImplementationRepository::Administration *_this (
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -503,7 +503,7 @@
 
   virtual void activate_server (
       const char * server,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -513,17 +513,17 @@
     )) = 0;
 
   static void activate_server_skel (
-      TAO_ServerRequest &_tao_req, 
-      void *_tao_obj, 
-      void *_tao_context, 
-      CORBA::Environment &ACE_TRY_ENV = 
+      TAO_ServerRequest &_tao_req,
+      void *_tao_obj,
+      void *_tao_context,
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
   virtual void register_server (
       const char * server,
       const ImplementationRepository::StartupOptions & options,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -532,17 +532,17 @@
     )) = 0;
 
   static void register_server_skel (
-      TAO_ServerRequest &_tao_req, 
-      void *_tao_obj, 
-      void *_tao_context, 
-      CORBA::Environment &ACE_TRY_ENV = 
+      TAO_ServerRequest &_tao_req,
+      void *_tao_obj,
+      void *_tao_context,
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
   virtual void reregister_server (
       const char * server,
       const ImplementationRepository::StartupOptions & options,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -550,16 +550,16 @@
     )) = 0;
 
   static void reregister_server_skel (
-      TAO_ServerRequest &_tao_req, 
-      void *_tao_obj, 
-      void *_tao_context, 
-      CORBA::Environment &ACE_TRY_ENV = 
+      TAO_ServerRequest &_tao_req,
+      void *_tao_obj,
+      void *_tao_context,
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
   virtual void remove_server (
       const char * server,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -568,16 +568,16 @@
     )) = 0;
 
   static void remove_server_skel (
-      TAO_ServerRequest &_tao_req, 
-      void *_tao_obj, 
-      void *_tao_context, 
-      CORBA::Environment &ACE_TRY_ENV = 
+      TAO_ServerRequest &_tao_req,
+      void *_tao_obj,
+      void *_tao_context,
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
   virtual void shutdown_server (
       const char * server,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -586,10 +586,10 @@
     )) = 0;
 
   static void shutdown_server_skel (
-      TAO_ServerRequest &_tao_req, 
-      void *_tao_obj, 
-      void *_tao_context, 
-      CORBA::Environment &ACE_TRY_ENV = 
+      TAO_ServerRequest &_tao_req,
+      void *_tao_obj,
+      void *_tao_context,
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -597,7 +597,7 @@
       const char * server,
       const char * addr,
       ImplementationRepository::ServerObject_ptr server_object,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -606,16 +606,16 @@
     )) = 0;
 
   static void server_is_running_skel (
-      TAO_ServerRequest &_tao_req, 
-      void *_tao_obj, 
-      void *_tao_context, 
-      CORBA::Environment &ACE_TRY_ENV = 
+      TAO_ServerRequest &_tao_req,
+      void *_tao_obj,
+      void *_tao_context,
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
   virtual void server_is_shutting_down (
       const char * server,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -624,17 +624,17 @@
     )) = 0;
 
   static void server_is_shutting_down_skel (
-      TAO_ServerRequest &_tao_req, 
-      void *_tao_obj, 
-      void *_tao_context, 
-      CORBA::Environment &ACE_TRY_ENV = 
+      TAO_ServerRequest &_tao_req,
+      void *_tao_obj,
+      void *_tao_context,
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
   virtual void find (
       const char * server,
       ImplementationRepository::ServerInformation_out info,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -643,10 +643,10 @@
     )) = 0;
 
   static void find_skel (
-      TAO_ServerRequest &_tao_req, 
-      void *_tao_obj, 
-      void *_tao_context, 
-      CORBA::Environment &ACE_TRY_ENV = 
+      TAO_ServerRequest &_tao_req,
+      void *_tao_obj,
+      void *_tao_context,
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -654,7 +654,7 @@
       CORBA::ULong how_many,
       ImplementationRepository::ServerInformationList_out server_list,
       ImplementationRepository::ServerInformationIterator_out server_iterator,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -662,14 +662,14 @@
     )) = 0;
 
   static void list_skel (
-      TAO_ServerRequest &_tao_req, 
-      void *_tao_obj, 
-      void *_tao_context, 
-      CORBA::Environment &ACE_TRY_ENV = 
+      TAO_ServerRequest &_tao_req,
+      void *_tao_obj,
+      void *_tao_context,
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
-  
+
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -683,7 +683,7 @@
       TAO_ServerRequest &_tao_server_request,
       POA_ImplementationRepository::Administration *tao_impl,
       const char * server,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -692,38 +692,38 @@
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual Dynamic::ExceptionList * exceptions (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Any * result (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual char * target_most_derived_interface (
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Boolean target_is_a (
         const char * id,
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
   private:
     TAO_ServerRequestInfo_ImplementationRepository_Administration_activate_server (const TAO_ServerRequestInfo_ImplementationRepository_Administration_activate_server &);
     void operator= (const TAO_ServerRequestInfo_ImplementationRepository_Administration_activate_server &);
-    
+
   private:
     POA_ImplementationRepository::Administration *_tao_impl;
     const char * server_;
-    
+
   };
-  
+
   class TAO_ServerRequestInfo_ImplementationRepository_Administration_register_server : public TAO_ServerRequestInfo
   {
   public:
@@ -733,7 +733,7 @@
       POA_ImplementationRepository::Administration *tao_impl,
       const char * server,
       const ImplementationRepository::StartupOptions & options,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -742,39 +742,39 @@
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual Dynamic::ExceptionList * exceptions (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Any * result (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual char * target_most_derived_interface (
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Boolean target_is_a (
         const char * id,
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
   private:
     TAO_ServerRequestInfo_ImplementationRepository_Administration_register_server (const TAO_ServerRequestInfo_ImplementationRepository_Administration_register_server &);
     void operator= (const TAO_ServerRequestInfo_ImplementationRepository_Administration_register_server &);
-    
+
   private:
     POA_ImplementationRepository::Administration *_tao_impl;
     const char * server_;
     const ImplementationRepository::StartupOptions & options_;
-    
+
   };
-  
+
   class TAO_ServerRequestInfo_ImplementationRepository_Administration_reregister_server : public TAO_ServerRequestInfo
   {
   public:
@@ -784,7 +784,7 @@
       POA_ImplementationRepository::Administration *tao_impl,
       const char * server,
       const ImplementationRepository::StartupOptions & options,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -793,39 +793,39 @@
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual Dynamic::ExceptionList * exceptions (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Any * result (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual char * target_most_derived_interface (
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Boolean target_is_a (
         const char * id,
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
   private:
     TAO_ServerRequestInfo_ImplementationRepository_Administration_reregister_server (const TAO_ServerRequestInfo_ImplementationRepository_Administration_reregister_server &);
     void operator= (const TAO_ServerRequestInfo_ImplementationRepository_Administration_reregister_server &);
-    
+
   private:
     POA_ImplementationRepository::Administration *_tao_impl;
     const char * server_;
     const ImplementationRepository::StartupOptions & options_;
-    
+
   };
-  
+
   class TAO_ServerRequestInfo_ImplementationRepository_Administration_remove_server : public TAO_ServerRequestInfo
   {
   public:
@@ -834,7 +834,7 @@
       TAO_ServerRequest &_tao_server_request,
       POA_ImplementationRepository::Administration *tao_impl,
       const char * server,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -843,38 +843,38 @@
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual Dynamic::ExceptionList * exceptions (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Any * result (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual char * target_most_derived_interface (
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Boolean target_is_a (
         const char * id,
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
   private:
     TAO_ServerRequestInfo_ImplementationRepository_Administration_remove_server (const TAO_ServerRequestInfo_ImplementationRepository_Administration_remove_server &);
     void operator= (const TAO_ServerRequestInfo_ImplementationRepository_Administration_remove_server &);
-    
+
   private:
     POA_ImplementationRepository::Administration *_tao_impl;
     const char * server_;
-    
+
   };
-  
+
   class TAO_ServerRequestInfo_ImplementationRepository_Administration_shutdown_server : public TAO_ServerRequestInfo
   {
   public:
@@ -883,7 +883,7 @@
       TAO_ServerRequest &_tao_server_request,
       POA_ImplementationRepository::Administration *tao_impl,
       const char * server,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -892,38 +892,38 @@
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual Dynamic::ExceptionList * exceptions (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Any * result (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual char * target_most_derived_interface (
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Boolean target_is_a (
         const char * id,
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
   private:
     TAO_ServerRequestInfo_ImplementationRepository_Administration_shutdown_server (const TAO_ServerRequestInfo_ImplementationRepository_Administration_shutdown_server &);
     void operator= (const TAO_ServerRequestInfo_ImplementationRepository_Administration_shutdown_server &);
-    
+
   private:
     POA_ImplementationRepository::Administration *_tao_impl;
     const char * server_;
-    
+
   };
-  
+
   class TAO_ServerRequestInfo_ImplementationRepository_Administration_server_is_running : public TAO_ServerRequestInfo
   {
   public:
@@ -934,7 +934,7 @@
       const char * server,
       const char * addr,
       ImplementationRepository::ServerObject_ptr server_object,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -943,42 +943,42 @@
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual Dynamic::ExceptionList * exceptions (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Any * result (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual char * target_most_derived_interface (
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Boolean target_is_a (
         const char * id,
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
   private:
     TAO_ServerRequestInfo_ImplementationRepository_Administration_server_is_running (const TAO_ServerRequestInfo_ImplementationRepository_Administration_server_is_running &);
     void operator= (const TAO_ServerRequestInfo_ImplementationRepository_Administration_server_is_running &);
-    
+
   private:
     POA_ImplementationRepository::Administration *_tao_impl;
     const char * server_;
     const char * addr_;
     ImplementationRepository::ServerObject_ptr server_object_;
     void result (char * result);
-    // update the result 
+    // update the result
     char * _result;
   };
-  
+
   class TAO_ServerRequestInfo_ImplementationRepository_Administration_server_is_shutting_down : public TAO_ServerRequestInfo
   {
   public:
@@ -987,7 +987,7 @@
       TAO_ServerRequest &_tao_server_request,
       POA_ImplementationRepository::Administration *tao_impl,
       const char * server,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -996,38 +996,38 @@
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual Dynamic::ExceptionList * exceptions (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Any * result (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual char * target_most_derived_interface (
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Boolean target_is_a (
         const char * id,
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
   private:
     TAO_ServerRequestInfo_ImplementationRepository_Administration_server_is_shutting_down (const TAO_ServerRequestInfo_ImplementationRepository_Administration_server_is_shutting_down &);
     void operator= (const TAO_ServerRequestInfo_ImplementationRepository_Administration_server_is_shutting_down &);
-    
+
   private:
     POA_ImplementationRepository::Administration *_tao_impl;
     const char * server_;
-    
+
   };
-  
+
   class TAO_ServerRequestInfo_ImplementationRepository_Administration_find : public TAO_ServerRequestInfo
   {
   public:
@@ -1036,7 +1036,7 @@
       TAO_ServerRequest &_tao_server_request,
       POA_ImplementationRepository::Administration *tao_impl,
       const char * server,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -1045,38 +1045,38 @@
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual Dynamic::ExceptionList * exceptions (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Any * result (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual char * target_most_derived_interface (
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Boolean target_is_a (
         const char * id,
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
   private:
     TAO_ServerRequestInfo_ImplementationRepository_Administration_find (const TAO_ServerRequestInfo_ImplementationRepository_Administration_find &);
     void operator= (const TAO_ServerRequestInfo_ImplementationRepository_Administration_find &);
-    
+
   private:
     POA_ImplementationRepository::Administration *_tao_impl;
     const char * server_;
-    
+
   };
-  
+
   class TAO_ServerRequestInfo_ImplementationRepository_Administration_list : public TAO_ServerRequestInfo
   {
   public:
@@ -1084,9 +1084,9 @@
     TAO_ServerRequestInfo_ImplementationRepository_Administration_list (
       TAO_ServerRequest &_tao_server_request,
       POA_ImplementationRepository::Administration *tao_impl,
-      const CORBA::ULong & how_many      
+      const CORBA::ULong & how_many
 ,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -1095,55 +1095,55 @@
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual Dynamic::ExceptionList * exceptions (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Any * result (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual char * target_most_derived_interface (
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Boolean target_is_a (
         const char * id,
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
   private:
     TAO_ServerRequestInfo_ImplementationRepository_Administration_list (const TAO_ServerRequestInfo_ImplementationRepository_Administration_list &);
     void operator= (const TAO_ServerRequestInfo_ImplementationRepository_Administration_list &);
-    
+
   private:
     POA_ImplementationRepository::Administration *_tao_impl;
     const CORBA::ULong & how_many_;
-        
+
 
   };
-  
+
   #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
 
 ///////////////////////////////////////////////////////////////////////
-//               Strategized Proxy Broker Declaration 
+//               Strategized Proxy Broker Declaration
 //
 
 class TAO_PortableServer_Export _TAO_Administration_Strategized_Proxy_Broker : public virtual ::ImplementationRepository::_TAO_Administration_Proxy_Broker
 {
-public: 
+public:
   _TAO_Administration_Strategized_Proxy_Broker (void);
-  
+
   virtual ~_TAO_Administration_Strategized_Proxy_Broker (void);
-  
+
   virtual ::ImplementationRepository::_TAO_Administration_Proxy_Impl &select_proxy (
     ::ImplementationRepository::Administration *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
@@ -1159,13 +1159,13 @@
   );
 
 private:
-  
+
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
   ::ImplementationRepository::_TAO_Administration_Proxy_Impl
    *proxy_cache_[TAO_Collocation_Strategies::CS_LAST];
-  
+
   TAO_SYNCH_MUTEX mutex_;
 // This funxtion is used to get an handle to the unique instance
 // of the Strategized Proxy Broker that is available for a given
@@ -1177,7 +1177,7 @@
 
 
 //
-//            End Strategized Proxy Broker Declaration 
+//            End Strategized Proxy Broker Declaration
 ///////////////////////////////////////////////////////////////////////
 
 
@@ -1185,15 +1185,15 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_PortableServer_Export _TAO_Administration_ThruPOA_Proxy_Impl : 
+class TAO_PortableServer_Export _TAO_Administration_ThruPOA_Proxy_Impl :
   public virtual ::ImplementationRepository::_TAO_Administration_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl
 {
 public:
   _TAO_Administration_ThruPOA_Proxy_Impl (void);
-  
+
   virtual ~_TAO_Administration_ThruPOA_Proxy_Impl (void) { }
-  
+
     virtual void activate_server (
       CORBA_Object *_collocated_tao_target_,
       const char * server,
@@ -1302,15 +1302,15 @@
 //                    Direct  Impl. Declaration
 //
 
-class TAO_PortableServer_Export _TAO_Administration_Direct_Proxy_Impl : 
+class TAO_PortableServer_Export _TAO_Administration_Direct_Proxy_Impl :
   public virtual ImplementationRepository::_TAO_Administration_Proxy_Impl,
   public virtual TAO_Direct_Object_Proxy_Impl
 {
 public:
   _TAO_Administration_Direct_Proxy_Impl (void);
-  
+
   virtual ~_TAO_Administration_Direct_Proxy_Impl (void) { }
-  
+
     virtual void activate_server (
       CORBA_Object *_collocated_tao_target_,
       const char * server,
@@ -1431,7 +1431,7 @@
   // ctor with T*, ownership flag and a POA
   ~Administration_tie (void);
   // dtor
-  
+
   // TIE specific functions
   T *_tied_object (void);
   // return the underlying object
@@ -1443,15 +1443,15 @@
   // do we own it
   void _is_owner (CORBA::Boolean b);
   // set the ownership
-  
+
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
   void activate_server (
       const char * server,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -1463,7 +1463,7 @@
   void register_server (
       const char * server,
       const ImplementationRepository::StartupOptions & options,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -1474,7 +1474,7 @@
   void reregister_server (
       const char * server,
       const ImplementationRepository::StartupOptions & options,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -1483,7 +1483,7 @@
 
   void remove_server (
       const char * server,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -1493,7 +1493,7 @@
 
   void shutdown_server (
       const char * server,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -1505,7 +1505,7 @@
       const char * server,
       const char * addr,
       ImplementationRepository::ServerObject_ptr server_object,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -1515,7 +1515,7 @@
 
   void server_is_shutting_down (
       const char * server,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -1526,7 +1526,7 @@
   void find (
       const char * server,
       ImplementationRepository::ServerInformation_out info,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -1538,7 +1538,7 @@
       CORBA::ULong how_many,
       ImplementationRepository::ServerInformationList_out server_list,
       ImplementationRepository::ServerInformationIterator_out server_iterator,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -1549,7 +1549,7 @@
   T *ptr_;
   PortableServer::POA_var poa_;
   CORBA::Boolean rel_;
-  
+
   // copy and assignment are not allowed
   Administration_tie (const Administration_tie &);
   void operator= (const Administration_tie &);
@@ -1576,7 +1576,7 @@
 
   virtual CORBA::Boolean _is_a (
       const char* logical_type_id,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -1588,7 +1588,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -1596,7 +1596,7 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -1604,19 +1604,19 @@
       TAO_ServerRequest &req,
       void *obj,
       void *context,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
   virtual void _dispatch (
       TAO_ServerRequest &_tao_req,
       void *_tao_context,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
   ::ImplementationRepository::ServerInformationIterator *_this (
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -1625,7 +1625,7 @@
   virtual CORBA::Boolean next_n (
       CORBA::ULong how_many,
       ImplementationRepository::ServerInformationList_out server_list,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -1633,15 +1633,15 @@
     )) = 0;
 
   static void next_n_skel (
-      TAO_ServerRequest &_tao_req, 
-      void *_tao_obj, 
-      void *_tao_context, 
-      CORBA::Environment &ACE_TRY_ENV = 
+      TAO_ServerRequest &_tao_req,
+      void *_tao_obj,
+      void *_tao_context,
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
   virtual void destroy (
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -1649,14 +1649,14 @@
     )) = 0;
 
   static void destroy_skel (
-      TAO_ServerRequest &_tao_req, 
-      void *_tao_obj, 
-      void *_tao_context, 
-      CORBA::Environment &ACE_TRY_ENV = 
+      TAO_ServerRequest &_tao_req,
+      void *_tao_obj,
+      void *_tao_context,
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
-  
+
 #if (TAO_HAS_INTERCEPTORS == 1)
   // Generation of interceptors related RequestInfo classes per operation.
   // This needed to be able to store the arguments, exceptions, contexts
@@ -1670,7 +1670,7 @@
       TAO_ServerRequest &_tao_server_request,
       POA_ImplementationRepository::ServerInformationIterator *tao_impl,
       const CORBA::ULong & how_many,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -1679,40 +1679,40 @@
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual Dynamic::ExceptionList * exceptions (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Any * result (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual char * target_most_derived_interface (
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Boolean target_is_a (
         const char * id,
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
   private:
     TAO_ServerRequestInfo_ImplementationRepository_ServerInformationIterator_next_n (const TAO_ServerRequestInfo_ImplementationRepository_ServerInformationIterator_next_n &);
     void operator= (const TAO_ServerRequestInfo_ImplementationRepository_ServerInformationIterator_next_n &);
-    
+
   private:
     POA_ImplementationRepository::ServerInformationIterator *_tao_impl;
     const CORBA::ULong & how_many_;
     void result (CORBA::Boolean result);
-    // update the result 
+    // update the result
     CORBA::Boolean _result;
   };
-  
+
   class TAO_ServerRequestInfo_ImplementationRepository_ServerInformationIterator_destroy : public TAO_ServerRequestInfo
   {
   public:
@@ -1720,7 +1720,7 @@
     TAO_ServerRequestInfo_ImplementationRepository_ServerInformationIterator_destroy (
       TAO_ServerRequest &_tao_server_request,
       POA_ImplementationRepository::ServerInformationIterator *tao_impl,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
 
@@ -1729,53 +1729,53 @@
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual Dynamic::ExceptionList * exceptions (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Any * result (
         CORBA::Environment &ACE_TRY_ENV =
           TAO_default_environment ()
       )
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual char * target_most_derived_interface (
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
     virtual CORBA::Boolean target_is_a (
         const char * id,
         CORBA::Environment &ACE_TRY_ENV = TAO_default_environment ())
       ACE_THROW_SPEC ((CORBA::SystemException));
-    
+
   private:
     TAO_ServerRequestInfo_ImplementationRepository_ServerInformationIterator_destroy (const TAO_ServerRequestInfo_ImplementationRepository_ServerInformationIterator_destroy &);
     void operator= (const TAO_ServerRequestInfo_ImplementationRepository_ServerInformationIterator_destroy &);
-    
+
   private:
     POA_ImplementationRepository::ServerInformationIterator *_tao_impl;
-    
+
   };
-  
+
   #endif /* TAO_HAS_INTERCEPTORS */
 
 };
 
 
 ///////////////////////////////////////////////////////////////////////
-//               Strategized Proxy Broker Declaration 
+//               Strategized Proxy Broker Declaration
 //
 
 class TAO_PortableServer_Export _TAO_ServerInformationIterator_Strategized_Proxy_Broker : public virtual ::ImplementationRepository::_TAO_ServerInformationIterator_Proxy_Broker
 {
-public: 
+public:
   _TAO_ServerInformationIterator_Strategized_Proxy_Broker (void);
-  
+
   virtual ~_TAO_ServerInformationIterator_Strategized_Proxy_Broker (void);
-  
+
   virtual ::ImplementationRepository::_TAO_ServerInformationIterator_Proxy_Impl &select_proxy (
     ::ImplementationRepository::ServerInformationIterator *object,
     CORBA_Environment &ACE_TRY_ENV = TAO_default_environment ()
@@ -1791,13 +1791,13 @@
   );
 
 private:
-  
+
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
   ::ImplementationRepository::_TAO_ServerInformationIterator_Proxy_Impl
    *proxy_cache_[TAO_Collocation_Strategies::CS_LAST];
-  
+
   TAO_SYNCH_MUTEX mutex_;
 // This funxtion is used to get an handle to the unique instance
 // of the Strategized Proxy Broker that is available for a given
@@ -1809,7 +1809,7 @@
 
 
 //
-//            End Strategized Proxy Broker Declaration 
+//            End Strategized Proxy Broker Declaration
 ///////////////////////////////////////////////////////////////////////
 
 
@@ -1817,15 +1817,15 @@
 //                    ThruPOA  Impl. Declaration
 //
 
-class TAO_PortableServer_Export _TAO_ServerInformationIterator_ThruPOA_Proxy_Impl : 
+class TAO_PortableServer_Export _TAO_ServerInformationIterator_ThruPOA_Proxy_Impl :
   public virtual ::ImplementationRepository::_TAO_ServerInformationIterator_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl
 {
 public:
   _TAO_ServerInformationIterator_ThruPOA_Proxy_Impl (void);
-  
+
   virtual ~_TAO_ServerInformationIterator_ThruPOA_Proxy_Impl (void) { }
-  
+
     virtual CORBA::Boolean next_n (
       CORBA_Object *_collocated_tao_target_,
       CORBA::ULong how_many,
@@ -1856,15 +1856,15 @@
 //                    Direct  Impl. Declaration
 //
 
-class TAO_PortableServer_Export _TAO_ServerInformationIterator_Direct_Proxy_Impl : 
+class TAO_PortableServer_Export _TAO_ServerInformationIterator_Direct_Proxy_Impl :
   public virtual ImplementationRepository::_TAO_ServerInformationIterator_Proxy_Impl,
   public virtual TAO_Direct_Object_Proxy_Impl
 {
 public:
   _TAO_ServerInformationIterator_Direct_Proxy_Impl (void);
-  
+
   virtual ~_TAO_ServerInformationIterator_Direct_Proxy_Impl (void) { }
-  
+
     virtual CORBA::Boolean next_n (
       CORBA_Object *_collocated_tao_target_,
       CORBA::ULong how_many,
@@ -1907,7 +1907,7 @@
   // ctor with T*, ownership flag and a POA
   ~ServerInformationIterator_tie (void);
   // dtor
-  
+
   // TIE specific functions
   T *_tied_object (void);
   // return the underlying object
@@ -1919,16 +1919,16 @@
   // do we own it
   void _is_owner (CORBA::Boolean b);
   // set the ownership
-  
+
   // overridden ServantBase operations
   PortableServer::POA_ptr _default_POA (
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     );
   CORBA::Boolean next_n (
       CORBA::ULong how_many,
       ImplementationRepository::ServerInformationList_out server_list,
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -1936,7 +1936,7 @@
     ));
 
   void destroy (
-      CORBA::Environment &ACE_TRY_ENV = 
+      CORBA::Environment &ACE_TRY_ENV =
         TAO_default_environment ()
     )
     ACE_THROW_SPEC ((
@@ -1947,7 +1947,7 @@
   T *ptr_;
   PortableServer::POA_var poa_;
   CORBA::Boolean rel_;
-  
+
   // copy and assignment are not allowed
   ServerInformationIterator_tie (const ServerInformationIterator_tie &);
   void operator= (const ServerInformationIterator_tie &);
