--- orig/DomainS.cpp	Tue Apr  3 17:47:31 2001
+++ patched/DomainS.cpp	Tue Apr  3 20:50:49 2001
@@ -34,6 +34,7 @@
 #if TAO_HAS_INTERCEPTORS == 1
 #include "tao/RequestInfo_Util.h"
 #endif  /* TAO_HAS_INTERCEPTORS == 1 */
+#include "tao/IFR_Client/IFR_ExtendedC.h"
 
 #include "ace/Dynamic_Service.h"
 #if defined (__BORLANDC__)
@@ -44,412 +45,6 @@
 #include "DomainS.i"
 #endif /* !defined INLINE */
 
-class TAO_CORBA_InterfaceDef_Perfect_Hash_OpTable : public TAO_Perfect_Hash_OpTable
-{
-private:
-  unsigned int hash (const char *str, unsigned int len);
-public:
- const TAO_operation_db_entry * lookup (const char *str, unsigned int len);
-};
-/* starting time is 17:47:31 */
-/* C++ code produced by gperf version 2.8 (ACE version) */
-/* Command-line: /project/sirion/coryan/head/ACE_wrappers/build/Linux/bin/gperf -m -M -J -c -C -D -E -T -f 0 -F 0 -a -o -t -p -K opname_ -L C++ -Z TAO_CORBA_InterfaceDef_Perfect_Hash_OpTable -N lookup  */
-unsigned int
-TAO_CORBA_InterfaceDef_Perfect_Hash_OpTable::hash (const char *str, unsigned int len)
-{
-  static const unsigned char asso_values[] =
-    {
-#if defined (ACE_MVS)
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14,  0,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14,  0,
-     14, 14, 14,  0, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14,  0, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14,
-#else
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14,  0, 14,  0, 14, 14,
-     14,  0, 14, 14, 14, 14, 14, 14, 14, 14,
-     14, 14, 14, 14, 14, 14,  0, 14, 14, 14,
-     14, 14, 14, 14, 14, 14, 14, 14,
-#endif /* ACE_MVS */
-    };
-  return len + asso_values[str[len - 1]] + asso_values[str[0]];
-}
-
-const class TAO_operation_db_entry *
-TAO_CORBA_InterfaceDef_Perfect_Hash_OpTable::lookup (const char *str, unsigned int len)
-{
-  enum
-    {
-      TOTAL_KEYWORDS = 3,
-      MIN_WORD_LENGTH = 5,
-      MAX_WORD_LENGTH = 13,
-      MIN_HASH_VALUE = 5,
-      MAX_HASH_VALUE = 13,
-      HASH_VALUE_RANGE = 9,
-      DUPLICATES = 0
-    };
-
-  static const class TAO_operation_db_entry  wordlist[] =
-    {
-      {"",0},{"",0},{"",0},{"",0},{"",0},
-      {"_is_a",  &POA_CORBA::InterfaceDef::_is_a_skel},
-      {"",0},{"",0},{"",0},{"",0},
-      {"_interface",  &POA_CORBA::InterfaceDef::_interface_skel},
-      {"",0},{"",0},
-      {"_non_existent",  &POA_CORBA::InterfaceDef::_non_existent_skel},
-    };
-
-  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
-    {
-      unsigned int key = hash (str, len);
-
-      if (key <= MAX_HASH_VALUE && key >= MIN_HASH_VALUE)
-        {
-          const char *s = wordlist[key].opname_;
-
-          if (*str == *s && !strncmp (str + 1, s + 1, len - 1))
-            return &wordlist[key];
-        }
-    }
-  return 0;
-}
-/* ending time is 17:47:31 */
-static TAO_CORBA_InterfaceDef_Perfect_Hash_OpTable tao_CORBA_InterfaceDef_optable;
-
-#if (TAO_HAS_INTERCEPTORS == 1)
-#endif /* TAO_HAS_INTERCEPTORS */
-
-///////////////////////////////////////////////////////////////////////
-//            Strategized Proxy Broker Implementation
-//
-
-// Factory function Implementation.
-POA_CORBA::_TAO_InterfaceDef_Strategized_Proxy_Broker *POA_CORBA::_TAO_InterfaceDef_Strategized_Proxy_Broker::the_TAO_InterfaceDef_Strategized_Proxy_Broker (void)
-{
-  static POA_CORBA::_TAO_InterfaceDef_Strategized_Proxy_Broker strategized_proxy_broker;
-  return &strategized_proxy_broker;
-}
-
-POA_CORBA::_TAO_InterfaceDef_Strategized_Proxy_Broker::_TAO_InterfaceDef_Strategized_Proxy_Broker (void)
-{
-  for (int i = 0; i < TAO_Collocation_Strategies::CS_LAST; ++i)
-    this->proxy_cache_[i] = 0;
-  
-}
-
-POA_CORBA::_TAO_InterfaceDef_Strategized_Proxy_Broker::~_TAO_InterfaceDef_Strategized_Proxy_Broker (void)
-{
-  for (int i = 0; i < TAO_Collocation_Strategies::CS_LAST; ++i)
-    delete this->proxy_cache_[i];
-  
-}
-
-CORBA::_TAO_InterfaceDef_Proxy_Impl&
-POA_CORBA::_TAO_InterfaceDef_Strategized_Proxy_Broker::select_proxy (
-    ::CORBA::InterfaceDef *object,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  int strategy =
-    TAO_ORB_Core::collocation_strategy (object);
-  
-  if (this->proxy_cache_[strategy] != 0)
-    return *this->proxy_cache_[strategy];
-  
-  this->create_proxy (strategy, ACE_TRY_ENV);
-  ACE_CHECK_RETURN (*this->proxy_cache_[strategy]);
-  
-  return *this->proxy_cache_[strategy];
-  
-}
-
-void 
-POA_CORBA::_TAO_InterfaceDef_Strategized_Proxy_Broker::create_proxy (
-    int strategy,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  ACE_GUARD (TAO_SYNCH_MUTEX, guard, this->mutex_);
-  
-  if (this->proxy_cache_[strategy] == 0)
-    {
-      switch (strategy)
-        {
-        case TAO_Collocation_Strategies::CS_THRU_POA_STRATEGY:
-          ACE_NEW_THROW_EX (
-              this->proxy_cache_[strategy],
-              POA_CORBA::_TAO_InterfaceDef_ThruPOA_Proxy_Impl,
-              CORBA::NO_MEMORY ()
-          );
-          ACE_CHECK;
-          break;
-          
-        case TAO_Collocation_Strategies::CS_DIRECT_STRATEGY:
-          ACE_NEW_THROW_EX (
-              this->proxy_cache_[strategy],
-              POA_CORBA::_TAO_InterfaceDef_Direct_Proxy_Impl,
-              CORBA::NO_MEMORY ()
-          );
-          ACE_CHECK;
-          break;
-          
-        case TAO_Collocation_Strategies::CS_REMOTE_STRATEGY:
-        default:
-          ACE_NEW_THROW_EX (
-              this->proxy_cache_[strategy],
-              ::CORBA::_TAO_InterfaceDef_Remote_Proxy_Impl,
-              CORBA::NO_MEMORY ()
-          );
-          ACE_CHECK;
-          break;
-        
-      }
-    
-  }
-}
-
-
-//
-//        End Strategized Proxy Broker Implementation
-///////////////////////////////////////////////////////////////////////
-
-
-CORBA::_TAO_InterfaceDef_Proxy_Broker *
-CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_function (CORBA::Object_ptr obj)
-{
-  ACE_UNUSED_ARG (obj);
-  return ::POA_CORBA::_TAO_InterfaceDef_Strategized_Proxy_Broker::the_TAO_InterfaceDef_Strategized_Proxy_Broker();
-}
-
-int
-CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_Initializer (long _dummy_)
-{
-  ACE_UNUSED_ARG (_dummy_);
-  
-  CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer = 
-    CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_function;
-  
-  return 0;
-}
-
-static int CORBA__TAO_InterfaceDef_Proxy_Broker_Stub_Factory_Initializer_Scarecrow = 
-  CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_Initializer (ACE_reinterpret_cast (long, CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_Initializer));
-
-
-///////////////////////////////////////////////////////////////////////
-//                 ThruPOA Proxy  Implementation
-//
-
-POA_CORBA::_TAO_InterfaceDef_ThruPOA_Proxy_Impl::_TAO_InterfaceDef_ThruPOA_Proxy_Impl (void)
-{}
-
-// ThruPOA Implementation of the IDL interface methods
-
-//
-//           End ThruPOA Proxy Implementation
-///////////////////////////////////////////////////////////////////////
-
-
-///////////////////////////////////////////////////////////////////////
-//                 Direct Proxy  Implementation
-//
-
-POA_CORBA::_TAO_InterfaceDef_Direct_Proxy_Impl::_TAO_InterfaceDef_Direct_Proxy_Impl (void)
-{}
-
-
-//
-//           End Direct Proxy Implementation
-///////////////////////////////////////////////////////////////////////
-// skeleton constructor
-POA_CORBA::InterfaceDef::InterfaceDef (void)
-{
-  this->optable_ = &tao_CORBA_InterfaceDef_optable;
-}
-
-// copy ctor
-POA_CORBA::InterfaceDef::InterfaceDef (const InterfaceDef& rhs)
-  :   TAO_ServantBase (rhs)
-{}
-
-// skeleton destructor
-POA_CORBA::InterfaceDef::~InterfaceDef (void)
-{
-}
-
-void POA_CORBA::InterfaceDef::_is_a_skel (
-    TAO_ServerRequest &_tao_server_request, 
-    void * _tao_object_reference,
-    void * /* context */,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  TAO_InputCDR &_tao_in = _tao_server_request.incoming ();
-  POA_CORBA::InterfaceDef *_tao_impl = (POA_CORBA::InterfaceDef *) _tao_object_reference;
-  CORBA::Boolean _tao_retval = 0;
-  CORBA::String_var value;
-  if (!(_tao_in >> value.out ()))
-    ACE_THROW (CORBA::MARSHAL ());
-  
-  _tao_retval = _tao_impl->_is_a (value.in (), ACE_TRY_ENV);
-  ACE_CHECK;
-  
-  _tao_server_request.init_reply ();
-  TAO_OutputCDR &_tao_out = _tao_server_request.outgoing ();
-  if (!(_tao_out << CORBA::Any::from_boolean (_tao_retval)))
-    ACE_THROW (CORBA::MARSHAL ());
-}
-
-void POA_CORBA::InterfaceDef::_non_existent_skel (
-    TAO_ServerRequest &_tao_server_request, 
-    void * _tao_object_reference,
-    void * /* context */,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  POA_CORBA::InterfaceDef *_tao_impl = (POA_CORBA::InterfaceDef *) _tao_object_reference;
-  CORBA::Boolean _tao_retval = _tao_impl->_non_existent (ACE_TRY_ENV);
-  ACE_CHECK;
-  
-  _tao_server_request.init_reply ();
-  TAO_OutputCDR &_tao_out = _tao_server_request.outgoing ();
-  if (!(_tao_out << CORBA::Any::from_boolean (_tao_retval)))
-    ACE_THROW (CORBA::MARSHAL ());
-}
-
-void POA_CORBA::InterfaceDef::_interface_skel (
-    TAO_ServerRequest &_tao_server_request, 
-    void * _tao_object_reference,
-    void * /* context */,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  POA_CORBA::InterfaceDef *_tao_impl = (POA_CORBA::InterfaceDef *) _tao_object_reference;
-  CORBA_InterfaceDef_ptr _tao_retval = 0;
-  CORBA::Boolean _tao_result = 0;
-  
-  TAO_IFR_Client_Adapter *_tao_adapter =
-    ACE_Dynamic_Service<TAO_IFR_Client_Adapter>::instance (
-        TAO_ORB_Core::ifr_client_adapter_name ()
-      );
-    
-  if (_tao_adapter == 0)
-    {
-      ACE_THROW (CORBA::INTF_REPOS ());
-    }
-  
-  ACE_TRY
-    {
-      _tao_retval = _tao_impl->_get_interface (ACE_TRY_ENV);
-      ACE_TRY_CHECK;
-      
-      _tao_server_request.init_reply ();
-      
-      TAO_OutputCDR &_tao_out = _tao_server_request.outgoing ();
-      
-      _tao_result =
-        _tao_adapter->interfacedef_cdr_insert (
-            _tao_out,
-            _tao_retval
-          );
-    }
-  ACE_CATCHALL
-    {
-      _tao_adapter->dispose (_tao_retval);
-    }
-  ACE_ENDTRY;
-  
-  if (_tao_result == 0)
-    {
-      ACE_THROW (CORBA::MARSHAL ());
-    }
-}
-
-CORBA::Boolean POA_CORBA::InterfaceDef::_is_a (
-    const char* value,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  const char *base_id = CORBA::_tc_Object->id (ACE_TRY_ENV);
-  ACE_CHECK_RETURN (0);
-  
-  if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:CORBA/InterfaceDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, base_id)))
-      return 1;
-    else
-      return 0;
-}
-
-void* POA_CORBA::InterfaceDef::_downcast (
-    const char* logical_type_id
-  )
-{
-  if (ACE_OS::strcmp (logical_type_id, "IDL:CORBA/InterfaceDef:1.0") == 0)
-    return ACE_static_cast (POA_CORBA::InterfaceDef_ptr, this);
-  if (ACE_OS::strcmp (logical_type_id, "IDL:omg.org/CORBA/Object:1.0") == 0)
-    return ACE_static_cast(PortableServer::Servant, this);
-  return 0;
-}
-
-void POA_CORBA::InterfaceDef::_dispatch (TAO_ServerRequest &req, void *context, CORBA::Environment &ACE_TRY_ENV)
-{
-  this->synchronous_upcall_dispatch(req, context, this, ACE_TRY_ENV);
-}
-
-const char* POA_CORBA::InterfaceDef::_interface_repository_id (void) const
-{
-  return "IDL:CORBA/InterfaceDef:1.0";
-}
-
-CORBA::InterfaceDef*
-POA_CORBA::InterfaceDef::_this (CORBA_Environment &ACE_TRY_ENV)
-{
-  TAO_Stub *stub = this->_create_stub (ACE_TRY_ENV);
-  ACE_CHECK_RETURN (0);
-  
-  CORBA::Object_ptr tmp = CORBA::Object::_nil ();
-  
-  if (stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects ())
-    ACE_NEW_RETURN (tmp, CORBA::Object (stub, 1, this), 0);
-  else
-    ACE_NEW_RETURN (tmp, CORBA::Object (stub, 0, this), 0);
-  
-  CORBA::Object_var obj = tmp;
-  return ::CORBA::InterfaceDef::_unchecked_narrow (obj.in ());
-}
-
-
 class TAO_CORBA_DomainManager_Perfect_Hash_OpTable : public TAO_Perfect_Hash_OpTable
 {
 private:
@@ -1318,9 +913,17 @@
   
   Dynamic::ParameterList_var safe_parameter_list = parameter_list;
     
+  TAO_IFR_Client_Adapter *adapter =
+    ACE_Dynamic_Service<TAO_IFR_Client_Adapter>::instance (
+        TAO_ORB_Core::ifr_client_adapter_name ()
+      );
+
   CORBA::ULong length_object_type = parameter_list->length ();
   parameter_list->length (length_object_type + 1);
-  (*parameter_list)[length_object_type].argument <<=  this->object_type_;
+  adapter->interfacedef_any_insert (
+      (*parameter_list)[length_object_type].argument,
+      this->object_type_
+    );
   
   (*parameter_list)[length_object_type].mode = Dynamic::PARAM_IN;
     
@@ -1582,7 +1185,7 @@
 
 // copy ctor
 POA_CORBA_ConstructionPolicy::POA_CORBA_ConstructionPolicy (const POA_CORBA_ConstructionPolicy& rhs)
-  :   ACE_NESTED_CLASS (POA_CORBA,Policy) (rhs),
+  :   POA_CORBA_Policy (rhs),
     TAO_ServantBase (rhs)
 {}
 
@@ -1786,7 +1389,7 @@
   if (ACE_OS::strcmp (logical_type_id, "IDL:CORBA_ConstructionPolicy:1.0") == 0)
     return ACE_static_cast (POA_CORBA_ConstructionPolicy_ptr, this);
   if (ACE_OS::strcmp (logical_type_id, "IDL:omg.org/CORBA/Policy:1.0") == 0)
-    return ACE_static_cast (POA_CORBA::Policy_ptr, this);
+    return ACE_static_cast (POA_CORBA_Policy_ptr, this);
   if (ACE_OS::strcmp (logical_type_id, "IDL:omg.org/CORBA/Object:1.0") == 0)
     return ACE_static_cast(PortableServer::Servant, this);
   return 0;
