// $Id$
project : orbsvcsexe, portableserver, exceptions {
  exename   = combined_service
  source_files {
    combined.cpp
    service_configC.cpp
    service_configS.cpp
  }
  idl_files {
    service_config.idl
  }
}

project(*Controller) : orbsvcsexe, exceptions {
  exename   = controller
  source_files {
    controller.cpp
    service_configC.cpp
  }
  idl_files {
    service_config.idl
  }
}

// A client that uses corba to test out basic imr functionality
project(*Test) : orbsvcsexe, exceptions {
  source_files {
    test.cpp
    testC.cpp
  }
  idl_files {
    test.idl
  }
}

// A server to use with the imr
// The gnuace specific portion is to prevent the test.idl from being compiled
// multiple times and causing invalid object files to be created.
project(*TestServer) : orbsvcsexe, portableserver, iortable, exceptions {
  specific(gnuace) {
    after += *Test
  }
  source_files {
    test_server.cpp
    testC.cpp
    testS.cpp
  }
  idl_files {
    test.idl
  }
}

// Another simple server that can be loaded dynamically into the
// combined_service.
// The gnuace specific portion is to prevent the test.idl from being compiled
// multiple times and causing invalid object files to be created.
project(*DynamicServer) : taolib_with_idl, portableserver, iortable, exceptions {
  dynamicflags = DYNSERVER_BUILD_DLL
  sharedname   = DynServer
  specific(gnuace) {
    after += *TestServer
  }
  idl_files {
    test.idl
  }
  source_files {
    testC.cpp
    testS.cpp
    dynserver.cpp
  }
  header_files {
    dynserver.h
    dynserver_export.h
  }
}
