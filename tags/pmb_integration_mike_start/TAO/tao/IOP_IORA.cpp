// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

#include "IOP_IORC.h"
#include "tao/Typecode.h"
#include "tao/Any_Dual_Impl_T.h"

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_IOP_ProfileId[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  30,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x494f502f),
  ACE_NTOHL (0x50726f66),
  ACE_NTOHL (0x696c6549),
  ACE_NTOHL (0x643a312e),
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IOP/ProfileId:1.0
    10,
  ACE_NTOHL (0x50726f66),
  ACE_NTOHL (0x696c6549),
  ACE_NTOHL (0x64000000),  // name = ProfileId
    CORBA::tk_ulong,

};

static CORBA::TypeCode _tc_TAO_tc_IOP_ProfileId (
    CORBA::tk_alias,
    sizeof (_oc_IOP_ProfileId),
    (char *) &_oc_IOP_ProfileId,
    0,
    sizeof (IOP::ProfileId)
  );

namespace IOP
{
  ::CORBA::TypeCode_ptr _tc_ProfileId =
    &_tc_TAO_tc_IOP_ProfileId;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_IOP_TaggedProfile[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  34,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x494f502f),
  ACE_NTOHL (0x54616767),
  ACE_NTOHL (0x65645072),
  ACE_NTOHL (0x6f66696c),
  ACE_NTOHL (0x653a312e),
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IOP/TaggedProfile:1.0
    14,
  ACE_NTOHL (0x54616767),
  ACE_NTOHL (0x65645072),
  ACE_NTOHL (0x6f66696c),
  ACE_NTOHL (0x65000000),  // name = TaggedProfile
  2, // member count
    4,
  ACE_NTOHL (0x74616700),  // name = tag
    CORBA::tk_alias, // typecode kind for typedefs
  60, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    30,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x494f502f),
    ACE_NTOHL (0x50726f66),
    ACE_NTOHL (0x696c6549),
    ACE_NTOHL (0x643a312e),
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IOP/ProfileId:1.0
        10,
    ACE_NTOHL (0x50726f66),
    ACE_NTOHL (0x696c6549),
    ACE_NTOHL (0x64000000),  // name = ProfileId
        CORBA::tk_ulong,


  13,
  ACE_NTOHL (0x70726f66),
  ACE_NTOHL (0x696c655f),
  ACE_NTOHL (0x64617461),
  ACE_NTOHL (0x0),  // name = profile_data
    CORBA::tk_alias, // typecode kind for typedefs
  76, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    31,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4f63),
    ACE_NTOHL (0x74657453),
    ACE_NTOHL (0x65713a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OctetSeq:1.0
        9,
    ACE_NTOHL (0x4f637465),
    ACE_NTOHL (0x74536571),
    ACE_NTOHL (0x0),  // name = OctetSeq
        CORBA::tk_sequence, // typecode kind
    12, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      CORBA::tk_octet,

      0U,


};

static CORBA::TypeCode _tc_TAO_tc_IOP_TaggedProfile (
    CORBA::tk_struct,
    sizeof (_oc_IOP_TaggedProfile),
    (char *) &_oc_IOP_TaggedProfile,
    0,
    sizeof (IOP::TaggedProfile)
  );

namespace IOP
{
  ::CORBA::TypeCode_ptr _tc_TaggedProfile =
    &_tc_TAO_tc_IOP_TaggedProfile;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_IOP_TaggedProfileSeq[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  37,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x494f502f),
  ACE_NTOHL (0x54616767),
  ACE_NTOHL (0x65645072),
  ACE_NTOHL (0x6f66696c),
  ACE_NTOHL (0x65536571),
  ACE_NTOHL (0x3a312e30),
  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IOP/TaggedProfileSeq:1.0
    17,
  ACE_NTOHL (0x54616767),
  ACE_NTOHL (0x65645072),
  ACE_NTOHL (0x6f66696c),
  ACE_NTOHL (0x65536571),
  ACE_NTOHL (0x0),  // name = TaggedProfileSeq
    CORBA::tk_sequence, // typecode kind
  264, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    CORBA::tk_struct, // typecode kind
    248, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      34,
      ACE_NTOHL (0x49444c3a),
      ACE_NTOHL (0x6f6d672e),
      ACE_NTOHL (0x6f72672f),
      ACE_NTOHL (0x494f502f),
      ACE_NTOHL (0x54616767),
      ACE_NTOHL (0x65645072),
      ACE_NTOHL (0x6f66696c),
      ACE_NTOHL (0x653a312e),
      ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IOP/TaggedProfile:1.0
            14,
      ACE_NTOHL (0x54616767),
      ACE_NTOHL (0x65645072),
      ACE_NTOHL (0x6f66696c),
      ACE_NTOHL (0x65000000),  // name = TaggedProfile
      2, // member count
            4,
      ACE_NTOHL (0x74616700),  // name = tag
            CORBA::tk_alias, // typecode kind for typedefs
      60, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        30,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x494f502f),
        ACE_NTOHL (0x50726f66),
        ACE_NTOHL (0x696c6549),
        ACE_NTOHL (0x643a312e),
        ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IOP/ProfileId:1.0
                10,
        ACE_NTOHL (0x50726f66),
        ACE_NTOHL (0x696c6549),
        ACE_NTOHL (0x64000000),  // name = ProfileId
                CORBA::tk_ulong,


      13,
      ACE_NTOHL (0x70726f66),
      ACE_NTOHL (0x696c655f),
      ACE_NTOHL (0x64617461),
      ACE_NTOHL (0x0),  // name = profile_data
            CORBA::tk_alias, // typecode kind for typedefs
      76, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        31,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4f63),
        ACE_NTOHL (0x74657453),
        ACE_NTOHL (0x65713a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OctetSeq:1.0
                9,
        ACE_NTOHL (0x4f637465),
        ACE_NTOHL (0x74536571),
        ACE_NTOHL (0x0),  // name = OctetSeq
                CORBA::tk_sequence, // typecode kind
        12, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          CORBA::tk_octet,

          0U,



    0U,

};

static CORBA::TypeCode _tc_TAO_tc_IOP_TaggedProfileSeq (
    CORBA::tk_alias,
    sizeof (_oc_IOP_TaggedProfileSeq),
    (char *) &_oc_IOP_TaggedProfileSeq,
    0,
    sizeof (IOP::TaggedProfileSeq)
  );

namespace IOP
{
  ::CORBA::TypeCode_ptr _tc_TaggedProfileSeq =
    &_tc_TAO_tc_IOP_TaggedProfileSeq;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_IOP_IOR[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  24,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x494f502f),
  ACE_NTOHL (0x494f523a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IOP/IOR:1.0
    4,
  ACE_NTOHL (0x494f5200),  // name = IOR
  2, // member count
    8,
  ACE_NTOHL (0x74797065),
  ACE_NTOHL (0x5f696400),  // name = type_id
    CORBA::tk_string,
  0U, // string length
  9,
  ACE_NTOHL (0x70726f66),
  ACE_NTOHL (0x696c6573),
  ACE_NTOHL (0x0),  // name = profiles
    CORBA::tk_alias, // typecode kind for typedefs
  344, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    37,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x494f502f),
    ACE_NTOHL (0x54616767),
    ACE_NTOHL (0x65645072),
    ACE_NTOHL (0x6f66696c),
    ACE_NTOHL (0x65536571),
    ACE_NTOHL (0x3a312e30),
    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IOP/TaggedProfileSeq:1.0
        17,
    ACE_NTOHL (0x54616767),
    ACE_NTOHL (0x65645072),
    ACE_NTOHL (0x6f66696c),
    ACE_NTOHL (0x65536571),
    ACE_NTOHL (0x0),  // name = TaggedProfileSeq
        CORBA::tk_sequence, // typecode kind
    264, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      CORBA::tk_struct, // typecode kind
      248, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        34,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x494f502f),
        ACE_NTOHL (0x54616767),
        ACE_NTOHL (0x65645072),
        ACE_NTOHL (0x6f66696c),
        ACE_NTOHL (0x653a312e),
        ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IOP/TaggedProfile:1.0
                14,
        ACE_NTOHL (0x54616767),
        ACE_NTOHL (0x65645072),
        ACE_NTOHL (0x6f66696c),
        ACE_NTOHL (0x65000000),  // name = TaggedProfile
        2, // member count
                4,
        ACE_NTOHL (0x74616700),  // name = tag
                CORBA::tk_alias, // typecode kind for typedefs
        60, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          30,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x494f502f),
          ACE_NTOHL (0x50726f66),
          ACE_NTOHL (0x696c6549),
          ACE_NTOHL (0x643a312e),
          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IOP/ProfileId:1.0
                    10,
          ACE_NTOHL (0x50726f66),
          ACE_NTOHL (0x696c6549),
          ACE_NTOHL (0x64000000),  // name = ProfileId
                    CORBA::tk_ulong,


        13,
        ACE_NTOHL (0x70726f66),
        ACE_NTOHL (0x696c655f),
        ACE_NTOHL (0x64617461),
        ACE_NTOHL (0x0),  // name = profile_data
                CORBA::tk_alias, // typecode kind for typedefs
        76, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          31,
          ACE_NTOHL (0x49444c3a),
          ACE_NTOHL (0x6f6d672e),
          ACE_NTOHL (0x6f72672f),
          ACE_NTOHL (0x434f5242),
          ACE_NTOHL (0x412f4f63),
          ACE_NTOHL (0x74657453),
          ACE_NTOHL (0x65713a31),
          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OctetSeq:1.0
                    9,
          ACE_NTOHL (0x4f637465),
          ACE_NTOHL (0x74536571),
          ACE_NTOHL (0x0),  // name = OctetSeq
                    CORBA::tk_sequence, // typecode kind
          12, // encapsulation length
            TAO_ENCAP_BYTE_ORDER, // byte order
            CORBA::tk_octet,

            0U,



      0U,


};

static CORBA::TypeCode _tc_TAO_tc_IOP_IOR (
    CORBA::tk_struct,
    sizeof (_oc_IOP_IOR),
    (char *) &_oc_IOP_IOR,
    0,
    sizeof (IOP::IOR)
  );

namespace IOP
{
  ::CORBA::TypeCode_ptr _tc_IOR =
    &_tc_TAO_tc_IOP_IOR;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_IOP_ComponentId[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  32,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x494f502f),
  ACE_NTOHL (0x436f6d70),
  ACE_NTOHL (0x6f6e656e),
  ACE_NTOHL (0x7449643a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IOP/ComponentId:1.0
    12,
  ACE_NTOHL (0x436f6d70),
  ACE_NTOHL (0x6f6e656e),
  ACE_NTOHL (0x74496400),  // name = ComponentId
    CORBA::tk_ulong,

};

static CORBA::TypeCode _tc_TAO_tc_IOP_ComponentId (
    CORBA::tk_alias,
    sizeof (_oc_IOP_ComponentId),
    (char *) &_oc_IOP_ComponentId,
    0,
    sizeof (IOP::ComponentId)
  );

namespace IOP
{
  ::CORBA::TypeCode_ptr _tc_ComponentId =
    &_tc_TAO_tc_IOP_ComponentId;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_IOP_TaggedComponent[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  36,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x494f502f),
  ACE_NTOHL (0x54616767),
  ACE_NTOHL (0x6564436f),
  ACE_NTOHL (0x6d706f6e),
  ACE_NTOHL (0x656e743a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IOP/TaggedComponent:1.0
    16,
  ACE_NTOHL (0x54616767),
  ACE_NTOHL (0x6564436f),
  ACE_NTOHL (0x6d706f6e),
  ACE_NTOHL (0x656e7400),  // name = TaggedComponent
  2, // member count
    4,
  ACE_NTOHL (0x74616700),  // name = tag
    CORBA::tk_alias, // typecode kind for typedefs
  60, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    32,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x494f502f),
    ACE_NTOHL (0x436f6d70),
    ACE_NTOHL (0x6f6e656e),
    ACE_NTOHL (0x7449643a),
    ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IOP/ComponentId:1.0
        12,
    ACE_NTOHL (0x436f6d70),
    ACE_NTOHL (0x6f6e656e),
    ACE_NTOHL (0x74496400),  // name = ComponentId
        CORBA::tk_ulong,


  15,
  ACE_NTOHL (0x636f6d70),
  ACE_NTOHL (0x6f6e656e),
  ACE_NTOHL (0x745f6461),
  ACE_NTOHL (0x74610000),  // name = component_data
    CORBA::tk_alias, // typecode kind for typedefs
  76, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    31,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4f63),
    ACE_NTOHL (0x74657453),
    ACE_NTOHL (0x65713a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OctetSeq:1.0
        9,
    ACE_NTOHL (0x4f637465),
    ACE_NTOHL (0x74536571),
    ACE_NTOHL (0x0),  // name = OctetSeq
        CORBA::tk_sequence, // typecode kind
    12, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      CORBA::tk_octet,

      0U,


};

static CORBA::TypeCode _tc_TAO_tc_IOP_TaggedComponent (
    CORBA::tk_struct,
    sizeof (_oc_IOP_TaggedComponent),
    (char *) &_oc_IOP_TaggedComponent,
    0,
    sizeof (IOP::TaggedComponent)
  );

namespace IOP
{
  ::CORBA::TypeCode_ptr _tc_TaggedComponent =
    &_tc_TAO_tc_IOP_TaggedComponent;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_IOP_MultipleComponentProfile[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  45,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x494f502f),
  ACE_NTOHL (0x4d756c74),
  ACE_NTOHL (0x69706c65),
  ACE_NTOHL (0x436f6d70),
  ACE_NTOHL (0x6f6e656e),
  ACE_NTOHL (0x7450726f),
  ACE_NTOHL (0x66696c65),
  ACE_NTOHL (0x3a312e30),
  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IOP/MultipleComponentProfile:1.0
    25,
  ACE_NTOHL (0x4d756c74),
  ACE_NTOHL (0x69706c65),
  ACE_NTOHL (0x436f6d70),
  ACE_NTOHL (0x6f6e656e),
  ACE_NTOHL (0x7450726f),
  ACE_NTOHL (0x66696c65),
  ACE_NTOHL (0x0),  // name = MultipleComponentProfile
    CORBA::tk_sequence, // typecode kind
  264, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    CORBA::tk_struct, // typecode kind
    248, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      36,
      ACE_NTOHL (0x49444c3a),
      ACE_NTOHL (0x6f6d672e),
      ACE_NTOHL (0x6f72672f),
      ACE_NTOHL (0x494f502f),
      ACE_NTOHL (0x54616767),
      ACE_NTOHL (0x6564436f),
      ACE_NTOHL (0x6d706f6e),
      ACE_NTOHL (0x656e743a),
      ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IOP/TaggedComponent:1.0
            16,
      ACE_NTOHL (0x54616767),
      ACE_NTOHL (0x6564436f),
      ACE_NTOHL (0x6d706f6e),
      ACE_NTOHL (0x656e7400),  // name = TaggedComponent
      2, // member count
            4,
      ACE_NTOHL (0x74616700),  // name = tag
            CORBA::tk_alias, // typecode kind for typedefs
      60, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        32,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x494f502f),
        ACE_NTOHL (0x436f6d70),
        ACE_NTOHL (0x6f6e656e),
        ACE_NTOHL (0x7449643a),
        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IOP/ComponentId:1.0
                12,
        ACE_NTOHL (0x436f6d70),
        ACE_NTOHL (0x6f6e656e),
        ACE_NTOHL (0x74496400),  // name = ComponentId
                CORBA::tk_ulong,


      15,
      ACE_NTOHL (0x636f6d70),
      ACE_NTOHL (0x6f6e656e),
      ACE_NTOHL (0x745f6461),
      ACE_NTOHL (0x74610000),  // name = component_data
            CORBA::tk_alias, // typecode kind for typedefs
      76, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        31,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4f63),
        ACE_NTOHL (0x74657453),
        ACE_NTOHL (0x65713a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OctetSeq:1.0
                9,
        ACE_NTOHL (0x4f637465),
        ACE_NTOHL (0x74536571),
        ACE_NTOHL (0x0),  // name = OctetSeq
                CORBA::tk_sequence, // typecode kind
        12, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          CORBA::tk_octet,

          0U,



    0U,

};

static CORBA::TypeCode _tc_TAO_tc_IOP_MultipleComponentProfile (
    CORBA::tk_alias,
    sizeof (_oc_IOP_MultipleComponentProfile),
    (char *) &_oc_IOP_MultipleComponentProfile,
    0,
    sizeof (IOP::MultipleComponentProfile)
  );

namespace IOP
{
  ::CORBA::TypeCode_ptr _tc_MultipleComponentProfile =
    &_tc_TAO_tc_IOP_MultipleComponentProfile;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_IOP_TaggedComponentList[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  40,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x494f502f),
  ACE_NTOHL (0x54616767),
  ACE_NTOHL (0x6564436f),
  ACE_NTOHL (0x6d706f6e),
  ACE_NTOHL (0x656e744c),
  ACE_NTOHL (0x6973743a),
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IOP/TaggedComponentList:1.0
    20,
  ACE_NTOHL (0x54616767),
  ACE_NTOHL (0x6564436f),
  ACE_NTOHL (0x6d706f6e),
  ACE_NTOHL (0x656e744c),
  ACE_NTOHL (0x69737400),  // name = TaggedComponentList
    CORBA::tk_sequence, // typecode kind
  264, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    CORBA::tk_struct, // typecode kind
    248, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      36,
      ACE_NTOHL (0x49444c3a),
      ACE_NTOHL (0x6f6d672e),
      ACE_NTOHL (0x6f72672f),
      ACE_NTOHL (0x494f502f),
      ACE_NTOHL (0x54616767),
      ACE_NTOHL (0x6564436f),
      ACE_NTOHL (0x6d706f6e),
      ACE_NTOHL (0x656e743a),
      ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IOP/TaggedComponent:1.0
            16,
      ACE_NTOHL (0x54616767),
      ACE_NTOHL (0x6564436f),
      ACE_NTOHL (0x6d706f6e),
      ACE_NTOHL (0x656e7400),  // name = TaggedComponent
      2, // member count
            4,
      ACE_NTOHL (0x74616700),  // name = tag
            CORBA::tk_alias, // typecode kind for typedefs
      60, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        32,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x494f502f),
        ACE_NTOHL (0x436f6d70),
        ACE_NTOHL (0x6f6e656e),
        ACE_NTOHL (0x7449643a),
        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IOP/ComponentId:1.0
                12,
        ACE_NTOHL (0x436f6d70),
        ACE_NTOHL (0x6f6e656e),
        ACE_NTOHL (0x74496400),  // name = ComponentId
                CORBA::tk_ulong,


      15,
      ACE_NTOHL (0x636f6d70),
      ACE_NTOHL (0x6f6e656e),
      ACE_NTOHL (0x745f6461),
      ACE_NTOHL (0x74610000),  // name = component_data
            CORBA::tk_alias, // typecode kind for typedefs
      76, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        31,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4f63),
        ACE_NTOHL (0x74657453),
        ACE_NTOHL (0x65713a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OctetSeq:1.0
                9,
        ACE_NTOHL (0x4f637465),
        ACE_NTOHL (0x74536571),
        ACE_NTOHL (0x0),  // name = OctetSeq
                CORBA::tk_sequence, // typecode kind
        12, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          CORBA::tk_octet,

          0U,



    0U,

};

static CORBA::TypeCode _tc_TAO_tc_IOP_TaggedComponentList (
    CORBA::tk_alias,
    sizeof (_oc_IOP_TaggedComponentList),
    (char *) &_oc_IOP_TaggedComponentList,
    0,
    sizeof (IOP::TaggedComponentList)
  );

namespace IOP
{
  ::CORBA::TypeCode_ptr _tc_TaggedComponentList =
    &_tc_TAO_tc_IOP_TaggedComponentList;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_IOP_TaggedComponentSeq[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  39,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x494f502f),
  ACE_NTOHL (0x54616767),
  ACE_NTOHL (0x6564436f),
  ACE_NTOHL (0x6d706f6e),
  ACE_NTOHL (0x656e7453),
  ACE_NTOHL (0x65713a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IOP/TaggedComponentSeq:1.0
    19,
  ACE_NTOHL (0x54616767),
  ACE_NTOHL (0x6564436f),
  ACE_NTOHL (0x6d706f6e),
  ACE_NTOHL (0x656e7453),
  ACE_NTOHL (0x65710000),  // name = TaggedComponentSeq
    CORBA::tk_sequence, // typecode kind
  264, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    CORBA::tk_struct, // typecode kind
    248, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      36,
      ACE_NTOHL (0x49444c3a),
      ACE_NTOHL (0x6f6d672e),
      ACE_NTOHL (0x6f72672f),
      ACE_NTOHL (0x494f502f),
      ACE_NTOHL (0x54616767),
      ACE_NTOHL (0x6564436f),
      ACE_NTOHL (0x6d706f6e),
      ACE_NTOHL (0x656e743a),
      ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IOP/TaggedComponent:1.0
            16,
      ACE_NTOHL (0x54616767),
      ACE_NTOHL (0x6564436f),
      ACE_NTOHL (0x6d706f6e),
      ACE_NTOHL (0x656e7400),  // name = TaggedComponent
      2, // member count
            4,
      ACE_NTOHL (0x74616700),  // name = tag
            CORBA::tk_alias, // typecode kind for typedefs
      60, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        32,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x494f502f),
        ACE_NTOHL (0x436f6d70),
        ACE_NTOHL (0x6f6e656e),
        ACE_NTOHL (0x7449643a),
        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IOP/ComponentId:1.0
                12,
        ACE_NTOHL (0x436f6d70),
        ACE_NTOHL (0x6f6e656e),
        ACE_NTOHL (0x74496400),  // name = ComponentId
                CORBA::tk_ulong,


      15,
      ACE_NTOHL (0x636f6d70),
      ACE_NTOHL (0x6f6e656e),
      ACE_NTOHL (0x745f6461),
      ACE_NTOHL (0x74610000),  // name = component_data
            CORBA::tk_alias, // typecode kind for typedefs
      76, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        31,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4f63),
        ACE_NTOHL (0x74657453),
        ACE_NTOHL (0x65713a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OctetSeq:1.0
                9,
        ACE_NTOHL (0x4f637465),
        ACE_NTOHL (0x74536571),
        ACE_NTOHL (0x0),  // name = OctetSeq
                CORBA::tk_sequence, // typecode kind
        12, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          CORBA::tk_octet,

          0U,



    0U,

};

static CORBA::TypeCode _tc_TAO_tc_IOP_TaggedComponentSeq (
    CORBA::tk_alias,
    sizeof (_oc_IOP_TaggedComponentSeq),
    (char *) &_oc_IOP_TaggedComponentSeq,
    0,
    sizeof (IOP::TaggedComponentSeq)
  );

namespace IOP
{
  ::CORBA::TypeCode_ptr _tc_TaggedComponentSeq =
    &_tc_TAO_tc_IOP_TaggedComponentSeq;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_IOP_ServiceId[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  30,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x494f502f),
  ACE_NTOHL (0x53657276),
  ACE_NTOHL (0x69636549),
  ACE_NTOHL (0x643a312e),
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IOP/ServiceId:1.0
    10,
  ACE_NTOHL (0x53657276),
  ACE_NTOHL (0x69636549),
  ACE_NTOHL (0x64000000),  // name = ServiceId
    CORBA::tk_ulong,

};

static CORBA::TypeCode _tc_TAO_tc_IOP_ServiceId (
    CORBA::tk_alias,
    sizeof (_oc_IOP_ServiceId),
    (char *) &_oc_IOP_ServiceId,
    0,
    sizeof (IOP::ServiceId)
  );

namespace IOP
{
  ::CORBA::TypeCode_ptr _tc_ServiceId =
    &_tc_TAO_tc_IOP_ServiceId;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_IOP_ServiceContext[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  35,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x494f502f),
  ACE_NTOHL (0x53657276),
  ACE_NTOHL (0x69636543),
  ACE_NTOHL (0x6f6e7465),
  ACE_NTOHL (0x78743a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IOP/ServiceContext:1.0
    15,
  ACE_NTOHL (0x53657276),
  ACE_NTOHL (0x69636543),
  ACE_NTOHL (0x6f6e7465),
  ACE_NTOHL (0x78740000),  // name = ServiceContext
  2, // member count
    11,
  ACE_NTOHL (0x636f6e74),
  ACE_NTOHL (0x6578745f),
  ACE_NTOHL (0x69640000),  // name = context_id
    CORBA::tk_alias, // typecode kind for typedefs
  60, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    30,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x494f502f),
    ACE_NTOHL (0x53657276),
    ACE_NTOHL (0x69636549),
    ACE_NTOHL (0x643a312e),
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IOP/ServiceId:1.0
        10,
    ACE_NTOHL (0x53657276),
    ACE_NTOHL (0x69636549),
    ACE_NTOHL (0x64000000),  // name = ServiceId
        CORBA::tk_ulong,


  13,
  ACE_NTOHL (0x636f6e74),
  ACE_NTOHL (0x6578745f),
  ACE_NTOHL (0x64617461),
  ACE_NTOHL (0x0),  // name = context_data
    CORBA::tk_alias, // typecode kind for typedefs
  76, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    31,
    ACE_NTOHL (0x49444c3a),
    ACE_NTOHL (0x6f6d672e),
    ACE_NTOHL (0x6f72672f),
    ACE_NTOHL (0x434f5242),
    ACE_NTOHL (0x412f4f63),
    ACE_NTOHL (0x74657453),
    ACE_NTOHL (0x65713a31),
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OctetSeq:1.0
        9,
    ACE_NTOHL (0x4f637465),
    ACE_NTOHL (0x74536571),
    ACE_NTOHL (0x0),  // name = OctetSeq
        CORBA::tk_sequence, // typecode kind
    12, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      CORBA::tk_octet,

      0U,


};

static CORBA::TypeCode _tc_TAO_tc_IOP_ServiceContext (
    CORBA::tk_struct,
    sizeof (_oc_IOP_ServiceContext),
    (char *) &_oc_IOP_ServiceContext,
    0,
    sizeof (IOP::ServiceContext)
  );

namespace IOP
{
  ::CORBA::TypeCode_ptr _tc_ServiceContext =
    &_tc_TAO_tc_IOP_ServiceContext;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:290

static const CORBA::Long _oc_IOP_ServiceContextList[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  39,
  ACE_NTOHL (0x49444c3a),
  ACE_NTOHL (0x6f6d672e),
  ACE_NTOHL (0x6f72672f),
  ACE_NTOHL (0x494f502f),
  ACE_NTOHL (0x53657276),
  ACE_NTOHL (0x69636543),
  ACE_NTOHL (0x6f6e7465),
  ACE_NTOHL (0x78744c69),
  ACE_NTOHL (0x73743a31),
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IOP/ServiceContextList:1.0
    19,
  ACE_NTOHL (0x53657276),
  ACE_NTOHL (0x69636543),
  ACE_NTOHL (0x6f6e7465),
  ACE_NTOHL (0x78744c69),
  ACE_NTOHL (0x73740000),  // name = ServiceContextList
    CORBA::tk_sequence, // typecode kind
  272, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    CORBA::tk_struct, // typecode kind
    256, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      35,
      ACE_NTOHL (0x49444c3a),
      ACE_NTOHL (0x6f6d672e),
      ACE_NTOHL (0x6f72672f),
      ACE_NTOHL (0x494f502f),
      ACE_NTOHL (0x53657276),
      ACE_NTOHL (0x69636543),
      ACE_NTOHL (0x6f6e7465),
      ACE_NTOHL (0x78743a31),
      ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IOP/ServiceContext:1.0
            15,
      ACE_NTOHL (0x53657276),
      ACE_NTOHL (0x69636543),
      ACE_NTOHL (0x6f6e7465),
      ACE_NTOHL (0x78740000),  // name = ServiceContext
      2, // member count
            11,
      ACE_NTOHL (0x636f6e74),
      ACE_NTOHL (0x6578745f),
      ACE_NTOHL (0x69640000),  // name = context_id
            CORBA::tk_alias, // typecode kind for typedefs
      60, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        30,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x494f502f),
        ACE_NTOHL (0x53657276),
        ACE_NTOHL (0x69636549),
        ACE_NTOHL (0x643a312e),
        ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IOP/ServiceId:1.0
                10,
        ACE_NTOHL (0x53657276),
        ACE_NTOHL (0x69636549),
        ACE_NTOHL (0x64000000),  // name = ServiceId
                CORBA::tk_ulong,


      13,
      ACE_NTOHL (0x636f6e74),
      ACE_NTOHL (0x6578745f),
      ACE_NTOHL (0x64617461),
      ACE_NTOHL (0x0),  // name = context_data
            CORBA::tk_alias, // typecode kind for typedefs
      76, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        31,
        ACE_NTOHL (0x49444c3a),
        ACE_NTOHL (0x6f6d672e),
        ACE_NTOHL (0x6f72672f),
        ACE_NTOHL (0x434f5242),
        ACE_NTOHL (0x412f4f63),
        ACE_NTOHL (0x74657453),
        ACE_NTOHL (0x65713a31),
        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OctetSeq:1.0
                9,
        ACE_NTOHL (0x4f637465),
        ACE_NTOHL (0x74536571),
        ACE_NTOHL (0x0),  // name = OctetSeq
                CORBA::tk_sequence, // typecode kind
        12, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          CORBA::tk_octet,

          0U,



    0U,

};

static CORBA::TypeCode _tc_TAO_tc_IOP_ServiceContextList (
    CORBA::tk_alias,
    sizeof (_oc_IOP_ServiceContextList),
    (char *) &_oc_IOP_ServiceContextList,
    0,
    sizeof (IOP::ServiceContextList)
  );

namespace IOP
{
  ::CORBA::TypeCode_ptr _tc_ServiceContextList =
    &_tc_TAO_tc_IOP_ServiceContextList;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const IOP::TaggedProfile &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<IOP::TaggedProfile>::insert_copy (
      _tao_any,
      IOP::TaggedProfile::_tao_any_destructor,
      IOP::_tc_TaggedProfile,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    IOP::TaggedProfile *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<IOP::TaggedProfile>::insert (
      _tao_any,
      IOP::TaggedProfile::_tao_any_destructor,
      IOP::_tc_TaggedProfile,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    IOP::TaggedProfile *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const IOP::TaggedProfile *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const IOP::TaggedProfile *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<IOP::TaggedProfile>::extract (
        _tao_any,
        IOP::TaggedProfile::_tao_any_destructor,
        IOP::_tc_TaggedProfile,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const IOP::TaggedProfileSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<IOP::TaggedProfileSeq>::insert_copy (
      _tao_any,
      IOP::TaggedProfileSeq::_tao_any_destructor,
      IOP::_tc_TaggedProfileSeq,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    IOP::TaggedProfileSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<IOP::TaggedProfileSeq>::insert (
      _tao_any,
      IOP::TaggedProfileSeq::_tao_any_destructor,
      IOP::_tc_TaggedProfileSeq,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    IOP::TaggedProfileSeq *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const IOP::TaggedProfileSeq *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const IOP::TaggedProfileSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<IOP::TaggedProfileSeq>::extract (
        _tao_any,
        IOP::TaggedProfileSeq::_tao_any_destructor,
        IOP::_tc_TaggedProfileSeq,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const IOP::IOR &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<IOP::IOR>::insert_copy (
      _tao_any,
      IOP::IOR::_tao_any_destructor,
      IOP::_tc_IOR,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    IOP::IOR *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<IOP::IOR>::insert (
      _tao_any,
      IOP::IOR::_tao_any_destructor,
      IOP::_tc_IOR,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    IOP::IOR *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const IOP::IOR *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const IOP::IOR *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<IOP::IOR>::extract (
        _tao_any,
        IOP::IOR::_tao_any_destructor,
        IOP::_tc_IOR,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const IOP::TaggedComponent &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<IOP::TaggedComponent>::insert_copy (
      _tao_any,
      IOP::TaggedComponent::_tao_any_destructor,
      IOP::_tc_TaggedComponent,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    IOP::TaggedComponent *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<IOP::TaggedComponent>::insert (
      _tao_any,
      IOP::TaggedComponent::_tao_any_destructor,
      IOP::_tc_TaggedComponent,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    IOP::TaggedComponent *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const IOP::TaggedComponent *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const IOP::TaggedComponent *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<IOP::TaggedComponent>::extract (
        _tao_any,
        IOP::TaggedComponent::_tao_any_destructor,
        IOP::_tc_TaggedComponent,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const IOP::MultipleComponentProfile &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<IOP::MultipleComponentProfile>::insert_copy (
      _tao_any,
      IOP::MultipleComponentProfile::_tao_any_destructor,
      IOP::_tc_MultipleComponentProfile,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    IOP::MultipleComponentProfile *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<IOP::MultipleComponentProfile>::insert (
      _tao_any,
      IOP::MultipleComponentProfile::_tao_any_destructor,
      IOP::_tc_MultipleComponentProfile,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    IOP::MultipleComponentProfile *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const IOP::MultipleComponentProfile *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const IOP::MultipleComponentProfile *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<IOP::MultipleComponentProfile>::extract (
        _tao_any,
        IOP::MultipleComponentProfile::_tao_any_destructor,
        IOP::_tc_MultipleComponentProfile,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const IOP::TaggedComponentList &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<IOP::TaggedComponentList>::insert_copy (
      _tao_any,
      IOP::TaggedComponentList::_tao_any_destructor,
      IOP::_tc_TaggedComponentList,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    IOP::TaggedComponentList *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<IOP::TaggedComponentList>::insert (
      _tao_any,
      IOP::TaggedComponentList::_tao_any_destructor,
      IOP::_tc_TaggedComponentList,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    IOP::TaggedComponentList *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const IOP::TaggedComponentList *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const IOP::TaggedComponentList *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<IOP::TaggedComponentList>::extract (
        _tao_any,
        IOP::TaggedComponentList::_tao_any_destructor,
        IOP::_tc_TaggedComponentList,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const IOP::TaggedComponentSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<IOP::TaggedComponentSeq>::insert_copy (
      _tao_any,
      IOP::TaggedComponentSeq::_tao_any_destructor,
      IOP::_tc_TaggedComponentSeq,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    IOP::TaggedComponentSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<IOP::TaggedComponentSeq>::insert (
      _tao_any,
      IOP::TaggedComponentSeq::_tao_any_destructor,
      IOP::_tc_TaggedComponentSeq,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    IOP::TaggedComponentSeq *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const IOP::TaggedComponentSeq *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const IOP::TaggedComponentSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<IOP::TaggedComponentSeq>::extract (
        _tao_any,
        IOP::TaggedComponentSeq::_tao_any_destructor,
        IOP::_tc_TaggedComponentSeq,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const IOP::ServiceContext &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<IOP::ServiceContext>::insert_copy (
      _tao_any,
      IOP::ServiceContext::_tao_any_destructor,
      IOP::_tc_ServiceContext,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    IOP::ServiceContext *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<IOP::ServiceContext>::insert (
      _tao_any,
      IOP::ServiceContext::_tao_any_destructor,
      IOP::_tc_ServiceContext,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    IOP::ServiceContext *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const IOP::ServiceContext *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const IOP::ServiceContext *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<IOP::ServiceContext>::extract (
        _tao_any,
        IOP::ServiceContext::_tao_any_destructor,
        IOP::_tc_ServiceContext,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const IOP::ServiceContextList &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<IOP::ServiceContextList>::insert_copy (
      _tao_any,
      IOP::ServiceContextList::_tao_any_destructor,
      IOP::_tc_ServiceContextList,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    IOP::ServiceContextList *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<IOP::ServiceContextList>::insert (
      _tao_any,
      IOP::ServiceContextList::_tao_any_destructor,
      IOP::_tc_ServiceContextList,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    IOP::ServiceContextList *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const IOP::ServiceContextList *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const IOP::ServiceContextList *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<IOP::ServiceContextList>::extract (
        _tao_any,
        IOP::ServiceContextList::_tao_any_destructor,
        IOP::_tc_ServiceContextList,
        _tao_elem
      );
}



#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)

  template class
    TAO::Any_Dual_Impl_T<
        IOP::TaggedProfile
      >;

  template class
    TAO::Any_Dual_Impl_T<
        IOP::TaggedProfileSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        IOP::IOR
      >;

  template class
    TAO::Any_Dual_Impl_T<
        IOP::TaggedComponent
      >;

  template class
    TAO::Any_Dual_Impl_T<
        IOP::MultipleComponentProfile
      >;

  template class
    TAO::Any_Dual_Impl_T<
        IOP::TaggedComponentList
      >;

  template class
    TAO::Any_Dual_Impl_T<
        IOP::TaggedComponentSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        IOP::ServiceContext
      >;

  template class
    TAO::Any_Dual_Impl_T<
        IOP::ServiceContextList
      >;

#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        IOP::TaggedProfile \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        IOP::TaggedProfileSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        IOP::IOR \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        IOP::TaggedComponent \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        IOP::MultipleComponentProfile \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        IOP::TaggedComponentList \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        IOP::TaggedComponentSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        IOP::ServiceContext \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        IOP::ServiceContextList \
      >

#endif /* !ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

