1c1
< /* -*- C++ -*- $Id$ */
---
> /* -*- C++ -*- $Id$ */
11,13d10
< #include "tao/Typecode.h"
< #include "tao/Any.h"
< #include  "tao/ORB.h"
18a16
> 
20,23c18,19
< TAO_IOP::EmptyProfileList::EmptyProfileList (void)
<   : CORBA_UserException ("IDL:TAO_IOP/EmptyProfileList:1.0")
< {
< }
---
> TAO_IOP::TAO_IOR_Manipulation::TAO_IOR_Manipulation (void)
> {}
25,28c21,23
< // destructor - all members are of self managing types
< TAO_IOP::EmptyProfileList::~EmptyProfileList (void)
< {
< }
---
> // destructor
> TAO_IOP::TAO_IOR_Manipulation::~TAO_IOR_Manipulation (void)
> {}
30,69c25,26
< void TAO_IOP::EmptyProfileList::_tao_any_destructor (void *x)
< {
<   EmptyProfileList *tmp = ACE_static_cast (EmptyProfileList*,x);
<   delete tmp;
< }
< 
< // copy constructor
< TAO_IOP::EmptyProfileList::EmptyProfileList (const ::TAO_IOP::EmptyProfileList &_tao_excp)
<   : CORBA_UserException (_tao_excp._id ())
< {
< }
< 
< // assignment operator
< TAO_IOP::EmptyProfileList&
< TAO_IOP::EmptyProfileList::operator= (const ::TAO_IOP::EmptyProfileList &_tao_excp)
< {
< 
<   this->CORBA_UserException::operator= (_tao_excp);
<   return *this;
< }
< 
< // narrow
< TAO_IOP::EmptyProfileList *
< TAO_IOP::EmptyProfileList::_downcast (CORBA::Exception *exc)
< {
<   if (!ACE_OS::strcmp ("IDL:TAO_IOP/EmptyProfileList:1.0", exc->_id ())) // same type
<     return ACE_dynamic_cast (EmptyProfileList *, exc);
<   else
<     return 0;
< }
< 
< 
< void TAO_IOP::EmptyProfileList::_raise ()
< {
<   TAO_RAISE(*this);
< }
< 
< 
< void TAO_IOP::EmptyProfileList::_tao_encode (
<     TAO_OutputCDR &cdr,
---
> TAO_IOP::TAO_IOR_Manipulation_ptr TAO_IOP::TAO_IOR_Manipulation::_narrow (
>     CORBA::Object_ptr obj,
71c28
<   ) const
---
>   )
73,75c30
<   if (cdr << *this)
<     return;
<   ACE_THROW (CORBA::MARSHAL ());
---
>   return TAO_IOR_Manipulation::_unchecked_narrow (obj, ACE_TRY_ENV);
78,81c33,35
< 
< void TAO_IOP::EmptyProfileList::_tao_decode (
<     TAO_InputCDR &cdr,
<     CORBA::Environment &ACE_TRY_ENV
---
> TAO_IOP::TAO_IOR_Manipulation_ptr TAO_IOP::TAO_IOR_Manipulation::_unchecked_narrow (
>     CORBA::Object_ptr obj,
>     CORBA::Environment &
84,86c38,52
<   if (cdr >> *this)
<     return;
<   ACE_THROW (CORBA::MARSHAL ());
---
>   if (CORBA::is_nil (obj))
>     return TAO_IOR_Manipulation::_nil ();
>   return
>       ACE_reinterpret_cast
>         (
>           TAO_IOR_Manipulation_ptr,
>             obj->_tao_QueryInterface
>               (
>                 ACE_reinterpret_cast
>                   (
>                     ptr_arith_t,
>                     &TAO_IOR_Manipulation::_narrow
>                   )
>               )
>         );
89,90c55,56
< // TAO extension - the _alloc method
< CORBA::Exception *TAO_IOP::EmptyProfileList::_alloc (void)
---
> TAO_IOP::TAO_IOR_Manipulation_ptr
> TAO_IOP::TAO_IOR_Manipulation::_duplicate (TAO_IOR_Manipulation_ptr obj)
92,94c58,60
<   CORBA::Exception *retval = 0;
<   ACE_NEW_RETURN (retval, ::TAO_IOP::EmptyProfileList, 0);
<   return retval;
---
>   if (!CORBA::is_nil (obj))
>     obj->_add_ref ();
>   return obj;
97,115d62
< static const CORBA::Long _oc_TAO_IOP_EmptyProfileList[] =
< {
<   TAO_ENCAP_BYTE_ORDER, // byte order
<   33, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x54414f5f), ACE_NTOHL (0x494f502f), ACE_NTOHL (0x456d7074), ACE_NTOHL (0x7950726f), ACE_NTOHL (0x66696c65), ACE_NTOHL (0x4c697374), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:TAO_IOP/EmptyProfileList:1.0
<   17, ACE_NTOHL (0x456d7074), ACE_NTOHL (0x7950726f), ACE_NTOHL (0x66696c65), ACE_NTOHL (0x4c697374), ACE_NTOHL (0x0),  // name = EmptyProfileList
<   0, // member count
< };
< static CORBA::TypeCode _tc_TAO_tc_TAO_IOP_EmptyProfileList (CORBA::tk_except, sizeof (_oc_TAO_IOP_EmptyProfileList), (char *) &_oc_TAO_IOP_EmptyProfileList, 0, sizeof (TAO_IOP::EmptyProfileList));
< TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
< TAO_NAMESPACE_BEGIN (TAO_IOP)
< TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_EmptyProfileList, &_tc_TAO_tc_TAO_IOP_EmptyProfileList)
< TAO_NAMESPACE_END
< 
< // TAO extension - the virtual _type method
< CORBA::TypeCode_ptr TAO_IOP::EmptyProfileList::_type (void) const
< {
<   return ::TAO_IOP::_tc_EmptyProfileList;
< }
< 
117,118c64
< TAO_IOP::NotFound::NotFound (void)
<   : CORBA_UserException ("IDL:TAO_IOP/NotFound:1.0")
---
> TAO_IOP::TAO_IOR_Manipulation::EmptyProfileList::EmptyProfileList (void)
123c69
< TAO_IOP::NotFound::~NotFound (void)
---
> TAO_IOP::TAO_IOR_Manipulation::EmptyProfileList::~EmptyProfileList (void)
127,132d72
< void TAO_IOP::NotFound::_tao_any_destructor (void *x)
< {
<   NotFound *tmp = ACE_static_cast (NotFound*,x);
<   delete tmp;
< }
< 
134c74
< TAO_IOP::NotFound::NotFound (const ::TAO_IOP::NotFound &_tao_excp)
---
> TAO_IOP::TAO_IOR_Manipulation::EmptyProfileList::EmptyProfileList (const ::TAO_IOP::TAO_IOR_Manipulation::EmptyProfileList &_tao_excp)
140,141c80,81
< TAO_IOP::NotFound&
< TAO_IOP::NotFound::operator= (const ::TAO_IOP::NotFound &_tao_excp)
---
> TAO_IOP::TAO_IOR_Manipulation::EmptyProfileList&
> TAO_IOP::TAO_IOR_Manipulation::EmptyProfileList::operator= (const ::TAO_IOP::TAO_IOR_Manipulation::EmptyProfileList &_tao_excp)
149,150c89,90
< TAO_IOP::NotFound *
< TAO_IOP::NotFound::_downcast (CORBA::Exception *exc)
---
> TAO_IOP::TAO_IOR_Manipulation::EmptyProfileList *
> TAO_IOP::TAO_IOR_Manipulation::EmptyProfileList::_downcast (CORBA::Exception *exc)
152,153c92,93
<   if (!ACE_OS::strcmp ("IDL:TAO_IOP/NotFound:1.0", exc->_id ())) // same type
<     return ACE_dynamic_cast (NotFound *, exc);
---
>   if (!ACE_OS::strcmp ("IDL:TAO_IOP/TAO_IOR_Manipulation/EmptyProfileList:1.0", exc->_id ())) // same type
>     return ACE_dynamic_cast (EmptyProfileList *, exc);
159c99
< void TAO_IOP::NotFound::_raise ()
---
> void TAO_IOP::TAO_IOR_Manipulation::EmptyProfileList::_raise ()
165,168c105,107
< void TAO_IOP::NotFound::_tao_encode (
<     TAO_OutputCDR &cdr,
<     CORBA::Environment &ACE_TRY_ENV
<   ) const
---
> void TAO_IOP::TAO_IOR_Manipulation::EmptyProfileList::_tao_encode (
>     TAO_OutputCDR &,
>     CORBA::Environment &ACE_TRY_ENV) const
170,171d108
<   if (cdr << *this)
<     return;
176,179c113,115
< void TAO_IOP::NotFound::_tao_decode (
<     TAO_InputCDR &cdr,
<     CORBA::Environment &ACE_TRY_ENV
<   )
---
> void TAO_IOP::TAO_IOR_Manipulation::EmptyProfileList::_tao_decode (
>     TAO_InputCDR &,
>     CORBA::Environment &ACE_TRY_ENV)
181,182d116
<   if (cdr >> *this)
<     return;
187c121
< CORBA::Exception *TAO_IOP::NotFound::_alloc (void)
---
> CORBA::Exception *TAO_IOP::TAO_IOR_Manipulation::EmptyProfileList::_alloc (void)
190c124
<   ACE_NEW_RETURN (retval, ::TAO_IOP::NotFound, 0);
---
>   ACE_NEW_RETURN (retval, ::TAO_IOP::TAO_IOR_Manipulation::EmptyProfileList, 0);
194,212d127
< static const CORBA::Long _oc_TAO_IOP_NotFound[] =
< {
<   TAO_ENCAP_BYTE_ORDER, // byte order
<   25, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x54414f5f), ACE_NTOHL (0x494f502f), ACE_NTOHL (0x4e6f7446), ACE_NTOHL (0x6f756e64), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:TAO_IOP/NotFound:1.0
<   9, ACE_NTOHL (0x4e6f7446), ACE_NTOHL (0x6f756e64), ACE_NTOHL (0x0),  // name = NotFound
<   0, // member count
< };
< static CORBA::TypeCode _tc_TAO_tc_TAO_IOP_NotFound (CORBA::tk_except, sizeof (_oc_TAO_IOP_NotFound), (char *) &_oc_TAO_IOP_NotFound, 0, sizeof (TAO_IOP::NotFound));
< TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
< TAO_NAMESPACE_BEGIN (TAO_IOP)
< TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_NotFound, &_tc_TAO_tc_TAO_IOP_NotFound)
< TAO_NAMESPACE_END
< 
< // TAO extension - the virtual _type method
< CORBA::TypeCode_ptr TAO_IOP::NotFound::_type (void) const
< {
<   return ::TAO_IOP::_tc_NotFound;
< }
< 
214,215c129
< TAO_IOP::Duplicate::Duplicate (void)
<   : CORBA_UserException ("IDL:TAO_IOP/Duplicate:1.0")
---
> TAO_IOP::TAO_IOR_Manipulation::NotFound::NotFound (void)
220c134
< TAO_IOP::Duplicate::~Duplicate (void)
---
> TAO_IOP::TAO_IOR_Manipulation::NotFound::~NotFound (void)
224,229d137
< void TAO_IOP::Duplicate::_tao_any_destructor (void *x)
< {
<   Duplicate *tmp = ACE_static_cast (Duplicate*,x);
<   delete tmp;
< }
< 
231c139
< TAO_IOP::Duplicate::Duplicate (const ::TAO_IOP::Duplicate &_tao_excp)
---
> TAO_IOP::TAO_IOR_Manipulation::NotFound::NotFound (const ::TAO_IOP::TAO_IOR_Manipulation::NotFound &_tao_excp)
237,238c145,146
< TAO_IOP::Duplicate&
< TAO_IOP::Duplicate::operator= (const ::TAO_IOP::Duplicate &_tao_excp)
---
> TAO_IOP::TAO_IOR_Manipulation::NotFound&
> TAO_IOP::TAO_IOR_Manipulation::NotFound::operator= (const ::TAO_IOP::TAO_IOR_Manipulation::NotFound &_tao_excp)
246,247c154,155
< TAO_IOP::Duplicate *
< TAO_IOP::Duplicate::_downcast (CORBA::Exception *exc)
---
> TAO_IOP::TAO_IOR_Manipulation::NotFound *
> TAO_IOP::TAO_IOR_Manipulation::NotFound::_downcast (CORBA::Exception *exc)
249,250c157,158
<   if (!ACE_OS::strcmp ("IDL:TAO_IOP/Duplicate:1.0", exc->_id ())) // same type
<     return ACE_dynamic_cast (Duplicate *, exc);
---
>   if (!ACE_OS::strcmp ("IDL:TAO_IOP/TAO_IOR_Manipulation/NotFound:1.0", exc->_id ())) // same type
>     return ACE_dynamic_cast (NotFound *, exc);
256c164
< void TAO_IOP::Duplicate::_raise ()
---
> void TAO_IOP::TAO_IOR_Manipulation::NotFound::_raise ()
262,265c170,172
< void TAO_IOP::Duplicate::_tao_encode (
<     TAO_OutputCDR &cdr,
<     CORBA::Environment &ACE_TRY_ENV
<   ) const
---
> void TAO_IOP::TAO_IOR_Manipulation::NotFound::_tao_encode (
>     TAO_OutputCDR &,
>     CORBA::Environment &ACE_TRY_ENV) const
267,268d173
<   if (cdr << *this)
<     return;
273,276c178,180
< void TAO_IOP::Duplicate::_tao_decode (
<     TAO_InputCDR &cdr,
<     CORBA::Environment &ACE_TRY_ENV
<   )
---
> void TAO_IOP::TAO_IOR_Manipulation::NotFound::_tao_decode (
>     TAO_InputCDR &,
>     CORBA::Environment &ACE_TRY_ENV)
278,279d181
<   if (cdr >> *this)
<     return;
284c186
< CORBA::Exception *TAO_IOP::Duplicate::_alloc (void)
---
> CORBA::Exception *TAO_IOP::TAO_IOR_Manipulation::NotFound::_alloc (void)
287c189
<   ACE_NEW_RETURN (retval, ::TAO_IOP::Duplicate, 0);
---
>   ACE_NEW_RETURN (retval, ::TAO_IOP::TAO_IOR_Manipulation::NotFound, 0);
291,309d192
< static const CORBA::Long _oc_TAO_IOP_Duplicate[] =
< {
<   TAO_ENCAP_BYTE_ORDER, // byte order
<   26, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x54414f5f), ACE_NTOHL (0x494f502f), ACE_NTOHL (0x4475706c), ACE_NTOHL (0x69636174), ACE_NTOHL (0x653a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:TAO_IOP/Duplicate:1.0
<   10, ACE_NTOHL (0x4475706c), ACE_NTOHL (0x69636174), ACE_NTOHL (0x65000000),  // name = Duplicate
<   0, // member count
< };
< static CORBA::TypeCode _tc_TAO_tc_TAO_IOP_Duplicate (CORBA::tk_except, sizeof (_oc_TAO_IOP_Duplicate), (char *) &_oc_TAO_IOP_Duplicate, 0, sizeof (TAO_IOP::Duplicate));
< TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
< TAO_NAMESPACE_BEGIN (TAO_IOP)
< TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_Duplicate, &_tc_TAO_tc_TAO_IOP_Duplicate)
< TAO_NAMESPACE_END
< 
< // TAO extension - the virtual _type method
< CORBA::TypeCode_ptr TAO_IOP::Duplicate::_type (void) const
< {
<   return ::TAO_IOP::_tc_Duplicate;
< }
< 
311,312c194
< TAO_IOP::Invalid_IOR::Invalid_IOR (void)
<   : CORBA_UserException ("IDL:TAO_IOP/Invalid_IOR:1.0")
---
> TAO_IOP::TAO_IOR_Manipulation::Duplicate::Duplicate (void)
317c199
< TAO_IOP::Invalid_IOR::~Invalid_IOR (void)
---
> TAO_IOP::TAO_IOR_Manipulation::Duplicate::~Duplicate (void)
321,326d202
< void TAO_IOP::Invalid_IOR::_tao_any_destructor (void *x)
< {
<   Invalid_IOR *tmp = ACE_static_cast (Invalid_IOR*,x);
<   delete tmp;
< }
< 
328c204
< TAO_IOP::Invalid_IOR::Invalid_IOR (const ::TAO_IOP::Invalid_IOR &_tao_excp)
---
> TAO_IOP::TAO_IOR_Manipulation::Duplicate::Duplicate (const ::TAO_IOP::TAO_IOR_Manipulation::Duplicate &_tao_excp)
334,335c210,211
< TAO_IOP::Invalid_IOR&
< TAO_IOP::Invalid_IOR::operator= (const ::TAO_IOP::Invalid_IOR &_tao_excp)
---
> TAO_IOP::TAO_IOR_Manipulation::Duplicate&
> TAO_IOP::TAO_IOR_Manipulation::Duplicate::operator= (const ::TAO_IOP::TAO_IOR_Manipulation::Duplicate &_tao_excp)
343,344c219,220
< TAO_IOP::Invalid_IOR *
< TAO_IOP::Invalid_IOR::_downcast (CORBA::Exception *exc)
---
> TAO_IOP::TAO_IOR_Manipulation::Duplicate *
> TAO_IOP::TAO_IOR_Manipulation::Duplicate::_downcast (CORBA::Exception *exc)
346,347c222,223
<   if (!ACE_OS::strcmp ("IDL:TAO_IOP/Invalid_IOR:1.0", exc->_id ())) // same type
<     return ACE_dynamic_cast (Invalid_IOR *, exc);
---
>   if (!ACE_OS::strcmp ("IDL:TAO_IOP/TAO_IOR_Manipulation/Duplicate:1.0", exc->_id ())) // same type
>     return ACE_dynamic_cast (Duplicate *, exc);
353c229
< void TAO_IOP::Invalid_IOR::_raise ()
---
> void TAO_IOP::TAO_IOR_Manipulation::Duplicate::_raise ()
359,362c235,237
< void TAO_IOP::Invalid_IOR::_tao_encode (
<     TAO_OutputCDR &cdr,
<     CORBA::Environment &ACE_TRY_ENV
<   ) const
---
> void TAO_IOP::TAO_IOR_Manipulation::Duplicate::_tao_encode (
>     TAO_OutputCDR &,
>     CORBA::Environment &ACE_TRY_ENV) const
364,365d238
<   if (cdr << *this)
<     return;
370,373c243,245
< void TAO_IOP::Invalid_IOR::_tao_decode (
<     TAO_InputCDR &cdr,
<     CORBA::Environment &ACE_TRY_ENV
<   )
---
> void TAO_IOP::TAO_IOR_Manipulation::Duplicate::_tao_decode (
>     TAO_InputCDR &,
>     CORBA::Environment &ACE_TRY_ENV)
375,376d246
<   if (cdr >> *this)
<     return;
381c251
< CORBA::Exception *TAO_IOP::Invalid_IOR::_alloc (void)
---
> CORBA::Exception *TAO_IOP::TAO_IOR_Manipulation::Duplicate::_alloc (void)
384c254
<   ACE_NEW_RETURN (retval, ::TAO_IOP::Invalid_IOR, 0);
---
>   ACE_NEW_RETURN (retval, ::TAO_IOP::TAO_IOR_Manipulation::Duplicate, 0);
388,406d257
< static const CORBA::Long _oc_TAO_IOP_Invalid_IOR[] =
< {
<   TAO_ENCAP_BYTE_ORDER, // byte order
<   28, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x54414f5f), ACE_NTOHL (0x494f502f), ACE_NTOHL (0x496e7661), ACE_NTOHL (0x6c69645f), ACE_NTOHL (0x494f523a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:TAO_IOP/Invalid_IOR:1.0
<   12, ACE_NTOHL (0x496e7661), ACE_NTOHL (0x6c69645f), ACE_NTOHL (0x494f5200),  // name = Invalid_IOR
<   0, // member count
< };
< static CORBA::TypeCode _tc_TAO_tc_TAO_IOP_Invalid_IOR (CORBA::tk_except, sizeof (_oc_TAO_IOP_Invalid_IOR), (char *) &_oc_TAO_IOP_Invalid_IOR, 0, sizeof (TAO_IOP::Invalid_IOR));
< TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
< TAO_NAMESPACE_BEGIN (TAO_IOP)
< TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_Invalid_IOR, &_tc_TAO_tc_TAO_IOP_Invalid_IOR)
< TAO_NAMESPACE_END
< 
< // TAO extension - the virtual _type method
< CORBA::TypeCode_ptr TAO_IOP::Invalid_IOR::_type (void) const
< {
<   return ::TAO_IOP::_tc_Invalid_IOR;
< }
< 
408,409c259
< TAO_IOP::MultiProfileList::MultiProfileList (void)
<   : CORBA_UserException ("IDL:TAO_IOP/MultiProfileList:1.0")
---
> TAO_IOP::TAO_IOR_Manipulation::Invalid_IOR::Invalid_IOR (void)
414c264
< TAO_IOP::MultiProfileList::~MultiProfileList (void)
---
> TAO_IOP::TAO_IOR_Manipulation::Invalid_IOR::~Invalid_IOR (void)
418,423d267
< void TAO_IOP::MultiProfileList::_tao_any_destructor (void *x)
< {
<   MultiProfileList *tmp = ACE_static_cast (MultiProfileList*,x);
<   delete tmp;
< }
< 
425c269
< TAO_IOP::MultiProfileList::MultiProfileList (const ::TAO_IOP::MultiProfileList &_tao_excp)
---
> TAO_IOP::TAO_IOR_Manipulation::Invalid_IOR::Invalid_IOR (const ::TAO_IOP::TAO_IOR_Manipulation::Invalid_IOR &_tao_excp)
431,432c275,276
< TAO_IOP::MultiProfileList&
< TAO_IOP::MultiProfileList::operator= (const ::TAO_IOP::MultiProfileList &_tao_excp)
---
> TAO_IOP::TAO_IOR_Manipulation::Invalid_IOR&
> TAO_IOP::TAO_IOR_Manipulation::Invalid_IOR::operator= (const ::TAO_IOP::TAO_IOR_Manipulation::Invalid_IOR &_tao_excp)
440,441c284,285
< TAO_IOP::MultiProfileList *
< TAO_IOP::MultiProfileList::_downcast (CORBA::Exception *exc)
---
> TAO_IOP::TAO_IOR_Manipulation::Invalid_IOR *
> TAO_IOP::TAO_IOR_Manipulation::Invalid_IOR::_downcast (CORBA::Exception *exc)
443,444c287,288
<   if (!ACE_OS::strcmp ("IDL:TAO_IOP/MultiProfileList:1.0", exc->_id ())) // same type
<     return ACE_dynamic_cast (MultiProfileList *, exc);
---
>   if (!ACE_OS::strcmp ("IDL:TAO_IOP/TAO_IOR_Manipulation/Invalid_IOR:1.0", exc->_id ())) // same type
>     return ACE_dynamic_cast (Invalid_IOR *, exc);
450c294
< void TAO_IOP::MultiProfileList::_raise ()
---
> void TAO_IOP::TAO_IOR_Manipulation::Invalid_IOR::_raise ()
456,459c300,302
< void TAO_IOP::MultiProfileList::_tao_encode (
<     TAO_OutputCDR &cdr,
<     CORBA::Environment &ACE_TRY_ENV
<   ) const
---
> void TAO_IOP::TAO_IOR_Manipulation::Invalid_IOR::_tao_encode (
>     TAO_OutputCDR &,
>     CORBA::Environment &ACE_TRY_ENV) const
461,462d303
<   if (cdr << *this)
<     return;
467,470c308,310
< void TAO_IOP::MultiProfileList::_tao_decode (
<     TAO_InputCDR &cdr,
<     CORBA::Environment &ACE_TRY_ENV
<   )
---
> void TAO_IOP::TAO_IOR_Manipulation::Invalid_IOR::_tao_decode (
>     TAO_InputCDR &,
>     CORBA::Environment &ACE_TRY_ENV)
472,473d311
<   if (cdr >> *this)
<     return;
478c316
< CORBA::Exception *TAO_IOP::MultiProfileList::_alloc (void)
---
> CORBA::Exception *TAO_IOP::TAO_IOR_Manipulation::Invalid_IOR::_alloc (void)
481c319
<   ACE_NEW_RETURN (retval, ::TAO_IOP::MultiProfileList, 0);
---
>   ACE_NEW_RETURN (retval, ::TAO_IOP::TAO_IOR_Manipulation::Invalid_IOR, 0);
485,496d322
< static const CORBA::Long _oc_TAO_IOP_MultiProfileList[] =
< {
<   TAO_ENCAP_BYTE_ORDER, // byte order
<   33, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x54414f5f), ACE_NTOHL (0x494f502f), ACE_NTOHL (0x4d756c74), ACE_NTOHL (0x6950726f), ACE_NTOHL (0x66696c65), ACE_NTOHL (0x4c697374), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:TAO_IOP/MultiProfileList:1.0
<   17, ACE_NTOHL (0x4d756c74), ACE_NTOHL (0x6950726f), ACE_NTOHL (0x66696c65), ACE_NTOHL (0x4c697374), ACE_NTOHL (0x0),  // name = MultiProfileList
<   0, // member count
< };
< static CORBA::TypeCode _tc_TAO_tc_TAO_IOP_MultiProfileList (CORBA::tk_except, sizeof (_oc_TAO_IOP_MultiProfileList), (char *) &_oc_TAO_IOP_MultiProfileList, 0, sizeof (TAO_IOP::MultiProfileList));
< TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
< TAO_NAMESPACE_BEGIN (TAO_IOP)
< TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_MultiProfileList, &_tc_TAO_tc_TAO_IOP_MultiProfileList)
< TAO_NAMESPACE_END
498,621d323
< // TAO extension - the virtual _type method
< CORBA::TypeCode_ptr TAO_IOP::MultiProfileList::_type (void) const
< {
<   return ::TAO_IOP::_tc_MultiProfileList;
< }
< 
< 
< // default constructor
< TAO_IOP::TAO_IOR_Property::TAO_IOR_Property (void)
< {}
< 
< // destructor
< TAO_IOP::TAO_IOR_Property::~TAO_IOR_Property (void)
< {}
< 
< TAO_IOP::TAO_IOR_Property_ptr TAO_IOP::TAO_IOR_Property::_narrow (
<     CORBA::Object_ptr obj,
<     CORBA::Environment &ACE_TRY_ENV
<   )
< {
<   return TAO_IOR_Property::_unchecked_narrow (obj, ACE_TRY_ENV);
< }
< 
< TAO_IOP::TAO_IOR_Property_ptr TAO_IOP::TAO_IOR_Property::_unchecked_narrow (
<     CORBA::Object_ptr obj,
<     CORBA::Environment &
<   )
< {
<   if (CORBA::is_nil (obj))
<     return TAO_IOR_Property::_nil ();
<   return
<       ACE_reinterpret_cast
<         (
<           TAO_IOR_Property_ptr,
<             obj->_tao_QueryInterface
<               (
<                 ACE_reinterpret_cast
<                   (
<                     ptr_arith_t,
<                     &TAO_IOR_Property::_narrow
<                   )
<               )
<         );
< }
< 
< TAO_IOP::TAO_IOR_Property_ptr
< TAO_IOP::TAO_IOR_Property::_duplicate (TAO_IOR_Property_ptr obj)
< {
<   if (!CORBA::is_nil (obj))
<     obj->_add_ref ();
<   return obj;
< }
< 
< void *TAO_IOP::TAO_IOR_Property::_tao_QueryInterface (ptr_arith_t type)
< {
<   void *retv = 0;
<   if (type == ACE_reinterpret_cast
<     (ptr_arith_t,
<       &ACE_NESTED_CLASS (::TAO_IOP, TAO_IOR_Property)::_narrow))
<     retv = ACE_reinterpret_cast (void*, this);
<   else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
<     retv = ACE_reinterpret_cast (void *,
<       ACE_static_cast (CORBA::Object_ptr, this));
< 
<   if (retv)
<     this->_add_ref ();
<   return retv;
< }
< 
< const char* TAO_IOP::TAO_IOR_Property::_interface_repository_id (void) const
< {
<   return "IDL:TAO_IOP/TAO_IOR_Property:1.0";
< }
< 
< 
< 
< 
< // default constructor
< TAO_IOP::TAO_IOR_Manipulation::TAO_IOR_Manipulation (void)
< {}
< 
< // destructor
< TAO_IOP::TAO_IOR_Manipulation::~TAO_IOR_Manipulation (void)
< {}
< 
< TAO_IOP::TAO_IOR_Manipulation_ptr TAO_IOP::TAO_IOR_Manipulation::_narrow (
<     CORBA::Object_ptr obj,
<     CORBA::Environment &ACE_TRY_ENV
<   )
< {
<   return TAO_IOR_Manipulation::_unchecked_narrow (obj, ACE_TRY_ENV);
< }
< 
< TAO_IOP::TAO_IOR_Manipulation_ptr TAO_IOP::TAO_IOR_Manipulation::_unchecked_narrow (
<     CORBA::Object_ptr obj,
<     CORBA::Environment &
<   )
< {
<   if (CORBA::is_nil (obj))
<     return TAO_IOR_Manipulation::_nil ();
<   return
<       ACE_reinterpret_cast
<         (
<           TAO_IOR_Manipulation_ptr,
<             obj->_tao_QueryInterface
<               (
<                 ACE_reinterpret_cast
<                   (
<                     ptr_arith_t,
<                     &TAO_IOR_Manipulation::_narrow
<                   )
<               )
<         );
< }
< 
< TAO_IOP::TAO_IOR_Manipulation_ptr
< TAO_IOP::TAO_IOR_Manipulation::_duplicate (TAO_IOR_Manipulation_ptr obj)
< {
<   if (!CORBA::is_nil (obj))
<     obj->_add_ref ();
<   return obj;
< }
< 
< 
623c325
< 
---
>   
633c335
< 
---
>     
642c344
< 
---
>         
645c347
< 
---
>       
649c351
< 
---
>   
664c366
< 
---
>   
669c371
< 
---
>   
674c376
< 
---
>     
681c383
<   void
---
>   void 
698c400
< 
---
>   
702c404
< #endif /* !TAO_USE_SEQUENCE_TEMPLATES */
---
> #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
714c416
<   :
---
>   : 
719c421
< #endif /* !TAO_USE_SEQUENCE_TEMPLATES */
---
> #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
723c425
<   :
---
>   : 
728c430
< #endif /* !TAO_USE_SEQUENCE_TEMPLATES */
---
> #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
732c434
<   :
---
>   : 
737c439
< #endif /* !TAO_USE_SEQUENCE_TEMPLATES */
---
> #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
761c463
< 
---
>     
772,1213d473
< 
< 
< void operator<<= (CORBA::Any &_tao_any, const TAO_IOP::EmptyProfileList &_tao_elem) // copying
< {
<   TAO_OutputCDR stream;
<   stream << _tao_elem;
<   _tao_any._tao_replace (
<       TAO_IOP::_tc_EmptyProfileList,
<       TAO_ENCAP_BYTE_ORDER,
<       stream.begin ()
<     );
< }
< 
< void operator<<= (CORBA::Any &_tao_any, TAO_IOP::EmptyProfileList *_tao_elem) // non copying
< {
<   TAO_OutputCDR stream;
<   stream << *_tao_elem;
<   _tao_any._tao_replace (
<       TAO_IOP::_tc_EmptyProfileList,
<       TAO_ENCAP_BYTE_ORDER,
<       stream.begin (),
<       1,
<       _tao_elem,
<       TAO_IOP::EmptyProfileList::_tao_any_destructor
<     );
< }
< 
< CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, TAO_IOP::EmptyProfileList *&_tao_elem)
< {
<   return _tao_any >>= ACE_const_cast(
<       const TAO_IOP::EmptyProfileList*&,
<       _tao_elem
<     );
< }
< 
< CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const TAO_IOP::EmptyProfileList *&_tao_elem)
< {
<   _tao_elem = 0;
<   ACE_TRY_NEW_ENV
<   {
<     CORBA::TypeCode_var type = _tao_any.type ();
<     if (!type->equivalent (TAO_IOP::_tc_EmptyProfileList, ACE_TRY_ENV)) // not equal
<       {
<         return 0;
<       }
<     ACE_TRY_CHECK;
<     if (_tao_any.any_owns_data ())
<     {
<       _tao_elem = (TAO_IOP::EmptyProfileList *)_tao_any.value ();
<       return 1;
<     }
<     else
<     {
<       TAO_IOP::EmptyProfileList *tmp;
<       ACE_NEW_RETURN (tmp, TAO_IOP::EmptyProfileList, 0);
<       TAO_InputCDR stream (
<           _tao_any._tao_get_cdr (),
<           _tao_any._tao_byte_order ()
<         );
<       CORBA::String_var interface_repository_id;
<       if (!(stream >> interface_repository_id.out ()))
<         return 0;
<       if (ACE_OS::strcmp (
<           interface_repository_id.in (),
<           "IDL:TAO_IOP/EmptyProfileList:1.0"))
<         return 0;
<       if (stream >> *tmp)
<       {
<         ((CORBA::Any *)&_tao_any)->_tao_replace (
<             TAO_IOP::_tc_EmptyProfileList,
<             1,
<             tmp,
<             TAO_IOP::EmptyProfileList::_tao_any_destructor
<           );
<         _tao_elem = tmp;
<         return 1;
<       }
<       else
<       {
<         delete tmp;
<       }
<     }
<   }
<   ACE_CATCHANY
<   {
<   }
<   ACE_ENDTRY;
<   return 0;
< }
< 
< void operator<<= (CORBA::Any &_tao_any, const TAO_IOP::NotFound &_tao_elem) // copying
< {
<   TAO_OutputCDR stream;
<   stream << _tao_elem;
<   _tao_any._tao_replace (
<       TAO_IOP::_tc_NotFound,
<       TAO_ENCAP_BYTE_ORDER,
<       stream.begin ()
<     );
< }
< 
< void operator<<= (CORBA::Any &_tao_any, TAO_IOP::NotFound *_tao_elem) // non copying
< {
<   TAO_OutputCDR stream;
<   stream << *_tao_elem;
<   _tao_any._tao_replace (
<       TAO_IOP::_tc_NotFound,
<       TAO_ENCAP_BYTE_ORDER,
<       stream.begin (),
<       1,
<       _tao_elem,
<       TAO_IOP::NotFound::_tao_any_destructor
<     );
< }
< 
< CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, TAO_IOP::NotFound *&_tao_elem)
< {
<   return _tao_any >>= ACE_const_cast(
<       const TAO_IOP::NotFound*&,
<       _tao_elem
<     );
< }
< 
< CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const TAO_IOP::NotFound *&_tao_elem)
< {
<   _tao_elem = 0;
<   ACE_TRY_NEW_ENV
<   {
<     CORBA::TypeCode_var type = _tao_any.type ();
<     if (!type->equivalent (TAO_IOP::_tc_NotFound, ACE_TRY_ENV)) // not equal
<       {
<         return 0;
<       }
<     ACE_TRY_CHECK;
<     if (_tao_any.any_owns_data ())
<     {
<       _tao_elem = (TAO_IOP::NotFound *)_tao_any.value ();
<       return 1;
<     }
<     else
<     {
<       TAO_IOP::NotFound *tmp;
<       ACE_NEW_RETURN (tmp, TAO_IOP::NotFound, 0);
<       TAO_InputCDR stream (
<           _tao_any._tao_get_cdr (),
<           _tao_any._tao_byte_order ()
<         );
<       CORBA::String_var interface_repository_id;
<       if (!(stream >> interface_repository_id.out ()))
<         return 0;
<       if (ACE_OS::strcmp (
<           interface_repository_id.in (),
<           "IDL:TAO_IOP/NotFound:1.0"))
<         return 0;
<       if (stream >> *tmp)
<       {
<         ((CORBA::Any *)&_tao_any)->_tao_replace (
<             TAO_IOP::_tc_NotFound,
<             1,
<             tmp,
<             TAO_IOP::NotFound::_tao_any_destructor
<           );
<         _tao_elem = tmp;
<         return 1;
<       }
<       else
<       {
<         delete tmp;
<       }
<     }
<   }
<   ACE_CATCHANY
<   {
<   }
<   ACE_ENDTRY;
<   return 0;
< }
< 
< void operator<<= (CORBA::Any &_tao_any, const TAO_IOP::Duplicate &_tao_elem) // copying
< {
<   TAO_OutputCDR stream;
<   stream << _tao_elem;
<   _tao_any._tao_replace (
<       TAO_IOP::_tc_Duplicate,
<       TAO_ENCAP_BYTE_ORDER,
<       stream.begin ()
<     );
< }
< 
< void operator<<= (CORBA::Any &_tao_any, TAO_IOP::Duplicate *_tao_elem) // non copying
< {
<   TAO_OutputCDR stream;
<   stream << *_tao_elem;
<   _tao_any._tao_replace (
<       TAO_IOP::_tc_Duplicate,
<       TAO_ENCAP_BYTE_ORDER,
<       stream.begin (),
<       1,
<       _tao_elem,
<       TAO_IOP::Duplicate::_tao_any_destructor
<     );
< }
< 
< CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, TAO_IOP::Duplicate *&_tao_elem)
< {
<   return _tao_any >>= ACE_const_cast(
<       const TAO_IOP::Duplicate*&,
<       _tao_elem
<     );
< }
< 
< CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const TAO_IOP::Duplicate *&_tao_elem)
< {
<   _tao_elem = 0;
<   ACE_TRY_NEW_ENV
<   {
<     CORBA::TypeCode_var type = _tao_any.type ();
<     if (!type->equivalent (TAO_IOP::_tc_Duplicate, ACE_TRY_ENV)) // not equal
<       {
<         return 0;
<       }
<     ACE_TRY_CHECK;
<     if (_tao_any.any_owns_data ())
<     {
<       _tao_elem = (TAO_IOP::Duplicate *)_tao_any.value ();
<       return 1;
<     }
<     else
<     {
<       TAO_IOP::Duplicate *tmp;
<       ACE_NEW_RETURN (tmp, TAO_IOP::Duplicate, 0);
<       TAO_InputCDR stream (
<           _tao_any._tao_get_cdr (),
<           _tao_any._tao_byte_order ()
<         );
<       CORBA::String_var interface_repository_id;
<       if (!(stream >> interface_repository_id.out ()))
<         return 0;
<       if (ACE_OS::strcmp (
<           interface_repository_id.in (),
<           "IDL:TAO_IOP/Duplicate:1.0"))
<         return 0;
<       if (stream >> *tmp)
<       {
<         ((CORBA::Any *)&_tao_any)->_tao_replace (
<             TAO_IOP::_tc_Duplicate,
<             1,
<             tmp,
<             TAO_IOP::Duplicate::_tao_any_destructor
<           );
<         _tao_elem = tmp;
<         return 1;
<       }
<       else
<       {
<         delete tmp;
<       }
<     }
<   }
<   ACE_CATCHANY
<   {
<   }
<   ACE_ENDTRY;
<   return 0;
< }
< 
< void operator<<= (CORBA::Any &_tao_any, const TAO_IOP::Invalid_IOR &_tao_elem) // copying
< {
<   TAO_OutputCDR stream;
<   stream << _tao_elem;
<   _tao_any._tao_replace (
<       TAO_IOP::_tc_Invalid_IOR,
<       TAO_ENCAP_BYTE_ORDER,
<       stream.begin ()
<     );
< }
< 
< void operator<<= (CORBA::Any &_tao_any, TAO_IOP::Invalid_IOR *_tao_elem) // non copying
< {
<   TAO_OutputCDR stream;
<   stream << *_tao_elem;
<   _tao_any._tao_replace (
<       TAO_IOP::_tc_Invalid_IOR,
<       TAO_ENCAP_BYTE_ORDER,
<       stream.begin (),
<       1,
<       _tao_elem,
<       TAO_IOP::Invalid_IOR::_tao_any_destructor
<     );
< }
< 
< CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, TAO_IOP::Invalid_IOR *&_tao_elem)
< {
<   return _tao_any >>= ACE_const_cast(
<       const TAO_IOP::Invalid_IOR*&,
<       _tao_elem
<     );
< }
< 
< CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const TAO_IOP::Invalid_IOR *&_tao_elem)
< {
<   _tao_elem = 0;
<   ACE_TRY_NEW_ENV
<   {
<     CORBA::TypeCode_var type = _tao_any.type ();
<     if (!type->equivalent (TAO_IOP::_tc_Invalid_IOR, ACE_TRY_ENV)) // not equal
<       {
<         return 0;
<       }
<     ACE_TRY_CHECK;
<     if (_tao_any.any_owns_data ())
<     {
<       _tao_elem = (TAO_IOP::Invalid_IOR *)_tao_any.value ();
<       return 1;
<     }
<     else
<     {
<       TAO_IOP::Invalid_IOR *tmp;
<       ACE_NEW_RETURN (tmp, TAO_IOP::Invalid_IOR, 0);
<       TAO_InputCDR stream (
<           _tao_any._tao_get_cdr (),
<           _tao_any._tao_byte_order ()
<         );
<       CORBA::String_var interface_repository_id;
<       if (!(stream >> interface_repository_id.out ()))
<         return 0;
<       if (ACE_OS::strcmp (
<           interface_repository_id.in (),
<           "IDL:TAO_IOP/Invalid_IOR:1.0"))
<         return 0;
<       if (stream >> *tmp)
<       {
<         ((CORBA::Any *)&_tao_any)->_tao_replace (
<             TAO_IOP::_tc_Invalid_IOR,
<             1,
<             tmp,
<             TAO_IOP::Invalid_IOR::_tao_any_destructor
<           );
<         _tao_elem = tmp;
<         return 1;
<       }
<       else
<       {
<         delete tmp;
<       }
<     }
<   }
<   ACE_CATCHANY
<   {
<   }
<   ACE_ENDTRY;
<   return 0;
< }
< 
< void operator<<= (CORBA::Any &_tao_any, const TAO_IOP::MultiProfileList &_tao_elem) // copying
< {
<   TAO_OutputCDR stream;
<   stream << _tao_elem;
<   _tao_any._tao_replace (
<       TAO_IOP::_tc_MultiProfileList,
<       TAO_ENCAP_BYTE_ORDER,
<       stream.begin ()
<     );
< }
< 
< void operator<<= (CORBA::Any &_tao_any, TAO_IOP::MultiProfileList *_tao_elem) // non copying
< {
<   TAO_OutputCDR stream;
<   stream << *_tao_elem;
<   _tao_any._tao_replace (
<       TAO_IOP::_tc_MultiProfileList,
<       TAO_ENCAP_BYTE_ORDER,
<       stream.begin (),
<       1,
<       _tao_elem,
<       TAO_IOP::MultiProfileList::_tao_any_destructor
<     );
< }
< 
< CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, TAO_IOP::MultiProfileList *&_tao_elem)
< {
<   return _tao_any >>= ACE_const_cast(
<       const TAO_IOP::MultiProfileList*&,
<       _tao_elem
<     );
< }
< 
< CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const TAO_IOP::MultiProfileList *&_tao_elem)
< {
<   _tao_elem = 0;
<   ACE_TRY_NEW_ENV
<   {
<     CORBA::TypeCode_var type = _tao_any.type ();
<     if (!type->equivalent (TAO_IOP::_tc_MultiProfileList, ACE_TRY_ENV)) // not equal
<       {
<         return 0;
<       }
<     ACE_TRY_CHECK;
<     if (_tao_any.any_owns_data ())
<     {
<       _tao_elem = (TAO_IOP::MultiProfileList *)_tao_any.value ();
<       return 1;
<     }
<     else
<     {
<       TAO_IOP::MultiProfileList *tmp;
<       ACE_NEW_RETURN (tmp, TAO_IOP::MultiProfileList, 0);
<       TAO_InputCDR stream (
<           _tao_any._tao_get_cdr (),
<           _tao_any._tao_byte_order ()
<         );
<       CORBA::String_var interface_repository_id;
<       if (!(stream >> interface_repository_id.out ()))
<         return 0;
<       if (ACE_OS::strcmp (
<           interface_repository_id.in (),
<           "IDL:TAO_IOP/MultiProfileList:1.0"))
<         return 0;
<       if (stream >> *tmp)
<       {
<         ((CORBA::Any *)&_tao_any)->_tao_replace (
<             TAO_IOP::_tc_MultiProfileList,
<             1,
<             tmp,
<             TAO_IOP::MultiProfileList::_tao_any_destructor
<           );
<         _tao_elem = tmp;
<         return 1;
<       }
<       else
<       {
<         delete tmp;
<       }
<     }
<   }
<   ACE_CATCHANY
<   {
<   }
<   ACE_ENDTRY;
<   return 0;
< }
< 
1216,1222d475
<     template class TAO_Object_Manager<TAO_IOP::TAO_IOR_Property,TAO_IOP::TAO_IOR_Property_var>;
<   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
<   #  pragma instantiate TAO_Object_Manager<TAO_IOP::TAO_IOR_Property,TAO_IOP::TAO_IOR_Property_var>
< #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
< 
< #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
<     defined (ACE_HAS_GNU_REPO)
1226a480
> 
