Fri Apr 02 13:41:09 2004  Balachandran  <bala@dre.vanderbilt.edu>

        * CIAO version 0.4.1 released.

Fri Apr  2 13:05:56 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * NEWS:

          Updated with the latest developments just prior to BFO.

Wed Mar 31 23:03:59 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantHeaderGenerator.cpp:

          Added code emitter to generate includes of *S.h corresponding to
          IDL files included in the CIDL file. Thanks to Gary Duzan
          <gduzan@bbn.com> for pointing out the problem.

Wed Mar 31 17:59:12 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tools/static_configurator/Static_Configurator.mpc:

          Fixed fuzz warnings.

Mon Mar 29 11:00:00 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/CIDLC.vcproj:

          Excluded the file RepositoryIdGenerator.cpp from the Release build,
          as it has already been excluded from the Debug build. Thanks to
          Marek Brudka <mbrudka@elka.pw.edu.pl> for reporting the problem.

Sun Mar 28 23:51:17 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO/CIAO/tools/RTComponentServer/Makefile.RTComponentServer:

          Updated dependencies.

        * TAO/CIAO/tools/RTComponentServer/RTConfig_Manager.h:

          Removed inclusion of Functor.h.

Mon Mar 29 05:46:58 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO/CIAO/tools/RTComponentServer/Makefile.RTComponentServer:

          Updated dependencies.

        * TAO/CIAO/tools/RTComponentServer/RTConfig_Manager.h:



Tue Mar 23 14:34:06 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantHeaderGenerator.cpp:

          Modified code generated by FacetEmitter class to generate
          the _Servant class for a facet in the scope where the IDL
          interface the facet employs is defined, as mandated by the
          CCM spec.

        * CIDLC/ServantSourceGenerator.cpp:

          Change generation of the declaration of a local variable
          which is a _var of the executor class for a facet to match the
          scope of the declaration of the executor class itself, which
          must be, as mentioned above, in the same scope as the declaration
          of the IDL interface used by the facet.

          Thanks to Jessica Pistole <Jessica.Pistole@jhuapl.edu> for
          sending the example IDL/CIDL files that demostrated the
          problem.

Tue Mar 16 11:22:44 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        * docs/static_ciao_contents.html:
        * docs/static_config_example.html:
        * docs/index.html:

          Fixed webpage for unnecessary whitespace characters. Fixed links
          to images. Thanks to Tao Lu for pointing out.

Tue Mar 16 10:34:41 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantHeaderGenerator.cpp:

          Added instantiation of generators for regular and readonly
          attributes in interfaces supported by components. The
          corresponding code generation in the servant source file
          was already there.

Tue Mar 16 10:36:21 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * CIAO-INSTALL.html:

          Added the support for CIDL with MPC on Linux.

Tue Mar 16 10:52:21 2004  Venkita Subramonian  <venkita@harry.cs.wustl.edu>

        * docs/static_config_example.html:
        * docs/static_ciao_contents.html:
        * docs/static_ciao_toc.html:

          Made some modifications to include an example run.

        * docs/index.html:

          Added link from the CIAO main page to the static config
          documentation.

Sun Mar 14 00:23:02 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * CCF/CCF/CIDL/CIDL.mpc:
        * CCF/CCF/IDL2/IDL2.mpc:
        * CCF/CCF/IDL3/IDL3.mpc:
        * CCF/CCF/CIDL/CodeGenerationKit.mpc:
        * CCF/CCF/CIDL/CompilerElements.mpc:

          Removed the * to disable the duplicated words in the
          project/makefile.

Sun Mar 14 00:16:46 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * CIDLC/CIDLC.mpc:

          Removed the * to disable the duplicated words in the
          project/makefile.

Mon Mar 15 10:14:16 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CIDLC/cidlc.cpp:

          Temporary fix for the wrong return code in CIDL compiler.
          Thanks to Gary Duzan <gduzan@bbn.com> for reporting this.

Fri Mar 12 11:03:38 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/TypeNameEmitter.cpp:
        * CIDLC/TypeNameEmitter.hpp:

          Added missing operations to generate enum type names. Thanks to
          Jessica Pistole <Jessica.Pistole@jhuapl.edu> for reporting
          the missing type names in generated servant glue code.

Thu Mar 11 16:30:45 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/LexicalAnalyzer.cpp:
        * CCF/CCF/IDL2/Parser.cpp:
        * CCF/CCF/IDL2/Parser.hpp:
        * CCF/CCF/IDL2/SemanticAction/Typedef.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Typedef.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Typedef.hpp:

          Added support for bounded string and wstring.

        * CCF/Documentation/TODO:

          Reflected new achievement.

        * CIDLC/cidlc.cpp:

          Cosmetic changes.

2004-03-11  Venkita Subramonian  <venkita@harry.cs.wustl.edu>

        * ciao/Container_Base.cpp: Removed an ACE_DEBUG statement which
        got in by mistake.

Wed Mar 10 14:59:19 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        * docs/static_ciao_toc.html:
        * docs/static_ciao_contents.html:
        * docs/static_ciao_index.html: Updated documentation. Renamed
          static_ciao.html to static_ciao_contents.html.

Wed Mar 10 12:36:01 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:

          Added code generator instantiations to handle multiple nested
          modules.

        * CIDLC/cidlc.cpp:

          Fixed typo in usage message.

Tue Mar  9 23:18:22 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        * tools/static_configurator/Static_Assembly_Parser.cpp:

          Made a minor fix to eliminate unnecessary command line option
          processing.

        * tools/static_configurator/README: Added this file.

Tue Mar  9 22:48:10 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        * docs/static_ciao.html:
        * docs/imgs/ciao-static1.jpg:
        * docs/imgs/ciao-static2.jpg:
        * docs/imgs/ciao-dynamic1.jpg:
        * docs/imgs/ciao-dynamic2.jpg:
        * docs/imgs/ciao-static-vs-dynamic.jpg: Added documentation for
          CIAO static configuration.

Mon Mar  8 14:57:39 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CIDLC/ExecutorMappingGenerator.cpp:

          Added inclusion of the source file when compiling with
          --lem-force-all option.

Mon Mar  8 13:54:16 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * NEWS:

          Added a NEWS file which tracks user visible changes between
          every beta. Thanks to Olli Savia and Gary Duzan for motivating
          this.

Wed Mar  3 14:30:53 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:

          Added code generation for operations corresponding to
          attributes in facets and supported interfaces. Thanks to
          Praveen K Sharma <psharma@bbn.com> for reporting the bug.
          This closes [BUGID:1756].

Tue Mar  2 19:50:50 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * DnC/Node/NodeApplicationManager_Impl.h:

          Added @@Tao comments.

Tue Mar  2 15:08:39 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantSourceGenerator.cpp:

          Fixed code generation in the body of an operation. This
          body just delegates to the executor, so we have to
          generate the argument list again (just the names, not
          the types), but we don't have to generate the raises
          list again. The front end Traversal raises() method
          was getting executed, no code generated, but it was
          picking up the overridden comma() method used for the
          arg list. So we had to override raises() itself to
          do nothing. Thanks to Boris for his help with this.

Tue Mar  2 01:34:18 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/Node:
        * DnC/Node/NodeApplication_Impl.h:
        * DnC/Node/NodeApplication_Impl.h:

          Added the prototype definition files of
          NodeApplication and NodeApplicationManager.

Sun Feb 29 20:57:40 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        * tools/static_configurator/Static_Configurator.h:
        * tools/static_configurator/Static_Configurator.cpp:
        * tools/static_configurator/Static_Assembly_Parser.cpp: Fixed
          compile errors in builds with native exceptions disabled.

        * tools/static_configurator/Static_Assembly_Visitors.cpp: Fixed
          compile errors in gcc 3.3.2. Thanks to Bala for pointing out.

Sat Feb 28 15:42:22 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tools/static_configurator/Static_Assembly_Visitors.cpp:

          Fixed a couple of small errors. But this file still doeasn't
          compile with gcc 3.3.2. Sending Venkita note.

Fri Feb 27 11:35:41 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantSourceGenerator.cpp:

          Fixed code generation errors reported by Edward Mulholland
          <emulholl@atl.lmco.com>.

Thu Feb 26 14:21:48 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * CIAOTAO.mwc:

          An mwc file for CIAO with its dependencies on ACE+TAO. Folks can
          now run $ACE_ROOT/bin/mwc.pl CIAOTAO.mwc in $CIAO_ROOT and
          invoke "make" from $CIAO_ROOT. Thanks to Brian Mendel and Ed
          Mulholland for motivating this.

Tue Feb 24 18:00:44 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/Deployment.idl:          Removed
        * DnC/DnC_Deployment.idl
        * DnC/DnC_Element.idl
        * DnC/DnC_Resource.idl

          Deployment.idl is splited into 3 parts now.

Mon Feb 23 15:04:26 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:

          Added generation of a top-level namespaces with the name
          derived from composition. Plus all the necessary modifications
          in generated code to adopt this scheme.

Mon Feb 23 13:54:19 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * CIDLC/CIDLC.vcproj:

        Added ".\Literals.cpp" into the project.

Mon Feb 23 13:34:20 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * CIDLC/CIDLC.vcproj:

          Reversed the change.

Thu Feb 19 11:07:35 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * docs/index.html:

          Added the parts listing area. Added a few relative links.

Wed Feb 18 13:05:35 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/SemanticGraph/Name.cpp:

          Added missing header inclusion.

Wed Feb 18 10:43:54 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * docs/index.html:

         Added the tutorial section in this file.

Wed Feb 18 10:11:42 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * CCF/CCF/CIDL/CIDL.mpc:
        * CCF/CCF/CodeGenerationKit/CodeGenerationKit.mpc:
        * CCF/CCF/CompilerElements/CompilerElements.mpc:
        * CCF/CCF/IDL2/IDL2.mpc:
        * CCF/CCF/IDL3/IDL3.mpc:

          Changed these MPC files to specify the output lib path.

Wed Feb 18 14:05:13 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * CCF/CCF/CCF.mwc:
          Removed this file, it has an error and is not needed.

Tue Feb 17 01:18:16 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/Hello/Receiver/Receiver_exec.cpp:
        * examples/OEP/BasicSP/BMClosedED/BMClosedED_exec.cpp:
        * examples/OEP/BasicSP/BMDevice/BMDevice_exec.cpp:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay_exec.cpp:
        * examples/OEP/Display/NavDisplay/NavDisplay_exec.cpp:
        * examples/OEP/Display/RateGen/RateGen_exec.cpp:
        * examples/OEP/Display/RateGen/client.cpp:
        * examples/OEP/Display/RateGen/controller.cpp:

          Fixed the code for exception safety when exceptions are
          disabled. I don't claim that I have caught everything, but
          should have most of the problems. Another pass is required to fix
          the remaining problems.

Mon Feb 16 20:01:19 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * CIDLC/CIDLC.mwc:

          Added the mpc files from CCF in there. This will make it easier
          for the users. Users just need to go to $CIAO_ROOT/CIDLC and
          type mwc.pl CIDLC.mwc and then a make. They need not go to go
          and build CCF specifically. But this has a hitch that Tao needs
          to fix. The CCF libraries should be installed in $CIAO_ROOT/lib
          for this to work fine. Tao has accepted to fix this.

        * CIDLC/Literals.cpp:
        * CIDLC/Literals.hpp:
        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:

          Bunch of wrong environment macro usage. This should fix the
          problems that Brian Mendel reported. Thanks to Brian for
          reporting this.

          These fixes wouldn't have taken so long. The CIDLC linking takes
          a really really long time!

        * examples/Hello/Receiver/Receiver_exec.cpp:
        * examples/Hello/Sender/Sender_exec.cpp:
        * examples/Hello/Sender/starter.cpp:
        * examples/OEP/BasicSP/EC/EC_exec.cpp:
        * examples/OEP/BasicSP/EC/client.cpp:
        * examples/OEP/BasicSP/EC/controller.cpp:

          Fixes to the executor code to get it compiling on platforms with
          exceptions disabled.

Mon Feb 16 16:32:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * CCF/CCF/CCF.mwc:
          Fixed typo in this file, this fixes the problems out VC71 build has

Fri Feb 13 11:51:17 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CIDLC/ExecutorMappingGenerator.cpp:

          Added generation of file caption to local executor mapping.

        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:

          Fixed bug in name generation when decalartions are in file
          scope.

        * CIDLC/DescriptorGenerator.cpp:

          Fixed inconsistent tags.

        * CIDLC/Literals.cpp:
        * CIDLC/Literals.hpp:

          Split literals into header and source.

        * CIDLC/CIDLC.mpc:
        * CIDLC/CIDLC.vcproj:
        * CIDLC/Makefile:
        * CIDLC/Makefile.alt:

          Added Literals.cpp

Thu Feb 12 17:40:33 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * CIDLC/CIDLC.mwc:
        * CIDLC/CIDLC.mpc:

          Updated these two files.
          Note: Only linux with boost/utility installed as package/rpm is
          tested.

Thu Feb 12 11:00:39 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * CIAO-INSTALL.html
        * CCF/CCF/CIDL/CIDL.mpc
        * CCF/CCF/CodeGenerationKit/CodeGenerationKit.mpc
        * CCF/CCF/CompilerElements/CompilerElements.mpc
        * CCF/CCF/IDL2/IDL2.mpc
        * CCF/CCF/IDL3/IDL3.mpc

          Updated these files to set the static linkage.

Thu Feb 12 10:31:23 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * CCF/CCF/CCF.mwc:

          Added this workspace file.

Wed Feb 11 19:17:54 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * CIAO-INSTALL.html:

          Added this file for CIAO install/build instructions.

Wed Feb 11 12:05:59 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Documentation/Build.html:

          Updated URLs to the Boost website. Fixed incorrect build
          instruction for Windows.

Wed Feb 11 11:36:08 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/Hello/descriptors/run_test_debug.pl:

          A new script that uses -ORBdebuglevel while running the
          component server.

        * examples/Hello/step-by-step.html:

          Added a pointer to the above script.

          Thanks to Gary Duzan <gduzan@bbn.com> and Praveen Sharma
          <psharma@bbn.com> for motivating this.

Tue Feb 10 18:15:59 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Documentation/Build.html:

          Fixed bugs and updated links.

Tue Feb 10 16:44:33 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * CIDLC/CIDLC.vcproj:

          Changed the include path.

Tue Feb 10 16:28:53 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * cidlc/CIDLC.vcproj:

          Added '..' to include paths, to pick up inclusion of
          ciao/Version.h.

        * cidlc/ServantHeaderGenerator.cpp:
        * cidlc/ServantSourceGenerator.cpp:

          Fixed errors in generated environment variables. Thanks to
          Edward Mulholland <emulholl@atl.lmco.com> for reporting the
          problems.

Tue Feb 10 14:54:48 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        * ciao/Container_Impl.h:
        * ciao/Container_Base.h: Changes to fix compile errors by adding
          default arguments for static configuration related paramters in
          the constructor.


Tue Feb 10 11:35:47 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/Deployment.idl:

          Added this file for the new DnC spec.

Tue Feb 10 10:41:48 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        * tools/static_configurator/Static_Assembly_Visitors.{cpp,h}:
        * tools/static_configurator/Static_Assembly_Parser.cpp:
        * tools/static_configurator/Static_Assembly.h: Offline static
          configuration parser to parse XML files into an intermediate C++
          header file which will be included by the online configuration
          engine.

        * tools/static_configurator/Static_Configurator.mpc:
        * tools/static_configurator/Static_Configurator.{h,cpp}: Online
          configuration engine that reads the intermediate table created
          by the offline parser. This is responsible for creating
          component servers, homes, containers, components and
          establishing connections between components.

        * ciao/Container_Base.{h,cpp}: Modifications for static
          configuration. While installing a home, instead of loading the
          entry point symbol from a DLL, the entry point function pointer
          is obtained from a hashmap which is passed to the
          container. This hashmap contains the name of the entry point and
          the entry point function pointer.

        * ciao/Container_Impl.{h,cpp,inl}:
        * ciao/ComponentServer_Impl.{h,cpp,inl}: Changed constructor
          signatures to add a flag for static configuration and a hashmap
          containing the static entry function pointers. These are
          defaulted to 0.

Fri Feb  6 15:54:26 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/Hello/Hello_Base/Hello_Base.idl:
        * examples/OEP/BasicSP/BasicSP.idl:
        * examples/OEP/Display/HUDisplay.idl:
        * performance-tests/Benchmark/RoundTrip/RoundTrip.idl:
        * performance-tests/Benchmark/RoundTripClient/RoundTripClient.idl:

          Removed the 'ciao/' path prefix from inclusions of
          Components.idl.

Fri Feb  6 14:49:48 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * CIDLC/CIDLC.mpc:
        * CCF/CCF/CIDL/CIDL.mpc
        * CCF/CCF/IDL2/IDL2.mpc
        * CCF/CCF/CodeGenerationKit/CodeGenerationKit.mpc
        * CCF/CCF/CompilerElements/CompilerElements.mpc
        * CCF/CCF/IDL3/IDL3.mpc

          Added reqires cidl in these mpc files. By default
          cidl is not turned on, so MPC won't generate makefiles.

Thu Feb  5 12:58:14 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Documentation/Build.html:
        * CIDLC/README.html:

          Updated all URLs to point to the 'central location'.

Wed Feb  4 14:58:05 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * ./CIDLC/CIDLC.mpc:
        * ./CCF/CCF/CIDL/CIDL.mpc
        * ./CCF/CCF/IDL2/IDL2.mpc
        * ./CCF/CCF/CodeGenerationKit/CodeGenerationKit.mpc
        * ./CCF/CCF/CompilerElements/CompilerElements.mpc
        * ./CCF/CCF/IDL3/IDL3.mpc

          Added these mpc files to build CIDLC compiler.
          The libpath of Boost and Utility is not fixed yet.
          Need to test all the mpc files on both Linux/Windows.

Wed Feb  4 13:58:36 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * ciao/CCM_Base.idl:
        * ciao/CCM_Container.idl:
        * ciao/CCM_Core.mpc:
        * ciao/CCM_Deployment.idl:
        * examples/Hello/Hello_Base/Hello_Base.idl:
        * examples/OEP/BasicSP/BasicSP.idl:
        * examples/OEP/BasicSP/BMClosedED/BMClosedED_exec.cpp:
        * examples/OEP/BasicSP/BMDevice/BMDevice_exec.cpp:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay_exec.cpp:
        * examples/OEP/Display/HUDisplay.idl:
        * examples/OEP/Display/NavDisplay/NavDisplay_exec.cpp:
        * performance-tests/Benchmark/Benchmark.mpc:
        * performance-tests/Benchmark/server.cpp:
        * performance-tests/Benchmark/Multi_Threaded/Multi_Threaded.mpc:
        * performance-tests/Benchmark/RoundTrip/RoundTrip.idl:
        * performance-tests/Benchmark/RoundTrip/RoundTrip_exec.cpp:
        * performance-tests/Benchmark/RoundTrip/client.cpp:
        * performance-tests/Benchmark/RoundTripClient/RoundTripClient.idl:
        * performance-tests/Benchmark/RoundTripServer/server.cpp:
        * tests/temp/assembly/client.cpp:
        * tests/temp/assembly/control.idl:
        * tests/temp/assembly/control.mpc:
        * tests/temp/assembly/server.cpp:
        * tools/Assembly_Deployer/Assembly_Deployer.cpp:
        * tools/Assembly_Deployer/Assembly_Impl.cpp:
        * tools/Assembly_Deployer/Assembly_Impl.h:
        * tools/Assembly_Deployer/Assembly_Manager.cpp:
        * tools/Assembly_Deployer/Assembly_Service.idl:
        * tools/Assembly_Deployer/Assembly_Visitors.h:
        * tools/Assembly_Deployer/Deployment_Configuration.h:
        * tools/ComponentServer/ComponentServer.cpp:
        * tools/ComponentServer/ComponentServer_test_client.cpp:
        * tools/Daemon/CIAO_Daemon.cpp:
        * tools/Daemon/Daemon_Commands.cpp:
        * tools/Daemon/CIAO_Daemon.cpp:
        * tools/Daemon/Daemon_Commands.cpp:
        * tools/ServerActivator/ServerActivator.cpp:
        * tools/ServerActivator/ServerActivator_test_client.cpp:
        * tools/XML_Helpers/XMLHelpers.mpc:
        * tools/XML_Helpers/XML_Utils.h:

                - Removed all include paths except TAO_ROOT and CIAO_ROOT
                  for C++ and IDL compilers, from MPC files.

                - Modified includes in source and header files as necessary,
                  per the above changes.

                - Added missing ACE_ROOT/ace includes.

                - Made other modifications as necessary to MPC files to
                  eliminate build errors.

Mon Feb  2 20:07:41 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tools/XML_Helpers/Makefile.XML_Helpers:

          Removed RTConfiguration_Stub.cpp and included
          RTConfigurationC.cpp for compilation.

Mon Feb  2 20:00:07 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tools/XML_Helpers/RTConfiguration.idl:

          Include RTCORBA_include.pidl instead of RTCORBA.pidl.

        * tools/XML_Helpers/RTConfiguration_Stubs.cpp:

          Removed the hacks in this file since they are no longer
          necessary.

        * tools/XML_Helpers/XMLHelpers.mpc:

          Changed the order of inheritance to get the libraries in the
          right order.

          All these should fix a problem reported by Diego Sevilla Ruiz
          and as always thanks to him for reporting it.

Sat Jan 31 18:26:24 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tools/XML_Helpers/RTConfiguration.idl:

          Appended "tao" to the path for RTCORBA.pidl.

Thu Jan 29 14:03:42 2004  Chad Elliott  <elliott_c@ociweb.com>

        * examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI.mpc:
        * tools/XML_Helpers/XMLHelpers.mpc:

          Updated these mpc files to work with IDL_Files as a custom build
          type instead of a built-in build type.

Thu Jan 29 12:30:52 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * step-by-step.html:
        * Receiver/Receiver.mpc:
        * Receiver/Receiver_exec.cpp:
        * Receiver/Receiver_exec.h:
        * Sender/Sender.mpc:
        * Sender/Sender_exec.cpp:
        * Sender/Sender_exec.h:
        * descriptors/default.cad:
        * descriptors/multi-receivers-default.cad:
        * descriptors/run_test_multirecv.pl:

          Following changes have been added to resolve the EI.idl problem.
          1. All *EI.idl are removed.
          2. All provided facets are implemented by the way of
          "composition".
          3. Added one more deployment scenario which has 2 instances of
          the Receiver.

Thu Jan 29 11:00:50 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CIDLC/ExecutorMappingGenerator.cpp:

          Reverted some more changes since they caused the C++ generated
          code to break.

Thu Jan 29 10:03:42 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Documentation/Build.html:

          Debian package libboost-dev apparently does not include regex.
          Instead regex is provided as a separate libboost-regex-dev.
          Added libboost-regex-dev as a required package to build CCF.
          Thanks to Hans-Peter Bock <Hans-Peter.Bock@isw.uni-stuttgart.de>
          for reporting this.

Wed Jan 28 17:49:06 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CIDLC/ExecutorMappingGenerator.cpp:

          Reverted back to SessionContext since it would be very hard
          to fix C++ code to conform to this change. Will have to
          do it later as part of C++ code refactoring.

Wed Jan 28 13:21:00 2004  Chad Elliott  <elliott_c@ociweb.com>

        * examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI.mpc:

          Use the new qt and qt_moc base projects.  The qt-min* base
          projects have been removed and the functionality moved into qt and
          qt_moc.  The original qt and qt_moc base projects were dispersed
          and became different base projects.

Wed Jan 28 13:02:28 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Example/CIDL/LocalExecutorMapping/ExecutorMappingGenerator.cpp:
        * CIDLC/ExecutorMappingGenerator.cpp:

          Implemented generation of additional interfaces that allow
          separation between executor interfaces and composition type.

Tue Jan 27 12:05:13 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * examples/Hello/Sender/Sender_exec.cpp:
        * examples/Hello/Sender/Sender_exec.h:

          New EI-less implementation.

        * CIDLC/CIDLC.sln:
        * CIDLC/CIDLC.vcproj:

          Updated projects to compile with boost out-of-the-box.

Tue Jan 27 11:33:39 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/Hello/Sender/Sender_exec.h:
        * examples/Hello/Sender/Sender_exec.cpp:
        * examples/Hello/Sender/Sender.idl:
        * examples/Hello/Sender/starter.cpp:

          Updated these files.

Tue Jan 27 10:15:59 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/Hello/step-by-step.html:

          Some format and trivial fix.

Mon Jan 26 20:33:31 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/Hello/step-by-step.html:

          Updated this file with new font.

Fri Jan 23 10:36:27 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/CCF.sln:
        * CCF/CCF/CIDL/CIDL.vcproj:
        * CCF/CCF/CodeGenerationKit/CodeGenerationKit.vcproj:
        * CCF/CCF/CompilerElements/CompilerElements.vcproj:
        * CCF/CCF/IDL2/IDL2.vcproj:
        * CCF/CCF/IDL3/IDL3.vcproj:

          Updated projects to compile with boost out-of-the-box.

        * CCF/Documentation/Build.html:

          Added step-by-step instructions for building CCF on
          Windows. Thanks to Tao Lu for helping me with this.

Thu Jan 22 23:38:32 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/OEP/Display/descriptors/DualDisplay.cad:

          Changed the name of the file.

Wed Jan 21 11:16:31 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/Parsing/Recovery.hpp:
        * CCF/CCF/IDL2/Traversal/ValueType.tpp:
        * CCF/CCF/IDL3/Traversal/EventType.tpp:
        * CIDLC/ExecutorMappingGenerator.cpp:
        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:

          Cosmetic changes.

Wed Jan 21 10:17:22 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Makefile:
        * CCF/CCF/Makefile:
        * CCF/CCF/CIDL/Makefile:
        * CCF/CCF/CIDL/Makefile.alt:
        * CCF/CCF/CIDL/Makefile.archive:
        * CCF/CCF/CIDL/Makefile.archive.alt:
        * CCF/CCF/CIDL/SemanticAction/Makefile:
        * CCF/CCF/CIDL/SemanticAction/Makefile.alt:
        * CCF/CCF/CIDL/SemanticAction/Makefile.object:
        * CCF/CCF/CIDL/SemanticAction/Makefile.object.alt:
        * CCF/CCF/CIDL/SemanticAction/Impl/Makefile:
        * CCF/CCF/CIDL/SemanticGraph/Makefile:
        * CCF/CCF/CIDL/Traversal/Makefile:
        * CCF/CCF/CodeGenerationKit/Makefile:
        * CCF/CCF/CompilerElements/Makefile:
        * CCF/CCF/IDL2/Makefile:
        * CCF/CCF/IDL2/Makefile.alt:
        * CCF/CCF/IDL2/Makefile.archive:
        * CCF/CCF/IDL2/Makefile.archive.alt:
        * CCF/CCF/IDL2/SemanticAction/Makefile:
        * CCF/CCF/IDL2/SemanticAction/Makefile.alt:
        * CCF/CCF/IDL2/SemanticAction/Makefile.object:
        * CCF/CCF/IDL2/SemanticAction/Makefile.object.alt:
        * CCF/CCF/IDL2/SemanticAction/Impl/Makefile:
        * CCF/CCF/IDL2/SemanticAction/Impl/Makefile.alt:
        * CCF/CCF/IDL2/SemanticGraph/Makefile:
        * CCF/CCF/IDL2/Traversal/Makefile:
        * CCF/CCF/IDL2/Traversal/Makefile.alt:
        * CCF/CCF/IDL3/Makefile:
        * CCF/CCF/IDL3/Makefile.alt:
        * CCF/CCF/IDL3/Makefile.archive:
        * CCF/CCF/IDL3/Makefile.archive.alt:
        * CCF/CCF/IDL3/SemanticAction/Makefile:
        * CCF/CCF/IDL3/SemanticAction/Impl/Makefile:
        * CCF/CCF/IDL3/SemanticAction/Impl/Makefile.alt:
        * CCF/CCF/IDL3/SemanticGraph/Makefile:
        * CCF/CCF/IDL3/Traversal/Makefile:
        * CIDLC/Makefile:

          Added ACE-style makefiles.

        * CCF/CCF/CIDL/Parser.hpp:
        * CCF/CCF/CodeGenerationKit/CommandLineGrammar.hpp:
        * CCF/CCF/IDL2/Parser.hpp:
        * CCF/CCF/IDL2/Token.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Elements.tpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Factory.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Elements.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Exception.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Interface.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Operation.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Translation.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Include.cpp:
        * CCF/CCF/IDL3/SemanticGraph/Component.hpp:
        * CCF/CCF/IDL3/SemanticGraph/Home.hpp:

          Cosmetic changes.

        * CCF/Documentation/Build.html:

          Fixed a typo.

Mon Jan 19 10:08:15 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CIDLC/Makefile.alt:
        * CIDLC/cidlc.cpp:

          Added --version command line option to CIDL compiler. Thanks
          to Craig Rodrigues for the suggestion.

Thu Jan 15 20:17:17 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Documentation/Build.html:

          Fixed some typos. Thanks to Craig Rodrigues for reporting
          them.

Thu Jan 15 17:53:38 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Documentation/Build.html:

          Updated build instructions for Debian GNU/Linux and RedHat
          OS family.

Thu Jan 15 14:39:35 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Config.rules:

          Fixed incorrect initialization of UTILITY_BUILD_RULES when
          UTILITY_ROOT is set. Thanks to Gary Duzan <gduzan@bbn.com>
          for reporting this.

Thu Jan 15 14:30:44 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * README:

          Updated the file with information about CIDLC. Thanks to Gary
          Duzan <gduzan@bbn.com> for motivating this.

Wed Jan 14 18:50:00 2004  Balachandran  <bala@dre.vanderbilt.edu>

        * CIAO version 0.4 released.

Wed Jan 14 15:22:13 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * CIDLC/README
        * CIDLC/README.html:

          HTML'ised README into a new file README.html and removed the
          ascii equivalent of it.

Wed Jan 14 11:30:58 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * docs/releasenotes/index.html:
        * docs/index.html:

          Updated releasenotes.

Wed Jan 14 10:59:10 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * docs/releasenotes:

          New directory.

        * docs/releasenotes/index.html:

          The actual document is placed here to be consistent with TAO.

        * docs/releasenotes.html:

          Removed the file since it has been moved into a new directory.

Tue Jan 13 20:54:31 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * ChangeLog:

          Lots of entries had gotten removed. Fixed them.

Tue Jan 13 11:24:55 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Config.rules:

          Added 'default-if-not-set' value for UTILITY_BUILD_RULES to
          look into well-known location where RedHat and Debian packages
          are installed.

Sat Jan 10 11:58:05 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * CIAO.mwc:

          Fixed a typo in the previous checkin.

Sat Jan 10 11:08:42 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * CIAO.mwc:

          We removed all the mpc files for CIDLC. Needed to remove that
          from the workspace file too.

Fri Jan  9 16:01:55 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/cidlc.cpp:

          Changed the error return value from -1 to 1. For some reason,
          Visual Studio does not detect the -1 return value and thinks
          everything is fine.

Fri Jan  9 15:45:33 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Documentation/Build.html:

          Added some clarifications suggested by Tao Lu.

Fri Jan  9 14:46:41 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CCF/CCF/CIDL/CIDL.vcproj:
        * CCF/CCF/CodeGenerationKit/CodeGenerationKit.vcproj:
        * CCF/CCF/IDL2/IDL2.vcproj:

          Added new files for union support and updated other project
          settings.

        * CIDLC/ServantSourceGenerator.cpp:
        * CIDLC/izeTypeCalculator.cpp:
        * CIDLC/TypeNameEmitter.cpp:
        * CIDLC/TypeNameEmitter.hpp:

          Added support for unions to the back end, and fixed a bug in
          generating the servant name when the component is declared at
          file scope.

Fri Jan  9 12:25:37 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/SemanticAction/Impl/Union.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Union.hpp:

          Fixed a bug with union member handling in semantic
          actions.

Fri Jan  9 12:20:32 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Config.rules:
        * CCF/Makefile.alt:
        * CCF/CCF/Makefile.alt:
        * CCF/CCF/CIDL/Makefile.alt:
        * CCF/CCF/CIDL/Makefile.archive:
        * CCF/CCF/CIDL/SemanticAction/Makefile.alt:
        * CCF/CCF/CIDL/SemanticAction/Makefile.object:
        * CCF/CCF/CIDL/SemanticAction/Impl/Makefile.alt:
        * CCF/CCF/CIDL/SemanticGraph/Makefile.alt:
        * CCF/CCF/CIDL/Traversal/Makefile.alt:
        * CCF/CCF/CodeGenerationKit/Makefile.alt:
        * CCF/CCF/CompilerElements/Makefile.alt:
        * CCF/CCF/IDL2/Makefile.alt:
        * CCF/CCF/IDL2/Makefile.archive:
        * CCF/CCF/IDL2/SemanticAction/Makefile.alt:
        * CCF/CCF/IDL2/SemanticAction/Makefile.object:
        * CCF/CCF/IDL2/SemanticAction/Impl/Makefile.alt:
        * CCF/CCF/IDL2/SemanticGraph/Makefile.alt:
        * CCF/CCF/IDL2/Traversal/Makefile.alt:
        * CCF/CCF/IDL3/Makefile.alt:
        * CCF/CCF/IDL3/Makefile.archive:
        * CCF/CCF/IDL3/SemanticAction/Makefile.alt:
        * CCF/CCF/IDL3/SemanticAction/Impl/Makefile.alt:
        * CCF/CCF/IDL3/SemanticGraph/Makefile.alt:
        * CCF/CCF/IDL3/Traversal/Makefile.alt:
        * CCF/Documentation/Build.html:
        * CCF/Example/Makefile.alt:
        * CCF/Example/CIDL/Makefile.alt:
        * CCF/Example/CIDL/LocalExecutorMapping/Makefile.alt:
        * CCF/Example/CodeGenerationKit/Makefile.alt:
        * CCF/Example/CodeGenerationKit/Indentation/Makefile.alt:
        * CCF/Example/CodeGenerationKit/Indentation/IDL/Makefile.alt:
        * CCF/Example/CodeGenerationKit/Indentation/XML/Makefile.alt:
        * CCF/Example/ComponentDeploymentDescriptor/Makefile.alt:
        * CCF/Example/IDL2/Makefile.alt:
        * CCF/Example/IDL2/CxxMapping/Makefile.alt:
        * CCF/Test/Makefile.alt:
        * CCF/Test/CIDL/Makefile.alt:
        * CCF/Test/CIDL/Compiler/Makefile.alt:
        * CCF/Test/CompilerElements/Makefile.alt:
        * CCF/Test/CompilerElements/CPP/Makefile.alt:
        * CCF/Test/IDL2/Makefile.alt:
        * CCF/Test/IDL2/Compiler/Makefile.alt:
        * CCF/Test/IDL2/SemanticGraph/Makefile.alt:
        * CCF/Test/IDL2/SemanticGraph/HandBuilt/Makefile.alt:
        * CCF/Test/IDL2/Traversal/Makefile.alt:
        * CCF/Test/IDL2/Traversal/Recreate/Makefile.alt:
        * CCF/Test/IDL3/Makefile.alt:
        * CCF/Test/IDL3/Compiler/Makefile.alt:
        * CIDLC/Makefile.alt:

          Added 'flexibility' variables to Config.rules and
          updated makefiles to reflect this change.

Thu Jan  8 15:33:31 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * CCF/CCF/CCF.mwc
        * CCF/CCF/CIDL/CIDL.mpc
        * CCF/CCF/CodeGenerationKit/CodeGenerationKit.mpc
        * CCF/CCF/CompilerElements/CompilerElements.mpc
        * CCF/CCF/IDL2/IDL2.mpc
        * CCF/CCF/IDL3/IDL3.mpc
        * CCF/CCF.mwc
        * CCF/Example/CIDL/CIDL.mwc
        * CCF/Example/CIDL/LocalExecutorMapping/LocalExecutorMapping.mpc
        * CCF/Example/Example.mwc
        * CCF/Example/CodeGenerationKit/Indentation/IDL/IDL.mpc
        * CCF/Example/CodeGenerationKit/Indentation/XML/XML.mpc
        * CCF/Example/CodeGenerationKit/Indentation/Indentation.mwc
        * CCF/Example/CodeGenerationKit/CodeGenerationKit.mwc
        * CIDLC/cidlc.mpc

          Removed all these MPC files since CIDL is not working with MPC yet.

Thu Jan  8 15:10:24 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/LexicalAnalyzer.cpp:
        * CCF/CCF/IDL2/Makefile.archive:
        * CCF/CCF/IDL2/Parser.cpp:
        * CCF/CCF/IDL2/Parser.hpp:
        * CCF/CCF/IDL2/SemanticAction.hpp:
        * CCF/CCF/IDL2/SemanticGraph.hpp:
        * CCF/CCF/IDL2/Traversal.hpp:
        * CCF/CCF/IDL2/SemanticAction/Factory.hpp:
        * CCF/CCF/IDL2/SemanticAction/Union.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Factory.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Factory.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Makefile.alt:
        * CCF/CCF/IDL2/SemanticAction/Impl/Union.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Union.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Makefile.alt:
        * CCF/CCF/IDL2/SemanticGraph/Union.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Union.hpp:
        * CCF/CCF/IDL2/Traversal/Struct.hpp:
        * CCF/CCF/IDL2/Traversal/Union.cpp:
        * CCF/CCF/IDL2/Traversal/Union.hpp:

          Added support for union.

Thu Jan  8 14:47:22 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantHeaderGenerator.cpp:

          Changed default suffix for generating #include of C++ header
          file generated from executor mapping IDL file, similar to the
          change in

          Thu Jan  8 12:00:16 2004  Jeff Parsons <j.parsons@vanderbilt.edu>.

Thu Jan  8 13:49:10 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/OEP/BasicSP/BMClosedED/BMClosedED.mpc:
        * examples/OEP/BasicSP/BMDevice/BMDevice.mpc:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay.mpc:
        * examples/OEP/BasicSP/EC/EC.mpc:
        * examples/OEP/Display/GPS/GPS.mpc:
        * examples/OEP/Display/NavDisplay/NavDisplay.mpc:
        * examples/OEP/Display/RateGen/RateGen.mpc:

          Reverted the changes in

          Wed Jan  7 11:20:13 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

          since these command line options (include paths) are now part of
          the default command line.

Thu Jan  8 12:00:16 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CCF/Example/CIDL/LocalExecutorMapping/ExecutorMappingGenerator.cpp:
        * CIDLC/ExecutorMappingGenerator.cpp:

          Changed default suffix for the generated executor mapping IDL file
          from '_exec.idl' to 'E.idl'.

        * ciao/CCM_Core.mpc:

          Added header files that are unmatched by a corresponding .cpp file.

Wed Jan  7 11:20:13 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/OEP/BasicSP/BMClosedED/BMClosedED.mpc:
        * examples/OEP/BasicSP/BMDevice/BMDevice.mpc:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay.mpc:
        * examples/OEP/BasicSP/EC/EC.mpc:
        * examples/OEP/Display/GPS/GPS.mpc:
        * examples/OEP/Display/NavDisplay/NavDisplay.mpc:
        * examples/OEP/Display/RateGen/RateGen.mpc:

          Added include path command line options for the CIDL compiler.

Wed Jan  7 09:56:39 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Documentation/Build.html:

          Fixed a typo.

Tue Jan  6 18:25:24 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/SemanticGraph/Elements.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Elements.hpp:

          Fixed bug in Scope::add_edge_right (Extends&).

Tue Jan  6 17:26:33 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/SemanticAction/Impl/Interface.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Elements.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Elements.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Component.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Home.cpp:

          Added support for lookup in inherited/supported
          scopes.

Tue Jan  6 11:35:27 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantHeaderGenerator.hpp:
        * CIDLC/ServantSourceGenerator.hpp:

          Added virtual destructors to classes ServantHeaderEmitter and
          ServantSourceEmitter to eliminate warnings on g++ 3.3.

Tue Jan  6 11:23:29 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/OEP/BasicSP/EC/client.cpp:
        * examples/OEP/BasicSP/EC/controller.cpp:

          Replaced occurrences of cerr with ACE_ERROR_RETURN.

        * examples/OEP/Display/GPS/GPS_exec.cpp:
        * examples/OEP/Display/GPS/GPS_tracing_exec.cpp:

          Added #include of ace/OS_NS_time.h.

Tue Jan  6 10:16:51 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tools/Assembly_Deployer/Assembly_Manager.cpp:

          Fixed a warning using _var.

Mon Jan  5 21:38:53 2004  Boris Kolpackov  <boris@kolpackov.net>

        * CCF/Example/CIDL/LocalExecutorMapping/ExecutorMappingGenerator.cpp:
        * CIDLC/ExecutorMappingGenerator.cpp:

          Fixed uninitialized variable bug that resulted in generation
          of unused modules.

        * CCF/Example/CIDL/LocalExecutorMapping/test-0.idl:

          Added unused module to the test case.

        * CIDLC/cidlc.cpp:

          Cosmetic chnages.

Mon Jan  5 20:31:18 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/RepositoryIdGenerator.cpp:
        * CIDLC/RepositoryIdGenerator.hpp:
        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:

          Fixed typos in servant code generation.

Mon Jan  5 19:34:44 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Documentation/Build.html:

          Updated Utility library url.

Mon Jan  5 19:16:40 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CIDLC/Makefile.alt:

          Added updated generators to the build.

Mon Jan  5 18:48:54 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Test/IDL2/Traversal/Recreate/Makefile.alt:

          Fixed a typo.

Mon Jan  5 18:27:12 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Config.rules:

          Added default values to the paths.

Mon Jan  5 15:47:04 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CIDLC/README:

          Updated build instructions.

Mon Jan  5 14:32:17 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Documentation/Build.html:

          Updated build instructions.

Mon Jan  5 01:44:13 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CCF/CCF/CompilerElements/CompilerElements.vcproj:
        * CCF/CCF/IDL2/IDL2.vcproj:
        * CCF/CCF/IDL3/IDL3.vcproj:

          Added files recently checked in to projects.

        * CIDLC/CIDLC.vcproj:
        * CIDLC/Collectors.hpp:
        * CIDLC/DescriptorGenerator.cpp:
        * CIDLC/DescriptorGenerator.hpp:
        * CIDLC/ServantGenerator.cpp:
        * CIDLC/ServantGenerator.hpp:
        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantHeaderGenerator.hpp:
        * CIDLC/ServantSourceGenerator.cpp:
        * CIDLC/ServantSourceGenerator.hpp:
        * CIDLC/SizeTypeCalculator.cpp:
        * CIDLC/SizeTypeCalculator.hpp:
        * CIDLC/TypeNameEmitter.cpp:
        * CIDLC/TypeNameEmitter.hpp:
        * CIDLC/cidlc.cpp:

          Overhauled the entire backend to integrate with the new
          frontend traversal framework, and with recently supported
          features.

Sun Jan  4 17:48:50 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tools/Assembly_Deployer/Assembly_Impl.cpp:
        * tools/RTComponentServer/RTConfig_Manager.cpp:

          Fixed warnings with g++ builds.

Sat Jan  3 16:34:35 2004  Boris Kolpackov  <boris@kolpackov.net>

        * CCF/CCF/IDL2/Traversal/Operation.hpp:
        * CCF/CCF/IDL2/Traversal/Operation.tpp:
        * CCF/CCF/IDL3/Traversal/Home.cpp:
        * CCF/CCF/IDL3/Traversal/Home.hpp:

          Added receives_none() member function.

Fri Jan  2 16:09:32 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * ciao/Container_Base.cpp:

          Fixed a compile error in single threaded configuration.

        * tools/Assembly_Deployer/Assembly_Impl.cpp:
        * tools/Assembly_Deployer/Assembly_Manager.cpp:
        * tools/ComponentServer/ComponentServer.cpp:
        * tools/XML_Helpers/RTConfig_Handlers.cpp:

          Fixed more warnings with g++, mostly from the wrong usage of
          _var's.

Fri Jan  2 15:36:07 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Example/CIDL/LocalExecutorMapping/ExecutorMappingGenerator.cpp:
        * CCF/Example/CIDL/LocalExecutorMapping/ExecutorMappingGenerator.hpp:
        * CIDLC/ExecutorMappingGenerator.cpp:
        * CIDLC/ExecutorMappingGenerator.hpp:

          Changed pass-by-value to pass-by-const-ref for fs::path argument.

Fri Jan  2 14:41:35 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/LexicalAnalyzer.cpp:

          Fixed small recognition bug.

        * CCF/CCF/IDL2/Traversal/Attribute.cpp:
        * CCF/CCF/IDL2/Traversal/Attribute.hpp:

          Added traversal or readonly attribute.

        * CCF/Example/CIDL/LocalExecutorMapping/cidlc.cpp:
        * CCF/Example/CIDL/LocalExecutorMapping/ExecutorMappingGenerator.cpp:

          Added support for readonly attribute.

        * CCF/Example/CIDL/LocalExecutorMapping/test-0_exec.idl.orig:
        * CCF/Example/CIDL/LocalExecutorMapping/test-1.idl:
        * CCF/Example/CIDL/LocalExecutorMapping/test-1_exec.idl.orig:
        * CCF/Example/CIDL/LocalExecutorMapping/test-2.idl:
        * CCF/Example/CIDL/LocalExecutorMapping/test-2_exec.idl.orig:

          Updated tests and results.

        * CIDLC/ExecutorMappingGenerator.cpp:

          Added support for readonly attribute.

Fri Jan  2 13:44:06 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/CompilerElements/Preprocessor.cpp:

          Removed debug print.

        * CCF/Documentation/TODO:

          Updated.

Fri Jan  2 12:59:05 2004  Chad Elliott  <elliott_c@ociweb.com>

        * performance-tests/Benchmark/Benchmark.mpc:

          Prefixed the project name with the '*' operator to avoid project
          name conflicts.

Thu Jan  1 20:27:30 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * ciao/Makefile:

          Updated dependancies since we have now have the Makefiles in the
          repo.

Thu Jan  1 19:58:26 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tools/XML_Helpers/Cascadable_DocHandler.cpp:

          Fixed typo.

Thu Jan  1 20:12:03 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tools/XML_Helpers/XML_Utils.cpp:

          Fixed a unused variable warning.

Thu Jan  1 20:05:59 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tools/Assembly_Deployer/Assembly_Impl.cpp:
        * tools/Assembly_Deployer/Assembly_Manager.cpp:
        * tools/ComponentServer/ComponentServer.cpp:
        * tools/Daemon/CIAO_Daemon.cpp:
        * tools/Daemon/Daemon_Impl.cpp:
        * tools/Daemon/controller_i.cpp:
        * tools/RTComponentServer/ComponentServer_Task.cpp:
        * tools/RTComponentServer/RTConfig_Manager.cpp:
        * tools/RTComponentServer/RTServer_Impl.cpp:
        * tools/ServerActivator/ServerActivator.cpp:
        * tools/Simple_Component_Server/Simple_Component_Server.cpp:
        * tools/Simple_Component_Server/Simple_Server_i.cpp:
        * tools/Simple_Component_Server/sample_client.cpp:
        * tools/XML_Helpers/Assembly_Handlers.cpp:
        * tools/XML_Helpers/Assembly_Spec.cpp:
        * tools/XML_Helpers/Assembly_Spec.h:
        * tools/XML_Helpers/Cascadable_DocHandler.cpp:

          More fixes to remove compile errors when exceptions are set
          to 0.

Thu Jan  1 19:32:23 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * ciao/ComponentServer_Impl.cpp:

          Fixed typo in the last checkin.

Thu Jan  1 19:28:58 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * ciao/ComponentInstallation_Impl.cpp:
        * ciao/ComponentServer_Impl.cpp:
        * ciao/Container_Base.cpp:
        * ciao/Container_Base.inl:
        * ciao/Container_Impl.cpp:
        * ciao/Container_Impl.inl:
        * ciao/Cookies.cpp:
        * ciao/ServerActivator_Impl.cpp:

          Bunch of fixes to remove compile errors when exceptions are set
          to 0.

Thu Jan  1 18:46:02 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tools/XML_Helpers/Cascadable_DocHandler.i:

          Fixed compile errors when exceptions are turned off.

Thu Jan  1 18:41:06 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * Makefile:

          Do not compile CIAO with static_libs_only=1.

Thu Jan  1 13:53:53 2004  Boris Kolpackov  <boris@kolpackov.net>

        * CCF/CCF/IDL2/SemanticGraph/Elements.hpp (class Nameable)

          Added support for iteration over Names edges.


Thu Jan  1 17:23:44 UTC 2004  Don Hinton  <dhinton@dresystems.com>

        * Makefile:
          Moved coreclean target to bottom of file so that the all target
          will come first.  Added ALT_DIRS variable that contains CIDLC,
          examples, and tests directories that should not be built by
          default.  Set the DIRS variable = CORE_DIRS by default and add
          ALT_DIRS only if BOOST_ROOT and UTILITY_ROOT have been set.
          This will need to be adjusted a bit, since the ALT_DIRS don't
          have regular Makefiles right now, but it's a start and will
          allow all the *nix builds to start building the CORE_DIRS in the
          regular autobuilds.

        * ciao/Makefile:
        * ciao/Makefile.CIAO_Client:
        * ciao/Makefile.CIAO_Container:
        * ciao/Makefile.CIAO_Server:
        * tools/Makefile:
        * tools/Assembly_Deployer/Makefile:
        * tools/Assembly_Deployer/Makefile.Assembly_Deployer:
        * tools/Assembly_Deployer/Makefile.Assembly_Manager:
        * tools/ComponentServer/Makefile:
        * tools/ComponentServer/Makefile.ComponentServer:
        * tools/ComponentServer/Makefile.ComponentServer_test_client:
        * tools/Daemon/Makefile:
        * tools/Daemon/Makefile.CIAO_Daemon:
        * tools/Daemon/Makefile.DaemonController:
        * tools/RTComponentServer/Makefile:
        * tools/RTComponentServer/Makefile.RTComponentServer:
        * tools/ServerActivator/Makefile:
        * tools/ServerActivator/Makefile.ServerActivator:
        * tools/ServerActivator/Makefile.ServerActivator_test_client:
        * tools/Simple_Component_Server/Makefile:
        * tools/Simple_Component_Server/Makefile.Simple_Component_Server:
        * tools/Simple_Component_Server/Makefile.Simple_Component_Server_test_client:
        * tools/Simple_Component_Server/Makefile.Simple_Server_Stub:
        * tools/XML_Helpers/Makefile:
        * tools/XML_Helpers/Makefile.Helper_Test:
        * tools/XML_Helpers/Makefile.XML_Helpers:
          Added new Makefiles generated by MPC and lightly modified to
          remove unneeded variables and targets (mainly realclean, and idl
          related ones that are OBE due to recent fixes to the underlying
          make system.).

Wed Dec 31 18:13:21 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/CompilerElements/Preprocessor.cpp:
        * CCF/CCF/IDL2/LexicalAnalyzer.hpp:
        * CCF/CCF/IDL2/Parser.cpp:
        * CCF/CCF/IDL2/Parser.hpp:
        * CCF/CCF/IDL2/SemanticAction/Attribute.hpp:
        * CCF/CCF/IDL2/SemanticAction/Elements.hpp:
        * CCF/CCF/IDL2/SemanticAction/Enum.hpp:
        * CCF/CCF/IDL2/SemanticAction/Exception.hpp:
        * CCF/CCF/IDL2/SemanticAction/Factory.hpp:
        * CCF/CCF/IDL2/SemanticAction/Include.hpp:
        * CCF/CCF/IDL2/SemanticAction/Interface.hpp:
        * CCF/CCF/IDL2/SemanticAction/Member.hpp:
        * CCF/CCF/IDL2/SemanticAction/Module.hpp:
        * CCF/CCF/IDL2/SemanticAction/Native.hpp:
        * CCF/CCF/IDL2/SemanticAction/Operation.hpp:
        * CCF/CCF/IDL2/SemanticAction/Struct.hpp:
        * CCF/CCF/IDL2/SemanticAction/TypeId.hpp:
        * CCF/CCF/IDL2/SemanticAction/Typedef.hpp:
        * CCF/CCF/IDL2/SemanticAction/ValueType.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Attribute.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Attribute.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Elements.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Elements.tpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Enum.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Enum.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Exception.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Exception.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Factory.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Factory.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Include.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Include.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Interface.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Interface.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Member.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Member.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Module.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Module.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Native.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Native.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Operation.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Operation.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Struct.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Struct.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/TypeId.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/TypeId.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Typedef.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Typedef.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/ValueType.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/ValueType.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Elements.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Elements.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Exception.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Exception.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Fundamental.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Fundamental.cpp.m4:
        * CCF/CCF/IDL2/SemanticGraph/Interface.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Interface.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Member.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Module.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Name.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Name.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Native.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Native.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Operation.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Operation.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Sequence.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Struct.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Translation.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Translation.hpp:
        * CCF/CCF/IDL2/SemanticGraph/TypeId.cpp:
        * CCF/CCF/IDL2/SemanticGraph/ValueType.cpp:
        * CCF/CCF/IDL2/SemanticGraph/ValueType.hpp:
        * CCF/CCF/IDL2/Traversal/Elements.hpp:
        * CCF/CCF/IDL2/Traversal/Interface.tpp:
        * CCF/CCF/IDL2/Traversal/ValueType.cpp:
        * CCF/CCF/IDL2/Traversal/ValueType.hpp:
        * CCF/CCF/IDL2/Traversal/ValueType.tpp:
        * CCF/CCF/IDL3/Parser.cpp:
        * CCF/CCF/IDL3/SemanticAction/Component.hpp:
        * CCF/CCF/IDL3/SemanticAction/Consumes.hpp:
        * CCF/CCF/IDL3/SemanticAction/Emits.hpp:
        * CCF/CCF/IDL3/SemanticAction/EventType.hpp:
        * CCF/CCF/IDL3/SemanticAction/Factory.hpp:
        * CCF/CCF/IDL3/SemanticAction/Home.hpp:
        * CCF/CCF/IDL3/SemanticAction/HomeFactory.hpp:
        * CCF/CCF/IDL3/SemanticAction/HomeFinder.hpp:
        * CCF/CCF/IDL3/SemanticAction/Provides.hpp:
        * CCF/CCF/IDL3/SemanticAction/Publishes.hpp:
        * CCF/CCF/IDL3/SemanticAction/Uses.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Component.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Component.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Consumes.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Consumes.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Elements.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Emits.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Emits.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/EventType.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/EventType.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Factory.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Factory.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Home.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Home.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/HomeFactory.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/HomeFactory.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/HomeFinder.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/HomeFinder.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Include.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Include.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Provides.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Provides.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Publishes.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Publishes.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Uses.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Uses.hpp:
        * CCF/CCF/IDL3/SemanticGraph/Component.hpp:
        * CCF/CCF/IDL3/SemanticGraph/Elements.cpp:
        * CCF/CCF/IDL3/SemanticGraph/EventType.cpp:
        * CCF/CCF/IDL3/SemanticGraph/Home.hpp:
        * CCF/CCF/IDL3/Traversal/EventType.tpp:
        * CCF/CCF/CIDL/SemanticAction/Composition.hpp:
        * CCF/CCF/CIDL/SemanticAction/Factory.hpp:
        * CCF/CCF/CIDL/SemanticAction/HomeExecutor.hpp:
        * CCF/CCF/CIDL/SemanticAction/Impl/Composition.cpp:
        * CCF/CCF/CIDL/SemanticAction/Impl/Composition.hpp:
        * CCF/CCF/CIDL/SemanticAction/Impl/Elements.hpp:
        * CCF/CCF/CIDL/SemanticAction/Impl/Factory.cpp:
        * CCF/CCF/CIDL/SemanticAction/Impl/Factory.hpp:
        * CCF/CCF/CIDL/SemanticAction/Impl/HomeExecutor.cpp:
        * CCF/CCF/CIDL/SemanticAction/Impl/HomeExecutor.hpp:
        * CCF/CCF/CIDL/SemanticGraph/Elements.cpp:
        * CCF/CCF/CIDL/SemanticGraph/Executor.cpp:
        * CCF/Documentation/TODO:

          Minor cosmetic changes and cleanups.


Wed Dec 31 12:27:16 2003  Tao Lu  <lu@dre.vanderbilt.edu>

        * docs/tutorial/Hello/hello.mpc:
          Updated this file to avoid duplicated project names in
          MPC generated solution file for VC.

Wed Dec 31 10:16:17 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CIAO/ciao/Component_Base.idl:

          Replaced inclusion of IFR_Client/Interface.pidl with orb.idl
          since it has all that's needed.

Tue Dec 30 17:47:49 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * ciao/CCM_Base.idl:

          Temporarily commented import declaration even though it is
          conditionally commented out. Current CIDLC's preprocessor
          does not handle conditional compilation.

Tue Dec 30 17:03:27 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/CompilerElements/Diagnostic.hpp:
        * CCF/CCF/CompilerElements/TokenStream.hpp:

          Cosmetic changes.


        * CCF/CCF/CompilerElements/Makefile.alt:
        * CCF/CCF/CompilerElements/Preprocessor.cpp:
        * CCF/CCF/CompilerElements/Preprocessor.hpp:
        * CCF/CCF/CompilerElements/PreprocessorToken.cpp:
        * CCF/CCF/CompilerElements/PreprocessorToken.hpp:

          New (though not very capable) preprocessor for the time being.


        * CCF/CCF/IDL2/SemanticAction/Native.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Native.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Native.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Native.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Native.hpp:
        * CCF/CCF/IDL2/Traversal/Native.cpp:
        * CCF/CCF/IDL2/Traversal/Native.hpp:

          Added support for IDL2 native feature.

        * CCF/CCF/IDL2/SemanticAction/ValueType.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/ValueType.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/ValueType.hpp:

          Extended support for IDL2 valuetype feature.


        * CCF/CCF/IDL2/LexicalAnalyzer.cpp:
        * CCF/CCF/IDL2/LexicalAnalyzer.hpp:
        * CCF/CCF/IDL2/Makefile.archive:
        * CCF/CCF/IDL2/Parser.cpp:
        * CCF/CCF/IDL2/Parser.hpp:
        * CCF/CCF/IDL2/SemanticAction.hpp:
        * CCF/CCF/IDL2/SemanticGraph.hpp:
        * CCF/CCF/IDL2/Traversal.hpp:
        * CCF/CCF/IDL2/SemanticAction/Attribute.hpp:
        * CCF/CCF/IDL2/SemanticAction/Factory.hpp:
        * CCF/CCF/IDL2/SemanticAction/Include.hpp:
        * CCF/CCF/IDL2/SemanticAction/Interface.hpp:
        * CCF/CCF/IDL2/SemanticAction/Member.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Attribute.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Attribute.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Elements.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Factory.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Factory.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Include.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Include.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Interface.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Makefile.alt:
        * CCF/CCF/IDL2/SemanticAction/Impl/Member.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Member.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Operation.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Struct.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Typedef.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Attribute.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Makefile.alt:
        * CCF/CCF/IDL2/SemanticGraph/Operation.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Operation.hpp:
        * CCF/CCF/IDL2/Traversal/Fundamental.hpp:
        * CCF/CCF/IDL2/Traversal/Makefile.alt:

          Cosmetic changes.


        * CCF/CCF/IDL3/SemanticAction/EventType.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/EventType.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/EventType.hpp:

          Added support for IDL3 eventtype feature.

        * CCF/CCF/IDL3/SemanticAction/HomeFinder.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/HomeFinder.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/HomeFinder.hpp:

          Added support for IDL3 home finder feature.

        * CCF/CCF/IDL3/LexicalAnalyzer.cpp:
        * CCF/CCF/IDL3/LexicalAnalyzer.hpp:
        * CCF/CCF/IDL3/Parser.cpp:
        * CCF/CCF/IDL3/Parser.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Factory.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Factory.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Include.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Include.hpp:

          Cosmetic changes.


        * CCF/CCF/CIDL/LexicalAnalyzer.cpp:
        * CCF/CCF/CIDL/LexicalAnalyzer.hpp:
        * CCF/CCF/CIDL/SemanticAction/Impl/Factory.cpp:
        * CCF/CCF/CIDL/SemanticGraph/Composition.cpp:
        * CCF/CCF/CIDL/SemanticGraph/Composition.hpp:

          Cosmetic changes.


        * CCF/Example/CIDL/LocalExecutorMapping/ExecutorMappingGenerator.cpp:
        * CCF/Example/CIDL/LocalExecutorMapping/Makefile.alt:
        * CCF/Example/CIDL/LocalExecutorMapping/cidlc.cpp:
        * CCF/Example/CIDL/LocalExecutorMapping/test-2.idl:
        * CCF/Example/CIDL/LocalExecutorMapping/test-2_exec.idl.orig:
        * CCF/Example/IDL2/CxxMapping/Makefile.alt:
        * CCF/Example/IDL2/CxxMapping/driver.cpp:
        * CCF/Test/Makefile.alt:
        * CCF/Test/CIDL/Compiler/GeneratorImpl.hpp:
        * CCF/Test/CIDL/Compiler/Makefile.alt:
        * CCF/Test/CIDL/Compiler/driver.cpp:
        * CCF/Test/CompilerElements/Makefile.alt:
        * CCF/Test/CompilerElements/CPP/Makefile.alt:
        * CCF/Test/CompilerElements/CPP/driver.cpp:
        * CCF/Test/IDL2/Compiler/Makefile.alt:
        * CCF/Test/IDL2/Compiler/driver.cpp:
        * CCF/Test/IDL2/Traversal/Recreate/GeneratorImpl.hpp:
        * CCF/Test/IDL3/Compiler/Makefile.alt:
        * CCF/Test/IDL3/Compiler/driver.cpp:
        * CIDLC/ExecutorMappingGenerator.cpp:
        * CIDLC/cidlc.cpp:

          Updated to reflect changes above.


        * CCF/Documentation/TODO:

          Reflected new achievements.


Tue Dec 30 13:53:20 2003  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/Philosophers/Philosophers.idl:
        * examples/Philosophers/README:
        Moved this unfinished example from examples/handcrafted here.

Tue Dec 30 13:39:00 2003  Tao Lu  <lu@dre.vanderbilt.edu>

        * ChangeLog:
        Updated my ChangeLog entries to the correct format.
        Thanks for the help from Bala and Boris.

Tue Dec 30 11:42:08 2003  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/handcrafted/examples.mwc:
        Removed this file since MPC works recursively now.

Tue Dec 30 11:28:43 2003  Tao Lu  <lu@dre.vanderbilt.edu>

        * exmaples/handcrafted/BasicSP:
        Removed this directory. This example has been moved to
        examples/OEP/BasicSP and been modified to use the CIDL compiler.

Tue Dec 30 11:26:24 2003  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/handcrafted/Philosophers:
        Removed this directory.

Tue Dec 30 11:20:39 2003  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/handcrafted/Hello:
        Removed this directory. This example has been moved to
        docs/tutorial/Hello and been modified to use the CIDL compiler.

Tue Dec 30 10:56:03 2003  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/handcrafted/Display:
        Removed this directory. This example has been moved to
        examples/OEP/Display and been modified to use the CIDL compiler.

Tue Dec 23 16:26:19 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/LexicalAnalyzer.cpp:
        * CCF/CCF/IDL2/Parser.cpp:
        * CCF/CCF/IDL2/Parser.hpp:
        * CCF/CCF/IDL2/SemanticAction/Operation.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Elements.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Operation.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Operation.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Interface.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Operation.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Operation.hpp:
        * CCF/CCF/IDL2/Traversal/Operation.cpp:
        * CCF/CCF/IDL2/Traversal/Operation.hpp:
        * CCF/CCF/IDL2/Traversal/Operation.tpp:
        * CCF/Test/IDL2/SemanticGraph/HandBuilt/Builder.cpp:

          Added support for oneway operations.

        * CCF/CCF/IDL3/LexicalAnalyzer.cpp:
        * CCF/CCF/IDL3/Makefile.archive:
        * CCF/CCF/IDL3/Parser.cpp:
        * CCF/CCF/IDL3/Parser.hpp:
        * CCF/CCF/IDL3/SemanticAction.hpp:
        * CCF/CCF/IDL3/SemanticAction/Factory.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Factory.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Factory.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Makefile.alt:
        * CCF/CCF/IDL3/SemanticGraph/Home.cpp:
        * CCF/CCF/IDL3/SemanticGraph/Home.hpp:

          Added support for home finders.

        * CCF/Example/CIDL/LocalExecutorMapping/ExecutorMappingGenerator.cpp:

          Added support for feature mentioned above.

        * CCF/Example/CIDL/LocalExecutorMapping/test-2.idl:
        * CCF/Example/CIDL/LocalExecutorMapping/test-2_exec.idl.orig:

          Added coverage for features mentioned above.

        * CCF/Documentation/TODO:

          Reflected new achievements.

Tue Dec 23 12:03:27 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CIDLC/CIDLC.vcproj:

          Updated VC7.1 projects. Also temporarily excluded from the
          build generators that are still to be ported.

        * CCF/Example/CIDL/LocalExecutorMapping/ExecutorMappingGenerator.cpp:
        * CIDLC/ExecutorMappingGenerator.cpp:

          Changed 'interface' to 'interface_' since VC7.1 naively believes
          that interface is an alias for struct.

Tue Dec 23 11:34:56 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/CIDL/CIDL.vcproj:
        * CCF/CCF/IDL2/IDL2.vcproj:
        * CCF/CCF/IDL3/IDL3.vcproj:
        * CCF/CCF/CodeGenerationKit/CodeGenerationKit.vcproj:
        * CCF/CCF/CompilerElements/CompilerElements.vcproj:

          Updated VC7.1 projects.


        * CCF/CCF/IDL2/LexicalAnalyzer.cpp:
        * CCF/CCF/IDL2/Parser.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Attribute.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Interface.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Member.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Operation.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Typedef.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Elements.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Graph.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Graph.tpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Component.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Consumes.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Emits.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Home.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/HomeFactory.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Provides.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Publishes.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Uses.cpp:
        * CCF/CCF/CIDL/SemanticAction/Impl/HomeExecutor.cpp:

          Got rid of some warnings.

Tue Dec 23 10:03:38 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/LexicalAnalyzer.cpp:
        * CCF/CCF/IDL2/Makefile.archive:
        * CCF/CCF/IDL2/Parser.cpp:
        * CCF/CCF/IDL2/Parser.hpp:
        * CCF/CCF/IDL2/SemanticAction.hpp:
        * CCF/CCF/IDL2/SemanticGraph.hpp:
        * CCF/CCF/IDL2/Traversal.hpp:
        * CCF/CCF/IDL2/SemanticAction/Enum.hpp:
        * CCF/CCF/IDL2/SemanticAction/Factory.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Enum.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Enum.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Factory.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Factory.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Enum.cpp:
        * CCF/CCF/IDL2/SemanticGraph/Enum.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Makefile.alt:
        * CCF/CCF/IDL2/Traversal/Enum.cpp:
        * CCF/CCF/IDL2/Traversal/Enum.hpp:

          Added support for IDL enum type.

        * CCF/CCF/IDL2/SemanticGraph/Member.hpp:
        * CCF/CCF/IDL2/SemanticGraph/Struct.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Exception.hpp:
        * CCF/CCF/IDL2/Traversal/Attribute.hpp:

          Cosmetic changes.

Mon Dec 22 16:50:18 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CIDLC/ExecutorMappingGenerator.cpp:
        * CIDLC/ExecutorMappingGenerator.hpp:

          New version of local executor mapping generator.

        * CIDLC/cidlc.cpp:

          New version of CIDL compiler driver with temporarily disabled
          generators that require porting.

        * CIDLC/Makefile.alt:

          Temporarily disabled generators that require porting.

Mon Dec 22 16:26:21 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF:

          Added new version of CCF.

Mon Dec 22 15:35:19 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF:

          Removed (through cvs, not physically) previous version in
          preparation for commitment of the new version.

Thu Dec 18 09:57:50 2003  Balachandran  <bala@dre.vanderbilt.edu>

        * CIAO version 0.3.6 released.

2003-12-17  Tao Lu  <lu@tango.dre.vanderbilt.edu>

        * examples/Hello/step-by-step.html:

        Added this html file for explaination of the step by step tutorial.

Tue Dec  16 18:25:01 2003  Tao Lu  <lu@tango.dre.vanderbilt.edu>

        * docs/tutorial/Hello/README:
        * docs/tutorial/Hello/config:
        * docs/tutorial/Hello/CIAO_Installation_Data.ini:
        * docs/tutorial/Hello/hello.idl:
        * docs/tutorial/Hello/hello.cidl:
        * docs/tutorial/Hello/hello.mpc:
        * docs/tutorial/Hello/hello.csd:
        * docs/tutorial/Hello/hello.ssd:
        * docs/tutorial/Hello/hello_exec.cpp:
        * docs/tutorial/Hello/hello_exec.h:
        * docs/tutorial/Hello/hello_stub_export.h:
        * docs/tutorial/Hello/hello_svnt_export.h:
        * docs/tutorial/Hello/hello_exec_export.h:
        * docs/tutorial/Hello/client.cpp:
        * docs/tutorial/Hello/simple_client.cpp:
        * docs/tutorial/Hello/run_test.pl:
        * docs/tutorial/Hello/run_simple_test.pl:

        Changed Nanbor's handcrafted helloworld example to use the CIDL compiler.
        Stardard CIAO naming is used (_svnt, _exec etc.).

Tue Dec  16 14:14:59 2003  Tao Lu  <lu@dre.vanderbilt.edu>

        * docs/tutorial/hello/index.html:

        Removed this file. We will use Nanbor's Hello example in the tutorial.
        The step-by-step example will use another name and be kept in CIAO/examples.

Mon Dec  8 16:14:59 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * docs/todo.html:
        * docs/RT-Extension.html:

          Updated files.

2003-12-08  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/Hello/Receiver/Receiver_svnt.h:
        * examples/Hello/Sender/Sender_svnt.h:

          Removed two generated files.

Sun Dec  7 20:38:55 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/Hello/Sender/starter.cpp:
        * examples/Hello/Hello_Base/Hello_Base.idl:

          Fixed fuzz errors.

Sun Dec  7 20:32:41 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/Hello/Receiver/Receiver_svnt.h:
        * examples/Hello/Sender/Sender_svnt.h:
        * examples/Hello/descriptors/run_test_default.pl:

          Fixed fuzz errors.

Wed Dec 3 10:55:41 2003 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * performance-tests/Benchmark/RoundTripClient/RoundTripClient.idl:
          Changed comment to indicate that the interface uses a reference and
          not porvides it. Thanks to Gautam Thaker for pointing this out.

Wed Dec 3 12:25:20 2003  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * performance-tests/Benchmark/NOTE.txt:
        * performance-tests/Benchmark/descriptors/NOTE.txt:
          Moved file to the right directory and updated name of the .cad file
          to the right one. Thanks to Gautam Thaker for pointing this out.


Tue Dec  2 18:40:59 2003  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/Hello/Receiver/Receiver_exec.cpp:
        * examples/Hello/descriptors/run_test_default.pl:
        * examples/Hello/descriptors/run_test_remote.pl:
          Added two auto run perl scripts and fixed the bug in the
          Receiver_exec which caused the OBV run time error when
          the Sender and the Receiver are not collocated.

Tue Dec 2 18:32:23 2003  Tao Lu  <lu@tango.dre.vanderbilt.edu>

        * examples/Hello/Receiver/Receiver_exec.cpp:
        * examples/Hello/descriptors/run_test_default.pl:
        * examples/Hello/descriptors/run_test_remote.pl:
          Added two auto run perl scripts and fixed the bug in the
          Receiver_exec which caused the OBV run time error when
          the Sender and the Receiver are not collocated.

Mon Dec  1 17:49:43 2003  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/Hello/descriptors/remote.cad:
        * examples/Hello/descriptors/remote.dat:
          Added these 2 files for the example to run on remote setting.

Mon Dec  1 02:35:18 2003  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/Hello/Sender/Sender.mpc:
          Added the empty IDL_Files part in the starter project to get rid
          of the linking error(MPC generates makefile which links in
          unnecessary linkage reqirements). Also deleted all the Makefiles
          in the example. The user should run mwc.pl to regenerate the
          Makefile before building the project.

Sun Nov 30 20:51:06 2003  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/Hello/Sender/Makefile.Hello_Starter:
          Added this makefile which will make the starter program.

Sun Nov 30 11:47:29 2003  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/Hello:
          Moved the starter.cpp into the Sender project to so the
          dependency will be set correctly.

Sat Nov 29 15:57:54 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/handcrafted/BasicSP/*.mpc:
        * examples/handcrafted/Display/*.mpc:
          Removed all MPC files for this directory and sub directories
          because these examples are going to be removed and at this moment
          these MPC files cause problems with the MPC generation because
          of duplicate names.

Fri Nov 28 14:09:56 2003  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/Hello/README:
        * examples/Hello/Makefile:
        * examples/Hello/Hello_Base/Hello_Base_stub_export.h:
        * examples/Hello/Hello_Base/Makefile.Hello_Base_stub:
        * examples/Hello/Hello_Base/Hello_Base.idl:
        * examples/Hello/Hello_Base/Hello_Base_svnt_export.h:
        * examples/Hello/Hello_Base/Makefile.Hello_Base_svnt:
        * examples/Hello/Hello_Base/Hello_Base.mpc:
        * examples/Hello/Hello_Base/Makefile:
        * examples/Hello/Sender/Sender.cidl:
        * examples/Hello/Sender/Sender_exec.h:
        * examples/Hello/Sender/Makefile:
        * examples/Hello/Sender/Sender.idl:
        * examples/Hello/Sender/Sender_exec_export.h:
        * examples/Hello/Sender/Makefile.Hello_Base_Sender_exec:
        * examples/Hello/Sender/Sender.mpc:
        * examples/Hello/Sender/Sender_stub_export.h:
        * examples/Hello/Sender/Makefile.Hello_Base_Sender_stub
        * examples/Hello/Sender/SenderEI.idl:
        * examples/Hello/Sender/Sender_svnt.h:
        * examples/Hello/Sender/Makefile.Hello_Base_Sender_svnt:
        * examples/Hello/Sender/Sender_exec.cpp:
        * examples/Hello/Sender/Sender_svnt_export.h:
        * examples/Hello/Receiver/ReceiverEI.idl:
        * examples/Hello/Receiver/Makefile:
        * examples/Hello/Receiver/Receiver_Impl.ccd:
        * examples/Hello/Receiver/Makefile.Hello_Base_Receiver_exec:
        * examples/Hello/Receiver/Receiver_exec.cpp:
        * examples/Hello/Receiver/Makefile.Hello_Base_Receiver_stub:
        * examples/Hello/Receiver/Receiver_exec.h:
        * examples/Hello/Receiver/Makefile.Hello_Base_Receiver_svnt:
        * examples/Hello/Receiver/Receiver_exec_export.h:
        * examples/Hello/Receiver/Receiver.cidl:
        * examples/Hello/Receiver/Receiver_stub_export.h:
        * examples/Hello/Receiver/Receiver.idl:
        * examples/Hello/Receiver/Receiver_svnt.h:
        * examples/Hello/Receiver/Receiver.mpc:
        * examples/Hello/Receiver/Receiver_svnt_export.h:
        * examples/Hello/starter/Makefile:
        * examples/Hello/starter/Makefile.Hello_Starter:
        * examples/Hello/starter/starter.cpp:
        * examples/Hello/starter/starter.mpc:
        * examples/Hello/descriptors/CIAO_Installation_Data.ini:
        * examples/Hello/descriptors/Receiver.ssd:
        * examples/Hello/descriptors/default.cad:
        * examples/Hello/descriptors/test.dat:
        * examples/Hello/descriptors/Sender.csd:
        * examples/Hello/descriptors/Receiver.csd:
        * examples/Hello/descriptors/Sender.ssd:

        Added the files for Hello example.

Fri Nov 28 13:58:58 2003  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/Hello:

          Added the Hello example to CIAO. Thanks nanbor for the
          handcrafted examples from which I learned to program do CIAO
          programming. This example is meant to be used a step-by-step
          tutorial for CIAO.

Wed Nov 26 22:16:34 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantHeaderGenerator.cpp:

          Changed generated exception list of disconnect_* operation for
          an emits declaration to match the correct exception list
          generated in ServantSourceGenerator.cpp.

Tue Nov 25 19:46:07 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantHeaderGenerator.hpp:

          Corrected a comment.

        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:

          Fixed servant code generation to output only for components
          and homes that are used in a CIDL composition. Thanks to
          Gary Duzan <gduzan@bbn.com> for reporting the problem. Also
          added support for attributes declared in a home.

Tue Nov 25 15:39:51 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/CompilerElements/FileSystem.hpp:

          Made normalize() function use 'native' path type when
          constructing the path.

Tue Nov 25 15:06:02 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CIDLC/cidlc.cpp:

          Some code to support #include handling.

Tue Nov 25 14:47:18 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/CodeGenerationKit/CommandLine.hpp:

          Added capability to iterate over options.

        * CCF/CCF/CompilerElements/FileSystem.hpp:

          Added normalize() function to normalize absolute paths.

        * CCF/CCF/IDL2/Parser.cpp:
        * CCF/CCF/IDL2/Parser.hpp:
        * CCF/CCF/IDL2/SemanticAction/Factory.hpp:
        * CCF/CCF/IDL2/SemanticAction/Include.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Factory.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Include.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Factory.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Include.hpp:
        * CCF/Example/CIDL/LocalExecutorMapping/cidlc.cpp:

          Added #include handling.

        * CCF/Test/IDL2/Parser/Include/root.idl:
        * CCF/Test/IDL2/Parser/Include/bar/bar.idl:
        * CCF/Test/IDL2/Parser/Include/bar/baz.idl:
        * CCF/Test/IDL2/Parser/Include/foo/foo.idl:

          Simple test for #include.

Tue Nov 25 09:34:10 2003  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * performance-tests/Benchmark/RoundTrip/run_test.pl
          Changed the script to take the right svc.conf file

Mon Nov 24 19:24:42 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/OEP/BasicSP/BMClosedED/BMClosedED_exec.cpp:
        * examples/OEP/BasicSP/BMDevice/BMDevice_exec.cpp:
        * examples/handcrafted/BasicSP/BMClosedED/BMClosedED_exec.cpp:
        * examples/handcrafted/BasicSP/BMDevice/BMDevice_exec.cpp:

          Cosmetic fixes.

Mon Nov 24 16:37:12 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * ciao/ComponentsC.h:

          Removed unneeded inclusion of ComponentsC.i

Mon Nov 24 14:48:09 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * ciao/ComponentsS.h:

          Removed unneeded inclusion of ComponentsS_T.h.

Mon Nov 24 14:41:22 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tools/Assembly_Deployer/Assembly_Manager.cpp:
        * tools/Assembly_Deployer/Assembly_Visitors.cpp:
        * tools/Assembly_Deployer/Deployment_Configuration.cpp:
        * tools/Daemon/DaemonController.cpp:
        * tools/Daemon/controller_i.cpp:
        * tools/ServerActivator/ServerActivator.cpp:
        * tools/ServerActivator/ServerActivator_test_client.cpp:
        * tools/Simple_Component_Server/Simple_Component_Server.cpp:

          Added missing ACE file includes.

Mon Nov 24 14:21:58 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * ciao/Container_Base.cpp:
        * ciao/ServerActivator_Impl.cpp:
        * ciao/Server_init.cpp:

          Added missing ACE includes.

Mon Nov 24 13:39:43 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/Collectors.hpp:

          Cosmetic changes.

        * CIDLC/Literals.hpp:

          Added /*  */ in a string literal around an arg name which
          is never used in generated methods where it appears in the
          argument list.

        * CIDLC/ServantSourceGenerator.cpp:

          Commented out some unused arg names, and removed some extra
          newlines. In the connect() operation generated for a
          component, added ACE_UNUSED_ARG() for an argument which is
          unused if the component has no receptacles declared.

        * CCF/CCF/IDL2/SyntaxTree/TranslationCtor.cpp:

          New file with a dummy class and constructor, added as a workaround
          for errors related to the protected default constructor of the
          real TranslationRegion class, simlar to what has already been
          added for the Elements, Interface and Valuetype classes in
          IDL2::SyntaxTree.

        * CCF/CCF/IDL2/SyntaxTree/IDL2.mpc:

          Updated with recently added files.

Thu Nov 20 20:05:34 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * ciao/ComponentsS.h:
        * ciao/ComponentsS_T.h:

          Removed wrong includes.

Thu Nov 20 17:50:55 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tools/RTComponentServer/RTComponentServer.mpc:

          Inherit the project form ACEXML since we need that.

Thu Nov  6 07:55:20 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * Makefile:

          Added coreclean target for doing realclean on a core set of
          directories in the nightly build.

Wed Nov  5 14:07:06 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/CodeGenerationKit/CommandLineGrammar.hpp:
        * CCF/CCF/CodeGenerationKit/CommandLineParser.cpp:

          Got rid of some warnings.

        * CCF/CCF/IDL2/Parser.hpp:
        * CCF/CCF/IDL2/Parsing/Recovery.hpp:
        * CCF/CCF/IDL2/SyntaxTree/Elements.hpp:

          Added a work-around to subvert constness of descriptor
          member in spirit::parser_error. Joel de Guzman acknowledged
          that this is an architectural error but unfortunately it
          doesn't seem he is going to fix it any time soon (even though
          patch is available).

Tue Nov  4 21:21:06 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * ciao/ComponentsC.h:
        * ciao/ComponentsS.h;

          Regenerated these files. Not sure why this is maintained in the
          repo.

        * examples/handcrafted/Hello/hello_executors.h:

          #include "tao/LocalObject.h"

Tue Nov 04 19:35:10 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * COPYING: Added ACE/TAO/CIAO Copyright disclaimer.  Thanks to
          Roland Schimmack <SC@ProCom.de> for motivating the change.

Tue Nov  4 17:11:06 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tools/Daemon/CIAO_Daemon.cpp: Fixed warnings from g++.

Tue Nov  4 16:51:22 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tools/Daemon/controller_i.cpp:

          #included "ace/OS_NS_strings.h"

        * tools/RTComponentServer/RTConfig_Manager.h:
        * tools/ServerActivator/ServerActivator.cpp:
        * tools/XML_Helpers/Assembly_Handlers.cpp:
        * tools/XML_Helpers/RTConfig_Handlers.cpp:
        * tools/XML_Helpers/Softpkg_Handlers.cpp:
        * tools/XML_Helpers/XML_Utils.cpp:

          #included "ace/OS_String.h" to get the above files compiling
          with g++. We still get a link error that Don is looking at.

Tue Nov  4 16:34:45 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * ciao/Active_Objref_Map.h:
        * ciao/Client_init.h:
        * ciao/Object_Set_T.h:
        * ciao/Server_init.h:

          Added new includes that are needed to get them compiling.

Wed Oct 29 16:39:48 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantSourceGenerator.cpp:

          Removed extra generated close brace.

Wed Oct 29 15:56:33 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CCF/CCF/IDL2/Traversal/Interface.hpp:
        * CCF/CCF/IDL2/Traversal/Struct.hpp:

          Cosmetic changes.

        * CIDLC/CIDLC.vcproj:

          Added SizeTypeCalculator.{h,cpp} to project.

        * CIDLC/Literals.hpp:
        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:

          Fixed bugs in code generation - missing 'Consumer' appended
          to eventtype name, and event typename used for concatenation
          of operation name instead of event identifier name.

        * CIDLC/SizeTypeCalculator.cpp:

          Added support for wstrings, sequences and interfaces.

        * CIDLC/TypeNameEmitter.cpp:
        * CIDLC/TypeNameEmitter.hpp:

          Added support for typedefs, structs, sequences and interfaces.

        * CIDLC/cidlc.cpp:

          Added instantiation and launch of SizeTypeCalculator.

Wed Oct 29 15:19:07 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/SyntaxTree/BuiltIn.hpp:
        * CCF/CCF/IDL2/SyntaxTree/BuiltIn.hpp.m4:
        * CCF/CCF/IDL2/SyntaxTree/Elements.hpp:
        * CCF/CCF/IDL2/SyntaxTree/Interface.hpp:
        * CCF/CCF/IDL2/SyntaxTree/Sequence.hpp:
        * CCF/CCF/IDL2/SyntaxTree/Struct.hpp:
        * CCF/CCF/IDL2/SyntaxTree/Typedef.cpp:
        * CCF/CCF/IDL2/SyntaxTree/Typedef.hpp:
        * CCF/CCF/IDL3/SyntaxTree/Component.hpp:
        * CCF/CCF/IDL3/SyntaxTree/EventType.hpp:
        * CCF/CCF/IDL3/SyntaxTree/Home.hpp: added support for sharing
          context by typedef temporary and principal syntax tree node.

Wed Oct 29 13:36:47 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/Traversal/Elements.cpp:
        * CCF/CCF/IDL2/Traversal/Elements.hpp:
        * CCF/CCF/IDL2/Traversal/Typedef.hpp: fixed bug in typedef
          traversal scheme.

Fri Oct 24 19:16:21 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/Traversal/Elements.hpp:
        * CCF/CCF/IDL2/Traversal/Typedef.hpp: Fixed inheritance ambiguity.

        * CIDLC/Makefile.alt:
        * CIDLC/ServantSourceGenerator.cpp:
        * CIDLC/TypeNameEmitter.cpp:
        * CIDLC/TypeNameEmitter.hpp: Added some functions for
          typedef testing.

        * CIDLC/SizeTypeCalculator.cpp:
        * CIDLC/SizeTypeCalculator.hpp: Added initial implementation
          of fixed/variable type size calculation.

Fri Oct 24 18:17:21 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CCF/CCF/IDL2/IDL2.vcproj:

          Added new front end files to the project.

        * CCF/CCF/IDL2/SemanticAction.hpp:
        * CCF/CCF/IDL2/Traversal.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Member.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/TypeId.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Typedef.hpp:
        * CCF/CCF/IDL2/SyntaxTree/ElementsCtor.cpp:
        * CCF/CCF/IDL2/SyntaxTree/InterfaceCtor.cpp:
        * CCF/CCF/IDL2/SyntaxTree/Struct.cpp:
        * CCF/CCF/IDL2/SyntaxTree/Typedef.hpp:
        * CCF/CCF/IDL2/SyntaxTree/ValueTypeCtor.cpp:

          Fixed various minor errors, such as removal of unused argument
          identifiers, and addition of 'using std".

        * CIDLC/TypeNameEmitter.cpp:
        * CIDLC/TypeNameEmitter.hpp:

          Added case for sequences, and typedefs of string and wstring.

Fri Oct 24 17:14:51 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/Traversal/Typedef.hpp: New implementation of
          typedef traverser.

Fri Oct 24 11:31:34 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * CIAO version 0.3.5 released.

Thu Oct 16 16:45:35 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/LexicalAnalyzer.cpp:
        * CCF/CCF/IDL2/Makefile.archive:
        * CCF/CCF/IDL2/Parser.cpp:
        * CCF/CCF/IDL2/Parser.hpp:
        * CCF/CCF/IDL2/SemanticAction.hpp:
        * CCF/CCF/IDL2/SyntaxTree.hpp:
        * CCF/CCF/IDL2/Traversal.hpp:
        * CCF/CCF/IDL2/SemanticAction/Factory.hpp:
        * CCF/CCF/IDL2/SemanticAction/Member.hpp:
        * CCF/CCF/IDL2/SemanticAction/Struct.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Factory.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Interface.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Member.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Member.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Struct.cpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Struct.hpp:
        * CCF/CCF/IDL2/SyntaxTree/Makefile.alt:
        * CCF/CCF/IDL2/SyntaxTree/Member.cpp:
        * CCF/CCF/IDL2/SyntaxTree/Member.hpp:
        * CCF/CCF/IDL2/SyntaxTree/Operation.hpp:
        * CCF/CCF/IDL2/SyntaxTree/Struct.cpp:
        * CCF/CCF/IDL2/SyntaxTree/Struct.hpp:
        * CCF/CCF/IDL2/Traversal/Makefile.alt:
        * CCF/CCF/IDL2/Traversal/Member.cpp:
        * CCF/CCF/IDL2/Traversal/Member.hpp:
        * CCF/CCF/IDL2/Traversal/Struct.cpp:
        * CCF/CCF/IDL2/Traversal/Struct.hpp:
        * CCF/CCF/IDL2/Traversal/Typedef.hpp:
        * CCF/CCF/IDL3/SyntaxTree/Operation.hpp:
        * CCF/Example/CIDL/LocalExecutorMapping/ExecutorMappingGenerator.cpp:
          Added support for struct.

        * CCF/Example/CIDL/LocalExecutorMapping/test-2.idl:
        * CCF/Example/CIDL/LocalExecutorMapping/test-2_exec.idl.orig:
          Added a few structs for testing.

        * CCF/Documentation/TODO: Marked some items as done or
          partially done.

Thu Oct 16 12:55:06 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/SyntaxTree/ElementsCtor.cpp:
        * CCF/CCF/IDL2/SyntaxTree/InterfaceCtor.cpp:
        * CCF/CCF/IDL2/SyntaxTree/ValueTypeCtor.cpp: Added fake ctor
          definition for some compilers (like MSVC) that insist they
          should be defined (even though never used).

Thu Oct 16 12:07:01 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/SemanticAction/Impl/Interface.hpp:
        * CCF/CCF/IDL2/SyntaxTree/BuiltIn.cpp:
        * CCF/CCF/IDL2/SyntaxTree/BuiltIn.cpp.m4:
        * CCF/CCF/IDL2/SyntaxTree/BuiltIn.hpp:
        * CCF/CCF/IDL2/SyntaxTree/BuiltIn.hpp.m4:
        * CCF/CCF/IDL2/SyntaxTree/BuiltIn.m4:
        * CCF/CCF/IDL2/SyntaxTree/Elements.cpp:
        * CCF/CCF/IDL2/SyntaxTree/Elements.hpp:
        * CCF/CCF/IDL2/SyntaxTree/Interface.cpp:
        * CCF/CCF/IDL2/SyntaxTree/Interface.hpp:
        * CCF/CCF/IDL2/SyntaxTree/Sequence.hpp:
        * CCF/CCF/IDL2/SyntaxTree/Typedef.cpp:
        * CCF/CCF/IDL2/SyntaxTree/Typedef.hpp:
        * CCF/CCF/IDL2/SyntaxTree/ValueType.cpp:
        * CCF/CCF/IDL2/SyntaxTree/ValueType.hpp:
        * CCF/CCF/IDL2/Traversal/BuiltIn.hpp:
        * CCF/CCF/IDL2/Traversal/BuiltIn.hpp.m4:
        * CCF/CCF/IDL2/Traversal/Elements.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Component.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Home.hpp:
        * CCF/CCF/IDL3/SyntaxTree/Component.cpp:
        * CCF/CCF/IDL3/SyntaxTree/Component.hpp:
        * CCF/CCF/IDL3/SyntaxTree/EventType.hpp:
        * CCF/CCF/IDL3/SyntaxTree/Home.hpp:
        * CCF/CCF/CIDL/SemanticAction/Impl/HomeExecutor.hpp: Added the
          SyntaxTree::ForwardDeclarableTypeDecl base class and moved
          there {virtual bool defined () const;}. Added
          {virtual bool complete () const;} to TypeDecl to reflect type
          completeness. Also changed some type names for consistency.

        * CCF/Example/CIDL/LocalExecutorMapping/ExecutorMappingGenerator.cpp:
        * CCF/Example/CIDL/LocalExecutorMapping/cidlc.cpp: Minor changes to
          reflect above.

        * CIDLC/ExecutorMappingGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:
        * CIDLC/TypeNameEmitter.cpp:
        * CIDLC/TypeNameEmitter.hpp:
        * CIDLC/cidlc.cpp: Minor changes to reflect above.

Wed Oct 15 15:43:13 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/LexicalAnalyzer.cpp:
        * CCF/CCF/IDL2/Makefile.archive:
        * CCF/CCF/IDL2/Parser.cpp:
        * CCF/CCF/IDL2/Parser.hpp:
        * CCF/CCF/IDL2/SyntaxTree.hpp:
        * CCF/CCF/IDL2/Traversal.hpp:
        * CCF/CCF/IDL2/SemanticAction/Typedef.hpp:
        * CCF/CCF/IDL2/SemanticAction/Impl/Typedef.hpp:
        * CCF/CCF/IDL2/SyntaxTree/Makefile.alt:
        * CCF/CCF/IDL2/SyntaxTree/Sequence.cpp:
        * CCF/CCF/IDL2/SyntaxTree/Sequence.hpp:
        * CCF/CCF/IDL2/Traversal/Makefile.alt:
        * CCF/CCF/IDL2/Traversal/Sequence.cpp:
        * CCF/CCF/IDL2/Traversal/Sequence.hpp: Added support for
          unbounded sequence.

        * CCF/Example/CIDL/LocalExecutorMapping/test-2.idl:
        * CCF/Example/CIDL/LocalExecutorMapping/test-2_exec.idl.orig:
          Added a few sequences for testing.

Wed Oct 15 13:59:33 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/SyntaxTree/BuiltIn.hpp:
        * CCF/CCF/IDL2/SyntaxTree/BuiltIn.hpp.m4:
        * CCF/CCF/IDL2/SyntaxTree/Elements.hpp:
        * CCF/CCF/IDL2/SyntaxTree/Interface.hpp:
        * CCF/CCF/IDL2/SyntaxTree/Typedef.cpp:
        * CCF/CCF/IDL2/SyntaxTree/Typedef.hpp:
        * CCF/CCF/IDL2/SyntaxTree/ValueType.hpp:
        * CCF/CCF/IDL2/Traversal/Elements.cpp:
        * CCF/CCF/CIDL/SemanticAction/Impl/HomeExecutor.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Component.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Home.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Include.hpp:
        * CCF/CCF/IDL3/SyntaxTree/Component.hpp:
        * CCF/CCF/IDL3/SyntaxTree/EventType.hpp:
        * CCF/CCF/IDL3/SyntaxTree/Home.hpp:
        * CCF/CCF/IDL3/Traversal/Operation.cpp: Second part of
          typedef-related infrastructure.

        * CCF/Example/CIDL/LocalExecutorMapping/test-0.idl:
        * CCF/Example/CIDL/LocalExecutorMapping/test-0_exec.idl.orig:
        * CCF/Example/CIDL/LocalExecutorMapping/test-1.idl: Added a few
          typedef's for testing.

        * CCF/Example/CIDL/LocalExecutorMapping/ExecutorMappingGenerator.cpp:
        * CCF/Example/CIDL/LocalExecutorMapping/Makefile.alt:
        * CCF/Example/CIDL/LocalExecutorMapping/cidlc.cpp: Some minor
          clean-up's.

        * CCF/Documentation/TODO: Added a few more items.

Tue Oct 14 22:44:43 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/Hello/simple_client.cpp:
        * examples/handcrafted/Hello/client.cpp: Added the missing streams
          header file.

Tue Oct 14 17:18:43 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CIDLC/Makefile.alt: Added alternative (to mpc) means of
          building CIDL compiler.

Tue Oct 14 16:57:54 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CIDLC/ExecutorMappingGenerator.cpp:
        * CIDLC/RepositoryIdGenerator.cpp: Some minor clean-up's.

Tue Oct 14 16:41:41 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/IDL2/LexicalAnalyzer.cpp:
        * CCF/IDL2/Makefile.archive:
        * CCF/IDL2/Parser.cpp:
        * CCF/IDL2/Parser.hpp:
        * CCF/IDL2/SemanticAction.hpp:
        * CCF/IDL2/SyntaxTree.hpp:
        * CCF/IDL2/Traversal.hpp:
        * CCF/IDL2/SemanticAction/Factory.hpp:
        * CCF/IDL2/SemanticAction/Typedef.hpp:
        * CCF/IDL2/SemanticAction/Impl/Factory.hpp:
        * CCF/IDL2/SemanticAction/Impl/Interface.hpp:
        * CCF/IDL2/SemanticAction/Impl/Typedef.cpp:
        * CCF/IDL2/SemanticAction/Impl/Typedef.hpp:
        * CCF/IDL2/SyntaxTree/BuiltIn.hpp:
        * CCF/IDL2/SyntaxTree/BuiltIn.hpp.m4:
        * CCF/IDL2/SyntaxTree/Elements.cpp:
        * CCF/IDL2/SyntaxTree/Elements.hpp:
        * CCF/IDL2/SyntaxTree/Elements.tpp:
        * CCF/IDL2/SyntaxTree/Interface.hpp:
        * CCF/IDL2/SyntaxTree/Makefile.alt:
        * CCF/IDL2/SyntaxTree/Module.hpp:
        * CCF/IDL2/SyntaxTree/Operation.hpp:
        * CCF/IDL2/SyntaxTree/Translation.cpp:
        * CCF/IDL2/SyntaxTree/Translation.hpp:
        * CCF/IDL2/SyntaxTree/TypeId.cpp:
        * CCF/IDL2/SyntaxTree/Typedef.cpp:
        * CCF/IDL2/SyntaxTree/Typedef.hpp:
        * CCF/IDL2/SyntaxTree/ValueType.hpp:
        * CCF/IDL2/Traversal/BuiltIn.hpp:
        * CCF/IDL2/Traversal/BuiltIn.hpp.m4:
        * CCF/IDL2/Traversal/Elements.cpp:
        * CCF/IDL2/Traversal/Elements.hpp:
        * CCF/IDL2/Traversal/Interface.hpp:
        * CCF/IDL2/Traversal/Module.hpp:
        * CCF/IDL2/Traversal/Operation.hpp:
        * CCF/IDL2/Traversal/Translation.hpp:
        * CCF/IDL2/Traversal/TypeId.hpp:
        * CCF/IDL2/Traversal/Typedef.cpp:
        * CCF/IDL2/Traversal/Typedef.hpp:
        * CCF/IDL3/SyntaxTree/Component.hpp:
        * CCF/IDL3/SyntaxTree/EventType.hpp:
        * CCF/IDL3/SyntaxTree/Home.hpp:
        * CCF/IDL3/SyntaxTree/Operation.hpp:
        * CCF/IDL3/Traversal/Component.hpp:
        * CCF/IDL3/Traversal/EventType.hpp:
        * CCF/IDL3/Traversal/Home.hpp:
        * CCF/IDL3/Traversal/Operation.hpp:
        * CCF/CIDL/SyntaxTree/Composition.hpp:
        * CCF/CIDL/SyntaxTree/HomeExecutor.hpp:
        * CCF/CIDL/Traversal/Composition.hpp:
        * CCF/CIDL/Traversal/HomeExecutor.hpp: First part of
          typedef-related infrastructure.

        * CCF/CodeGenerationKit/IndentationIDL.hpp:
        * CCF/CompilerElements/Preprocessor.hpp:
        * Example/CIDL/LocalExecutorMapping/ExecutorMappingGenerator.cpp:
        * Example/CIDL/LocalExecutorMapping/cidlc.cpp:
        * Example/CIDL/LocalExecutorMapping/test-0.idl: Some minor
          clean-up's.

        * Documentation/TODO: Added a few more items.

Tue Oct 14 00:54:10 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * performance-tests/Benchmark/RoundTrip/svc.conf:
          Changed to load Advanced_Resource_Factory dynamically.

        * performance-tests/Benchmark/RoundTripServer/RoundTripServer.mpc:
        * performance-tests/Benchmark/RoundTripServer/LatencyTest.h:
        * performance-tests/Benchmark/RoundTripServer/server.cpp:
          Changed to implement the Benchmark::Latency_Test interface
          instead of the Latency_Test interface.  Otherwise, we won't be
          able to connect the interface to a receptacle expecting another
          interface type.

Tue Oct 14 00:54:10 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * performance-tests/Benchmark/RoundTripClient/RoundTripClient_exec.cpp:
          Fixed a minor compilation problem.

        * performance-tests/Benchmark/descriptors/Test-ior.cad:
        * performance-tests/Benchmark/RoundTripClient/run_test_ior_cad.pl:
        * performance-tests/Benchmark/RoundTripServer/server.cpp:

          Changed to output IOR to a fixed file named "rtserver.ior" and
          refer to the object as file://rtserver.ior in the cad file

Mon Oct 13 23:41:10 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/Display/RateGen/controller.cpp:
        * examples/handcrafted/Display/RateGen/client.cpp: Added inclusion
          of "ace/streams.h" to make them compile.

Mon Oct 13 22:31:10 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/BasicSP_EC2/RTEventService/RTEventService_exec.cpp:
          Fixed a fuzz warning.

Mon Oct 13 16:49:00 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * tools/RTComponentServer/RTConfig_Manager.h:
        * tools/RTComponentServer/ComponentServer_Task.h:
          Added /**/ to fix Fuzz errors.

Sun Oct 12 20:44:41 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/Collectors.hpp:
        * CIDLC/DescriptorGenerator.cpp:
        * CIDLC/DescriptorGenerator.hpp:
        * CIDLC/ExecutorMappingGenerator.cpp:
        * CIDLC/ExecutorMappingGenerator.hpp:
        * CIDLC/Literals.hpp:
        * CIDLC/ServantGenerator.cpp:
        * CIDLC/ServantGenerator.hpp:
        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantHeaderGenerator.hpp:
        * CIDLC/ServantSourceGenerator.cpp:
        * CIDLC/ServantSourceGenerator.hpp:
          Changed top of files to match the title/author/cvs id  format for
          all other CCF and CIDLC files.

        * CIDLC/TypeNameEmitter.cpp:
        * CIDLC/TypeNameEmitter.hpp:

          New files, adding support for all basic IDL types, and factoring
          out the typename emitter classes for operation return types and
          parameters into a separate translation unit, to eliminate the
          duplication in ServantHeaderGenerator.cpp and
          ServantSourceGenerator.cpp.

        * CIDLC/cidlc.mpc:
        * CIDLC/CIDLC.vcproj:

          Updated with the new files above.

Sun Oct 12 18:36:16 2003  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * performance-tests/Benchmark/Benchmark.mpc:
        * performance-tests/Benchmark/Benchmark.idl:
        * performance-tests/Benchmark/server.cpp:
        * performance-tests/Benchmark/svc.conf:
        * performance-tests/Benchmark/LatencyTest.h:
        * performance-tests/Benchmark/LatencyTest.cpp:
        * performance-tests/Benchmark/RoundTripClient/RoundTripClient.idl:
        * performance-tests/Benchmark/RoundTripClient/client.cpp:
        * performance-tests/Benchmark/RoundTrip/RoundTrip.idl:
          Added test scenario in which a CORBA component interacts with
          a CORBA server.

Sat Oct 11 00:18:13 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/generate_component_mpc.pl: My previous change didn't
          completely fix the script.  It was using the obsolet dependency
          MPC keyword "depends" instead of "after", and the dependencies
          was partially broken.

Fri Oct 10 18:39:18 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/CIDLC.vcproj:
        * CIDLC/DescriptorGenerator.cpp:
        * CIDLC/Literals.hpp:
        * CIDLC/RepositoryIdGenerator.cpp:
        * CIDLC/RepositoryIdGenerator.hpp:
        * CIDLC/cidlc.cpp:

          Added backend support for typeid and typeprefix, used in
          computing the repository id string.

Fri Oct 10 15:54:00 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/LexicalAnalyzer.hpp:
        * CCF/CCF/IDL2/LexicalAnalyzer.cpp:
        * CCF/CCF/IDL2/SyntaxTree/BuildIn.m4:
        * CCF/CCF/IDL2/SyntaxTree/BuildIn.hpp:
        * CCF/CCF/IDL2/SyntaxTree/BuildIn.hpp.m4:
        * CCF/CCF/IDL2/SyntaxTree/BuildIn.cpp:
        * CCF/CCF/IDL2/SyntaxTree/BuildIn.cpp.m4:
        * CCF/CCF/IDL2/Traversal/BuildIn.hpp:
        * CCF/CCF/IDL2/Traversal/BuildIn.hpp.m4:
        * CCF/Example/CIDL/LocalExecutorMapping/cidlc.cpp:
        * CCF/Example/CIDL/LocalExecutorMapping/test-2.idl:
        * CCF/Example/CIDL/LocalExecutorMapping/test-1_exec.idl.orig:
        * CCF/Example/CIDL/LocalExecutorMapping/test-2_exec.idl.orig:
        * CIDLC/cidlc.cpp: Added support for all built-in types (spec
         calls them 'base types') in CCF and in CIDL compiler driver.

        * CCF/Documentation/TODO: marked corresponding item as done.

Thu Oct 09 00:50:24 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/generate_component_mpc.pl: Minor enhancement to the previous
          change.  This script now allows an optional project name prefix
          to be define via the [-u] flag.  If this flag is not used, the
          dependent component's name will be used as project name prefix.
          Since there are possibly many component depending on the same
          component, using the depending componant name may not help much.
          If neither -u and -p flag are used, no project name prefix will
          be added (the redundant leading underscore from the previous
          change has been removed.)

Fri Oct  6 10:00:12 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Documentation/TODO: merged items from my off-line TODO.

Fri Oct 03 22:45:43 2003  Chris Cleeland  <cleeland@ociweb.com>

        * CIAO version 0.3.4 released.

Fri Oct 03 11:07:20 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/releasenotes.html: Updated the release notes with more
          recent news.

Fri Oct  3 08:14:26 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/handcrafted/BasicSP_EC/EC/EC.mpc: Fixed a problem with
          the MPC file. Thanks to Johnny Willemsen for poitning this out.

Thu Oct  2 15:02:10 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL2/Traversal/TypeId.hpp:
        * CCF/CCF/IDL2/Traversal/TypeId.cpp:
        * CCF/CCF/IDL2/Traversal.hpp:
        * CCF/CCF/IDL2/SyntaxTree.hpp:
        * CCF/CCF/IDL2/SemanticAction.hpp: Added missing pieces for
          typeid/typeprefix support.

Wed Oct  1 14:26:09 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/CompilerElements/Context.hpp: added count () member
          function.

        * CIDLC/RepositoryIdGenerator.hpp:
        * CIDLC/RepositoryIdGenerator.cpp: implemented first phase of
          repository id generation.

Tue Sep 30 09:52:13 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * performance-tests/mico/mico-thrput-st/client.cc:
        * performance-tests/mico/mico-thrput-st/server.cc:

          Fixed fuzz errors.


Fri Sep 26 12:13:44 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * performance-tests/Benchmark/RoundTripClient/run_test_ior_cad.pl:
          Changed to deploy Test-IOR.cad instead of
          Test-Name-Service.cad.

        * performance-tests/Benchmark/RoundTripClient/RoundTripClient_stub_export.h:
        * performance-tests/Benchmark/RoundTripClient/RoundTripClient_svnt_export.h:
          Fixed some extra line-breaks that were causing compilation errors.

        * performance-tests/Benchmark/RoundTripClient/RoundTripClient_exec.cpp:
          Fixed a compilation error.

        * performance-tests/Benchmark/RoundTripServer/RoundTripServer.mpc:
          Removed a redundant comma.

        * tools/ComponentServer/ComponentServer.cpp:
          Fixed execution error in "debug mode."

Wed Sep 24 20:59:09 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/handcrafted/BasicSP_EC2/EC/EC.mpc: Fixed problems that
          missed my last checkiin "Sun Sep 21 17:07:45 2003  Balachandran
          Natarajan  <bala@dre.vanderbilt.edu>".

Sun Sep 21 17:15:24 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * bin/generate_component_mpc.pl: Appended the value provided to
          the -p option to the project names.

Sun Sep 21 17:07:45 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/handcrafted/BasicSP_EC/BasicSP.mpc:
        * examples/handcrafted/BasicSP_EC/BMClosedED/BMClosedED.mpc:
        * examples/handcrafted/BasicSP_EC/BMDevice/BMDevice.mpc:
        * examples/handcrafted/BasicSP_EC/BMDisplay/BMDisplay.mpc:
        * examples/handcrafted/BasicSP_EC/EC/EC.mpc
        * examples/handcrafted/BasicSP_EC2/BasicSP.mpc:
        * examples/handcrafted/BasicSP_EC2/BMClosedED/BMClosedED.mpc:
        * examples/handcrafted/BasicSP_EC2/BMDevice/BMDevice.mpc:
        * examples/handcrafted/BasicSP_EC2/BMDisplay/BMDisplay.mpc:
          Changed the project file names so that they don't clash with the
          project names in examples/handcrafted/BasicSP. This shold get
          rid of warning in VC7 builds hosted by remedy.

Fri Sep 19 14:27:57 2003  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * performance-tests/Benchmark/RoundTripServer/RoundTripServer.mpc:
          Fixed to adhere to latest mpc changes. This also ensured proper
          make files to be generated.

Fri Sep 19 13:31:50 2003  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * performance-tests/Benchmark/descriptors/Test-IOR.cad:
          cad file to test CORBA server with Component client
        * performance-tests/Benchmark/RoundTripClient/run_test_ior.pl:
          Perl script to run the benchmark
        * performance-tests/Benchmark/RounTrip_server:
        * performance-tests/Benchmark/RoundTripServer/LatencyTest.cpp:
        * performance-tests/Benchmark/RoundTripServer/LatencyTest.h:
        * performance-tests/Benchmark/RoundTripServer.mpc:
        * performance-tests/Benchmark/RoundTripServer/server.cpp:
        * performance-tests/Benchmark/RoundTripServer/Test.idl:
          A server to communicate with CIAO client, implementing the same
          interface needed.

Tue Sep 16 14:04:06 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/Example/ComponentDeploymentDescriptor: Added small example
          that shows how syntax tree traversal mechanism can be used in
          different code generation tasks.

Thu Aug 28 12:30:10 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CFF/IDL2/SyntaxTree/Elements.*: Made SyntaxTree::Node
          capable of holding arbitrary context information (see
          SyntaxTree::Node::context ()). Plus some minor architectural
          changes.

        * CCF/CFF/IDL2/SyntaxTree/TypeId.*
        * CCF/CFF/IDL2/SemanticAction/TypeId.*
        * CCF/CFF/IDL2/SemanticAction/Impl/TypeId.*
        * CCF/CFF/IDL2/LexicalAnalyzer.*
        * CCF/CFF/IDL2/Parser.*: Added support for typeid and typeprefix.

Tue Aug 26 16:59:49 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tools/RTComponentServer/RTConfig_Manager.cpp:
        * tools/RTComponentServer/RTConfig_Manager.inl:
        * tools/RTComponentServer/RTServer_Impl.cpp:
        * tools/RTComponentServer/RTServer_Impl.h:
        * tools/XML_Helpers/RTConfig_Handlers.cpp: Fixed compilation
          problem on Linux.

Tue Aug 26 10:14:03 2003  Diego Sevilla  <dsevilla@ditec.um.es>

        * CIDLC/ServantSourceGenerator.cpp: Correctly generate get and set
          operations for attributes in the servant code.  An error in how
          I built the traverse was preventing that.

Tue Aug 26 09:27:17 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:

          Changed the constructor of SetAttributeEmitter to take
          INArgTypeNameEmitter as a delegate instead of
          ReturnTypeNameEmitter, which was previously the case, causing
          the code generation to emit the return type char* instead
          of the correct IN argument type const char*. Thanks to
          Roland Schimmack <SC@ProCom.de> for reporting the bug.

Mon Aug 25 09:47:19 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/OEP/Display/NavDisplayGUI_exec/RootPanel.h: Fixed a
          compilation error by adding inclusion of "ace/Null_Mutex.h" and
          define QT_GENUINE_STR.

Mon Aug 25 07:42:14 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tools/RTComponentServer/ComponentServer_Task.cpp:
        * tools/RTComponentServer/ComponentServer_Task.h:
        * tools/RTComponentServer/RTConfig_Manager.h: Fixed merge errors
          by adding inclusion of "tao/ORB.h", "ace/Null_Mutex.h" and
          such.

Sun Aug 24 22:03:55 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

          Merged the RTCIAO-0 branch into main trunk.

        Sun Aug 24 21:45:33 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

                * tools/Assembly_Deployer/Assembly_Deployer.mpc:
                * tools/Daemon/Daemon.mpc: Both CIAO_Daemon and Assembly_Manager
                  depend on RTCORBA  library now because they both required to
                  handle RTCORBA related types.

                * tools/Assembly_Deployer/Assembly_Visitors.cpp:
                * tools/Assembly_Deployer/Assembly_Visitors.h: Decoupled the
                  container creation functionality from the creation of
                  ComponentServer into a separate method.  This allows us to
                  better manage the type of container and the associating policy
                  sets.

                * tools/Assembly_Deployer/Deployment_Configuration.cpp:
                * tools/Assembly_Deployer/Deployment_Configuration.h: Changed the
                  get_activator[_ior] functions to return default activator where
                  there's no valid activator id available instead of throwing an
                  exception.

                * tools/ComponentServer/ComponentServer.cpp: Invoke the init
                  method of ComponentServer servant.  This function is now
                  supported.

                * tools/RTComponentServer/ComponentServer_Task.cpp:
                * tools/RTComponentServer/ComponentServer_Task.h:
                * tools/RTComponentServer/RTComponentServer.cpp:
                * tools/RTComponentServer/RTComponentServer.mpc:
                * tools/RTComponentServer/RTConfig_Manager.cpp:
                * tools/RTComponentServer/RTConfig_Manager.h:
                * tools/RTComponentServer/RTServer_Impl.cpp:
                * tools/RTComponentServer/RTServer_Impl.h:
                * tools/RTComponentServer/RTServer_Impl.inl: Added/Changed to
                  properly support the real-time ComponentServer implementation.

                * tools/ServerActivator/ServerActivator.cpp: Fixed a fuzz error.

                * tools/XML_Helpers/Assembly_Spec.inl: Changed to return 0 if
                  rtcad_filename and rtpolicyset_ref is not specified in the
                  original XML file.

        Thu Aug 14 16:27:52 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

                * tools/XML_Helpers/RTCAD-example.rtd:
                * tools/XML_Helpers/RTCAD-example.cad: Added new file to show some
                  example cad and rtd files.

                * tools/XML_Helpers/main.cpp:
                * tools/XML_Helpers/XML_Utils.cpp: Extended to invoke the RTCAD
                  handler.

                * tools/XML_Helpers/RTConfig_Handlers.h:
                * tools/XML_Helpers/RTConfig_Handlers.cpp: Fixed run-time errors.

        Wed Aug 13 01:48:46 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

                * tools/RTComponentServer/RTComponentServer.mpc: Added dependency
                  to XML_Helpers library.

                * tools/XML_Helpers/XML_Utils.h: Added parse_rtcad_extension
                  static method.  This is yet to be implemented.

                * tools/XML_Helpers/RTConfig_Handlers.h:
                * tools/XML_Helpers/RTConfig_Handlers.inl:
                * tools/XML_Helpers/RTConfig_Handlers.cpp: Added new files for
                  parsing RTConfig extention.

                * tools/RTComponentServer/RTConfig_Manager.h:
                * tools/RTComponentServer/RTConfig_Manager.cpp:
                * tools/XML_Helpers/RTConfiguration.idl: Renamed
                  RTORB_Resources_Info to RTORB_Resource_Info.

                * tools/XML_Helpers/XMLHelper.mpc: Added rtcorba as a base
                  project.  We now depend on RTCORBA.

        Sun Aug 10 13:50:15 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

                * tools/RTComponentServer/RTConfiguration.idl:
                * tools/RTComponentServer/RTConfigurationClient.cpp:
                * tools/RTComponentServer/RTComponentServer.mpc: Removed
                  RTConfiguration.idl and the stub wrapper
                  RTConfigurationClient.cpp.  They have been moved to XML_Helpers
                  library.

                * tools/RTComponentServer/RTConfig_Manager.h:
                * tools/RTComponentServer/RTConfig_Manager.cpp: Changed to include
                  RTConfigurationC.h from XML_Helpers subdir and make sure
                  RTCORBA.h is included before RTConfigurationC.h.

                * tools/XML_Helpers/XMLHelpers.mpc:
                * tools/XML_Helpers/RTConfiguration.idl:
                * tools/XML_Helpers/RTConfiguration_Stubs.cpp: Added
                  RTConfiguration info and its wrapper cpp file.  This wrapper cpp
                  file is used to ensure that RTCORBA.h is included before
                  RTConfigurationC.h.

                * tools/XML_Helpers/Assembly_Handlers.cpp:
                * tools/XML_Helpers/Assembly_Handlers.h:
                * tools/XML_Helpers/Assembly_Handlers.inl:
                * tools/XML_Helpers/Assembly_Spec.h:
                * tools/XML_Helpers/Assembly_Spec.inl: Extended to parse and store
                  <extension> information in <processcollocation> and
                  <homeplacement>.

        Wed Aug 06 17:02:02 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

                * tools/RTComponentServer/RTConfig_Manager.h:
                * tools/RTComponentServer/RTConfig_Manager.cpp: Added support for
                  keeping PriorityBands information.

        Sun Aug  3 23:12:20 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

                * tools/RTComponentServer/RTConfig_Manager.cpp: Fixed mismatched
                  throw specifications.  Added inclusion of "ace/SString.h" as ACE
                  now only includes "ace/SStringfwd.h".

        Sun Aug 03 00:45:59 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

                * tools/RTComponentServer/RTConfig_Manager.cpp: Fixed some
                  accidental pastings of code.

        Fri Aug 01 13:50:34 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

                * tools/RTComponentServer/RTComponentServer.mpc:
                * tools/RTComponentServer/RTConfig_Manager.cpp:
                * tools/RTComponentServer/RTConfig_Manager.h:
                * tools/RTComponentServer/RTConfig_Manager.inl:
                * tools/RTComponentServer/RTConfiguration.idl: Added code for
                  managing named collection of RTCORBA related policies.

        Sun Jul 06 21:37:22 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

                * tools/RTComponentServer/ComponentServer_Task.cpp (svc): Changed
                  to take advantage of CIAO::Activator_Callback interface change
                  for getting back our own ConfigValues.  We will need to use
                  these configuration values in the future.

        Sun Jul 06 11:50:48 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

                * tools/RTComponentServer/ComponentServer_Task.cpp:
                * tools/RTComponentServer/ComponentServer_Task.h:
                * tools/RTComponentServer/ComponentServer_Task.inl:
                * tools/RTComponentServer/README:
                * tools/RTComponentServer/RTComponentServer.cpp:
                * tools/RTComponentServer/RTComponentServer.mpc: Added the
                  skeleton of RTComponentServer.

        Sun Jul 06 11:33:55 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

                * Added: this temporary ChangeLog file for changes within the
                  RTComponentServer.


Sun Aug 24 21:38:24 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/Container_Base.cpp:
        * ciao/Container_Base.h: Added an extra argument of type
          CORBA::PolicyList to the init method which we can use to pass
          extra RTCORBA policies into the RT Container.

        * ciao/Container_Impl.cpp:
        * ciao/Container_Impl.h: Fixed memory management of cached
          ConfigValue valuetype.

        * ciao/ServerActivator_Impl.h:
        * ciao/ServerActivator_Impl.cpp: Extended the server activator to
          specify RTCAD filename when instantiating a RTComponentServer.

        * examples/OEP/Display/descriptors/HUDisplay-rtcad.cad:
        * examples/OEP/Display/descriptors/NOTE-win.txt:
        * examples/OEP/Display/descriptors/RTsvc.conf:
        * examples/OEP/Display/descriptors/test.rtd:
        * examples/OEP/Display/descriptors/svcmap.dat: Added an RTCCM
          example.

Wed Aug 20 17:44:29 2003  Diego Sevilla  <dsevilla@ditec.um.es>

        * CIDLC/DescriptorGenerator.cpp: Small fix to make it compile
          under linux also.

Wed Aug 20 17:36:02 2003  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * performance-tests/mico:
          Directory where mico specific tests will be added

        * performance-tests/mico/mico-thrput-st:
          Single threaded throughput tests for the MICO ORB

        * performance-tests/mico/mico-thrput-st/server.cc:
        * performance-tests/mico/mico-thrput-st/client.cc:
        * performance-tests/mico/mico-thrput-st/RoundTrip_impl.cc:
        * performance-tests/mico/mico-thrput-st/RoundTrip_impl.h:
        * performance-tests/mico/mico-thrput-st/Makefile:
        * performance-tests/mico/mico-thrput-st/mico-env:
        * performance-tests/mico/mico-thrput-st/RoundTrip.idl:
          Single threaded througput test for MICO ORB. This experiment
        uses the same interface as the one used in TAO for generating
        daily performance stats. Further, the test also uses ACE for
        generating results.

Wed Aug 20 17:19:52 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/cidlc.mpc:

          Added new and missing files.

Wed Aug 20 17:09:18 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CCF/CCF/CodeGenerationKit/CodeGenerationKit.vcproj:

          Added missing header files to the project.

        * CCF/CCF/CodeGenerationKit/Regex.hpp:

          Boris Kolpackov's <boris@dre.vanderbilt.edu> change
          to allow a choice of delimiters when passing a
          regular expression string to the perl_s() method.

        * CIDLC/ExecutorMappingGenerator.cpp:
        * CIDLC/ServantGenerator.cpp:
        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:

          Minor cosmetic changes.

        * CIDLC/DescriptorGenerator.cpp:
        * CIDLC/DescriptorGenerator.hpp:

          New files, containing code for an XML generator, the
          CORBA Component Descriptor .ccd file.

        * CIDLC/CIDLC.vcproj:
        * CIDLC/cidlc.cpp:

          Updated these files to recognize the new generator.
          Also changed the output directory of the executable
          to be CIAO_ROOT/bin.

Wed Aug 20 14:48:15 2003  Diego Sevilla  <dsevilla@ditec.um.es>

        * CCF/Example/CodeGenerationKit/Indentation/XML/Makefile.alt:
        * CCF/Example/CodeGenerationKit/Indentation/XML/XML.mpc:
        * CCF/Example/CodeGenerationKit/Indentation/XML/indent_xml.cpp:
          Added example of usage for the XML indenter.

        * CCF/CCF/CodeGenerationKit/IndentationXML.hpp: Added XML
          indenter.

Tue Aug 19 16:06:01 2003  Diego Sevilla  <dsevilla@ditec.um.es>

        * CIDLC/cidlc.mpc: Some cleaning of the MPC file: Removed unneeded
          Instrocpection and added the CompilerElements library.

Mon Aug 18 14:08:05 2003  Arvind S. Krishna  <arvindk@equus.dre.vanderbilt.edu>

        * performance-tests/Benchmark/descriptors/test-multi-process.dat:
          This file contains host port locations for running components
          in multiple hosts/processes. Will be used as an example
          scenario for benchmarking experiments

Mon Aug 18 12:11:55 2003  Arvind S. Krishna  <arvindk@equus.dre.vanderbilt.edu>

        * performance-tests/Benchmar/Multi_Threaded/NOTE.txt:
          Updated information on pre-conditions necessary to run the
          experiment

Mon Aug 18 12:01:37 2003  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * performance-tests/Benchmar/Multi_Threaded/Multi_Threaded.mpc:
        * performance-tests/Benchmar/Multi_Threaded/client.cpp:
        * performance-tests/Benchmar/Multi_Threaded/Client_Task.h:
        * performance-tests/Benchmar/Multi_Threaded/Client_Task.cpp:
        * performance-tests/Benchmar/Multi_Threaded/run_test.pl:
        * performance-tests/Benchmar/Multi_Threaded/svc.conf:
        * performance-tests/Benchmar/Multi_Threaded/NOTE.txt:
        * performance-tests/Benchmar/Multi_Threaded/README:
          Test that measures round-trip latency behavior using a
        multi-threaded client.

        * performance-tests/Benchmark/descriptors/Multi_Threaded.cad:
        * performance-tests/Benchmark/descriptors/CIAO_Installation_Data.ini:
          Appropriate CAD file to configure the above experiment

Sun Aug 17 22:43:55 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/Container_Base.cpp:
        * ciao/Container_Base.h:
        * ciao/Container_Impl.cpp: Changed the signature of
          CIAO::Container to pass in a CORBA::PolicyList.  We will need
          this to initialize RT_Session_Container and the future
          unclassified container.

        * docs/ConfigValues.html:
        * docs/XML/ciao_rt_cad_ext.dtd:
        * docs/XML/componentassembly.dtd: Updated documentation on
          extension element usage, RTCAD extension usage and recognizable
          ConfigValues names.

        * examples/OEP/Display/RateGen/client.cpp:
        * examples/OEP/Display/RateGen/controller.cpp:
        * examples/OEP/Display/NavDisplayGUI_exec/RootPanel.h:
        * examples/OEP/Display/NavDisplayGUI_exec/RootPanel.h:
        * examples/OEP/Display/NavDisplayGUI_exec/UpdatePositionCmd.cpp:
          Reordered order of inclusion to make sure ACE headers are seen
          by the compiler first.

Sun Aug 17 09:53:57 2003  Diego Sevilla  <dsevilla@ditec.um.es>

        * CCF/CCF/CCF.mwc: Fixed a bug in the name of a file that was
          preventing the build in VC71.

Fri Aug 15 16:26:03 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIAO/CCF/CCF/CIDL/CIDL.vcproj:
        * CIAO/CCF/CCF/CodeGenerationKit/CodeGenerationKit.vcproj:
        * CIAO/CCF/CCF/CompilerElements/CompilerElements.vcproj:
        * CIAO/CCF/CCF/IDL2/IDL2.vcproj:
        * CIAO/CCF/CCF/IDL3/IDL3.vcproj:
        * CIAO/CIDLC/CIDLC.vcproj:

          Turned off detection of 64-bit portability issues in these
          projects. There are places in the Boost library where they
          play fast and loose with conversions in this area, which
          leads to many warnings.

Fri Aug 15 15:18:37 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

                * CCF:
                * CIDLC:

                Added VC7.1 Solutions and Projects.

Wed Aug 13 17:37:30 2003  George Edwards <g.edwards@vanderbilt.edu>

        * examples/handcrafted/BasicSP_EC/BasicSP.mpc:
        * examples/handcrafted/BasicSP_EC/BMClosedED/BMClosedED.mpc:
        * examples/handcrafted/BasicSP_EC/BMDevice/BMDevice.mpc:
        * examples/handcrafted/BasicSP_EC/BMDisplay/BMDisplay.mpc:
        * examples/handcrafted/BasicSP_EC/EC/EC.mpc:

          Updated library linkage and library paths.

        * examples/handcrafted/BasicSP_EC/BMClosedED/BMClosedEDE.idl:
        * examples/handcrafted/BasicSP_EC/BMClosedED/BMClosedED_svnt.h:
        * examples/handcrafted/BasicSP_EC/BMClosedED/BMClosedED_svnt.cpp:
        * examples/handcrafted/BasicSP_EC/BMDevice/BMDeviceE.idl:
        * examples/handcrafted/BasicSP_EC/BMDevice/BMDevice_svnt.h:
        * examples/handcrafted/BasicSP_EC/BMDevice/BMDevice_svnt.cpp:
        * examples/handcrafted/BasicSP_EC/EC/ECE.idl:
        * examples/handcrafted/BasicSP_EC/EC/EC_svnt.h:
        * examples/handcrafted/BasicSP_EC/EC/EC_svnt.cpp:
        * examples/handcrafted/BasicSP_EC/EC/EC_exec.h:
        * examples/handcrafted/BasicSP_EC/EC/controller.cpp:
        * examples/handcrafted/BasicSP_EC/EC/client.cpp:

          Added new Cookie implementation.
          Use new method _ciao_the_ORB () to get container's ORB reference in
          subscribe () and unsubscribe () methods.

Wed Aug 13 16:23:02 2003  George Edwards <g.edwards@vanderbilt.edu>

        * examples/handcrafted/BasicSP_EC2/RTEventService/RTEventService_exec.h:
        * examples/handcrafted/BasicSP_EC2/RTEventService/RTEventService_exec.cpp:

          Fixed memory management and added comments.

Wed Aug 13 13:25:14 2003  Diego Sevilla  <dsevilla@ditec.um.es>

        * CIDLC/cidlc.mpc: Reordered static library list to suit
          dependencies.

Wed Aug 13 12:20:12 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tools/XML_Helpers/Cascadable_DocHandler.cpp:

          Added #include ace/Log_Msg.h to fix compilation error.

Wed Aug 13 10:49:14 2003  George Edwards <g.edwards@vanderbilt.edu>

        * ciao/Container_Base.h:
        * ciao/Container_Base.cpp:
        * ciao/Container_Base.inl:

          Added _ciao_the_ORB () method to CIAO::Container to access the
          container's underlying ORB.
          Changed the_POA () method to _ciao_the_POA ().

Wed Aug 13 10:42:12 2003  George Edwards <g.edwards@vanderbilt.edu>

        * examples/handcrafted/BasicSP_EC/BMClosedED/BMClosedED_svnt.h:
        * examples/handcrafted/BasicSP_EC/BMDevice/BMDevice_svnt.h:
        * examples/handcrafted/BasicSP_EC/BMDisplay/BMDisplay_svnt.h:
        * examples/handcrafted/BasicSP_EC/EC/EC_svnt.h:
        * examples/handcrafted/BasicSP_EC2/BMClosedED/BMClosedED_svnt.h:
        * examples/handcrafted/BasicSP_EC2/BMDevice/BMDevice_svnt.h:
        * examples/handcrafted/BasicSP_EC2/BMDisplay/BMDisplay_svnt.h:
        * examples/handcrafted/BasicSP_EC2/EC/EC_svnt.h:
        * examples/handcrafted/BasicSP_EC2/RTEventService/RTEventService_svnt.h:

          Added /**/ to pre.h and post.h includes.

Tue Aug 12 21:56:42 2003 Arvind S. Krishna <arvindk@dre.vanderbilt.edu>

        * tools/XML_Helper/Assembly_Spec.h:
          Fixed compilation error from a missing
          #include "ace/Null_Mutex.h".

2003-08-12  Diego Sevilla  <dsevilla@ditec.um.es>

        * CIAO.mwc: Removed CCF MPC files as they still don't work the way
          I expected it to.

2003-08-11  Diego Sevilla  <dsevilla@ditec.um.es>

        * CIDLC/ServantGenerator.cpp: Removed commented code.

2003-08-07  Diego Sevilla  <dsevilla@ditec.um.es>

        * CCF/Example/CodeGenerationKit/Indentation/IDL/IDL.mpc:
        * CCF/Example/CodeGenerationKit/Indentation/Indentation.mwc:
        * CCF/Example/CodeGenerationKit/CodeGenerationKit.mwc:
        * CCF/Example/CIDL/LocalExecutorMapping/LocalExecutorMapping.mpc:
        * CCF/Example/CIDL/CIDL.mwc:
        * CCF/Example/Example.mwc:
        * CCF/CCF/CompilerElements/CompilerElements.mpc:
        * CCF/CCF/CodeGenerationKit/CodeGenerationKit.mpc:
        * CCF/CCF/IDL3/IDL3.mpc:
        * CCF/CCF/IDL2/IDL2.mpc:
        * CCF/CCF/CIDL/CIDL.mpc:
        * CCF/CCF/CCF.mwc:
        * CCF/CCF.mwc:
        CCF Makefiles to MPC.

        * CIDLC/cidlc.mpc: Adapted to the new structure of the CIDL
        compiler.

        * CIDLC/README: Updated the information regarding the new
        libraries and how to build the CIDL compiler now.

        * CIDLC/parser_examples/*.*: Removed old parser examples code.

Tue Aug 12 20:18:23 2003  George Edwards <g.edwards@vanderbilt.edu>

        * examples/handcrafted/BasicSP_EC2/BMClosedED/BMClosedED.idl:
        * examples/handcrafted/BasicSP_EC2/BMClosedED/BMClosedED_svnt.h:
        * examples/handcrafted/BasicSP_EC2/BMClosedED/BMClosedED_svnt.cpp:
        * examples/handcrafted/BasicSP_EC2/BMDevice/BMDevice.idl:
        * examples/handcrafted/BasicSP_EC2/BMDevice/BMDevice_svnt.h:
        * examples/handcrafted/BasicSP_EC2/BMDevice/BMDevice_svnt.cpp:
        * examples/handcrafted/BasicSP_EC2/EC/EC.idl:
        * examples/handcrafted/BasicSP_EC2/EC/EC_svnt.h:
        * examples/handcrafted/BasicSP_EC2/EC/EC_svnt.cpp:
        * examples/handcrafted/BasicSP_EC2/RTEventService/RTEventService.idl:
        * examples/handcrafted/BasicSP_EC2/RTEventService/RTEventServiceEI.idl:
        * examples/handcrafted/BasicSP_EC2/RTEventService/RTEventService_exec.cpp:
        * examples/handcrafted/BasicSP_EC2/RTEventService/RTEventService_exec.h:
        * examples/handcrafted/BasicSP_EC2/RTEventService/RTEventService_svnt.cpp:
        * examples/handcrafted/BasicSP_EC2/RTEventService/RTEventService_svnt.h:
        * examples/handcrafted/BasicSP_EC2/BasicSP.idl:

          Updated handcrafted event channel example; components now provide and use the
          RtecEventChannelAdmin::EventChannel interface.

2003-08-11  Arvind S. Krishna  <arvindk@equus.dre.vanderbilt.edu>

        * performance-tests/Benchmark/RoundTrip/client.cpp:
        * performance-tests/Benchmark/RoundTrip/svc.conf:
        * performance-tests/Benchmark/RoundTrip/RoundTrip.mpc:
        * performance-tests/Benchmark/RoundTrip/run_test.pl:
          The client was not using the proper svc conf file to run in
          "single-threaded" mode. Added proper svc.conf file and support
          code in the client. The .mpc file was modified to add client's
          dependency with TAO_Strategies library.

Thu Aug 07 16:46:42 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI.mpc:
          Changed to use base project qt-min_moc as we don't need to use
          ACE_QtReactor.

Wed Aug 06 17:00:05 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/XML/ciao_rt_cad_ext.dtd: Added DTD for RT extension to cad
          file.

2003-08-06  Arvind S. Krishna  <arvindk@equus.dre.vanderbilt.edu>

        * performance-tests/Benchmark/RoundTrip/RoundTrip_exec.cpp:
        * performance-tests/Benchmark/RoundTrip/run_test.pl:
          Fixed problems relating to parsing arguments when the number of
          iterations is specified from the command line.

Tue Aug 05 17:25:45 2003  George Edwards <g.edwards@vanderbilt.edu>

        * examples/handcrafted/BasicSP_EC2/BMClosedED/BMClosedED.mpc:
        * examples/handcrafted/BasicSP_EC2/BMDevice/BMDevice.mpc:
        * examples/handcrafted/BasicSP_EC2/EC/EC.mpc:
        * examples/handcrafted/BasicSP_EC2/BMDisplay/BMDisplay.mpc:
        * examples/handcrafted/BasicSP_EC2/RTEventService/RTEventService.mpc:
        * examples/handcrafted/BasicSP_EC2/BasicSP.mpc:

          Added library include paths and additional library to MPC
          files.

          Removed file:
        * examples/handcrafted/BasicSP_EC2/EC/config:

          Removed unnecessary file.

        * examples/handcrafted/BasicSP_EC2/EC/controller.cpp:
        * examples/handcrafted/BasicSP_EC2/EC/client.cpp:

          Included ace/Streams.h.

Tue Aug 05 13:23:12 2003  George Edwards <g.edwards@vanderbilt.edu>

        Added files:
        * examples/handcrafted/BasicSP_EC2/*.*:
        * examples/handcrafted/BasicSP_EC2/BMClosedED/*.*:
        * examples/handcrafted/BasicSP_EC2/BMDevice/*.*:
        * examples/handcrafted/BasicSP_EC2/EC/*.*:
        * examples/handcrafted/BasicSP_EC2/descriptors/*.*:
        * examples/handcrafted/BasicSP_EC2/BMDisplay/*.*:
        * examples/handcrafted/BasicSP_EC2/RTEventService/*.*:

          Added new event channel example. The event service is
          integrated as a separate component.

2003-08-04  Arvind S. Krishna  <arvindk@equus.dre.vanderbilt.edu>

        * performance-tests/Benchmark/RountTripClient/run_test.pl:
        * performance-tests/Benchmark/RountTripClient/RoundTripClient_exec.cpp:
        * performance-tests/Benchmark/RountTrip/RoundTrip_exec.cpp:
          Fixed errors in the perl file for running the example. Corrected
          the way in which throughput is measured within the client
          component. Also added code to enable tests to be run in the
          super user mode.

2003-08-04  Diego Sevilla  <dsevilla@ditec.um.es>

        * performance-tests/Benchmark/RoundTripClient/RoundTripClient_exec.cpp:
        * performance-tests/Benchmark/RoundTripClient/client.cpp:
        * performance-tests/Benchmark/RoundTripClient/run_test.pl:
        * performance-tests/Benchmark/descriptors/RoundTripClient.cad:
        * performance-tests/Benchmark/descriptors/RoundTripClient.csd:
        * performance-tests/Benchmark/descriptors/RoundTripClient.ssd:
          Made the test to run.  Fixed some problems with UUID.  Made the
          client to correctly expect a component instance instead of a
          home.

Mon Jul  7 23:35:14 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tools/RTComponentServer/ComponentServer_Task.inl:
        * tools/Simple_Component_Server/Simple_Component_Server.cpp: Fixed
          compilation errors/warnings on Linux.

Fri Aug 01 23:34:38 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tools/Simple_Component_Server/sample_client.cpp:
        * tools/Assembly_Deployer/Assembly_Deployer.cpp: Fixed compilation
          errors.  We need to include "ace/streams.h" explicitly if we
          want to use iostream stuff.

2003-08-01  Diego Sevilla  <dsevilla@ditec.um.es>

        * performance-tests/Benchmark/RoundTripClient/RoundTripClient_exec.cpp:
        Small bug fix.

        * performance-tests/Benchmark/Benchmark.idl: Added missing
        Controller interface.

2003-07-31  Diego Sevilla  <dsevilla@ditec.um.es>

        * performance-tests/Benchmark/Benchmark.idl:
        * performance-tests/Benchmark/Benchmark.mpc:
        * performance-tests/Benchmark/BenchmarkE.idl:
        * performance-tests/Benchmark/Benchmark_stub_export.h:
        * performance-tests/Benchmark/Benchmark_svnt_export.h:
        * performance-tests/Benchmark/NOTE.txt:
        * performance-tests/Benchmark/README:
        * performance-tests/Benchmark/RoundTrip/README:
        * performance-tests/Benchmark/RoundTrip/RoundTrip.cidl:
        * performance-tests/Benchmark/RoundTrip/RoundTrip.idl:
        * performance-tests/Benchmark/RoundTrip/RoundTrip.mpc:
        * performance-tests/Benchmark/RoundTrip/RoundTripEI.idl:
        * performance-tests/Benchmark/RoundTrip/RoundTrip_exec.cpp:
        * performance-tests/Benchmark/RoundTrip/RoundTrip_exec.h:
        * performance-tests/Benchmark/RoundTrip/RoundTrip_exec_export.h:
        * performance-tests/Benchmark/RoundTrip/RoundTrip_stub_export.h:
        * performance-tests/Benchmark/RoundTrip/RoundTrip_svnt_export.h:
        * performance-tests/Benchmark/RoundTrip/client.cpp:
        * performance-tests/Benchmark/RoundTrip/run_test.pl:
        * performance-tests/Benchmark/RoundTripClient/RoundTripClient.cidl:
        * performance-tests/Benchmark/RoundTripClient/RoundTripClient.idl:
        * performance-tests/Benchmark/RoundTripClient/RoundTripClient.mpc:
        * performance-tests/Benchmark/RoundTripClient/RoundTripClientEI.idl:
        * performance-tests/Benchmark/RoundTripClient/RoundTripClient_exec.cpp:
        * performance-tests/Benchmark/RoundTripClient/RoundTripClient_exec.h:
        * performance-tests/Benchmark/RoundTripClient/RoundTripClient_exec_export.h:
        * performance-tests/Benchmark/RoundTripClient/RoundTripClient_stub_export.h:
        * performance-tests/Benchmark/RoundTripClient/RoundTripClient_svnt_export.h:
        * performance-tests/Benchmark/RoundTripClient/client.cpp:
        * performance-tests/Benchmark/RoundTripClient/run_test.pl:
        * performance-tests/Benchmark/descriptors/Benchmark.cad:
        * performance-tests/Benchmark/descriptors/CIAO_Installation_Data.ini:
        * performance-tests/Benchmark/descriptors/RoundTrip.csd:
        * performance-tests/Benchmark/descriptors/RoundTrip.ssd:
        * performance-tests/Benchmark/descriptors/RoundTripClient.cad:
        * performance-tests/Benchmark/descriptors/RoundTripClient.csd:
        * performance-tests/Benchmark/descriptors/RoundTripClient.ssd:
        * performance-tests/Benchmark/descriptors/test.dat:
          Added files for the performance tests Arvind and I are
          developing.

        * CIDLC/ServantHeaderGenerator.cpp: Removed usage of Traversal
          namespace to avoid name clashing.

        * CIDLC/ExecutorMappingGenerator.cpp:
        * CCF/Example/CIDL/LocalExecutorMapping/ExecutorMappingGenerator.cpp:
          Generate SessionContext by now instead of CCMContext for local
          interfaces.

Thu Jul 31 16:50:29 2003 George Edwards <g.edwards@vanderbilt.edu>

        * examples/handcrafted/BasicSP_EC/EC/EC_svnt.h:
        * examples/handcrafted/BasicSP_EC/EC/EC_svnt.cpp:
        * examples/handcrafted/BasicSP_EC/BMDevice/BMDevice_svnt.h:
        * examples/handcrafted/BasicSP_EC/BMDevice/BMDevice_svnt.cpp:
        * examples/handcrafted/BasicSP_EC/BMClosedED/BMClosedED_svnt.h:
        * examples/handcrafted/BasicSP_EC/BMClosedED/BMClosedED_svnt.cpp:

          Made modifications requested. Added @@ Bala comments  to
          indicate changes.

2003-07-31  Diego Sevilla  <dsevilla@ditec.um.es>

        * examples/OEP/BasicSP/EC/EC_exec.{cpp,h}: Changed the exception
          specification for the new_EC method (explicit home operations
          don't throw CCMException.)

        * examples/OEP/Display/RateGen/RateGen_exec.{cpp,h}: Ditto.

        * CIDLC/*: Adapted the CIDL compiler to work with the new CCF
          library.  Basically the same code is generated with small bugs
          fixed.

Wed Jul 30 07:26:29 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/handcrafted/BasicSP_EC/EC/EC_svnt.h:
        * examples/handcrafted/BasicSP_EC/EC/EC_svnt.cpp: Added @@ George
          comments for George. This is a code review. Same comments apply
          to other components.

Tue Jul 29 15:36:20 2003  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/*.*: Replaced old version with a new one.

Thu Jul 24 16:22:27 2003  George Edwards <g.edwards@vanderbilt.edu>

        Added new files:
        * examples/handcrafted/BasicSP_EC/*.*:
        * examples/handcrafted/BasicSP_EC/BMClosedED/*.*:
        * examples/handcrafted/BasicSP_EC/BMDevice/*.*:
        * examples/handcrafted/BasicSP_EC/BMDisplay/*.*:
        * examples/handcrafted/BasicSP_EC/descriptors/*.*:
        * examples/handcrafted/BasicSP_EC/EC/*.*:

          Modified BasicSP example to use TAO's RT event channel for
          event propagation. This involved modifications to each
          component's servant header and source files, which are normally
          generated by the CIDL compiler.

Sun Jul 13 20:14:42 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * README: Updated information on MPC tools.  ACE/TAO are in
          transition to use MPC based solution exclusively (like what CIAO
          is doing already.)  There are currently some mismatch between
          MPC genearted Makefile/project files and the stock ones.  Be
          caution.

          Once we switch to all MPC based approach, this will no longer be
          a problem.

Wed Jul 09 21:06:12 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tools/ServerActivator/ServerActivator.cpp: Fixed compilation due
          to earlier change in the signature of ServerActivator_Impl::init
          method.

Tue Jul 08 10:52:56 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tools/Daemon/CIAO_Daemon.cpp:
        * tools/Daemon/README: Reverted the previous documentation change,
          instead, register the daemon interface as "CIAODaemon" in the
          internal IOR table.  This provides a more consistent naming
          scheme throughout.  Thanks to Roland Schimmack <SC@ProCom.de>
          for motivating this change.

Tue Jul 08 07:11:23 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tools/Daemon/README: Fixed discrepancy in document.  The
          IOR-Table entry for daemon interface should be "CIAO-Daemon"
          instead of "CIAODaemon".  Thanks to Roland Schimmack
          <SC@ProCom.de> for reporting this.

Sun Jul 06 21:40:39 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

          There are two major changes in this entry.

        1. A scheme for associating component server with a logical
          configuration and to map the logical name to a real svc.conf
          file.  Each local CIAO_Daemon can determine what default
          svc.conf file to use, if none specified, and how logical
          names map to actual svc.conf files.

        2. Added mechanism to pass the ConfigValues from
          Components::Deployment::ServerActivator::create_component_server
          to a Components::Deployment::ComponentServer instance which it
          can later use for futher configure the ComponentServer.

        * ciao/Server_init.cpp:
        * ciao/Server_init.h: Added a new Utility namespace for commonly
          used server side functions.  Currently only a write_IOR
          method is available.

        * ciao/CIAO_Servers.idl: Updated
          CIAO::Activator_Callback::register_component_server method to
          pass back ComponentServer's ConfigValues.

        * docs/ConfigValues.html: Docuement the new ConfigValue name
          ("CIAO-svcconf-id") that CIAO recognize.

        * ciao/ServerActivator_Impl.cpp:
        * ciao/ServerActivator_Impl.h:
        * ciao/ServerActivator_Impl.inl: Changed to support:

          Activator_Callback change.

          Mechanisms to maintain an (id, svc.conf) mapping, and keeping a
          default svc.conf file.

        * ciao/ComponentServer_Impl.h:
        * ciao/ComponentServer_Impl.inl: Changed to update the
          ConfigValues when calling back to the ServerActivator.

        * examples/OEP/Display/descriptors/svcmap.dat: Added an example
          svcconf-id to svc.conf filename mapping file.

        * tools/Assembly_Deployer/Assembly_Visitors.cpp: Extend the the
          syntax of <destination> tag.  It can now contain an optional '|'
          delimited svc.conf id to provide the CIAO Daemon the logical
          svc.conf file should use.

        * tools/Assembly_Deployer/Deployment_Configuration.cpp: Enhanced
          to provide a more comprehensive error message.

        * tools/Daemon/CIAO_Daemon.cpp:
        * tools/Daemon/README: Extended CIAODaemon's command line options
          to pass in the default svc.conf filename and the (id, svc.conf)
          mapping data file.

        * tools/ComponentServer/ComponentServer.cpp: Changed to update
          this component server's ConfigValues after calling back to the
          ServerActivator.  Removed the old write_IOR function and changed
          to use the global function in CIAO::Utility namespace.

        * tools/Simple_Component_Server/Simple_Component_Server.cpp: Some
          minor memory leaks were identified in this file, but I didn't
          have time to fix them yet.  So added comments to identify them.

Sun Jul 06 19:41:06 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/OEP/Display/NavDisplayGUI_exec/README: Documented how
          one can generate a project that work for this component.

Thu Jul 03 16:04:35 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/CCM_Core.mpc: Fixed compilation errors by

          . Including $(TAO_ROOT)/orbsvcs/orbsvcs to IDL and C++ include
          paths.  It's necessary to do this because security idl files
          includes other stuff in that subdir.

          . Adding dependency to ifr_client to CIAO_Container library.

Wed Jul 02 14:57:00 2003  Justin Michel  <michel_j@ociweb.com>

        * CIAO.mwc
        * CIDLC/cidlc.mpc
        * CIDLC/parser_examples/examples.mwc
        * examples/OEP/examples.mwc
        * examples/handcrafted/examples.mwc
        * examples/handcrafted/BasicSP/EC/EC.mpc
        * examples/handcrafted/Hello/hello.mpc
        * tests/tests.mwc
        * tools/tools.mwc

          Added workspaces and updated projects files to use
      the latest MPC features.

Wed Jun 25 11:00:00 2003  Justin Michel  <michel_j@ociweb.com>

    * ciao/CCM_Core.mpc:
    * examples/OEP/BasicSP/BasicSP.mpc:
    * examples/OEP/BasicSP/BMClosedED/BMClosedED.mpc:
    * examples/OEP/BasicSP/BMDevice/BMDevice.mpc:
    * examples/OEP/BasicSP/BMDisplay/BMDisplay.mpc:
    * examples/OEP/BasicSP/EC/EC.mpc:
    * examples/OEP/Display/HUDisplay.mpc:
    * examples/OEP/Display/GPS/GPS.mpc:
    * examples/OEP/Display/NavDisplay/NavDisplay.mpc:
    * examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI.mpc:
    * examples/OEP/Display/RateGen/RateGen.mpc:
    * examples/handcrafted/BasicSP/BasicSP.mpc:
    * examples/handcrafted/BasicSP/BMClosedED/BMClosedED.mpc:
    * examples/handcrafted/BasicSP/BMDevice/BMDevice.mpc:
    * examples/handcrafted/BasicSP/BMDisplay/BMDisplay.mpc:
    * examples/handcrafted/BasicSP/EC/EC.mpc:
    * examples/handcrafted/Display/HUDisplay.mpc:
    * examples/handcrafted/Display/GPS/GPS.mpc:
    * examples/handcrafted/Display/NavDisplay/NavDisplay.mpc:
    * examples/handcrafted/Display/NavDisplayGUI_exec/NavDisplayGUI.mpc:
    * examples/handcrafted/Display/RateGen/RateGen.mpc:
    * examples/handcrafted/Hello/hello.mpc:
    * tools/Assembly_Deployer/Assembly_Deployer.mpc:
    * tools/ComponentServer/ComponentServer.mpc:
    * tools/Daemon/Daemon.mpc:
    * tools/ServerActivator/ServerActivator.mpc:
    * tools/Simple_Component_Server/Simple_Component_Server.mpc:
    * tools/XML_Helpers/XMLHelpers.mpc:

      Added and updated mpc files to use the latest
        features and make use of base projects.


Tue Jun 24 15:42:46 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/generate_component_mpc.pl: Updated mpc file generator to
          take advantage of the new CIDL rules.

        * examples/OEP/BasicSP/BMClosedED/BMClosedED.mpc:
        * examples/OEP/BasicSP/BMDevice/BMDevice.mpc:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay.mpc:
        * examples/OEP/BasicSP/EC/EC.mpc:
        * examples/OEP/Display/GPS/GPS.mpc:
        * examples/OEP/Display/NavDisplay/NavDisplay.mpc:
        * examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI.mpc:
        * examples/OEP/Display/RateGen/RateGen.mpc:
        * examples/handcrafted/BasicSP/BasicSP.mpc:
        * examples/handcrafted/BasicSP/BMClosedED/BMClosedED.mpc:
        * examples/handcrafted/BasicSP/BMDevice/BMDevice.mpc:
        * examples/handcrafted/BasicSP/BMDisplay/BMDisplay.mpc:
        * examples/handcrafted/Display/HUDisplay.mpc:
        * examples/handcrafted/Display/GPS/GPS.mpc:
        * examples/handcrafted/Display/NavDisplay/NavDisplay.mpc:
        * examples/handcrafted/Display/NavDisplayGUI_exec/NavDisplayGUI.mpc:
        * examples/handcrafted/Display/RateGen/RateGen.mpc:
        * examples/handcrafted/Hello/hello.mpc: Updated mpc files to take
          advantage of the new CIDL build rules, and to use the new
          ciao_servant mpc template for building servant DLLs and
          ciao_component mpc template for building component executor
          DLLs..

Sun Jun 22 15:23:00 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/OEP/BasicSP/EC/EC.mpc:
        * examples/OEP/Display/RateGen/RateGen.mpc: Renamed projects named
          "controller" to resolve project name conflicts.

Sun Jun 22 09:03:57 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/diffs/*: Removed obsolete diff files.

Sat Jun 21 10:30:24 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/OEP/BasicSP/BasicSP.mpc:
        * examples/OEP/BasicSP/BMClosedED/BMClosedED.mpc:
        * examples/OEP/BasicSP/BMDevice/BMDevice.mpc:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay.mpc:
        * examples/OEP/BasicSP/EC/EC.mpc: Added new MPC files.

        * examples/OEP/BasicSP/BasicSP.dsw:
        * examples/OEP/BasicSP/BasicSP_stub.dsp:
        * examples/OEP/BasicSP/BasicSP_svnt.dsp:
        * examples/OEP/BasicSP/BMClosedED/BMClosedED_exec.dsp:
        * examples/OEP/BasicSP/BMClosedED/BMClosedED_stub.dsp:
        * examples/OEP/BasicSP/BMClosedED/BMClosedED_svnt.dsp:
        * examples/OEP/BasicSP/BMDevice/BMDevice_exec.dsp:
        * examples/OEP/BasicSP/BMDevice/BMDevice_stub.dsp:
        * examples/OEP/BasicSP/BMDevice/BMDevice_svnt.dsp:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay_exec.dsp:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay_stub.dsp:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay_svnt.dsp:
        * examples/OEP/BasicSP/EC/EC_client.dsp:
        * examples/OEP/BasicSP/EC/EC_exec.dsp:
        * examples/OEP/BasicSP/EC/EC_stub.dsp:
        * examples/OEP/BasicSP/EC/EC_svnt.dsp:
        * examples/OEP/BasicSP/EC/controller.dsp: Removed these
          handcrafted projects/workspaces now that we genertae them via MPC.

Sat Jun 21 09:50:37 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/OEP/Display/HUDisplay.mpc:
        * examples/OEP/Display/GPS/GPS.mpc:
        * examples/OEP/Display/NavDisplay/NavDisplay.mpc:
        * examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI.mpc:
        * examples/OEP/Display/RateGen/RateGen.mpc: Added new MPC files
          that can handle CIDL and Qt files.

        * examples/OEP/Display/Display.dsw:
        * examples/OEP/Display/HUDisplay_stub.dsp:
        * examples/OEP/Display/HUDisplay_svnt.dsp:
        * examples/OEP/Display/GPS/GPS_exec.dsp:
        * examples/OEP/Display/GPS/GPS_stub.dsp:
        * examples/OEP/Display/GPS/GPS_svnt.dsp:
        * examples/OEP/Display/GPS/GPS_tracing_exec.dsp:
        * examples/OEP/Display/NavDisplay/NavDisplay_exec.dsp:
        * examples/OEP/Display/NavDisplay/NavDisplay_stub.dsp:
        * examples/OEP/Display/NavDisplay/NavDisplay_svnt.dsp:
        * examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.dsp:
        * examples/OEP/Display/RateGen/RateGen_client.dsp:
        * examples/OEP/Display/RateGen/RateGen_exec.dsp:
        * examples/OEP/Display/RateGen/RateGen_stub.dsp:
        * examples/OEP/Display/RateGen/RateGen_svnt.dsp:
        * examples/OEP/Display/RateGen/controller.dsp: Removed handcrafted
          projects/workspaces now that we can generate them with MPC
          files.

Fri Jun 20 21:06:23 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/OEP/Display/HUDisplay_stub.dsp:
        * examples/OEP/Display/HUDisplay_svnt.dsp: Fixed incorrect usages
          of environment variables in project files.

Fri Jun 20 11:41:50 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/ServerActivator_Impl.cpp (create_component_server):
          Added more code to generate debug info when things go wrong.
          Thanks to Emre Turkay <emre.turkay@vanderbilt.edu> for
          motivating this.

Fri Jun 20 10:21:10 2003  Chad Elliott  <elliott_c@ociweb.com>

        * examples/handcrafted/Display/NavDisplayGUI_exec/NavDisplayGUI.mpc:

          Added inheritance from qt_moc and removed the custom definition
          for MOC_Files.

Thu Jun 19 07:54:42 2003  Chad Elliott  <elliott_c@ociweb.com>

        * examples/handcrafted/Display/NavDisplayGUI_exec/NavDisplayGUI.mpc:

          Added 'specific' scopes to take into account the different qt
          library names on different platforms.

Tue Jun 17 11:02:19 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/Hello/README: Updated the obsolete
          instructions to test run this component.  Thanks to Jesse
          Greenwald <jesse@cis.ksu.edu> for reporting this.

Mon Jun 16 11:16:52 2003  Chris Cleeland  <cleeland@ociweb.com>

        * CIAO version 0.3.3 released.

Sun Jun 08 10:42:15 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/OEP/BasicSP/BMDevice/BMDevice_exec.cpp:
        * examples/OEP/BasicSP/BMClosedED/BMClosedED_exec.cpp: Added code
          to registered the ValueFactory with the ORB so we can deploy
          this component independent of others in this example.  Enhanced
          the debug output a bit.

        * docs/releasenote.html: Added info on CIDL compiler.

        * exampels/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.dsp:
          Really checked in the following change.

            Mon Jun 02 23:36:29 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

Tue Jun 03 07:55:01 2003  Simon McQueen  <sm@prismtechnologies.com>

        * CIAO version 0.3.2 released.

Tue Jun  3 01:26:04 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/OEP/BasicSP/BasicSP.dsw:
        * examples/OEP/BasicSP/BasicSP_stub.dsp:
        * examples/OEP/BasicSP/BasicSP_svnt.dsp:
        * examples/OEP/BasicSP/BMClosedED/BMClosedED_stub.dsp:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay_stub.dsp:
        * examples/OEP/BasicSP/EC/EC_stub.dsp:
        * examples/OEP/Display/HUDisplay_stub.dsp:
        * examples/OEP/Display/HUDisplay_svnt.dsp:

          Updated settings in these files.

        * examples/OEP/BasicSP/NOTE.txt:

          Fixed typos.

        * examples/OEP/BasicSP/descriptors/daemon.ior:

          Removed this file from the repository - it's just a temporary.

Mon Jun 02 23:36:29 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * exampels/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.dsp:
          Regenerated and hand modified the project file.

Mon Jun  2 22:45:05 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * ciao/ComponentsC.h:
        * ciao/ComponentsS.h:

          Contains the *C.h and *S.h corresponding to the include in Components.idl.

Mon Jun 02 12:47:50 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * README: Revised the root readme file.

Mon Jun  2 12:42:10 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CCF/External/Utility/Documentation/Build.html:

          New file containing build information for the CIDL compiler.

        * CIDLC/README:

          Updated file to point to the new file above and other
          documentation files in that same directory.

Mon Jun  2 02:00:04 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/OEP/BasicSP/BasicSP.dsw:
        * examples/OEP/BasicSP/BasicSP_stub.dsp:
        * examples/OEP/BasicSP/BasicSP_svnt.dsp:
        * examples/OEP/BasicSP/BMClosedED/BMClosedED_exec.dsp:
        * examples/OEP/BasicSP/BMClosedED/BMClosedED_stub.dsp:
        * examples/OEP/BasicSP/BMClosedED/BMClosedED_svnt.dsp:
        * examples/OEP/BasicSP/BMDevice/BMDevice_exec.dsp:
        * examples/OEP/BasicSP/BMDevice/BMDevice_stub.dsp:
        * examples/OEP/BasicSP/BMDevice/BMDevice_svnt.dsp:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay_exec.dsp:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay_stub.dsp:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay_svnt.dsp:
        * examples/OEP/BasicSP/EC/EC_client.dsp:
        * examples/OEP/BasicSP/EC/EC_exec.dsp:
        * examples/OEP/BasicSP/EC/EC_stub.dsp:
        * examples/OEP/BasicSP/EC/EC_svnt.dsp:
        * examples/OEP/BasicSP/EC/controller.dsp:
        * examples/OEP/Display/Display.dsw:
        * examples/OEP/Display/HUDisplay_stub.dsp:
        * examples/OEP/Display/HUDisplay_svnt.dsp:
        * examples/OEP/Display/GPS/GPS_exec.dsp:
        * examples/OEP/Display/GPS/GPS_stub.dsp:
        * examples/OEP/Display/GPS/GPS_svnt.dsp:
        * examples/OEP/Display/GPS/GPS_tracing_exec.dsp:
        * examples/OEP/Display/NavDisplay/NavDisplay_exec.dsp:
        * examples/OEP/Display/NavDisplay/NavDisplay_stub.dsp:
        * examples/OEP/Display/NavDisplay/NavDisplay_svnt.dsp:
        * examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.dsp:
        * examples/OEP/Display/NavDisplayGUI_exec/README
        * examples/OEP/Display/RateGen/RateGen_client.dsp:
        * examples/OEP/Display/RateGen/RateGen_exec.dsp:
        * examples/OEP/Display/RateGen/RateGen_stub.dsp:
        * examples/OEP/Display/RateGen/RateGen_svnt.dsp:
        * examples/OEP/Display/RateGen/controller.dsp:

          Fixed project and workspace settings for the generated
          version of the HUDisplay and BasicSP examples.

Sun Jun  1 23:00:53 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * Makefile: Added the path to the RELEASE_FILES

Sun Jun  1 19:07:49 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/README:
        * examples/OEP?BasicSP/README:
        * examples/OEP/Display/README:

          Updated these files with info about the URL for downloading
          CIDL compiler binaries.

Sun Jun  1 14:30:53 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * docs/releasenotes.html:
        * docs/todo.html:

          Added items related to the CIDL compiler.

Sat May 31 10:54:11 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * Makefile: We dont have any special files like INSTALL that needs
          specila attention during the release.

Fri May 30 19:33:36 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CCF/DesignNotes:
        * CCF/Makefile:
        * CCF/Version:
        * CCF/CCF/CCF.sln:
        * CCF/CCF/Makefile:
        * CCF/CCF/CIDL/CIDL.cpp:
        * CCF/CCF/CIDL/CIDL.vcproj:
        * CCF/CCF/CIDL/CIDL_LexicalAnalyzer.hpp:
        * CCF/CCF/CIDL/CIDL_Parser.hpp:
        * CCF/CCF/CIDL/CIDL_SemanticAction.hpp:
        * CCF/CCF/CIDL/CIDL_SemanticActionImpl.hpp:
        * CCF/CCF/CIDL/CIDL_SyntaxTree.cpp:
        * CCF/CCF/CIDL/CIDL_SyntaxTree.hpp:
        * CCF/CCF/CIDL/CIDL_SyntaxTreeFwd.hpp:
        * CCF/CCF/CIDL/CIDL_Traversal.cpp:
        * CCF/CCF/CIDL/CIDL_Traversal.hpp:
        * CCF/CCF/CIDL/MSVC_Pragmas.hpp:
        * CCF/CCF/CIDL/Makefile:
        * CCF/CCF/CodeGenerationKit/CodeGenerationKit.cpp:
        * CCF/CCF/CodeGenerationKit/CodeGenerationKit.vcproj:
        * CCF/CCF/CodeGenerationKit/CommandLine.cpp:
        * CCF/CCF/CodeGenerationKit/CommandLine.hpp:
        * CCF/CCF/CodeGenerationKit/CommandLineDescriptor.hpp:
        * CCF/CCF/CodeGenerationKit/CommandLineGrammar.cpp:
        * CCF/CCF/CodeGenerationKit/CommandLineGrammar.hpp:
        * CCF/CCF/CodeGenerationKit/CommandLineParser.cpp:
        * CCF/CCF/CodeGenerationKit/CommandLineParser.hpp:
        * CCF/CCF/CodeGenerationKit/IDLStream.hpp:
        * CCF/CCF/CodeGenerationKit/MSVC_Pragmas.hpp:
        * CCF/CCF/CodeGenerationKit/Makefile:
        * CCF/CCF/CodeGenerationKit/Regex.hpp:
        * CCF/CCF/CompilerElements/DiagnosticStream.cpp:
        * CCF/CCF/CompilerElements/DiagnosticStream.hpp:
        * CCF/CCF/CompilerElements/ExH.hpp:
        * CCF/CCF/CompilerElements/FileSystem.hpp:
        * CCF/CCF/CompilerElements/MSVC_Pragmas.hpp:
        * CCF/CCF/CompilerElements/Parser.hpp:
        * CCF/CCF/CompilerElements/Preprocessor.hpp:
        * CCF/CCF/CompilerElements/ReferenceCounting.hpp:
        * CCF/CCF/CompilerElements/SemanticAction.hpp:
        * CCF/CCF/CompilerElements/Token.hpp:
        * CCF/CCF/CompilerElements/TokenStream.hpp:
        * CCF/CCF/CompilerElements/Traversal.hpp:
        * CCF/CCF/IDL2/IDL2.cpp:
        * CCF/CCF/IDL2/IDL2.vcproj:
        * CCF/CCF/IDL2/IDL2_LexicalAnalyzer.cpp:
        * CCF/CCF/IDL2/IDL2_LexicalAnalyzer.hpp:
        * CCF/CCF/IDL2/IDL2_Parser.hpp:
        * CCF/CCF/IDL2/IDL2_SemanticAction.hpp:
        * CCF/CCF/IDL2/IDL2_SemanticActionImpl.hpp:
        * CCF/CCF/IDL2/IDL2_SyntaxTree.cpp:
        * CCF/CCF/IDL2/IDL2_SyntaxTree.hpp:
        * CCF/CCF/IDL2/IDL2_SyntaxTree.tpp:
        * CCF/CCF/IDL2/IDL2_SyntaxTreeFwd.hpp:
        * CCF/CCF/IDL2/IDL2_SyntaxTree_BuiltIn.cpp:
        * CCF/CCF/IDL2/IDL2_SyntaxTree_BuiltIn.hpp:
        * CCF/CCF/IDL2/IDL2_SyntaxTree_Value.hpp:
        * CCF/CCF/IDL2/IDL2_Traversal.cpp:
        * CCF/CCF/IDL2/IDL2_Traversal.hpp:
        * CCF/CCF/IDL2/MSVC_Pragmas.hpp:
        * CCF/CCF/IDL2/Makefile:
        * CCF/CCF/IDL3/IDL3.cpp:
        * CCF/CCF/IDL3/IDL3.vcproj:
        * CCF/CCF/IDL3/IDL3_LexicalAnalyzer.hpp:
        * CCF/CCF/IDL3/IDL3_Parser.hpp:
        * CCF/CCF/IDL3/IDL3_SemanticAction.hpp:
        * CCF/CCF/IDL3/IDL3_SemanticActionImpl.hpp:
        * CCF/CCF/IDL3/IDL3_SyntaxTree.cpp:
        * CCF/CCF/IDL3/IDL3_SyntaxTree.hpp:
        * CCF/CCF/IDL3/IDL3_SyntaxTreeFwd.hpp:
        * CCF/CCF/IDL3/IDL3_SyntaxTree_EventType.cpp:
        * CCF/CCF/IDL3/IDL3_SyntaxTree_EventType.hpp:
        * CCF/CCF/IDL3/IDL3_Traversal.cpp:
        * CCF/CCF/IDL3/IDL3_Traversal.hpp:
        * CCF/CCF/IDL3/MSVC_Pragmas.hpp:
        * CCF/CCF/IDL3/Makefile:
        * CCF/External/Utility/Makefile:
        * CCF/External/Utility/Version:
        * CCF/External/Utility/Config/Archive.gcc.post.rules:
        * CCF/External/Utility/Config/Archive.gcc.pre.rules:
        * CCF/External/Utility/Config/Archive.post.rules:
        * CCF/External/Utility/Config/Archive.pre.rules:
        * CCF/External/Utility/Config/Documentation.post.rules:
        * CCF/External/Utility/Config/Documentation.pre.rules:
        * CCF/External/Utility/Config/Executable.gcc.post.rules:
        * CCF/External/Utility/Config/Executable.gcc.pre.rules:
        * CCF/External/Utility/Config/Executable.generic.post.rules:
        * CCF/External/Utility/Config/Executable.generic.pre.rules:
        * CCF/External/Utility/Config/Executable.post.rules:
        * CCF/External/Utility/Config/Executable.pre.rules:
        * CCF/External/Utility/Config/Recursion.post.rules:
        * CCF/External/Utility/Config/Recursion.pre.rules:
        * CCF/External/Utility/Config/Shared.gcc.post.rules:
        * CCF/External/Utility/Config/Shared.gcc.pre.rules:
        * CCF/External/Utility/Config/Shared.generic.post.rules:
        * CCF/External/Utility/Config/Shared.generic.pre.rules:
        * CCF/External/Utility/Config/Shared.post.rules:
        * CCF/External/Utility/Config/Shared.pre.rules:
        * CCF/External/Utility/Config/Thoughts:
        * CCF/External/Utility/Documentation/Makefile:
        * CCF/External/Utility/Documentation/News.html:
        * CCF/External/Utility/Documentation/index.html:
        * CCF/External/Utility/Documentation/ExH/Makefile:
        * CCF/External/Utility/Documentation/ExH/Makefile.documentation:
        * CCF/External/Utility/Documentation/ExH/News.html:
        * CCF/External/Utility/Documentation/ExH/index.html:
        * CCF/External/Utility/Documentation/ExH/Example/Makefile:
        * CCF/External/Utility/Documentation/ExH/Logic/Makefile:
        * CCF/External/Utility/Documentation/ExH/System/Makefile:
        * CCF/External/Utility/Documentation/ReferenceCounting/Makefile:
        * CCF/External/Utility/Documentation/ReferenceCounting/News.html:
        * CCF/External/Utility/Documentation/ReferenceCounting/index.html:
        * CCF/External/Utility/Documentation/Style/CXX.css:
        * CCF/External/Utility/Documentation/Style/CXX_Blue.css:
        * CCF/External/Utility/Documentation/Synch/Makefile:
        * CCF/External/Utility/Documentation/Synch/News.html:
        * CCF/External/Utility/Documentation/Synch/index.html:
        * CCF/External/Utility/Documentation/Synch/Policy/Makefile:
        * CCF/External/Utility/Utility/ExH/Compound.hpp:
        * CCF/External/Utility/Utility/ExH/Compound.tpp:
        * CCF/External/Utility/Utility/ExH/Converter.hpp:
        * CCF/External/Utility/Utility/ExH/Converter.tpp:
        * CCF/External/Utility/Utility/ExH/ExH.hpp:
        * CCF/External/Utility/Utility/ExH/StringConverter.hpp:
        * CCF/External/Utility/Utility/ExH/StringConverter.ipp:
        * CCF/External/Utility/Utility/ExH/StringStreamConverter.hpp:
        * CCF/External/Utility/Utility/ExH/StringStreamConverter.ipp:
        * CCF/External/Utility/Utility/ExH/Logic/DescriptiveException.hpp:
        * CCF/External/Utility/Utility/ExH/Logic/DescriptiveException.ipp:
        * CCF/External/Utility/Utility/ExH/Logic/Exception.hpp:
        * CCF/External/Utility/Utility/ExH/Logic/Exception.ipp:
        * CCF/External/Utility/Utility/ExH/System/DescriptiveException.hpp:
        * CCF/External/Utility/Utility/ExH/System/DescriptiveException.ipp:
        * CCF/External/Utility/Utility/ExH/System/Exception.hpp:
        * CCF/External/Utility/Utility/ReferenceCounting/DefaultImpl.hpp:
        * CCF/External/Utility/Utility/ReferenceCounting/DefaultImpl.ipp:
        * CCF/External/Utility/Utility/ReferenceCounting/ExternalLockImpl.hpp:
        * CCF/External/Utility/Utility/ReferenceCounting/ExternalLockImpl.ipp:
        * CCF/External/Utility/Utility/ReferenceCounting/Interface.hpp:
        * CCF/External/Utility/Utility/ReferenceCounting/Interface.ipp:
        * CCF/External/Utility/Utility/ReferenceCounting/Interface.tpp:
        * CCF/External/Utility/Utility/ReferenceCounting/ReferenceCounting.hpp:
        * CCF/External/Utility/Utility/ReferenceCounting/SmartPtr.hpp:
        * CCF/External/Utility/Utility/ReferenceCounting/SmartPtr.tpp:
        * CCF/External/Utility/Utility/ReferenceCounting/StrictPtr.hpp:
        * CCF/External/Utility/Utility/ReferenceCounting/StrictPtr.tpp:
        * CCF/External/Utility/Utility/Synch/Policy/Null.hpp:
        * CCF/External/Utility/Utility/Synch/Policy/Null.ipp:
        * CIDLC/CIDLC.sln:
        * CIDLC/CIDLC.vcproj:
        * CIDLC/ExecutorMapp:ingGenerator.cpp:
        * CIDLC/ExecutorMapp:ingGenerator.hpp:
        * CIDLC/Literals.hpp:
        * CIDLC/Makefile:
        * CIDLC/ServantGenerator.cpp:
        * CIDLC/ServantGenerator.hpp:
        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantHeaderGenerator.hpp:
        * CIDLC/ServantSourceGenerator.cpp:
        * CIDLC/ServantSourceGenerator.hpp:
        * CIDLC/Version:
        * CIDLC/cidlc.cpp:

          Source code, documentation and build files for the
          CIDL compiler.

Fri May 30 18:18:25 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/*:

          Removed all files in this directory from the repository except
          DesignNotes, which will reappear in a new directory along with
          other CIDL compiler checkins. The parser examples that were
          in this directory are no longer useful or up to date. Soon
          parts of the CIDL compiler will be checked into this directory.

        * README:

          New file.

Fri May 30 17:41:05 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/OEP/BasicSP/BMClosedED/BMClosedED_svnt.dsp:
        * examples/OEP/BasicSP/BMDevice/BMDevice_svnt.dsp:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay_svnt.dsp:
        * examples/OEP/BasicSP/EC/EC_svnt.dsp:
        * examples/OEP/Display/GPS/GPS_svnt.dsp:
        * examples/OEP/Display/NavDisplay/NavDisplay_svnt.dsp:
        * examples/OEP/Display/RateGen/RateGen_svnt.dsp:

          Changed the location of the CIDL compiler executable to
          CIAO_ROOT/bin for the MSVC projects.

        * examples/OEP/Display/NavDisplay/NavDisplay_svnt.cpp:
        * examples/OEP/Display/NavDisplay/NavDisplay_svnt.h:

          Removed these file from the repository - they are generated
          and shouldn't have been checked in.

Fri May 30 15:25:29 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/OEP/Display/Configuration-0.png:
        * examples/OEP/Display/Display.dsw:
        * examples/OEP/Display/HUDisplay.idl:
        * examples/OEP/Display/HUDisplay.mpc:
        * examples/OEP/Display/HUDisplay_stub.dsp:
        * examples/OEP/Display/HUDisplay_stub_export.h:
        * examples/OEP/Display/HUDisplay_svnt.dsp:
        * examples/OEP/Display/HUDisplay_svnt_export.h:
        * examples/OEP/Display/NOTE:
        * examples/OEP/Display/README:
        * examples/OEP/Display/cleanup_mpcfiles.cmd:
        * examples/OEP/Display/GPS/GPS.cidl:
        * examples/OEP/Display/GPS/GPS.idl:
        * examples/OEP/Display/GPS/GPSEI.idl:
        * examples/OEP/Display/GPS/GPS_exec.cpp:
        * examples/OEP/Display/GPS/GPS_exec.dsp:
        * examples/OEP/Display/GPS/GPS_exec.h:
        * examples/OEP/Display/GPS/GPS_exec_export.h:
        * examples/OEP/Display/GPS/GPS_stub.dsp:
        * examples/OEP/Display/GPS/GPS_stub_export.h:
        * examples/OEP/Display/GPS/GPS_svnt.dsp:
        * examples/OEP/Display/GPS/GPS_svnt_export.h:
        * examples/OEP/Display/GPS/GPS_tracing_exec.cpp:
        * examples/OEP/Display/GPS/GPS_tracing_exec.dsp:
        * examples/OEP/Display/GPS/GPS_tracing_exec.h:
        * examples/OEP/Display/GPS/config:
        * examples/OEP/Display/NavDisplay/NavDisplay.cidl:
        * examples/OEP/Display/NavDisplay/NavDisplay.idl:
        * examples/OEP/Display/NavDisplay/NavDisplayEI.idl:
        * examples/OEP/Display/NavDisplay/NavDisplay_exec.cpp:
        * examples/OEP/Display/NavDisplay/NavDisplay_exec.dsp:
        * examples/OEP/Display/NavDisplay/NavDisplay_exec.h:
        * examples/OEP/Display/NavDisplay/NavDisplay_exec_export.h:
        * examples/OEP/Display/NavDisplay/NavDisplay_stub.dsp:
        * examples/OEP/Display/NavDisplay/NavDisplay_stub_export.h:
        * examples/OEP/Display/NavDisplay/NavDisplay_svnt.cpp:
        * examples/OEP/Display/NavDisplay/NavDisplay_svnt.dsp:
        * examples/OEP/Display/NavDisplay/NavDisplay_svnt.h:
        * examples/OEP/Display/NavDisplay/NavDisplay_svnt_export.h:
        * examples/OEP/Display/NavDisplay/config:
        * examples/OEP/Display/NavDisplay/run_test.pl:
        * examples/OEP/Display/NavDisplayGUI_exec/AddNavUnitCmd.cpp:
        * examples/OEP/Display/NavDisplayGUI_exec/AddNavUnitCmd.h:
        * examples/OEP/Display/NavDisplayGUI_exec/Command.h:
        * examples/OEP/Display/NavDisplayGUI_exec/DetailView.cpp:
        * examples/OEP/Display/NavDisplayGUI_exec/DetailView.h:
        * examples/OEP/Display/NavDisplayGUI_exec/MapView.cpp:
        * examples/OEP/Display/NavDisplayGUI_exec/MapView.h:
        * examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.cpp:
        * examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.dsp:
        * examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.h:
        * examples/OEP/Display/NavDisplayGUI_exec/NavUnit.cpp:
        * examples/OEP/Display/NavDisplayGUI_exec/NavUnit.h:
        * examples/OEP/Display/NavDisplayGUI_exec/NodeItem.cpp:
        * examples/OEP/Display/NavDisplayGUI_exec/NodeItem.h:
        * examples/OEP/Display/NavDisplayGUI_exec/QuitCmd.cpp:
        * examples/OEP/Display/NavDisplayGUI_exec/QuitCmd.h:
        * examples/OEP/Display/NavDisplayGUI_exec/README:
        * examples/OEP/Display/NavDisplayGUI_exec/RootPanel.cpp:
        * examples/OEP/Display/NavDisplayGUI_exec/RootPanel.h:
        * examples/OEP/Display/NavDisplayGUI_exec/UpdatePositionCmd.cpp:
        * examples/OEP/Display/NavDisplayGUI_exec/UpdatePositionCmd.h:
        * examples/OEP/Display/NavDisplayGUI_exec/Worker.cpp:
        * examples/OEP/Display/NavDisplayGUI_exec/Worker.h:
        * examples/OEP/Display/NavDisplayGUI_exec/trolltech.gif:
        * examples/OEP/Display/NavDisplayGUI_exec/worldmap1.gif:
        * examples/OEP/Display/NavDisplayGUI_exec/worldmap1.xpm:
        * examples/OEP/Display/RateGen/RateGen.cidl:
        * examples/OEP/Display/RateGen/RateGen.idl:
        * examples/OEP/Display/RateGen/RateGenEI.idl:
        * examples/OEP/Display/RateGen/RateGen_client.dsp:
        * examples/OEP/Display/RateGen/RateGen_exec.cpp:
        * examples/OEP/Display/RateGen/RateGen_exec.dsp:
        * examples/OEP/Display/RateGen/RateGen_exec.h:
        * examples/OEP/Display/RateGen/RateGen_exec_export.h:
        * examples/OEP/Display/RateGen/RateGen_stub.dsp:
        * examples/OEP/Display/RateGen/RateGen_stub_export.h:
        * examples/OEP/Display/RateGen/RateGen_svnt.dsp:
        * examples/OEP/Display/RateGen/RateGen_svnt_export.h:
        * examples/OEP/Display/RateGen/client.cpp:
        * examples/OEP/Display/RateGen/config:
        * examples/OEP/Display/RateGen/controller.cpp:
        * examples/OEP/Display/RateGen/controller.dsp:
        * examples/OEP/Display/RateGen/run_test.pl:
        * examples/OEP/Display/descriptors/CIAO_Installation_Data.ini:
        * examples/OEP/Display/descriptors/DuelDisplay.cad:
        * examples/OEP/Display/descriptors/GPS.csd:
        * examples/OEP/Display/descriptors/GPS.ssd:
        * examples/OEP/Display/descriptors/GPS_tracing.csd:
        * examples/OEP/Display/descriptors/HUDisplay.cad:
        * examples/OEP/Display/descriptors/HUDisplayGUI.cad:
        * examples/OEP/Display/descriptors/NOTE.txt:
        * examples/OEP/Display/descriptors/NavDisplay.csd:
        * examples/OEP/Display/descriptors/NavDisplay.ssd:
        * examples/OEP/Display/descriptors/NavDisplayGUI.csd:
        * examples/OEP/Display/descriptors/RateGen.csd:
        * examples/OEP/Display/descriptors/RateGen.ssd:
        * examples/OEP/Display/descriptors/RemoteDisplay.cad:
        * examples/OEP/Display/descriptors/RemoteDisplayGUI.cad:
        * examples/OEP/Display/descriptors/test.dat:

          New example, same as the one in examples/handcrafted/Display,
          but using CIDL compiler generated code.

Fri May 30 14:27:55 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * PROBLEM-REPORT-FORM (Subject): Fixed a typo.

Fri May 30 14:15:45 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * VERSION:
        * PROBLEM-REPORT-FORM (Subject): Files needed for the release.

Fri May 30 14:11:11 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * ciao/Version.h: Changed the version info to be 0.3.1 instead of
          0.1.1. We want it to go the way ACE+TAO go.

Fri May 30 13:57:26 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * Makefile: A new top level Makefile which will have the needed
          information for the release.

Fri May 30 12:29:37 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/OEP/BasicSP/BasicSP.dsw:
        * examples/OEP/BasicSP/BasicSP.idl:
        * examples/OEP/BasicSP/BasicSP.mpc:
        * examples/OEP/
          files.

        * examples/handcrafted/Display/HUDisplay_svnt.cpp:
        * examples/handcrafted/Display/HUDisplay_svnt.inl:
        * examples/handcrafted/Display/GPS/GPSE.idl:
        * examples/handcrafted/Display/GPS/GPS_exec.cpp:
        * examples/handcrafted/Display/GPS/GPS_exec.h:
        * examples/handcrafted/Display/GPS/GPS_svnt.cpp:
        * examples/handcrafted/Display/GPS/GPS_tracing_exec.cpp:
        * examples/handcrafted/Display/GPS/GPS_tracing_exec.h:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_exec.cpp:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_exec.h:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_svnt.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.h:
        * examples/handcrafted/Display/RateGen/RateGenE.idl:
        * examples/handcrafted/Display/RateGen/RateGen_exec.cpp:
        * examples/handcrafted/Display/RateGen/RateGen_exec.h:
        * examples/handcrafted/Display/RateGen/RateGen_svnt.cpp:
        * examples/handcrafted/Display/RateGen/client.cpp:
        * examples/handcrafted/Display/RateGen/controller.cpp:
        * examples/handcrafted/Hello/client.cpp:
        * examples/handcrafted/Hello/helloE.idl:
        * examples/handcrafted/Hello/hello_servants.cpp:
        * tools/Assembly_Deployer/Assembly_Impl.cpp:
        * tools/Assembly_Deployer/Assembly_Manager.cpp:
        * tools/Assembly_Deployer/Assembly_Visitors.h:
        * tools/Assembly_Deployer/Assembly_Visitors.inl:
        * tools/ComponentServer/ComponentServer.cpp:
        * tools/ComponentServer/ComponentServer_test_client.cpp:
        * tools/Daemon/controller_i.cpp:
        * tools/Daemon/controller_i.h:
        * tools/ServerActivator/ServerActivator_test_client.cpp:
        * tools/XML_Helpers/Assembly_Handlers.cpp:
        * tools/XML_Helpers/Assembly_Spec.cpp:
        * tools/XML_Helpers/Assembly_Spec.inl:
        * tools/XML_Helpers/Cascadable_DocHandler.cpp:
        * tools/XML_Helpers/Softpkg_Handlers.cpp: Fixed compilation errors
          and warnings.  They include

          Using a _var in places where a _ptr is expected.

          Incorrect Capitalization of file names.

          Unused variables warnings.

          Exception throw specification mis-matches.

        * docs/templates/CIAO_Glue_Session_Template.cpp: Propagated
          previous fixes into the tempate code.

        * ciao/Container_Base.cpp: Removed a redundant ACE_INLINE decl.

Tue Apr 15 17:07:52 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tools/XML_Helpers/Assembly_Spec.h:
        * tools/XML_Helpers/Softpkg_Handlers.h:
        * tools/XML_Helpers/XMLHelpers.mpc:
        * tools/XML_Helpers/XML_Utils.h:
        * tools/XML_Helpers/XML_Helpers_Export.h: Refactored these files
          to make them into a library.

        * tools/XML_Helpers/XML_Helpers.dsw:
        * tools/XML_Helpers/Helper_Test.dsp:
        * tools/Daemon/CIAO_Daemon.dsp:
        * tools/Daemon/Daemon.dsw:
        * tools/Daemon/DaemonController.dsp: Removed these project files
          and depend solely on MPC generated files.

        * tools/Assembly_Deployer/Assembly_Deployer.mpc:
        * tools/Daemon/Daemon.mpc: Updated MPC files to link with the new
          XML_Helpers library.

Tue Apr 15 11:07:36 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/Daemon.idl:
        * ciao/Daemon_Impl.h:
        * ciao/Daemon_Impl.inl:
        * ciao/Daemon_Impl.cpp:
        * tools/Daemon/Daemon.idl:
        * tools/Daemon/Daemon_Impl.h:
        * tools/Daemon/Daemon_Impl.inl:
        * tools/Daemon/Daemon_Impl.cpp:
        * ciao/CCM_Core.mpc:
        * ciao/CIAO_Server.dsp:
        * tools/Daemon/CIAO_Daemon.dsp:
        * tools/Daemon/Daemon.mpc:
        * tools/Daemon/DaemonController.dsp: Moved Daemon idl file and
          implementations out of CIAO_Server library into Daemon
          implemenation.

          Removed HomeRegistrar related files from the projects of the
          CIAO_Server library.  They need to be moved a a proper place in
          the near future.

        * docs/todo.html:  Document other refactoring needed in the
          CCM_Core libraries.

Mon Apr 14 17:06:37 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/Display/HUDisplay_svnt.cpp:
        * examples/handcrafted/Display/HUDisplay_svnt.h:
        * examples/handcrafted/Display/GPS/GPS_exec.cpp:
        * examples/handcrafted/Display/GPS/GPS_exec.h:
        * examples/handcrafted/Display/GPS/GPS_svnt.cpp:
        * examples/handcrafted/Display/GPS/GPS_svnt.h:
        * examples/handcrafted/Display/GPS/GPS_tracing_exec.cpp:
        * examples/handcrafted/Display/GPS/GPS_tracing_exec.h:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_exec.cpp:
        * examples/handcrafted/Display/RateGen/RateGen_exec.cpp:
        * examples/handcrafted/Display/RateGen/RateGen_exec.h:
        * examples/handcrafted/Display/RateGen/client.cpp:
        * examples/handcrafted/Display/RateGen/controller.cpp:
        * examples/handcrafted/Display/RateGen/run_test.pl:
        * examples/handcrafted/Display/descriptors/NOTE.txt: Updated
          docuemntation.  Changed to inherit Pulse_Handler from
          ACE_Task_Base.  Reworked controller.cpp so that it won't look
          like the process that actually generates the events.

Mon Apr 14 14:57:51 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/Display/RateGen/controller.cpp: Changed to
          perform only one action in each exection of this program.  I.e.,
          it either switch on or off the RateGen component and exit
          immediately.  This is to avoid the mis-conception that the
          controller actually generates the Rate.

Sat Apr 12 12:36:08 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * CIDLC/parser_examples/cidl/cidl.vcproj:
        * CIDLC/parser_examples/idl2/idl2.vcproj:
        * CIDLC/parser_examples/idl3/idl3.vcproj: Changed the extra
          include paths from:

            ..,../spirit-1.3.0,../spirit-1.3.0/miniboost

          to:

            ..,$(SPIRIT_DIR),$(SPIRIT_DIR)/miniboost

          to be consistent with the MPC files and to decouple Spirit from
          CIAO's directory strucutre.

Sat Apr 12 10:48:13 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/templates/CIAO_Glue_Session_Template.cpp:
        * docs/templates/CIAO_Glue_Session_Template.inl: Incorporated
          changes for fixing gcc compilation warnings.

        * tools/Assembly_Deployer/Assembly_Manager.cpp:
        * tools/ComponentServer/ComponentServer.cpp:
        * tools/ComponentServer/ComponentServer_test_client.cpp:
        * tools/Daemon/CIAO_Daemon.cpp:
        * tools/Simple_Component_Server/Simple_Component_Server.cpp: Added
          misiing newlines in usage messages.

Sat Apr 12 01:25:35 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * CIDLC/parser_examples/README:
        * CIDLC/parser_examples/cidl/cidl.mpc:
        * CIDLC/parser_examples/idl2/idl2.mpc:
        * CIDLC/parser_examples/idl3/idl3.mpc: Added new MPC files to take
          advantage of MPC/MWC tool.  Updated the README to provide some
          minimal instructions.

Tue Apr  8 23:10:43 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/parser_examples/README:
        * CIDLC/parser_examples/parser_examples.sln:
        * CIDLC/parser_examples/cidl/cidl.cpp:
        * CIDLC/parser_examples/cidl/cidl.vcproj:
        * CIDLC/parser_examples/cidl/cidl_grammar.cpp:
        * CIDLC/parser_examples/cidl/cidl_grammar.h:
        * CIDLC/parser_examples/cidl/hello.cidl:
        * CIDLC/parser_examples/idl2/idl2.cpp:
        * CIDLC/parser_examples/idl2/idl2.vcproj:
        * CIDLC/parser_examples/idl2/idl2_grammar.cpp:
        * CIDLC/parser_examples/idl2/idl2_grammar.h:
        * CIDLC/parser_examples/idl2/test_idl2.idl:
        * CIDLC/parser_examples/idl3/idl3.cpp:
        * CIDLC/parser_examples/idl3/idl3.vcproj:
        * CIDLC/parser_examples/idl3/idl3_grammar.cpp:
        * CIDLC/parser_examples/idl3/idl3_grammar.h:
        * CIDLC/parser_examples/idl3/test_idl3.idl:

          Added parser examples (IDL2, IDL3, and CIDL) using the Spirit
          parser.

Tue Apr 08 19:42:16 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/Display/GPS/GPS_tracing_exec.h: Fixed
          a class name mismatch.

Mon Apr 07 21:20:37 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/ServerActivator_Impl.cpp: Fixed a couple of compilation
          warnings with gcc.

        * ciao/CIAO_Client.dsp:
        * ciao/CIAO_Container.dsp:
        * ciao/CIAO_Server.dsp: Turned on RTTI to sync up with the new Any
          implementation.

        * ciao/CIAO_common.h:
        * ciao/Cookies.cpp: Fixed the use of old CORBA_* types.  They are
          no longer available in the newer version of ACE/TAO.

Sun Apr 06 20:36:39 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/Display/CIAO_Installation_Data.ini:
        * examples/handcrafted/Display/HUDisplay.cad:
        * examples/handcrafted/Display/GPS/GPS.csd:
        * examples/handcrafted/Display/GPS/GPS.ssd:
        * examples/handcrafted/Display/NavDisplay/NavDisplay.csd:
        * examples/handcrafted/Display/NavDisplay/NavDisplay.ssd:
        * examples/handcrafted/Display/NavDisplayGUI_exec/NavDisplayGUI.csd:
        * examples/handcrafted/Display/NavDisplayGUI_exec/NavDisplayGUI.ssd:
        * examples/handcrafted/Display/RateGen/RateGen.csd:
        * examples/handcrafted/Display/RateGen/RateGen.ssd: Removed these
          files as they have already been moved to the
          examples/handcrafted/Display/descriptors/ subdirectory.

        * examples/handcrafted/Display/NOTE: Updated obsolete notes.

          Thanks to Andrey Nechypurenko
          <Andrey.Nechypurenko@mchp.siemens.de> for the following
          changes.  He reported, motivated or sent patches for them.

        * examples/handcrafted/Display/descriptors/NOTE.txt: Fixed several
          typos.

        * examples/handcrafted/Display/descriptors/DuelDisplay.cad:
        * examples/handcrafted/Display/descriptors/GPS_tracing.csd:
        * examples/handcrafted/Display/descriptors/HUDisplayGUI.cad:
        * examples/handcrafted/Display/descriptors/RemoteDisplayGUI.cad:
          Updated these assembly descriptors to use the new GPS component
          that emulate a trace (instead of the random coordinates).

        * examples/handcrafted/Display/NavDisplay/client.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/run_test.pl:
          Removed these testing artifacts because NavDisplay component
          requires other component to function properly.

        * tools/XML_Helpers/Assembly_Spec.inl: Fixed VC7.1 compilation
          error.

        * examples/handcrafted/Display/GPS/GPS.mpc:
        * examples/handcrafted/Display/GPS/GPS_tracing_exec.cpp:
        * examples/handcrafted/Display/GPS/GPS_tracing_exec.h: Added a
          new implementation for the GPS component.  This implementation
          simulates coordinates of a trace instead of some random
          positions.

        * examples/handcrafted/Display/NavDisplay/NavDisplay.mpc:
        * examples/handcrafted/Display/NavDisplayGUI_exec/DetailView.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/MapView.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.h:
          Please find in attachment slightly modified version of
          NavDisplayGUI. I have modified it slightly mainly in order to
          let the GUI component to find background and animation images
          either based on ACE_ROOT or using ../NavDisplayGUI_exec/.

        * examples/handcrafted/Display/NavDisplayGUI_exec/README: Removed
          the mentioning of run_test.pl.  It's no longer valid.

Sat Apr 05 20:08:27 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/CCM_Deployment.idl:
        * ciao/Component_Base.idl:
          The operation Components::Deployment::Assembly::build can throw
          CreateFailure exception.  It was missing in the IDL files.

        * ciao/Server_init.cpp:
          Register OBV factory for CIAO::Cookie also.

        * docs/templates/CIAO_Glue_Session_Template.cpp:
          Made sure we duplicate the object reference before adding them
          to subscriber/connection active maps.

        * examples/handcrafted/Display/HUDisplay.idl:
        * examples/handcrafted/Display/HUDisplay.mpc:
        * examples/handcrafted/Display/HUDisplay_svnt.h:
        * examples/handcrafted/Display/HUDisplay_svnt.inl:
        * examples/handcrafted/Display/GPS/GPS_exec.cpp:
        * examples/handcrafted/Display/GPS/GPS_exec.h:
        * examples/handcrafted/Display/GPS/GPS_svnt.cpp:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_exec.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.cpp:
        * examples/handcrafted/Display/RateGen/RateGen.mpc:
        * examples/handcrafted/Display/RateGen/RateGen_svnt.cpp:
          Updated the example to support 2-dimentional position interface.
          Also fixed the reference counting problem in the servant glue
          code.


        * examples/handcrafted/Display/RateGen/controller.cpp:
          Added a new

        * examples/handcrafted/Display/descriptors/HUDisplay.cad:
        * examples/handcrafted/Display/descriptors/HUDisplayGUI.cad:
        * examples/handcrafted/Display/descriptors/RemoteDisplay.cad:
        * examples/handcrafted/Display/descriptors/RemoteDisplayGUI.cad:
          Added variety of different composition example.  See NOTE.txt
          under the same directory for more information.

        * examples/handcrafted/Display/descriptors/test.dat:
          Added a "Remote" entry so showcase how to deploy a system across
          several machines.

        * tools/Assembly_Deployer/Assembly_Deployer.cpp:
        * tools/Assembly_Deployer/Assembly_Deployer.mpc:
        * tools/Assembly_Deployer/Assembly_Impl.cpp:
        * tools/Assembly_Deployer/Assembly_Impl.h:
        * tools/Assembly_Deployer/Assembly_Manager.cpp:
        * tools/Assembly_Deployer/Assembly_Visitors.h:
          Added support for establishing connections according to
          Assembly_Spec.

        * tools/Assembly_Deployer/Assembly_Service.idl:
        * tools/Assembly_Deployer/Assembly_Service_Impl.cpp:
        * tools/Assembly_Deployer/Assembly_Service_Impl.h:
          Added a simple interface in an attempt to solve the unreliable
          shutdown problem.

        * tools/XML_Helpers/Assembly_Handlers.cpp:
        * tools/XML_Helpers/Assembly_Handlers.h:
        * tools/XML_Helpers/Assembly_Handlers.inl:
        * tools/XML_Helpers/Assembly_Spec.cpp:
        * tools/XML_Helpers/Assembly_Spec.h:
          Fixed "connectevent" parsing.  I had the "source" and
          "destination" interface reversed.

Fri Apr 04 22:40:11 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/Display/descriptors/*: Moved all XML
          descriptors and deployment configuration into this newly created
          subdirectory to simply procedures to test this example.

        * examples/handcrafted/Display/NavDisplay/NavDisplay_exec.cpp:
          Changed to thow a BAD_INV_ORDER exception is the receptacle is
          not connected instead of a MSVC structural exception.

        * tools/Daemon/Daemon.mpc:
        * tools/Daemon/DaemonController.dsp:
        * tools/XML_Helpers/Assembly_Handlers.cpp:
        * tools/XML_Helpers/Assembly_Spec.cpp:
        * tools/XML_Helpers/Assembly_Spec.h:
        * tools/XML_Helpers/Assembly_Spec.inl:
        * tools/Assembly_Deployer/Assembly_Deployer.cpp:
        * tools/Assembly_Deployer/Assembly_Deployer.mpc:
        * tools/Assembly_Deployer/Assembly_Impl.cpp:
        * tools/Assembly_Deployer/Assembly_Impl.h:
        * tools/Assembly_Deployer/Assembly_Impl.inl:
        * tools/Assembly_Deployer/Assembly_Manager.cpp:
        * tools/Assembly_Deployer/Assembly_Visitors.h:
        * tools/Assembly_Deployer/Assembly_Visitors.inl:
        * tools/Assembly_Deployer/Deployment_Configuration.cpp:
        * tools/Assembly_Deployer/Deployment_Configuration.h:
        * tools/Assembly_Deployer/Deployment_Configuration.inl: Added more
          support for component installation when building an Assembly.

Thu Apr 03 15:08:20 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/Assembly_Impl.*:
        * tools/Assembly_Deployer/Assembly_Impl.*: Moved the Assembly
          implementaiton files to the tools/Assembly_Deployer/ directory.

        * ciao/CCM_Core.mpc:
        * ciao/CIAO_Server.dsp: Removed Assembly_Impl.*.

Thu Apr 03 13:11:49 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tools/XML_Helpers/Assembly_Spec.h:
        * tools/XML_Helpers/Assembly_Handlers.h:
        * tools/XML_Helpers/Assembly_Handlers.cpp: Added support for parsing
          component and home registering info.  Otherwise, it'd be hard to
          use a composed application.

Wed Apr 02 17:08:00 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tools/XML_Helpers/Assembly_Handlers.cpp:
        * tools/XML_Helpers/Assembly_Handlers.h:
        * tools/XML_Helpers/Assembly_Handlers.inl:
        * tools/XML_Helpers/Assembly_Spec.cpp:
        * tools/XML_Helpers/Assembly_Spec.h:
        * tools/XML_Helpers/Assembly_Spec.inl:
        * tools/XML_Helpers/Helper_Test.dsp: Added implementations for
          handling componentassembly XML documents and building the
          assembly specification information.  These handlers currently
          process only "crucial" information needed to get a system up and
          running, i.e., they do not yet extract all types of information
          in a componentassembly document.

          Also important is that all XML handlers in CIAO assume all XML
          documents they process are valid and well-formed.  ACEXML
          currently does not validate XML document yet.  Therefore, you
          need to validate the XML documents using other XML parser (such
          as msxml) shall CIAO's assembly parsing behave strangely as the
          handlers assume a validator has already taken up most of the
          checking responsibility.

        * tools/XML_Helpers/Softpkg_Handlers.cpp:
        * tools/XML_Helpers/Softpkg_Handlers.h:
        * tools/XML_Helpers/Softpkg_Handlers.inl:
        * tools/XML_Helpers/XML_Utils.cpp:
        * tools/XML_Helpers/XML_Utils.h: Added a new
          parse_componentassembly utility function and moved some of the
          helper functions out of Softpkg_Handlers.

        * tools/XML_Helpers/main.cpp:

        * bin/generate_component_mpc.pl: Added dependent library to the
          list of libraries client program links to.

        * docs/XML/componentassembly.dtd: Fixed a typo in DTD definition.

        * examples/handcrafted/Display/HUDisplay.cad: Added a

        * examples/handcrafted/Display/NavDisplay/NavDisplay.mpc:
        * examples/handcrafted/Display/NavDisplay/client.cpp:
        * examples/handcrafted/Display/NavDisplay/run_test.pl: Added a
          client program to test the component.

        * examples/handcrafted/Display/NavDisplayGUI_exec/AddNavUnitCmd.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/AddNavUnitCmd.h:
        * examples/handcrafted/Display/NavDisplayGUI_exec/Command.h:
        * examples/handcrafted/Display/NavDisplayGUI_exec/DetailView.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/DetailView.h:
        * examples/handcrafted/Display/NavDisplayGUI_exec/MapView.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/MapView.h:
        * examples/handcrafted/Display/NavDisplayGUI_exec/NavDisplayEIC.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/NavDisplayGUI.csd:
        * examples/handcrafted/Display/NavDisplayGUI_exec/NavDisplayGUI.mpc:
        * examples/handcrafted/Display/NavDisplayGUI_exec/NavDisplayGUI.ssd:
        * examples/handcrafted/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.h:
        * examples/handcrafted/Display/NavDisplayGUI_exec/NavUnit.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/NavUnit.h:
        * examples/handcrafted/Display/NavDisplayGUI_exec/NodeItem.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/NodeItem.h:
        * examples/handcrafted/Display/NavDisplayGUI_exec/QuitCmd.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/QuitCmd.h:
        * examples/handcrafted/Display/NavDisplayGUI_exec/README:
        * examples/handcrafted/Display/NavDisplayGUI_exec/RootPanel.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/RootPanel.h:
        * examples/handcrafted/Display/NavDisplayGUI_exec/UpdatePositionCmd.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/UpdatePositionCmd.h:
        * examples/handcrafted/Display/NavDisplayGUI_exec/Worker.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/Worker.h:
        * examples/handcrafted/Display/NavDisplayGUI_exec/moc_DetailView.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/moc_MapView.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/moc_NodeItem.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/moc_RootPanel.cpp:
        * examples/handcrafted/Display/NavDisplayGUI_exec/run_test.pl:
        * examples/handcrafted/Display/NavDisplayGUI_exec/trolltech.gif:
        * examples/handcrafted/Display/NavDisplayGUI_exec/worldmap1.gif:
          Added a Qt GUI based component to showcase how we can
          reconfigure a system using different component easily.  Thanks
          to Andrey Nechypurenko <andreynech@mchp.siemens.com> for
          contributing the implementation.

        * examples/handcrafted/Display/CIAO_Installation_Data.ini: Added
          deployment information for the new GUI NavDisplay component
          implementation.

        * examples/handcrafted/Hello/client.dsp:
        * examples/handcrafted/Hello/hello_executors.dsp:
        * examples/handcrafted/Hello/hello_servants.dsp:
        * examples/handcrafted/Hello/hello_stub.dsp:  Hmm, I probably
          checked in the MPC/MWC generated project accidentally.  :)

Mon Mar 24 16:17:21 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/Display/GPS/GPS_svnt.cpp:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_svnt.cpp:
          Added implementation for servant factory methods.  Thanks to
          Andrey Nechypurenko <andreynech@yahoo.com> for reporting this.

Fri Mar 21 15:51:57 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/new_components.html: Revised naming convention for
          user-defined component executor impl IDL.

        * bin/generate_component_mpc.pl: Added an option for adding
          user-defined component executor impl IDL automatically,
          according the the naming convention.  Fixed the dependencies to
          "dependent" libraries.

        * examples/handcrafted/Display/RateGen/RateGen.csd:
        * examples/handcrafted/Display/RateGen/RateGen.ssd: Simplified the
          XML descriptors.

        * examples/handcrafted/Display/RateGen/RateGen.mpc:
        * examples/handcrafted/Display/RateGen/RateGenEI.idl:
        * examples/handcrafted/Display/RateGen/RateGen_exec.h: Fixed
          dependencies and naming convention.

        * examples/handcrafted/Display/GPS/GPS.csd:
        * examples/handcrafted/Display/GPS/GPS.mpc:
        * examples/handcrafted/Display/GPS/GPS.ssd:
        * examples/handcrafted/Display/GPS/GPSEI.idl:
        * examples/handcrafted/Display/GPS/GPS_exec.cpp:
        * examples/handcrafted/Display/GPS/GPS_exec.h:

        * examples/handcrafted/Display/NavDisplay/NavDisplay.csd:
        * examples/handcrafted/Display/NavDisplay/NavDisplay.mpc:
        * examples/handcrafted/Display/NavDisplay/NavDisplay.ssd:
        * examples/handcrafted/Display/NavDisplay/NavDisplayEI.idl:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_exec.cpp:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_exec.h:

        * examples/handcrafted/Display/CIAO_Installation_Data.ini: Added
          component implementaions for GPS and NavDisplay.

Thu Mar 20 21:50:07 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/ComponentInstallation_Impl.cpp: Added a more comprehensive
          error printout.

        * docs/index.html: Fixed a broken link.

        * docs/templates/CIAO_Glue_Session_Template.cpp:
        * docs/templates/CIAO_Glue_Session_Template.h: Added the servant
          factory entry point function that I missed.

        * examples/handcrafted/Display/RateGen/RateGen_svnt.cpp:
        * examples/handcrafted/Display/RateGen/RateGen_svnt.h: Fixed up
          the servant DLL entry point.

        * examples/handcrafted/Display/RateGen/RateGen.mpc:
        * examples/handcrafted/Display/RateGen/RateGen_comp.idl:
        * examples/handcrafted/Display/RateGen/RateGen_exec.cpp:
        * examples/handcrafted/Display/RateGen/RateGen_exec.h: Added the
          actual implementation for component executor.

        * examples/handcrafted/Display/CIAO_Installation_Data.ini: Added
          this deployment datafile.  This file will contain information
          describing all the components used in this example.

        * examples/handcrafted/Display/RateGen/RateGen.csd:
        * examples/handcrafted/Display/RateGen/RateGen.ssd: Added XML
          component descriptors.

        * examples/handcrafted/Display/RateGen/client.cpp: Added a test
          client program.

        * examples/handcrafted/Display/RateGen/run_test.pl: Added a test
          script to test out this single component.

        * tools/ComponentServer/ComponentServer_test_client.cpp: Changed
          the client program to debug RateGen component.  We need to make
          this test client more robust so we can use it to debug different
          component implementations more easily.

Tue Mar 18 16:36:07 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/generate_component_mpc.pl:
        * examples/handcrafted/Display/HUDisplay.mpc:
        * examples/handcrafted/Display/GPS/GPS.mpc:
        * examples/handcrafted/Display/NavDisplay/NavDisplay.mpc:
        * examples/handcrafted/Display/RateGen/RateGen.mpc: Updated the
          script and regenerated mpc file to record the original options
          used to generate the MPC files.

        * examples/handcrafted/Display/NOTE: Added more info on how to
          generate Makefiles/Projects for this example.

        * examples/handcrafted/Display/RateGen/RateGen.idl: Fixed a typo.

        * examples/handcrafted/Display/RateGen/RateGen_Impl.idl:
        * examples/handcrafted/Display/RateGen/RateGen_exec.cpp:
        * examples/handcrafted/Display/RateGen/RateGen_exec.h: Added the
          actual component and home implementations.  This particular
          component implementation shows how to suppoort SessionComponent
          interface in a component implementation (you will need to do
          that for any non-trivial component implementations that require
          to access component-specific context.)

Tue Mar 18 12:03:29 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/Hello/hello_servants.cpp:
        * examples/handcrafted/Hello/hello_servants.h: Renamed various
          "_ciao_deactivate*" operations to "ciao_passivate*" to be more
          consistent with the CC* opertions.

        * docs/templates/CIAO_Glue_Session_Template.cpp:
        * docs/templates/CIAO_Glue_Session_Template.h:
        * docs/templates/CIAO_Glue_Session_Template.inl:
        * examples/handcrafted/Display/GPS/GPS_svnt.cpp:
        * examples/handcrafted/Display/GPS/GPS_svnt.h:
        * examples/handcrafted/Display/GPS/GPS_svnt.inl:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_svnt.cpp:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_svnt.h:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_svnt.inl:
        * examples/handcrafted/Display/RateGen/RateGen_svnt.cpp:
        * examples/handcrafted/Display/RateGen/RateGen_svnt.h:
        * examples/handcrafted/Display/RateGen/RateGen_svnt.inl:
          Propagated the SessionComponent opertion support to CIDL
          templates and the multiple component example "generated" files.

Mon Mar 17 23:10:47 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/Container_Base.cpp:
        * ciao/Container_Base.h:
        * examples/handcrafted/Hello/hello_servants.cpp:
        * examples/handcrafted/Hello/hello_servants.h: Added support for
          SessionComponent specific operations,
          ccm_{activate,passivate,remove}.  These changes still need to be
          propagated to the CIDL templates.

          We also need to review how Deployment::Container and CCMHome
          manage the lifecyles of homes, components, and facet servants.

Sun Mar 16 21:57:10 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/templates/CIAO_Glue_Session_Template.h:
        * docs/templates/CIAO_Glue_Session_Template.inl:
        * examples/handcrafted/Display/GPS/GPS_svnt.h:
        * examples/handcrafted/Display/GPS/GPS_svnt.inl:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_svnt.h:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_svnt.inl:
        * examples/handcrafted/Display/RateGen/RateGen_svnt.cpp:
        * examples/handcrafted/Display/RateGen/RateGen_svnt.h:
        * examples/handcrafted/Display/RateGen/RateGen_svnt.inl: Added
          code to support SessionComponent::set_session_context operation
          and make sure the Context objects also inherit from
          TAO_Local_RefCounted_Object.

        * examples/handcrafted/Hello/helloE.idl:
        * examples/handcrafted/Hello/hello_executors.h:
        * examples/handcrafted/Hello/hello_servants.cpp:
        * examples/handcrafted/Hello/hello_servants.h: Changed to implement
          component specific context as a SessionContext, plus the
          aforementioned changes.

Sun Mar 16 11:43:20 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/ConfigValues.html:
        * docs/index.html: Updated the main document entry page.  It is
          grossly outdated.

        * tools/ComponentServer/ComponentServer.mpc:
        * tools/Daemon/Daemon.mpc:
        * tools/ServerActivator/ServerActivator.mpc:
        * tools/XML_Helpers/XMLHelpers.mpc: Added more mpc files.

Sat Mar 15 11:43:34 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/Makefile:
        * ciao/Makefile.client:
        * ciao/Makefile.container:
        * ciao/Makefile.server: Removed Makefiles.  I depend on MPC files
          exclusively at the moment.

        * ciao/Assembly_Impl.cpp:
        * ciao/Assembly_Impl.h:
        * ciao/CCM_Core.mpc:
        * ciao/Container_Base.cpp:
        * ciao/Container_Base.h:
        * ciao/Container_Impl.h:
        * ciao/Daemon_Impl.h:
        * ciao/Object_Set_T.cpp:
        * ciao/ServerActivator_Impl.h: Fixed Linux build errors.  Some
          warnings are not fixed due to incomplete implementations and I
          want to make sure they got addressed in some future point.

Fri Mar 14 23:19:52 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/CCM_Core.mpc: Updated the core MPC file to reflect recent
          added files.

Fri Mar 14 16:08:22 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/todo.html: Recorded a compilation error in the generated
          code that I commented out for later "study."

        * examples/handcrafted/Display/NavDisplay/NavDisplay.idl: Fixed a
          typo.

        * examples/handcrafted/Display/NavDisplay/NavDisplayE.idl:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_svnt.cpp:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_svnt.h:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_svnt.inl:
          Added new "generated" code.

        * docs/templates/CIAO_Glue_Session_Template.cpp:
        * docs/templates/CIAO_Glue_Session_Template.h:
        * docs/templates/CIAO_Glue_Session_Template.inl:
        * docs/templates/Executor.idl: Updated templates based on the code
          they generated.

Thu Mar 13 20:11:49 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/Display/NavDisplay/NavDisplay.idl:
        * examples/handcrafted/Display/GPS/GPS.idl:
        * examples/handcrafted/Display/Configuration-0.png: Updated the
          port names so they make more sense in the context.  Thanks to
          Dave Sharp and Wendy Rolls for the suggestions.

        * examples/handcrafted/Display/RateGen/RateGen_svnt.h: Added the
          missing factory entry point for the servant home.

        * examples/handcrafted/Display/GPS/GPSE.idl:
        * examples/handcrafted/Display/GPS/GPS_svnt.cpp:
        * examples/handcrafted/Display/GPS/GPS_svnt.h:
        * examples/handcrafted/Display/GPS/GPS_svnt.inl: Added new
          "generated" code.

        * docs/templates/CIAO_Glue_Session_Template.cpp:
        * docs/templates/CIAO_Glue_Session_Template.h:
        * docs/templates/CIAO_Glue_Session_Template.inl:
        * docs/templates/Executor.idl: Updated templates based on the code
          they generated (manually.  Did I mention how much fun it was to
          generate code manually?)

Wed Mar 12 23:29:27 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/generate_component_mpc.pl: Fixed an incomplete library
          expansion and added a flag to specify library path
          dependencies.

        * docs/releasenotes.html: Updated the status of single component
          deployment capability.  I forgot to do that when it was done.

        * examples/handcrafted/Display/NOTE: Added directions on how to
          generate various mpc files.

        * examples/handcrafted/Display/GPS/GPS.mpc:
        * examples/handcrafted/Display/NavDisplay/NavDisplay.mpc:
        * examples/handcrafted/Display/RateGen/RateGen.mpc: Regenerated
          MPC files to fix incomplete dependent library names and to add
          library path dependencies.

        * examples/handcrafted/Display/HUDisplay.idl:
        * examples/handcrafted/Display/RateGen/RateGen.idl:
        * examples/handcrafted/Display/HUDisplayE.idl:
        * examples/handcrafted/Display/RateGen/RateGenE.idl: Moved the
          opmode interface definition from RateGen.idl back to
          HUDisplay.idl.  This interface is a supported interface of
          RateGen but it should be viewed as a shared interface.

        * examples/handcrafted/Display/RateGen/RateGen_svnt.cpp:
        * examples/handcrafted/Display/RateGen/RateGen_svnt.h:
        * examples/handcrafted/Display/RateGen/RateGen_svnt.inl: Added
          more handcrafted servant glue code for RateGen component.

        * docs/templates/CIAO_Glue_Session_Template.cpp:
        * docs/templates/CIAO_Glue_Session_Template.h:
        * docs/templates/CIAO_Glue_Session_Template.inl:
        * docs/templates/Executor.idl:  Updated and fixed CIDL template
          code based on results from using these templates manually.

Wed Mar 12 00:03:56 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/Display/HUDisplay_svnt.h:
        * examples/handcrafted/Display/HUDisplay_svnt.cpp: Added forgotten
          _get_component implementation.

Tue Mar 11 22:47:06 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/Display/HUDisplayE.idl: Removed redundant
          operations that have already been defined in the facet interface.

        * examples/handcrafted/Display/HUDisplay_svnt.cpp:
        * examples/handcrafted/Display/HUDisplay_svnt.h:
        * examples/handcrafted/Display/HUDisplay_svnt.inl: Added hand
          generated code based on the glue code template in

            docs/templates/

        * docs/templates/CIAO_Glue_Session_Template.cpp:
        * docs/templates/CIAO_Glue_Session_Template.h:
        * docs/templates/CIAO_Glue_Session_Template.inl: Updated template
          code based on results from hand generated code.

Tue Mar 11 15:18:52 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/generate_component_mpc.pl: Added this new to auto-generate
          the mpc files for a single component implementation.  The mpc
          file generated by the script should work for most simple
          component implementation, without modification and can serve as
          a template for more complicated ones.  This script also
          generates hints that can be fed back to a shell to create the
          necessary export definition files.

        * docs/todo.html: Added improvement items that can be done for
          generate_component_mpc.pl.

        * bin/gen_export_files.cmd: Removed.  The new
          generate_component_mpc script provides more accurate hints on
          how to create export files.


          Renamed and reorganized all files in the following
          multi-component example according to the guideline I set in
          docs/new_component.html.

        * examples/handcrafted/Display/Display.mpc:
        * examples/handcrafted/Display/HUD_skel_export.h:
        * examples/handcrafted/Display/HUD_stub_export.h:
        * examples/handcrafted/Display/GPS/GPS_skel_export.h:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_skel_export.h:
        * examples/handcrafted/Display/RateGen/RateGen_skel_export.h:
          Removed.

        * examples/handcrafted/Display/HUDisplay.mpc:
        * examples/handcrafted/Display/HUDisplay_stub_export.h:
        * examples/handcrafted/Display/HUDisplay_svnt_export.h:
        * examples/handcrafted/Display/GPS/GPS_exec_export.h:
        * examples/handcrafted/Display/GPS/GPS_svnt_export.h:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_exec_export.h:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_svnt_export.h:
        * examples/handcrafted/Display/RateGen/RateGen_exec_export.h:
        * examples/handcrafted/Display/RateGen/RateGen_svnt_export.h:
          Modified.

        * examples/handcrafted/Display/HUDisplay.idl:
        * examples/handcrafted/Display/HUDisplayE.idl:
        * examples/handcrafted/Display/GPS/GPS.mpc:
        * examples/handcrafted/Display/GPS/GPS_stub_export.h:
        * examples/handcrafted/Display/NavDisplay/NavDisplay.mpc:
        * examples/handcrafted/Display/NavDisplay/NavDisplay_stub_export.h:
        * examples/handcrafted/Display/RateGen/RateGen.idl:
        * examples/handcrafted/Display/RateGen/RateGen.mpc:
        * examples/handcrafted/Display/RateGen/RateGen_stub_export.h:
          Added.

Tue Mar 11 11:41:39 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/generate_component_mpc.pl: Added a MPC file generater perl
          script for creating new MPC definitions for single component
          implementations.

Sun Mar 09 14:38:59 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/new_components.html: Added this new document to describe
          files involved in creating a new components.

        * docs/com-impl.html: Added a link to the new component
          implementation. document

        * docs/imgs/File-Gen-Existing.png:
        * docs/imgs/File-Gen-Future.png:
        * docs/imgs/File_Generation_Flow.vsd: Updated the tools/files
          collaboration diagram to reflect the latest plan.

        * examples/handcrafted/Hello/hello.mpc: Updated the MPC file to
          make sure it works properly.  We need to figure out a way to
          auto-generate a template of this file.

Thu Mar 06 20:29:42 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

          The following changes integrate the XML parsing of softpkg
          descriptors with the daemon management framework so we can now
          instantiate and test a single component implementation using
          its softpkg descriptor.

        * ciao/ComponentServer_Impl.cpp:
        * ciao/ComponentServer_Impl.h:
        * ciao/ComponentServer_Impl.inl: Added a cached
          ComponentInstallation reference so we can pass it to the
          containers this ComponentServer creates.

        * ciao/Container_Impl.cpp:
        * ciao/Container_Impl.h: Added an extra argument in init for
          taking in the ComponentInstallation reference.  Also modified
          the install_home related mechanisms to use ComponentInstallation
          interface to acquire the actual implementation "locations".

        * tools/ServerActivator/ServerActivator_test_client.cpp:
        * tools/ComponentServer/ComponentServer_test_client.cpp: Changed
          to use UUID.

        * tools/XML_Helpers/Cascadable_DocHandler.h: Removed a redundant
          export decl.

        * tools/Daemon/DaemonController.dsp: Added files from the
          XML_Helpers directories for the added XML handling capability.

        * tools/Daemon/CIAO_Daemon.cpp:
        * tools/Daemon/Softpkg_Commands.cpp:
        * tools/Daemon/Softpkg_Commands.h: Added new commands to start and
          terminate ComponentServer for running one component home.

        * examples/handcrafted/Hello/CIAO_Installation_Data.ini:
        * examples/handcrafted/Hello/client.cpp:
        * examples/handcrafted/Hello/hello.ssd:
        * examples/handcrafted/Hello/run_test.pl: Changed and set up the
          test to start up a ComponentServer via Daemon.

Wed Mar 05 21:43:44 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

          Moved all Daemon controller related classes into CIAO::Daemon_i
          namespace.

        * tools/Daemon/Softpkg_Commands.cpp:
        * tools/Daemon/Softpkg_Commands.h:
        * tools/Daemon/Softpkg_Commands.inl: Added two new "start_home"
          and "end_home" command for starting up and shutting down a
          ComponentServer for a single component home.  Still need
          implementation.

        * tools/Daemon/DaemonController.cpp:
        * tools/Daemon/DaemonController.dsp:

        * tools/Daemon/controller_i.cpp:
        * tools/Daemon/controller_i.h:
        * tools/Daemon/controller_i.inl:
        * tools/Daemon/Daemon_Commands.cpp:
        * tools/Daemon/Daemon_Commands.h:
        * tools/Daemon/Daemon_Commands.inl: Moved most of the Daemon
          controlling commands into this file.

Tue Mar 04 20:40:21 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/Display/RateGen/RateGenE.idl: Fixed a typo.
          Thanks to Jeff Gray <gray@cis.uab.edu> for pointing it out.

Thu Feb 27 22:15:48 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/ComponentServer_Impl.h: Fixed a cut-n-paste error in a comment.

        * ciao/ServerActivator_Impl.cpp:
        * ciao/ServerActivator_Impl.h:  Changed to cache an IOR to
          the ComponentInstallation interface and pass the IOR with
          -ORBInitRef option to the ComponentServer.  We will need it when
          installing a component home in the container.

        * examples/handcrafted/Hello/hello_servants.cpp:
        * examples/handcrafted/Hello/hello_servants.h: Removed inheriting
          the component specific context from the SessionContext local
          interface.  This component example should be run as Service
          component, not Session component.

        * tools/ServerActivator/README:
        * tools/Daemon/CIAO_Daemon.cpp:
        * tools/ServerActivator/ServerActivator.cpp: Changed to propagate
          the ComponentInstallation somehow.

        * tools/ServerActivator/ServerActivator_test_client.cpp: Removed a
          redundant $Id$ tag.

Sat Feb 22 23:45:52 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/releasenotes.html:
        * docs/todo.html: Updated information regarding different
          component deployment schemes.

        * examples/handcrafted/Hello/hello.csd:
        * examples/handcrafted/Hello/hello.ssd: Fixed syntax errors.

        * tools/XML_Helpers/Softpkg_Handlers.cpp:
        * tools/XML_Helpers/Softpkg_Handlers.h:
        * tools/XML_Helpers/Softpkg_Handlers.inl:
        * tools/XML_Helpers/XML_Utils.cpp:
        * tools/XML_Helpers/XML_Utils.h:
        * tools/XML_Helpers/XML_Utils.inl: Added these new file to extract
          necessary information to install the component specified in a
          .csd (component softpkg descriptor) file.  The
          Softpkg_Handlers.* contain the XML Handler(s) for parsing the
          csd document and XML_Utils.* contain the file Assembly tools can
          use to extract the needed info.  Notice that the XML handler
          currently don't do a lot of validation.

        * tools/XML_Helpers/Cascadable_DocHandler.cpp:
        * tools/XML_Helpers/Cascadable_DocHandler.h:
        * tools/XML_Helpers/Cascadable_DocHandler.i: Added error handling
          functions and allows it to accept a Locator from the parser to
          show error location.

        * tools/XML_Helpers/Svcconf.dsp:
        * tools/XML_Helpers/Svcconf.dsw: Renamed these files to the
          following:

        * tools/XML_Helpers/XMLHelpers.dsp:
        * tools/XML_Helpers/Helper_Test.dsw:
        * tools/XML_Helpers/main.cpp: Added new files into the project
          file and changed the project and workspace name.


Thu Feb 20 22:15:08 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

          Manually generated the following XML descriptors.  These are the
          minimum to install a component.  Currently, I just get the UUID
          using win32's UUIDGEN or GUIDGEN.

        * examples/handcrafted/Hello/hello.csd: Component softpkg descriptor.

        * examples/handcrafted/Hello/hello.ssd: CIAO's servant softpkg
          descriptor.

        * examples/handcrafted/Hello/hello.ccd: CORBA component descriptor.

Wed Feb 19 13:30:19 2003  Boris Kolpackov  <boris@isis-server.isis.vanderbilt.edu>

        * CIDLC/DesignNotes: Reorganized stuff a bit again and added some
          comments on Jeff's comments.

Mon Feb 17 17:47:55 2003  Boris Kolpackov  <boris@isis-server.isis.vanderbilt.edu>

        * CIDLC/DesignNotes: Reorganized stuff a bit and added some new
          ideas/notes.

Sun Feb 16 21:30:42 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/releasenotes.html: Updated release info with the following.

        * ciao/ComponentInstallation_Impl.cpp:
        * ciao/ComponentInstallation_Impl.h: Fixed a problem of empty
          persistent backing store file.  I need to store the
          configuration data under a subsection (as oppose to the root
          section.)

        * ciao/CIAO_Server.dsp:
        * ciao/Daemon.idl:
        * ciao/Daemon_Impl.cpp:
        * ciao/Daemon_Impl.h:
        * ciao/Daemon_Impl.inl: Added a generic server process control
          interface that provides operations to query available service
          interfaces and to shutdown the server process.

        * tools/Daemon/CIAO_Daemon.cpp:
        * tools/Daemon/CIAO_Daemon.dsp:
        * tools/Daemon/CIAO_Installation_Data.ini:
        * tools/Daemon/Daemon.dsw:
        * tools/Daemon/README:
        * tools/Daemon/DaemonController.cpp:
        * tools/Daemon/DaemonController.dsp:
        * tools/Daemon/controller_i.cpp:
        * tools/Daemon/controller_i.h:
        * tools/Daemon/controller_i.inl: Added new per-host CIAO_Daemon
          implementaion which offer both ComponentInstallation interface
          which manages the local component implementation cache, and
          ServerActivator interface which the Assembly framework interacts
          with to spawn new ComponentServer processes.  See the README
          file in this directory and releasenotes.html for more details.

          There's also a DaemonController tool which provides a command
          line interface to control the daemon process and to interact
          with ComponentInstallation and ServerActivation interfaces.

Sat Feb 15 22:54:11 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/CIAO_Server.dsp:
        * ciao/ComponentInstallation_Impl.cpp:
        * ciao/ComponentInstallation_Impl.h:
        * ciao/ComponentInstallation_Impl.inl: Filled in the
          implementation for ComponentInstallation interface.  We
          currently only provide a naive implemntation for this
          interface.  It currently manages the pathnames to various
          component implementations so a Container can fetch a
          implementation from its UUID.

        * examples/handcrafted/Hello/hello_servants.dsp: Added CIAO_server
          to the list of link libraries.   I need to move the base
          container implementation from the CIAO_Server library to
          CIAO_Container library.

Fri Feb 14 23:15:39 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/todo.html:  Added info on why the Assembly tools should
          be responsible of the act of home registration.

        * ciao/Container_Impl.cpp:
        * ciao/ServerActivator_Impl.cpp:
        * ciao/ComponentServer_Impl.cpp: Changed the use of ACE_NEW_RETURN
          to ACE_NEW_THROW_EX.

        * ciao/ComponentServer_Impl.h: Cosmetic changes.

        * examples/handcrafted/Hello/hello_servants.cpp:
        * examples/handcrafted/Hello/hello_servants.h: Fixed <unsubscribe>
          signature based on RTF 1.1.

        * tools/ComponentServer/ComponentServer.cpp: Added comments
          explaining why we are not init'ing the component server right
          now.

        * tools/ServerActivator/README:
        * examples/handcrafted/Hello/client.cpp:
        * tools/ServerActivator/ServerActivator_test_client.cpp: Forced in
          hack to test out installing the HelloWorldHome using the new
          ServerActivator -> ComponentServer -> Container interfaces.

        * tools/Simple_Component_Server/Simple_Component_Server.cpp: Fix

Fri Feb 14 17:10:50 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/ConfigValues.html: Updated more supported ConfigValues types.

        * docs/releasenotes.html:
        * docs/todo.html:

        * ciao/Client_init.cpp:
        * ciao/Server_init.cpp:
        * ciao/Client_init.h:
        * ciao/Server_init.h: Removed "ciao/" from the include paths.  We
          now always include ciao core files as they are specified in the
          include path directly.

        * ciao/CIAO_Server.dsp:
        * ciao/CIAO_Servers.idl:
        * ciao/ComponentServer_Impl.cpp:
        * ciao/ComponentServer_Impl.h:
        * ciao/ComponentServer_Impl.inl:
        * ciao/Container_Base.cpp:
        * ciao/Container_Base.h:
        * ciao/Container_Impl.cpp:
        * ciao/Container_Impl.h:
        * ciao/Container_Impl.inl:
        * ciao/Object_Set_T.cpp:
        * ciao/Object_Set_T.h:
        * ciao/Object_Set_T.inl:
        * ciao/ServerActivator_Impl.cpp:
        * ciao/ServerActivator_Impl.h:
        * ciao/ServerActivator_Impl.inl: Filled in more implementations.

        * tools/ServerActivator/README:
        * tools/ServerActivator/ServerActivator.cpp:
        * tools/ServerActivator/ServerActivator.dsp:
        * tools/ServerActivator/ServerActivator.dsw:
        * tools/ServerActivator/ServerActivator_test_client.cpp:
        * tools/ServerActivator/ServerActivator_test_client.dsp: Added a
          ServerActivator implementation.

        * tools/ComponentServer/ComponentServer.cpp:
        * tools/ComponentServer/ComponentServer.dsp:
        * tools/ComponentServer/ComponentServer.dsw:
        * tools/ComponentServer/ComponentServer_test_client.cpp:
        * tools/ComponentServer/ComponentServer_test_client.dsp:
        * tools/ComponentServer/README: Added a more comprehensive
          ComponentServer implementation.

Sun Feb 09 20:39:05 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/todo.html: Added more todo items as we go along. :)

        * ciao/Component_Base.idl:
        * ciao/CCM_Deployment.idl: Changed the create method in
          ::Components::Deployment::AssemblyFactory to create_assembly per
          CCM RTF 1.1.

        * ciao/Assembly_Impl.cpp:
        * ciao/Assembly_Impl.h:
        * ciao/Assembly_Impl.inl: CCM RTF 1.1 changes.  Also added other
          test code in the file and explained how to create an Assembly
          object.

        * ciao/CIAO_Core.mpc:
        * ciao/CIAO_Client.dsp:
        * ciao/CIAO_Server.dsp:
        * ciao/CIAO_Value.idl: Added a CIAO internal cookie valuetype so
          we can downcast the incoming ::Components::Cookie back to CIAO's
          internal implementation type CIAO::Cookie easily.  The original
          "brute force cast" didn't work and CIAO::Cookie also provides a
          way to fish out the internal octetseq we need internally.

        * ciao/Cookies.cpp:
        * ciao/Cookies.h:
        * ciao/Cookies.inl: Changed to inherit the internal cookie
          implementation from OBV_CIAO::Cookie instead of
          OBV_Components::Cookie.  Also changed the extract method to be
          static.

        * ciao/Client_init.cpp: Added a new valuefactory to create
          ::Components::Cookie valuetype when receiving CIAO::Cookie from
          the server.  This should really be handled by supporting
          truncatable valuetype in TAO.

        * docs/templates/CIAO_Glue_Session_Template.inl: Applied some of
          the bug fixes from using Active Map and Cookie.  These template
          files need to be reviewed further.

        * tests/temp/README:
        * tests/temp/assembly/README:
        * tests/temp/assembly/assembly.dsw:
        * tests/temp/assembly/client.cpp:
        * tests/temp/assembly/client.dsp:
        * tests/temp/assembly/control.idl:
        * tests/temp/assembly/control.mpc:
        * tests/temp/assembly/run_test.pl:
        * tests/temp/assembly/server.cpp:
        * tests/temp/assembly/server.dsp: Added this test to make sure the
          demonstrate how to use AssemblyFactory and Assembly interface,
          and the Assembly's are being managed properly.  More
          importantly, I used this test to make sure the internal
          implementation for Cookie and Active_Object_Map are working
          correctly.

        * tools/XML_Helpers/Svcconf.dsp:
        * tools/XML_Helpers/Svcconf.dsw:
        * tools/XML_Helpers/Svcconf_Handler.cpp:
        * tools/XML_Helpers/Svcconf_Handler.h:
        * tools/XML_Helpers/Svcconf_Handler.i:
        * tools/XML_Helpers/main.cpp:
        * tools/XML_Helpers/svc.conf.xml: Added an example to demonstrate
          how to write a subclass of Cascadable_DocHandler and how to use
          the Skip_DocHandler.  Just so I won't forget how to use them.

Sat Feb 08 20:45:20 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/*: WiP intermediate checkins.

        * ciao/Object_Set_T.h:
        * ciao/Object_Set_T.cpp (object_in_set): Added a new method to
          check if an object is already in the set or not.

Fri Feb 07 23:35:35 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/Object_Set_T.h:
        * ciao/Object_Set_T.i:
        * ciao/Object_Set_T.cpp: Added a naive implementation of an object
          reference set.  It is naive because it simply keeps object
          references in an objref_var array without checking for
          duplication.  More importantly, it takes O(n) to to look for an
          object reference and return it.  What we really need is a
          thread-safe hash_set<> like class here.  Since this is mostly
          used only during setup/assemble time for a CIAO application,
          i.e., not on critical path, this class serves as a place holder
          for later, more efficient implementation.

          This new class is needed to support ServerActivator,
          ComponentServer, and Container interface in
          Components::Deployment module.

        * docs/ConfigVAlues.html: Added this new document page to record
          what configuration values can be used to initialize
          ComponentServer's and Container's.

        * docs/todo.html: Documented more future todo tasks and ideas.

Tue Feb 04 23:10:56 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/todo.html: Added a new item descirbing things that need to
          be done for component/home configuration using CCM's XML
          property files.

        * tools/XML_Helpers/Handler-Interaction.png:
        * tools/XML_Helpers/Handler-Interaction.vsd:
        * tools/XML_Helpers/README: Files that document how to use
          Cascadable_DocHandler and interactions among handlers of
          different layers.

        * tools/XML_Helpers/Cascadable_DocHandler.cpp:
        * tools/XML_Helpers/Cascadable_DocHandler.h:
        * tools/XML_Helpers/Cascadable_DocHandler.i: A
          ACEXML_DefaultHandler subclass which can be easily cascaded
          together to handle hierarchical XML document structure.  There
          is also a Skip_DocHandler class which subclasses from
          Cascadable_DocHandler and can be used to skip over some certain
          XML tags completely.  These helper classes should probably be
          collected under ACEXML in the future.

Sun Feb 02 21:05:39 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/Cookies.cpp (insert): Fixed a warning.

        * ciao/CCM_Base.idl: Changed to include <orb.idl> instead of <corba.pidl>.

        * ciao/CCM_Event.idl: Fixed a typo I put in last.

Sun Feb 02 15:23:26 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/XML/componentassembly.dtd:
        * docs/XML/corbacomponent.dtd:
        * docs/XML/properties.dtd:
        * docs/XML/softpkg.dtd: Updated these files with the ones from my
          web page.  They are now in-sync with the latest RTF.

Wed Jan 29 13:27:01 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/DesignNotes:

          Added a list of items from the IDL compiler that need redesign and
          can perhaps be done incrementally in the CIDL compiler, and
          eventually integrated back into the IDL compiler.

Wed Jan 22 16:05:18 2003  Boris S Kolpackov  <boris@isis-server.isis.vanderbilt.edu>

        * CIDLC/DesignNotes: added some more ideas.

Wed Jan 22 13:54:12 2003  Boris S Kolpackov  <boris@isis-server.isis.vanderbilt.edu>

        * CIDLC/DesignNotes: added this file to capture and document CIDL
          complier design ideas/decisions.

Tue Jan 21 16:20:44 2003  Boris S Kolpackov  <boris@isis-server.isis.vanderbilt.edu>

        * tools/CIDLC:
        * CIDLC: moved CIDLC directory one level up.

Mon Jan 13 15:23:09 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/templates/Executor.idl: Added meta-code for user-defined
          oeprations, factory operations, and finder operations.

        * docs/templates/CIAO_Glue_Session_Template.cpp:
        * docs/templates/CIAO_Glue_Session_Template.h:
        * docs/templates/CIAO_Glue_Session_Template.inl: Filled in the
          rest of the CIDL generated Servant Glue code templates.

Mon Jan 13 11:18:37 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/Component_Base.idl:
        * ciao/CCM_Base.idl: Based on Components 1.1 RTF
          Events::unsubscribe operations now return the unsubscribed
          consumber object reference instead of void.

        * docs/templates/CIAO_Glue_Session_Template.cpp:
        * docs/templates/CIAO_Glue_Session_Template.h:
        * docs/templates/CIAO_Glue_Session_Template.inl: Filled in most of
          the operations for component servant.  Only opeations left
          unimplemented include Events::get_*_publishers which I will
          implement in the *_Context class later.

          There are several other oeprations that throw NO_IMPLEMENT
          exception or are no-op currently.  Missing them probably is okay
          for now.  Next up, Home Servant template.

Mon Jan 13 00:27:03 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/templates/CIAO_Glue_Session_Template.cpp:
        * docs/templates/CIAO_Glue_Session_Template.h:
        * docs/templates/CIAO_Glue_Session_Template.inl: Filled in a great
          more generated code.  This is almost done, finally.

        * docs/templates/CIAO_Glue_Session_Template.cpp:
        * docs/templates/CIAO_Glue_Session_Template.h:
        * docs/templates/CIAO_Glue_Session_Template.inl:
        * docs/templates/Executor.idl: Changed to lead template comments
          with '##' instead of # to diffentiate them from preprocessor
          directives that we should generate.

        * ciao/HomeRegistrar_i.inl:
        * ciao/HomeRegistrar_i.cpp: Fixed incorrect uses of exception macros.

        * ciao/Cookies.h:
        * ciao/Cookies.cpp: Added a new insert method which "encode" an
          Active_Objref_Map key into the Cookie.

        * ciao/Container_Base.inl:
        * ciao/Container_Base.cpp:
        * ciao/Container_Base.h: Added a new get_objref method which
          basically allow us to get the component reference using POA's
          servant_to_reference operation.  Added a new inline file and
          fixed some incorrect uses of exception macros.

        * ciao/Component_Base.idl:
        * ciao/CCM_Base.idl: Based on Components 1.1 RTF
          Receptacles::disconnect operations now return the disconnected
          object reference instead of void.

Fri Jan 10 12:03:00 2003  Boris S Kolpackov  <boris@isis-server.isis.vanderbilt.edu>

        * tools/CCIDL:
        * tools/CIDLC:
        * tools/CIDLC/README: Renamed CCIDL to CIDLC. Added some
        explanations about naming convention choosen for CIDL compiler.

Thu Jan 09 00:57:37 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/templates/cidl_template.cidl: Added an example CIDL file.

        * docs/templates/CIAO_Glue_Session_Template.h:
        * docs/templates/CIAO_Glue_Session_Template.inl:
        * docs/templates/CIAO_Glue_Session_Template.cpp: Added more
          implementation code.

Wed Jan 08 16:48:28 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/templates/CIAO_Glue_Session_Template.h: Added the complete
          list of operations that needs to be supported.  Next up, the
          implementation templates.

        * ciao/Active_Objref_Map.cpp:
        * ciao/Active_Objref_Map.h: Defined a typedef called
          CIAO::Active_Objref_Map for managing CORBA::Object_var's using
          the ACE_Active_Map_Manager and instantiate the template.

        * ciao/Cookies.cpp:
        * ciao/Cookies.h: Added insertion/extraction of
          ACE_Active_Map_Manager_Key operations.

Tue Jan 07 23:28:28 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/CIAO_common.h: Added a new file to collect common CIAO
          macros.

        * ciao/CIAO_Component_i.cpp:
        * ciao/CIAO_Component_i.h: Removed.
        * ciao/Client_init.cpp:
        * ciao/Client_init.h:  The old CIAO_client_init in
          CIAO_Component_i is now called Client_init under CIAO namespace.
          This function initlializes the value factories for client side ORB.

        * ciao/Server_init.cpp:
        * ciao/Server_init.h: Added new function Server_init under CIAO
          namespace to initialize server side value factories for server
          side ORB.

        * ciao/Cookies.cpp:
        * ciao/Cookies.h:
        * ciao/Cookies.inl: Added server-side implementation of
          Components::Cookie called CIAO::Map_Key_Cookie.  This
          implementation is only used within the containers (i.e., server
          side).  Client doesn't need to know how to interpret a Cookie.

        * ciao/Container_Base.h:
        * ciao/HomeRegistrar_i.h: Fixed various ACE-guideline conformity
          problems.

        * ciao/CCM_Core.mpc:
        * ciao/CIAO_Client.dsp:
        * ciao/CIAO_Container.dsp:
        * ciao/CIAO_Server.dsp:
        * ciao/Makefile.client:
        * ciao/Makefile.container:
        * ciao/Makefile.server: Updated various makefiles/projects.

Tue Jan 07 07:48:02 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/Container_Base.cpp (install_servant): Changed to decrease
          the refcount of servant by one to make sure servants get
          "released" properly.

Fri Jan 03 11:27:12 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/templates/Executor.idl: This pseudo-meta IDL template file
          summarizes the standard executor mapping and serves as a
          template for CCIDL compiler.

Sun Dec 22 23:12:49 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/Display/RateGen/RateGen.idl:
        * examples/handcrafted/Display/GPS/GPS.idl:
        * examples/handcrafted/Display/NavDisplay/NavDisplay.idl:
        * examples/handcrafted/Display/HUDisplay.idl:
        * examples/handcrafted/Display/Display.mpc: Added more files for
          this multi-component example.

        The followings should go to the ChangeLog under $(ACE_ROOT)

        * bin/MakeProjectCreator/configs/ciao_client.mpc:
        * bin/MakeProjectCreator/configs/ciao_component.mpc:
        * bin/MakeProjectCreator/configs/ciao_server.mpc: Added libpaths
          defintions.

Sat Dec 21 15:09:55 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tools/Simple_Component_Server/Simple_Component_Server.dsp:
        * examples/handcrafted/Hello/run_test.pl: Changed to generate
          Simple_Component_Server executable in the project directory.

        * examples/handcrafted/Hello/hello.mpc:
        * ciao/CCM_Core.mpc:
        * tools/Simple_Component_Server/Simple_Component_Server.mpc:
          Created MPC specifications.

        The followings should go to the ChangeLog under $(ACE_ROOT)

        * bin/MakeProjectCreator/configs/ciao_client.mpc:
        * bin/MakeProjectCreator/configs/ciao_component.mpc:
        * bin/MakeProjectCreator/configs/ciao_server.mpc: Created MPC
          templates for CIAO client, component implmentation, and server
          tools.

Fri Dec 20 23:09:53 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/Makefile.server: Added HomeRegistrar.idl and
          HomeRegistrar_i to the makefile.

        * tools/Simple_Component_Server/Makefile: Added a new makefile.

Fri Dec 20 20:32:53 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/CCM_Component.idl:
        * ciao/CCM_Container.idl:
        * ciao/Container_Base.cpp:
        * ciao/Makefile.client:
        * ciao/Makefile.container:
        * ciao/Makefile.server: Fixed compilation erros and Makefiles on
          Linux.

Thu Dec 19 20:44:39 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/Display/README:
        * examples/handcrafted/Display/Configuration-0.png: Added new
          files explaining the purpose of the the new example and what it
          will do.

Wed Dec 18 20:37:06 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/Hello/run_test.pl: Added a script to
          automate running this stuff.

        * examples/handcrafted/Hello/README: Replaced the reference to
          CIAO_single_com_server to Simple_Component_Server.

Tue Dec 17 23:30:59 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tools/CIAO_single_com_server/*:
        * tools/Simple_Component_Server/*: Changed the name of the simple
          server from CIAO_single_com_server to Simple_Component_Server.
          The original name didn't make too much sense at all.

Tue Dec 17 22:49:32 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/CIAO_Server.dsp:
        * ciao/HomeRegistrar.idl:
        * ciao/HomeRegistrar_i.{h,inl,cpp}: Added a NameService based
          HomeFinder extension.  This interface defines the registration
          operation, which is not defined in the CCM specification.  This
          is part of the CIAO_Server library.

        * tools/CIAO_single_com_server/CIAO_single_com_server.cpp: Changed
          to register installed components with the HomeRegistrar instead
          of dumping the IOR into a file.  The only thing that gets dumped
          into a file now is the IOR for the HomeFinder interface which
          HomeRegistrar inherits.

        * examples/handecrafted/Hello/README: Added information on the
          procedures one should follow to run this test.

        * examples/handcrafted/Hello/config: Updated the component server
          config file to include the repo ids and canonical name for the
          home.

        * examples/handcrafted/Hello/client.dsp:
        * examples/handcrafted/Hello/client.cpp: Changed to use acquire
          the home object reference thru the HomeFinder interface, instead
          of passing it in explicitly.

        * examples/handcrafted/Hello/hello.dsw:
        * examples/handcrafted/Hello/server.cpp:
        * examples/handcrafted/Hello/server.dsp: Removed server from the
          workspace.  As we now have a true component server, we no longer
          need a server process for this example.


Mon Dec 16 10:56:46 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tools/CIAO_single_com_server/CIAO_single_com_server.cpp: Fixed
          command line argument parsing problem.  We now process the
          command line argument for ORB correctly.

Sun Dec 15 23:54:16 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tools/CIAO_single_com_server/*: Added a new prototype component
          server.  We can now run session components on a generic server
          using a proprietary config file for component installation.

        * ciao/Container_Base.{h,cpp}: Fixed incorrect usage of ACE_DLL
          where executor and servant Dlls got unloaded prematurely.

Wed Dec 11 14:39:08 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

          A lot have changed since last ChangeLog entry.  Most of the
          changes are intermediate so I didn't even try to record them.

        * ciao/CCMCore.dsw:
        * ciao/CIAO_Container.dsp:
        * ciao/CIAO_Server.dsp: Moved Container_Base.* from CIAO_Container
          library to CIAO_Server library.  These classes in Container_Base
          are really run-time container management interfaces than
          container interfaces themselves.

        * ciao/Container_Base.cpp:
        * ciao/Container_Base.h: Added _ciao_install_home which enable
          installing a component home from relevant DLL named and entry
          points.  We are not managing the lifecycle of DLL objects in the
          implementation yet (we just never unlink DLL. :)  This will have
          to be changed in the future.

        * examples/handcrafted/Hello/hello_servants.cpp:
        * examples/handcrafted/Hello/hello_servants.h: Added an entry
          point "create_HelloWorld_Servant" so we can use the glue code
          with the new "generic server."

        * examples/handcrafted/Hello/server.cpp:
        * examples/handcrafted/Hello/server.dsp: Reworked the server
          implementation so that it is no longer tied to a specific
          component implementation.  I.e., we can use the same server to
          host any *one* component now.

        * examples/handcrafted/Hello/client.dsp: Added a missing link
          directory.

Tue Nov 05 23:42:04 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * CCMCore.dsp:
        * CIAO_BaseC.cpp:
        * CIAO_BaseC.h:
        * CIAO_BaseC.i:
        * CIAO_ComponentC.cpp:
        * CIAO_ComponentC.h:
        * CIAO_ComponentC.i:
        * CIAO_ContainerC.cpp:
        * CIAO_ContainerC.h:
        * CIAO_ContainerC.i:
        * CIAO_Container_ExC.cpp:
        * CIAO_Container_ExC.h:
        * CIAO_Container_ExC.i:
        * CIAO_DeploymentC.cpp:
        * CIAO_DeploymentC.h:
        * CIAO_DeploymentC.i:
        * CIAO_EventC.cpp:
        * CIAO_EventC.h:
        * CIAO_EventC.i:
        * CIAO_TransactionC.cpp:
        * CIAO_TransactionC.h:
        * CIAO_TransactionC.i:
        * Component_BaseC.cpp:
        * Component_BaseC.h:
        * Component_BaseC.i:
        * Component_BaseS.cpp:
        * Component_BaseS.h:
        * Component_BaseS.i:
        * Component_BaseS_T.cpp:
        * Component_BaseS_T.h:
        * Component_BaseS_T.i:
        * CosPersistentStateC.cpp:
        * CosPersistentStateC.h:
        * CosPersistentStateC.i:
        * CosPersistentStateS.cpp:
        * CosPersistentStateS.h:
        * CosPersistentStateS.i:
        * CosPersistentStateS_T.cpp:
        * CosPersistentStateS_T.h:
        * CosPersistentStateS_T.i: Removed generated files.

        * CCMCore.dsw:
        * CIAO_CLIENT_Export.h:
        * CIAO_Client.dsp:
        * CIAO_Component.pidl:
        * CIAO_Container.dsp:
        * CIAO_Container_Export.h:
        * CIAO_SERVER_Export.h:
        * CIAO_Server.dsp:
        * README: Split up the CCM Core library into 3 libraries for clients,
          component implementations, and component servers.

Thu Sep 26 15:20:13 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ciao/CCMCore.dsp:
        * ciao/CIAO_Base.pidl:
        * ciao/CIAO_BaseC.cpp:
        * ciao/CIAO_BaseC.h:
        * ciao/CIAO_BaseC.i:
        * ciao/CIAO_Component.pidl:
        * ciao/CIAO_ComponentC.cpp:
        * ciao/CIAO_ComponentC.h:
        * ciao/CIAO_ComponentC.i:
        * ciao/CIAO_Container.pidl:
        * ciao/CIAO_ContainerC.cpp:
        * ciao/CIAO_ContainerC.h:
        * ciao/CIAO_ContainerC.i:
        * ciao/CIAO_Container_Ex.pidl:
        * ciao/CIAO_Container_ExC.cpp:
        * ciao/CIAO_Container_ExC.h:
        * ciao/CIAO_Container_ExC.i:
        * ciao/CIAO_Deployment.pidl:
        * ciao/CIAO_DeploymentC.cpp:
        * ciao/CIAO_DeploymentC.h:
        * ciao/CIAO_DeploymentC.i:
        * ciao/CIAO_Event.pidl:
        * ciao/CIAO_EventC.cpp:
        * ciao/CIAO_EventC.h:
        * ciao/CIAO_EventC.i:
        * ciao/CIAO_Transaction.pidl:
        * ciao/CIAO_TransactionC.cpp:
        * ciao/CIAO_TransactionC.h:
        * ciao/CIAO_TransactionC.i: Changed to split the component idl
          file into severl smaller idl files.

        * ciao/Makefile: An empty place holder for now.

        * ciao/Version.h:
        * ciao/ciao.rc: Added version information files.

Thu Jul 18 22:14:59 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/handcrafted/Philosophers/Philosophers.idl (Example):

Mon Jun 17 17:35:31 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/index.html:
        * docs/imgs/CCM.vsd:
        * docs/imgs/basic-container.png:
        * docs/imgs/component-basic.png:
        * docs/imgs/deployment.png:
        * docs/imgs/extended-container.png:
        * docs/imgs/home-config.png: Added CIAO documentation.
