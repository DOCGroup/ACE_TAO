--- orig/IFR_Extended.pidl	Mon Apr 23 20:20:09 2001
+++ IFR_Extended.pidl	Fri Apr 20 03:06:40 2001
@@ -71,114 +71,122 @@
 
 module CORBA
 {
+  typedef short ValueModifier; // PIDL
+  const ValueModifier VM_NONE = 0;
+  const ValueModifier VM_CUSTOM = 1;
+  const ValueModifier VM_ABSTRACT = 2;
+  const ValueModifier VM_TRUNCATABLE = 3;
+
   typedef short Visibility;
-};
+  const Visibility PRIVATE_MEMBER = 0;
+  const Visibility PUBLIC_MEMBER = 1;
 
-  interface CORBA_FixedDef : CORBA_IDLType 
+  interface FixedDef : IDLType 
   {
     attribute unsigned short digits;
     attribute short scale;
   };
 
-  struct CORBA_ValueMember 
+  struct ValueMember 
   {
-    string name;
-    string id;
-    string defined_in;
-    string version;
-    CORBA::TypeCode type;
-    CORBA_IDLType type_def;
-    CORBA::Visibility access;
+    Identifier name;
+    RepositoryId id;
+    RepositoryId defined_in;
+    VersionSpec version;
+    TypeCode type;
+    IDLType type_def;
+    Visibility access;
   };
 
-  typedef sequence <CORBA_ValueMember> CORBA_ValueMemberSeq;
+  typedef sequence <ValueMember> ValueMemberSeq;
 
-  interface CORBA_ValueMemberDef : CORBA_Contained 
+  interface ValueMemberDef : Contained 
   {
-    readonly attribute CORBA::TypeCode type;
-    attribute CORBA_IDLType type_def;
-    attribute CORBA::Visibility access;
+    readonly attribute TypeCode type;
+    attribute IDLType type_def;
+    attribute Visibility access;
   };
 
-  interface CORBA_ValueDef : CORBA_Container, CORBA_Contained, CORBA_IDLType 
+  interface ValueDef : Container, Contained, IDLType 
   {
     // read/write interface
-    attribute CORBA_InterfaceDefSeq supported_interfaces;
-    attribute CORBA_InitializerSeq initializers;
-    attribute CORBA_ValueDef base_value;
-    attribute CORBA_ValueDefSeq abstract_base_values;
+    attribute InterfaceDefSeq supported_interfaces;
+    attribute InitializerSeq initializers;
+    attribute ValueDef base_value;
+    attribute ValueDefSeq abstract_base_values;
     // read interface
     attribute boolean is_abstract;
     attribute boolean is_custom;
     attribute boolean is_truncatable;
     boolean is_a (
-        in string id
+        in RepositoryId id
       );
 
     struct FullValueDescription 
     {
-      string name;
-      string id;
+      Identifier name;
+      RepositoryId id;
       boolean is_abstract;
       boolean is_custom;
-      string defined_in;
-      string version;
-      CORBA_OpDescriptionSeq operations;
-      CORBA_AttrDescriptionSeq attributes;
-      CORBA_ValueMemberSeq members;
-      CORBA_InitializerSeq initializers;
-      CORBA_RepositoryIdSeq supported_interfaces;
-      CORBA_RepositoryIdSeq abstract_base_values;
+      RepositoryId defined_in;
+      VersionSpec version;
+      OpDescriptionSeq operations;
+      AttrDescriptionSeq attributes;
+      ValueMemberSeq members;
+      InitializerSeq initializers;
+      RepositoryIdSeq supported_interfaces;
+      RepositoryIdSeq abstract_base_values;
       boolean is_truncatable;
-      string base_value;
-      CORBA::TypeCode type;
+      RepositoryId base_value;
+      TypeCode type;
     };
 
     FullValueDescription describe_value ();
       
-    CORBA_ValueMemberDef create_value_member  (
-        in string id,
-        in string name,
-        in string version,
-        in CORBA_IDLType type,
-        in CORBA::Visibility access
+    ValueMemberDef create_value_member  (
+        in RepositoryId id,
+        in Identifier name,
+        in VersionSpec version,
+        in IDLType type,
+        in Visibility access
       );
-    CORBA_AttributeDef create_attribute (
-        in string id,
-        in string name,
-        in string version,
-        in CORBA_IDLType type,
-        in CORBA::AttributeMode mode
+    AttributeDef create_attribute (
+        in RepositoryId id,
+        in Identifier name,
+        in VersionSpec version,
+        in IDLType type,
+        in AttributeMode mode
       );
-    CORBA_OperationDef create_operation (
-        in string id,
-        in string name,
-        in string version,
-        in CORBA_IDLType result,
-        in CORBA::OperationMode mode,
-        in CORBA_ParDescriptionSeq params,
-        in CORBA_ExceptionDefSeq exceptions,
-        in CORBA_ContextIdSeq contexts
+    OperationDef create_operation (
+        in RepositoryId id,
+        in Identifier name,
+        in VersionSpec version,
+        in IDLType result,
+        in OperationMode mode,
+        in ParDescriptionSeq params,
+        in ExceptionDefSeq exceptions,
+        in ContextIdSeq contexts
       );
   };
 
-  struct CORBA_ValueDescription 
+  struct ValueDescription 
   {
-    string name;
-    string id;
+    Identifier name;
+    RepositoryId id;
     boolean is_abstract;
     boolean is_custom;
-    string defined_in;
-    string version;
-    CORBA_RepositoryIdSeq supported_interfaces;
-    CORBA_RepositoryIdSeq abstract_base_values;
+    RepositoryId defined_in;
+    VersionSpec version;
+    RepositoryIdSeq supported_interfaces;
+    RepositoryIdSeq abstract_base_values;
     boolean is_truncatable;
-    string base_value;
+    RepositoryId base_value;
   };
 
-  interface CORBA_ValueBoxDef : CORBA_TypedefDef 
+  interface ValueBoxDef : TypedefDef 
   {
-    attribute CORBA_IDLType original_type_def;
+    attribute IDLType original_type_def;
+  };
   };
 
 #pragma prefix ""
