--- orig/IFR_BasicC.cpp	Tue Apr 24 23:25:50 2001
+++ IFR_BasicC.cpp	Fri May 11 01:22:20 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -36,258 +36,6 @@
 #include "IFR_BasicC.i"
 #endif /* !defined INLINE */
 
-static const CORBA::Long _oc_CORBA_PrimitiveKind[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  36,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x412f5072), 
-  ACE_NTOHL (0x696d6974), 
-  ACE_NTOHL (0x6976654b), 
-  ACE_NTOHL (0x696e643a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/PrimitiveKind:1.0
-  14,
-  ACE_NTOHL (0x5072696d), 
-  ACE_NTOHL (0x69746976), 
-  ACE_NTOHL (0x654b696e), 
-  ACE_NTOHL (0x64000000),  // name = PrimitiveKind
-  22, // member count
-  8,
-  ACE_NTOHL (0x706b5f6e), 
-  ACE_NTOHL (0x756c6c00),  // name = pk_null
-  8,
-  ACE_NTOHL (0x706b5f76), 
-  ACE_NTOHL (0x6f696400),  // name = pk_void
-  9,
-  ACE_NTOHL (0x706b5f73), 
-  ACE_NTOHL (0x686f7274), 
-  ACE_NTOHL (0x0),  // name = pk_short
-  8,
-  ACE_NTOHL (0x706b5f6c), 
-  ACE_NTOHL (0x6f6e6700),  // name = pk_long
-  10,
-  ACE_NTOHL (0x706b5f75), 
-  ACE_NTOHL (0x73686f72), 
-  ACE_NTOHL (0x74000000),  // name = pk_ushort
-  9,
-  ACE_NTOHL (0x706b5f75), 
-  ACE_NTOHL (0x6c6f6e67), 
-  ACE_NTOHL (0x0),  // name = pk_ulong
-  9,
-  ACE_NTOHL (0x706b5f66), 
-  ACE_NTOHL (0x6c6f6174), 
-  ACE_NTOHL (0x0),  // name = pk_float
-  10,
-  ACE_NTOHL (0x706b5f64), 
-  ACE_NTOHL (0x6f75626c), 
-  ACE_NTOHL (0x65000000),  // name = pk_double
-  11,
-  ACE_NTOHL (0x706b5f62), 
-  ACE_NTOHL (0x6f6f6c65), 
-  ACE_NTOHL (0x616e0000),  // name = pk_boolean
-  8,
-  ACE_NTOHL (0x706b5f63), 
-  ACE_NTOHL (0x68617200),  // name = pk_char
-  9,
-  ACE_NTOHL (0x706b5f6f), 
-  ACE_NTOHL (0x63746574), 
-  ACE_NTOHL (0x0),  // name = pk_octet
-  7,
-  ACE_NTOHL (0x706b5f61), 
-  ACE_NTOHL (0x6e790000),  // name = pk_any
-  12,
-  ACE_NTOHL (0x706b5f54), 
-  ACE_NTOHL (0x79706543), 
-  ACE_NTOHL (0x6f646500),  // name = pk_TypeCode
-  13,
-  ACE_NTOHL (0x706b5f50), 
-  ACE_NTOHL (0x72696e63), 
-  ACE_NTOHL (0x6970616c), 
-  ACE_NTOHL (0x0),  // name = pk_Principal
-  10,
-  ACE_NTOHL (0x706b5f73), 
-  ACE_NTOHL (0x7472696e), 
-  ACE_NTOHL (0x67000000),  // name = pk_string
-  10,
-  ACE_NTOHL (0x706b5f6f), 
-  ACE_NTOHL (0x626a7265), 
-  ACE_NTOHL (0x66000000),  // name = pk_objref
-  12,
-  ACE_NTOHL (0x706b5f6c), 
-  ACE_NTOHL (0x6f6e676c), 
-  ACE_NTOHL (0x6f6e6700),  // name = pk_longlong
-  13,
-  ACE_NTOHL (0x706b5f75), 
-  ACE_NTOHL (0x6c6f6e67), 
-  ACE_NTOHL (0x6c6f6e67), 
-  ACE_NTOHL (0x0),  // name = pk_ulonglong
-  14,
-  ACE_NTOHL (0x706b5f6c), 
-  ACE_NTOHL (0x6f6e6764), 
-  ACE_NTOHL (0x6f75626c), 
-  ACE_NTOHL (0x65000000),  // name = pk_longdouble
-  9,
-  ACE_NTOHL (0x706b5f77), 
-  ACE_NTOHL (0x63686172), 
-  ACE_NTOHL (0x0),  // name = pk_wchar
-  11,
-  ACE_NTOHL (0x706b5f77), 
-  ACE_NTOHL (0x73747269), 
-  ACE_NTOHL (0x6e670000),  // name = pk_wstring
-  14,
-  ACE_NTOHL (0x706b5f76), 
-  ACE_NTOHL (0x616c7565), 
-  ACE_NTOHL (0x5f626173), 
-  ACE_NTOHL (0x65000000),  // name = pk_value_base
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_PrimitiveKind (
-    CORBA::tk_enum,
-    sizeof (_oc_CORBA_PrimitiveKind),
-    (char *) &_oc_CORBA_PrimitiveKind,
-    0,
-    sizeof (CORBA::PrimitiveKind)
-  );
-
-TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
-TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_PrimitiveKind, &_tc_TAO_tc_CORBA_PrimitiveKind)
-TAO_NAMESPACE_END
-
-static const CORBA::Long _oc_CORBA_AttributeMode[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  36,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x412f4174), 
-  ACE_NTOHL (0x74726962), 
-  ACE_NTOHL (0x7574654d), 
-  ACE_NTOHL (0x6f64653a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/AttributeMode:1.0
-  14,
-  ACE_NTOHL (0x41747472), 
-  ACE_NTOHL (0x69627574), 
-  ACE_NTOHL (0x654d6f64), 
-  ACE_NTOHL (0x65000000),  // name = AttributeMode
-  2, // member count
-  12,
-  ACE_NTOHL (0x41545452), 
-  ACE_NTOHL (0x5f4e4f52), 
-  ACE_NTOHL (0x4d414c00),  // name = ATTR_NORMAL
-  14,
-  ACE_NTOHL (0x41545452), 
-  ACE_NTOHL (0x5f524541), 
-  ACE_NTOHL (0x444f4e4c), 
-  ACE_NTOHL (0x59000000),  // name = ATTR_READONLY
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_AttributeMode (
-    CORBA::tk_enum,
-    sizeof (_oc_CORBA_AttributeMode),
-    (char *) &_oc_CORBA_AttributeMode,
-    0,
-    sizeof (CORBA::AttributeMode)
-  );
-
-TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
-TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_AttributeMode, &_tc_TAO_tc_CORBA_AttributeMode)
-TAO_NAMESPACE_END
-
-static const CORBA::Long _oc_CORBA_OperationMode[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  36,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x412f4f70), 
-  ACE_NTOHL (0x65726174), 
-  ACE_NTOHL (0x696f6e4d), 
-  ACE_NTOHL (0x6f64653a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/OperationMode:1.0
-  14,
-  ACE_NTOHL (0x4f706572), 
-  ACE_NTOHL (0x6174696f), 
-  ACE_NTOHL (0x6e4d6f64), 
-  ACE_NTOHL (0x65000000),  // name = OperationMode
-  2, // member count
-  10,
-  ACE_NTOHL (0x4f505f4e), 
-  ACE_NTOHL (0x4f524d41), 
-  ACE_NTOHL (0x4c000000),  // name = OP_NORMAL
-  10,
-  ACE_NTOHL (0x4f505f4f), 
-  ACE_NTOHL (0x4e455741), 
-  ACE_NTOHL (0x59000000),  // name = OP_ONEWAY
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_OperationMode (
-    CORBA::tk_enum,
-    sizeof (_oc_CORBA_OperationMode),
-    (char *) &_oc_CORBA_OperationMode,
-    0,
-    sizeof (CORBA::OperationMode)
-  );
-
-TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
-TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_OperationMode, &_tc_TAO_tc_CORBA_OperationMode)
-TAO_NAMESPACE_END
-
-static const CORBA::Long _oc_CORBA_ParameterMode[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  36,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x412f5061), 
-  ACE_NTOHL (0x72616d65), 
-  ACE_NTOHL (0x7465724d), 
-  ACE_NTOHL (0x6f64653a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ParameterMode:1.0
-  14,
-  ACE_NTOHL (0x50617261), 
-  ACE_NTOHL (0x6d657465), 
-  ACE_NTOHL (0x724d6f64), 
-  ACE_NTOHL (0x65000000),  // name = ParameterMode
-  3, // member count
-  9,
-  ACE_NTOHL (0x50415241), 
-  ACE_NTOHL (0x4d5f494e), 
-  ACE_NTOHL (0x0),  // name = PARAM_IN
-  10,
-  ACE_NTOHL (0x50415241), 
-  ACE_NTOHL (0x4d5f4f55), 
-  ACE_NTOHL (0x54000000),  // name = PARAM_OUT
-  12,
-  ACE_NTOHL (0x50415241), 
-  ACE_NTOHL (0x4d5f494e), 
-  ACE_NTOHL (0x4f555400),  // name = PARAM_INOUT
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ParameterMode (
-    CORBA::tk_enum,
-    sizeof (_oc_CORBA_ParameterMode),
-    (char *) &_oc_CORBA_ParameterMode,
-    0,
-    sizeof (CORBA::ParameterMode)
-  );
-
-TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
-TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ParameterMode, &_tc_TAO_tc_CORBA_ParameterMode)
-TAO_NAMESPACE_END
-
 CORBA_Repository_ptr
 tao_CORBA_Repository_duplicate (
     CORBA_Repository_ptr p
@@ -2867,7 +2615,7 @@
     return CORBA_Repository::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_Repository:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/Repository:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_Repository::_nil ());
       if (is_a == 0)
         return CORBA_Repository::_nil ();
@@ -2935,9 +2683,9 @@
 CORBA::Boolean CORBA_Repository::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Repository:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Container:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Repository:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Container:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -2986,7 +2734,7 @@
 
 const char* CORBA_Repository::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_Repository:1.0";
+  return "IDL:omg.org/CORBA/Repository:1.0";
 }
 
 CORBA_Contained_ptr CORBA_Repository::lookup_id (
@@ -3147,38 +2895,6 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_Repository[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  33,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5265), 
-  ACE_NTOHL (0x706f7369), 
-  ACE_NTOHL (0x746f7279), 
-  ACE_NTOHL (0x3a312e30), 
-  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA_Repository:1.0
-  17,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5265), 
-  ACE_NTOHL (0x706f7369), 
-  ACE_NTOHL (0x746f7279), 
-  ACE_NTOHL (0x0),  // name = CORBA_Repository
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_Repository (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_Repository),
-    (char *) &_oc_CORBA_Repository,
-    0,
-    sizeof (CORBA_Repository)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_Repository =
-  &_tc_TAO_tc_CORBA_Repository;
-
 CORBA_ModuleDef_ptr
 tao_CORBA_ModuleDef_duplicate (
     CORBA_ModuleDef_ptr p
@@ -3513,7 +3229,7 @@
     return CORBA_ModuleDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_ModuleDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/ModuleDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_ModuleDef::_nil ());
       if (is_a == 0)
         return CORBA_ModuleDef::_nil ();
@@ -3581,10 +3297,10 @@
 CORBA::Boolean CORBA_ModuleDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_ModuleDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Container:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Contained:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/ModuleDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Container:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Contained:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -3645,94 +3361,9 @@
 
 const char* CORBA_ModuleDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_ModuleDef:1.0";
+  return "IDL:omg.org/CORBA/ModuleDef:1.0";
 }
 
-static const CORBA::Long _oc_CORBA_ModuleDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  32,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4d6f), 
-  ACE_NTOHL (0x64756c65), 
-  ACE_NTOHL (0x4465663a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_ModuleDef:1.0
-  16,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4d6f), 
-  ACE_NTOHL (0x64756c65), 
-  ACE_NTOHL (0x44656600),  // name = CORBA_ModuleDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ModuleDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_ModuleDef),
-    (char *) &_oc_CORBA_ModuleDef,
-    0,
-    sizeof (CORBA_ModuleDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_ModuleDef =
-  &_tc_TAO_tc_CORBA_ModuleDef;
-
-static const CORBA::Long _oc_CORBA_ModuleDescription[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  40,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4d6f), 
-  ACE_NTOHL (0x64756c65), 
-  ACE_NTOHL (0x44657363), 
-  ACE_NTOHL (0x72697074), 
-  ACE_NTOHL (0x696f6e3a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_ModuleDescription:1.0
-  24,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4d6f), 
-  ACE_NTOHL (0x64756c65), 
-  ACE_NTOHL (0x44657363), 
-  ACE_NTOHL (0x72697074), 
-  ACE_NTOHL (0x696f6e00),  // name = CORBA_ModuleDescription
-  4, // member count
-  5,
-  ACE_NTOHL (0x6e616d65), 
-  ACE_NTOHL (0x0),  // name = name
-  CORBA::tk_string, 
-  0U, // string length
-  3,
-  ACE_NTOHL (0x69640000),  // name = id
-  CORBA::tk_string, 
-  0U, // string length
-  11,
-  ACE_NTOHL (0x64656669), 
-  ACE_NTOHL (0x6e65645f), 
-  ACE_NTOHL (0x696e0000),  // name = defined_in
-  CORBA::tk_string, 
-  0U, // string length
-  8,
-  ACE_NTOHL (0x76657273), 
-  ACE_NTOHL (0x696f6e00),  // name = version
-  CORBA::tk_string, 
-  0U, // string length
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ModuleDescription (
-    CORBA::tk_struct,
-    sizeof (_oc_CORBA_ModuleDescription),
-    (char *) &_oc_CORBA_ModuleDescription,
-    0,
-    sizeof (CORBA_ModuleDescription)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_ModuleDescription =
-  &_tc_TAO_tc_CORBA_ModuleDescription;
-
 void CORBA_ModuleDescription::_tao_any_destructor (void *x)
 {
   CORBA_ModuleDescription *tmp = ACE_static_cast (CORBA_ModuleDescription*,x);
@@ -5320,7 +4951,7 @@
     return CORBA_ConstantDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_ConstantDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/ConstantDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_ConstantDef::_nil ());
       if (is_a == 0)
         return CORBA_ConstantDef::_nil ();
@@ -5388,9 +5019,9 @@
 CORBA::Boolean CORBA_ConstantDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_ConstantDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Contained:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/ConstantDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Contained:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -5439,7 +5070,7 @@
 
 const char* CORBA_ConstantDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_ConstantDef:1.0";
+  return "IDL:omg.org/CORBA/ConstantDef:1.0";
 }
 
 CORBA::TypeCode_ptr CORBA_ConstantDef::type (
@@ -5531,131 +5162,32 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_ConstantDef[] =
+void CORBA_ConstantDescription::_tao_any_destructor (void *x)
 {
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  34,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f436f), 
-  ACE_NTOHL (0x6e737461), 
-  ACE_NTOHL (0x6e744465), 
-  ACE_NTOHL (0x663a312e), 
-  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_ConstantDef:1.0
-  18,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f436f), 
-  ACE_NTOHL (0x6e737461), 
-  ACE_NTOHL (0x6e744465), 
-  ACE_NTOHL (0x66000000),  // name = CORBA_ConstantDef
-};
+  CORBA_ConstantDescription *tmp = ACE_static_cast (CORBA_ConstantDescription*,x);
+  delete tmp;
+}
 
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ConstantDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_ConstantDef),
-    (char *) &_oc_CORBA_ConstantDef,
-    0,
-    sizeof (CORBA_ConstantDef)
-  );
+CORBA_StructDef_ptr
+tao_CORBA_StructDef_duplicate (
+    CORBA_StructDef_ptr p
+  )
+{
+  return CORBA_StructDef::_duplicate (p);
+}
 
-CORBA::TypeCode_ptr _tc_CORBA_ConstantDef =
-  &_tc_TAO_tc_CORBA_ConstantDef;
+void
+tao_CORBA_StructDef_release (
+    CORBA_StructDef_ptr p
+  )
+{
+  CORBA::release (p);
+}
 
-static const CORBA::Long _oc_CORBA_ConstantDescription[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  42,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f436f), 
-  ACE_NTOHL (0x6e737461), 
-  ACE_NTOHL (0x6e744465), 
-  ACE_NTOHL (0x73637269), 
-  ACE_NTOHL (0x7074696f), 
-  ACE_NTOHL (0x6e3a312e), 
-  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_ConstantDescription:1.0
-  26,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f436f), 
-  ACE_NTOHL (0x6e737461), 
-  ACE_NTOHL (0x6e744465), 
-  ACE_NTOHL (0x73637269), 
-  ACE_NTOHL (0x7074696f), 
-  ACE_NTOHL (0x6e000000),  // name = CORBA_ConstantDescription
-  6, // member count
-  5,
-  ACE_NTOHL (0x6e616d65), 
-  ACE_NTOHL (0x0),  // name = name
-  CORBA::tk_string, 
-  0U, // string length
-  3,
-  ACE_NTOHL (0x69640000),  // name = id
-  CORBA::tk_string, 
-  0U, // string length
-  11,
-  ACE_NTOHL (0x64656669), 
-  ACE_NTOHL (0x6e65645f), 
-  ACE_NTOHL (0x696e0000),  // name = defined_in
-  CORBA::tk_string, 
-  0U, // string length
-  8,
-  ACE_NTOHL (0x76657273), 
-  ACE_NTOHL (0x696f6e00),  // name = version
-  CORBA::tk_string, 
-  0U, // string length
-  5,
-  ACE_NTOHL (0x74797065), 
-  ACE_NTOHL (0x0),  // name = type
-  CORBA::tk_TypeCode,
-
-  6,
-  ACE_NTOHL (0x76616c75), 
-  ACE_NTOHL (0x65000000),  // name = value
-  CORBA::tk_any,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ConstantDescription (
-    CORBA::tk_struct,
-    sizeof (_oc_CORBA_ConstantDescription),
-    (char *) &_oc_CORBA_ConstantDescription,
-    0,
-    sizeof (CORBA_ConstantDescription)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_ConstantDescription =
-  &_tc_TAO_tc_CORBA_ConstantDescription;
-
-void CORBA_ConstantDescription::_tao_any_destructor (void *x)
-{
-  CORBA_ConstantDescription *tmp = ACE_static_cast (CORBA_ConstantDescription*,x);
-  delete tmp;
-}
-
-CORBA_StructDef_ptr
-tao_CORBA_StructDef_duplicate (
-    CORBA_StructDef_ptr p
-  )
-{
-  return CORBA_StructDef::_duplicate (p);
-}
-
-void
-tao_CORBA_StructDef_release (
-    CORBA_StructDef_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-CORBA_StructDef_ptr
-tao_CORBA_StructDef_nil (
-    void
-  )
+CORBA_StructDef_ptr
+tao_CORBA_StructDef_nil (
+    void
+  )
 {
   return CORBA_StructDef::_nil ();
 }
@@ -6469,7 +6001,7 @@
     return CORBA_StructDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_StructDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/StructDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_StructDef::_nil ());
       if (is_a == 0)
         return CORBA_StructDef::_nil ();
@@ -6537,12 +6069,12 @@
 CORBA::Boolean CORBA_StructDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_StructDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_TypedefDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Container:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Contained:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IDLType:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/StructDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/TypedefDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Container:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Contained:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IDLType:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -6627,7 +6159,7 @@
 
 const char* CORBA_StructDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_StructDef:1.0";
+  return "IDL:omg.org/CORBA/StructDef:1.0";
 }
 
 CORBA_StructMemberSeq * CORBA_StructDef::members (
@@ -6666,36 +6198,6 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_StructDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  32,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5374), 
-  ACE_NTOHL (0x72756374), 
-  ACE_NTOHL (0x4465663a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_StructDef:1.0
-  16,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5374), 
-  ACE_NTOHL (0x72756374), 
-  ACE_NTOHL (0x44656600),  // name = CORBA_StructDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_StructDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_StructDef),
-    (char *) &_oc_CORBA_StructDef,
-    0,
-    sizeof (CORBA_StructDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_StructDef =
-  &_tc_TAO_tc_CORBA_StructDef;
-
 CORBA_UnionDef_ptr
 tao_CORBA_UnionDef_duplicate (
     CORBA_UnionDef_ptr p
@@ -8280,7 +7782,7 @@
     return CORBA_UnionDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_UnionDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/UnionDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_UnionDef::_nil ());
       if (is_a == 0)
         return CORBA_UnionDef::_nil ();
@@ -8348,12 +7850,12 @@
 CORBA::Boolean CORBA_UnionDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_UnionDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_TypedefDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Container:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Contained:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IDLType:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/UnionDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/TypedefDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Container:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Contained:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IDLType:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -8438,7 +7940,7 @@
 
 const char* CORBA_UnionDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_UnionDef:1.0";
+  return "IDL:omg.org/CORBA/UnionDef:1.0";
 }
 
 CORBA::TypeCode_ptr CORBA_UnionDef::discriminator_type (
@@ -8530,36 +8032,6 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_UnionDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  31,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f556e), 
-  ACE_NTOHL (0x696f6e44), 
-  ACE_NTOHL (0x65663a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_UnionDef:1.0
-  15,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f556e), 
-  ACE_NTOHL (0x696f6e44), 
-  ACE_NTOHL (0x65660000),  // name = CORBA_UnionDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_UnionDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_UnionDef),
-    (char *) &_oc_CORBA_UnionDef,
-    0,
-    sizeof (CORBA_UnionDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_UnionDef =
-  &_tc_TAO_tc_CORBA_UnionDef;
-
 CORBA_EnumDef_ptr
 tao_CORBA_EnumDef_duplicate (
     CORBA_EnumDef_ptr p
@@ -9391,7 +8863,7 @@
     return CORBA_EnumDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_EnumDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/EnumDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_EnumDef::_nil ());
       if (is_a == 0)
         return CORBA_EnumDef::_nil ();
@@ -9459,11 +8931,11 @@
 CORBA::Boolean CORBA_EnumDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_EnumDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_TypedefDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Contained:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IDLType:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/EnumDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/TypedefDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Contained:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IDLType:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -9536,7 +9008,7 @@
 
 const char* CORBA_EnumDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_EnumDef:1.0";
+  return "IDL:omg.org/CORBA/EnumDef:1.0";
 }
 
 CORBA_EnumMemberSeq * CORBA_EnumDef::members (
@@ -9575,36 +9047,6 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_EnumDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  30,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f456e), 
-  ACE_NTOHL (0x756d4465), 
-  ACE_NTOHL (0x663a312e), 
-  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_EnumDef:1.0
-  14,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f456e), 
-  ACE_NTOHL (0x756d4465), 
-  ACE_NTOHL (0x66000000),  // name = CORBA_EnumDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_EnumDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_EnumDef),
-    (char *) &_oc_CORBA_EnumDef,
-    0,
-    sizeof (CORBA_EnumDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_EnumDef =
-  &_tc_TAO_tc_CORBA_EnumDef;
-
 CORBA_AliasDef_ptr
 tao_CORBA_AliasDef_duplicate (
     CORBA_AliasDef_ptr p
@@ -10435,7 +9877,7 @@
     return CORBA_AliasDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_AliasDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/AliasDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_AliasDef::_nil ());
       if (is_a == 0)
         return CORBA_AliasDef::_nil ();
@@ -10503,11 +9945,11 @@
 CORBA::Boolean CORBA_AliasDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_AliasDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_TypedefDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Contained:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IDLType:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/AliasDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/TypedefDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Contained:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IDLType:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -10580,7 +10022,7 @@
 
 const char* CORBA_AliasDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_AliasDef:1.0";
+  return "IDL:omg.org/CORBA/AliasDef:1.0";
 }
 
 CORBA_IDLType_ptr CORBA_AliasDef::original_type_def (
@@ -10619,36 +10061,6 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_AliasDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  31,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f416c), 
-  ACE_NTOHL (0x69617344), 
-  ACE_NTOHL (0x65663a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_AliasDef:1.0
-  15,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f416c), 
-  ACE_NTOHL (0x69617344), 
-  ACE_NTOHL (0x65660000),  // name = CORBA_AliasDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_AliasDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_AliasDef),
-    (char *) &_oc_CORBA_AliasDef,
-    0,
-    sizeof (CORBA_AliasDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_AliasDef =
-  &_tc_TAO_tc_CORBA_AliasDef;
-
 CORBA_NativeDef_ptr
 tao_CORBA_NativeDef_duplicate (
     CORBA_NativeDef_ptr p
@@ -10981,7 +10393,7 @@
     return CORBA_NativeDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_NativeDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/NativeDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_NativeDef::_nil ());
       if (is_a == 0)
         return CORBA_NativeDef::_nil ();
@@ -11049,11 +10461,11 @@
 CORBA::Boolean CORBA_NativeDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_NativeDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_TypedefDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Contained:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IDLType:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/NativeDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/TypedefDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Contained:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IDLType:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -11126,39 +10538,9 @@
 
 const char* CORBA_NativeDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_NativeDef:1.0";
+  return "IDL:omg.org/CORBA/NativeDef:1.0";
 }
 
-static const CORBA::Long _oc_CORBA_NativeDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  32,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4e61), 
-  ACE_NTOHL (0x74697665), 
-  ACE_NTOHL (0x4465663a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_NativeDef:1.0
-  16,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4e61), 
-  ACE_NTOHL (0x74697665), 
-  ACE_NTOHL (0x44656600),  // name = CORBA_NativeDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_NativeDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_NativeDef),
-    (char *) &_oc_CORBA_NativeDef,
-    0,
-    sizeof (CORBA_NativeDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_NativeDef =
-  &_tc_TAO_tc_CORBA_NativeDef;
-
 CORBA_PrimitiveDef_ptr
 tao_CORBA_PrimitiveDef_duplicate (
     CORBA_PrimitiveDef_ptr p
@@ -11742,7 +11124,7 @@
     return CORBA_PrimitiveDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_PrimitiveDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/PrimitiveDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_PrimitiveDef::_nil ());
       if (is_a == 0)
         return CORBA_PrimitiveDef::_nil ();
@@ -11810,9 +11192,9 @@
 CORBA::Boolean CORBA_PrimitiveDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_PrimitiveDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IDLType:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/PrimitiveDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IDLType:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -11861,7 +11243,7 @@
 
 const char* CORBA_PrimitiveDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_PrimitiveDef:1.0";
+  return "IDL:omg.org/CORBA/PrimitiveDef:1.0";
 }
 
 CORBA::PrimitiveKind CORBA_PrimitiveDef::kind (
@@ -11881,38 +11263,6 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_PrimitiveDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  35,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5072), 
-  ACE_NTOHL (0x696d6974), 
-  ACE_NTOHL (0x69766544), 
-  ACE_NTOHL (0x65663a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_PrimitiveDef:1.0
-  19,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5072), 
-  ACE_NTOHL (0x696d6974), 
-  ACE_NTOHL (0x69766544), 
-  ACE_NTOHL (0x65660000),  // name = CORBA_PrimitiveDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_PrimitiveDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_PrimitiveDef),
-    (char *) &_oc_CORBA_PrimitiveDef,
-    0,
-    sizeof (CORBA_PrimitiveDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_PrimitiveDef =
-  &_tc_TAO_tc_CORBA_PrimitiveDef;
-
 CORBA_StringDef_ptr
 tao_CORBA_StringDef_duplicate (
     CORBA_StringDef_ptr p
@@ -12740,7 +12090,7 @@
     return CORBA_StringDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_StringDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/StringDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_StringDef::_nil ());
       if (is_a == 0)
         return CORBA_StringDef::_nil ();
@@ -12808,9 +12158,9 @@
 CORBA::Boolean CORBA_StringDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_StringDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IDLType:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/StringDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IDLType:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -12859,7 +12209,7 @@
 
 const char* CORBA_StringDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_StringDef:1.0";
+  return "IDL:omg.org/CORBA/StringDef:1.0";
 }
 
 CORBA::ULong CORBA_StringDef::bound (
@@ -12898,36 +12248,6 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_StringDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  32,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5374), 
-  ACE_NTOHL (0x72696e67), 
-  ACE_NTOHL (0x4465663a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_StringDef:1.0
-  16,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5374), 
-  ACE_NTOHL (0x72696e67), 
-  ACE_NTOHL (0x44656600),  // name = CORBA_StringDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_StringDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_StringDef),
-    (char *) &_oc_CORBA_StringDef,
-    0,
-    sizeof (CORBA_StringDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_StringDef =
-  &_tc_TAO_tc_CORBA_StringDef;
-
 CORBA_WstringDef_ptr
 tao_CORBA_WstringDef_duplicate (
     CORBA_WstringDef_ptr p
@@ -13755,7 +13075,7 @@
     return CORBA_WstringDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_WstringDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/WstringDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_WstringDef::_nil ());
       if (is_a == 0)
         return CORBA_WstringDef::_nil ();
@@ -13823,9 +13143,9 @@
 CORBA::Boolean CORBA_WstringDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_WstringDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IDLType:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/WstringDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IDLType:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -13874,7 +13194,7 @@
 
 const char* CORBA_WstringDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_WstringDef:1.0";
+  return "IDL:omg.org/CORBA/WstringDef:1.0";
 }
 
 CORBA::ULong CORBA_WstringDef::bound (
@@ -13913,38 +13233,6 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_WstringDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  33,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5773), 
-  ACE_NTOHL (0x7472696e), 
-  ACE_NTOHL (0x67446566), 
-  ACE_NTOHL (0x3a312e30), 
-  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA_WstringDef:1.0
-  17,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5773), 
-  ACE_NTOHL (0x7472696e), 
-  ACE_NTOHL (0x67446566), 
-  ACE_NTOHL (0x0),  // name = CORBA_WstringDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_WstringDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_WstringDef),
-    (char *) &_oc_CORBA_WstringDef,
-    0,
-    sizeof (CORBA_WstringDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_WstringDef =
-  &_tc_TAO_tc_CORBA_WstringDef;
-
 CORBA_SequenceDef_ptr
 tao_CORBA_SequenceDef_duplicate (
     CORBA_SequenceDef_ptr p
@@ -15523,7 +14811,7 @@
     return CORBA_SequenceDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_SequenceDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/SequenceDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_SequenceDef::_nil ());
       if (is_a == 0)
         return CORBA_SequenceDef::_nil ();
@@ -15591,9 +14879,9 @@
 CORBA::Boolean CORBA_SequenceDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_SequenceDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IDLType:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/SequenceDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IDLType:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -15642,7 +14930,7 @@
 
 const char* CORBA_SequenceDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_SequenceDef:1.0";
+  return "IDL:omg.org/CORBA/SequenceDef:1.0";
 }
 
 CORBA::ULong CORBA_SequenceDef::bound (
@@ -15734,38 +15022,6 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_SequenceDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  34,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5365), 
-  ACE_NTOHL (0x7175656e), 
-  ACE_NTOHL (0x63654465), 
-  ACE_NTOHL (0x663a312e), 
-  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_SequenceDef:1.0
-  18,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5365), 
-  ACE_NTOHL (0x7175656e), 
-  ACE_NTOHL (0x63654465), 
-  ACE_NTOHL (0x66000000),  // name = CORBA_SequenceDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_SequenceDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_SequenceDef),
-    (char *) &_oc_CORBA_SequenceDef,
-    0,
-    sizeof (CORBA_SequenceDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_SequenceDef =
-  &_tc_TAO_tc_CORBA_SequenceDef;
-
 CORBA_ArrayDef_ptr
 tao_CORBA_ArrayDef_duplicate (
     CORBA_ArrayDef_ptr p
@@ -17344,7 +16600,7 @@
     return CORBA_ArrayDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_ArrayDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/ArrayDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_ArrayDef::_nil ());
       if (is_a == 0)
         return CORBA_ArrayDef::_nil ();
@@ -17412,9 +16668,9 @@
 CORBA::Boolean CORBA_ArrayDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_ArrayDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IDLType:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/ArrayDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IDLType:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -17463,7 +16719,7 @@
 
 const char* CORBA_ArrayDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_ArrayDef:1.0";
+  return "IDL:omg.org/CORBA/ArrayDef:1.0";
 }
 
 CORBA::ULong CORBA_ArrayDef::length (
@@ -17555,36 +16811,6 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_ArrayDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  31,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4172), 
-  ACE_NTOHL (0x72617944), 
-  ACE_NTOHL (0x65663a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ArrayDef:1.0
-  15,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4172), 
-  ACE_NTOHL (0x72617944), 
-  ACE_NTOHL (0x65660000),  // name = CORBA_ArrayDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ArrayDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_ArrayDef),
-    (char *) &_oc_CORBA_ArrayDef,
-    0,
-    sizeof (CORBA_ArrayDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_ArrayDef =
-  &_tc_TAO_tc_CORBA_ArrayDef;
-
 CORBA_ExceptionDef_ptr
 tao_CORBA_ExceptionDef_duplicate (
     CORBA_ExceptionDef_ptr p
@@ -18671,7 +17897,7 @@
     return CORBA_ExceptionDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_ExceptionDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/ExceptionDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_ExceptionDef::_nil ());
       if (is_a == 0)
         return CORBA_ExceptionDef::_nil ();
@@ -18739,10 +17965,10 @@
 CORBA::Boolean CORBA_ExceptionDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_ExceptionDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Contained:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Container:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/ExceptionDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Contained:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Container:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -18803,7 +18029,7 @@
 
 const char* CORBA_ExceptionDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_ExceptionDef:1.0";
+  return "IDL:omg.org/CORBA/ExceptionDef:1.0";
 }
 
 CORBA::TypeCode_ptr CORBA_ExceptionDef::type (
@@ -18859,115 +18085,21 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_ExceptionDef[] =
+void CORBA_ExceptionDescription::_tao_any_destructor (void *x)
 {
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  35,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4578), 
-  ACE_NTOHL (0x63657074), 
-  ACE_NTOHL (0x696f6e44), 
-  ACE_NTOHL (0x65663a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ExceptionDef:1.0
-  19,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4578), 
-  ACE_NTOHL (0x63657074), 
-  ACE_NTOHL (0x696f6e44), 
-  ACE_NTOHL (0x65660000),  // name = CORBA_ExceptionDef
-};
+  CORBA_ExceptionDescription *tmp = ACE_static_cast (CORBA_ExceptionDescription*,x);
+  delete tmp;
+}
 
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ExceptionDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_ExceptionDef),
-    (char *) &_oc_CORBA_ExceptionDef,
-    0,
-    sizeof (CORBA_ExceptionDef)
-  );
 
-CORBA::TypeCode_ptr _tc_CORBA_ExceptionDef =
-  &_tc_TAO_tc_CORBA_ExceptionDef;
+#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
+  
+#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_CORBA_EXCEPTIONDEFSEQ_CS_)
+#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_CORBA_EXCEPTIONDEFSEQ_CS_
 
-static const CORBA::Long _oc_CORBA_ExceptionDescription[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  43,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4578), 
-  ACE_NTOHL (0x63657074), 
-  ACE_NTOHL (0x696f6e44), 
-  ACE_NTOHL (0x65736372), 
-  ACE_NTOHL (0x69707469), 
-  ACE_NTOHL (0x6f6e3a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ExceptionDescription:1.0
-  27,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4578), 
-  ACE_NTOHL (0x63657074), 
-  ACE_NTOHL (0x696f6e44), 
-  ACE_NTOHL (0x65736372), 
-  ACE_NTOHL (0x69707469), 
-  ACE_NTOHL (0x6f6e0000),  // name = CORBA_ExceptionDescription
-  5, // member count
-  5,
-  ACE_NTOHL (0x6e616d65), 
-  ACE_NTOHL (0x0),  // name = name
-  CORBA::tk_string, 
-  0U, // string length
-  3,
-  ACE_NTOHL (0x69640000),  // name = id
-  CORBA::tk_string, 
-  0U, // string length
-  11,
-  ACE_NTOHL (0x64656669), 
-  ACE_NTOHL (0x6e65645f), 
-  ACE_NTOHL (0x696e0000),  // name = defined_in
-  CORBA::tk_string, 
-  0U, // string length
-  8,
-  ACE_NTOHL (0x76657273), 
-  ACE_NTOHL (0x696f6e00),  // name = version
-  CORBA::tk_string, 
-  0U, // string length
-  5,
-  ACE_NTOHL (0x74797065), 
-  ACE_NTOHL (0x0),  // name = type
-  CORBA::tk_TypeCode,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ExceptionDescription (
-    CORBA::tk_struct,
-    sizeof (_oc_CORBA_ExceptionDescription),
-    (char *) &_oc_CORBA_ExceptionDescription,
-    0,
-    sizeof (CORBA_ExceptionDescription)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_ExceptionDescription =
-  &_tc_TAO_tc_CORBA_ExceptionDescription;
-
-void CORBA_ExceptionDescription::_tao_any_destructor (void *x)
-{
-  CORBA_ExceptionDescription *tmp = ACE_static_cast (CORBA_ExceptionDescription*,x);
-  delete tmp;
-}
-
-
-#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  
-#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_CORBA_EXCEPTIONDEFSEQ_CS_)
-#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_CORBA_EXCEPTIONDEFSEQ_CS_
-
-  // The Base_Sequence functions, please see tao/Sequence.h
-  void
-  _TAO_Unbounded_Object_Sequence_CORBA_ExceptionDefSeq::_allocate_buffer (CORBA::ULong length)
+  // The Base_Sequence functions, please see tao/Sequence.h
+  void
+  _TAO_Unbounded_Object_Sequence_CORBA_ExceptionDefSeq::_allocate_buffer (CORBA::ULong length)
   {
     CORBA_ExceptionDef **tmp = 0;
     tmp = _TAO_Unbounded_Object_Sequence_CORBA_ExceptionDefSeq::allocbuf (length);
@@ -19100,66 +18232,6 @@
 
 #endif /* end #if !defined */
 
-static const CORBA::Long _oc_CORBA_ExceptionDefSeq[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  38,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4578), 
-  ACE_NTOHL (0x63657074), 
-  ACE_NTOHL (0x696f6e44), 
-  ACE_NTOHL (0x65665365), 
-  ACE_NTOHL (0x713a312e), 
-  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_ExceptionDefSeq:1.0
-  22,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4578), 
-  ACE_NTOHL (0x63657074), 
-  ACE_NTOHL (0x696f6e44), 
-  ACE_NTOHL (0x65665365), 
-  ACE_NTOHL (0x71000000),  // name = CORBA_ExceptionDefSeq
-  CORBA::tk_sequence, // typecode kind
-  84, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    CORBA::tk_objref, // typecode kind
-    68, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      35,
-      ACE_NTOHL (0x49444c3a), 
-      ACE_NTOHL (0x6f6d672e), 
-      ACE_NTOHL (0x6f72672f), 
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f4578), 
-      ACE_NTOHL (0x63657074), 
-      ACE_NTOHL (0x696f6e44), 
-      ACE_NTOHL (0x65663a31), 
-      ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ExceptionDef:1.0
-      19,
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f4578), 
-      ACE_NTOHL (0x63657074), 
-      ACE_NTOHL (0x696f6e44), 
-      ACE_NTOHL (0x65660000),  // name = CORBA_ExceptionDef
-
-    0U,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ExceptionDefSeq (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_ExceptionDefSeq),
-    (char *) &_oc_CORBA_ExceptionDefSeq,
-    0,
-    sizeof (CORBA_ExceptionDefSeq)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_ExceptionDefSeq =
-  &_tc_TAO_tc_CORBA_ExceptionDefSeq;
-
-
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
 #if !defined (__TAO_UNBOUNDED_SEQUENCE_CORBA_EXCDESCRIPTIONSEQ_CS_)
@@ -19255,95 +18327,6 @@
 
 #endif /* end #if !defined */
 
-static const CORBA::Long _oc_CORBA_ExcDescriptionSeq[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  40,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4578), 
-  ACE_NTOHL (0x63446573), 
-  ACE_NTOHL (0x63726970), 
-  ACE_NTOHL (0x74696f6e), 
-  ACE_NTOHL (0x5365713a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_ExcDescriptionSeq:1.0
-  24,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4578), 
-  ACE_NTOHL (0x63446573), 
-  ACE_NTOHL (0x63726970), 
-  ACE_NTOHL (0x74696f6e), 
-  ACE_NTOHL (0x53657100),  // name = CORBA_ExcDescriptionSeq
-  CORBA::tk_sequence, // typecode kind
-  200, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    CORBA::tk_struct, // typecode kind
-    184, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      43,
-      ACE_NTOHL (0x49444c3a), 
-      ACE_NTOHL (0x6f6d672e), 
-      ACE_NTOHL (0x6f72672f), 
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f4578), 
-      ACE_NTOHL (0x63657074), 
-      ACE_NTOHL (0x696f6e44), 
-      ACE_NTOHL (0x65736372), 
-      ACE_NTOHL (0x69707469), 
-      ACE_NTOHL (0x6f6e3a31), 
-      ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ExceptionDescription:1.0
-      27,
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f4578), 
-      ACE_NTOHL (0x63657074), 
-      ACE_NTOHL (0x696f6e44), 
-      ACE_NTOHL (0x65736372), 
-      ACE_NTOHL (0x69707469), 
-      ACE_NTOHL (0x6f6e0000),  // name = CORBA_ExceptionDescription
-      5, // member count
-      5,
-      ACE_NTOHL (0x6e616d65), 
-      ACE_NTOHL (0x0),  // name = name
-      CORBA::tk_string, 
-      0U, // string length
-      3,
-      ACE_NTOHL (0x69640000),  // name = id
-      CORBA::tk_string, 
-      0U, // string length
-      11,
-      ACE_NTOHL (0x64656669), 
-      ACE_NTOHL (0x6e65645f), 
-      ACE_NTOHL (0x696e0000),  // name = defined_in
-      CORBA::tk_string, 
-      0U, // string length
-      8,
-      ACE_NTOHL (0x76657273), 
-      ACE_NTOHL (0x696f6e00),  // name = version
-      CORBA::tk_string, 
-      0U, // string length
-      5,
-      ACE_NTOHL (0x74797065), 
-      ACE_NTOHL (0x0),  // name = type
-      CORBA::tk_TypeCode,
-
-
-    0U,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ExcDescriptionSeq (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_ExcDescriptionSeq),
-    (char *) &_oc_CORBA_ExcDescriptionSeq,
-    0,
-    sizeof (CORBA_ExcDescriptionSeq)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_ExcDescriptionSeq =
-  &_tc_TAO_tc_CORBA_ExcDescriptionSeq;
-
 CORBA_AttributeDef_ptr
 tao_CORBA_AttributeDef_duplicate (
     CORBA_AttributeDef_ptr p
@@ -20923,7 +19906,7 @@
     return CORBA_AttributeDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_AttributeDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/AttributeDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_AttributeDef::_nil ());
       if (is_a == 0)
         return CORBA_AttributeDef::_nil ();
@@ -20991,9 +19974,9 @@
 CORBA::Boolean CORBA_AttributeDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_AttributeDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Contained:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/AttributeDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Contained:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -21042,7 +20025,7 @@
 
 const char* CORBA_AttributeDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_AttributeDef:1.0";
+  return "IDL:omg.org/CORBA/AttributeDef:1.0";
 }
 
 CORBA::TypeCode_ptr CORBA_AttributeDef::type (
@@ -21134,243 +20117,13 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_AttributeDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  35,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4174), 
-  ACE_NTOHL (0x74726962), 
-  ACE_NTOHL (0x75746544), 
-  ACE_NTOHL (0x65663a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_AttributeDef:1.0
-  19,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4174), 
-  ACE_NTOHL (0x74726962), 
-  ACE_NTOHL (0x75746544), 
-  ACE_NTOHL (0x65660000),  // name = CORBA_AttributeDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_AttributeDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_AttributeDef),
-    (char *) &_oc_CORBA_AttributeDef,
-    0,
-    sizeof (CORBA_AttributeDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_AttributeDef =
-  &_tc_TAO_tc_CORBA_AttributeDef;
-
-static const CORBA::Long _oc_CORBA_AttributeDescription[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  43,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4174), 
-  ACE_NTOHL (0x74726962), 
-  ACE_NTOHL (0x75746544), 
-  ACE_NTOHL (0x65736372), 
-  ACE_NTOHL (0x69707469), 
-  ACE_NTOHL (0x6f6e3a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_AttributeDescription:1.0
-  27,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4174), 
-  ACE_NTOHL (0x74726962), 
-  ACE_NTOHL (0x75746544), 
-  ACE_NTOHL (0x65736372), 
-  ACE_NTOHL (0x69707469), 
-  ACE_NTOHL (0x6f6e0000),  // name = CORBA_AttributeDescription
-  6, // member count
-  5,
-  ACE_NTOHL (0x6e616d65), 
-  ACE_NTOHL (0x0),  // name = name
-  CORBA::tk_string, 
-  0U, // string length
-  3,
-  ACE_NTOHL (0x69640000),  // name = id
-  CORBA::tk_string, 
-  0U, // string length
-  11,
-  ACE_NTOHL (0x64656669), 
-  ACE_NTOHL (0x6e65645f), 
-  ACE_NTOHL (0x696e0000),  // name = defined_in
-  CORBA::tk_string, 
-  0U, // string length
-  8,
-  ACE_NTOHL (0x76657273), 
-  ACE_NTOHL (0x696f6e00),  // name = version
-  CORBA::tk_string, 
-  0U, // string length
-  5,
-  ACE_NTOHL (0x74797065), 
-  ACE_NTOHL (0x0),  // name = type
-  CORBA::tk_TypeCode,
-
-  5,
-  ACE_NTOHL (0x6d6f6465), 
-  ACE_NTOHL (0x0),  // name = mode
-  CORBA::tk_enum, // typecode kind
-  104, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    36,
-    ACE_NTOHL (0x49444c3a), 
-    ACE_NTOHL (0x6f6d672e), 
-    ACE_NTOHL (0x6f72672f), 
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x412f4174), 
-    ACE_NTOHL (0x74726962), 
-    ACE_NTOHL (0x7574654d), 
-    ACE_NTOHL (0x6f64653a), 
-    ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/AttributeMode:1.0
-    14,
-    ACE_NTOHL (0x41747472), 
-    ACE_NTOHL (0x69627574), 
-    ACE_NTOHL (0x654d6f64), 
-    ACE_NTOHL (0x65000000),  // name = AttributeMode
-    2, // member count
-    12,
-    ACE_NTOHL (0x41545452), 
-    ACE_NTOHL (0x5f4e4f52), 
-    ACE_NTOHL (0x4d414c00),  // name = ATTR_NORMAL
-    14,
-    ACE_NTOHL (0x41545452), 
-    ACE_NTOHL (0x5f524541), 
-    ACE_NTOHL (0x444f4e4c), 
-    ACE_NTOHL (0x59000000),  // name = ATTR_READONLY
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_AttributeDescription (
-    CORBA::tk_struct,
-    sizeof (_oc_CORBA_AttributeDescription),
-    (char *) &_oc_CORBA_AttributeDescription,
-    0,
-    sizeof (CORBA_AttributeDescription)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_AttributeDescription =
-  &_tc_TAO_tc_CORBA_AttributeDescription;
-
 void CORBA_AttributeDescription::_tao_any_destructor (void *x)
 {
   CORBA_AttributeDescription *tmp = ACE_static_cast (CORBA_AttributeDescription*,x);
   delete tmp;
 }
 
-static const CORBA::Long _oc_CORBA_ParameterDescription[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  43,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5061), 
-  ACE_NTOHL (0x72616d65), 
-  ACE_NTOHL (0x74657244), 
-  ACE_NTOHL (0x65736372), 
-  ACE_NTOHL (0x69707469), 
-  ACE_NTOHL (0x6f6e3a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ParameterDescription:1.0
-  27,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5061), 
-  ACE_NTOHL (0x72616d65), 
-  ACE_NTOHL (0x74657244), 
-  ACE_NTOHL (0x65736372), 
-  ACE_NTOHL (0x69707469), 
-  ACE_NTOHL (0x6f6e0000),  // name = CORBA_ParameterDescription
-  4, // member count
-  5,
-  ACE_NTOHL (0x6e616d65), 
-  ACE_NTOHL (0x0),  // name = name
-  CORBA::tk_string, 
-  0U, // string length
-  5,
-  ACE_NTOHL (0x74797065), 
-  ACE_NTOHL (0x0),  // name = type
-  CORBA::tk_TypeCode,
-
-  9,
-  ACE_NTOHL (0x74797065), 
-  ACE_NTOHL (0x5f646566), 
-  ACE_NTOHL (0x0),  // name = type_def
-  CORBA::tk_objref, // typecode kind
-  60, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    30,
-    ACE_NTOHL (0x49444c3a), 
-    ACE_NTOHL (0x6f6d672e), 
-    ACE_NTOHL (0x6f72672f), 
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f4944), 
-    ACE_NTOHL (0x4c547970), 
-    ACE_NTOHL (0x653a312e), 
-    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_IDLType:1.0
-    14,
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f4944), 
-    ACE_NTOHL (0x4c547970), 
-    ACE_NTOHL (0x65000000),  // name = CORBA_IDLType
-
-  5,
-  ACE_NTOHL (0x6d6f6465), 
-  ACE_NTOHL (0x0),  // name = mode
-  CORBA::tk_enum, // typecode kind
-  116, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    36,
-    ACE_NTOHL (0x49444c3a), 
-    ACE_NTOHL (0x6f6d672e), 
-    ACE_NTOHL (0x6f72672f), 
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x412f5061), 
-    ACE_NTOHL (0x72616d65), 
-    ACE_NTOHL (0x7465724d), 
-    ACE_NTOHL (0x6f64653a), 
-    ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ParameterMode:1.0
-    14,
-    ACE_NTOHL (0x50617261), 
-    ACE_NTOHL (0x6d657465), 
-    ACE_NTOHL (0x724d6f64), 
-    ACE_NTOHL (0x65000000),  // name = ParameterMode
-    3, // member count
-    9,
-    ACE_NTOHL (0x50415241), 
-    ACE_NTOHL (0x4d5f494e), 
-    ACE_NTOHL (0x0),  // name = PARAM_IN
-    10,
-    ACE_NTOHL (0x50415241), 
-    ACE_NTOHL (0x4d5f4f55), 
-    ACE_NTOHL (0x54000000),  // name = PARAM_OUT
-    12,
-    ACE_NTOHL (0x50415241), 
-    ACE_NTOHL (0x4d5f494e), 
-    ACE_NTOHL (0x4f555400),  // name = PARAM_INOUT
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ParameterDescription (
-    CORBA::tk_struct,
-    sizeof (_oc_CORBA_ParameterDescription),
-    (char *) &_oc_CORBA_ParameterDescription,
-    0,
-    sizeof (CORBA_ParameterDescription)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_ParameterDescription =
-  &_tc_TAO_tc_CORBA_ParameterDescription;
-
-void CORBA_ParameterDescription::_tao_any_destructor (void *x)
+void CORBA_ParameterDescription::_tao_any_destructor (void *x)
 {
   CORBA_ParameterDescription *tmp = ACE_static_cast (CORBA_ParameterDescription*,x);
   delete tmp;
@@ -21472,138 +20225,6 @@
 
 #endif /* end #if !defined */
 
-static const CORBA::Long _oc_CORBA_ParDescriptionSeq[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  40,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5061), 
-  ACE_NTOHL (0x72446573), 
-  ACE_NTOHL (0x63726970), 
-  ACE_NTOHL (0x74696f6e), 
-  ACE_NTOHL (0x5365713a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_ParDescriptionSeq:1.0
-  24,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5061), 
-  ACE_NTOHL (0x72446573), 
-  ACE_NTOHL (0x63726970), 
-  ACE_NTOHL (0x74696f6e), 
-  ACE_NTOHL (0x53657100),  // name = CORBA_ParDescriptionSeq
-  CORBA::tk_sequence, // typecode kind
-  360, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    CORBA::tk_struct, // typecode kind
-    344, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      43,
-      ACE_NTOHL (0x49444c3a), 
-      ACE_NTOHL (0x6f6d672e), 
-      ACE_NTOHL (0x6f72672f), 
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f5061), 
-      ACE_NTOHL (0x72616d65), 
-      ACE_NTOHL (0x74657244), 
-      ACE_NTOHL (0x65736372), 
-      ACE_NTOHL (0x69707469), 
-      ACE_NTOHL (0x6f6e3a31), 
-      ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ParameterDescription:1.0
-      27,
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f5061), 
-      ACE_NTOHL (0x72616d65), 
-      ACE_NTOHL (0x74657244), 
-      ACE_NTOHL (0x65736372), 
-      ACE_NTOHL (0x69707469), 
-      ACE_NTOHL (0x6f6e0000),  // name = CORBA_ParameterDescription
-      4, // member count
-      5,
-      ACE_NTOHL (0x6e616d65), 
-      ACE_NTOHL (0x0),  // name = name
-      CORBA::tk_string, 
-      0U, // string length
-      5,
-      ACE_NTOHL (0x74797065), 
-      ACE_NTOHL (0x0),  // name = type
-      CORBA::tk_TypeCode,
-
-      9,
-      ACE_NTOHL (0x74797065), 
-      ACE_NTOHL (0x5f646566), 
-      ACE_NTOHL (0x0),  // name = type_def
-      CORBA::tk_objref, // typecode kind
-      60, // encapsulation length
-        TAO_ENCAP_BYTE_ORDER, // byte order
-        30,
-        ACE_NTOHL (0x49444c3a), 
-        ACE_NTOHL (0x6f6d672e), 
-        ACE_NTOHL (0x6f72672f), 
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4944), 
-        ACE_NTOHL (0x4c547970), 
-        ACE_NTOHL (0x653a312e), 
-        ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_IDLType:1.0
-        14,
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4944), 
-        ACE_NTOHL (0x4c547970), 
-        ACE_NTOHL (0x65000000),  // name = CORBA_IDLType
-
-      5,
-      ACE_NTOHL (0x6d6f6465), 
-      ACE_NTOHL (0x0),  // name = mode
-      CORBA::tk_enum, // typecode kind
-      116, // encapsulation length
-        TAO_ENCAP_BYTE_ORDER, // byte order
-        36,
-        ACE_NTOHL (0x49444c3a), 
-        ACE_NTOHL (0x6f6d672e), 
-        ACE_NTOHL (0x6f72672f), 
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x412f5061), 
-        ACE_NTOHL (0x72616d65), 
-        ACE_NTOHL (0x7465724d), 
-        ACE_NTOHL (0x6f64653a), 
-        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ParameterMode:1.0
-        14,
-        ACE_NTOHL (0x50617261), 
-        ACE_NTOHL (0x6d657465), 
-        ACE_NTOHL (0x724d6f64), 
-        ACE_NTOHL (0x65000000),  // name = ParameterMode
-        3, // member count
-        9,
-        ACE_NTOHL (0x50415241), 
-        ACE_NTOHL (0x4d5f494e), 
-        ACE_NTOHL (0x0),  // name = PARAM_IN
-        10,
-        ACE_NTOHL (0x50415241), 
-        ACE_NTOHL (0x4d5f4f55), 
-        ACE_NTOHL (0x54000000),  // name = PARAM_OUT
-        12,
-        ACE_NTOHL (0x50415241), 
-        ACE_NTOHL (0x4d5f494e), 
-        ACE_NTOHL (0x4f555400),  // name = PARAM_INOUT
-
-
-    0U,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ParDescriptionSeq (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_ParDescriptionSeq),
-    (char *) &_oc_CORBA_ParDescriptionSeq,
-    0,
-    sizeof (CORBA_ParDescriptionSeq)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_ParDescriptionSeq =
-  &_tc_TAO_tc_CORBA_ParDescriptionSeq;
-
-
 #if !defined (_CORBA_CONTEXTIDSEQ_CS_)
 #define _CORBA_CONTEXTIDSEQ_CS_
 
@@ -21651,45 +20272,6 @@
 
 #endif /* end #if !defined */
 
-static const CORBA::Long _oc_CORBA_ContextIdSeq[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  35,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f436f), 
-  ACE_NTOHL (0x6e746578), 
-  ACE_NTOHL (0x74496453), 
-  ACE_NTOHL (0x65713a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ContextIdSeq:1.0
-  19,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f436f), 
-  ACE_NTOHL (0x6e746578), 
-  ACE_NTOHL (0x74496453), 
-  ACE_NTOHL (0x65710000),  // name = CORBA_ContextIdSeq
-  CORBA::tk_sequence, // typecode kind
-  16, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    CORBA::tk_string, 
-    0U, // string length
-    0U,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ContextIdSeq (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_ContextIdSeq),
-    (char *) &_oc_CORBA_ContextIdSeq,
-    0,
-    sizeof (CORBA_ContextIdSeq)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_ContextIdSeq =
-  &_tc_TAO_tc_CORBA_ContextIdSeq;
-
 CORBA_OperationDef_ptr
 tao_CORBA_OperationDef_duplicate (
     CORBA_OperationDef_ptr p
@@ -24766,7 +23348,7 @@
     return CORBA_OperationDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_OperationDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/OperationDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_OperationDef::_nil ());
       if (is_a == 0)
         return CORBA_OperationDef::_nil ();
@@ -24834,9 +23416,9 @@
 CORBA::Boolean CORBA_OperationDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_OperationDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Contained:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/OperationDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Contained:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -24885,7 +23467,7 @@
 
 const char* CORBA_OperationDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_OperationDef:1.0";
+  return "IDL:omg.org/CORBA/OperationDef:1.0";
 }
 
 CORBA::TypeCode_ptr CORBA_OperationDef::result (
@@ -25085,951 +23667,98 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_OperationDef[] =
+void CORBA_OperationDescription::_tao_any_destructor (void *x)
 {
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  35,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4f70), 
-  ACE_NTOHL (0x65726174), 
-  ACE_NTOHL (0x696f6e44), 
-  ACE_NTOHL (0x65663a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_OperationDef:1.0
-  19,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4f70), 
-  ACE_NTOHL (0x65726174), 
-  ACE_NTOHL (0x696f6e44), 
-  ACE_NTOHL (0x65660000),  // name = CORBA_OperationDef
-};
+  CORBA_OperationDescription *tmp = ACE_static_cast (CORBA_OperationDescription*,x);
+  delete tmp;
+}
 
-static CORBA::TypeCode _tc_TAO_tc_CORBA_OperationDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_OperationDef),
-    (char *) &_oc_CORBA_OperationDef,
-    0,
-    sizeof (CORBA_OperationDef)
-  );
 
-CORBA::TypeCode_ptr _tc_CORBA_OperationDef =
-  &_tc_TAO_tc_CORBA_OperationDef;
+#if !defined (_CORBA_REPOSITORYIDSEQ_CS_)
+#define _CORBA_REPOSITORYIDSEQ_CS_
 
-static const CORBA::Long _oc_CORBA_OperationDescription[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  43,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4f70), 
-  ACE_NTOHL (0x65726174), 
-  ACE_NTOHL (0x696f6e44), 
-  ACE_NTOHL (0x65736372), 
-  ACE_NTOHL (0x69707469), 
-  ACE_NTOHL (0x6f6e3a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_OperationDescription:1.0
-  27,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4f70), 
-  ACE_NTOHL (0x65726174), 
-  ACE_NTOHL (0x696f6e44), 
-  ACE_NTOHL (0x65736372), 
-  ACE_NTOHL (0x69707469), 
-  ACE_NTOHL (0x6f6e0000),  // name = CORBA_OperationDescription
-  9, // member count
-  5,
-  ACE_NTOHL (0x6e616d65), 
-  ACE_NTOHL (0x0),  // name = name
-  CORBA::tk_string, 
-  0U, // string length
-  3,
-  ACE_NTOHL (0x69640000),  // name = id
-  CORBA::tk_string, 
-  0U, // string length
-  11,
-  ACE_NTOHL (0x64656669), 
-  ACE_NTOHL (0x6e65645f), 
-  ACE_NTOHL (0x696e0000),  // name = defined_in
-  CORBA::tk_string, 
-  0U, // string length
-  8,
-  ACE_NTOHL (0x76657273), 
-  ACE_NTOHL (0x696f6e00),  // name = version
-  CORBA::tk_string, 
-  0U, // string length
-  7,
-  ACE_NTOHL (0x72657375), 
-  ACE_NTOHL (0x6c740000),  // name = result
-  CORBA::tk_TypeCode,
-
-  5,
-  ACE_NTOHL (0x6d6f6465), 
-  ACE_NTOHL (0x0),  // name = mode
-  CORBA::tk_enum, // typecode kind
-  100, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    36,
-    ACE_NTOHL (0x49444c3a), 
-    ACE_NTOHL (0x6f6d672e), 
-    ACE_NTOHL (0x6f72672f), 
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x412f4f70), 
-    ACE_NTOHL (0x65726174), 
-    ACE_NTOHL (0x696f6e4d), 
-    ACE_NTOHL (0x6f64653a), 
-    ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/OperationMode:1.0
-    14,
-    ACE_NTOHL (0x4f706572), 
-    ACE_NTOHL (0x6174696f), 
-    ACE_NTOHL (0x6e4d6f64), 
-    ACE_NTOHL (0x65000000),  // name = OperationMode
-    2, // member count
-    10,
-    ACE_NTOHL (0x4f505f4e), 
-    ACE_NTOHL (0x4f524d41), 
-    ACE_NTOHL (0x4c000000),  // name = OP_NORMAL
-    10,
-    ACE_NTOHL (0x4f505f4f), 
-    ACE_NTOHL (0x4e455741), 
-    ACE_NTOHL (0x59000000),  // name = OP_ONEWAY
-
-  9,
-  ACE_NTOHL (0x636f6e74), 
-  ACE_NTOHL (0x65787473), 
-  ACE_NTOHL (0x0),  // name = contexts
-  CORBA::tk_alias, // typecode kind for typedefs
-  92, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    35,
-    ACE_NTOHL (0x49444c3a), 
-    ACE_NTOHL (0x6f6d672e), 
-    ACE_NTOHL (0x6f72672f), 
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f436f), 
-    ACE_NTOHL (0x6e746578), 
-    ACE_NTOHL (0x74496453), 
-    ACE_NTOHL (0x65713a31), 
-    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ContextIdSeq:1.0
-    19,
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f436f), 
-    ACE_NTOHL (0x6e746578), 
-    ACE_NTOHL (0x74496453), 
-    ACE_NTOHL (0x65710000),  // name = CORBA_ContextIdSeq
-    CORBA::tk_sequence, // typecode kind
-    16, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      CORBA::tk_string, 
-      0U, // string length
-      0U,
-
-
-  11,
-  ACE_NTOHL (0x70617261), 
-  ACE_NTOHL (0x6d657465), 
-  ACE_NTOHL (0x72730000),  // name = parameters
-  CORBA::tk_alias, // typecode kind for typedefs
-  444, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    40,
-    ACE_NTOHL (0x49444c3a), 
-    ACE_NTOHL (0x6f6d672e), 
-    ACE_NTOHL (0x6f72672f), 
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f5061), 
-    ACE_NTOHL (0x72446573), 
-    ACE_NTOHL (0x63726970), 
-    ACE_NTOHL (0x74696f6e), 
-    ACE_NTOHL (0x5365713a), 
-    ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_ParDescriptionSeq:1.0
-    24,
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f5061), 
-    ACE_NTOHL (0x72446573), 
-    ACE_NTOHL (0x63726970), 
-    ACE_NTOHL (0x74696f6e), 
-    ACE_NTOHL (0x53657100),  // name = CORBA_ParDescriptionSeq
-    CORBA::tk_sequence, // typecode kind
-    360, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      CORBA::tk_struct, // typecode kind
-      344, // encapsulation length
-        TAO_ENCAP_BYTE_ORDER, // byte order
-        43,
-        ACE_NTOHL (0x49444c3a), 
-        ACE_NTOHL (0x6f6d672e), 
-        ACE_NTOHL (0x6f72672f), 
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f5061), 
-        ACE_NTOHL (0x72616d65), 
-        ACE_NTOHL (0x74657244), 
-        ACE_NTOHL (0x65736372), 
-        ACE_NTOHL (0x69707469), 
-        ACE_NTOHL (0x6f6e3a31), 
-        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ParameterDescription:1.0
-        27,
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f5061), 
-        ACE_NTOHL (0x72616d65), 
-        ACE_NTOHL (0x74657244), 
-        ACE_NTOHL (0x65736372), 
-        ACE_NTOHL (0x69707469), 
-        ACE_NTOHL (0x6f6e0000),  // name = CORBA_ParameterDescription
-        4, // member count
-        5,
-        ACE_NTOHL (0x6e616d65), 
-        ACE_NTOHL (0x0),  // name = name
-        CORBA::tk_string, 
-        0U, // string length
-        5,
-        ACE_NTOHL (0x74797065), 
-        ACE_NTOHL (0x0),  // name = type
-        CORBA::tk_TypeCode,
-
-        9,
-        ACE_NTOHL (0x74797065), 
-        ACE_NTOHL (0x5f646566), 
-        ACE_NTOHL (0x0),  // name = type_def
-        CORBA::tk_objref, // typecode kind
-        60, // encapsulation length
-          TAO_ENCAP_BYTE_ORDER, // byte order
-          30,
-          ACE_NTOHL (0x49444c3a), 
-          ACE_NTOHL (0x6f6d672e), 
-          ACE_NTOHL (0x6f72672f), 
-          ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f4944), 
-          ACE_NTOHL (0x4c547970), 
-          ACE_NTOHL (0x653a312e), 
-          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_IDLType:1.0
-          14,
-          ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f4944), 
-          ACE_NTOHL (0x4c547970), 
-          ACE_NTOHL (0x65000000),  // name = CORBA_IDLType
-
-        5,
-        ACE_NTOHL (0x6d6f6465), 
-        ACE_NTOHL (0x0),  // name = mode
-        CORBA::tk_enum, // typecode kind
-        116, // encapsulation length
-          TAO_ENCAP_BYTE_ORDER, // byte order
-          36,
-          ACE_NTOHL (0x49444c3a), 
-          ACE_NTOHL (0x6f6d672e), 
-          ACE_NTOHL (0x6f72672f), 
-          ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x412f5061), 
-          ACE_NTOHL (0x72616d65), 
-          ACE_NTOHL (0x7465724d), 
-          ACE_NTOHL (0x6f64653a), 
-          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ParameterMode:1.0
-          14,
-          ACE_NTOHL (0x50617261), 
-          ACE_NTOHL (0x6d657465), 
-          ACE_NTOHL (0x724d6f64), 
-          ACE_NTOHL (0x65000000),  // name = ParameterMode
-          3, // member count
-          9,
-          ACE_NTOHL (0x50415241), 
-          ACE_NTOHL (0x4d5f494e), 
-          ACE_NTOHL (0x0),  // name = PARAM_IN
-          10,
-          ACE_NTOHL (0x50415241), 
-          ACE_NTOHL (0x4d5f4f55), 
-          ACE_NTOHL (0x54000000),  // name = PARAM_OUT
-          12,
-          ACE_NTOHL (0x50415241), 
-          ACE_NTOHL (0x4d5f494e), 
-          ACE_NTOHL (0x4f555400),  // name = PARAM_INOUT
-
-
-      0U,
-
-
-  11,
-  ACE_NTOHL (0x65786365), 
-  ACE_NTOHL (0x7074696f), 
-  ACE_NTOHL (0x6e730000),  // name = exceptions
-  CORBA::tk_alias, // typecode kind for typedefs
-  284, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    40,
-    ACE_NTOHL (0x49444c3a), 
-    ACE_NTOHL (0x6f6d672e), 
-    ACE_NTOHL (0x6f72672f), 
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f4578), 
-    ACE_NTOHL (0x63446573), 
-    ACE_NTOHL (0x63726970), 
-    ACE_NTOHL (0x74696f6e), 
-    ACE_NTOHL (0x5365713a), 
-    ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_ExcDescriptionSeq:1.0
-    24,
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f4578), 
-    ACE_NTOHL (0x63446573), 
-    ACE_NTOHL (0x63726970), 
-    ACE_NTOHL (0x74696f6e), 
-    ACE_NTOHL (0x53657100),  // name = CORBA_ExcDescriptionSeq
-    CORBA::tk_sequence, // typecode kind
-    200, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      CORBA::tk_struct, // typecode kind
-      184, // encapsulation length
-        TAO_ENCAP_BYTE_ORDER, // byte order
-        43,
-        ACE_NTOHL (0x49444c3a), 
-        ACE_NTOHL (0x6f6d672e), 
-        ACE_NTOHL (0x6f72672f), 
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4578), 
-        ACE_NTOHL (0x63657074), 
-        ACE_NTOHL (0x696f6e44), 
-        ACE_NTOHL (0x65736372), 
-        ACE_NTOHL (0x69707469), 
-        ACE_NTOHL (0x6f6e3a31), 
-        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ExceptionDescription:1.0
-        27,
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4578), 
-        ACE_NTOHL (0x63657074), 
-        ACE_NTOHL (0x696f6e44), 
-        ACE_NTOHL (0x65736372), 
-        ACE_NTOHL (0x69707469), 
-        ACE_NTOHL (0x6f6e0000),  // name = CORBA_ExceptionDescription
-        5, // member count
-        5,
-        ACE_NTOHL (0x6e616d65), 
-        ACE_NTOHL (0x0),  // name = name
-        CORBA::tk_string, 
-        0U, // string length
-        3,
-        ACE_NTOHL (0x69640000),  // name = id
-        CORBA::tk_string, 
-        0U, // string length
-        11,
-        ACE_NTOHL (0x64656669), 
-        ACE_NTOHL (0x6e65645f), 
-        ACE_NTOHL (0x696e0000),  // name = defined_in
-        CORBA::tk_string, 
-        0U, // string length
-        8,
-        ACE_NTOHL (0x76657273), 
-        ACE_NTOHL (0x696f6e00),  // name = version
-        CORBA::tk_string, 
-        0U, // string length
-        5,
-        ACE_NTOHL (0x74797065), 
-        ACE_NTOHL (0x0),  // name = type
-        CORBA::tk_TypeCode,
-
-
-      0U,
-
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_OperationDescription (
-    CORBA::tk_struct,
-    sizeof (_oc_CORBA_OperationDescription),
-    (char *) &_oc_CORBA_OperationDescription,
-    0,
-    sizeof (CORBA_OperationDescription)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_OperationDescription =
-  &_tc_TAO_tc_CORBA_OperationDescription;
-
-void CORBA_OperationDescription::_tao_any_destructor (void *x)
-{
-  CORBA_OperationDescription *tmp = ACE_static_cast (CORBA_OperationDescription*,x);
-  delete tmp;
-}
-
-
-#if !defined (_CORBA_REPOSITORYIDSEQ_CS_)
-#define _CORBA_REPOSITORYIDSEQ_CS_
-
-// *************************************************************
-// CORBA_RepositoryIdSeq
-// *************************************************************
-
-CORBA_RepositoryIdSeq::CORBA_RepositoryIdSeq (void)
-{}
-CORBA_RepositoryIdSeq::CORBA_RepositoryIdSeq (CORBA::ULong max) // uses max size
-  : 
-#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  TAO_Unbounded_String_Sequence
-#else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_String_Sequence
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
- (max)
-{}
-CORBA_RepositoryIdSeq::CORBA_RepositoryIdSeq (CORBA::ULong max, CORBA::ULong length, char * *buffer, CORBA::Boolean release)
-  : 
-#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  TAO_Unbounded_String_Sequence
-#else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_String_Sequence
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
- (max, length, buffer, release)
-{}
-CORBA_RepositoryIdSeq::CORBA_RepositoryIdSeq (const CORBA_RepositoryIdSeq &seq) // copy ctor
-  : 
-#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  TAO_Unbounded_String_Sequence
-#else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_String_Sequence
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
- (seq)
-{}
-CORBA_RepositoryIdSeq::~CORBA_RepositoryIdSeq (void) // dtor
-{}
-void CORBA_RepositoryIdSeq::_tao_any_destructor (void *x)
-{
-  CORBA_RepositoryIdSeq *tmp = ACE_static_cast (CORBA_RepositoryIdSeq*,x);
-  delete tmp;
-}
-
-
-#endif /* end #if !defined */
-
-static const CORBA::Long _oc_CORBA_RepositoryIdSeq[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  38,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5265), 
-  ACE_NTOHL (0x706f7369), 
-  ACE_NTOHL (0x746f7279), 
-  ACE_NTOHL (0x49645365), 
-  ACE_NTOHL (0x713a312e), 
-  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_RepositoryIdSeq:1.0
-  22,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5265), 
-  ACE_NTOHL (0x706f7369), 
-  ACE_NTOHL (0x746f7279), 
-  ACE_NTOHL (0x49645365), 
-  ACE_NTOHL (0x71000000),  // name = CORBA_RepositoryIdSeq
-  CORBA::tk_sequence, // typecode kind
-  16, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    CORBA::tk_string, 
-    0U, // string length
-    0U,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_RepositoryIdSeq (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_RepositoryIdSeq),
-    (char *) &_oc_CORBA_RepositoryIdSeq,
-    0,
-    sizeof (CORBA_RepositoryIdSeq)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_RepositoryIdSeq =
-  &_tc_TAO_tc_CORBA_RepositoryIdSeq;
-
-
-#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  
-#if !defined (__TAO_UNBOUNDED_SEQUENCE_CORBA_OPDESCRIPTIONSEQ_CS_)
-#define __TAO_UNBOUNDED_SEQUENCE_CORBA_OPDESCRIPTIONSEQ_CS_
-
-  void
-  _TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq::_allocate_buffer (CORBA::ULong length)
-  {
-    CORBA_OperationDescription* tmp = 0;
-    tmp = _TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq::allocbuf (length);
-    
-    if (this->buffer_ != 0)
-    {
-      CORBA_OperationDescription *old = ACE_reinterpret_cast (CORBA_OperationDescription *,this->buffer_);
-      
-      for (CORBA::ULong i = 0; i < this->length_; ++i)
-        tmp[i] = old[i];
-      
-      if (this->release_)
-        _TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq::freebuf (old);
-      
-    }
-    this->buffer_ = tmp;
-  }
-  
-  void
-  _TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq::_deallocate_buffer (void)
-  {
-    if (this->buffer_ == 0 || this->release_ == 0)
-      return;
-    
-    CORBA_OperationDescription *tmp = ACE_reinterpret_cast (CORBA_OperationDescription *,this->buffer_);
-    
-    _TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq::freebuf (tmp);
-    this->buffer_ = 0;
-  } 
-  
-  _TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq::~_TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq (void) // Dtor.
-  {
-    this->_deallocate_buffer ();
-  }
-  
-  
-#endif /* end #if !defined */
-
-
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
-
-#if !defined (_CORBA_OPDESCRIPTIONSEQ_CS_)
-#define _CORBA_OPDESCRIPTIONSEQ_CS_
-
-// *************************************************************
-// CORBA_OpDescriptionSeq
-// *************************************************************
-
-CORBA_OpDescriptionSeq::CORBA_OpDescriptionSeq (void)
-{}
-CORBA_OpDescriptionSeq::CORBA_OpDescriptionSeq (CORBA::ULong max) // uses max size
-  : 
-#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  _TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq
-#else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<CORBA_OperationDescription>
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
- (max)
-{}
-CORBA_OpDescriptionSeq::CORBA_OpDescriptionSeq (CORBA::ULong max, CORBA::ULong length, CORBA_OperationDescription *buffer, CORBA::Boolean release)
-  : 
-#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  _TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq
-#else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<CORBA_OperationDescription>
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
- (max, length, buffer, release)
-{}
-CORBA_OpDescriptionSeq::CORBA_OpDescriptionSeq (const CORBA_OpDescriptionSeq &seq) // copy ctor
-  : 
-#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  _TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq
-#else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<CORBA_OperationDescription>
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
- (seq)
-{}
-CORBA_OpDescriptionSeq::~CORBA_OpDescriptionSeq (void) // dtor
-{}
-void CORBA_OpDescriptionSeq::_tao_any_destructor (void *x)
-{
-  CORBA_OpDescriptionSeq *tmp = ACE_static_cast (CORBA_OpDescriptionSeq*,x);
-  delete tmp;
-}
-
-
-#endif /* end #if !defined */
-
-static const CORBA::Long _oc_CORBA_OpDescriptionSeq[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  39,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4f70), 
-  ACE_NTOHL (0x44657363), 
-  ACE_NTOHL (0x72697074), 
-  ACE_NTOHL (0x696f6e53), 
-  ACE_NTOHL (0x65713a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_OpDescriptionSeq:1.0
-  23,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4f70), 
-  ACE_NTOHL (0x44657363), 
-  ACE_NTOHL (0x72697074), 
-  ACE_NTOHL (0x696f6e53), 
-  ACE_NTOHL (0x65710000),  // name = CORBA_OpDescriptionSeq
-  CORBA::tk_sequence, // typecode kind
-  1212, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    CORBA::tk_struct, // typecode kind
-    1196, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      43,
-      ACE_NTOHL (0x49444c3a), 
-      ACE_NTOHL (0x6f6d672e), 
-      ACE_NTOHL (0x6f72672f), 
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f4f70), 
-      ACE_NTOHL (0x65726174), 
-      ACE_NTOHL (0x696f6e44), 
-      ACE_NTOHL (0x65736372), 
-      ACE_NTOHL (0x69707469), 
-      ACE_NTOHL (0x6f6e3a31), 
-      ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_OperationDescription:1.0
-      27,
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f4f70), 
-      ACE_NTOHL (0x65726174), 
-      ACE_NTOHL (0x696f6e44), 
-      ACE_NTOHL (0x65736372), 
-      ACE_NTOHL (0x69707469), 
-      ACE_NTOHL (0x6f6e0000),  // name = CORBA_OperationDescription
-      9, // member count
-      5,
-      ACE_NTOHL (0x6e616d65), 
-      ACE_NTOHL (0x0),  // name = name
-      CORBA::tk_string, 
-      0U, // string length
-      3,
-      ACE_NTOHL (0x69640000),  // name = id
-      CORBA::tk_string, 
-      0U, // string length
-      11,
-      ACE_NTOHL (0x64656669), 
-      ACE_NTOHL (0x6e65645f), 
-      ACE_NTOHL (0x696e0000),  // name = defined_in
-      CORBA::tk_string, 
-      0U, // string length
-      8,
-      ACE_NTOHL (0x76657273), 
-      ACE_NTOHL (0x696f6e00),  // name = version
-      CORBA::tk_string, 
-      0U, // string length
-      7,
-      ACE_NTOHL (0x72657375), 
-      ACE_NTOHL (0x6c740000),  // name = result
-      CORBA::tk_TypeCode,
-
-      5,
-      ACE_NTOHL (0x6d6f6465), 
-      ACE_NTOHL (0x0),  // name = mode
-      CORBA::tk_enum, // typecode kind
-      100, // encapsulation length
-        TAO_ENCAP_BYTE_ORDER, // byte order
-        36,
-        ACE_NTOHL (0x49444c3a), 
-        ACE_NTOHL (0x6f6d672e), 
-        ACE_NTOHL (0x6f72672f), 
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x412f4f70), 
-        ACE_NTOHL (0x65726174), 
-        ACE_NTOHL (0x696f6e4d), 
-        ACE_NTOHL (0x6f64653a), 
-        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/OperationMode:1.0
-        14,
-        ACE_NTOHL (0x4f706572), 
-        ACE_NTOHL (0x6174696f), 
-        ACE_NTOHL (0x6e4d6f64), 
-        ACE_NTOHL (0x65000000),  // name = OperationMode
-        2, // member count
-        10,
-        ACE_NTOHL (0x4f505f4e), 
-        ACE_NTOHL (0x4f524d41), 
-        ACE_NTOHL (0x4c000000),  // name = OP_NORMAL
-        10,
-        ACE_NTOHL (0x4f505f4f), 
-        ACE_NTOHL (0x4e455741), 
-        ACE_NTOHL (0x59000000),  // name = OP_ONEWAY
-
-      9,
-      ACE_NTOHL (0x636f6e74), 
-      ACE_NTOHL (0x65787473), 
-      ACE_NTOHL (0x0),  // name = contexts
-      CORBA::tk_alias, // typecode kind for typedefs
-      92, // encapsulation length
-        TAO_ENCAP_BYTE_ORDER, // byte order
-        35,
-        ACE_NTOHL (0x49444c3a), 
-        ACE_NTOHL (0x6f6d672e), 
-        ACE_NTOHL (0x6f72672f), 
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f436f), 
-        ACE_NTOHL (0x6e746578), 
-        ACE_NTOHL (0x74496453), 
-        ACE_NTOHL (0x65713a31), 
-        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ContextIdSeq:1.0
-        19,
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f436f), 
-        ACE_NTOHL (0x6e746578), 
-        ACE_NTOHL (0x74496453), 
-        ACE_NTOHL (0x65710000),  // name = CORBA_ContextIdSeq
-        CORBA::tk_sequence, // typecode kind
-        16, // encapsulation length
-          TAO_ENCAP_BYTE_ORDER, // byte order
-          CORBA::tk_string, 
-          0U, // string length
-          0U,
-
-
-      11,
-      ACE_NTOHL (0x70617261), 
-      ACE_NTOHL (0x6d657465), 
-      ACE_NTOHL (0x72730000),  // name = parameters
-      CORBA::tk_alias, // typecode kind for typedefs
-      444, // encapsulation length
-        TAO_ENCAP_BYTE_ORDER, // byte order
-        40,
-        ACE_NTOHL (0x49444c3a), 
-        ACE_NTOHL (0x6f6d672e), 
-        ACE_NTOHL (0x6f72672f), 
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f5061), 
-        ACE_NTOHL (0x72446573), 
-        ACE_NTOHL (0x63726970), 
-        ACE_NTOHL (0x74696f6e), 
-        ACE_NTOHL (0x5365713a), 
-        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_ParDescriptionSeq:1.0
-        24,
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f5061), 
-        ACE_NTOHL (0x72446573), 
-        ACE_NTOHL (0x63726970), 
-        ACE_NTOHL (0x74696f6e), 
-        ACE_NTOHL (0x53657100),  // name = CORBA_ParDescriptionSeq
-        CORBA::tk_sequence, // typecode kind
-        360, // encapsulation length
-          TAO_ENCAP_BYTE_ORDER, // byte order
-          CORBA::tk_struct, // typecode kind
-          344, // encapsulation length
-            TAO_ENCAP_BYTE_ORDER, // byte order
-            43,
-            ACE_NTOHL (0x49444c3a), 
-            ACE_NTOHL (0x6f6d672e), 
-            ACE_NTOHL (0x6f72672f), 
-            ACE_NTOHL (0x434f5242), 
-            ACE_NTOHL (0x415f5061), 
-            ACE_NTOHL (0x72616d65), 
-            ACE_NTOHL (0x74657244), 
-            ACE_NTOHL (0x65736372), 
-            ACE_NTOHL (0x69707469), 
-            ACE_NTOHL (0x6f6e3a31), 
-            ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ParameterDescription:1.0
-            27,
-            ACE_NTOHL (0x434f5242), 
-            ACE_NTOHL (0x415f5061), 
-            ACE_NTOHL (0x72616d65), 
-            ACE_NTOHL (0x74657244), 
-            ACE_NTOHL (0x65736372), 
-            ACE_NTOHL (0x69707469), 
-            ACE_NTOHL (0x6f6e0000),  // name = CORBA_ParameterDescription
-            4, // member count
-            5,
-            ACE_NTOHL (0x6e616d65), 
-            ACE_NTOHL (0x0),  // name = name
-            CORBA::tk_string, 
-            0U, // string length
-            5,
-            ACE_NTOHL (0x74797065), 
-            ACE_NTOHL (0x0),  // name = type
-            CORBA::tk_TypeCode,
-
-            9,
-            ACE_NTOHL (0x74797065), 
-            ACE_NTOHL (0x5f646566), 
-            ACE_NTOHL (0x0),  // name = type_def
-            CORBA::tk_objref, // typecode kind
-            60, // encapsulation length
-              TAO_ENCAP_BYTE_ORDER, // byte order
-              30,
-              ACE_NTOHL (0x49444c3a), 
-              ACE_NTOHL (0x6f6d672e), 
-              ACE_NTOHL (0x6f72672f), 
-              ACE_NTOHL (0x434f5242), 
-              ACE_NTOHL (0x415f4944), 
-              ACE_NTOHL (0x4c547970), 
-              ACE_NTOHL (0x653a312e), 
-              ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_IDLType:1.0
-              14,
-              ACE_NTOHL (0x434f5242), 
-              ACE_NTOHL (0x415f4944), 
-              ACE_NTOHL (0x4c547970), 
-              ACE_NTOHL (0x65000000),  // name = CORBA_IDLType
-
-            5,
-            ACE_NTOHL (0x6d6f6465), 
-            ACE_NTOHL (0x0),  // name = mode
-            CORBA::tk_enum, // typecode kind
-            116, // encapsulation length
-              TAO_ENCAP_BYTE_ORDER, // byte order
-              36,
-              ACE_NTOHL (0x49444c3a), 
-              ACE_NTOHL (0x6f6d672e), 
-              ACE_NTOHL (0x6f72672f), 
-              ACE_NTOHL (0x434f5242), 
-              ACE_NTOHL (0x412f5061), 
-              ACE_NTOHL (0x72616d65), 
-              ACE_NTOHL (0x7465724d), 
-              ACE_NTOHL (0x6f64653a), 
-              ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ParameterMode:1.0
-              14,
-              ACE_NTOHL (0x50617261), 
-              ACE_NTOHL (0x6d657465), 
-              ACE_NTOHL (0x724d6f64), 
-              ACE_NTOHL (0x65000000),  // name = ParameterMode
-              3, // member count
-              9,
-              ACE_NTOHL (0x50415241), 
-              ACE_NTOHL (0x4d5f494e), 
-              ACE_NTOHL (0x0),  // name = PARAM_IN
-              10,
-              ACE_NTOHL (0x50415241), 
-              ACE_NTOHL (0x4d5f4f55), 
-              ACE_NTOHL (0x54000000),  // name = PARAM_OUT
-              12,
-              ACE_NTOHL (0x50415241), 
-              ACE_NTOHL (0x4d5f494e), 
-              ACE_NTOHL (0x4f555400),  // name = PARAM_INOUT
-
-
-          0U,
-
-
-      11,
-      ACE_NTOHL (0x65786365), 
-      ACE_NTOHL (0x7074696f), 
-      ACE_NTOHL (0x6e730000),  // name = exceptions
-      CORBA::tk_alias, // typecode kind for typedefs
-      284, // encapsulation length
-        TAO_ENCAP_BYTE_ORDER, // byte order
-        40,
-        ACE_NTOHL (0x49444c3a), 
-        ACE_NTOHL (0x6f6d672e), 
-        ACE_NTOHL (0x6f72672f), 
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4578), 
-        ACE_NTOHL (0x63446573), 
-        ACE_NTOHL (0x63726970), 
-        ACE_NTOHL (0x74696f6e), 
-        ACE_NTOHL (0x5365713a), 
-        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_ExcDescriptionSeq:1.0
-        24,
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4578), 
-        ACE_NTOHL (0x63446573), 
-        ACE_NTOHL (0x63726970), 
-        ACE_NTOHL (0x74696f6e), 
-        ACE_NTOHL (0x53657100),  // name = CORBA_ExcDescriptionSeq
-        CORBA::tk_sequence, // typecode kind
-        200, // encapsulation length
-          TAO_ENCAP_BYTE_ORDER, // byte order
-          CORBA::tk_struct, // typecode kind
-          184, // encapsulation length
-            TAO_ENCAP_BYTE_ORDER, // byte order
-            43,
-            ACE_NTOHL (0x49444c3a), 
-            ACE_NTOHL (0x6f6d672e), 
-            ACE_NTOHL (0x6f72672f), 
-            ACE_NTOHL (0x434f5242), 
-            ACE_NTOHL (0x415f4578), 
-            ACE_NTOHL (0x63657074), 
-            ACE_NTOHL (0x696f6e44), 
-            ACE_NTOHL (0x65736372), 
-            ACE_NTOHL (0x69707469), 
-            ACE_NTOHL (0x6f6e3a31), 
-            ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ExceptionDescription:1.0
-            27,
-            ACE_NTOHL (0x434f5242), 
-            ACE_NTOHL (0x415f4578), 
-            ACE_NTOHL (0x63657074), 
-            ACE_NTOHL (0x696f6e44), 
-            ACE_NTOHL (0x65736372), 
-            ACE_NTOHL (0x69707469), 
-            ACE_NTOHL (0x6f6e0000),  // name = CORBA_ExceptionDescription
-            5, // member count
-            5,
-            ACE_NTOHL (0x6e616d65), 
-            ACE_NTOHL (0x0),  // name = name
-            CORBA::tk_string, 
-            0U, // string length
-            3,
-            ACE_NTOHL (0x69640000),  // name = id
-            CORBA::tk_string, 
-            0U, // string length
-            11,
-            ACE_NTOHL (0x64656669), 
-            ACE_NTOHL (0x6e65645f), 
-            ACE_NTOHL (0x696e0000),  // name = defined_in
-            CORBA::tk_string, 
-            0U, // string length
-            8,
-            ACE_NTOHL (0x76657273), 
-            ACE_NTOHL (0x696f6e00),  // name = version
-            CORBA::tk_string, 
-            0U, // string length
-            5,
-            ACE_NTOHL (0x74797065), 
-            ACE_NTOHL (0x0),  // name = type
-            CORBA::tk_TypeCode,
-
-
-          0U,
-
-
-
-    0U,
-
-};
+// *************************************************************
+// CORBA_RepositoryIdSeq
+// *************************************************************
 
-static CORBA::TypeCode _tc_TAO_tc_CORBA_OpDescriptionSeq (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_OpDescriptionSeq),
-    (char *) &_oc_CORBA_OpDescriptionSeq,
-    0,
-    sizeof (CORBA_OpDescriptionSeq)
-  );
+CORBA_RepositoryIdSeq::CORBA_RepositoryIdSeq (void)
+{}
+CORBA_RepositoryIdSeq::CORBA_RepositoryIdSeq (CORBA::ULong max) // uses max size
+  : 
+#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
+  TAO_Unbounded_String_Sequence
+#else /* TAO_USE_SEQUENCE_TEMPLATES */
+  TAO_Unbounded_String_Sequence
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+ (max)
+{}
+CORBA_RepositoryIdSeq::CORBA_RepositoryIdSeq (CORBA::ULong max, CORBA::ULong length, char * *buffer, CORBA::Boolean release)
+  : 
+#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
+  TAO_Unbounded_String_Sequence
+#else /* TAO_USE_SEQUENCE_TEMPLATES */
+  TAO_Unbounded_String_Sequence
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+ (max, length, buffer, release)
+{}
+CORBA_RepositoryIdSeq::CORBA_RepositoryIdSeq (const CORBA_RepositoryIdSeq &seq) // copy ctor
+  : 
+#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
+  TAO_Unbounded_String_Sequence
+#else /* TAO_USE_SEQUENCE_TEMPLATES */
+  TAO_Unbounded_String_Sequence
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+ (seq)
+{}
+CORBA_RepositoryIdSeq::~CORBA_RepositoryIdSeq (void) // dtor
+{}
+void CORBA_RepositoryIdSeq::_tao_any_destructor (void *x)
+{
+  CORBA_RepositoryIdSeq *tmp = ACE_static_cast (CORBA_RepositoryIdSeq*,x);
+  delete tmp;
+}
 
-CORBA::TypeCode_ptr _tc_CORBA_OpDescriptionSeq =
-  &_tc_TAO_tc_CORBA_OpDescriptionSeq;
 
+#endif /* end #if !defined */
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_SEQUENCE_CORBA_ATTRDESCRIPTIONSEQ_CS_)
-#define __TAO_UNBOUNDED_SEQUENCE_CORBA_ATTRDESCRIPTIONSEQ_CS_
+#if !defined (__TAO_UNBOUNDED_SEQUENCE_CORBA_OPDESCRIPTIONSEQ_CS_)
+#define __TAO_UNBOUNDED_SEQUENCE_CORBA_OPDESCRIPTIONSEQ_CS_
 
   void
-  _TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq::_allocate_buffer (CORBA::ULong length)
   {
-    CORBA_AttributeDescription* tmp = 0;
-    tmp = _TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq::allocbuf (length);
+    CORBA_OperationDescription* tmp = 0;
+    tmp = _TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      CORBA_AttributeDescription *old = ACE_reinterpret_cast (CORBA_AttributeDescription *,this->buffer_);
+      CORBA_OperationDescription *old = ACE_reinterpret_cast (CORBA_OperationDescription *,this->buffer_);
       
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         tmp[i] = old[i];
       
       if (this->release_)
-        _TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq::freebuf (old);
+        _TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq::freebuf (old);
       
     }
     this->buffer_ = tmp;
   }
   
   void
-  _TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
     
-    CORBA_AttributeDescription *tmp = ACE_reinterpret_cast (CORBA_AttributeDescription *,this->buffer_);
+    CORBA_OperationDescription *tmp = ACE_reinterpret_cast (CORBA_OperationDescription *,this->buffer_);
     
-    _TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq::freebuf (tmp);
+    _TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq::freebuf (tmp);
     this->buffer_ = 0;
   } 
   
-  _TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq::~_TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq (void) // Dtor.
+  _TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq::~_TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq (void) // Dtor.
   {
     this->_deallocate_buffer ();
   }
@@ -26040,175 +23769,147 @@
 
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_CORBA_ATTRDESCRIPTIONSEQ_CS_)
-#define _CORBA_ATTRDESCRIPTIONSEQ_CS_
+#if !defined (_CORBA_OPDESCRIPTIONSEQ_CS_)
+#define _CORBA_OPDESCRIPTIONSEQ_CS_
 
 // *************************************************************
-// CORBA_AttrDescriptionSeq
+// CORBA_OpDescriptionSeq
 // *************************************************************
 
-CORBA_AttrDescriptionSeq::CORBA_AttrDescriptionSeq (void)
+CORBA_OpDescriptionSeq::CORBA_OpDescriptionSeq (void)
 {}
-CORBA_AttrDescriptionSeq::CORBA_AttrDescriptionSeq (CORBA::ULong max) // uses max size
+CORBA_OpDescriptionSeq::CORBA_OpDescriptionSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  _TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq
+  _TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<CORBA_AttributeDescription>
+  TAO_Unbounded_Sequence<CORBA_OperationDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-CORBA_AttrDescriptionSeq::CORBA_AttrDescriptionSeq (CORBA::ULong max, CORBA::ULong length, CORBA_AttributeDescription *buffer, CORBA::Boolean release)
+CORBA_OpDescriptionSeq::CORBA_OpDescriptionSeq (CORBA::ULong max, CORBA::ULong length, CORBA_OperationDescription *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  _TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq
+  _TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<CORBA_AttributeDescription>
+  TAO_Unbounded_Sequence<CORBA_OperationDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-CORBA_AttrDescriptionSeq::CORBA_AttrDescriptionSeq (const CORBA_AttrDescriptionSeq &seq) // copy ctor
+CORBA_OpDescriptionSeq::CORBA_OpDescriptionSeq (const CORBA_OpDescriptionSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  _TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq
+  _TAO_Unbounded_Sequence_CORBA_OpDescriptionSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<CORBA_AttributeDescription>
+  TAO_Unbounded_Sequence<CORBA_OperationDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-CORBA_AttrDescriptionSeq::~CORBA_AttrDescriptionSeq (void) // dtor
+CORBA_OpDescriptionSeq::~CORBA_OpDescriptionSeq (void) // dtor
 {}
-void CORBA_AttrDescriptionSeq::_tao_any_destructor (void *x)
+void CORBA_OpDescriptionSeq::_tao_any_destructor (void *x)
 {
-  CORBA_AttrDescriptionSeq *tmp = ACE_static_cast (CORBA_AttrDescriptionSeq*,x);
+  CORBA_OpDescriptionSeq *tmp = ACE_static_cast (CORBA_OpDescriptionSeq*,x);
   delete tmp;
 }
 
 
 #endif /* end #if !defined */
 
-static const CORBA::Long _oc_CORBA_AttrDescriptionSeq[] =
+#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
+  
+#if !defined (__TAO_UNBOUNDED_SEQUENCE_CORBA_ATTRDESCRIPTIONSEQ_CS_)
+#define __TAO_UNBOUNDED_SEQUENCE_CORBA_ATTRDESCRIPTIONSEQ_CS_
+
+  void
+  _TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq::_allocate_buffer (CORBA::ULong length)
 {
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  41,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4174), 
-  ACE_NTOHL (0x74724465), 
-  ACE_NTOHL (0x73637269), 
-  ACE_NTOHL (0x7074696f), 
-  ACE_NTOHL (0x6e536571), 
-  ACE_NTOHL (0x3a312e30), 
-  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA_AttrDescriptionSeq:1.0
-  25,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4174), 
-  ACE_NTOHL (0x74724465), 
-  ACE_NTOHL (0x73637269), 
-  ACE_NTOHL (0x7074696f), 
-  ACE_NTOHL (0x6e536571), 
-  ACE_NTOHL (0x0),  // name = CORBA_AttrDescriptionSeq
-  CORBA::tk_sequence, // typecode kind
-  324, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    CORBA::tk_struct, // typecode kind
-    308, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      43,
-      ACE_NTOHL (0x49444c3a), 
-      ACE_NTOHL (0x6f6d672e), 
-      ACE_NTOHL (0x6f72672f), 
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f4174), 
-      ACE_NTOHL (0x74726962), 
-      ACE_NTOHL (0x75746544), 
-      ACE_NTOHL (0x65736372), 
-      ACE_NTOHL (0x69707469), 
-      ACE_NTOHL (0x6f6e3a31), 
-      ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_AttributeDescription:1.0
-      27,
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f4174), 
-      ACE_NTOHL (0x74726962), 
-      ACE_NTOHL (0x75746544), 
-      ACE_NTOHL (0x65736372), 
-      ACE_NTOHL (0x69707469), 
-      ACE_NTOHL (0x6f6e0000),  // name = CORBA_AttributeDescription
-      6, // member count
-      5,
-      ACE_NTOHL (0x6e616d65), 
-      ACE_NTOHL (0x0),  // name = name
-      CORBA::tk_string, 
-      0U, // string length
-      3,
-      ACE_NTOHL (0x69640000),  // name = id
-      CORBA::tk_string, 
-      0U, // string length
-      11,
-      ACE_NTOHL (0x64656669), 
-      ACE_NTOHL (0x6e65645f), 
-      ACE_NTOHL (0x696e0000),  // name = defined_in
-      CORBA::tk_string, 
-      0U, // string length
-      8,
-      ACE_NTOHL (0x76657273), 
-      ACE_NTOHL (0x696f6e00),  // name = version
-      CORBA::tk_string, 
-      0U, // string length
-      5,
-      ACE_NTOHL (0x74797065), 
-      ACE_NTOHL (0x0),  // name = type
-      CORBA::tk_TypeCode,
+    CORBA_AttributeDescription* tmp = 0;
+    tmp = _TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq::allocbuf (length);
 
-      5,
-      ACE_NTOHL (0x6d6f6465), 
-      ACE_NTOHL (0x0),  // name = mode
-      CORBA::tk_enum, // typecode kind
-      104, // encapsulation length
-        TAO_ENCAP_BYTE_ORDER, // byte order
-        36,
-        ACE_NTOHL (0x49444c3a), 
-        ACE_NTOHL (0x6f6d672e), 
-        ACE_NTOHL (0x6f72672f), 
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x412f4174), 
-        ACE_NTOHL (0x74726962), 
-        ACE_NTOHL (0x7574654d), 
-        ACE_NTOHL (0x6f64653a), 
-        ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/AttributeMode:1.0
-        14,
-        ACE_NTOHL (0x41747472), 
-        ACE_NTOHL (0x69627574), 
-        ACE_NTOHL (0x654d6f64), 
-        ACE_NTOHL (0x65000000),  // name = AttributeMode
-        2, // member count
-        12,
-        ACE_NTOHL (0x41545452), 
-        ACE_NTOHL (0x5f4e4f52), 
-        ACE_NTOHL (0x4d414c00),  // name = ATTR_NORMAL
-        14,
-        ACE_NTOHL (0x41545452), 
-        ACE_NTOHL (0x5f524541), 
-        ACE_NTOHL (0x444f4e4c), 
-        ACE_NTOHL (0x59000000),  // name = ATTR_READONLY
+    if (this->buffer_ != 0)
+    {
+      CORBA_AttributeDescription *old = ACE_reinterpret_cast (CORBA_AttributeDescription *,this->buffer_);
+      
+      for (CORBA::ULong i = 0; i < this->length_; ++i)
+        tmp[i] = old[i];
+      
+      if (this->release_)
+        _TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq::freebuf (old);
+      
+    }
+    this->buffer_ = tmp;
+  }
 
+  void
+  _TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq::_deallocate_buffer (void)
+  {
+    if (this->buffer_ == 0 || this->release_ == 0)
+      return;
 
-    0U,
+    CORBA_AttributeDescription *tmp = ACE_reinterpret_cast (CORBA_AttributeDescription *,this->buffer_);
 
-};
+    _TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq::freebuf (tmp);
+    this->buffer_ = 0;
+  } 
 
-static CORBA::TypeCode _tc_TAO_tc_CORBA_AttrDescriptionSeq (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_AttrDescriptionSeq),
-    (char *) &_oc_CORBA_AttrDescriptionSeq,
-    0,
-    sizeof (CORBA_AttrDescriptionSeq)
-  );
+  _TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq::~_TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq (void) // Dtor.
+  {
+    this->_deallocate_buffer ();
+  }
+  
+  
+#endif /* end #if !defined */
+
+
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+
+#if !defined (_CORBA_ATTRDESCRIPTIONSEQ_CS_)
+#define _CORBA_ATTRDESCRIPTIONSEQ_CS_
+
+// *************************************************************
+// CORBA_AttrDescriptionSeq
+// *************************************************************
+
+CORBA_AttrDescriptionSeq::CORBA_AttrDescriptionSeq (void)
+{}
+CORBA_AttrDescriptionSeq::CORBA_AttrDescriptionSeq (CORBA::ULong max) // uses max size
+  : 
+#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
+  _TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq
+#else /* TAO_USE_SEQUENCE_TEMPLATES */
+  TAO_Unbounded_Sequence<CORBA_AttributeDescription>
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+ (max)
+{}
+CORBA_AttrDescriptionSeq::CORBA_AttrDescriptionSeq (CORBA::ULong max, CORBA::ULong length, CORBA_AttributeDescription *buffer, CORBA::Boolean release)
+  : 
+#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
+  _TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq
+#else /* TAO_USE_SEQUENCE_TEMPLATES */
+  TAO_Unbounded_Sequence<CORBA_AttributeDescription>
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+ (max, length, buffer, release)
+{}
+CORBA_AttrDescriptionSeq::CORBA_AttrDescriptionSeq (const CORBA_AttrDescriptionSeq &seq) // copy ctor
+  : 
+#if !defined (TAO_USE_SEQUENCE_TEMPLATES)
+  _TAO_Unbounded_Sequence_CORBA_AttrDescriptionSeq
+#else /* TAO_USE_SEQUENCE_TEMPLATES */
+  TAO_Unbounded_Sequence<CORBA_AttributeDescription>
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+ (seq)
+{}
+CORBA_AttrDescriptionSeq::~CORBA_AttrDescriptionSeq (void) // dtor
+{}
+void CORBA_AttrDescriptionSeq::_tao_any_destructor (void *x)
+{
+  CORBA_AttrDescriptionSeq *tmp = ACE_static_cast (CORBA_AttrDescriptionSeq*,x);
+  delete tmp;
+}
 
-CORBA::TypeCode_ptr _tc_CORBA_AttrDescriptionSeq =
-  &_tc_TAO_tc_CORBA_AttrDescriptionSeq;
+
+#endif /* end #if !defined */
 
 CORBA_InterfaceDef_ptr
 tao_CORBA_InterfaceDef_duplicate (
@@ -28263,7 +25964,7 @@
     return CORBA_InterfaceDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_InterfaceDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/InterfaceDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_InterfaceDef::_nil ());
       if (is_a == 0)
         return CORBA_InterfaceDef::_nil ();
@@ -28331,11 +26032,11 @@
 CORBA::Boolean CORBA_InterfaceDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_InterfaceDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Container:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Contained:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IDLType:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/InterfaceDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Container:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Contained:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IDLType:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -28408,7 +26109,7 @@
 
 const char* CORBA_InterfaceDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_InterfaceDef:1.0";
+  return "IDL:omg.org/CORBA/InterfaceDef:1.0";
 }
 
 CORBA_InterfaceDefSeq * CORBA_InterfaceDef::base_interfaces (
@@ -28474,7 +26175,7 @@
   ACE_NTOHL (0x6f6d672e), 
   ACE_NTOHL (0x6f72672f), 
   ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f496e), 
+  ACE_NTOHL (0x412f496e), 
   ACE_NTOHL (0x74657266), 
   ACE_NTOHL (0x61636544), 
   ACE_NTOHL (0x65662f46), 
@@ -28484,7 +26185,7 @@
   ACE_NTOHL (0x44657363), 
   ACE_NTOHL (0x72697074), 
   ACE_NTOHL (0x696f6e3a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_InterfaceDef/FullInterfaceDescription:1.0
+  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/InterfaceDef/FullInterfaceDescription:1.0
   25,
   ACE_NTOHL (0x46756c6c), 
   ACE_NTOHL (0x496e7465), 
@@ -28497,95 +26198,241 @@
   5,
   ACE_NTOHL (0x6e616d65), 
   ACE_NTOHL (0x0),  // name = name
+  CORBA::tk_alias, // typecode kind for typedefs
+  68, // encapsulation length
+    TAO_ENCAP_BYTE_ORDER, // byte order
+    33,
+    ACE_NTOHL (0x49444c3a), 
+    ACE_NTOHL (0x6f6d672e), 
+    ACE_NTOHL (0x6f72672f), 
+    ACE_NTOHL (0x434f5242), 
+    ACE_NTOHL (0x412f4964), 
+    ACE_NTOHL (0x656e7469), 
+    ACE_NTOHL (0x66696572), 
+    ACE_NTOHL (0x3a312e30), 
+    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
+    11,
+    ACE_NTOHL (0x4964656e), 
+    ACE_NTOHL (0x74696669), 
+    ACE_NTOHL (0x65720000),  // name = Identifier
   CORBA::tk_string, 
   0U, // string length
+
   3,
   ACE_NTOHL (0x69640000),  // name = id
+  CORBA::tk_alias, // typecode kind for typedefs
+  72, // encapsulation length
+    TAO_ENCAP_BYTE_ORDER, // byte order
+    35,
+    ACE_NTOHL (0x49444c3a), 
+    ACE_NTOHL (0x6f6d672e), 
+    ACE_NTOHL (0x6f72672f), 
+    ACE_NTOHL (0x434f5242), 
+    ACE_NTOHL (0x412f5265), 
+    ACE_NTOHL (0x706f7369), 
+    ACE_NTOHL (0x746f7279), 
+    ACE_NTOHL (0x49643a31), 
+    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+    13,
+    ACE_NTOHL (0x5265706f), 
+    ACE_NTOHL (0x7369746f), 
+    ACE_NTOHL (0x72794964), 
+    ACE_NTOHL (0x0),  // name = RepositoryId
   CORBA::tk_string, 
   0U, // string length
+
   11,
   ACE_NTOHL (0x64656669), 
   ACE_NTOHL (0x6e65645f), 
   ACE_NTOHL (0x696e0000),  // name = defined_in
+  CORBA::tk_alias, // typecode kind for typedefs
+  72, // encapsulation length
+    TAO_ENCAP_BYTE_ORDER, // byte order
+    35,
+    ACE_NTOHL (0x49444c3a), 
+    ACE_NTOHL (0x6f6d672e), 
+    ACE_NTOHL (0x6f72672f), 
+    ACE_NTOHL (0x434f5242), 
+    ACE_NTOHL (0x412f5265), 
+    ACE_NTOHL (0x706f7369), 
+    ACE_NTOHL (0x746f7279), 
+    ACE_NTOHL (0x49643a31), 
+    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+    13,
+    ACE_NTOHL (0x5265706f), 
+    ACE_NTOHL (0x7369746f), 
+    ACE_NTOHL (0x72794964), 
+    ACE_NTOHL (0x0),  // name = RepositoryId
   CORBA::tk_string, 
   0U, // string length
+
   8,
   ACE_NTOHL (0x76657273), 
   ACE_NTOHL (0x696f6e00),  // name = version
+  CORBA::tk_alias, // typecode kind for typedefs
+  68, // encapsulation length
+    TAO_ENCAP_BYTE_ORDER, // byte order
+    34,
+    ACE_NTOHL (0x49444c3a), 
+    ACE_NTOHL (0x6f6d672e), 
+    ACE_NTOHL (0x6f72672f), 
+    ACE_NTOHL (0x434f5242), 
+    ACE_NTOHL (0x412f5665), 
+    ACE_NTOHL (0x7273696f), 
+    ACE_NTOHL (0x6e537065), 
+    ACE_NTOHL (0x633a312e), 
+    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
+    12,
+    ACE_NTOHL (0x56657273), 
+    ACE_NTOHL (0x696f6e53), 
+    ACE_NTOHL (0x70656300),  // name = VersionSpec
   CORBA::tk_string, 
   0U, // string length
+
   11,
   ACE_NTOHL (0x6f706572), 
   ACE_NTOHL (0x6174696f), 
   ACE_NTOHL (0x6e730000),  // name = operations
   CORBA::tk_alias, // typecode kind for typedefs
-  1296, // encapsulation length
+  2036, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     39,
     ACE_NTOHL (0x49444c3a), 
     ACE_NTOHL (0x6f6d672e), 
     ACE_NTOHL (0x6f72672f), 
     ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f4f70), 
+    ACE_NTOHL (0x412f4f70), 
     ACE_NTOHL (0x44657363), 
     ACE_NTOHL (0x72697074), 
     ACE_NTOHL (0x696f6e53), 
     ACE_NTOHL (0x65713a31), 
-    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_OpDescriptionSeq:1.0
-    23,
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f4f70), 
-    ACE_NTOHL (0x44657363), 
-    ACE_NTOHL (0x72697074), 
-    ACE_NTOHL (0x696f6e53), 
-    ACE_NTOHL (0x65710000),  // name = CORBA_OpDescriptionSeq
+    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OpDescriptionSeq:1.0
+    17,
+    ACE_NTOHL (0x4f704465), 
+    ACE_NTOHL (0x73637269), 
+    ACE_NTOHL (0x7074696f), 
+    ACE_NTOHL (0x6e536571), 
+    ACE_NTOHL (0x0),  // name = OpDescriptionSeq
     CORBA::tk_sequence, // typecode kind
-    1212, // encapsulation length
+    1956, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       CORBA::tk_struct, // typecode kind
-      1196, // encapsulation length
+      1940, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         43,
         ACE_NTOHL (0x49444c3a), 
         ACE_NTOHL (0x6f6d672e), 
         ACE_NTOHL (0x6f72672f), 
         ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4f70), 
+        ACE_NTOHL (0x412f4f70), 
         ACE_NTOHL (0x65726174), 
         ACE_NTOHL (0x696f6e44), 
         ACE_NTOHL (0x65736372), 
         ACE_NTOHL (0x69707469), 
         ACE_NTOHL (0x6f6e3a31), 
-        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_OperationDescription:1.0
-        27,
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4f70), 
-        ACE_NTOHL (0x65726174), 
-        ACE_NTOHL (0x696f6e44), 
-        ACE_NTOHL (0x65736372), 
-        ACE_NTOHL (0x69707469), 
-        ACE_NTOHL (0x6f6e0000),  // name = CORBA_OperationDescription
+        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OperationDescription:1.0
+        21,
+        ACE_NTOHL (0x4f706572), 
+        ACE_NTOHL (0x6174696f), 
+        ACE_NTOHL (0x6e446573), 
+        ACE_NTOHL (0x63726970), 
+        ACE_NTOHL (0x74696f6e), 
+        ACE_NTOHL (0x0),  // name = OperationDescription
         9, // member count
         5,
         ACE_NTOHL (0x6e616d65), 
         ACE_NTOHL (0x0),  // name = name
+        CORBA::tk_alias, // typecode kind for typedefs
+        68, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          33,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f4964), 
+          ACE_NTOHL (0x656e7469), 
+          ACE_NTOHL (0x66696572), 
+          ACE_NTOHL (0x3a312e30), 
+          ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
+          11,
+          ACE_NTOHL (0x4964656e), 
+          ACE_NTOHL (0x74696669), 
+          ACE_NTOHL (0x65720000),  // name = Identifier
         CORBA::tk_string, 
         0U, // string length
+
         3,
         ACE_NTOHL (0x69640000),  // name = id
+        CORBA::tk_alias, // typecode kind for typedefs
+        72, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          35,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f5265), 
+          ACE_NTOHL (0x706f7369), 
+          ACE_NTOHL (0x746f7279), 
+          ACE_NTOHL (0x49643a31), 
+          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+          13,
+          ACE_NTOHL (0x5265706f), 
+          ACE_NTOHL (0x7369746f), 
+          ACE_NTOHL (0x72794964), 
+          ACE_NTOHL (0x0),  // name = RepositoryId
         CORBA::tk_string, 
         0U, // string length
+
         11,
         ACE_NTOHL (0x64656669), 
         ACE_NTOHL (0x6e65645f), 
         ACE_NTOHL (0x696e0000),  // name = defined_in
+        CORBA::tk_alias, // typecode kind for typedefs
+        72, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          35,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f5265), 
+          ACE_NTOHL (0x706f7369), 
+          ACE_NTOHL (0x746f7279), 
+          ACE_NTOHL (0x49643a31), 
+          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+          13,
+          ACE_NTOHL (0x5265706f), 
+          ACE_NTOHL (0x7369746f), 
+          ACE_NTOHL (0x72794964), 
+          ACE_NTOHL (0x0),  // name = RepositoryId
         CORBA::tk_string, 
         0U, // string length
+
         8,
         ACE_NTOHL (0x76657273), 
         ACE_NTOHL (0x696f6e00),  // name = version
+        CORBA::tk_alias, // typecode kind for typedefs
+        68, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          34,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f5665), 
+          ACE_NTOHL (0x7273696f), 
+          ACE_NTOHL (0x6e537065), 
+          ACE_NTOHL (0x633a312e), 
+          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
+          12,
+          ACE_NTOHL (0x56657273), 
+          ACE_NTOHL (0x696f6e53), 
+          ACE_NTOHL (0x70656300),  // name = VersionSpec
         CORBA::tk_string, 
         0U, // string length
+
         7,
         ACE_NTOHL (0x72657375), 
         ACE_NTOHL (0x6c740000),  // name = result
@@ -28627,29 +26474,67 @@
         ACE_NTOHL (0x65787473), 
         ACE_NTOHL (0x0),  // name = contexts
         CORBA::tk_alias, // typecode kind for typedefs
-        92, // encapsulation length
+        236, // encapsulation length
           TAO_ENCAP_BYTE_ORDER, // byte order
           35,
           ACE_NTOHL (0x49444c3a), 
           ACE_NTOHL (0x6f6d672e), 
           ACE_NTOHL (0x6f72672f), 
           ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f436f), 
+          ACE_NTOHL (0x412f436f), 
           ACE_NTOHL (0x6e746578), 
           ACE_NTOHL (0x74496453), 
           ACE_NTOHL (0x65713a31), 
-          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ContextIdSeq:1.0
-          19,
+          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ContextIdSeq:1.0
+          13,
+          ACE_NTOHL (0x436f6e74), 
+          ACE_NTOHL (0x65787449), 
+          ACE_NTOHL (0x64536571), 
+          ACE_NTOHL (0x0),  // name = ContextIdSeq
+          CORBA::tk_sequence, // typecode kind
+          164, // encapsulation length
+            TAO_ENCAP_BYTE_ORDER, // byte order
+            CORBA::tk_alias, // typecode kind for typedefs
+            148, // encapsulation length
+              TAO_ENCAP_BYTE_ORDER, // byte order
+              40,
+              ACE_NTOHL (0x49444c3a), 
+              ACE_NTOHL (0x6f6d672e), 
+              ACE_NTOHL (0x6f72672f), 
           ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f436f), 
+              ACE_NTOHL (0x412f436f), 
           ACE_NTOHL (0x6e746578), 
-          ACE_NTOHL (0x74496453), 
-          ACE_NTOHL (0x65710000),  // name = CORBA_ContextIdSeq
-          CORBA::tk_sequence, // typecode kind
-          16, // encapsulation length
+              ACE_NTOHL (0x74496465), 
+              ACE_NTOHL (0x6e746966), 
+              ACE_NTOHL (0x6965723a), 
+              ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ContextIdentifier:1.0
+              18,
+              ACE_NTOHL (0x436f6e74), 
+              ACE_NTOHL (0x65787449), 
+              ACE_NTOHL (0x64656e74), 
+              ACE_NTOHL (0x69666965), 
+              ACE_NTOHL (0x72000000),  // name = ContextIdentifier
+              CORBA::tk_alias, // typecode kind for typedefs
+              68, // encapsulation length
             TAO_ENCAP_BYTE_ORDER, // byte order
+                33,
+                ACE_NTOHL (0x49444c3a), 
+                ACE_NTOHL (0x6f6d672e), 
+                ACE_NTOHL (0x6f72672f), 
+                ACE_NTOHL (0x434f5242), 
+                ACE_NTOHL (0x412f4964), 
+                ACE_NTOHL (0x656e7469), 
+                ACE_NTOHL (0x66696572), 
+                ACE_NTOHL (0x3a312e30), 
+                ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
+                11,
+                ACE_NTOHL (0x4964656e), 
+                ACE_NTOHL (0x74696669), 
+                ACE_NTOHL (0x65720000),  // name = Identifier
             CORBA::tk_string, 
             0U, // string length
+
+
             0U,
 
 
@@ -28658,58 +26543,74 @@
         ACE_NTOHL (0x6d657465), 
         ACE_NTOHL (0x72730000),  // name = parameters
         CORBA::tk_alias, // typecode kind for typedefs
-        444, // encapsulation length
+        496, // encapsulation length
           TAO_ENCAP_BYTE_ORDER, // byte order
           40,
           ACE_NTOHL (0x49444c3a), 
           ACE_NTOHL (0x6f6d672e), 
           ACE_NTOHL (0x6f72672f), 
           ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f5061), 
+          ACE_NTOHL (0x412f5061), 
           ACE_NTOHL (0x72446573), 
           ACE_NTOHL (0x63726970), 
           ACE_NTOHL (0x74696f6e), 
           ACE_NTOHL (0x5365713a), 
-          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_ParDescriptionSeq:1.0
-          24,
-          ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f5061), 
-          ACE_NTOHL (0x72446573), 
-          ACE_NTOHL (0x63726970), 
-          ACE_NTOHL (0x74696f6e), 
-          ACE_NTOHL (0x53657100),  // name = CORBA_ParDescriptionSeq
+          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ParDescriptionSeq:1.0
+          18,
+          ACE_NTOHL (0x50617244), 
+          ACE_NTOHL (0x65736372), 
+          ACE_NTOHL (0x69707469), 
+          ACE_NTOHL (0x6f6e5365), 
+          ACE_NTOHL (0x71000000),  // name = ParDescriptionSeq
           CORBA::tk_sequence, // typecode kind
-          360, // encapsulation length
+          416, // encapsulation length
             TAO_ENCAP_BYTE_ORDER, // byte order
             CORBA::tk_struct, // typecode kind
-            344, // encapsulation length
+            400, // encapsulation length
               TAO_ENCAP_BYTE_ORDER, // byte order
               43,
               ACE_NTOHL (0x49444c3a), 
               ACE_NTOHL (0x6f6d672e), 
               ACE_NTOHL (0x6f72672f), 
               ACE_NTOHL (0x434f5242), 
-              ACE_NTOHL (0x415f5061), 
+              ACE_NTOHL (0x412f5061), 
               ACE_NTOHL (0x72616d65), 
               ACE_NTOHL (0x74657244), 
               ACE_NTOHL (0x65736372), 
               ACE_NTOHL (0x69707469), 
               ACE_NTOHL (0x6f6e3a31), 
-              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ParameterDescription:1.0
-              27,
-              ACE_NTOHL (0x434f5242), 
-              ACE_NTOHL (0x415f5061), 
-              ACE_NTOHL (0x72616d65), 
-              ACE_NTOHL (0x74657244), 
-              ACE_NTOHL (0x65736372), 
-              ACE_NTOHL (0x69707469), 
-              ACE_NTOHL (0x6f6e0000),  // name = CORBA_ParameterDescription
+              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ParameterDescription:1.0
+              21,
+              ACE_NTOHL (0x50617261), 
+              ACE_NTOHL (0x6d657465), 
+              ACE_NTOHL (0x72446573), 
+              ACE_NTOHL (0x63726970), 
+              ACE_NTOHL (0x74696f6e), 
+              ACE_NTOHL (0x0),  // name = ParameterDescription
               4, // member count
               5,
               ACE_NTOHL (0x6e616d65), 
               ACE_NTOHL (0x0),  // name = name
+              CORBA::tk_alias, // typecode kind for typedefs
+              68, // encapsulation length
+                TAO_ENCAP_BYTE_ORDER, // byte order
+                33,
+                ACE_NTOHL (0x49444c3a), 
+                ACE_NTOHL (0x6f6d672e), 
+                ACE_NTOHL (0x6f72672f), 
+                ACE_NTOHL (0x434f5242), 
+                ACE_NTOHL (0x412f4964), 
+                ACE_NTOHL (0x656e7469), 
+                ACE_NTOHL (0x66696572), 
+                ACE_NTOHL (0x3a312e30), 
+                ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
+                11,
+                ACE_NTOHL (0x4964656e), 
+                ACE_NTOHL (0x74696669), 
+                ACE_NTOHL (0x65720000),  // name = Identifier
               CORBA::tk_string, 
               0U, // string length
+
               5,
               ACE_NTOHL (0x74797065), 
               ACE_NTOHL (0x0),  // name = type
@@ -28720,22 +26621,20 @@
               ACE_NTOHL (0x5f646566), 
               ACE_NTOHL (0x0),  // name = type_def
               CORBA::tk_objref, // typecode kind
-              60, // encapsulation length
+              52, // encapsulation length
                 TAO_ENCAP_BYTE_ORDER, // byte order
                 30,
                 ACE_NTOHL (0x49444c3a), 
                 ACE_NTOHL (0x6f6d672e), 
                 ACE_NTOHL (0x6f72672f), 
                 ACE_NTOHL (0x434f5242), 
-                ACE_NTOHL (0x415f4944), 
+                ACE_NTOHL (0x412f4944), 
                 ACE_NTOHL (0x4c547970), 
                 ACE_NTOHL (0x653a312e), 
-                ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_IDLType:1.0
-                14,
-                ACE_NTOHL (0x434f5242), 
-                ACE_NTOHL (0x415f4944), 
-                ACE_NTOHL (0x4c547970), 
-                ACE_NTOHL (0x65000000),  // name = CORBA_IDLType
+                ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/IDLType:1.0
+                8,
+                ACE_NTOHL (0x49444c54), 
+                ACE_NTOHL (0x79706500),  // name = IDLType
 
               5,
               ACE_NTOHL (0x6d6f6465), 
@@ -28781,73 +26680,145 @@
         ACE_NTOHL (0x7074696f), 
         ACE_NTOHL (0x6e730000),  // name = exceptions
         CORBA::tk_alias, // typecode kind for typedefs
-        284, // encapsulation length
+        556, // encapsulation length
           TAO_ENCAP_BYTE_ORDER, // byte order
           40,
           ACE_NTOHL (0x49444c3a), 
           ACE_NTOHL (0x6f6d672e), 
           ACE_NTOHL (0x6f72672f), 
           ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f4578), 
+          ACE_NTOHL (0x412f4578), 
           ACE_NTOHL (0x63446573), 
           ACE_NTOHL (0x63726970), 
           ACE_NTOHL (0x74696f6e), 
           ACE_NTOHL (0x5365713a), 
-          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_ExcDescriptionSeq:1.0
-          24,
-          ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f4578), 
-          ACE_NTOHL (0x63446573), 
-          ACE_NTOHL (0x63726970), 
-          ACE_NTOHL (0x74696f6e), 
-          ACE_NTOHL (0x53657100),  // name = CORBA_ExcDescriptionSeq
+          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ExcDescriptionSeq:1.0
+          18,
+          ACE_NTOHL (0x45786344), 
+          ACE_NTOHL (0x65736372), 
+          ACE_NTOHL (0x69707469), 
+          ACE_NTOHL (0x6f6e5365), 
+          ACE_NTOHL (0x71000000),  // name = ExcDescriptionSeq
           CORBA::tk_sequence, // typecode kind
-          200, // encapsulation length
+          476, // encapsulation length
             TAO_ENCAP_BYTE_ORDER, // byte order
             CORBA::tk_struct, // typecode kind
-            184, // encapsulation length
+            460, // encapsulation length
               TAO_ENCAP_BYTE_ORDER, // byte order
               43,
               ACE_NTOHL (0x49444c3a), 
               ACE_NTOHL (0x6f6d672e), 
               ACE_NTOHL (0x6f72672f), 
               ACE_NTOHL (0x434f5242), 
-              ACE_NTOHL (0x415f4578), 
+              ACE_NTOHL (0x412f4578), 
               ACE_NTOHL (0x63657074), 
               ACE_NTOHL (0x696f6e44), 
               ACE_NTOHL (0x65736372), 
               ACE_NTOHL (0x69707469), 
               ACE_NTOHL (0x6f6e3a31), 
-              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ExceptionDescription:1.0
-              27,
-              ACE_NTOHL (0x434f5242), 
-              ACE_NTOHL (0x415f4578), 
-              ACE_NTOHL (0x63657074), 
-              ACE_NTOHL (0x696f6e44), 
-              ACE_NTOHL (0x65736372), 
-              ACE_NTOHL (0x69707469), 
-              ACE_NTOHL (0x6f6e0000),  // name = CORBA_ExceptionDescription
+              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ExceptionDescription:1.0
+              21,
+              ACE_NTOHL (0x45786365), 
+              ACE_NTOHL (0x7074696f), 
+              ACE_NTOHL (0x6e446573), 
+              ACE_NTOHL (0x63726970), 
+              ACE_NTOHL (0x74696f6e), 
+              ACE_NTOHL (0x0),  // name = ExceptionDescription
               5, // member count
               5,
               ACE_NTOHL (0x6e616d65), 
               ACE_NTOHL (0x0),  // name = name
+              CORBA::tk_alias, // typecode kind for typedefs
+              68, // encapsulation length
+                TAO_ENCAP_BYTE_ORDER, // byte order
+                33,
+                ACE_NTOHL (0x49444c3a), 
+                ACE_NTOHL (0x6f6d672e), 
+                ACE_NTOHL (0x6f72672f), 
+                ACE_NTOHL (0x434f5242), 
+                ACE_NTOHL (0x412f4964), 
+                ACE_NTOHL (0x656e7469), 
+                ACE_NTOHL (0x66696572), 
+                ACE_NTOHL (0x3a312e30), 
+                ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
+                11,
+                ACE_NTOHL (0x4964656e), 
+                ACE_NTOHL (0x74696669), 
+                ACE_NTOHL (0x65720000),  // name = Identifier
               CORBA::tk_string, 
               0U, // string length
+
               3,
               ACE_NTOHL (0x69640000),  // name = id
+              CORBA::tk_alias, // typecode kind for typedefs
+              72, // encapsulation length
+                TAO_ENCAP_BYTE_ORDER, // byte order
+                35,
+                ACE_NTOHL (0x49444c3a), 
+                ACE_NTOHL (0x6f6d672e), 
+                ACE_NTOHL (0x6f72672f), 
+                ACE_NTOHL (0x434f5242), 
+                ACE_NTOHL (0x412f5265), 
+                ACE_NTOHL (0x706f7369), 
+                ACE_NTOHL (0x746f7279), 
+                ACE_NTOHL (0x49643a31), 
+                ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+                13,
+                ACE_NTOHL (0x5265706f), 
+                ACE_NTOHL (0x7369746f), 
+                ACE_NTOHL (0x72794964), 
+                ACE_NTOHL (0x0),  // name = RepositoryId
               CORBA::tk_string, 
               0U, // string length
+
               11,
               ACE_NTOHL (0x64656669), 
               ACE_NTOHL (0x6e65645f), 
               ACE_NTOHL (0x696e0000),  // name = defined_in
+              CORBA::tk_alias, // typecode kind for typedefs
+              72, // encapsulation length
+                TAO_ENCAP_BYTE_ORDER, // byte order
+                35,
+                ACE_NTOHL (0x49444c3a), 
+                ACE_NTOHL (0x6f6d672e), 
+                ACE_NTOHL (0x6f72672f), 
+                ACE_NTOHL (0x434f5242), 
+                ACE_NTOHL (0x412f5265), 
+                ACE_NTOHL (0x706f7369), 
+                ACE_NTOHL (0x746f7279), 
+                ACE_NTOHL (0x49643a31), 
+                ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+                13,
+                ACE_NTOHL (0x5265706f), 
+                ACE_NTOHL (0x7369746f), 
+                ACE_NTOHL (0x72794964), 
+                ACE_NTOHL (0x0),  // name = RepositoryId
               CORBA::tk_string, 
               0U, // string length
+
               8,
               ACE_NTOHL (0x76657273), 
               ACE_NTOHL (0x696f6e00),  // name = version
+              CORBA::tk_alias, // typecode kind for typedefs
+              68, // encapsulation length
+                TAO_ENCAP_BYTE_ORDER, // byte order
+                34,
+                ACE_NTOHL (0x49444c3a), 
+                ACE_NTOHL (0x6f6d672e), 
+                ACE_NTOHL (0x6f72672f), 
+                ACE_NTOHL (0x434f5242), 
+                ACE_NTOHL (0x412f5665), 
+                ACE_NTOHL (0x7273696f), 
+                ACE_NTOHL (0x6e537065), 
+                ACE_NTOHL (0x633a312e), 
+                ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
+                12,
+                ACE_NTOHL (0x56657273), 
+                ACE_NTOHL (0x696f6e53), 
+                ACE_NTOHL (0x70656300),  // name = VersionSpec
               CORBA::tk_string, 
               0U, // string length
+
               5,
               ACE_NTOHL (0x74797065), 
               ACE_NTOHL (0x0),  // name = type
@@ -28866,75 +26837,146 @@
   ACE_NTOHL (0x69627574), 
   ACE_NTOHL (0x65730000),  // name = attributes
   CORBA::tk_alias, // typecode kind for typedefs
-  416, // encapsulation length
+  684, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     41,
     ACE_NTOHL (0x49444c3a), 
     ACE_NTOHL (0x6f6d672e), 
     ACE_NTOHL (0x6f72672f), 
     ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f4174), 
+    ACE_NTOHL (0x412f4174), 
     ACE_NTOHL (0x74724465), 
     ACE_NTOHL (0x73637269), 
     ACE_NTOHL (0x7074696f), 
     ACE_NTOHL (0x6e536571), 
     ACE_NTOHL (0x3a312e30), 
-    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA_AttrDescriptionSeq:1.0
-    25,
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f4174), 
-    ACE_NTOHL (0x74724465), 
-    ACE_NTOHL (0x73637269), 
-    ACE_NTOHL (0x7074696f), 
-    ACE_NTOHL (0x6e536571), 
-    ACE_NTOHL (0x0),  // name = CORBA_AttrDescriptionSeq
+    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/AttrDescriptionSeq:1.0
+    19,
+    ACE_NTOHL (0x41747472), 
+    ACE_NTOHL (0x44657363), 
+    ACE_NTOHL (0x72697074), 
+    ACE_NTOHL (0x696f6e53), 
+    ACE_NTOHL (0x65710000),  // name = AttrDescriptionSeq
     CORBA::tk_sequence, // typecode kind
-    324, // encapsulation length
+    600, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       CORBA::tk_struct, // typecode kind
-      308, // encapsulation length
+      584, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         43,
         ACE_NTOHL (0x49444c3a), 
         ACE_NTOHL (0x6f6d672e), 
         ACE_NTOHL (0x6f72672f), 
         ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4174), 
+        ACE_NTOHL (0x412f4174), 
         ACE_NTOHL (0x74726962), 
         ACE_NTOHL (0x75746544), 
         ACE_NTOHL (0x65736372), 
         ACE_NTOHL (0x69707469), 
         ACE_NTOHL (0x6f6e3a31), 
-        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_AttributeDescription:1.0
-        27,
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4174), 
-        ACE_NTOHL (0x74726962), 
-        ACE_NTOHL (0x75746544), 
-        ACE_NTOHL (0x65736372), 
-        ACE_NTOHL (0x69707469), 
-        ACE_NTOHL (0x6f6e0000),  // name = CORBA_AttributeDescription
+        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/AttributeDescription:1.0
+        21,
+        ACE_NTOHL (0x41747472), 
+        ACE_NTOHL (0x69627574), 
+        ACE_NTOHL (0x65446573), 
+        ACE_NTOHL (0x63726970), 
+        ACE_NTOHL (0x74696f6e), 
+        ACE_NTOHL (0x0),  // name = AttributeDescription
         6, // member count
         5,
         ACE_NTOHL (0x6e616d65), 
         ACE_NTOHL (0x0),  // name = name
+        CORBA::tk_alias, // typecode kind for typedefs
+        68, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          33,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f4964), 
+          ACE_NTOHL (0x656e7469), 
+          ACE_NTOHL (0x66696572), 
+          ACE_NTOHL (0x3a312e30), 
+          ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
+          11,
+          ACE_NTOHL (0x4964656e), 
+          ACE_NTOHL (0x74696669), 
+          ACE_NTOHL (0x65720000),  // name = Identifier
         CORBA::tk_string, 
         0U, // string length
+
         3,
         ACE_NTOHL (0x69640000),  // name = id
+        CORBA::tk_alias, // typecode kind for typedefs
+        72, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          35,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f5265), 
+          ACE_NTOHL (0x706f7369), 
+          ACE_NTOHL (0x746f7279), 
+          ACE_NTOHL (0x49643a31), 
+          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+          13,
+          ACE_NTOHL (0x5265706f), 
+          ACE_NTOHL (0x7369746f), 
+          ACE_NTOHL (0x72794964), 
+          ACE_NTOHL (0x0),  // name = RepositoryId
         CORBA::tk_string, 
         0U, // string length
+
         11,
         ACE_NTOHL (0x64656669), 
         ACE_NTOHL (0x6e65645f), 
         ACE_NTOHL (0x696e0000),  // name = defined_in
+        CORBA::tk_alias, // typecode kind for typedefs
+        72, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          35,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f5265), 
+          ACE_NTOHL (0x706f7369), 
+          ACE_NTOHL (0x746f7279), 
+          ACE_NTOHL (0x49643a31), 
+          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+          13,
+          ACE_NTOHL (0x5265706f), 
+          ACE_NTOHL (0x7369746f), 
+          ACE_NTOHL (0x72794964), 
+          ACE_NTOHL (0x0),  // name = RepositoryId
         CORBA::tk_string, 
         0U, // string length
+
         8,
         ACE_NTOHL (0x76657273), 
         ACE_NTOHL (0x696f6e00),  // name = version
+        CORBA::tk_alias, // typecode kind for typedefs
+        68, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          34,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f5665), 
+          ACE_NTOHL (0x7273696f), 
+          ACE_NTOHL (0x6e537065), 
+          ACE_NTOHL (0x633a312e), 
+          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
+          12,
+          ACE_NTOHL (0x56657273), 
+          ACE_NTOHL (0x696f6e53), 
+          ACE_NTOHL (0x70656300),  // name = VersionSpec
         CORBA::tk_string, 
         0U, // string length
+
         5,
         ACE_NTOHL (0x74797065), 
         ACE_NTOHL (0x0),  // name = type
@@ -28982,31 +27024,48 @@
   ACE_NTOHL (0x65726661), 
   ACE_NTOHL (0x63657300),  // name = base_interfaces
   CORBA::tk_alias, // typecode kind for typedefs
-  100, // encapsulation length
+  164, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     38,
     ACE_NTOHL (0x49444c3a), 
     ACE_NTOHL (0x6f6d672e), 
     ACE_NTOHL (0x6f72672f), 
     ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f5265), 
+    ACE_NTOHL (0x412f5265), 
     ACE_NTOHL (0x706f7369), 
     ACE_NTOHL (0x746f7279), 
     ACE_NTOHL (0x49645365), 
     ACE_NTOHL (0x713a312e), 
-    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_RepositoryIdSeq:1.0
-    22,
+    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/RepositoryIdSeq:1.0
+    16,
+    ACE_NTOHL (0x5265706f), 
+    ACE_NTOHL (0x7369746f), 
+    ACE_NTOHL (0x72794964), 
+    ACE_NTOHL (0x53657100),  // name = RepositoryIdSeq
+    CORBA::tk_sequence, // typecode kind
+    88, // encapsulation length
+      TAO_ENCAP_BYTE_ORDER, // byte order
+      CORBA::tk_alias, // typecode kind for typedefs
+      72, // encapsulation length
+        TAO_ENCAP_BYTE_ORDER, // byte order
+        35,
+        ACE_NTOHL (0x49444c3a), 
+        ACE_NTOHL (0x6f6d672e), 
+        ACE_NTOHL (0x6f72672f), 
     ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f5265), 
+        ACE_NTOHL (0x412f5265), 
     ACE_NTOHL (0x706f7369), 
     ACE_NTOHL (0x746f7279), 
-    ACE_NTOHL (0x49645365), 
-    ACE_NTOHL (0x71000000),  // name = CORBA_RepositoryIdSeq
-    CORBA::tk_sequence, // typecode kind
-    16, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
+        ACE_NTOHL (0x49643a31), 
+        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+        13,
+        ACE_NTOHL (0x5265706f), 
+        ACE_NTOHL (0x7369746f), 
+        ACE_NTOHL (0x72794964), 
+        ACE_NTOHL (0x0),  // name = RepositoryId
       CORBA::tk_string, 
       0U, // string length
+
       0U,
 
 
@@ -29073,166 +27132,43 @@
       name,
       version,
       type,
-      mode,
-      ACE_TRY_ENV
-    );
-}
-
-CORBA_OperationDef_ptr CORBA_InterfaceDef::create_operation (
-    const char * id,
-    const char * name,
-    const char * version,
-    CORBA_IDLType_ptr result,
-    CORBA::OperationMode mode,
-    const CORBA_ParDescriptionSeq & params,
-    const CORBA_ExceptionDefSeq & exceptions,
-    const CORBA_ContextIdSeq & contexts,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-  ACE_THROW_SPEC ((
-    CORBA::SystemException
-  ))
-{
-  _TAO_CORBA_InterfaceDef_Proxy_Impl &proxy = 
-    this->the_TAO_CORBA_InterfaceDef_Proxy_Broker_->select_proxy (this, ACE_TRY_ENV);
-  ACE_CHECK_RETURN (0);
-  
-  return proxy.create_operation (
-      this,
-      id,
-      name,
-      version,
-      result,
-      mode,
-      params,
-      exceptions,
-      contexts,
-      ACE_TRY_ENV
-    );
-}
-
-static const CORBA::Long _oc_CORBA_InterfaceDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  35,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f496e), 
-  ACE_NTOHL (0x74657266), 
-  ACE_NTOHL (0x61636544), 
-  ACE_NTOHL (0x65663a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_InterfaceDef:1.0
-  19,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f496e), 
-  ACE_NTOHL (0x74657266), 
-  ACE_NTOHL (0x61636544), 
-  ACE_NTOHL (0x65660000),  // name = CORBA_InterfaceDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_InterfaceDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_InterfaceDef),
-    (char *) &_oc_CORBA_InterfaceDef,
-    0,
-    sizeof (CORBA_InterfaceDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_InterfaceDef =
-  &_tc_TAO_tc_CORBA_InterfaceDef;
-
-static const CORBA::Long _oc_CORBA_InterfaceDescription[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  43,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f496e), 
-  ACE_NTOHL (0x74657266), 
-  ACE_NTOHL (0x61636544), 
-  ACE_NTOHL (0x65736372), 
-  ACE_NTOHL (0x69707469), 
-  ACE_NTOHL (0x6f6e3a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_InterfaceDescription:1.0
-  27,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f496e), 
-  ACE_NTOHL (0x74657266), 
-  ACE_NTOHL (0x61636544), 
-  ACE_NTOHL (0x65736372), 
-  ACE_NTOHL (0x69707469), 
-  ACE_NTOHL (0x6f6e0000),  // name = CORBA_InterfaceDescription
-  5, // member count
-  5,
-  ACE_NTOHL (0x6e616d65), 
-  ACE_NTOHL (0x0),  // name = name
-  CORBA::tk_string, 
-  0U, // string length
-  3,
-  ACE_NTOHL (0x69640000),  // name = id
-  CORBA::tk_string, 
-  0U, // string length
-  11,
-  ACE_NTOHL (0x64656669), 
-  ACE_NTOHL (0x6e65645f), 
-  ACE_NTOHL (0x696e0000),  // name = defined_in
-  CORBA::tk_string, 
-  0U, // string length
-  8,
-  ACE_NTOHL (0x76657273), 
-  ACE_NTOHL (0x696f6e00),  // name = version
-  CORBA::tk_string, 
-  0U, // string length
-  16,
-  ACE_NTOHL (0x62617365), 
-  ACE_NTOHL (0x5f696e74), 
-  ACE_NTOHL (0x65726661), 
-  ACE_NTOHL (0x63657300),  // name = base_interfaces
-  CORBA::tk_alias, // typecode kind for typedefs
-  100, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    38,
-    ACE_NTOHL (0x49444c3a), 
-    ACE_NTOHL (0x6f6d672e), 
-    ACE_NTOHL (0x6f72672f), 
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f5265), 
-    ACE_NTOHL (0x706f7369), 
-    ACE_NTOHL (0x746f7279), 
-    ACE_NTOHL (0x49645365), 
-    ACE_NTOHL (0x713a312e), 
-    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_RepositoryIdSeq:1.0
-    22,
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f5265), 
-    ACE_NTOHL (0x706f7369), 
-    ACE_NTOHL (0x746f7279), 
-    ACE_NTOHL (0x49645365), 
-    ACE_NTOHL (0x71000000),  // name = CORBA_RepositoryIdSeq
-    CORBA::tk_sequence, // typecode kind
-    16, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      CORBA::tk_string, 
-      0U, // string length
-      0U,
-
+      mode,
+      ACE_TRY_ENV
+    );
+}
 
-};
+CORBA_OperationDef_ptr CORBA_InterfaceDef::create_operation (
+    const char * id,
+    const char * name,
+    const char * version,
+    CORBA_IDLType_ptr result,
+    CORBA::OperationMode mode,
+    const CORBA_ParDescriptionSeq & params,
+    const CORBA_ExceptionDefSeq & exceptions,
+    const CORBA_ContextIdSeq & contexts,
+    CORBA::Environment &ACE_TRY_ENV
+  )
+  ACE_THROW_SPEC ((
+    CORBA::SystemException
+  ))
+{
+  _TAO_CORBA_InterfaceDef_Proxy_Impl &proxy = 
+    this->the_TAO_CORBA_InterfaceDef_Proxy_Broker_->select_proxy (this, ACE_TRY_ENV);
+  ACE_CHECK_RETURN (0);
 
-static CORBA::TypeCode _tc_TAO_tc_CORBA_InterfaceDescription (
-    CORBA::tk_struct,
-    sizeof (_oc_CORBA_InterfaceDescription),
-    (char *) &_oc_CORBA_InterfaceDescription,
-    0,
-    sizeof (CORBA_InterfaceDescription)
+  return proxy.create_operation (
+      this,
+      id,
+      name,
+      version,
+      result,
+      mode,
+      params,
+      exceptions,
+      contexts,
+      ACE_TRY_ENV
   );
-
-CORBA::TypeCode_ptr _tc_CORBA_InterfaceDescription =
-  &_tc_TAO_tc_CORBA_InterfaceDescription;
+}
 
 void CORBA_InterfaceDescription::_tao_any_destructor (void *x)
 {
@@ -29572,7 +27508,7 @@
     return CORBA_AbstractInterfaceDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_AbstractInterfaceDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/AbstractInterfaceDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_AbstractInterfaceDef::_nil ());
       if (is_a == 0)
         return CORBA_AbstractInterfaceDef::_nil ();
@@ -29640,12 +27576,12 @@
 CORBA::Boolean CORBA_AbstractInterfaceDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_AbstractInterfaceDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_InterfaceDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Container:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Contained:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IDLType:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/AbstractInterfaceDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/InterfaceDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Container:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Contained:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IDLType:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -29730,45 +27666,9 @@
 
 const char* CORBA_AbstractInterfaceDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_AbstractInterfaceDef:1.0";
+  return "IDL:omg.org/CORBA/AbstractInterfaceDef:1.0";
 }
 
-static const CORBA::Long _oc_CORBA_AbstractInterfaceDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  43,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4162), 
-  ACE_NTOHL (0x73747261), 
-  ACE_NTOHL (0x6374496e), 
-  ACE_NTOHL (0x74657266), 
-  ACE_NTOHL (0x61636544), 
-  ACE_NTOHL (0x65663a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_AbstractInterfaceDef:1.0
-  27,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4162), 
-  ACE_NTOHL (0x73747261), 
-  ACE_NTOHL (0x6374496e), 
-  ACE_NTOHL (0x74657266), 
-  ACE_NTOHL (0x61636544), 
-  ACE_NTOHL (0x65660000),  // name = CORBA_AbstractInterfaceDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_AbstractInterfaceDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_AbstractInterfaceDef),
-    (char *) &_oc_CORBA_AbstractInterfaceDef,
-    0,
-    sizeof (CORBA_AbstractInterfaceDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_AbstractInterfaceDef =
-  &_tc_TAO_tc_CORBA_AbstractInterfaceDef;
-
 CORBA_LocalInterfaceDef_ptr
 tao_CORBA_LocalInterfaceDef_duplicate (
     CORBA_LocalInterfaceDef_ptr p
@@ -30101,7 +28001,7 @@
     return CORBA_LocalInterfaceDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_LocalInterfaceDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/LocalInterfaceDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_LocalInterfaceDef::_nil ());
       if (is_a == 0)
         return CORBA_LocalInterfaceDef::_nil ();
@@ -30152,288 +28052,134 @@
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &CORBA_LocalInterfaceDef::_narrow
-                    )
-                )
-          );
-}
-
-CORBA_LocalInterfaceDef_ptr
-CORBA_LocalInterfaceDef::_duplicate (CORBA_LocalInterfaceDef_ptr obj)
-{
-  if (!CORBA::is_nil (obj))
-    obj->_add_ref ();
-  return obj;
-}
-
-CORBA::Boolean CORBA_LocalInterfaceDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
-{
-  if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_LocalInterfaceDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_InterfaceDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Container:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Contained:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IDLType:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
-  return 1; // success using local knowledge
-  else
-    return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
-}
-
-void *CORBA_LocalInterfaceDef::_tao_QueryInterface (ptr_arith_t type)
-{
-  void *retv = 0;
-  if (type == ACE_reinterpret_cast
-    (ptr_arith_t,
-      &CORBA_LocalInterfaceDef::_narrow))
-    retv = ACE_reinterpret_cast (void*, this);
-  else if (type == ACE_reinterpret_cast
-    (ptr_arith_t,
-      &CORBA_InterfaceDef::_narrow))
-    retv = ACE_reinterpret_cast
-      (
-        void *,
-        ACE_static_cast
-          (
-            CORBA_InterfaceDef_ptr,
-            this
-          )
-      );
-  else if (type == ACE_reinterpret_cast
-    (ptr_arith_t,
-      &CORBA_Container::_narrow))
-    retv = ACE_reinterpret_cast
-      (
-        void *,
-        ACE_static_cast
-          (
-            CORBA_Container_ptr,
-            this
-          )
-      );
-  else if (type == ACE_reinterpret_cast
-    (ptr_arith_t,
-      &CORBA_Contained::_narrow))
-    retv = ACE_reinterpret_cast
-      (
-        void *,
-        ACE_static_cast
-          (
-            CORBA_Contained_ptr,
-            this
-          )
-      );
-  else if (type == ACE_reinterpret_cast
-    (ptr_arith_t,
-      &CORBA_IDLType::_narrow))
-    retv = ACE_reinterpret_cast
-      (
-        void *,
-        ACE_static_cast
-          (
-            CORBA_IDLType_ptr,
-            this
-          )
-      );
-  else if (type == ACE_reinterpret_cast
-    (ptr_arith_t,
-      &CORBA_IRObject::_narrow))
-    retv = ACE_reinterpret_cast
-      (
-        void *,
-        ACE_static_cast
-          (
-            CORBA_IRObject_ptr,
-            this
-          )
-      );
-  else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
-    retv = ACE_reinterpret_cast (void *,
-      ACE_static_cast (CORBA::Object_ptr, this));
-    
-  if (retv)
-    this->_add_ref ();
-  return retv;
-}
-
-const char* CORBA_LocalInterfaceDef::_interface_repository_id (void) const
-{
-  return "IDL:omg.org/CORBA_LocalInterfaceDef:1.0";
-}
-
-static const CORBA::Long _oc_CORBA_LocalInterfaceDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  40,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4c6f), 
-  ACE_NTOHL (0x63616c49), 
-  ACE_NTOHL (0x6e746572), 
-  ACE_NTOHL (0x66616365), 
-  ACE_NTOHL (0x4465663a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_LocalInterfaceDef:1.0
-  24,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4c6f), 
-  ACE_NTOHL (0x63616c49), 
-  ACE_NTOHL (0x6e746572), 
-  ACE_NTOHL (0x66616365), 
-  ACE_NTOHL (0x44656600),  // name = CORBA_LocalInterfaceDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_LocalInterfaceDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_LocalInterfaceDef),
-    (char *) &_oc_CORBA_LocalInterfaceDef,
-    0,
-    sizeof (CORBA_LocalInterfaceDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_LocalInterfaceDef =
-  &_tc_TAO_tc_CORBA_LocalInterfaceDef;
-
-void operator<<= (CORBA::Any &_tao_any, CORBA::PrimitiveKind _tao_elem)
-{
-  TAO_OutputCDR stream;
-  stream << _tao_elem;
-  _tao_any._tao_replace (
-      CORBA::_tc_PrimitiveKind,
-      TAO_ENCAP_BYTE_ORDER,
-      stream.begin ()
-    );
-}
-
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, CORBA::PrimitiveKind &_tao_elem)
-{
-  ACE_TRY_NEW_ENV
-  {
-    CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (CORBA::_tc_PrimitiveKind, ACE_TRY_ENV);
-    ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
-    TAO_InputCDR stream (
-        _tao_any._tao_get_cdr (),
-        _tao_any._tao_byte_order ()
-      );
-    if (stream >> _tao_elem)
-    {
-      return 1;
-    }
-  }
-  ACE_CATCHANY
-  {
-    return 0;
-  }
-  ACE_ENDTRY;
-  return 0;
-}
-
-void operator<<= (CORBA::Any &_tao_any, CORBA::AttributeMode _tao_elem)
-{
-  TAO_OutputCDR stream;
-  stream << _tao_elem;
-  _tao_any._tao_replace (
-      CORBA::_tc_AttributeMode,
-      TAO_ENCAP_BYTE_ORDER,
-      stream.begin ()
-    );
-}
-
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, CORBA::AttributeMode &_tao_elem)
-{
-  ACE_TRY_NEW_ENV
-  {
-    CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (CORBA::_tc_AttributeMode, ACE_TRY_ENV);
-    ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
-    TAO_InputCDR stream (
-        _tao_any._tao_get_cdr (),
-        _tao_any._tao_byte_order ()
-      );
-    if (stream >> _tao_elem)
-    {
-      return 1;
-    }
-  }
-  ACE_CATCHANY
-  {
-    return 0;
-  }
-  ACE_ENDTRY;
-  return 0;
+                      &CORBA_LocalInterfaceDef::_narrow
+                    )
+                )
+          );
 }
 
-void operator<<= (CORBA::Any &_tao_any, CORBA::OperationMode _tao_elem)
+CORBA_LocalInterfaceDef_ptr
+CORBA_LocalInterfaceDef::_duplicate (CORBA_LocalInterfaceDef_ptr obj)
 {
-  TAO_OutputCDR stream;
-  stream << _tao_elem;
-  _tao_any._tao_replace (
-      CORBA::_tc_OperationMode,
-      TAO_ENCAP_BYTE_ORDER,
-      stream.begin ()
-    );
+  if (!CORBA::is_nil (obj))
+    obj->_add_ref ();
+  return obj;
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, CORBA::OperationMode &_tao_elem)
-{
-  ACE_TRY_NEW_ENV
+CORBA::Boolean CORBA_LocalInterfaceDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
   {
-    CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (CORBA::_tc_OperationMode, ACE_TRY_ENV);
-    ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
+  if (
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/LocalInterfaceDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/InterfaceDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Container:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Contained:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IDLType:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
+  return 1; // success using local knowledge
+  else
+    return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
+}
     
-    TAO_InputCDR stream (
-        _tao_any._tao_get_cdr (),
-        _tao_any._tao_byte_order ()
-      );
-    if (stream >> _tao_elem)
+void *CORBA_LocalInterfaceDef::_tao_QueryInterface (ptr_arith_t type)
     {
-      return 1;
-    }
+  void *retv = 0;
+  if (type == ACE_reinterpret_cast
+    (ptr_arith_t,
+      &CORBA_LocalInterfaceDef::_narrow))
+    retv = ACE_reinterpret_cast (void*, this);
+  else if (type == ACE_reinterpret_cast
+    (ptr_arith_t,
+      &CORBA_InterfaceDef::_narrow))
+    retv = ACE_reinterpret_cast
+      (
+        void *,
+        ACE_static_cast
+          (
+            CORBA_InterfaceDef_ptr,
+            this
+          )
+      );
+  else if (type == ACE_reinterpret_cast
+    (ptr_arith_t,
+      &CORBA_Container::_narrow))
+    retv = ACE_reinterpret_cast
+      (
+        void *,
+        ACE_static_cast
+          (
+            CORBA_Container_ptr,
+            this
+          )
+      );
+  else if (type == ACE_reinterpret_cast
+    (ptr_arith_t,
+      &CORBA_Contained::_narrow))
+    retv = ACE_reinterpret_cast
+      (
+        void *,
+        ACE_static_cast
+          (
+            CORBA_Contained_ptr,
+            this
+          )
+      );
+  else if (type == ACE_reinterpret_cast
+    (ptr_arith_t,
+      &CORBA_IDLType::_narrow))
+    retv = ACE_reinterpret_cast
+      (
+        void *,
+        ACE_static_cast
+          (
+            CORBA_IDLType_ptr,
+            this
+          )
+      );
+  else if (type == ACE_reinterpret_cast
+    (ptr_arith_t,
+      &CORBA_IRObject::_narrow))
+    retv = ACE_reinterpret_cast
+      (
+        void *,
+        ACE_static_cast
+          (
+            CORBA_IRObject_ptr,
+            this
+          )
+      );
+  else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
+    retv = ACE_reinterpret_cast (void *,
+      ACE_static_cast (CORBA::Object_ptr, this));
+    
+  if (retv)
+    this->_add_ref ();
+  return retv;
   }
-  ACE_CATCHANY
+
+const char* CORBA_LocalInterfaceDef::_interface_repository_id (void) const
   {
-    return 0;
-  }
-  ACE_ENDTRY;
-  return 0;
+  return "IDL:omg.org/CORBA/LocalInterfaceDef:1.0";
 }
 
-void operator<<= (CORBA::Any &_tao_any, CORBA::ParameterMode _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, CORBA::PrimitiveKind _tao_elem)
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
   _tao_any._tao_replace (
-      CORBA::_tc_ParameterMode,
+      CORBA::_tc_PrimitiveKind,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin ()
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, CORBA::ParameterMode &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, CORBA::PrimitiveKind &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (CORBA::_tc_ParameterMode, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_PrimitiveKind, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -30462,7 +28208,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_Repository, 
+        CORBA::_tc_Repository, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -30479,7 +28225,7 @@
     _tao_elem = CORBA_Repository::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_Repository, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_Repository, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -30492,7 +28238,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_Repository,
+          CORBA::_tc_Repository,
           1,
           _tao_elem,
           CORBA_Repository::_tao_any_destructor
@@ -30523,7 +28269,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_ModuleDef, 
+        CORBA::_tc_ModuleDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -30540,7 +28286,7 @@
     _tao_elem = CORBA_ModuleDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ModuleDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ModuleDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -30553,7 +28299,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_ModuleDef,
+          CORBA::_tc_ModuleDef,
           1,
           _tao_elem,
           CORBA_ModuleDef::_tao_any_destructor
@@ -30583,7 +28329,7 @@
   TAO_OutputCDR stream;
   stream << _tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ModuleDescription,
+      CORBA::_tc_ModuleDescription,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin ()
     );
@@ -30594,7 +28340,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ModuleDescription,
+      CORBA::_tc_ModuleDescription,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -30615,7 +28361,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ModuleDescription, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ModuleDescription, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -30640,7 +28386,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_ModuleDescription,
+            CORBA::_tc_ModuleDescription,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_ModuleDescription::_tao_any_destructor
@@ -30667,7 +28413,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_ConstantDef, 
+        CORBA::_tc_ConstantDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -30684,7 +28430,7 @@
     _tao_elem = CORBA_ConstantDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ConstantDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ConstantDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -30697,7 +28443,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_ConstantDef,
+          CORBA::_tc_ConstantDef,
           1,
           _tao_elem,
           CORBA_ConstantDef::_tao_any_destructor
@@ -30727,7 +28473,7 @@
   TAO_OutputCDR stream;
   stream << _tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ConstantDescription,
+      CORBA::_tc_ConstantDescription,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin ()
     );
@@ -30738,7 +28484,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ConstantDescription,
+      CORBA::_tc_ConstantDescription,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -30759,7 +28505,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ConstantDescription, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ConstantDescription, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -30784,7 +28530,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_ConstantDescription,
+            CORBA::_tc_ConstantDescription,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_ConstantDescription::_tao_any_destructor
@@ -30811,7 +28557,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_StructDef, 
+        CORBA::_tc_StructDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -30828,7 +28574,7 @@
     _tao_elem = CORBA_StructDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_StructDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_StructDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -30841,7 +28587,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_StructDef,
+          CORBA::_tc_StructDef,
           1,
           _tao_elem,
           CORBA_StructDef::_tao_any_destructor
@@ -30872,7 +28618,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_UnionDef, 
+        CORBA::_tc_UnionDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -30889,7 +28635,7 @@
     _tao_elem = CORBA_UnionDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_UnionDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_UnionDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -30902,7 +28648,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_UnionDef,
+          CORBA::_tc_UnionDef,
           1,
           _tao_elem,
           CORBA_UnionDef::_tao_any_destructor
@@ -30933,7 +28679,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_EnumDef, 
+        CORBA::_tc_EnumDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -30950,7 +28696,7 @@
     _tao_elem = CORBA_EnumDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_EnumDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_EnumDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -30963,7 +28709,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_EnumDef,
+          CORBA::_tc_EnumDef,
           1,
           _tao_elem,
           CORBA_EnumDef::_tao_any_destructor
@@ -30994,7 +28740,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_AliasDef, 
+        CORBA::_tc_AliasDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -31011,7 +28757,7 @@
     _tao_elem = CORBA_AliasDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_AliasDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_AliasDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -31024,7 +28770,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_AliasDef,
+          CORBA::_tc_AliasDef,
           1,
           _tao_elem,
           CORBA_AliasDef::_tao_any_destructor
@@ -31055,7 +28801,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_NativeDef, 
+        CORBA::_tc_NativeDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -31072,7 +28818,7 @@
     _tao_elem = CORBA_NativeDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_NativeDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_NativeDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -31085,7 +28831,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_NativeDef,
+          CORBA::_tc_NativeDef,
           1,
           _tao_elem,
           CORBA_NativeDef::_tao_any_destructor
@@ -31116,7 +28862,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_PrimitiveDef, 
+        CORBA::_tc_PrimitiveDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -31133,7 +28879,7 @@
     _tao_elem = CORBA_PrimitiveDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_PrimitiveDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_PrimitiveDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -31146,7 +28892,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_PrimitiveDef,
+          CORBA::_tc_PrimitiveDef,
           1,
           _tao_elem,
           CORBA_PrimitiveDef::_tao_any_destructor
@@ -31177,7 +28923,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_StringDef, 
+        CORBA::_tc_StringDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -31194,7 +28940,7 @@
     _tao_elem = CORBA_StringDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_StringDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_StringDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -31207,7 +28953,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_StringDef,
+          CORBA::_tc_StringDef,
           1,
           _tao_elem,
           CORBA_StringDef::_tao_any_destructor
@@ -31238,7 +28984,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_WstringDef, 
+        CORBA::_tc_WstringDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -31255,7 +29001,7 @@
     _tao_elem = CORBA_WstringDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_WstringDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_WstringDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -31268,7 +29014,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_WstringDef,
+          CORBA::_tc_WstringDef,
           1,
           _tao_elem,
           CORBA_WstringDef::_tao_any_destructor
@@ -31299,7 +29045,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_SequenceDef, 
+        CORBA::_tc_SequenceDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -31316,7 +29062,7 @@
     _tao_elem = CORBA_SequenceDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_SequenceDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_SequenceDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -31329,7 +29075,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_SequenceDef,
+          CORBA::_tc_SequenceDef,
           1,
           _tao_elem,
           CORBA_SequenceDef::_tao_any_destructor
@@ -31360,7 +29106,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_ArrayDef, 
+        CORBA::_tc_ArrayDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -31377,7 +29123,7 @@
     _tao_elem = CORBA_ArrayDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ArrayDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ArrayDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -31390,7 +29136,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_ArrayDef,
+          CORBA::_tc_ArrayDef,
           1,
           _tao_elem,
           CORBA_ArrayDef::_tao_any_destructor
@@ -31421,7 +29167,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_ExceptionDef, 
+        CORBA::_tc_ExceptionDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -31438,7 +29184,7 @@
     _tao_elem = CORBA_ExceptionDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ExceptionDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ExceptionDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -31451,7 +29197,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_ExceptionDef,
+          CORBA::_tc_ExceptionDef,
           1,
           _tao_elem,
           CORBA_ExceptionDef::_tao_any_destructor
@@ -31481,7 +29227,7 @@
   TAO_OutputCDR stream;
   stream << _tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ExceptionDescription,
+      CORBA::_tc_ExceptionDescription,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin ()
     );
@@ -31492,7 +29238,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ExceptionDescription,
+      CORBA::_tc_ExceptionDescription,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -31513,7 +29259,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ExceptionDescription, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ExceptionDescription, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -31538,7 +29284,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_ExceptionDescription,
+            CORBA::_tc_ExceptionDescription,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_ExceptionDescription::_tao_any_destructor
@@ -31568,7 +29314,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_ExceptionDefSeq,
+        CORBA::_tc_ExceptionDefSeq,
         TAO_ENCAP_BYTE_ORDER,
         stream.begin ()
       );
@@ -31580,7 +29326,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ExceptionDefSeq,
+      CORBA::_tc_ExceptionDefSeq,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -31604,7 +29350,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ExceptionDefSeq, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ExceptionDefSeq, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -31629,7 +29375,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_ExceptionDefSeq,
+            CORBA::_tc_ExceptionDefSeq,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_ExceptionDefSeq::_tao_any_destructor
@@ -31659,7 +29405,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_ExcDescriptionSeq,
+        CORBA::_tc_ExcDescriptionSeq,
         TAO_ENCAP_BYTE_ORDER,
         stream.begin ()
       );
@@ -31671,7 +29417,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ExcDescriptionSeq,
+      CORBA::_tc_ExcDescriptionSeq,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -31695,7 +29441,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ExcDescriptionSeq, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ExcDescriptionSeq, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -31720,7 +29466,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_ExcDescriptionSeq,
+            CORBA::_tc_ExcDescriptionSeq,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_ExcDescriptionSeq::_tao_any_destructor
@@ -31741,13 +29487,53 @@
   return 0;
 }
 
+void operator<<= (CORBA::Any &_tao_any, CORBA::AttributeMode _tao_elem)
+{
+  TAO_OutputCDR stream;
+  stream << _tao_elem;
+  _tao_any._tao_replace (
+      CORBA::_tc_AttributeMode,
+      TAO_ENCAP_BYTE_ORDER,
+      stream.begin ()
+    );
+}
+
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, CORBA::AttributeMode &_tao_elem)
+{
+  ACE_TRY_NEW_ENV
+  {
+    CORBA::TypeCode_var type = _tao_any.type ();
+    
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_AttributeMode, ACE_TRY_ENV);
+    ACE_TRY_CHECK;
+    
+    if (!result)
+      return 0; // not equivalent
+    
+    TAO_InputCDR stream (
+        _tao_any._tao_get_cdr (),
+        _tao_any._tao_byte_order ()
+      );
+    if (stream >> _tao_elem)
+    {
+      return 1;
+    }
+  }
+  ACE_CATCHANY
+  {
+    return 0;
+  }
+  ACE_ENDTRY;
+  return 0;
+}
+
 void operator<<= (CORBA::Any &_tao_any, CORBA_AttributeDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_AttributeDef, 
+        CORBA::_tc_AttributeDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -31764,7 +29550,7 @@
     _tao_elem = CORBA_AttributeDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_AttributeDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_AttributeDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -31777,7 +29563,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_AttributeDef,
+          CORBA::_tc_AttributeDef,
           1,
           _tao_elem,
           CORBA_AttributeDef::_tao_any_destructor
@@ -31807,7 +29593,7 @@
   TAO_OutputCDR stream;
   stream << _tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_AttributeDescription,
+      CORBA::_tc_AttributeDescription,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin ()
     );
@@ -31818,7 +29604,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_AttributeDescription,
+      CORBA::_tc_AttributeDescription,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -31839,7 +29625,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_AttributeDescription, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_AttributeDescription, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -31864,7 +29650,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_AttributeDescription,
+            CORBA::_tc_AttributeDescription,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_AttributeDescription::_tao_any_destructor
@@ -31885,12 +29671,92 @@
   return 0;
 }
 
+void operator<<= (CORBA::Any &_tao_any, CORBA::OperationMode _tao_elem)
+{
+  TAO_OutputCDR stream;
+  stream << _tao_elem;
+  _tao_any._tao_replace (
+      CORBA::_tc_OperationMode,
+      TAO_ENCAP_BYTE_ORDER,
+      stream.begin ()
+    );
+}
+
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, CORBA::OperationMode &_tao_elem)
+{
+  ACE_TRY_NEW_ENV
+  {
+    CORBA::TypeCode_var type = _tao_any.type ();
+    
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_OperationMode, ACE_TRY_ENV);
+    ACE_TRY_CHECK;
+    
+    if (!result)
+      return 0; // not equivalent
+    
+    TAO_InputCDR stream (
+        _tao_any._tao_get_cdr (),
+        _tao_any._tao_byte_order ()
+      );
+    if (stream >> _tao_elem)
+    {
+      return 1;
+    }
+  }
+  ACE_CATCHANY
+  {
+    return 0;
+  }
+  ACE_ENDTRY;
+  return 0;
+}
+
+void operator<<= (CORBA::Any &_tao_any, CORBA::ParameterMode _tao_elem)
+{
+  TAO_OutputCDR stream;
+  stream << _tao_elem;
+  _tao_any._tao_replace (
+      CORBA::_tc_ParameterMode,
+      TAO_ENCAP_BYTE_ORDER,
+      stream.begin ()
+    );
+}
+
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, CORBA::ParameterMode &_tao_elem)
+{
+  ACE_TRY_NEW_ENV
+  {
+    CORBA::TypeCode_var type = _tao_any.type ();
+    
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ParameterMode, ACE_TRY_ENV);
+    ACE_TRY_CHECK;
+    
+    if (!result)
+      return 0; // not equivalent
+    
+    TAO_InputCDR stream (
+        _tao_any._tao_get_cdr (),
+        _tao_any._tao_byte_order ()
+      );
+    if (stream >> _tao_elem)
+    {
+      return 1;
+    }
+  }
+  ACE_CATCHANY
+  {
+    return 0;
+  }
+  ACE_ENDTRY;
+  return 0;
+}
+
 void operator<<= (CORBA::Any &_tao_any, const CORBA_ParameterDescription &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ParameterDescription,
+      CORBA::_tc_ParameterDescription,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin ()
     );
@@ -31901,7 +29767,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ParameterDescription,
+      CORBA::_tc_ParameterDescription,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -31922,7 +29788,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ParameterDescription, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ParameterDescription, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -31947,7 +29813,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_ParameterDescription,
+            CORBA::_tc_ParameterDescription,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_ParameterDescription::_tao_any_destructor
@@ -31977,7 +29843,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_ParDescriptionSeq,
+        CORBA::_tc_ParDescriptionSeq,
         TAO_ENCAP_BYTE_ORDER,
         stream.begin ()
       );
@@ -31989,7 +29855,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ParDescriptionSeq,
+      CORBA::_tc_ParDescriptionSeq,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -32013,7 +29879,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ParDescriptionSeq, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ParDescriptionSeq, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -32038,7 +29904,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_ParDescriptionSeq,
+            CORBA::_tc_ParDescriptionSeq,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_ParDescriptionSeq::_tao_any_destructor
@@ -32068,7 +29934,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_ContextIdSeq,
+        CORBA::_tc_ContextIdSeq,
         TAO_ENCAP_BYTE_ORDER,
         stream.begin ()
       );
@@ -32080,7 +29946,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ContextIdSeq,
+      CORBA::_tc_ContextIdSeq,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -32104,7 +29970,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ContextIdSeq, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ContextIdSeq, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -32129,7 +29995,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_ContextIdSeq,
+            CORBA::_tc_ContextIdSeq,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_ContextIdSeq::_tao_any_destructor
@@ -32156,7 +30022,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_OperationDef, 
+        CORBA::_tc_OperationDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -32173,7 +30039,7 @@
     _tao_elem = CORBA_OperationDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_OperationDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_OperationDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -32186,7 +30052,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_OperationDef,
+          CORBA::_tc_OperationDef,
           1,
           _tao_elem,
           CORBA_OperationDef::_tao_any_destructor
@@ -32216,7 +30082,7 @@
   TAO_OutputCDR stream;
   stream << _tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_OperationDescription,
+      CORBA::_tc_OperationDescription,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin ()
     );
@@ -32227,7 +30093,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_OperationDescription,
+      CORBA::_tc_OperationDescription,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -32248,7 +30114,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_OperationDescription, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_OperationDescription, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -32273,7 +30139,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_OperationDescription,
+            CORBA::_tc_OperationDescription,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_OperationDescription::_tao_any_destructor
@@ -32303,7 +30169,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_RepositoryIdSeq,
+        CORBA::_tc_RepositoryIdSeq,
         TAO_ENCAP_BYTE_ORDER,
         stream.begin ()
       );
@@ -32315,7 +30181,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_RepositoryIdSeq,
+      CORBA::_tc_RepositoryIdSeq,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -32339,7 +30205,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_RepositoryIdSeq, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_RepositoryIdSeq, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -32364,7 +30230,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_RepositoryIdSeq,
+            CORBA::_tc_RepositoryIdSeq,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_RepositoryIdSeq::_tao_any_destructor
@@ -32394,7 +30260,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_OpDescriptionSeq,
+        CORBA::_tc_OpDescriptionSeq,
         TAO_ENCAP_BYTE_ORDER,
         stream.begin ()
       );
@@ -32406,7 +30272,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_OpDescriptionSeq,
+      CORBA::_tc_OpDescriptionSeq,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -32430,7 +30296,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_OpDescriptionSeq, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_OpDescriptionSeq, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -32455,7 +30321,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_OpDescriptionSeq,
+            CORBA::_tc_OpDescriptionSeq,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_OpDescriptionSeq::_tao_any_destructor
@@ -32485,7 +30351,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_AttrDescriptionSeq,
+        CORBA::_tc_AttrDescriptionSeq,
         TAO_ENCAP_BYTE_ORDER,
         stream.begin ()
       );
@@ -32497,7 +30363,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_AttrDescriptionSeq,
+      CORBA::_tc_AttrDescriptionSeq,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -32521,7 +30387,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_AttrDescriptionSeq, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_AttrDescriptionSeq, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -32546,7 +30412,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_AttrDescriptionSeq,
+            CORBA::_tc_AttrDescriptionSeq,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_AttrDescriptionSeq::_tao_any_destructor
@@ -32573,7 +30439,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_InterfaceDef, 
+        CORBA::_tc_InterfaceDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -32590,7 +30456,7 @@
     _tao_elem = CORBA_InterfaceDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_InterfaceDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_InterfaceDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -32603,7 +30469,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_InterfaceDef,
+          CORBA::_tc_InterfaceDef,
           1,
           _tao_elem,
           CORBA_InterfaceDef::_tao_any_destructor
@@ -32716,7 +30582,7 @@
   TAO_OutputCDR stream;
   stream << _tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_InterfaceDescription,
+      CORBA::_tc_InterfaceDescription,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin ()
     );
@@ -32727,7 +30593,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_InterfaceDescription,
+      CORBA::_tc_InterfaceDescription,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -32748,7 +30614,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_InterfaceDescription, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_InterfaceDescription, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -32773,7 +30639,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_InterfaceDescription,
+            CORBA::_tc_InterfaceDescription,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_InterfaceDescription::_tao_any_destructor
@@ -32800,7 +30666,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_AbstractInterfaceDef, 
+        CORBA::_tc_AbstractInterfaceDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -32817,7 +30683,7 @@
     _tao_elem = CORBA_AbstractInterfaceDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_AbstractInterfaceDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_AbstractInterfaceDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -32830,7 +30696,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_AbstractInterfaceDef,
+          CORBA::_tc_AbstractInterfaceDef,
           1,
           _tao_elem,
           CORBA_AbstractInterfaceDef::_tao_any_destructor
@@ -32861,7 +30727,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_LocalInterfaceDef, 
+        CORBA::_tc_LocalInterfaceDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -32878,7 +30744,7 @@
     _tao_elem = CORBA_LocalInterfaceDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_LocalInterfaceDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_LocalInterfaceDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -32891,7 +30757,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_LocalInterfaceDef,
+          CORBA::_tc_LocalInterfaceDef,
           1,
           _tao_elem,
           CORBA_LocalInterfaceDef::_tao_any_destructor
@@ -33451,11 +31317,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
@@ -33498,11 +31359,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
@@ -33581,11 +31437,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
@@ -33628,11 +31479,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
@@ -33711,11 +31557,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
@@ -33758,11 +31599,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
@@ -33805,11 +31641,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
