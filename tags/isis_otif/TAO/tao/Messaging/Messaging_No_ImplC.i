// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html


// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ci.cpp:68

#if !defined (_MESSAGING_REBINDPOLICY___CI_)
#define _MESSAGING_REBINDPOLICY___CI_

ACE_INLINE
CORBA::Boolean
Messaging::RebindPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RebindPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RebindPolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RebindPolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_structure.cpp:194

// *************************************************************
// Inline operations for class Messaging::PriorityRange_var
// *************************************************************

ACE_INLINE
Messaging::PriorityRange_var::PriorityRange_var (void)
  : ptr_ (0)
{}

ACE_INLINE
Messaging::PriorityRange_var::PriorityRange_var (PriorityRange *p)
  : ptr_ (p)
{}

ACE_INLINE
Messaging::PriorityRange_var::PriorityRange_var (const ::Messaging::PriorityRange_var &p)
{
  if (p.ptr_)
    {
      ACE_NEW (this->ptr_, ::Messaging::PriorityRange (*p.ptr_));
    }
  else
    {
      this->ptr_ = 0;
    }
}

// Fixed-size types only.
ACE_INLINE
Messaging::PriorityRange_var::PriorityRange_var (const ::Messaging::PriorityRange &p)
{
  ACE_NEW (this->ptr_, ::Messaging::PriorityRange (p));
}

ACE_INLINE
Messaging::PriorityRange_var::~PriorityRange_var (void)
{
  delete this->ptr_;
}

ACE_INLINE
Messaging::PriorityRange_var &
Messaging::PriorityRange_var::operator= (PriorityRange *_tao_struct_var)
{
  delete this->ptr_;
  this->ptr_ = _tao_struct_var;
  return *this;
}

ACE_INLINE
::Messaging::PriorityRange_var &
Messaging::PriorityRange_var::operator= (const ::Messaging::PriorityRange_var &_tao_struct_var)
{
  if (this != &_tao_struct_var)
    {
      if (_tao_struct_var.ptr_ == 0)
        {
          delete this->ptr_;
          this->ptr_ = 0;
        }
      else
        {
          PriorityRange *deep_copy = 0;
          ACE_NEW_RETURN (
              deep_copy,
              PriorityRange (*_tao_struct_var.ptr_),
              *this
            );
          
          if (deep_copy != 0)
            {
              PriorityRange *tmp = deep_copy;
              deep_copy = this->ptr_;
              this->ptr_ = tmp;
              delete deep_copy;
            }
        }
    }
  
  return *this;
}

// fixed-size types only
ACE_INLINE Messaging::PriorityRange_var &
Messaging::PriorityRange_var::operator= (const ::Messaging::PriorityRange &p)
{
  if (this->ptr_ != &p)
  {
    delete this->ptr_;
    ACE_NEW_RETURN (
        this->ptr_,
        ::Messaging::PriorityRange (p),
        *this
      );
  }
  
  return *this;
}

ACE_INLINE const ::Messaging::PriorityRange *
Messaging::PriorityRange_var::operator-> (void) const
{
  return this->ptr_;
}

ACE_INLINE ::Messaging::PriorityRange *
Messaging::PriorityRange_var::operator-> (void)
{
  return this->ptr_;
}

ACE_INLINE
Messaging::PriorityRange_var::operator const ::Messaging::PriorityRange &() const // cast
{
  return *this->ptr_;
}

ACE_INLINE
Messaging::PriorityRange_var::operator ::Messaging::PriorityRange &() // cast 
{
  return *this->ptr_;
}

ACE_INLINE
Messaging::PriorityRange_var::operator ::Messaging::PriorityRange &() const // cast 
{
  return *this->ptr_;
}

ACE_INLINE const ::Messaging::PriorityRange &
Messaging::PriorityRange_var::in (void) const
{
  return *this->ptr_;
}

ACE_INLINE ::Messaging::PriorityRange &
Messaging::PriorityRange_var::inout (void)
{
  return *this->ptr_;
}

// mapping for fixed size 
ACE_INLINE ::Messaging::PriorityRange &
Messaging::PriorityRange_var::out (void)
{
  return *this->ptr_;
}

ACE_INLINE ::Messaging::PriorityRange
Messaging::PriorityRange_var::_retn (void)
{
  return *this->ptr_;
}

ACE_INLINE ::Messaging::PriorityRange *
Messaging::PriorityRange_var::ptr (void) const
{
  return this->ptr_;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ci.cpp:68

#if !defined (_MESSAGING_REQUESTPRIORITYPOLICY___CI_)
#define _MESSAGING_REQUESTPRIORITYPOLICY___CI_

ACE_INLINE
CORBA::Boolean
Messaging::RequestPriorityPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestPriorityPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestPriorityPolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestPriorityPolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ci.cpp:68

#if !defined (_MESSAGING_REPLYPRIORITYPOLICY___CI_)
#define _MESSAGING_REPLYPRIORITYPOLICY___CI_

ACE_INLINE
CORBA::Boolean
Messaging::ReplyPriorityPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyPriorityPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyPriorityPolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyPriorityPolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ci.cpp:68

#if !defined (_MESSAGING_REQUESTSTARTTIMEPOLICY___CI_)
#define _MESSAGING_REQUESTSTARTTIMEPOLICY___CI_

ACE_INLINE
CORBA::Boolean
Messaging::RequestStartTimePolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestStartTimePolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestStartTimePolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestStartTimePolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ci.cpp:68

#if !defined (_MESSAGING_REQUESTENDTIMEPOLICY___CI_)
#define _MESSAGING_REQUESTENDTIMEPOLICY___CI_

ACE_INLINE
CORBA::Boolean
Messaging::RequestEndTimePolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestEndTimePolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestEndTimePolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestEndTimePolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ci.cpp:68

#if !defined (_MESSAGING_REPLYSTARTTIMEPOLICY___CI_)
#define _MESSAGING_REPLYSTARTTIMEPOLICY___CI_

ACE_INLINE
CORBA::Boolean
Messaging::ReplyStartTimePolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyStartTimePolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyStartTimePolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyStartTimePolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ci.cpp:68

#if !defined (_MESSAGING_REPLYENDTIMEPOLICY___CI_)
#define _MESSAGING_REPLYENDTIMEPOLICY___CI_

ACE_INLINE
CORBA::Boolean
Messaging::ReplyEndTimePolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyEndTimePolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyEndTimePolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyEndTimePolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ci.cpp:68

#if !defined (_MESSAGING_RELATIVEREQUESTTIMEOUTPOLICY___CI_)
#define _MESSAGING_RELATIVEREQUESTTIMEOUTPOLICY___CI_

ACE_INLINE
CORBA::Boolean
Messaging::RelativeRequestTimeoutPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RelativeRequestTimeoutPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RelativeRequestTimeoutPolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RelativeRequestTimeoutPolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_structure.cpp:194

// *************************************************************
// Inline operations for class Messaging::RoutingTypeRange_var
// *************************************************************

ACE_INLINE
Messaging::RoutingTypeRange_var::RoutingTypeRange_var (void)
  : ptr_ (0)
{}

ACE_INLINE
Messaging::RoutingTypeRange_var::RoutingTypeRange_var (RoutingTypeRange *p)
  : ptr_ (p)
{}

ACE_INLINE
Messaging::RoutingTypeRange_var::RoutingTypeRange_var (const ::Messaging::RoutingTypeRange_var &p)
{
  if (p.ptr_)
    {
      ACE_NEW (this->ptr_, ::Messaging::RoutingTypeRange (*p.ptr_));
    }
  else
    {
      this->ptr_ = 0;
    }
}

// Fixed-size types only.
ACE_INLINE
Messaging::RoutingTypeRange_var::RoutingTypeRange_var (const ::Messaging::RoutingTypeRange &p)
{
  ACE_NEW (this->ptr_, ::Messaging::RoutingTypeRange (p));
}

ACE_INLINE
Messaging::RoutingTypeRange_var::~RoutingTypeRange_var (void)
{
  delete this->ptr_;
}

ACE_INLINE
Messaging::RoutingTypeRange_var &
Messaging::RoutingTypeRange_var::operator= (RoutingTypeRange *_tao_struct_var)
{
  delete this->ptr_;
  this->ptr_ = _tao_struct_var;
  return *this;
}

ACE_INLINE
::Messaging::RoutingTypeRange_var &
Messaging::RoutingTypeRange_var::operator= (const ::Messaging::RoutingTypeRange_var &_tao_struct_var)
{
  if (this != &_tao_struct_var)
    {
      if (_tao_struct_var.ptr_ == 0)
        {
          delete this->ptr_;
          this->ptr_ = 0;
        }
      else
        {
          RoutingTypeRange *deep_copy = 0;
          ACE_NEW_RETURN (
              deep_copy,
              RoutingTypeRange (*_tao_struct_var.ptr_),
              *this
            );
          
          if (deep_copy != 0)
            {
              RoutingTypeRange *tmp = deep_copy;
              deep_copy = this->ptr_;
              this->ptr_ = tmp;
              delete deep_copy;
            }
        }
    }
  
  return *this;
}

// fixed-size types only
ACE_INLINE Messaging::RoutingTypeRange_var &
Messaging::RoutingTypeRange_var::operator= (const ::Messaging::RoutingTypeRange &p)
{
  if (this->ptr_ != &p)
  {
    delete this->ptr_;
    ACE_NEW_RETURN (
        this->ptr_,
        ::Messaging::RoutingTypeRange (p),
        *this
      );
  }
  
  return *this;
}

ACE_INLINE const ::Messaging::RoutingTypeRange *
Messaging::RoutingTypeRange_var::operator-> (void) const
{
  return this->ptr_;
}

ACE_INLINE ::Messaging::RoutingTypeRange *
Messaging::RoutingTypeRange_var::operator-> (void)
{
  return this->ptr_;
}

ACE_INLINE
Messaging::RoutingTypeRange_var::operator const ::Messaging::RoutingTypeRange &() const // cast
{
  return *this->ptr_;
}

ACE_INLINE
Messaging::RoutingTypeRange_var::operator ::Messaging::RoutingTypeRange &() // cast 
{
  return *this->ptr_;
}

ACE_INLINE
Messaging::RoutingTypeRange_var::operator ::Messaging::RoutingTypeRange &() const // cast 
{
  return *this->ptr_;
}

ACE_INLINE const ::Messaging::RoutingTypeRange &
Messaging::RoutingTypeRange_var::in (void) const
{
  return *this->ptr_;
}

ACE_INLINE ::Messaging::RoutingTypeRange &
Messaging::RoutingTypeRange_var::inout (void)
{
  return *this->ptr_;
}

// mapping for fixed size 
ACE_INLINE ::Messaging::RoutingTypeRange &
Messaging::RoutingTypeRange_var::out (void)
{
  return *this->ptr_;
}

ACE_INLINE ::Messaging::RoutingTypeRange
Messaging::RoutingTypeRange_var::_retn (void)
{
  return *this->ptr_;
}

ACE_INLINE ::Messaging::RoutingTypeRange *
Messaging::RoutingTypeRange_var::ptr (void) const
{
  return this->ptr_;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ci.cpp:68

#if !defined (_MESSAGING_ROUTINGPOLICY___CI_)
#define _MESSAGING_ROUTINGPOLICY___CI_

ACE_INLINE
CORBA::Boolean
Messaging::RoutingPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RoutingPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RoutingPolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RoutingPolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ci.cpp:68

#if !defined (_MESSAGING_MAXHOPSPOLICY___CI_)
#define _MESSAGING_MAXHOPSPOLICY___CI_

ACE_INLINE
CORBA::Boolean
Messaging::MaxHopsPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::MaxHopsPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::MaxHopsPolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::MaxHopsPolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ci.cpp:68

#if !defined (_MESSAGING_QUEUEORDERPOLICY___CI_)
#define _MESSAGING_QUEUEORDERPOLICY___CI_

ACE_INLINE
CORBA::Boolean
Messaging::QueueOrderPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::QueueOrderPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::QueueOrderPolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

template<>
ACE_INLINE
CORBA::Boolean
TAO::Any_Impl_T<Messaging::QueueOrderPolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/cdr_op_ci.cpp:103

ACE_INLINE
CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Messaging::PriorityRange &_tao_aggregate
  )
{
  if (
    (strm << _tao_aggregate.min) &&
    (strm << _tao_aggregate.max)
   )
    {
      return 1;
    }
  else
    {
      return 0;
    }
}

ACE_INLINE
CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Messaging::PriorityRange &_tao_aggregate
  )
{
  if (
    (strm >> _tao_aggregate.min) &&
    (strm >> _tao_aggregate.max)
   )
    {
      return 1;
    }
  else
    {
      return 0;
    }
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/cdr_op_ci.cpp:103

ACE_INLINE
CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Messaging::RoutingTypeRange &_tao_aggregate
  )
{
  if (
    (strm << _tao_aggregate.min) &&
    (strm << _tao_aggregate.max)
   )
    {
      return 1;
    }
  else
    {
      return 0;
    }
}

ACE_INLINE
CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Messaging::RoutingTypeRange &_tao_aggregate
  )
{
  if (
    (strm >> _tao_aggregate.min) &&
    (strm >> _tao_aggregate.max)
   )
    {
      return 1;
    }
  else
    {
      return 0;
    }
}

