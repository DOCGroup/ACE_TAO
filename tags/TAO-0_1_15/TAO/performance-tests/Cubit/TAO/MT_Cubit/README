The MT-Cubit example
--------------------

Compiling
---------

Makefile is provided. Use make to compile.

You can either run the server in the background in the same window as
the client or open a separate window for the client and server.

server:
-------

./server -p <port_num> -h <my_hostname> -t <number_of_servants>

port_num is the port number at which the server will start the first
(and highest priority) servant. Successive servants (with successively
lower priorities) will be created starting at (port_num+1). The -n
parameter specifies the total number of servants.

The server will print the IOR of the servants, but it is not required
by the client.

client:
-------

./client [-ORBobjrefstyle url] 
	 [-p <port_num>]
 	 [-h <server_hostname>]
         [-d <datatype>]
	 [-n <num_calls>]
 	 [-t <num_of_clients>]
	 [-r]

[-ORBobjrefstyle url]  Makes the IOR appear in URL format instead 
   of that ugly number sequence format.

<port_num> is the port number of the highest priority servant and
   should be the same as the port_num supplied to the server, as
   described earlier. The lower priority servant is assumed to be at
   (port_num+1).

<server_hostname> is the hostname of the server.

   Based on the server_hostname and the port_num, the client
   automatically constructs the IOR's for the servants

<datatype> is one of the following:

   0 Octet
   1 Short
   2 Long
   3 Struct of the above 3 types

<num_calls> is the number of CORBA twoway calls to be made

<num_of_clients> is the total number of concurrent clients to be
   created. The clients will have successively decreasing
   priorities. 

[-r] this option can be used to turn on the thread-per-rate tests.

[-o] enables oneway calls instead of two-way calls.  The oneway call 
   is a noop call (for now).

[-x] makes the client call the shutdown() method on the servant which 
   invokes the shutdown() method on the ORB and causes it to exit.

Results
-------

The client prints the latency observed by the high priority client,
and the average latency observed by the low priority clients. Jitter
(standard deviation of the latency) is also printed by the client.
