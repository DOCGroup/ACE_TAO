Wed Feb 19 12:52:06 2003  Heather Drury  <oci@cs.wustl.edu>

        * TAO version 1.3.1 released.

Mon Feb 17 15:37:47 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

	* tests/RTCORBA/Persistent_IOR/client.bor: Linked the client with
	  RTCORBA library to get the static constructors in so that they
	  can do its job.

Mon Feb 17 15:26:32 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

	* tests/RTCORBA/MT_Client_Protocol_Priority/client.conf: This file
	  missed the previous checkin somehow. Adding this file to the
	  repo.

Mon Feb 17 09:09:54 2003  Heather Drury  <drury_h@ociweb.com>

        * orbsvcs/orbsvcs/LoadBalancing/LB_IORInterceptor.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_IORInterceptor.cpp: Fixed
	  compile error that was happening because the base class
	  signature for establish_components() did not match the derived
	  class method signature.

Sat Feb 15 10:14:08 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * examples/RTCORBA/Activity/Activity.h: Fixed compile errors in
          builds where exceptions have been turned off.

Fri Feb 14 21:12:22 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_module.cpp:

          Changed a misapplied static_cast to const_cast.

Fri Feb 14 18:27:09 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_decl.cpp:
        * TAO_IDL/ast/ast_module.cpp:
        * TAO_IDL/include/ast_module.h:

          Fixes for an error in IDL_Test, where recent changes to the
          IDL compiler induced an error in typeprefix handling, and
          a bug reported by Will Christhof <Will.Christhof@krones.de>
          in #pragma prefix handling.

        * TAO_IDL/util/utl_scope.cpp:

          Cosmetic fix.

        * tests/IDL_Test/main.cpp:

          Changed error reporting and handling to allow multiple
          errors to be reported in one run, and to allow the ORB
          and POA to clean up at exit whether there have been errors
          or not.

Fri Feb 14 14:37:55 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_predefined_type.cpp (compute_repoID):

          Fixed function to catch a reference to CORBA::Object
          in an IDL file. The repository ID must be handled as
          a special case, since this node type is not looked up
          in the AST.

        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:

          Fixed incorrect typecode generation for members of type
          CORBA::Object. Thanks to Ferran Boladeres Salvadó <bds@iis.fhg.de>
          for sending in the example code that uncovered the bug.

Fri Feb 14 18:39:01 UTC 2003  Craig Rodrigues  <crodrigu@bbn.com>

        * tao/RTCORBA/RT_ORBInitializer.cpp:
          If you do:
          ACE_DEBUG((LM_DEBUG, "%p" ));
          to print errno, then that is wrong and will crash.

          You need to do:
          ACE_DEBUG((LM_DEBUG, "%p", "somestring"));
          I've changed things to be consistent:
          ACE_DEBUG((LM_DEBUG, "errno: %d %m", errno));

Fri Feb 14 09:12:12 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tests/RTCORBA/MT_Client_Protocol_Priority/client.conf: New file
          with the scheduling policy information for the client.

        * tests/RTCORBA/MT_Client_Protocol_Priority/server.conf: Added the
          scheduling policy information for the server.

        * tests/RTCORBA/MT_Client_Protocol_Priority/run_test.pl: Sript now
          use the above configuration files when running the test.

        * tests/RTCORBA/MT_Client_Protocol_Priority/svc.conf: Removed from
          the repository.

Fri Feb 14 08:35:14 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * examples/RTCORBA/Activity/Activity.cpp: Fixed compile errors in
          builds where exceptions have turned off. Thanks to Pradeep Gore
          for sending the patches.

Fri Feb 14 12:02:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/catior/Makefile.bor:
          Fixed this BCB makefile

Thu Feb 13 19:30:55 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tests/RTCORBA/Persistent_IOR/Makefile: Linked the client with
          RTCORBA library.

Thu Feb 13 15:15:29 2003  Priyanka Gontla  <pgontla@ociweb.com>

        * tao/MCAST_Parser.cpp (multicast_query):
          Modified the diagnostic message that Craig added with the
          changelog entry

          Wed Feb 12 00:45:04 UTC 2003  Craig Rodrigues <crodrigu@bbn.com>

          to reflect the actual service name instead of being NameService
          always. Added a service_name check to print out the NameService
          related debugging message if it is indeed NameService.

        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:
          A change which I did a while ago seemed to be missing. Nanbor
          applied the relevant fixes for Windows. Removing the ifdefs
          around the same code so that even for non-windows, the whole
          hostname including the domain is used.


Thu Feb 13 17:45:35 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * utils/catior/Makefile: Do not build if RTCORBA is turned off.

Thu Feb 13 17:41:37 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tests/RTCORBA/Profile_And_Endpoint_Selection/svc.conf: Added the
          scheduling policy to the configuration file.

Thu Feb 13 16:35:24 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tests/Exposed_Policies/svc.conf: Configuration file for
          scheduling policy.

Thu Feb 13 13:32:50 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * utils/catior/catior.dsp: Fixed the debug and release configurations.

Thu Feb 13 14:21:43 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * utils/catior/catior.cpp: Fixed warnings and errors on various
          platforms.

Thu Feb 13 12:43:27 2003  Pradeep Gore  <pradeep@oomworks.com>

        * examples/RTCORBA/Activity/Periodic_Task.h:
        * examples/RTCORBA/Activity/Thread_Task.cpp:
        * examples/RTCORBA/Activity/Thread_Task.h:
          Added missing code to convert CORBA priority to native priority
          when activating the thread task.

          Made the following changes to get the example running in the
          autobuilds:
        * examples/RTCORBA/Activity/run_test.pl:
          This runs a simple test of the activity example. This test is
          meant to be run in non-root mode.
        * examples/RTCORBA/Activity/Activity.cpp:
        * examples/RTCORBA/Activity/Activity.h:
          - Added code to obtain the Priority Mapping Manager.
          - Added a "-Started_Flag <file_name> " option. When an activity instance
          completes its setup, it generates a file to signal the perl
          script that it has finished initialization.
        * examples/RTCORBA/Activity/README:
          Added a new section on the new command-line option.
        * examples/RTCORBA/Activity/server.conf:
        * examples/RTCORBA/Activity/client.conf:
          These conf files are read by run_test.pl to make a sanity check
          on the activity program.

Thu Feb 13 10:30:56 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_module.cpp:

          Fixed an error in comparing the prefixes of a module and a previous
          opening of that module. The error appears only when the previous
          module opening is in an included IDL file, and the IDL compiler
          is executed from a subdirectory of the one where the IDL files
          are located. Thanks to Will Christof <Will.Christof@krones.de>
          for reporting the bug and for providing the example IDL files and
          build conditions. This closes [BUGID:1442].

Wed Feb 12 14:58:46 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/IIOP_Transport.cpp: Methods tear_listen_point_list () and
          get_listen_point () accessed the connection_handler without any
          protection and violated the protocol that was set in pre-1.2
          timeframe.

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp: Same changes as
          above. This code needs refactoring.

        * tao/Transport.h: Cosmetic fix.

Wed Feb 12 12:32:57 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tests/RTCORBA/Client_Protocol/svc.conf:
        * tests/RTCORBA/Server_Protocol/server_iiop.conf:
        * tests/RTCORBA/Server_Protocol/server_reverse.conf:
        * tests/RTCORBA/Server_Protocol/server_reverse_nt.conf:
        * tests/RTCORBA/Server_Protocol/server_shmiop.conf:
        * tests/RTCORBA/Server_Protocol/server_uiop.conf:  Added
          scheduling policy information to the above configuration
          files. This should fix the problems that shows up in our daily
          builds.

Wed Feb 12 12:14:13 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * utils/catior/catior.cpp: Fixed a warning in g++ builds.

Wed Feb 12 00:45:04 UTC 2003  Craig Rodrigues <crodrigu@bbn.com>

        * tao/MCAST_Paser.cpp: Add improved diagnostic message when
          locating NameService via multicast fails.

Wed Feb 12 00:19:58 UTC 2003  Craig Rodrigues <crodrigu@bbn.com>

        * tao/RTCORBA/Linear_Priority_Mapping.cpp (to_CORBA):
          Unconditionally display error message upon priority mapping failure.
        * tao/RTCORBA/RT_Protocol_Hooks.cpp: Display errno value and message
          if setting the native thread priority fails.
        * tao/RTCORBA/RT_ORBInitiializer.h:
          Create a new class member variable sched_policy_flags_.
          The value of sched_policy_flags_ is a bitmask value that can be one of
          THR_SCHED_RR, THR_SCHED_FIFO, THR_SCHED_DEFAULT, etc.
          sched_policy_flags_ value is stored in the
          TAO_ORB_Core TAO_ORB_Parameters structure.
          In TAO_Thread_Lane::create_dynamic_threads(), the sched_policy_flags_
          is passed to the ACE_Task_Base::activate() call for creating new
          threads for a RTCORBA thread pool.

          sched_policy_ is an integer value that can be one of
          ACE_SCHED_RR, ACE_SCHED_FIFO, ACE_SCHED_OTHER, etc.  This value
          can be passed directly to the newly modified ACE_OS::thr_setpriority()
          call.  For POSIX pthreads, this value maps directly to the
          policy parameter of the pthread_setschedparam() call.
          ACE_SCHED_* values can also be passed directly to ACE_Sched_Params
          for determining the minimum and maximum priority value for a particular
          policy.

        * tao/RTCORBA/RT_ORBInitiializer.cpp:
          Change all assignments of sched_policy_ variable to use
          ACE_SCHED_* values and not THR_SCHED_* values.
          In the TAO_RT_ORBInitializer constructor, set sched_policy_flags_
          to the appropriate THR_SCHED_* values depending on what ACE_SCHED_*
          value is specified.

          In TAO_RT_ORBInitializer::pre_init(), pass sched_policy_flags_
          to orb_core()->orb_params()->sched_policy(), since this value
          will be later used in the activate() call in
          TAO_Thread_Lane::create_dynamic_threads().

          At the end of TAO_RT_ORBInitializer::pre_init(), set the policy
          of the ACE_Thread::self() to the policy specified by -ORBSchedPolicy, and
          set the priority of ACE_Thread::self() to the lowest priority
          of the specified policy.  If this is not done, then errors will
          occur on Linux, because the default policy in ACE_OS::thr_setprio()
          is 0 (which maps to SCHED_OTHER), which will cause strange errors
          when the scheduling policy is set to something else, like SCHED_RR.

          Since the return value of ACE_OS::thr_getprio() can be invalid for
          a given policy, ie. 0 is valid for SCHED_OTHER, but invalid for
          SCHED_RR, I then decided to set the priority to the minimum
          priority of the policy/scheduling class.

          In addition, in RTPortableServer's
          TAO_RT_Servant_Dispatcher::post_invoke() function, the priority
          of the thread will be reset to what it was before the invocation.
          This means that on platforms which use pthread_setschedparam(),
          the initial priority and policy of the thread need to be
          set to acceptable initial values, otherwise CORBA::DATA_CONVERSION
          errors will be thrown in this TAO_RT_Servant_Dispatcher::post_invoke().

Tue Feb 11 13:58:23 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * orbsvcs/vc7_orbsvcs.mwc: Added this temporary file that
          specifies nightly VC7 build targets under orbsvcs.

        * tao/tao.mpc: Added LF_Invocation_Event.cpp and LF_CH_Event.cpp.

Tue Feb 11 12:48:12 UTC 2003  Gautam Thaker  <gthaker@atl.lmco.com>

        * utils/catior/catior.cpp:
        * utils/catior/Makefile:
          Modified catior to better print Priority Model Policy.
          Required changes to Makefile to now link wiht RTCORBA which
          should be ok since RT CORBA is built by default. Did not
          wish to have two versions of catior pgm, or some conditional
          compiles.

Tue Feb 11 07:11:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DLL_ORB/client.bor:
        * tests/DLL_ORB/server.bor:
          Fixed errors in these BCB makefiles.

Mon Feb 10 17:12:30 2003  Otis Nyandoro <o.nyandoro@ee.wits.ac.za>

        * tests/RTCORBA/check_supported_priorities.cpp: Changed the
          function to take in a ORB pointer. The function now queries the
          ORB to get the scheduling policy in place before checking the
          priority levels. Using SCHED_OTHER as it was done before doesnt
          work well on Linux and it was broken.

        * tests/RTCORBA/Banded_Connections/client.cpp:
        * tests/RTCORBA/Banded_Connections/server.cpp:
        * tests/RTCORBA/Client_Propagated/client.cpp:
        * tests/RTCORBA/Client_Propagated/server.cpp:
        * tests/RTCORBA/Collocation/Collocation.cpp:
        * tests/RTCORBA/Destroy_Thread_Pool/Destroy_Thread_Pool.cpp:
        * tests/RTCORBA/Explicit_Binding/client.cpp:
        * tests/RTCORBA/Explicit_Binding/server.cpp:
        * tests/RTCORBA/Linear_Priority/client.cpp:
        * tests/RTCORBA/Linear_Priority/server.cpp:
        * tests/RTCORBA/MT_Client_Protocol_Priority/client.cpp:
        * tests/RTCORBA/MT_Client_Protocol_Priority/server.cpp:
        * tests/RTCORBA/ORB_init/ORB_init.cpp:
        * tests/RTCORBA/Persistent_IOR/client.cpp:
        * tests/RTCORBA/Persistent_IOR/server.cpp:
        * tests/RTCORBA/Policy_Combinations/client.cpp:
        * tests/RTCORBA/Policy_Combinations/server.cpp:
        * tests/RTCORBA/Private_Connection/client.cpp:
        * tests/RTCORBA/Private_Connection/server.cpp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/client.cpp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/server.cpp:
        * tests/RTCORBA/RTMutex/server.cpp:
        * tests/RTCORBA/Server_Declared/client.cpp:
        * tests/RTCORBA/Server_Declared/server.cpp:
        * tests/RTCORBA/Server_Protocol/client.cpp:
        * tests/RTCORBA/Server_Protocol/server.cpp:
        * tests/RTCORBA/Thread_Pool/client.cpp:
        * tests/RTCORBA/Thread_Pool/server.cpp: We now do a check on
          supported priorities after the ORB is initialized.

        * tests/RTCORBA/Banded_Connections/svc.conf:
        * tests/RTCORBA/Explicit_Binding/svc.conf:
        * tests/RTCORBA/Linear_Priority/svc.conf:
        * tests/RTCORBA/Policy_Combinations/svc.conf: Added scheduling
          policy to all the configurations.

        * tests/RTCORBA/Client_Propagated/svc.conf:
        * tests/RTCORBA/Collocation/svc.conf:
        * tests/RTCORBA/Destroy_Thread_Pool/svc.conf:
        * tests/RTCORBA/MT_Client_Protocol_Priority/svc.conf:
        * tests/RTCORBA/ORB_init/svc.conf:
        * tests/RTCORBA/Persistent_IOR/svc.conf:
        * tests/RTCORBA/Policies/svc.conf:
        * tests/RTCORBA/Private_Connection/svc.conf:
        * tests/RTCORBA/RTMutex/svc.conf:
        * tests/RTCORBA/Server_Declared/svc.conf:
        * tests/RTCORBA/Server_Protocol/svc.conf:
        * tests/RTCORBA/Thread_Pool/svc.conf: New files added with
          scheduling information. This is not perfect for all cases, but a
          good starting point for the bug reports that showed up about
          RTCORBA on Linux.

          We need to relook into stressing these tests after 1.3.1 using
          multiple scheduling policies. We have very less time to within
          the short timeframe available.

Mon Feb 10 19:28:43 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Makefile.bor:
          Added AMH_Oneway directory

Fri Feb  7 14:04:59 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:

          Added a check, when iterating through inherited operations
          and attributes, for the existence of an attribute or
          operation subsection in each parent, before trying to
          read the number of operations or attributes the parent
          has. If an interface has no operations, the operations
          ACE_Configuration subsection will not have been created,
          likewise for attributes. Thanks to Matej Sekoranja
          <matej.sekoranja@ijs.si> for pointing out the potential bug.

Thu Feb  6 16:47:02 2003  Mayur Deshpande  <mayur@ics.uci.edu>

        * tests/AMH_Oneway
        * tests/AMH_Oneway/AMH_Oneway.dsw
        * tests/AMH_Oneway/Makefile
        * tests/AMH_Oneway/Makefile.bor
        * tests/AMH_Oneway/Test.idl
        * tests/AMH_Oneway/client.bor
        * tests/AMH_Oneway/client.cpp
        * tests/AMH_Oneway/client.dsp
        * tests/AMH_Oneway/run_test.pl
        * tests/AMH_Oneway/server.bor
        * tests/AMH_Oneway/server.cpp
        * tests/AMH_Oneway/server.dsp
        * tao/PortableServer/AMH_Response_Handler.cpp:

          Test to test Oneways and AMH. Client make 10 calls. Servers
          counts the calls. Before thr fix, the server hung and this
          generated an error mesg when the perl script (run_test.pl) ran.

Thu Feb 06 18:35:05 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/orbsvcs/Notify/Proxy_T.h:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushSupplier.h:

          Added the patch from Bruce MacDonald <brucemac@netcomuk.co.uk> to get
          Notification compiling on VC7/.NET

Wed Feb  5 12:10:08 2003  Mayur Deshpande  <mayur@ics.uci.edu>

        * tao/PortableServer/AMH_Response_Handler.cpp:

          Added fix so that oneways work with AMH. Because of semantics of
          oneways, the client doesn't expect any reply. The RH doesn't
          know this and thinking that a RH is being destroyed before being
          sent, it tries to send a exception to the client. This hangs the
          server. The current fix handles oneways separately and doesn't
          try and be 'intelligent' in the RH destruction process (and
          doesn't try and send an exception to the cleint). Thanks to
          Andrey Nechypurenko@mchp <Andrey.Nechypurenko@mchp.siemens.de>
          for reporting a problem that led to uncovering of this
          problem. Thanks to Balachandran Natarajan
          <bala@isis-server.isis.vanderbilt.edu> for the suggestion to
          retrieve the state from Server_Request to differentiate oneways.

Wed Feb  5 13:34:44 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp (create_attribute):

          Changed the behavior to eliminate the creation of a corresponding
          repository entry for the operations asssociated with an
          attribute in the C++ mapping. On the backend, this mainly affects
          describe_interface(). Since the latter operation's return type,
          CORBA::FullInterfaceDescription, contains fields for both
          attributes and operations, it doesn't seem necessary to include
          the _get_* and _set_* operations in the operation list. It also
          seems that this behavior will make the TAO IFR more
          iteroperable with IFRs from other ORB vendors. Thanks to
          Matej Sekoranja <matej.sekoranja@ijs.si> for pointing this out.

Wed Feb  5 10:02:10 2003  Ossama Othman  <ossama@uci.edu>

        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Monitor.cpp (loads):

          Removed "ACE_OS::" scope modifier from fscanf() call.  fscanf()
          doesn't exist in that scope.  Fixes compile-time problems
          revealed by some compilers.  Thanks to Matthias Blankenhaus
          <matthias@ingrian.com> for reporting the problem.

Wed Feb  5 10:59:16 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_enum/enum_cs.cpp:

          Added a missing check for typecode support before generating
          the typecode for an enum. Thanks to Mario Hofmann
          <Mario.Hofmann@SystemaGmbH.de> for reporting the bug.

Wed Feb  5 09:44:33 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/ORT/Gateway_i.cpp:
          Renamed local variable interface to target_interface to resolve
          clash with MingW interface macro.

Wed Feb  5 08:51:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/PSS/PSDL_Node_Visitor.cpp:
        * orbsvcs/PSS/PSDL_Scope_Visitor.cpp:
          Renamed the argument of the visit_interface() method from
          interface to interf. The MingW compiler has a macro defined
          interface and this causes problems, so renamed the argument
          name to fix compile errors with MingW.

Tue Feb  4 13:23:51 2003  Krishnakumar B  <kitty@cs.wustl.edu>

        * tao/Makefile: Fix the Makefile to use the SUBDIR_MAKEFILE
          variable when recursing into directories.

Sun Feb 02 21:01:12 2003  Frank Hunleth  <frank@hunleth.com>

        * orbsvcs/tests/Miop/McastHello/run_test.pl: Fixed a race condition
          in the test script that could sometime cause the client to send
          its requests before the second server starts.  This occurs under
          WinXP when using the Microsoft Loopback Adapter.  Thanks to
          Wolfgang Schroeder <cpp_kurs@arcor.de> for the configuration.

Sun Feb  2 13:05:12 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Collocation/Makefile.impl:
        * tests/Collocation/Makefile.stub:
          Set the correct x_BUILD_DLL define. This is needed for the
          Cygwin/MingW and Kylix compiler.

Sat Feb  1 09:03:55 2003  Ossama Othman  <ossama@uci.edu>

        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Monitor.cpp (loads):

          Added missing completion status argument to CORBA:NO_IMPLEMENT
          constructor call.  Fixes compile-time problems for some
          compilers (e.g. egcs 1.1.2).  Thanks to Matthias Blankenhaus
          <matthias@ingrian.com> for reporting the problem.

Fri Jan 31 17:07:20 2003  Pradeep Gore  <pradeep@oomworks.com>

        Fix for crash in Notify due to race condition in the Worker Task
        shutdown. This crash showed up on the SunOS_Forte build.

        * orbsvcs/orbsvcs/Notify/Worker_Task.h:
          The is a Refcountable object now.

        * orbsvcs/orbsvcs/Notify/Reactive_Task.cpp:
        * orbsvcs/orbsvcs/Notify/Reactive_Task.h:
          Modifications for Refcounting support.

        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.cpp:
        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.h:
          Instead of relying on the thread count, the <close> method
          decrements the count on the Task Object.

        * orbsvcs/orbsvcs/Notify/Object.cpp:
          Apply refcounting to Task objects.

Fri Jan 31 14:25:07 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connection_Handler.cpp: Fixed a
          unused warning in the daily builds. Thanks to Heather Drury for
          letting me know.

Fri Jan 31 07:47:32 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/IFR_Service/IFR_Service.mpc:
          Add missing dllflags

        * orbsvcs/IFR_Service/Makefile.BE:
          Set the correct x_BUILD_DLL define. This is needed for the
          Cygwin/MingW and Kylix compiler.

        * TAO_IDL/Makefile.BE:
        * TAO_IDL/Makefile.FE:
          Adding missing ACE_AS_STATIC_LIBS when building statically

Thu Jan 30 17:30:04 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/IIOP_Connection_Handler.cpp:
        * tao/IIOP_Connection_Handler.h: Added a new protected constructor
          that can be used by the derived classes. This constructor just
          initializes itself and its base classes without initializing the
          transport. This is needed since the derived classes may want to
          initialize its own version of the transport.

        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connection_Handler.cpp: Use the
          new constructor to initialize the base class.

          This fixes [BUG 1421]. Thanks to Jon Reis and Wayne Erchak for
          reporting the problem.

Thu Jan 30 10:40:16 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be_include/be_visitor_context.h:

          If there is a system macro defined called 'interface', which
          there is on some versions of MingW, redefine
          it around the declaration of class be_visitor_context, which
          contains a method by that name. Thanks to Johnny Willemsem
          <jwillemsem@remedy.nl> for sending in the patch.

Thu Jan 30 07:03:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Makefile.RTOLDEvent
          Set the correct x_BUILD_DLL define. This is needed for the
          Cygwin/MingW and Kylix compiler.

        * orbsvcs/Makefile.DsNotifyLogAdmin:
          Fixed incorrect x_BUILD_DLL dllflag

Wed Jan 29 12:43:06 2003  Frank Hunleth  <frank@hunleth.com>

        * tao/ORB_Core.{cpp,h}:  Encapsulated all static members of
          TAO_ORB_Core into a TAO_ORB_Core_Static_Resources singleton.  By
          accessing all of these variables through the singleton, this
          alleviates the constructor call ordering problem inwhich
          constructors in other compliation units (a.k.a some TAO shared
          libraries) are called before those in TAO_ORB_Core and modify
          the TAO_ORB_Core static variables before they are constructed.
          This caused segfaults when it happened, and seemed to affect
          OpenBSD the most.

          Note that this change is selfcontained and does not affect any
          other classes.

Wed Jan 29 12:15:31 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tests/Bug_1361_Regression/run_test.pl: Reduced the number of
          iterations  that this test runs. Removed -ORBdebuglevel from teh
          scripts. This was used for debugging purposes long back.

        * tests/Bug_1361_Regression/Server_Thread_Pool.cpp: Removed a
          debug statement where we print exceptions. This is expected in
          this test.

Tue Jan 28 15:59:45 2003  Priyanka Gontla  <pgontla@ece.uci.edu>

        * docs/Options.html:
          Added documentation on support to ORBListenEndpoints, ORBId and
          ORBServerId  ORB options.

Tue Jan 28 16:07:21 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be_include/be_interface.h:

          Delayed the check for abstract interfaces in the
          ancestry of a non-abstract interface until just before
          the knowledge is needed for the first time in code
          generation. This corrects a problem with forward
          declared interfaces whose full definition member has
          not yet been replaced by its final value. Thanks to
          Michael Soden <soden@ikv.de> for reporting the
          problem.

Tue Jan 28 14:27:01 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/orbsvcs/Notify/Properties.cpp:
          In case no conf. file is specified, the EC will default to
          reactive concurrency.  This fixes the problem of the Notify
          crashing without any conf. file. Thanks to Dennis Sporcic
          <dennis@hsa.com.au> and Frederic Langlet
          <Frederic.Langlet@alcatel.com> for reporting this problem.

Mon Jan 27 23:01:43 2003  Frank Hunleth  <frank@hunleth.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:  Fixed code
          that was supposed to fake out a good error return when the call
          to send() fails.  This fixes an exception break on WinXP when
          the network cable is unplugged and a program makes a MIOP
          request.  The justification behide ignoring the error is
          explained further in the code, but basically, it takes advantage
          of the fact that MIOP is unreliable by specification, and hopes
          that the source of the error will be corrected.  Thanks to
          Antonio Leonforte <a.leonforte@mclink.it> for pointing out the
          exception break.

Mon Jan 27 19:16:33 2003  Pradeep Gore  <pradeep@oomworks.com>

        Made the following changes to fix the race related crashes of
        Notify seen in orbsvcs/tests/Notify/performance-tests/RedGreen -

        * orbsvcsy/orbsvcs/Notify/Builder.cpp:
          Added a refcount on each parent object per child object.
          This way the parent is always alive when the child is destroyed.
          When the child is destroyed, the parent count is decremented.
          The ensures a bottom-up destruction of the Notify object tree.

        * orbsvcs/orbsvcs/Notify/Object.cpp:
        * orbsvcs/orbsvcs/Notify/Object.h:
          Made the TAO_NS_Object class a TAO_NS_Refcountable. Moved the
          <has_shutdown> method to this class from TAO_NS_Object_T.
          The <shutdown> method sets the <shutdown_> flag atomically.
          It returns 1 if this object has been shutdown already. All
          derived classes should consult the TAO_NS_Object::shutdown
          method's return value to determine if the shutdown should
          proceed in case of multiple calls to shutdown.

        * orbsvcs/orbsvcs/Notify/Object_T.cpp:
        * orbsvcs/orbsvcs/Notify/Object_T.h:
          Decrement the count on this Objects parent in the destructor.
          Changed the signature of destroy similar to <shutdown> to avoid
          multiple destoy's.

        * orbsvcs/orbsvcs/Notify/Container_T.cpp:
        * orbsvcs/orbsvcs/Notify/Container_T.h:
          The <collection_> owned by the Container is destroyed in the
          <shutdown> method now. The releases the reference count on child
          objects.

        * orbsvcs/orbsvcs/Notify/EventChannel.cpp:
        * orbsvcs/orbsvcs/Notify/EventChannelFactory.cpp:
          The <destroy> method checks the return value of base destroy
          method before proceeding.

        * orbsvcs/orbsvcs/Notify/Event_Map_Entry_T.cpp:
        * orbsvcs/orbsvcs/Notify/Event_Map_Entry_T.h:
        * orbsvcs/orbsvcs/Notify/Event_Map_Entry_T.inl:
          Made the Event_Map_Entry a refcounted object.
          The <usage_count_> member is incremented when the <find> method
          returns a suitable entry.
          The caller is responsible for decrementing the count when it no
          longer needs the entry.

        * orbsvcs/orbsvcs/Notify/Event_Map_T.cpp:
        * orbsvcs/orbsvcs/Notify/Event_Map_T.h:
        * orbsvcs/orbsvcs/Notify/Event_Map_T.inl:
          <find> method now returns the entry (from which the collection
          can be obtained).
          The <remove> method decrements the count on the entry instead of
          deleteting it.

        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.cpp:
          Obtains the correct map entry and uses the collection in that
          entry. The map is released when it is done using it.
          Note that the map pointer is guaranteed to be valid because the
          Lookup object holds a reference count to the proxy that holds a
          count on its parent and so on up to the EventChannel. The
          EventChannel only destroys the Event_manager in its destructor.

        * orbsvcs/orbsvcs/Notify/Notify_Service.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Service.h:
          Added a fake <_decr_refcnt> to satisfy the template requirements
          from TAO_NS_Object_T. This will be rectified in future revisions.

        * orbsvcs/orbsvcs/Notify/ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.h:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.cpp:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.h:
          Modified the <shutdown> implementation to follow the checks as
          described above.

        * orbsvcs/orbsvcs/Notify/Timer.h:
        * orbsvcs/orbsvcs/Notify/Timer_Reactor.cpp:
        * orbsvcs/orbsvcs/Notify/Timer_Reactor.h:
          Made the Timer a refcounted object.

        * orbsvcs/orbsvcs/Notify/Timer_Queue.cpp:
        * orbsvcs/orbsvcs/Notify/Timer_Queue.h:
          Added an <impl> method to obtain the timer implementation.

        * orbsvcs/orbsvcs/Notify/Worker_Task.h:
          Removed the <init> method which is not required here.

        * orbsvcs/orbsvcs/Notify/Reactive_Task.cpp:
        * orbsvcs/orbsvcs/Notify/Reactive_Task.h:
          Added an <init> method in which the Reactor based timer is
          allocated.

        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.cpp:
        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.h:
          The Timer Queue is allocated in the <init> method.

        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.cpp:
          Because the timer is now refcounted, we must release it on
          shutdown.

Mon Jan 27 17:36:51 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:

          Added missing switch case that prevented tao_ifr from
          recognizing the element type of sequence<Object> in
          an IDL file. Thanks to Andrey Nechypurenko@mchp
          <Andrey.Nechypurenko@mchp.siemens.de> for sending in
          the example IDL file that uncovered the problem.

Mon Jan 27 16:47:31 2003  Frank Hunleth  <frank@hunleth.com>

        * orbsvcs/tests/Miop/McastHello/run_test.pl: Fixed incorrect
          reference to $SV in error handling code.  Thanks to Craig
          Rodrigues for pointing this out.

Mon Jan 27 09:48:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/RTCorba/Multiple_Endpoints/Common/Common.mpc:
          Add missing dllflags

        * performance-tests/RTCorba/Multiple_Endpoints/Common/Makefile:
          Set the correct x_BUILD_DLL defines. These are needed for the
          Cygwin/MingW and Kylix compiler.

Sun Jan 26 17:29:34 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Leader_Follower.cpp (wait_for_event): Set LFS_TIMEOUT on the
          LF_Event only if the follower timesout. The follower could
          return with a -1 from wait () even if errors other than timeout
          occurs, like connection closure and such.

        * tao/LF_CH_Event.cpp: Added a comment

Sun Jan 26 17:23:22 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Notify_Handler.cpp (TAO_Notify_Handler):
        * tao/Notify_Handler.h:

          - Added a new constructor and a create_handler () method which
            takes in a transport and the ACE_HANDLE that this handler would
            be used for.

          - Deprecating the old create_handler () and the constructor.
            They have been left there for backward compatibility.

          The above changes were made to get around a problem that Yakov
          Becker and Johnny Willemsen observed in one of their
          applications. We havent been able to reproduce the problem here
          at all. The gist of the problem is

           - A server thread after buffering lots of incoming messages
             starts processing one of the messages. Keeping the handle
             suspended it wakes up another thread in the Reactor.

           - The first thread after processing the request tries to write
             a reply only to find the socket closed. It starts the
             cleanup and disassociates the transport and the handler. So
             far so good.

           - The second thread that is woken up now tries to get to the
             handler and then to the transport to process the queued
             messages. But the transport is already disassociated from the
             handler and the assert fails.

           We address this problem by using the transport as the mechanism
           to process messages instead of the handler. The above changes
           were made to accomodate the change in philosophy.

         * tao/Transport.cpp: Used the new method to create the
           Notify_Handler.

Sat Jan 25 18:10:10 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * orbsvcs/tests/Security/MT_IIOP_SSL/Makefile: Fixed dependencies.
        * orbsvcs/tests/Security/MT_IIOP_SSL/test_i.cpp: Cosmetic fixes.
        * orbsvcs/tests/Security/Makefile: Added the new file to the DIRS
          section.

Sat Jan 25 17:55:10 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * orbsvcs/tests/Security/MT_IIOP_SSL/client.dsp:
        * orbsvcs/tests/Security/MT_IIOP_SSL/server.dsp: Added necessary
          libraries for linking.

Sat Jan 25 18:55:47 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * orbsvcs/tests/Security/MT_IIOP_SSL/test_i.h: Fixed a compilation error.

Sat Jan 25 18:50:32 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Transport_Cache_Manager.cpp (close_i): Avoid totally
          unaesthetic temporaries  in the for loop.

Sat Jan 25 18:30:27 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * orbsvcs/tests/Security/MT_IIOP_SSL: A multi-threaded stress test
          for IIOP_SSL which basically provides a insecure path for
          communication incase an SSL connection cannot be setup. This
          will also serve as a stress test for BUG 1421.

Sat Jan 25 18:06:51 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Transport_Cache_Manager.h:
        * tao/Transport_Cache_Manager.inl: Added an accessor for the hash
          map used inside the Cache_Manager. Useful for writing regression
          tests as we will demonstrate shortly in a test.

Fri Jan 24 11:42:57 2003  Boris S Kolpackov  <boris@isis-server.isis.vanderbilt.edu>

        * orbsvcs/tests/Security/Crash_Test/run_test.pl: fixed yet another
          possible race conditions.

Fri Jan 24 10:59:49 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_interface_strategy.cpp:
        * TAO_IDL/util/utl_identifier.cpp:
        * TAO_IDL/util/utl_stack.cpp:

          Changed some deletes of strings to use either delete []
          or ACE::strdelete(), to eliminate some complaints from
          Linux valgrind. Thanks to Craig Rodrigues <crodrigu@bbn.com>
          for reporting the problem and for sending in patches.

Fri Jan 24 09:04:28 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/fe_interface_header.cpp:

          Fixed a bug in error-checking the inheritance of abstract
          interfaces. Thanks to Michael Soden <soden@ikv.de> for
          reporting the IDL compiler's incorrect error message.

Fri Jan 24 08:23:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.cpp:
        * orbsvcs/orbsvcs/AV/MCast.cpp:
        * orbsvcs/orbsvcs/AV/RTP.cpp:
        * orbsvcs/orbsvcs/AV/TCP.cpp:
        * orbsvcs/orbsvcs/AV/UDP.cpp:
          Use ACE_IOV_MAX instead of IOV_MAX. IOV_MAX is defined as
          MAX_INT-1 with Cygwn and this gives compiles errors because
          an array as struct member of this size is too large.

        * orbsvcs/orbsvcs/ESF/ESF_Worker.h:
          Fixed type in comment

        * orbsvcs/PSS/Makefile.datastore:
        * orbsvcs/PSS/Makefile:
        * orbsvcs/orbsvcs/Makefile.RTEventLogAdmin:
        * orbsvcs/orbsvcs/Makefile.DsNotifyLogAdmin:
        * orbsvcs/orbsvcs/Makefile.DsLogAdmin:
        * orbsvcs/orbsvcs/Makefile.DsEventLogAdmin:
          Set the correct x_BUILD_DLL defines. These are needed for the
          Cygwin/MingW and Kylix compiler.

Thu Jan 23 18:29:03 2003  Heather Drury  <drury_h@ociweb.com>

        * tests/MT_Timeout/client.cpp: Modified ACE_DEBUG to
          print a warning instead of an error when "Too many
          calls have too big differences..."

Thu Jan 23 16:31:28 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/include/idl_global.h:

          Fixed a bug in the clearing of a #pragma prefix directive
          at the end of an indirectly included IDL file, based on an
          example set of five IDL files sent in by
          John Fletcher <john.fletcher@rd.bbc.co.uk>

Thu Jan 23 11:30:04 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orsbvcs/IFRService/Container_i.cpp (store_label):

          Changed a static cast from ulonglong to u_int to use
          ACE_U64_TO_U32. Thanks to Rob Andzik <andzik@rtlogic.com>
          for reporting the problem on VxWorks and Carlos O'Ryan
          <coryan@atdesk.com> for pointing out the fix.

Thu Jan 23 10:54:23 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicAny/DynCommon.cpp (get_reference):

          Fixed memory leak. Thanks to Grigory <grig@plesk.com> for
          reporting the bug.

Wed Jan 22 14:56:22 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Invocation.cpp (invoke_i): Unbind the dispatcher instead of
          setting the state in the Bind_Dispatcher_Guard. Improves code
          readability.

Wed Jan 22 11:08:57 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * tao/Messaging/Messaging_Policy_i.cpp (hook): Fixed debug message
          so that it actually printed out milliseconds rather than the
          microsecond component expressed as milliseconds.

Wed Jan 22 17:03:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
          Use ACE_IOV_MAX instead of IOV_MAX. IOV_MAX is defined as
          MAX_INT-1 with Cygwn and this gives compiles errors because
          an array as struct member of this size is too large.

Wed Jan 22 16:34:32 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Makefile.RTCORBAEvent:
        * orbsvcs/orbsvcs/Makefile.RTSchedEvent:
          Set the correct x_BUILD_DLL defines. These are needed for the
          Cygwin/MingW and Kylix compiler.

Tue Jan 21 15:31:46 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/lex.yy.cpp:

          Modified code handling #pragma version directive to handle
          the case where one or more of the spaces between the words
          in the directive contains a tab. Thanks to Dima Scub
          <dima_scub@sniip.ru> for reporting the bug. This closes
          [BUGID:1425].

        * TAO_IDL/fe/idl.ll:

          Changed the file that generates lex.yy.cpp to reflect the
          change above.

Tue Jan 21 19:28:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * Makefile.av:
        * Makefile.CosLoadBalancing:
          Set the correct x_BUILD_DLL defines. These are needed for the
          Cygwin/MingW and Kylix compiler.

Tue Jan 21 10:38:48 2003  Boris S Kolpackov  <boris@isis-server.isis.vanderbilt.edu>

        * orbsvcs/tests/Security/Crash_Test/run_test.pl: fixed few
          race conditions.

Mon Jan 20 18:46:17 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * orbsvcs/ImplRepo_Service/README.txt (ImplRepoService): Fixed
          incorrect usages of InitRef ID ImplRepo_Service which should
          really be ImplRepoService.

        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp (run):
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp (init): On Win32,
          changed to use ACE_OS::hostname to get the "machine name" and
          then use the name to acquire the full DNS name of the machine.
          Without this extra step, ImpoRepo uses the all-caps, short form
          name of the machine, which causes a mismatch with the incoming
          corbaloc endpoint name.  Perhaps ACE_OS::hostname needs to be
          fixed on Win32 to return.  These changes allow ImplRepo to
          startup correctly on Win32.

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp (server_is_running):
          The following change seemed to be missing for some reason.
          Figured out what to do and fixed it.

        Mon Nov 11 09:28:43 2002  Priyanka Gontla  <pgontla@ociweb.com>

                * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:
                  Get the whole hostname name including the domain instead
                  of just the hostname.
                  Thanks to Kobi Cohen-Arazi <kobi@mivzak.com> for pointing
                  out a exception thats raised.


Mon Jan 20 18:05:26 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/LF_Connect_Strategy.cpp: Removed debugging statements that
          needed access to the transport object. The transport object
          could dissappear even before the thread gets to this point  and
          it is only chaos after that.

        * tao/IIOP_Connector.cpp:
        * tao/Strategies/UIOP_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp (make_connection):
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp: Added debugging
          statements to make up for the loss from the above change.

        * tao/Leader_Follower.cpp: Added comments and also made sure that
          we access the transport object only when debugging is turned on.

          Thanks to Duane Binder for sharing his purify logs from his runs
          that he ran for a long time (which wouldnt have been possible at
          all for us)

Mon Jan 20 16:42:34 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Muxed_TMS.cpp (bind_dispatcher): Added a lock to synchronize
          acces to the map. It *was* initially thought that
          synchronization will not be required since we always believed
          that only one thread could be active in the map. This is *not*
          true since a thread could be accessing the transport from the
          invocation side whereas another thread could be accessing the
          transport and the map underneath from the LF. This is really
          really bad.

Mon Jan 20 13:32:30 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * orbsvcs/ImplRepo_Service/README.txt: Fixed a broken HTML tag.

Mon Jan 20 19:20:32 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Makefile.ETCL:
        * orbsvcs/orbsvcs/Makefile.FaultTolerance:
        * orbsvcs/orbsvcs/Makefile.FTORB:
        * orbsvcs/orbsvcs/Makefile.IFRService:
        * orbsvcs/orbsvcs/Makefile.PortableGroup:
        * orbsvcs/orbsvcs/Makefile.RTEvent:
        * orbsvcs/orbsvcs/Makefile.RTSched:
        * orbsvcs/orbsvcs/Makefile.Security:
        * orbsvcs/orbsvcs/Makefile.Svc_Utils:
          Set the correct x_BUILD_DLL defines. These are needed for the
          Cygwin/MingW and Kylix compiler.

Mon Jan 20 12:03:03 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicInterface/Request.cpp:

          Fixed a bug in poll_response(). Thanks to Jaroslaw Nozderko
          <jarek@eko.net.pl> for reporting it.

Mon Jan 20 08:00:44 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Connection_Handler.cpp: Removed multiple inclusions of an
          header.

Mon Jan 20 10:00:22 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Makefile.CosTrading:
        * orbsvcs/orbsvcs/Makefile.CosTime:
        * orbsvcs/orbsvcs/Makefile.CosProperty:
          Set the correct x_BUILD_DLL defines. These are needed for the
          Cygwin/MingW and Kylix compiler.

Sun Jan 19 16:56:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Makefile.CosConcurrency:
        * orbsvcs/orbsvcs/Makefile.CosEvent:
        * orbsvcs/orbsvcs/Makefile.CosLifeCycle:
        * orbsvcs/orbsvcs/Makefile.CosNaming:
        * orbsvcs/orbsvcs/Makefile.CosNotification:
          Set the correct x_BUILD_DLL defines. These are needed for the
          Cygwin/MingW and Kylix compiler.

Sat Jan 18 12:07:14 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/Properties.cpp: Fixed my fix by removing
        a #define I used to test the fix.

Sat Jan 18 10:40:58 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/orbconf.h: Added TAO_RD_TABLE_SIZE and set the value to be
          16.

        * tao/Muxed_TMS.cpp:
        * tao/Muxed_TMS.h: Used the TAO_RD_TABLE_SIZE to configure the
          internal hash map. This is now hard coded. We should have a way
          for the user to configure the size of these hash maps and it will
          be integrated after 1.3.2.

Sat Jan 18 09:08:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/Makefile.BE:
        * TAO_IDL/Makefile.FE:
        * tao/Domain/Makefile:
        * tao/RTCORBA/Makefile:
        * tao/RTPortableServer/Makefile:
        * tao/TypeCodeFactory/Makefile:
          Set the correct x_BUILD_DLL defines. These are needed for the
          Cygwin/MingW and Kylix compiler.

Fri Jan 17 14:22:48 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/Properties.cpp: Fixed explicit
        instantiation to instantiate TAO_Singleton rather than
        ACE_Singleton.  This fixes the RH71_Explicit_Templates build.

Fri Jan 17 08:34:57 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.h: Removed an extra
          ';'. This may nor may not help the Borland builds.

Thu Jan 16 17:24:30 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/orbsvcs/Notify/ETCL_FilterFactory.cpp:
        * orbsvcs/orbsvcs/Notify/ETCL_FilterFactory.h:
          Make the FilterFactory a RefCounted servant.
          This allows us to cleanup this object when the ChannelFactory
          dies.

        * orbsvcs/orbsvcs/NotifyExt.idl:
        * orbsvcs/orbsvcs/Notify/EventChannelFactory.cpp:
        * orbsvcs/orbsvcs/Notify/EventChannelFactory.h:
          Extend the ChannelFactory interface to include a destroy method.
          This allows us to check for memory leaks using a tool like
          purify when the channel factory is destroyed.

        * orbsvcs/orbsvcs/Notify/EventType.cpp:
        * orbsvcs/orbsvcs/Notify/EventType.h:
        * orbsvcs/orbsvcs/Notify/EventTypeSeq.cpp:
        * orbsvcs/orbsvcs/Notify/EventTypeSeq.h:
          Made the <dump> methods const.

        * orbsvcs/orbsvcs/Notify/Object.cpp:
        * orbsvcs/orbsvcs/Notify/Object_T.cpp:
        * orbsvcs/orbsvcs/Notify/Object_T.h:
          The <shutdown_> flag is now set in the Object_T::destroy method.
          Note that if multiple threads that encounter dispatch failure
          try to destroy the proxy object, only the first one will run the
          destroy method, others will check for the shutdown flag and
          return. This fixes the random crashes in some of the Linux
          builds on the scoreboard (orbsvcs/tests/Notify/MT_Dispatching).

        * orbsvcs/orbsvcs/Notify/Proxy.cpp:
        * orbsvcs/orbsvcs/Notify/Proxy.h:
          Changed the <subscribed_types> method to return a copy of the
          curent subscriptions. This method has been corrected to be
          thread safe.

        * orbsvcs/orbsvcs/Notify/Peer.cpp:
          Changed to new usage of Proxy::subscribed_types.

        * orbsvcs/orbsvcs/Notify/Properties.h:
          Use TAO_Singleton instead of ACE_Singleton.

Thu Jan 16 16:27:59 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

       * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.{h,cpp}: Added patches from
         this checkin "Mon Oct 28 18:21:18 CET 2002  Oliver Kellogg
         <oliver.kellogg@sysde.eads.net>". The patches mysteriously
         dissappeared. Thanks to Oliver Kellogg for alerting me.

Thu Jan 16 13:25:10 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/rtcorba/features.html: Fixed obsolete references to the
          location of various priority mapping source files.

Thu Jan 16 12:29:00 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * COPYING: Extended the validity of the copyright notice from 2002
          to 2003. Should have been done yesterday.., anyway, better late
          than never.

Thu Jan 16 10:52:07 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/smart_proxy_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/smart_proxy_cs.cpp:

          In the generated TAO_*_Proxy_Factory_Adapter class,
          changed signatures of register_proxy_factory() and
          unregister_proxy_factory() to return void. Error
          reporting through return type is not necessary, since
          native exceptions or an environment variable are
          already used, and there is no code in either of these
          methods that sets the return value to anything other
          than 0. Although the methods are public, the class
          itself has a protected constructor, and the methods
          are intended for TAO internal use only.
          This closes [BUGID:844].

Wed Jan 15 18:02:49 2003  Bala  <bala@cs.wustl.edu>

        * TAO version 1.3 released.

Tue Jan 14 22:11:14 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tests/Crashed_Callback/client.dsp:
        * tests/Crashed_Callback/server.dsp:
        * tests/MProfile_Connection_Timeout/client.dsp:
        * tests/MT_Timeout/MT_Timeout_Client.dsp:
        * tests/MT_Timeout/MT_Timeout_Server.dsp: Fixed the release
          configurations.

Tue Jan 14 20:46:40 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tests/Crashed_Callback/client.dsp:
        * tests/Crashed_Callback/server.dsp: Fixed the release build
          configuration. Thanks to Nanbor for pointing this out.

Tue Jan 14 16:37:15 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tests/Stack_Recursion/server.dsp: Adding this file to the repo.

Tue Jan 14 16:37:44 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * orbsvcs/tests/Security/Crash_Test/run_test.pl: The timeout was
          adjusted.

Tue Jan 14 15:10:53 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_args.cpp:

          Added a check and graceful exit for the case where the -H command
          line option is not followed by a selection (i.e., is followed by
          another dash-prefixed command line option or by nothing). The case
          where the selection exists but is invalid was already handled.
          Thanks to Chip Jones <jones_c@ociweb.com> for reporting the bug.
          This fix closes [BUGID:1422].

Tue Jan 14 16:13:09 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * orbsvcs/IFR_Service/Makefile.IFR_Service: Added a check for
          TAO_IFRService library before going head to actually compile
          stuff.

Tue Jan 14 07:05:21 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicAny/Makefile:
        * tao/DynamicInterface/Makefile:
        * tao/IORManipulation/Makefile:
        * tao/IORTable/Makefile:
        * tao/Messaging/Makefile:
          Set the correct BUILD_DLL define when building a shared lib,
          this is needed for the Cygwin, MingW and Kylix compiler

Mon Jan 13 20:52:43 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BiDir_GIOP/Makefile:
        * tao/IFR_Client/Makefile:
        * tao/PortableServer/Makefile:
        * tao/Strategies/Makefile:
          Set the correct BUILD_DLL define when building a shared lib,
          this is needed for the Cygwin, MingW and Kylix compiler

Mon Jan 13 10:12:20 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:

          Removed generation of
          'friend class <remote/thru-POA/direct proxy class name>' for local
          interfaces.

Mon Jan 13 12:47:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport.cpp:
          Use ACE_IOV_MAX instead of IOV_MAX. IOV_MAX is defined as MAX_INT-1
          with Cygwn and this gives compiles array because an array of this
          size is allocated on the stack.

        * tao/Makefile.tao:
          When building shared lib then set the define TAO_BUILD_DLL, when
          building statically set the define TAO_AS_STATIC_LIBS

Fri Jan 10 19:36:56 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Transport_Cache_Manager.h:
        * tao/Transport_Cache_Manager.cpp: Added a debug
          statement. Removed the method close_entries () which was under
          #if 0 guard.

          The method is_entry_idle () was trying to make the transport as
          busy, which is horribly horribly bad. The method is_entry_idle
          () should only do one thing, ie. check whether the entry is idle
          or not!

Fri Jan 10 08:28:34 2003  Frank Hunleth  <frank@hunleth.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp:

          Removed call to unsubscribe from multicast socket as this happens
          automatically.  Thanks to Don Hinton <dhinton@ieee.org> for
          pointing this out.

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.h:

          Added code to check length of MIOP UniqueID so that it can be
          properly parsed.  Thanks to Chau Vincent
          <Vincent.Chau@fr.thalesgroup.com> for finding the problem when
          performing MIOP interoperability testing.  Also, added code to
          set the UniqueID and packet length fields properly per update to
          the MIOP spec and tightened bounds checks on MIOP packets to
          prevent buffer overruns.

        * orbsvcs/tests/Miop/McastHello/client.cpp:

          Fixed spelling error.

Thu Jan  9 11:01:24 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/try_macros.h: Removed the file from the repo. This is no
          longer used and seems like a good time to remove it. Thanks to
          Oliver Kellog for reminding us.

Tue Jan  7 09:02:52 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * performance-tests/Memory/IORsize/Foo_i.h: Fixed fuzz errors.

Mon Jan  6 17:31:03 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Reactive_Connect_Strategy.cpp:
        * tao/LF_Connect_Strategy.cpp: Used the cached pointer to access
          the ORB_Core, instead of accessing the ORB_Core in the
          transport. The reason why this should be done this way is too
          involved to explain here, but suffice to say that in highly
          multi-threaded environments the transports could dis-sappear
          before the connection handlers. Accessing the ORB_Core from the
          transport could then lead to vague crashes.

Mon Jan  6 17:12:40 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>


        * performance-tests/Memory/IORsize/client.cpp:
        * performance-tests/Memory/IORsize/server.cpp:
        * performance-tests/Memory/IORsize/Memory_Growth.h:
        * performance-tests/Memory/IORsize/Memory_Growth.cpp:
        * performance-tests/Memory/IORsize/Foo_i.h:
        * performance-tests/Memory/IORsize/Foo_i.cpp:
        * performance-tests/Memory/IORsize/Makefile:
        * performance-tests/Memory/IORsize/Test.idl: A simple, again a
          very simple test, to measure the memory consumed by the server
          for unmarshalling an IOR. This test will not be compiled in all
          the builds, but only in the builds where the scripts are run.

        * performance-tests/Memory/Makefile: Added the new test to the
          list of directories.

Sat Jan 04 12:15:39 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/Notify_Service/Notify_Server.cpp:
          Removed extra ACE_CHECK_RETURN causing build errors.

Fri Jan  3 14:43:56 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/include/idl_global.h:

          Changes to the management of the IDL compiler's stack of prefixes,
          to address a problem that appeared when there is a chain of
          included IDL files. Thanks to Adee Ran <adeeran@yahoo.com> for
          reporting the problem and supplying example IDL files to
          reproduce it.

Fri Jan 03 14:22:14 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/Notify_Service/Notify_Server.cpp:
          Moved the call to <init> to catch any resulting exceptions and
          exit gracefully.

        The following changes are made to fix the crashes observed on the
        scoreboard in the $TAO_ROOT/orbsvcs/tests/Notify/Sequence_Multi_Test.
        Thanks to Irfan and Bala for helping to fix this problem.

        * orbsvcs/orbsvcs/Notify/Container_T.cpp:
          Changed the order of destruction of the Notify objects. The tree
          is destroyed bottom up. This ensures that proxy objects that
          refer to a valid parent during shutdown.

        * orbsvcs/orbsvcs/Notify/Method_Request.h:
        * orbsvcs/orbsvcs/Notify/Method_Request.inl:
        * orbsvcs/orbsvcs/Notify/Refcountable.h:
        * orbsvcs/orbsvcs/Notify/Refcountable.inl:
          Moved the TAO_NS_Refcountable_Guard class from Method_Request.*
          files into Refcountable.* files.

        * orbsvcs/orbsvcs/Notify/Object.cpp:
          Moved the <worker_task_> and <proxy_poa_> data member shutdown
          from the destructor to the <shutdown> method.

        * orbsvcs/orbsvcs/Notify/Object_T.cpp:
          Replaced the TAO_NS_Object_RefCount_Guard with
          TAO_NS_Refcountable_Guard.

        * orbsvcs/orbsvcs/Notify/Peer.cpp:
          Protect the Peer from being destroyed while it is dispatching
          updates by using a TAO_NS_Refcountable_Guard.

        * orbsvcs/orbsvcs/Notify/Types.h:
          Removed the TAO_NS_Object_RefCount_Guard class. We use
          TAO_NS_Refcountable_Guard instead.

        * orbsvcs/orbsvcs/Notify/Sequence/Batch_Buffering_Strategy.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/Batch_Buffering_Strategy.h:
          Modified the <dequeue_available> method to return the number of
          pending events.

        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.h:
          + Protect the call to the event batch <push> method with
          TAO_NS_Refcountable_Guard so that the proxy (and hence this
          peer) is not destroyed while the push is in progress.
          + Reset the pacing error on dispatch error so that we don't
          schedule a timer on an object that is about to be destroyed.
          + Schedule a timer in the <handle_timeout> method only if there
          are pending events.

Fri Jan  3 07:48:01 2003  Chad Elliott  <elliott_c@ociweb.com>

        * tao/DynamicAny/DynamicAnyC.h:
        * tao/RTCORBA/RTCORBAC.h:

          Changed the name of the AIX template instantiation macro.

Thu Jan  2 17:51:49 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/arglist.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be_include/be_codegen.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_cs.h:

          Moved generation of AMH exception holder raise_* method
          body from the stub header file to the stub source file. Also
          added explicit include of ace/Auto_Ptr when generating AMH
          classes (needed to correct AIX build errors).

Thu Jan  2 13:33:01 2003  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/AV/AV_Core.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_Pulling_Strategy.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.cpp:
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/EventTypeSeq.h:
        * orbsvcs/orbsvcs/Notify/Refcountable.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredEvent.cpp:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.cpp:
        * tao/Condition.h:

          Added #include to correct AIX build errors.

        * tao/DynamicAny/DynamicAnyC.h:
        * tao/RTCORBA/RTCORBAC.h:

          Added a second macro TAO_INSTANTIATING_TEMPLATES to the safety
          check for these files to determine if the AIX compiler is
          instantiating templates.  If it is instantiating, then we must
          allow the compiler to #include these files.

Thu Jan  2 10:33:29 2003  Boris S Kolpackov  <boris@isis-server.isis.vanderbilt.edu>

        * tao/PortableServer/ImplRepoC.h:
        * tao/PortableServer/ImplRepoS.cpp:
        * tao/PortableServer/ImplRepoS.i:
        * tao/PortableServer/ImplRepoS_T.h:
        * tao/PortableServer/ImplRepoC.cpp:
        * tao/PortableServer/ImplRepoC.i:
        * tao/PortableServer/ImplRepoS.h:
        * tao/PortableServer/ImplRepoS_T.cpp:
        * tao/PortableServer/ImplRepoS_T.i:
        * tao/PortableServer/diffs/ImplRepo.diff: Regenerated
          ImplRepo.pidl which apparently fixed bug 1413. ImplRepo.diff
          was regenerate as well.

Thu Jan  2 00:15:57 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tests/Bug_1020_Regression/ORB_Task.cpp:
        * tests/Bug_1020_Regression/client.cpp:
        * tests/Bug_1270_Regression/ORB_Task.cpp:
        * tests/Bug_1270_Regression/client.cpp:
        * tests/Bug_1361_Regression/ORB_Task.cpp:
        * tests/Bug_1361_Regression/client.cpp:
        * tests/Nested_Upcall_Crash/Client_Peer.cpp:
        * tests/Nested_Upcall_Crash/client.cpp:
        * tests/Nested_Upcall_Crash/server.cpp:
        * tests/Server_Connection_Purging/client.cpp: Added missing
          includes to keep the compilation on AIX happy. Missing header
          files were tao/Environment.h and ace/Reactor.h.

        * tao/Utils/Servant_Var.inl:
        * tao/Utils/Servant_Var.h: #included ace/CORBA_Macros.h and
          tao/Environment.h to keep the AIX compilers happy.

          Thanks to Jon Wackley for donating these patches.