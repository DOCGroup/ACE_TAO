project(IFR_Service) : orbsvcsexe, core, ifrservice, typecodefactory, svc_utils, ifr_client, iortable, portableserver {
  exename  = IFR_Service
  Source_Files {
    IFR_Server.cpp
    IFR_Service.cpp
  }
}


project(TAO_IFR_BE) : taolib, core, ifr_client {
  after       += TAO_IDL_FE
  sharedname   = TAO_IFR_BE
  libs        += TAO_IDL_FE
  dynamicflags = TAO_IFR_BE_BUILD_DLL
  includes    += $(TAO_ROOT)/TAO_IDL/include $(TAO_ROOT)/TAO_IDL/fe

  Source_Files {
    be_global.cpp
    be_produce.cpp
    ifr_adding_visitor.cpp
    ifr_adding_visitor_exception.cpp
    ifr_adding_visitor_operation.cpp
    ifr_adding_visitor_structure.cpp
    ifr_adding_visitor_union.cpp
    ifr_removing_visitor.cpp
    ifr_visitor.cpp
  }
}


project(TAO_IFR_EXE) : taoexe, core, ifr_client {
  after          += TAO_IFR_BE TAO_IDL_FE
  exename         = tao_ifr
  idlpreprocessor = 1
  libs           += TAO_IFR_BE TAO TAO_IDL_FE
  includes       += $(TAO_ROOT)/TAO_IDL/include $(TAO_ROOT)/TAO_IDL/fe
  libpaths       += $(TAO_ROOT)/TAO_IDL

  Source_Files {
    tao_ifr.cpp
    drv_args_ifr.cpp
    drv_preproc_ifr.cpp
  }
}

