--- orig/IFR_Components.pidl	Fri Apr 20 03:46:56 2001
+++ IFR_Components.pidl	Fri Apr 20 03:39:21 2001
@@ -71,6 +71,44 @@
 
 module IR
 {
+  enum DefinitionKind 
+  {
+    dk_none, 
+    dk_all,
+    dk_Attribute, 
+    dk_Constant, 
+    dk_Exception, 
+    dk_Interface,
+    dk_Module, 
+    dk_Operation, 
+    dk_Typedef,
+    dk_Alias, 
+    dk_Struct, 
+    dk_Union, 
+    dk_Enum,
+    dk_Primitive, 
+    dk_String, 
+    dk_Sequence, 
+    dk_Array,
+    dk_Repository,
+    dk_Wstring, 
+    dk_Fixed,
+    dk_Value, 
+    dk_ValueBox, 
+    dk_ValueMember,
+    dk_Native,
+    dk_Component,
+    dk_Home,
+    dk_Factory,
+    dk_Finder,
+    dk_PrimaryKey,
+    dk_Emits,
+    dk_Publishes,
+    dk_Consumes,
+    dk_Provides,
+    dk_Uses
+  };
+
   typedef string Identifier;
   typedef string ScopedName;
   typedef string RepositoryId;
@@ -98,14 +136,14 @@
   typedef sequence <FinderDef> FinderDefSeq;
   interface PrimaryKeyDef;
 
-  interface ComponentRepository : CORBA_Repository
+  interface ComponentRepository : CORBA::Repository
   {
     ComponentDef create_component (
         in RepositoryId id,
         in Identifier name,
         in VersionSpec version,
         in ComponentDef base_component,
-        in CORBA_InterfaceDefSeq supports_interfaces
+        in CORBA::InterfaceDefSeq supports_interfaces
       );
     HomeDef create_home (
         in RepositoryId id,
@@ -113,14 +151,14 @@
         in VersionSpec version,
         in HomeDef base_home,
         in ComponentDef managed_component,
-        in CORBA_ValueDef primary_key
+        in CORBA::ValueDef primary_key
       );
   };
 
-  interface ProvidesDef : CORBA_Contained 
+  interface ProvidesDef : CORBA::Contained 
   {
     // read interface
-    readonly attribute CORBA_InterfaceDef interface_type;
+    readonly attribute CORBA::InterfaceDef interface_type;
   };
 
   struct ProvidesDescription 
@@ -129,13 +167,13 @@
     RepositoryId id;
     RepositoryId defined_in;
     VersionSpec version;
-    CORBA_InterfaceDef interface_type;
+    CORBA::InterfaceDef interface_type;
   };
 
-  interface UsesDef : CORBA_Contained 
+  interface UsesDef : CORBA::Contained 
   {
     // read interface
-    readonly attribute CORBA_InterfaceDef interface_type;
+    readonly attribute CORBA::InterfaceDef interface_type;
     readonly attribute boolean is_multiple;
   };
 
@@ -145,18 +183,18 @@
     RepositoryId id;
     RepositoryId defined_in;
     VersionSpec version;
-    CORBA_InterfaceDef interface_type;
+    CORBA::InterfaceDef interface_type;
     boolean is_multiple;
   };
 
   typedef sequence <ProvidesDescription> ProvidesDescSeq;
   typedef sequence <UsesDescription> UsesDescSeq;
 
-  interface EventDef : CORBA_Contained 
+  interface EventDef : CORBA::Contained 
   { // abstract - never instantiated
     // read interface
     boolean is_a (in RepositoryId event_id);
-    readonly attribute CORBA_ValueDef event;
+    readonly attribute CORBA::ValueDef event;
   };
 
   struct EventDescription 
@@ -165,7 +203,7 @@
     RepositoryId id;
     RepositoryId defined_in;
     VersionSpec version;
-    CORBA_ValueDef value;
+    CORBA::ValueDef value;
   };
 
   interface EmitsDef : EventDef 
@@ -180,10 +218,10 @@
   {
   };
 
-  interface ComponentDef : CORBA_InterfaceDef 
+  interface ComponentDef : CORBA::InterfaceDef 
   {
     // read/write interface
-    attribute CORBA_InterfaceDefSeq supported_interfaces;
+    attribute CORBA::InterfaceDefSeq supported_interfaces;
     // read interface
     readonly attribute ComponentDef base_component;
     readonly attribute ProvidesDefSeq provides_interfaces;
@@ -197,32 +235,32 @@
         in RepositoryId id,
         in Identifier name,
         in VersionSpec version,
-        in CORBA_InterfaceDef interface_type
+        in CORBA::InterfaceDef interface_type
       );
     UsesDef create_uses (
         in RepositoryId id,
         in Identifier name,
         in VersionSpec version,
-        in CORBA_InterfaceDef interface_type,
+        in CORBA::InterfaceDef interface_type,
         in boolean is_multiple
       );
     EmitsDef create_emits (
         in RepositoryId id,
         in Identifier name,
         in VersionSpec version,
-        in CORBA_ValueDef value
+        in CORBA::ValueDef value
       );
     PublishesDef create_publishes (
         in RepositoryId id,
         in Identifier name,
         in VersionSpec version,
-        in CORBA_ValueDef value
+        in CORBA::ValueDef value
       );
     ConsumesDef create_consumes (
         in RepositoryId id,
         in Identifier name,
         in VersionSpec version,
-        in CORBA_ValueDef value
+        in CORBA::ValueDef value
       );
   };
 
@@ -236,18 +274,18 @@
     RepositoryIdSeq supports_interfaces;
     ProvidesDefSeq provides_interfaces;
     UsesDefSeq uses_interfaces;
-    CORBA_AttrDescriptionSeq attributes;
+    CORBA::AttrDescriptionSeq attributes;
     EmitsDefSeq emits_events;
     PublishesDefSeq publishes_events;
     ConsumesDefSeq consumes_events;
     boolean is_basic;
   };
 
-  interface PrimaryKeyDef : CORBA_Contained 
+  interface PrimaryKeyDef : CORBA::Contained 
   {
     // read interface
     boolean is_a (in RepositoryId primary_key_id);
-    readonly attribute CORBA_ValueDef primary_key;
+    readonly attribute CORBA::ValueDef primary_key;
   };
 
   struct PrimaryKeyDescription 
@@ -256,18 +294,18 @@
     RepositoryId id;
     RepositoryId defined_in;
     VersionSpec version;
-    CORBA_ValueDef primary_key;
+    CORBA::ValueDef primary_key;
   };
 
-  interface FactoryDef : CORBA_OperationDef 
+  interface FactoryDef : CORBA::OperationDef 
   { // only PARAM_IN parameters
   };
 
-  interface FinderDef : CORBA_OperationDef 
+  interface FinderDef : CORBA::OperationDef 
   { // only PARAM_IN parameters
   };
 
-  interface HomeDef : CORBA_InterfaceDef 
+  interface HomeDef : CORBA::InterfaceDef 
   {
     // read operations
     readonly attribute HomeDef base_home;
@@ -281,21 +319,21 @@
         in RepositoryId id,
         in Identifier name,
         in VersionSpec version,
-        in CORBA_ValueDef primary_key
+        in CORBA::ValueDef primary_key
       );
     FactoryDef create_factory (
         in RepositoryId id,
         in Identifier name,
         in VersionSpec version,
-        in CORBA_ParDescriptionSeq params, // only PARAM_INs
-        in CORBA_ExceptionDefSeq exceptions
+        in CORBA::ParDescriptionSeq params, // only PARAM_INs
+        in CORBA::ExceptionDefSeq exceptions
       );
     FinderDef create_finder (
         in RepositoryId id,
         in Identifier name,
         in VersionSpec version,
-        in CORBA_ParDescriptionSeq params, // only PARAM_INs
-        in CORBA_ExceptionDefSeq exceptions
+        in CORBA::ParDescriptionSeq params, // only PARAM_INs
+        in CORBA::ExceptionDefSeq exceptions
       );
   };
 
@@ -310,8 +348,8 @@
     PrimaryKeyDef primary_key_def;
     FactoryDefSeq factories;
     FinderDefSeq finders;
-    CORBA_OpDescriptionSeq operations;
-    CORBA_AttrDescriptionSeq attributes;
+    CORBA::OpDescriptionSeq operations;
+    CORBA::AttrDescriptionSeq attributes;
     boolean is_basic;
   };
 };
