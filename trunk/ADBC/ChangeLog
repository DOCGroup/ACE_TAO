Wed Jun  1 03:05:15 UTC 2011  James H. Hill  <hillj@cs.iupui.edu>

        * adbc/ODBC/ODBC.mpc:

	  Added 'odbc' as a required feature.

Thu Apr 28 19:53:33 UTC 2011  James H. Hill  <hillj at cs dot iupui dot edu>

        * adbc/SQLite/Parameter.cpp:

          Bug fix where bind_datatime () was throwing an uncessary exception.

Tue Nov 23 14:56:59 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * adbc/SQLite/Exception.h:
        * adbc/SQLite/Exception.inl:
        * adbc/SQLite/Exception.cpp:

          Made some of the methods inline.

        * adbc/SQLite/Query.inl:
        * adbc/SQLite/Query.cpp:

          Bug fix where execute_no_record () was throwing the wrong
          exception type if the query failed.

Mon Nov  8 05:06:16 UTC 2010  James H. Hill  <james.hill@sprezzat.com>

        * adbc/ODBC/ODBC_Connection.cpp:

          Bug fix where the environment pointer used when creating
          the connection during the init () was incorrect.

        * adbc/ODBC/ODBC_Record.cpp:

          Bug fix where the record was not initialized to the first
          item in the collection.

Wed Sep 29 21:05:32 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * adbc/ODBC/ODBC_Parameter_List.h:
        * adbc/SQLite/Parameter_List.h:
        * adbc/SQLite/Record.cpp:

          Updated to HEAD of DOC middleware.

Thu May 20 14:57:25 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * adbc/SQLite/Query.cpp:

          Implemented the reset () method.

Mon Apr 19 13:50:33 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * MPC/config/adbc_odbc.mpb:
        * MPC/config/adbc_sqlite.mpb:

          Added adbclib as a base project.

        * adbc/SQLite/Query.h:
        * adbc/SQLite/Query.inl:
        * adbc/SQLite/Query.cpp:
        * adbc/SQLite/Record.h:
        * adbc/SQLite/Record.inl:
        * adbc/SQLite/Record.cpp:

          Fixed design issues related to circular dependencies.

Thu Feb 18 05:44:41 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * MPC/config/adbc_odbc.mpb:

          Missing base project file.

Mon Jan  4 16:51:31 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * .:

          Added default.features to the ingore list.

Mon Jan  4 16:49:24 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * adbc/SQLite/Parameter.cpp:

          Fixed build errors on MacOS X platforms.

Mon Jan  4 16:47:56 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * adbc/ODBC/ODBC.h:

          Missing file.

Mon Jan  4 16:46:22 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * adbc/config.h:

          Missing file.

Mon Jan  4 16:44:26 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * default.features.tmpl:

          Fixed errors in the template file.

Mon Jan  4 06:02:42 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * adbc/ODBC:
        * adbc/ODBC/ODBC.mpc:
        * adbc/ODBC/ODBC_Connection.h:
        * adbc/ODBC/ODBC_Connection.inl:
        * adbc/ODBC/ODBC_Connection.cpp:
        * adbc/ODBC/ODBC_Env.h:
        * adbc/ODBC/ODBC_Env.inl:
        * adbc/ODBC/ODBC_Env.cpp:
        * adbc/ODBC/ODBC_Exception.h:
        * adbc/ODBC/ODBC_Exception.inl:
        * adbc/ODBC/ODBC_Exception.cpp:
        * adbc/ODBC/ODBC_Parameter.h:
        * adbc/ODBC/ODBC_Parameter.inl:
        * adbc/ODBC/ODBC_Parameter.cpp:
        * adbc/ODBC/ODBC_Parameter_List.h:
        * adbc/ODBC/ODBC_Parameter_List.inl:
        * adbc/ODBC/ODBC_Parameter_List.cpp:
        * adbc/ODBC/ODBC_Query.h:
        * adbc/ODBC/ODBC_Query.inl:
        * adbc/ODBC/ODBC_Query.cpp:
        * adbc/ODBC/ODBC_Record.h:
        * adbc/ODBC/ODBC_Record.inl:
        * adbc/ODBC/ODBC_Record.cpp:
        * adbc/ODBC/ODBC_Types.h:
        * adbc/ODBC/ODBC_Types.inl:
        * adbc/ODBC/ODBC_Types.cpp:
        * adbc/ODBC/ODBC_export.h:
        * examples/ODBC:
        * examples/ODBC/static:
        * examples/ODBC/static/static.mpc:
        * examples/ODBC/static/static.mwc:
        * examples/ODBC/static/static.cpp:

          First implementation of ADBC wrappers for ODBC and a
          simple example illstrating its usage.

Mon Jan  4 05:29:45 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * ADBC.mwc:

          Explicitly specified the directories to include in
          the workspace.

        * MPC/config/adbc_sqlite.mpb:

          Added the sqlite3 base project.

        * MPC/config/adbclib.mpb:

          Fixed errors in the base project specification.

        * adbc/ADBC.mpc:
        * adbc/Connection.h:
        * adbc/Exception.h:
        * adbc/Parameter.h:
        * adbc/Parameter.inl:
        * adbc/Parameter_List.h:
        * adbc/Query.h:
        * adbc/SQLite/Types.h:

          Changed all instances of CUTS to ADBC.

        * adbc/Record.h:

          Added a pure virtual reset () method.

        * adbc/SQLite/Parameter.h:
        * adbc/SQLite/Parameter.inl:
        * adbc/SQLite/Parameter.cpp:

          Removed the length (size_t) function since this must be set
          when a parameter is bound.

          Re-implemented the is_null () so that is not implemented in
          terms of its base class.

        * adbc/SQLite/Query.h:
        * adbc/SQLite/Query.inl:
        * adbc/SQLite/Query.cpp:
        * adbc/SQLite/Record.h:
        * adbc/SQLite/Record.inl:
        * adbc/SQLite/Record.cpp:

          Improved the implementation of the Record class so that its
          semantics are more in line with its specification. This also
          simplified the execute* () methods on the Query class since
          the Record handles reseting the cursor for each execution of
          a statement.

        * default.features.tmpl:

          Template of all possible features for MPC.

        * examples/SQLite/simple/simple.cpp:

          Fixed build errors in the example.

Sat Jan  2 16:23:29 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * adbc/Query.h:
        * adbc/Record.h:
        * adbc/SQLite/Query.h:
        * adbc/SQLite/Query.cpp:
        * adbc/SQLite/Record.h:
        * adbc/SQLite/Record.inl:

          Moved the count () method from the Record class to the
          Query class since it has no meaning on the SELECT SQL
          statement, which results in a Record object for iteration.

Sat Jan  2 02:23:02 UTC 2010  James H. Hill  <hillj at cs dot iupui dot edu>

        * adbc/SQLite/Query.h:
        * adbc/SQLite/Query.inl:
        * adbc/SQLite/Query.cpp:
        * adbc/SQLite/Record.h:
        * adbc/SQLite/Record.inl:

          execute () no longer allocates a record for each query
          executed. Instead, it return an embedded record, which
          should not be deallocated () by the client.

        * examples/SQLite/dynamic/dynamic.cpp:
        * examples/SQLite/simple/simple.cpp:

          Updated the examples.

Wed Dec 30 22:54:02 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * adbc/SQLite/Query.h:
        * adbc/SQLite/Query.inl:
        * adbc/SQLite/Query.cpp:

          Improved the inline implementation.

        * examples/SQLite/dynamic:
        * examples/SQLite/dynamic/dynamic.mpc:
        * examples/SQLite/dynamic/dynamic.mwc:
        * examples/SQLite/dynamic/dynamic.cpp:

          Example illustrating dynamic allocation of a query.

        * examples/SQLite/simple/simple.cpp:

          This example no longer dynamically allocates the query.

Wed Dec 30 22:26:58 UTC 2009  James H. Hill  <hillj@dre.vanderbilt.edu>

        * ADBC.mwc:
        * AUTHORS:
        * COPYING:
        * MPC:
        * MPC/config:
        * MPC/config/adbc_defaults.mpb:
        * MPC/config/adbc_exe.mpb:
        * MPC/config/adbc_lib.mpb:
        * MPC/config/adbc_sqlite.mpb:
        * MPC/config/adbclib.mpb:
        * NEWS:
        * PROBLEM-REPORT-FORM:
        * THANKS:
        * VERSION:
        * adbc:
        * adbc/ADBC.mpc:
        * adbc/ADBC_export.h:
        * adbc/Connection.h:
        * adbc/Connection.inl:
        * adbc/Connection.cpp:
        * adbc/Exception.h:
        * adbc/Exception.inl:
        * adbc/Exception.cpp:
        * adbc/Parameter.h:
        * adbc/Parameter.inl:
        * adbc/Parameter.cpp:
        * adbc/Parameter_List.h:
        * adbc/Parameter_List.inl:
        * adbc/Parameter_List.cpp:
        * adbc/Query.h:
        * adbc/Query.inl:
        * adbc/Query.cpp:
        * adbc/Record.h:
        * adbc/Record.inl:
        * adbc/Record.cpp:
        * adbc/SQLite:
        * adbc/SQLite/Connection.h:
        * adbc/SQLite/Connection.inl:
        * adbc/SQLite/Connection.cpp:
        * adbc/SQLite/Exception.h:
        * adbc/SQLite/Exception.inl:
        * adbc/SQLite/Exception.cpp:
        * adbc/SQLite/Parameter.h:
        * adbc/SQLite/Parameter.inl:
        * adbc/SQLite/Parameter.cpp:
        * adbc/SQLite/Parameter_List.h:
        * adbc/SQLite/Parameter_List.inl:
        * adbc/SQLite/Parameter_List.cpp:
        * adbc/SQLite/Query.h:
        * adbc/SQLite/Query.inl:
        * adbc/SQLite/Query.cpp:
        * adbc/SQLite/Record.h:
        * adbc/SQLite/Record.inl:
        * adbc/SQLite/Record.cpp:
        * adbc/SQLite/SQLite.mpc:
        * adbc/SQLite/SQLite_export.h:
        * adbc/SQLite/Types.h:
        * adbc/SQLite/Types.inl:
        * adbc/SQLite/Types.cpp:
        * adbc/Types.h:
        * adbc/Types.inl:
        * adbc/Types.cpp:
        * adbc/destroy_t.h:
        * bin:
        * docs:
        * lib:
        * tests:

          Checkpointing current implementation of ADBC. Right now, it
          supports only SQLite3. The ODBC implementation still needs
          to be ported from the CUTS distribution.

        * examples:
        * examples/SQLite:
        * examples/SQLite/simple:
        * examples/SQLite/simple/simple.mpc:
        * examples/SQLite/simple/simple.mwc:
        * examples/SQLite/simple/simple.cpp:

          Very simple example illustrating how to use the SQLite3
          implementation.
