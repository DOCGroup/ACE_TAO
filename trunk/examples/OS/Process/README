This example shows how to use ACE_Process to "portably" create new
processes.  The ACE_Process_Options class allows applications to
portably specify path, command-line arguments, environment variable
values.  It also allows applications to set the new process' standard
handles (stdin, stdout, and stderr).  ACE_Process is created with the
ACE_Process_Options and can be used to perform operations on the
running process.  

Run the application as ./process -u to get all the command-line
options.

Here's an example output:

lambada:OS/Process> ./process -a
starting...
starting...
Sun May 11 15:06:51 CDT 1997
date succeeded.
starting...
checking ACE_PROCESS_TEST
ACE_PROCESS_TEST =  here's a large number 4294967295.
ACE_PROCESS_TEST2 = ophilli.
total 600
drwxr-xr-x   5 harrison doc          512 May 11 15:06 .
-rw-r--r--   1 harrison doc         9330 May  7 23:54 .#process.cpp.4.3
drwxr-xr-x   4 harrison doc          512 Apr 21 15:32 ..
drwx------   2 harrison doc          512 May  8 22:33 .obj
drwx------   2 harrison doc          512 May  8 22:33 .shobj
drwxr-xr-x   2 harrison doc          512 May 11 15:05 CVS
-rw-r--r--   1 harrison doc         1717 Oct 21  1996 Makefile
-rw-r--r--   1 harrison doc        10048 Oct 21  1996 Process.mak
-rw-r--r--   1 harrison doc        44032 Oct 21  1996 Process.mdp
-rw-r--r--   1 harrison doc         1452 May 11 15:05 README
-rwx--x--x   1 harrison doc       212992 May 11 15:06 process
-rw-r--r--   1 harrison doc        10172 May 10 19:38 process.cpp
-rw-------   1 harrison doc         1380 May 10 19:19 process.wst
