This example shows how to use ACE_Process to "portably" create new
processes and set their standard handles (stdin, stdout, and stderr).
On UNIX, ACE_Process uses fork and exec.  On Win32, it uses
CreateProcess.  Since we can set the standard handles, we can mimic
UNIX pipes on Win32 by building chains of processes.

Run the application by typing ./process [filename].  It creates a new
process to print the contents of <filename> (default is the name of
the file "process.cpp") to the main console.  So all you should see is
process.cpp printed to the screen.  Not very exciting...
