# $Id$

# This platform macros file is intended to work with
# Linux, using the cxx compiler..

debug = 1
exceptions = 1
rtti = 1

CC              = cxx
CXX             = $(CC)
CFLAGS          += -I/usr/include/g++

  #### RedHat 5.2 /usr/include/malloc.h has an extraneous semicolon.
  WARNING_FLAGS += -w0 -msg_disable 381
  ifneq (,$(VERBOSE_WARNING))
    WARNING_FLAGS += -msg_display_number -msg_display_tag
  endif # VERBOSE_WARNING

  ifneq (,$(optimize))
    #### See ace/config-cxx-common.h for the meaning of this warning.
    #### It's not necessary on DU 5.0.
    WARNING_FLAGS += -msg_disable 1016
  endif # optimize

CCFLAGS         += $(CFLAGS) $(WARNING_FLAGS)
ifeq ($(rtti),)
  CCFLAGS += -nortti
endif # rtti
DCFLAGS         += -g -O0
DLD             = $(CXX)
LD              = $(CXX)
LIBS            += -ldl -lpthread
ifeq (-DACE_HAS_AIO_CALLS,$(PLATFORM_AIO_SUPPORT))
  LIBS += -lrt
endif
OCFLAGS         += -O4
PIC             =
ARFLAGS         = rsuv
# When libraries are archived, a hash index is automatically created
# so there is no need for ranlib
RANLIB          = @true
SOFLAGS         = -shared -use_ld_input $(ACELIB) cxx_repository/*.o
SOBUILD         = $(RM) $@; $(COMPILE.cc) $(PIC) -o $(VSHDIR)$*.o $< && \
                  ln $(VSHDIR)$*.o $@

ifndef exceptions
  #### Disable the default exception handling of cxx >= 6.0.
  #### This is untested.  exceptions=1 is the default, so it's not used
  #### by default.
  ifndef CXX_VERSION
    CXX_VERSION := $(shell $(CXX) -V)
  endif # ! CXX_VERSION

  ifeq (6.,$(findstring 6.,$(CXX_VERSION)))
    CCFLAGS += -nocleanup
  endif # 6.x
endif # ! exceptions
