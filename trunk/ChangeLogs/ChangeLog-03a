Mon Sep 16 07:35:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-doxygen.h:
          Added define ACE_HAS_EVENT_POLL to generate Dev_Poll reactor
          documentation

        * ace/Acceptor.h:
        * ace/Containers_T.{h,cpp}:
        * ace/Dev_Poll_Reactor.h:
        * ace/Sample_History.h:
        * ace/Service_Config.h:
          Improved doxygen documentation.

Sat Sep 14 10:34:34 2002  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

	* ace/config-freebsd-pthread.h: Added
	  #undef ACE_LACKS_UCONTEXT_H if we're compiling for FreeBSD
 	  version > 4.  Thanks to Christophe Juniet
 	  <cjuniet@entreview.com> for reporting this.

Fri Sep 13 08:37:09 2002  Ossama Othman  <ossama@uci.edu>

	* ace/Time_Value.h:
	* ace/Time_Value.inl:

	  Removed copy constructor.  The default compiler-generated copy
	  constructor will do fine since ACE_Time_Value is a POD class.
	  This may also avoid potential confusion due to a missing
	  explicit assignment operator.  The compiler-generated assignment
	  operator will suffice in this case, too.

	From Gonzalo Diethelm <gonzalo.diethelm@aditiva.com>
	* bin/.cvsignore:
	* tests/.cvsignore:
	* tests/log/.cvsignore:

	  Files to silence annoying CVS messages regarding generated files
	  it doesn't know about.

Fri Sep 13 08:57:03 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/USAGE:
        * bin/MakeProjectCreator/modules/Creator.pm:
        * bin/MakeProjectCreator/modules/Driver.pm:
        * bin/MakeProjectCreator/modules/ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/TemplateParser.pm:
        * bin/MakeProjectCreator/modules/WorkspaceCreator.pm:
        * bin/MakeProjectCreator/templates/bor.mpd:
        * bin/MakeProjectCreator/templates/em3vcp.mpd:
        * bin/MakeProjectCreator/templates/gnu.mpd:
        * bin/MakeProjectCreator/templates/nmake.mpd:
        * bin/MakeProjectCreator/templates/vc6dsp.mpd:
        * bin/MakeProjectCreator/templates/vc7.mpd:

          Added the ability to modify template and project variable
          assignments from the command line.  Also added rules to process
          idl files and place the output in the directory relative to the
          specified idl file.

          Modified to not add duplicates to file lists.

Thu Sep 12 17:18:43 2002  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Synch.{h,cpp}: Only define the recursive condition support if
          we're running on Win32.  Hopefully, this will be generalized for
          VxWorks at some point.  Thanks to Rob Andzik
          <andzik@rtlogic.com> for reporting this.

Thu Sep 12 19:29:41 2002  Steve Huston  <shuston@riverace.com>

        * ace/Atomic_Op_T.i (dump): Don't try to return a value from a
          'void' method.

Thu Sep 12 17:38:10 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Malloc_T.h:
        * ace/Malloc_T.i (release): Added an extra argument (with default
          value) to release so that we could decrease the refcount and
          release the backing store if needed atomically (while holding the
          lock.)  This was causing a race condition when removing mmap
          files used by MEM_Stream's.

        * ace/Memory_Pool.h:
        * ace/Memory_Pool.i:
        * ace/Memory_Pool.cpp: Changed the release method to take an extra
          argument so that we can control whether we want to perform
          cleanup on backing store or not.

        * ace/MEM_SAP.cpp (close_shm_malloc): Changed to use the extended
          release method to remove the shared_memory.

        * ace/MEM_IO.cpp: When sending/receiving data reactively, make
          sure we don't even try if the socket is not valid.

Thu Sep 12 08:39:46 2002  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

        * ace/Synch.h (class ACE_recursive_mutex_state): Changed "HANDLE" to
          "ACE_HANDLE" to avoid problems with VxWorks.  Thanks to Rob
          Andzik <andzik@rtlogic.com> and Don Hinton <dhinton@ieee.org>
          for reporting this.

Thu Sep 12 17:36:36 UTC 2002  Craig Rodrigues  <crodrigu@bbn.com>

        * include/makeinclude/wrapper_macros.GNU: Use awk instead of
          perl to determine the ACE major, minor, and beta versions.

Thu Sep 12 12:02:31 2002  Steve Huston  <shuston@riverace.com>

        * tests/TSS_Test.cpp: Pass iteration count to worker() as a pointer
          to int, not an int cast to a pointer and back.

Wed Sep 11 08:44:28 2002  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

        * Our thoughts and prayers go out to the victims of 9/11/01 on the
          anniversary of this terrible tragedy.

Wed Sep 11 13:03:48 2002  Carlos O'Ryan  <coryan@atdesk.com>

        * ace/Select_Reactor_Base.cpp:
          Check the suspend mask before completely forgetting about a
          handle, otherwise things do not work correctly with TP_Reactors
          and multiply-registered handlers.  This fixes:
            http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=1306

Tue Sep 10 17:46:51 2002  Steve Huston  <shuston@riverace.com>

        * ace/Malloc_T.{h i cpp} (ACE_Malloc_T): Changed the lock_ member from
          an ACE_LOCK to an ACE_LOCK *. Also added another constructor that
          accepts an ACE_LOCK pointer instead of a ACE_TCHAR *lock_name.
          This allows someone to form an ACE_LOCK externally and supply
          it to the ACE_Malloc_T object. This is useful if special
          permissions need to be set on the lock, such as the mode_t for
          ACE_Process_Mutex.

Tue Sep 10 14:06:02 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ace/Obstack_T.cpp:
        * ace/Obstack_T.h:

          Obstack is no longer restricted to fixed-size chunks. Chunk size
          is increased by a power of two if we run out of memory in a
          chunk. Added implementation of unwind operations. Stack can be
          unwound by giving the address of an object on the stack. Fixed a
          couple of bugs in the existing implementation when used with
          WCHAR. We were incrementing the pointers by sizeof (CHAR) as
          well as multiplying by sizeof (CHAR) to get the number of bytes
          to be copied. This improvement doesn't deal with the alignment
          issues as it requires a change in Obchunk which is postponed
          till ACE 5.2.3 is released.

        * tests/Obstack_Test.cpp:

          New, improved test which exercises all the code paths in the
          implementation unlike the previous test.

Tue Sep 10 12:32:33 2002  Carlos O'Ryan  <coryan@atdesk.com>

        * ace/Connector.cpp:
          Be more informative in error messages, at least report in what
          library, class and function was the error detected.  This fixes:
            http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=1304

Tue Sep 10 12:28:41 2002  Carlos O'Ryan  <coryan@atdesk.com>

        * ace/Connector.cpp:
          Be more paranoid about using AST's returned from cleanup_AST()
          and always check the return value of that function.  This fixes:
            http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=1303

Mon Sep  9 16:44:00 2002  Balachandran Natarajan  <bala@isis-server.vuse.vanderbilt.edu>

        * THANKS: Surprise, surprise, Gautam Thaker'ss name was not there
          in the THANKS file. So added it.

Mon Sep  9 16:57:41 2002  Steve Huston  <shuston@riverace.com>

        * ace/POSIX_Asynch_IO.cpp (cancel): Don't sanity-check the
          proactor type - just call cancel_aio and let the proactor impl
          figure it out.

        * examples/Reactor/Proactor/test_aiocb.cpp: Fixes to not crash.

Mon Sep 09 11:37:13 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.cpp (cond_timedwait): Changed to pass absolute time when
          using emulated semaphore on WinCE.  Thanks to Herbert Wang
          <herbert@nowsol.com> for reporting this.

        * ace/Thread_Manager.cpp (join): This function was not cropping
          the thread return status when a thread had already exited when
          we called and its Thread_Descriptor had been moved to
          terminated_thr_list_.  Thanks to Roger Weeks
          <rogerw@firstlogic.com> for reporting the problem.

Mon Sep  9 00:12:04 UTC 2002  Craig Rodrigues  <crodrigu@bbn.com>

        * ace/Makefile.dirs:
        * examples/Makefile:
        * tests/Makefile:
          Remove references to obsolete ACE_HAS_GNUG_PRE_2_8 make
          variable.

Sat Sep  7 23:22:20 2002  Balachandran Natarajan  <bala@isis-server.vuse.vanderbilt.edu>

        * bin/make_release: The tar ball that is put out during the
          release, is copied now to the the previous_versions directory
          with the appopriate version information. This should work right
          since this was tested against a local repo.

          Thanks to Preston A. Elder <prez@gentoo.org>  for motivating
          this change.

Sat Sep  7 18:03:21 2002  Steve Huston  <shuston@riverace.com>

        * ace/Proactor.cpp: Removed some ACE_Proactor:: prefixes on member
          variable access, replacing with this-> to clarify what's happening.

        * ace/SUN_Proactor.cpp (handle_events): No need to cast a pointer to
          long to check for 0.
          Re-enabled some "should never happen" ACE_DEBUG lines until we
          find out what's going wrong with this stuff.

Thu Sep  5 12:13:51 2002  Steve Huston  <shuston@riverace.com>

        * ACEXML/common/URL_Addr.inl: Removed ACE_RCSID - it's in URL_Addr.cpp.

Wed Sep  4 16:31:29 2002  Douglas C. Schmidt <schmidt@cs.wustl.edu>

        * Kelly Clarkson wins "American Idol."  Go Kelly!!

Wed Sep  4 17:50:27 2002  Steve Huston  <shuston@riverace.com>

        * tests/run_test.pl: Change run time limit from 300 to 400 seconds.
          Some tests are timing out, and when run by hand, they run just over
          5 minutes, so give them a little more time.

Wed Sep  4 17:31:24 2002  Steve Huston  <shuston@riverace.com>

        * tests/Cached_Conn_Test.cpp: ACE_DEBUG %@ for pointers, not %d.

Wed Sep  4 20:59:40 UTC 2002  Craig Rodrigues  <crodrigu@bbn.com>

        * include/makeinclude/platform_irix5.2.GNU:
        * include/makeinclude/platform_m88k.GNU:
        * include/makeinclude/platform_netbsd.GNU:
        * include/makeinclude/platform_qnx_neutrino.GNU:
        * include/makeinclude/platform_qnx_rtp_gcc.GNU:
        * include/makeinclude/platform_sco-nothread.GNU:
          Instead of setting -fno-implicit-templates,
          use $(TEMPLATES_FLAG).  Include platform_g++.GNU to get the
          correct value of $(TEMPLATES_FLAG).

Wed Sep  4 16:31:29 2002  Steve Huston  <shuston@riverace.com>

        * ace/Timer_Wheel_T.cpp: Formatting tweaks for ACE coding style.

Wed Sep  4 20:08:54 UTC 2002  Don Hinton  <dhinton@objectsciences.com>

        * ace/Framework_Component.cpp (close):

          Delete each component explicitely instead of calling
          close_singleton () to avoid a memory leak.  The dtor calls
          close_singleton () anyway.  Thanks Vladimir Chovanec
          <Vladimir CHOVANEC@asset.sk> for reporting the leak and
          suggesting the fix.

Tue Sep 03 22:59:27 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ACEXML/common/XML_Common.dsp:

          Added URL_Addr.inl to common.

Tue Sep 03 22:40:22 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ACEXML/common/HttpCharStream.cpp:

          Handle WCHAR properly when getting data from URLs.

        * ACEXML/common/URL_Addr.cpp:
        * ACEXML/common/URL_Addr.h:
        * ACEXML/common/URL_Addr.inl:

          Fixes for proper parsing of URLs when URLs are WCHARs.

        * ACEXML/examples/SAXPrint/main.cpp:

          Use int in GetOpt instead of char or ACEXML_Char.

Tue Sep  3 17:12:59 2002  Ossama Othman  <ossama@uci.edu>

        * ace/OS.cpp (num_processors_online):

          Fixed ACE_TRACE macro.

Tue Sep  3 16:38:47 2002  Ossama Othman  <ossama@uci.edu>

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:

          Atomic_Op.cpp is no longer a template source file.  Moved it to
          the "Source Files" folder.

        * ace/Synch.cpp (ACE_Mutex):

          Fixed "unused 'mode' argument" warning.

Tue Sep  3 15:54:33 2002  Christopher Kohlhoff <chris@kohlhoff.com>

        * ace/OS.h:
        * ace/OS.cpp:

          Added new functions ACE_OS::num_processors() and
          ACE_OS::num_processors_online() for determining the number of CPUs
          available on a system.

        * ace/Atomic_Op.cpp:
        * ace/Atomic_Op.h:
        * ace/Atomic_Op.i:
        * ace/Atomic_Op_T.cpp:
        * ace/Atomic_Op_T.h:
        * ace/Atomic_Op_T.i:
        * ace/Object_Manager.cpp:
        * ace/Makefile.bor:
        * ace/Makefile.ace:
        * ace/ace.mpc:
        * tests/Atomic_Op_Test.cpp:

          Added a new fast, lightweight ACE_Atomic_Op template specialization
          for x86 platforms that uses the architecture's atomic integer
          primitives. It currently supports Win32 using MSVC6 or BCB, and g++
          for (in theory) all x86 operating systems. It selects the
          appropriate implementation for single- or multi-CPU systems at
          runtime, based on the return value of the ACE_OS::num_processors
          function added above.

          Note that Atomic_Op.cpp is now a real .cpp file and not a template
          file, and so project files need to be updated accordingly. The
          template definitions have been moved to the new Atomic_Op_T.* files.

          Note also that the ACE_Atomic_Op::mutex() operation has been
          deprecated (and is not supported for the new specialization). If
          you need this functionality, consider using the ACE_Atomic_Op_Ex
          template instead.

Tue Sep  3 15:40:39 2002  Ossama Othman  <ossama@uci.edu>

        * tests/XtReactor_Test.cpp (sock_callback):

          Removed this unused static function.

        * tests/TkReactor_Test.cpp (sock_callback):

          Likewise.

          (ACE_TMAIN):

          Fixed "deprecated conversion from string constant to char *"
          warning.

Tue Sep  3 15:16:03 2002  Balachandran Natarajan  <bala@isis-server.vuse.vanderbilt.edu>

        * bin/auto_run_tests.lst: Fixed a typo!

Mon Sep  2 16:48:29 2002  Steve Huston  <shuston@riverace.com>

        * tests/OS_Test.cpp (ctime_r_test): Corrected ACE_Log_Msg to use
          %P, not %p, to list process ID.

Mon Sep  2 13:17:26 2002  Steve Huston  <shuston@riverace.com>

        * ace/Memory_Pool.{h cpp}:
         (ACE_MMAP_Memory_Pool_Options): Added optional file_mode arg
          to set the protection mode on the mapped file, if it is
          created; defaults to ACE_DEFAULT_FILE_PERMS.
          (ACE_MMAP_Memory_Pool): Added file_mode_ member that can be set
          by the ACE_MMAP_Memory_Pool_Options. Defaults to
          ACE_DEFAULT_FILE_PERMS. It's used for call to ACE_Mem_Map::open()
          and ACE_Mem_Map::map().

        * ace/Process_Mutex.{h cpp}: ACE_Process_Mutex ctor takes an optional
          mode_t arg to set the backing store mode (for ACE_Mutex use) or the
          mode for the System V semaphore, when it's used.

        * ace/Synch.{h cpp} (ACE_Mutex): Constructor takes an optional mode
          to set backing store protection for Pthreads process mutex case,
          where memory must be allocated to hold the mutex.

        These are laying the groundwork for fixing Bugzilla #1219.

Mon Sep  2 14:07:12 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ace/Exception_Macros.h:

          New file which holds the exception macros previously present in
          CORBA_macros.h. This file also makes the macros a bit generic so
          that they can be used in other modules than TAO.

        * ace/CORBA_macros.h:

          Include only the definitions needed for TAO/CORBA. This file can
          be placed under $TAO_ROOT now. Leaving it for compatibility
          reasons.

        * ace/OS.i:

          Changed the definition of ctime_buf_size to const so that gcc
          doesn't complain about using variable-sized array which is
          non-ISO C++.

Mon Sep  2 10:00:40 2002  Balachandran Natarajan  <bala@isis-server.vuse.vanderbilt.edu>

        * ace/Timer_List_T.cpp (get_first_i): Fixes fuzz errors.

Sun Sep 01 08:18:37 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Task.cpp (svc_run):
          The latest version of the Borland compiler doesn't like the
          static cast, so only do the static cast when the compiler
          version is smaller than 0x570

        * ace/Handle_Set.cpp:
          When using Borland on Linux, we don't have fds_bits, but we have
          __fds_bits.

Sun Sep 01 07:57:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-borland.h:
        * ace/config-borland-common.h:
          Improved Borland config files for Kylix support.

Sun Sep 01 07:25:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_linux_borland.GNU:
          Added first version of platform .GNU file for the Borland Kylix
          compiler. Thanks to Newton Aird <naird@ix.netcom.com> for
          providing this first version.

        * THANKS: Added Newton Aird <naird@ix.netcom.com>

Sat Aug 31 14:57:53 2002  Balachandran Natarajan  <bala@isis-server.vuse.vanderbilt.edu>

        * THANKS: Added Cemal Yilmaz <cyilmaz@cs.umd.edu> to the hall of
          fame.

Sat Aug 31 13:55:52 2002  Balachandran Natarajan  <bala@isis-server.vuse.vanderbilt.edu>

        * ace/OS.i (ctime_r): This fixes a problem on Linux for the call
          to ::ctime_r where the pointer returned (result) is the same as
          the pointer (buf) passed in, causing the buffer to get clobbed
          if strsncpy is used subsequently to move the result back to the
          caller's buffer.

        * tests/OS_Test.cpp: Added a test for ACE_OS::ctime_r ().

          Thanks to Michael Searles <msearles@base16.com> for providing
          this patch.

Sat Aug 31 17:45:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-borland-common.h:
          Created a new config file for the Borland compiler. This will be
          used on the Win32 platform and the Kylix3 compiler on Linux

        * ace/config-linux-common.h:
          When the Borland compiler is detected, include the
          config-borland-common.h file

        * ace/config-win32-borland.h:
          Moved most of the contents to the config-borland-common.h file,
          only the lines that are Win32 specific stay here.

Sat Aug 31 10:32:38 2002  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Future.cpp (set): Removed a stray reference to "iterator"
          and replaced the for loop with a while loop.  Thanks to Craig
          Rodrigues for reporting this.

Sat Aug 31 01:20:09 UTC 2002  Craig Rodrigues  <crodrigu@bbn.com>
                              Gary Duzan  <gduzan@bbn.com>

        * include/makeinclude/rules.nested.GNU: Rewritten by Gary Duzan.
          If a list of directories is specified with DIRS= for a recursive
          make, make will halt immediately and propagate a non-zero
          return code to the shell if an error is encountered in a
          subdirectory.  The present behavior does not propagate any
          errors to make if there is an error in a subdirectory.  If make -k
          is specified, make will keep on going even if it encounters an
          error in a subdirectory, but it will also propagate a non-zero
          return code to make when the make finishes.  The current behavior
          is to keep on going if an error is encountered in a subdirectory,
          but NOT propagate a non-zero return code upon termination of make.

        * ace/Makefile.dirs: (Added) Specifies the DIRS= list of directories
          to invoke recursive makes on.

        * ace/Makefile.ace: (Added).  This builds libACE, like the old Makefile
          did.

        * ace/Makefile: Invoke Makefile.ace first, then Makefile,dirs.  It
          was necessary to split apart the DIRS= rule from the part of the
          Makefile which builds libACE in order to have parallel makes (-j 2)
          work on recursive makes.

Fri Aug 30 17:34:00 2002  Justin Michel <michel_j@ociweb.com>

        * ace/Timer_List_T.cpp:
        * ace/Timer_List_T.h:
        * ace/Timer_Wheel_T.cpp:
        * tests/Timer_Queue_Test.cpp:

        Reimplemented timer list to be compatible with Itanium. It no longer
        uses a Node* as the timer_id, so the cancel operation is now much
        more expensive. On the plus side I was able to make a few optimizations
        that improve the speed of the schedule operations.
        I also made a small optimization to the timer wheel, and updated
        the test slightly.

Fri Aug 30 15:53:18 2002  Steve Huston  <shuston@riverace.com>

        * tests/SSL/Makefile: Move the addition of SSL options/flags up to
          before the hackery of the compile command for AIX.

Fri Aug 30 05:48:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS.i (tempnam):
          Changed defines because special things only happen on Win32

Thu Aug 29 22:01:27 2002  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_hpux_gcc.GNU: Make the build options
          settable by the command line (and/or platform_macros.GNU), and
          fix the threads and soname options, as well we remove the
          -fstrict-prototype option from the compile options - it was needed
          for an older g++ (nothing prior to g++ 3 works right on HP-UX
          anyway) and is not valid for g++ 3.2 and later. Thanks to
          Ville Lehtiniemi <guderian@ees2.oulu.fi> for reporting these
          issues and sending fixes.

Thu Aug 29 15:18:31 2002  Steve Huston  <shuston@riverace.com>

        * ace/Get_Opt.{h i cpp} (long_option): Only print error messages for
          long message addition problems if opterr is set. Also added
          ACE_LIB_TEXT to naked strings for ACE_ERROR.

          Added opt_opt() method to return the most recently matched
          short option character. Thanks to Rich (Mr. POSIX) Seibel
          for the idea and POSIX spec info for this new method.

        * ace/Object_Manager.cpp (init): When finishing up initialization of
          the object manager, call ACE_Trace::start_tracing() to reenable
          trace in cases where a user does init/fini/init.

        * tests/Get_Opt_Test.cpp: Added usage of ACE_Get_Opt::opt_opt().

Thu Aug 29 15:03:23 2002  Ossama Othman  <ossama@uci.edu>

        * ace/README:

          Documented ACE_HAS_BROKEN_UNEXPECTED_EXCEPTIONS macro.

        * ace/config-win32-msvc-6.h
          (ACE_HAS_BROKEN_UNEXPECTED_EXCEPTIONS):

          MSVC++ 6 does not correctly handle exceptions thrown from
          functions/methods that do not list them in the exception
          specification.  In particular, the unexpected exception handler
          is not invoked.

Thu Aug 29 06:12:56 2002  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Future.cpp (set): Fixed the loop code so it's possible for
          the observer object to be deleted or detached in its update()
          operation.  Thanks to Tomer Amiaz <Tomer@bandwiz.com> for this
          fix.

Thu Aug 29 09:40:20 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ACEXML/common/Transcode.h:
        * ACEXML/parser/parser/Parser.h: Fixed incorrect usage of Doxygen
          tag.  Thanks to Johnny for pointing this out.

Thu Aug 29 12:20:17 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-borland.h:
          Removed the 1 after 2 defines, so that they are like the defines
          in other files.

Thu Aug 29 05:53:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Reactor/Proactor/post_completions.cpp:
          Fixed compile error.

        * ace/OS_Dirent.h:
        * ace/OS_Errno.cpp:
        * ace/Time_Value.h:
        * ace/Time_Value.inl:
          Made method signature the same in definition and implementation.

        * ace/TkReactor.cpp:
        * ace/TkReactor.h:
          Made method argument names the same as in the base so that doxygen
          can generate the documentation.

Wed Aug 28 23:30:31 2002  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/wrapper_macros.GNU: Remove addition of SSL
          compile/link options so that not all parts of ACE, needing SSL or
          not, get these options.

        * ace/SSL/Makefile:
        * tests/SSL/Makefile: Added the SSL compile/link options from
          wrapper_macros.GNU to these files, where they're needed.

        * ace/POSIX_Proactor.cpp (post_wakeup_completions): Use int
          to count completions, not ssize_t - match the passed-in arg type.
          Post the completion directly via the proactor, not via the
          wakeup completion; the dynamic_cast in ACE_POSIX_Asynch_IO::post_
          completion loses the subclass of ACE_POSIX_AIOCB_Proactor and
          when using any other subtype of proactor, the notification is
          queued incorrectly.

          (POSIX_SIG_Proactor::notify_completion()) - always queue the signal.
          Not doing so leaves a window where MT proactors can lose a signal.

        * tests/Proactor_Test.cpp: Use ACE_Proactor::close_singleton() to
          delete proactor instance. Just to be sure we try it.

        * ace/SSL/SSL_Asynch_Stream.{h cpp}: u_long->size_t changes.

Wed Aug 28 22:42:41 2002  Steve Huston  <shuston@riverace.com>

        * examples/Service_Configurator/Misc/main.cpp:
        * netsvcs/clients/Naming/Client/main.cpp:
        * tests/ARGV_Test.cpp:
        * tests/Get_Opt_Test.cpp: Change size_t to int as a side-affect of:
          Tue Aug 27 13:28:17 2002  Steve Huston  <shuston@riverace.com>
          * ace/ARGV.{h i cpp}: Changed argc() value from size_t to int. It
            needs to get passed to many places that expect int (argc, argv).

        * tests/Semaphore_Test.cpp:
        * tests/TP_Reactor_Test.{cpp h}:
        * tests/Upgradable_RW_Test.cpp: Further int/size_t corrections.

Wed Aug 28 19:56:16 2002  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * docs/ACE-subsets.html: Updated the document to point to the
          soreduce tool and to remove the discussion of PACE.  Thanks to
          Chumsu Kim <chskim@add.re.kr> for motivating this.

Wed Aug 28 14:24:36 2002  Steve Huston  <shuston@riverace.com>

        * ace/Log_Msg.h: Fixed Doxygenation of ACE_Log_Msg. Thanks to
          Philip Miller <pwmiller@sarnoff.com> for reporting this.

Wed Aug 28 11:21:04 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/templates/em3vcpdll.mpt:
        * bin/MakeProjectCreator/templates/em3vcpdllexe.mpt:
        * bin/MakeProjectCreator/templates/em3vcplib.mpt:
        * bin/MakeProjectCreator/templates/em3vcplibexe.mpt:
        * bin/MakeProjectCreator/templates/nmakedll.mpt:
        * bin/MakeProjectCreator/templates/nmakeexe.mpt:
        * bin/MakeProjectCreator/templates/vc6dspdll.mpt:
        * bin/MakeProjectCreator/templates/vc6dspdllexe.mpt:
        * bin/MakeProjectCreator/templates/vc6dsplib.mpt:
        * bin/MakeProjectCreator/templates/vc6dsplibexe.mpt:

          Enabled RTTI for all VC based template input files.

Wed Aug 28 06:18:35 2002  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

        * ace: Removed the config-sunos5.8-sunc++-5.4.h file since these
          changes should go in the config-sunos5.8.h file rather than
          a special file.  Thanks to Steve Huston for noticing this.

        * include/makeincludes: Removed the platform_sunos5_sunc++5.4.GNU
          file since it's no different from the platform_sunos5_sunc++.GNU
          file.  Thanks to Steve Huston for noticing this.

Wed Aug 28 06:12:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/tao.doxygen:
          Removed Services.h of the list of not to parse files

        * etc/tao_rtportableserver.doxygen:
          Added TAO_NAMESPACE to list of to expanded macros

        * tests/Timer_Queue_Test.cpp:
          Fixed unicode build error

        * ace/Timer_Wheel_T.cpp:
          Fixed doxygen tags.

Tue Aug 27 19:09:17 2002  Steve Huston  <shuston@riverace.com>

        * ace/Get_Opt.h: Documentation improvements.

Tue Aug 27 17:00:20 2002  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

        * ace/Signal.cpp: Fixed the ACE_Sig_Action constructors so that
          it doesn't break out of the loop just because a signal handler
          failed.  Thanks to Marcel Loose <loose@astron.nl> for reporting
          this.

Tue Aug 27 19:03:05 2002  Balachandran Natarajan  <bala@isis-server.vuse.vanderbilt.edu>

        * bin/auto_run_tests.lst: Added $TAO_ROOT/tests/ORB_shutdown test
          to the daily builds.

Tue Aug 27 18:52:59 2002  Balachandran Natarajan  <bala@isis-server.vuse.vanderbilt.edu>

        * ace/Select_Reactor_T.cpp (wait_for_multiple_events): Normally,
          select() will reset the bits in dispatch_set so that only those
          filed descriptors that are ready will have bits set.  However,
          when an error occurs, the bit set remains as it was when the
          select call was first made.  Thus, we now have a dispatch_set
          that has every file descriptor that was originally waited for,
          which is not correct.  We must clear all the bit sets because we
          have no idea if any of the file descriptors is ready.

          Thanks to Jody Hagins <jody@atdesk.com> and Carlos O'Ryan
          <coryan@atdesk.com> for reporting this problem and proving the
          patches.

Tue Aug 27 15:56:10 2002  Ossama Othman  <ossama@uci.edu>

        * ace/config-sunos5.8-sunc++-5.4.h:
        * include/makeinclude/platform_sunos5_sunc++5.4.GNU:

          Solaris 8 + SunC++ SPRO 5.4 platform configuration files.
          Thanks to Serge Kolgan <skolgan@objectsciences.com> for
          contributing these files.

Tue Aug 27 17:25:39 2002  Steve Huston  <shuston@riverace.com>

        * ace/WIN32_Proactor.{h cpp}: More u_long->size_t corrections.

Tue Aug 27 16:50:41 2002  Steve Huston  <shuston@riverace.com>

        * tests/Proactor_Test.cpp: Fixed mismatched printf formats for
          size_t arguments.

Tue Aug 27 16:32:18 2002  Steve Huston  <shuston@riverace.com>

        * ace/Proactor_Impl.h: Fixed some u_long->size_t changes missed
          on POSIX platforms.

Tue Aug 27 14:44:00 2002  Justin Michel  <michel_j@ociweb.com>

        * ace/Timer_Wheel_T.cpp:

        Fixed problem with incorrect name in ACE_TRACE macro.

Tue Aug 27 13:28:17 2002  Steve Huston  <shuston@riverace.com>

        * ace/config-win32-common.h: Added #define ACE_MALLOC_ALIGN 8 for
          Win64.

        * ace/Malloc_T.cpp (ACE_Cached_Allocator): When dividing up the
          allocated space, maintain the platform's alignment requirements.

        * ace/ace_dll64.mak: Removed references to Hash_Map_Manager_rt.*.

        * ace/Stream_Modules.cpp (info): Cast string length back to int.

        * ace/ARGV.{h i cpp}: Changed argc() value from size_t to int. It
          needs to get passed to many places that expect int (argc, argv).

        * ace/OS.{h cpp} (ACE_OS::string_to_argv): argc changed from size_t&
          to int& to match the change above.

        * ace/FILE_IO.{h i cpp}:
        * ace/SPIPE_Stream.{h i}: Follow-up to ACE_SOCK_Stream change in:
          Mon Jul 22 16:39:21 2002  Steve Huston  <shuston@riverace.com>
          (sendv_n, recvv_n, sendv, send, recv) - change iov count from
          size_t to int.

        * ace/Functor_T.i (ACE_Pointer_Hash::operator()): Use reinterpret_cast
          to go from pointer to u_long.

        * ace/config-win32-msvc-7.h: Define ACE_AUTO_PTR_LACKS_RESET for
          Win64 SDK compiler.

        * ace/Strategies_T.{h i cpp} (ACE_Thread_Strategy): Changed n_threads
          parameter (and n_threads_ member) from size_t to int - matches
          what's expected by ACE_Task::activate(), which is where this
          value is passed.

        * ace/Asynch_Acceptor.{h cpp}:
        * ace/Asynch_IO.{h cpp}:
        * ace/Asynch_IO_Impl.h:
        * ace/POSIX_Asynch_IO.{h cpp}:
        * ace/POSIX_Proactor.{h cpp}:
        * ace/WIN32_Asynch_IO.{h cpp}:
        * ace/WIN32_Proactor.{h cpp}: All byte-count arguments and members
          in all classes changed from u_long to size_t. Some already were...

        * ace/SOCK_Dgram.i (send): address length is an int, not size_t.

        * tests/Cache_Map_Manager_Test.h (Hash_Key::operator()): Cast the
          size_t argument to u_long for return.

        * tests/Cache_Map_Manager_Test.cpp: Cast arg for ACE_OS::srand to
          u_int (matches ACE_OS signature), not size_t.

        * tests/CDR_Array_Test.cpp (zero): Change len arg to size_t, and
          also the values passed to it. Also, correct length args to
          ACE_InputCDR and ACE_OutputCDR - they're size_t, not int.

        * tests/Handle_Set_Test.cpp: Disable the conversion warnings
          initializing the array of ACE_HANDLE values on Win64. They're fine.

        * tests/Mem_Map_Test.cpp (reverse_file): Changed size arg from int
          to size_t.

        * tests/Buffer_Stream_Test.cpp:
        * tests/CDR_Test.cpp:
        * tests/Message_Block_Test.cpp:
        * tests/Message_Queue_Notifications_Test.cpp:
        * tests/Priority_Buffer_Test.cpp:
        * tests/Proactor_Scatter_Gather_Test.cpp:
        * tests/Proactor_Test.cpp:
        * tests/Semaphore_Test.cpp:
        * tests/Thread_Pool_Test.cpp:
        * tests/TP_Reactor_Test.{h cpp}:
        * tests/Upgradable_RW_Test.cpp: Align size_t/int usage.

        * tests/Message_Queue_Notifications_Test.cpp (Watermark_Test::producer)
          Change hwm from size_t to ssize_t so it can go less than zero and
          break the 'for' loop properly.

        * tests/MT_SOCK_Test.cpp:
        * tests/SOCK_Test.cpp: Use an int to pass to select(), always 0
          for Win64.

        * tests/SOCK_Send_Recv_Test.cpp:
        * tests/Thread_Pool_Reactor_Resume_Test.cpp:
        * tests/Thread_Pool_Reactor_Test.cpp:
        * tests/TSS_TEst.cpp: Add missing type cast.

Tue Aug 27 11:08:54 2002  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Pair_T.{h,i}: Added support for operator== to the ACE_Pair
          can be used in maps, etc.  Thanks to Gonzalo Diethelm
          <gonzalo.diethelm@aditiva.com> for this addition.

Tue Aug 27 06:45:58 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/ProjectCreator.pm:

          Fixed a problem where .i and .h files would be added even if they
          didn't exist.

Tue Aug 27 10:09:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/tao_dynamicany.doxygen:
        * etc/tao_dynamicinterface.doxygen:
        * etc/tao_iormanip.doxygen:
        * etc/tao_iortable.doxygen:
        * etc/tao_portableserver.doxygen:
        * etc/tao_rtcorba.doxygen :
          Added TAO_NAMESPACE to the list of defines to expand.

Mon Aug 26 17:33:54 2002  Ossama Othman  <ossama@uci.edu>

        * bin/msvc_auto_compile.pl (Build_Core):

          Build the Messaging, PortableGroup and CosLoadBalancing
          libraries in a specific order.  CosLoadBalancing depends on the
          first two.  Fixes automated Win32 static builds.

Mon Aug 26 17:14:20 2002  Ossama Othman  <ossama@uci.edu>

        * tests/TkReactor_Test.cpp:

          Fixed a number of warnings.

Mon Aug 26 18:21:34 UTC 2002  Justin Michel  <michel_j@ociweb.com>

        * ace/Timer_Wheel_T.cpp:
        * ace/Timer_Wheel_T.h:
        * tests/Timer_Queue_Test.cpp:

          New and improved timer wheel implementation.

Mon Aug 26 09:51:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/FlReactor.{h,cpp}:
        * ace/TkReactor.{h,cpp}:
        * ace/QtReactor.{h,cpp}:
          Made the names of the arguments of the schedule_timer() method the
          same as in the base class. That way doxygen generates the same
          documentation for this overruled method as in the base.

        * ace/TLI_Connector.i:
        * ace/XTI_ATM_MCast.i:
          Made argument names the same as in the header file.

Mon Aug 26 08:29:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Connector.cpp:
          Replaced all short defines with the original ones. Doxygen can't
          generate the documentation because of the short defines.

Sun Aug 25 14:15:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-borland.h:
          Certain defines should only be defined without a value.

Sun Aug 25 12:45:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/tao.doxygen:
          Added TAO_NAMESPACE to the list of macro's that must be expanded
          when generating doxygen documentation.

Sat Aug 24 22:47:22 2002  Christopher Kohlhoff  <chris@kohlhoff.com>

        * include/makeinclude/ace_flags.bor:
        * include/makeinclude/clean.bor:
        * include/makeinclude/compiler.bor:

          Updated to support MakeProjectCreator.

        * bin/MakeProjectCreator/config/core.mpb:
        * bin/MakeProjectCreator/modules/ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/BorlandProjectCreator.pm:
        * bin/MakeProjectCreator/modules/BorlandWorkspaceCreator.pm:
        * bin/MakeProjectCreator/templates/bor.mpd:

          Fixed support for Borland makefile generation.

          New "core" config for projects that would typically be installed
          on production system, i.e. pretty much everything except examples
          and tests.

          New "include_dir" project attribute used to specify a directory
          path where header files for the project should be installed.

        * ace/ace.mpc:
        * ace/QoS/qos.mpc:
        * ace/RMCast/rmcast.mpc:
        * ace/SSL/ssl.mpc:

          Added "core" as a base project and added "include_dir" value.

        * apps/gperf/src/gperf.mpc:

          Added "core" as a base project.

Sat Aug 24 16:41:36 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ACEXML/common/FileCharStream.cpp (get):

          Remove :: in front of the macro feof. VC is hopelessly confused.

        * ace/Argv_Type_Converter.h:

          Added #include "ace/OS_Memory.h" to get ACE_NEW. I needed to
          touch this to test my changes.

Sat Aug 24 12:01:54 2002  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/OS.h: #undef the atop macro so that it won't break the new
          ACE_OS::atop() method on FreeBSD.  Thanks to Russell Carter
          <rcarter@pinyon.org> and Christophe Juniet
          <cjuniet@entreview.com> for this report.

        * ace/config-lynxos.h: Added some #defines for LynxOS 4.0.  We'll
          leave these comments out for now until we figure out how to add
          them without breaking earlier versions of LynxOS.  Thanks to
          Umberto Mascia <u.mascia@pxl.it> for reporting this.

        * docs/tutorials/015/Protocol_Stream.h (class Protocol_Stream):
          Changed a comment to say "server-side applications" rather than
          "client-side applications."  Thanks to Mark Xu <ltxd@371.net>
          for reporting this.

Fri Aug 23 18:20:31 2002  Steve Huston  <shuston@riverace.com>

        * ace/config-all.h:
        * ace/OS_Memory.h: Moved the ACE_NEW macros from config-all.h to
          OS_Memory.h

        * ace/Log_Msg.h: Removed #include "ace/Basic_Types.h" (not needed)
          and replaced "ace/OS_Errno.h" with "ace/OS.h" since thread defs
          are necessary.

        * ace/Basic_Types.h: Don't make thread definitions here - they belong
          in ace/OS.h.

        * ace/Cache_Map_Manager_T.h: Added #include "ace/Default_Constants.h"
          to get ACE_DEFAULT_MAP_SIZE when instantiating templates on AIX
          with Visual Age C++.

        * ace/Caching_Utility_T.cpp: #include "ace/Min_Max.h" and
          "ace/OS_Memory.h" so Visual Age C++ can see ACE_MAX and ACE_NEW
          when instantiating templates.

        * ace/Arg_Shifter.cpp: Added #include "ace/OS_Memory.h" to get ACE_NEW.

        * netsvcs/clients/Naming/Dump_Restore/Dump_Restore.cpp: Added
          #include "ace/Malloc_Base.h" to pick up ACE_Allocator.

        * tests/Cached_Allocator_Test.cpp: Changed default speed tests loops
          from 100,000,000 to 10,000,000. run_test.pl times it out on
          non-nuclear processors ;-)

Fri Aug 23 16:59:51 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/svcconf-convert.pl: Fixed regex to handle empty option
          strings in static/dynamic entries correctly.

Fri Aug 23 16:25:47 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ace/OS.i:
        * ace/OS.h:

          Removed the wrappers for functions that are known to be
          overloaded by macros. #undef will break user code for these
          functions. This includes feof(), ferror() and ungetc(). The
          other functions seem to only have a function implementation.

        * ACEXML/common/FileCharStream.cpp:

          Removed the use of ACE_OS wrappers for the above functions.

Fri Aug 23 08:40:38 2002  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/config-qnx-rtp.h: Added some new #defines so ACE will
          compile on QNX 6.2.  Thanks to Leen Van Kampen
          <leen.van.kampen@nl.vanderlande.com> for reporting this.

        * ace/Task.cpp (svc_run): Added a #ifdef for _MSC_VER <= 1200
          since there are complaints about reinterpret_cast from int to
          unsigned long.  Thanks to Espen Harlinn
          <espen.harlinn@seamos.no> for this fix.

Fri Aug 23 13:04:34 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Config.cpp: Some minor cosmetic changes.

Fri Aug 23 07:16:13 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/templates/vc6dsp.mpd:

          Fixed a problem where the pch header files is not in the list of
          header files.

Fri Aug 23 06:07:38 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ace/OS.h (ACE_OS):

          ungetc() is a macro under Borland. Undefine it to make Borland
          compiler happy.

Thu Aug 22 21:27:56 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS_String.cpp (strtok_r_emulation): Applied the patch Frank
          Kuhlman <kuhlmann@materna.de> submitted in [Bug 1272] which
          resolved an overrun error.

Thu Aug 22 21:20:01 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * include/makeinclude/rules.local.GNU (realclean.local):

          Remove older cruft when doing a realclean. Note this is a
          sledgehammer (libfoo.so*). Don't blame me if you shoot yourself
          in the feet, which technically shouldn't happen as long as you
          have the sources to the libraries that you built. Thanks to
          Ossama for pointing out that cruft was left behind.

Thu Aug 22 19:14:44 2002  Ossama Othman  <ossama@uci.edu>

        * ace/OS.i (fgetwc, ungetwc):

          These functions are supposed to return WEOF on error, not -1 as
          their ACE_OS wrappers were doing.  Corrects a warning about
          initialization of a negative value to "wint_t", which is an
          unsigned integer on some platforms (e.g. GNU libc).

Thu Aug 15 10:43:51 2002  Steve Huston  <shuston@riverace.com>

        * ace/Message_Queue_T.cpp (enqueue_tail): Moved notify() call outside
          lock scope, as Sun May  5 19:14:34 2002  Douglas C. Schmidt
          suggested.

Wed Aug 14 18:14:57 2002  Steve Huston  <shuston@riverace.com>

        * ace/OS.cpp (ACE_TSS_Cleanup::remove()): Always mark the key no
          longer in use, instead of simply decrementing the reference count.
          Shouldn't call remove() until there are no more references to
          the key.
          (ACE_TSS_Cleanup::detach()): Decrement the reference count when
          detaching. Previously, the count could never get to 0 and the
          remove() method would never be called until object manager shutdown.
          This resolves a problem where a service using
          ACE_Unmanaged_TSS_Singleton would do its cleanup(), but there would
          still be a reference to the key... if the destructor (in an unloaded
          service DLL) was called at process shutdown, it would crash.
          Thanks to Craig L. Ching <cching@mqsoftware.com> for pointing this
          problem area out.

Fri Aug  9 16:11:39 2002  Steve Huston  <shuston@riverace.com>

        * ace/Message_Block.cpp:
          (ACE_Data_Block::ACE_Data_Block): If the data allocation fails,
          reset the cur_size_ and max_size_ to 0 to reflect the fact that
          there is no legitimate memory allocated.
          (ACE_Message_Block::init_i): If the data block size() that results
          from allocating a new ACE_Data_Block is not what was requested,
          return -1 to indicate the failure.

        * ace/Malloc_T.i (ACE_Cached_Allocator::free): Don't attempt to
          return a 0 pointer to the free_list_. Thanks to Laxmikant
          Bopalkar <LBopalkar@protrader.com> for this fix.

        * THANKS: Added Laxmikant Bopalkar to the Hall of Fame.

Thu Aug 22 17:34:18 2002  Steve Huston  <shuston@riverace.com>

        * ace/FIFO_Recv_Msg.{h i}: Fixed recv() in the non-
          ACE_HAS_STREAM_PIPES case to throw away the part of a
          message longer than the max number of bytes requested by
          the caller. Filled out the doxygen comments in the header
          to explain the behavior, and the differences when (not)
          using ACE_HAS_STREAM_PIPES.

Wed Aug 21 17:48:29 2002  Steve Huston  <shuston@riverace.com>

        * examples/C++NPv2/TP_Logging_Server.cpp (TP_Logging_Task):
        * examples/C++NPv2/display_logfile.cpp (svc):
          Must use reinterpret_cast, not static_cast, to cast between
          unrelated types (char *, class *).

        * examples/C++NPv2/Makefile: Added AIO_CLD to top-level build.

Thu Aug 22 18:10:46 UTC 2002  Craig Rodrigues  <crodrigu@bbn.com>

        * bin/nightlybuilds/builds.lst: Move RedHat_Static build
          to new scoreboard.

Thu Aug 22 01:32:46 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ACEXML/common/StreamFactory.cpp:

          Use ACE_TEXT for literals. Add destructor to avoid linker
          problems.

        * ACEXML/parser/parser/Parser.cpp:

          Use ACEXML_Char instead of char* to fix compilation with WCHAR.

        * ACEXML/common/XML_Common.dsp:

          Add files StreamFactory.{h,cpp} to the project files.

Thu Aug 22 01:16:16 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ace/OS.h:

          Fixed compilation error under Windows by undefining the macros.

Wed Aug 21 22:22:42 2002  Ossama Othman  <ossama@uci.edu>

        * bin/msvc_auto_compile.pl (Build_Core):

          Removed "LoadBalancing_Static.dsp" from the list of static
          library projects to build.  That MSVC++ project was for the old
          load balancer, and no longer exists.

Thu Aug 22 03:50:02 UTC 2002  Craig Rodrigues  <crodrigu@bbn.com>

        * bin/performance_stats.sh:
        * bin/footprint_stats.sh: Calculate value of DATE
          inside these scripts instead of passing it in as the
          third parameter.  This will make it easier to make
          an autobuild script around this.

Wed Aug 21 20:40:20 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ace/OS.h:
        * ace/OS.i:

          Added wrappers for fgetc, fgetwc, ferror, clearerr, feof,
          ungetc, ungetwc. All these are guaranteed to not be macros.

        * ACEXML/apps/svcconf/Svcconf_Handler.cpp:
        * ACEXML/apps/svcconf/Svcconf_Handler.h:

          Fixed compilation errors.

        * ACEXML/common/FileCharStream.cpp:
        * ACEXML/common/HttpCharStream.cpp:
        * ACEXML/common/XMLFilterImpl.cpp:
        * ACEXML/examples/SAXPrint/Print_Handler.cpp:
        * ACEXML/examples/SAXPrint/SAXPrint_Handler.cpp:
        * ACEXML/examples/SAXPrint/main.cpp:
        * ACEXML/examples/svcconf/Svcconf_Handler.cpp:
        * ACEXML/parser/debug_validator/Debug_Attributes_Builder.cpp:
        * ACEXML/parser/debug_validator/Debug_DTD_Manager.cpp:
        * ACEXML/parser/debug_validator/Debug_Element_Builder.cpp:
        * ACEXML/parser/debug_validator/Element_Tree.cpp:
        * ACEXML/parser/parser/Parser.cpp:

          Use ACE_TEXT instead of ACE_LIB_TEXT. It results in reducing
          vertical space and the wchar.txt document also encourages it.

Wed Aug 21 17:02:44 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS_String.cpp: Changed to enabled wchar version of
          strtok_r_emulation when both ACE_HAS_WCHAR and ACE_LACKS_WCSTOK
          are both defined (instead of ACE_HAS_REENTRANT_FUNCTIONS.)
          Thanks to Brian Appel <bappel@integ.com> for reporting this.

Wed Aug 21 12:41:51 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/config/notifytest.mpb:
        * tests/SSL/tests.mpc:

          Fixed a few problems with some of the mpc files.

        * nightly.mwc:

          Added an initial nightly build workspace file.

Wed Aug 21 11:57:37 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/msvc_auto_compile.pl: Added ACEXML/apps to the list of
          compiled ACE directories.

Wed Aug 21 11:15:11 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/NMakeWorkspaceCreator.pm:
        * bin/MakeProjectCreator/modules/TemplateParser.pm:
        * bin/MakeProjectCreator/templates/nmake.mpd:

          Fixed a problem dealing with Windows, NMake and idl files.

Wed Aug 21 11:04:09 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Object_Manager.cpp (init): Changed to return failure (-1) if
          ACE_Object_Manager fail to acquire the TSS ACE_Log_Msg instance
          for whatever reason.  Thanks to Jeremy Altavilla
          <jeremya@artifact-entertainment.com> for suggesting the fix.

Wed Aug 21 07:43:12 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/ATM_Addr.{h,i}:
          Made the signature definition and implementation of set_selector()
          and get_selector() the same.

        * ace/CDR_Stream.cpp:
          Made the read_string() signature the same as in the definition

        * ace/config-doxygen.h:
          Added ACE_HAS_XTI_ATM to the list of defines that must be set
          when generating the doxygen documentation

        * ace/config-win32-mingw.h:
          Added extern "C" around the win32api methods ace uses but which
          are not defined in the mingw win32api.

        * ace/Lib_Find.cpp:
          Made signature of ldfind method the same as in the definition

        * ace/Log_Record.cpp:
          Made signature of print method the same as in the definition

        * ace/Multiplexor.i:
          Added #ifdef 0/#endif around the contents of this file, because the
          header and cpp file also do this. Doxygen parses now this .i file
          and gives a lot of warnings about this file because it cannot find
          the definition of the methods in this file.

        * ace/Configuration.h:
        * ace/Containers_T.cpp:
        * ace/Lib_Find.h:
        * ace/OS.h:
        * ace/RMCast/RMCast_Reliable_Factory.h:
        * ace/RMCast/RMCast_UDP_Proxy.h:
          Small improvements for doxygen documentation.

        * include/makeinclude/ace_flags.bor:
          Added cflags and lib for TAO PSDL library

        * include/makeinclude/platform_mingw32.GNU:
          MingW doesn't support the adding of the version number after
          the .dll, so set SONAME and SOVERSION to empty.

        * examples/Connection/non_blocking/test_lsock_acceptor.cpp:
        * examples/Connection/non_blocking/test_lsock_connector.cpp:
          Added include of Log_Msg to fix compile errors with MingW

Tue Aug 20 14:19:55 2002  Jaiganesh@doc  <bugzilla@cs.wustl.edu>

        * ACE version 5.2.4 released.

Fri Aug 16 10:25:07 2002  Ossama Othman  <ossama@uci.edu>

        * include/makeinclude/ace_flags.bor:

          Corrected CosLoadBalancing library related variables.  They
          were still setup for use with the old load balancer prototype.

Fri Aug 16 11:15:49 2002  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

        * examples/Reactor/Proactor/test_aiosig_ace.cpp: Added
          #include "ace/Log_Msg.h" so things will compile.  Thanks to
          Victor Poznyak <VPoznyak@Webley.COM> for reporting this and
          Alexander Libman <alexl@aurema.com> for suggesting the fix.

Thu Aug 15 15:22:49 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/tests.dsw: Re-added Thread_Manager_Test.dsp into this
          workspace.  It got accidentally removed when someone merged a
          branch into the main trunk.  Thanks to Ronald Berger
          <ronald.berger@wpafb.af.mil> for noticing this.

Mon Aug 12 10:17:55 2002  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Thread_Manager.h (ACE_Thread_Manager): Fixed a type where
          "manipulated" was spelled "maniputated".  Thanks to
          Eric Newton <ecn@metaslash.com> for reporting this.

        * PROBLEM-REPORT-FORM: Fixed a typo where "ASCII text" was spelled
          "ASCII test".  Thanks to Eric Newton <ecn@metaslash.com> for
          reporting this.

Fri Aug  9 12:13:21 2002  Jaiganesh Balasubramanian  <jai@doc.ece.uci.edu>

        * bin/nightlybuilds/builds.1st:
          Moved the Debian_Core builds to the new scoreboard.
          Thanks to CRaig Rodrigues <crodrigu@bbn.com> for the fix.

Fri Aug  9 09:24:08 2002  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Time_Value.{inl,cpp}: Make sure to normalize the set() methods...
          Thanks to Francois <francois@vibes.net> for reporting this.  This
          fixes BugID 1275.

Thu Aug  8 23:11:30 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * include/makeinclude/rules.nested.GNU: Reverted this change "Thu
          Aug  8 18:28:34 UTC 2002  Craig Rodrigues  <crodrigu@bbn.com>"
          since it would break our daily builds.

Thu Aug  8 18:28:34 UTC 2002  Craig Rodrigues  <crodrigu@bbn.com>

        * include/makeinclude/rules.nested.GNU: If we fail during a recursive
          make, exit with error code 1.  This makes it easier to detect errors
          in automated builds.  Thanks to Gary Duzan <gduzan@bbn.com> for showing
          inspiring the fix.

Wed Aug  7 12:39:31 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/Driver.pm:

          Speed up execution by changing the include path order.

        * bin/MakeProjectCreator/modules/GNUWorkspaceCreator.pm:

          Don't generate a for loop if there is only one project.

        * bin/MakeProjectCreator/modules/ProjectCreator.pm:

          Fixed a bug with the global assignments overwriting project
          assignments.

Sun Aug  4 16:47:29 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/Framework_Component_DLL.cpp: Added a missing template
          instantiation. It was caught only in SunCC53 builds.

Sun Aug  4 16:01:28 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/auto_run_tests.lst: Do not the Stack_Recursion tests in
          single threaded  builds.

Sat Aug 03 17:57:33 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/ace_dll.dsp: Removed the Hash_Map_Manager_rt.cpp from the
          project file.

Sat Aug 03 15:42:49 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * examples/Log_Msg/Log_Msg_MFC/Log_Msg_MFC.dsp: Made sure that it
          builds only in MFC debug builds.

Sat Aug  3 14:56:23 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ACEXML/common/HttpCharStream.cpp:

          Fixed a conversion error from char to wchar_t. Thanks to Johnny
          for pointing this out.

        * ACEXML/parser/parser/Parser.cpp:

          Fixed an unreachable statement warning. Thanks to Bala for
          pointing this out.

Sat Aug  3 19:53:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACEXML/common/XML_Codecs.h:
        * ACEXML/parser/parser/Parser.h:
        * ace/Registry.h:
        * ace/String_Base.h:
        * ace/QoS/QoS_Session_Factory.h:
          Fixed doxygen commands.

Sat Aug  3 12:36:55 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Hash_Map_Manager_rt.h:
        * ace/Hash_Map_Manager_rt.cpp:
        * ace/Hash_Map_Manager_rt.i: Removed these files from the main
          trunk. They shouldnt have been there in the first place.

Fri Aug  2 22:00:26 UTC 2002  Craig Rodrigues  <crodrigu@bbn.com>

        * examples/Log_Msg/Log_Msg_MFC/*: Added example to show how
          to send ACE_DEBUG output to the Microsoft Visual Studio debugger console.
          Thanks to Don Hinton <dhinton@ieee.org> and
          Chris Hafey <chafey@stentor.com> for help with this.

Fri Aug  2 13:10:05 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ACEXML/examples/SAXPrint/main.cpp (ACE_TMAIN):
        * ACEXML/common/InputSource.cpp:

          Reverted the previous check-in with respect to the delete
          statement. Memory is getting leaked somewhere down in ACE.

Fri Aug  2 12:31:34 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ACEXML/common/ContentHandler.h:
        * ACEXML/parser/parser/Entity_Manager.cpp:
        * ACEXML/common/NamespaceSupport.cpp:

          Fixed minor typos in the comments.

        * ACEXML/common/InputSource.cpp:

          Removed an erroneous delete statement. Not sure if this is a
          implementation bug or a thinko.

        * ACEXML/common/HttpCharStream.cpp:
        * ACEXML/common/Mem_Map_Stream.cpp:
        * ACEXML/common/Mem_Map_Stream.h:

          Use char* when sending data on the network. Technically it
          should be byte.

        * ACEXML/examples/SAXPrint/Print_Handler.cpp:
        * ACEXML/examples/SAXPrint/main.cpp:

          Fixed a bug with getopt() when WCHAR is enabled. Since EOF is
          -1, never use a WCHAR in the while loop.

        * ACEXML/parser/parser/Parser.cpp:
        * ACEXML/parser/parser/Parser.h:

          Improved Namespace support. Modularized functions in the parser.

        * ACEXML/docs/TODO.txt:
        * ACEXML/docs/bugs.txt:
        * ACEXML/docs/guidelines.txt:
        * ACEXML/docs/parser_features.txt:

          Updated to reflect the current status. People were reading these
          old docs and assuming a lot of the features aren't implemented.

Fri Aug  2 16:06:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-doxygen.h:
          Added ACE_HAS_ATM define to also generate the doxygen documentation
          of the ACE ATM classes. This is one of the last parts of ACE that
          are missing in the doxygen documentation.

Fri Aug  2 07:54:24 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Malloc.cpp: Rearranged member initialization list in the
          constructor of ACE_Malloc_Stats, to fix warnings with explicit
          template builds.

Thu Aug 01 13:40:59 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/Malloc_Test.cpp: Changed the usage of ASYS_TEXT to
          ACE_TEXT.  Should fix most of the compile errors with g++.

Thu Aug  1 12:14:21 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/templates/gnu.mpd:

          Added $(ACELIB) to the list of ACE_SHLIBS.

Thu Aug  1 11:13:20 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Malloc_Allocator.h:
        * ace/Malloc_Allocator.cpp: Removed the declaration and definition
          of ACE_Malloc_Stats since they are not needed in this
          translation unit.

        * ace/Malloc.h:
        * ace/Malloc.cpp: Retained the definition if ACE_Malloc_Stats here
          (yes, there were two declarations) and added the definition and
          template instantiation for ACE_Atomic_Op used by
          ACE_Alloc_Stats. This should fix the erros showing up on the
          scoreboard explicit template builds which has
          ACE_HAS_MALLOC_STATS turned on.

Thu Aug  1 09:08:36 2002  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

        * ace/Message_Block.h: Made the non-static duplicate() and release()
          methods virtual so they can be overridden by subclasses.  Thanks
          to Brian Raven <brianr@liffe.com> for this suggestion.

Thu Aug 01 15:24:32 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS_Thread_Adapter.h:
          Fixed incorrected doxygen @file command.

Thu Aug 01 14:52:44 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/fuzz.pl:
          Improved the check for the @file doxygen command. Incomplete file
          names where not detected as error.

Thu Aug  1 07:03:05 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/README:

          Added a bit of background on the tool before plunging into the
          details.

Thu Aug 01 07:59:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Asynch_Acceptor.h:
        * ace/XtReactor.cpp:
        * ace/XtReactor.h:
          Corrected argument names to fix doxygen warnings.

Thu Aug 01 07:34:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-mingw.h:
          Made the definition of the missing parts of the Win32api of MingW
          dependent on the version of the w32api instead of our own defines.
          This way we automically define the missing things when needed. Thanks
          to Craig for suggesting this.

Wed Jul 31 23:39:27 UTC 2002  Craig Rodrigues  <crodrigu@bbn.com>

        * etc/*.doxygen: Change DOT_PATH from /usr/local/bin/ to
          empty, forcing doxygen to look for the dot program in PATH.
          This eliminates warnings in the Doxygen nightly build.

Wed Jul 31 12:23:47 2002  Steve Huston  <shuston@riverace.com>

        * ace/Malloc.cpp:
        * ace/Malloc_T.cpp:
        * tests/Malloc_Test.cpp: Changed logging of pointers to %@

        * tests/Mem_Map_Test.cpp: Fixed loop bound error.

Wed Jul 31 11:34:58 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/index.html: Added a link to ACEXML document.

Wed Jul 31 10:47:54 2002  Chad Elliott  <elliott_c@ociweb.com>

        * include/makeinclude/rules.local.GNU:

          Added a gnu macro (DEPEND_CMD_ARGS) to the g++dep line to allow
          pasing arguments (such as -R) to g++dep when running "make depend"

Wed Jul 31 08:41:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-mingw.h:
          For the compilation of Win32_Asynch_IO we now need to have
          FILE_SEGMENT_ELEMENT from winnt.h and ReadFileScatter and
          WriteFileScatter from winbase.h.
          These are not in the header files of the MingW w32api 1.4/1.5
          release. That's why we do these union/defines also in this header
          file. By adding the defines ACE_MINGW_LACKS_READWRITE_FILESCATTER
          and ACE_MINGW_LACKS_FILE_SEGMENT_ELEMENT to your config.h file
          these defines/union are done by ACE for MingW32 so that everything
          will compile.

Wed Jul 31 08:11:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/Task.cpp:
          Also the MinGW32 GCC3.1 compiler has problems with the
          reinterpret_cast in the svc_run method. Use the static_cast instead.

Wed Jul 31 07:40:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/*.doxygen:
          Enabled warnings to get them in the doxygen scoreboard.

        * ace/Configuration.cpp:
          Fixed method argument names to fix doxygen warnings.

Tue Jul 30 15:45:23 2002  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

        * ace/SOCK_Dgram.h: Fixed the comment for send(), which had a
          cut and paste error.  Thanks to Jeff Wilson
          <wilsonj@cs.ecs.baylor.edu> for reporting this.

Tue Jul 30 14:09:35 2002  Chad Elliott  <elliott_c@ociweb.com>

        * tests/tests.mpc:

          Update the mpc file to include the libraries.

Tue Jul 30 09:07:29 2002  Ossama Othman  <ossama@uci.edu>

        * ace/Parse_Node.h:
        * ace/Parse_Node.cpp:

          Unexported all classes in this file.  They are only meant for
          internal use by ACE's Service Configurator.  Updated Doxygen
          comments accordingly.

          (apply, symbol, open_dll):

          These methods now accept a "yyerrno" reference argument to allow
          for modification of the error count in a reentrant manner.

        * ace/Svc_Conf.h:

          Removed "ace_yyerrno" and "ace_yylineno" global variables.
          Local ones are now used.

          Altered signature of ace_yyerror() function to accept two
          additional parameters, yyerrno and yylineno.  Addresses a race
          condition.

        * ace/Svc_Conf.y:

          Removed all remnants of the global "yyerrno" and "yylineno"
          variables.  Only the reentrant versions are used now.

          Pass the "yyerrno" variable as a parameter to all functions that
          read or modify the parse error count.  Addresses several race
          conditions.

          Fixed call to ACE_Location_Node::handle().  This method no
          longer exists.  The correct call is ACE_Location_Node::dll().
          For some reason, Svc_Conf_y.cpp (a generated file!!!) was
          "fixed" but the parser grammar file was never fixed.

        * ace/Svc_Conf.l:

          Removed all remnants of the global "yylineno" variable.  Only
          the reentrant version is used now.

        * ace/Service_Config.cpp (process_directives_i):

          Removed initialization of "ace_yyerrno" and "ace_yylineno"
          global variables.  They no longer exist.  Poof!

          Reverted my previous change.  The above changes obviate the need
          to take into account the global parse error count.

        * ace/Makefile:

          Tweaked Svc_Conf_y.cpp and Svc_Conf_l.cpp generation rules so
          that yyerrno and yylineno are not prepended with an "ace_".
          That is no longer needed.

        * etc/Svc_Conf_y.cpp.diff:

          Regenerated this patch against parsers generated by the latest
          GNU Bison (1.35).

        * etc/Svc_Conf_l.cpp.diff:

          Regenerated this patch to pull in new changes to Svc_Conf_l.cpp.

Tue Jul 30 10:06:04 2002  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Thread_Manager.cpp: Moved a stray colon until *after*
          the #if !defined(ACE_USE_ONE_SHOT_AT_THREAD_EXIT) check.  Thanks
          to Alan Tanga <stang1@lucent.com> for reporting this.

        * ace/POSIX_Proactor.cpp (delete_result_aiocb_list): Moved
          the definition of size_t ai out of the for loops to avoid
          problems on older C++ compilers.  Thanks to George Varsamis
          <gv@prismtechnologies.com> for reporting this.

Tue Jul 30 08:14:34 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/Creator.pm:

          Added an error check for invalid inheritance syntax.

        * bin/MakeProjectCreator/modules/Driver.pm:

          Changed the progress indicator to allow for cleaner output
          when an error occurs.

        * bin/MakeProjectCreator/modules/ProjectCreator.pm:

          Remove duplicate libs, libpaths and includes when addition or
          subtraction is involved.

        * bin/MakeProjectCreator/templates/gnu.mpd:

          Cleaned up the template to make generated Makefiles a little more
          consistent.

Tue Jul 30 06:50:26 2002  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

        * ace/Dynamic_Service.cpp: Moved ACE_Dynamic_Service::instance()
          from the .i file into the .cpp file and added a #include of
          "ace/Service_Object.h" to the .cpp file so the complete type of
          ACE_Service_Object would be available to the HP/UX C++ compiler.
          Thanks to Torsten Kuepper <Torsten.Kuepper@nokia.com> for
          reporting this.

Tue Jul 30 07:51:12 UTC 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/ace.doxygen:
          Enabled warnings and undocument warnings to get these warnings
          into the doxygen scoreboard. When this works I will enable the
          warnings in all other .doxygen files later.

Mon Jul 29 14:47:46 2002  Ossama Othman  <ossama@uci.edu>

        * ace/Service_Config.cpp (process_directives_i):

          In addition to the thread-safe yyerrno variable, check the
          global ace_yyerrno variable when determining if errors have
          occurred when processing Service Configurator directives.
          Thanks to Doug for tracking down the problem and suggesting a
          fix and to Denginere <denginere@hotmail.com> for reporting this.

Mon Jul 29 17:30:27 2002  Steve Huston  <shuston@riverace.com>

        * ace/Get_Opt.h (ctor): Changed documented name of the skip_argv0
          argument to skip_args to better reflect that it's not just
          argv[0] that can be skipped.

Mon Jul 29 07:45:12 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS.cpp (uname): Only check for PROCESSOR_ARCHITECTURE_IA64
          when this is defined. The MingW w32api doesn't define this constant.

Sun Jul 28 17:17:50 2002  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * docs/ACE-subsets.html: Updated the breakdown of files to
          each subset component so it's consistent with the
          $ACE_ROOT/Makefile.  Thanks to Ruslan Zasukhin
          <sunshine@public.kherson.ua> for reporting this.

Sun Jul 28 10:31:12 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_gnuwin32_common.GNU:
          Use -mcpu=$(TCPU) instead of -m$(TCPU), because MingW GCC 3.1
          now gives warnings that -m is deprecated. Thanks to Craig Rodrigues
          for confirming that -m was already deprecated in GCC 2.95.3

Sat Jul 27 17:35:06 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * include/makeinclude/platform_g++_common.GNU (SOFLAGS):

          Allow building of shared libraries with gcc and Solaris ld.
          There wasn't any reason that it wouldn't work.

        * Changelog: Remove >>>>> left out by merge conflicts. People
          should be more careful about checking for conflicts.

Sat Jul 27 16:20:19 2002  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * examples/Service_Configurator/Misc/main.cpp (ACE_TMAIN): Changed
          the code to be more resilient against errors that occur during
          parsing of the svc.conf file.  Thanks to Denginere
          <denginere@hotmail.com> for motivating this change.

Sat Jul 27 15:50:12 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACEXML/examples/svcconf/main.cpp:
          Made this file compiling with BCB and Unicode

        * ACEXML/examples/svcconf/Svcconf_Handler.h:
          Made includes like the other examples so that we can build it with
          BCB

        * ACEXML/examples/svcconf/Svcconf_Handler.cpp:
          Fixed unused argument warnings

        * ACEXML/examples/svcconf/Makefile.bor:
          Added this BCB makefile

        * ACEXML/examples/Makefile.bor
          Added svcconf directory

Fri Jul 26 21:00:32 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/TP_Reactor.cpp: Fixed a unused variable warning in g++
          builds.

Fri Jul 26 20:08:41 2002  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_aix4_g++.GNU: Corrected option for
          using threads from -mthreads to -pthread. This may not work with
          pre-gcc 3 compilers, but those compilers are busted on AIX anyway.
          Added support for buildbits=32 and buildbits=64. Moved in the new
          AIX library-building setup from platform_aix_ibm.GNU.

Fri Jul 26 15:52:12 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/TP_Reactor.cpp: Fixed a problem with handle_event
          (ACE_Time_Value &). It should be calling the TP_Reactor's
          handle_event () instead of Select_Reactor's. This should fix
          [BUGID 1257].

Fri Jul 26 10:11:41 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/config/messaging.mpb:
        * bin/MakeProjectCreator/config/messaging_only.mpb:

          Set up a new base project that just contains information about
          the Messaging library.

        * bin/MakeProjectCreator/modules/GNUProjectCreator.pm:
        * bin/MakeProjectCreator/templates/gnu.mpd:

          Allow the file lists to contain names of files that correspond
          to relative directories.

Fri Jul 26 06:40:12 2002  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/OS_String.inl: Added casts of the input parameter to
          (unsigned char) for the ace_isprint() and ace_isspace() methods
          on ACE_OS_String to prevent problems with MSVC++ 7.0.  Thanks to
          Colin Weaver <colin.weaver@invensys.com> for suggesting this
          fix.

Fri Jul 26 10:37:12 2002  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/tao_pss.doxygen:
          Added doxygen config file to generate the new TAO PSS.

        * bin/generate_doxygen_pl:
          Added tao_pss.doxygen to the list of files to generate.

        * htlm/index.html:
          Added link for the new PPS doxygen documentation.

Thu Jul 25 22:58:24 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Synch.cpp: Removed explicit instantiation of
          ACE_Condition<ACE_Recursive_Thread_Mutex> since a template
          specialization exists. This was causing a compile error when
          explicit template instantiations were used with
          g++-2.95.3.

Thu Jul 25 11:32:41 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/README:

          Added a little more detail about what the depends keyword refers
          to.

        * bin/MakeProjectCreator/USAGE:
        * bin/MakeProjectCreator/modules/Driver.pm:

          Changed the code to show the default type in the usage message.

        * bin/MakeProjectCreator/modules/GNUWorkspaceCreator.pm:

          Change the workspace to use a for loop when building on UNIX.

        * tests/RMCast/tests.mpc:
        * tests/SSL/tests.mpc:

          Fixed the case on the dependencies lines.

Wed Jul 24 13:38:40 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/Creator.pm:
        * bin/MakeProjectCreator/modules/Driver.pm:
        * bin/MakeProjectCreator/modules/ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/WorkspaceCreator.pm:

          Added a progress indicator (for those big workspaces).

Wed Jul 24 13:10:19 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/ProjectCreator.pm:

          Add README and readme to the default documentation
          files.

        * bin/MakeProjectCreator/modules/Creator.pm:
        * bin/MakeProjectCreator/modules/GUID.pm:
        * bin/MakeProjectCreator/modules/VC7ProjectCreator.pm:

          Change the GUID generation code to be deterministic (but still
          unique) to allow for multiple solution files to contain the same
          project files without having to regenerate the solutions.

Wed Jul 24 13:42:37 2002  Steve Huston  <shuston@riverace.com>

        * ace/OS.cpp (uname): Added case for PROCESSOR_ARCHITECTURE_IA64
          when decoding processor type.

Wed Jul 24 10:58:22 2002  Steve Huston  <shuston@riverace.com>

        * ace/Acceptor.cpp (ACE_Acceptor::handle_input): When calling select(),
          use a int value instead of casting a ACE_HANDLE to an int.

        * tests/Cached_Accept_Conn_Test.cpp: Use %@ instead of %d when
          logging pointers.

        * tests/MT_Reactor_Upcall_Test.cpp: Added ACE_TEXT to char strings
          where needed. Changed the send to send fixed header, then the
          variable-size string. Sending all at once doesn't work if the
          string doesn't immediately follow the size_ member in memory,
          which happened on Win64.

Wed Jul 24 10:07:24 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/README:
        * bin/MakeProjectCreator/USAGE:

          Update the documentation to reflect the current state.

Wed Jul 24 08:13:48 2002  Christopher Kohlhoff  <chris@kohlhoff.com>

        * include/makeinclude/build_dll.bor:
        * include/makeinclude/build_exe.bor:
        * include/makeinclude/build_lib.bor:
        * include/makeinclude/make_flags.bor:
          Improve debugging support with Borland C++Builder by invoking the
          compiler with a full path to each source file. This can be disabled
          by setting a NO_FULL_PATH environment variable to 1 or by passing
          -DNO_FULL_PATH when running make, which may be necessary when doing
          a debug build on Win9x.

Wed Jul 24 07:45:43 2002  Chad Elliott  <elliott_c@ociweb.com>

        * THANKS: Added Tim Bradley to the hall of fame.

Tue Jul 23 21:46:54 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Process_Mutex.h:
        * ace/Process_Mutex.cpp: Disallowed anonymous Process_Mutex by
          invoking this->unique_name() to create a temporary name if
          there's no mutex name passed to the constructor.  Thanks John
          Michael Zorko <j.zorko@att.net> for reporting this problem on
          Mac OSX and submitting the patch.

Tue Jul 23 13:08:27 2002  Steve Huston  <shuston@riverace.com>

        * ace/Log_Msg.{h cpp} (log_hexdump):
        * ace/ACE.{h cpp} (format_hexdump): Change size arguments from int
          to size_t. Change format_hexdump()'s return from int to size_t.

Tue Jul 23 09:48:15 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/Driver.pm:

          Always add the default include paths.

        * bin/MakeProjectCreator/modules/ProjectCreator.pm:

          Make sure that idl generated source files go at the front of the
          file list in auto-generates source lists.

        * bin/MakeProjectCreator/templates/gnu.mpd:

          Only add LIB and SHLIB assignments if we are generating a Makefile
          for libraries.

Mon Jul 22 22:30:53 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ACEXML/common/XML_Common.dsp: Added the macro definition
          ACEXML_HAS_DLL=1 to the release configuration to resolve a
          nightly biuld problem.

Mon Jul 22 18:28:48 2002  Steve Huston  <shuston@riverace.com>

        * ace/Configuration.h: Doxygen fixes.

Mon Jul 22 16:57:19 2002  Chris Cleeland  <cleeland_c@ociweb.com>

        * bin/g++dep: Added a -R option that allows you to specify a
          variable which should be used to generate relative paths if it's
          defined.

Mon Jul 22 17:45:48 2002  Steve Huston  <shuston@riverace.com>

        * ace/Get_Opt.h: Doxygen fixes.

Mon Jul 22 16:39:21 2002  Steve Huston  <shuston@riverace.com>

        * ace/Acceptor.cpp (info):
        * ace/Connector.cpp (info): Cast return val to int.

        * ace/Message_Queue.h (message_count):
        * ace/Message_Queue_T.{h cpp i} (message_count): Change return value
          from size_t to int. Changed cur_count_ member (and accessors that
          return it) from size_t to int. This is a compromise to unify the
          length of arguments without changing the return types of all
          methods that return a message count (all the enqueue/dequeue methods,
          as well as a few others).
          Changed a number of @arg to @param for doxygen.

        * ace/SOCK_IO.{h i} (recvv, sendv):
        * ace/SOCK_Stream.{h i}(recvv_n, sendv_n): Changed iovcnt arg from
          size_t to int. int, though sort of odd as a choice, is the
          UNIX98 standard and more commonly implemented. Removes an arg
          size mismatch between the SOCK_IO and ACE layers, restricting the
          iovcnt range at the SOCK_IO layers to match the layer below.
          Changed the recv and send iov-enabled, deprecated methods to cast
          their size_t iovcnt args to int... these deprecated methods should
          be removed after 5.3 is out.

        * tests/Conn_Test.cpp: Replaced %d with %@ when logging pointers.
          Added missing string arg for a ACE_ERROR %p directive. Use a
          int select_width instead of casting ACE_HANDLE for Win64.

Mon Jul 22 15:13:38 2002  Carlos O'Ryan  <coryan@atdesk.com>

        * ace/Atomic_Op.h:
        * ace/Atomic_Op.i:
          Fixed bug 1253, add missing copy constructor.

Mon Jul 22 13:25:29 2002  Stephen Torri <storri@cs.wustl.edu>

        * ace/streams.h: Fixed _MSC_VER compiler warning messages stating
          concern about using MSC_VER without assurance that the macro
          was defined.

Mon Jul 22 12:20:21 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * THANKS: Added Sean Ogle to the hall of fame.

Mon Jul 22 09:19:34 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * THANKS: Aded Kew Whitney and Colin Weaver to the hall of fame.

Sat Jul 20 08:53:05 2002  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/SOCK_Dgram.cpp (set_nic): Moved the #endif for
          ACE_WIN32 *ahead* of the set_options() call.  Thanks to Joe
          Hayes <Joe.Hayes@lmco.com> for reporting this.

Fri Jul 19 14:42:37 2002  Steve Huston  <shuston@riverace.com>

        * ace/WFMO_Reactor.cpp (make_changes_in_suspension_infos,
          make_changes_in_current_infos):
          Fixed bug resulting from: Wed Jul 17 11:34:28 2002  Steve Huston

Thu Jul 18 15:48:29 2002  Steve Huston  <shuston@riverace.com>

        * ace/Future.h: Doxygenation improvements.

Thu Jul 18 08:39:08 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/README:

          Update the documentation to reflect the additions to the grammar.

        * bin/MakeProjectCreator/config/avstreamsexe.mpb:
        * bin/MakeProjectCreator/config/corba_messaging.mpb:
        * bin/MakeProjectCreator/config/minimum_corba.mpb:
        * bin/MakeProjectCreator/config/namingexe.mpb:
        * bin/MakeProjectCreator/config/notify.mpb:
        * bin/MakeProjectCreator/config/orbsvcsexe.mpb:
        * bin/MakeProjectCreator/config/orbsvcslib.mpb:
        * bin/MakeProjectCreator/config/rt_client.mpb:
        * bin/MakeProjectCreator/config/rt_server.mpb:
        * bin/MakeProjectCreator/config/rteventexe.mpb:

          Add the GNU specific info for generating conditional target
          Makefiles.

        * bin/MakeProjectCreator/modules/GNUProjectCreator.pm:

          Added code to generate the conditional sections of the GNU
          Makefiles.

        * bin/MakeProjectCreator/modules/ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/TemplateParser.pm:

          Fix some minor problems with generated project files.

        * bin/MakeProjectCreator/templates/gnu.mpd:

          Added template info for conditional targets.

        * bin/MakeProjectCreator/templates/vc6dsp.mpd:
        * bin/MakeProjectCreator/templates/vc7.mpd:

          Removed the tie class idl targets.

        * bin/ace_components:

          Added a new append option that will be used by the generated GNU
          Makefiles.

Thu Jul 18 06:17:19 2002  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * Doug turns 40 today.  Fortunately, 40 Octal is only 32 Decimal ;-).

Wed Jul 17 15:18:31 2002  Steve Huston  <shuston@riverace.com>

        * ace/Configuration.h: Doxygen improvements.

        * ace/Configuration.cpp: All error cases where a return
          (-2, -3, -4, -5) occurred now return -1 with errno set.

        * ace/OS.{i cpp}: Follow-up to Wed Jul 17 11:34:28 2002  Steve Huston
          Only make ACE_WIN64 use intptr_t - must have a new SDK to get
          intptr_t, and not all have it.... so use it only for ACE_WIN64
          since the compiler comes in the newer SDK... Win32 does
          fine with long, which is what an intrptr_t is on Win32.

          Also fixed the PACE-busted conditional compiles around siginfo_t
          to match the declaration in OS.h. Win32 needs this stuff.

Wed Jul 17 14:25:39 2002  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_aix_ibm.GNU: Added -qfuncsect to the
          compile options. Allows for smaller executables/libraries, and
          gets rid of most of the multiple definition warnings for templates.
          Unfortunately, there are still a few stragglers so the aix_shr
          post-processing script is still required.

        * ace/Sock_Connect.cpp: Added a hack to get Visual Age C++ on AIX
          build running clean. Have to include a template instantiation we
          don't need to get the compiler to pull the proper header files
          at template compilation time.

Wed Jul 17 11:34:28 2002  Steve Huston  <shuston@riverace.com>

        * ace/OS.{i cpp}: Windows, in calls to _open_osfhandle(), cast
          handle to long for C++Builder. Only MSVC has the intptr_t type.

        * ace/WFMO_Reactor.cpp (make_changes_in_current_infos,
          make_changes_in_suspension_infos): Run the index from 0 to
          last_valid_slot rather than valid slot down to 0 to allow
          correct use of size_t index.

        * ace/WIN32_Proactor.cpp (register_handle, post_completion): Use
          a reinterpret_cast, not static_cast to cast void* to ULONG for
          non-Win64.

Wed Jul 17 03:50:56 UTC 2002  Don Hinton  <dhinton@objectsciences.com>

        * ace/ACE.cpp:
        * ace/OS.{h,i,cpp}:
        * ace/OS_Dirent.inl:
        * ace/OS_Memory.h
        * ace/OS_String.inl:
        * ace/Thread_Manager.cpp:
        * ace/WFMO_Reactor.cpp:
        * ace/config-all.h:
        * ace/config-win32-borland.h:
        * ace/config-win32-msvc-5.h:
        * ace/config-win32-msvc-6.h:
        * include/makeinclude/wrapper_macros.GNU:

          Removed PACE.

Tue Jul 16 14:19:37 2002  Steve Huston  <shuston@riverace.com>

        * ace/DLL_Manager.cpp:
        * ace/Parse_Node.cpp: (also see Fri Jul 12 12:37:42 2002  Steve Huston)
          Always use the ptrdiff_t trick to cast a void* to a func ptr.
          Nanbor was right ;-)  Thanks to Carlos O'Ryan <coryan@atdesk.com>
          for clarifying this issue, including C++ chapter and verse.
          (It's in ISO C++ section 5.2.10 for those interested).

        * tests/DLL_Test.cpp: Use ptrdiff_t as a mediary to cast a void *
          to a func ptr, not a long.

Mon Jul 15 21:23:47 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Message_Block.i (base): Fixed a warning in TRU 64 builds.

Mon Jul 15 18:56:47 2002  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

        * ace/String_Base.cpp (substring): Changed "nil" to "nill" to
          avoid conflicts with a Mac OS X macro.  Thanks to Ruslan
          Zasukhin <sunshine@public.kherson.ua> for reporting this.

Mon Jul 15 15:18:33 2002  Steve Huston  <shuston@riverace.com>

        * ace/Configuration.{h cpp}: Changed ACE_Configuration_Value_IntId
          data_ member to be a union with both pointer and u_int members.
          Also, the length_ member is now size_t, not u_int.

        * ace/Memory_Pool.cpp (ACE_Pagefile_Memory_Pool::map): Use
          INVALID_HANDLE_VALUE instead of a literal 0xFFFFFFFF for call to
          CreateFileMapping.

        * ace/OS.{h i}: New method, void *atop(const char *s) converts a
          string to void *.

        * ace/OS.i (fdopen): Don't cast arg to _open_osfhandle - Microsoft
          changed the type to something sensible.
          (isatty): open a C run-time handle for the ACE_HANDLE.

        * ace/OS.cpp (fopen): Don't cast arg to _open_osfhandle - Microsoft
          changed the type to something sensible.
          (unique_name): Use sprintf %p for pointer rather than casting
          to an int.

        * ace/Naming_Context.cpp (ACE_Name_Options::parse_args): Use
          ACE_OS::atop instead of ACE_OS::atoi for converting an argument
          to a pointer.

        * ace/SOCK_Dgram.cpp (recv, send):
        * ace/SOCK_IO.cpp (recvv): Use an int select_width
          to pass width to select() so it can be ignored on ACE_WIN64.

        * ace/SV_Semaphore_Simple.cpp (name_2_key): Disable the type cast
          conversion warning casting ACE::crc32() to key_t... it's fine.

        * ace/WIN32_Proactor.cpp (register_handle, post_completion): The
          I/O completion port's completionKey argument is a ULONG in
          "older" compiler/SDK versions, but was changed to a
          ULONG_PTR (new type in newer SDK/compiler) for 64-bit
          transition. The new type is used conditionally based on whether or
          not we're building a 64-bit version.

Mon Jul 15 09:26:17 2002  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/SString.cpp (substring): Changed "nil" to "nill" to
          avoid conflicts with a Mac OS X macro.  Thanks to Ruslan
          Zasukhin <sunshine@public.kherson.ua> for reporting this.

Mon Jul 15 10:14:44 2002  Carlos O'Ryan  <coryan@atdesk.com>

        * bin/MakeProjectCreator/README:
          Fixed typo

Sun Jul 14 20:14:16 2002  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

        * FAQ: Fixed the use of "*.ps.gz" files.  Thanks to
          Carol Hunsicker <carol.hunsicker@lmco.com> for pointing this
          out.

Sun Jul 14 01:55:03 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Message_Block.i (reset_allocators): Reset the allocators in
          the chain if the message block is chained.

Sun Jul 14 01:43:32 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Message_Block.h:
        * ace/Message_Block.i: Added two methods viz. reset_allocators ()
          and access_allocators () to ACE_Message_Block.

Sat Jul 13 17:29:35 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/fuzz.pl: Removed the word "warning" from a print statement,
          since our scoreboard scripts seems to catch that as a warning.

Sat Jul 13 13:31:54 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/auto_run_tests.lst: Added the Stack_Recursion test to the
          daily  builds.

Fri Jul 12 20:28:52 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ACEXML/common/URL_Addr.cpp (string_to_addr):

          Fixed confusion in handling normal and wchar strings. It should
          compile now without problems.

        * ACEXML/apps/svcconf/Svcconf_Handler.cpp:
        * ACEXML/apps/svcconf/Svcconf_Handler.i:

          Fixed memory leaks, some typos and used the locator to print
          out error messages.

Fri Jul 12 17:55:08 2002  Carlos O'Ryan  <coryan@atdesk.com>

        * ace/String_Base.i:
          Fixed rfind() to check for pos == npos also, that solved the
          regression test failures.

Fri Jul 12 16:03:22 2002  Steve Huston  <shuston@riverace.com>

        * ace/Basic_Types.h: Itanium is little-endian, like x86. Although
          the Itanium architecture allows big-endian operation, Windows
          doesn't use it.

        * tests/test_config.h (randomize): Fixed some int/size_t mix-ups.

Fri Jul 12 13:02:51 2002  Steve Huston  <shuston@riverace.com>

        * ace/String_Base.{h i} (rfind): Changed pos argument from size_t to
          ssize_t to make proper use of npos and avoid compile error for
          g++ 2.95.2.

Fri Jul 12 12:37:42 2002  Steve Huston  <shuston@riverace.com>

        * ace/DLL_Manager.cpp:
        * ace/Parse_Node.cpp: g++ complains that ISO C++ won't allow cast
          from void * to func ptr... so cast void * to ptrdiff_t, then to
          func ptr.

Fri Jul 12 12:26:27 2002  Steve Huston  <shuston@riverace.com>

        * ace/Timer_Heap_T.cpp (ctor): Alloc timer_ids_ as ssize_t[],
          not long[].

        * examples/C++NPv2/TPCLS.dsp: Added SSL libraries to link input.

        * examples/C++NPv2/TPLS.dsp: Added Logging_Handler.{h cpp} to project.

Fri Jul 12 12:15:49 2002  Steve Huston  <shuston@riverace.com>

        * ace/Timer_Heap_T.cpp (grow_heap): Fix compile warning.

Thu Jul 11 21:09:36 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * Makefile.bor: Added a new BUILD target called "nightlybuild" to
          simplify nightlybuild script.

Thu Jul 11 20:42:52 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.i (creat): The Win32 implementation of this function was
          broken.  Thanks to Marvin Greenberg <mgreenberg@dctd.saic.com>
          for submitting the fix.

Thu Jul 11 18:37:35 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ACEXML/common/URL_Addr.cpp (string_to_addr):
        * ACEXML/common/URL_Addr.h:

          Change the argument to match the base class INET_Addr so that
          warnings under Borland BCB is eliminated.

        * ACEXML/common/HttpCharStream.cpp:

          Use ACE_TEXT_ALWAYS_CHAR to convert an Unicode URL to char*
          before converting it to an address. Thanks to Nanbor for
          pointing this out.

        * ACEXML/common/Makefile:
        * ACEXML/common/StreamFactory.h:
        * ACEXML/common/StreamFactory.cpp:

          New class to create appropriate streams based on the URI. This
          is needed for handling the parameter entities.

        * ACEXML/examples/SAXPrint/main.cpp:

          Move common error message to a new usage function.

Thu Jul 11 16:28:24 2002  Steve Huston  <shuston@riverace.com>

        * tests/Proactor_Scatter_Gather_Test.cpp: Changed Writer to derive
          from ACE_Handler, not ACE_Service_Handler. It's not the target of
          an asynch connection factory, and declares an open() method that
          hides the one in ACE_Service_Handler.

Thu Jul 11 16:15:49 2002  Steve Huston  <shuston@riverace.com>

        * examples/C++NPv2/SR_Configurable_Logging_Server.dsp:
        * examples/TPCLS.dsp:
        * examples/TPLS.dsp:
        * examples/C++NPv2/examples.dsw: Added SR_Configurable_Logging_Server,
          TPCLS, and TPLS projects.

        * examples/C++NPv2/TPC_Logging_Server.h: Use ACE traits macros to
          allow build on Win32.
        * examples/C++NPv2/TPC_Logging_Server.cpp: Fix build problems on
          Win32.

        * examples/TP_Logging_Server.h (init): Added #include "ace/Auto_Ptr.h"
          and corrected use of ACE_NEW_NORETURN; use ACE_Auto_Ptr::get() to get
          the argv pointer.

Thu Jul 11 15:03:47 2002  Steve Huston  <shuston@riverace.com>

        * ace/ace_dll64.mak: TEMPORARILY added /wd4267 to disable the
          conversion size_t to int warning.

        * ace/Activation_Queue.{h i} (method_count): Change return type
          from int to size_t.

        * ace/Arg_Shifter.cpp (cur_arg_strncasecmp): Change flag_length var
          to size_t to match string function signatures. If returning a
          'remaining' length, cast back to int.

        * ace/ARGV.cpp (ctor): Build string length using size_t, not int.

        * ace/CDR_Base.cpp (ACE_CDR::consolidate): Use ptrdiff_t, not the
          nonstandard ptr_arith_t.

        * ace/CDR_Stream.cpp (grow_and_adjust): Use ptrdiff_t, notptr_arith_t.
          (write_string): Cast ACE_SString:length result to ACE_CDR::ULong.
          A number of other size_t<->ACE_CDR::ULong casts.

        * ace/CDR_Stream.i (write_string, operator<<): Use a ACE_CDR::ULong
          len, can't directly use the return from strlen(), a size_t.

        * ace/Codecs.cpp: size_t conversions.

        * ace/DEV_Addr.i (set): Cast strlen result to int for base_set.

        * ace/DEV_IO.{i cpp} (send, recv): Cast iovec count from size_t to
          int for call to ACE_OS level.

        * ace/Hash_Map_Manager_T.{h, i, cpp} (shared_find): Change loc argument
          from u_long to size_t. Better match for its use.

        * ace/OS.h (ACE_align_binary, ACE_ptr_align_binary): Change from
          using ptr_arith_t to the standard ptrdiff_t.

        * ace/DLL_Manager.cpp:
        * ace/Parse_Node.cpp: Avoid casting a void * to a long then back to a
          function pointer.  Cast using proper calling signature.

        * ace/Reactor_Impl.h (ACE_Reactor_Notify::notify):
        * ace/Select_Reactor_Base.{h cpp} (ACE_Select_Reactor_Notify::notify):
          Change return type from ssize_t to int to match advertised return
          type from ACE_Reactor.

        * ace/Select_Reactor_T.cpp (check_handles): Use an int select_width
          to pass width to select() so it can be ignored on ACE_WIN64.

        * ace/String_Base_Const.{h cpp}: Changed npos from int to ssize_t.

        * ace/String_Base.{h i}: (operator[]) changed slot arg from int
          to size_t. (strstr(), find(), rfind()) changed return type from
          int to ssize_t; change pos arg from int to size_t.

        * ace/Timer_Heap_T.{h cpp}: Change 'slot' arg from int to size_t.
          Also changed timer_ids_ to use ssize_t rather than long to
          avoid length mismatches between the max size and the timer
          queue (a size_t) and the arrays.

        * ace/WFMO_Reactor.h (ACE_WFMO_Reactor_Notify): Change return type
          from ssize_to to int to match corresponding change in
          ACE_Reactor_Notify, above. The implementation already was returning
          int.

        * ace/WFMO_Reactor.cpp (make_changes_in_current_infos,
          make_changes_in_suspension_infos): Align use of size_t.
          (wait_for_multiple_events)...........Should maybe make the
          sizes in this class DWORD?????

        * ace/WIN32_Proactor.cpp (close, handle_events): completion_key
          needs to be a different on Win64 than on Win32.

Thu Jul 11 08:34:22 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/USAGE:
        * bin/MakeProjectCreator/modules/Driver.pm:

          Added new options and documentation dealing with generation of
          relative paths in projects.

Wed Jul 10 11:46:02 2002  Mayur Deshpande  <mayur@ics.uci.edu>

        * bin/auto_run_tests.lst:

          Added tests/AMH_Exception and examples/AMH/Sink_Server as tests
          for AMH

Wed Jul 10 13:31:49 2002  Steve Huston  <shuston@riverace.com>

        * examples/C++NPv2/CLD.dsp:
        * examples/C++NPv2/examples.dsw: Added CLD project.

        * examples/Client_Logging_Daemon.cpp: Disable the info, suspend, and
          resume methods - these are left as an exercise for the reader.

Wed Jul 10 11:24:39 2002  Steve Huston  <shuston@riverace.com>

        * examples/C++NPv2/AIO_CLD.dsp:
        * examples/C++NPv2/examples.dsw: Added AIO_CLD project.

        * examples/C++NPv2/AIO_Client_Logging_Daemon.cpp: Fix Win32 compile
          problems.

Wed Jul 10 07:22:24 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/TemplateParser.pm:

          If the project creator needs the slashes converted, then
          do so when generating relative paths.

Tue Jul  9 23:24:44 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * include/makeinclude/rules.local.GNU:

          Print out more explanative messages.

        * include/makeinclude/platform_osf1_4.x_cxx.GNU:
        * include/makeinclude/platform_sunos5_sunc++.GNU:

          Turn on symbol versioning for these platforms with the
          proprietary compilers that ships with these systems viz, Sun CC
          and cxx.


Tue Jul  9 16:24:46 2002  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Containers_T.cpp: Fixed inconsistent initializer order for
          ACE_Fixed_Stack and ACE_Bounded_Stack.  Thanks to Michael
          Searles <msearles@base16.com> for reporting this.

Tue Jul  9 11:10:38 2002  Steve Huston  <shuston@riverace.com>

        * apps/Gateway/Peer/Peer.{h cpp}: Renamed Peer_Acceptor::open()
          to Peer_Acceptor::start() to avoid clashes with virtual
          ACE_Acceptor::open.

Tue Jul  9 09:01:14 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/config/taolib_with_idl.mpb:

          Change the default tao_idl option from -Gs to -Sc.

Tue Jul  9 08:07:20 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/TemplateParser.pm:

          When using Cygwin Perl, we need to convert the cwd to a windows
          path to match up with environment variables that are usable
          outside of Cygwin.

Tue Jul  9 07:46:57 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/TemplateParser.pm:

          Fix up the relative value matching code to work correctly
          on Windows.

Tue Jul  9 07:31:48 2002  Chad Elliott  <elliott_c@ociweb.com>

        * ace/ace.mpc:
        * ace/QoS/qos.mpc:
        * ace/RMCast/rmcast.mpc:
        * ace/SSL/ssl.mpc:
        * apps/gperf/src/gperf.mpc:
        * tests/tests.mpc:
        * tests/RMCast/tests.mpc:
        * tests/SSL/tests.mpc:

          Input files for the Make Project Creator for just the basic
          libraries, exe's and tests.

Tue Jul  9 07:24:06 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/mpc.pl:
        * bin/mwc.pl:

          The starting point for creating workspaces and projects.

        * bin/MakeProjectCreator/README:
        * bin/MakeProjectCreator/USAGE:

          A bit of lite documentation on the Make Project Creator.

        * bin/MakeProjectCreator/config/aceexe.mpb:
        * bin/MakeProjectCreator/config/acelib.mpb:
        * bin/MakeProjectCreator/config/aceversion.mpb:
        * bin/MakeProjectCreator/config/avstreamsexe.mpb:
        * bin/MakeProjectCreator/config/client.mpb:
        * bin/MakeProjectCreator/config/global.mpb:
        * bin/MakeProjectCreator/config/messaging.mpb:
        * bin/MakeProjectCreator/config/namingexe.mpb:
        * bin/MakeProjectCreator/config/notify.mpb:
        * bin/MakeProjectCreator/config/notifytest.mpb:
        * bin/MakeProjectCreator/config/orbsvcsexe.mpb:
        * bin/MakeProjectCreator/config/orbsvcslib.mpb:
        * bin/MakeProjectCreator/config/rt_client.mpb:
        * bin/MakeProjectCreator/config/rt_server.mpb:
        * bin/MakeProjectCreator/config/rteventexe.mpb:
        * bin/MakeProjectCreator/config/server.mpb:
        * bin/MakeProjectCreator/config/strategies.mpb:
        * bin/MakeProjectCreator/config/taoexe.mpb:
        * bin/MakeProjectCreator/config/taolib.mpb:
        * bin/MakeProjectCreator/config/taolib_with_idl.mpb:
        * bin/MakeProjectCreator/config/taoversion.mpb:

          Base projects for most of ACE and TAO.


        * bin/MakeProjectCreator/modules/Driver.pm:
        * bin/MakeProjectCreator/modules/Creator.pm:
        * bin/MakeProjectCreator/modules/WorkspaceCreator.pm:
        * bin/MakeProjectCreator/modules/GUID.pm:
        * bin/MakeProjectCreator/modules/Parser.pm:
        * bin/MakeProjectCreator/modules/ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/TemplateInputReader.pm:
        * bin/MakeProjectCreator/modules/TemplateParser.pm:

          The main modules of the Make Project Creator which provide most of
          the functionalty.

        * bin/MakeProjectCreator/modules/BorlandProjectCreator.pm:
        * bin/MakeProjectCreator/modules/BorlandWorkspaceCreator.pm:
        * bin/MakeProjectCreator/modules/EM3ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/EM3WorkspaceCreator.pm:
        * bin/MakeProjectCreator/modules/GHSProjectCreator.pm:
        * bin/MakeProjectCreator/modules/GHSWorkspaceCreator.pm:
        * bin/MakeProjectCreator/modules/GNUProjectCreator.pm:
        * bin/MakeProjectCreator/modules/GNUWorkspaceCreator.pm:
        * bin/MakeProjectCreator/modules/NMakeProjectCreator.pm:
        * bin/MakeProjectCreator/modules/NMakeWorkspaceCreator.pm:
        * bin/MakeProjectCreator/modules/VA4ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/VA4WorkspaceCreator.pm:
        * bin/MakeProjectCreator/modules/VC6ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/VC6WorkspaceCreator.pm:
        * bin/MakeProjectCreator/modules/VC7ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/VC7WorkspaceCreator.pm:

          Subclassed workspace and project creators.

        * bin/MakeProjectCreator/templates/bor.mpd:
        * bin/MakeProjectCreator/templates/bordll.mpt:
        * bin/MakeProjectCreator/templates/borexe.mpt:
        * bin/MakeProjectCreator/templates/em3vcp.mpd:
        * bin/MakeProjectCreator/templates/em3vcpdll.mpt:
        * bin/MakeProjectCreator/templates/em3vcpdllexe.mpt:
        * bin/MakeProjectCreator/templates/em3vcplib.mpt:
        * bin/MakeProjectCreator/templates/em3vcplibexe.mpt:
        * bin/MakeProjectCreator/templates/ghs.mpd:
        * bin/MakeProjectCreator/templates/gnu.mpd:
        * bin/MakeProjectCreator/templates/gnudll.mpt:
        * bin/MakeProjectCreator/templates/gnuexe.mpt:
        * bin/MakeProjectCreator/templates/nmake.mpd:
        * bin/MakeProjectCreator/templates/nmakedll.mpt:
        * bin/MakeProjectCreator/templates/nmakeexe.mpt:
        * bin/MakeProjectCreator/templates/va4icc.mpd:
        * bin/MakeProjectCreator/templates/va4iccdll.mpt:
        * bin/MakeProjectCreator/templates/va4iccdllexe.mpt:
        * bin/MakeProjectCreator/templates/va4icclib.mpt:
        * bin/MakeProjectCreator/templates/va4icclibexe.mpt:
        * bin/MakeProjectCreator/templates/vc6dsp.mpd:
        * bin/MakeProjectCreator/templates/vc6dspdll.mpt:
        * bin/MakeProjectCreator/templates/vc6dspdllexe.mpt:
        * bin/MakeProjectCreator/templates/vc6dsplib.mpt:
        * bin/MakeProjectCreator/templates/vc6dsplibexe.mpt:
        * bin/MakeProjectCreator/templates/vc7.mpd:
        * bin/MakeProjectCreator/templates/vc7dll.mpt:
        * bin/MakeProjectCreator/templates/vc7exe.mpt:

          Template and template input files for all of the different project
          creators.

Tue Jul  9 07:21:29 2002  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Map_T.h:
        * ace/Map.cpp:
        * ace/Pair_T.h:
        * ace/Pair.cpp:

          Remove the use of Map.h and Pair.h.

        * ace/gethrtime.cpp:

          Only compile the contents of this file if using GHS and are
          building for the x86.

Mon Jul  8 17:26:51 2002  Steve Huston  <shuston@riverace.com>

        * ace/Task.cpp (svc_run): Borland complains about reinterpret_cast from
          int to unsigned long, so change the cast to ACE_THR_FUNC_RETURN to
          a static_cast for that compiler. Thanks to Johnny Willemsen
          <jwillemsen@remedy.nl> for this fix.

Fri Jul  5 10:30:44 2002  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Array_Base.cpp: Swapped the order of includes so that
          Array_Base.h comes after Malloc_Base.h.  Thanks to Al Pariante
          <Albert.Pariante@axcelis.com> for reporting this.

Thu Jul  4 11:27:05 2002  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * Happy 226th Birthday USA!

Sat Jul 06 19:32:40 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Time_Value.h (ACE_Time_Value): Fix for [BUGID 1240]. Some of
          the operators were missing explicit declarations in the header
          file (they were anyway defined in the inlined files) which
          created problems in builds where inlining was diabled. Please
          see

          http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=1240 for
          more details. Thanks to Marina Spivak <marina@atdesk.com> for
          reporting this.

Fri Jul  5 18:44:39 2002  Steve Huston  <shuston@riverace.com>

        * ace/ACE.cpp: Corrected undeclared 'select_width' errors and
          signed/unsigned mismatch warnings.

Fri Jul  5 16:14:51 2002  Steve Huston  <shuston@riverace.com>

        * ace/OS.{h i} (send, sendto, recv, recvfrom): Change 'len' argument
          from int to size_t.
          Removed conditional typedef of ssize_t; it's done in Basic_Types.h.

        * ace/ACE.h (recv): Filled in documentation for varargs variant.
        * ace/ACE.cpp (send, recv): Properly convert size_t 'count' arg to int
          iovec count for call to ACE_OS::sendv/recvv().
          (handle_timed_accept, handle_timed_complete, handle_ready): Use
          an int select_width for ACE_OS::select() calls to get the types
          correct. This arg is ignored on Windows anyway.

        * ace/Basic_Types.h: If ACE_HAS_SSIZE_T not defined, and Win64,
          typedef SSIZE_T ssize_t; else use the existing int typedef.

Wed Jul  3 11:09:31 2002  Steve Huston  <shuston@riverace.com>

        * tests/SSL/Thread_Pool_Reactor_SSL_Test.cpp:
          Change thread function to return ACE_THR_FUNC_RETURN, not void *.

Tue Jul 02 21:43:53 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ACEXML/common/XMLFilterImpl.h: One more pre/post mismatch.

Tue Jul  2 16:58:55 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ACEXML/common/XML_Types.h:

          Removed unnecessary includes and fixed a typo.

Tue Jul 02 16:35:19 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ACEXML/common/Attributes.h:
        * ACEXML/common/Locator.h: Fixed mismatched pre/post inclusions.

        * ACEXML/parser/parser/Parser.cpp: Fixed compilation errors.

Tue Jul  2 11:53:29 2002  Steve Huston  <shuston@riverace.com>

        * ace/config-all.h: Changed definition of ACE_THR_FUNC to incorporate
          the platform's thread function return type (DWORD on Windows,
          void * on most others). Uses a new typedef ACE_THR_FUNC_RETURN
          to specify the platform's thread function return type.

        * ace/OS.{h i cpp} (thr_exit, thr_join): The status arg is now
          a ACE_THR_FUNC_RETURN *.
          Also moved remaining thread function definition type things to
          config-all.h with the rest of them.

        * ace/Base_Thread_Adapter.{h cpp} (invoke(), ace_thread_adapter()):
        * ace/OS_Thread_Adapter.{h cpp}
        * ace/Thread_Adapter.{h cpp} (invoke(), invoke_i()):
          Return type changed from void * to ACE_THR_FUNC_RETURN.

        * ace/Event_Handler.{cpp h} (read_adapter): Change return value from
          void* to ACE_THR_FUNC_RETURN.

        * ace/Thread_Hook.{h cpp}: ACE_Thread_Hook::start () returns
          ACE_THR_FUNC_RETURN, not void *.

        * ace/Thread.{h i} (exit, join): 'status' arg is now
          ACE_THR_FUNC_RETURN *, not void *.

        * ace/Thread_Control.{h inl cpp} (status, exit):
        * ace/Thread_Manager.{h cpp} (exit, join): Thread exit status
          type changed from void * to ACE_THR_FUNC_RETURN.

        * ace/Task.{h cpp} (ACE_Task_Base): Return type from svc_run now
          ACE_THR_FUNC_RETURN.

        * examples/C++NPv1/RT_Thread_Per_Connection_Logging_Server.cpp:
        * examples/C++NPv1/Thread_Per_Connection_Logging_Server.{cpp, h}:
        * examples/C++NPv2/Select_Reactor_Logging_Server.cpp:
        * examples/C++NPv2/Server_Shutdown.cpp:
        * examples/C++NPv2/TP_Reactor_Logging_Server.cpp:
        * examples/C++NPv2/WFMO_Reactor_Logging_Server.cpp:
        * examples/C++NPv2/Client_Logging_Daemon.cpp:
        * examples/Connection/blocking/SPIPE-acceptor.cpp:
        * examples/IPC_SAP/SOCK_SAP/CPP-inserver.cpp:
        * examples/IPC_SAP/SSL_SAP/SSL-server.cpp:
        * examples/Reactor/WFMO_Reactor/Abandoned.cpp:
        * performance-tests/TCP/tcp_test.cpp:
        * tests/ACE_Init_Test.cpp:
        * tests/MEM_Stream_Test.cpp:
        * tests/Service_Config_DLL.cpp:
        * tests/Task_Test.cpp:
        * tests/Thread_Pool_Reactor_Resume_Test.cpp:
        * tests/Thread_Pool_Reactor_Test.cpp:
          Change thread function to return ACE_THR_FUNC_RETURN, not void *.

        * examples/C++NPv2/TP_Logging_Server.cpp (handle_input, svc):
        * examples/C++NPv2/AC_Client_Logging_Daemon.cpp (open):
        * examples/C++NPv2/display_logfile.cpp (svc): Change
          ACE_reinterpret_cast to ACE_static_cast. Thanks to Doug Schmidt
          for finding this.

        * examples/C++NPv2/TP_Logging_Server.h:
        * examples/C++NPv2/Reactor_Logging_Server_Adapter.cpp: Corrected use
          of ACE_NEW_RETURN.

Mon Jul  1 23:16:47 2002  Jeff Parsons <parsons@cs.wustl.edu>

        * */Makefile:

          Updated dependencies.

Mon Jul  1 21:59:44 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ACEXML/common/Attributes.h:
        * ACEXML/common/AttributesImpl.h:
        * ACEXML/common/Attributes_Def_Builder.h:
        * ACEXML/common/CharStream.h:
        * ACEXML/common/ContentHandler.h:
        * ACEXML/common/DTDHandler.h:
        * ACEXML/common/DTD_Manager.h:
        * ACEXML/common/DefaultHandler.h:
        * ACEXML/common/Element_Def_Builder.h:
        * ACEXML/common/EntityResolver.h:
        * ACEXML/common/Env.h:
        * ACEXML/common/ErrorHandler.h:
        * ACEXML/common/Exception.h:
        * ACEXML/common/FileCharStream.h:
        * ACEXML/common/HttpCharStream.h:
        * ACEXML/common/InputSource.h:
        * ACEXML/common/Locator.h:
        * ACEXML/common/LocatorImpl.h:
        * ACEXML/common/Mem_Map_Stream.h:
        * ACEXML/common/NamespaceSupport.h:
        * ACEXML/common/SAXExceptions.h:
        * ACEXML/common/StrCharStream.h:
        * ACEXML/common/Transcode.h:
        * ACEXML/common/URL_Addr.h:
        * ACEXML/common/Validator.h:
        * ACEXML/common/XMLFilter.h:
        * ACEXML/common/XMLFilterImpl.h:
        * ACEXML/common/XMLReader.h:
        * ACEXML/common/XML_Codecs.h:
        * ACEXML/common/XML_Types.h:
        * ACEXML/parser/debug_validator/Debug_Attributes_Builder.cpp:
        * ACEXML/parser/debug_validator/Debug_Attributes_Builder.h:
        * ACEXML/parser/debug_validator/Debug_DTD_Manager.h:
        * ACEXML/parser/debug_validator/Debug_Element_Builder.h:
        * ACEXML/parser/debug_validator/Element_Tree.h:
        * ACEXML/parser/parser/Entity_Manager.h:
        * ACEXML/parser/parser/Parser.cpp:
        * ACEXML/parser/parser/Parser.h:

        ACE_LACKS_PRAGMA_ONCE fixes.

Mon Jul  1 06:21:00 2002  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

        * ace/Sock_Connect.cpp (count_interfaces): Added a MacOSX-specific
          value for OSIOCGIFCONF.  Thanks to John Zorko <j.zorko@att.net>
          for this fix.
