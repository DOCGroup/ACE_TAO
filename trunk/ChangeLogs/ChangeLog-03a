Wed Jul 17 11:34:28 2002  Steve Huston  <shuston@riverace.com>

        * ace/OS.{i cpp}: Windows, in calls to _open_osfhandle(), cast
          handle to long for C++Builder. Only MSVC has the intptr_t type.

        * ace/WFMO_Reactor.cpp (make_changes_in_current_infos,
          make_changes_in_suspension_infos): Run the index from 0 to
          last_valid_slot rather than valid slot down to 0 to allow
          correct use of size_t index.

        * ace/WIN32_Proactor.cpp (register_handle, post_completion): Use
          a reinterpret_cast, not static_cast to cast void* to ULONG for
          non-Win64.

Wed Jul 17 03:50:56 UTC 2002  Don Hinton  <dhinton@objectsciences.com>

	* ace/ACE.cpp:
	* ace/OS.{h,i,cpp}:
	* ace/OS_Dirent.inl:
	* ace/OS_Memory.h
	* ace/OS_String.inl:
	* ace/Thread_Manager.cpp:
	* ace/WFMO_Reactor.cpp:
	* ace/config-all.h:
	* ace/config-win32-borland.h:
	* ace/config-win32-msvc-5.h:
	* ace/config-win32-msvc-6.h:
	* include/makeinclude/wrapper_macros.GNU:

	  Removed PACE.
	
Tue Jul 16 14:19:37 2002  Steve Huston  <shuston@riverace.com>

        * ace/DLL_Manager.cpp:
        * ace/Parse_Node.cpp: (also see Fri Jul 12 12:37:42 2002  Steve Huston)
          Always use the ptrdiff_t trick to cast a void* to a func ptr.
          Nanbor was right ;-)  Thanks to Carlos O'Ryan <coryan@atdesk.com>
          for clarifying this issue, including C++ chapter and verse.
          (It's in ISO C++ section 5.2.10 for those interested).

        * tests/DLL_Test.cpp: Use ptrdiff_t as a mediary to cast a void *
          to a func ptr, not a long.

Mon Jul 15 21:23:47 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

	* ace/Message_Block.i (base): Fixed a warning in TRU 64 builds.

Mon Jul 15 18:56:47 2002  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

	* ace/String_Base.cpp (substring): Changed "nil" to "nill" to
	  avoid conflicts with a Mac OS X macro.  Thanks to Ruslan
 	  Zasukhin <sunshine@public.kherson.ua> for reporting this.

Mon Jul 15 15:18:33 2002  Steve Huston  <shuston@riverace.com>

        * ace/Configuration.{h cpp}: Changed ACE_Configuration_Value_IntId
          data_ member to be a union with both pointer and u_int members.
          Also, the length_ member is now size_t, not u_int.

        * ace/Memory_Pool.cpp (ACE_Pagefile_Memory_Pool::map): Use
          INVALID_HANDLE_VALUE instead of a literal 0xFFFFFFFF for call to
          CreateFileMapping.

        * ace/OS.{h i}: New method, void *atop(const char *s) converts a
          string to void *.

        * ace/OS.i (fdopen): Don't cast arg to _open_osfhandle - Microsoft
          changed the type to something sensible.
          (isatty): open a C run-time handle for the ACE_HANDLE.

        * ace/OS.cpp (fopen): Don't cast arg to _open_osfhandle - Microsoft
          changed the type to something sensible.
          (unique_name): Use sprintf %p for pointer rather than casting
          to an int.

        * ace/Naming_Context.cpp (ACE_Name_Options::parse_args): Use
          ACE_OS::atop instead of ACE_OS::atoi for converting an argument
          to a pointer.

        * ace/SOCK_Dgram.cpp (recv, send):
        * ace/SOCK_IO.cpp (recvv): Use an int select_width
          to pass width to select() so it can be ignored on ACE_WIN64.

        * ace/SV_Semaphore_Simple.cpp (name_2_key): Disable the type cast
          conversion warning casting ACE::crc32() to key_t... it's fine.

        * ace/WIN32_Proactor.cpp (register_handle, post_completion): The
          I/O completion port's completionKey argument is a ULONG in
          "older" compiler/SDK versions, but was changed to a
          ULONG_PTR (new type in newer SDK/compiler) for 64-bit
          transition. The new type is used conditionally based on whether or
          not we're building a 64-bit version.

Mon Jul 15 09:26:17 2002  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

	* ace/SString.cpp (substring): Changed "nil" to "nill" to
	  avoid conflicts with a Mac OS X macro.  Thanks to Ruslan
 	  Zasukhin <sunshine@public.kherson.ua> for reporting this.

Mon Jul 15 10:14:44 2002  Carlos O'Ryan  <coryan@atdesk.com>

	* bin/MakeProjectCreator/README:
	  Fixed typo

Sun Jul 14 20:14:16 2002  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

	* FAQ: Fixed the use of "*.ps.gz" files.  Thanks to
	  Carol Hunsicker <carol.hunsicker@lmco.com> for pointing this
 	  out.

Sun Jul 14 01:55:03 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

	* ace/Message_Block.i (reset_allocators): Reset the allocators in
	  the chain if the message block is chained.

Sun Jul 14 01:43:32 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

	* ace/Message_Block.h:
	* ace/Message_Block.i: Added two methods viz. reset_allocators ()
	  and access_allocators () to ACE_Message_Block.

Sat Jul 13 17:29:35 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

	* bin/fuzz.pl: Removed the word "warning" from a print statement,
	  since our scoreboard scripts seems to catch that as a warning.

Sat Jul 13 13:31:54 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

	* bin/auto_run_tests.lst: Added the Stack_Recursion test to the
	  daily  builds.

Fri Jul 12 20:28:52 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ACEXML/common/URL_Addr.cpp (string_to_addr):

          Fixed confusion in handling normal and wchar strings. It should
          compile now without problems.

        * ACEXML/apps/svcconf/Svcconf_Handler.cpp:
        * ACEXML/apps/svcconf/Svcconf_Handler.i:

          Fixed memory leaks, some typos and used the locator to print
          out error messages.

Fri Jul 12 17:55:08 2002  Carlos O'Ryan  <coryan@atdesk.com>

	* ace/String_Base.i:
	  Fixed rfind() to check for pos == npos also, that solved the
	  regression test failures.

Fri Jul 12 16:03:22 2002  Steve Huston  <shuston@riverace.com>

        * ace/Basic_Types.h: Itanium is little-endian, like x86. Although
          the Itanium architecture allows big-endian operation, Windows
          doesn't use it.

        * tests/test_config.h (randomize): Fixed some int/size_t mix-ups.

Fri Jul 12 13:02:51 2002  Steve Huston  <shuston@riverace.com>

        * ace/String_Base.{h i} (rfind): Changed pos argument from size_t to
          ssize_t to make proper use of npos and avoid compile error for
          g++ 2.95.2.

Fri Jul 12 12:37:42 2002  Steve Huston  <shuston@riverace.com>

        * ace/DLL_Manager.cpp:
        * ace/Parse_Node.cpp: g++ complains that ISO C++ won't allow cast
          from void * to func ptr... so cast void * to ptrdiff_t, then to
          func ptr.

Fri Jul 12 12:26:27 2002  Steve Huston  <shuston@riverace.com>

        * ace/Timer_Heap_T.cpp (ctor): Alloc timer_ids_ as ssize_t[],
          not long[].

        * examples/C++NPv2/TPCLS.dsp: Added SSL libraries to link input.

        * examples/C++NPv2/TPLS.dsp: Added Logging_Handler.{h cpp} to project.

Fri Jul 12 12:15:49 2002  Steve Huston  <shuston@riverace.com>

        * ace/Timer_Heap_T.cpp (grow_heap): Fix compile warning.

Thu Jul 11 21:09:36 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	* Makefile.bor: Added a new BUILD target called "nightlybuild" to
	  simplify nightlybuild script.

Thu Jul 11 20:42:52 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	* ace/OS.i (creat): The Win32 implementation of this function was
	  broken.  Thanks to Marvin Greenberg <mgreenberg@dctd.saic.com>
	  for submitting the fix.

Thu Jul 11 18:37:35 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ACEXML/common/URL_Addr.cpp (string_to_addr):
        * ACEXML/common/URL_Addr.h:

          Change the argument to match the base class INET_Addr so that
          warnings under Borland BCB is eliminated.

        * ACEXML/common/HttpCharStream.cpp:

          Use ACE_TEXT_ALWAYS_CHAR to convert an Unicode URL to char*
          before converting it to an address. Thanks to Nanbor for
          pointing this out.

        * ACEXML/common/Makefile:
        * ACEXML/common/StreamFactory.h:
        * ACEXML/common/StreamFactory.cpp:

          New class to create appropriate streams based on the URI. This
          is needed for handling the parameter entities.

        * ACEXML/examples/SAXPrint/main.cpp:

          Move common error message to a new usage function.

Thu Jul 11 16:28:24 2002  Steve Huston  <shuston@riverace.com>

        * tests/Proactor_Scatter_Gather_Test.cpp: Changed Writer to derive
          from ACE_Handler, not ACE_Service_Handler. It's not the target of
          an asynch connection factory, and declares an open() method that
          hides the one in ACE_Service_Handler.

Thu Jul 11 16:15:49 2002  Steve Huston  <shuston@riverace.com>

        * examples/C++NPv2/SR_Configurable_Logging_Server.dsp:
        * examples/TPCLS.dsp:
        * examples/TPLS.dsp:
        * examples/C++NPv2/examples.dsw: Added SR_Configurable_Logging_Server,
          TPCLS, and TPLS projects.

        * examples/C++NPv2/TPC_Logging_Server.h: Use ACE traits macros to
          allow build on Win32.
        * examples/C++NPv2/TPC_Logging_Server.cpp: Fix build problems on
          Win32.

        * examples/TP_Logging_Server.h (init): Added #include "ace/Auto_Ptr.h"
          and corrected use of ACE_NEW_NORETURN; use ACE_Auto_Ptr::get() to get
          the argv pointer.

Thu Jul 11 15:03:47 2002  Steve Huston  <shuston@riverace.com>

        * ace/ace_dll64.mak: TEMPORARILY added /wd4267 to disable the
          conversion size_t to int warning.

        * ace/Activation_Queue.{h i} (method_count): Change return type
          from int to size_t.

        * ace/Arg_Shifter.cpp (cur_arg_strncasecmp): Change flag_length var
          to size_t to match string function signatures. If returning a
          'remaining' length, cast back to int.

        * ace/ARGV.cpp (ctor): Build string length using size_t, not int.

        * ace/CDR_Base.cpp (ACE_CDR::consolidate): Use ptrdiff_t, not the
          nonstandard ptr_arith_t.

        * ace/CDR_Stream.cpp (grow_and_adjust): Use ptrdiff_t, notptr_arith_t.
          (write_string): Cast ACE_SString:length result to ACE_CDR::ULong.
          A number of other size_t<->ACE_CDR::ULong casts.

        * ace/CDR_Stream.i (write_string, operator<<): Use a ACE_CDR::ULong
          len, can't directly use the return from strlen(), a size_t.

        * ace/Codecs.cpp: size_t conversions.

        * ace/DEV_Addr.i (set): Cast strlen result to int for base_set.

        * ace/DEV_IO.{i cpp} (send, recv): Cast iovec count from size_t to
          int for call to ACE_OS level.

        * ace/Hash_Map_Manager_T.{h, i, cpp} (shared_find): Change loc argument
          from u_long to size_t. Better match for its use.

        * ace/OS.h (ACE_align_binary, ACE_ptr_align_binary): Change from
          using ptr_arith_t to the standard ptrdiff_t.

        * ace/DLL_Manager.cpp:
        * ace/Parse_Node.cpp: Avoid casting a void * to a long then back to a
          function pointer.  Cast using proper calling signature.

        * ace/Reactor_Impl.h (ACE_Reactor_Notify::notify):
        * ace/Select_Reactor_Base.{h cpp} (ACE_Select_Reactor_Notify::notify):
          Change return type from ssize_t to int to match advertised return
          type from ACE_Reactor.

        * ace/Select_Reactor_T.cpp (check_handles): Use an int select_width
          to pass width to select() so it can be ignored on ACE_WIN64.

        * ace/String_Base_Const.{h cpp}: Changed npos from int to ssize_t.

        * ace/String_Base.{h i}: (operator[]) changed slot arg from int
          to size_t. (strstr(), find(), rfind()) changed return type from
          int to ssize_t; change pos arg from int to size_t.

        * ace/Timer_Heap_T.{h cpp}: Change 'slot' arg from int to size_t.
          Also changed timer_ids_ to use ssize_t rather than long to
          avoid length mismatches between the max size and the timer
          queue (a size_t) and the arrays.

        * ace/WFMO_Reactor.h (ACE_WFMO_Reactor_Notify): Change return type
          from ssize_to to int to match corresponding change in
          ACE_Reactor_Notify, above. The implementation already was returning
          int.

        * ace/WFMO_Reactor.cpp (make_changes_in_current_infos,
          make_changes_in_suspension_infos): Align use of size_t.
          (wait_for_multiple_events)...........Should maybe make the
          sizes in this class DWORD?????

        * ace/WIN32_Proactor.cpp (close, handle_events): completion_key
          needs to be a different on Win64 than on Win32.

Thu Jul 11 08:34:22 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/USAGE:
        * bin/MakeProjectCreator/modules/Driver.pm:

          Added new options and documentation dealing with generation of
          relative paths in projects.

Wed Jul 10 11:46:02 2002  Mayur Deshpande  <mayur@ics.uci.edu>

	* bin/auto_run_tests.lst:

	  Added tests/AMH_Exception and examples/AMH/Sink_Server as tests
	  for AMH

Wed Jul 10 13:31:49 2002  Steve Huston  <shuston@riverace.com>

        * examples/C++NPv2/CLD.dsp:
        * examples/C++NPv2/examples.dsw: Added CLD project.

        * examples/Client_Logging_Daemon.cpp: Disable the info, suspend, and
          resume methods - these are left as an exercise for the reader.

Wed Jul 10 11:24:39 2002  Steve Huston  <shuston@riverace.com>

        * examples/C++NPv2/AIO_CLD.dsp:
        * examples/C++NPv2/examples.dsw: Added AIO_CLD project.

        * examples/C++NPv2/AIO_Client_Logging_Daemon.cpp: Fix Win32 compile
          problems.

Wed Jul 10 07:22:24 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/TemplateParser.pm:

          If the project creator needs the slashes converted, then
          do so when generating relative paths.

Tue Jul  9 23:24:44 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * include/makeinclude/rules.local.GNU:

          Print out more explanative messages.

        * include/makeinclude/platform_osf1_4.x_cxx.GNU:
        * include/makeinclude/platform_sunos5_sunc++.GNU:

          Turn on symbol versioning for these platforms with the
          proprietary compilers that ships with these systems viz, Sun CC
          and cxx.


Tue Jul  9 16:24:46 2002  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

	* ace/Containers_T.cpp: Fixed inconsistent initializer order for
	  ACE_Fixed_Stack and ACE_Bounded_Stack.  Thanks to Michael
 	  Searles <msearles@base16.com> for reporting this.

Tue Jul  9 11:10:38 2002  Steve Huston  <shuston@riverace.com>

        * apps/Gateway/Peer/Peer.{h cpp}: Renamed Peer_Acceptor::open()
          to Peer_Acceptor::start() to avoid clashes with virtual
          ACE_Acceptor::open.

Tue Jul  9 09:01:14 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/config/taolib_with_idl.mpb:

          Change the default tao_idl option from -Gs to -Sc.

Tue Jul  9 08:07:20 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/TemplateParser.pm:

          When using Cygwin Perl, we need to convert the cwd to a windows
          path to match up with environment variables that are usable
          outside of Cygwin.

Tue Jul  9 07:46:57 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/TemplateParser.pm:

          Fix up the relative value matching code to work correctly
          on Windows.

Tue Jul  9 07:31:48 2002  Chad Elliott  <elliott_c@ociweb.com>

        * ace/ace.mpc:
        * ace/QoS/qos.mpc:
        * ace/RMCast/rmcast.mpc:
        * ace/SSL/ssl.mpc:
        * apps/gperf/src/gperf.mpc:
        * tests/tests.mpc:
        * tests/RMCast/tests.mpc:
        * tests/SSL/tests.mpc:

          Input files for the Make Project Creator for just the basic
          libraries, exe's and tests.

Tue Jul  9 07:24:06 2002  Chad Elliott  <elliott_c@ociweb.com>

        * bin/mpc.pl:
        * bin/mwc.pl:

          The starting point for creating workspaces and projects.

        * bin/MakeProjectCreator/README:
        * bin/MakeProjectCreator/USAGE:

          A bit of lite documentation on the Make Project Creator.

        * bin/MakeProjectCreator/config/aceexe.mpb:
        * bin/MakeProjectCreator/config/acelib.mpb:
        * bin/MakeProjectCreator/config/aceversion.mpb:
        * bin/MakeProjectCreator/config/avstreamsexe.mpb:
        * bin/MakeProjectCreator/config/client.mpb:
        * bin/MakeProjectCreator/config/global.mpb:
        * bin/MakeProjectCreator/config/messaging.mpb:
        * bin/MakeProjectCreator/config/namingexe.mpb:
        * bin/MakeProjectCreator/config/notify.mpb:
        * bin/MakeProjectCreator/config/notifytest.mpb:
        * bin/MakeProjectCreator/config/orbsvcsexe.mpb:
        * bin/MakeProjectCreator/config/orbsvcslib.mpb:
        * bin/MakeProjectCreator/config/rt_client.mpb:
        * bin/MakeProjectCreator/config/rt_server.mpb:
        * bin/MakeProjectCreator/config/rteventexe.mpb:
        * bin/MakeProjectCreator/config/server.mpb:
        * bin/MakeProjectCreator/config/strategies.mpb:
        * bin/MakeProjectCreator/config/taoexe.mpb:
        * bin/MakeProjectCreator/config/taolib.mpb:
        * bin/MakeProjectCreator/config/taolib_with_idl.mpb:
        * bin/MakeProjectCreator/config/taoversion.mpb:

          Base projects for most of ACE and TAO.


        * bin/MakeProjectCreator/modules/Driver.pm:
        * bin/MakeProjectCreator/modules/Creator.pm:
        * bin/MakeProjectCreator/modules/WorkspaceCreator.pm:
        * bin/MakeProjectCreator/modules/GUID.pm:
        * bin/MakeProjectCreator/modules/Parser.pm:
        * bin/MakeProjectCreator/modules/ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/TemplateInputReader.pm:
        * bin/MakeProjectCreator/modules/TemplateParser.pm:

          The main modules of the Make Project Creator which provide most of
          the functionalty.

        * bin/MakeProjectCreator/modules/BorlandProjectCreator.pm:
        * bin/MakeProjectCreator/modules/BorlandWorkspaceCreator.pm:
        * bin/MakeProjectCreator/modules/EM3ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/EM3WorkspaceCreator.pm:
        * bin/MakeProjectCreator/modules/GHSProjectCreator.pm:
        * bin/MakeProjectCreator/modules/GHSWorkspaceCreator.pm:
        * bin/MakeProjectCreator/modules/GNUProjectCreator.pm:
        * bin/MakeProjectCreator/modules/GNUWorkspaceCreator.pm:
        * bin/MakeProjectCreator/modules/NMakeProjectCreator.pm:
        * bin/MakeProjectCreator/modules/NMakeWorkspaceCreator.pm:
        * bin/MakeProjectCreator/modules/VA4ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/VA4WorkspaceCreator.pm:
        * bin/MakeProjectCreator/modules/VC6ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/VC6WorkspaceCreator.pm:
        * bin/MakeProjectCreator/modules/VC7ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/VC7WorkspaceCreator.pm:

          Subclassed workspace and project creators.

        * bin/MakeProjectCreator/templates/bor.mpd:
        * bin/MakeProjectCreator/templates/bordll.mpt:
        * bin/MakeProjectCreator/templates/borexe.mpt:
        * bin/MakeProjectCreator/templates/em3vcp.mpd:
        * bin/MakeProjectCreator/templates/em3vcpdll.mpt:
        * bin/MakeProjectCreator/templates/em3vcpdllexe.mpt:
        * bin/MakeProjectCreator/templates/em3vcplib.mpt:
        * bin/MakeProjectCreator/templates/em3vcplibexe.mpt:
        * bin/MakeProjectCreator/templates/ghs.mpd:
        * bin/MakeProjectCreator/templates/gnu.mpd:
        * bin/MakeProjectCreator/templates/gnudll.mpt:
        * bin/MakeProjectCreator/templates/gnuexe.mpt:
        * bin/MakeProjectCreator/templates/nmake.mpd:
        * bin/MakeProjectCreator/templates/nmakedll.mpt:
        * bin/MakeProjectCreator/templates/nmakeexe.mpt:
        * bin/MakeProjectCreator/templates/va4icc.mpd:
        * bin/MakeProjectCreator/templates/va4iccdll.mpt:
        * bin/MakeProjectCreator/templates/va4iccdllexe.mpt:
        * bin/MakeProjectCreator/templates/va4icclib.mpt:
        * bin/MakeProjectCreator/templates/va4icclibexe.mpt:
        * bin/MakeProjectCreator/templates/vc6dsp.mpd:
        * bin/MakeProjectCreator/templates/vc6dspdll.mpt:
        * bin/MakeProjectCreator/templates/vc6dspdllexe.mpt:
        * bin/MakeProjectCreator/templates/vc6dsplib.mpt:
        * bin/MakeProjectCreator/templates/vc6dsplibexe.mpt:
        * bin/MakeProjectCreator/templates/vc7.mpd:
        * bin/MakeProjectCreator/templates/vc7dll.mpt:
        * bin/MakeProjectCreator/templates/vc7exe.mpt:

          Template and template input files for all of the different project
          creators.

Tue Jul  9 07:21:29 2002  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Map_T.h:
        * ace/Map.cpp:
        * ace/Pair_T.h:
        * ace/Pair.cpp:

          Remove the use of Map.h and Pair.h.

        * ace/gethrtime.cpp:

          Only compile the contents of this file if using GHS and are
          building for the x86.

Mon Jul  8 17:26:51 2002  Steve Huston  <shuston@riverace.com>

        * ace/Task.cpp (svc_run): Borland complains about reinterpret_cast from
          int to unsigned long, so change the cast to ACE_THR_FUNC_RETURN to
          a static_cast for that compiler. Thanks to Johnny Willemsen
          <jwillemsen@remedy.nl> for this fix.

Fri Jul  5 10:30:44 2002  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Array_Base.cpp: Swapped the order of includes so that
          Array_Base.h comes after Malloc_Base.h.  Thanks to Al Pariante
          <Albert.Pariante@axcelis.com> for reporting this.

Thu Jul  4 11:27:05 2002  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

	* Happy 226th Birthday USA!

Sat Jul 06 19:32:40 2002  Balachandran Natarajan  <bala@cs.wustl.edu>

	* ace/Time_Value.h (ACE_Time_Value): Fix for [BUGID 1240]. Some of
	  the operators were missing explicit declarations in the header
	  file (they were anyway defined in the inlined files) which
	  created problems in builds where inlining was diabled. Please
	  see

	  http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=1240 for
	  more details. Thanks to Marina Spivak <marina@atdesk.com> for
	  reporting this.

Fri Jul  5 18:44:39 2002  Steve Huston  <shuston@riverace.com>

        * ace/ACE.cpp: Corrected undeclared 'select_width' errors and
          signed/unsigned mismatch warnings.

Fri Jul  5 16:14:51 2002  Steve Huston  <shuston@riverace.com>

        * ace/OS.{h i} (send, sendto, recv, recvfrom): Change 'len' argument
          from int to size_t.
          Removed conditional typedef of ssize_t; it's done in Basic_Types.h.

        * ace/ACE.h (recv): Filled in documentation for varargs variant.
        * ace/ACE.cpp (send, recv): Properly convert size_t 'count' arg to int
          iovec count for call to ACE_OS::sendv/recvv().
          (handle_timed_accept, handle_timed_complete, handle_ready): Use
          an int select_width for ACE_OS::select() calls to get the types
          correct. This arg is ignored on Windows anyway.

        * ace/Basic_Types.h: If ACE_HAS_SSIZE_T not defined, and Win64,
          typedef SSIZE_T ssize_t; else use the existing int typedef.

Wed Jul  3 11:09:31 2002  Steve Huston  <shuston@riverace.com>

        * tests/SSL/Thread_Pool_Reactor_SSL_Test.cpp:
          Change thread function to return ACE_THR_FUNC_RETURN, not void *.

Tue Jul 02 21:43:53 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	* ACEXML/common/XMLFilterImpl.h: One more pre/post mismatch.

Tue Jul  2 16:58:55 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ACEXML/common/XML_Types.h:

          Removed unnecessary includes and fixed a typo.

Tue Jul 02 16:35:19 2002  Nanbor Wang  <nanbor@cs.wustl.edu>

	* ACEXML/common/Attributes.h:
	* ACEXML/common/Locator.h: Fixed mismatched pre/post inclusions.

	* ACEXML/parser/parser/Parser.cpp: Fixed compilation errors.

Tue Jul  2 11:53:29 2002  Steve Huston  <shuston@riverace.com>

        * ace/config-all.h: Changed definition of ACE_THR_FUNC to incorporate
          the platform's thread function return type (DWORD on Windows,
          void * on most others). Uses a new typedef ACE_THR_FUNC_RETURN
          to specify the platform's thread function return type.

        * ace/OS.{h i cpp} (thr_exit, thr_join): The status arg is now
          a ACE_THR_FUNC_RETURN *.
          Also moved remaining thread function definition type things to
          config-all.h with the rest of them.

        * ace/Base_Thread_Adapter.{h cpp} (invoke(), ace_thread_adapter()):
        * ace/OS_Thread_Adapter.{h cpp}
        * ace/Thread_Adapter.{h cpp} (invoke(), invoke_i()):
          Return type changed from void * to ACE_THR_FUNC_RETURN.

        * ace/Event_Handler.{cpp h} (read_adapter): Change return value from
          void* to ACE_THR_FUNC_RETURN.

        * ace/Thread_Hook.{h cpp}: ACE_Thread_Hook::start () returns
          ACE_THR_FUNC_RETURN, not void *.

        * ace/Thread.{h i} (exit, join): 'status' arg is now
          ACE_THR_FUNC_RETURN *, not void *.

        * ace/Thread_Control.{h inl cpp} (status, exit):
        * ace/Thread_Manager.{h cpp} (exit, join): Thread exit status
          type changed from void * to ACE_THR_FUNC_RETURN.

        * ace/Task.{h cpp} (ACE_Task_Base): Return type from svc_run now
          ACE_THR_FUNC_RETURN.

        * examples/C++NPv1/RT_Thread_Per_Connection_Logging_Server.cpp:
        * examples/C++NPv1/Thread_Per_Connection_Logging_Server.{cpp, h}:
        * examples/C++NPv2/Select_Reactor_Logging_Server.cpp:
        * examples/C++NPv2/Server_Shutdown.cpp:
        * examples/C++NPv2/TP_Reactor_Logging_Server.cpp:
        * examples/C++NPv2/WFMO_Reactor_Logging_Server.cpp:
        * examples/C++NPv2/Client_Logging_Daemon.cpp:
        * examples/Connection/blocking/SPIPE-acceptor.cpp:
        * examples/IPC_SAP/SOCK_SAP/CPP-inserver.cpp:
        * examples/IPC_SAP/SSL_SAP/SSL-server.cpp:
        * examples/Reactor/WFMO_Reactor/Abandoned.cpp:
        * performance-tests/TCP/tcp_test.cpp:
        * tests/ACE_Init_Test.cpp:
        * tests/MEM_Stream_Test.cpp:
        * tests/Service_Config_DLL.cpp:
        * tests/Task_Test.cpp:
        * tests/Thread_Pool_Reactor_Resume_Test.cpp:
        * tests/Thread_Pool_Reactor_Test.cpp:
          Change thread function to return ACE_THR_FUNC_RETURN, not void *.

        * examples/C++NPv2/TP_Logging_Server.cpp (handle_input, svc):
        * examples/C++NPv2/AC_Client_Logging_Daemon.cpp (open):
        * examples/C++NPv2/display_logfile.cpp (svc): Change
          ACE_reinterpret_cast to ACE_static_cast. Thanks to Doug Schmidt
          for finding this.

        * examples/C++NPv2/TP_Logging_Server.h:
        * examples/C++NPv2/Reactor_Logging_Server_Adapter.cpp: Corrected use
          of ACE_NEW_RETURN.

Mon Jul  1 23:16:47 2002  Jeff Parsons <parsons@cs.wustl.edu>

        * */Makefile:

          Updated dependencies.

Mon Jul  1 21:59:44 2002  Krishnakumar B  <kitty@cs.wustl.edu>

        * ACEXML/common/Attributes.h:
        * ACEXML/common/AttributesImpl.h:
        * ACEXML/common/Attributes_Def_Builder.h:
        * ACEXML/common/CharStream.h:
        * ACEXML/common/ContentHandler.h:
        * ACEXML/common/DTDHandler.h:
        * ACEXML/common/DTD_Manager.h:
        * ACEXML/common/DefaultHandler.h:
        * ACEXML/common/Element_Def_Builder.h:
        * ACEXML/common/EntityResolver.h:
        * ACEXML/common/Env.h:
        * ACEXML/common/ErrorHandler.h:
        * ACEXML/common/Exception.h:
        * ACEXML/common/FileCharStream.h:
        * ACEXML/common/HttpCharStream.h:
        * ACEXML/common/InputSource.h:
        * ACEXML/common/Locator.h:
        * ACEXML/common/LocatorImpl.h:
        * ACEXML/common/Mem_Map_Stream.h:
        * ACEXML/common/NamespaceSupport.h:
        * ACEXML/common/SAXExceptions.h:
        * ACEXML/common/StrCharStream.h:
        * ACEXML/common/Transcode.h:
        * ACEXML/common/URL_Addr.h:
        * ACEXML/common/Validator.h:
        * ACEXML/common/XMLFilter.h:
        * ACEXML/common/XMLFilterImpl.h:
        * ACEXML/common/XMLReader.h:
        * ACEXML/common/XML_Codecs.h:
        * ACEXML/common/XML_Types.h:
        * ACEXML/parser/debug_validator/Debug_Attributes_Builder.cpp:
        * ACEXML/parser/debug_validator/Debug_Attributes_Builder.h:
        * ACEXML/parser/debug_validator/Debug_DTD_Manager.h:
        * ACEXML/parser/debug_validator/Debug_Element_Builder.h:
        * ACEXML/parser/debug_validator/Element_Tree.h:
        * ACEXML/parser/parser/Entity_Manager.h:
        * ACEXML/parser/parser/Parser.cpp:
        * ACEXML/parser/parser/Parser.h:

        ACE_LACKS_PRAGMA_ONCE fixes.

Mon Jul  1 06:21:00 2002  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

	* ace/Sock_Connect.cpp (count_interfaces): Added a MacOSX-specific
	  value for OSIOCGIFCONF.  Thanks to John Zorko <j.zorko@att.net>
 	  for this fix.
