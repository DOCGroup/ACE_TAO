Tue Jul 10 18:15:39 2001  Steve Huston  <shuston@riverace.com>

        * ace/WFMO_Reactor.cpp (event_handling): Move the logic for
          noticing that the wait timed out, but did not expire any
          timers, into this function. Will remove it from Reactor.cpp,
          to properly move the fix into handle_events() rather than
          needing to call run_reactor_event_loop to get it right.
        * ace/Select_Reactor_T.cpp - still need to add similar logic here.

        * ace/config-sunos5.6.h: Re the following:
          Mon Jul  2 15:26:32 2001  Nanbor Wang  <nanbor@cs.wustl.edu>
          Replaced ACE_HAS_POSIX_SEM, and left ACE_LACKS_NAMED_POSIX_SEM out.
          Solaris does indeed have POSIX semaphores in 2.6 and later, but
          requires the changes to OS.i below to work right.

        * ace/OS.h: For ACE_PROC_PRI_OTHER_MIN (and MAX), on HP-UX,
          convert the HP-UX priority value to the POSIX range.

        * ace/OS.i (ACE_OS::sema_init, named POSIX semaphore): On Solaris
          and HP-UX, the name of a POSIX semaphore needs to start with
          a slash (further restricted on Solaris). Enforce that here by
          prepending a slash, or by chopping off parts of the name.

Tue Jul 10 16:08:04 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * include/makeinclude/platform_osf1_4.0.GNU:

          Fixed the default flags so that it enables the user to override
          settings. Now that the long pending fix to wrapper_macros.GNU is
          through, this should work fine now.

Tue Jul 10 13:37:31 2001  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/OS_Dirent.cpp (readdir_emulation):

          Removed the hard cast to char* of one of the two arguments in
          a call to strcpy. In the WChar win32 build, this cast was
          causing the source and target strings to be of different widths.

Tue Jul 10 11:32:26 2001  Tibor Kiss  <tkiss@mindmaker.hu>

        * ace/Log_Msg.cpp:
          Completed the ACE_Log_Msg::close method with the
          ACE_Thread::keyfree (log_msg_tss_key_) and key_created_ = 0; to
          ensure restartability by multiple successive ACE::init and
          ACE::fini calls.  This fix prevent leaks from occurring when
          ACE::init() and ACE::fini() are called multiple times.

Tue Jul 10 11:12:00 2001  Chris Gill <cdgill@cs.wustl.edu>

        * ace/OS_Dirent.{h, inl}: refactored XDIR, dirent usage for pSOS -
          user is no longer responsible for buffer deallocation after each
          readdir call, only for passing the pointer returned from opendir
          into closedir when all done.  ACE_DIR structure is now used
          consistently for all pSOS dirent calls.

Tue Jul 10 06:06:07 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Service_Repository.h: Updated the insert() comment to
          clarify the return values.  Thanks to Johnny Willemsen for
          suggesting this.

        * ace/Service_Repository.{h,i}: Made the current_size() and
          total_size() methods const.  Thanks to Johnny Willemsen for
          suggesting this.

        * ace/Service_Repository.h: Fixed a typo in the comments.  Thanks
          to Johnny Willemsen for reporting this.

Tue Jul 10 08:39:04 2001  Chad Elliott  <elliott_c@ociweb.com>

        * ace/config-vxworks5.x.h:

          Added the macro ACE_LACKS_UNIX_SYSLOG.

Tue Jul 10 08:26:57 2001  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Log_Msg_UNIX_Syslog.cpp:

          Added a macro, ACE_LACKS_SETLOGMASK, for platforms that have
          syslog, but don't have setlogmask().

        * ace/config-chorus.h:

          ChorusOS 4.0.1 happens to be one of them.

Tue Jul 10 09:00:12 2001  Johnny Willemsen <jwillemsen@remedy.nl>

        * ace/OS_Dirent.h
          Made the member 'd_name' of the 'dirent' struct non-const, because
          BCB had problems with it

Mon Jul 09 22:41:43 2001  Ossama Othman  <ossama@uci.edu>

        * include/makeinclude/wrapper_macros.GNU (exceptions):

          Include platform_macros.GNU before the default for "exceptions"
          is set.  This fixes a problem where the default native
          exceptions setting in platform_linux.GNU was not set due to the
          fact that it was previously set in wrapper_macros.GNU.  Thanks
          to Hans Utz <hans.utz@informatik.uni-ulm.de> for tracking down
          the problem.

Mon Jul  9 16:40:02 2001  Ossama Othman  <ossama@uci.edu>

        * ace/Dirent_Selector.cpp (ACE_Dirent_Selector):

          Correct order of initialization of members to match order of
          declaration.  Fixes a warning issued from GCC.

        * ace/Dirent_Selector.inl:

          Added missing RCS ID keyword.  Fuzz was whining about the lack
          of it.

        * ace/Dirent_Selector.h:

          Corrected some Doxygen comments.

Mon Jul 09 19:12:42 2001  Steve Huston  <shuston@riverace.com>

        * ace/ace.icc: Added Log_Msg_UNIX_Syslog and Log_Msg_NT_Event_Log
          modules to the LOGGING component. Added Dirent_Selector to the
          UTILS component.

Mon Jul  9 15:59:56 2001  Joe Hoffert  <joeh@cs.wustl.edu>

        * ace/config-lynxos.h:
          Added ACE_LACKS_MKSTEMP since LynxOS doesn't seem to have
          this.

Mon Jul  9 15:28:29 2001  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/Dirent_Selector.cpp:
        * ace/Dirent_Selector.h:

          Added ACE_INLINE guards around inclusion of Dirent_Selector.inl.

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:

          Added Dirent_Selector.{h,i,cpp} to these projects.

Mon Jul  9 06:52:09 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Makefile.bor (OBJFILES): Added the Dirent_Selector.obj file.

        * tests/Dirent_Test.cpp: Integrated a new test for the
          ACE_Dirent_Selector class.

        * ace/Makefile (UTILS_FILES),
        * ace/Dirent_Selector.h,
        * ace/Dirent_Selector.inl,
        * ace/Dirent_Selector.cpp: Added support for a C++ wrapper facade that
          encapsulates ACE_OS_Dirent::scandir().  Thanks to Rich Newman for
          contributing this, as well.

        * ace/OS_Dirent.h,
        * ace/OS_Dirent.inl,
        * ace/OS_Dirent.cpp: Added support for the scandir() feature, which
          makes it possible to selectively pick which files in a directory
          to iterate over.  Also fixed a bug in the emulation of dirent.
          Thanks to Rich Newman <RNewman@directv.com> for contributing
          these fixes.

Mon Jul 09 14:39:50 2001  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/OS.i (thr_getprio and thr_setprio): Changed these two
          function such that if we are on Solaris and we have pthreads
          enabled, we should use the pthread calls rather than the native
          Solaris calls.  The reasons for choosing the pthread calls is
          due to following problems with the native calls:

          - thr_getprio() is evil because on Solaris 5.8, a thread with
          priority -20 (SCHED_OTHER) is reported to have priority 80.

          - thr_setprio() is evil because it cannot set the negative
          priorities on Solaris 5.8.

          - Also, thr_setprio() cannot change the priority of a thread
          with negative priority to a positive priority on Solaris 5.8
          (even though there is no error reported and thr_getprio() shows
          that the change happened but pthread_getschedparam() shows that
          no change happened).

          - In addition, suppose a thread of policy SCHED_RR or SCHED_FIFO
          uses thr_setprio() to reset its priority, the priority will be
          reset but the scheduling policy will be dropped to SCHED_OTHER.
          This happens with both Solaris 5.7 and Solaris 5.8.

Mon Jul  9 13:33:43 2001  Joe Hoffert  <joeh@cs.wustl.edu>

        * include/makeinclude/wrapper_macros.GNU:
          Change PACE path to start at $PACE_ROOT rather than $ACE_ROOT/PACE
          since the latter is not as flexible. Defined PACE_ROOT if not
          already defined. Also, added inclusion of PACE library for VxWorks
          even when inlining since not all the PACE functions should be
          inlined.

Mon Jul 09 10:59:22 2001  Ossama Othman  <ossama@uci.edu>

        * THANKS:

          Added Mouna Seri <seri@crhc.uiuc.edu> to the hall of fame.

Mon Jul  9 11:10:44 2001  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/config-win32-msvc-5.h:
        * ace/config-win32-msvc-6.h:

          Added conditional definitions for ACE_LD_DECORATOR_STR
          "mfc" and "mfcd" so that the MFC release and debug versions
          of libraries can be dynamically loaded in the same way that
          the non-MFC release and debug versions are. Thanks to
          Francois Bernier <fbernier@gel.ulaval.ca> for suggesting
          this enhancement.

Mon Jul 09 11:31:12 2001  Johnny Willemsen <jwillemsen@remedy.nl>

        * ace/pre.h
        * include/makeinclude/compiler.bor

          Removed the disabling of the compiler warning 'parameter never
          used'. Unused parameters are handled by ACE_UNUSED_ARG macro.
          A missing ACE_UNUSED_ARG is now shown as warning in the BCB build
          log.

Sun Jul 08 11:26:23 2001  Ossama Othman  <ossama@uci.edu>

        * ace/OS.h (mkstemp):
        * ace/OS.i (mkstemp):

          New mkstemp() wrapper.  It is assumed to be available on the
          given platform, unless ACE_LACKS_MKSTEMP is defined.

        * ace/FILE_Connector.h:

          Added O_EXCL to the default flags.  This is a security hole
          fix.

        * ace/FILE_Connector.cpp (connect):

          If mkstemp() is available, then use it to create a temporary
          file rather than mktemp() (via ACE_FILE_Addr) since mktemp() is
          susceptible to a denial-of-service attack.

        * ace/config-win32-common.h:
        * ace/config-vxworks5.x.h:

          mkstemp() is not supported on MS Windows and VxWorks.  Define
          ACE_LACKS_MKSTEMP in these headers.

Sun Jul  8 08:13:12 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Select_Reactor_Base.h: Added a comment explaining what
          the ACE_HAS_REACTOR_NOTIFICATION_QUEUE macro means.  Thanks to
          Kobi Cohen-Arazi <kobic@bvr.co.il> for motivating this.

Sat Jul  7 18:53:49 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * include/makeinclude/platform_osf1_4.0.GNU:

          Revert the changes made to this file. Please see the file for a
          lengthy description.

Fri Jul 06 21:53:26 2001  Christopher Kohlhoff  <chris@kohlhoff.com>

        * ace/config-win32-borland.h:
          Reverted addition of ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION.

Fri Jul  6 19:55:23 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * examples/Reactor/Multicast: Adding the support for UNIX Syslog
          broke this example because LOG_DEBUG was suddenly defined as a
          macro (it's in syslog.h).  I've fixed this by renaming the LOG_
          enums to LM_ instead.  Thanks to Bala for reporting this.

Fri Jul 06 20:23:41 2001  Steve Huston  <shuston@riverace.com>

        * ace/Refcoutned_Auto_Ptr.i (null): Change const_cast<> to
          ACE_const_cast() to build on older compilers, like IBM C/C++ 3.6.6.

Fri Jul 06 20:13:29 2001  Steve Huston  <shuston@riverace.com>

        * netsvcs/lib/Name_Handler.cpp:
        * netsvcs/lib/Server_Logging_Handler_T.cpp:
        * netsvcs/lib/Token_Handler.cpp:

          More ACE_DEBUG disables.

Fri Jul  6 15:55:54 2001  Ossama Othman  <ossama@uci.edu>

        * ace/OS.h (ACE_FD_SETSIZE):

          Integrated patch from Jody Hagins <jody@atdesk.com>.  Set the
          default reactor file descriptor set size to be an integer
          constant rather than a preprocessor constant.  Some third party
          software #undef FD_SETSIZE in their header files, causing build
          problems in ACE.

Fri Jul 06 18:20:39 2001  Steve Huston  <shuston@riverace.com>

        * netsvcs/lib/Client_Logging_Handler.cpp: #if 0'd out a bunch of
          ACE_DEBUG statements that aren't appropriate for use in commercial
          logging. These can be #if 1'd if there's some doubt while debugging
          this stuff, but they aren't useful once debugged, and are
          distracting since they're interespersed with application records.

Fri Jul  6 13:40:20 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Log_Msg_UNIX_Syslog.cpp: Fixed a warning in g++.

Fri Jul 06 11:39:41 2001  Steve Huston  <shuston@riverace.com>

        * ace/INET_Addr.h: Clarified (and improved doxygenation) of
          constructor and set() methods regarding byte orders.

        * tests/Max_Default_Port_Test.icc: New file for this test.
        * tests/tests.icp: Added Max_Default_Port_Test

Fri Jul  6 08:36:20 2001  Chad Elliott  <elliott_c@ociweb.com>

        * netsvcs/Makefile: Don't build this if ACE_COMPONENTS does not
          contain Other.  The netsvcs library requires Naming_Context.

Fri Jul  6 05:44:13 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Makefile (LOGGING_FILES): Added support for
          Log_Msg_UNIX_Syslog.

        * ace/Log_Msg_UNIX_Syslog.{h,cpp}:
        * ace/Log_Msg.cpp,
        * ace/OS.h: Added support for a new UNIX syslog backend for the
          ACE_Log_Msg class.  Thanks to Jerry D. De Master
          <jdemaster@rite-solutions.com> and Robert Davidson
          <robert@rdavidson.freeserve.co.uk>.

        * ace/SOCK_Dgram.h: Fixed a typo in one of the send() method
          comments.  Thanks to Alain Decamps <Alain.Decamps@PIDPA.be> for
          reporting this.

        * ace/config-macosx.h: Added a new file courtesy of John
          Zorko so that things will work on MacOSX.

Thu Jul  5 23:22:21 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

          Fixes that were required for fixing bug 575. Merged in from
          branch bug_575_stage_2.

Thu Jul  5 23:09:29 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/CDR_Stream.cpp (ACE_InputCDR): Fixed a long standing bug in
          the branch. This caused the DSI_Gateway test to fail. The
          problem was from setting the write pointer to a wrong position
          during the construction.

Thu Jul  5 14:39:45 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * Merged with the main trunk and moved it to a new branch by name
          bug_575_stage_2.

Thu Jun 28 15:25:07 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Reactor.h (ACE_Reactor):
        * ace/Reactor.cpp: Added a new method resumable_handler () to the
          reactor interface. This would indicate whether the application
          can take advantage by resuming the handlers themselves or
          not. Not all reactors can allow this feature.

        * ace/Reactor_Impl.h:
        * ace/Reactor_Impl.cpp: Added a pure virtual function so that all
          the implementations can decide whether the handlers are
          resumable or not.

        * ace/Select_Reactor_Base.h:
        * ace/Select_Reactor_Base.cpp:
        * ace/TP_Reactor.h:
        * ace/TP_Reactor.cpp:
        * ace/WFMO_Reactor.h:
        * ace/WFMO_Reactor.cpp:Implemented resumable_handlers ().

Sun Jun 24 11:25:07 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * Created this file. Got the whole stuff in ace to a new branch by
          name bug_575_stage_1. This ChangeLog file will be in branch
          bug_575.

Fri Jun 22 16:52:13 2001  Balachandran Natarajan <bala@cs.wustl.edu>

        * ace/CDR_Stream.cpp: Changed the copy constructor for the
          ACE_InputCDR's. Instead of duplicating the ACE_Data_Block we
          now use the new copy constructor in the ACE_Message_Block.

        * ace/Message_Block.h:
        * ace/Message_Block.cpp: Added a new copy constructor to the
          ACE_Message_Block. This copy constructor does a deep copy from
          the data block if the data block of the incoming message block
          is on the stack or does a shallow copy of the data block (by
          incrementing the ref count) if it is on the heap.

        END of entries from bug_575_stage_2.

Thu Jul  5 22:07:33 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/auto_run_tests.lst: Added the new perl script in LongUpcalls
          in the  daily builds.

Thu Jul  5 20:36:00 2001  Craig Rodrigues  <crodrigu@bbn.com>

        * ace/config-win32-borland.h
            define ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION
        * tests/Token_Test.cpp
            Fix template instantiation problem.

Wed Jul  4 15:35:47 2001  Joe Hoffert  <joeh@cs.wustl.edu>

        * tests/run_tests.vxworks:
          Removed invocation of CDR_Array_Test. According to the ace
          config files the compiler we are using is pre 2.8 (i.e.,
          ACE_HAS_GNUG_PRE_2_8 is defined). Therefore don't run
          CDR_Array_Test since the Makefile doesn't build it (due to
          the ACE_HAS_GNUG_PRE_2_8 macro).

Wed Jul 04 14:26:10 2001  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Synch_T.h (class ACE_Acquire_Method): Moved the enums from
          the Reverse Lock class into ACE_Acquire_Method, a non-template
          class.  These enums should have been inside the reverse lock
          class, but some lame compilers cannot handle enums inside
          template classes.

Wed Jul 04 12:43:22 2001  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Synch_T.i (ACE_Reverse_Lock): Fully specified the
          ACE_ACQUIRE_METHOD type.

Tue Jul  3 15:43:25 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Select_Reactor_Base.cpp: Fixed a warning in g++.

Tue Jul  3 14:44:00 2001  Craig Rodrigues  <crodrigues@bbn.com>

        * ace/config-win32-common.h: Borland C++ apparently
          does not support the "extern template class" Microsoft VC++
          proprietary extension.  Thanks to Chris Kohloff <chris@kohlhoff.com>
          for the fix.

Tue Jul 03 12:26:33 2001  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Synch_T.h (class ACE_Reverse_Lock): Added a parameter to the
          constructor of the reverse lock.  The ACE_ACQUIRE_METHOD
          parameter is used to indicate which acquire() method will be
          called on the real lock when the release() method is called on
          the reverse lock. REGULAR indicated the acquire() method, READ
          indicates the acquire_read() method, and WRITE indicates the
          acquire_write() method.  Note that the try_*() methods are not
          represented here because we have to make sure that the release()
          method on the reverse lock acquires a lock on the real lock.

          Thanks to Edan Ayal <edana@bandwiz.com> for suggesting this.

Tue Jul  3 06:20:13 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Reactor.h,
        * ace/Reactor_Impl.h,
        * ace/Select_Reactor_Base.cpp,
        * ace/Select_Reactor_Base.i,
        * ace/Select_Reactor_Base.h,
        * ace/WFMO_Reactor.cpp,
        * ace/WFMO_Reactor.h: Added an enhancement that allows the
          Reactor to selectively purge event handlers from its
          notification queue according to their Reactor_Mask type.  Thanks
          to Edan Ayal <edana@bandwiz.com> for contributing this.

        * tests/Reactor_Notify_Test.cpp (run_notify_purge_test):
          Added a new set of tests for the new selective notification
          purging features of the Reactor.  Thanks to Edan Ayal
          <edana@bandwiz.com> for contributing this.

        * ace/WIN32_Asynch_IO.cpp: Removed the
          ACE_WIN32_Asynch_Result (handler, act, event, 0, 0, priority,
          signal_number), initializer since we no longer use virtual
          inheritance.  Thanks to Alexander Libman
          <alexander.libman@baltimore.com> for reporting this.

        * ace/WIN32_Asynch_IO.h: Removed the virtual inheritance from
          ACE_WIN32_Asynch_Result for the ACE_Asynch_Read_Stream_Result
          and ACE_Asynch_Read_Dgram_Result classes.  Thanks to Alexander
          Libman <alexander.libman@baltimore.com> for reporting this.

        * ace/Refcounted_Auto_Ptr.h: Made the destructor of
          ACE_Refcounted_Auto_Ptr virtual so that users can override it
          locally.  Thanks to Jenny Kowald <jkowald@oz.agile.tv> for
          reporting this.

Tue Jul  3 09:40:59 2001  Chad Elliott  <elliott_c@ociweb.com>

        * include/makeinclude/platform_osf1_4.0.GNU:
        * include/makeinclude/platform_osf1_4.0_g++.GNU:

          Allow users to set options like debug, exceptions, ... without
          using override.

Tue Jul  3 08:38:47 2001  Jeff Parsons <parsons@cs.wustl.edu>

        * examples/Reactor/Proactor/test_dup_proactor.dsp:

          Fixed a mistake in the link to the ACE library.

Mon Jul  2 16:23:04 2001  Jeff Parsons <parsons@cs.wustl.edu>

        *  examples/Reactor/Proactor/test_multiple_loops.dsp:
        *  examples/Reactor/Proactor/test_proactor.dsp:
        *  examples/Reactor/Proactor/test_proactor.dsw:
        *  examples/Reactor/Proactor/test_timeout.dsp:
        *  examples/Reactor/Proactor/test_udp_proactor.dsp:

          Fixed settings on release version of test_udp_proactor.dsp,
          added it to the workspace, and removed unused file folders
          from the FileViews of the other projects.

Mon Jul  2 15:26:32 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-sunos5.6.h: Removed ACE_HAS_POSIX_SEM and
          ACE_LACKS_NAMED_POSIX_SEM.  Thanks to Glenn Popelka
          <gpp@gpopelka.com> for helping track this down.

Mon Jul 02 11:45:57 2001  Ossama Othman  <ossama@uci.edu>

        * bin/make_release:

          Disabled bootstrapping of ACE's autoconf support.  It isn't
          ready for general use.  Doing so reduces the amount of
          confusion.  Thanks to Holger P. Krekel <krekel@merlinux.de> for
          motivating this change.

Mon Jul  2 13:18:14 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * Moved ACE-configurations.txt into the docs directory.  Also
          removed the hopelessly out of date BIBLIOGRAPHY file.

        * Moved all the ChangeLog-* files into the new ChangeLogs
          directory.  Thanks to Holger P. Krekel <krekel@merlinux.de> for
          this suggestion.

Mon Jul 02 11:20:52 2001  Ossama Othman  <ossama@uci.edu>

        * config.guess:
        * config.sub:

          Updated to the latest versions from the GNU FTP site.

Mon Jul 02 11:30:20 2001  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Synch_T.i: Since the release() method on the reverse lock
          calls the simple acquire() method on the real lock, it is
          assumed that it is a simple acquire/release protocol with the
          real lock.  Therefore, I think all the other methods on the
          reverse lock tryacquire(), acquire_read(), acquire_write(),
          tryacquire_read(), tryacquire_write(), and
          tryacquire_write_upgrade() should not be allowed.  This falls in
          line with the original concept of using reverse locks with
          regular guards.

          Thanks to Edan Ayal <edana@bandwiz.com> for pointing this out.

Mon Jul  2 11:17:37 2001  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Profile_Timer.cpp:

          Cleaned up the conditional macros.  Added method bodies for
          ACE_Profile_Timer::get_rusage() and
          ACE_Profile_Timer::elapsed_rusage() when neither ACE_HAS_PRUSAGE_T
          nor ACE_HAS_GETRUSAGE is defined.

        * Reverted the reverted changes in this entry.
          "Fri Jun 29 22:31:56 2001  Balachandran Natarajan
          <bala@cs.wustl.edu>".  These changes are ok, I just
          needed to fix the bug in Profile_Timer.cpp.

Mon Jul  2 09:40:45 2001  Chad Elliott  <elliott_c@ociweb.com>

        * include/makeinclude/platform_aix_ibm.GNU:

          Add the output filter to the linker to avoid the duplicate symbol
          warnings on AIX.

Mon Jul  2 05:40:54 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Logging_Strategy.cpp: Enhanced the code so that it works with
          ACE_LACKS_IOSTREAM_TOTALLY.  Thanks to Nir Drang <nir@bandwiz.com>
          and Edan Ayal <edana@bandwiz.com> for reporting this.

        * ace/SPIPE_Addr.cpp (set): Added a "+ 1" to the computation of
          the size of the SPIPE_Addr to account for the trailing NUL.
          Thanks to Oren Zeev-Ben-Mordehai <oren@phonedo.com> for
          reporting this.

        * ace/Refcounted_Auto_Ptr.{h,i}: Added support for a "null()"
          method to check if a refcounted auto ptr is NULL.  Thanks to
          Jenny Kowald <jkowald@oz.agile.tv> for reporting this.

        * ace/config-macosx.h,
        * ace/platform_macosx.GNU: Enhanced these files to support MacOSX.
          Thanks to John Zorko <j.zorko@att.net> for contributing this.

        * ace/Synch.h: Fixed the Doxygen documentation for all the
          removed_ fields, which where somehow messed up.  Thanks to
          Johnny Willemsen for reporting this.

Sun Jul  1 11:49:13 2001  Alexander Libman <alexander.libman@baltimore.com>

        * ace: Enhanced the POSIX and Sun Proactor implementations as
          follows:

          . POSIX_SIG_Proactor is now based on POSIX_AIOCB_Proactor

          . All classes ACE_POSIX_SIG_Asynch_XXXX are removed.
            POSIX_SIG_Proactor uses the ACE_POSIX_AIOCB_Asynch_XXXX
            classes now.

          . ACE_POSIX_AIOCB_Proactor::register_and_start_aio (...)
            now calls a new virtual method: int
            ACE_POSIX_AIOCB_Proactor::allocate_aio_slot
            (ACE_POSIX_Asynch_Result *result).

          . The strategy of free slot allocation in SIG_Proactor is
            a bit different from AIOCB and SUN Proactors.  The
            allocate_aio_slot() method is responsible for setting
            notification information for aio request
            (SIGEV_NONE/SIGEV_SIGNAL).  For SIG_Proactor, the field
            aio_sigevent.sigev_value.sival_int now contains index of aiocb
            in the aiocb_list_, not a pointer.

          . The ACE_POSIX_AIOCB_Proactor::find_completed_aio (int &error_status,
                                              int &return_status, size_t
                                              &index, size_t &count)
            parameter index defines initial slot to scan and the new
            parameter count tells us maximum number slots to scan.  On
            return: index contains value to start scan next time, count
            contains remained number of slots.  Scanning is performed in
            "wheel" style to allow all requests be handled with equal
            priorities.

          . ACE_POSIX_AIOCB_Proactor::check_max_aio_num () checks for
            max_number_files to open and tries to setup max_number_files
            equal to aiocb_max_size_. if we failed than cut off
            aiocb_max_size_ value to existing max_number_files.

          . POSIX_Proactor added member int os_id_ and constructor sets up
            os_id_ (compilation time + run_time function) to know
            OS(Sun/HP/Linux/...) and version.  We need such info for
            POSIX_SIG_Proactors to take into account the behavior of
            different OS.

          . Delivery of simulated/"post_completed" Asynch_Results
            (Timers, AsynchAccept,Wakeup ...).  As both Proactors have no
            reliable mechanizm for delivery "post_completed" results, so
            the reliable queue of "post_completed" results was
            implemented.  The new member of AIOCB Proactor
            ACE_Unbounded_Queue<ACE_POSIX_Asynch_Result *> result_queue_
            has been added.  Also added protected methods to the
            ACE_POSIX_AIOCB_Proactor.

          . We had an error in all previous versions (from major ACE 5.1):
            post_completion (int how_many) does not guarantee that all
            completions will be delivered to the different threads running
            event_loop (sometimes several completions could be delivered
            to the one thread, in another thread performs during long time
            application_spesific_code ()).  Moreover, you can run now
            Proactor event_loop in any number of threads (more than
            SIGQUEMAX).

Sun Jul  1 11:49:13 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * examples/Reactor/Proactor: Integrated a test that exercises the
          support for asynchronous UDP operations.  Thanks to Roger Tragin
          <r.tragin@computer.org> for contributing this.

        * ace/Synch_T.i: Changed the implementations of all the
          acquire*() method to call release().  Thanks to Edan Ayal
          <edana@bandwiz.com> for reporting this.

Sat Jun 30 12:44:11 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * examples/Connection/blocking/SPIPE-acceptor.cpp: Added better
          support for shutting down the server when a signal occurs.
          Thanks to Rich Newman <RNewman@directv.com> for this
          enhancement.

Sun Jul 01 11:16:34 2001  Balachandran  <bala@cs.wustl.edu>

        * ACE version 5.1.18 released.

Sun Jul  1 11:03:32 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/generate_doxygen.pl: Removed SSLIOP from the list.
        * etc/tao_ssliop.dosxygen: Removed the file as it was creating
          problems for the beta.

Sat Jun 30 12:44:11 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/FIFO_Send_Msg.cpp (send): Fixed another errant use of
          putmsg().  Thanks to David Trusty <david.trusty@westwave.com>
          for reporting this.

Fri Jun 29 22:31:56 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * Reverted the changes in this entry.
          "Thu Jun 28 13:44:52 2001  Chad Elliott
          <elliott_c@ociweb.com>". The changes seem to be breaking builds
          on Sun.

Fri Jun 29 10:14:03 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/config-macosx.h: Removed some macros that don't apply to
          MacOSX.  Thanks to John Zorko <j.zorko@att.net> for contributing
          this.

        * include/makeinclude/platform_macosx.GNU (CC): Changed
          the -fno-implict-templates to -fimplicit-templates.  Thanks to
          John Zorko <j.zorko@att.net> for contributing this.

Wed Jun 27 12:00:34 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/FIFO_Send_Msg.i (send): Make sure that when we use the
          putmsg() variant of this call that we correctly return the
          length.  Thanks to David Trusty <david.trusty@westwave.com> for
          reporting this.

        * ace/FIFO_Recv_Msg.i (recv): Make sure that when we use the
          getmsg() variant of this call that we correctly return the
          length.  Thanks to David Trusty <david.trusty@westwave.com> for
          reporting this.

        * ace/Log_Record.{h,cpp}: Added support for extending the
          names of the types of logging requests.  Thanks to Kelly
          F. Hickel <kfh@mqsoftware.com> and Jonathan Reis
          <reis@stentor.com> for this fix.

Thu Jun 28 13:44:52 2001  Chad Elliott  <elliott_c@ociweb.com>

        * ace/config-sunos5.5.h:

          Add include of sys/feature_tests.h to ensure that certain macros
          are set up correctly.  This is mainly important to SunOS 5.7 and
          later, but may be useful to the earlier versions.

          Also, added a check for the correct value of _POSIX_C_SOURCE to
          set ACE_HAS_POSIX_GETPWNAM_R.  This use to be a conditional in
          config-sunos5.7.h based on gcc 3.0, but it is not specific to gcc.

        * ace/config-sunos5.6.h:

          Added a check for _XPG4_2 before defining
          ACE_HAS_4_4BSD_SENDMSG_RECVMSG.  This used to be a conditional in
          config-sunos5.7.h based on gcc 3.0, but it is not specific to gcc.

        * ace/config-sunos5.7.h:

          Removed the gcc 3.0 specific section and dispersed the macro
          definitions to the correct config files (based on os version and
          other macros).

          Added a definition of ACE_HAS_SOCKLEN_T since SunOS has had
          socklen_t since 5.7.  This use to be a conditional based on gcc
          3.0, but it is not specific to gcc.

Thu Jun 28 13:05:12 2001  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/CDR_Stream.{h,i,cpp}:

          Update to_(w)string and from_(w)string to conform to the
          latest C++ mapping (00-01-02). Extra constructors have
          been added, taking a const (w)string, and the val_
          member of from_(w)string has been made const. The constructor
          taking a non-const (w)string for to_(w)string has been
          deprecated, and will be removed from the spec at some point.
          Thanks to Andy Alvarez <andy_alvarez@baxter.com> for pointing
          this out.

Thu Jun 28 07:08:26 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/TP_Reactor.cpp: Added a sanity check. The check involves
          invalidating the handle when the handler is removed from the
          repository in notify_handle (). We also check for an invalid
          handle before we go ahead and resume the handle. Thanks to
          Alexander Libman <alexander.libman@baltimore.com> for suggesting
          this check.

Wed Jun 27 14:07:43 2001  Sharath R. Cholleti  <sharath@cs.wustl.edu>

        * ace/CDR_Stream.{cpp,h}:

          Changed write_wstring() and read_wstring() to partially comply
          with GIOP 1.2.

Wed Jun 27 07:13:13 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/OS_TLI.inl: Fixed a compile error in Win32 builds.

Tue Jun 26 17:56:05 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * tests/Message_Block_Test.cpp: Changed the test to use
          ACE_DEFAULT_MESSAGE_BLOCK_PRIORITY and
          ACE_DEFAULT_MESSAGE_BLOCK_PRIORITY + 1 rather than priorities 0
          and 1.  Thus, the test works properly when users override the
          ACE_DEFAULT_MESSAGE_BLOCK_PRIORITY in config.h.  Thanks to Ivan
          Murphy for reporting this.

        * examples/Connection/blocking/SPIPE-acceptor.cpp: Added several
          fixes so that this stuff runs correct when called by multiple
          clients.  Thanks to Rich Newman <RNewman@directv.com> for
          contributing this.

Tue Jun 26 17:37:51 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Proactor.h: Fixed a compile error with g++. There were two
          return types. Retained the return type as int.

Tue Jun 26 16:22:24 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/OS_TLI.h: Zapped a dummy declaration of struct rlimit { }.
          Thanks to Bala for reporting this.

        * ace/TLI_*, OS_TLI.*: Added a number of fixes for TLI so that it'll
          compile properly on Win32 platforms.  Thanks to Andreas Geisler
          <andreas.geisler@erls.siemens.de> for reporting this.

        * ace/Proactor.h: Added a static reset_event_loop() to the ACE_Proactor
          class.  Thanks to Rich Newman <RNewman@directv.com> for
          reporting this.

        * ace/config-sunos5.7.h: Removed an errant #endif.  Thanks to
          Craig Ching <cching@mqsoftware.com> for reporting this.

Mon Jun 25 15:36:55 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/config-sunos5.7.h: Added support for GCC 3.0.  Thanks to
          Craig Ching <cching@mqsoftware.com> for contributing this.

Mon Jun 25 12:18:41 2001  Chad Elliott  <elliott_c@ociweb.com>

        * bin/aix_shr:

          Added to filter the duplicate symbol warnings from the compilation
          of the shr.o file for AIX shared libraries.

        * include/makeinclude/platform_aix_ibm.GNU:

          Added the definition of SHR_FILTER.  It is defined to be
          $(ACE_ROOT)/bin/aix_shr.

        * include/makeinclude/rules.lib.GNU:

          Added the GNU Make macro SHR_FILTER which will be used when
          compiling the shr.o file.  This will only have an affect if
          SHR_FILTER is defined.

Mon Jun 25 10:05:37 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Malloc_T.cpp (avail_chunks): Guarded againt the case when a
          Malloc_Header contains 0 available header for allocation as it
          caused an assignment of negative number to an unsigned number.
          Thanks to Ben Howard <Benn_Howard@raytheon.com> for pointing
          this out.

Sun Jun 24 21:51:10 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Obstack.h: Moved the trailing semicolon into the
          ACE_EXPORT_SINGLETON_DECLARATION macro to avoid a warning from
          Tru65.

Sun Jun 24 08:57:26 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/auto_run_tests.lst: Added Oneways_Invoking_Twoways to the
          daily builds.

Sat Jun 23 08:34:54 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/Max_Default_Port_Test.cpp: Fixed a unused warning in
          Single Threaded  builds.

        * tests/run_tests.lst: Prevented the above test from running in
          Single Threaded configurations.

Sat Jun 23 06:19:39 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/OS.i: For some god knows why reason, _POSIX_C_SOURCE doesn't
          get us the right behavior for getpwnam_r() on some platforms...
          Therefore, we'll need to define an ACE_HAS_POSIX_GETPWNAM_R
          macro instead -- grrr....  Thanks to Bala for pointing this out.

        * ace/OS.i: Fixed the getpwnam_r() wrapper so that it conforms to
          POSIX on platforms that support POSIX.  Thanks to
          Craig L. Ching <cching@mqsoftware.com> for reporting this.

Fri Jun 22 18:35:46 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/OS_TLI.inl: Fixed a compile error in win 32.

Fri Jun 22 18:06:50 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/nightlybuilds/builds.lst: Added a solaris 8 build to the
          scoreboard.

Fri Jun 22 18:00:51 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * examples/Log_Msg/test_ostream.cpp (main):

          Removed the flags variable and added the file open mode flags
          directly to the constructor. There doesn't see to be a portable
          way of fixing this as a lot of compilers don't have a compliant
          standard library. This fixes the compile error on gcc-3.0

Fri Jun 22 13:10:13 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * examples/Log_Msg/test_ostream.cpp (main):

          Reverted the change as it seems to break VC++. Will fix it
          shortly.

Fri Jun 22 10:31:29 2001  Steve Huston  <shuston@riverace.com>

        * ace/Configuration.{h cpp}: Added back the ACE_Configuration::
          import_config and export_config functions and marked them
          deprecated. They're needed for backwards compatibility with
          ACE 5.1.

Fri Jun 22 07:33:45 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/OS_TLI.{h,inl}: Changed the signature of the t_open() and
          t_accept() wrappers to use ACE_HANDLE rather than int.  Thanks
          to Steffen Hieber <Steffen.Hieber@erl9.siemens.de> for reporting
          this.

Fri Jun 22 09:31:04 2001  Ossama Othman  <ossama@uci.edu>

        * html/index.html:

          Corrected hyperlink for SSLIOP documentation.

Fri Jun 22 10:27:01 2001  Paul Calabrese  <calabrese_p@ociweb.com>

        * html/index.html:

          Add missing directories for Doxygen docs.

Fri Jun 22 00:26:34 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * examples/Log_Msg/test_ostream.cpp (main):

          Changed the type of flags to ios::openmode from int to fix
          errors under gcc-3.0.

        * examples/IOStream/client:
        * examples/IOStream/server:

          Added ACE_UNUSED_ARG to fix a couple of warnings.

Thu Jun 21 13:57:09 2001  Chad Elliott  <elliott_c@ociweb.com>

        * apps/JAWS/clients/Caching/http_handler.h:

          Fix a warning with g++.

Thu Jun 21 09:01:09 2001  Chad Elliott  <elliott_c@ociweb.com>

        * include/makeinclude/platform_aix_ibm.GNU:

          Fix for 64-bit AIX builds.  The ARFLAGS definition must have -X64
          before any of the other options.

Thu Jun 21 08:27:40 2001  Chad Elliott  <elliott_c@ociweb.com>

        * ace/config-aix-4.x.h:

          Fix for 64-bit AIX builds.

Thu Jun 21 08:00:01 2001  Chad Elliott  <elliott_c@ociweb.com>

        * apps/Gateway/Peer/Peer.h:
        * apps/JAWS/clients/Blobby/Blob.h:
        * apps/JAWS/clients/Caching/http_handler.h:
        * examples/ASX/Event_Server/Transceiver/transceiver.cpp:
        * examples/Connection/misc/test_upipe.cpp:

         Moved #include "ace/Connector.h" to be after #include
         "ace/SOCK_Connector.h" to fix compile error on AIX, Visual
          Age C++ 5.  Thanks to David Sperry <sperryd@res.raytheon.com>
          for reporting this.

        * apps/JAWS/server/Makefile:

          Move include of wrapper_macros.GNU below the check of the
          ACE_BUILD_COMPONENTS to avoid a warning about overriding commands
          for target libJAWS.a for AIX, Visual Age C++, 5.

        * include/makeinclude/platform_aix_ibm.GNU:

          Added warning suppression for possible use of uninitialized
          variables and possible infinite loops.  Added support for 64 bit
          builds with Visual Age C++ 5.

       * include/makeinclude/rules.lib.GNU:

          Fixed shared lib making rule.  Remove shr.o after building the lib
          to make sure subsequent builds are correct.

Wed Jun 20 17:31:32 2001  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/CDR_Base.cpp:
        * ace/CDR_Base.h:

          Added some stuff to help the higher layers deal with
          longlongs, without the guards for the platforms that
          don't have this native type. Expanded and exported the
          LongLong struct (added == and != operators). Defined the
          NONNATIVE_LONGLONG flag, if platform does not have a
          native longlong type. Added ACE_CDR_LONGLONG_INITIALIZER,
          to portably initialize a local longlong variable.

Wed Jun 20 10:42:02 2001  Frank Hunleth  <fhunleth@cs.wustl.edu>

        * bin/auto_run_tests.lst:

          Disabled the TAO/tests/Exposed_Policies test from being
          run under minimum builds, since it needs CORBA messaging
          and RTCORBA.

Wed Jun 20 09:17:46 2001  Balachandran Natarajan <bala@cs.wustl.edu>

        * tests/Max_Default_Port_Test.dsp (SOURCE): Fixed the release
          builds.

Wed Jun 20 08:47:46 2001  Chanaka Liyanaarachchi  <chanaka@ociweb.com>

        * tests/Max_Default_Port_Test.cpp:

          Replaced char * with ACE_TCHAR * in main function signature to
          make the test WChar friendly.

Wed Jun 20 08:05:19 2001  Chad Elliott  <elliott_c@ociweb.com>

        * bin/nightlybuilds/builds.lst:

          Added the AIX Visual Age C++ 5.0 nightly build.

Tue Jun 19 21:24:41 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/OS.i (mutex_lock): Fiddled around with the #else so that
          we'll avoid "statement not reached" warnings on KCC.  Thanks to
          J Shane Culpepper <pepper@channelogics.com> for reporting this.

Wed Jun 20 07:35:04 2001  Johnny Willemsen <jwillemsen@remedy.nl>

        * tests/Makefile.bor
          Added the new Max_Default_Port_Test

Tue Jun 19 16:01:01 2001  Priyanka Gontla  <pgontla@ece.uci.edu>

        * include/makeinclude/platform_hpux_aCC.GNU (THR_DEFS):
          Suppressed error 908 complaining about use of 'export' which
          might be used as a C++ keyword in future by aCC compiler.

Tue Jun 19 16:20:52 2001  Sharath R. Cholleti  <sharath@cs.wustl.edu>

        * ace/CDR_Stream.cpp:

          Just fixing a typo. Removed ACE_INLINE from skip_wchar ().

Tue Jun 19 16:08:34 2001  Sharath R. Cholleti  <sharath@cs.wustl.edu>

        * ace/CDR_Stream.{i,cpp}:

          Fixed the skip_wchar() according to the changes in WChar
          implementation of GIOP 1.2. Thanks to
          Peter Phillips  <pphillip@opentext.com> for reporting the problem
          the fix.  This fixes BUGID 945.

Tue Jun 19 08:13:52 2001  Chanaka Liyanaarachchi  <chanaka@ociweb.com>

        * tests/Max_Default_Port_Test.cpp:
        * tests/Max_Default_Port_Test.h:
        * tests/Max_Default_Port_Test.dsp:

          Added a test to verify if ACE_MAX_DEFAULT_PORT value is
          set correctly.

        * tests/Makefile:
        * tests/tests.dsw:

          Added Max_Default_Port_Test.

        * tests/run_test.lst:
        * tests/run_tests.bat:

          Added Max_Default_Port_Test.

Tue Jun 19 08:03:38 2001  Chanaka Liyanaarachchi  <chanaka@ociweb.com>

        * ace/OS.h:

         Changed the value of ACE_MAX_DEFAULT_PORT to 65535. This had
         been set to 0 (zero) previously to avoid a problem on NT4.0 SP3.
         The problem was that beyond ports 65279, a bind call would
         succeed but the handle returned would be junk. This problem does
         not seem to exist on NT4.0 SP6, and Windows 2000.

Tue Jun 19 07:20:56 2001  Chad Elliott  <elliott_c@ociweb.com>

        * ace/INET_Addr.cpp:

          Set the inet_addr_.sin_family to AF_INET when the ACE_Addr type is
          set to AF_INET.

Mon Jun 18 21:33:54 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/auto_run_tests.lst: Added the Big_Reply tests to the nightly
          builds.

Mon Jun 18 16:20:51 2001  Steve Huston  <shuston@riverace.com>

        * tests/Thread_Manager_Test.cpp: Added a new function,
          test_task_record_keeping(), that tests task-related record
          keeping in the ACE_Thread_Manager. Motivated by a report of
          ACE_Thread_Manager::task_all_list() not working correctly.

Mon Jun 18 15:29:38 2001  Steve Huston  <shuston@riverace.com>

        * ace/ace.icc: Replace Obstack.cpp with Obchunk.cpp; added
          Obchunk.h

        * ace/Thread_Manager.cpp (task_all_list): Don't put duplicate
          ACE_Task_Base pointers in the returned list.

        * ace/Malloc_T.cpp (ACE_Malloc<>::ACE_Malloc (3 args): Add \n
          to the failure ACE_ERROR statement.

        * tests/Refcounted_Auto_Ptr_Test.cpp: Print the instance count
          of the refcounted variable before asserting on it in order to
          leave interesting info in the log if it bombs.

Mon Jun 18 10:06:37 2001  Chris Cleeland  <cleeland_c@ociweb.com>

        * etc/tao_ssliop.doxygen: New configuration file for
        SSLIOP-related files.

        * bin/generate_doxygen.pl: Added new SSLIOP configuration file to
        the list of things to be documented for TAO.

Sun Jun 17 21:26:27 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Message_Block.i: Fixed Fuzz errors.

Sat Jun 17 17:33:36 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/CDR_Base.cpp (grow): Cleared the DONT_DELETE flag of the
          message block whose data block is expanded.

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.cpp: Added a new method clone_from () in the
          ACE_InputCDR class. This method is used in the bug #575 fix.

Sun Jun 17 17:11:36 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * ace/Timer_Queue_Adapters.cpp (schedule):

          Fixed a warning by reorganizing return statement.

Sat Jun 16 15:21:36 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/CDR_Stream.cpp: Fixed some stupid typos.

Sat Jun 16 10:36:58 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Message_Block.h:
        * ace/Message_Block.cpp:
        * ace/Message_Block.i:  This set of changes are to get around one
          of the problems that we have with the message blocks. For some
          reason the message blocks assume that the underlying data blocks
          are always allocated of the heap. If we try to construct a
          message block using a data block on the stack, the message
          blocks tries to delete that data block which gives problems. We
          have now added a flag in the class that indicates whether the
          data_block can be deleted or not. An extra flag argument has
          been added to the constructor that constructs a message block
          from a data block. The default value is from the heap. Added
          more methods to the ACE_Message_Block to query and change the
          flag values.

        * ace/CDR_Stream.cpp:
        * ace/CDR_Stream.h: Added an extra flag argument to the
          constructors which constructs a InputCDR stream from a
          ACE_Data_Block.

Sat Jun 16 00:09:14 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * bin/nightlybuilds/builds.lst (WEB):

          Added IA-64 to the nightly builds. The tests are disabled for
          now. They will be enabled after TAO 1.2 is released.

Fri Jun 15 20:46:01 2001  Sharath R. Cholleti  <sharath@cs.wustl.edu>

        * ace/CDR_Stream.{cpp,h,i}:

          WChar implementation of GIOP 1.2. Made changes in some of the
          ACE_InputCDR constructors, exchange_data_blocks () and steal_from ().

Fri Jun 15 20:18:07 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * ace/Active_Map_Manager_T.i:
        * ace/Map_Manager.cpp:
        * ace/Map_Manager.h:
        * ace/Map_Manager.i:

          Fixed a bug in the Active_Map_Manager caused due to size_t being of
          different size under 32-bit platforms versus 64-bit platforms.
          The bug was triggered under Tru64. This has resulted in changing
          the implementation to use ACE_UINT32 throughout while
          maintaining a backward-compatible interface.

          Many thanks to Irfan for his help in finding a solution.

Fri Jun 15 17:40:51 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * examples/Shared_Malloc/Malloc.cpp:

          Removed need for explicit instantiation of symbols when the
          compiler supports template specialization for the
          Single-threaded case.

        * examples/IPC_SAP/SOCK_SAP/CPP-inserver.cpp:
        * examples/IPC_SAP/SOCK_SAP/CPP-unserver.cpp:

          Removed warning about conversion from pointer to integer of
          different size on IA-64.

Thu Jun 14 16:20:57 2001  Frank Hunleth  <fhunleth@cs.wustl.edu>

        * ace/Stats.cpp:

          Changed formula to convert ticks to seconds to use
          ACE_HR_SCALE_CONVERSION to account for the fact that
          Win32 has different scale factor units than every
          other platform.

Thu Jun 14 16:21:35 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * ace/config-all.h (ACE_UNUSED_ARG):

          Changed the way we define ACE_UNUSED_ARG to be more compatible
          with picky compilers.

Thu Jun 14 16:10:54 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * ace/Makefile:
        * ace/RMCast/Makefile:

          Updated the dependencies as they seem to have gone out of sync.

Thu Jun 14 15:42:57 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Obstack_T.cpp (release): Forgot to reset the <block_> in
          Obchunk.

Thu Jun 14 14:35:09 2001  Frank Hunleth  <fhunleth@cs.wustl.edu>

        * bin/msvc_auto_compile.pl:

          Added Strategies, RTCORBA, and RTPortableServer to the core build
          list so that they get built before the tests that use them on
          the Win32 static builds.

Thu Jun 14 08:24:03 2001  Christopher Kohlhoff  <chris@kohlhoff.com>

        * ace/Makefile.bor:
          Added missing source file Obchunk.cpp.

Thu Jun 14 03:10:11 2001  Krishnakumar B <kitty@danzon.cs.wustl.edu>

        * tests/TSS_Test.cpp:

          Fixed a error in the compile caused due to ACE_reinterpret_cast
          applied to a const int.

Wed Jun 13 21:50:01 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Obstack_T.cpp (ACE_Obstack_T): Fixed a mismatched ACE_TRACE
          fuzz warning.

Wed Jun 13 14:10:17 2001  Ossama Othman  <ossama@uci.edu>

        * ace/SSL/SSL_Context.cpp:
        * ace/SSL/SSL_SOCK_Acceptor.cpp:

          Explicitly include "ace/Log_Msg.h" to pull in ACE_DEBUG/ERROR
          macro definitions.  This fixes a compile-time problem on
          SunWorkshop 3.0 builds.  Thanks to Andrew Finnell
          <Andrew.Finnell@esecurityinc.com> for reporting this problem and
          suggesting the fix.

Wed Jun 13 15:43:43 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Obchunk.cpp: Fixed include filename capitalization.

Wed Jun 13 11:31:27 2001  Ossama Othman  <ossama@uci.edu>

        * ace/Makefile.am:

          Synchronized the source lists with those in the stock ACE
          Makefile.

Wed Jun 13 14:18:22 2001  Steve Huston  <shuston@riverace.com>

        * ACE-INSTALL.html: Modified the platforms/compilers section to
          reflect the new roles of DOC, Riverace, OCI. Fixed up the
          Solaris section a bit.

Wed Jun 13 11:08:26 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/Thread_Pool_Test.cpp: Casted message block pointers to
          ACE_TCHAR* to compile with UNICODE on.

Wed Jun 13 10:22:10 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Svc_Conf_l.cpp: Need to read the sizeof (ACE_TCHAR) of bytes
          to handle UNICODE svc.conf correctly.

        * ace/Svc_Conf.h: Changed the macro ACE_YY_INPUT to handle
          ACE_TCHAR instead of char.  Thanks to Allen Kelly
          <akelly@postx.com> for sending the patches.

        * ace/Obstack_T.{h,i,cpp}: Templatized ACE_Obstack on the char
          type it handles.

        * ace/Obchunk.{h,i,cpp}: New files containing the non-template
          class ACE_Obchunk.

        * ace/Obstack.{h,cpp}: All the class definitions were moved to
          Obchunk.* and Obstack_T.*.  These files typedef'ed
          ACE_Obstack_T<char> to ACE_Obstack for backward compatibility.

        * ace/Obstack.i: Removed file.

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:
        * ace/Makefile: Added Obchunk and Obstack_T.

        * ace/Service_Config.cpp:
        * ace/Svc_Conf_y.cpp:
        * ace/Svc_Conf.h: Changed ACE_Obstack to ACE_Obstack_T<ACE_TCHAR>
          to handle UNICODE files when needed.

        * ace/Configuration.cpp (set_string_value): When storing wchar
          strings, the datasize passed to RegSetValueEx is the total size
          in bytes, not the string length.

Wed Jun 13 08:42:31 2001  Christopher Kohlhoff  <chris@kohlhoff.com>

        * include/makeinclude/ace_flags.bor:
          Added support for new RTCORBA libraries.

        * include/makeinclude/build_lib.bor:
          Suppress noisy warnings when creating a static library.

        * tests/Makefile.bor:
          Added Thread_Pool_Reactor_Resume_Test.

Tue Jun 12 21:22:19 2001  Ossama Othman  <ossama@uci.edu>

        * bin/nightlybuilds/builds.lst:

          Added the new gcc 3.0 build to nightly build list.

Tue Jun 12 23:06:36 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * examples/ASX/Event_Server/Event_Server/Options.cpp:
        * examples/ASX/Event_Server/Event_Server/Options.cpp:
        * examples/ASX/Message_Queue/buffer_stream.cpp:
        * examples/ASX/UPIPE_Event_Server/Options.cpp:
        * examples/IPC_SAP/SOCK_SAP/CPP-inclient.cpp:
        * examples/IPC_SAP/SOCK_SAP/CPP-inserver.cpp:
        * examples/IPC_SAP/SOCK_SAP/CPP-unserver.cpp:
        * examples/Service_Configurator/IPC-tests/server/Handle_Timeout.i:
        * examples/Shared_Malloc/test_malloc.cpp:
        * examples/Shared_Malloc/test_position_independent_malloc.cpp:
        * examples/Threads/thread_manager.cpp:
        * examples/Threads/thread_specific.cpp:

          Fixes for warnings under IA-64 Linux. This involves using the
          new ACE_[S]SIZE_T_FORMAT_SPECIFIER and appropriate uses of
          ACE_reinterpret_cast. This completes the fixes needed to compile
          ACE and TAO on IA-64 Linux (as of today). Now the tests remain
          examples/examples/to be fixed.


Tue Jun 12 18:53:25 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * ace/config-linux-common.h:

          Added new printf specifier ACE_SIZE_T_FORMAT_SPECIFIER,
          ACE_SSIZE_T_FORMAT_SPECIFIER for use with types size_t and
          ssize_t.

        * ace/Basic_Types.h:

          1. Changed default base address on IA-64 to be 64-bit little endian.
          2. Added default values for ACE_SIZE_T_FORMAT_SPECIFIER,
             ACE_SIZE_T_FORMAT_SPECIFIER.
          3. Changed size of LONG_DOUBLE for IA-64.

        * ace/Configuration.cpp:
        * ace/Naming_Context.cpp:
        * ace/Task.cpp:

          Added a reinterpret_cast to silence gcc.

        * tests/MEM_Stream_Test.cpp:
        * tests/MT_Reactor_Timer_Test.cpp:
        * tests/Message_Block_Test.cpp:
        * tests/TSS_Test.cpp:
        * tests/Thread_Manager_Test.cpp:
        * tests/Thread_Pool_Test.cpp:

          1. Fixed usage of ACE_DEBUG with types size_t and ssize_t.
          2. Added ACE_reinterpret_cast to silence warnings about
             conversion from integer to pointer of different size.

        ACE runs on Intel IA-64/Linux.

Tue Jun 12 15:06:06 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * tests/run_test.lst:

          Thread_Pool_Reactor_Resume_Test should not run on Single
          threaded configurations.

Tue Jun 12 11:07:18 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Synch_T.{h,i}: Added "const" to the locked() method.

Mon Jun 11 21:06:43 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * tests/SOCK_Connector_Test.cpp (find_another_host): Pre-increment,
          rather than post-increment, the candidate_count loop counter to
          avoid "off-by-one" errors.  Thanks to Scott Snyder
          <snyder@fnal.gov> for reporting this.

        * ace/OS.h: Added some default values of 0 to the wr_fds and
          ex_fds parameters to ACE_OS::select().  This helps simplify for
          the "common case" and is consistent with what we show in our book ;-).

        * ace/OS.i (read): Fixed a nasty bug where "count = len" should
          have been "count == len" in the PSOS arm of the code.  Thanks to
          James Maynard <James.Maynard@ot.com.au> for reporting this.

Thu Jun  7 19:26:05 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Auto_Ptr.cpp: Instantiate the "alloc" template typedef explicitly.
          Thanks to Cristian Ferretti <cristian_ferretti@yahoo.com> for
          pointing this out.

        * examples/Timer_Queue/Thread_Timer_Queue_Test.{h,cpp}: Removed
          the unused cancelled() method.  Thanks to Ron Heald
          <rheald@nrao.edu> for reporting this.

        * include/makeinclude/platform_irix6.x_sgic++.GNU,
        * include/makeinclude/platform_osf1_4.0.GNU,
        * ace/config-irix6.x-sgic++.h,
        * ace/config-osf1-4.0.h,
        * ace/Log_Msg.cpp: Added support for threads=0 on Tru64.  Thanks
          to Steve Vranyes <steve.vranyes@veritas.com> for contributing
          these fixes.

        * ace/Timer_Wheel_T.cpp (expire): earliest_pos_ was never set in
          the expire() method, and maintains its value until another timer
          event is scheduled/cancelled/etc.  Thanks to Gil Rapaport
          <grapaport@comgates.co.il> for fixing this.

Mon Jun  4 14:33:08 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Synch.h: Clarified that ACE_Event only supports "global naming"
          on Win32.  Thanks to Jerry Thomas <jto@consegna.co.uk> for reporting
          this.

Mon Jun 11 16:53:55 2001  Balachandran  <bala@cs.wustl.edu>

        * ACE version 5.1.17 released.

Mon Jun 11 13:08:00 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * include/makeinclude/platform_tru64_kcc.GNU: Fixed a spurious
          newline in the file. Thanks to Scott Snyder <snyder@fnal.gov>
          for reporting this.

Sun Jun 10 16:03:19 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/run_test.lst: Time_Service_Test will not run in static
          configurations. It looks for ACE_DLL's.

Sun Jun 10 06:56:45 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/auto_run_tests.lst: Removed a few AVStreams tests from the
          nightly builds. They seem to be crashing with a SEGV.

Sat Jun 09 17:03:37 2001  Ossama Othman  <ossama@uci.edu>

        * ace/Acceptor.cpp (open):

          Fixed problem where the handle of an uninitialized peer acceptor
          was set into non-blocking mode, resulting in a failed ioctl()
          call.  The acceptor member in the "accept strategy" should be
          used instead, since it was the one that was just opened.

Sat Jun 09 10:07:06 2001  Ossama Othman  <ossama@uci.edu>

        * ace/SSL/SSL_SOCK_Stream.i (recv_i):

          Moved call to SSL_peek() within the do/while(SSL_pending())
          loop.  A full record must be read before returning to an event
          loop (e.g. in a Reactor).

          If a SSL_ERROR_SYSCALL error occurs, only interpret it as an
          error if an EOF did not occur.  Thanks to Boris Temkin
          <borist@allcharge.com> for providing an example that
          demonstrated the problem.

          (send_i):

          Shutdown the SSL session if an SSL_ERROR_ZERO_RETURN error
          occurs.

Sat Jun  9 07:16:12 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/QoS/QoS_Session_Impl.cpp:
          Do not hard code the max sdu size.  This should be a
          configurable parameter through the ACE_Flow_Spec::max_sdu_size.

          This change was made by Craig Rodrigues
          <crodrigu@bbn.com>. Just checking in the changes for him.

Fri Jun 08 08:17:15 2001  Ossama Othman  <ossama@uci.edu>

        * ace/SSL/SSL_SOCK_Stream.i (send_i, recv_i):

          Fixed "fuzz" errors.

Fri Jun 08 07:33:03 2001  Ossama Othman  <ossama@uci.edu>

        * ace/SSL/SSL_SOCK_Stream.cpp (send):

          Fixed an "unused argument" warning.

Fri Jun 08 07:01:59 2001  Ossama Othman  <ossama@uci.edu>

        * ace/SSL/SSL_Accept_Handler.h:
        * ace/SSL/SSL_Accept_Handler.cpp:
        * ace/SSL/SSL_Connect_Handler.h:
        * ace/SSL/SSL_Connect_Handler.cpp:

          New event handlers that are designed to complete non-blocking
          SSL passive (accepts) and active connections (connects).  They
          are registered with the Reactor (either the singleton Reactor or
          a user-supplied one) after the TCP 3-way handshake is
          completed.  Once registered, the Reactor does its voodoo and
          invokes the appropriate event handler.

          This fixes several inter-related problems:
            (1) the ACE_SSL wrappers now work with the
                ACE_WFMO_Reactor,   [Bug 614]
            (2) non-blocking SSL accepts/connects and finally work,
            (3) fixes a CORBA::TRANSIENT exception in TAO's SSLIOP
                pluggable protocol that occured when the client attempted
                to connect to the server.

          Thanks to Andrew Finnell <Andrew.Finnell@esecurityinc.com> for
          suggesting that an event loop was necessary to complete the SSL
          connection after 3-way handshake was necessary, and for
          persisting in his effort to hammer that point into me.  :-)

        * ace/SSL/SSL_SOCK_Stream.h (send_i, recv_i):

          New low-level helper methods that refactor the common underlying
          SSL IO calls.

        * ace/SSL/SSL_SOCK_Stream.i (send):

          Fixed problem where one of the low-level send() methods returned
          zero instead of the number of bytes sent.  Thanks to Boris
          Temkin <borist@allcharge.com> and Dan Levi <DanL@webmap.com> for
          reporting the problem.

          (send_i, recv_i):

          Refactored code common to all send()/recv() methods.  Thanks to
          Boris for suggesting this.  This will help prevent problems such
          as the one that was described above from happening again since
          there is no code duplication.

        * ace/SSL/SSL_SOCK_Stream.cpp (sendv_n, recv_n):

          Greatly improved the speed of these methods by removing all
          allocations and copies.  The allocations and copies were
          unnecessary.  These methods are now zero-copy implementations.

          (send):

          Don't bother attempting to implement this method using a scatter
          write (sendv).  The SSL_SOCK_Stream scatter write implementation
          simply emulates this functionality.  That emulation does not
          work well when using non-blocking IO.  Instead, just use
          send_n().

          Added missing "va_end()."

        * ace/SSL/SSL_SOCK_Acceptor.h (reactor):
        * ace/SSL/SSL_SOCK_Acceptor.i (reactor):
        * ace/SSL/SSL_SOCK_Connector.h (reactor):
        * ace/SSL/SSL_SOCK_Connector.i (reactor):

          New methods to set and get the Reactor to use when completing
          non-blocking SSL passive/active connections.

        * ace/SSL_SOCK_Acceptor.cpp (ssl_accept):
        * ace/SSL_SOCK_Connector.cpp (ssl_connect):

          Added new overload methods that accept a timeout value.  These
          new methods will register the event handlers described above in
          order to complete a non-blocking SSL connection.

          (shared_connect_start, shared_connect_finish):

          Removed these unused methods.

          (connect):

          Actually do a non-blocking SSL connect if the timeout value is
          non-zero.  This code was previously broken.  Even though the
          underlying TCP connect was non-blocking, the SSL connect was
          always blocking.

        * THANKS:

          Added Andrew Finnell and Dan Levi to the "Hall of Fame."  Boris
          Temkin (see above) was already on it.  :-)

Fri Jun 08 07:52:48 2001  Joe Hoffert <joeh@cs.wustl.edu>

        * Makefile: Removed PACE from the list of directories.
          (There are problems on FreeBSD.)  Thanks to cuma
          <cuma@dslab.csie.ncu.edu.tw> for reporting this.

Wed Jun 06 10:16:39 2001  Steve Huston  <shuston@riverace.com>

        * ace/config-hpux-11.00.h: Fixed the settings for ACE_MALLOC_*
          and ACE_PI_MALLOC_* so that both the malloc header and the
          control block are multiples of 8 bytes (required alignment for
          larger datatypes, i.e double). Malloc_Test now runs clean.

Wed Jun  6 07:04:57 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/auto_run_tests.lst: Removed all the AVStream tests from the
          daily builds. Looks like they are not getting fixed.

Mon Jun  4 05:53:57 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/File_Lock: Added an "unlink_in_destructor" flag to
          ACE_File_Lock to control whether or not the underlying file is
          unlinked in the destructor.  Thanks to Yuval Yosef
          <yuvi@isdn.net.il> and Crawford Lodge
          <crawford.lodge@xmlglobal.com> for suggesting this.

Sun Jun  3 18:08:39 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Configuration_Import_Export.cpp,
        * ace/Configuration.cpp: Added ACE_ASSERTS to make sure that
          open() is called...  Thanks to Jerry Odenwelder
          <jerry.o@mindspring.com> for fixing this.

Sat Jun  2 13:05:20 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Connector.cpp: Removed the ACE_Errno_Guard from the
          create_AST() method and instead have the connect_i() method
          check to see if create_AST() succeeded and explicitly set errno
          = EWOULDBLOCK in this case.  Thanks to Boris Temkin
          <borist@allcharge.com> for motivating this change.

        * ace/Timer_Wheel_T.cpp: Since we removed the call to
          is_empty() from earliest_time() we need to modify the code in
          reschedule() to test for is_empty.

        * tests/Cached_Accept_Conn_Test.cpp (accept_svc_handler): Use the
          ACE_Accept_Strategy::acceptor() accessor method rather than
          accessing the acceptor_ directly.

        * TAO/rules.tao.GNU (TAO_IDL_DEP),
        * include/makeinclude/rules.local.GNU: Added support for the new EXEEXT
          Makefile macro.  Thanks to Cristian Ferretti
          <cristian_ferretti@yahoo.com> for pointing this out.

        * include/makeinclude/platform_gnuwin32_common.GNU: Added a number of
          fixes for the mingw platform.  Thanks to Cristian Ferretti
          <cristian_ferretti@yahoo.com> for pointing this out.

        * ace/Configuration.{h,cpp}: "Un-inlined" the == and != operators for
          the ACE_Configuration_Win32Registry class.

        * ace/Configuration.cpp (get_binary_value): Changed the type of "data"
          from "unsigned char" to "BYTE".  Thanks to Cristian Ferretti
          <cristian_ferretti@yahoo.com> for pointing this out.

        * ace/config-win32-mingw.h: Removed the #define ACE_AS_STATIC_LIBS
          macro.  Thanks to Cristian Ferretti
          <cristian_ferretti@yahoo.com> for pointing this out.

        * ace/config-win32-common.h: Protect certain DLL export macros with
          #if !defined (__MINGW32__).  Thanks to Cristian Ferretti
          <cristian_ferretti@yahoo.com> for pointing this out.

        * ace/ACE.cpp (handle_timed_complete): Added an ACE_UNUSED_ARG
          for the is_tli flag for ACE_WIN32 to keep the compiler happy.
          Thanks to Cristian Ferretti <cristian_ferretti@yahoo.com> for
          pointing this out.

        * ace/Acceptor.cpp: Fixed the comment and logic in
          accept_svc_handler() so that it now cleans up the svc handler
          whenever accept() returns -1.  Thanks to Boris Temkin
          <borist@allcharge.com> for suggesting this and to Irfan for
          helping clarify what needed to be done.

        * ace/Strategies_T.cpp:   When the number of clients
          connecting to a server exceeds the process handle limit the
          server would busy loop.  The ACE_Accept_Strategy
          accept_svc_handler() method is called which (1) constructs a
          handler and (2) attempts to accept the connection, which fails
          (because there is no available handle).  The handler is
          destructed, but the connect request is still queued and so the
          acceptor gets called back again.... and so on until one of the
          client which is already connected disconnects and frees up a
          descriptor.  Changed the accept_svc_handler() method in
          ACE_Accept_Strategy to close and reopen the connection when
          accept() fails.  A check is done to make sure address reuse is
          set. So this fix will only work in case where it is set.  Thanks
          to Dominic Hughes <dominic@aersoft.ie> for this fix and to Irfan
          for recognizing that it ought to be added to ACE_Accpt_Strategy.

        * ace/Strategies_T.cpp (open): Fixed the strategy acceptor so that it
          uses non-blocking semantics to handle certain failure cases
          correctly.  This is a safe-guard against the race condition that
          can otherwise occur between the time when <select> indicates
          that a passive-mode socket handle is "ready" and when we call
          <accept>.  During this interval, the client can shutdown the
          connection, in which case, the <accept> call can hang!  Thanks
          to Irfan for pointing this out.

Fri Jun  1 13:04:31 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Makefile:
          Removed the moc compiler path definition from ace/Makefile
          since it is now in include/makeinclude/wrapper_macros.GNU
          Thanks to Hans Utz <hans.utz@informatik.uni-ulm.de> for
          reporting this.

        * include/makeinclude/wrapper_macros.GNU (YACC): Added the moc
          compiler path definition to include/makeinclude/wrapper_macros.GNU
          Thanks to Hans Utz <hans.utz@informatik.uni-ulm.de> for
          reporting this.

        * ace/Timer_Wheel_T.cpp: Removed check to see if Timer_Wheel was
          empty from earliest_time().

        * ace/Timer_List_T.h,
        * ace/Timer_Hash_T.h,
        * ace/Timer_Heap_T.h,
        * ace/Timer_Queue_T.h,
        * ace/Timer_Wheel_T.h:
          Added a comment to point out that earliest_time() can only be
          called on a non-empty queue.  Thanks to Gil Rapaport
          <grapaport@comgates.co.il> for reporting this.

Tue May 29 17:38:15 2001  Douglas C. Schmidt  <schmidt@lambada.cs.wustl.edu>

        * ace/OS.h: Moved the VMIN and VMAX macros to the right place.
          Thanks to Hans Utz <hans.utz@informatik.uni-ulm.de> for
          reporting this.

Fri Jun  1 16:11:42 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Acceptor.cpp (open): Enabled the socket to be non-blocking
          mode in the ACE_Strategy_Acceptor::open () call. Thanks to Singh
          Kirat <kirat.singh@gs.com>, for reporting this through a problem
          in TAO.

Thu May 31 17:29:33 2001  Ossama Othman  <ossama@uci.edu>

        * tests/Refcounted_Auto_Ptr_Test.cpp:

          Removed duplicate template instantiation.  Fixes a build error.

Thu May 31 15:25:19 2001  Steve Huston  <shuston@riverace.com>

        * ace/Refcounted_Auto_Ptr.i (ACE_Refcounted_Auto_Ptr_Rep::detach):
          If the object needs to be deleted, release the guard first to
          avoid later unlocking a lock residing in memory that had been
          freed and potentially reallocated. Thanks to Steve Witten
          <steve_witten@hp.com> for noticing this bug, and Purify for making
          it relatively easy to track down.

        * tests/Refcounted_Auto_Ptr_Test.cpp: Rearranged to verify things
          which should happen, and improve the logging and thread rundown
          sequence.

        * THANKS: Added Steve Witten to the Hall of Fame.

        * ACE-INSTALL.html: Fixed the section about how to build on AIX
          to account for the new ace.icc file, and Visual Age C++ 5.

Thu May 31 08:59:00 2001  Craig Rodrigues <crodrigu@bbn.com>

        * ace/config-g++-common.h:

          Only define ACE_LACKS_AUTO_PTR for gcc versions <= 2.91

Wed May 30 23:54:27 2001  Yamuna Krishnamurthy  <yamuna@cs.wustl.edu>

        * ace/QoS/SOCK_Dgram_Mcast_QoS.cpp:

          Fixed the subscribe method so things worked even when no qos
          was specified.

Wed May 30 11:13:16 2001  Ossama Othman  <ossama@uci.edu>

        * ace/Singleton.cpp (instance):

          Integrated David's suggested changes that deal with potential
          problems related to registering Singletons in the presence of
          multiple ACE_Object_Manager instances.

Wed May 30 00:37:57 2001  Ossama Othman  <ossama@uci.edu>

        * ace/Singleton.cpp (instance):

          Fixed memory leak that occured due to the singleton instance not
          being registered with the ACE_Object_Manager when built without
          thread support.  Thanks to Kitty and David for helping with
          this problem.

Tue May 29 15:06:48 2001  Ossama Othman  <ossama@uci.edu>

        * include/makeinclude/platform_linux.GNU (CFLAGS, CPPFLAGS):

          Do not set preprocessor flags in the "CFLAGS" variable.  They
          should instead be set in the CPPFLAGS variable.  The
          preprocessor need not be the same as the compiler!

Mon May 28 18:11:20 2001  Douglas C. Schmidt  <schmidt@enz.cs.wustl.edu>

        * ace/OS.i (mutex_init): Using pthreads and passing attributes
          into mutex_init(), the function will always fail because the
          local variable result is initialized to -1 and then tested
          against 0.  Thanks to Brodie Thiesfield
          <brodie.thiesfield@activesky.com> for this fix.

Tue May 29 13:08:33 2001  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/Process.i (handle_inheritence):
        * ace/Process.h:

        Exposed the interface for handle_inheritence to non-win32 builds to
        allow it to be used as part of the solution to bug 902. Since this is
        a win32 only feature, the method will invoke the NOTSUP macro to
        document its use, but failure is benign, returning 0. This is part 3
        of the 3 part solution to bug 902.

Mon May 28 18:43:51 2001  Steve Huston  <shuston@riverace.com>

        * tests/Thread_Pool_Reactor_Resume_Test.icc: Visual Age C++ config
          for this new test.

        * tests/tests.icp: Added Thread_Pool_Reactor_Resume_Test.icc.

        * include/makeinclude/platform_aix_ibm.GNU: Added $(ACELIB) to
          LIBS to get netsvcs stuff to build clean. Thanks to Erik
          Toubro Nielsen <enielsen@mdsproteomics.dk> for this fix.

        * THANKS: Added Erik Nielsen.

Mon May 28 14:44:29 2001  Steve Huston  <shuston@riverace.com>

        * ace/Timer_Heap_T.{h cpp}: Add new member, cur_limbo_ to keep track
          of timer entries removed from the heap, but not reclaimed (caller
          must call either reschedule() or free_node() to finish up the
          work).

        * ace/Timer_Queue_T.cpp (expire): When expiring a ACE_Timer_Node,
          either reschedule it or free it prior to doing the upcall.
          This necessitates having a copy of the TYPE element, not a
          reference. In the vast majority of cases, this is an
          ACE_Event_Handler pointer, and should make no difference in
          performance.

Sat May 27 10:40:27 2001  Yamuna Krishnamurthy  <yamuna@cs.wustl.edu>

        * ace/QoS/QoS_Session_Impl.cpp:

          Added an adhoc fix for propagating the right service type when
          a PATH message is received.

Sat May 26 16:36:27 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * bin/auto_run_tests.lst:

          Switched off TAO/examples/PluggableUDP/tests/Basic/run_test.pl
          from the Single Threaded builds. Added
          TAO/examples/PluggableUDP/tests/SimplePerformance/run_test.pl
          instead to run on all the builds.

Fri May 25 20:51:33 2001  Christopher Kohlhoff  <chris@kohlhoff.com>

        * netsvcs/build.bor:
          Changed contents of file back to its original state.

Fri May 25 13:38:21 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Message_Block.h: Added a better explanation of what "crunch()"
          does. Thanks to Masaoud T. Moonim <masaoud@mailandnews.com> for
          motivating this.

Fri May 25 19:06:51 2001  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Map_T.i (create_key): Added a new method to the maps.  This
          method allows the user to create a key without binding to the
          map.  For the linear and hash maps, this call simply forwards to
          the key generators.  This method is not supported by the active
          map since the key encodes the slot position which cannot come
          without occupying a slot in the map.

Fri May 25 08:37:37 2001  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/Message_Block.cpp:

          Fixed an error in ACE_Data_Block::clone, where ACE_NEW_RETURN
          is used without a constructor as one of the arguments. Besides,
          it is a mistake to allocate, because the call to clone_nocopy
          has already done an allocation. All we need to do is check for
          a 0 return from clone_nocopy.

Fri May 25 05:42:39 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Message_Block.cpp (clone): Make sure to check for memory failure
          and return 0 in this case.  Thanks to Airat A. Sadreev
          <airat@hq.tatenergo.ru> for reporting this.

Thu May 24 22:06:45 2001  Sharath R. Cholleti  <sharath@cs.wustl.edu>

        * tests/CDR_Test.cpp: Changed the initialization of WChar variable, to
          remove the warning "integer conversion resulted in a change of sign"
          by some compilers.

Thu May 24 20:26:39 2001  Steve Huston  <shuston@riverace.com>

        * ace/Timer_Heap_T.{h cpp}: Fixed some problems in managing the
          free timer ID list.

        * ace/Timer_Hash_T.cpp (expire): Changed this to peek at the first
          timer node from each table, do reschedule iterative timers, and
          do the upcall, then _cancel_ the original, rather than try to
          manage a remove_first()/reschedule-or-free sequence. The ID
          assigned by the underlying table is not important, since its not
          seen by the ACE_Timer_Hash_T caller anyway, and that's the main
          impetus for using remove_first/reschedule (or free_node).

        * tests/Timer_Queue_Test.cpp (test_functionality): Added a test
          to verify empty timer queue after adding/removing two timers
          right at the start.

Thu May 24 12:15:35 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/OS.h: Added #defines for RTLD_LAZY, RTLD_NOW, RTLD_GLOBAL.
          Thanks to Kobi Cohen-Arazi <kobic@bvr.co.il> for suggesting
          this.

        * ace/OS.h: Updated the ACE_Time_Value class to point out that the
          values are in secs and usecs.  Thanks to Israel Illescas Gomez
          <illescas@dycsa.es> for motivating this.

Thu May 24 18:08:27 2001  Steve Huston  <shuston@riverace.com>

        * tests/run_test.lst: Re-enable MT_Reactor_Timer_Test.

Thu May 24 15:34:48 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/IPC_SAP/SOCK_SAP/CPP-memclient.cpp: Changed <gets> to
          <fgets> to avoid warnings on some platforms.  <gets> is not safe
          to use.

Thu May 24 15:28:19 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * bin/auto_run_tests.lst:

        Removed this test from being run on single-threaded configurations
        since this test uses the ACE_Thread_Manager.

Thu May 24 15:12:16 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * ace/config-tru64.h:

        Added ACE_HAS_NONSTATIC_OBJECT_MANAGER to the default builds to
        work around hangs in some of the tests which load a dynamic
        library. This fixes some more of the problems reported in Bug Id
        912.

Thu May 24 13:42:24 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/nightlybuilds/builds.lst: We dont have Red Hat 7.0
          anymore. So changed it as Red Hat 7.1.

Thu May 24 10:51:45 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/Thread_Pool_Reactor_Resume_Test.dsp:
        * tests/tests.dsw: Files for Win32.

Thu May 24 10:35:45 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/Thread_Pool_Reactor_Resume_Test.cpp
        * tests/Thread_Pool_Reactor_Resume_Test.h: A new test that tests
          the resumption of handler at the application level. This test is
          an adaptation of the famous Thread_Pool_Reactor_Test.

        * tests/Makefile: Added the test for compilation.
        * tests/run_test.lst: Added the above test for the nightly
          builds.

Thu May 24 10:26:35 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tao/Event_Handler.cpp:
        * tao/Event_Handler.h: A starter for bug #575. Please see the
          documentation of bug 575 for details of this change. In short
          the Event Handler class has an extra method called
          resume_handler (). Applications that use the TP_Reactor and
          would like to take control of resuming the handler can overload
          this method in their implementation and return a value other
          than zero.

        * tao/TP_Reactor.cpp: Added a check by calling the resume_handler
          () on the event handler object before resuming the handler.

Wed May 23 16:35:15 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Sock_Connect.h,
        * ace/Flag_Manip.h,
        * ace/config-all.h: Make sure that all ACE include file have a
          "ace/" prefix.  Thanks to John Lindal <jafl@cco.caltech.edu> for
          reporting this.

        * ace/config-win32-common.h: Fixed a problem where FD_SETSIZE wasn't
          getting reset properly.  Thanks to Roger Tragin
          <rtragin@cuseeme.com> for reporting this.

Wed May 23 17:37:30 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * bin/auto_run_tests.lst:
        * tests/run_test.lst:

          Removed some tests from being run on Single Threaded
          Configuration as they were spawning threads. The tests removed
          are:

          TAO/performance-tests/AMI_Latency/run_test.pl
          TAO/tests/AMI_Timeouts/run_test.pl
          and
          tests/Logging_Strategy_Test

          This is related to Bug Id 912.

Wed May 23 17:33:59 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * bin/make_pretty.pl:

          Seems to have missed my previous update. Add the code to remove
          the bogus warning associated with SunCC5. Check the ChangeLog
          tag  Mon May 21 16:37:18 2001  Krishnakumar B
          <kitty@cs.wustl.edu> for more.

Wed May 23 18:22:41 2001  Steve Huston  <shuston@riverace.com>

        * ace/Reactor.cpp (run_reactor_event_loop (ACE_Time_Value&, eh)):
          It is possible for rounding/conversion fudges in calculating
          the WFMO/select wait time to cause the wait to time out, but the
          timer queue be not quite ready to expire the next timer. In this
          case, the ACE_Time_Value won't have been reduced to 0, so the
          handle_events call is repeated. Fixes Bugzilla # 153.

Wed May 23 15:55:21 2001  Steve Huston  <shuston@riverace.com>

        * ace/Containers_T.h: Fixed comment directing reader to include
          ace/Unbounded_Queue.h (rather than _Set.h) for ACE_Unbounded_Queue.

        * ace/Timer_Heap_T.{cpp h}: Changed the free IDs list from a stack
          to a round-robin list. Newly-allocated IDs keep increasing til
          there aren't any more, then wrap around to the lowest numbered
          free ID and start again. This is a ease-of-use improvement to
          help applications catch their timer-related errors easier,
          which is apparantly important, especially in multi-threaded
          applications.
          Also, when remove_first() is called, remove the ACE_Timer_Node
          from the heap, but do not release its ID back to the free list.
          remove_first() must be followed by a call to reschedule() or
          remove(). The latter just reinserts the timer node in the heap,
          and the latter cleans up the timer ID.

Wed May 23 14:41:00 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * netsvcs/ACE-netsvcs.html:
        * netsvcs/Makefile:
        * netsvcs/Makefile.am:
        * netsvcs/Makefile.bor:
        * netsvcs/README:
        * netsvcs/build.bor: Resurrected the files from the repo.

Wed May 23 11:13:00 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_run_tests.lst:
          Removed TAO/performance-tests/Latency from the nightly builds.
          This test has been superseeded by Single_Threaded_Latency and
          friends.  In fact it is no longer used to generate performance
          results.
          This is part of the fixes for [BUGID:324]

Tue May 23 11:53:24 2001  Paul Calabrese  <calabrese_p@ociweb.com>

        * docs/exceptions.html: Fix bad reference to OCI devguide:
          the link was broken and the chapter # was incorrect.

Wed May 23 8:23:20 2001  Yamuna Krishnamurthy  <yamuna@cs.wustl.edu>

        * ace/QoS/QoS_Session.h:
        * ace/QoS/QoS_Session_Impl.h:
        * ace/QoS/QoS_Session_Impl.cpp:

          Added a method to propagate the rsvp event type to the application.

Wed May 23 06:52:44 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/nightlybuilds/builds.lst: Moved the FORTE builds to ace.

Tue May 22 21:57:46 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/nightlybuilds/builds.lst: Added NO_AMI_MESSAGING to the
          builds.

Mon May 21 18:34:52 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * include/makeinclude/platform_linux.GNU: Added default macros for:

          PLATFORM_QT_LIBS
          PLATFORM_QT_LDFLAGS
          PLATFORM_QT_LDFLAGS

          Thanks to Hans Utz <hans.utz@informatik.uni-ulm.de> for
          contributing this.

        * performance-tests/Misc/Makefile (LDLIBS): Added back
          -lPerf.  Thanks to Hans Utz <hans.utz@informatik.uni-ulm.de> for
          reporting this.

Mon May 21 16:37:18 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * ace/OS.h:
        * ace/Timer_Queue_Adapters.cpp:
        * bin/make_pretty.pl:

        Changed the make_pretty script to remove the false warning on
        SunCC5. Added documentation in the affected files. This fixes
        Bug Id 879.

Sun May 20 08:48:59 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/nightlybuilds/builds.lst: Added FORTE 6.1 to the list.

Sun May 20 07:37:26 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/POSIX_Proactor.cpp: Fixed a compile error with g++.

Sun May 20 01:38:59 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-freebsd-pthread.h:
        * ace/POSIX_Proactor.cpp: Applied patches from Russell L. Carter
          <rcarter@pinyon.org> that introduce FreeBSD 4.3 to AIO
          (compiling at least).                        [Bug 917]

Sat May 19 10:28:56 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/make_pretty.pl: Ignore the mktemp () messages on Linux.

Fri May 18 20:58:59 2001  Ossama Othman  <ossama@uci.edu>

        * bin/auto_run_tests.lst:

          Added TAO's security tests to the list of tests to run in the
          nightly builds.  They will only be run on platforms that support
          the "SSL" build configuration.

Fri May 18 14:39:31 2001  Steve Huston  <shuston@riverace.com>

        * ace/config-aix-4.x.h: Removed ACE_LACKS_SETSCHED for AIX 4.3.
          Fixes Bugzilla # 47.

        * ace/OS.h: AIX's ACE_THR_PRI_*_{MIN MAX} values are 1 and 127,
          respectively. PRIORITY_{MIN MAX} are process priorities,
          and the range is not legal for pthread_attr_setschedparam.

        * ace/Makefile.vac:
        * tests/Makefile.vac: Use -sev=w instead of -severity=warning
          to avoid tripping the scoreboard error detector unnecessarily.

Fri May 18 10:50:55 2001  Jeff Parsons <parsons@cs.wustl.edu>

        * Configuration.cpp:

          Reverted a change made to the validate_name() function that
          added '/' as an illegal character. This breaks the Interface
          Repository completely.

Fri May 18 06:11:49 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/config-cxx-common.h: Changed
          #   if defined (DIGITAL_UNIX)  &&  DIGITAL_UNIX >= 0x40F
          to:
          #   if defined (DIGITAL_UNIX)  &&  DIGITAL_UNIX >= 0x40D
          This gets rid of a very annoying informational message.  Thanks
          to Steve Vranyes <steve.vranyes@veritas.com> for reporting this

        * ace/config-tru64.h: Changed 0x40E to 0x40D in the check for
          DIGITAL_UNIX to disable the use of systime.h.  Thanks to
          Steve Vranyes <steve.vranyes@veritas.com> for reporting this
          and for David Levine for suggesting the fix.

Thu May 17 23:36:18 2001  Ossama Othman  <ossama@uci.edu>

        * bin/auto_run_tests.lst:

          Added TAO's Request_Interceptor_Flow test to the list of tests
          to run in the nightly builds.

Fri May 18 01:31:47 2001  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Timeprobe.h: Reordered the include files: Timeprobe_T.h
          should come after Synch.h.  Thanks to Bruce McIntosh
          <Bruce.McIntosh@Australia.Boeing.com> for reporting this
          problem.

Fri May 18 00:36:35 2001  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Map_Manager.cpp (unbind_all): Added a new method that
          unbinds all entries in the map.  Also, refactored out some code
          into unbind_slot().

          BTW, this functionality is somewhat redundant since one can also
          do the following:

          // Unbind one at a time.
          MAP_MANAGER::iterator end = map.end ();
          while (1)
            {
                MAP_MANAGER::iterator iter = map.begin ();
                if (iter == end)
                  break;
                map.unbind ((*iter).ext_id_);
            }

          However, the following should be much faster:

          // Unbind in one swoop.
          map.unbind_all ();

          Another reason to add the unbind_all() is that the method is
          available on the other map_managers and that it is now easier to
          convert a hash map to a normal map and back without changing any
          real code.

        * tests/Map_Manager_Test.cpp (test_map_manager): Added test for
          unbind.

          Thanks to Johnny Willemsen <johnny.willemsen@meco.nl> for
          suggesting this.

Thu May 17 21:34:28 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/POSIX_Asynch_IO.cpp: Added an ACE_UNUSED_ARG to keep G++
          happy.

Thu May 17 16:52:17 2001  Priyanka Gontla  <pgontla@ece.uci.edu>

        * tests/CDR_File_Test.cpp (run_test):
          Modified ACE_OutputCDR instantiation to follow the new modified
          constructor.

Thu May 17 17:01:11 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/nightlybuilds/builds.lst: Re-enabled Core and Full builds on
          RedHat 7.1.

Thu May 17 14:36:57 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Asynch_IO.cpp
          ace/Asynch_IO.h
          ace/Asynch_IO_Impl.cpp
          ace/Asynch_IO_Impl.h
          ace/Asynch_IO_Impl.i
          ace/POSIX_Asynch_IO.cpp
          ace/POSIX_Asynch_IO.h
          ace/POSIX_Asynch_IO.i
          ace/POSIX_Proactor.cpp
          ace/POSIX_Proactor.h
          ace/POSIX_Proactor.i
          ace/Proactor.cpp
          ace/Proactor.h
          ace/Proactor_Impl.h
          ace/WIN32_Asynch_IO.cpp
          ace/WIN32_Asynch_IO.h
          ace/WIN32_Proactor.cpp
          ace/WIN32_Proactor.h: Added more fixes and improved comments
          from Roger Tragin <rtragin@cuseeme.com>.

        * ace/SString.cpp: Fixed a bug in the check_allocate() method.
          Thanks to Wayne Erchak <wayne@stentor.com> for reporting this.

Thu May 17 12:16:57 2001  Priyanka Gontla  <pgontla@ece.uci.edu>

        * ace/CDR_Stream.h (ACE_InputCDR):
        * ace/CDR_Stream.cpp:
          Modified so that even the Message_Block_Allocators are also
          allocated from TSS memory. The constructor of ACE_OutputCDR
          changes.

Thu May 17 11:51:03 2001  Carlos O'Ryan  <coryan@uci.edu>

        * include/makeinclude/rules.local.GNU:
          Removed misuse of CC_OUTPUT_FLAG in the middle of an 'if' shell
          statement.  Chances are that this was the result of a global
          search and replace.  Thanks to Cristian Ferretti
          <cristian_ferretti@yahoo.com> for pointing this out.

Thu May 17 12:43:26 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/nightlybuilds/builds.lst: Removed the beguine builds for
          some time till we get Redhat machine in place.

Thu May 17 11:36:02 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Configuration.cpp: Fixed an inconsistency in the
          enumerate_sections() method so that
          ACE_Configuration_Win32Registry and ACE_Configuration_Heap will
          behave the same.  ACE_Configuration_Win32Registry was returning
          -2 upon no more sections to enumerate, rather than 1.  This is
          because it is not checking for a return of ERROR_NO_MORE_ITEMS
          from ACE_TEXT_RegEnumKeyEx.  Thanks to Kevin Burge
          <kcburge@systemware-inc.com> for reporting this.

Thu May 17 10:46:31 2001  Chad Elliott  <elliott_c@ociweb.com>

        * bin/nightlybuilds/builds.lst:

          Adding the HP-UX 11.00 build back to the list.

Thu May 17 10:16:03 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/POSIX_Asynch_IO.{h,cpp}: There are some weird inconsistencies
          between the declaration and definition of the recv() methods in
          ACE_POSIX_SIG_Asynch_Read_Dgram and
          ACE_POSIX_AIOCB_Asynch_Read_Dgram.  I've made a fix that
          compiles, but we need feedback from Roger Tragin to really fix
          this...

Thu May 17 10:00:59 2001  Frank Hunleth  <fhunleth@cs.wustl.edu>

        * ace/Proactor_Impl.h:
          Added interfaces for create_asynch_read_dgram_result and
          create_asynch_write_dgram_result.

Thu May 17 06:23:59 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Proactor_Impl.h: Added two missing factory methods to
          ACE_Proactor_Impl.  Thanks to Bala for reporting this.

        * ace/WIN32_Proactor.h (ACE_WIN32_Proactor): The signal_number
          parameter was missing.  Thanks to Andy Gokhale for reporting this.

Thu May 17 06:23:59 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Asynch_IO.cpp
          ace/Asynch_IO.h
          ace/Asynch_IO_Impl.cpp
          ace/Asynch_IO_Impl.h
          ace/Asynch_IO_Impl.i
          ace/POSIX_Asynch_IO.cpp
          ace/POSIX_Asynch_IO.h
          ace/POSIX_Asynch_IO.i
          ace/POSIX_Proactor.cpp
          ace/POSIX_Proactor.h
          ace/POSIX_Proactor.i
          ace/Proactor.cpp
          ace/Proactor.h
          ace/WIN32_Asynch_IO.cpp
          ace/WIN32_Asynch_IO.h
          ace/WIN32_Proactor.cpp
          ace/WIN32_Proactor.h: Added Async IO support for UDP dgrams
          on NT so they can be used via the Proactor.  Thanks to
          Roger Tragin <rtragin@cuseeme.com> for contributing this.

Wed May 16 22:43:19 2001  Steve Huston  <shuston@riverace.com>

        * ace/Synch.i (ACE_Mutex::remove): Properly clean up the shared
          memory object and file backing for interprocess mutex.

        * tests/run_test.lst: Added Config_Test so run_test.pl runs it.

Wed May 16 18:30:42 2001  Steve Huston  <shuston@riverace.com>

        * tests/Config_Test.cpp: Added a test to verify the ability to set
          a new integer value.

Wed May 16 17:05:29 2001  Sharath R. Cholleti  <sharath@cs.wustl.edu>

        * ace/CDR_Stream.cpp:

          In ACE_OutputCDR::write_wchar(), casting int to ACE_CDR::Octet and
          passing the pointer to that to write_1() instead of casting the
          pointers - to avoid little Endian and big Endian issues. Thanks to
          Krishnakumar B  <kitty@cs.wustl.edu> in tracking this.

        * tests/CDR_Test.cpp:

          Added test for writing and reading ACE_CDR::WChar.

Wed May 16 14:51:37 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * tests/Config_Test.cpp: Updated this test to include Chris
          Hafey's improvements.

        * ace/Configuration.{h,cpp},
        * ace/Configuration_Import_Export.cpp: Added a number of fixes from
          Chris Hafey and Jonathan Reis that had been lost when Jerry
          Odenwelder added his changes.

Wed May 16 09:49:29 2001  Steve Huston  <shuston@riverace.com>

        * ace/ACE.cpp (handle_timed_complete): On Win32, interpret exception
          handle bit set as failure, regardless of what getsockopt says about
          an error. NT always reports 0 for error.

        * tests/SOCK_Connector_Test.cpp: Changed some LM_DEBUG to LM_ERROR and
          LM_WARNING to more easily interpret the log file.

Wed May 16 02:40:00 2001  Michael Kircher  <Michael.Kircher@mchp.siemens.de>

        * include/makeinclude/platform_vxworks5.x_g++.GNU:

          Added the PPC 403 CPU to the list of supported CPUs.

Tue May 15 20:37:31 2001  Steve Huston  <shuston@riverace.com>

        * ace/Process_Mutex.{h cpp inl}: (Follow up to Thu May 10 change
          later reverted on Mon May 14). Changed the preprocessor macros
          that select use of ACE_SV_Semaphore_Complex over ACE_Mutex
          as the underlying mechanism for ACE_Process_Mutex. If
          ACE_HAS_SYSV_IPC is set in config.h, ACE_SV_Semaphore_Complex
          is used, unless the new macro ACE_USES_MUTEX_FOR_PROCESS_MUTEX
          is also set. If ACE_HAS_SYSV_IPC is not enabled, ACE_Mutex
          is used, regardless of any other setting.
          Also, doxygen-ized the member function comments.

        * ace/Malloc.h: If ACE_Process_Mutex is to be used with
          ACE_HAS_MALLOC_STATS, include ace/Process_Mutex.h, not Synch_T.h.

        * tests/libDLL_Test.icc: Changed this to correctly generate shr.o,
          not libDLL_Test.o, for insertion into libDLL_Test.a. This lets
          it get picked up correctly from DLL_Test.

Tue May 15 18:00:49 2001  Steve Huston  <shuston@riverace.com>

        * ace/config-win32-common.h: Added support for a new config macro,
          ACE_NO_WIN32_LEAN_AND_MEAN. If this is set, WIN32_LEAN_AND_MEAN
          will not be defined before including windows.h. This is needed
          when code makes use of non-lean things like COM, which get
          included only when WIN32_LEAN_AND_MEAN is not defined.

        * ace/README: Added description of ACE_NO_WIN32_LEAN_AND_MEAN.

        * bin/make_pretty.pl (is_error): Don't report AIX's ld message to
          please check the -bloadmap as an error. It gets generated when
          there are multiple defines, which we filter out, so we don't
          want to see this follow-up message either.

Tue May 15 10:14:56 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/OS.i (mmap): Added an extra check for an empty
          string. Thanks to Edan Ayal <edana@bandwiz.com> for reporting
          this problem and suggesting an easy fix.

Mon May 14 22:38:06 2001  Balachandran  <bala@cs.wustl.edu>

        * ACE version 5.1.16 released.

Mon May 14 14:45:57 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/CDR_Stream.h (ACE_InputCDR): Somehow the removed
          steal_data () got back into the header file. Removed the
          method.

Mon May 14 11:02:20 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Strategies_T.i: Removed the ACE_ERROR statement from the
          destructor of ACE_Accept_Strategy. This created problems when
          the destructor was called during shutdown if the object was
          statically allocated. Thanks to Jonathan Reis <reis@stentor.com>
          for reporting this problem.

Mon May 14 07:48:16 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Process_Mutex.{h,cpp,inl}: Reverted the change "Thu May 10
          18:37:41 2001  Steve Huston  <shuston@riverace.com>". The change
          was breaking SHMIOP in TAO.

Fri May 11 10:25:00 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/OS_Dirent.h (ACE_OS_Dirent): Missed a conversion of "DIR" to
          "ACE_DIR".

        * ace/Synch.cpp (get_nesting_level): Added better protection for the
          case where ACE_HAS_RECURSIVE_MUTEXES -- only return
          RecursionCount if ACE_WIN32 is defined.  Thanks to Corey Trager
          <corey.trager@tradingtechnologies.com> for reporting this.

        * ace/OS.cpp: Reformatted all the ACE_reinterpret_cast() macros so their
          arguments are on the same line to avoid tickling a bug with
          SunC++'s preprocessor.  Thanks to Corey Trager
          <corey.trager@tradingtechnologies.com> for reporting this.

Fri May 11 07:14:50 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/CDR_Test.cpp: Reverted this change "Wed May  9 23:19:30
          2001  Sharath R. Cholleti "

Fri May 11 06:47:33 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/ARGV_Test.cpp: One of those extra ")".

Fri May 11 06:14:58 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Dirent.h (ACE_Dirent),
        * ace/OS.cpp (uname),
        * ace/OS.h (ACE_OS),
        * ace/OS.i (hostname),
        * ace/OS_Dirent.cpp (readdir_emulation),
        * ace/OS_Dirent.h (ACE_OS_Dirent),
        * ace/OS_Dirent.inl (ACE_OS_Dirent),
        * ace/config-win32-common.h (ACE_LACKS_STRUCT_DIR),
        * apps/Orbix-Examples/Event_Comm/Consumer/Notification_Receiver_Handler.cpp (Notification_Receiver_Handler),
        * apps/Orbix-Examples/Logger/Logger.cpp (Logger),
        * bin/envinfo.cpp (main),
        * examples/Reactor/Multicast/Log_Wrapper.cpp (open),
        * performance-tests/Misc/basic_perf.cpp (main),
        * tests/Dirent_Test.cpp (main),
        * tests/Enum_Interfaces_Test.cpp (main),
        * tests/SOCK_Connector_Test.cpp (find_another_host):
          Updated all of ACE and its tests to use ACE_DIR rather than DIR
          to avoid conflicts with other programs (like Perl) that also
          define an enumation with DIR.  Thanks to Gonzo Diethelm
          <Gonzalo.Diethelm@sonda.com> for contributing these fixes.

        The following fixes are all thanks to Ingo Dahm <ingo.dahm@sun.com>

        * ace/config-sunos5.6.h: Added support for SunC++ 5.2.
        * ace/IOStream.h: Added support for SunC++ 5.2.
        * ace/config-sunos5.8.h: Added Solaris 8 support for native
          POSIX RW locks.
        * include/makeinclude/platform_sunos5_sunc++.GNU: Added support
          for Sun C++ 5.2.

Thu May 10 19:33:03 2001  Carlos O'Ryan  <coryan@uci.edu>

        * tests/ARGV_Test.cpp:
          Fixed argv, it should be an ACE_TCHAR, add missing ACE_TEXT()
          and removed superfluous one.

Thu May 10 18:19:09 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ACE-INSTALL.html:
          Add documentation for the mingw support, thanks Cristian Ferretti
          <cristian_ferretti@yahoo.com> for providing this info.

Thu May 10 16:55:20 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_run_tests.lst:
          Add the new Latency and Throughput tests to the nightly
          regression testsuite.

Thu May 10 18:37:41 2001  Steve Huston  <shuston@riverace.com>

        * ace/POSIX_Asynch_IO.cpp (ACE_POSIX_Asynch_Result ctor): Added
          initializers for bytes_transferred_ and error_. Thanks to
          Itzhak Briskman <ibriskman@ndsisrael.com> for this fix.

        * THANKS: Added Itzhak Briskman to the Hall of Fame.
          Updated David Brock's email address.

        * ace/SString.cpp (ACE_CString::substring): If requesting a substring
          longer than the string is, return only what's left. Thanks to
          David Brock <dbrock@momsdesk.com> for reporting this.

        * tests/SString_Test.cpp: Add a substring extraction test to catch
          the above problem (returning a substring with more than is left
          in the original string).

        * ace/Process_Mutex.{h cpp inl}: Changed the "uses mutex" vs
          "uses SV_Semaphore_Complex" decision to make use of a private
          macro defined in Process_Mutex.h. Further, the platforms that
          use mutexes are now Win32, PSOS, Pthreads, Sthreads.

        * ace/config-sunos5.6.h:
        * ace/config-hpux-11.00.h: Added ACE_HAS_SHM_OPEN since these
          platforms support shm_open, and ACE_Mutex wants to use it for
          cross-process mutexes.

        * ace/Proactor.h: Updated handle_events comments to note that the
          ACE_Time_Value is relative and is updated before return.

        * ace/Synch.(h cpp) (ACE_Mutex): Added ACE_HAS_PTHREADS and
          ACE_HAS_STHREADS to the platforms which handle inter-process mutex
          by allocating it in shared memory.

        * tests/Process_Mutex_Test.cpp: Made the child process create an
          exclusive access file after acquiring the mutex and delete it
          before releasing. If the file can't be created, it means the
          mutex is acquired twice, and that's a no-no.
          When the parent is checking child process exit, also check the
          status - if the child exited with something other than 0 status,
          note that so the test procedure will see a LM_ERROR in the log
          and flag it.

        * tests/MEM_Stream_Test.cpp: Changed some debug text to match the
          function it is in.

        * ace/Parse_Node.{h cpp}: Handle dynamic libraries using ACE_DLL,
          not ACE_OS::dlopen, etc. and handles. This is a proper refactoring
          of the code (ACE_DLL didn't exist when this was first written)
          and is needed to properly support dynamic services on AIX.

        * ace/DLL.cpp (open): (AIX only) If the dlopen fails and we're
          trying to open an archive lib, tack on "(shr.o)" and retry
          with the RTLD_MEMBER option set in the mode. This is to
          properly support AIX shared libraries which get built as
          .o files and loaded into an archive.

Thu May 10 16:12:02 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/ACE.cpp (timestamp): The abbreviation of thursday should be
          "Thu" not "Thr".  Thanks to Munagala Ramanath
          <amberarrow@yahoo.com> for pointing this out.

Thu May 10 10:06:57 2001  Carlos O'Ryan  <coryan@uci.edu>

        * tests/tests.dsw:
        * tests/ARGV_Test.dsp:
          Add project file for ARGV_Test, thanks to Cristian Ferretti
          <cristian_ferretti@yahoo.com> for pointing this out.

Thu May 10 06:36:08 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/CDR_File_Test.cpp: Fixed a compile error with g++.

Thu May 10 08:13:12 2001  Johnny Willemsen <jwillemsen@remedy.nl>

        * tests/Makefile.bor
        * tests/Misc/Makefile.bor
        * tests/Naming/Makefile.bor
        * tests/Reactor/Makefile.bor
        * tests/Reactor/Dgram/Makefile.bor
        * tests/Reactor/Ntalker/Makefile.bor
        * tests/Registry/Makefile.bor
        * tests/Synch/Makefile.bor

          Added or updated the above BCB makefiles so that the tests are
          build with BCB

Wed May  9 23:19:30 2001  Sharath R. Cholleti  <sharath@cs.wustl.edu>

        * ace/CDR_Streams.h:
        * ace/CDR_Streams.cpp:
        * ace/CDR_Streams.i:
        * ace/CDR_Base.h: Changed the WChar implementation to suit GIOP
          1.2.

        * tests/CDR_Test.cpp:Added test for wchar.

          Thanks to Bala (bala@cs.wustl.edu) for helping me out.

Wed May  9 16:06:34 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/TTY_IO.cpp (control):
        * ace/OS.h: Corrected this change "Wed May  9 14:03:01 2001
          Douglas C. Schmidt". The problem was with the definition of the
          macro ACE_VTIME. Looks more like a cut and paste error.

Wed May  9 16:00:22 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/OS.h:
        * ace/TTY_IO.cpp: Reverted this change "Wed May  9 14:03:01 2001
          Douglas C. Schmidt".

Wed May  9 14:03:01 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/TTY_IO.cpp (control): Use the new ACE_VMIN and ACE_VTIME
          macros.  Thanks to Hans Utz <hans.utz@informatik.uni-ulm.de> for
          suggesting this.

        * ace/OS.h: Added support for the new ACE_VMIN and ACE_VTIME
          macros.  Thanks to Hans Utz <hans.utz@informatik.uni-ulm.de>
          for suggesting this.

Wed May  9 14:25:35 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * THANKS: Added Darren Griffith <darren.griffith@esecurityinc.com>
          to the hall of fame.

Wed May  9 11:40:06 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/OS.i:
          Don't use OpenFileMapping for WindowsCE.

        * ace/OS.i:
        * ace/config-win32-mingw.h:
          Use the /**/ trick for #includes with angle brackets, otherwise
          the Embedded C++ compiler gets angry.

Wed May 09 10:02:10 2001  Balachandran  <bala@cs.wustl.edu>

        * ACE version 5.1.15 released.

Mon May  7 07:14:08 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/auto_run_tests.lst: Commented out OctetSeq test from running
          in static configurations.

Mon May  7 06:40:44 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * examples/Shared_Memory/test_SV.cpp: Cast SHM_KEY to (key_t) to
          make BCB happy.  Thanks to Johnny Willemsen for this.

Sat May  5 15:30:40 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * THANKS: Just added the 1,200th contributor to the ACE+TAO.
          Thanks to Alexandre Cervieri <alexandre.cervieri@terra.com.br>
          for helping us hit a new milestone!

Sat May  5 08:51:23 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/nightlybuilds/builds.lst: Just commented the HP_UX
          builds. OCI seems to be having problems with their HP
          machine. We will get it online once the builds start running.

Sat May  5 08:01:30 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * tests/Thread_Mutex_Test.cpp: Added a series of tests that exercise
          the new functionality of the ACE_Guard.  Thanks to Christopher
          Kohlhoff <chris@kohlhoff.com> for providing the enhancements.

Fri May  4 15:42:20 2001  Craig Rodrigues <crodrigu@bbn.com>

        * ace/OS.h
          Changed ACE_SERVICETYPE_CONTROLLEDLOAD from 2 to 1
          This is necessary to work with RAPI.

Fri May  4 06:28:19 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/OS.h: Changed the typedefs of uid_t, gid_t, and mode_t to
          match those in standard POSIX.  Thanks to Gonzalo Diethelm
          <Gonzalo.Diethelm@sonda.com> for reporting this.

Fri May  4 06:28:19 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/ace_wchar.h: Add a new macro (ACE_USES_L_PREFIX) that allows
          users to control whether wide character strings use the "L"
          prefix via their config.h files.  Thanks to Albert Wijnja for
          this fix.

        * examples/Misc/test_read_buffer.cpp (main): Changed <int> to
          <ACE_HANDLE> so this will work properly on Win32 platforms.
          Thanks to Johnny Willemsen for reporting the problem.

        * examples/Misc/test_XtReactor2.cpp (main): Fixed a stray ')'.
          Thanks to Johnny Willemsen for reporting the problem.

Thu May  3 17:33:45 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/OS.h: Fixed a mistake in the setsockopt() comment.  Thanks
          to Craig Rodrigues for reporting this.

Thu May  3 17:43:33 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Acceptor.cpp (ACE_Acceptor): Fixed a warning in g++ builds.

Thu May  3 16:00:15 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Malloc.h:
        * ace/PI_Malloc.h: Fixed the [PI_]Control_Block size estimation
          macros.  I added a new member to control block.

Thu May  3 14:52:33 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/CDR_Stream.h (ACE_InputCDR):
        * ace/CDR_Stream.cpp: Removed the method steal_data () as it did
          not serve the purpose.  Added a new method exchange_data_blocks
          (). This method exchanges data_blocks between two CDR
          streams. The write and read pointers are also exchanged. This
          method performs no allocation and no releases and is lock free.

Thu May  3 06:58:29 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Acceptor.{h,cpp},
        * ace/SOCK_Acceptor.{h,cpp}:  When the number of clients
          connecting to a server exceeds the process handle limit the
          server would busy loop.  The Acceptor accept_svc_handler()
          method is called which (1) constructs a handler and (2) attempts
          to accept the connection, which fails (because there is no
          available handle).  The handler is destructed, but the connect
          request is still queued and so the acceptor gets called back
          again.... and so on until one of the client which is already
          connected disconnects and frees up a descriptor.  Changed the
          Acceptor the close and reopen the connection when accept()
          fails.  A check is done to make sure address reuse is set. So
          this fix will only work in case where it is set.  Thanks to
          Dominic Hughes <dominic@aersoft.ie> for this fix.

        * ace/Unbounded_Queue.h: The comment was incorrect for
          ~ACE_Unbounded_Queue.  Thanks to Johnny Willemsen for
          reporting this.

Thu May  3 08:00:56 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * examples/ASX/Event_Server/Event_Server/Options.cpp:
        * examples/ASX/UPIPE_Event_Server/Options.cpp: Warning fixes that
          missed my earlier fix. This warning will appear only in the
          evening SUNOS EGCS build result. Just a proactive fix. :)

Thu May  3 07:42:01 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * examples/IPC_SAP/FILE_SAP/client.cpp: Fixed a warning with Linux
          builds.

Wed May  2 22:55:25 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * examples/ASX/Event_Server/Event_Server/Options.cpp:
        * examples/ASX/UPIPE_Event_Server/Options.cpp:
        * examples/IPC_SAP/FILE_SAP/client.cpp:
        * examples/Naming/test_open.cpp:
        * examples/Naming/test_writers.cpp: Fixed warnings in g++ builds.

Wed May  2 18:36:29 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * tests/README: Clarified that the shared memory tests now
          work fine on Win9x!  Thanks to Cristian Ferritti for reminding
          me to do this.

Wed May  2 15:10:28 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/CDR_Stream.h (ACE_InputCDR):
        * ace/CDR_Stream.cpp: Added a new constructor for ACE_inputCDR
          class. This constructor would take the data block with a
          pre-determined read and write pointer positions. This is helpful
          when an application would like to create a CDR stream with a
          smei-processed data block.

Wed May  2 11:10:59 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/auto_run_tests.lst: Added a colon to seperate the
          run_test.pl specification from "!" that is used to indicate
          where the scripts shouldn't be run.

Wed May 02 05:40:47 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_run_tests.lst:
          Use Queued_Message_Test/run_test.pl

Wed May  2 06:31:46 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Makefile: Make it possible to set where the QTDIR is located.
          Thanks to Thomas Groth <groth.th@nord-com.net> for this
          enhancement.

Tue May  1 21:38:00 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Process.cpp (spawn): When an application running with user
          ID=0 (i.e. root) spawns a new process using
          ACE_Process_Manager::spawn(), which in turn calls
          ACE_Process::spawn() and tries to set a user ID and a group ID
          for the new process different from root/other, the call to
          setreuid() succeedes but the call to setregid() made thereafter
          fails, because the process has no longer UID=0 and thus it
          cannot change to a different group.  To fix this, it was
          necessary to swap the order of the calls to setreuid() and
          setregid().  Thanks to Ramiro Penataro <penataro@ll.iac.es> for
          reporting this.

Tue May  1 11:05:48 2001  Ossama Othman  <ossama@uci.edu>

        * tests/MEM_Stream_Test.cpp (handle_input):

          Fixed syntax error.  "ACE_TCHAR," not "ACE_CHAR."

Tue May  1 09:57:30 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Activation_Queue.cpp (enqueue): Clarified the behavior
          of passing sizeof (*mr).  Thanks to Guy Bolton King
          <guy_bolton_king@non.agilent.com>

Tue May  1 07:13:59 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/auto_run_tests.lst : Sun CC 5.1 cannot work with
          Simple_Naming test. Made sure that this test does not run with
          Sun CC 5.1.

Tue May  1 06:15:26 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Hash_Map_Manager_T.h (class ACE_Hash_Map_Manager_Ex): Fixed
          an erroneous comment.  Thanks to Mark Drijver
          <mdrijver@remedy.nl> for finding this.

        * ace/Local_Name_Space_T.cpp (create_manager_i): It's now valid
          to use fixed mmap addresses on Win9x.  Thanks to Cristian Ferretti
          <cristian_ferretti@yahoo.com> for these fixes.

        * ace/Mem_Map.{h,i},
        * ace/ace_wchar.h,
        * ace/OS.{h,i}: Added support to the ACE_OS::mmap() function and
          ACE_Mem_Map class so they work properly on Win9x.  Thanks to
          Cristian Ferretti <cristian_ferretti@yahoo.com> for these fixes.

        * tests/Malloc_Test.cpp (main): Updated this test so that it
          doesn't try to do any remapping or alternative child address
          ranges on Win9x.  Thanks to Cristian Ferretti
          <cristian_ferretti@yahoo.com> for pointing this out.

        * tests/MEM_Stream_Test.cpp (handle_input): Make sure to multiple
          MAXPATHLEN * sizeof (ACE_CHAR) to handle Unicode properly.
          Thanks to Cristian Ferretti <cristian_ferretti@yahoo.com> for
          pointing this out.

Mon Apr 30 12:56:03 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/nightlybuilds/builds.lst : Removed RAPI of the scoreboard.

Sun Apr 29 15:20:00 2001  Michael Kircher  <Michael.Kircher@mchp.siemens.de>

        * bin/auto_run_tests.lst:

          Added a flag to the Pluggable UDP test, so that it does not
          get run in environments using only statically linked libraries.

Sun Apr 29 11:44:26 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/ace_wchar.h: Reverted the following change

          Tue Apr 24 06:28:00 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>
          * ace/ace_wchar.h: Fixed some code for VxWorks.  Thanks to
            Albert Wijnja <Albert.Wijnja@meco.nl> for reporting this.

          This change is confusing since it's inconsistent with other
          platforms that enable ACE_TEXT_WIDE.

Thu Apr 26 20:14:48 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/CDR_Stream.h (ACE_InputCDR):
        * ace/CDR_Stream.cpp: Added a new method steal_data () which
          replaces data blocks from one InputCDR stream to another. This
          is a slightly modified form of steal_from () which basically
          creates a new data block for the source stream. Creating a new
          data block incurs the unwanted malloc overhead.

Thu Apr 26 12:37:45 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/README: Updated the list of tests that do not work on
          windows 9x/ME for their limited shared memory support.  Thanks
          to Cristian Ferretti <cristian_ferretti@yahoo.com> for pointing
          them out.

Thu Apr 26 12:30:19 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Containers_T.h Updated documentation for
          ACE_DLList_*Iterator's on the use of method
          <advance_and_remove>.  Users are responsible for release
          (free'ing) the returned element.  Thanks to Rachel G. Smith
          <Rachel_G_Smith@raytheon.com> for motivating the change.

Thu Apr 26 07:58:56 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/auto_run_tests.lst: Prevented the BiDirectional tests from
          running in the Minimum nightly builds.

Thu Apr 26 07:48:30 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/MEM_IO.h (ACE_MEM_IO): Some cosmetic fixes.

Thu Apr 26 07:38:01 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * examples/IPC_SAP/SOCK_SAP/CPP-memserver.cpp: Fixed a compile
          error. The ACE_MEM_IO::fini () was taking an integer
          value. There was no method with a signature fini (int). Removed
          the integer argument.

Wed Apr 25 23:24:25 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/MEM_Stream_Test.cpp: Changed the error message on SysV
          semaphores to LM_WARNING and moved it up before executing the MT
          test.

        * ace/MEM_IO.cpp:
        * ace/MEM_IO.h:
        * ace/MEM_IO.i: Do not compile MT signaling code if only SysV
          semaphores are available.

        * ace/MEM_Acceptor.cpp:
        * ace/MEM_Connector.cpp: Force the other party to use Reactive
          signaling if we don't support MT signaling.

Wed Apr 25 19:48:48 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_run_tests.lst:
          Remove the tests/Oneway_Buffering/run_timeout.pl test from the
          list.  It is giving spurious errors, but fixing them would take
          me too long.

Wed Apr 25 20:23:44 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-linux-common.h: Revert my previous change:

          Wed Apr 25 03:45:55 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

          Linux's POSIX semaphores is broken.  Thanks to Ossama for
          noticing this.

Wed Apr 25 18:32:54 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ACE-INSTALL.html: Make sure to mention that ACE (and TAO) run
          on Solaris 8.  Thanks to Richard Hardgrave
          <hardgrav@ttd.teradyne.com> for motivating this.

        * include/makeinclude: Zapped the platform_sunos5_egcs.GNU
          file.  Thanks to Craig Rodrigues for the suggestion.

Wed Apr 25 15:30:18 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/Malloc_Test.cpp: The reference counter needs to be release
          if we want it to work.

Wed Apr 25 03:45:55 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/MEM_Stream_Test.cpp: Temporarily changed the informational
          message about the use SYSV semaphores to LM_ERROR so we can find
          those platforms out quicker.  Many of them may actually support
          POSIX semaphores.  We need to enable them in that case.

        * ace/config-linux-common.h: Added ACE_HAS_POSIX_SEM and
          ACE_LACKS_NAMED_POSIX_SEM.  Linux actually support them.  I'm
          not sure if there are any version of linux that don't.

Wed Apr 25 03:15:34 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Malloc.h: Added new variables to reference counting the
          Malloc.

        * ace/PI_Malloc.h: Added new variables to reference counting the
          Malloc and removed a ton of duplicated code that had already
          been defined in Malloc.h.

        * ace/Malloc_T.cpp:
        * ace/Malloc_T.h:
        * ace/Malloc_T.i: Added 2 new methods to query the reference
          counter and to release the reference counter.  The reference
          counter is created with 1 when the malloc first use a new
          backing store.  Later malloc that attaches to the same backing
          store will increase the reference counter.  It's the user's
          responsibility to invoke release when the malloc is no longer
          needed.  The reference counter provides a way to indication it's
          safe to clean up the backing store without upsetting other
          malloc that might still need it.  Note, however, the malloc will
          not cleanup the backing store automatically when the reference
          counter drops to 0 because we may want to attach another malloc
          to it in some later point.

        * ace/MEM_IO.cpp:
        * ace/MEM_IO.h:
        * ace/MEM_SAP.cpp:
        * ace/MEM_SAP.h: Use the aforementioned reference counter to
          cleanup the backing store automagically.

        * ace/MEM_Stream.h:
        * ace/MEM_Stream.i: Removed cleanup method as it is no longer
          needed with the previous changes.  Removed unnecesary <remove>
          argument from fini () method.

        * ace/MEM_Stream.cpp: Simply calling fini () without worrying
          about cleaning up the backing store.

        * tests/MEM_Stream_Test.cpp: No longer need to hint for cleanup.

        * tests/Malloc_Test.cpp: Added ACE_ASSERT to check for proper
          operation of reference counter.

Tue Apr 24 17:54:00 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Makefile:
          Add 'Timer' to the default list of ACE components, without many
          a test, application or example do not compile.

Tue Apr 24 16:39:29 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_run_tests.lst:
          Add Reliable_Oneways, Blocking_Sync_None, Oneway_Buffering,
          Big_Oneways, Big_Twoways, Big_Request_Muxing and
          Queued_Message_Test to the nightly builds.  Most of these tests
          are part of the 132 regression test suite.

Tue Apr 24 06:28:00 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Makefile: Refactored some stuff to improve the
          ACE subsetting as follows:

          . Moved Malloc_Instantiations.cpp from libACEUtils to the
            component libACE_Memory.

          . Moved Handle_Set.* to libACE_Utils to satisfy ACE.*

          . Moved Dynamic_Service_Base to libACE_Svcconf

          . Build a new component libACE_Timer with :
            Timer_Wheel.*,Timer_Queue.*,Timer_List.*,Timer_Heap.*,Timer_Hash.*
            Timeprobe.* Time_Request_Reply.* System_Time.* Profile_Timer.*
            High_Res_Timer.*

          Thanks to Thomas Groth <groth.th@nord-com.net> for these
          suggestions.

        * docs/ACE-guidelines.html: Updated the discussion of using
          open() rather than constructors.  Thanks to Stan Pinte
          <spinte@latinia.com> for motivating this.

Sat Apr 14 10:51:39 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Log_Msg.h:
          Document the lock related functions in a separate Doxygen
          section.

Mon Apr 23 17:18:35 2001  Steve Huston  <shuston@riverace.com>

        * ace/ACE.cpp (ACE::handle_timed_complete): Set need_to_check for
          any non-success result, or on a system where you can't tell (AIX).
          Also, to check, use getsockopt to retrieve the status/error if
          SOL_SOCKET and SO_ERROR are defined; else use the old recv method.
          This gets you a real error code on a failed connect, if the platform
          supports it.

        * tests/SOCK_Connector_Test.cpp: For an expected success, allow test
          to pass if socket gets a reset but not if it says ENOTCONN. If there
          are platforms that can't do SOL_SOCKET/SO_ERROR (above) then this
          other code may need to be re-enabled.

Mon Apr 23 13:36:27 2001  Steve Huston  <shuston@riverace.com>

        * ace/ACE.cpp (ACE::handle_timed_complete): Winsock (ACE_WIN32) sets
          the exception bit (not the read bit) for a failed async connect.
          So on fail, don't bother to do the recv trick to see if the socket
          really did fail.

        * ace/Connector.cpp (ACE_Connector::handle_output):
        * ace/SOCK_Connector.cpp (complete): Apparantly, Win2000 has
          fixed the problem where a connection succeeds but can't be used
          for a time. So, the sleep workaround is restructured for ACE_WIN32
          to try the new socket first, and only do the sleep if it fails.
          Don't try to do this check (e.g. building on Win2000) at compile
          time, since we want to be able to build on NT and run on Win2000.

        * ace/README:
        * ace/config-win32-common.h: Removed the macro,
          ACE_HAS_BROKEN_NONBLOCKING_CONNECTS. It was only used in the two
          cases above, and is not needed any longer.

Mon Apr 23 07:08:09 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Based_Pointer_T.h: Updated the documentation to
          explain how ACE_Based_Pointer<T> (NULL) behaves.  Thanks to Tom
          Moog <tmoog@polhode.com> for motivating this.

Sun Apr 22 14:26:56 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/OS.h:
          Some warnings are automatically disabled, but the pragmas only
          make sense for MSVC.

        * ace/streams.h:
          Fixed problems for Sun/CC-4.2, the trick is to include
          strstream.h on MINGW32 *and* unix-like platforms, while
          strstrea.h is included for all other WinXX-based compilers.

Sat Apr 21 19:02:27 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * netsvcs/clients/Naming/Dump_Restore/Makefile:
        * netsvcs/clients/Naming/Client/Makefile: Removed duplicated ACE
          library.  I thought I removed them all.

Sat Apr 21 15:31:27 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/ACE.cpp:
        * ace/Basic_Types.h:
        * ace/Configuration.cpp:
        * ace/Handle_Gobbler.i:
        * ace/Lib_Find.cpp:
        * ace/Local_Name_Space_T.cpp:
        * ace/Log_Msg.cpp:
        * ace/Makefile:
        * ace/Mem_Map.cpp:
        * ace/Memory_Pool.cpp:
        * ace/Message_Queue.i:
        * ace/NT_Service.cpp:
        * ace/OS.cpp:
        * ace/OS.h:
        * ace/OS.i:
        * ace/OS_String.cpp:
        * ace/Process.cpp:
        * ace/Process_Manager.cpp:
        * ace/Registry.cpp:
        * ace/SOCK_Connector.i:
        * ace/Sock_Connect.cpp:
        * ace/TTY_IO.cpp:
        * ace/WFMO_Reactor.cpp:
        * ace/WFMO_Reactor.i:
        * ace/WIN32_Asynch_IO.cpp:
        * ace/config-cygwin32-common.h:
        * ace/config-g++-common.h:
        * ace/config-win32-common.h:
        * ace/config-win32-mingw.h:
        * ace/config-win32.h:
        * ace/streams.h:
        * examples/NT_Service/Makefile:
        * examples/NT_Service/main.cpp:
        * examples/NT_Service/ntsvc.cpp:
        * include/makeinclude/platform_cygwin32.GNU:
        * include/makeinclude/platform_gnuwin32_common.GNU:
        * include/makeinclude/platform_mingw32.GNU:
        * include/makeinclude/rules.local.GNU:
        * include/makeinclude/wrapper_macros.GNU:
        * tests/CDR_File_Test.cpp:
        * tests/Cached_Accept_Conn_Test.cpp:
        * tests/Cached_Conn_Test.cpp:
        * tests/Conn_Test.cpp:
        * tests/Handle_Set_Test.cpp:
        * tests/MEM_Stream_Test.cpp:
        * tests/MEM_Stream_Test.h:
        * tests/MM_Shared_Memory_Test.cpp:
        * tests/MT_SOCK_Test.cpp:
        * tests/Malloc_Test.cpp:
        * tests/Mem_Map_Test.cpp:
        * tests/OS_Test.cpp:
        * tests/Priority_Reactor_Test.cpp:
        * tests/Process_Strategy_Test.cpp:
        * tests/Reactor_Exceptions_Test.cpp:
        * tests/Reactor_Notify_Test.cpp:
        * tests/SOCK_Send_Recv_Test.cpp:
        * tests/SOCK_Test.cpp:
        * tests/SPIPE_Test.cpp:
        * tests/Svc_Handler_Test.cpp:
        * tests/run_tests.bat:
        * tests/run_tests.sh:
        * tests/RMCast/RMCast_Fragment_Test.cpp:
          Add support for mingw (www.mingw.org) and partial support for
          cygwin (http://cygwin.com/).  Many thanks to Cristian Ferretti
          <cristian_ferretti@yahoo.com>

Fri Apr 20 18:21:41 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/CDR_Stream.i (align_write_ptr):
          Don't use grow_and_adjust() here because it forces an
          allocation, using simply adjust() is better.

Fri Apr 20 19:37:53 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Get_Opt.h: Updated the documentation to match the constructor
          arguments for ACE_Get_Opt.  Thanks to Benot Desmeules
          <bdesmeules@eurekium.com> for reporting this.

        * ace/TP_Reactor.cpp: Added a workaround for compiling ACE on
          Linux for the OS/390 OS.  Thanks to James Dorsey
          <James.Dorsey@acxiom.com> for reporting this.

Fri Apr 20 00:57:24 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Containers_T.cpp (operator=): Added a missing assignment to
          this->size_ = s.size_.  Thanks to Juan Jose Comellas
          <jcomellas@novamens.com> for reporting this.

        * ace/SOCK_Dgram: One of the send() methods was lacking a "const"
          in front of the ACE_Addr &.  This has been fixed.  Thanks to
          Victor Poznyak <VictorP@Webley.COM> for reporting this.

Thu Apr 19 16:18:33 2001  Steve Huston  <shuston@riverace.com>

        * ace/Log_Msg.h: Doxygen-ized some function arguments; other
          minor doc cleanups.

Thu Apr 19 11:08:15 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ACE-INSTALL.html: Point out that ACE supports Solaris 8.
          Thanks to Logan Modahala <lmodahal@cisco.com> for motivating
          this.

Wed Apr 18 13:57:40 2001  Chad Elliott  <elliott_c@ociweb.com>

        * ace/ACE.cpp:

          Modification to check errno for ENOBUFS (in addition to
          EWOULDBLOCK) after writing to a file descriptor.  This will happen
          on VxWorks when a client sends data faster than the server can
          receive it.  This modification causes this to be a retry situation
          instead of an error.   [Bug 866]

Wed Apr 18 11:33:07 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/auto_run_tests.lst: Added the BiDirectional tests to the
          nightly builds. There is no reason why it did not go in so far.

Wed Apr 18 10:25:03 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/auto_run_tests.lst: Changed the name of the -config option
          for SUNCC5.1.  Removed the dot and replaced it with a '_'.

Wed Apr 18 05:23:53 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * tests/Config_Test.cpp: Fixed several warnings related to
          not using ACE_TEXT for wide-strings.  Thanks to Bala for
          reporting this.

Wed Apr 18 02:08:16 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/Synch/proc_sema.dsp:  Fixed release build settings.

Tue Apr 17 12:33:49 2001  Steve Huston  <shuston@riverace.com>

        * ace/Service_Config.cpp (open_i): If the caller supplies a
          logger key, enable the ACE_Log_Msg::LOGGER bit when opening
          the ACE_Log_Msg instance, else the logger key is ignored.

Tue Apr 17 06:15:00 2001  Michael Kircher  <Michael.Kircher@mchp.siemens.de>

        * bin/auto_run_tests.lst:

          Added the UDP Pluggable Protocol test to the list of executed tests.

Mon Apr 16 20:42:46 2001  Carlos O'Ryan  <coryan@uci.edu>

        * include/makeinclude/platform_qnx_rtp_gcc.GNU:
          Remove obsolete comments and raise the optimization level from
          -O2 to -O3, the latter disables a huge number of warnings for
          PACE.

Mon Apr 16 22:15:28 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/auto_run_tests.lst: Commented out some tests that are
          failing on SUNCC 5.1. The failure is because of a compiler
          bug. The problem is that the compiler seems to have difficulty
          in calling the virtual method in a class hierarchy which is
          built with multiple inheritance.

Mon Apr 16 20:24:11 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * tests/Config_Test.cpp (main): Remoted the test_io() function.
          Thanks to Jerry Odenwelder <jerry.o@mindspring.com> for
          confirming this.

Mon Apr 16 16:18:57 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/config-qnx-rtp.h:
          Add support for gperf under QNX

        * include/makeinclude/platform_qnx_rtp_gcc.GNU:
          The -fexceptions flag has no place in the CPPFLAGS macros, it
          should go in CCFLAGS (though I could be convinced to put it in
          CFLAGS)

Mon Apr 16 16:13:29 2001  Steve Huston  <shuston@riverace.com>

        * ace/Configuration.h (ACE_Configuration::root_section): Made this
          method 'const'; makes today's changes easier to deal with.

        * ace/Configuration_Import_Export.cpp (string_has_white_space):
        * ace/Configuration.cpp (operator==): Replaced 'true' with 1 and
          'false' with 0; replace const_cast<> with ACE_const_cast (),
          per docs/ACE-guidelines.html, and IBM C++ :-)  Also, use two
          non-const local variables instead of const_casting 'this' and
          'rhs' on every use.
          Made ACE_Configuration::root_section (void) const.

        * ace/ace.icc: This was an early hack attempt to use library or DLL
          build for Visual Age C++ 4. It is now the Visual Age C++ 5
          configuration for building ACE on AIX. The ace-dll.icc and
          ace-lib.icc are still around for Visual Age C++ 4 users, but may
          not work and will be removed in a future ACE release. This
          config is for Visual Age C++ 5 only and can/will be extended to
          do subset builds as well as debug/optimize/etc variants.

        * bin/make_pretty.pl: Pick out AIX ld errors correctly.

        * include/makeinclude/platform_hpux_aCC.GNU: Note HP problem report
          number and disposition for inability to use -AA and +noeh together.

Mon Apr 16 12:32:48 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/MEM_Stream_Test.cpp: Limited the concurrent connections
          used in the multithreaded test on platforms without POSIX or
          Win32 semaphores.  In this case, SysV semaphores are used and
          a user can only instantiate very limited number of them.  The
          test will also print out an INFO in this case as it implies
          there can only be one "multithreaded" connection in one host at
          any instance.  This fixed the test on some obsolete UNIX
          platforms.

Mon Apr 16 09:58:23 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/Config_Test.cpp: Fixed a warning with g++ builds. The
          warning was  because of an unused function.

Sun Apr 15 21:27:19 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp: Added new Configuration_Import_Export.{h,cpp}
          files.

Sun Apr 15 19:33:19 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Configuration.cpp,
        * ace/Configuration_Import_Export.cpp: Fixed some warnings
          that show up with G++.  Thanks to Carlos for reporting this.

Sun Apr 15 17:13:40 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_run_tests.lst:
          Disabled TAO/tests/Client_Leaks on all configurations, it is
          failing systematically because it cannot create processes fast
          enough.

Sat Apr 14 18:08:16 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Configuration_Import_Export.h:
          Fixed small typo in the @file comment for
          Configuration_Import_Export.h

Sat Apr 14 18:31:15 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Makefile.bor: Added new Configuration_Import_Export.obj file.

        * tests/Config_Test.cpp: Added tests for the new ACE_Configuration*
          stuff.  Thanks to Jerry Odenwelder <jerry.o@mindspring.com> for
          contributing these.

        * ace/Configuration_Import_Export.{h,cpp}: Added two new files that
          do the following:

          1. Remove the import and export functionality from the
             ACE_Configuration object.
          2. Provide two new classes to import/export ACE_Configuration
             objects:

             * ACE_Registry_ImpExp import and exports in the Win32
               Registry format - this was the old import/export routine on
               ACE_Configuration.
             * ACE_Ini_ImpExp imports and exports in an INI format.  The
               import part of this was called import_config_as_strings in
               the old ACE_Configuration object.  While this object will
               export any ACE_Configuration object, it can only import data as
               strings.  This is due to the inability to distinguish type
               in the INI format.
          3. Added operator== to ACE_Configuration.  This is to compare
             contents not type.
          4. Test programs were modified to exercise this new functionality.

          Thanks to Jerry Odenwelder <jerry.o@mindspring.com> for
          contributing these.

Sat Apr 14 12:44:17 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/MEM_IO.i:
          Reorder operations to eliminate warnings on Tru64/CXX

Sat Apr 14 11:12:26 2001  Steve Huston  <shuston@riverace.com>

        * tests/CLASSIX_Addr_Test.icc:
        * tests/CLASSIX_CLD_Connector_Test.icc:
        * tests/CLASSIX_Con_Acc_Test.icc:
        * tests/CLASSIX_Group_Test.icc:
        * tests/CLASSIX_Notify_Test.icc:
        * tests/CLASSIX_OS_Test.icc:
        * tests/CLASSIX_Reactor_Test.icc:
        * tests/CLASSIX_Select_Reactor_Test.icc:
        * tests/CLASSIX_Stream_Test.icc:
          Removed these files. They were moved/copied to tests/CLASSIX some
          time back and don't belong here.

        * tests/t.icc: Removed. This is not used for anything.

        * tests/Makefile.vac: Corrected 'realclean' actions.

Sat Apr 14 09:17:32 2001  Steve Huston  <shuston@riverace.com>

        * examples/QOS/Change_Sender_TSpec/sender.dsp: Added extra level of
          directory for include and lib - missed this one in yesterday's
          set of changes.

Sat Apr 14 09:08:33 2001  Steve Huston  <shuston@riverace.com>

        * ace/Array_Base.h: Added forward declaration for ACE_Allocator.
        * ace/Array_Base.cpp: Added #include "Malloc_Base.h" so IBM C++
          can find ACE_Allocator when instantiating templates.

        * ace/config-hpux-10.x-hpc++.h: When using standard C++ lib,
          set the value of ACE_USES_STD_NAMESPACE_FOR_STDCPP_LIB to 1.

        * netsvcs/clients/Naming/Dump_Restore/Makefile:
        * netsvcs/clients/Naming/Client/Makefile: Add ACELIB to LIBS. This
          allows IBM C++ compilers to build the library clean.

        * tests/Makefile.vac: Don't try to use vacbld_r on the entire
          project. It can take so long that make gives up and kills
          off the build, making a real mess of the .ics files and leaving
          random numbers of tests unbuilt. Instead, run vacbld_r on
          each .icc file in the directory. Similarly for clean, don't
          reply on vacbld_r on the project file - run through all the
          ics files and executables based on existing .icc files.

Fri Apr 13 12:44:21 2001  Steve Huston  <shuston@riverace.com>

        * netsvcs/lib/Server_Logging_Handler_T.cpp (handle_logging_record):
          If logging to STDERR is not enabled, don't dump the log record
          there either.

Fri Apr 13 12:21:01 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Malloc_T.h: Added an explanation on the requirement about
          sizeof (TYPE)link of ACE_Cached_Allocator and a link to
          ACE_Cached_Mem_Pool_Node where this stuff was explained.  Thanks
          to Rachel G. Smith <Rachel_G_Smith@raytheon.com> for motivating
          the change.

Fri Apr 13 12:05:38 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/MEM_Stream_Test.h:
        * tests/MEM_Stream_Test.cpp: Borland C++ has problem cleaning up
          the static Atomic_Op object in Echo_Handler in the right order.
          Made that an ACE_Singleton and re-organized the test a big.
          Thanks to Chris Kohlhoff <chris@kohlhoff.com> for reporting and
          suggesting the fix.   [Bug 862]

Fri Apr 13 11:58:58 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/OS.i (gethrtime):
          Add support for the the clock tick register as a high resolution
          timer under KCC/Linux.  Thanks to David Levine for help on this.

Fri Apr 13 05:30:04 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/OS.i: Make sure that the PTHREADS version of ACE_OS::thr_yield()
          gets top priority over the STHREADS version.  Thanks to Munagala
          Ramanath <amberarrow@yahoo.com> for reporting this.

        * ace/Malloc_T.{h,i}: Added support for one of the calloc() methods
          to ACE_Cached_Allocator.  Thanks to Rachel G Smith
          <Rachel_G_Smith@raytheon.com> for motivating this change.

        * ace/Malloc_Allocator.h: Updated the comments for ACE_New_Allocator
          to indicate that the calloc() methods are also supported.
          Thanks to Rachel G Smith <Rachel_G_Smith@raytheon.com> for
          motivating this change.

        * docs/ACE-bug-process.html: Updated this document to explain how
          bugs pertaining to OCI's TAO releases should be handled.  Thanks
          to Georg Lohrer <GeorgLohrer@web.de> for motivating this.

Thu Apr 12 20:36:30 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/OS.i (thr_getspecific): Reorder the way in which we check
          the flags so that ACE_HAS_PTHREADS takes precedence over
          ACE_HAS_STHREADS.  Thanks to Munagala Ramanath
          <amberarrow@yahoo.com> for reporting this.

Thu Apr 12 21:18:44 2001  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_hpux_aCC.GNU: Added
          -D_RWSTD_MULTI_THREAD -D_REENTRANT to CCFLAGS for stdlibcpp build.
          Makes execution clean, no core dump on program init.

Thu Apr 12 17:31:36 2001  Steve Huston  <shuston@riverace.com>

        * examples/IOStream/server/iostream_server.h: Wrap the guts of this
          in #if !defined (ACE_LACKS_ACE_IOSTREAM) to build clean on platforms
          that can't handle ACE_IOStream.

Thu Apr 12 17:02:41 2001  Steve Huston  <shuston@riverace.com>

        * examples/QOS/Change_Sender_TSpec/sender.dsp:
        * examples/QOS/Change_Sender_TSpec/receiver.dsp:
        * examples/QOS/Change_Receiver_FlowSpec/sender.dsp:
        * examples/QOS/Change_Receiver_FlowSpec/receiver.dsp:
        * examples/QOS/Simple/sender.dsp:
        * examples/QOS/Simple/receiver.dsp: Changed project names from 002
          and 003 to sender and receiver. Corrected relative paths for include
          and library lookup (add another ..).

        * examples/QOS/QOS.dsw: Change project names from 002/003 to sender
          and receiver.

Thu Apr 12 15:48:22 2001  Joe Hoffert  <joeh@cs.wustl.edu>

        * ace/CDR_Stream.i (length):
          Moved definition of length method above any of the methods
          that call into it. Was producing warnings on Tru64 platform.

Thu Apr 12 13:06:27 2001 Joel Sherrill <joel@OARcorp.com>

        * include/makeinclude/Makefile.rtems: Replaced debug version
          with real version that queries RTEMS application Makefile
          infrastructure.

        * include/makeinclude/platform_rtems.x_g++.GNU: Added
          --no-print-directory option to all invocations of recursive
          make to determine information from Makefile.rtems.  This
          avoids getting the "entering/exiting directory" messages
          included in the results.

        * ACE-RTEMS.README: Added requirement to configure C++
          support in RTEMS.  Updated to reflect also compiling for mc68360
          target.

Wed Apr 11 20:36:36 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/Synch/proc_sema.cpp (main): Fixd an assigning string
          literal to char* warning.

Wed Apr 11 18:04:33 2001  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/rules.bin.GNU: Change the Visual Age C++
          incremental build command to use vacbld_r, the thread-enabled
          variant of vacbld.

Wed Apr 11 11:00:50 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ACE-INSTALL.html: Added a section illustrating how to build
          ACE+TAO for RTEMS.  Thanks to Joel Sherrill <joel@OARcorp.com>
          for this build procedure.

Wed Apr 11 11:38:37 2001  Steve Huston  <shuston@riverace.com>

        * ace/IOStream.h: Reverted change from
          Tue Apr 10 18:35:22 2001  Steve Huston  <shuston@riverace.com>
          and replaced it with a section that sets ACE_LACKS_ACE_IOSTREAM
          if ACE_HAS_STANDARD_CPP_LIBRARY is set and ACE_USES_OLD_IOSTREAMS
          is not. This restriction is noted and tracked in Bugzilla # 857.

        * ace/IOStream.cpp:
        * tests/IOStream_Test.cpp: Reverted change from
          Tue Apr 10 18:35:22 2001  Steve Huston  <shuston@riverace.com>

Wed Apr 11 09:44:32 2001  Chad Elliott  <elliott_c@ociweb.com>

        * examples/Misc/test_trace.cpp:

          Fixed a strange compiler error with Tornado II.
          My_Task::recursive was inline which caused an internal compiler
          error.

Wed Apr 11 08:04:21 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * include/makeinclude/platform_linux.GNU: By default, we build
          ACE+TAO with exceptions enabled on Linux.  Thanks to Craig
          Rodrigues <crodrigu@bbn.com> for motivating this change.

        * ace/SString.i (operator+): Fixed an "inlined before use" warning.
          Thanks to Bala for reporting this.

Tue Apr 10 16:58:54 2001  Ossama Othman  <ossama@uci.edu>

        * ace/OS.h (ACE_DEFAULT_FILE_PERMS, ACE_DEFAULT_DIR_PERMS):

          Changed the default values on UNIX from 0666 and 0777 to 0644
          and 0755, i.e. removed global write permissions.  This addresses
          some security issues.  Now, only the owner has write permissions
          by default.

Tue Apr 10 18:35:22 2001  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_sunos5_sunc++.GNU: Added a new
          build option, stdcpplib, which defaults to 1. If set to 1,
          Sun Workshop 5 and Forte 6 compilers will use the standard
          C++ library, including standard iostreams. Set to 0 to
          use the old, classic iostreams.

        * include/makeinclude/platform_hpux_aCC.GNU: Added support for
          the stdcpplib build option. It defaults to 1 if using aC++
          x.27, or 0 if not. Thanks very much to Istvan Buki <ibuki@fedex.com>
          for these changes.

        * ace/config-aix-4.x.h: For Visual Age C++ 5, turn on
          ACE_HAS_STANDARD_CPP_LIBRARY and
          ACE_USES_STD_NAMESPACE_FOR_STDCPP_LIB.

        * ace/config-sunos5.5.h: For Sun Workshop 5 and Forte 6 compilers,
          take the ACE_USES_OLD_IOSTREAMS setting from the platform_macros.GNU
          file; don't set it here.

        * ace/config-hpux-11.00.h:
        * ace/config-hpux-10.x-hpc++.h: If the stdcpplib=1 option was used,
          then turn on ACE_HAS_STANDARD_CPP_LIB and
          ACE_USES_STD_NAMESPACE_FOR_STDCPP_LIB. Else turn on
          ACE_USES_OLD_IOSTREAMS.

        * ace/IOStream.{h cpp}: Only try to build this stuff if
          ACE_LACKS_ACE_IOSTREAM is not defined and ACE_USES_OLD_IOSTREAMS
          _is_ defined. The check on ACE_USES_OLD_IOSTREAMS can be removed
          when ACE_IOStream gets ported to standard iostreams.

        * tests/IOStream_Test.cpp: Only try this if ACE_USES_OLD_IOSTREAMS
          is defined. Remove this if/when ACE_IOStream is ported to new
          iostreams.

Tue Apr 10 17:51:25 2001  Pradeep Gore  <pradeep@cs.wustl.edu>

        * bin/auto_run_tests.lst:
          Added TAO/tests/OctetSeq/run_test1{2}.pl to auto testing.

Tue Apr 10 16:33:42 2001  Joe Hoffert  <joeh@cs.wustl.edu>

        * ace/CDR_Stream.i:
        * ace/CDR_Stream.cpp:
          Added sanity checks for sizes of strings and arrays.

Tue Apr 10 15:14:52 2001  Chad Elliott  <elliott_c@ociweb.com>

        * include/makeinclude/platform_vxworks5.x_g++.GNU:

          Added missing else/endif from previous support addition.

Tue Apr 10 11:48:51 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU: Added support
          for the M68k line of CPUs.  Thanks to Albert Pariante
           <albert@sw.bev.etn.com> for reporting this.

Tue Apr 10 02:14:55 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/PerlACE/Run_Test.pm (check_n_cleanup_files): Added a new
          PerlACE function that checks for unwanted files and spits out a
          warning before removing the file.  It makes sure that we not
          only clean up resource leaks but also notice their existence.

        * tests/run_test.pl (delete_temp_files): Used the new
          <check_n_cleanup_files> to remove the temp files for
          MEM_Stream_Test, if there are any.

Tue Apr  10 1:44:02 2001  Yamuna Krishnamurthy  <yamuna@ace.cs.wustl.edu>

        * examples/QOS/Change_Sender_TSpec/receiver.cpp:
        * examples/QOS/Change_Sender_TSpec/receiver.dsp:
        * examples/QOS/Change_Sender_TSpec/sender.cpp:
        * examples/QOS/Change_Sender_TSpec/sender.dsp:
        * examples/QOS/Change_Sender_TSpec/Sender_QoS_Event_Handler.h:
        * examples/QOS/Change_Sender_TSpec/Sender_QoS_Event_Handler.cpp:
        * examples/QOS/Change_Sender_TSpec/Receiver_QoS_Event_Handler.h:
        * examples/QOS/Change_Sender_TSpec/Receiver_QoS_Event_Handler.cpp:
        * examples/QOS/Change_Sender_TSpec/QoS_Util.h:
        * examples/QOS/Change_Sender_TSpec/QoS_Util.cpp:
        * examples/QOS/Change_Sender_TSpec/QoS_Signal_Handler.h:
        * examples/QOS/Change_Sender_TSpec/QoS_Signal_Handler.cpp:
        * examples/QOS/Change_Sender_TSpec/FlowSpec_Dbase.h:
        * examples/QOS/Change_Sender_TSpec/Fill_ACE_QoS.h:
        * examples/QOS/Change_Sender_TSpec/Fill_ACE_QoS.cpp:
        * examples/QOS/Change_Sender_TSpec/README:
        * examples/QOS/Change_Sender_TSpec/Makefile:

          Added a test to dynamically change the Sender flow spec in
          order to continuously change the PATH messages.

        * examples/QOS/Change_Receiver_FlowSpec/receiver.cpp:
        * examples/QOS/Change_Receiver_FlowSpec/receiver.dsp:
        * examples/QOS/Change_Receiver_FlowSpec/sender.cpp:
        * examples/QOS/Change_Receiver_FlowSpec/sender.dsp:
        * examples/QOS/Change_Receiver_FlowSpec/Sender_QoS_Event_Handler.h:
        * examples/QOS/Change_Receiver_FlowSpec/Sender_QoS_Event_Handler.cpp:
        * examples/QOS/Change_Receiver_FlowSpec/Receiver_QoS_Event_Handler.h:
        * examples/QOS/Change_Receiver_FlowSpec/Receiver_QoS_Event_Handler.cpp:
        * examples/QOS/Change_Receiver_FlowSpec/QoS_Util.h:
        * examples/QOS/Change_Receiver_FlowSpec/QoS_Util.cpp:
        * examples/QOS/Change_Receiver_FlowSpec/QoS_Signal_Handler.h:
        * examples/QOS/Change_Receiver_FlowSpec/QoS_Signal_Handler.cpp:
        * examples/QOS/Change_Receiver_FlowSpec/FlowSpec_Dbase.h:
        * examples/QOS/Change_Receiver_FlowSpec/Fill_ACE_QoS.h:
        * examples/QOS/Change_Receiver_FlowSpec/Fill_ACE_QoS.cpp:
        * examples/QOS/Change_Receiver_FlowSpec/README:
        * examples/QOS/Change_Receiver_FlowSpec/Makefile:

          Added a test to dynamically change the Receiver flow spec in
          order to continuously change the RESV messages.

        * examples/QOS/Simple/receiver.cpp:
        * examples/QOS/Simple/receiver.dsp:
        * examples/QOS/Simple/sender.cpp:
        * examples/QOS/Simple/sender.dsp:
        * examples/QOS/Simple/Sender_QoS_Event_Handler.h:
        * examples/QOS/Simple/Sender_QoS_Event_Handler.cpp:
        * examples/QOS/Simple/Receiver_QoS_Event_Handler.h:
        * examples/QOS/Simple/Receiver_QoS_Event_Handler.cpp:
        * examples/QOS/Simple/QoS_Util.h:
        * examples/QOS/Simple/QoS_Util.cpp:
        * examples/QOS/Simple/QoS_Signal_Handler.h:
        * examples/QOS/Simple/QoS_Signal_Handler.cpp:
        * examples/QOS/Simple/FlowSpec_Dbase.h:
        * examples/QOS/Simple/Fill_ACE_QoS.h:
        * examples/QOS/Simple/Fill_ACE_QoS.cpp:
        * examples/QOS/Simple/README:
        * examples/QOS/Simple/Makefile:

          Moved the original QOS example to Simple.

        * examples/QOS/Makefile:
        * examples/QOS/QOS.dsw:

          Updated the Makefile to compile the constituent tests.

Mon Apr  9 18:48:02 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * include/makeinclude/Makefile.rtems: Zapped

          export RTEMS_MAKEFILE_PATH=/opt/rtems/sparc-rtems/erc32/

          so that the environment variable is obtained from the users
          environment.  Thanks to Joel Sherrill <joel@OARcorp.com> for
          this fix.

        * ace/Log_Msg.h: Only define the ACE_ASSERT macro if it's not
          already defined.  This make it easy for developers to override
          this macro in their config.h file.  Thanks to Nathalie D'Amours
          <nathalie@stentor.com> for motivating this change.

Mon Apr  9 15:36:04 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/High_Res_Timer.cpp:
          Use the 'cpu MHz' line from /proc/cpuinfo in favor of the
          'bogomips' line, because the latter gives the wrong number on
          multi-CPU boxes.

Mon Apr  9 14:37:30 2001  Chad Elliott  <elliott_c@ociweb.com>

        * examples/IPC_SAP/SOCK_SAP/CPP-memclient.cpp:

          Removed extraneous template instantiations.

Mon Apr 09 09:19:37 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/SString.cpp:
          Fixed Fuzz error

Mon Apr  9 08:28:47 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/SString.{h,i,cpp}: Added improved support for ACE_WString:
          . The magic number 32 has been changed to ACE_DEFAULT_GROWSIZE.
          . ACE_WString only allocates memory when it is needed.
          . The grow strategy can be modified by setting the ACE_GROW_LINEAR define.
            the string does not double the memory then, but increases the memory by
            ACE_DEFAULT_GROWSIZE.
          Thanks to Eric Zuur <Eric.Zuur@meco.nl> for contributing these
          enhancements.

        * ace/High_Res_Timer.cpp (get_cpuinfo): Added support for the Pentium
          III and IV.  Thanks to Stephane Pion
          <PION_Stephane@stna.dgac.fr> for contributing this fix.

Mon Apr  9 07:50:08 2001  Chad Elliott  <elliott_c@ociweb.com>

        * examples/IPC_SAP/SOCK_SAP/CPP-memclient.cpp:
        * examples/IPC_SAP/SOCK_SAP/Makefile:
          Fixed a typo in the Makefile and added "CPP-inclient.h" include to
          CPP-memclient.cpp.

Mon Apr  9 07:42:29 2001  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Basic_Types.cpp:
          Changed format flags from ios::fmtflags to unsigned long.
          This typedef is not supported by all platforms.  Thanks Carlos
          <coryan@uci.edu> for suggesting this change.

Mon Apr 09 08:08:11 2001  Johnny Willemsen <jwillemsen@remedy.nl>

        * ace/Timer_Queue_T.h
          Declared private copy constructor and assignment operator
          for class ACE_Event_Handler_Handle_Timeout_Upcall

Sun Apr 08 18:55:58 2001  Carlos O'Ryan  <coryan@uci.edu>

        * tests/DLL_Test.cpp:
          Use ACE::ldname() instead of keeping a local function to
          decorate the name.
          Use the "d" suffix only on MSVC debug builds.

        * tests/Makefile.bor:
        * tests/DLL_Test.bor:
          New Borland Makefile for the shared library in DLL_Test.  Thanks
          to Christopher Kohlhoff  <chris@kohlhoff.com> for providing the
          patches.

        * tests/run_test.pl:
          Add ExeSubDir to the path, required in Borland builds to find
          the shared libraries created locally.

Sun Apr  8 13:12:54 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/SString.cpp: Reordered various constructor initializers so
          G++ doesn't complain.  Thanks to Bala for reporting this.

        * ace/SString.{h,i,cpp}: Added various optimizations to ACE_WString
          so it will perform certain operations as efficiently as
          ACE_CString.  Thanks to Eric Zuur <Eric.Zuur@meco.nl> for
          contributing these enhancements.

Sun Apr 08 12:10:30 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/IPC_SAP/SOCK_SAP/CPP-memclient.cpp:
        * examples/IPC_SAP/SOCK_SAP/CPP-memserver.cpp:
        * examples/IPC_SAP/SOCK_SAP/Makefile: Updated obsolete
          shared-memory transport functions.

Sun Apr  8 09:49:26 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * bin: Added a new shell script called "make-components" that enables
          each ACE component to be built in a simple manner using the
          following change from Arturo.

        * ace/Makefile: Generalized the libACE.a and libACE.$(SOEXT) targets
          to simplify subsettings.  Thanks to Arturo Montes
          <mitosys@colomsat.net.co> for reporting this.

Sat Apr  7 16:00:48 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * tests: Added a new rtems_init.c file.  Thanks to Joel Sherrill
          <joel@OARcorp.com> for contributing this port.

        * include/makeinclude: Added the new platform_rtems.x_g++.GNU file.
        * ace: Added the new config-rtems.h file.

        * ace/OS.cpp: Added support for RTEMS, which is an open-source
          real-time operating system that can be downloaded from
          ftp://ftp.oarcorp.com/pub/rtems.  Thanks to Joel Sherrill
          <joel@OARcorp.com> for contributing this port.

        * ace/OS.cpp: The return type for ACE_OS::readv_emulation()
          should have been ssize_t, not int, to be consistent with its
          definition in the header file.  Thanks to Joel Sherrill
          <joel@OARcorp.com> for reporting this.

Sat Apr  7 21:16:49 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_run_tests.lst:
          Add the new Crash_On_Write and MT_Timeout tests to the nightly
          builds.

Fri Apr  6 21:02:05 2001  Carlos O'Ryan  <coryan@uci.edu>

        * examples/Synch/proc_sema.cpp:
          Add missing #include for "ace/Log_Msg.h", on platforms that
          define ACE_TEMPLATES_REQUIRE_SOURCE this include is magically
          obtained, but this is not the case for SunCC 4.2, and
          True64/CXX.

Fri Apr 06 16:22:24 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/SString.h (ACE_Tokenizer): Updated documentation and added
          some examples.  Thanks to Jody Hagins <jody@atdesk.com> for
          providing the original example.

Fri Apr  6 17:11:34 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/auto_run_tests.lst: Added the Single_Read test to the
          nightly build list.

Fri Apr  6 14:45:52 2001  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Basic_Types.h:
        * ace/Basic_Types.cpp:
          Changed the as_string() method to avoid using floor() which
          required math.h and ACE_CString which caused unnecessary coupling.

Fri Apr  6 08:34:15 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/make_pretty.pl:
          Do no give out warnings for the 'nocompatwarnings' option in
          HP-UX.

Fri Apr  6 08:23:02 2001  Chad Elliott  <elliott_c@ociweb.com>

        * ace/Basic_Types.cpp:
        * ace/Basic_Types.h:
        * tests/Process_Strategy_Test.cpp:
        * examples/Connection/misc/Connection_Handler.cpp:
          Remove build warnings for platforms that don't support unsigned
          long long types and have unsigned char's.

Fri Apr  6 02:02:01 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h:
        * ace/OS.i: The implementation for process semaphore on platforms
          lacking named POSIX semaphores was broken.  On these platforms,
          semaphores are allocated in MMAP file so they should never be
          deleted.  Added a flag <new_sema_> to remember if a semaphore
          can be deleted (USYNC_THREAD) or not (USYNC_PROCESS).

        * ace/config-sunos5.6.h: According to the man pages, SunOS started
          supporting POSIX semaphores from 5.6.  Defined ACE_HAS_POSIX_SEM
          and ACE_LACKS_NAMED_POSIX_SEM.

Thu Apr  5 11:23:05 2001  Carlos O'Ryan  <coryan@uci.edu>

        * html/index.html:
          Add link to the new QoS library documentation.

Thu Apr 05 03:26:13 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/Makefile:
        * examples/Synch/Makefile:
        * examples/Synch/README:
        * examples/Synch/Synch.dsw:
        * examples/Synch/proc_sema.cpp:
        * examples/Synch/proc_sema.dsp: Added a new example to play with
          process semaphores.

Thu Apr 05 02:48:51 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/MEM_IO.cpp (write): My earlier change was causing the test
          to crash.

        * ace/MEM_Stream.h:
        * ace/MEM_Stream.i:
        * ace/MEM_Stream.cpp: Added a new method to inform the stream to
          clean up its resources when closing down.

        * tests/MEM_Stream_Test.cpp (handle_close): Handle_close should
          only inform it's peer to destroy the mmap file instead of
          removing the file itself.

Wed Apr  4 16:21:13 2001  Darrell Brunsch <brunsch@uci.edu>

        * bin/auto_run_tests.lst:

          Added the ImplRepo tests.

Wed Apr  4 12:13:52 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/MEM_IO.h: Declared ACE_INLINE_FOR_GNUC for
          ACE_MT_MEM_IO::Simple_Queue's constructor to eliminate a bogus
          warning reported by vxworks' gcc compiler.

Wed Apr 04 07:47:48 2001  Craig Rodrigues <crodrigu@bbn.com>

        * etc/ace_qos.doxygen:
        * bin/generate_doxygen.pl:
          Generate doxygen documentation for ACE QoS API

Tue Apr 03 19:55:26 2001  Steve Huston  <shuston@riverace.com>

        * bin/auto_compile: Added a -make_type option - the argument to
          the option is the suffix of Makefile to use. Example:
          -make_type vac  would use Makefile.vac instead of Makefile
          when building.

        * bin/make_pretty.pl: Corrected tests for AIX errors/warnings.

        * ace/ace.icp: (new) Visual Age C++ 5 project file for libACE.

        * ace/ace.icc: (new) Visual Age C++ 5 configuration file for
          libACE. Replaces ace-dll.icc. It will eventually have the
          stuff added to make debug/optimize as well as subsets.

        * ace/ace_vacpp_options.icc: Visual Age C++ file for setting ACE
          build options.

        * ace/Makefile.vac: Makefile to build libACE using the Visual
          Age C++ 5 incremental compiler. It only has "all" and "realclean"
          targets, and uses vacbld_r to do the build.

        * tests/tests.icp: Visual Age C++ 5 Project file for making all the
          tests.

        * tests/Makefile.vac: Makefile to drive vacbld_r for Visual Age C++.

        * tests/Config_Test.icc:
        * tests/Dirent_Test.icc:
        * tests/Logging_Strategy_Test.icc:
        * tests/MEM_Stream_Test.icc:
        * tests/Message_Queue_Test_Ex.icc:
        * tests/OS_Test.icc:
             New files for building tests with Visual Age C++.

        * tests/libDLL_Test.icc: Changed to use up-to-date source file.

Tue Apr 03 13:45:02 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/MEM_IO.cpp: Fixed mismatched ACE_TRACE messages.  Thanks to
          the all mighty fuzzmasterd for reporting this.

Tue Apr  3 11:40:42 2001  Priyanka Gontla  <pgontla@ece.uci.edu>

        * examples/IPC_SAP/SSL_SAP/dummy.pem:
        * examples/IPC_SAP/SSL_SAP/key.pem:
          The previous certificates expired. So, generated them
          again.

Tue Apr 03 09:30:10 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/MEM_IO.cpp (write): Fixed a compilation error for Borland
          compiler.  Thanks to Johnny Willensen for reporting this.

Mon Apr 02 23:41:34 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/MEM_SAP.cpp:
        * ace/MEM_SAP.h:
        * ace/MEM_SAP.i:
          Generalized the ACE_MEM_SAP class to allocate memory in the new
          memory wrapper class ACE_MEM_SAP_Node.

        * ace/MEM_IO.cpp:
        * ace/MEM_IO.h:
        * ace/MEM_IO.i:
          Separated the different signaling mechanisms into a different
          class in ACE_MEM_IO so it can determine the "right" signaling
          strategy allowed.  Currently, we implement the Reactive strategy
          (ACE_Reactive_MEM_IO) which uses sockets for signaling and
          multithreaded strategy (ACE_MT_MEM_IO) which uses semaphores for
          signaling.

        * ace/MEM_Stream.cpp:
          Sending an empty buffer over to wake up the "other" end when we
          are closing down.

        * ace/MEM_Acceptor.cpp:
        * ace/MEM_Acceptor.h:
        * ace/MEM_Acceptor.i:
        * ace/MEM_Connector.cpp:
        * ace/MEM_Connector.h:
        * ace/MEM_Connector.i: Added facility to specify the "preferred"
          signaling strategy so the acceptor and connector can negociate
          and agree on the best signaling mechanism to use.

        * ace/MEM_Stream_Test.h:
        * ace/MEM_Stream_Test.cpp:
          Added the test for the new MT signaling MEM_Stream transfer.
          This part of the test seems to be failing on system that depends
          on SysV semaphores (because we need more semaphore than the
          system can provide.)

Mon Apr  2 15:17:13 2001  Chad Elliott  <elliott_c@ociweb.com>

        * ace/config-chorus.h:

          Chorus 4.x supports unsigned long long's.

Mon Apr  2 14:23:31 2001  Craig Rodrigues <crodrigu@bbn.com>

        * ace/Makefile:
            only build QoS directory under UNIX if rapi is installed
        * ace/QoS/README:
            add installation instructions and GQOS/RAPI information

Mon Apr  2 09:57:31 2001  Darrell Brunsch <brunsch@uci.edu>

        * bin/PerlACE/MSProject.pm:

          Made a change to the tao_idl depencency checking.
          It was only checking for tao_idl and $(InputName) where
          some places we use $(InputPath) instead.

        * ace/config-win32-msvc-5.h:
        * ace/config-win32-msvc-6.h:

          Disabled the Inheritance by Dominance informational
          warning that MSVC gives.  We have cases of this all over
          the place, and normally we just disable the warning on
          a file by file basis, but now we just do a blanket disable.

Mon Apr  2 08:45:24 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/nightlybuilds/builds.lst:
          Renamed the Debian_Full_WU build, its most important feature is
          not that it is at WashU nor that it enables most components.  It
          is the fact that interceptors are disabled on its configuration.

Sun Apr  1 17:20:22 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/INET_Addr.h:

          Added /**/ around for the inclusion of inetLib.h, since some
          MS compilers pick this up in dependency generation.

        * bin/PerlACE/MSProject.pm:

          Used \Q\E around the library names when matching, otherwise
          the backslashes were interpreted as escaping, and weird
          unicode errors popped up.

        * bin/pippen.pl:

          Pippen was being case sensitive, so tao.lib was different
          than TAO.lib.  Changes to store only lowercase.

Sat Mar 31 10:16:01 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ACE-INSTALL.html:
          Removed broken link, the web page does not exist anymore. Thanks
          to John R. Ashmun <john.ashmun@esca.com> for pointing this out.
          This fixes [BUGID:833]

Fri Mar 30 14:08:18 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * performance-tests/TTCP/C/new-ttcp.cpp:
        * performance-tests/TTCP/ACE-C++/wrapper-new-ttcp.cpp:
          Zapped the gettimeofday() method since it didn't seem to be
          used.  Also, #include "ace/Log_Msg.h".  Thanks to Thomas Groth
          <groth.th@nord-com.net> for reporting this.

        * ace/OS.h: Changed all the ACE_DEFAULT_* default ports of the
          various services to start with 200xx rather than 100xx to avoid
          conflicts on AIX, which apparently hijacks port 10002 for
          various things.  Thanks to David Sperry
          <sperryd@res.raytheon.com> for reporting this.

Sat Mar 31 02:06:09 2001  Christopher Kohlhoff  <chris@kohlhoff.com>

        * ace/config-win32-borland.h:
        * include/makeinclude/ace_flags.bor:
          Fixed up use of inline functions in DEBUG build.

        * include/makeinclude/ace_flags.bor:
          Added macros for the TAO_BiDirGIOP and TAO_TypeCodeFactory
          libraries.

Fri Mar 30 11:17:39 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/fuzz.pl:
          Add a couple of TODO entries

        * html/index.html:
          Add the Audio/Video Streaming service to the index file.

Fri Mar 30 11:12:53 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/*/Makefile:
        * apps/*/Makefile:
        * docs/*/Makefile:
        * examples/*/Makefile:
        * netsvcs/*/Makefile:
        * performance-tests/*/Makefile:
        * tests/*/Makefile:
        * websvcs/*/Makefile:
        * ASNMP/*/Makefile:
          Regenerate dependencies.

Fri Mar 30 08:15:26 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/QoS/QoS_Session.h:
          Add #include for ACE_QoS_Export

Fri Mar 30 07:31:54 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/QoS/QoS_Session.h:
          Fixed export macro

Thu Mar 29 20:14:00 2001  Craig Rodrigues <crodrigu@bbn.com>

        * ace/SOCK.h:
           Remove include of QoS_Session.h, since it is not used here.

Thu Mar 29 19:48:00 2001  Craig Rodrigues <crodrigu@bbn.com>

        * ace/QoS_Session.h:
        * ace/QoS/QoS_Manager.h:
        * ace/QoS/QoS_Session_Impl.h:
        * ace/QoS/QoS_Session_Factory.h:
        * examples/QOS/QoS_Signal_Handler.h:
        * examples/QOS/Receiver_QoS_Event_Handler.h:
        * examples/QOS/client.cpp:
        * examples/QOS/QoS_Util.h:
        * examples/QOS/Sender_QoS_Event_Handler.h:
        * examples/QOS/server.cpp:
        * examples/QOS/Makefile:

          Move QoS_Session.h to the ace/QoS directory.

Thu Mar 29 19:12:38 2001  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/rules.lib.GNU: AIX-specific changes to
          build shared libraries by making a shared shr.o file and putting
          that into an archive. Seems weird, but that's the way AIX does
          things. This makes ACE consistent with other AIX software.

        * include/makeinclude/platform_aix4_cset++.GNU: Made some changes
          to attempt to work with the new scheme for shared lib creation on
          AIX. Did not test it, and don't plan to. The CSet++ compiler is not
          supported by IBM any longer, and Riverace is not supporting ACE
          with it. If someone out there sends patches for this, I'll put
          them in, but this file is going away after ACE 5.2 is released.
          All uses of IBM-supported compilers (IBM C/C++ and Visual Age C++
          in batch mode) should be with the platform_aix_ibm.GNU file.

Thu Mar 29 16:16:07 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Token.cpp (renew): A conditional expression used an && rather
          and ||, which was causing problems with ACE_Token.  Thanks to
          Carsten Madsen <com@navicon.dk> for reporting this.

        * ace/Message_Queue_T.cpp: If any of the various ACE_Message_Queue_Ex
          enqueue*() methods fail then make sure to release the message
          blocks!  Thanks to Boris Kolpackov <bosk@ipmce.ru> for reporting
          this.

Wed Mar 28 21:39:26 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/NT_Service.h:

          Changed the ACE_NT_SERVICE macros to use ACE_TEXT_* API
          calls for those that can take in unicode strings.

        * examples/NT_Service/main.cpp:

          Fixed use of ACE_NT_SERVICE to work with ACE_USES_WCHAR.

        * examples/OS/Process/process.cpp:
        * examples/Reactor/WFMO_Reactor/test_directory_changes.cpp:

          Changed some Win32 API calls to use ACE_TEXT_* equivalents.

        * ace/ace_wchar.h:

          Added all the ACE_TEXT_* API macros needed above.

          Thanks to Nick Pratt <npratt@microstrategy.com> for
          reporting the first of these errors.

Wed Mar 28 22:07:03 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/tests.dsw: Fixed project dependencies between DLL_Test and
          DLL_Test_Impl.  Thanks to Alain Decamps <Alain.Decamps@PIDPA.be>
          for reporting this.

Wed Mar 28 20:33:28 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/ACE.cpp: Further improved the implementation of
          handle_ready() by simply calling poll() with the timeout
          pointer.  Thanks to Przemyslaw Marciniak <pmarciniak@lucent.com>
          for reporting this.

Wed Mar 28 17:45:22 2001  Steve Huston  <shuston@riverace.com>

        * bin/make_pretty.pl: Adjust the error detector for IBM C/C++ 3.6.6.

        * ace/Containers_T.cpp: Add #include "ace/Log_Msg.h" so IBM C/C++
          can see ACE_DEBUG when compiling template instantiations.

Wed Mar 28 16:40:24 2001  Luther Baker  <luther@cs.wustl.edu>

        * ace/config-all.h

          Removed ACE_WIN32 support for ACE_HAS_POSIX_SEM just because
          ACE_HAS_PACE. This can be defined for ACE_WIN32 after we
          write more WIN32 emulation.

        * ace/OS.h
        * ace/OS.i
        * ace/OS.cpp

          PACE updates.

Wed Mar 28 11:37:09 2001  Fuzz Master D <brunsch@uci.edu>

        * bin/fuzz.pl:

          There are several instances where fuzz gives false
          positives, and the code is impossible to fix without
          creating compiler warnings.  Example:

          void function (CORBA::Environment &ACE_TRY_ENV)
          {
          #if FOO
              some_other_function (ACE_TRY_ENV);
              ACE_CHECK;
          #else
              ACE_UNUSED_ARG (ACE_TRY_ENV);
          #endif
          }

          So normally ACE_UNUSED_ARG errors can be fixed by keeping
          the CORBA::ENvironment unnamed and removing the ACE_UNUSED_ARG,
          but in this case it isn't possible.  So fuzz now accepts
          an ignore command for single line use.  The above can be fixed
          by changing to:

          void function (CORBA::Environment &ACE_TRY_ENV)
          {
          #if FOO
              some_other_function (ACE_TRY_ENV);
              ACE_CHECK;
          #else
              ACE_UNUSED_ARG (ACE_TRY_ENV); // FUZZ: ignore check_for_ace_check
          #endif
          }

Tue Mar 28 13:03:07 2001  Chad Elliott  <elliott_c@ociweb.com>

        * bin/make_pretty.pl:
          Modification to recognize HP's future errors as warnings.

Wed Mar 28 11:34:54 2001  Frank Hunleth <fhunleth@cs.wustl.edu>

        * ace/CDR_Base.inl:
          Removed memset in ACE_CDR::mb_align when ACE_HAS_PURIFY ==
          1, since it was causing some TAO unit tests to break (in
          particular, the Portable_Interceptors/Service_Context_Manipulation
          test).  After running Cubit and a few other tests, Purify didn't
          notice any more uninitialized memory accesses.  Fixes bug #828.

Wed Mar 28 11:55:39 2001  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_aix_ibm.GNU: New file, replaces
          platform_aix_vacpp.GNU for Visual Age C++ 5. Also replaces
          use of platform_aix4_cset++.GNU for IBM C/C++ Compilers 3.6.6.
          So, for the supported, IBM-supplied compilers (IBM C/C++ 3.6.6
          and Visual Age C++ 5) use this file. If you want to try to keep
          using CSet++ 3.4 or earlier, you can keep using
          platform_aix4_cset++.GNU, but it's not tested any longer and
          will disappear at the next ACE version. If you want to use
          Visual Age C++ 4, you should reconsider, and upgrade to version 5.

        * include/makeinclude/platform_aix_vacpp.GNU: Deleted.

        * netsvcs/lib/TS_Clerk_Handler.h: Moved #include "ace/Connector.h"
          to be after #include "ace/SOCK_Connector.h" to fix compile error
          on AIX, Visual Age C++ 5.

        * ace/config-aix-4.x.h: Clarified comments that this file is for
          Visual Age C++ also. Added ACE_DLL_SUFFIX ".a" to match what
          is now generated from platform_aix_ibm.GNU.

        * bin/auto_compile:
        * bin/make_pretty.pl: Add detection of compile/link warnings and
          errors for AIX using the IBM compilers' code. Ignores the multiply
          defined symbol warnings from ld if it's an ACE symbol.

        * docs/ACE-development-process.html: Changed to link to Bugzilla so
          it works from anywhere.

Wed Mar 28 10:13:16 2001  Steve Huston  <shuston@riverace.com>

        * ace/Makefile.bor: Don't try to build the SSL directory if
          SSL_ROOT is not set.

Wed Mar 28 08:39:26 2001  Carlos O'Ryan  <coryan@uci.edu>

        * etc/tao_av.doxygen:
          New configuration file for the AV streaming service.  Many
          thanks to Craig Rodrigues <crodrigu@bbn.com> for converting that
          directory.

        * bin/generate_doxygen.pl:
          Add the new configuration file.

Tue Mar 27 19:54:11 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_run_tests.lst:
          Disable POA/On_Demand_Loading and POA/Loader for Linux/KCC
          builds, because that compiler has problems with destructors
          after dynamic loading.
          Also add the new Hello test to the nightly regression tests.

Tue Mar 27 19:43:39 2001  Carlos O'Ryan  <coryan@uci.edu>

        * include/makeinclude/platform_linux.GNU:
          Add support for Insure++

        * include/makeinclude/rules.local.GNU:
          Add new macro to let developers change the default destination
          for the dependencies.

        * include/makeinclude/wrapper_macros.GNU:
          Let the user override the default VDIR directory, and define the
          default values for the IDL generated code extensions.

          Thanks to Jody Hagins <jody@atdesk.com> for all these
          improvements.

Tue Mar 27 19:15:36 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Unbounded_Queue.h:
          Add required #include for Chorus builds.

Tue Mar 27 15:28:56 2001  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/ACE.cpp (handle_ready): Don't try to dereference through
          a NULL timeout pointer!  Thanks to Przemyslaw Marciniak
          <pmarciniak@lucent.com> for reporting this.

Tue Mar 27 10:08:44 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Select_Reactor_Base.h:
          Add missing #include for builds that define
          ACE_HAS_REACTOR_NOTIFICATION_QUEUE.

Tue Mar 27 05:35:38 2001  Christopher Kohlhoff <chris@kohlhoff.com>

        * include/makeinclude/make_flags.bor:
          Prevent PASCAL build by default with BCB5 since it is not
          required. Since both VCL and non-VCL applications share a common
          run-time library you can simply link your VCL code with a
          non-PASCAL build of the ACE+TAO libraries. This behaviour can be
          overridden by defining the FORCE_PASCAL flag.

        * include/makeinclude/build_core_exe.bor:
        * include/makeinclude/build_core_library.bor:
        * include/makeinclude/build_dll.bor:
        * include/makeinclude/build_exe.bor:
        * include/makeinclude/build_lib.bor:
        * include/makeinclude/clean.bor:
        Build all executables into a directory below the source directory.
        Core executables are then copied to the common bin directory. This
        is to allow the test scripts to assume all executables can be
        found relative to the source directory.

        * include/makeinclude/recurse.bor:
        Removed definition of OBJFILES since Borland make doesn't seem to
        support recursive macro expansion.

        * ace/config-win32-borland.h:
        * include/makeinclude/ace_flags.bor:
        Always explicitly define __ACE_INLINE__, with it defaulting to 1.
        This change will allow the same compiler flags to be used in user
        applications regardless of whether a debug or non-debug build of
        ACE is being used.

Tue Mar 27 09:48:33 2001  Johnny Willemsen <jwillemsen@remedy.nl>

        * include/makeinclude/ace_flags.bor
        Corrected the smartproxies_cflags

        * examples/IPC_SAP
        Added new BCB makefiles for these examples

        * ace/Timer_Hash_T.cpp
        * ace/Timer_Hash_T.h
        * ace/Timer_Heap_T.cpp
        * ace/Timer_Heap_T.h
        * ace/Timer_List_T.cpp
        * ace/Timer_List_T.h
        * ace/Timer_Wheel_T.cpp
        * ace/Timer_Wheel_T.h
        Made the isdone method on the iterator classes constant

        * ace/Timer_Queue_T.h
        * ace/Timer_Queue_T.i
        Several get methods are now const
        Argument of set_timer_value and set_interval is now passed by const reference

        * ace/Unbounded_Set.h
        * ace/Unbounded_Set.cpp
        * tests/Collection_Test.cpp
        Added the ACE_Unbounded_Set_Const_Iterator which can be used
        to iterate over an const set

Mon Mar 26 21:02:24 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/Log_Msg_NT_Event_Log.cpp:

          Fixed a compilation problem with RegSetValueEx when
          ACE_USES_WCHAR and UNICODE were defined.  Thanks to Nick
          Pratt <npratt@microstrategy.com> for reporting this.

        * ace/ace_dll.dsp:

          Unchecked the "separate types" option for debug linking.
          Thanks to Nick Pratt for this suggestion also.

Mon Mar 26 13:00:37 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Node.h:
        * ace/Node.cpp:
        * ace/Array_Base.h:
        * ace/Array_Base.inl:
        * ace/Array_Base.cpp:
        * ace/Unbounded_Queue.h:
        * ace/Unbounded_Queue.inl:
        * ace/Unbounded_Queue.cpp:
        * ace/Unbounded_Set.h:
        * ace/Unbounded_Set.inl:
        * ace/Unbounded_Set.cpp:
        * ace/Containers_T.h:
        * ace/Containers_T.i:
        * ace/Containers_T.cpp:
          Move several containers to their own file.  This reduces the
          amount of code that needs to be parsed, improving compilation
          time (not to mention the fact that the code becomes more
          readable.)
          For backwards compatibility the Containers file still includes
          the new smaller files.

        * ace/Makefile:
        * ace/Makefile.am:
        * ace/Makefile.bor:
          Add new files to the install rules.
          Since they are templates they do not need to be compiled on MSVC
          so no changes to the project files are required.

        * ace/ARGV.h:
        * ace/ARGV.cpp:
        * ace/Future.h:
        * ace/Handle_Gobbler.h:
        * ace/Local_Name_Space.h:
        * ace/Malloc_Base.h:
        * ace/Memory_Pool.h:
        * ace/Name_Space.h:
        * ace/Priority_Reactor.h:
        * ace/Remote_Name_Space.h:
        * ace/Service_Config.h:
        * ace/Signal.cpp:
        * ace/Signal.h:
        * ace/Stats.h:
        * ace/Thread_Manager.h:
        * ace/Timeprobe_T.h:
        * ace/Timer_Heap_T.h:
        * ace/Timer_Queue_Adapters.h:
        * ace/TkReactor.cpp:
          To reduce compilation and recompilation times we only include
          the header file that includes the container used in each case,
          instead of the full containers class.

Fri Mar 23 12:40:34 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * apps/Gateway/Gateway/Event_Forwarding_Discriminator.cpp: Make sure
          to delete the Consumer_Dispatch_Set * that we get back from
          unbind().  Thanks to the ever vigilant Mike Winter
          <mwinter@sonic.net> for reporting this.

Thu Mar 22 10:18:24 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/SString.h: Make the various data members protected
          rather than private so subclasses can access them.  Thanks to
          Martin Krumpolec <krumpo@pobox.sk> for this suggestion.

        * tests/README: Clarified some things about the tests.
          Thanks to Eric Desamore <Eric.Desamore@idtv.bull.net> for
          motivating this.

Mon Mar 26 11:03:22 2001  Balachandran  <bala@cs.wustl.edu>

        * ACE version 5.1.14 released.

Sat Mar 24 07:02:35 2001  Chris Cleeland  <cleeland_c@ociweb.com>

        * ace/INET_Addr.i (get_host_addr): Added a const_cast to the
        VxWorks-only arm that casts away const on the this ptr so that
        inet_ntoa_b can access and fill in the buffer data member that's
        used to hold the result from inet_ntoa_b.  Thanks to Erik Johannes
        <ejohannes@oresis.com> for point this out.

Fri Mar 23 18:01:05 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/auto_run_tests.lst: Some of the tests cannot be run in
          Single threaded configurations. Prevented such tests from
          running in the nightly builds.

Fri Mar 23 16:25:18 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/New_Fail_Test.cpp: Reverted the change from "Fri Mar 23
          06:34:33 2001  Balachandran Natarajan  <bala@cs.wustl.edu>". The
          change fails to comipile when exceptions are on.

Fri Mar 23 08:47:29 2001  Carlos O'Ryan  <coryan@uci.edu>

        * apps/Gateway/Gateway/Options.cpp:
          Explicitly #include Log_Msg.h, on platforms that do not define
          ACE_TEMPLATES_REQUIRE_SOURCE the header file is not implicitly
          included.  This should fix compilation problems on Tru64/CXX and
          SunCC/4.2

Fri Mar 23 06:34:33 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/New_Fail_Test.cpp: Fixed a stupid warning in g++,
          No_AMI_Messaging  builds. Surprising that it showed up only in
          this build.

Thu Mar 22 21:33:37 2001  Chris Cleeland  <cleeland_c@ociweb.com>

        * ace/INET_Addr.h: VxWorks' inet_ntoa doesn't behave like most
        others, and our use was causing memory leaks.  VxWorks prefers
        that you use its own inet_ntoa_b, which takes the buffer to fill
        as an argument.  Thus, for VxWorks, added a data member char buf
        of the appropriate length so that get_host_addr can use
        inet_ntoa_b to fill that in.

        * ace/INET_Addr.i (get_host_addr): For VxWorks only, changed this
        to use the preferred inet_ntoa_b.  This eliminate memory leaks
        under VxWorks.  Thanks to Erik Johannes <ejohannes@oresis.com> for
        the suggested fix.

Wed Mar 21 19:20:02 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * apps/Gateway/Peer/Peer.cpp (nonblk_put): Fixed a compile error
          in g++.

Wed Mar 21 17:28:26 2001  Steve Huston  <shuston@riverace.com>

        * ace/Message_Queue.h:
        * ace/Message_Queue_T.h: Moved definition of typedef for
          ACE_DEFAULT_MESSAGE_QUEUE_TYPE from Message_Queue.h to
          Message_Queue_T.h, just after defining ACE_Message_Queue<>.
          Fixes the case where Message_Queue_T.h is included first,
          it includes Message_Queue.h before ACE_Message_Queue<> is
          defined, and that breaks the compile. IBM C/C++ hit this.

Wed Mar 21 16:42:19 2001  Steve Huston  <shuston@riverace.com>

        * bin/auto_compile: Added an option: -notao to ignore the TAO aspects
          of the non-configurable things, like looking at the TAO/ChangeLog.
          Also, now looks for auto_run_tests.lst in the $BUILD/bin directory,
          not the $MODULE/bin directory - this allows some builds to specify
          their own lists.

Wed Mar 21 16:00:56 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

          The followings are contributions from Scott Snyder
          <snyder@fnal.gov> to make ACE happy on Digital UNIX with KCC
          3.4d.

        * include/makeinclude/platform_tru64_kcc.GNU:
        * include/makeinclude/platform_osf1_4.0_kcc.GNU: Added KCCOPTS and
          support for tru64 unix.

        * ace/OS.h: On this platform, we ran into problems with sigwait
          being a macro.  The fix that had been added for this was keyed
          on __DECCXX_VER, so it isn't picked up on this platform.

        * ace/Sock_Connect.cpp: Enum_Interface_Test failed on this
          platform.  The code in Socket_Connect.cpp that implements this
          is conditional on `__unix' being defined.  However, with this
          compiler, we get `unix' and `__unix__' defined, but not
          `__unix'.  Fixed by testing for `__unix__' too.

        * ace/ACE.cpp:  Cache_Conn_Test was failing.  It looks like the
          code in ACE::out_of_handles doesn't have a case to handle osf1.

Wed Mar 21 12:08:35 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

          The followings are contributions from Scott Snyder
          <snyder@fnal.gov> to make ACE happy on IRIX 6.x with KCC 3.4d.

        * include/makeinclude/platform_irix6.x_kcc.GNU:
          Disable the following warings and separate common options into
          $(KCCOPTS).

          280: declaration of a member with the same name as its class Get
          this from <netinet/in.h>.

          608: this pragma must immediately precede a declaration or
          statement Get this from <ucontext.h>.

        * ace/OS.h: Changed to only request RTLD_GROUP and RTLD_NODELETE
          if they are actually available.

        * ace/config-irix6.x-kcc.h: Undefined
          ACE_LACKS_PLACEMENT_OPERATOR_DELETE since KCC actually supports it.

          Config_Test was failing because with the default setup, ace
          tries to locate the shared memory pool at 0x04000000.  But it
          turns out that this is the same address at which irix likes to
          load the KCC shared library, libKCC.so.  So the memory pool ends
          up blowing away all the library code.  Fixed by shifting the
          default base address to 0x05000000 for this configuration.

          OS_Test was failing because on irix, kcc 4.0d miscompiles
          memchr_emulation if +K3 optimization is used.  I worked around
          this by just using the library version of memchr instead:

        * ace/ACE.cpp:  Cached_Conn_Test was failing because the code in
          ACE::out_of_handles doesn't have a case to handle irix.

        * tests/DLL_Test.cpp: It died trying to run object dtors. Fixed by
          turning off the close-on-destruction flag for this test.

Wed Mar 21 13:33:58 2001  Ossama Othman  <ossama@uci.edu>

        * examples/IPC_SAP/SSL_SAP/SSL-server-fancy.cpp:

          Patched this file so that the example actually works.  It now
          correctly interacts with the SSL client in this example.  Thanks
          to Defang Zhou <dzhou@inktomi.com> for contributing the
          patch/changes necessary to make it work.

Wed Mar 21 07:23:15 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * tests/SOCK_Connector_Test.cpp (find_another_host): Make the
          test a bit more resilent against errors with gethostbyname().
          Thanks to Lu Yunhai <luyunhai@huawei.com> for this fix.

Tue Mar 20 17:31:21 2001  Carlos O'Ryan  <coryan@uci.edu>

        * tests/run_test.lst:
          The Logging_Strategy_Test dynamically loads the Logger service
          (from netsvcs), therefore it does not work on static builds.

Tue Mar 20 18:17:24 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/OS.i: Fixed the USYNC_PROCESS arm of CreateMutex() in
          ACE_OS::mutex_init() so that it calls
          ACE_OS::set_errno_to_last_error().  Thanks to Ram Ben-Yakir
          <Ram@bandwiz.com> for reporting this.

Tue Mar 20 01:33:24 2001  Ossama Othman  <ossama@uci.edu>

        * ace/SSL/SSL_SOCK_Acceptor.cpp (ssl_accept):
        * ace/SSL/SSL_SOCK_Connector.cpp (ssl_connect):
        * ace/SSL/SSL_SOCK_Stream.i (send, close):

          Wrap the underlying OpenSSL calls in a do-while(SSL_pending())
          loop.  I decided to wrap the SSL_write() calls just in case.
          This should fix the last of the non-blocking IO issues in ACE's
          SSL wrappers.  [Bug 393]

Tue Mar 20 00:40:43 2001  Ossama Othman  <ossama@uci.edu>

        * ace/SSL/SSL_SOCK_Stream.i (recv):

          Fixed non-blocking IO support for this method.  It was necessary
          to ensure that a full SSL record was read before returning
          control to the caller.  Note that the send() method doesn't need
          modification since OpenSSL always writes a full record before
          returning.  [Bug 393]

Mon Mar 19 19:53:34 2001  Carlos O'Ryan  <coryan@uci.edu>

        * include/makeinclude/ace_flags.bor:
          Define macros for the RT Event Service test library

Mon Mar 19 16:57:43 2001  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/TP_Reactor.cpp (handle_events): Return value from
          handle_events() after the Reactor has been deactivated should be
          -1.  We just need to remember that as illustrated in
          ACE_Reactor::run_reactor_event_loop(), this is not an error:

          if (result == -1 && this->implementation_->deactivated ())
            return 0;

        * tests/Thread_Pool_Reactor_Test.cpp (svr_worker): Changed this
          function to call ACE_Reactor::run_reactor_event_loop() instead
          of ACE_Reactor::handle_events().  In the previous revision, we
          were not handling return values from
          ACE_Reactor::handle_events() correctly when
          ACE_Reactor::deactivated() had been called.

Mon Mar 19 09:14:12 2001  Chad Elliott  <elliott_c@ociweb.com>

        * include/makeinclude/platform_chorus4.x_g++.GNU:

          Added an output option to the link command.  Linking would fail
          in cases where the output was specified in another directory.

Sun Mar 18 22:12:16 2001  Ossama Othman  <ossama@uci.edu>

        * ace/SSL/SSL_SOCK_Stream.i (close):

          Commented out debugging output that was inadvertently committed
          to the repository.

          Don't bother invalidating the handle.  Doing so can potentially
          cause some side-effects in the underlying OpenSSL
          implementation since setting the handle in the SSL_SOCK_Stream
          also causes the OpenSSL SSL_set_fd() function to be called.

          Fixed a socket leak caused by the fact that the handle was
          invalidated before the underlying ACE_SOCK_Stream was closed.

Sun Mar 18 09:46:47 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/New_Fail_Test.cpp: Fixed warnings in g++.

Sun Mar 18 08:31:34 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * apps/Gateway/Gateway,
        * apps/Gateway/Peer: Added a number of fixes to the Gateway and Peer
          applications.  Thanks to Lu Yunhai <luyunhai@huawei.com> for
          contributing these.

Sun Mar 18 08:31:34 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * examples/IPC_SAP/FILE_SAP/client.cpp (main): Added a couple of
          casts so that the arguments passed to printf() will match the
          format specifier types.

Sat Mar 17 18:02:28 2001  Steve Huston  <shuston@riverace.com>

        * ace/config-aix-4.x.h: Fixed settings for exceptions and
          placement delete to be ok for Visual Age C++ 5.

        * include/makeinclude/platform_aix_vacpp.GNU: Basically new,
          works with the Visual Age C++ 5 batch mode build on AIX.

        * include/makeinclude/rules.lib.GNU: Added aix_build piece to
          the section for linking a shared library. It uses the linker
          to generate a shr.o (shared) file, then inserts that into
          the library that's being built. This new section is only
          used with platform_aix_vacpp.GNU at this point.

Fri Mar 16 15:07:23 2001  Ossama Othman  <ossama@uci.edu>

        * ace/SSL/SSL_Context.h (set_mode):

          Changed the default mode from SSLv3 to SSLv23, i.e. support
          SSLv2 and SSLv3 by default.  This fixes interoperability
          with applications that use Sun's JSSE, which only supports
          SSLv2.  Thanks to Max Khon <fjoe@newst.net> for providing the
          patch.

Thu Mar 15 17:47:28 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/Log_Msg_Test.cpp: Changed a ERROR message as a DEBUG
          message. If it is an error message the scripts that run the
          build gets confused.

Thu Mar 15 17:42:54 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/Logging_Strategy_Test.cpp: Changed the "-s" option in the
          test to write the output in to the output generated in the "log"
          directory. This is just a hack to make the scoreboard clean.

Thu Mar 15 15:55:37 2001  Steve Huston  <shuston@riverace.com>

        * ace/Message_Queue_T.h: Add #include "ace/Message_Queue.h" so
          IBM Visual Age C++ sees ACE_Message_Queue_Base when instantiating
          templates.

        * ace/ace-dll.icc: Fixed after being munged in a previous commit.
          Also, corrected libACE.a generation and cleanup, and incorporated
          fixes from Steve Ige <steve.ige@reuters.com> and Jerry
          Odenwelder <jerryo@atl.fundtech.com>.

        * THANKS: Added Steve Ige to the Hall of Fame.

Thu Mar 15 11:26:35 2001  Ossama Othman  <ossama@uci.edu>

        * ace/SSL/SSL_SOCK_Acceptor.i (ACE_SSL_SOCK_Acceptor):

          Make sure the handle is set for the ACE_SSL_SOCK_Acceptor, after
          initializing the underlying ACE_SOCK_Acceptor.  This ensures
          that OpenSSL has the proper handle.  Thanks to Greg McCain
          <greg.mccain@veritas.com> for suggesting this fix.

        * THANKS:
          Added Greg to the hall of the fame.

Thu Mar 15 05:46:59 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/FILE_Addr.cpp (ACE_FILE_Addr): Make sure to divide the size of
          the filename_ by the sizeof (ACE_TCHAR) to handle unicode
          correctly.  Thanks to the ever vigilant Ivan Murphy for catching
          this!

Wed Mar 14 01:47:10 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * apps/Gateway/Gateway/Makefile:
        * apps/Gateway/Peer/Makefile:
        * apps/JAWS/server/Makefile:
        * apps/gperf/tests/Makefile:
        * examples/ASX/CCM_App/Makefile:
        * examples/Service_Configurator/IPC-tests/server/Makefile:
        * examples/Service_Configurator/Misc/Makefile:
        * examples/Timer_Queue/Makefile:
        * netsvcs/clients/Naming/Client/Makefile:
        * netsvcs/clients/Naming/Dump_Restore/Makefile:  Removed
          unnecessary 'LIBS += $(ACELIB)'.  They were causing link problem
          for the latest KCC. compiner.

Tue Mar 13 20:56:10 2001  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/WFMO_Reactor.cpp (remove_to_be_added_handler_i):
        * ace/WFMO_Reactor.cpp (remove_suspended_handler_i):
        * ace/WFMO_Reactor.cpp (remove_handler_i):

          If a user tried to (a) remove a "to be suspended handle" from
          either the current info set or the to be added set, the handle
          was correctly removed but the "to be suspended handle" count was
          not reduced; (b) remove a "to be resumed handle" from the
          suspended set, the handle was correctly removed but the "to be
          resumed handle" count was not reduced.  Since the "to be resumed
          handle" and the "to be suspended handle" were not adjusted
          properly, the reactor kept waking up thinking that changes were
          required. Thanks to Lu Yunhai <luyunhai@huawei.com> for
          reporting this problem.

        * examples/Reactor/WFMO_Reactor/test_suspended_removals.cpp: Added
          an extensive example for regression testing the above use cases.

Tue Mar 13 15:23:04 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Manager.cpp (list_services): Fixed Unicode bugs.

Tue Mar 13 15:13:48 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/Logging_Strategy_Test.cpp: Fixed Unicode related bugs.

Tue Mar 13 10:04:06 2001  Carlos O'Ryan  <coryan@uci.edu>

        * performance-tests/TCP/run_test.pl:
          Fixed the path to the $ACE_ROOT/bin directory, now the script
          runs again.

Tue Mar 13 06:04:03 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Service_Manager.cpp (list_services): Add an indication of whether
          a service is active or paused.  Thanks to Mike Curtis for this
          improvement.

        * ace/Reactor.h: Clarified that the remove_handler (handle, mask)
          method also removes the event handle.  Thanks to Pierre Fayolle
          <fayolle@enseirb.fr> for reporting this.

        * tests/Logging_Strategy_Test.cpp (get_statistic): Replace struct stat
          with ACE_stat.  Thanks to Johnny Willemsen for reporting this.

Tue Mar 13 00:35:35 2001  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Select_Reactor_T.i (deactivated): Reverted this change
          regarding Select_Reactor_T::deactivated():

          Thu Feb 22 12:28:15 2001  Irfan Pyarali  <irfan@cs.wustl.edu>

          Though my change improved correctness of access and change to
          the <deactivated_> variable, it had a negative consequence: the
          event loop calls Select_Reactor_T::deactivated() before calling
          Select_Reactor_T::handle_events() to make sure that the reactor
          is not closed yet.  Unfortunately, if
          Select_Reactor_T::deactivated() has a guard, it will send a null
          event waking up the current leader and thus lead to unnecessary
          thrashing.  For now, I have removed the guard from the
          Select_Reactor_T::deactivated() methods.  We should revisit this
          issue some time again.  This fixes bug 816.

Mon Mar 12 16:30:32 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/Logging_Strategy_Test.cpp (main): Fixed the rest of the
          warnings in VxWorks builds.

Mon Mar 12 16:21:42 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/Logging_Strategy_Test.cpp (main): Fixed a couple of
          warnings in VxWorks build. Couple of more warnings are left.

Mon Mar 12 14:16:03 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Local_Name_Space_T.cpp (create_manager_i): Fixed a compile
          error on Win32 Unicode platforms.

Mon Mar 12 12:12:36 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ACE-INSTALL.html: Also mentioned Windows 2000 explicitly in the
          document.  Thanks to Rahul Shukla <rshukla@ggn.aithent.com> for
          raising the question.

Mon Mar 12 00:49:24 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/tests.dsw:
        * tests/Logging_Strategy_Test.dsp: Added a new dsp file.

Sun Mar 11 21:00:16 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_compile:
          Print out the config.h and platform_macros.GNU files, this is
          useful when debugging builds.

Sun Mar 11 18:41:08 2001  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/CDR_Stream.h: Updated a comment to clarify that the buffer()
          method just returns a pointer to the first block in the chain.
          Thanks to Johnny Willemsen for pointing this out.

Sun Mar 11 17:46:45 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Local_Name_Space_T.cpp: Fixed a compiler error on Win32
          Unicode platforms.

Sun Mar 11 17:28:40 2001  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/QoS/QoS_Session_Impl.cpp (rsvp_callback): <errflags> was unused.

Sun Mar 11 08:31:05 2001  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Makefile.bor (NAMES): Added Logging_Strategy_Test.

Sun Mar 11 07:32:18 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/Logging_Strategy_Test.cpp (order): Fixed a warning in g++
          builds.

Sat Mar 10 23:15:10 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_run_tests.lst:
          Fixed name of Crashed_Callback test

Sat Mar 10 19:28:30 PST 2001 Mayur Deshpande <mayur@ics.uci.edu>

        * include/makeinclude/platform_qnx_rtp_gcc.GNU:
          Fixes to enable debugging on QNX without ACE crashing.
          Thanks to Andy Olson for the suggestions.

Sat Mar 10 19:05:38 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/config-win32.h:

          Include config-win32-common.h even on Windows CE.

        * ace/config-win32-msvc-6.h:

          If ACE_ENDTHREADEX is already defined, don't define it.

        * ace/OS_Dirent.h:

          Changed the use of ACE_WINCE to ACE_HAS_WINCE.

        * ace/Service_Manager.cpp:

          Fixed a couple of ACE_TCHAR/ACE_LIB_TEXT problems.

        * ace/ace_wchar.h:

          On Windows CE, #include wtypes.h.

        * ace/ace_dll.vcp:
        * ace/ace_os_dll.vcp:

          Redid the output files and directories.  Now intermediate
          files go into Release/PLATFORM and Debug/PLATFORM (where
          PLATFORM = MIPS/ARM/X86EM/SH3/SH4).  The *.lib files go
          into ../Lib/PLATFORM and the *.dll into ../bin/PLATFORM.
          Also, the DLL's were renamed from ace_dll.dll and
          ace_os_dll.dll to ace[d].dll and ace_os[d].dll.

        * bin/pippen.pl:

          Changed the environment variables from DEFAULT_COMPILER and
          DEFAULT_CONFIGS to PIPPEN_COMPILER and PIPPEN_CONFIGS. Also
          used \Q\E for the configs because some of the Windows CE
          configs confused the script because they use parentheses.

Sat Mar 10 16:59:51 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ACE-INSTALL.html:
          Remove references to the now obsolete config-linux-lxpthreads.h
          and platform_linux_lxpthread.GNU

Sat Mar 10 16:38:22 2001  Carlos O'Ryan  <coryan@uci.edu>

        * tests/run_test.lst:
          Running the Recursive_Mutex_Test on single-threaded builds makes
          very little sense.

Sat Mar 10 16:35:19 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_run_tests.lst:
          Add new tests: Muxing, Crashed_Callback, Client_Leaks and
          Server_Leaks to the nightly runs.

Sat Mar 10 17:55:53 2001  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * include/makeinclude: Zapped the platform_linux_pthread.GNU,
          platform_linux_lxpthread.GNU, and platform_linux_lxpthreads.GNU
          files since they are confusing and shouldn't not be used in
          favor of platform_linux.GNU.

        * ace: Zapped the config-linux.pthread.h and config-linux-lxpthreads.h
          file since they are confusing and shouldn't not be used in favor
          of config-linux.h.  Thanks to Craig Rodrigues for this
          suggestion.

Sat Mar 10 12:39:16 2001  Craig Rodrigues  <crodrigu@bbn.com>

        * ace/Reactor.h:
        * ace/WFMO_Reactor.h:
        * ace/Select_Reactor_T.h:
        * ace/Reactor_Impl.h:
          Cleaned up comment for schedule_timer()

Sat Mar 10 07:05:16 2001  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests: Added Logging_Strategy_Test.cpp.  Thanks to Orlando
          Ribeiro <oribeiro@inescporto.pt> for contributing this.

        * tests/Makefile (BIN): Added Logging_Strategy_Test.

        * tests/run_test.lst: Added Log_Msg_Test and
          the new Logging_Strategy_Test.

        * tests/Log_Msg_Test.cpp: Added ACE_TEXT macros to all the ACE_DEBUG and
          ACE_ERROR calls.

        * ace/Service_Manager.{h,cpp}: Refactored the request processing
          code so that it's in a single place.  Also, added support to
          enable remote reconfiguration.  Thanks to Mike Curtis
          <mccurry@my-deja.com> for contributing this.

        * ace/Logging_Strategy.cpp (parse_args): Fixed a mistaken
          re-initialization of the thread_priority_mask_ and the
          process_priority_mask_.  Thanks to Martin Krumpolec
          <krumpo@pobox.sk> for reporting this.

        * ace/Local_Name_Space_T.cpp (create_manager_i): Fixed this code so that
          it doesn't fail if run on a directory that doesn't support locks
          (like some NFS mounts).  Thanks to scott snyder
          <snyder@fnal.gov> for reporting this.

        * tests/SOCK_Connector_Test.cpp: Split up a loop so that the test
          doesn't hang on RedHat Linux 7.0.  Thanks to Michael Searles
          <msearles@base16.com> for this fix.

Fri Mar  9 22:39:28 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Svc_Conf.h:
        * ace/Service_Config.h:
        * ace/Service_Config.cpp:
          Add new method to the Service Configurator to add static
          services into the repository, this factors out common code used
          in the ORB and ACE.  In general it fixes the hacks done this
          past Feb 20th

Fri Mar  9 16:47:15 2001  Priyanka Gontla  <pgontla@ece.uci.edu>

        * bin/nightlybuilds/builds.lst (LIST):
          Added HPUX to the scoreboard.

Fri Mar  9 14:34:34 2001  Chad Elliott  <elliott_c@ociweb.com>

        * PACE/Makefile:
        * apps/drwho/Makefile:
        * bin/PerlACE/Process_Unix.pm:
        * include/makeinclude/platform_chorus4.x_g++.GNU:

          Modifications to make things build and run correctly with
          Chorus 4.0.1.

Thu Mar  8 08:38:01 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_run_tests.lst:
          The Single_Threaded_POA test cannot run with minimum CORBA or
          (isn't this ironic) on single threaded configurations.

Wed Mar 07 20:25:51 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/nightlybuilds/builds.lst:
          Add QNX to the configurations in the scoreboard.

Wed Mar  7 12:41:05 2001  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Select_Reactor_T.h,
        * ace/Reactor_Impl.h,
        * ace/WFMO_Reactor.h,
        * ace/Reactor.h: Updated the comments to be more accurate.  Thanks
          to Craig Rodrigues for reporting this.

Wed Mar  7 08:57:42 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/Asynch_IO.h:
          Changed use of ACE_UNIMPLEMENTED_FUNC to just defining the
          assignment operators outright.  The point here is to just
          provide any implementation, since the default one is flagged as
          causing infinite recursion.

          Thanks to David Levine for pointing out this incorrect usage of
          the macro.

        * ace/config-win32-msvc-5.h:
        * ace/config-win32-msvc-6.h:

          @file comments were mismatched.

        * ace/config-win32.h:

          Changed config-win32-wince.h to config-WinCE.h.

        * ace/ace_wchar.h:
        * ace/Log_Msg_NT_Event_Log.cpp:

          Changed several system calls to ACE_TEXT_* (and needed to
          add some to ace_wchar.h) since they need the ACE_TEXT
          treatment.

Wed Mar  7 08:20:01 2001  Chad Elliott  <elliott_c@ociweb.com>

        * ace/ARGV.cpp:

          Removed a warning about possible use of uninitialized variable.

        * bin/ace_ld:

          Added new functionality to filter out the harmless symbol size
          change warnings for VxWorks 5.4.

        * examples/Shared_Malloc/test_multiple_mallocs.cpp:
        * examples/Shared_Malloc/test_persistence.cpp:
        * examples/Shared_Malloc/test_position_independent_malloc.cpp:

          Renamed the typedef MALLOC to TEST_MALLOC.  A MALLOC macro is
          defined by a VxWorks system header.

Wed Mar  7 06:11:52 2001  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Asynch_IO.h: Removed the unnecessary/improper ';' at the
          end of the line.  Thanks to Johnny Willemsen and Chris Kohlhoff
          for reporting/fixing this.

        * ace/*_Connector.h: Clarified in the comments that the
          ACE_Time_Value *timeout represents the *maximum* amount of time
          to wait.  If the server is not running, however, connect() can
          return much sooner.  Thanks to Dipti Jain <dijain@hss.hns.com>
          for motivating this.

Tue Mar  6 14:14:06 2001  Darrell Brunsch <brunsch@uci.edu>

        Here are some fixes for MSVC 7 beta.  Note that no project files
        are checked in.  Right now they will have to be generated from
        the MSVC 5/6 files (The devenv.exe will do this automatically).
        When MSVC 7 becomes released, we'll probably have to deal with
        including their files (even if only for nightly builds).

        * ace/OS.h:
        * ace/config-win32-msvc.h:

          Moved the inclusion of the crtdbg.h file to where it is being
          used.  This is mainly to alleviate some excessive inclusions.

        * ace/config-WinCE.h:
        * ace/config-win32.h:
        * ace/config-win32-msvc-5.h: (added)
        * ace/config-win32-msvc-6.h: (added)
        * ace/config-win32-msvc-7.h: (added)
        * ace/config-win32-borland.h:
        * ace/config-win32-common.h:
        * ace/config-win32-ghs.h:
        * ace/config-win32-msvc.h:
        * ace/config-win32-visualage.h:

          Added a new config-win32-msvc-7.h with some new settings.  While
          doing this I also rearranged the files a bit.  Everything now
          goes through config-win32.h (and an error will occur if you
          include the others directly).

        * ace/config-hpux-10.x-hpc++.h:
        * ace/config-hpux-11.00.h:
        * ace/config-win32-msvc-5.h:
        * ace/config-win32-msvc-6.h:
        * ace/README:

          Removed ACE_HAS_ONE_DEFINITION_RULE.  Could not find this
          actually used anywhere so I'm assuming it can be safely
          removed.

        * ace/Asynch_IO.h:

          Added some dummy assignment operators.  It seems that the default
          ones produce infinite recursion (at least with MSVC 6 SP5 and
          MSVC 7 beta)

        * ace/Future.h:

          Future_Holder needs to be ACE_Export-ed.

Tue Mar  6 16:58:17 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/ACE.cpp (format_hexdump): The format_hexdump () was missing
          a space if the remaining message that needs dumping was less
          than 16 bytes. Thansk to Johnny Willemsen"
          <johnny.willemsen@meco.nl> for giving this fix.

Tue Mar  6 11:25:53 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/PerlACE/Process_Unix.pm:
          Ignore SIGABRT too, because it is used by abort() and we call
          that function to test the ORB under fault conditions.

Tue Mar  6 12:25:34 2001  Chad Elliott  <elliott_c@ociweb.com>

        * configure.in:

          The configure script was broken on major releases (i.e. those with
          no beta numbers).  A test for an empty string should have double
          quotes around the variable.

Tue Mar  6 10:16:31 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/config-win32-common.h:
          Removed old comment about ACE_HAS_WINSOCK2 being related to
          ACE_HAS_WINNT4.  Thanks to Johnny Willemsen
          <jwillemsen@remedy.nl> for pointing this out.

Tue Mar  6 10:13:03 2001  Carlos O'Ryan  <coryan@uci.edu>

        * tests/RMCast/RMCast_Fragment_Test.cpp:
        * tests/RMCast/RMCast_Membership_Test.cpp:
        * tests/RMCast/RMCast_Reassembly_Test.cpp:
        * tests/RMCast/RMCast_Reordering_Test.cpp:
        * tests/RMCast/RMCast_Retransmission_Test.cpp:
          Use ACE_OS::time(0) to initialize the pseudo-random numbers
          seed.  It is good enough for our purposes, and it works on
          platforms without 64-bit integer support.

Mon Mar  5 13:56:33 2001  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Synch_T.{h,i}: Further simplified the new ACE_Guard constructor.
          Thanks to Chris Kohlhoff <chris@kohlhoff.com> for contributing
          this.

Mon Mar  5 19:20:45 2001  Fuzz Master D <brunsch@uci.edu>

        * bin/fuzz.pl:
          As Ossama pointed out, the ACE_CHECK test was seeing
          problems in the tao_idl files since it has uses of ACE_TRY_ENV
          inside quotes.  Made sure not to detect problems in this case.

Mon Mar  5 18:58:32 2001  Fuzz Master D <brunsch@uci.edu>

        * bin/fuzz.pl:
          Fixed some false positives in the resolve_initial_reference
          test and also added an ACE_CHECK test by Carlos's request.

Mon Mar  5 18:54:42 2001  Darrell Brunsch <brunsch@uci.edu>

        * bin/PerlACE/Process_Unix.pm:
          Updated the signal detection to not pay attention to TERM and
          KILL.  Will print out better output when signals cause a process
          to exit during most calls like Kill () or TerminateWaitKill ().

Mon Mar  5 13:56:33 2001  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Synch_T.{h,i}: Added a new ACE_Guard constructor that
          allows the caller to select whether the guard owns/acquires the
          lock or not.  Thanks to Chris Kohlhoff <chris@kohlhoff.com> for
          contributing this.

        * ace/Synch_T.{h,i}: Added a disown() method that relinquishes
          ownership of the lock so that it is not released implicitly in
          the destructor.  Thanks to Chris Kohlhoff <chris@kohlhoff.com>
          for contributing this.

        * ace/Event_Handler.h: Updated the comment on handle_close() so that
          it more accurately reflects what is going on.  Thanks to Defang
          Zhou <dzhou@inktomi.com> for suggesting this.

        * apps/Gateway/Gateway/Concrete_Connection_Handlers.{h,cpp}: Added
          handle_close() operations to solve problems with certain
          concurrency models.  Thanks to Defang Zhou <dzhou@inktomi.com>
          for reporting this.

Mon Mar  5 11:29:36 2001  Carlos O'Ryan  <coryan@uci.edu>

        * docs/ACE-categories.html:
          Fixed links to the doxygen files.

        * ace/Pipe.cpp:
          Fixed what looks like a typo, we want to *disable* the stream
          pipes under QNX, not to enable them just on that platform.

Mon Mar  5 08:20:21 2001  Carlos O'Ryan  <coryan@uci.edu>

        * tests/RMCast/RMCast_Fragment_Test.cpp:
        * tests/RMCast/RMCast_Reassembly_Test.cpp:
          Undo Doug's changes.  They broke the test.

Mon Mar  5 07:52:52 2001  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Log_Record.cpp (priority): Clarified the behavior of the
          priority() set/get methods.  Thanks to Christian Schuhegger
          <Christian.Schuhegger@cern.ch> for reporting this.

        * tests/RMCast/RMCast_Fragment_Test.cpp,
        * tests/RMCast/RMCast_Reassembly_Test.cpp,
        * tests/Dynamic_Priority_Test.cpp,
        * tests/Thread_Pool_Test.cpp: Make sure to write into the
          wr_ptr() rather than the rd_ptr().  Thanks to Gonzalo Diethelm
          <Gonzalo.Diethelm@sonda.com> for reporting this.

Mon Mar  5 08:00:23 2001  Chad Elliott  <elliott_c@ociweb.com>

        * bin/nightlybuilds/builds.lst:

          Added new VxWorks 5.4 and Chorus 4.0.1 nightly builds.

Mon Mar 05 00:10:15 2001  Ossama Othman  <ossama@uci.edu>

        * bin/fuzz.pl:

          Updated to detect missing ACE_TRY_ENV parameters in
          ORB::resolve_initial_references() calls when emulated exceptions
          are used.  Thanks to Darrell for providing this update.

Mon Mar  5 07:57:07 2001  Johnny Willemsen <jwillemsen@remedy.nl>

        * tests/Makefile.bor:

          Added missing Refcounted_Auto_Ptr_Test to the build

Sun Mar  4 19:31:16 2001  Darrell Brunsch <brunsch@uci.edu>

        * bin/auto_run_tests.lst:

          Added the run_test_mt.pl for Leader_Follers.

        * bin/PerlACE/Process_Unix.pm:
        * bin/PerlACE/Process_Win32.pm:

          Added a destructor to detect if a process wasn't explicitly
          killed before the object went out of scope. Will print out
          an error and kill it.

        * bin/PerlACE/Run_Test.pm:

          Turned on autoflush for all scripts.

        * docs/run_test.txt:

          Updated run_test.pl instructions to fit all the changes I
          just made.

        * examples/Export/run_test.pl:
        * performance-tests/RPC/run_test.pl:
        * performance-tests/TCP/run_test.pl:
        * performance-tests/UDP/run_test.pl:

          Updated to use PerlACE::Run_Test;

        * tests/Atomic_Op_Test.dsp:
        * tests/Auto_IncDec_Test.dsp:
        * tests/Barrier_Test.dsp:
        * tests/Basic_Types_Test.dsp:
        * tests/Buffer_Stream_Test.dsp:
        * tests/CDR_Array_Test.dsp:
        * tests/CDR_File_Test.dsp:
        * tests/CDR_Test.dsp:
        * tests/Cache_Map_Manager_Test.dsp:
        * tests/Cached_Accept_Conn_Test.dsp:
        * tests/Cached_Conn_Test.dsp:
        * tests/Capabilities_Test.dsp:
        * tests/Collection_Test.dsp:
        * tests/Config_Test.dsp:
        * tests/Conn_Test.dsp:
        * tests/DLL_Test.dsp:
        * tests/DLList_Test.dsp:
        * tests/Dirent_Test.dsp:
        * tests/Dynamic_Priority_Test.dsp:
        * tests/Enum_Interfaces_Test.dsp:
        * tests/Env_Value_Test.dsp:
        * tests/Future_Set_Test.dsp:
        * tests/Future_Test.dsp:
        * tests/Handle_Set_Test.dsp:
        * tests/Hash_Map_Bucket_Iterator_Test.dsp:
        * tests/Hash_Map_Manager_Test.dsp:
        * tests/High_Res_Timer_Test.dsp:
        * tests/IOStream_Test.dsp:
        * tests/Lazy_Map_Manager_Test.dsp:
        * tests/Log_Msg_Test.dsp:
        * tests/MEM_Stream_Test.dsp:
        * tests/MM_Shared_Memory_Test.dsp:
        * tests/MT_Reactor_Timer_Test.dsp:
        * tests/MT_SOCK_Test.dsp:
        * tests/Malloc_Test.dsp:
        * tests/Map_Manager_Test.dsp:
        * tests/Map_Test.dsp:
        * tests/Mem_Map_Test.dsp:
        * tests/Message_Block_Test.dsp:
        * tests/Message_Queue_Notifications_Test.dsp:
        * tests/Message_Queue_Test.dsp:
        * tests/Message_Queue_Test_Ex.dsp:
        * tests/Naming_Test.dsp:
        * tests/New_Fail_Test.dsp:
        * tests/Notify_Performance_Test.dsp:
        * tests/OS_Test.dsp:
        * tests/Object_Manager_Test.dsp:
        * tests/OrdMultiSet_Test.dsp:
        * tests/Pipe_Test.dsp:
        * tests/Priority_Buffer_Test.dsp:
        * tests/Priority_Reactor_Test.dsp:
        * tests/Priority_Task_Test.dsp:
        * tests/Process_Manager_Test.dsp:
        * tests/Process_Mutex_Test.dsp:
        * tests/Process_Strategy_Test.dsp:
        * tests/RB_Tree_Test.dsp:
        * tests/Reactor_Exceptions_Test.dsp:
        * tests/Reactor_Notify_Test.dsp:
        * tests/Reactor_Performance_Test.dsp:
        * tests/Reactor_Timer_Test.dsp:
        * tests/Reactors_Test.dsp:
        * tests/Reader_Writer_Test.dsp:
        * tests/Recursive_Mutex_Test.dsp:
        * tests/Refcounted_Auto_Ptr_Test.dsp:
        * tests/Reverse_Lock_Test.dsp:
        * tests/SOCK_Connector_Test.dsp:
        * tests/SOCK_Send_Recv_Test.dsp:
        * tests/SOCK_Test.dsp:
        * tests/SPIPE_Test.dsp:
        * tests/SString_Test.dsp:
        * tests/SV_Shared_Memory_Test.dsp:
        * tests/Semaphore_Test.dsp:
        * tests/Service_Config_Test.dsp:
        * tests/Sigset_Ops_Test.dsp:
        * tests/Simple_Message_Block_Test.dsp:
        * tests/Svc_Handler_Test.dsp:
        * tests/TSS_Test.dsp:
        * tests/Task_Test.dsp:
        * tests/Thread_Manager_Test.dsp:
        * tests/Thread_Mutex_Test.dsp:
        * tests/Thread_Pool_Reactor_Test.dsp:
        * tests/Thread_Pool_Test.dsp:
        * tests/Time_Service_Test.dsp:
        * tests/Time_Value_Test.dsp:
        * tests/Timeprobe_Test.dsp:
        * tests/Timer_Queue_Test.dsp:
        * tests/Tokens_Test.dsp:
        * tests/UPIPE_SAP_Test.dsp:
        * tests/Upgradable_RW_Test.dsp:
        * tests/version_tests/Atomic_Op_Test.dsp: (removed)
        * tests/version_tests/Auto_IncDec_Test.dsp: (removed)
        * tests/version_tests/Barrier_Test.dsp: (removed)
        * tests/version_tests/Basic_Types_Test.dsp: (removed)
        * tests/version_tests/Buffer_Stream_Test.dsp: (removed)
        * tests/version_tests/CDR_Array_Test.dsp: (removed)
        * tests/version_tests/CDR_File_Test.dsp: (removed)
        * tests/version_tests/CDR_Test.dsp: (removed)
        * tests/version_tests/Cache_Map_Manager_Test.dsp: (removed)
        * tests/version_tests/Cached_Accept_Conn_Test.dsp: (removed)
        * tests/version_tests/Cached_Conn_Test.dsp: (removed)
        * tests/version_tests/Capabilities_Test.dsp: (removed)
        * tests/version_tests/Collection_Test.dsp: (removed)
        * tests/version_tests/Config_Test.dsp: (removed)
        * tests/version_tests/Conn_Test.dsp: (removed)
        * tests/version_tests/DLL_Test.dsp: (removed)
        * tests/version_tests/DLList_Test.dsp: (removed)
        * tests/version_tests/Dirent_Test.dsp: (removed)
        * tests/version_tests/Dynamic_Priority_Test.dsp: (removed)
        * tests/version_tests/Enum_Interfaces_Test.dsp: (removed)
        * tests/version_tests/Env_Value_Test.dsp: (removed)
        * tests/version_tests/Future_Set_Test.dsp: (removed)
        * tests/version_tests/Future_Test.dsp: (removed)
        * tests/version_tests/Handle_Set_Test.dsp: (removed)
        * tests/version_tests/Hash_Map_Bucket_Iterator_Test.dsp: (removed)
        * tests/version_tests/Hash_Map_Manager_Test.dsp: (removed)
        * tests/version_tests/High_Res_Timer_Test.dsp: (removed)
        * tests/version_tests/IOStream_Test.dsp: (removed)
        * tests/version_tests/Lazy_Map_Manager_Test.dsp: (removed)
        * tests/version_tests/Log_Msg_Test.dsp: (removed)
        * tests/version_tests/MEM_Stream_Test.dsp: (removed)
        * tests/version_tests/MM_Shared_Memory_Test.dsp: (removed)
        * tests/version_tests/MT_Reactor_Timer_Test.dsp: (removed)
        * tests/version_tests/MT_SOCK_Test.dsp: (removed)
        * tests/version_tests/Malloc_Test.dsp: (removed)
        * tests/version_tests/Map_Manager_Test.dsp: (removed)
        * tests/version_tests/Map_Test.dsp: (removed)
        * tests/version_tests/Mem_Map_Test.dsp: (removed)
        * tests/version_tests/Message_Block_Test.dsp: (removed)
        * tests/version_tests/Message_Queue_Notifications_Test.dsp: (removed)
        * tests/version_tests/Message_Queue_Test.dsp: (removed)
        * tests/version_tests/Message_Queue_Test_Ex.dsp: (removed)
        * tests/version_tests/Naming_Test.dsp: (removed)
        * tests/version_tests/New_Fail_Test.dsp: (removed)
        * tests/version_tests/Notify_Performance_Test.dsp: (removed)
        * tests/version_tests/OS_Test.dsp: (removed)
        * tests/version_tests/Object_Manager_Test.dsp: (removed)
        * tests/version_tests/OrdMultiSet_Test.dsp: (removed)
        * tests/version_tests/Pipe_Test.dsp: (removed)
        * tests/version_tests/Priority_Buffer_Test.dsp: (removed)
        * tests/version_tests/Priority_Reactor_Test.dsp: (removed)
        * tests/version_tests/Priority_Task_Test.dsp: (removed)
        * tests/version_tests/Process_Manager_Test.dsp: (removed)
        * tests/version_tests/Process_Mutex_Test.dsp: (removed)
        * tests/version_tests/Process_Strategy_Test.dsp: (removed)
        * tests/version_tests/RB_Tree_Test.dsp: (removed)
        * tests/version_tests/Reactor_Exceptions_Test.dsp: (removed)
        * tests/version_tests/Reactor_Notify_Test.dsp: (removed)
        * tests/version_tests/Reactor_Performance_Test.dsp: (removed)
        * tests/version_tests/Reactor_Timer_Test.dsp: (removed)
        * tests/version_tests/Reactors_Test.dsp: (removed)
        * tests/version_tests/Reader_Writer_Test.dsp: (removed)
        * tests/version_tests/Recursive_Mutex_Test.dsp: (removed)
        * tests/version_tests/Refcounted_Auto_Ptr_Test.dsp: (removed)
        * tests/version_tests/Reverse_Lock_Test.dsp: (removed)
        * tests/version_tests/SOCK_Connector_Test.dsp: (removed)
        * tests/version_tests/SOCK_Send_Recv_Test.dsp: (removed)
        * tests/version_tests/SOCK_Test.dsp: (removed)
        * tests/version_tests/SPIPE_Test.dsp: (removed)
        * tests/version_tests/SString_Test.dsp: (removed)
        * tests/version_tests/SV_Shared_Memory_Test.dsp: (removed)
        * tests/version_tests/Semaphore_Test.dsp: (removed)
        * tests/version_tests/Service_Config_Test.dsp: (removed)
        * tests/version_tests/Sigset_Ops_Test.dsp: (removed)
        * tests/version_tests/Simple_Message_Block_Test.dsp: (removed)
        * tests/version_tests/Svc_Handler_Test.dsp: (removed)
        * tests/version_tests/TSS_Test.dsp: (removed)
        * tests/version_tests/Task_Test.dsp: (removed)
        * tests/version_tests/Thread_Manager_Test.dsp: (removed)
        * tests/version_tests/Thread_Mutex_Test.dsp: (removed)
        * tests/version_tests/Thread_Pool_Reactor_Test.dsp: (removed)
        * tests/version_tests/Thread_Pool_Test.dsp: (removed)
        * tests/version_tests/Time_Service_Test.dsp: (removed)
        * tests/version_tests/Time_Value_Test.dsp: (removed)
        * tests/version_tests/Timeprobe_Test.dsp: (removed)
        * tests/version_tests/Timer_Queue_Test.dsp: (removed)
        * tests/version_tests/Tokens_Test.dsp: (removed)
        * tests/version_tests/UPIPE_SAP_Test.dsp: (removed)
        * tests/version_tests/Upgradable_RW_Test.dsp: (removed)
        * tests/version_tests/run_all_tests.bat: (removed)
        * tests/version_tests/version_tests.dsw: (removed)

          Moved the version_tests back into the tests/*.dsp files.  The
          reason they were originally moved is because it was easier to
          select all the debug versions during a batch build.  But now we
          have pippen.pl and msvc_auto_compile.pl, so this is no longer an
          issue, while this strange setup would compilicate the nightly
          builds.  Thus, it was standardized back.

        * bin/create_vt_dsps.pl: (removed)

          No need for this anymore.

Sun Mar  4 19:27:42 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/Log_Msg.cpp:
        * ace/Log_Msg_NT_Event_Log.h:
        * ace/OS.cpp:

          Disabled Log_Msg_NT_Event_Log on Windows CE.

Sun Mar 04 13:19:35 2001  Carlos O'Ryan  <coryan@uci.edu>

        * etc/tao.doxygen:
          Add .txt files, so we can add web pages to the basic TAO
          documentation.

Sun Mar 04 10:58:08 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp: Added Log_Msg_NT_Event_Log.{h,cpp} to NT
          project files.

Sun Mar  4 10:41:57 2001  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Log_Msg.cpp,
          ace/Log_Msg.h,
          ace/Logging_Strategy.cpp,
          ace/Makefile.bor,
          ace/OS.cpp,
          ace/OS.h,
          ace/OS.i,
          ace/ace.rc: Added support for the new NT event logging capability.
          Thanks to Chris Kohlhoff <chris@kohlhoff.com> for contributing this.

        * ace/Log_Msg_NT_Event_Log.cpp
          ace/Log_Msg_NT_Event_Log.h
          ace/ace_message_table.bin:  Added these files to support the new
          NT event logging capability.
          Thanks to Chris Kohlhoff <chris@kohlhoff.com> for contributing
          this.

Sun Mar  4 04:46:44 2001  Darrell Brunsch <brunsch@uci.edu>

        * bin/nightlybuilds/builds.lst:

          Added new Windows CE nightly build.

Sun Mar 04 03:12:17 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/generate_export_file.pl: ACE_AS_STATIC_LIBS was incorrectly
          typed in as ACE_STATIC_LIBS.

        * ace/svc_export.h:
        * ace/RMCast/RMCast_Export.h:
        * ace/SSL/SSL_Export.h:
        * websvcs/lib/websvcs_export.h: These files didn't check for
          ACE_AS_STATIC_LIBS to determine if they should define their
          export macros for static build.  Thanks to Chris Kohlhoff
          <chris@kohlhoff.com> for reporting this.  [Bug 813]

Sat Mar  3 19:07:31 2001  Pradeep Gore  <pradeep@cs.wustl.edu>

        * ace/QoS/QoS_Session_Impl.cpp:
        * ace/QoS/QoS_Session_Impl.i:
        * examples/QOS/Fill_ACE_QoS.cpp:
        * examples/QOS/Fill_ACE_QoS.h:
        * examples/QOS/Makefile:
        * examples/QOS/QoS_Util.cpp:
        * examples/QOS/Receiver_QoS_Event_Handler.cpp:
        * examples/QOS/Sender_QoS_Event_Handler.cpp:
          Fixed various compile warnings when compiling with rapi=1 on
          Redhat Linux 6.2

Sat Mar  3 16:47:53 2001  Darrell Brunsch <brunsch@uci.edu>

        * bin/fuzz.pl:

          Changed the detection pattern a bit to pick up
          stuff like:

          void
          operator < (...)

          better.

        * ace/Auto_Ptr.i:
        * ace/Base_Thread_Adapter.cpp:
        * ace/Based_Pointer_T.i:
        * ace/Connector.cpp:
        * ace/Containers_T.cpp:
        * ace/DEV_Addr.i:
        * ace/Dynamic.i:
        * ace/FILE.cpp:
        * ace/Flag_Manip.i:
        * ace/Handle_Set.i:
        * ace/Hash_Map_Manager_T.cpp:
        * ace/Lib_Find.cpp:
        * ace/Local_Name_Space_T.cpp:
        * ace/Local_Tokens.cpp:
        * ace/MEM_Addr.i:
        * ace/Malloc.cpp:
        * ace/Malloc_Allocator.cpp:
        * ace/Malloc_T.cpp:
        * ace/Memory_Pool.cpp:
        * ace/Message_Block.cpp:
        * ace/Message_Block.i:
        * ace/Message_Block_T.cpp:
        * ace/Message_Queue.i:
        * ace/Message_Queue_T.cpp:
        * ace/Message_Queue_T.i:
        * ace/Naming_Context.cpp:
        * ace/OS.cpp:
        * ace/OS.i:
        * ace/PI_Malloc.cpp:
        * ace/POSIX_Asynch_IO.cpp:
        * ace/Process_Manager.cpp:
        * ace/QtReactor.cpp:
        * ace/RB_Tree.i:
        * ace/RW_Process_Mutex.cpp:
        * ace/Reactor.cpp:
        * ace/Remote_Name_Space.cpp:
        * ace/Remote_Tokens.cpp:
        * ace/SOCK_Dgram.i:
        * ace/SString.cpp:
        * ace/SUN_Proactor.cpp:
        * ace/Select_Reactor_Base.cpp:
        * ace/Select_Reactor_T.cpp:
        * ace/Service_Object.i:
        * ace/Service_Repository.cpp:
        * ace/Signal.cpp:
        * ace/Signal.i:
        * ace/Svc_Handler.cpp:
        * ace/Synch.cpp:
        * ace/Synch_T.cpp:
        * ace/Thread_Adapter.cpp:
        * ace/Thread_Manager.cpp:
        * ace/Timer_Heap_T.cpp:
        * ace/TkReactor.cpp:
        * ace/Token.cpp:
        * ace/Token_Manager.cpp:
        * ace/CLASSIX/CLASSIX_CO_Acceptor.i:
        * ace/CLASSIX/CLASSIX_Select_Reactor.cpp:
        * ace/QoS/SOCK_Dgram_Mcast_QoS.cpp:
        * netsvcs/ACE-netsvcs.html:
        * netsvcs/lib/Server_Logging_Handler_T.cpp:
        * netsvcs/lib/Token_Handler.cpp:

          Fixed bad ACE_TRACE and ACE_OS_TRACE's. (fuzz errors)

        * docs/ACE-categories.html:
        * docs/ACE-porting.html:
        * docs/ACE-subsets.html:
        * docs/tutorials/new-tutorials.html:

          Changed references to
          http://www.cs.wustl.edu/~schmidt/ACE_wrappers/* to
          relative paths instead (Fixes the last of the fuzz errors).

Fri Mar 2 20:08  Angelo Corsaro  <corsaro@cs.wustl.edu>

        * include/makeinclude/platform_qnx_rtp_gcc.GNU:
          Added macros tha expand to multiple libraries
          on QNX RTP to fix most of the link problems.

Fri Mar  2 16:35:58 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/config-win32-borland.h:

          Added /**/ to #include <vcl.h> so it isn't picked up by
          MSVC-based dependency generators.

Fri Mar 02 19:36:22 2001  Steve Huston  <shuston@riverace.com>

        * ace/OS.i (ACE_OS::send): (only non-Win32), if call fails and
          errno is EAGAIN, change it to EWOULDBLOCK. Improve portability
          for platforms where EAGAIN and EWOULDBLOCK are different values
          and both used, like HP-UX.  Thanks to Michael Grove
          <snowymike@aol.com> for reporting this problem.

        * ace/ACE.i (send_i): Call ACE_OS::send, not ACE_OS::write, on HP-UX.
          This makes it pick up the EAGAIN->EWOULDBLOCK change.

        * tests/TSS_Test.cpp: Avoid doing ACE_Thread::keyfree on where
          ACE_HAS_PTHREADS_DRAFT4 or ACE_HAS_PTHREADS_DRAFT6 (unless
          ACE_HAS_TSS_EMULATION is also defined) since ACE_Thread::keyfree
          will get ENOTSUP anyway.

Fri Mar 02 17:50:40 2001  Sharath R. Cholleti  <sharath@cs.wustl.edu>

        * ace/QtReactor.cpp:
          Thanks to Stefan Scherer <stefan_scherer@sepp.de> for reporting
          and fixing the problem - crashing of TAO/tests/QtTests/ client
          example after moving the slider.

Fri Mar 02 15:35:40 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/MEM_Acceptor.cpp:
        * ace/MEM_Acceptor.h:
        * ace/MEM_Addr.cpp:
        * ace/MEM_Addr.h:
        * ace/MEM_Connector.cpp:
        * ace/MEM_Connector.h:
        * ace/MEM_IO.cpp:
        * ace/MEM_IO.h:
        * ace/MEM_SAP.cpp:
        * ace/MEM_SAP.h:
        * ace/MEM_Stream.cpp:
        * ace/MEM_Stream.h: Disabled MEM_Stream support if one chooses
          not to support position independent pointers.

Fri Mar 02 13:17:36 2001  Steve Huston  <shuston@riverace.com>

        * examples/IOStream/server/iostream_server.cpp (main): Removed the
          call to register peer_acceptor with the reactor. The
          acceptor::open call already registers for ACCEPT_MASK. Prevents
          leaving a hanging READ_MASK registered after the acceptor is
          destroyed when main() returns. This fixes Bugzilla # 801. Thanks
          to Pim Philipse <pph@rogan-medical.com> for reporting this.

        * THANKS: Added Pim Philipse to the Hall of Fame.

Fri Mar 02 12:24:27 2001  Steve Huston  <shuston@riverace.com>

        * ace/config-hpux-10.x-hpc++.h: If compiling without exceptions
          (+noeh) then don't set ACE_HAS_EXCEPTIONS (don't set
          ACE_NEW_THROWS_EXCEPTIONS either).

        * ace/Thread_Manager.cpp (join_thr): Moved the code for
          ACE_HAS_PTHREADS_DRAFT4 that does a pthread_detach from here to
          ACE_OS::thr_join (which this function calls) so that
          ACE_Thread::join also causes a pthread_detach. This is needed on
          Pthreads Draft 4 (HP-UX 10.x) to properly clean up the thread
          storage and avoid leaking memory. Thanks to Vladimir Kondratiev
          <vladimir.kondratiev@intel.com> for reporting this and providing
          excellent test cases to help resolve it quickly.

        * ace/OS.i (ACE_OS::thr_join): Added the code that was removed from
          ACE_Thread_Manager::join_thr, above.

        * ace/Event_Handler.cpp (~ACE_Event_Handler): Add an ACE_Errno_Guard
          around purge_pending_notifications to prevent against an ENOTSUP
          from purge_pending_notifications.

Thu Mar  1 17:02:10 2001  Darrell Brunsch <brunsch@uci.edu>

        * bin/PerlACE/Process_Unix.pm:
        * bin/PerlACE/Process_Win32.pm:

          Fixed up the Spawn code to use the Executable () instead of
          {EXECUTABLE}, since that's how we get the adjusted name (with
          .exe and stuff).  And also skipped the file existance with
          IgnoreExeSubDir, since IgnoreExeSubDir is often used when you
          need to find the program in the path.

Thu Mar  1 15:48:10 2001  Darrell Brunsch <brunsch@uci.edu>

        * bin/fuzz.pl:

          Fuzz was being a bit to eager with the class matching in the
          TRACE test.  It was having problems with something like:

          char *foo::bar ()

          since it thought the class was "char *foo" instead of just
          "foo".

          But it is feeling muuuuuuch better now.

Thu Mar  1 13:18:07 2001  Darrell Brunsch <brunsch@uci.edu>

        * bin/fuzz.pl:

          Added two new tests:

          - absolute ACE_wrappers test:

            Check for ~schmidt/ACE_wrappers in html files.  These should
            be relative links since these html files already exist in
            their own ACE_wrappers tree.

          - TRACE test:

            Does a check on whether the ACE_TRACE or ACE_OS_TRACE actually
            refers to the function/method it is in.

          And expanded the checks in the bad run_test test (level 6)

        * bin/PerlACE/Process_Unix.pm:
        * bin/PerlACE/Process_Win32.pm:

          - Added checks for file existence before running.
          - Added IgnoreExeSubDir option.
          - Added TerminateWaitKill method.

        * bin/pippen.pl: (added)
        * bin/PerlACE/MSProject.pm: (added)
        * bin/PerlACE/MSProject/DSP.pm: (added)
        * bin/PerlACE/MSProject/VCP.pm: (added)

          There is nothing to see here...please be on your way.

          It isn't like this is a super top secret project to
          replace msvc_auto_compile.pl with something that works
          better and also has a cool code-name that is shorter
          than "msvc_auto_compile.pl".

          But remember, you didn't hear that from me.

Thu Mar  1 10:54:23 2001  Ossama Othman  <ossama@uci.edu>

        * bin/auto_run_tests.lst:

          Added the TAO Codec to the list of tests to run.

        * include/makeinclude/wrapper_macros.GNU:

          Fixed all incorrect uses of CFLAGS and CCFLAGS where
          preprocessor macros were defined.  Preprocessor macros should be
          defined in the CPPFLAGS variable.

          Define ACE_USE_RCSID in non-debug builds (i.e. debug=0).

Thu Mar 01 07:29:58 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_run_tests.lst:
          Fixed typos in the Service_Context_Manipulation test.  It was
          running in platforms where it shouldn't.

Thu Mar 01 07:07:03 2001  Christopher Kohlhoff  <chris@kohlhoff.com>

        * include/makeinclude/recurse.bor:
          Added support for makefiles which contain multiple targets.

        * examples/IPC_SAP/SOCK_SAP/Makefile.bor:
        * examples/Log_Msg/Makefile.bor:
        * examples/Map_Manager/Makefile.bor:
        * examples/Mem_Map/file-reverse/Makefile.bor:
        * examples/RMCast/Send_File/Makefile.bor:
        * examples/Service_Configurator/IPC-tests/client/Makefile.bor:
        * examples/Threads/Makefile.bor:
        * netsvcs/clients/Logger/Makefile.bor:
        * tests/Makefile.bor:
        * tests/RMCast/Makefile.bor:
          Updated to work with new multi-target makefile support.

Wed Feb 28 22:58:50 2001  Carlos O'Ryan  <coryan@uci.edu>

        * html/index.html:
          Reference */index.html directly, instead of assuming that the
          web browser will use index.html as the default file, this also
          works better when browsing locally.  Thanks to Alain Decamps
          <Alain.Decamps@pidpa.be> for pointing this out.

Wed Feb 28 16:41:42 2001  Darrell Brunsch <brunsch@uci.edu>

        * docs/bugzilla-build-setup.html:

          Updated the section about the scoreboard and added a
          placeholder for Win32 nightly build information.

Wed Feb 28 16:04:14 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/nightlybuilds/builds.lst (TYPE): Added a build with AMI and
          Messaging support disabled for the nightly builds.

Wed Feb 28 15:35:59 2001  Joe Hoffert  <joeh@cs.wustl.edu>

        * docs/bugzilla-build-setup.html:
          Added html file outlining steps for adding a bugzilla nightly
          build.

Wed Feb 28 00:25:42 2001  Darrell Brunsch <brunsch@uci.edu>

        * bin/auto_run_tests.lst:

          The examples/POA/Adapter_Activator/run_test.pl test was being
          run twice.  In fairness to all the other tests that only get to
          run once, I removed the second instance.

Tue Feb 27 17:31:48 2001  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_hpux_aCC.GNU: Turn on -D_REENTRANT for
          the threads=0 build - this enables the reentrant functions which
          are present, threads or not. It does not turn on threads, which
          are instead enabled by -D_POSIX_C_SOURCE=199506L.

        * ace/config-hpux-11.00.h: Added ACE_HAS_2_PARAM_ASCTIME_R_AND_CTIME_R

        * ace/OS.i (rand_r): Added 'defined (HPUX_11)' to the ways to get to
          the POSIX.1c-conformant version of rand_r. Allows clean compile
          on HP-UX 11 without thread support.  Also lined up some
          misaligned #if/else/endif lines to make it easier to find one's
          way through.

        * ace/OS_Dirent.inl (readdir_r): Added 'defined (HPUX_11)' to the
          ways to get the POSIX.1c-conformant version of readdir_r. Allows
          clean compile on HP-UX 11 without thread support.

Tue Feb 27 11:38:38 2001  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * performance-tests/TCP/tcp_test.cpp (main): Zapped the
          non-existent '-f' option.  Thanks to Mike Curtis for reporting
          this.

        * performance-tests/TCP/tcp_test.cpp (main): Check for improper
          bufsz.  Thanks to Mike Curtis for reporting this.

        * performance-tests/TCP/tcp_test.cpp (main): Documented the '-t'
          option, which specifies the number of threads.

        * performance-tests/TCP/README: Fixed a typo.  Thanks to
          Mike Curtis for reporting this.

Tue Feb 27 10:51:18 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/auto_run_tests.lst: Added the AMI tests to the daily
          builds.

Tue Feb 27 10:23:20 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * Makefile: Changed the ChangeLog listing in the CONTROLLED_FILES
          to ChangeLog*. This should help us to avoid missing ChangeLog
          entries in the beta distribution, just about every time we split
          and add a ChangeLog.

Mon Feb 27 07:39:16 2001  Chad Elliott  <elliott_c@ociweb.com>

        * include/makeinclude/platform_hpux_aCC.GNU:

          Removed suppression of Future Error 129.
          Removed the use of CFLAGS.

        * ace/OS.h:
        * ace/config-hpux-11.00.h:
          Modification to remove system header macro definition conflicts.
          This change does not suppress the conflicts, but does an undef
          of the two conflicting macros before includeing tcp.h.  Thanks
          to Sam Chong <sam@i2i-inc.com> for reporting this problem.

Mon Feb 26 19:01:16 2001  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Logging_Strategy.{h,cpp}: Added a new -k option to
          set the logging key via the ACE_Logging_Strategy.  Thanks to
          Chris Kohlhoff <chris@kohlhoff.com> for contributing this.

Mon Feb 26 18:18:38 2001  Steve Huston  <shuston@riverace.com>

        * ace/SString.i
          (ACE_CString::find (const char *s, int pos) const):
          (ACE_CString::find (char c, int pos) const):
          (ACE_SString::find (const char *s, int pos) const):
          (ACE_SString::find (char c, int pos) const):
          (ACE_WString::find (const ACE_WSTRING_TYPE *s, int pos) const):
          If match is found, return index from start of string, not from
          'pos'. Matches the C++ string standard, which was the model for
          these classes.  Thanks to Glen Osterhout <gosterho@elronsw.com>
          for this fix.

        * ace/SString.h: Clarified comments on return value for above
          functions.

        * tests/SString_Test.cpp: Changed to look for the correct return
          from the npos tests of the functions above.

        * THANKS: Added Glen Osterhout to the Hall of Fame.

Mon Feb 26 15:01:55 2001  Darrell Brunsch <brunsch@uci.edu>

        * tests/DLL_Test_Impl.dsp:
        * tests/version_tests/DLL_Test_Impl.dsp: (removed)
          Me thinks that the Release and Static configurations should
          also compile, and me thinks that it is now fixed.

Mon Feb 26 12:29:45 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/ARGV.h: Clarify that the int add (const ACE_TCHAR *next_arg)
          method assumes ownership of <next_arg>, rather than copying it.
          Thanks to Steve Hespelt <shespelt@bear.com> for reporting this.
          Fixes [Bug 807].

          The generated version_tests dsp didn't work (since DLL_Test_Impl
          creates a library).  Manually created the configurations in the
          tests/DLL_Test_Impl.dsp version instead.

Mon Feb 26 15:54:33 2001  Phil Mesnier  <mesnier_p@ociweb.com>

        Port to Unixware 7 (7.1.1) Using UDK CC (7.1.1.b)

        * docs/tutorials/013/message_queue.cpp:
        * tests/Malloc_Test.cpp:

        Fixed errors in #pragma instiate lines including removal of ';',
        mispellings

        * ace/config-all.h:

        Added definition of Unixware UDK for definition of ACE_NOTREACHED()

        * ace/config-unixware-7.1.0.udk.h:
        * include/makeinclude/platform_unixware_udk.GNU:

        New configuration files for building on Unixware 7 with UDK CC.

Mon Feb 26 12:29:45 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/ARGV.h: Clarify that the int add (const ACE_TCHAR *next_arg)
          method assumes ownership of <next_arg>, rather than copying it.
          Thanks to Steve Hespelt <shespelt@bear.com> for reporting this.
          Fixes [Bug 807].

Mon Feb 26 12:27:46 2001  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.i:
          Added method to reset the byte order in class OuputCDR.  This
          will be used by a gateway to set the byte order of a reply to a
          reqest it has handled to one different than the gateway's own
          byte order, if necessary. It should be called while the stream
          is still empty, that is, before any part of the reply, including
          the header, has been marshaled.

Mon Feb 26 12:07:00 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Memory_Pool.cpp: Moved the copying of MMAP flags up before
          setting the MAP_FIXED flag.  Thanks to <rhuber@amadeus.net> for
          reporting this. [Bug 752]

Mon Feb 26 09:29:36 2001  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/RB_Tree.h:
          Fully qualified enum name. This fixes problems on gcc-272 builds.

Mon Feb 26 00:19:28 2001  Darrell Brunsch <brunsch@uci.edu>

        Time to do some spring cleaning...

        * tests/version_tests/Config_Test.dsp: (added)
        * tests/version_tests/DLL_Test_Impl.dsp: (added)
        * tests/version_tests/Log_Msg_Test.dsp: (added)
        * tests/version_tests/Message_Queue_Test_Ex.dsp: (added)
        * tests/version_tests/version_tests.dsw:

          Updated the version_tests dir with create_vt_dsps.pl.

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:
        * netsvcs/lib/netsvcs.dsp:
        * netsvcs/servers/servers.dsp:
        * tests/ACE_Init_Test.dsp:
        * tests/Atomic_Op_Test.dsp:
        * tests/Auto_IncDec_Test.dsp:
        * tests/Barrier_Test.dsp:
        * tests/Basic_Types_Test.dsp:
        * tests/Buffer_Stream_Test.dsp:
        * tests/CDR_Array_Test.dsp:
        * tests/CDR_File_Test.dsp:
        * tests/CDR_Test.dsp:
        * tests/Cache_Map_Manager_Test.dsp:
        * tests/Cached_Accept_Conn_Test.dsp:
        * tests/Cached_Conn_Test.dsp:
        * tests/Capabilities_Test.dsp:
        * tests/Collection_Test.dsp:
        * tests/Config_Test.dsp:
        * tests/Conn_Test.dsp:
        * tests/DLL_Test.dsp:
        * tests/DLList_Test.dsp:
        * tests/Dirent_Test.dsp:
        * tests/Dynamic_Priority_Test.dsp:
        * tests/Enum_Interfaces_Test.dsp:
        * tests/Env_Value_Test.dsp:
        * tests/Future_Set_Test.dsp:
        * tests/Future_Test.dsp:
        * tests/Handle_Set_Test.dsp:
        * tests/Hash_Map_Bucket_Iterator_Test.dsp:
        * tests/Hash_Map_Manager_Test.dsp:
        * tests/High_Res_Timer_Test.dsp:
        * tests/IOStream_Test.dsp:
        * tests/Lazy_Map_Manager_Test.dsp:
        * tests/Log_Msg_Test.dsp:
        * tests/MEM_Stream_Test.dsp:
        * tests/MM_Shared_Memory_Test.dsp:
        * tests/MT_Reactor_Timer_Test.dsp:
        * tests/MT_SOCK_Test.dsp:
        * tests/Malloc_Test.dsp:
        * tests/Map_Manager_Test.dsp:
        * tests/Map_Test.dsp:
        * tests/Mem_Map_Test.dsp:
        * tests/Message_Block_Test.dsp:
        * tests/Message_Queue_Notifications_Test.dsp:
        * tests/Message_Queue_Test.dsp:
        * tests/Message_Queue_Test_Ex.dsp:
        * tests/Naming_Test.dsp:
        * tests/New_Fail_Test.dsp:
        * tests/Notify_Performance_Test.dsp:
        * tests/OS_Test.dsp:
        * tests/Object_Manager_Test.dsp:
        * tests/OrdMultiSet_Test.dsp:
        * tests/Pipe_Test.dsp:
        * tests/Priority_Buffer_Test.dsp:
        * tests/Priority_Reactor_Test.dsp:
        * tests/Priority_Task_Test.dsp:
        * tests/Process_Manager_Test.dsp:
        * tests/Process_Mutex_Test.dsp:
        * tests/Process_Strategy_Test.dsp:
        * tests/RB_Tree_Test.dsp:
        * tests/Reactor_Exceptions_Test.dsp:
        * tests/Reactor_Notify_Test.dsp:
        * tests/Reactor_Performance_Test.dsp:
        * tests/Reactor_Timer_Test.dsp:
        * tests/Reactors_Test.dsp:
        * tests/Reader_Writer_Test.dsp:
        * tests/Recursive_Mutex_Test.dsp:
        * tests/Refcounted_Auto_Ptr_Test.dsp:
        * tests/Reverse_Lock_Test.dsp:
        * tests/SOCK_Connector_Test.dsp:
        * tests/SOCK_Send_Recv_Test.dsp:
        * tests/SOCK_Test.dsp:
        * tests/SPIPE_Test.dsp:
        * tests/SString_Test.dsp:
        * tests/SV_Shared_Memory_Test.dsp:
        * tests/Semaphore_Test.dsp:
        * tests/Service_Config_Test.dsp:
        * tests/Sigset_Ops_Test.dsp:
        * tests/Simple_Message_Block_Test.dsp:
        * tests/Svc_Handler_Test.dsp:
        * tests/TSS_Test.dsp:
        * tests/Task_Test.dsp:
        * tests/Thread_Manager_Test.dsp:
        * tests/Thread_Mutex_Test.dsp:
        * tests/Thread_Pool_Reactor_Test.dsp:
        * tests/Thread_Pool_Test.dsp:
        * tests/Time_Service_Test.dsp:
        * tests/Time_Value_Test.dsp:
        * tests/Timeprobe_Test.dsp:
        * tests/Timer_Queue_Test.dsp:
        * tests/Tokens_Test.dsp:
        * tests/UPIPE_SAP_Test.dsp:
        * tests/Upgradable_RW_Test.dsp:

          Removed the Alpha configurations.  I don't think we've actually
          looked at these for over a year, and they are missing from a lot
          of projects.  Thankfully, they are easy to recreate if they are
          needed.

        * ACE-INSTALL.html:

          Changed the Windows NT Alpha section to mention that we no
          longer have configurations out of the box for Win32/Alpha, they
          must be recreated if needed.

        * WindozeCE/ACEApp.cpp: (removed)
        * WindozeCE/ACEApp.h: (removed)
        * WindozeCE/README: (removed)
        * WindozeCE/StdAfx.cpp: (removed)
        * WindozeCE/StdAfx.h: (removed)
        * WindozeCE/WindozeCE.aps: (removed)
        * WindozeCE/WindozeCE.clw: (removed)
        * WindozeCE/WindozeCE.cpp: (removed)
        * WindozeCE/WindozeCE.dsp: (removed)
        * WindozeCE/WindozeCE.h: (removed)
        * WindozeCE/WindozeCE.rc: (removed)
        * WindozeCE/WindozeCEDlg.cpp: (removed)
        * WindozeCE/WindozeCEDlg.h: (removed)
        * WindozeCE/resource.h: (removed)
        * WindozeCE/res/WindozeCE.ico: (removed)
        * WindozeCE/res/WindozeCE.rc2: (removed)

          No longer used.

        * Makefile:

          Removed WindozeCE from CONTROLLED_FILES.

        * tests/WinCE/Atomic_Op_Test.dsp: (removed)
        * tests/WinCE/Barrier_Test.dsp: (removed)
        * tests/WinCE/Basic_Types_Test.dsp: (removed)
        * tests/WinCE/Buffer_Stream_Test.dsp: (removed)
        * tests/WinCE/Conn_Test.dsp: (removed)
        * tests/WinCE/DLL_Test.dsp: (removed)
        * tests/WinCE/Enum_Interfaces_Test.dsp: (removed)
        * tests/WinCE/Future_Test.dsp: (removed)
        * tests/WinCE/Handle_Set_Test.dsp: (removed)
        * tests/WinCE/Hash_Map_Manager_Test.dsp: (removed)
        * tests/WinCE/MT_Reactor_Timer_Test.dsp: (removed)
        * tests/WinCE/MT_SOCK_Test.dsp: (removed)
        * tests/WinCE/Map_Manager_Test.dsp: (removed)
        * tests/WinCE/Mem_Map_Test.dsp: (removed)
        * tests/WinCE/Message_Block_Test.dsp: (removed)
        * tests/WinCE/Message_Queue_Notifications_Test.dsp: (removed)
        * tests/WinCE/Message_Queue_Test.dsp: (removed)
        * tests/WinCE/Notify_Performance_Test.dsp: (removed)
        * tests/WinCE/OrdMultiSet_Test.dsp: (removed)
        * tests/WinCE/Priority_Buffer_Test.dsp: (removed)
        * tests/WinCE/Priority_Task_Test.dsp: (removed)
        * tests/WinCE/Reactor_Exceptions_Test.dsp: (removed)
        * tests/WinCE/Reactor_Notify_Test.dsp: (removed)
        * tests/WinCE/Reactor_Performance_Test.dsp: (removed)
        * tests/WinCE/Reactor_Timer_Test.dsp: (removed)
        * tests/WinCE/Reactors_Test.dsp: (removed)
        * tests/WinCE/Reader_Writer_Test.dsp: (removed)
        * tests/WinCE/Recursive_Mutex_Test.dsp: (removed)
        * tests/WinCE/SOCK_Connector_Test.dsp: (removed)
        * tests/WinCE/SOCK_Test.dsp: (removed)
        * tests/WinCE/SString_Test.dsp: (removed)
        * tests/WinCE/Semaphore_Test.dsp: (removed)
        * tests/WinCE/Sigset_Ops_Test.dsp: (removed)
        * tests/WinCE/Simple_Message_Block_Test.dsp: (removed)
        * tests/WinCE/TSS_Test.dsp: (removed)
        * tests/WinCE/Task_Test.dsp: (removed)
        * tests/WinCE/Thread_Manager_Test.dsp: (removed)
        * tests/WinCE/Thread_Mutex_Test.dsp: (removed)
        * tests/WinCE/Thread_Pool_Test.dsp: (removed)
        * tests/WinCE/Time_Value_Test.dsp: (removed)
        * tests/WinCE/Timer_Queue_Test.dsp: (removed)
        * tests/WinCE/ce_tests.dsw: (removed)

          Removed these Windows CE Toolkit for Visual C++ files.

Mon Feb 26 00:15:42 2001  Darrell Brunsch <brunsch@uci.edu>

        * tests/DLL_Test_Impl.dsp:

          Made sure the Code Generation settings were correct.

Sun Feb 25 19:40:11 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/ACEutils.pm (CheckForConfig):
          This routine was not removing all the -Config options from the
          command-line, causing problems in some of the tests.

Sun Feb 25 16:33:26 2001  Darrell Brunsch <brunsch@uci.edu>

        * tests/DLL_Test.cpp:

          Left the DLL end with a d in debug mode, but changed
          the test to add the d when _DEBUG and ACE_WIN32 is
          defined.  Test should now work again on Win2000_Debug.

Sun Feb 25 11:28:06 2001  Darrell Brunsch <brunsch@uci.edu>

        * tests/run_test.pl:

          When there are errors in the log, print out the entire
          log.  This should make it much easier to understand
          problems in the nightly build logs.

Sun Feb 25 09:04:43 2001  Carlos O'Ryan  <coryan@uci.edu>

        * tests/DLL_Test.cpp:
          Accidentally left the 'd' suffix in the name of the DLL.

Sat Feb 24 22:58:42 2001  Darrell Brunsch <brunsch@uci.edu>

        * bin/msvc_auto_compile.pl:
        * TAO/TAOACE.dsw:
        * TAO/TAOACE_Static.dsw:
        * Static_Performance.dsw:

          Removed references to gperf_lib.dsp

        * TAO/version_tests.dsw: (removed)

          This was still referring to orbsvcs.dsp, which shows that
          it is way out of date (and not used).  Zapped.

Sat Feb 24 20:59:42 2001  Darrell Brunsch <brunsch@uci.edu>

        * apps/gperf/src/gperf.dsp:
        * apps/gperf/src/gperf.dsw:
        * apps/gperf/src/gperf_lib.dsp: (removed)

          Merged gperf into one project.  This will bring the
          structure in line with the Makefiles.

Sat Feb 24 19:28:42 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/OS.i:

          Fixed my recent changes to ACE_OS::dlsym () to work on
          Windows CE.

Sat Feb 24 17:50:38 2001  Darrell Brunsch <brunsch@uci.edu>

        * tests/DLL_Test.cpp:

          OBJ_PREFIX was being created by attaching a char string to
          a ACE_TCHAR string.  Needed to add ACE_TEXT to the first
          string for compilation on ACE_USES_WCHAR.

        * tests/DLL_Test_Impl.dsp:

          Changed the internal name to "DLL_Test DLL" to make sure
          this gets compiled in the first pass by msvc_auto_compile.pl.

        * tests/run_test.pl:

          Added a check for LM_WARNINGs in log files.  Let's see if
          there have been any hidden (DLL_Test actually was producing
          a warning on Windows, but Carlos's fix already got rid of it,
          Yay!).

Sat Feb 24 15:44:58 2001  Carlos O'Ryan  <coryan@uci.edu>

        * tests/tests.dsw:
        * tests/DLL_Test_Impl.dsp:
          Add new project file for the shared library used in the test.

        * tests/DLL_Test.cpp:
        * tests/DLL_Test_Impl.cpp:
          Change the Win32 version to load a shared library instead of the
          exe.

Sat Feb 24 14:07:11 2001  Darrell Brunsch <brunsch@uci.edu>

        * tests/Thread_Pool_Reactor_Test.cpp:

          Did a careful study of what this test was doing in regards to
          sending wide-character strings, and made it consistent.  The
          most troublesome aspect was the fact that the length is encoded
          in the shutdown string ("\011shutdown") which meant that I had
          to send the length in characters, not in bytes.  This should
          really fix [Bug 537].

Sat Feb 24 14:37:00 2001  Craig Rodrigues <crodrigu@bbn.com>

        * ace/config-g++-common.h
          gcc 2.97 and higher require the use of the std namespace for
          iostrams

Sat Feb 24 10:27:04 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_run_tests.lst:
          Disable the interceptor tests when the ORB is compiled without
          interceptor support.

        * tests/run_test.lst:
          Disable the Reactor_Notify_Test on single threaded builds, it
          uses threads.

        * bin/nightlybuilds/scoreboard_update.pl:
          Fixed usage message.

Sat Feb 24 09:45:18 2001  Carlos O'Ryan  <coryan@uci.edu>

        * tests/run_test.lst:
          Disable the DLL_Test on KCC/Linux builds.  The test runs
          normally, but crashes on shutdown(), it appears as if the
          run-time system is invoking the destructors after the library is
          unloaded.

        * tests/Makefile:
        * tests/Makefile.DLL_Test:
        * tests/DLL_Test.h:
        * tests/DLL_Test.cpp:
        * tests/DLL_Test_Impl.h:
        * tests/DLL_Test_Impl.cpp:
          Cleanup code, and truly separate the shared library code to a
          completely new separate file.

Sat Feb 24 09:51:45 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_compile:
          Pass the -Config options to each script, this helps the
          $ACE_ROOT/bin/run_test.pl script that needs to disable some
          tests in certain configurations.

Sat Feb 24 08:21:48 2001  David L. Levine <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU:
          added -fno-implicit-templates on Tornado II for Intel 386
          family targets.  Thanks to Albert Wijnja <Albert.Wijnja@meco.nl>
          for reporting that static template data members weren't really on
          VxWorks/386, and to Greg Holtmeyer <greg.holtmeyer@windriver.com>
          for confirming that -fno-implicit-templates should work with
          the Tornado II g++.  [Bug 658]

Thu Feb 22 15:59:04 2001  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.i: The ACE_TRACE call for ACE_OS::gmtime identified the
          function as "localtime".  This is now fixed.  Thanks to Mason
          Deaver <mason.deaver@tripointglobal.com> for reporting this.

Fri Feb 23 19:44:36 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * ACE version 5.1.13 released.

Thu Feb 22 12:28:15 2001  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/TP_Reactor.cpp (handle_events): Here is the description of
          how things were working and where the problem was: In the
          TP_Reactor there is one leader thread waiting in select() and
          the others waiting on the token.  During deactivation(), the
          <deactivation_> flag is set on the reactor, signal_all_threads()
          is called on the token, and an empty notification is send to the
          current leader thread.  signal_all_threads() sets the
          <signal_all_threads_> flag on the Token when there are waiters
          on the Token (does nothing if there are no waiters).  This
          scheme worked fine when there were leader and follower threads
          waiting.  When a new leader is chosen, it returns the magic
          number 2 from token.acquire_read() and hence exits gracefully
          from the handle_events().  However, the problem was that when
          some (or all) of the TP threads are busy running upcalls,
          signal_all_threads() was a no-op and the magic number 2 was not
          returned from token.acquire_read() and hence the exit from
          handle_events() was flagged as an error.

          The fix is as described below:

          (1) ACE_Token::signal_all_threads() does not make sense.  The
          token is a mutex, not a condition variable.  Therefore, it does
          not make sense to have a signal_all_threads() methods.  Plus I
          believe that the method does not do as advertised.  Therefore, I
          removed this method from the token class.

          (2) There is no need to signal all the threads in the
          TP_Reactor.  Marking the Reactor as closed and signaling the
          leader thread is enough.  The leader thread will wake up to
          handle the empty event, the next leader will see that the
          Reactor is closed and exit gracefully.  This will continue until
          all the waiters are drained.

          (3) With the above change, there is no need to check for an
          magic returns from token.acquire_read().  When a thread gets the
          token, it checks the deactivation flag before proceeding.  If
          the Reactor is closed, it gracefully exits.  Otherwise, it
          continues as leader.

          (4) Since there is no need to call token.signal_all_threads(),
          ACE_TP_Reactor::wakeup_all_threads() can be removed since it is
          now the same as ACE_Select_Reactor_T::wakeup_all_threads().

          Note that this change should help with making
          Thread_Pool_Reactor_Test run without shutdown errors.

        * ace/Select_Reactor_T.i (deactivate): The setting of the
          <deactivated_> flag and waking up of all the threads should be
          atomic.  I am being picky about this one but I think am I right.
          Also added the guard to the accessor.

Thu Feb 22 08:51:42 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/OS.i:

          Bleh.  Changed an && to || to make sure we get a symbolname
          variable for non-Unicode Win32.

          "He who lives without committing any folly is not so
          wise as he thinks"  - La Rochefoucauld

Thu Feb 22 08:43:30 2001  Carlos O'Ryan  <coryan@uci.edu>

        * include/makeinclude/rules.local.GNU:
          Add SunWS_cache and ir.out to the list of files removed by
          the realclean pseudo-target.  This directory is used by Sun/CC
          5.0 (and Forte), if not removed the information there can become
          stale, and break the builds.
          This should fix the Sun/CC 5.0 nightly builds.

Thu Feb 22 07:51:36 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/OS.i: Reverted the change "Thu Feb 22 03:31:06 2001
          Krishnakumar B  <kitty@ace.cs.wustl.edu> ".

Thu Feb 22 03:31:06 2001  Krishnakumar B  <kitty@ace.cs.wustl.edu>

        * ace/OS.i (dlsym):
          Hopefully fixed the Win32 builds. Removed a extra ! in the
          #ifdef.

Thu Feb 22 02:58:36 2001  Krishnakumar B  <kitty@ace.cs.wustl.edu>

        * VERSION:
        * PROBLEM-REPORT-FORM:
        * ace/Version.h:
        Reverted the changes and restored the old versions of
        these files as the beta build script was killed. Pain :-(

Wed Feb 21 20:10:42 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/OS.i:
        * tests/DLL_Test.cpp:
        * tests/Thread_Pool_Reactor_Test.cpp:

          Fixed the remaining problems with the Win2000_Unicode tests.
          [Bug 537]

Tue Feb 20 21:19:39 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Svc_Conf.h:
          Add ACE_Export macro for ace_create_service_type() it is used
          outside the library now.

Tue Feb 20 06:34:26 2001  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * include/makeinclude/platform_sunos5_g++.GNU: Make sure to explicitly
          set ACE_HAS_GNUG_PRE_2_8.  Thanks to Christian von Mueffling
          <cvm@aiss.de> for reporting this.

        * ace/Thread_Manager.cpp (cancel_grp): Fixed a typo in
          the ACE_TRACE macro.  Thanks to Mike Curtis for reporting this.

Mon Feb 19 16:38:08 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * ace/Asynch_Acceptor.{h,cpp}:
        Added method void handle (ACE_HANDLE) and made it call the base
        class's handle(ACE_HANDLE) method to remove warning about
        partial overloading. Fix suggested by Irfan.

Sun Feb 18 21:55:16 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * ace/OS.h:
        Added an extern "C" void ace_mutex_lock_cleanup_adapter before
        the definition of ACE_PTHREAD_CLEANUP_PUSH to avoid warnings on
        SunCC 5.x.

Sun Feb 18 17:16:41 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * netsvcs/clients/Tokens/manual/manual.cpp (main),
        * tests/Tokens_Test.cpp (main): Reordered the #ifdefs for the
          ACE_HAS_TOKENS_LIBRARY stuff.  Thanks to Kitty for reporting
          this.

Sun Feb 18 16:28:45 2001  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/RB_Tree.h: Changed order of method declarations to (hopefully)
          dodge an internal compiler error on VxWorks.

Sun Feb 18 09:59:18 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * netsvcs/clients/Tokens:
        * netsvcs/servers/main.cpp (main):
        * netsvcs/servers/svc.conf:
        * netsvcs/lib/Token_Handler: Only compile this stuff if the
          ACE_HAS_TOKENS_LIBRARY macro is enabled.  Thanks to Carlos
          for reporting this.

        * ace/Object_Manager.cpp: Added a check for ACE_HAS_TOKENS_LIBRARY
          so we can skip initializing certain things if that macro is
          undefined.

        * ace/Token_Collection.*:
        * ace/Token_Invariants.*:
        * ace/Token_Manager.*:
        * ace/Local_Tokens.*:
        * ace/Remote_Tokens.*:
        * ace/Token_Request_Reply.*:
          Only compile these files if ACE_HAS_TOKENS_LIBRARY is enabled
          since this functionality does not appear to be widely used and
          yet it takes up space.

        * tests/Tokens_Test.cpp (main): Only run this test if
          ACE_HAS_TOKENS_LIBRARY is defined.

Sat Feb 17 17:23:46 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/SOCK_Dgram_Mcast.cpp:

          Integrated a fix from Keith Nicewarner <knicewar@erg.sri.com>
          In effect, this reverts the multicast code changed on
              Fri Jan 26 11:18:15 2001  Douglas C. Schmidt  ...
          for all platforms except linux.

Sat Feb 17 15:52:09 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/run_all_list.pm:
        * tests/run_tests.pl:
          Remove obsolete scripts.

Sat Feb 17 13:26:17 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/POSIX_Asynch_IO.cpp (thread_function): Make sure to cast
          -1 to void * since that's the signature of the method.  Thanks
          to Bala for reporting this.

        * ace/POSIX_Asynch_IO.cpp (thread_function): Zapped the unused
          result local variable and also changed the logic to bailout if
          handle_events() returns -1.  This fixes a warning reported by
          KCC.

Fri Feb 16 17:39:16 2001  Mayur Deshpande  <mayur@ics.uci.edu>

        * ace/config-qnx-rtp.h: Commented out ACE_HAS_NONSTATIC_OBJECT_MANAGER.
          Thanks to Andrew Olson <andrew.olson@lmco.com> for the suggestion.

        * include/makeinclude/platform_qnx_rtp_gcc.GNU: Added -fexceptions to
          CCFLAGS and 'exceptions=1' at end of file.
          Thanks to Andrew Olson <andrew.olson@lmco.com> for the suggestion.

Fri Feb 16 05:37:47 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Logging_Strategy.h: Updated the documentation to explain what
          the various options mean.

        * tests/Log_Msg_Test.cpp (test_log_msg_features): Added
          ACE_Log_Msg::PROCESS to a couple of priority_mask() calls to
          make the test work correctly.  Thanks to Kitty for reporting
          this.

Thu Feb 15 17:53:31 2001  Frank Hunleth  <fhunleth@cs.wustl.edu>

        * ace/Thread_Manager.i: Simplified casting in
          ACE_Thread_Descriptor::get_next per suggestion from Carlos.

Thu Feb 15 14:57:59 2001  Frank Hunleth  <fhunleth@cs.wustl.edu>

        * ace/Thread_Manager.i: Fixed typo in ACE_Thread_Descriptor::get_next.

Thu Feb 15 11:33:55 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * tests/Refcounted_Auto_Ptr_Test.cpp (main): Always call ACE_OS::exit(0)
          to make sure that this test terminates...

        * ace/Thread_Manager.i (get_next): Added an ACE_const_cast() to
          make certain compilers happy.

        * ace/Logging_Strategy.cpp: Fixed some Unicode problems on Win32.

Thu Feb 15 08:49:44 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/nightlybuilds/builds.lst:
          Rename WashU builds so all the Debian builds appear together.

Thu Feb 15 07:15:39 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Logging_Strategy.{h,cpp}: Added support to generate multiple
          log files, rather than just two.  Thanks to Orlando Ribeiro
          <oribeiro@inescporto.pt> for this fix.

Thu Feb 15 03:36:46 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * bin/nightlybuilds/builds.lst (WEB):
        Added a new build with TAO_MINIMUM linked statically.

Wed Feb 14 05:28:59 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Thread_Manager.{h,i}: Added const to state(), grp_id(),
          task(), get_next(), and self().  Thanks to Johnny Willemsen
          <jwillemsen@remedy.nl> for reporting this.

Tue Feb 13 17:51:47 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * tests/Makefile.bor (TESTS): Added Dirent_Test to list of TESTS.
          Thanks to Mike Curtis for reporting this.

        * tests/run_tests.bat: Fixed a typo so that Dirent_Test will run.
          Thanks to Mike Curtis for reporting this.

Wed Feb 14 12:08:10 2001  Frank Hunleth  <fhunleth@cs.wustl.edu>

        * ace/Read_Buffer.cpp: Fixed boundary condition in rec_read.
          If record was a multiple of BUFSIZ and the record was
          terminated with an EOF instead of a "term" character,
          rec_read would return 0 instead of the actual data read in.
          The problem was that the partial buffer fill size was being
          checked instead of the total number of bytes read in.  This
          issue was noticed when trying to read in an IOR file in TAO
          that was exactly 512 bytes (BUFSIZ * 2 on Win2k) long.

Tue Feb 13 14:44:28 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/ace_wchar.inl: Changed several variable from type <size_t>
          to type <int> as on 64-bit whistler, size_t and int are not the
          same size which confuses 64-bit compiler.  (Per Kitty's
          request.)

Tue Feb 13 10:23:31 2001  Steve Huston  <shuston@riverace.com>

        * apps/JAWS/server/IO.{h cpp}: (Side-affect necessitated by addition of
          handle () method and handle_ member to ACE_Handler). Moved the
          handle_ member to the JAWS_Synch_IO class - it needs it, and
          JAWS_Asynch_IO class has it by inheritance from ACE_Handler. Left
          the handle () methods in JAWS_IO, but made them pure virtual,
          implemented in JAWS_Synch_IO (implementation moved from JAWS_IO)
          and in JAWS_Asynch_IO, where they forward up to ACE_Handler's
          handle () methods.

Mon Feb 12 18:18:05 2001  Frank Hunleth <fhunleth@cs.wustl.edu>

        * tests/Thread_Mutex_Test.cpp:
          Modified test to use process mutexes for Win32 platforms
          so that timed mutexes could be tested.

Sun Feb 11 15:33:39 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/QoS/ACE_QoS_Export.h:

          Added ACE_AS_STATIC_LIBS support.

        * ace/QoS/ACE_QoS.dsp:
        * ace/QoS/ACE_QoS_Lib.dsp:

          Fixed to comply with ACE standards.

Sun Feb 11 10:50:10 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * include/makeinclude/platform_sunos5_g++.GNU (exceptions):
          Only set the -fno-exceptions option if we're *not* using GCC
          2.7.2!  Thanks to Pradeep for explaining how to do this.

Sun Feb 11 10:15:08 2001  Johnny Willemsen <jwillemsen@remedy.nl>

        * ace/Makefile.bor:
        * ace/QoS/Makefile.bor:
        * include/makeinclude/ace_flags.bor:
          Added build support for QoS library with Borland compiler.

Sat Feb 10 15:29:08 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Message_Block.h:
          Improved documentation for the lenth(), size() and space()
          methods.

Sat Feb 10 07:19:37 2001  Christopher Kohlhoff  <chris@kohlhoff.com>

        * include/makeinclude/outputdir.bor:
          Removed the now out-of-date comment about pascal/non-pascal
          build directories.

        * ace/config-win32-borland.h:
          Added support for new ACE_HAS_VCL define to enable inclusion
          of VCL header files.

Fri Feb  9 16:47:44 2001  Pradeep Gore  <pradeep@cs.wustl.edu>

        * ace/Makefile.am:
          Removed references to the AQoSA files.

Fri Feb  9 16:42:10 2001  Pradeep Gore  <pradeep@cs.wustl.edu>

        * examples/QOS/client.dsp:
        * examples/QOS/server.dsp:
          Updated the corrected project files.
          Thanks to Darrell for pointing this out.

Thu Feb  8 19:25:03 2001  Carlos O'Ryan  <coryan@uci.edu>

        * performance-tests/RPC/run_test.pl:
        * performance-tests/TCP/run_test.pl:
        * performance-tests/UDP/run_test.pl:
          Add driver strings

Thu Feb 08 19:18:36 2001  Angelo Corsaro  <corsaro@cs.wustl.edu>

        * bin/auto_run_tests.lst:

          Removed comment from Exposed Policies test. The test has been fixed.

Thu Feb  8 14:11:36 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/ws2tcpip.h:  [Removed]

          I don't see any reason to have this file in ace; it is a system
          header file.  And from [Bug 722], our version is out of date anyway.

        * ace/OS.h:

          Changed to include system version of ws2tcpip.h

        * ace/Makefile.am:
        * ace/ace-dll.icc:
        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:

          Removed references to ws2tcpip.h.

        * ace/SOCK_Connect.cpp:

          Changed get_ip_interfaces to remove a memory error.  Thanks to
          Viatcheslav Batenine <slavikb@infra2000.com> for helping out with
          this.

        * ace/SOCK_Dgram_Mcast.cpp:

          It looks like the change made on:

          Fri Jan 26 11:18:15 2001  Douglas C. Schmidt  ...

          doesn't work on Win32.  Reverted back to the old scheme for Win32
          only.

Thu Feb  8 00:34:57 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * include/makeinclude/platform_sunos5_g++.GNU: Added support for
          -fno-exception when exceptions=0 is given to the Makefile.
          Thanks to Christian v. Mueffling <cvm@aiss.de> for reporting
          this.

Wed Feb  7 23:02:46 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/SUN_Proactor.cpp: Fixed the cancel_aiocb() method and added a
          new overridden cancel_aio() method.  Thanks to Alexander Libman
          <Alibman@baltimore.com> for contributing this.

Thu Feb  8 02:09:05 2001  Pradeep Gore  <pradeep@cs.wustl.edu>

        * examples/QOS/Makefile:
        * examples/QOS/client.dsp:
        * examples/QOS/server.dsp:
          Modified to use the ACE_QoS lib.
        * Receiver_QoS_Event_Handler.cpp:
        * Sender_QoS_Event_Handler.cpp:
          Added missing Log_Msg.h for ACE_DEBUG.
          Other files were modified to reflect changed directory location
          of AQosA imclude files.

Thu Feb  8 00:17:43 2001  Pradeep Gore  <pradeep@cs.wustl.edu>

        * ace/QoS_Decorator.cpp:
        * ace/QoS_Session_Factory.cpp:
        * ace/SOCK_Dgram_Mcast_QoS.cpp:
        * ace/QoS_Decorator.h:
        * ace/QoS_Session_Factory.h:
        * ace/SOCK_Dgram_Mcast_QoS.h:
        * ace/QoS_Manager.cpp:
        * ace/QoS_Session_Impl.cpp:
        * ace/SOCK_Dgram_Mcast_QoS.i:
        * ace/QoS_Manager.h:
        * ace/QoS_Session_Impl.h:
        * ace/QoS_Session_Impl.i:
          Moved the AQoSA classes to ace/QoS directory.

        * ace/Makefile:
        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:
          Removed the QoS related files, added QoS directory to build.

        * ace/Qos/Makefile
        * ace/QoS/ACE_QoS.dsw:
        * ace/QoS/ACE_QoS.dsp:
        * ace/QoS/ACE_QoS_Lib.dsp:
        * ace/QoS/ACE_QoS_Export.h:
          Added Makefile and MSVC project files.
          Thanks to Craig Rodrigues <crodrigu@bbn.com> for suggesting this
          change and providing the patch.

Wed Feb  7 11:34:56 2001  Carlos O'Ryan  <coryan@uci.edu>

        * tests/Message_Queue_Test_Ex.cpp:
          Fix build problems for single threaded environments.

Wed Feb  7 09:03:22 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * apps/Gateway/Gateway/Event_Channel.cpp (initiate_acceptors): Fixed
          incorrect if/else branching.  Thanks to Lu Yunhai
          <luyunhai@huawei.com> for reporting this.

Tue Feb  6 23:43:49 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * apps/Gateway/Peer/Peer.cpp (await_events): Fixed the use of
          %s to be %*s since the string may not be nul terminated!  Thanks
          to Lu Yunhai <luyunhai@huawei.com> for reporting this.

Tue Feb  6 20:11:28 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * include/makeinclude/platform_sunos5_sunc++.GNU:

        Remove double inclusion of $(CFLAGS) for Sun CC 5.0.

Tue Feb  6 19:30:26 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * ace/Malloc_T.cpp (shared_malloc):
        Added a #ifdef to remove the warnings from Digital Tru64 cxx. This
        is a temporary workaround. TODO: Change ACE_SEH_* macros so that such
        hacks are unnecessary.

Tue Feb  6 19:23:16 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * include/makeinclude/platform_sunos5_sunc++.GNU:
        Complete reverting the changes made by Irfan on Sat Jan 27
        01:06:09 2001. This file was missed in the last revert done by me.

Tue Feb 06 19:03:35 2001  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_sunos5_sunc++.GNU: For C++ 5, make sure
          to add CFLAGS into CCFLAGS, even if no other options are added. Else
          things get built without -mt.

Tue Feb 06 18:37:41 2001  Steve Huston  <shuston@riverace.com>

        * tests/Thread_Mutex_Test.cpp: Changed wording of the message for
          "timed acquire" not supported so as not to trip the error catcher
          in run_tests.pl.

Tue Feb 06 17:55:28 2001  Steve Huston  <shuston@riverace.com>

        * examples/Reactor/Proactor/post_completions.cpp: Allow this to
          run with AIOCB_Proactor.

        * ace/Asynch_IO.{h cpp}: Added ACE_Handler::handle (ACE_HANDLE)
          function to set the handle; changed ACE_HANDLE ACE_Handler::handle
          to return the actual value.

        * ace/Asynch_Acceptor.cpp (handle_accept): Call ACE_Handler::handle
          to set the handle value for the new handler before calling its
          open() method.

Tue Feb 06 17:16:43 2001  Steve Huston  <shuston@riverace.com>

        * tests/MEM_Stream_Test.cpp:
        * tests/MEM_Stream_Test.h: New file; moved definition of Echo_Handler
          from MEM_Stream_Test.cpp to this file to make it visible to AIX
          C++ 3.6.6 at template instantiation time.

Mon Feb  5 16:19:20 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/ACE.cpp: ACE_TRACE ("ACE::basename") should be ACE_TRACE ("ACE::diname").
          Thanks to Lu Yunhai <luyunhai@huawei.com> for reporting this.

        * ace/Basic_Types.h: Changed the ACE_BIG_ENDIAN and ACE_LITTLE_ENDIAN
          macros to use the form 0x0123 rather than 0123X.  Thanks to
          Craig Rodrigues <crodrigu@bbn.com> for helping find this
          problem.

Mon Feb  5 18:20:11 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * ace/config-sunos5.5.h (ACE_USES_OLD_IOSTREAMS):

          Reverted the change to config-sunos5.5.h and turned on
          ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION,
          ACE_TEMPLLATES_REQUIRE_SOURCE and ACE_USES_OLD_IOSTREAMS for the
          SunCC 5.0 compiler.

Mon Feb  5 16:19:20 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * examples/RMCast/Send_File/Receiver.cpp (init): Replaced
          a hard-coded file permission of 0644 with
          ACE_DEFAULT_FILE_PERMS.  Thanks to Chris Kohlhoff
          <chris@kohlhoff.com> for reporting this.

Mon Feb  5 13:00:17 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * tests/Thread_Mutex_Test.cpp: (reported_notsup)
          Removed a warning about defined but not used.

Sat Feb  3 14:41:17 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/OS.h:
        * ace/config-win32-msvc.h:

          Fixed problems with LLSEEK and ACE_stat on Windows CE.

Sat Feb  3 14:12:36 2001  Darrell Brunsch <brunsch@uci.edu>

        * tests/Config_Test.cpp:
        * tests/Config_Test.h:
        * tests/Log_Msg_Test.cpp:

          Fixed ACE_USES_WCHAR problems.

Fri Feb 02 18:36:42 2001  Steve Huston  <shuston@riverace.com>

        * ace/config-linux-common.h: Added #define ACE_POSIX_AIOCB_PROACTOR
          unless the user #defines ACE_POSIX_SIG_PROACTOR before including
          config-linux.h. (At least prior to 2.4 kernels) queueing signals
          across threads does not work - it fails silently, which breaks
          basic functionality of the async model - like asynchronously
          accepting TCP connections - and pretty much prevents multi-threaded
          work with timers and probably other async operations.

        * examples/Reactor/Proactor/test_proactor.cpp: Disabled the ACE_DEBUG
          calls that display message buffers - they're often too large and
          overrun the ACE_Log_Msg buffers and crash the program.

Fri Feb  2 08:38:37 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/WFMO_Reactor.cpp (handler): Set the existing_masks variable to 0
          to avoid warnings from static analysis tools.  Thanks to Ivan
          Murphy for reporting this.

Thu Feb 01 22:00:17 2001  Sharath R. Cholleti  <sharath@cs.wustl.edu>

        * tests/Message_Queue_Test_Ex.cpp

          Fixed the bugs which were giving runtime error on
          Win32 - removed "queue_type" from single_thread_performance_test
          and performance_test functions. Now these funtions dont
          have args.

        * tests/tests.dsw

          Just an update of the workspace.

Thu Feb  1 21:00:57 2001  Frank Hunleth  <fhunleth@cs.wustl.edu>

        * bin/auto_compile_win32.pl:
        * bin/run_all_list.pm:

          Added TAO RT Mutex unit tests to auto build and test
          lists.

Thu Feb 01 18:52:27 2001  Angelo Corsaro  <corsaro@cs.wustl.edu>

        * RTJava:
          Added Directory for RTJava related research. Check the
          ChangeLog included in the newly directory for more info.

Thu Feb 01 18:23:17 2001  Sharath R. Cholleti  <sharath@cs.wustl.edu>

        * tests/Log_Msg_Test.dsp:
        * tests/Config_Test.dsp:

          Added these files.
        * tests/tests.dsw:

          Added the above two projects to the workspace.

Thu Feb  1 18:01:26 2001  Luther J Baker  <luther@cs.wustl.edu>

        * ace/OS.i (mutex_init):

          Removed call into PACE.

Thu Feb 01 18:21:15 2001  Steve Huston  <shuston@riverace.com>

        * tests/Thread_Mutex_Test.cpp: Only report "operation not supported"
          once for a failed ACE_Thread_Mutex::acquire (ACE_Time_Value &).
          Also, if it reports ENOTSUP while ACE_HAS_MUTEX_TIMEOUT is
          defined, warns the user that it's probably the wrong setting.

Thu Feb 01 17:36:28 2001  Steve Huston  <shuston@riverace.com>

        * examples/Reactor/Proactor/test_proactor3.cpp: Fixed a non-constant
          array dimension and some output formatting.

Thu Feb 01 17:07:35 2001  Steve Huston  <shuston@riverace.com>

        * examples/Reactor/Proactor/post_completions.cpp: Removed extraneous
          'd' from the 'count' display.

Thu Feb 01 15:33:26 2001  Steve Huston  <shuston@riverace.com>

        * ace/Reactor.h (purge_pending_notifications):
        * ace/WFMO_Reactor.h (purge_pending_notifications):
        * ace/Select_Reactor_Base.h (purge_pending_notifications):
          Removed the default argument value - callers must now explicitly
          specify a 0 ACE_Event_Handler* to remove all handler notifications.
          Thanks to Edan Ayal <edana@bandwiz.com> for arguing this point.

Thu Feb  1 09:57:41 2001  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/SString.i:

          Changed behavior of ACE_WString::rep to be the same
          as ACE_CString::rep, that is, to return an empty
          (w)string rather than a null (w)string when the length
          is 0. Thanks to Johnny Willemsen <johnny.willemsen@meco.nl>
          for pointing out this discrepancy.

Thu Feb  1 09:42:41 2001  Chad Elliott  <elliott_c@ociweb.com>

        * include/makeinclude/platform_chorus4.x_g++.GNU:

          Modification to allow building for Chorus 4.x on x86.  CPU will be
          set to x86, but CLX_TYPE will be set to i486-elf-sysv4.

Thu Feb 01 10:29:31 2001  Steve Huston  <shuston@riverace.com>

        * ace/Synch.i (ACE_Null_Mutex::acquire (ACE_Time_Value&)): Removed
          the arg name to fix "unused argument" warning from g++.

Wed Jan 31 22:01:00 2001  Rick Stille  <stille_r@ociweb.com>
        * ace/OS.cpp(operator FILETIME): Corrected an error in the Jan 26 GHS
          revision. The term "ACE_Time_Value::FILETIME_to_timval_skew" had been
          omitted from the calculation.

Wed Jan 31 18:43:26 2001  Krishnakumar B  <kitty@cs.wustl.edu>

        * tests/Message_Queue_Test_Ex.cpp (single_thread_performance_test):
          Removed the warning about queue_type using ACE_UNUSED_ARG.

Wed Jan 31 17:27:35 2001  Steve Huston  <shuston@riverace.com>

        * ace/Acceptor.cpp (ACE_Oneshot_Acceptor::handle_input): Unregister
          the acceptor from the reactor before doing the shared_accept call
          to guard against the use-case where the acceptor is destroyed during
          the service handler activation sequence.

Wed Jan 31 15:55:23 2001  Frank Hunleth  <fhunleth@cs.wustl.edu>

        * ace/Synch.i:
          Added ACE_Null_Mutex::acquire (ACE_Time_Value &tv)
          to fix link error.

Wed Jan 31 15:12:00 2001  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/CDR_Stream.h:

          Made method do_byte_swap() public. If ACE_ENABLE_SWAP_ON_WRITE
          is defined, TAO_GIOP_Message_Base::format_message() and
          TAO_GIOP_Message_Lite::format_message() both call this method.
          Thanks to Paul Rubel <prubel@bbn.com> for reporting this bug.

Wed Jan 31 12:19:51 2001  Steve Huston  <shuston@riverace.com>

        * docs/tutorials/Chap_2/ex03.html, ex04.html: Fixed these example
          programs to 1) send the Nul terminators with the strings,
          2) allow enough space on the recv to get it all, 3) return a
          value from main.

        * docs/tutorials/Chap_2/Chap_2.zip: Updated the above examples.

Wed Jan 31 06:43:27 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Message_Queue_T.cpp: Make sure that dequeue_head() returns
          the number of items still on the queue.  Thanks to Johnny
          Willemsen for reporting this.

Tue Jan 30 21:39:15 2001  Sharath R. Cholleti  <sharath@cs.wustl.edu>

       * tests/Log_Msg_Test.cpp: In funtion test_ostream(), removed the
          if condition to check if ACE_OS::unlink() succeeds. Also set
          the ostream to NULL before calling ACE_ERROR_RETURN(). Thanks
          to Mike Curtis <mccurry@my-deja.com> for pointing out problem
          caused when ACE_OS::unlink() fails. Thanks to Doug in helping
          fix the problem.

Tue Jan 30 18:04:08 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * tests/Message_Queue_Test_Ex.cpp (single_thread_performance_test):
          Zap the Win32 and VxWorks-specific code from this function.
          Thanks to Sharath for reporting this.

Tue Jan 30 11:34:26 2001  Steve Huston  <shuston@riverace.com>

        * examples/Reactor/Proactor/test_aiosig_ace.cpp: Fixed a bunch
          of mis-coded ACE_ERROR_RETURNs; added a explicit queued completion,
          and disabled the display of buffers that may overrun ACE_Log_Msg's
          internal buffers to prevent spurious crashes.

Tue Jan 30 11:26:42 2001  Steve Huston  <shuston@riverace.com>

        * examples/Reactor/Proactor/post_completions.cpp: Added a count
          to be sure that all expected completions are delivered, and
          print error message if not.

Tue Jan 30 10:47:52 2001  Steve Huston  <shuston@riverace.com>

        * ace/Select_Reactor_Base.cpp
          (ACE_Select_Reactor_Notify::purge_pending_notifications):
        * ace/WFMO_Reactor.cpp
          (ACE_WFMO_Reactor_Notify::purge_pending_notifications): Changed
          to not purge notifications destined for the reactor only
          (notification buffer with 0 handler value). Thanks to Edan
          Ayal <edana@bandwiz.com> for this fix.

Tue Jan 30 01:05:51 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * tests/Message_Queue_Test_Ex.cpp (single_thread_performance_test):
          Add cases for VxWorks and NT.  Thanks to Sharath for reporting
          this.

        * ace/OS.h: #define _SC_AIO_MAX to 1 if it's not set by default.
          Thanks to Jean-Francois Daune <Daune@IBA.be> for reporting this
          fix for VxWorks.

Mon Jan 20 18:36:41 2001  Steve Huston  <shuston@riverace.com>

        * ace/Message_Queue_T.h (ACE_Message_Queue_Ex): Use _USE
          rather than _DECL to define the ACE_Message_Queue - fixes
          compile error.

Mon Jan 29 17:29:31 2001  Steve Huston  <shuston@riverace.com>

        * ace/Message_Queue_T.{h i cpp}: Corrected a bunch of references
          to Message_Queue_Ex's queue_ member to use . rather than ->
          and removed the ACE_NEW to allocate it (follow-ups from Doug's
          Sun Jan 28 08:32:07 2001 change). Fixed other compile
          errors to allow tests/Message_Queue_Test_Ex.cpp to build.
          FYI... whomever added this, it probably should have been named
          Message_Queue_Ex_Test to conform.

Mon Jan 29 15:30:27 2001  Steve Huston  <shuston@riverace.com>

        * ace/POSIX_Proactor.{h cpp} (ACE_POSIX_SIG_Proactor): Don't
          mask/block all signals, just the one(s) being used for this
          sig proactor instance. Blocking everything can break other
          things, such as debuggers and the ability to kill a program.
          Also, don't setup a handler for the signals being blocked/waited
          as this is a combination whose behavior is undefined.

Sun Jan 28 08:39:17 2001  Carlos O'Ryan  <coryan@uci.edu>

        * tests/Thread_Mutex_Test.cpp:
          Fixed use of ACE_TEXT and string concatenation.

Sun Jan 28 08:03:08 2001  Carlos O'Ryan  <coryan@uci.edu>

        * tests/tests.dsw:
        * tests/Message_Queue_Test_Ex.dsp:
          Add NT project files for the new test

Sun Jan 28 08:32:07 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * netsvcs/lib/Client_Logging_Handler.cpp: Fixed the order in which
          the iostream messages are logged so that we don't bomb out when
          the VERBOSE option is enabled.  Thanks to Craig Rodrigues
          <crodrigu@bbn.com> for helping find this problem.

        * ace/Message_Queue_T.h: Make sure the lock() forwarding method
          forwards to queue_.lock().

        * ace/Message_Queue_T.{h,i,cpp}: There's no reason to dynamically
          allocate the implementation of ACE_Message_Queue_Ex -- instead
          it can be simply an instance of ACE_Message_Queue.

        * ace/Message_Queue_T.h: Make sure that the methods on
          ACE_Message_Queue_Ex are properly virtual.  Thanks to Kitty for
          pointing this out.

Sat Jan 27 19:40:36 2001  Ossama Othman  <ossama@uci.edu>

        * bin/auto_run_tests.lst:

          Added TAO's Portable Interceptor "Service_Context_Manipulation"
          test to the list of tests to run.

Sat Jan 27 19:34:20 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * tests/Config_Test.{h,cpp}: Fixed the use of "bool," which is
          not supported on older compilers.  Thanks to Kitty for reporting
          this.

Sat Jan 27 15:22:03 2001  Ossama Othman  <ossama@uci.edu>

        * tests/Thread_Mutex_Test.cpp (test):

          Added code that tests mutex timeout functionality.

Sat Jan 27 15:16:33 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/POSIX_Proactor.h: Replace ACE_Thread_Mutex with ACE_SYNCH_MUTEX
          to avoid the need for conditional compilation.

        * ace/SUN_Proactor.h: Don't use ACE_Condition<ACE_Thread_Mutex>
          but instead use the ACE_SYNCH_CONDITION, which also avoids the
          need to conditionally compile for threaded platforms.

Sat Jan 27 13:29:51 2001  Ossama Othman  <ossama@uci.edu>

        * ace/config-linux.h:

          Declare the pthread_mutex_timedlock() prototype as an
          'extern "C"' function.  This fixes an "unresolved symbol" link
          error.

Sat Jan 27 10:39:28 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/nightlybuilds/builds.lst:
          Apparently the blank in 'RedHat 7.0' breaks the scoreboard.

Sat Jan 27 01:06:09 2001  Irfan Pyarali  <irfan@cs.wustl.edu>

        * include/makeinclude/platform_sunos5_sunc++.GNU: SPRO 5.0
          compiler should be able to support automatic template
          instantiation.  Also, standard C++ library should be ok.  -g was
          added to DCCFLAGS.

        * ace/config-sunos5.5.h: Turned off
          ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION,
          ACE_TEMPLATES_REQUIRE_SOURCE and ACE_USES_OLD_IOSTREAMS for the
          SPRO 5.0 compiler.

          Thanks to J. Russell Noseworthy <rnosewor@objectsciences.com>
          for contributing the above patches.

Sat Jan 27 00:37:26 2001  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/OS.i:

          - (mutex_lock): Windows code must use relative time since that
          is what WaitForSingleObject() expects.  Also, fixed extra
          "return" before ACE_NOTSUP_RETURN.

          - (thread_mutex_lock): Made thread_mutex_lock() with timeout
          close to the thread_mutex_lock() without timeouts.

Fri Jan 26 21:53:45 2001  Ossama Othman  <ossama@uci.edu>

        * ace/OS.h:
        * ace/OS.i (thread_mutex_lock):

          Added an overloaded version of this method that accepts a
          timeout argument.  It delegates to the standard
          ACE_OS::mutex_lock() method on non-Windows platforms.
          Otherwise, it returns with an ENOTSUP.

          The addition of this method was necessary to fix a compile
          problem related to the ACE_Thread_Mutex class.

        * ace/Synch.i (acquire):

          In ACE_Thread_Mutex::acquire() that accepts a timeout argument,
          call the corresponding ACE_OS::thread_mutex_lock() method.  This
          fixes compile-time error on MS Windows builds due to the fact
          that ACE_mutex_t and ACE_thread_mutex_t are different types on
          that platform.

Fri Jan 26 17:31:26 2001  Ossama Othman  <ossama@uci.edu>

        * ace/OS.i (mutex_lock):

          Fixed unused argument warnings that occured when compiling for
          the single threaded case.

Fri Jan 26 16:58:03 2001  Ossama Othman  <ossama@uci.edu>

        * ace/config-linux.h:

          glibc 2.1.x doesn't have the (very useful) __GLIBC_PREREQ
          macro.  Use a preprocessor test that doesn't rely on it.

Fri Jan 26 16:48:06 2001  Ossama Othman  <ossama@uci.edu>

        * ace/config-qnx-neutrino.h (ACE_HAS_MUTEX_TIMEOUTS):
        * ace/config-qnx-rtp.h (ACE_HAS_MUTEX_TIMEOUTS):

          QNX supports pthread_mutex_timedlock().  Yes!

Fri Jan 26 17:50:38 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/config-win32-common.h:
          ace/config-vxworks-5.x.h: Added ACE_HAS_MUTEX_TIMEOUTS macro.

        * ace/OS.i: Added timed mutex operations for Win32, VxWorks, and
          pSoS.

Fri Jan 26 16:31:15 2001  Ossama Othman  <ossama@uci.edu>

        * ace/OS.h (mutex_lock):

          Updated documentation for the version of this method that
          accepts a timeout value.

        * ace/OS.i (mutex_lock):

          If the platform does not support timed mutexes, then return with
          an ENOTSUP.

        * ace/Process_Mutex.h:
        * ace/Process_Mutex.inl (acquire):

          Added version of this method that accepts a timeout value.

Fri Jan 26 17:50:38 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * examples/Bounded_Packet_Relay/Thread_Bounded_Packet_Relay.cpp (report_stats):
          Fixed some unintentional tabs.  Thanks to Mike Curtis for
          reporting this!

Fri Jan 26 15:34:01 2001  Ossama Othman  <ossama@uci.edu>

        * ace/OS.h:
        * ace/OS.i (mutex_timedlock, mutex_lock):
        * ace/Synch.i (acquire):

          Renamed the ACE_OS::mutex_timedlock() to the overloaded
          ACE_OS::mutex_lock().

Fri Jan 26 14:13:32 2001  Ossama Othman  <ossama@uci.edu>

        * ace/OS.h:
        * ace/OS.i (mutex_timedlock):

          Wrapped the pthread_mutex_timedlock() function.  It times out if
          a lock hasn't been acquired by the given absolute time.

        * ace/Synch.h:
        * ace/Synch.i (acquire):

          Added versions of this method that accept an ACE_Time_Value.
          They are used to prevent blocking definitely while waiting for a
          given mutex to become available.

        * ace/config-linux.h (ACE_HAS_MUTEX_TIMEOUTS):

          glibc 2.2.x supports the pthread_mutex_timedlock() function.

        * ace/config-linux-common.h:

          Undefine ACE_LACKS_{LLSEEK,LSEEK64}_PROTOTYPE prior to include
          the KCC configuration file.  Thanks to Jeff Greif
          <jgreif@befree.com> for reporting this.

        * ace/README:

          Added ACE_HAS_MUTEX_TIMEOUTS to the list of ACE macros.

Fri Jan 26 11:18:15 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Log_Msg.cpp (dump): Fixed some unintentional tabs.  Thanks
          to Mike Curtis for reporting this!

        * ace/SOCK_Dgram_Mcast.cpp (open): Modified the call to
          ACE_SOCK_Dgram::shared_open() to just pass in this->mcast_
          rather than making a local copy that just contained the port
          number.  Thanks to Keith Nicewarner <knicewar@erg.sri.com> for
          reporting this.

        * tests/Makefile.bor (TESTS): Added Message_Queue_Test_Ex.cpp.

Fri Jan 26 13:37:30 2001  Luther J Baker  <luther@cs.wustl.edu>

        * ace/OS.h:

          If using PACE, ACE_stat typedefs to pace_stat_s.

Fri Jan 26 11:18:15 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * tests/Message_Queue_Test_Ex.cpp: Fixed some ASYS_* macros with
          ACE_* stuff.  Thanks to Darrell for reporting this.

        * ace/Message_Queue_T.h,
        * ace/Message_Queue_T.i,
        * ace/Message_Queue_T.cpp:
          Added the ACE_Message_Queue_Ex, which provides a message queue
          abstraction whose type is templatized.  Thanks to Michael Vitalo
          <mvitalo@sprynet.com> for contributing this.

        * tests/run_tests.lst:
        * tests/run_test.lst:
        * tests: Added support for the new Message_Queue_Test_Ex.cpp file.
          Thanks to Michael Vitalo <mvitalo@sprynet.com> for contributing
          this.

Fri Jan 26 09:33:20 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_run_tests.lst:
          Add TAO/tests/Object_Loader to the list

        * include/makeinclude/rules.lib.GNU:
          Allow both .cpp and .c files in the LSRC macro.  This should
          let the PACE guys use the real name for their files, and
          generate proper dependencies.

Fri Jan 26 02:16:42 2001  Darrell Brunsch <brunsch@uci.edu>

        * tests/OS_Test.cpp:

          Changed a use of struct stat to ACE_stat.

Thu Jan 25 19:16:48 2001  Ossama Othman  <ossama@uci.edu>

        * ace/config-linux.h:

          Only define ACE_LACKS_NETDB_REENTRANT_FUNCTIONS and
          ACE_LACKS_THREAD_STACK_SIZE for glibc < 2.1.  glibc 2.1+ has the
          netdb reentrant functions (albeit with funky signatures), and it
          has pthread_attr_setstacksize().

        * ace/OS.h:

          Removed trailing whitespace.

        * ace/OS.i (getprotobyname_r, getprotobynumber_r, gethostbyaddr_r,
          gethostbyname_r, getservbyname_r):

          Added glibc-specific calls to these functions.  This allows us
          to avoid grabbing a lock! Thanks to Ben Strong
          <bstrong@bluelark.com> for providing the patch.

        * THANKS:

          Added Ben Strong to list of contributors.

Thu Jan 25 20:10:24 2001  Irfan Pyarali  <irfan@cs.wustl.edu>

        * include/makeinclude/platform_irix6.x_sgic++.GNU:
        * include/makeinclude/platform_irix5.3_sgic++.GNU:

          Removed -rpath "$(ACE_ROOT)/ace" from LDFLAGS.

        * ace/Message_Queue_T.{h,i}: Moved code from .i to .h to work
          around a compiler bug.  The Sun Forte 6 (CC 5.1) compiler is
          only happy if this is in the header file.

        * ace/Message_Block_T.cpp: Fixed template parameter name mismatch
          between declaration and definition.

          Thanks to J. Russell Noseworthy <rnosewor@objectsciences.com>
          for contributing the above patches.

Thu Jan 25 10:50:35 2001  Steve Huston  <shuston@riverace.com>

        * ace/Reactor.h: Add comments to schedule_wakeup/cancel_wakeup that
          they don't cause an immediate re-examination of the masks like
          register_handler does. Thanks to Oscar Rodriquez
          <Oscar.Rodriquez@eln.ericsson.se> for prompting this clarification.

        * ace/WFMO_Reactor.cpp (ACE_WFMO_Reactor_Notify::handle_signal):
          The call to ACE_Message_Queue::dequeue_head may change the
          ACE_Time_Value passed to it, so don't override ACE_Time_Value::zero's
          const-ness, lest ACE_Time_Value::zero take on some strange new value.
          Thanks to Edan Ayal <edana@bandwiz.com> for this fix.

Thu Jan 25 05:34:58 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Connector.cpp (connector): Added an ACE_const_cast() to
          get rid of the const for the accessor method!

        * ace/Acceptor.cpp (acceptor): Added an ACE_const_cast() to
          get rid of the const for the accessor method!

        * ace/Log_Msg.{h,cpp},
        * ace/Trace.{h,cpp}: The Log_Msg -I flag now uses the current
          ACE_Trace nesting level rather than always using 1.  Thanks to
          Mike Curtis for providing this.

Wed Jan 24 19:43:24 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.i (lstat,stat): Separated win32 cases out.

Wed Jan 24 18:15:59 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.i (fstat): Oops, wrong version of this function was
          modified.

Wed Jan 24 14:44:12 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/FILE.cpp:
        * ace/Filecache.cpp:
        * ace/Filecache.h:
        * ace/OS.h:
        * ace/OS.i:
        * ace/OS.cpp: Changed the signature of <stat>, <fstat>, and
          <lstat> to use ACE_stat instead of "struct stat".  Also changed
          to use _fstat and _stat on win32 instead of <fstat> and <stat>
          directly.  Also replaced several use of "struct stat" to
          ACE_stat.  Thanks to Mike Anderson <manderson@sonusnet.com> for
          reporting this.  [Bug 762]

Wed Jan 24 16:13:10 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/OS_Dirent.cpp: Fixed a bug in the readdir_emulation() method.
          Thanks to Yung Trinh <ytrinh@email.com> for reporting this.

        * ace/Connector.{h,cpp}: Added a new connector() accessor to
          return the underlying ACE_PEER_CONNECTOR.  Thanks to Pedro
          Brandao <pbrandao@inescn.pt> for suggesting this.

Wed Jan 24 10:17:03 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Makefile:
          Add dependencies (again). They were lost is a previous commit.

        * */Makefile:
          Update dependencies (yet another time).

Wed Jan 24 09:41:54 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Configuration.cpp:
          Fixed warning under gcc.  Also made the for() loop more
          ACE-like, not better, but at least consistent.

Wed Jan 24 08:56:16 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/OS.h:
          The changed to document the ACE_SVC_* macros were accidentally
          lost, fixed.

        * ace/Service_Config.cpp:
          New debug message when processing an explicit directive, useful
          to find out when and why TAO invokes
          ACE_Service_Config::process_directive() directly.
          As with all other debug messages in this file it only shows up
          if ACE::debug() returns non-zero.

Wed Jan 24 01:44:47 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Configuration.cpp (expand_path): Fixed a bug with assignment to
          temp in the loop.  Thanks to Jonathan Reis for reporting this!

Tue Jan 23 17:02:42 2001  Darrell Brunsch <brunsch@uci.edu>

        * bin/msvc_auto_compile.pl:

          Removed PACE until we figure out how to handle it in the
          DLL builds.

Tue Jan 23 16:50:35 2001  Darrell Brunsch <brunsch@uci.edu>

        * tests/Dirent_Test.dsp:

          Updated to make consistent with the rest of the dsps in
          this directory in regards to output directories and non-use
          of ACE_ROOT.

        * tests/Dirent_Test.cpp:

          Updated wide character compatibility and removed the use
          of ACE_ROOT (now looks at ../tests", which should give
          the same results).

        * tests/run_test.lst:

          Added the Dirent_Test to the list

        * tests/version_tests/Dirent_Test.dsp: (added)
        * tests/version_tests/Refcounted_Auto_Ptr_Test.dsp: (added)
        * tests/version_tests/version_tests.dsw:

          Used the create_vt_dsps.pl script to update this directory.

Tue Jan 23 18:03:26 2001  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/CDR_Stream.cpp:

          Added patches to read_8 and write_8 sent in by
          Keith Nicewarner <knicewar@erg.sri.com> to deal
          with the ARM byte format for doubles

Tue Jan 23 15:06:18 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/Configuration.cpp:
        * ace/OS_Dirent.cpp:

          Updated wide character compatibility.

        * ace/ace_dll.dsp:

          Removed unneeded verbose library option.

Tue Jan 23 10:54:14 2001  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/config-doxygen.h:
        * bin/autoconf_compile:

          Removed all occurrences of 'smart_proxies' and 'interface_repo'.
          These are no longer necessary.

        * include/makeinclude/ace_flags.bor:

          Added necessary variables to go along with the Borland
          makefiles for the new libraries tao/Domain and
          tao/IFR_Client.

Mon Jan 22 17:01:17 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/OS_String.cpp:
        * ace/OS_String.inl:
        * ace/ace_wchar.inl:
        * ace/config-qnx-rtp.h:

          ACE_HAS_WCHAR fixes.  Support is really bad on QNX RTP
          so we just end up emulating most everything.  As far as
          I could tell, there isn't even a way to convert between
          the two types of strings.

        * ace/OS_Dirent.cpp:

          Rewrote a paragraph to remove the use of "/*" in a larger
          /*...*/ comment, since gcc complains about it.

        * tests/Message_Queue_Test.cpp:

          Backed out some changes to it on Jan 21, since it had
          problems and I couldn't find any ChangeLog entry for the
          changes (mistakenly checked in?).

Mon Jan 22 13:51:11 2001  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/OS_Dirent.cpp (opendir_emulation): Added code to make the
          emmulation work properly on Win32.  Thanks to Edwin Wrench
          <edwin.wrench@itt.com> for finding this.

        * tests/Dirent_Test.cpp:
          tests/Makefile:
          tests/run_tests.bat:
          tests/run_tests.lst: Added test to verify correctness of above
          fix. This test attempts to scan $ACE_ROOT/tests and will fail if
          the number of entries is 0 or 1.

Mon Jan 22 10:21:20 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Map_Manager.h: Clarify that find() returns 0, rather than
          saying "a non-negative number".  Thanks to Albert Wijna
          <albert.wijnja@meco.nl> for clarifying this.

Mon Jan 22 15:38:12 2001  Johnny Willemsen <jwillemsen@remedy.nl>

        * ace/Containers_T.h:
          ace/Containers_T.cpp:
          Added operator* to the ACE_Ordered_Multiset_Iterator class

        * tests/Ordmultiset_test.cpp
          Expanded test for the new operator* of the ACE_Ordered_Multiset_
          Iterator class

Sat Jan 20 14:53:07 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Configuration.{h,cpp}: Fixed some problems with const char *
          that was busting the compilation.  Thanks to Carlos for pointing
          this out.

        * ace/Configuration.{h,cpp}: Added several fixes for
          mistakes with memory management and other minor problems.
          Thanks to Jonathan Reis <reis@stentorsoft.com> for contributing
          these fixes!

Sat Jan 20 10:49:05 2001  Carlos O'Ryan  <coryan@uci.edu>

        * docs/ACE-guidelines.html:
          Update the guidelines to point people to the Doxygen
          documentation, instead of the now abandoned OSE tools.

Sat Jan 20 10:21:08 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/OS.cpp:
          Another pass fixing problems with ACE_BEGINTHREADEX() under
          Win32, this time Win32 is working fine.

Sat Jan 20 10:20:50 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * doc/tutorials: Integrated the new Service Configurator tutorial
          into the main tutorials page.

Fri Jan 19 16:57:43 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Svc_Handler.h: Updated the comments to explain why
          operator new is overloaded.  Thanks to Kirill Kuolechov
          <Kirill.Koulechov@gmx.net> for reporting this.

Fri Jan 19 15:39:43 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/OS.cpp:
          QNX/RTP has the same problem that LynxOS has, after fork() is
          invoked trying to destroy the preallocated objects in
          ACE_OS_Object_Manager fails.
          Factor out this variation in a new macro:
          ACE_HAS_BROKEN_PREALLOCATED_OBJECTS_AFTER_FORK

        * ace/config-lynxos.h:
        * ace/config-qnx-rtp.h:
          Define the new macro for the two relevant platforms.

        * ace/README:
          Document the macro.

Fri Jan 19 15:08:37 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/OS.cpp:
          I disabled too much in the commit at 10:50am... Now it seems to
          be OK.

        * ace/Makefile:
          Remove extra -v

Fri Jan 19 13:16:49 2001  Priyanka Gontla  <pgontla@ece.uci.edu>

        * include/makeinclude/platform_hpux_aCC.GNU:
          Added new options to the CCFLAGS so that the known future errors
          arising because of HPUX are suppressed.

Fri Jan 19 13:01:13 2001  Priyanka Gontla  <pgontla@ece.uci.edu>

        * ace/SSL/Makefile:
          Put a check for defining ACE_SHLIBS to get it compiled on HPUX.

        * ace/RMCast/Makefile:
        * ace/Makefile :
          Updated dependencies

        * ace/config-all.h
          Fix a build problem on HP-UX 11.00 with aCC A.03.25.  The macro
          used to determine the use of the std namespace changed from
          RWSTD_NO_NAMESPACE to _NAMESPACE_STD.  NOTE: I did preserve the
          check for RWSTD_NO_NAMESPACE with aCC versions less than A.03.25.

          Thanks to Chad Elliott  <elliott_c@ociweb.com> for making this fix.

Fri Jan 19 11:22:42 2001  Priyanka Gontla  <pgontla@ece.uci.edu>

        * docs/tutorials/022/client_handler.cpp :
        * docs/tutorials/022/client_hander.h :
        * docs/tutorials/022/Acceptor_Service.cpp :
        * docs/tutorials/022/Acceptor_Service.h :
        * docs/tutorials/022/server.cpp :
        * docs/tutorials/022/Makefile :

        * docs/tutorials/022/client/Makefile:
        * docs/tutorials/022/client/client.cpp:

        * docs/tutorials/022/page01.html:
        * docs/tutorials/022/page02.html:
        * docs/tutorials/022/page03.html:
        * docs/tutorials/022/page04.html:
        * docs/tutorials/022/page05.html:

          Developed a new tutorial for the ACE_Service_Configurator.
          Based on the ACE tutorial 005.

Fri Jan 19 10:50:11 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/OS.cpp:
          Use the Green Hills specific tricks *only* if we are compiling
          under Green Hills, and only for the platform where they make
          sense (in this case Win32).

Thu Jan 18 23:21:53 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/OS.h:
          Document the infamous ACE_STATIC_SVC macros.

Thu Jan 18 23:50:35 2001  Rick Stille  <stille_r@ociweb.com>

        The Green Hills(GHS) Native x86 compiler does not provide support
        for 64-bit integers, structural exceptions, or DLL's. Thus the
        keywords __int64, __try, __dllimport, etc., are not defined. In
        addition, exceptions do not work in a multi-threaded environment.
        The following changes were made to address these shortcomings.

        * ace/Basic_Types.h: Because the GHS compiler has both
          ACE_LACKS_LONGLONG_T and ACE_WIN32 defined, the
          ACE_LACKS_LONGLONG_T macro must appear first, so the order of
          these two macros has been reversed in the defines of both
          ACE_UINT64_LITERAL(n) and ACE_UINT64_DBLCAST_ADAPTER(n).

        * ace/config-win32-common.h: The typedef of ACE_UINT64 as an
          unsigned __int64 and the define of ACE_HAS_LLSEEK are blocked
          out for ghs.

        * ace/config-win32-ghs.h: This is the new configuration file for
          Green Hills/Win32.

        * ace/Configuration.cpp(resolve_key): The "return 0" at the end of
          this function has been blocked out for ghs to eliminate an
          "unreachable code" warning.

        * ace/Event_Handler_T.h(handle_signal): The type of the "signum"
          parameter has been changed to "int" so that it matches the type
          in the Event_Handler class.

        * ace/Event_Handler_T.i(handle_signal): The type of the "signum"
          parameter has been changed to "int" so that it matches the type
          in the Event_Handler class.

        * ace/High_Res_Timer.cpp(global_scale_factor): The Native x86
          compiler defines "QuadPart" in the LARGE_INTEGER union as a
          "double," so it cannot be used in the calculation of
          "global_scale_factor." Instead, for GHS, the low and high parts
          of the LARGE_INTEGER structure are copied into an ACE_UINT64
          structure (which is actually an ACE_U_LongLong) and the
          ACE_U_LongLong operators are used. The code segment if
          (ACE_High_Res_Timer::global_scale_factor_ == 1u) // Failed to
          retrieve CPU speed from system, so calculate it.
          ACE_High_Res_Timer::calibrate (); is unreachable hen ACE_WIN32
          is defined, so it has been blocked out for Win32 platforms to
          silence the Green Hills "unreachable code" warning.

        * ace/High_Res_Timer.i(hrtime_to_tv): There is no assignment
          operator that converts an ACE_U_LongLong to a "long," so an
          intermediate ACE_U_LongLong variable "usec64" has been
          introduced. The type of "msec" and "usec" have been changed from
          "long" to ACE_UINT32, as have been the casts. The conversion is
          then carried out by using the lower part of "usec64."

        * ace/Local_Name_Space_T.cpp(remap): The "DWORD" cast has been
          removed from both EXCEPTION_CONTINUE_SEARCH and
          EXCEPTION_CONTINUE_EXECUTION beause the function return value is
          of type "int" and the cast was causing an "integer conversion
          resulted in a change of sign" warning.

        * ace/Memory_Pool.cpp(map): Removed references to the "mem_offset"
          variable because it was not being used and the compiler was
          issuing a warning to this effect.

        * ace/NT_Service.cpp(startup): This function was returning "-1"
          when svc_sc_handle() failed, and returning a "0" when
          QueryServiceConfig() failed. Since the return type of this
          function is "DWORD," the compiler was issuing an "integer
          conversion resulted in a change of sign" warning for the "-1"
          value. Upon investigation of this issue, it was discovered that
          "0" is a valid service type value, and thus the use of "0" to
          indicate failure is a bug. The return value for svc_sc_handle()
          failure has been changed to "MAXDWORD - 1," which is the DWORD
          equivalent of "-2," and the return value for failure of
          QueryServiceConfig() has been changed to "MAXDWORD," which is
          the DWORD equivalent of -1.

        * ace/OS.cpp: The compiler cannot handle a 64-bit literal, so the
          literal passed to FILETIME_to_timval_skew has been created as
          ACE_U_LongLong(0xd53e8000, 0x19db1de).

        * ace/OS.cpp(set): The Native x86 compiler defines "QuadPart" in
          the LARGE_INTEGER union as a "double," so it cannot be used in
          the calculations of tv_sec and tv_usec.  Instead, the low and
          high parts of the LARGE_INTEGER structure are copied into an
          ACE_U_LongLong structure, and the ACE_U_LongLong operators are
          used.

        * ace/OS.cpp(operator FILETIME): The Native x86 compiler defines
          "QuadPart" in the LARGE_INTEGER union as a "double," so it
          cannot be used in the calculation of file_time. Instead, tv_sec
          and tv_usec are converted iinto ACE_U_LongLong structures and
          the ACE_U_LongLong operators are used.

        * ace/OS.cpp(uname): The Native x86 compiler names both the union
          and the structure within the SYSTEM_INFO structure, so the
          "wProcessorArchitecture" member within the "s" structure, which
          is itself within the "u" union, must be accessed by using
          ".u.s."

        * ace/OS.cpp(ACE_BEGINTHREADEX): Green Hills compiler gets
          confused when __stdcall is imbedded in parameter list, so the
          type ACE_WIN32THRFUNC_T has been defined, then used within the
          parameter list of ::_beginthreadex().

        * ace/OS.h(ACE_Time_Value): The Native x86 compiler defines
          "DWORDLONG" as type "double," so FILETIME_to_timval_skew is
          instead defined as type ACE_U_LongLong.

        * ace/OS.h: The pragmas "#pragma warning( disable : ... " are
          unknown to the Native x86 compiler, so it produces warnings to
          this effect. These pragma have been blocked out for ghs.

        * ace/OS.h: Because the Native x86 compiler does not support the
          __int64 keyword, the typedef of ACE_hrtime_t has been changed
          from "unsigned __int64" to "ACE_UINT64" for ghs. Because no
          usage of "ACE_QWORD" could be foound, its definition has been
          blocked out for ghs.

        * ace/OS.i(gettimeofday):The code at the end of this function is
          not reachable if either ACE_HAS_WINCE or ACE_WIN32 is
          defined. In order to quiet the Green Hills compiler warnings
          about unreachable code, this code has been blocked out for
          ACE_HAS_WINCE and ACE_WIN32. With this code blocked out,
          however, the variables "tv" and "result" are not used, and the
          compiler warns about about variables defined, but never used. In
          order to quiet these warnings, the definitions of these two
          variables have been blocked out for ACE_HAS_WINCE and ACE_WIN32.

        * ace/OS.i(gethrtime): The ACE_gethrtime() function is not meant
          to be used by a Win32 platform, but because both "ghs" and
          "ACE_HAS_PENTIUM" are defined for the Native x86 platform, a
          call to ACE_gethrtime() was included in the code.  This problem
          has been solved by adding "&& !defined(ACE_WIN32)" to the two
          "... defined (ghs) && defined (ACE_HAS_PENTIUM)" statements
          which block out references to ACE_gethrtime().

          The Native x86 compiler defines "QuadPart" in the LARGE_INTEGER
          union as a "double," so it cannot be used as the return
          value. Instead, because the return type is "ACE_hrtime_t," which
          is type "ACE_UINT64," the low and high parts of the
          LARGE_INTEGER structure are copied into an ACE_UINT64, which is
          then returned.

        * ace/Process_Manager.cpp(wait): The "result >= WAIT_OBJECT_0"
          test within the ACE_ASSERT statement causes the Native x86
          compiler to produce a pointless comparison of unsigned
          integer with zero warning because "result" is of type
          "DWORD," which is defined by the Native x86 compiler as type
          "unsigned int."  This test has been blocked out for ghs.

        * ace/Profile_Timer.cpp(elapsed_time): Because the "__int64"
          keyword is not defined by the Native x86 compiler, it cannot be
          used to cast the value of "delta_t" in the calculation of
          "real_time." But "delta_t" is of type "ACE_hrtime_t," and
          ACE_hrtime_t is typedefed as ACE_U_LongLong, so the division
          operator defined for in the ACE_U_LongLong class can be used
          directly with a divisor of type "double." Thus the "__int64"
          cast has been removed for ghs.

        * ace/Sock_Connect.cpp(get_reg_value): This function is used
          within the function get_ip_interfaces() function only when
          either ACE_HAS_WINSOCK2 is not defined or when ACE_HAS_WINSOCK2
          is defined as "0." Because ACE_HAS_WINSOCK2 is defined on the
          Native x86 platform, the compiler was issuing a defined, but
          never used warning. This warning has been eliminated by
          blocking out the definition of get_reg_value() when
          ACE_HAS_WINSOCK2 is defined as a value other than "0."

        * ace/Stats.cpp(accumulate): The comparison "rhs.samples_count ()
          == 0" was producing a warning because rhs.samples_count()
          returns an ACE_UINT32, but is being compared to the signed
          literal "0." The "0" has been changed to "0u."

        * ace/WFMO_Reactor.cpp(ok_to_wait): The comparison of the "switch"
          statement parameter "result" to "DWORD" values in the case
          statements elicited an "integer conversion resulted in a change
          of sign" warning from the compiler, so the type of "result" has
          been changed to "DWORD."

        * ace/WFMO_Reactor.cpp(dispatch): The comparison of the "switch"
          statement parameter "wait_status" to "DWORD" values in the case
          statements elicited an "integer conversion resulted in a change
          of sign" warning from the compiler, so the type of "wait_status"
          has been cast to "DWORD."

        * ace/WFMO_Reactor.cpp(dispatch_handles): The "wait_status >=
          WAIT_OBJECT_0" comparison was producing a pointless
          comparison of unsigned integer with zero warning because
          "wait_status" is an unsigned integer. This was a known problem
          with Borland, so the blocking out of this comparison has been
          extende to ghs.

        * tests/Basic_Types_Test.cpp(main): Because both the
          ACE_LACKS_LONGLONG_T and ACE_WIN32 macros are defined, the
          ACE_LACKS_LONGLONG_T macro must appear first, so the order of
          these two macros has been reversed.

        * tests/Cached_Accept_Conn_Test.cpp: The template class
          ACE_Node<ACE_HANDLE> must be explicitly instantiated for this
          platform.

        * tests/Cached_Conn_Test.cpp: The template class
          ACE_Node<ACE_HANDLE> must be explicitly instantiated for this
          platform.

        * tests/Handle_Set_Test.cpp: The template class
          ACE_Node<ACE_HANDLE> must be explicitly instantiated for this
          platform. This was already being done for the _CRAYMPP, so it
          has been extended to ghs.

        * tests/Malloc_Test.cpp: Because the Native x86 compiler does not
          support structural exceptions, it cannot support the "remap"
          function, so the blocking of the ACE_TEST_REMAP_ON_FAULT macro
          definition, which was already in effect for linux, has been
          extended to ghs.

Thu Jan 18 12:49:53 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/SUN_Proactor.cpp: Added support for cancel_aiocb().  Thanks
          to Alexander Libman <Alibman@baltimore.com> for contributing
          this.

        * tests/Makefile.bor (TESTS): Added Config_Test so that this test
          runs on Borland.

        * tests: Moved the config_test stuff (which tests ACE_Configuration*
          classes) from the examples/Configuration/ directory to the
          tests/ directory and made it a one-button test.

        * ace/Future.h: Changed the order of the thread mutex and the condition
          variable to avoid confusion in the future regarding "order of
          initialization."  Thanks to Edan Ayal <edan@bandwiz.com> for
          reporting this.

        * examples/Configuration: Updated this example to include the new
          test for the ACE_Configuration_Heap methods.  Thanks to Michael
          Searles <msearles@base16.com> for contributing this.

Thu Jan 18 18:55:37 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/nightlybuilds/builds.lst:
          Add the RedHat_Implicit_Templates build.

Thu Jan 18 18:48:33 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Log_Msg.cpp:
          Declare sys_nerr as const int under QNX/RTP (and NTO).

        * ace/Pipe.cpp:
          Use pipe() under QNX because it lacks both socketpair() and it
          cannot open a socket to itself.

        * ace/config-qnx-rtp.h:
          Remove ACE_NTRACE hacks.

        * include/makeinclude/platform_qnx_rtp_gcc.GNU:
          Do not enable the repo by default it breaks QNX.
          Instead of removing the definition of DCFLAGS by default we
          set debug=0 all the time, that seems like a cleaner way to
          disable debugging.

Thu Jan 18 09:34:35 2001  Carlos O'Ryan  <coryan@uci.edu>

        * include/makeinclude/platform_linux.GNU:
          The -fno-implicit-templates flag was hardcoded, but this gave
          the users no recourse to remove should they want to use
          -fimplicit-templates.
          The macro IMPLICIT_TEMPLATES_FLAG is used to set the flag now,
          unless the user provides a value for the macro the makefiles
          continue to work as they did before this change, i.e., adding
          -fno-implicit-templates to CCFLAGS.
          Notice that this functionality was available in
          platform_linux_lxpthreads.GNU, but dissapeared when everything
          was rolled into platform_linux.GNU.

Thu Jan 18 06:26:42 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Configuration.{h,cpp}: Added functionality to read in all
          values in a config file without requiring a type prefix on each
          value, skips whitespace and allows comments on the end of lines.
          Thanks to Michael Searles <msearles@base16.com> for contributing
          this.

Wed Jan 17 11:48:42 2001  Darrell Brunsch <brunsch@uci.edu>

        * bin/msvc_auto_compile.pl:

          Added PACE to the list of ACE directories so PACE is
          compiled in full auto builds.

Wed Jan 17 10:00:42 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/Handle_Ops.cpp: (handle_timed_open)

          Removed the use of ACE_NONBLOCK on Win32.  This use
          didn't function as expected, since ACE_NONBLOCK would
          be interpreted as O_WRONLY.  Also, the CreateFile API
          call doesn't support any nonblocking option, so
          redefining ACE_NONBLOCK would not seem to fix anything.

          Thanks to Matthias Wittig <m.wittig@com-on.de> for reporting
          a problem report form about this.

        * bin/PerlACE/Process_Unix.pm:

          Fixed up the use of the RUNNING state, so wait and kill
          work properly.  Also made Kill automatically use waitpid
          (since I can't think of any time we'd kill without wanting to
          clean up the resources).

Wed Jan 17 07:44:29 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * apps/Gateway/Gateway/Concrete_Connection_Handlers.cpp (send): Set errno to
          EWOULDBLOCK if n < len so that the caller will initiate a
          handle_output()-driven reply.  Thanks to Klaus H. Wolf
          <hw@cyland.com> for reporting this.

        * ace/Log_Msg.h (ACE_Log_Msg): Clarified that only the current message
          is stored in TSS.  Thanks to Pierre Oberson
          <oberson@nagra-kudelski.ch> for pointing out the need for this
          clarification.

        * examples/Log_Msg/test_log_msg.cpp (main): Fixed the example by
          adding ACE_Log_Msg::PROCESS so that the messages do not print
          out (which is the correct behavior for this test).  Thanks to
          Mike Curtis <mccurry@my-deja.com> for reporting this.
        * apps/Gateway/Gateway/Concrete_Connection_Handlers.cpp (send): Set errno to
          EWOULDBLOCK if n < len so that the caller will initiate a
          handle_output()-driven reply.  Thanks to Klaus H. Wolf
          <hw@cyland.com> for reporting this.

        * ace/Log_Msg.h (ACE_Log_Msg): Clarified that only the current message
          is stored in TSS.  Thanks to Pierre Oberson
          <oberson@nagra-kudelski.ch> for pointing out the need for this
          clarification.

        * examples/Log_Msg/test_log_msg.cpp (main): Fixed the example by
          adding ACE_Log_Msg::PROCESS so that the messages do not print
          out (which is the correct behavior for this test).  Thanks to
          Mike Curtis <mccurry@my-deja.com> for reporting this.

Tue Jan 16 15:28:22 2001  Carlos O'Ryan  <coryan@uci.edu>

        * netsvcs/lib/Server_Logging_Handler_T.cpp:
          The formal parameter names must match in the .h and .cpp file
          to make Sun/CC 6.0 happy.

Tue Jan 16 11:25:32 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Log_Msg.cpp (log): Convert strerror() text string to a
          TCHAR so that this call will work correctly with Unicode.
          Thanks to Matthias Wittig <m.wittig@com-on.de> for reporting
          this.

Tue Jan 16 09:58:20 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/ace_wchar.inl:

          Updated ACE_Ascii_To_Wide and ACE_Wide_To_Ascii to
          preserve null pointers.

          Thanks to Matthias Wittig <m.wittig@com-on.de> for
          reporting this and suggesting a fix.

Tue Jan 16 10:47:33 2001  Frank Hunleth  <fhunleth@cs.wustl.edu>

        * ace/config-win32-common.h:
        * ace/config-win32-msvc.h:
          Moved #define ACE_HAS_LLSEEK from config-win32-common.h to
          config-win32-msvc.h, since _lseeki64 isn't defined for
          Borland.  Also implicitly removed ACE_HAS_LLSEEK for the
          VisualAge compiler - it might have worked (didn't know,
          couldn't test)

Mon Jan 15 15:22:42 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Asynch_IO.h: Changed the ACE_Asynch_Read_Stream::read()
          method's "bytes_to_read" parameter to "num_bytes_to_read" to
          workaround a weird problem with some compilers.  Thanks to Chris
          Kohlhoff <chris@kohlhoff.com> for this fix.

        * examples/Service_Configurator/IPC-tests/README: Updated this
          file so that it's now up-to-date and also explains how to
          reconfigure a server if SIGHUP isn't supported.  Thanks to Mike
          Curtis <mccurry@my-deja.com> for reporting this.

Mon Jan 15 12:13:48 2001  Darrell Brunsch <brunsch@uci.edu>

        * bin/nightlybuilds/builds.lst: [Added]
        * bin/nightlybuilds/scoreboard_update.pl: [Added]

          Moved the scoreboard stuff from the internal cvs repos
          to this one, so it is easier for people to edit the
          list.

Mon Jan 15 12:29:53 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/config-macosx.h: Fixed typo so that ACE_HAS_CLOCK_GETTIME
          is spelled correctly.  Thanks to Mike Curtis
          <mccurry@my-deja.com> for reporting this.

        * ace/Strategies_T.cpp (open): Replace the ACE_OS::strncpy() functions
          with ACE_OS::strcpy() functions.  Thanks to Ron Hashimshony
          <Ron@bandwiz.com> for reporting this.

Mon Jan 15 09:44:16 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/RMCast/Makefile:
          Fixed Makefile to link the ACE library, otherwise we get
          undefined symbols under certain platforms (AIX).  Thanks to
          Scott Bolin <scott.bolin@pgs.com> for pointing this out.

Mon Jan 15 09:11:12 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/config-win32-common.h: Added support for ACE_HAS_LLSEEK, though
          this should probably be changed to be compiled only on some
          Win32 platforms.

        * ace/OS.{h,i}: Added support for ACE_OS::llseek() on Win32.  Thanks
          to Nick Lin <nicklin@vantech.com.tw> for contributing this.

        * ace/Log_Priority.h: Clarified the fact that we only use 12 bits
          for ACE_Log_Priority.  Thus, the remaining bits are available
          for application use.  Thanks to David Singer
          <David_P_Singer@res.raytheon.com> for motivating this comment.

Sun Jan 14 16:53:11 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Configuration.{h,cpp}: Fixed a memory leak that occurred
          with transient heaps.  Also added a list of current limitations
          to import/export routine.  Thanks to Chris Hafey
          <chafey@stentor.com> for contributing this stuff.

Fri Jan 12 20:46:05 2001  Angelo Corsaro  <corsaro@cs.wustl.edu>

        * include/makeinclude/platform_qnx_rtp_gcc.GNU:
          Platform macros needed to run ACE on QNX RTP.

        * ace/config-qnx-rtp.h:
          Configuration file needed to run ACE on QNX RTP.

        * ACE-INSTALL.html:
          Added documentation on how to install ACE on QNX RTP,
          and the issue with the current version of QNX RTP.


Fri Jan 12 14:59:15 2001  Carlos O'Ryan  <coryan@uci.edu>

        * tests/RMCast/RMCast_Fragment_Test.cpp:
          Fixed conversion from 64-bit ulong to 32-bit ulong under some
          VxWorks compilers where 64 bits are emulated.  Thanks to Edwin
          McKay <mckayea@betalasermike.com> for pointing this out.

Fri Jan 12 07:18:16 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/OS.{h,i}: Moved some "using std::*" definitions from OS.i to
          OS.h.  Thanks to Mike Curtis <mccurry@my-deja.com> for reporting
          this and to Christopher Kohlhoff <chris@kohlhoff.com> for
          suggesting the fix.

Fri Jan 12 15:34:28 2001  Steve Huston  <shuston@riverace.com>

        * ace/Managed_Object.h: Added <TYPE> to the unimplemented operator=
          declaration. Fixes compile w/ IBM C/C++ 3.6 on AIX.

Fri Jan 12 07:59:19 2001  Joe Hoffert  <joeh@cs.wustl.edu>

        * Makefile:
          Add the PACE directory back into the build. PACE should
          not generate any build failures for the platforms
          currently supported.

Wed Jan 10 23:30:21 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/FILE_Addr.cpp (set): Replace (sizeof this->filename_)
          with (sizeof this->filename_ / sizeof (ACE_TCHAR)).  Thanks to
          Matthias Wittig <m.wittig@com-on.de> for reporting this.

Tue Jan  9 07:27:19 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Containers_T.h: Clarified that the ACE_Ordered_Multiset class
          allows duplicates.  Thanks to Albert Wijna
          <albert.wijnja@meco.nl> for clarifying this.

Sat Jan  6 10:20:55 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/File_Lock.{h,inl}: Made the get_handle() method const.
          Thanks to Johnny Willemsen <johnny.willemsen@meco.nl> for
          reporting this.

        * ace/TP_Reactor.h:
        * ace/Get_Opt.h:
        * ace/Caching_Utility_T.h: Added "ACE_UNIMPLEMENTED_FUNC" macros
          for all copy constructors and assignment operators.  Thanks to
          Johnny Willemsen <johnny.willemsen@meco.nl> for reporting this.

Fri Jan  5 01:09:28 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * performance-tests/Misc/context_switch_time.cpp (get_options),
        * performance-tests/Misc/preempt.cpp (open),
        * examples/Reactor/Misc/pingpong.cpp (run_svc),
        * examples/Reactor/Misc/notification.cpp (main),
        * examples/IPC_SAP/FIFO_SAP/FIFO-test.cpp (main),
        * examples/Shared_Malloc/Options.cpp (print_usage_and_die),
        * examples/Service_Configurator/IPC-tests/client/: Updated all
          these programs so that don't abort via %a, but instead call
          ACE_OS::exit().  Thanks to Mike Curtis <mccurry@my-deja.com> for
          suggesting this.

        * apps/Gateway/Peer/Options.cpp (print_usage_and_die): Make sure to
          actually *die* when we're done with this function!  Thanks to
          Mike Curtis <mccurry@my-deja.com> for suggesting this.

Thu Jan  4 00:10:26 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Select_Reactor_T.i: The cancel_timer() method should return the
          number of events canceled, rather than 0 or 1.  Thanks to Joe
          Guan <jguan@mistwireless.com> for reporting this and providing
          the fix.

        * ace/Synch.h: Added an acquire (ACE_Time_Value &) method to ACE_Null_Mutex
          so that this will work properly when
          ACE_HAS_OPTIMIZED_MESSAGE_QUEUE is enabled.  Thanks to Yuriy
          Zaporozhets <zaz@internet-zahav.net> for reporting this.

Wed Jan  3 23:00:52 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Lib_Find.cpp (ldfind),
        * ace/Makefile.bor (CFLAGS),
        * include/makeinclude/outputdir.bor (OBJDIR),
        * ace/config-win32-msvc.h: Added support for the new ACE_LD_DECORATOR_STR
          macro which is used to work around the fact that Borland
          attaches a so-called "decorator suffix" to all library names.
          Thanks to Chris Kohlhoff <chris@kohlhoff.com> for reporting
          this.

        * ace/Lib_Find.h: Fixed a typo where ACE_LIB_FIND_H was misspelled.
          Thanks to Chris Kohlhoff <chris@kohlhoff.com> for reporting
          this.

        * ace/SOCK_Stream.i,
          ace/MEM_Stream.i: Updated the calls to ACE_OS::shutdown() to use
          the new macros described below!

        * ace/OS.h: Added better support for the ACE_OS::shutdown() second
          parmeter in the form of new macros ACE_SHUTDOWN_READ,
          ACE_SHUTDOWN_WRITE, and ACE_SHUTDOWN_BOTH.  Thanks to Mike
          Curtis <mccurry@my-deja.com> for suggesting this.

        * ace/SOCK_Stream.h: Clarified the role of the timeout parameters in
          the various methods.  Thanks to Allen Broadman
          <broadmana@plural.com> for motivating this.

Thu Jan 11 17:24:30 2001  Carlos O'Ryan  <coryan@uci.edu>

        * Makefile:
          Add new target 'Core' to quickly compile the basic ACE+TAO
          components.

Thu Jan 11 09:56:43 2001  Frank  <fhunleth@cs.wustl.edu>

        * ACE version 5.1.12 released.

Thu Jan 11 05:38:24 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/TP_Reactor.cpp: Reverted the change that was made for SPRO
          5.1 compilers. The change that was reverted is this

          Thu Jan  4 17:14:33 2001  Balachandran Natarajan
          <bala@cs.wustl.edu>

        * ace/Handle_Set.cpp: Changed the macro

          ACE_DIV_BY_WORDSIZE(x) ((x) >> (ACE_Handle_Set::WORDSIZE)) to

          ACE_DIV_BY_WORDSIZE(x) ((x) >> ((int)
          ACE_Handle_Set::WORDSIZE)). This seems to be a better
          fix. Thanks to David Allen <dallen@storm.com> for suggesting
          this.

Tue Jan  9 09:53:53 2001  Carlos O'Ryan  <coryan@uci.edu>

        * tests/MEM_Stream_Test.cpp:
          Run the event loop for at most 1 minute.  After that we know
          that something is amiss with the client threads, and we should
          exit.  This fixes the deadlock problems we were seeing in the
          nightly builds.
          The real cause of the problem is something broken with the way
          MEM_Addr objects compare local addresses, sometimes they fail to
          compare equal.  In the test this results in failed connections.

Mon Jan  8 18:53:39 2001  Sharath R. Cholleti  <sharath@cs.wustl.edu>

        * examples/Map_Manager/test_hash_map_manager.cpp:
          Removed template instantiations for
          ACE_Guard<ACE_SYNCH_RW_MUTEX>,
          ACE_Read_Guard<ACE_SYNCH_RW_MUTEX>, and
          ACE_Write_Guard<ACE_SYNCH_RW_MUTEX> to fix linker
          errors under Lynx_I386.

Mon Jan  8 10:44:57 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/OS.h:

          Added some more protection (!VXWORKS) around the cuserid
          inline statement since VXWORKS doesn't have cuserid.

Mon Jan 08 10:04:55 2001  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Thread_Manager.cpp (terminate): Reordered some statements so
          we get the thread descriptor's log_msg pointer before we delete
          the thread descriptor.  Thanks to Tomer Amiaz
          <Tomer@bandwiz.com> for reporting this.

Sun Jan  7 16:51:42 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/ace_dll.dsp:

          Removed the PACE libraries from linking.  We are going to come
          up with a different solution for pace.

        * docs/run_test.txt:

          Changed the instructions a little to use PerlACE::LocalFile
          for the server's IOR file.

Sun Jan  7 08:59:09 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * tests/DLL_Test.cpp: Added a message in a ACE_ERROR statement.
        * tests/run_test.lst: Disabled MEM_Stream_Test in Linux.

Thu Jan  4 17:14:33 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/TP_Reactor.cpp (dispatch_i): Eliminate a portion of the
          code from SunCC5 builds. This piece of code was trying to set
          things right when it sees all the masks clear and the <size_>
          greater than zero. This seems to be creating problems with SunCC
          5 builds alone. Commenting out this piece for SunCC5 helps. This
          should also be a work around for the bug #750 in bugzilla.

Thu Jan 04 17:07:48 2001  Luther Baker  <luther@cs.wustl.edu>

        * ace/ace_dll.dsp

          Consistent typography (win32 specific backslash).

Thu Jan  4 15:34:14 2001  Luther J Baker  <luther@cs.wustl.edu>

        * ace/ace_dll.dsp

          Added PACE library to the ACE DLL project file.
          (also changed the library search path)

Wed Jan  3 17:24:11 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/OS.h:

          Mistakenly changed the ace_timezone () method to use
          timezone () instead of timezone.  Changed back.

Wed Jan  3 16:00:22 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/ACE.cpp

          Changed the types of day_of_week_name and month_name in
          ACE::timestamp to ACE_TCHAR (since that was the data
          being assigned to it and the type that is later expected).
          This fixed errors in Win32's Unicode build.

Wed Jan  3 15:44:31 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/OS.i:

          Removed ACE_TIMEZONE since we found another workaround for
          platforms that define timezone () as a macro.

        * ace/OS.h:
        * ace/OS.i:

          Moved much of the code from ACE_OS::timezone and
          ACE_OS::difftime into ace_timezone and ace_difftime.  Since
          some platforms don't have timezone or difftime, we needed
          to do something here so those methods aren't used.  Instead
          of figuring out what larger #if !... should be, it is easier
          (and less error prone) to just move the code here.

Wed Jan  3 13:10:39 2001  Darrell Brunsch <brunsch@uci.edu>

        * apps/JAWS/server/HTTP_Helpers.cpp:

          Added ACE_MT around an ACE_Guard to remove an unused var
          warning in the single threaded builds.

Wed Jan  3 12:56:13 2001  Darrell Brunsch <brunsch@uci.edu>

        * ace/Timer_Wheel_T.cpp:
        * ace/Timer_Wheel_T.h:

          Doug noticed some redundant code in expire while making his
          change on the 21st.  I checked and he was right, it looks like
          I was moving around the loop termination conditionals and left
          some around.  Removed them and also added some better comments
          and made it more doxygen complient.

Wed Jan  3 12:06:20 2001  Darrell Brunsch <brunsch@uci.edu>

        * tests/Refcounted_Auto_Ptr_Test.dsw:

          Projects are listed in tests.dsw, so this is unneeded.

        * tests/tests.dsw:

          Added Refcounted_Auto_Ptr_Test.dsp.

Tue Jan  3 10:30:42 2001  Darrell Brunsch <brunsch@uci.edu>

        * docs/msvc_notes.txt:

          Added this file explaining some issues or explanations on how
          ACE/TAO are set up for use with MSVC.  Mainly I'm thinking of
          this as a place to put random stuff about ACE and TAO on MSVC.

          Plus I think we need more nifty doxygen documents. ;-)  A tip of
          the hat goes to Letha Etzkorn <letzkorn@cs.uah.edu> and
          Shivakumar Patil <shivakumar.patil@stdc.com> for bringing up
          questions that led to the dump of info to this file.

        * ACE-INSTALL.html:

          Added a reference to msvc_notes.txt.

Wed Jan  3 09:15:24 2001  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/ACE.cpp:

          Replaced these lines

            SYSTEMTIME local;
            ::GetLocalTime (&local);

          in the timestamp() method.
          They were removed the last time this file was
          modified, breaking the Win32 builds.

Wed Jan 03 05:49:11 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/OS.h:
          The ace_cuserid() helper cannot be defined in Win32

Wed Jan 03 05:42:20 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/OS.h:
          Remove broken #include of unistd.h, it was a debug statement
          that sneaked through the commit.

Tue Jan  2 18:33:03 2001  Carlos O'Ryan  <coryan@uci.edu>

        * ace/OS.h:
        * ace/OS.i:
          Workaround platforms that define timezone, difftime or cuserid
          as macros.  Instead of just dropping support for the ACE_OS::XXX
          method we create an inline ace_XXX() function, that uses the
          original macro expansion, then we #undef the offending macro,
          and use the inline function in the code.

        * ace/config-tru64.h:
          Enable cuserid() again, with the new workaround it should work
          without problems.
          This fix should remove some of the redness in the TRU64_CXX
          builds.

Tue Jan  2 14:22:21 2001  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_run_tests.lst:
          Add the DII version of Param_Test to the nightly builds.

Tue Jan  2 10:25:30 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Cached_Connect_Strategy_T.cpp: Added the patch provided by
          Edan Ayal <edan@bandwiz.com> for
          ACE_Bounded_Cached_Connect_Strategy::find_or_create_svc_handler_i ().

Tue Jan  2 09:03:18 2001  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Asynch_Acceptor.{h,cpp},
          ace/POSIX_Async_IO.{h,cpp},
          ace/POSIX_Proactor.{h,cpp},
          ace/SUN_Proactor.{h,cpp}: Added enhanced versions of ACE_POSIX_Proactor
          and ACE_SUN_Proactor to fix various problems uncovered and fixed by
          Alexander Libman <Alibman@baltimore.com>.

        * ace/ACE.{h,cpp}: Fixed the timestamp() method so that it works
          identically on Win32 and on UNIX.  Also provided a new option
          that'll make it possible to return a pointer to the beginning of
          the time portion of "date and time."  Thanks to Michael Searles
          <msearles@base16.com> for contributing these fixes.

Mon Jan 01 16:35:00 2000  Michael Kircher  <Micahel.Kircher@mchp.siemens.de>

        * tests/Reader_Writer_Test.cpp: Added a #ifdef to check for native
          RW lock support. If the platform supports native RW locks we should
          not report a failure on upgrading, because native RW locks do not
          support upgrading, only our RW lock emulation does this.
          Thanks to Frank and Doug for pointing out this failure.

Sun Dec 31 14:12:08 2000  Ossama Othman  <ossama@uci.edu>

        * bin/auto_run_tests.lst:

          Added TAO's "ForwardRequest" PortableInterceptor test to the
          list of tests to run.

Sun Dec 31 13:59:02 2000  David L. Levine <levine@cs.wustl.edu>

        * tests/Refcounted_Auto_Ptr_Test.cpp: on DIGITAL_UNIX
          only, added a call to ACE_OS::exit () at the end of
          the test so that it will terminate.  [Bug 758]

Sun Dec 31 10:28:43 2000  David L. Levine <levine@cs.wustl.edu>

        * include/makeinclude/platform_osf1_4.0.GNU (LIBS):
          wrapped /usr/lib/cmplrs/cxx/libcxxstd.a with
          $(wildcard), so that is ignored on systems on which
          it doesn't exist, such as Tru64 5.1.

Sun Dec 31 09:23:09 2000  David L. Levine <levine@cs.wustl.edu>

        * include/makeinclude/platform_tru64_cxx.GNU: added
          support for Tru64 5.1 (DIGITAL_UNIX 0x510).

        * ace/config-tru64.h: added ACE_LACKS_CUSERID with
          DIGITAL_UNIX >= 0x510, because cuserid () is a macro
          in Tru64 5.1.

        Thanks to Carlos for tracking down this source of compilation
        failure.

Sat Dec 30 16:21:49 2000  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Hash_Map_Manager_T.h:
        * ace/Map_T.i: Fixed errors in g++ that were introduced while
          applying the patches.

Sat Dec 30 15:10:00 2000  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/RB_Tree.{cpp, h, i}:
          tests/RB_Tree_Test.cpp: Fixed a bug in RB_delete_fixup that
          occurs when the pointer to be fixed up is zero - solution is to
          pass in a pointer to its parent, and maintain the parent pointer
          and fixup pointer in tandem during the fixup function.  Also
          added a few functions to test the red-black invariant(s) at each
          node of the tree, and added an invariant test call after each
          bind and unbind in a new stress test in RB_Tree_Test.cpp.

          Thanks to Klaus H. Wolf <hw@cyland.com> for pointing out the
          problem and for contributing the stress test (which in a
          slightly modified form is now part of the RB_Tree_Test.cpp code)
          that reproduced the problem.

Sat Dec 30 11:12:08 2000  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Hash_Map_Manager_T.h:
        * ace/Map_T.i:
        * ace/Message_Block_T.cpp: Added patches provided by J. Russell
          Noseworthy <rnosewor@objectsciences.com> for SPRO 5.1. The patch
          to config-sunos-5.5.h has not been applied as it breaks builds
          on SunCC 5.0.

Fri Dec 29 17:08:42 2000  Darrell Brunsch <brunsch@uci.edu>

        * bin/auto_compile:

          Added a -sendreport option to enable the sending of email at all.
          Now by default it will not.

Fri Dec 29 16:53:22 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * performance-tests/TTCP/ACE-C++/wrapper-new-ttcp.cpp (main),
        * performance-tests/TTCP/C/new-ttcp.cpp (main),
        * tests/Conn_Test.cpp: Incorrect use of %r, which caused
          problems...  Thanks to Mike Curtis <mccurry@my-deja.com> for
          pointing this out.

Fri Dec 29 14:21:01 2000  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/MEM_SAP.cpp: Fixed incorrect ACE_RCSID identifier.  Thanks
          to Jerry Odenwelder <jerryo@atl.fundtech.com> for noticing this.

Thu Dec 28 16:02:51 2000  Carlos O'Ryan  <coryan@uci.edu>

        * bin/sandbox.cpp:
          This program executes a child process (and its children), in a
          new session and process group.  If the process tree does not
          finish before a given timeout (the first argument) the whole
          tree is terminated.
          The program is useful for test scripts and programs,
          occasionally they hang the whole auto build.

        * bin/auto_compile:
          Add new options '-sandbox' and '-sandbox_timeout' to support the
          sandbox program.

Thu Dec 28 16:10:59 2000  Frank Hunleth  <fhunleth@cs.wustl.edu>

        * performance-tests/UDP/udp_test.cpp:
        * performance-tests/Server_Concurrency/Latency_Stats.h:
        * performance-tests/Server_Concurrency/Queue_Based_Workers/workers.cpp
        * performance-tests/Server_Concurrency/Leader_Follower/leader_follower.cpp
          Fixed compile problems under VxWorks when handling
          64 bit integers.  Basically, truncated the 64 bit integers
          to 32 bit integers for operations not supported by
          ACE_U_LongLong.

Wed Dec 27 15:32:43 2000  Frank Hunleth  <fhunleth@cs.wustl.edu>

        * examples/Reactor/WFMO_Reactor/test_network_events.cpp:
          Added missing ;

Wed Dec 27 11:11:02 2000  Carlos O'Ryan  <coryan@uci.edu>

        * examples/Map_Manager/test_hash_map_manager.cpp:
        * examples/Misc/test_trace.cpp:
        * performance-tests/Misc/test_singleton.h:
        * performance-tests/Misc/test_singleton.cpp:
          Fixed problems in single threaded builds, basically I use the
          ACE_SYNCH_* macros instead of using the class directly.

Tue Dec 26 18:53:06 2000  Carlos O'Ryan  <coryan@uci.edu>

        * performance-tests/Server_Concurrency/Makefile:
          The tests make no sense if threads are disabled, so they are not
          compiled under that configuration.

Tue Dec 26 18:31:08 2000  Carlos O'Ryan  <coryan@uci.edu>

        * examples/Naming/test_open.cpp:
          Fixed compilation problems under Sun/CC 4.2, the Log_Msg.h file
          was not #included

Tue Dec 26 14:45:50 2000  Ossama Othman  <ossama@uci.edu>

        * bin/auto_run_tests.lst:

          Added TAO's "Dynamic" and "IORInterceptor" PortableInterceptor
          tests to the list of tests to run.

Tue Dec 26 11:49:49 2000  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/IPC_SAP/SPIPE_SAP/server.cpp: Fixed a statement not
          reachable warning on KCC.

Sat Dec 23 18:11:02 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/SString.cpp: Enhanced the implementation so that it works
          correctly when binary data (i.e., data that may contain NUL
          characters) is stored in a string.  Thanks to Michael Lindner
          <mikel@att.net> for reporting this.

Fri Dec 22 15:18:49 2000  Steve Huston  <shuston@riverace.com>

        * ace/ace-dll.icc: Added Basic_Stats.{h cpp} to build clean.

Fri Dec 22 14:00:41 2000  Steve Huston  <shuston@riverace.com>

        * ace/config-all.h: On HP-UX 11, when figuring ACE_bad_alloc exception
          class, account for older compilers that don't define __HP_aCC.

Fri Dec 22 12:56:06 2000  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/ACE.cpp (process_active): Call CloseHandle before return to
          avoid handle leaks on Win32.  Thanks to Arnaud Compan
          <compan@ipanematech.com> for the fix.

Fri Dec 22 13:04:58 2000  Balachandran Natarajan  <bala@cs.wustl.edu>

        * bin/run_all_list.pm: Added the bidirectional test to the list.

Fri Dec 22 12:43:54 2000  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h: Fixed a typo.

Fri Dec 22 09:12:37 2000  Steve Huston  <shuston@riverace.com>

        * ace/OS.h: ACE_DEFAULT_FILE_PERMS - added FILE_SHARE_DELETE to the
          bits if building on Win NT4 or greater. Thanks to Nanbor Wang
          for calling attention to this.

Fri Dec 22 08:06:10 2000  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

        * tests/Refcounted_Auto_Ptr_Test.cpp: Fixed the problem with an
          undefined ACE_Auto_Basic_Ptr<Scheduler> by adding an explicit
          template instantiation.  Thanks to Frank A. Hunleth
          <fhunleth@cs.wustl.edu> for reporting this.

Thu Dec 21 18:12:38 2000  Steve Huston  <shuston@riverace.com>

        * ace/ace-dll.icc, ace-lib.icc: Added OS_Errno.(cpp h) to the files
          list. Thanks to Jerry Odenwelder for pointing out the need for these.

Thu Dec 21 16:45:28 2000  Steve Huston  <shuston@riverace.com>

        * tests/Capabilities_Test.cpp: Added missing \n to a ACE_ERROR
          statement, and added ACE_DEFAULT_FILE_PERMS to the ACE_OS::open
          call to create the test file. It used to be 0600, but that was
          removed to satisfy Win32 which now pays attention to that arg.

Thu Dec 21 05:50:51 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Timer_Wheel_T.cpp (expire): Fixed a mistake where
          next_earliest_time should have been next_earliest.  Thanks to
          Keith Brown <kalbrown@ix.netcom.com> for reporting this.

        * examples/IPC_SAP/SOCK_SAP/Makefile.bor: Reenable CPP-inserver-fancy.cpp
          now that it compiles!  Thanks to Johnny Willemsen
          <johnny.willemsen@meco.nl> for confirming this.

        * examples/IPC_SAP/SOCK_SAP/CPP-inserver-fancy.cpp (handle_events): Added
          casts for (SOCKET) when using FD_SET to work around problems
          with Borland.  Thanks to Johnny Willemsen
          <johnny.willemsen@meco.nl> for reporting this.

        * ace/Message_Block.h (ACE_Dynamic_Message_Strategy): Fixed a bunch
          of non-const accessor methods to be const.  Thanks to Johnny
          Willemsen <johnny.willemsen@meco.nl> for reporting this.

        * examples/Naming/Makefile (BIN2): Added the test_open.cpp file
          to the Makefile.  Thanks to Johnny Willemsen
          <johnny.willemsen@meco.nl> for reporting this.

        * docs/tutorials/016/page02.html: Clarify that signal() or
          broadcast() don't release the mutex.  Thanks to Mike Curtis
          <mccurry@my-deja.com> for pointing this out.

Wed Dec 20 19:44:16 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * examples/Reactor/WFMO_Reactor/test_abandoned.cpp,
        * examples/Reactor/WFMO_Reactor/test_directory_changes.cpp,
        * examples/Reactor/WFMO_Reactor/test_network_events.cpp,
        * examples/Reactor/WFMO_Reactor/test_prerun_state_changes.cpp,
        * examples/Reactor/WFMO_Reactor/test_registration.cpp,
        * examples/Reactor/WFMO_Reactor/test_registry_changes.cpp,
        * examples/Reactor/WFMO_Reactor/test_talker.cpp,
        * examples/Reactor/WFMO_Reactor/test_window_messages.cpp:

        * ace/Sock_Connect.cpp: The ACE 5.1.11 implementation of
          ACE_Sock_Connect::get_ip_interfaces() fails when run on Windows
          2000 when ACE_HAS_WINSOCK2 = 0.  This is because
          get_ip_interfaces() checks the registry for the available
          interfaces and fails when it encounters a new entry in windows
          2000 named "Device\NDisWanIP".  The patch is to ignore invalid
          devices and continue checking.  Thanks to Chris Hafey
          <chris@stentorsoft.com> for contributing this fix.

Wed Dec 20 15:57:32 2000  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/RMCast/RMCast_IO_UDP.cpp
        * ace/RMCast?RMCast_IO_UDP.h
        * ace/RMCast/RMCast_IO_UDP.i : cleaned up tabs and trailing ws from
          last submission...

Wed Dec 20 16:18:49 2000  Steve Huston  <shuston@riverace.com>

        * examples/Reactor/Proactor/simple_test_proactor.cpp: Removed unused
          'initial_read_size' variable from file scope.

        * examples/Reactor/Proactor/test_aiosig_ace.cpp (setup_signal_handler):
        * examples/Reactor/Proactor/post_completions.cpp:
        * examples/Reactor/Proactor/test_end_event_loop.cpp:
        * examples/Reactor/Proactor/test_cancel.cpp (Receiver::open):
          Fixed unused variable warnings for gcc.

Wed Dec 20 15:42:36 2000  Phil Mesnier  <mesnier_p@ociweb.com>

        * ace/RMCast/RMCast_IO_UDP.cpp
        * ace/RMCast?RMCast_IO_UDP.h
        * ace/RMCast/RMCast_IO_UDP.i : The g++ cross compiler 2.9-gnupro-98r2
          for target Lynx 3.0.1 host Solaris 2.6 was breaking with an internal
          error at the end of handle_input().  Replacing a couple of lines of
          code with the private, inline method allocate_and_bind_proxy() gets
          around the problem.

Wed Dec 20 15:32:44 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * examples/Threads/wfmo.cpp: Move the function calls etc. out of
          the ACE_ASSERT() macros.  Thanks to Mike Curtis
          <mccurry@my-deja.com> for pointing this out.

Tue Dec 19 15:08:40 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Logging_Strategy.cpp: If ACE_LACKS_IOSTREAM_TOTALLY we'll
          use a "regular" file.  Thanks to Sangwoo Jin for contributing
          this fix.

        * ace/Mem_Map.cpp (map_it): In using ACE_Mem_Map, if the
          ACE_Mam_Map::map's <offset> parameter is set to non-zero and the
          <len> parameter is set to -1 then the right value to map should
          be <mapped file size> - offset.  Thanks to Sangwoo Jin for
          reporting this and suggesting the fix!

        * ace/INET_Addr.{h,i}: Make operator < const.  Thanks to
          Michael Lindner <mikel@att.net> for reporting this.

Tue Dec 19 18:39:27 2000  Luther J Baker  <luther@cs.wustl.edu>

        * ace/WFMO_Reactor.cpp (simple_dispatch_handler):

          When ACE_HAS_PACE on NT, ACE must use pace_siginfo_t instead
          of creating and using its own. The ACE version of siginfo_t
          happens to use constructors and so, the code that uses
          this ACE siginfor_t instantiates the struct via a constructor.
          When ACE_HAS_PACE, the pace_siginfo_t cannot be instantiated
          via constructor.

          My edit just chooses the correct method of instantiation
          based on ACE_HAS_PACE.

Tue Dec 19 18:21:52 2000  Luther J Baker  <luther@cs.wustl.edu>

        * ace/Thread.h (ACE_Thread):

          Removed the default value on the overriden join (...)
          function that took three parameters.

Tue Dec 19 14:50:38 2000  Steve Huston  <shuston@riverace.com>

        * ace/OS.h: If on ACE_WIN32, set ACE_DEFAULT_FILE_PERMS to
          (FILE_SHARE_READ | FILE_SHARE_WRITE), not 0666.

Tue Dec 19 14:40:26 2000  Steve Huston  <shuston@riverace.com>

        * ace/Filecache.cpp: Changed definition of R_MASK and W_MASK to
          0 for ACE_WIN32; used to be for __BORLANDC__. This is related
          to the change below because the third arg to ACE_OS::open is
          not ignored any longer for Win32.

        * tests/Capabilities_Test.cpp: On ACE_OS::open, don't supply a
          <perms> arg - let it default. The file gets deleted at the end of
          the test and has nothing to be protected. Related to the below
          change as well.

        * tests/Mem_Map_Test.cpp: Changed all the 0666 args to ACE_OS::open
          to ACE_DEFAULT_FILE_PERMS.

Tue Dec 19 11:02:41 2000  Steve Huston  <shuston@riverace.com>

        * ace/OS.{h cpp} (open(char), open(wchar)): Changed the <perms>
          argument to be used in the CreateFile call on Win32. Made the
          default value of the argument match the old behavior (defaults
          to FILE_SHARE_READ | FILE_SHARE_WRITE (and FILE_SHARE_DELETE on
          NT4 and Win2K)). Thanks to Edan Ayal <edana@bandwiz.com> for this
          suggestion!

Mon Dec 18 20:47:40 2000  Ossama Othman  <ossama@uci.edu>

        * ace/POSIX_Asynch_IO.h:

          Reverted previous change.  It introduced compile-time errors.

Mon Dec 18 19:07:31 2000  Steve Huston  <shuston@riverace.com>

        * ace/Asynch_IO.h, ace/POSIX_Asynch_IO.h: Clarified/corrected some
          comments regarding the write() operation getting its data from
          the message block's rd_ptr.

Mon Dec 18 11:44:11 2000  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/MEM_Stream_Test.cpp (connect_client): Fixed an unused
          argument warning on KCC compiler.

Mon Dec 18 11:00:14 2000  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/MEM_Stream_Test.cpp: Fixed problems when threads are not
          supported and when explicit template instantiation is required.

Sun Dec 17 20:11:08 2000  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/MEM_Stream_Test.cpp:
        * tests/MEM_Stream_Test.dsp:
        * tests/Makefile:
        * tests/Makefile.am:
        * tests/Makefile.bor:
        * tests/run_test.lst:
        * tests/run_tests.bat:
        * tests/run_tests.lst:
        * tests/run_tests.psosim:
        * tests/tests.dsw:
        * tests/version_tests/MEM_Stream_Test.dsp:
        * tests/version_tests/version_tests.dsw: Added a new
          MEM_Stream_Test.

Sun Dec 17 19:32:58 2000  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Malloc_T.cpp (shared_malloc): After a win32 structural
          exception occurs, we need to re-execution the expression that
          causes the exception.  Thanks to Roger Beck
          <roger_beck@royalsun.com.au> for reporting this.

        * ace/MEM_IO.i (fetch_recv_buf, recv): Differentiate the
          cases of end of message and errors.

        * ace/Malloc_T.h:
        * ace/Malloc_T.i: Added a base_addr method to return the base
          address of the ACE_Malloc so we don't have to depend on MMAP's
          base_addr method.

        * ace/MEM_SAP.i (set_buf_len,get_buf_len): Changed to computer
          buffer location using the base_addr method in ACE_Malloc as the
          one in Memory_Pool only indicates the fixed based addr.

        * ace/MEM_Acceptor.i:
        * ace/MEM_Acceptor.h: Added a method to set the prefix of MMAP
          filename.

        * ace/MEM_Acceptor.cpp (ACE_MEM_Acceptor):
        * ace/MEM_Connector.cpp (ACE_MEM_Connector): Changed to MMAP
          Options to allow MMAP files to be mapped at any address.

Sun Dec 17 18:42:13 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Refcounted_Auto_Ptr.h: Need to add "ace/Auto_Ptr.h" here to
          get the definition of ACE_Basic_Auto_Ptr.

        * tests: Added the Refcounted_Auto_Ptr_Test.cpp, which tests
          the new ACE_Refcounted_Auto_Ptr class.  Thanks to Johnny Tucker
          <JTucker@infoglide.com> for contributing this.

        * tests/Refcounted_Auto_Ptr_Test.dsp,
          tests/Refcounted_Auto_Ptr_Test.dsw
          tests/Refcounted_Auto_Ptr_Test.icc: Added the projects to
          compile the Refcounted_Auto_Ptr_Test.cpp.

        * tests/Makefile,
        * tests/run_test.lst,
        * tests/run_tests.lst: Added the Refcounted_Auto_Ptr_Test.

Sun Dec 17 11:00:47 2000  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Date_Time.i (update): Fixed a typo.

Sun Dec 17 08:52:04 2000  Carlos O'Ryan  <coryan@uci.edu>

        * etc/tao_smartproxies.doxygen:
          This file was left out from a previous commit.

Sat Dec 16 09:36:56 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Date_Time: Added a new method update() to reset the current
          date/time and also added a new constructor that calls update()
          to initialize an ACE_Date_Time implicitly, rather than having to
          pass all the values into the constructor.  Thanks to Jerry
          Odenwelder <jerryo@atl.fundtech.com> for contributing this.

Fri Dec 15 15:27:02 2000  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_compile:
        * bin/make_pretty.pl:
          The DU/CXX compiler has three levels, 'Error', 'Warning' and
          'Info:', the latter was being ignored.

Fri Dec 15 14:36:33 2000  Christopher Kohlhoff <chris@kohlhoff.com>

        * include/makeinclude/clean.bor:
        * include/makeinclude/recurse.bor:

          Added new 'realclean' target to Borland makefiles for
          removing all generated files (both intermediate and final).
          Thanks to Johnny Willemsen <johnny.willemsen@meco.nl> for
          suggesting this.

Fri Dec 15 14:32:06 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Log_Msg.h (ACE_Log_Msg): Changed the documentation
          to reflect the fact that the %a option causes the program to
          abort() rather than exit().  Thanks to Mike Curtis
          <mccurry@my-deja.com> for pointing this out.

Fri Dec 15 14:29:44 2000  Carlos O'Ryan  <coryan@uci.edu>

        * bin/generate_doxygen.pl:
          Generate documentation for the new TAO_SmartProxies library.

Fri Dec 15 10:22:42 2000  Darrell Brunsch <brunsch@uci.edu>

        * bin/auto_run_tests.pl:

          Included PerlACE::Run_Test instead of ACEUtils and
          ConfigList.

Fri Dec 15 09:22:05 2000  Carlos O'Ryan  <coryan@uci.edu>

        * examples/Connection/non_blocking/Makefile:
          Fixed dependencies between the binaries and the library
          generated in this directory, otherwise parallel builds can
          fail.

Thu Dec 14 10:36:45 2000  Darrell Brunsch <brunsch@uci.edu>

        * bin/auto_run_tests.lst:
        * tests/run_test.lst:

          Converted to the new PerlACE::ConfigList style of .lst
          files (can now say stuff like "Test: MSVC !Borland")

        * bin/auto_run_tests.pl:
        * bin/auto_compile:
        * tests/run_test.pl:

          Changed to use PerlACE::ConfigList.

          [Bug 729]

        * bin/ACEutils.pm:

          Made sure it would eat the -Config option so it will not
          be a problem if old run_test.pl's don't get updated
          immediately.

        * bin/msvc_auto_compile.pl:

          Added -d flag for debugging (just prints out what would be
          compiled)

        * bin/fuzz.pl:

          Added a rudimentary run_test.pl out-of-date test.

Thu Dec 14 10:20:49 2000  Chad Elliott  <elliott_c@ociweb.com>

        * include/makeinclude/platform_lynxos.GNU
          Allow users to set the debug option without using
          'override debug='.  debug=0 now works properly.

Thu Dec 14 06:00:12 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace: Removed makefile-light since it's no longer needed.
          Thanks to Johnny Willemsen <johnny.willemsen@meco.nl> for
          reporting this.

Wed Dec 13 18:33:19 2000  Carlos O'Ryan  <coryan@uci.edu>

        * html/README:
          Add README file explaining why the directory is empty and why
          the index.html URLs don't work unless you download or generate
          the Doxygen files.

        * html/index.html:
          Add entry for the smart proxies library.

Wed Dec 13 18:27:29 2000  Carlos O'Ryan  <coryan@uci.edu>

        * THANKS:
          Add 'Pedro Ferreira' to the hall of fame.

Thu Dec 13 18:18:42 2000  Darrell Brunsch <brunsch@uci.edu>

        * bin/PerlACE/ConfigList.pm: (added)
        * bin/PerlACE/Process.pm: (added)
        * bin/PerlACE/Process_Unix.pm: (added)
        * bin/PerlACE/Process_Win32.pm: (added)
        * bin/PerlACE/Run_Test.pm: (added)

          These are a couple of Perl modules that will be used
          to simplify current run_test.pl's and the auto_builds
          and to allow us to run tests on Win32 for configurations
          that output executables into subdirs (Win32 Release,
          Win32 Static *, Borland).  The conversion of scripts over
          to the new style will occur in separate checkins.

          ConfigList provides a more powerful *.lst format for
          specifying test lists.  Process is a newer version of
          the old bin/Process.pm that has a different interface
          and a couple of extra methods for common tasks for
          our scripts.  And Run_Test.pm will replace the
          bin/ACEutils.pm and be the main module for our
          run_test.pl scripts.  It contains some common subroutines
          and automatically parses some arguments via ARGV.

        * docs/run_test.txt: (added)

          A bit of documentation on how new run_test.pl's will
          look.

Wed Dec 13 18:15:03 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/CDR_Stream.h:
          Made some of the adjust() methods public, this is used to
          optimize TAO's implementations of CORBA::Any.

Wed Dec 13 12:59:49 2000  Darrell Brunsch <brunsch@uci.edu>

        * bin/PerlACE/Process_Unix.pm:

          Fixed PerlACE::Process on Unix to have the same interface as
          the Win32 version.

Tue Dec 12 09:52:00 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * Well, it looks like we finally have a new president in the
          US, yow!

Tue Dec 12 04:53:17 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Service_Config.{h,i}: Added an inequality operator.
          Thanks to Mike Curtis <mccurry@my-deja.com> for pointing this
          out.

        * ace/Service_Config.cpp (process_commandline_directives): Changed
          a check for error values being -1 to being != 0 since process_directive()
          can return

          1) a positive number of parse errors
          2) and -1 on a certain ACE_NEW_RETURN call
          3) but always zero on success.

          Thanks to Mike Curtis <mccurry@my-deja.com> and
          Munagala Ramanath <Munagala.Ramanath@PostX.com>
          for pointing this out.

Tue Dec 12 01:07:39 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/Log_Msg.cpp:

          Changed a comment to remove a false warning by fuzz.

Mon Dec 11 15:10:00 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Get_Opt.h:
          In some platforms 'optind', 'optarg' and 'opterr' are defined as
          macros, undefine them because we use the same identifiers as
          variable names.

        * ace/OS.h:
          If 'timezone' is defined as a macro in the system header files
          then define ACE_TIMEZONE and #undef timezone.
          The ACE_OS::timezone() method cannot be compiled otherwise, but
          unfortunately this forces us to disable support for the method
          under that sort of platform.

        * ace/OS.h:
          Do not include sys/shm.h if ACE_LACKS_SYSV_SHMEM is defined,
          there is no reason to #include the file if we are not using it
          anyway.

        * ace/ACE.cpp:
          Check the return value from getrlimit() before accepting its
          results.

Mon Dec 11 00:50:42 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/ace_wchar.h:

          Created an ACE_ANTI_TCHAR and ACE_TEXT_ANTI_TO_TCHAR.
          ACE_ANTI_TCHAR has the opposite behavior of ACE_TCHAR.

        * ace/Process.cpp:
        * ace/Process.h:
        * ace/Process.i:

          Added wchar_t versions of:

          - ACE_Process_Options::working_directory (wd)
          - ACE_Process_Options::command_line (format, ...)

        * ace/OS.cpp:
        * ace/OS.h:
        * ace/OS.i:

          Added wchar_t versions of:

          - ACE_OS::cond_init () - 2 versions
          - ACE_OS::mutex_init ()
          - ACE_OS::thread_mutex_init ()
          - ACE_OS::event_init ()
          - ACE_OS::sema_init ()

          On Win32, these should be implemented using the *W version
          of the APIs.  On other platforms, they call the char version
          of the same ACE_OS call with a converted string.

        * ace/Log_Msg.h:
        * ace/Log_Msg.cpp:

          Changed the first parameter to set and conditional_set from
          being ACE_TCHAR to just char.  We'll assume filenames are
          always ansi strings (since __FILE__ seems to act this way).
          There was actually a dangling pointer problem in the
          conditional_set when ACE_USES_WCHAR was defined before.

          Added an ANTI_TCHAR version of log (priority, format, ...).
          What this means is now we can use either narrow or wide
          format strings with Log_Msg, regardless of whether ACE_USES_WCHAR
          is defined or not.  Hopefully this means we can get rid of a lot
          of the ACE_TEXT and ACE_LIB_TEXT's in our code.

          Added a couple of more specifiers, %C and %w.  So for characters
          and strings we have:

          %c : print out an ansi character
          %C : print out an ansi string
          %s : print out an ACE_TCHAR * string
          %w : print out a wide character
          %W : print out a wide string

          An example, which will also function correctly even when
          ACE_USES_WCHAR is defined:

          void print (char *a_str, wchar_t *w_str, ACE_TCHAR *t_str)
          {
            ACE_DEBUG ((LM_DEBUG,
                        "%C %s %W\n",
                        a_str,
                        t_str,
                        w_str));
          }

          Unfortunately this only really takes care of the string
          specifiers.  There is still work to be done with the other
          implicit string specifiers (%p, %N, etc.).

        * ace/RMCast/RMCast_IO_UDP.cpp:
        * ace/RMCast/RMCast_Reassembly.cpp:
        * ace/SSL/SSL_Context.cpp:
        * ace/SSL/SSL_SOCK_Acceptor.cpp:
        * ace/SSL/SSL_SOCK_Connector.cpp:
        * ace/SSL/SSL_SOCK_Stream.i:

          Removed unnecessary ACE_TEXT's to see how things go.

        * docs/wchar.txt:

          Updated the documentation.

Fri Dec  8 13:47:58 2000  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:

          Added Refcounted_Auto_Ptr.{h,i} to these projects.

Fri Dec  8 10:34:32 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Makefile: Added Refcounted_Auto_Ptr to the list of template
          files.

        * ace/Auto_Ptr.{h,i}:
        * ace/Refcounted_Auto_Ptr.{h,i}: Moved the new
          ACE_Refcounted_Auto_Ptr into a separate file to reduce
          unnecessarily coupling in ACE.  Thanks to Darrell Brunsch for
          pointing this out.

Fri Dec  8 09:27:01 2000  Chad Elliott <elliott_c@ociweb.com>

        * include/makeinclude/platform_chorus4.x_g++.GNU:

          Modified to build only static libraries.  Something changed
          between the time of the port and now, which caused it to try
          to build shared libraries (which Chorus 4.0 doesn't support).

Fri Dec  8 06:47:12 2000  Christopher Kohlhoff <chris@kohlhoff.com>

        * tests/Makefile.bor:

          Use variable called TARGET_NAME instead of NAME to
          prevent clash with nightly build scripts.

Thu Dec  7 13:16:23 2000  Darrell Brunsch <brunsch@uci.edu>

        * examples/IPC_SAP/SPIPE_SAP/server.cpp:

          Removed PERMS global variable, since it wasn't being
          used (which KCC noticed).

        * examples/System_V_IPC/SV_Message_Queues/MQ_Client.cpp:
        * examples/System_V_IPC/SV_Message_Queues/MQ_Server.cpp:
        * examples/System_V_IPC/SV_Message_Queues/TMQ_Client.cpp:
        * examples/System_V_IPC/SV_Message_Queues/TMQ_Server.cpp:

          When calling ACE_OS::cuserid and passing a NULL pointer, it
          should be cast to something like char * or wchar_t *.  In
          this case it should be a char *, so I added a
          ACE_static_cast for it.

Thu Dec  7 02:31:44 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/config-WinCE.h:

          Disabled inlining for SH3 Release configuration.  The SH3 compiler
          has problems with inlined functions (in this case, ACE_OS::dlerror's
          static variable was staying unresolved).  Thanks to Ricardo Chan
          <ricchan@nortelnetworks.com> for pointing this out to me.

Thu Dec  7 03:33:49 2000  Marina Spivak  <marina@cs.wustl.edu>

        * bin/auto_run_tests.lst:

          Added RTCORBA MT test.

Wed Dec  6 19:52:42 2000  Darrell Brunsch <brunsch@uci.edu>


        * ace/Auto_Ptr.i:

          Added a couple of ACE_INLINEs and an include of Synch_T.h.

Wed Dec 06 20:12:35 2000  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Containers_T.cpp (operator=): In case the existing array is
          larger than the rhs (right hand side), we don't have to free and
          reallocate the existing array.  However, we do need to run the
          destructor on the array elements that will be replaced.  Hence,
          I added a call to ACE_DES_ARRAY_NOFREE for the elements being
          replaced.

          This fixes bug 704.  Thanks to Martin Krumpolec
          <krumpo@pobox.sk> for reporting the bug and for providing an
          example illustrating the problem.

Wed Dec  6 14:29:13 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Auto_Ptr.{h,i}: Added a new set of class (ACE_Refcounted_Auto_Ptr_Rep,
          ACE_Refcounted_Auto_Ptr) that implements support for a reference
          counted auto_ptr.  Thanks to Johnny Tucker
          <JTucker@infoglide.com> for contributing this.

        * ace/Managed_Object.h: Added ACE_UNIMPLEMENTED_FUNC macros for
          copy constructor and assignment operator in class
          ACE_Cleanup_Adapter.  Thanks to Johnny Willemsen
          <johnny.willemsen@meco.nl> for reporting this.

        * tests/run_tests.sh: Prevent null or zero-length string test name from being
          passed into the run() function.  Thanks to Jon Loeliger
          <jloeliger@chiaro.com> for reporting this.

        * tests/Log_Msg_Test.cpp,
        * examples/Log_Msg/test_log_msg.cpp (main):
          Replaced int with u_long to make compilers happy.  Thanks to
          Mike Curtis <mccurry@my-deja.com> for pointing this out.

Tue Dec  5 11:45:42 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/SSL/SSL_SOCK_Acceptor.cpp:

          Added ACE_TEXT to a debug message.

Tue Dec  5 10:07:14 2000  Carlos O'Ryan  <coryan@uci.edu>

        * performance-tests/Misc/childbirth_time.cpp:
          Use &function instead of just function, hopefully that will make
          Sun/CC 5.0 happy.

Tue Dec  5 09:38:22 2000  Ossama Othman  <ossama@uci.edu>

        * ace/SSL/SSL_SOCK_Acceptor.cpp (ssl_accept):

          Return "-1" instead of the result of the
          ACE_SSL_SOCK_Stream::close() method.  The latter may actually,
          and most likely will return without error.

Tue Dec 05 05:39:39 2000  Christopher Kohlhoff  <chris@kohlhoff.com>

        * tests/Makefile.bor:

          Implemented 'clean' support in the ACE tests makefile.

Tue Dec 05 02:02:51 2000  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/IPC_SAP.cpp (disable): Reverted this change:

          Tue Nov 21 17:42:36 2000  Pradeep Gore  <pradeep@cs.wustl.edu>

          The change seemed too low level where it might end up effecting
          more code than was intended.  However, as I discussed with Chris
          Uzdavinis <chris@atdesk.com>, the correct solution is to
          specialize the activation of the Svc_Handler rather than its
          accepting.

Mon Dec 04 23:54:10 2000  Irfan Pyarali  <irfan@cs.wustl.edu>

        * examples/Reactor/Proactor/test_proactor.cpp:

          - Receiver::open(): Only duplicate the message block when we are
          faking the result.  Otherwise, initiate_read_stream will create
          its own message block.

          - Receiver::open(): Delete the fake result.

          - Receiver::handle_read_stream(): When there is no more data to
          read, release the message block and delete the receiver.

          - Sender::transmit_file(): No need to duplicate the trailer.

        * ace/Proactor.cpp (~ACE_Proactor_Timer_Handler):

          The following was changed:

          this->thr_mgr ()->wait ();

          to:

          this->thr_mgr ()->wait_grp (this->grp_id ());

          since Thread_Manager::wait() if called while the
          ACE_Object_Manager is shutting down (as a result of program
          shutdown or ACE::fini), it will not wait for any threads to
          complete.

          Also, the timer_handler thread was not created detached since
          Thread_Manager::wait_grp() does not wait on detached threads.

Mon Dec 04 16:32:11 2000  Ossama Othman  <ossama@uci.edu>

        * ace/SSL/SSL_SOCK_Stream.i (recv):

          Shutdown the SSL connection if SSL_read() returns with an
          SSL_ERROR_ZERO_RETURN OpenSSL error condition.
          SSL_ERROR_ZERO_RETURN indicates that the peer is shutting down,
          and that a "close_notify" message SSL message has been issued by
          the peer.  A "close_notify" message indicates that no further
          data will be sent through the given connection, so there is no
          need to keep the connection open.

          Removed SSL_ERROR_WANT_{WRITE,X509_LOOKUP} switch statement
          cases.  They are apparently not necessary when performing a SSL
          read.

          (send):

          Removed SSL_ERROR_WANT_{READ,X509_LOOKUP} switch statement
          cases.  They are apparently not necessary when performing a SSL
          write.

        * ace/SSL/SSL_SOCK_Acceptor.cpp (ssl_accept):

          Check that the X.509 verification didn't fail.  If the
          verification failed then do not continue.

        * ace/SSL/SSL_Context.cpp:
        * ace/SSL/SSL_SOCK_Connector.cpp:
        * ace/SSL/SSL_SOCK_Stream.cpp:

          Added missing ACE_RCSID macros.

        * ace/SSL/SSL_Context.h:
        * ace/SSL/SSL_SOCK.h
        * ace/SSL/SSL_SOCK_Acceptor.h:
        * ace/SSL/SSL_SOCK_Connector.h:
        * ace/SSL/SSL_SOCK_Stream.h:

          Doxygenated these headers.

        * ace/SSL/SSL_Context.i:
        * ace/SSL/SSL_SOCK.cpp:

          Cosmetic updates.

Mon Dec 04 12:45:46 2000  Steve Huston  <shuston@riverace.com>

        * ace/High_Res_Timer.cpp: Corrected some problems with Linux on
          Pentium that were introduced by this:
          Fri Nov 10 10:42:31 2000  Steve Huston  <shuston@riverace.com>

             * ace/High_Res_Timer.cpp: Replaced all occurrences of
               "defined (ACE_HAS_PENTIUM)" with "defined (ACE_WIN32)" since
               there is nothing Pentium-specific any longer in the Win32
               sections.

          Thanks to David Levine and Carlos O'Ryan for weeding this bug out.

Mon Dec  4 07:39:16 2000  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Service_Configurator/IPC-tests/clients:
          Added Borland C++ Builder specific makefile.

Sun Dec  3 20:03:16 2000  Ossama Othman  <ossama@uci.edu>

        * examples/Web_Crawler/Command_Processor.cpp:

          Removed duplicate template instantiations.  Thanks to Paul Rubel
          <prubel@bbn.com> for pointing out this bug, and for providing a
          fix.

        * THANKS:

          Added Paul to the Hall-of-Fame.

Sun Dec  3 15:23:50 2000  Carlos O'Ryan  <coryan@uci.edu>

        * performance-tests/Misc/childbirth_time.cpp:
          Use 'extern "C"' for the thread entry point, this should make
          Sun/CC 5.0 (and other compilers) happy.

Sun Dec  3 08:50:15 2000  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/OS.i: Fixed a cut and paste error. This was from the BUG#
          734 in bugzilla. Thanks to Martin Krumpolec <krumpolec@pobox.sk>
          for reporting this.

Sat Dec  2 05:58:37 2000  Christopher Kohlhoff  <chris@kohlhoff.com>

        * ace/config-win32-borland.h:

          Automatically define WIN32 macro if we are able to
          determine that it is the target platform from pre-
          defined compiler macros.

        * ace/Makefile.bor:

          Added missing template source file for install target.

Sat Dec  2 00:19:38 2000  Marina Spivak  <marina@cs.wustl.edu>

        * bin/auto_run_tests.lst:

          Added RTCORBA/Explicit_Binding test.

Fri Dec 01 21:17:35 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Thread_Manager.cpp:
          More ACE_LEGACY_MODE fixes.

Fri Dec  1 13:49:36 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Log_Msg.cpp:
          Fixed problems on non-legacy Win32 builds.

Fri Dec  1 09:46:15 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Log_Msg.h:
        * ace/Log_Msg.cpp:
          The structured exception handler methods should show up on
          ACE_LEGACY_MODE builds.  Unfortunately, the change from
          ACE_LATEST_AND_GRATEST to LEGACY_MODE didn't work here because
          the LATEST_AND_GREATEST macro was misspelled.

Fri Dec  1 09:30:08 2000  Carlos O'Ryan  <coryan@uci.edu>

        * include/makeinclude/platform_linux.GNU:
          Add support for wxWindows under linux.

Fri Dec  1 10:56:42 2000  Jeff Parsons  <parsons@cs.wustl.edu>

        * include/makeinclude/ace_flags.bor:

          Added definitions necessary for the new smart proxies
          library and its Borland makefile.

Fri Dec 01 09:21:31 2000  Steve Huston  <shuston@riverace.com>

        * ace/Reactor.h: Clarified some comments.

Thu Nov 30 22:49:10 2000  pradeep@cs.wustl.edu  <pradeep@cs.wustl.edu>

        * ACE version 5.1.11 released.

Wed Nov 29 23:55:37 2000  Pradeep Gore  <pradeep@cs.wustl.edu>

        * apps/drwho/server.cpp:
        * apps/drwho/BS_Client.cpp:
          Used casts to quiet VxWorks/LynxOS.
        * bin/auto_run_tests.lst:
          Commented out this test - its broken.

Wed Nov 29 10:35:26 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * examples/Service_Configurator/IPC-tests/client/remote_service_directory_test.cpp (parse_args):
          Removed the colon after the "r" in the parse-args list.  Thanks
          to Mike Curtis <mccurry@my-deja.com> for pointing this out.

        * ace/Method_Request.h: Added ACE_UNIMPLEMENTED_FUNC to the
          assignment operator and copy constructor of ACE_Method_Request.
          Thanks to Johnny Willemsen <johnny.willemsen@meco.nl> for
          pointing this out.

Wed Nov 29 09:41:51 2000  Johnny Willemsen <jwillemsen@remedy.nl>

        * examples/Reactor/Multicast/*.bor
          Added Borland C++ Builder specific makefiles. Thanks to
          Albert Wijna <albert.wijnja@meco.nl> for creating these.

Tue Nov 28 15:39:51 2000  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_compile:
          Print out an error message when the script returns a non-zero
          code.  The errors where reported by email, but they didn't show
          up in the make_pretty output.

Tue Nov 28 15:36:10 2000  Carlos O'Ryan  <coryan@uci.edu>

        * bin/generate_doxygen.pl:
          Don't generate inline code for releases, it bloats the
          documentation, and does not make things any clearer.

        * html/index.html:
          Fixed URLs

        * etc/ace.doxygen:
        * etc/ace_man.doxygen:
        * etc/ace_rmcast.doxygen:
        * etc/ace_ssl.doxygen:
        * etc/tao_dynamicany.doxygen:
        * etc/tao_dynamicinterface.doxygen:
        * etc/tao_esf.doxygen:
        * etc/tao_implrepo.doxygen:
        * etc/tao_iormanip.doxygen:
        * etc/tao_iortable.doxygen:
        * etc/tao_portableserver.doxygen:
        * etc/tao_rtevent.doxygen:
        * etc/tao_strategies.doxygen:
          Make sure that ACE_THROW_SPEC is properly defined.

        * etc/tao.doxygen:
          Also fix the relative path to the ace doxygen files.

Tue Nov 28 13:31:47 2000  David L. Levine <levine@cs.wustl.edu>

        * tests/run_test.pl: prefix exec of run_tests.sh with
          $EXEPREFIX, so that it works without . in the user's
          PATH.  Thanks to Carlos for pointing this out.

Tue Nov 28 08:09:35 2000  David L. Levine <levine@cs.wustl.edu>

        * tests/run_test.pl: added some more diagnostics to try
          to figure out why run_tests.sh can't be exec'd on
          UCI machines.

Mon Nov 27 17:02:42 2000  Darrell Brunsch <brunsch@uci.edu>

        * ACE-INSTALL.html:
          While following up on Johnny Willemsen's
          <johnny.willemsen@meco.nl> suggestion to make sure I removed all
          references to .mdp files, I noticed that some of the Win32
          instructions could use some updating.

Mon Nov 27 17:44:52 2000  David L. Levine <levine@cs.wustl.edu>

        * tests/run_test.pl: if run_tests.sh doesn't exist, print
          a diagnostic message and continue with the run_test.pl
          version of the tests.  For unknown reasons, this change:
          Mon Nov 27 11:58:43 2000  David L. Levine <levine@cs.wustl.edu>
          doesn't work on the UCI Linux machines, run_tests.sh can't
          be exec'd.

Mon Nov 27 10:17:58 2000  Ossama Othman  <ossama@uci.edu>

        * docs/tutorials/005/005.dsp:

          Corrected name of output binary.  It should have been
          `server.exe' not `client.exe'.  Thanks to David Channon
          <djc@uq.net.au> for reporting this problem.

Mon Nov 27 09:56:09 2000  Ossama Othman  <ossama@uci.edu>

        The following updates are based on feedback from David Channon
        <djc@uq.net.au>.  Thanks David!

        * docs/tutorials/003/client.cpp:
        * docs/tutorials/003/page01.html:
        * docs/tutorials/004/client.cpp:
        * docs/tutorials/004/page01.html:
        * docs/tutorials/008/broadcast_client.cpp:
        * docs/tutorials/008/directed_client.cpp:
        * docs/tutorials/008/page02.html:
        * docs/tutorials/008/page03.html:
        * docs/tutorials/008/page04.html:
        * docs/tutorials/008/server.cpp:
        * docs/tutorials/009/broadcast_client.cpp:
        * docs/tutorials/009/directed_client.cpp:
        * docs/tutorials/009/page02.html:
        * docs/tutorials/009/page03.html:
        * docs/tutorials/009/page04.html:
        * docs/tutorials/009/server.cpp:
        * docs/tutorials/019/client.cpp:
        * docs/tutorials/019/client2.cpp:
        * docs/tutorials/019/page02.html:
        * docs/tutorials/019/page03.html:
        * docs/tutorials/019/page04.html:
        * docs/tutorials/019/page05.html:
        * docs/tutorials/019/server.cpp:
        * docs/tutorials/019/server2.cpp:
        * docs/tutorials/019/shmem.cpp:
        * docs/tutorials/020/client.cpp:
        * docs/tutorials/020/client2.cpp:
        * docs/tutorials/020/mmap.cpp:
        * docs/tutorials/020/page02.html:
        * docs/tutorials/020/page03.html:
        * docs/tutorials/020/page04.html:
        * docs/tutorials/020/page05.html:
        * docs/tutorials/020/server.cpp:
        * docs/tutorials/020/server2.cpp:

          Include "ace/Log_Msg.h" to pull in the ACE_{DEBUG,ERROR}
          macros.  The example code in the HTML files was also updated.

        * docs/tutorials/011/message_queue.cpp:
        * docs/tutorials/011/page02.html:

          Removed unnecessary line of code that NULL terminated a string.
          It didn't serve any purpose since the string is already
          terminated.  If it wasn't terminated then that point in the code
          would never have been reached since the code prior to it assumes
          that the string is NULL terminated.

Mon Nov 27 11:58:43 2000  David L. Levine <levine@cs.wustl.edu>

        * tests/run_test.pl: on platforms other than Win32, simply
          exec run_tests.sh.  run_tests.sh properly handles all of
          the current ACE tests.  [Bug 729]

Mon Nov 27 14:12:09 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Activation_Queue.h: Added ACE_UNIMPLEMENTED_FUNC to the
          assignment operator and copy constructor of
          ACE_Activation_Queue.  Thanks to Johnny Willemsen
          <johnny.willemsen@meco.nl> for pointing this out.

Sun Nov 26 19:07:48 2000  Pradeep Gore  <pradeep@cs.wustl.edu>

        * examples/Map_Manager/test_hash_map_manager.cpp:
        * examples/Shared_Malloc/Malloc.cpp:
        * examples/Shared_Malloc/test_position_independent_malloc.cpp:

          Removed extraneous explicit template instantiation declarations
          causing "multiply defined" errors on VxWorks and LynxOS.

Sat Nov 25 22:08:46 2000  Pradeep Gore  <pradeep@cs.wustl.edu>

        * apps/drwho/Makefile:
          Disabled drwho compilation on Vxworks - it doesn't have
          protocols/rwhod.h.

Fri Nov 24 16:58:42 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/IPC_SAP.cpp:

          WSAEventSelect is not available on Windows CE, so the #ifdefs
          were changed so it calls ioctl on Windows CE also.

Fri Nov 24 15:43:20 2000  Carlos O'Ryan  <coryan@uci.edu>

        * docs/ACE-categories.html:
          Fixed URLs to Doxygen documents, I used the absolute URL to our
          Doxygen site, but in the future we may want to do that
          configurable.

        * bin/auto_run_tests.lst:
          Disable the Connection_Purging test in TAO, it never worked and
          the features are disabled while we continue to improve the
          Connection Cache.

Fri Nov 24 11:42:42 2000  Darrell Brunsch <brunsch@uci.edu>

        * ACE-INSTALL.html:

          Updated sections about Windows CE and MSVC.  CE stuff
          is documented in CE-status.txt, and removed references to old
          MSVC 4.2 projects.  Thanks to Johnny Willemsen
          <johnny.willemsen@meco.nl> for pointing this out.

Fri Nov 24 05:48:26 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Signal.h: Enhanced the documentation to clarify the role of
          sigkey.  Thanks to Oscar Rodriquez <Oscar.Rodriquez@eln.ericsson.se>
          for motivating this.

        * ace/SOCK_Connector.h: Updated the documentation to clarify the
          parameters to the constructors and the connect() method.  Thanks
          to Pierre Oberson <oberson@nagra-kudelski.ch> for suggesting this.

Thu Nov 23 21:17:16 2000  David L. Levine <levine@cs.wustl.edu>

        * tests/Reactor_Notify_Test.cpp (main): added
          auto_ptr<ACE_Reactor> so that the global Reactor instance
          will be destroyed at the termination of main ().  The cleans
          up memory leaks that we introduced in this change to the test:
          Tue Oct 24 12:30:47 2000  Steve Huston  <shuston@riverace.com>

Thu Nov 23 18:38:54 2000  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * Makefile:
          Add ACE_wrappers/html to the list of files tagged, even though
          they are not included in the tar or zip files.

Thu Nov 23 18:13:32 2000  Carlos O'Ryan  <coryan@cs.wustl.edu>

          Don't use 'grep -q' because Solaris' grep does not support it.

Thu Nov 23 18:27:52 2000  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * Makefile:
          The ACE-INSTALL file is generated in the staging directory,
          there is no need to generate it locally too.

Thu Nov 23 17:46:56 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Method_Request: Made the priority() method const.  Thanks
          to Johnny Willemsen <jwillemsen@remedy.nl>

Thu Nov 23 14:43:40 2000  Carlos O'Ryan  <coryan@uci.edu>

        * Makefile:
          Do not include the html directory in the release. The doxygen
          files are too big for this.

        * ace/config-doxygen.h:
          Improve doxygen documentation.

        * bin/generate_doxygen.pl:
          Add options to change the path to find dot and perl on the fly.

        * bin/make_release:
          Generate the HTML documentation in a separate .tar.gz (or .zip)
          file.

Wed Nov 22 17:35:55 2000  Angelo Corsaro  <corsaro@cs.wustl.edu>

        * bin/auto_run_tests.lst:

          Added entry for Collocation test. Moved entry for Client
          Exposed Policy test from the old list file to this one.

Wed Nov 22 09:29:32 2000  Darrell Brunsch <brunsch@uci.edu>

        * etc/ace.doxygen:

          Added the docs directory and *.txt files to be looked
          at by doxygen.

        * docs/CE-status.txt:
        * docs/wchar.txt:

          Fixed up these files, so they show up correctly in the
          doxygen html pages.

Tue Nov 21 19:55:49 200 0  Pradeep Gore  <pradeep@cs.wustl.edu>

        * ace/IPC_SAP.cpp:
          Casting param1 to SOCKET did the trick. Thanks Doug!

Tue Nov 21 19:21:10 2000  Pradeep Gore  <pradeep@cs.wustl.edu>

        * ace/IPC_SAP.cpp:

          Reverted previous change applied to ACE_IPC_SAP::disable because
          of compile error.

Tue Nov 21 18:54:14 2000  Pradeep Gore  <pradeep@cs.wustl.edu>

        * apps/drwho/CM_Client.cpp:

          Explicitly cast Comm_Manager::sokfd_ to int in calls to
          ACE_OS::recvfrom and ACE_OS::closesocket to quiet LynxOS.

Tue Nov 21 17:42:36 2000  Pradeep Gore  <pradeep@cs.wustl.edu>

        * ace/IPC_SAP.cpp:

          Modified ACE_IPC_SAP::disable to call ::WSAEventSelect on Win32.
          Thanks to Chris Uzdavinis <chris@atdesk.com> for contributing
          these changes.

Tue Nov 21 11:00:14 2000  Darrell Brunsch <brunsch@uci.edu>

        * tests/run_test.lst:

          Borland shouldn't be running ACE_Init_Test.

Tue Nov 21 10:15:15 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/OS_String.inl:

          Changed ::towlower to towlower since it can be a macro.

Tue Nov 21 09:57:53 2000  Darrell Brunsch <brunsch@uci.edu>

        * tests/Reactor_Exceptions_Test.cpp:

          Code style fix.

        * tests/run_test.lst:

          New_Fail_Test just eats up memory when run, and it only tests
          the behavior of new.  Not really something we need to run
          everynight (and as David Levine reports, using up all the
          memory can cause problems in other processes on the nightly
          build machines).  Commented out the New_Fail_Test.

        * tests/run_test.pl:

          Fixed to clean up some of the backing_store_* files in the
          tests directory after running the tests.

        * bin/ACEutils.pm:

          Added the ability to pick -ExeSubDir <dir> from the command
          line to alter $EXEPREFIX.  This should allow us to start
          running tests with different configurations (ie. Win32 Release)
          and on Borland.

Tue Nov 21 07:24:54 2000  Chris Kohlhoff  <chris@kohlhoff.com>

        * ace/SSL/Makefile.bor:
        * include/makeinclude/build_dll.bor:
        * include/makeinclude/build_exe.bor:
        * include/makeinclude/build_lib.bor:

          Prevent SSL libraries from being built unless SSL_ROOT is defined.

        * include/makeinclude/build_example.bor:

          Add missing libraries required for statically linking TAO examples.

Mon Nov 20 21:52:57 2000  Ossama Othman  <ossama@uci.edu>

        * ace/Makefile.am:

          Added more missing files to the source lists.

Mon Nov 20 19:16:12 2000  Ossama Othman  <ossama@uci.edu>

        * ace/OS.i (mutex_init):

          Fixed an unused argument warning that was showing up in
          ACE+Autoconf builds.

        * ace/Makefile.am (libACE_Utils_la_SOURCES):

          Updated "Init.cpp" to "Init_ACE.cpp."  For some reason this
          file wasn't updated when the name change was made.

          (libACE_Utils_la_SOURCES):

          Moved `Sock_Connect.cpp' to this list of sources.  Similar to
          the above change, this files wasn't updated when the
          corresponding to changes was made to the classical Makefile.

Mon Nov 20 15:00:26 2000  Marina Spivak  <marina@cs.wustl.edu>

        * bin/auto_run_tests.lst:

          Added RTCORBA/Private_Connection, updated options for other
          RTCORBA tests.

Sun Nov 19 15:26:56 2000  Ossama Othman  <ossama@uci.edu>

        * ace/SSL/sslconf.h
          (ACE_DEFAULT_SSL_CERT_FILE, ACE_DEFAULT_SSL_CERT_DIR):

          On Win32, do not use UNIX-specific directories in certificate
          paths.

Sun Nov 19 10:37:48 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:
          Add the new files to the MSVC projects.

        * ace/Dynamic_Service_Base.h:
          Add missing file.

        * ace/Dynamic_Service_Base.cpp:
          Removed template-like protections, this is a regular class.

        * ace/Dynamic_Service.i:
        * ace/Dynamic_Service.cpp:
          Cosmetic fixes.

Sun Nov 19 08:05:08 2000  Priyanka Gontla  <pgontla@ece.uci.edu>

        * ace/Makefile:
          Updated.

        * ace/Dynamic_Service.cpp:
        * ace/Dynamic_Service.h:
        * ace/Dynamic_Service_Base.cpp:
        * ace/Dynamic_Service_Base.h:
          Not all methods in Dynamic_Service were based on the SERVICE
          types. Moved those to the base class 'Dynamic_Service_Base' and
          the Dynamic_Service inherits from the base class.

Sat Nov 18 15:39:49 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * examples/Service_Configurator/IPC-tests/client/remote_service_directory_test.cpp:
          Fixed a mistake in the "usage" string.  Thanks to Mike Curtis
          <mccurry@my-deja.com> for pointing this out.

Sat Nov 18 11:35:53 2000  Darrell Brunsch <brunsch@uci.edu>

        * tests/OS_Test.cpp:

          Changed the signature of main to use ACE_TCHAR.  Although
          I don't consider this the "right" way of doing this, it
          will make the builds happy with ACE_USES_WCHAR until we
          implement something better.

Sat Nov 18 09:58:17 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Basic_Types.h:
        * ace/OS_Log_Msg_Attributes.h:
        * ace/config-all.h:
          Under LynxOS we must #include stdarg.h before stdio.h.
          Thanks to David for letting us know about this.

Fri Nov 17 14:24:42 2000 Darrell Brunsch <brunsch@uci.edu>

        * include/makeinclude/clean.bor:

          Added the removal of *Cli.cpp, *Ser.cpp, etc. files which
          is the output style of the TAO Param_Test.

        * tests/Reactor_Exceptions_Test.cpp:

          Put the handler in its own scope so it must be cleaned up
          before the reactor.  For whatever reason, it wasn't happening
          in the right order on MSVC before.

          Also changed the exception error to a debug message, since
          it really doesn't seem an error (we explicitly cause one).

Fri Nov 17 11:22:08 2000  Carlos O'Ryan  <coryan@uci.edu>

        * include/makeinclude/platform_sunos5_kcc.GNU:
          Same fix as for platform_linux_kcc.GNU.
          A little more detail has surfaced: apparently under this
          compiler we attempted to link the static run-time and system
          libraries if static_libs_only=1 was set.  Not only this would be
          unique (in that we don't do this for other compilers), but it
          fails when only one directory is compiled with
          static_libs_only=1, hile only the dynamic version of ACE (or any
          other of our libraries) is compiled.
          IMHO it is better to make it consistent with all the other
          platforms, and leave the extra optimization of using static
          system libraries for a future makefile option.

        * include/makeinclude/platform_linux_kcc.GNU:
          Remove obsolete comment

Fri Nov 17 03:37:37 2000  Marina Spivak  <marina@cs.wustl.edu>

        * bin/auto_run_tests.lst:

          Added RTCORBA/Banded_Connections test.

Fri Nov 17 01:16:25 2000  Ossama Othman  <ossama@uci.edu>

        * include/makeinclude/wrapper_macros.GNU (ssl):

          Removed definition of the ACE_HAS_SSL macro.  It is no longer
          used.

Thu Nov 16 16:14:03 2000  Carlos O'Ryan  <coryan@uci.edu>

        * Makefile:
        * html/doxygen.css:
        * html/index.html:
          New html directory.  People normally don't expect html documents
          to show up under the man directory.

        * configure.in:
        * bin/bootstrap:
        * man/Makefile.am:
        * man/html/Makefile.am:
          Remove the man/html directory.

        * bin/make_release:
          Insert code to generate the man pages index.

        * docs/ACE-categories.html:
          Change references to man/html so they point to the new doxygen
          generated files.

        * bin/README.html:
        * bin/class2hxxcxx:
        * bin/class2hxxcxxsingle:
        * bin/class2info:
        * bin/class2info.awk:
        * bin/class2man:
        * bin/class2mml:
        * bin/class2src:
        * bin/classinfo.ps:
        * bin/generate_html_windex:
        * bin/generate_man_pages:
        * bin/hiding.fmt:
        * bin/html-windex:
        * bin/info2doc.awk:
        * bin/info2doc.fmt:
        * bin/info2head:
        * bin/info2head.fmt:
        * bin/info2headsrc:
        * bin/info2man:
        * bin/info2mml:
        * bin/info2src:
        * bin/info2src.awk:
        * bin/man2html:
        * bin/man2html1.awk:
        * bin/man2html2.awk:
        * bin/vendor.fmt:
          Remove old scripts used in man page and html document
          generation. We do everything with doxygen now.

Thu Nov 16 17:55:18 2000  Pradeep Gore  <pradeep@cs.wustl.edu>

        * apps/JAWS/clients/Blobby/Blob.{h,cpp}:
        * apps/JAWS/clients/Blobby/Blob_handler.{h,cpp}:
        * apps/drwho/Rwho_DB_Manager.h:
        * apps/drwho/Multicast_Manager.{.h,cpp}:
        * apps/drwho/Options.{h,cpp}:
          Follow const correctness to make suncc5 happy.

        * examples/IOStream/server/iostream_server.h
          Use ACE_HAS_TEMPLATE_TYPEDEFS rather than ACE_HAS_TYPENAME_KEYWORD
          Thanks to Steve Huston <shuston@riverace.com> for the fix.

Thu Nov 16 15:31:20 2000  Carlos O'Ryan  <coryan@uci.edu>

        * include/makeinclude/platform_linux_kcc.GNU:
          Builds with static libraries under Linux/KCC were failing due to
          some magical -Bstatic options in the configuration file.  When
          the options are removed the problem went away.

Thu Nov 16 15:31:20 2000  Carlos O'Ryan  <coryan@uci.edu>

        * include/makeinclude/platform_linux_kcc.GNU:
          Builds with static libraries under Linux/KCC were failing due to
          some magical -Bstatic options in the configuration file.  When
          the options are removed the problem went away.

Thu Nov 16 15:09:25 2000  Carlos O'Ryan  <coryan@uci.edu>

        * tests/TkReactor_Test.cpp:
          Fixed 'char*' vs. 'const char *' conflict.

Wed Nov 15 14:23:54 2000  Ossama Othman  <ossama@uci.edu>

        * configure.in:

          Fixed bug in the auto_ptr / C++ std namespace test where the
          template argument for the auto_ptr being instantiated was
          a non-existent type.
          Reported by Kevin Marshall <KCMarshall@att.net>

        * THANKS:

          Added Kevin to the hall of fame list.

Wed Nov 15 10:19:45 2000  Carlos O'Ryan  <coryan@uci.edu>

        * examples/Threads/thread_specific.cpp:
          Fixed warning under linux

Wed Nov 15 08:32:58 2000  Carlos O'Ryan  <coryan@uci.edu>

        * apps/JAWS/server/Makefile:
        * performance-tests/Misc/Makefile:
          Change dependencies to ensure that the libraries are created
          before we attempt to link the binaries, otherwise the
          compilation fails with parallel builds.

Tue Nov 14 17:55:52 2000  Carlos O'Ryan  <coryan@uci.edu>

        * Makefile:
          PACE is disabled by default, unless pace=1 is set in the command
          line or the platform_macros.GNU file.

Tue Nov 14 19:36:47 2000  Steve Huston  <shuston@riverace.com>

        * examples/Reactor/Proactor/test_siosig_ace.cpp: Don't log
          the read/written file using ACE_DEBUG - it will usually overflow
          the ACE_Log_Record max message length and do bad things.

Tue Nov 14 19:19:16 2000  Steve Huston  <shuston@riverace.com>

        * examples/Reactor/Proactor/simple_test_proactor.cpp: Don't log
          the read/written file using ACE_DEBUG - it will usually overflow
          the ACE_Log_Record max message length and do bad things.
          Thanks to John Buckman <john@lyris.com> for reporting this.

Tue Nov 14 18:43:51 2000  Steve Huston  <shuston@riverace.com>

        * examples/Reactor/Proactor/test_proactor3.cpp: Replace use of
          list<Sender *> with Sender * [] so it builds without inifintely
          complicated explicit instantiations on gcc. KISS ;-)

Tue Nov 14 17:43:26 2000  Steve Huston  <shuston@riverace.com>

        * examples/Reactor/Proactor/test_aiocb_ace.cpp: Fixed to work
          correctly if one of the aio ops completes, but not the other,
          during a pass through the Test_Aio::do_aio loop. Thanks to
          John Buckman <john@lyris.com> for reporting this.

Tue Nov 14 14:19:42 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/Log_Record.cpp:

          In ACE_Log_Record::print, changed the call to ACE_OS::fprintf
          to use ACE_TEXT("%s") as the second argument instead of just
          "%s".  This should make logging under ACE_USES_UNICODE readable.
          Thanks to James Buck <jim@nowsol.com> and Nick Pratt
          <npratt@microstrategy.com> for both reporting this problem and
          submitting patches.

Tue Nov 14 09:19:16 2000  Carlos O'Ryan  <coryan@uci.edu>

        * examples/Threads/thread_specific.cpp:
          Simply use %u to print an ACE_hthread_t.  This is what we seem
          to be doing in other places in the code.  However, this seems to
          be non-portable, the code in ACE_Log_Msg to print the thread ID
          is a lot more complicated.

Mon Nov 13 15:13:42 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/Object_Manager.cpp:

          Protected the assert dialog box disable with _MSC_VER
          since it is only for MSVC.

Mon Nov 13 03:46:21 2000  Darrell Brunsch <brunsch@uci.edu>

        * docs/CE-status.txt:
        * docs/wchar.txt: (added)

          Updated documentation == good thing.

Mon Nov 13 03:39:42 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/config-win32-borland.h:

          It looks like Borland also uses _wcsdup, so added the
          ACE_WCSDUP_EQUIVALENT here.

Mon Nov 13 01:07:36 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/OS_String.cpp:
        * ace/config-win32-borland.h:
        * ace/config-win32-msvc.h:

          Christopher Kohlhoff <chris@kohlhoff.com> mentioned to me
          that Borland did have a wcsdup, but it was named differently
          than the _wcsdup in MSVC.  I took his suggestion and added
          a ACE_WCSDUP_EQUIVALENT for MSVC's version and enabled
          wcsdup for Borland's config.

Mon Nov 13 00:36:29 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/Obstack.cpp:
        * ace/Obstack.h:

          Nanbor mentioned to me the other day that the interfaces to
          this class probably should remain as char *.  After looking
          at it, I agreed and changed it to that.  But since Svc_Conf
          uses this class in such a way that it is passing wchar_t
          strings to it when ACE_USES_WCHAR is defined, I also added
          a wchar_t version of copy to make things happy.

Sun Nov 12 17:00:42 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/ace_ce.dsw: (removed)
        * ace/ace_dll_ce.dsp: (removed)
        * ace/ace.vcw: (added)
        * ace/ace_dll.vcp: (added)
        * ace/ace_os_dll.vcp: (added)

          Removed the old Windows CE project files, and replaced
          them with ones created by the eMbedded Visual C++ from
          MS.

        * ace/OS_Errno.cpp: (added)
        * ace/OS_Errno.h: (added)
        * ace/OS_Errno.inl: (added)
        * ace/config-all.h:
        * ace/OS.cpp:
        * ace/OS.h:
        * ace/OS.i:

          Moved the Errno stuff from ACE_OS to a separate class,
          since it needed to be in its own layer for Windows CE.

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:
        * ace/Makefile:
        * ace/Makefile.am:
        * ace/Makefile.bor:

          Added OS_Errno.* files.

        * ace/ACE.cpp:
        * ace/Sock_Connect.cpp:

          Moved get_reg_value () to Sock_Connect since that is where
          it is being used.

        * ace/ARGV.cpp:
        * ace/OS.cpp:
        * ace/OS.h:
        * ace/OS.i:

          Added ACE_LACKS_ENV for platforms (like Windows CE) which
          doesn't have an environment.  Maybe in the future this can
          be emulated, for now, we do nothing.

        * ace/Base_Thread_Adapter.h:
        * ace/OS.h:

          Replace ACE_Export with ACE_OS_Export.

        * ace/Base_Thread_Adapter.inl:
        * ace/Thread_Adapter.inl:

          Moved some of the ACE_OS_Thread_Descriptor methods to
          Base_Thread_Adapter, since they were declared in
          Base_Thread_Adapter.h.

        * ace/SUN_Proactor.cpp:

          Removed ACE_BUILD_DLL from this file, since it should only
          be defined in the project file.

        * ace/OS_Dirent.h:

          Added ACE_WINCE to the #if block around some of the includes.

        * ace/OS_Memory.h:
        * ace/OS_Dirent.inl:
        * ace/OS_String.inl:
        * ace/OS.h:

          Added /**/ to the #includes of pace, since they seem to
          totally confuse EVC's automatic dependency generation.

        * ace/OS_String.cpp:
        * ace/OS_String.h:
        * ace/OS_String.inl:

          Added strerror.  On machines without it, just returns
          "Unknown Error" all the time.

          Added strspn_emulation, strpbrk_emulation, strtol_emulation,
          and strtoul_emulation.

          New compile time defines:
          - ACE_LACKS_STERROR
          - ACE_LACKS_STRPBRK
          - ACE_LACKS_STRSPN
          - ACE_LACKS_STRTOL
          - ACE_LACKS_STRTOUL
          - ACE_LACKS_STRTOD

        * ace/Log_Msg.cpp:

          Since there is now strerror in ACE, removed the !ACE_HAS_WINCE
          blocks and replaced them with direct calls to ACE_OS_String's
          version.

        * ace/config-win32.h:

          Changed check for #include-ing config-wince.h to be based on
          _WIN32_WCE because this definition has been automatically added
          to the default projects by the misc WinCE editors.

        * ace/Service_Config.i:

          The char versions of the following fuctions (which are defined
          only under WinCE) were recursive and would fail miserably if
          ever used.  I added ACE_CHAR_TO_TCHAR to resolve the infinate
          recursion.
          - ACE_Service_Config::initialize ()
          - ACE_Service_Config::resume ()
          - ACE_Service_Config::suspend ()
          - ACE_Service_Config::remove ()

        * ace/config-win32-msvc.h:

          We were defining ACE_HAS_GNU_CSTRING_H.  I doubt that MSVC has
          GNU's cstring.h, so I removed it.

        * ace/OS.cpp:
        * ace/OS.h:
        * ace/OS.i:

          Added ACE_LACKS_CUSERID and ACE_LACKS_CHDIR.

          Added writev and readv emulation methods to ACE_OS, since they
          were just being defined as global functions.  This is more
          consistent with what we are doing elsewhere.

          Added ACE_LACKS_SYS_NERR emulation.

        * ace/config-WinCE.h:

          Added all the necessary defined to get ACE compiling for Windows
          CE 3.0.  As for previous versions, they do not currently compile,
          although that could change in the future

Sun Nov 12 12:29:31 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/Cache_Map_Manager_T.h:
        * ace/Codeset_IBM1047.h:
        * ace/Date_Time.h:
        * ace/Dump_T.h:
        * ace/Flag_Manip.h:
        * ace/Hash_Cache_Map_Manager_T.h:
        * ace/LSOCK_Acceptor.h:
        * ace/Memory_Pool.h:
        * ace/QoS_Decorator.h:
        * ace/SV_Semaphore_Complex.h:
        * ace/Strategies_T.h:
        * ace/Synch_Options.h:
        * ace/Time_Request_Reply.h:
        * ace/Timer_Wheel_T.h:
        * ace/WIN32_Proactor.h:
        * ace/ace_wchar.h:

          Fixed @file comments.

Sat Nov 11 18:55:04 2000  Pradeep Gore  <pradeep@cs.wustl.edu>

        * ace/Profile_Timer.cpp:
          Included Log_Msg.h to fix compile error.

Fri Nov 10 19:41:38 2000  Darrell Brunsch <brunsch@uci.edu>

        * bin/fuzz.pl:

          Added a check for the @file comments used by doxygen.
          They must be the same as the actual filename, or doxygen will
          not pick up the comments for that file.

Fri Nov 10 20:26:01 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Profile_Timer.cpp: Replaced ACE_OS::perror() with
          ACE_ERROR macros so that the output can be redirected to the
          same place that the ACE logging output is configured to go.
          Thanks to Jeff Greif <jgreif@befree.com> for reporting this.

Fri Nov 10 17:15:42 2000  Darrell Brunsch  <brunsch@uci.edu>

        * bin/fuzz.pl:

          Made the output look a little closer to MSVC's.

Fri Nov 10 17:08:52 2000  Carlos O'Ryan  <coryan@uci.edu>

        * etc/tao_strategies.doxygen:
          New doxygen configuration file for the TAO_Strategies library.

        * bin/generate_doxygen.pl:
          Add tao_strategies.doxygen to the list.

        * etc/ace_man.doxygen:
          Generate man pages in the man directory instead of doxygen_man.

Fri Nov 10 12:58:53 2000  Darrell Brunsch <brunsch@uci.edu>

        * bin/generate_doxygen.pl:
        * etc/tao_implrepo.doxygen:

          New Implementation Repository documentation.

Fri Nov 10 12:53:28 2000  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_compile:
          Format test output so make_pretty.pl can recognize where each
          test starts.

        * etc/ace_rmcast.doxygen:
        * etc/ace_ssl.doxygen:
        * etc/tao.doxygen:
        * etc/tao_dynamicany.doxygen:
        * etc/tao_dynamicinterface.doxygen:
        * etc/tao_esf.doxygen:
        * etc/tao_iormanip.doxygen:
        * etc/tao_iortable.doxygen:
        * etc/tao_portableserver.doxygen:
        * etc/tao_rtevent.doxygen:
          Don't define the macros explicitly, use the config-doxygen.h
          file.
          Must define ACE_RCSID and ACE_UNDEFINED_FUNC properly, so
          doxygen does not get confused.

Fri Nov 10 14:26:41 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/config-sunos5.6.h: The AIO definitions were missing the #if
          !defined guards that are present in the solaris 2.7 config
          header.  Thanks to Alex Hornby <alex@anvil.co.uk> for reporting
          this.

Fri Nov 10 11:44:15 2000  Carlos O'Ryan  <coryan@uci.edu>

        * examples/RMCast/Send_File/Receiver.cpp:
          Fixed errors in Tru64/DUCXX builds.

Fri Nov 10 10:42:31 2000  Steve Huston  <shuston@riverace.com>

        * ace/OS.i (ACE_OS::gethrtime): Removed the ACE_HAS_PENTIUM check
          from the #if defined (ACE_WIN32) line surrounding the use of
          QueryPerformanceCounter - it works fine on 486 also, per
          Bernd Annamaier <bernd.annamaier@de.adtranz.com>. Thanks to
          Bernd for testing this out.

        * ace/High_Res_Timer.cpp: Replaced all occurrences of
          "defined (ACE_HAS_PENTIUM)" with "defined (ACE_WIN32)" since there
          is nothing Pentium-specific any longer in the Win32 sections.

        * THANKS: Added Bernd Annamier to the Hall of Fame.

Fri Nov 10 12:28:42 2000  Johnny Willemsen <jwillemsen@remedy.nl>

        * examples/log_msg/makefile.bor:
        * examples/map_manager/makefile.bor:
        * examples/makefile.bor:
        * performance-tests/makefile.bor:
        * performance-tests/Server_Concurrency/makefile.bor:
          New Borland makefiles for ACE

Thu Nov  9 18:39:42 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/config-sunos5.5.h:

          Added ACE_LACKS_MEMORY_H for SunCC 5, since it seems there is
          a bad interaction between memory.h and string.h on that config.

Thu Nov  9 17:47:37 2000  Carlos O'Ryan  <coryan@uci.edu>

        * examples/IPC_SAP/SPIPE_SAP/producer_msg.cpp:
          Antoher missing Log_Msg.h

        * examples/Threads/thread_specific.cpp:
          Tru64 does not like the convertion from ACE_hthread_t to
          unsigned long.  I'm trying with a reinterpret_cast, but I don't
          have much hope for it.

        * examples/Service_Configurator/IPC-tests/server/Makefile:
        * examples/Service_Configurator/Misc/Makefile:
        * examples/Timer_Queue/Makefile:
        * apps/Gateway/Gateway/Makefile:
        * apps/Gateway/Peer/Makefile:
          Avoid problems where the library is linked twice, once for the
          required dependency in parallel builds an another for the LDLIBS
          flag.

        * etc/ace.doxygen:
        * etc/ace_man.doxygen:
          Use a separate file to generate man pages.  We don't want to
          document .cpp files or include code in man pages, but that looks
          great in HTML documents.

        * etc/tao.doxygen:
        * etc/tao_dynamicany.doxygen:
        * etc/tao_dynamicinterface.doxygen:
        * etc/tao_esf.doxygen:
        * etc/tao_iormanip.doxygen:
        * etc/tao_iortable.doxygen:
        * etc/tao_portableserver.doxygen:
        * etc/tao_rtevent.doxygen:
          Update the replacement path to some of the tag files, the
          generated documents did not get the right cross references.

        * bin/make_pretty.pl:
          Add yet another linker error.

        * bin/generate_doxygen.pl:
          Parse the man page generation code to create its output path too.

Thu Nov  9 15:10:28 2000  Carlos O'Ryan  <coryan@uci.edu>

        * bin/make_pretty.pl:
          In the HTML we replace < with &lt; and > with &gt; otherwise the
          output for templates makes no sense.

Thu Nov  9 12:11:52 2000  Priyanka Gontla  <pgontla@ece.uci.edu>

        * ace/Makefile (UTILS_FILES):
          Modified the Makefile to help when building subsetted shared
          libraries. Specifically, moved Addr, INET_Addr, and Sock_Connect
          into the Sockets component.  That removes the dependancy of the
          Utilities and Sockets components on the non-socket IPC component.

       Committing on behalf of Phil Mesnier <mesnier_p@ociweb.com>

Thu Nov  9 10:38:33 2000  Carlos O'Ryan  <coryan@uci.edu>

        * examples/Makefile:
          ACE_HAS_GNUG_PRE_2_8 should be used only after
          wrapper_macros.GNU is included.

Thu Nov  9 10:26:01 2000  Carlos O'Ryan  <coryan@uci.edu>

        * bin/make_pretty.pl:
          Add yet another link error message.

Thu Nov  9 08:51:04 2000  Carlos O'Ryan  <coryan@uci.edu>

        * include/makeinclude/rules.local.GNU:
          It seems like I cannot get the rules to create the .obj and
          .shobj directories right.  This last iteration seems to be
          happier, it works fine with parallel builds, it works fine for
          static and shared libraries, it does not recompile everything
          just because the .obj or .shobj directories changed, it creates
          the Templates.DB file when needed.
          The only problem that I'm aware off is that it can potentially
          produce a warning on parallel builds: two separate rules can try
          to create the .obj directory simultaneously, adding a dependency
          to have only one rule do it results in full-recompilations when
          a .obj directory is modified for whatever reason.
          I'm using ACE_NUL_STDERR to avoid such warnings, and it seems to
          work correctly.

Thu Nov  9 10:14:06 2000  Jeff Parsons  <parsons@cs.wustl.edu>

        * include/makeinclude/ace_flags.bor:

          Added the line

          TAO_DYNAMICINTERFACE_LIB =
            $(CORE_BINDIR)\TAO_DynamicInterface$(LIB_DECORATOR).lib

          that I had overlooked when doing the BCB makefile changes
          related to the DynamicInterface library. Thanks to
          Johnny Willemsen <Johnny.Willemsen@meco.nl> for sending
          in the patch.


Wed Nov  8 16:11:11 2000  Carlos O'Ryan  <coryan@uci.edu>

        * tests/RMCast/RMCast_Membership_Test.cpp:
          Remove unused variables

        * bin/make_pretty.pl:
          Add regular expression to detect more linker errors.

Wed Nov  8 14:10:20 2000  Carlos O'Ryan  <coryan@uci.edu>

        * examples/IPC_SAP/FIFO_SAP/FIFO-Msg-server.cpp:
        * examples/IPC_SAP/SPIPE_SAP/client.cpp:
        * examples/IPC_SAP/SPIPE_SAP/consumer_msg.cpp:
        * examples/IPC_SAP/SPIPE_SAP/consumer_read.cpp:
        * examples/IPC_SAP/SPIPE_SAP/server.cpp:
        * examples/RMCast/Send_File/Sender.cpp:
        * examples/Reactor/Misc/test_event_handler_t.cpp:
        * examples/Service_Configurator/IPC-tests/server/Handle_L_SPIPE.h:
          We must explicitly #include "ace/Log_Msg.h", unfortunately the
          errors were only detected on platforms that do not define
          ACE_TEMPLATES_REQUIRE_SOURCE.

        * include/makeinclude/rules.local.GNU:
          More fine tuning, the Templates.DB directory must be created by
          the Makefile because SunCC 4.2 generates a warning if it is not
          present.

Wed Nov  8 14:40:25 2000  Chad Elliott  <elliott_c@ociweb.com>

        * ace/config-all.h

          Fix a build problem on HP-UX 11.00 with aCC A.03.25.  The macro
          used to determine the use of the std namespace changed from
          RWSTD_NO_NAMESPACE to _NAMESPACE_STD.  NOTE: I did preserve the
          check for RWSTD_NO_NAMESPACE with aCC versions less than A.03.25.

Wed Nov  8 10:27:00 2000  Carlos O'Ryan  <coryan@uci.edu>

        * bin/generate_doxygen.pl:
          Automates the invocation of doxygen. It modifies the doxygen
          templates in $ACE_ROOT/etc and creates the right directory
          hierarchy to receive the files.

        * ace/config-doxygen.h:
          Configuration file used to generate the doxygen files.
          Notice that this is not a valid configuration for any platform,
          for example, it enables both the Win32 and the POSIX AIO calls.

        * etc/ace.doxygen:
        * etc/ace_rmcast.doxygen:
        * etc/ace_ssl.doxygen:
        * etc/tao.doxygen:
        * etc/tao_dynamicany.doxygen:
        * etc/tao_dynamicinterface.doxygen:
        * etc/tao_esf.doxygen:
        * etc/tao_iormanip.doxygen:
        * etc/tao_iortable.doxygen:
        * etc/tao_portableserver.doxygen:
        * etc/tao_rtevent.doxygen:
          Minor mods to make the generate_doxygen.pl job easier.

Wed Nov  8 09:02:10 2000  Carlos O'Ryan  <coryan@uci.edu>

        * apps/Gateway/Gateway/Makefile:
        * apps/Gateway/Peer/Makefile:
        * examples/Timer_Queue/Makefile:
        * examples/Service_Configurator/IPC-tests/server/Makefile:
        * examples/Service_Configurator/Misc/Makefile:
          When generating a library and a binary that uses it in the same
          Makefile we must add explicit dependency between them, otherwise
          parallel builds can fail.

        * apps/JAWS/server/HTTP_Helpers.cpp:
        * examples/IPC_SAP/FILE_SAP/client.cpp:
        * examples/Naming/test_multiple_contexts.cpp:
        * examples/Threads/thread_specific.cpp:
        * examples/Timer_Queue/Thread_Timer_Queue_Test.cpp:
          Fixed warnings about mismatches between printf-like strings and
          their arguments.

Wed Nov  8 02:57:15 2000  Darrell Brunsch <brunsch@uci.edu>

        * Local_Name_Space.cpp:
        * Local_Name_Space.h:

          Conversion between ACE_WString and ACE_NS_String depended on
          ACE_WString storing two byte char's (because it was using
          fast_rep ())  Changed to ushort_rep (), but this required
          ACE_NS_String to clean up the string once it is done.  Added
          a destructor and a flag to ACE_NS_String for this purpose.

Tue Nov  7 11:47:42 2000 Darrell Brunsch <brunsch@uci.edu>

        * tests/Cached_Accept_Conn_Test.cpp:
        * tests/Cached_Conn_Test.cpp:
        * tests/Collection_Test.cpp:

          Protected some of the explicit template instantiations with #if's
          to make sure we don't get duplicate ones with ACE_INT32 == int
          (since ACE_HANDLE and DATA are also int in some configurations).

Tue Nov  7 09:04:15 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/RMCast/RMCast.h:
          Undefine macro MT_DATA if defined already.

Tue Nov  7 09:00:08 2000  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_compile:
          By default build everything under ACE_wrappers and
          ACE_wrappers/TAO, we used to build just a subset of ACE.
          We need to provide full coverage because this script is
          replacing all nightly builds, if auto_compile does not test it,
          nothing will.

        * bin/show_log_dir.pl:
          The script was removing the second and third most recent logs
          from the list, this used to be required to remove the brief and
          html files, but now we filter those earlier on the script.

Mon Nov  6 16:23:56 2000  Carlos O'Ryan  <coryan@uci.edu>

        * tests/RMCast/RMCast_Fragment_Test.cpp:
        * tests/RMCast/RMCast_Reassembly_Test.cpp:
        * tests/RMCast/RMCast_Retransmission_Test.cpp:
          Fixed warnings reported by DU/CXX

Sun Nov  5 17:23:55 2000  Carlos O'Ryan  <coryan@uci.edu>

        * etc/ace.doxygen:
        * etc/ace_rmcast.doxygen:
        * etc/ace_ssl.doxygen:
        * etc/tao.doxygen:
        * etc/tao_dynamicany.doxygen:
        * etc/tao_dynamicinterface.doxygen:
        * etc/tao_esf.doxygen:
        * etc/tao_iormanip.doxygen:
        * etc/tao_iortable.doxygen:
        * etc/tao_portableserver.doxygen:
        * etc/tao_rtevent.doxygen:
          Commit doxygen templates, I'm still writing the script to use
          them effectively.

Sun Nov  5 14:37:13 2000  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_compile:
          Make log files world readable, under Solaris they are created
          with 600 mode by default.

Sun Nov  5 14:05:13 2000  Darrell Brunsch <brunsch@uci.edu>

        * bin/create_vt_dsps.pl:
        * tests/version_tests/Atomic_Op_Test.dsp:
        * tests/version_tests/Auto_IncDec_Test.dsp:
        * tests/version_tests/Barrier_Test.dsp:
        * tests/version_tests/Basic_Types_Test.dsp:
        * tests/version_tests/Buffer_Stream_Test.dsp:
        * tests/version_tests/CDR_Array_Test.dsp:
        * tests/version_tests/CDR_File_Test.dsp:
        * tests/version_tests/CDR_Test.dsp:
        * tests/version_tests/Cache_Map_Manager_Test.dsp:
        * tests/version_tests/Cached_Accept_Conn_Test.dsp:
        * tests/version_tests/Cached_Conn_Test.dsp:
        * tests/version_tests/Capabilities_Test.dsp:
        * tests/version_tests/Collection_Test.dsp:
        * tests/version_tests/Conn_Test.dsp:
        * tests/version_tests/DLL_Test.dsp:
        * tests/version_tests/DLList_Test.dsp:
        * tests/version_tests/Dynamic_Priority_Test.dsp:
        * tests/version_tests/Enum_Interfaces_Test.dsp:
        * tests/version_tests/Env_Value_Test.dsp:
        * tests/version_tests/Future_Set_Test.dsp:
        * tests/version_tests/Future_Test.dsp:
        * tests/version_tests/Handle_Set_Test.dsp:
        * tests/version_tests/Hash_Map_Bucket_Iterator_Test.dsp:
        * tests/version_tests/Hash_Map_Manager_Test.dsp:
        * tests/version_tests/High_Res_Timer_Test.dsp:
        * tests/version_tests/IOStream_Test.dsp:
        * tests/version_tests/Lazy_Map_Manager_Test.dsp:
        * tests/version_tests/MM_Shared_Memory_Test.dsp:
        * tests/version_tests/MT_Reactor_Timer_Test.dsp:
        * tests/version_tests/MT_SOCK_Test.dsp:
        * tests/version_tests/Malloc_Test.dsp:
        * tests/version_tests/Map_Manager_Test.dsp:
        * tests/version_tests/Map_Test.dsp:
        * tests/version_tests/Mem_Map_Test.dsp:
        * tests/version_tests/Message_Block_Test.dsp:
        * tests/version_tests/Message_Queue_Notifications_Test.dsp:
        * tests/version_tests/Message_Queue_Test.dsp:
        * tests/version_tests/Naming_Test.dsp:
        * tests/version_tests/New_Fail_Test.dsp:
        * tests/version_tests/Notify_Performance_Test.dsp:
        * tests/version_tests/OS_Test.dsp:
        * tests/version_tests/Object_Manager_Test.dsp:
        * tests/version_tests/OrdMultiSet_Test.dsp:
        * tests/version_tests/Pipe_Test.dsp:
        * tests/version_tests/Priority_Buffer_Test.dsp:
        * tests/version_tests/Priority_Reactor_Test.dsp:
        * tests/version_tests/Priority_Task_Test.dsp:
        * tests/version_tests/Process_Manager_Test.dsp:
        * tests/version_tests/Process_Mutex_Test.dsp:
        * tests/version_tests/Process_Strategy_Test.dsp:
        * tests/version_tests/RB_Tree_Test.dsp:
        * tests/version_tests/Reactor_Exceptions_Test.dsp:
        * tests/version_tests/Reactor_Notify_Test.dsp:
        * tests/version_tests/Reactor_Performance_Test.dsp:
        * tests/version_tests/Reactor_Timer_Test.dsp:
        * tests/version_tests/Reactors_Test.dsp:
        * tests/version_tests/Reader_Writer_Test.dsp:
        * tests/version_tests/Recursive_Mutex_Test.dsp:
        * tests/version_tests/Reverse_Lock_Test.dsp:
        * tests/version_tests/SOCK_Connector_Test.dsp:
        * tests/version_tests/SOCK_Send_Recv_Test.dsp:
        * tests/version_tests/SOCK_Test.dsp:
        * tests/version_tests/SPIPE_Test.dsp:
        * tests/version_tests/SString_Test.dsp:
        * tests/version_tests/SV_Shared_Memory_Test.dsp:
        * tests/version_tests/Semaphore_Test.dsp:
        * tests/version_tests/Service_Config_Test.dsp:
        * tests/version_tests/Sigset_Ops_Test.dsp:
        * tests/version_tests/Simple_Message_Block_Test.dsp:
        * tests/version_tests/Svc_Handler_Test.dsp:
        * tests/version_tests/TSS_Test.dsp:
        * tests/version_tests/Task_Test.dsp:
        * tests/version_tests/Thread_Manager_Test.dsp:
        * tests/version_tests/Thread_Mutex_Test.dsp:
        * tests/version_tests/Thread_Pool_Reactor_Test.dsp:
        * tests/version_tests/Thread_Pool_Test.dsp:
        * tests/version_tests/Time_Service_Test.dsp:
        * tests/version_tests/Time_Value_Test.dsp:
        * tests/version_tests/Timeprobe_Test.dsp:
        * tests/version_tests/Timer_Queue_Test.dsp:
        * tests/version_tests/Tokens_Test.dsp:
        * tests/version_tests/UPIPE_SAP_Test.dsp:
        * tests/version_tests/Upgradable_RW_Test.dsp:
        * tests/version_tests/version_tests.dsw:

          Updated to use the new ACE_AS_STATIC_LIBS macro.

        * ace/Sample_History.cpp:
        * ace/SSL/SSL_Context.cpp:
        * ace/SSL/SSL_SOCK_Stream.i:

          Fixed miscellaneous ACE_USES_UNICODE problems with ACE_LIB_TEXT.

Sat Nov  4 19:33:39 2000  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_compile:
          Fixed the mail message, the path to the CGI script was garbled.

        * include/makeinclude/rules.local.GNU:
          My last fixed did not work for static builds, the SOLINK rules
          got in the way.  It works correctly for both static and shared
          builds now.

Sat Nov  4 18:19:46 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/RMCast/RMCast_IO_UDP.cpp:
        * ace/RMCast/RMCast_Reassembly.cpp:
        * tests/Reactor_Notify_Test.cpp:
          Add missing template instantiations, they only showed up in
          builds with disabled inlining.

Sat Nov  4 17:05:08 2000  Carlos O'Ryan  <coryan@uci.edu>

        * bin/auto_compile:
          New revision of the script.  It can copy log files directly to
          the destination directory, and it also runs the make_pretty
          script to generate both the HTML and HTML summary of the log.

        * bin/show_log_dir.pl:
          Corrections to the document and more fixes to make it Apache
          friendly.

        * include/makeinclude/rules.local.GNU:
          Add special target to force the creation of the .shobj and .obj
          directories, even with parallel builds.  The faster our
          computers get the more often we get failures due to this
          problem.

Sat Nov  4 14:53:39 2000  Carlos O'Ryan  <coryan@uci.edu>

        * bin/make_pretty.pl:
          This is a modified version of Darrell's script to beautify our
          auto_compile logs.  This version works better with Unix builds
          and is going to be invoked by bin/auto_compile to generate
          summary logs.

        * bin/show_log_dir.pl:
          A CGI script to present all the logs for a particular builds in
          a single page.  It is a modified version of Darrell's script,
          but this time it works better on Unix web servers.

Fri Nov  3 17:22:10 2000  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/config-sunos5.5.h: Backed of changes given by Russ
          Noseworthy through bug id #710. This was breaking SunCC5.0
          builds.

Fri Nov  3 09:41:20 2000  Carlos O'Ryan  <coryan@uci.edu>

        * tests/RMCast/RMCast_Membership_Test.cpp:
          Fixed warning about variables possibly uninitialized before
          their first use.  In fact the variables are initialized before
          their first use, but the code flow is too complex for the
          compiler to figure that out.

Fri Nov  3 09:34:39 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Makefile:
        * tests/Makefile:
        * examples/Makefile:
          Disable the RMCast builds for old versions of g++

Thu Nov  2 12:11:43 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Name_Request_Reply.h:
        * ace/Timer_Hash_T.h:
        * ace/Map_Manager.h:
        * ace/Log_Record.h:
          Minor adjustments to make doxygen happier.

Thu Nov  2 11:57:37 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Makefile:
        * tests/Makefile:
        * examples/Makefile:
          Enable the RMCast library, tests and examples by default.

Wed Nov  1 17:24:59 2000  Pradeep Gore  <pradeep@cs.wustl.edu>

        * tests/RMCast/Makefile.bor:
          Added Makefile, thanks to Christopher Kohlhoff
          <chris@kohlhoff.com> and Johnny.Willemsen <Johnny.Willemsen@meco.nl>
          for contributing.

Wed Nov  1 14:11:48 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/*.h:
          Change all the header files to generate better docs with
          Doxygen.  Thanks to Darrell for his wonderful script to automate
          this process.

Tue Oct 31 19:01:19 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * netsvcs/lib/Client_Logging_Handler.cpp (handle_input): Added
          a comment explaining why we don't go to heroic lengths to recv()
          all the data if it fails after the second recv().  Thanks to
          Steve Sivier <Steven.Sivier@Eng.Sun.COM> for motivating this.

Tue Oct 31 14:21:11 2000  David L. Levine <levine@cs.wustl.edu>

        * bin/check_build_logs: sort the output file names, so
          that guajira's cxx build shows up first (locally).
          Limit total number of lines to 2000 to keep below
          majordomo's size limit.

Tue Oct 31 10:54:42 2000 Darrell Brunsch <brunsch@uci.edu>

        * ace/Process.i:

          Changed the CREATE_UNICODE_ENVIRONMENT section to be only
          in ACE_WIN32 environments.

Tue Oct 31 11:35:31 2000  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/config-sunos5.5.h:
        * ace/Log_Msg.cpp: Added patches provided by Russ. Bugzilla id 710.

Tue Oct 31 08:14:33 2000  Chris Cleeland  <cleeland_c@ociweb.com>

        * wrapper_macros.GNU:

          Set defaults for exceptions, rtti, and fast to all be zero
          (0),i.e., off.  Henceforth, if you're creating a new port and
          you want exceptions to be on, you must explicitly have
          "exceptions=1" in your platform_*.GNU file.

        * platform_irix6.x_common.GNU:

          Added an "exceptions=1" directive per the comment above.

Mon Oct 30 18:56:33 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/OS.cpp:
        * ace/OS.h:
        * ace/OS.i:

          Changed several of the socket calls to use char instead
          of ACE_TCHAR, seeing that no OS supports anything but char.
          But I am keeping the ACE_TCHAR or dual char/wchar_t
          interfaces on classes higher up the stream.

          Methods changed are:

          - gethostbyaddr
          - gethostbyname
          - gethostbyname2
          - gethostbyaddr_r
          - gethostbyname_r
          - getprotobyname
          - getprotobyname_r
          - getservbyname
          - getservbyname_r
          - inet_addr
          - inet_ntoa
          - inet_aton
          - inet_ntop
          - inet_pton

          This should take care of a couple of things.  First we don't
          have to worry about returning a wchar_t * static buffer
          instead of a char * static buffer from something like
          inet_ntoa and this should remove some slowdowns reported from
          gethostbyname.  Thanks to Nick Pratt <npratt@microstrategy.com>
          for reporting both of these.

        * ace/INET_Addr.cpp:
        * ace/INET_Addr.h:
        * ace/INET_Addr.i:

          Fixed references to interface changes and added dual
          char/wchar_t interfaces to replace some ACE_TCHAR ones.

        * ace/MEM_Addr.cpp:
        * ace/MEM_Addr.h:
        * ace/MEM_Addr.i:

          Changed get_host_name and get_host_name to return char *

        * ace/SOCK_Dgram_Mcast.cpp:
        * ace/SOCK_Dgram_Mcast_QoS.cpp:

          Fixed all the references to the interface changes.

        * ace/Object_Manager.cpp:

          Added ERROR to the output for AV's and Unhandled Exceptions.

Mon Oct 30 18:51:40 2000  Darrell Brunsch <brunsch@uci.edu>

        * examples/IPC_SAP/SSL_SAP/SSL-client.dsp:
        * examples/IPC_SAP/SSL_SAP/SSL-server.dsp:

          Removed hardcoded OpenSSL include directories.

        * ace/ssl/SSL_Context.cpp:
        * ace/ssl/SSL_Context.h:
        * ace/ssl/SSL_SOCK.cpp:
        * ace/ssl/SSL_SOCK_Acceptor.cpp:
        * ace/ssl/SSL_SOCK_Acceptor.h:
        * ace/ssl/SSL_SOCK_Connector.cpp:
        * ace/ssl/SSL_SOCK_Connector.h:
        * ace/ssl/SSL_SOCK_Connector.i:
        * ace/ssl/SSL_SOCK_Stream.cpp:
        * ace/ssl/SSL_SOCK_Stream.h:
        * ace/ssl/SSL_SOCK_Stream.i:

          Removed the ACE_HAS_SSL #ifdefs, since ACE_SSL is a
          separate library, so it isn't really needed.

Mon Oct 30 16:34:33 2000  Chris Cleeland  <cleeland_c@ociweb.com>

        * include/makeinclude/platform_vxworks5.x_g++.GNU:

        More exceptions/fast/rtti canonicalization fixes.  Thanks again,
        Carlos.

Mon Oct 30 11:56:13 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Makefile.am:
        * ace/Makefile.bor:
          Add missing files to the Borland and Automake makefiles.

Mon Oct 30 11:38:07 2000  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Basic_Stats.cpp:
        * ace/Basic_Stats.inl:
        * ace/Sample_History.cpp:
        * ace/Stats.cpp:
          Fixed problems on platforms that lack 64-bit integers.

Mon Oct 30 11:10:26 2000  Chris Cleeland  <cleeland_c@ociweb.com>

        * include/makeinclude/platform_linux.GNU:
        * include/makeinclude/platform_chorus_ghs.GNU:

        The change to canonicalize the values used for
        exceptions/fast/rtti caused the default for "exceptions" on these
        two platforms to change from exceptions off to exceptions on.
        There may be others, but without access to the compiler itself
        it's hard to tell what the default behavior is for the compiler
        and thus set the value for exceptions/rtti/fast accordingly.

        Thanks to Carlos O'Ryan <coryan@uci.edu> for pointing this out.

Mon Oct 30 00:57:42 2000  Darrell Brunsch <brunsch@uci.edu>

        * tests/OS_Test.cpp:

          Was a bit overzealous on a previous [] to * change,
          so switched one back to [] to remove a segfault
          with the strncmp section.

Sun Oct 29 23:46:54 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/ace_wchar.h:

          Removed the definitions for LPTSTR and LPCTSTR. They
          will need to be defined outside of ace or in config.h
          to be made available on other platforms.  Here is a
          sample block which can be added to a non-Win32 config.h:

          typedef char *LPSTR;
          typedef const char *LPCSTR;
          typedef wchar_t *LPWSTR;
          typedef const wchar_t *LPCWSTR;

          #if defined (UNICODE)
          typedef const wchar_t *LPCTSTR;
          typedef wchar_t *LPTSTR;
          typedef wchar_t TCHAR;
          #define __TEXT(literal) L##literal
          #else
          typedef const char *LPCTSTR;
          typedef char *LPTSTR;
          typedef char TCHAR;
          #define __TEXT(literal) literal
          #endif

          #define TEXT(literal) __TEXT(literal)

        * ace/config-vxworks5.x.h:

          Added ACE_LACKS_WCSDUP.

Sun Oct 29 01:59:11 2000  Darrell Brunsch <brunsch@uci.edu>

        * bin/doxygen-convert-h.pl: (added)

          New script to convert old header files to new doxygen
          style commented files.  Works well, but some things
          do throw it for a loop, be sure to check output before
          checking in.

Sat Oct 28 15:02:40 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Stats.h:
          Cosmetic fixes to make doxygen happier.

Fri Oct 27 17:21:56 2000  Darrell Brunsch <brunsch@uci.edu>

        * tests/OS_Test.cpp:

          Darrell learned how to use strtok_r properly.  'nuff said.

Fri Oct 27 17:04:02 2000  Darrell Brunsch <brunsch@uci.edu>

        * tests/OS_Test.cpp:

          Changed the arrays ([]) to array pointers (*) since the
          pointer arithmatic I do doesn't seem to work with the
          arrays.

Fri Oct 27 15:45:57 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:
          Add the new files to the MSVC projects.

Fri Oct 27 15:02:56 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Makefile:
        * ace/Makefile.am:
        * ace/Makefile.bor:
        * ace/Sample_History.h:
        * ace/Sample_History.inl:
        * ace/Sample_History.cpp:
          Add new class to keep a full history of all the samples in a
          performance test.

        * ace/Basic_Stats.h:
        * ace/Basic_Stats.inl:
        * ace/Basic_Stats.cpp:
        * ace/Stats.h:
        * ace/Stats.cpp:
          Refactor code to compute minimum, maximum, average and jitter
          into its own class.  It used to be part of ACE_Througthput_Stats

        * performance-tests/TCP/Makefile:
        * performance-tests/TCP/tcp_test.cpp:
          Use the new ACE_Sample_History class.

Fri Oct 27 12:04:17 2000  Chris Cleeland  <cleeland_c@ociweb.com>

        * platform_chorus.GNU:
        * platform_chorus4.x_g++.GNU:
        * platform_chorus_ghs.GNU:
        * platform_cray.GNU:
        * platform_hpux_kcc.GNU:
        * platform_linux_cxx.GNU:
        * platform_osf1_4.0.GNU:
        * platform_sunos5_ghs.GNU:
        * platform_sunos5_kcc.GNU:
        * platform_sunos5_sunc++.GNU:
        * platform_vxworks5.x_diab.GNU:
        * platform_vxworks5.x_g++.GNU:
        * wrapper_macros.GNU:

          Changed the way that 'rtti', 'exceptions', and 'fast' makeflags
          get processed in wrapper_macros.GNU.  There was a discrepancy
          between the "command line" value and the "platform_macros file"
          value each needed in order to turn the feature off, e.g., zero
          on the command line and "null" in the file.  After
          investigation, the discrepancy seemed to be without reason, so
          I've canonicalized them.  You can now put "exceptions=0" on
          either the command line OR in the platform_macros.GNU file.

Fri Oct 27 10:51:26 2000  Steve Huston  <shuston@riverace.com>

        * tests/Reactor_Notify_Test.cpp: Moved definition of 'int status'
          outside the auto_ptr-scoping block.

Fri Oct 27 02:06:29 2000  Luther J Baker  <luther@cs.wustl.edu>

        * ace/OS.cpp:
        * ace/OS.i:

          Fixed some warnings due to int ace_result_ declared for NT.

Thu Oct 26 22:18:42 2000  Alex Arulanthu <Alex.Arulanthu@sylantro.com>

        * ace/Log_Msg.h:
        * ace/Log_Msg.cpp:
        * ace/Service_Config.h:
        * ace/Service_Config.cpp:
        * ace/Service_Config.i:

          Setting the right default values for process and thread level
          priority masks. I had already talk to Steve H about this
          change. I just forgot to get this in.

Thu Oct 26 14:04:42 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/OS.h:

          Reverted Doug's change which defined ACE_MAX_USERID to
          L_cuserid on all platforms.  It ended up that this
          is only valid on Windows when _POSIX_ is defined.

Thu Oct 26 11:20:43 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/RMCast/RMCast_IO_UDP.cpp:
        * ace/RMCast/RMCast_Reassembly.cpp:
        * tests/CDR_Array_Test.cpp:
        * tests/RMCast/RMCast_Fragment_Test.cpp:
        * tests/RMCast/RMCast_Membership_Test.cpp:
        * tests/RMCast/RMCast_Reassembly_Test.cpp:
        * tests/RMCast/RMCast_Reordering_Test.cpp:
        * tests/RMCast/RMCast_Retransmission_Test.cpp:
        * tests/RMCast/RMCast_UDP_Best_Effort_Test.cpp:

          The usual additions of ACE_TEXT to make ACE_USES_WCHAR builds
          happy.

Thu Oct 26 12:19:45 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Memory_Pool.cpp (unmap): Fixed a bug that was preventing
          the handle from being closed.  Thanks to Ivan Murphy and Dieter
          Quehl for reporting this.

Thu Oct 26 10:56:36 2000  Steve Huston  <shuston@riverace.com>

        * ace/OS.i (ACE_OS::rename): Added && (ACE_HAS_WINNT4 == 1) to the
          defined (ACE_HAS_WINNT4) to avoid this code section on Win95/98.

Thu Oct 26 07:39:22 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

          ace/OS.h: Added a new macro called ACE_MAX_USERID that is 32 on
          Win32 and L_cuserid on other platforms.

        * examples/Service_Configurator/IPC-tests/client/local_dgram_client_test.cpp,
          examples/Service_Configurator/IPC-tests/server/Handle_L_Stream.cpp,
          examples/Service_Configurator/IPC-tests/server/Handle_Thr_Stream.cpp,
          examples/Service_Configurator/IPC-tests/server/Handle_R_Stream:
          Fixed the calls to cuserid() so they don't pass in 0, but
          instead pass in a buffer of size ACE_MAX_USERID.  This fixes a
          problem that occurs on WinNT.  Thanks to Mike Curtis
          <mccurry@my-deja.com> for pointing this out.

        * tests/Reactor_Notify_Test.cpp: Fixed an unused args warning
          and also added the use of auto_ptr to ensure that dynamic memory
          is deleted no matter what return path is taken.

Thu Oct 26 04:00:00 2000  Luther J Baker  <luther@cs.wustl.edu>

        * ace/OS.h:
        * ace/OS.i:
        * ace/OS.cpp:
        * ace/OS_Dirent.inl:
          Fixing more ACE_HAS_PACE over NT. Most fixes just skip the
          PACE call. NT doesn't implement much of posix and so
          many ACE calls will skip pace until PACE/WINNT emulates
          more posix functionality.

Wed Oct 25 20:38:33 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/SSL/ACE_SSL.dsp:

          Removed the include/lib directories put here.  Instead
          we rely on the fact that OpenSSL should be in
          DevStudio's global include and library directories.

Wed Oct 25 13:20:24 2000  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Purgable_Map_Manager_Test: Removed this deprecated test.
          The following files were effected:

          - Makefile.am
          - icc.bat
          - t.icc

          These files were removed:

          - Purgable_Map_Manager_Test.cpp
          - Purgable_Map_Manager_Test.icc

Wed Oct 25 11:24:42 2000  Darrell Brunsch  <brunsch@uci.edu>

        * ace/adapter/README:  (removed)
        * ace/adapter/ace/ACE.h:  (removed)
        * ace/adapter/ace/ARGV.h:  (removed)
        * ace/adapter/ace/ATM_Addr.h:  (removed)
        * ace/adapter/ace/Arg_Shifter.h:  (removed)
        * ace/adapter/ace/Capabilities.h:  (removed)
        * ace/adapter/ace/DEV_Addr.h:  (removed)
        * ace/adapter/ace/DLL.h:  (removed)
        * ace/adapter/ace/Dirent.h:  (removed)
        * ace/adapter/ace/Dynamic_Service.h:  (removed)
        * ace/adapter/ace/FIFO.h:  (removed)
        * ace/adapter/ace/FIFO_Recv.h:  (removed)
        * ace/adapter/ace/FIFO_Recv_Msg.h:  (removed)
        * ace/adapter/ace/FIFO_Send.h:  (removed)
        * ace/adapter/ace/FIFO_Send_Msg.h:  (removed)
        * ace/adapter/ace/FILE_Addr.h:  (removed)
        * ace/adapter/ace/Functor.h:  (removed)
        * ace/adapter/ace/High_Res_Timer.h:  (removed)
        * ace/adapter/ace/INET_Addr.h:  (removed)
        * ace/adapter/ace/MEM_Addr.h:  (removed)
        * ace/adapter/ace/Malloc_T.h:  (removed)
        * ace/adapter/ace/Memory_Pool.h:  (removed)
        * ace/adapter/ace/OS.h:  (removed)
        * ace/adapter/ace/OS_Dirent.h:  (removed)
        * ace/adapter/ace/OS_String.h:  (removed)
        * ace/adapter/ace/SOCK_Dgram_Bcast.h:  (removed)
        * ace/adapter/ace/SOCK_Dgram_Mcast.h:  (removed)
        * ace/adapter/ace/SOCK_Dgram_Mcast_QoS.h:  (removed)
        * ace/adapter/ace/SPIPE_Addr.h:  (removed)
        * ace/adapter/ace/Service_Config.h:  (removed)
        * ace/adapter/ace/Service_Object.h:  (removed)
        * ace/adapter/ace/Stats.h:  (removed)
        * ace/adapter/ace/System_Time.h:  (removed)
        * ace/adapter/ace/Task_T.h:  (removed)
        * ace/adapter/ace/Trace.h:  (removed)

          The adapter classes were removed since they were
          not ready for prime time and their main purpose was
          invalidated.  If need be, they can be brought back in
          the future.

Wed Oct 25 12:26:25 2000  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/RMCast/RMCast_UDP_Reliable_Sender.cpp:
          Yet another missing #include

Wed Oct 25 09:50:48 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/RMCast/RMCast_IO_UDP.h:
        * ace/RMCast/RMCast_IO_UDP.cpp:
        * ace/RMCast/RMCast_UDP_Reliable_Receiver.h:
        * ace/RMCast/RMCast_UDP_Reliable_Receiver.i:
        * ace/RMCast/RMCast_UDP_Reliable_Receiver.cpp:
        * ace/RMCast/RMCast_UDP_Reliable_Sender.h:
        * ace/RMCast/RMCast_UDP_Reliable_Sender.i:
        * examples/RMCast/Send_File/Makefile:
        * examples/RMCast/Send_File/Sender.cpp:
        * examples/RMCast/Send_File/Receiver.cpp:
          Change several open() methods to init() because the base class
          already has a virtual open() method, but with a different
          signature, some compilers generate warnings when this happens.
          Add #include required in platforms that do not define
          ACE_TEMPLATES_REQUIRE_SOURCE

Wed Oct 25 09:32:10 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/Object_Manager.cpp:

          Changed to only use the CRT_ERROR disabling under
          ACE_DISABLE_WIN32_ERROR_WINDOWS when _DEBUG is defined,
          since crtdbg.h is only included by ACE when _DEBUG is
          defined.

Wed Oct 25 10:51:26 2000  Steve Huston  <shuston@riverace.com>

        * ace/Select_Reactor_Base.cpp (purge_pending_notifications): Added
          ACE_UNUSED_ARG (eh) for the non-ACE_HAS_REACTOR_NOTIFICATION_QUEUE
          case to quiet g++'s unused argument warning.

Tue Oct 24 23:14:55 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/OS_String.cpp:
        * ace/config-win32-borland.h:

          Added ACE_LACKS_WCSDUP to do something similar to
          ACE_HAS_STRDUP_EMULATION.  Added this to Borland's config,

          Also fixed several warnings in OS_String's emulation
          functions that show up with g++.

        * ace/Object_Manager.cpp:

          Added code in the Object Manager to disable some of the
          error windows that pops up in Win32 apps.  If
          ACE_DISABLE_WIN32_ERROR_WINDOWS is defined, then
          ACE_ASSERT's and Access Violations will not pop up
          error box's anymore.  This was mainly added for auto
          build purposes.

        * ace/Select_Reactor_Base.cpp:

          Changed ACE_TEXT's to ACE_LIB_TEXT.

        * ace/WFMO_Reactor.cpp:

          In ACE_WFMO_Reactor_Notify::purge_pending_notifications
          there was an instance of this type of code:

          for (size_t index = 0; index < ....)
          ...
          for (index = 0; index ....)

          On Borland, the index is scoped within the for loop, so
          the second use of it produces an error.  I moved the
          declaration outside of the loop to fix this.

Tue Oct 24 23:40:33 2000  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/SString_Test.cpp (main): Added tests for string
          assignments.

Tue Oct 24 19:30:16 2000  Steve Huston  <shuston@riverace.com>

        * ace/Select_Reactor_Base.cpp (purge_pending_notifications): Correct
          erroneous use of 'index' as a variable when it's also a function.

Tue Oct 24 13:54:49 2000  Ossama Othman  <ossama@uci.edu>

        * ace/Makefile (TEMPLATE_FILES):

          Added missing Test_and_Set source file to the list.

        * ace/Makefile.am (libACE_Utils_la_SOURCES, HEADER_FILES,
          INLINE_FILES, TEMPLATE_FILES):

          Updated these lists of sources with the newly added sources.

Tue Oct 24 12:30:47 2000  Steve Huston  <shuston@riverace.com>

        * ace/Reactor.h (ACE_Reactor):
        * ace/Reactor_Impl.h (ACE_Reactor_Notify and ACE_Reactor_Impl):
        * ace/Select_Reactor_Base.h (ACE_Select_Reactor_Notify and
          ACE_Select_Reactor_Impl):
        * ace/WFMO_Reactor.h (ACE_WFMO_Reactor_Notify and ACE_WFMO_Reactor):
          Added new function, purge_pending_notifications (ACE_Event_Handler *)

        * ace/Reactor.i (ACE_Reactor):
        * ace/Select_Reactor_Base.i (ACE_Select_Reactor_Impl):
          Added implementation of purge_pending_notifications that forwards
          the call on to the proper implementation/handler object.

        * ace/Select_Reactor_Base.cpp (ACE_Select_Reactor_Notify): Added
          implementation of purge_pending_notifications. Works when
          ACE_HAS_REACTOR_NOTIFICATION_QUEUE is defined. Else it does
          ACE_NOTSUP_RETURN.

        * ace/WFMO_Reactor.cpp (ACE_WFMO_Reactor, ACE_WFMO_Reactor_Notify):
          Added implementation of purge_pending_notifications.

        Thanks to Edan Ayal <edana@bandwiz.com> for supplying the code for
        this new feature.

        * ace/Reactor.i (notify): Set the event handler's reactor pointer if
          it doesn't already have one. Enables the event handler to purge
          its notifications upon destruction.

        * ace/Event_Handler.cpp (~ACE_Event_Handler): Call reactor's
          purge_pending_notifications function to avoid delivering notifies
          to a deleted handler.

        * tests/Reactor_Notify_Test.cpp: Added the run_notify_purge_test
          function to exercise the above new purge_pending_notifications.

Tue Oct 24 12:05:42 2000  Darrell Brunsch  <brunsch@uci.edu>

        * ace/OS_String.inl:

          Removed an extra } after an #endif that was producing
          warnings on OSF.

Tue Oct 24 09:27:04 2000  Priyanka Gontla  <pgontla@ece.uci.edu>

        * ace/Test_and_Set.cpp:
          Removed the repeated inclusion of the header file.
          Thanks to Darrell.

Tue Oct 24 03:24:42 2000  Darrell Brunsch  <brunsch@uci.edu>

        * ace/Basic_Types.h:
        * ace/config-win32-common.h:

          Moved the code that defines ACE_SIZEOF_WCHAR to the config file,
          so it is easier to add it to other platforms.

        * ace/config-linux-common.h:

          Added ACE_SIZEOF_WCHAR, ACE_LACKS_ITOW, ACE_LACKS_WCSICMP, and
          ACE_LACKS_WCSNICMP definitions.

        * ace/Synch.h:

          Moved the ACE_LEGACY_MODE includes further down in the file.  It
          was producing errors the way it was, since Test_and_Set needed
          the Guard classes defined before it was included.

Mon Oct 23 15:31:52 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Malloc_Allocator.cpp:
          Yet another calloc() method that was declared but not defined.

Mon Oct 23 11:37:06 2000  Priyanka Gontla  <pgontla@ece.uci.edu>

        * ace/Init_ACE.cpp:
          Removed the semicolon at the end of ACE_RCSID.

Mon Oct 23 11:20:53 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Malloc_T.i:
          Add missing function, now things actually link.

Mon Oct 23 10:02:36 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Malloc_T.h:
          Add missing prototype, now the code actually compiles.

Mon Oct 23 10:59:21 2000  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/OS_String.cpp: Fixed a compile error in gcc 2.95.2.

        * ace/Cached_Connect_Strategy_T.h
        * ace/Cached_Connect_Strategy_T.cpp: Added fixes provided by Edan
          Ayal <edana@bandwiz.com>.

Mon Oct 23 08:37:49 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Malloc_T.{h,cpp}
        * ace/Malloc_Base.h,
        * ace/Malloc_Allocator.{h,cpp}: Added a new calloc() method that
          has the same (default) signature as the one in the C/C++
          standard library.  Thanks to Shourya Sarcar
          <Shourya.Sarcar@geind.ge.com> for reporting this.

        * examples/ASX/Event_Server/Event_Server/Peer_Router.cpp (handle_input):
          Fixed a mistake where we were calling release() via a NULL
          pointer!  Thanks to Pedro Brandao <pbrandao@inescn.pt> for
          reporting this.

Sun Oct 22 18:01:34 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/OS_String.cpp:

          strtok_r_emulation wasn't protected by #if !defined
          (ACE_HAS_REENTRANT_FUNCTIONS).

Sun Oct 22 17:30:42 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/ACE.i:

          wcslen was used directly here, changed it to
          ACE_OS_String::strlen.

        * ace/ace_wchar.inl:

          Moved around some of the inline functions to
          remove warnings.

        * ace/config-vxworks5.x.h:

          Added all the ACE_LACKE_WCS* that VxWorks needs.

Sun Oct 22 17:22:32 2000  Darrell Brunsch <brunsch@uci.edu>

        * tests/OS_Test.cpp:

          Borland complained about memchr (NULL, ...), since
          it couldn't figure out whether to use the void * or
          const void* verison of ACE_OS_String::memchr.
          Added an explicit cast to help out.

Sun Oct 22 17:09:26 2000  Darrell Brunsch <brunsch@uci.edu>

        * tests/MT_SOCK_Test.cpp:

          Missed an ACE_ALPHABET in a previous checkin.

          And based on this part of the description in the file:

          "Note that most of the connections will fail since
           we're overrunning the size of the listen queue for
           the acceptor-mode socket."

          I changed the connection_failed ACE_ERROR_RETURN to an
          ACE_DEBUG and return. Now it will not show up as an error
          via run_test.pl.

Sun Oct 22 16:32:24 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/OS_String.cpp:
        * ace/OS_String.h:
        * ace/OS_String.inl:
        * ace/config-linux-common.h:

          Renamed ACE_HAS_SAFE_WCSTOK to ACE_LACKS_WCSTOK to be
          consistent with the rest of the ACE_LACKS_WCS* macros.

          Fixed a signature for wcsncmp_emulation, as it was taking
          in const wchar_t as the first arg instead of const
          wchar_t *.

          Added wcscspn_emulation and an implementation for
          wcsncmp_emulation.

Sun Oct 22 15:35:38 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/Makefile.bor:

          Changed ACE_Sock_Connect.obj to Sock_Connect.obj, since
          it appears that it has been renamed.

Sun Oct 22 15:07:42 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/ace_dll.dsp:

          While playing with doxygen, I found some old .h files listed
          in the project but no longer existed.  Removed these.

        * ace/OS_String.cpp:
        * ace/OS_String.h:
        * ace/OS_String.inl:

          Added quite a few emulation macros for wcs* functions that
          often do not exist on platforms.  Since these wcs* functions
          just play with wchar_t's, they are not difficult to put in.
          Some, such as to_upper and strtod/l/ul are more difficult,
          so they are not present on platforms without support for
          them.

          Also updated the docs to doxygen style.  Someday I'll get
          around to writing a script to do this...

        * ace/config-win32-borland.h:
        * ace/config-win32-msvc.h:

          Added a couple of macros:
          - ACE_HAS_STRCASECMP_EQUIVALENT
          - ACE_HAS_STRNCASECMP_EQUIVALENT
          - ACE_ITOA_EQUIVALENT

          These are used to specify different names for functions
          that differ in names across different compilers.

        * tests/OS_Test.cpp:

          Added tests to test OS_String methods so I can make sure
          the emulations work.

        * tests/Buffer_Stream_Test.cpp:
        * tests/Conn_Test.cpp:
        * tests/MM_Shared_Memory_Test.cpp:
        * tests/Mem_Map_Test.cpp:
        * tests/Priority_Buffer_Test.cpp:
        * tests/Priority_Reactor_Test.cpp:
        * tests/Reactor_Performance_Test.cpp:
        * tests/SOCK_Test.cpp:
        * tests/SPIPE_Test.cpp:
        * tests/test_config.h:

          In order to get the test_config.h to work when a project
          has more than one .cpp file that includes it (and some
          compilers give warnings about a static char[]) I moved
          ACE_ALPHABET into the tests that need it.  Also I changed
          it to a static const char[] in places that allowed it.

          So it could be possible to move it back to test_config.h
          now that it can be static const char[], but I'm not 100%
          sure that will keep all compilers from complaining.

        * tests/run_test.lst:

          Added OS_Test to the list of tests run.

Sun Oct 22 17:11:16 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Malloc_T.h: Added a default value of sizeof (T) to the
          malloc() method of class ACE_Cached_Allocator.  Thanks to
          Shourya Sarcar <Shourya.Sarcar@geind.ge.com> for reporting this.

Sun Oct 22 10:08:31 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Makefile.bor:
          Update file names for the ACE_ components.

Sun Oct 22 08:57:33 2000  David L. Levine <levine@cs.wustl.edu>

        * tests/test_config.h: implemented these changes to remove
          g++ warnings introduced by:

          Thu Oct 19 13:17:41 2000  Darrell Brunsch <brunsch@uci.edu>

          1) Moved ace_file_stream typedef to end of file.
          2) Moved inline definition of ACE_Test_Output::output_file ()
             to before first use.
          3) Removed static qualifier from ACE_ALPHABET.

Sat Oct 21 12:52:58 2000  Carlos O'Ryan  <coryan@uci.edu>

        * Makefile*:
          Update dependencies.

Fri Oct 20 20:46:37 2000  Steve Huston  <shuston@riverace.com>

        * ace/OS.i (chdir): Added !defined (AIX) to the !defined (ACE_WIN32)
          && defined (<Visual Age C++>) to get it to build clean on AIX.

        * ace/ace-dll.icc: Added Base_Thread_Adapter, Thread_Adapter,
          Flag_Manip, Handle_Ops, Init_ACE, Lib_Find, Sock_Connect,
          OS_Log_Msg_Attributes, Malloc_Allocator, PI_Malloc,
          Thread_Exit, Log_Msg_IPC, OS_Thread_Adapter, Log_Msg_Backend,
          Thread_Control (h and cpp).

        * ace/Handle_Ops.cpp:
        * ace/PI_Malloc.cpp: Corrected ACE_RCSID args.

Fri Oct 20 16:38:55 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:
          Update MSVC projects

Fri Oct 20 16:23:40 2000  Priyanka Gontla  <pgontla@ece.uci.edu>

        * ace/ACE.h:
          Modified to include the renamed files.

Fri Oct 20 14:13:43 2000  Priyanka Gontla  <pgontla@ece.uci.edu>

        * ace/Sock_Connect.i:
        * ace/Sock_Connect.h:
        * ace/Sock_Connect.cpp:

        * ace/Lib_Find.i:
        * ace/Lib_Find.h:
        * ace/Lib_Find.cpp:

        * ace/Init_ACE.i:
        * ace/Init_ACE.h:
        * ace/Init_ACE.cpp:

        * ace/Handle_Ops.i:
        * ace/Handle_Ops.h:
        * ace/Handle_Ops.cpp:

        * ace/Flag_Manip.i:
        * ace/Flag_Manip.h:
        * ace/Flag_Manip.cpp:
          Renamed the recently added ACE_* files as above to follow
          the naming convention.

        * ace/IPC_SAP.h:
        * ace/IO_SAP.h:
        * ace/FILE_Connector.cpp:
        * ace/FILE_Addr.h:
          Changed the include files to reflect the above change.

        * ace/Makefile:
          Added the new files and updated dependencies.

Fri Oct 20 11:40:31 2000  Priyanka Gontla  <pgontla@ece.uci.edu>

        * ace/Makefile:
          Updated dependencies.

Fri Oct 20 02:52:17 2000  Marina Spivak  <marina@cs.wustl.edu>

        * bin/auto_run_tests.lst:

          Added RTCORBA Server_Declared test.

Thu Oct 19 18:02:54 2000  Priyanka Gontla  <pgontla@ece.uci.edu>

        * ace/OS_Log_Msg_Attributes.h :
          Modified u_long to 'unsigned long' as the compiler was
          complaining.

Thu Oct 19 13:52:49 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/Malloc_Allocator.cpp:
        * ace/Naming_Context.cpp:
        * ace/PI_Malloc.cpp:

          Needed to change some ACE_TEXT's to ACE_LIB_TEXT.

        * ace/OS.h:
        * ace/OS_Log_Msg_Attributes.h:

          Moved the definition of ACE_OSTREAM_TYPE from OS.h to
          OS_Log_Msg_Attributes.h, since some include paths in
          ACE_LEGACY_MODE needed it there.

Thu Oct 19 13:17:41 2000  Darrell Brunsch <brunsch@uci.edu>

        * tests/run_test.pl:

          Changed the method used to detect errors in a log file.  Since
          the log contains the log message type (such as LM_ERROR),
          I changed the detection to look for this.

        * tests/ACE_Init_Test.cpp:

          Added ACE_START_TEST and ACE_END_TEST so the run_test.pl
          script won't think ACE_Init_Test failed.

        * tests/test_config.h:

          With the way ACE_ALPHABET and some functions were defined,
          they would cause duplicate symbols if test_config.h was
          included in more than one object file.  Changed them so
          the symbols are static to the file.

        * tests/Reactors_Test.cpp:

          When the reactor was shutting down, it was returning a
          information message with ACE_ERROR_RETURN.  Since it really
          wasn't an error condition, changed this to a ACE_DEBUG
          and return 0.

        * tests/SOCK_Send_Recv_Test.cpp:

          The test was checking errno without checking a return value.
          As a result, it was getting an out-of-date errno and
          incorrectly interpreted that as an error.  Fixed.

Thu Oct 19 12:12:00 2000  Darrell Brunsch <brunsch@uci.edu>

        * ace/ACE_Lib_Find.h:

          Added missing static specifier for the wchar version of
          strrepl.

Thu Oct 19 12:03:41 2000  Darrell Brunsch <brunsch@uci.edu>

        * apps/JAWS2/HTTPU/HTTPU.DSP:
        * apps/JAWS2/JAWS/jaws.dsp:

          These two projects were placing their DLL's in the wrong
          directory.

Thu Oct 19 14:23:52 2000  Steve Huston  <shuston@riverace.com>

        * ace/ace-dll.icc: Removed extraneous ',' from Win32 section.

Thu Oct 19 12:08:45 2000  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Cached_Connect_Strategy_T.cpp: Fixed compile errors with old
          g++.

Thu Oct 19 09:56:44 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Basic_Types.h:
          Must #include stdio.h for platforms that lack 'long long'

Thu Oct 19 09:50:30 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Log_Msg.cpp:
          Fixed problems during TSS cleanup, the ipc_backend_ object was
          used after being destroyed. Apparently this only happens on some
          platforms, but fortunately David's build detected the bug.

Thu Oct 19 09:07:47 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/RMCast/RMCast_Copy_On_Write.h:
          Fixed problem in 'friend' declaration, most compilers let it go
          through, but not the newer gcc snapshots.  Thanks to Craig
          Rodrigues <crodrigu@bbn.com> for providing this patch.

Wed Oct 18 15:44:14 2000  Luther J Baker  <luther@cs.wustl.edu>

        * OS.h:
        * OS.i:
        * OS.cpp:

          Modifications to sem_open debugging ACE_HAS_PACE over NT.

Wed Oct 18 09:45:12 2000  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Cached_Connect_Strategy_T.h :
        * ace/Cached_Connect_Strategy_T.cpp: Added some fixes provided by
          Edan Ayal <edana@bandwiz.com>.

Tue Oct 17 23:35:33 2000  David L. Levine <levine@cs.wustl.edu>

        * Don't use ACE_TSS_EMULATION by default with LynxOS 3.1.0
          because it's not necessary, according to
          Jessie Ragsdale <jessie.ragsdale@latuslw.com>, and breaks
          split=1.  Jessie was able to create upo to 118 natvie TSS keys,
          so the 3-key limit of LynxOS 3.0.0 has been removed in 3.1.0.
          [Bug 701]

Tue Oct 17 00:21:41 2000  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * examples/Service_Configurator/IPC-tests/server/Handle_Timeout.h,
          examples/Service_Configurator/IPC-tests/server/Handle_Timeout.i,
          examples/Service_Configurator/IPC-tests/server/Handle_R_Dgram.h,
          examples/Service_Configurator/IPC-tests/server/Handle_R_Dgram.i,
          examples/Service_Configurator/IPC-tests/server/Handle_Broadcast.h,
          examples/Service_Configurator/IPC-tests/server/Handle_Broadcast.i,
          examples/Service_Configurator/IPC-tests/server/Handle_L_FIFO.h,
          examples/Service_Configurator/IPC-tests/server/Handle_L_FIFO.i,
          examples/Service_Configurator/IPC-tests/server/Handle_R_Stream.h,
          examples/Service_Configurator/IPC-tests/server/Handle_R_Stream.i:
          Changed *::get_handle(), *::handle_input(), and
          *::handle_close() to use ACE_HANDLE and ACE_INVALID_HANDLE
          instead of int and -1.  Thanks to Mike Curtis
          <mccurry@my-deja.com> for pointing this out.

Mon Oct 16 14:05:13 2000  David L. Levine <levine@cs.wustl.edu>

        * ACE-INSTALL.html: removed spurious 3D characters from
          VxWorks section.

Mon Oct 16 11:17:08 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Makefile.am:
          Fixed misnamed file.

Mon Oct 16 11:07:34 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Log_Msg.cpp:
          Fixed memory leak, or rather, make sure that the default Log_Msg
          IPC backend is destroyed when the Log_Msg class is closed.

        * ace/Object_Manager.cpp:
          Fixed typo in #endif, the final comment was not really a
          comment.

Sun Oct 15 19:14:13 2000  Marina Spivak  <marina@cs.wustl.edu>

        * bin/auto_run_tests.lst:
          Excluded tests/RTCORBA/Client_Propagated from running in
          Exceptions build since it's a linux build.

Sat Oct 14 15:04:16 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/OS.h:
        * ace/Naming_Context.h:
          Static services must be exported from the library, so they
          require the right export directives.
          Added a new ACE_STATIC_SVC_DECLARE_EXPORT() macro for that
          purpose and use it for the Naming_Context.

Sat Oct 14 09:55:43 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Makefile.bor:
          Fixed typo in file name.

Sat Oct 14 03:32:54 2000  Priyanka Gontla  <pgontla@ece.uci.edu>

        * ace/ACE_Flag_Manip.h:
        * ace/Service_Templates.h:
          Added a missing header file.

Fri Oct 13 22:40:27 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:
          Add new files to the project.

        * ace/Log_Msg.cpp:
          Fixed typo in management of structured exception handling
          callbacks.

Fri Oct 13 21:49:54 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Makefile:
        * ace/Makefile.am:
        * ace/Makefile.bor:
          Add the new Log_Msg files to the Makefiles.

        * ace/ACE_Lib_Find.cpp:
          Add ACE_RCSID macro

        * ace/config-all.h:
        * ace/OS_Log_Msg_Attributes.h:
        * ace/OS_Log_Msg_Attributes.inl:
        * ace/OS_Log_Msg_Attributes.cpp:
        * ace/Base_Thread_Adapter.h:
        * ace/Base_Thread_Adapter.cpp:
          We pre-allocate the Log_Msg attributes in the Thread_Adapter, to
          minimize memory allocations during thread creation.

        * ace/Log_Msg_Callback.h:
        * ace/Log_Msg_Callback.cpp:
          Move the Log_Msg callback interface to its own file.

        * ace/Log_Msg_Backend.h:
        * ace/Log_Msg_Backend.cpp:
          Define the interface for Log_Msg backend strategies.

        * ace/Log_Msg_IPC.h:
        * ace/Log_Msg_IPC.cpp:
          Implement a Log_Msg backend based on IPC.
          The intention is to decouple Log_Msg from IPC components, thus
          Log_Msg only uses the abstract class ACE_Log_Msg_Backend.
          In the future we could implement other backends, such as logging
          to syslog or the NT event log directly.
          We need to use a dynamically loaded factory to complete the
          decoupling, but that would take a little more effort.

        * ace/Log_Msg.h:
        * ace/Log_Msg.cpp:
          Use the attributes directly.
          Use the new Log_Msg_Backend classes.

        * tests/Log_Msg_Test.cpp:
        * examples/Log_Msg/test_callback.cpp:
          #include Log_Msg_Callback.h, the file is not included unless
          ACE_LEGACY_MODE is set.

        * tests/Malloc_Test.cpp:
          Add missing #include

        * examples/Shared_Malloc/test_position_independent_malloc.h:
        * examples/Shared_Malloc/test_position_independent_malloc.cpp:
          Reordered #includes to make them more standard.

Fri Oct 13 22:34:59 2000  Marina Spivak  <marina@cs.wustl.edu>

        * bin/auto_run_tests.lst:

          Added new TAO/tests/RTCORBA/Client_Protocol test to the list.
          Removed TAO/tests/Endpoint_Per_Priority because
          TAO::Client_Priority_Policy is now disabled in builds by
          default. Enabled TAO/tests/RTCORBA/Server_Protocol for linux
          builds (it was disabled for some reason).

Fri Oct 13 19:12:31 2000  Steve Huston  <shuston@riverace.com>

        * ace/Malloc_T.h: Added #include "ace/Malloc.h" because the definition
          of ACE_Control_Block is needed, and it's in Malloc.h.

Fri Oct 13 18:47:51 2000  Steve Huston  <shuston@riverace.com>

        * ace/Caching_Strategies_T.cpp:
        * ace/Dynamic_Service.cpp:
        * ace/Timer_Hash_T.cpp:
        * ace/Timer_Wheel_T.cpp:
        * netsvcs/lib/Log_Message_Receiver.cpp: Added #include "ace/Log_Msg.h"
          else IBM C++ can't compile the template at instantiation time.

        * tests/Process_Strategy_Test.h: Added #include "ace/File_Lock.h" to
          see ACE_File_Lock, so IBM C++ can compile the templates.

Fri Oct 13 18:43:24 2000  Steve Huston  <shuston@riverace.com>

        * tests/MM_Shared_Memory_Test.cpp: Changed SYNCHRONIZER ctor for
          ACE_SV_Semaphore_Simple case to specify
          ACE_SV_Semaphore_Simple::ACE_CREATE, not ACE_SV_Semaphore_Complex::
          ACE_CREATE. Else it got compile failures on Solaris, Sun CC,
          in PACE build (why in just PACE build? Dunno...)

Fri Oct 13 13:57:40 2000  Priyanka Gontla  <pgontla@ece.uci.edu>

        * ace/Process_Manager.h :
        * ace/Process_Manager.cpp :

        * ace/Service_Config.h :
        * ace/Service_Config.cpp:

          Removed dependency of Service_Config on Process_Manager by
          registering the Process_Manager singleton with the
          Object_Manager when it is instantiated. This way we need not call
          ACE_Process_Manager::close_singleton () in Service_Config
          implementation.

Mon Oct  9 10:34:18 2000  Ossama Othman  <ossama@uci.edu>

        * configure.in:

          Corrected comments regarding the ACE_HAS_STREAM_PIPES run-time
          test.

Fri Oct 13 11:41:29 2000  Priyanka Gontla  <pgontla@ece.uci.edu>

        * ace/Makefile.bor (OBJFILES):
        * ace/Makefile.am (libACE_Utils_la_SOURCES):
          Updated to include the new files.

        * examples/Shared_Malloc/test_position_independent_malloc.cpp:
          Included a header file.

Fri Oct 13 11:43:56 2000  David L. Levine <levine@cs.wustl.edu>

        * ACE-INSTALL.html: updated supported platforms list.

Fri Oct 13 11:39:54 2000  David L. Levine <levine@cs.wustl.edu>

        * ACE-INSTALL.html: added Jaffar Shaikh's <Jaffar_Shaikh@Mitel.COM>
          notes for building for VxWorks target on NT host.

Fri Oct 13 06:26:18 2000  Balachandran Natarajan  <bala@cs.wustl.edu>

        * examples/RMCast/Send_File:
          Added makefiles for Send_File multicast example.

        * include/makeinclude/build_dll.bor:
        * include/makeinclude/build_exe.bor:
        * include/makeinclude/build_lib.bor:
          Added support for compilation of C source files.

        * include/makeinclude/ace_flags.bor:
          Added IORManip and FaultTolerance libraries for TAO.

          Thanks to Christopher Kohlhoff for providing these fixes.

Thu Oct 12 23:33:21 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/Synch.h:
        * ace/Synch_T.h:
        * ace/Test_and_Set.cpp:
          Fixed order of includes to compile under gcc.

Thu Oct 12 22:58:13 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/ACE_Lib_Find.h:
        * ace/ACE_Lib_Find.cpp:
        * ace/ACE.cpp:
          Move the wchar version of strrepl and strsplit_r to the
          ACE_Lib_Find class, the other versions where there already.

        * ace/FILE_IO.h:
        * ace/FILE_Connector.cpp:
          Add missing #include in FILE_IO.h that is used in FILE_IO.i

        * ace/Test_and_Set.h:
        * ace/Test_and_Set.cpp:
          Fixed the guards for the .cpp file. Add the #include for
          platforms that requires template source visible, and add the
          #pragma implementation for (really) old g++ versions.

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:
          Move Test_and_Set.cpp to the "Template Files" folder, and
          disable compilation for it.

Thu Oct 12 23:09:17 2000  Joe Hoffert  <joeh@cs.wustl.edu>

        * ace/OS.i:
          Added a !defined (__Lynx__) check for ACE_HAS_PACE in the
          ACE_OS::mmap function. ACE does some special things for Lynx
          for mmap since Lynx's mmap is deficient. Probably should
          move this fix from ACE to PACE at some point.

Thu Oct 12 19:38:00 2000  Ossama Othman  <ossama@uci.edu>

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:

          Added new files introduced by Priyanka's footprint reduction
          effort.

Thu Oct 12 18:19:46 2000  Priyanka Gontla  <pgontla@ece.uci.edu>

        * ace/Makefile:
          Made the corresponding changes.

        * ace/System_Time.cpp:
        * ace/UPIPE_Connector.cpp :
        * ace/Timer_Queue_T.h :
        * ace/Task.cpp :
        * ace/POSIX_Asynch_IO.cpp:
        * ace/OS.h:
        * ace/Memory_Pool.cpp:
        * ace/MEM_SAP.h:
        * ace/MEM_Acceptor.cpp:
        * ace/Logging_Strategy.cpp:
        * ace/FIFO.h:
        * ace/DLL.cpp:
        * ace/IO_SAP.h:
        * ace/Malloc_T.h :
          Cosmetic changes. Ex: Change the included header files to the
          new header files and similar changes.

        * ace/Naming_Context.h:
        * ace/Naming_Context.cpp:
        * ace/Object_Manager.cpp:

          Removed the dependency of Object_Manager on Naming_Context.

        * ace/Test_and_Set.h:
        * ace/Test_and_Set.cpp:
        * ace/Test_and_Set.i:

          Moved the class Test_and_Set from Synch_T to here. This helped
          remove the dependency on Event_Handler.

        * ace/Service_Templates.h:
        * ace/Service_Templates.cpp:

          Moved the template instantiations from Service_Config.cpp and
          Service_Types.cpp since these templates were not needed by the
          respective files.

        * ace/Malloc_Allocator.h :
        * ace/Malloc_Allocator.cpp:
        * ace/Malloc_Allocator.i :

        * ace/PI_Malloc.h  :
        * ace/PI_Malloc.cpp:
        * ace/PI_Malloc.i  :

        * ace/Malloc.h   :
        * ace/Malloc.cpp :
        * ace/Malloc.i   :

          Moved the ACE_PI_Control_Block, ACE_New_Allocator and
          ACE_Static_Allocator_Base classes to new files: PI_Malloc and
          Malloc_Allocator.

          This move helps in reduction in size of Malloc.i since the
          template instantiations which were included only for
          ACE_PI_Control_Block are now moved to the new file: PI_Malloc.
          In addition, is the effect of clear and minimized dependencies.

        * ace/ACE.h   :
        * ace/ACE.cpp :
        * ace/ACE.i   :

          Moved several functions in ACE to new classes to minimize the
          dependencies on and by ACE. Each of the following files
          have the listed functions.

        * ace/Malloc_Instantiations.cpp:
          Moved the template instantiations to this file.

        * ace/ACE_Sock_Connect.h   :
        * ace/ACE_Sock_Connect.cpp :
        * ace/ACE_Sock_Connect.i   :

          Has the socket connection establishment function calls :
          bind_port, get_bcast_addr, get_ip_interfaces, count_interfaces
          and get_handle.

          Helps remove the dependency on INET_Addr.

        * ace/ACE_Handle_Ops.h:
        * ace/ACE_Handle_Ops.cpp:
        * ace/ACE_Handle_Ops.i:

          Has the <handle_timed_open> operation on handles.
          Helps remove the dependency of FILE_Connector, SPIPE_COnenctor,
          UPIPE_Conenctpr and DEV_Connector on ACE.

        * ace/ACE_Lib_Find.h   :
        * ace/ACE_Lib_Find.cpp :
        * ace/ACE_Lib_Find.i   :

          Includes all the functions to search and open shared
          libraries and realted functions :
          ldfind, ldopen, ldname, get_temp_dir, open_temp_file,
          strrepl, strsplit_r.

          Removes the dependency of DLL, Logging_Strategy and FILE_Addr on
          ACE. Effects few other classes too but doesnt remove the
          dependency on ACE for those classes.

        * ace/ACE_Flag_Manip.h  :
        * ace/ACE_Flag_Manip.cpp:
        * ace/ACE_Flag_Manip.i  :

          The Flag Manipulation functions:
          set_flags (), clr_flags () and get_flags ().

          Removes the dependency of IO_SAP and IPC_SAP on ACE.

        * ace/ACE_Init.h  :
        * ace/ACE_Init.cpp:
        * ace/ACE_Init.i  :

          The init () and fini () functions which are used
          for the initialization and shutting down of ACE.

          Removes dependency on Object_Manager.

Thu Oct 12 15:41:46 2000  Carlos O'Ryan  <coryan@uci.edu>

        * include/makeinclude/rules.bin.GNU:
          List the LDFLAGS before the name of the program, this seems to
          work better for some of our sponsors.

Thu Oct 12 15:40:51 2000  Carlos O'Ryan  <coryan@uci.edu>

        * ace/OS.cpp (ACE_OS_GUARD):
          Use explicit names for the OS guards, otherwise the SGI compiler
          (7.30 + several patches) crashes.  Thanks to Philip Miller
          <pwmiller@sarnoff.com> for reporting the problem and providing
          the patch.

Thu Oct 12 12:15:23 2000  Angelo  <corsaro@cs.wustl.edu>

        * ACE version 5.1.10 released.
