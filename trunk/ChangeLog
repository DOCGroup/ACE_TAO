Wed Jul 09 21:22:24 2003  Irfan Pyarali  <irfan@oomworks.com>

	* ace\Timer_Heap_T.cpp (insert): 

	  The decision to grow the heap was made on this formula:

	    if (this->cur_size_ + 2 >= this->max_size_)

	  though the correct decision should have been:
	
	    if (this->cur_size_ + this->cur_limbo_ + 2 >= this->max_size_)	  

	  Without this, tests/Timer_Queue_Test was failing with
	  cur_size_ = 15, cur_limbo_ = 20 and max_size_ = 35, but insert()
	  did not regrow the heap and eventually schedule() failed.

Wed Jul 09 13:17:57 2003  Irfan Pyarali  <irfan@oomworks.com>

	* ace\Select_Reactor_Base.cpp (purge_pending_notifications): 

	  Fixed build problem when ACE_HAS_REACTOR_NOTIFICATION_QUEUE,
	  there was a typo in the name of a local variable.  Thanks to
	  Carlos for pointing this out.

Tue Jul 08 17:28:58 2003  Irfan Pyarali  <irfan@oomworks.com>

	* tests\MT_Reactor_Timer_Test.cpp (handle_close): 

	  Not sure why handle_close() was trying to remove the handler
	  from the Reactor.  handle_close() is called as a result of being
	  removed from the Reactor.  No need to remove again.

Tue Jul 08 15:02:48 2003  Irfan Pyarali  <irfan@oomworks.com>

	* examples\Reactor\Misc\pingpong.cpp: 

	  Included "ace/Test_and_Set.h" explicitly.

Tue Jul 08 14:49:38 2003  Irfan Pyarali  <irfan@oomworks.com>

	* ace\Timer_List_T: 
	* ace\Timer_Wheel_T: 

	  Fixed unused arg warning in cancel_i().

Mon Jul  7 23:17:21 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

	* ace/Thread_Manager.cpp (spawn_i): Change to always return the
	  thread "handle" if users ask for it.  For some reason, we did
	  not return this value on some platforms, although it's always
	  been available.  Thanks to Robin Farine
	  <robin.farine@acn-group.ch> for reporting this.   [Bug 1546]

Mon Jul 07 18:00:38 2003  Irfan Pyarali  <irfan@oomworks.com>

	* The following changes are related to improving memory management
	  of Event Handlers when they interact with Reactors (and Timer
	  Queues).  When a handler is registered with the Reactor, the
	  Reactor increments the reference count on the handler.  The
	  Reactor also increments this reference count when making upcalls
	  on the handler.  The reference count is decremented when an
	  upcall completes or when the handler is removed from the
	  Reactor.

	  This mechanism is similar to what happens between POAs and
	  Servants and it allows for the safe deletion of handlers.  This
	  mechanism is particularly need for multi-threaded applications
	  that can have multiple threads executing upcalls on a handler
	  that needs to be shutdown in a safe manner.  The following
	  illustrates an example of how this mechanism works:

	  - When a handler is created, it reference count is one. 
	  
	  - After the handler is registered with the Reactor, it reference
	  count becomes two.

	  - At this point, the handler creator can let go of the handler
	  reference, bringing down the reference count to one.

	  - For each thread executing upcalls on the handler, the Reactor
	  increments the reference count by one. So if three threads were
	  simultaneously making upcalls on a handler, the reference count
	  would be four.

	  - Assuming an external event (and thread) decides to close the
	  handler.  It simply removes the handler from the Reactor.  This
	  decreases the reference count to three.  

	  - As each thread completes their upcall, the reference reduces.

	  - Once the final thread exits the upcall, the reference reaches
	  zero, and the handler is finally deleted.	

	  This mechanism ensures that the handler is not deleted until the
	  final upcall thread exits the handler.  

	  Reference counting on handlers is optional and is disabled by
	  default.  To enable reference counting on a handler, reset its
	  reference counting policy to "ENABLED".  

	  To facilitate reference counting of handlers, an
	  ACE_Event_Handler_var class was added.  This class is akin to
	  the PortableServer::ServantBase_var class.

	  Similar reference counting related changes were made to the
	  Timer Queues so that handlers can be used in a thread safe
	  manner with the queues.

	  The Connector implementation was completely revised to utilize
	  the new memory management mechanisms and remove existing
	  concurrency bugs.

	  Several new examples/tests were added:  

	  - tests\Reference_Counted_Event_Handler_Test 
	  - tests\MT_Reference_Counted_Event_Handler_Test 
	  - tests\MT_Reference_Counted_Notify_Test
	  - tests\Timer_Queue_Reference_Counting_Test 
	  - tests\NonBlocking_Conn_Test 
	  - tests\Reactor_Registration_Test 
	  - tests\WFMO_Reactor_Test 
	  - tests\Timer_Cancellation_Test

	  Details follow below:

	Fri May 09 20:13:37 2003  Irfan Pyarali  <irfan@oomworks.com>

	* ace\Event_Handler: 

	  Added reference counting capabilities to the event handler.  The
	  reference counting will be used for event handler memory
	  management by Reactors that will call add_reference() and
	  remove_reference() during registrations, removals, and upcalls.
	  This mechanism is similar to the protocol between servants and
	  POAs.

	  Reference counting is configurable and can be controlled by the
	  Reference_Counting_Policy which is disabled by default.

	  Added a ACE_Event_Handler_var auto pointer like class for
	  Event Handlers.  This class calls
	  ACE_Event_Handler::remove_reference() in its destructor.

	  Added reactor_timer_interface() method that returns the
	  Reactor's timer related interface.

	* ace\Reactor_Timer_Interface.h: 

	  Added a new class ACE_Reactor_Timer_Interface that contains
	  timer related (pure virtual) methods of the Reactor.  This
	  allows us to make timer related calls on the Reactor from the
	  Timer Queue without having to include Reactor.h.

	* ace\Reactor: 

	  Vastly improved documentation, specially with respect to how the
	  reference counting works.

	  Made the Reactor class inherit from ACE_Reactor_Timer_Interface
	  so that timer related calls can be made on the Reactor from the
	  Timer Queue without having to include Reactor.h.

	* ace\Reactor: 
	* ace\Reactor_Impl: 
	* ace\Select_Reactor_T: 
	* ace\WFMO_Reactor: 

	  Added a new find_handler() method that returns the event handler
	  associated with a <handle>.

	* ace\Select_Reactor_Base.cpp: 

	  - bind(): Make sure that the user is not registering a different
	  handler for an existing handle in the
	  Reactor_Handler_Repository.  Also, if it is a new entry, call
	  add_reference() if reference counting is needed.

	  - unbind(): Call remove_reference() if the removal is complete
	  and reference counting is needed. Also, Bala's change:

	  Mon Apr  7 16:58:55 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	  is no longer necessary since handle_close() is now only called
	  once the Reactor state has been completely updated.

	  - mask_ops(): If the handle is not suspended, then set the ops
	  on the <wait_set_>, otherwise set the <suspend_set_>.

	  - handler_i(): Add to reference count of event handler before
	  returning to the user if reference counting is needed.

	  - ACE_Select_Reactor_Notify::dispatch_notify():
	  - ACE_Select_Reactor_Notify::purge_pending_notifications():
	  - ACE_Select_Reactor_Notify::notify():

	  Added reference counting for notifies.

	* ace\Select_Reactor_T: 

	  notify_handle(): Added reference counting to upcalls.

	* ace\TP_Reactor: 

	  - remove_handler(): All remove_handler() specializations can be
	  removed since there no longer is the requirement of calling
	  handle_close() from outside the Reactor lock.

	  - handle_timer_events(): Call preinvoke() and postinvoke() on
	  the timer queue so that timer upcalls can be reference counted.

	  - handle_socket_events(): Added reference counting to upcalls.

	  - mask_ops(): Specialization no longer necessary since the base
	  class now does the right thing.

	* ace\WFMO_Reactor: 

	  - handler(): Original handler() method was not locked.

 	  - bind_i(): Call add_reference() if reference counting is
	  needed.

	  - make_changes_in_current_infos():
	  - make_changes_in_suspension_infos(): 
	  - make_changes_in_to_be_added_infos():
	
	  The iteration loop was incorrect.  When an entry was replaced
	  from the one at the end, the newly shifted entry was skipped and
	  not evaluated.  make_changes_in_to_be_added_infos() did not need
	  this change since entries are not moved around in the
	  <to_be_added_info_> set.

	  Also, call remove_reference() if reference counting if needed.

          - complex_dispatch_handler(): Added reference counting to
	  upcalls.

	  - ACE_WFMO_Reactor_Notify::purge_pending_notifications():
	  - ACE_WFMO_Reactor_Notify::notify():
	  - ACE_WFMO_Reactor_Notify::handle_signal():

	  Added reference counting for notifies.

	* ace\Timer_Queue_T: 

          - Not sure why we were including Test_and_Set.h when we only
	  needed to include Event_Handler.h.

	  - dispatch_info() and dispatch_info_i(): Made these virtual so
	  that they can be specialized.	
	
	  - ACE_Timer_Node_Dispatch_Info_T: Added <recurring_timer_> so
	  that we can determine if we need to call remove_reference() if
	  it is not a recurring timer and if reference counting is
	  required.  This value is passed to the timeout() method of the
	  upcall functor.

	  - timeout(): When handle_timeout() returns -1, invoke
	  cancel_timer() on the reactor if the event handler has a valid
	  reactor, otherwise invoke cancel() on the timer queue.  It is
	  necessary to get the same locking as was used when registering
	  the timer, which was potentially done holding the reactor lock
	  while the timer queue could have been configured with a null
	  lock.

	  - schedule():  No longer a pure virtual method.  It now grabs
	  the lock, call schedule_i(), and finally calls registration() on
	  the upcall functor.

	  - registration(): This method is called when a timer is
	  registered.

	  - preinvoke(): Invokes add_reference() on the event handler if
	  reference counting is required before making the upcall.

	  - upcall(): Changed the signature to pass
	  ACE_Timer_Node_Dispatch_Info_T instead of the individual
	  parameters.

	  - postinvoke(): Invokes remove_reference() on the event handler
	  if reference counting is required after making the upcall.

 	  - cancel_type() and cancel_timer(): Split cancellation() into
	  two methods.  cancel_timer() is called when a timer is
	  cancelled.  cancel_type() is called when a handler is
	  cancelled. Also added <dont_call> parameter to these method.
	  cancel_timer() will be used for reference counting and
	  cancel_type() will be used for calling handle_close().

	  - expire(): Call preinvoke() before calling upcall() and
	  postinvoke() after calling upcall().

	  - deletion(): Now calls cancel_type() and cancel_timer() for
	  each timer remaining in the queue.
	
	* ace\Timer_List_T: 
	* ace\Timer_Wheel_T: 
	* ace\Timer_Heap_T: 
	* ace\Timer_Hash_T: 

	  - schedule_i(): This method replaces the old schedule() method.
	  Locking is not necessary anymore.

	  - cancel(): This method will call cancel_timer() once for each
	  timer cancelled and cancel_type() once for each handler
	  cancelled.

	  - cancel_i(): The <skip_close> check will be performed in the
	  upcall functor.

	* ace\Timer_Heap_T: 

	  - ~ACE_Timer_Heap_T(): Don't use <cur_size_> for the for loop
	  since it reduces after free_node() is called.

	  - cancel(): Not sure why this is the only cancel() where the
	  upcall is made outside the lock.

	* ace\Timer_Wheel_T: 

	  - expire(): Made this method similar to Timer_Queue_T::expire()
	  by (a) invoking preinvoke() before calling upcall() and invoking
	  postinvoke() after calling upcall() and (b) making sure that we
	  skip past time values that have already "expired" when
	  rescheduling.

	* ace\Timer_Hash_T: 

 	  - ACE_Timer_Hash_Upcall: Updated this upcall functor to match
	  the new APIs. 

	  - ACE_Timer_Hash_Upcall::registration(): 
	  - ACE_Timer_Hash_Upcall::cancel_type():
	  - ACE_Timer_Hash_Upcall::cancel_timer():

	  Nothing to be done in these methods since
	  registration/cancellation will be handled by the upcall functor
	  of the timer hash.

	  - ACE_Timer_Hash_Upcall::preinvoke():
	  - ACE_Timer_Hash_Upcall::postinvoke():
	  - ACE_Timer_Hash_Upcall::preinvoke():

	  Assert that these methods never get invoked since we don't
	  invoke expire() on the buckets.

	  - ACE_Timer_Hash_Upcall::deletion(): Call up to the upcall
	  functor of the timer hash since the timer hash does not invoke
	  deletion() on its upcall functor directly.  This is because
	  entries are actually registered with the buckets, and this
	  method will be invoked when the buckets are cleaned up.

	  - Hash_Token: Added TYPE information to the token.  This
	  required templatizing Hash_Token since TYPE is a template
	  parameter.	

	  - reschedule(): Cancel the old timer before registering the new
	  one.  Otherwise, the old timer will always remain in the
	  buckets.  Also, make sure that the new bucket position is noted.

	  - dispatch_info_i(): This method needs to be specialized to give
	  the original act and not the modified act.

	  - free_node(): Needs to cancel the timer in addition to freeing
	  the node.

	  - expire(): Only call cancel() for timers that don't need to be
	  rescheduled.  reschedule() takes care of removing the old timer
	  for timers that need to be rescheduled.  Also, made this method
	  similar to Timer_Queue_T::expire() by invoking preinvoke()
	  before calling upcall() and invoking postinvoke() after calling
	  upcall().

	* ace\Proactor: 

	  Updated ACE_Proactor_Handle_Timeout_Upcall upcall functor to
	  match the new APIs.

	* ace\Connector: 

	  Completely reworked the Connector to utilize the reference
	  counting provided by the Reactor.  This new design fixes bugs
	  1405 and 1408.

	  - There used to be a hash map that mapped handles to service
	  handlers.  There is no need for this map since the Reactor
	  already keeps this mapping.  We now keep a simple handle set to
	  remember the non-blocking connects in progress.  This will help
	  when the Connector is closing down and we need to cancel the
	  non-blocking connections in progress.

	  - The Connector no longer needs to inherit from
	  ACE_Service_Object since it does not register with the Reactor.
	  We now use ACE_NonBlocking_Connect_Handler for handling
	  non-blocking connects. The resume(), suspend(), and init()
	  no-ops, and fini() and info() were removed.

	  - The <mutex_> is no longer needed since we use the Reactor lock
	  to do all our synchronization.  This will solve bug 1408.

	  - We no longer need the <closing_> flag.

	  - Need to add a <reactor_> field since the Connector is no
	  longer an event handler.

	  - Reference counting of ASTs is no longer needed since event
	  handlers are reference counted.
	 
	  Thanks to Andrew Voumard <andrewv@melbpc.org.au> for helping
	  with this.

	* tests\Reference_Counted_Event_Handler_Test: 

	  This test is used to check reference counting of the Event
	  Handler when it interacts with the Reactor.

	* tests\MT_Reference_Counted_Event_Handler_Test: 

          This test tries to represents what happens in the TAO ORB wrt to
	  event handlers, reactors, timer queues, threads, and connection
	  caches, minus the other complexities.  The following three
	  Reactors are tested: Select, TP, and WFMO.

          The test checks proper use and shutting down of client-side
	  event handlers when it is used by invocation threads and/or
	  event loop threads.  Server-side event handlers are either
	  threaded or reactive. A purger thread is introduced to check the
	  connection recycling and cache purging.  Nested upcalls are also
	  tested.

	* tests\MT_Reference_Counted_Notify_Test:

	  This test is used to check reference counting of the event
	  handlers when it interacts with the reactor notification
	  mechanism.

	* tests\Timer_Queue_Reference_Counting_Test: 

	  New test is used to check reference counting of the Event
	  Handler when it interacts with Timer Queues.

	* tests\NonBlocking_Conn_Test: 

	  This test checks for the proper working of the following:
          - blocking connections
          - blocking connections with timeouts
          - non-blocking connections
          - non-blocking connections without waiting for completions
          - non-blocking connections with timeouts

	* tests\Reactor_Registration_Test: 
	
          This is a test of registering handlers with the Reactor.
	
	* tests\WFMO_Reactor_Test: 
	  
	  New test of the WFMO_Reactor.  It makes sure that removals and
	  suspensions work correctly.

	* tests\Timer_Cancellation_Test:

	  A test to ensure the timer cancellation works correctly.

	* tests\Makefile: 
	* tests\Makefile.am: 
	* tests\Makefile.bor: 
	* tests\run_test.lst:
	* tests\tests.icp:	
	* tests\tests.mpc:	
	* tests\tests.dsw:	
	
	  Added new tests:

	  - MT_Reference_Counted_Event_Handler_Test
	  - MT_Reference_Counted_Notify_Test
	  - NonBlocking_Conn_Test
	  - Reactor_Registration_Test	
	  - Reference_Counted_Event_Handler_Test
	  - Timer_Cancellation_Test
	  - Timer_Queue_Reference_Counting_Test
	  - WFMO_Reactor_Test

	* tests\Conn_Test.cpp: 

	  Updated template instantiations.

	* tests\icc.bat:
	* tests\run_tests.bat:
	* tests\run_tests.psosim:	

	  Removed this file since it has become obsolete.

	Wed May 14 17:56:13 2003  Irfan Pyarali  <irfan@oomworks.com>

	* ace/OS.i: 

	  - event_timedwait(): For relative times, the <timeout> parameter
	  was being modified.  Instead use a stack variable such that the
	  <timeout> parameter is not modified.

	* ace/Timer_Hash_T: 

	  - expire(): Remove nodes from the buckets instead of simply
	  getting them and canceling them later.  Also, if timers were
	  expired, find the new earliest time.

	  - reschedule(): No need to cancel the timer node since it is now
	  removed from the bucket in expire().

	  - free_node(): No need for this function since nodes are removed
	  from the bucket in expire().

	  - cancel(): No need to pass <act> to bucket's cancel() since the
	  act comes from the Hash Token.  Also, only perform upcall and
	  related cleanup on successful bucket cancel.

	  - Added asserts in the code since there is not enough error
	  checking (and recovery) going on.

        * ace/Reactor:
        * ace/Reactor_Impl:
        * ace/Select_Reactor_T:
        * ace/WFMO_Reactor:

	  Renamed handler() to find_handler() since ACE_HANDLE is an "int"
	  on UNIX platforms and that causes ambiguity between
	  handler(ACE_HANDLE) and handler(int).

	* ace/Select_Reactor_Base.cpp (unbind): 

	  unbind() and bind(): Minor fixes for UNIX specific code.

	* ace/SOCK_SEQPACK_Association.cpp: 

	  Added template instantiation for ACE_Auto_Array_Ptr<sockaddr_in>.

	* ace/Connector.cpp: 

	  cancel() and close(): Changed calls from Reactor::handler() to
	  Reactor::find_handler().

	* tests/MT_Reference_Counted_Notify_Test.cpp: 
	* tests/NonBlocking_Conn_Test.cpp:
	* tests/MT_Reference_Counted_Event_Handler_Test.cpp: 
	* tests/Reference_Counted_Event_Handler_Test.cpp: 
	* tests/Timer_Queue_Reference_Counting_Test.cpp:
	
	  Added template instantiations.

	* tests/MT_Reference_Counted_Event_Handler_Test.cpp: 

	  - main(): Added code to ignore SIGPIPE.

	  - test(): Converted this into template class so that multiple
	  instances of reactor implementation can be created.

	  - Added additional asserts.

	Thu May 15 18:12:10 2003  Irfan Pyarali  <irfan@oomworks.com>

	* ace/WFMO_Reactor (find_handler): 

	  Fixed minor oversights.

	* ace/Timer_Hash_T.cpp: 
	* ace/Connector.cpp: 

	  Fixed unused arg warnings.

	* tests/MT_Reference_Counted_Event_Handler_Test.cpp: 

	  - Added a Pipe class. It is a replica of the ACE_Pipe class.
	  Only difference is that this class always uses two sockets to
	  create the pipe, even on platforms that support pipes.

	  - Removed some test cases that don't work on Linux.

	* tests/MT_Reference_Counted_Event_Handler_Test.cpp: 
	* tests/MT_Reference_Counted_Notify_Test.cpp:
	* tests/Reference_Counted_Event_Handler_Test.cpp:
	* tests/Reactor_Registration_Test.cpp:
	* tests/Timer_Cancellation_Test.cpp:
	* tests/Timer_Queue_Reference_Counting_Test.cpp:
	
	  - Fixed member ordering in constructors.
	  - Fixed unused arg warnings.

	Thu May 15 19:46:49 2003  Irfan Pyarali  <irfan@oomworks.com>

	* ACEXML/common/Mem_Map_Stream.cpp:
	* apps/Gateway/Gateway/Connection_Handler_Connector.cpp:
	* apps/Gateway/Peer/Peer.cpp:
	* apps/JAWS/clients/Blobby/Blob.cpp:
	* apps/JAWS/clients/Caching/http_handler.cpp:
	* examples/ASX/Event_Server/Transceiver/transceiver.cpp:
	* examples/Connection/blocking/SPIPE-connector.cpp:
	* examples/Connection/misc/test_upipe.cpp:
	* examples/Connection/non_blocking/test_lsock_connector.cpp:
	* examples/Connection/non_blocking/test_sock_connector.cpp:
	* examples/Connection/non_blocking/test_spipe_connector.cpp:
	* examples/Connection/non_blocking/test_tli_connector.cpp:
	* examples/Web_Crawler/URL_Visitor.cpp:
	* netsvcs/lib/TS_Clerk_Handler.cpp:
	* tests/Cached_Accept_Conn_Test.cpp:
	* tests/Cached_Conn_Test.cpp:
	* tests/Dev_Poll_Reactor_Test.cpp:
	* tests/Priority_Reactor_Test.cpp:
	* tests/Reactor_Performance_Test.cpp:
	* tests/TP_Reactor_Test.cpp:
	* tests/CLASSIX/CLASSIX_Con_Acc_Test.cpp:

	  Fixed Connector related template instantiations.

	Fri May 16 16:34:35 2003  Irfan Pyarali  <irfan@oomworks.com>

	* tests/MT_Reference_Counted_Event_Handler_Test.cpp:
	* tests/Timer_Queue_Reference_Counting_Test.cpp (cancellation_test): 

	  Fixed static array initialization warnings.	

	Tue May 20 18:33:07 2003  Irfan Pyarali  <irfan@oomworks.com>

	* ace/Connector: 

	  Reverted the Connector to inherit from ACE_Service_Object again.
	  Even though the Connector no longer registers with the Reactor,
	  it still needs to inherit from ACE_Service_Object so that it can
	  be used through the Service Configurator primarily for dynamic
	  linking.  The resume(), suspend(), and init() no-ops, and fini()
	  and info() were restated.

	Mon Jun 30 16:31:33 2003  Irfan Pyarali  <irfan@oomworks.com>

	* ace\SSL\ACE_SSL_LIB.dsp: 

	  Fixed the project names - they should be:

	  # Name "ACE_SSL_LIB - Win32 Static Release"
	  # Name "ACE_SSL_LIB - Win32 Static Debug"

  	  instead of:
	
	  # Name "ACE_SSL_LIB - Win32 Release"
	  # Name "ACE_SSL_LIB - Win32 Debug"

	Wed Jul 02 15:31:33 2003  Irfan Pyarali  <irfan@oomworks.com>

	* examples\Connection\non_blocking\CPP-connector.cpp:

	  handle_close() on the Connector was being specialized to know
	  when the connection was not successful.  This is not the correct
	  approach in the first place since one should look for close() on
	  the service handler.  In addition, handle_close() is no longer
	  used by ACE_Connector.  Therefore, I changed this to use close()
	  on the service handler.

	* apps\JAWS\clients\Caching\http_handler.h: 

	  Included "ace/Svc_Handler.h" explicitly.

	* examples\Logger\Acceptor-server\server_loggerd.cpp: 

	  Included "ace/Test_and_Set.h" explicitly since
	  ace\Timer_Queue_T.h is no longer including it.

	Thu Jun 26 17:36:13 2003  Irfan Pyarali  <irfan@oomworks.com>

	* bin\msvc_auto_compile.pl: 

	  Added -tests_TAO and -examples_TAO options to make all projects
	  in TAO tests and TAO examples.

	Thu May 22 14:13:37 2003  Irfan Pyarali  <irfan@oomworks.com>

	* Merged Reactor_RefCount branch with the main truck since all ACE
	  level changes are now complete.  New branch is
	  Reactor_RefCount_1.

	Tue May 27 19:59:25 2003  Irfan Pyarali  <irfan@oomworks.com>

	* Merged Reactor_RefCount_1 branch with the main truck to avail
	  new changes by Bala to the TAO connection handlers.  New branch
	  is Reactor_RefCount_2.

Mon Jul  7 11:14:02 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_structure/any_op_cs.cpp (visit_enum):

	  Fixed a cut and paste error that was causing the code generation
	  for the any operators in the stub source file to be skipped. Thanks
	  to <dyafe@itgil.com> for reporting the bug.

	* TAO_IDL/be/be_visitor_enum/any_op_cs.cpp:

	  Fixed cut and paste error in the explicit template instantiation.

Mon Jul  7 12:31:40 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/MakeWorkspaceCreator.pm:
        * bin/MakeProjectCreator/templates/make.mpd:

          Added a 'depend' target and fixed the default library installation
          target.

Sun Jul  6 09:55:16 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * ace/Task.cpp: Fixed compile errors with MSVC 7.1 when
          ACE_HAS_ANSI_CAST  and RTTI is turned on. Thanks to Marek Brudka
          <M.Brudka@elka.pw.edu.pl> for providing the patch.

        * THANKS: Added Marek to the hall of fame.

Sat Jul  5 06:57:33 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * THANKS: Updated e-mail address of Serge Kolgan

Fri Jul 4 17:05:39 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * include/makeinclude/ace_flags.bor:

          Added the TAO_RTSCHEDULER_CFLAGS flag to build RTSCheduler
          library using Borland compiler.

Fri Jul  4 07:29:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * include/makeinclude/platform_gnuwin32_common.GNU:
          Added support for the -pipe command line option of the g++ compiler
          on Win32. This uses pipes instead of intermediate files and speeds up
          the compilation. This is enabled by default but can be disabled by
          adding pipes=0 to your platform_macros.GNU file. Thanks to
          Serge Kolgan <skolgan@trigraph.com> for this suggestion.

Thu Jul  3 22:05:58 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/config-linux-common.h:
        * ace/os_include/os_pthread.h:
          Moved the ACE_HAS_PTHREAD_SETSTACK definition to os_pthread.h
          along with all the other pthread related definitions.  This
          should help eliminate warnings about using a the deprecated
          function pthread_attr_setstackaddr.

Thu Jul 03 17:00:47 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/MakeProjectCreator/config/ciao_client.mpb: Added "security"
          as one of the depending library for all CIAO clients.

Thu Jul  3 13:15:17 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/README:
        * bin/MakeProjectCreator/modules/ProjectCreator.pm:
        * bin/MakeProjectCreator/templates/bor.mpd:
        * bin/MakeProjectCreator/templates/em3vcp.mpd:
        * bin/MakeProjectCreator/templates/gnu.mpd:
        * bin/MakeProjectCreator/templates/make.mpd:
        * bin/MakeProjectCreator/templates/nmake.mpd:
        * bin/MakeProjectCreator/templates/vc6dsp.mpd:
        * bin/MakeProjectCreator/templates/vc7.mpd:

          Added 'libpath' to the custom define keywords to allow a user to
          specify an additional library search path for the custom command.

Thu Jul  3 11:49:23 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/templates/bor.mpd:
        * bin/MakeProjectCreator/templates/em3vcp.mpd:
        * bin/MakeProjectCreator/templates/nmake.mpd:
        * bin/MakeProjectCreator/templates/vc6dsp.mpd:
        * bin/MakeProjectCreator/templates/vc7.mpd:

          Removed tao_idl specific defaults from these template files.

Wed Jul  2 23:58:11 UTC 2003  Craig Rodrigues <crodrigu@bbn.com>

        * ace/config-freebsd.h:
          FreeBSD 5.1 implements <stdint.h> (ACE_LACKS_STDINT_H) and
          reentrant password functions (ACE_LACKS_PWD_REENTRANT_FUNCTIONS).
          rand_r has been implemented for quite some time now
          (ACE_LACKS_RAND_REENTRANT_FUNCTIONS).

Wed Jul  2 23:34:18 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tests/RMCast/RMCast_Fragment_Test.dsp:
        * tests/RMCast/RMCast_Membership_Test.dsp:
        * tests/RMCast/RMCast_Reassembly_Test.dsp:
        * tests/RMCast/RMCast_Reordering_Test.dsp:
        * tests/RMCast/RMCast_Retransmission_Test.dsp:
        * tests/RMCast/RMCast_UDP_Best_Effort_Test.dsp:
          Added Main.cpp to the projects.

Wed Jul  2 23:10:25 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tests/RMCast/Makefile:
        * tests/RMCast/Makefile.bor:
        * tests/RMCast/Main.cpp:
        * tests/SSL/Makefile:
        * tests/SSL/Makefile.bor:
        * tests/SSL/Main.cpp:
          Added Main.cpp and wired it up in the Makefiles.  This is
          needed to work with Justin's changes below in preparation to
          using MPC for all builds.

Wed Jul  2 22:48:18 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/config-all.h/
          Rolled back Wed Jul  2 22:17:15 UTC 2003  Don Hinton
          <dhinton@dresystems.com> temporarily, since it is defined
          inconsistently and compilation will fail if ACE_HAS_ANSI_CASTS is
          just defined and not defined as a number.

Wed Jul  2 22:17:15 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/config-all.h/
          Added test for ACE_HAS_ANSI_CASTS != 0, not just its existence
          since this is the way it is used.

Wed Jul 02 14:57:00 2003  Justin Michel  <michel_j@ociweb.com>

        * examples/Registry/Registry.mpc
        * tests/RMCast/acetest.mpb
        * tests/SSL/acetest.mpb
        * bin/create_ace_build.pl
        * bin/MakeProjectCreator/config/rtnotify.mpb
        * bin/MakeProjectCreator/config/valuetype.mpb
        * examples/IPC_SAP/SOCK_SAP/sock_sap.mpc
        * examples/IPC_SAP/SSL_SAP/SSL_SAP.mpc
        * examples/Log_Msg/Log_Msg_MFC/Log_Msg_MFC.mpc
        * examples/Mem_Map/IO-tests/IO_Test.cpp
        * examples/Mem_Map/IO-tests/test_io.cpp
        * examples/OS/Process/OS_Process.mpc
        * examples/QOS/Change_Receiver_FlowSpec/QOS_Change_Receiver_FlowSpec.mpc
        * examples/QOS/Change_Sender_TSpec/QOS_Change_Sender_FlowSpec.mpc
        * examples/QOS/Diffserv/QOS_Diffserv.mpc
        * examples/QOS/Simple/QOS_Simple.mpc
        * examples/RMCast/Send_File/RMCast_Send_File.mpc
        * examples/Reactor/Misc/Reactor_Misc.mpc
        * examples/Reactor/Multicast/Reactor_Multicast.mpc
        * examples/Service_Configurator/IPC-tests/client/Service_Configurator_IPC_Client.mpc
        * examples/Service_Configurator/IPC-tests/server/Service_Configurator_IPC_Server.mpc
        * examples/Service_Configurator/Misc/Service_Configurator_Misc.mpc
        * examples/Shared_Malloc/Shared_Malloc.mpc
        * examples/Shared_Memory/Shared_Memory.mpc
        * examples/Smart_Pointers/Smart_Pointers.mpc
        * examples/System_V_IPC/SV_Message_Queues/SV_Message_Queues.mpc
        * examples/System_V_IPC/SV_Semaphores/SV_Semaphores.mpc
        * examples/Threads/Threads.mpc
        * examples/Timer_Queue/Timer_Queue.mpc
        * tests/acetest.mpb
        * tests/tests.mpc
        * tests/RMCast/RMCast_Fragment_Test.cpp
        * tests/RMCast/RMCast_Membership_Test.cpp
        * tests/RMCast/RMCast_Reassembly_Test.cpp
        * tests/RMCast/RMCast_Reordering_Test.cpp
        * tests/RMCast/RMCast_Retransmission_Test.cpp
        * tests/RMCast/RMCast_UDP_Best_Effort_Test.cpp
        * tests/RMCast/tests.mpc
        * tests/SSL/Thread_Pool_Reactor_SSL_Test.cpp
        * tests/SSL/tests.mpc

          Added some missing project files.
          Updated all ACE tests to use the common test library.
          Updated ACE test mpc files to use a common base project.
          Fixed mpc files for broken examples.
          Added base projects rtnotify and valuetype.

Wed Jul  2 13:16:14 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/config-doxygen.h:
          Added define of __ACE_INLINE__ so that inlining will be turned
          on in order to help identify unwanted inter-header dependencies.

Tue Jul  1 20:47:35 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/os_include/os_limits.h:
          Added include of os_stdio.h.  This picks up FILENAME_MAX on
          Windows and fixes an alignment problem with ACE_PI_Control_Block
          due to differing definitions for MAXNAMELEN.  Thanks to
          Serge Kolgan <skolgan@trigraph.com> for help figuring this out.

Tue Jul  1 19:39:16 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/config-vxworks5.x.h:
          Added ACE_LACKS_SYS_UN_H and ACE_LACKS_PTHREAD_H.

        * ace/os_include/sys/os_mman.h:
          Added !defined (ACE_WIN32) to the initial #if for the PROT_*
          define section so Windows can make it to the #ifelse section.

Sun Jun 29 01:31:52 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/UNIX_Addr.h:
          Added include of ace/os_include/sys/os_un.h to fix compile
          problems on VxWorks.

Fri Jun 27 12:52:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/Process.h:
          Added forward declaration of ACE_Time_Value to fix compile
          erros in Jaws server app.

Thu Jun 26 21:34:43 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * ace/QtReactor.cpp: Removed precompiled header include residue
          from OCI version.

Thu Jun 26 17:35:00 2003  Justin Michel  <michel_j@ociweb.com>

        * Kokyu/Kokyu.mpc:
        * bin/create_ace_build.pl:
        * bin/MakeProjectCreator/config/kokyu.mpb:
        * bin/MakeProjectCreator/config/rtkokyuevent.mpb:

          Fixes for mpc generated builds.
          create_ace_build won't link .opt files.

Thu Jun 26 16:31:51 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * ace/QtReactor.h:
        * ace/QtReactor.cpp:

          The QtReactor works by semi-unifying the Qt Event loop with the
          Reactor event loop.  Most of the time, the Qt Event loop is the
          dominant loop, but occasionally, when wait_for_multiple_events
          gets called, the reactor loop becomes the dominant loop.

          Previous QtReactor implementations only overloaded
          register_handler, caused them to never notice when an
          application changed the mask on a previously-registered handler,
          e.g., via ACE_Reactor::schedule_wakeup.  Thus, the Qt event loop
          never knew about the new interest or lack thereof, and didn't
          call it back.

          This newer version overloads ACE_Reactor::bit_ops, and tweaks
          the registrations with the Qt event loop according to bit_ops'
          arguments' mask operations.  This *should* allow us to catch
          every twiddling of masks, although there is no comprehensive
          regression test for this for any kind of reactor.

          From inspection, it appears as if the XtReactor might need
          similar changes.

Thu Jun 26 02:22:42 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * etc/ace.doxygen:
          Added ace/pre.h and ace/post.h to the exclude list.  This will
          clean up the file dependency graphs a bit and make the more
          complex ones a bit easier to read.

Thu Jun 26 01:47:03 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/config-freebsd.h:
          Added #define ACE_LACKS_STDINT_H.

Wed Jun 25 17:00:00 2003  Justin Michel  <michel_j@ociweb.com>

        * Kokyu/Kokyu.mpc:
        * bin/MakeProjectCreator/config/ciao_client.mpb:
        * bin/MakeProjectCreator/config/ciao_component.mpb:
        * bin/MakeProjectCreator/config/idl_compiler.mpt:
        * bin/MakeProjectCreator/config/idl_compiler_win32.mpt:
        * bin/MakeProjectCreator/config/iorinterceptor.mpb:
        * bin/MakeProjectCreator/config/messaging_only.mpb:
        * bin/MakeProjectCreator/config/objreftemplate.mpb:
        * bin/MakeProjectCreator/config/portableserver.mpb:
        * bin/MakeProjectCreator/config/tao_output.mpb:
        * bin/MakeProjectCreator/config/valuetype.mpb:
        * bin/MakeProjectCreator/templates/em3vcp.mpd:
        * bin/MakeProjectCreator/templates/nmake.mpd:
        * bin/MakeProjectCreator/templates/vc6dsp.mpd:
        * bin/MakeProjectCreator/templates/vc7.mpd:

          Fixes for various mpc generation problems.

Wed Jun 25 13:14:00 2003  Justin Michel  <michel_j@ociweb.com>

        * bin/MakeProjectCreator/templates/em3vcp.mpd:
        * bin/MakeProjectCreator/templates/nmake.mpd:
        * bin/MakeProjectCreator/templates/vc6dsp.mpd:
        * bin/MakeProjectCreator/templates/vc7.mpd:

          Forgot to rename the dllflag keyword.

Wed Jun 25 12:45:44 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * bin/topinfo_iorsize_stats.sh (s_id):
        * bin/topinfo_simple_stats.sh: We used 'top' to determine the
          runtime memory used by the process. A better way to get this
          done is to use /proc/processid/status. The scripts have been
          changed to use the proc info instead of 'top'.

Wed Jun 25 11:00:00 2003  Justin Michel  <michel_j@ociweb.com>

        * nightly.mwc:
        * ACEXML/ACEXML.mwc:
        * ACEXML/common/common.mpc:
        * ACEXML/parser/parser/parser.mpc:
        * ASNMP/asnmp.mwc:
        * Kokyu/Kokyu.mpc:
        * ace/ace.mpc:
        * ace/ace.mwc:
        * ace/QoS/qos.mpc:
        * ace/RMCast/rmcast.mpc:
        * ace/SSL/ssl.mpc:
        * apps/apps.mwc:
        * apps/gperf/src/gperf.mpc:
        * apps/mkcsregdb/mkcsregdb.mpc:
        * bin/create_ace_build.pl:
        * bin/MakeProjectCreator/README
        * bin/MakeProjectCreator/config/acedefaults.mpb:
        * bin/MakeProjectCreator/config/aceexe.mpb:
        * bin/MakeProjectCreator/config/acelib.mpb:
        * bin/MakeProjectCreator/config/acexml.mpb:
        * bin/MakeProjectCreator/config/avstreams.mpb:
        * bin/MakeProjectCreator/config/avstreamsexe.mpb:
        * bin/MakeProjectCreator/config/bidir_giop.mpb:
        * bin/MakeProjectCreator/config/ciao_client.mpb:
        * bin/MakeProjectCreator/config/ciao_component.mpb:
        * bin/MakeProjectCreator/config/ciao_servant.mpb:
        * bin/MakeProjectCreator/config/ciao_server.mpb:
        * bin/MakeProjectCreator/config/client.mpb:
        * bin/MakeProjectCreator/config/concurrency.mpb:
        * bin/MakeProjectCreator/config/dslogadmin.mpb:
        * bin/MakeProjectCreator/config/dynamicany.mpb:
        * bin/MakeProjectCreator/config/dynamicinterface.mpb:
        * bin/MakeProjectCreator/config/etcl.mpb:
        * bin/MakeProjectCreator/config/event.mpb:
        * bin/MakeProjectCreator/config/ftorb.mpb:
        * bin/MakeProjectCreator/config/global.features
        * bin/MakeProjectCreator/config/global.mpb:
        * bin/MakeProjectCreator/config/ifr_client.mpb:
        * bin/MakeProjectCreator/config/ifrservice.mpb:
        * bin/MakeProjectCreator/config/iorinterceptor.mpb:
        * bin/MakeProjectCreator/config/iormanip.mpb:
        * bin/MakeProjectCreator/config/iortable.mpb:
        * bin/MakeProjectCreator/config/lifecycle.mpb:
        * bin/MakeProjectCreator/config/loadbalancing.mpb:
        * bin/MakeProjectCreator/config/messaging.mpb:
        * bin/MakeProjectCreator/config/messaging_only.mpb:
        * bin/MakeProjectCreator/config/naming.mpb:
        * bin/MakeProjectCreator/config/namingexe.mpb:
        * bin/MakeProjectCreator/config/notification.mpb:
        * bin/MakeProjectCreator/config/notify.mpb:
        * bin/MakeProjectCreator/config/notifytest.mpb:
        * bin/MakeProjectCreator/config/objreftemplate.mpb:
        * bin/MakeProjectCreator/config/orbsvcs_output.mpb:
        * bin/MakeProjectCreator/config/orbsvcsexe.mpb:
        * bin/MakeProjectCreator/config/orbsvcslib.mpb:
        * bin/MakeProjectCreator/config/portablegroup.mpb:
        * bin/MakeProjectCreator/config/portableserver.mpb:
        * bin/MakeProjectCreator/config/property.mpb:
        * bin/MakeProjectCreator/config/qos.mpb:
        * bin/MakeProjectCreator/config/qt_moc.mpb:
        * bin/MakeProjectCreator/config/rmcast.mpb:
        * bin/MakeProjectCreator/config/rt_client.mpb:
        * bin/MakeProjectCreator/config/rt_server.mpb:
        * bin/MakeProjectCreator/config/rtcorba.mpb:
        * bin/MakeProjectCreator/config/rtcorbacommon.mpb:
        * bin/MakeProjectCreator/config/rtcorbaevent.mpb:
        * bin/MakeProjectCreator/config/rtevent.mpb:
        * bin/MakeProjectCreator/config/rteventexe.mpb:
        * bin/MakeProjectCreator/config/rtoldevent.mpb:
        * bin/MakeProjectCreator/config/rtportableserver.mpb:
        * bin/MakeProjectCreator/config/rtsched.mpb:
        * bin/MakeProjectCreator/config/rtschedevent.mpb:
        * bin/MakeProjectCreator/config/security.mpb:
        * bin/MakeProjectCreator/config/server.mpb:
        * bin/MakeProjectCreator/config/smart_proxies.mpb:
        * bin/MakeProjectCreator/config/ssl.mpb:
        * bin/MakeProjectCreator/config/strategies.mpb:
        * bin/MakeProjectCreator/config/svc_utils.mpb:
        * bin/MakeProjectCreator/config/tao_output.mpb:
        * bin/MakeProjectCreator/config/taoclient.mpb:
        * bin/MakeProjectCreator/config/taoexe.mpb:
        * bin/MakeProjectCreator/config/taolib.mpb:
        * bin/MakeProjectCreator/config/taolib_with_idl.mpb:
        * bin/MakeProjectCreator/config/taoserver.mpb:
        * bin/MakeProjectCreator/config/taoversion.mpb:
        * bin/MakeProjectCreator/config/time.mpb:
        * bin/MakeProjectCreator/config/trading.mpb:
        * bin/MakeProjectCreator/config/typecodefactory.mpb:
        * bin/MakeProjectCreator/config/valuetype.mpb:
        * bin/MakeProjectCreator/modules/ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/TemplateParser.pm:
        * bin/MakeProjectCreator/modules/VA4ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/VC6ProjectCreator.pm:
        * bin/MakeProjectCreator/templates/bor.mpd:
        * bin/MakeProjectCreator/templates/bordll.mpt:
        * bin/MakeProjectCreator/templates/borexe.mpt:
        * bin/MakeProjectCreator/templates/em3vcp.mpd:
        * bin/MakeProjectCreator/templates/em3vcpdll.mpt:
        * bin/MakeProjectCreator/templates/em3vcpdllexe.mpt:
        * bin/MakeProjectCreator/templates/em3vcplib.mpt:
        * bin/MakeProjectCreator/templates/em3vcplibexe.mpt:
        * bin/MakeProjectCreator/templates/gnu.mpd:
        * bin/MakeProjectCreator/templates/gnudll.mpt:
        * bin/MakeProjectCreator/templates/gnuexe.mpt:
        * bin/MakeProjectCreator/templates/make.mpd:
        * bin/MakeProjectCreator/templates/makedll.mpt:
        * bin/MakeProjectCreator/templates/makeexe.mpt:
        * bin/MakeProjectCreator/templates/nmake.mpd:
        * bin/MakeProjectCreator/templates/nmakedll.mpt:
        * bin/MakeProjectCreator/templates/nmakeexe.mpt:
        * bin/MakeProjectCreator/templates/va4icc.mpd:
        * bin/MakeProjectCreator/templates/va4iccdll.mpt:
        * bin/MakeProjectCreator/templates/va4iccdllexe.mpt:
        * bin/MakeProjectCreator/templates/va4icclib.mpt:
        * bin/MakeProjectCreator/templates/va4icclibexe.mpt:
        * bin/MakeProjectCreator/templates/vc6dsp.mpd:
        * bin/MakeProjectCreator/templates/vc6dspdll.mpt:
        * bin/MakeProjectCreator/templates/vc6dspdllexe.mpt:
        * bin/MakeProjectCreator/templates/vc6dsplib.mpt:
        * bin/MakeProjectCreator/templates/vc6dsplibexe.mpt:
        * bin/MakeProjectCreator/templates/vc7.mpd:
        * bin/MakeProjectCreator/templates/vc7dll.mpt:
        * bin/MakeProjectCreator/templates/vc7exe.mpt:
        * bin/PerlACE/Process_Unix.pm:
        * bin/PerlACE/Process_Win32.pm:
        * examples/example_base.mpb:
        * examples/examples.mwc:
        * examples/ASX/CCM_App/ASX_CCM_App.mpc:
        * examples/ASX/Message_Queue/ASX_Message_Queue.mpc:
        * examples/C++NPv1/C++NPv1.mpc:
        * examples/C++NPv2/C++NPv2.mpc:
        * examples/ConfigViewer/ConfigViewer.mpc:
        * examples/Connection/blocking/Connection_Blocking.mpc:
        * examples/Connection/misc/Connection_Misc.mpc:
        * examples/Connection/non_blocking/Connection_Non_Blocking.mpc:
        * examples/DLL/DLL.mpc:
        * examples/Export/Export.mpc:
        * examples/IOStream/client/IOStream_Client.mpc:
        * examples/IOStream/server/IOStream_Server.mpc:
        * examples/IPC_SAP/ATM_SAP/atm_sap.mpc:
        * examples/IPC_SAP/DEV_SAP/reader/dev_sap_reader.mpc:
        * examples/IPC_SAP/DEV_SAP/writer/dev_sap_writer.mpc:
        * examples/IPC_SAP/FIFO_SAP/fifo_sap.mpc:
        * examples/IPC_SAP/FILE_SAP/file_sap_client.mpc:
        * examples/IPC_SAP/SOCK_SAP/sock_sap.mpc:
        * examples/IPC_SAP/SPIPE_SAP/SPIPE_SAP.mpc:
        * examples/IPC_SAP/SSL_SAP/SSL_SAP.mpc:
        * examples/IPC_SAP/TLI_SAP/TLI_SAP.mpc:
        * examples/IPC_SAP/UPIPE_SAP/UPIPE_SAP.mpc:
        * examples/Log_Msg/Log_Msg.mpc:
        * examples/Logger/Acceptor-server/Logger_Acceptor_Server.mpc:
        * examples/Logger/client/Logger_client.mpc:
        * examples/Logger/simple-server/Logger_Simple_Server.mpc:
        * examples/Mem_Map/IO-tests/Mem_Map_IO_Tests.mpc:
        * examples/Mem_Map/file-reverse/Mem_Map_File_Reverse.mpc:
        * examples/Misc/Misc.mpc:
        * examples/Naming/Naming.mpc:
        * examples/OS/Process/OS_Process.mpc:
        * examples/QOS/Change_Receiver_FlowSpec/QOS_Change_Receiver_FlowSpec.mpc:
        * examples/QOS/Change_Sender_TSpec/QOS_Change_Sender_FlowSpec.mpc:
        * examples/QOS/Diffserv/QOS_Diffserv.mpc:
        * examples/QOS/Simple/QOS_Simple.mpc:
        * examples/RMCast/Send_File/RMCast_Send_File.mpc:
        * examples/Reactor/Dgram/Reactor_Dgram.mpc:
        * examples/Reactor/FIFO/Reactor_FIFO.mpc:
        * examples/Reactor/Misc/Reactor_Misc.mpc:
        * examples/Reactor/Multicast/Reactor_Multicast.mpc:
        * examples/Reactor/Ntalker/Reactor_Ntalker.mpc:
        * examples/Reactor/Proactor/Proactor.mpc:
        * examples/Reactor/WFMO_Reactor/WFMO_Reactor.mpc:
        * examples/Service_Configurator/IPC-tests/client/Service_Configurator_IPC_Client.mpc:
        * examples/Service_Configurator/IPC-tests/server/Service_Configurator_IPC_Server.mpc:
        * examples/Service_Configurator/Misc/Service_Configurator_Misc.mpc:
        * examples/Shared_Malloc/Shared_Malloc.mpc:
        * examples/Shared_Memory/Shared_Memory.mpc:
        * examples/Smart_Pointers/Smart_Pointers.mpc:
        * examples/System_V_IPC/SV_Message_Queues/SV_Message_Queues.mpc:
        * examples/System_V_IPC/SV_Semaphores/SV_Semaphores.mpc:
        * examples/Threads/Threads.mpc:
        * examples/Timer_Queue/Timer_Queue.mpc:
        * examples/Web_Crawler/Web_Crawler.mpc:
        * performance-tests/perf.mwc:
        * tests/acetest.mpb:
        * tests/tests.mpc:
        * tests/tests.mwc:
        * tests/RMCast/tests.mpc:
        * tests/SSL/tests.mpc:

          Updated MPC with the latest features and changes from OCI's repo. Created
        new mpb base projects to make mpc files as simple as possible, and updated
        existing mpb base projects. Added and updated mpc files to use the latest
        features and make use of base projects.
          Added the create_ace_build.pl script that is more MPC friendly and works
        on Windows.
          Removed unused nightly.mwc.

Wed Jun 25 10:20:15 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * THANKS: Added missing doc_group folks at Vanderbilt.

Wed Jun 25 13:36:51 UTC 2003  Don Hinton  <dhinton@dresytems.com>

        * ace/Service_Object.h:
          Rolled back change from Sun Jun 22 03:27:10 UTC 2003  Don Hinton
          <dhinton@dresystems.com> which made ACE_DLL member variable a
          reference as part of subsetting, which caused
          Service_Config_Test to fail.

Wed Jun 25 03:47:36 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/config-linux.h:
        * ace/os_include/os_pthread.h:
          Removed include of pthread.h from config-linux.h and moved the
          pthread_mutex_timedlock() declaration to os_pthread.h.

        * tests/Makefile.tests:
          Added special build rule when on hpux that changes the link
          order, i.e., main.o comes before x_Test.o.  Hopefully this
          will clear up linker errors on Hp with the gcc compiler that
          started appearing after the tests directory was reorganized.

Tue Jun 24 18:38:33 2003  Pradeep Gore  <pradeep@oomworks.com>

        * bin/tao_other_tests.lst:
          Added Notify Basic test for RT_Notification.
          Moved the Notify Lanes and Threadpool test with the other
          Notify tests.

Tue Jun 24 15:47:16 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/MakeProjectCreator/config/ciao_client.mpb: Added
          $(CIAO_ROOT)/ciao to idlflags.

          Added $(TAO_ROOT)/orbsvcs/orbsvcs to libpaths and linking
          Security to even a simple stub DLL because of the way
          components.idl is being set up.  (Hint: we really don't need
          them.)

        * bin/MakeProjectCreator/config/ciao_component.mpb: Reorganized
          the template since I moved some of the libraries to ciao_client
          to fix the components.idl definition problem.

        * bin/MakeProjectCreator/config/ciao_servant.mpb: Added this new
          template to isolate customize CIDL rules for servant DLLs.  It
          turned out they also requires the stuff defined in the
          Deployment module (thus, the CIAO_Server library.)

        * bin/MakeProjectCreator/templates/gnu.mpd: Added code to define
          CIAO_ROOT in Makefiles if it's not defined already.

          Thanks to Chad Elliott for helping me setting up the custom
          rules for CIDL compiler and answering my tons of questions.

Tue June 24 16:26:06 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

         * ace/QoS/QoS_Session.h:
         * ace/QoS/QoS_Session_Impl.h:
         * ace/QoS/QoS_Session_Impl.cpp:
         * ace/QoS/QoS_Session_Impl.i: Added methods to set the source host
           and port that is used to populate the TSpec for the
           sending_qos.

Tue Jun 24 13:10:25 2003  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * ace/Cached_Connect_Strategy_T.cpp (cached_connect): Added
          a check for "|| errno == EADDRINUSE" to fix problems on Windows.
          Thanks to Valery Salamakha <ccapstan@bigpond.net.au> for
          reporting this.

Tue Jun 24 12:07:06 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/ProjectCreator.pm:

          Convert custom defined values to relative paths if possible.  If
          it isn't possible, continue to use environment variables.

        * bin/MakeProjectCreator/modules/TemplateParser.pm:

          Push the relative() method into the ProjectCreator, where it
          should have been in the first place.

Tue Jun 24 15:38:49 UTC 2003  Don Hinton  <dhinton@dresystems.h>

        * ace/Filecache.cpp:
          Added include of ACE.h.

        * ace/Global_Macros.h:
          Added include of ace/Trace.h when tracing is turned on.

        * ace/Typed_SV_Message.i:
          Added include of ace/Global_Macros.h to pick up ACE_TRACE.

Tue Jun 24 15:15:03 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/os_include/sys/os_socket.h:
          Removed ACE_HAS_CYGWIN32_SOCKET_H ifdef that included
          cygwin32/socket.h, which is no longer needed.  Thanks to "Johnny
          Willemsen" <jwillemsen@remedy.nl> for reporting this.

Tue Jun 24 14:40:43 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/String_Base.i:
          Added include of Min_Max.h.  Thanks to Olli Savia <ops@iki.fi>
          for reporting this and supplying the fix.

        * ace/config-lynxos.h:
        * ace/os_include/net/os_if.h:
          Added new macro ACE_NEEDS_IPC_1C_H used to include ipc_1c.h
          before net/if.h for LynxOS 3.1.0 and later.  Thanks to Olli
          Savia <ops@iki.fi> for reporting this and supplying the fix.

        * ace/os_include/os_signal.h:
        * ace/os_include/os_ucontext.h:
          Moved include of os_ucontext.h to bottom of os_signal.h and
          included os_signal.h in os_ucontext.h.  Thanks to John Michael
          Zorko <j.zorko@att.net> for reporting this.

Tue Jun 24 03:50:21 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/Based_Pointer_Repository.h:
          Added include of os_stddef.h to pick up size_t.

Tue Jun 24 02:00:02 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * etc/ace/doxygen:
          Added the subdirectories under os_include so they'll get
          included in the documentation.

Tue Jun 24 01:25:38 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/OS.h:
          Removed a set of defines, e.g.,  LPSECURITY_ATTRIBUTES, and
          ACE_OVERLAPPED struct in the ACE_PSOS that were missed before.

        * ace/OS.h:
        * ace/os_include/os_stdint.h:
        * ace/os_include/sys/os_types.h:
        * ace/Process.h:
          Moved typedefs for pid_t and ACE_exitcode and definition for
          ACE_INVALID_PID to os_types.h and included it in Process.h.

        * ace/os_include/sys/os_uio.h:
        * ace/os_include/os_limits.h:
          Moved ACE_IOV_MAX and IOV_MAX defines from os_uio.h to
          os_limits.h and included os_limits.h in os_uio,h.

Mon Jun 23 12:46:05 2003  Rich Seibel <seibel_r@ociweb.com>

        * bin/tao_other_tests.lst:
          Broke out the Naming Service flat-file persistence tests and
          added a new Redundant Naming Service test.  Both these tests
          are disabled on mininum CORBA.

Sun Jun 22 11:23:52 2003  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

        * THANKS: Added our 1700th contributor to ACE+TAO.  It's amazing
          how many people have contributed to these open-source projects
          since 1992!

Mon Jun 23 11:51:13 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/ProjectCreator.pm:

          Added another MPC environment variable to allow a user to get an
          informational message about which projects were skipped due to the
          current set of features.

Sun Jun 22 13:58:08 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/Lib_Find.h:
          Added include of os_stdio.h to pick up FILE, needed by BCB and
          possibly other builds.

        * ace/Malloc_Allocator.i:
          Removed redundant define of ACE_ASSERT>

Sun Jun 22 04:54:45 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/Handle_Set.[i,cpp]:
          Moved include of Log_Msg.h from the cpp to the i file.

        * ace/INET_Addr.i:
        * ace/Malloc_Allocator.i:
          Added include of OS.h.

Sun Jun 22 04:32:15 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/Global_Macros.h:
          Place LPSECURITY_ATTRIBUTES within !defined (ACE_WIN32) guards.

        * ace/Asynch_IO.h:
        * ace/Malloc_Base.h:
          Added include of ace/os_include/sys/os_types.h.

        * ace/OS.h:
        * ace/os_include/sys/os_mman.h:
          Moved MS_SYNC definition from OS.h to here.

        * ace/Basic_Types.h:
        * ace/os_include/sys/os_types.h:
          Moved ssize_t typedef here from Basic_Types.h.

        * ace/config-win32-common.h:
          Add ACE_LACKS_PTHREAD_H.

        * ace/Malloc_Allocator.i:
          Fixed typo.

Sun Jun 22 03:27:10 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/ACE.h:
        * ace/ARGV.h:
        * ace/Array_Base.cpp:
        * ace/Array_Base.h:
        * ace/Asynch_Connector.h:
        * ace/Asynch_IO.cpp:
        * ace/Asynch_IO.h:
        * ace/Asynch_Pseudo_Task.h:
        * ace/Based_Pointer_Repository.h:
        * ace/DEV.cpp:
        * ace/DEV_Addr.h:
        * ace/DEV_Connector.cpp:
        * ace/DEV_IO.h:
        * ace/DEV_IO.i:
        * ace/DLL.h:
        * ace/DLL_Manager.cpp:
        * ace/DLL_Manager.h:
        * ace/Date_Time.h:
        * ace/Date_Time.i:
        * ace/Event_Handler.h:
        * ace/Event_Handler_T.i:
        * ace/FIFO.h:
        * ace/FIFO_Recv.h:
        * ace/FIFO_Recv.i:
        * ace/FIFO_Recv_Msg.h:
        * ace/FIFO_Send.h:
        * ace/FIFO_Send.i:
        * ace/FIFO_Send_Msg.h:
        * ace/FILE.cpp:
        * ace/FILE_Addr.h:
        * ace/FILE_IO.h:
        * ace/FILE_IO.i:
        * ace/Flag_Manip.h:
        * ace/Flag_Manip.i:
        * ace/Free_List.h:
        * ace/Functor.h:
        * ace/Functor.i:
        * ace/Get_Opt.cpp:
        * ace/Handle_Ops.cpp:
        * ace/Handle_Ops.h:
        * ace/Handle_Set.h:
        * ace/Lib_Find.h:
        * ace/Malloc_Allocator.h:
        * ace/Malloc_Allocator.i:
        * ace/Malloc_Base.h:
        * ace/Message_Block_T.cpp:
        * ace/OS.h:
        * ace/Parse_Node.cpp:
        * ace/Process.h:
        * ace/Read_Buffer.h:
        * ace/Service_Object.h:
        * ace/Sock_Connect.h:
        * ace/Thread_Control.h:
        * ace/Thread_Exit.h:
        * ace/Typed_SV_Message.h:
        * ace/Unbounded_Queue.h:
          Removed include of OS.h and/or ACE.h from headers and adjusted
          includes in headers and other files by including appropriate
          headers in order to reduce dependencies as part of the
          subsetting effort.

        * ace/OS.h:
        * ace/Asynch_IO.cpp:
        * ace/Asynch_IO.h:
          Changed u_long to unsigned long to help remove dependencies.
          Moved the typedef for TRANSMIT_FILE_BUFFERS here from OS.h.

        * ace/Functor.h:
        * ace/Functor.i:
          Changed u_long to unsigned long to help remove dependencies.

        * ace/OS.h:
        * ace/Global_Macros.h:
          Moved definitions for many macros including
          LPSECURITY_ATTRIBUTES and GENERIC_READ, etc... here from OS.h.
          Moved the ACE_ALLOCATOR_* macros here from OS.h.

        * ace/Makefile.ace:
          Added Date_Time so it will get build if
          ACE_LACKS_INLINE_FUNCTIONS is defined.

        * ace/os_include/os_pthread.h:
          Added include of ace/OS_Export.h if ACE_HAS_POSIX_SEM to pick up
          ACE_Export.

        * ace/OS.h:
        * ace/os_include/os_signal.h:
          Moved ACE_SIGRTMIN, etc., defines here from OS.h.

        * ace/OS.h:
        * ace/os_include/os_stdio.h:
          Moved ACE_OVERLAPPED typedef here from OS.h.

        * examples/IPC_SAP/FIFO_SAP/FIFO-Msg-client.cpp:
        * websvcs/lib/URL_Addr.i:
          Added include of OS.h.

        * tests/CDR_File_Test.cpp:
          Added include of ACE.h.

Sat Jun 21 13:47:28 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/OS.h:
          Fixed typo.

Sat Jun 21 12:05:42 UTC 2003  Johnny WIllemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-mingw.h:
          Added some more lacks defines that are needed

Fri Jun 20 17:57:10 2003  Gan Deng  <dengg@dre.vanderbilt.edu>

        * bin/performance_stats.sh

          Added the latency tests for sequences of various data types.

Fri Jun 20 13:32:21 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * include/makeinclude/platform_linux.GNU (PLATFORM_SSL_CPPFLAGS):

          Some Linux OpenSSL installations compile in Kerberos support.
          Add the Kerberos include path to preprocessor include path.
          Fixes build problems on Red Hat 9 installations.  Note that this
          is an interim fix.

Fri Jun 20 10:07:39 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/config/qt_moc.mpb:

          Switch this to be a project instead of a feature.  It doesn't hurt
          to inherit from it if you don't use the MOC_Files component.

        * bin/MakeProjectCreator/modules/Parser.pm:

          Added + and - to the escape_regex_special() method.

Fri Jun 20 09:52:44 2003  Chad Elliott  <elliott_c@ociweb.com>

        * ace/ace.mpc:

          Added inheritance from qt_moc and qt_reactor.  These will only be
          processed if the 'qt' feature is enabled.

        * ace/qt_reactor.mpb:

          Added QtReactor_moc.cpp to the list of files.

        * bin/MakeProjectCreator/config/acedefaults.mpb:

          Added inheritance from the qt base project.

        * bin/MakeProjectCreator/config/qt.mpb:

          Contains the basic feature definition for qt libs and apps.

        * bin/MakeProjectCreator/config/qt_moc.mpb:

          Contains the custom definition for MOC files.

        * bin/MakeProjectCreator/modules/ArrayHandle.pm:

          Removed this file.  It isn't necessary anymore.

        * bin/MakeProjectCreator/modules/ProjectCreator.pm:

          Changed the way feature files are read.  This new way is better
          and less hacky.

        * bin/pch_cmd.pl:

          Don't modify the file if no precompiled header is found.

Fri Jun 20 14:28:12 UTC 2003  Johnny WIllemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-mingw.h:
          Updated this file because of the os splitting.

Fri Jun 20 09:08:05 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/pch_cmd.pl:

          Fixed the usage to display the correct options.

Fri Jun 20 08:54:29 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/ProjectCreator.pm:

          Added code to process type specific assignments that may be
          defined within a feature.

Fri Jun 20 08:10:11 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/README:

          Added documentation about the new feature project type.

        * bin/MakeProjectCreator/config/global.features:

          Defaulted the qt feature to disabled.

        * bin/MakeProjectCreator/modules/ArrayHandle.pm:
        * bin/MakeProjectCreator/modules/Creator.pm:
        * bin/MakeProjectCreator/modules/Parser.pm:
        * bin/MakeProjectCreator/modules/ProjectCreator.pm:

          The majority of the code for handling feature project went in
          here.  One main thing that was changed is that instead of using
          the <$fh> paradigm to read files, the following is used
          $_ = $fh->getline().  This is compatible with the new ArrayHandle
          module that I added.

        * bin/MakeProjectCreator/modules/Options.pm:

          Added a missing space in the completion command.

        * bin/MakeProjectCreator/modules/GNUACEProjectCreator.pm:
        * bin/MakeProjectCreator/modules/WorkspaceCreator.pm:

          Changed the code to match some new methods added in Creator and
          ProjectCreator.

Thu Jun 19 13:03:49 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/templates/gnu.mpd:

          Fixed a bug where the BUILD target wouldn't be updated when the
          project had component requirements.

Thu Jun 19 12:14:31 2003  Gan Deng <gan.deng@vanderbilt.edu>

        * bin/tao_other_tests.lst

          Added the latency tests for sequences of various data types.

Thu Jun 19 11:36:14 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/templates/gnu.mpd:

          Updated the GNUACE template to issue information as to why a
          particular project wasn't built based on the comps, requires and
          avoids values.

Thu Jun 19 12:18:22 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/OS.h:
        * ace/config-vxworks5.x.h:
        * ace/os_include/os_dirent.h:
          Fixed typos in the VXWORKS ifdef'd sections.

        * ace/OS.h:
        * ace/os_include/os_stdio.h:
          Moved include of remLib.h to os_stdio.h, and uncommented
          sysLib.h since it is needed for sysClkRateGet().  Thanks to Rod
          Andzik <andzik@rtlogic.com> for help tracking this down.

        * ace/os_include/os_netdb.h:
          Removed the VXWORKS tests for hostent and servent.

        * ace/config-aix-4x.h:
          Added ACE_LACKS_STDINT_H.

        * ace/config-hpux-11.00.h:
          Added ACE_LACKS_STDINT_H and ACE_LACKS_SYS_SELECT_H.

Thu Jun 19 07:50:04 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/ProjectCreator.pm:

          Fixed a bug with multiple 'specific' scopes in a single project.

Thu Jun 19 07:13:16 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/README:

          Documented the existing 'specific' keyword.

        * bin/MakeProjectCreator/modules/ProjectCreator.pm:

          Added the ability to specify multiple project types with the
          'specific' scope.

        * bin/MakeProjectCreator/templates/gnu.mpd:

          Removed ACESHLIB from the lit_libs assignment.

        * bin/MakeProjectCreator/templates/makedll.mpt:

          Added the ssl_libs definition.

Thu Jun 19 12:04:28 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/Default_Constants.h:
          Added guards around ACE_LD_LIBRARY_PATH and
          ACE_LD_SEARCH_PATH_SEPARATOR_STR.  Thanks to John Michael
          Zorko <j.zorko@att.net> for reporting the problem.

Thu Jun 19 07:01:57 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * ace/config-lynxos.h: Since LynxOS lacks sys/select.h and
          dlfcn.h header files, config file needs ACE_LACKS_DLFCN_H
          and ACE_LACKS_SYS_SELECT_H to be defined. Thanks to  Olli Savia
          <ops@iki.fi> for the patch.

Thu Jun 19 06:35:26 2003  John Michael Zorko <j.zorko@att.net>

        * ace/config-macosx.h: Patches to get ACE building on OSX10.2
          again.

Thu Jun 19 00:27:38 2003  Stephen Torri <storri@cse.wustl.edu>

        * ace/Timeprobe.h:
        * ace/Timeprobe.cpp:
        * ace/Timeprobe_T.cpp:
        * ace/Timeprobe_T.h:

          Advanced new timeprobe. New features are a
          ring buffer for elements kept in data structure.
          This eliminates the ACE_ASSERT when an element
          is attempted to be inserted into a full data
          structure. Old data is overwritten until the
          cache is read and cleared.

          Timeprobes now include a second argument to
          allow for an ACE_ALLOCATOR. This allocator allows
          for the data structure that will contain the
          ACE_Timeprobes to be done in the constructor. A
          new function called 'increase_size' allows for
          the data structure to increase the number of
          measurements it can take. It does so by creating a
          new structure with the new size and copying the
          elements from the old structure.

        * ace/Makefile.ace:
        * ace/Metrics_Cache.cpp:
        * ace/Metrics_Cache.h:
        * ace/Metrics_Cache.i:
        * ace/Metrics_Cache_T.cpp:
        * ace/Metrics_Cache_T.h:
        * ace/Metrics_Cache_T.i:

          Added new Metrics Cache.

        * ACE/ace/OS.h:

          Added two new macros called ACE_NEW_MALLOC_ARRAY_RETURN
          and ACE_NEW_MALLOC_ARRAY. ACE_NEW_MALLOC_ARRAY_RETURN
          returns an array of class pointers with their space
          preallocated and each entry initialized. If there is
          an error the value contained in RET_VAL is returned.
          ACE_NEW_MALLOC_ARRAY is the same but there is no
          return of a value if there is an error.

Wed Jun 18 21:27:44 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/exceptions.html: Added documentation for the
          ACE_ENV_BKWD_COMPAT macro.

Wed Jun 18 17:28:25 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * include/makeinclude/platform_linux.GNU (CXX): Added some default
          options specified in the /usr/sys/features.h.

          Thanks to Keith Snively <ksnively@d-a-s.com> and J. Russell
          Noseworthy <j.russell.noseworthy@objectsciences.com> for
          providing these patches.

Wed Jun 18 17:20:28 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * ace/Log_Record.cpp:
        * ace/Log_Record.h (print): Changed the 3rd argument to be of type
          ACE_OSTREAM_TYPE instead of ostream.

        * ace/ace/config-sunos5.5.h: Added ACE_HAS_TEMPLATE_TYPEDEFS and
          removed ACE_TEMPLATES_REQUIRES_SOURCE.

          Thanks to Keith Snively <ksnively@d-a-s.com> and J. Russell
          Noseworthy <j.russell.noseworthy@objectsciences.com> for
          providing these patches.

Wed Jun 18 15:59:18 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/OS.h:
          Added includes of os_fcntl.h, os_netdb.h, os_semaphore.h,
          os_signal.h, os_stdio.h, os_stdlib.h, os_stropts.h, os_unistd.h,
          arpa/os_inet.h, sys/select.h, and sys/os_socket.h to the VxWorks
          section.  All the includes in OS.h will be reorganized once the
          builds stabalize.

Wed Jun 18 10:54:18 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/WorkspaceCreator.pm:

          Allow scoped assignments to be applied to directories as well as
          listed mpc files.

Wed Jun 18 15:19:17 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/OS.h:
        * ace/os_include/os_fcntl.h:
        * ace/os_include/os_netdb.h:
        * ace/os_include/os_semaphore.h:
        * ace/os_include/os_signal.h:
        * ace/os_include/os_stdio.h:
        * ace/os_include/os_stdlib.h:
        * ace/os_include/os_stropts.h:
        * ace/os_include/os_unistd.h:
        * ace/os_include/arpa/os_inet.h:
        * ace/os_include/sys/select.h:
        * ace/os_include/sys/os_socket.h:
          Moved the following VxWorks includes from OS.h as noted:
          semLib.h to os_semaphore.h; ioLib.h to os_fcntl.h, os_stdio.h,
          os_stropts.h, os_unistd.h; hostLib.h to os_netdb.h; sigLib.h to
          os_signal.h; envLib.h to os_stdlib.h; inetLib.h to
          arpa/os_inet.h; selectLib.h to sys/select.h; sockLib.h to
          sys/socket.h.

        * ace/OS.h:
          Commented out remLib.h and sysLib.h since they don't appear to
          be used by ACE at all.

        * ace/OS.h:
        * ace/os_include/sys/os_un.h:
          Moved sockaddr_un declaration to sys/os_un.h.

        * ace/OS.h:
        * ace/os_include/os_signal.h:
          Moved NSIG definition to os_signal.h.

        * ace/config-vxworks5.x.h:
          Added following ACE_LACKS_* defines: STDINT_H, INTTYPS_H,
          UNISTD_H, SYS_SELECT_H, SYS_TIME_H, SYS_RESOURCE_H, DLFCN_H,
          SYS_UIO_H, SYS_IPC_H, SYS_SEM_H, STROPTS_H, and SYS_MSG_H.

Wed Jun 18 14:00:00 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/config-openbsd.h:
          Added ACE_LACKS_STDINT_H and ACE_LACKS_STROPTS_H.

Wed Jun 18 13:47:01 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/ace.doxygen:
          Also parse the new os_include subdirectory for doxygen docu

Wed Jun 18 08:11:35 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/NMakeProjectCreator.pm:
        * bin/MakeProjectCreator/modules/ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/VC6ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/VC7ProjectCreator.pm:

          For custom defined values, convert $(...) to the corresponding
          environment variable accessor, if it is required.  Custom builds
          done in the MS based IDE's are placed in a batch file and then
          executed.  For this particular case, $(...) doesn't work so we
          convert the values on assignment.

Wed Jun 18 07:38:26 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/pch_cmd.pl:

          This script can be used to edit c++ file generated by a given
          command to add a #include of a precompile header.

Wed Jun 18 07:35:22 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/Creator.pm:
        * bin/MakeProjectCreator/modules/ProjectCreator.pm:

          Fixed a bug where scoped assignment additions for custom types
          would override the values given in the Define_Custom section.

Wed Jun 18 07:16:33 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-borland.h:
          Added ACE_LACKS_DIRENT_H, ACE_LACKS_SYS_IOCTL_H, ACE_LACKS_STROPTS_H
          and ACE_HAS_DIRENT

Wed Jun 18 06:21:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/config-win32-borland.h:
          Added ACE_LACKS_STDINT_H

Wed Jun 18 03:22:15 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/config-borland-common.h:
        * ace/config-win32-borland.h:
          Moved ACE_LACKS that were added to config-borland-common.h in
          Tue Jun 17 18:34:39 UTC 2003  Don Hinton
          <dhinton@dresystems.com> to config-win32-borland.h.  Moved
          ACE_LACKS_STRRECVFD from config-borland-common.h to config-win32-borland.h.

Tue Jun 17 21:50:13 2003  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

        * ace/Synch.{h,i,cpp}: Changed the ACE_Recursive_Thread_Mutex's
          "recursive_mutex_" data member to "lock_" so that it would work
          with the ACE_Guard properly.  Thanks to Arturo Montes
          <mitosys@colomsat.net.co> for this fix.

Wed Jun 18 02:14:16 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/config-cywin32.h:
          Added following ACE_LACKS_* defines:  STDINT_H, INTTYPES_H,
          SYS_IPC_H, SYS_SEM_H, SYS_MSG_H, and STROPTS_H.  Thanks to Jeff
          Parsons for pointing this out.

Tue Jun 17 15:25:20 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Sock_Connect.cpp (get_windows_version):
        * ace/WIN32_Asynch_IO.cpp (readv,writev): Fixed compilation errors
          when ACE_HAS_WINSOCK2=0.  Thanks to Raymond Hoofman
          <raymond@charm.nl> for submitting the patches.

Tue Jun 17 18:34:39 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/OS.h:
          Removed includes for os_dirent.h and os_errno.h since they are
          pulled in by OS_Dirent.h and OS_Errno.h.

        * ace/OS_Dirent.h:
        * ace/os_include/os_dirent.h:
          Moved all the typedefs to os_dirent.h and changed OS_Dirent.h
          include it.

        * ace/OS_Errno.h:
        * ace/os_include/os_errno.h:
          Moved all the typedefs, declarations, and defines to os_errno.h
          and included it in OS_Errno.h.

        * ace/OS_Log_Msg_Attributes.h:
          Include os_stdio.h instead of <stdarg.h> and <stdio.h>.

        * ace/OS_Memory.[h,inl,cpp]:
          Rearranged includes, and included os_* headers.

        * ace/OS_String.[h,inl]:
        * ace/config-all.h:
          Include os_* headers.

        * ace/config-psos-diab-mips.h:
          Added ACE_LACKS_STDLIB_H and ACE_LACKS_STRING_H.

        * ace/os_include/os_strings.h:
          Define ACE_LACKS_STRINGS_H if !ACE_HAS_STRINGS.

        * ace/config-borland-common.h:
          Added following ACE_LACKS_* defines INTTYPES_H,UCONTEXT_H,
          SYS_SELECT_H, SYS_TIME_H, SYS_RESOURCE_H, SYS_WAIT_H, DLFCN_H,
          SYS_MMAN_H, SYS_UIO_H, SYS_SOCKET_H, NETINET_IN_H, NETDB_H,
          NET_IF_H, SYS_IPC_H, and SYS_SEM_H.

Tue Jun 17 13:44:09 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/README:
        * bin/MakeProjectCreator/modules/ProjectCreator.pm:
        * bin/MakeProjectCreator/templates/bor.mpd:
        * bin/MakeProjectCreator/templates/em3vcp.mpd:
        * bin/MakeProjectCreator/templates/gnu.mpd:
        * bin/MakeProjectCreator/templates/make.mpd:
        * bin/MakeProjectCreator/templates/nmake.mpd:
        * bin/MakeProjectCreator/templates/vc6dsp.mpd:
        * bin/MakeProjectCreator/templates/vc7.mpd:

          Added a new custom definition keyword 'pch_option' to allow the
          custom build command to possibly generate code that is compatible
          with precompiled headers.

Tue Jun 17 14:42:25 2003  Gautam H. Thaker  <gthaker@atl.lmco.com>

        * performance-tests/SCTP/Options_Manager.cpp:

          Change was necessary for build on RH 9.0 to work properly.
          Change consisted of moving the definition of IPPROTO_SCTP
          to after all the other includes.

Tue Jun 17 13:26:58 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/ProjectCreator.pm:

          When matching possible output files for custom builds, check for
          forward slashes and back slashes.

Tue Jun 17 17:28:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/SSL/Makefile:
          Set ACE_SSL_BUILD_DLL when building a shared lib

Tue Jun 17 11:47:52 2003  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

        * ace/Future.{h,cpp}: Changed all uses of ACE_Thread_Mutex to
          ACE_Recursive_Thread_Mutex and also changed the
          ACE_Condition_Thread_Mutex to
          ACE_Condition_Recursive_Thread_Mutex.  This should fix bugs with
          deadlock.  Thanks to Thomas Groth <groth.th@nord-com.net> for
          providing these patches.

        * ace/DLL_Manager.cpp (symbol): Added missing newlines in
          debug/error messages.  Thanks to Rick Ohnemus
          <rick.ohnemus@systemware.com> for reporting this.

Tue Jun 17 15:49:32 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * ace/os_include/aio.h:
        * ace/os_include/assert.h:
        * ace/os_include/complex.h:
        * ace/os_include/cpio.h:
        * ace/os_include/ctype.h:
        * ace/os_include/dirent.hd:
        * ace/os_include/lfcn.h:
        * ace/os_include/errno.h:
        * ace/os_include/fcntl.h:
        * ace/os_include/fenv.h:
        * ace/os_include/float.h:
        * ace/os_include/fmtmsg.h:
        * ace/os_include/fnmatch.h:
        * ace/os_include/ftw.h:
        * ace/os_include/glob.h:
        * ace/os_include/grp.h:
        * ace/os_include/iconv.h:
        * ace/os_include/inttypes.h:
        * ace/os_include/iso646.h:
        * ace/os_include/langinfo.h:
        * ace/os_include/libgen.h:
        * ace/os_include/limits.h:
        * ace/os_include/local.h:
        * ace/os_include/math.h:
        * ace/os_include/monetary.h:
        * ace/os_include/mqueue.h:
        * ace/os_include/ndbm.h:
        * ace/os_include/netdb.h:
        * ace/os_include/nl_types.h:
        * ace/os_include/poll.h:
        * ace/os_include/pthread.h:
        * ace/os_include/pwd.h:
        * ace/os_include/regex.h:
        * ace/os_include/sched.h:
        * ace/os_include/search.h:
        * ace/os_include/semaphore.h:
        * ace/os_include/setjmp.h:
        * ace/os_include/signal.h:
        * ace/os_include/spawn.h:
        * ace/os_include/stdarg.h:
        * ace/os_include/stdbool.h:
        * ace/os_include/stddef.h:
        * ace/os_include/stdint.h:
        * ace/os_include/stdio.h:
        * ace/os_include/stdlib.h:
        * ace/os_include/string.h:
        * ace/os_include/strings.h:
        * ace/os_include/stropts.h:
        * ace/os_include/syslog.h:
        * ace/os_include/tar.h:
        * ace/os_include/termios.h:
        * ace/os_include/tgmath.h:
        * ace/os_include/time.h:
        * ace/os_include/trace.h:
        * ace/os_include/ucontext.h:
        * ace/os_include/ulimit.h:
        * ace/os_include/unistd.h:
        * ace/os_include/utime.h:
        * ace/os_include/utmpx.h:
        * ace/os_include/wchar.h:
        * ace/os_include/wctype.h:
        * ace/os_include/wordexp.h:
        * ace/os_include/arpa/inet.h:
        * ace/os_include/net/if.h:
        * ace/os_include/netinet/in.h:
        * ace/os_include/netinet/tcp.h:
        * ace/os_include/sys/ipc.h:
        * ace/os_include/sys/mman.h:
        * ace/os_include/sys/msg.h:
        * ace/os_include/sys/resource.h:
        * ace/os_include/sys/select.h:
        * ace/os_include/sys/sem.h:
        * ace/os_include/sys/shm.h:
        * ace/os_include/sys/socket.h:
        * ace/os_include/sys/stat.h:
        * ace/os_include/sys/statvfs.h:
        * ace/os_include/sys/timeb.h:
        * ace/os_include/sys/time.h:
        * ace/os_include/sys/times.h:
        * ace/os_include/sys/types.h:
        * ace/os_include/sys/uio.h:
        * ace/os_include/sys/un.h:
        * ace/os_include/sys/utsname.h:
        * ace/os_include/sys/wait.h:
          Removed these file--they were replaced by the ones below with
          the "os_" prefix.

Tue Jun 17 15:21:36 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        Merged in the following subsetting changes.

        * ace/*:
        * ace/os_include/*:
          Added "os_" prefix to all the new include file names, and
          modified the includes to match the new names.

        Sat May 17 13:41:38 UTC 2003  Don Hinton  <dhinton@dresystems.com>

          * ace/config-freebsd.h:
            Added ACE_LACKS_STROPTS_H.

        Fri May 16 18:26:11 UTC 2003  Don Hinton  <dhinton@dresystems.com>

          * ace/os_include/aio.h:
          * ace/os_include/iconv.h:
          * ace/os_include/pthread.h:
          * ace/os_include/signal.h:
          * ace/os_include/stddef.h:
          * ace/os_include/stdint.h:
          * ace/os_include/ucontext.h:
          * ace/os_include/sys/stat.h:
            Nuked trailing whitespace.

        Fri May 16 18:03:09 UTC 2003  Don Hinton  <dhinton@dresystems.com>

          * ace/config-all.h:
            Cosmetic changes.

          * ace/os_include/*.h:
            Added extern "C" begin and end brackets to all files, even those
            with not additions, and places all additions inside the extern
            "C" {}'s.  Rearranged some of the #ifdef's and moved includes to
            the top of the files so that only those headers that need to be
            are couched in extern "C".

        Thu May 15 17:01:28 UTC 2003  Don Hinton  <dhinton@dresystems.com>

          * ace/OS.h:
            Adding #include of ace/os_include/sys/sem.h and
            ace/os_include/errno.h/

          * ace/config-win32-msvc.h:
            Added ACE_LACKS_DIRENT_H, ACE_LACKS_DLFCN_H,
            ACE_LACKS_NETDB_H, and ACE_LACKS_NET_IF_H defines.

          * ace/os_include/dlfcn.h:
          * ace/os_include/sys/mman.h:
            Rearranged ACE_WIN32 #ifdef's.

          * ace/os_include/limits.h:
            Fixed a typo.

        Thu May 15 00:12:34 UTC 2003  Don Hinton  <dhinton@dresystems.com>

          * ace/os_include/limits.h:
          * ace/os_include/dirent.h:
          * ace/os_include/netdb.h:
            Moved MAXNAMLEN define from limits.h to dirent.h, and
            MAXHOSTNAMELEN from limits.h to netdb.h to clear up
            warnings on Solaris.

        Wed May 14 17:40:28 UTC 2003  Don Hinton  <dhinton@dresystems.com>

          * ace/OS.h:
            Moved more code, as listed below.

          * ace/Default_Constants.h:
            Moved ACE_DIRECTORY_SEPERATOR_*, ACE_PLATFORM_*,
            ACE_LD_SEARCH_PATH_*, ACE_DLL_*, ACE_DEFAULT_SVC_CONF,
            ACE_DEFAULT_[LOCAL|GLOBAL]NAME_*, ACE_DEFAULT_NAMESPACE_*,
            ACE_DEFAULT_THREAD_PRIORITY, and ACE_MAX_DEFAULT_PORT
            defines here.

          * ace/Global_Macros.h:
            Moved the Service Configurator macros here.

          * ace/Handle_Set.h:
          * ace/os_include/sys/select.h:
            Moved the fd_mask typedef from ace/Handle_Set.h to
            ace/os_include/sys/select.h.

          * ace/config-all.h:
            Moved ACE_OSTREAM, ACE_DEFAULT_LOG_STREAM, ACE_SYNCH_*,
            ACE_WSOCK_VERSION, _REENTRANT, ACE_USING, ACE_TYPENAME_*,
            and ACE_TEMPLATE_SPECIALIZATION defines here.

          * ace/config-psosim-g++:
            Moved the size_t define here.

          * ace/config-win32-msvc.h:
            Moved the pragma warning disable's and ACE_HAS_STRICT here.

          * ace/os_include/*h:
            Changed the @file and include guards to include an OS/os
            prefix.  The file names will be changed when we merge to
            the main trunk.

          * ace/os_include/dlfcn.h:
            Moved extern "C" {} wrapper around the include of dlfcn.h when
            ACE_HAS_DLFCN_H_BROKEN_EXTERN_C defined, ACE_SHLIB_*,
            ACE_DEFAULT_SHLIB_MODE, and RTLD_* defines here.

          * ace/os_include/errno.h:
            Moved the ACE_PSOS and ACE_WIN32 E* defines here.

          * ace/os_include/fcntl.h:
            Moved the ACE_WIN32 O_* and ACE_NONBLOCK defines here.

          * ace/os_include/limits.h:
            Added POSIX NAME_MAX and HOST_NAME_MAX.  Moved MAXNAMLEN,
            MAXNAMELEN, and MAXHOSTNAMELEN here.

          * ace/os_include/netdb.h:
            Move queue define when ACE_HAS_STL_QUEUE_CONFLICT is defined here.
            Added extern "C" {} around netdb.h include.  Moved hostent,
            servent structs and ACE_[HOSTENT|SERVENT|PROTOENT]_DATA*
            defines here.

          * ace/os_include/pthread.h:
            Added extern "C" {} wrapper around pthread.h include.

          * ace/os_include/signal.h:
            Moved siginfo_t typedef here.  Added extern "C" {} wrapper
            around signal.h include and moved sigset_t typedef here.  Moved
            ACE_SignalHandler and ACE_SignalHandlerV function typedefs
            and sigaction struct definition here.

          * ace/os_include/stdint.h:
            Moved ACE_PSOS typedefs here.

          * ace/os_include/stdlib.h:
            Moved alloca.h include here.

          * ace/os_include/string.h:
            Changed extern to extern "C" to the strdup() declaration.

          * ace/os_include/unistd.h:
            Changed extern to extern"C" to the getopt() declaration.

          * ace/os_include/arpa/inet.h:
            Added extern "C" {} around arpa/inet.h include.

          * ace/os_include/net/if.h:
            Move map define when ACE_HAS_STL_MAP_CONFLICT is defined here.
            Added extern "C" {} around net/if.h include.  Moved
            IFF_LOOPBACK define here.  Moved struct ifafilt declare when
            ACE_HAS_BROKEN_IF_HEADER is defined.

          * ace/os_include/netinet/in.h:
            Move queue define when ACE_HAS_STL_QUEUE_CONFLICT is defined here.
            Added extern "C" {} around netinet/in.h include.  Moved
            IPPORT_RESERVED, IPPORT_USERRESERVED, INADDR_LOOPBACK,
            INADDR_NONE, INET_ADDRSTRLEN, and INET6_ADDRSTRLEN defines here.

          * ace/os_include/netinet/tcp.h:
            Moved TCP_NODELAY define here.

          * ace/os_include/sys/ipc.h:
            Moved ACE_INVALID_SEM_KEY and the IPC_* defines here.

          * ace/os_include/sys/mman.h:
            Moved extern "C" {} around sys/mman.h when ACE_HAS_BROKEN_MMAP_H
            is defined.  Moved the PROT* and MAP_* defines here.

          * ace/os_include/sys/sem.h:
            Moved union semun definition here.

          * ace/os_include/sys/socket.h:
            Moved cygwin32/socket.h include here.  Moved __cplusplus
            undef/def around sys/socket.h include when
            ACE_HAS_AIX_BROKEN_SOCKET_HEADER is defined.  Moved AF_*, PF_*,
            ACE_ADDRESS_FAMILY_INET and ACE_PROTOCOL_FAMILY_INET defines
            here.

          * ace/os_include/sys/stat.h:
            Added undef ACE_LACKS_SYS_STAT_H if ACE_PSOS is defined (should
            go in the ACE_PSOS headers, eventually).  Changed umask(),
            mkfifo(), and mkdir() declarations from extern to extern "C".

          * ace/os_include/sys/uio.h:
            Moved iovec definition for ACE_WIN32 here.  Moved
            ACE_[READ|WRITE]_TYPE typedefs here.

        Sun May 11 14:42:23 UTC 2003  Don Hinton  <dhinton@dresystems.com>

          * ace/OS.h:
            Moved more code, as listed below.

          * ace/Basic_Types.h:
            Changed #includes to use new headers.  Moved MAXPATHLEN
            to ace/os_include/limits.h.

          * ace/Malloc.h:
          * ace/Default_Constants.h:
            Moved ACE_DEFAULT_BASE_ADDR here.

          * ace/os_include/limits.h:
            Added conditional include of <sys/param.h>.  Moved howmany
            macro and MAXPATHLEN here.  Added POSIX PATH_MAX.

          * ace/os_include/time.h:
            Moved timespec_t typedef for ACE_PSOS here.

        Sat May 10 21:39:05 UTC 2003  Don Hinton  <dhinton@dresystems.com>

          * ace/OS.h:
            Removed commented and moved more code, as listed below.

          * ace/Handle_Set.h:
            Moved ACE_FD_SETSIZE and ACE_DEFAULT_SELECT_REACTOR_SIZE
            defines here.

          * ace/Malloc.h:
            Moved ACE_DEFAULT_BASE_ADDR define here.  Fixed #ifdef
            indentation.

          * ace/Timer_Queue_T.cpp:
            Moved ACE_TIMER_SKEW define here.

          * ace/os_include/pthread.h:
            Moved a large section of pthread defines and typedefs here.

          * ace/os_include/stdio.h:
            Moved ACE_PSOS_SNARFS_HEADER_INFO decl's for fdopen(), tempnam(),
            and fileno() here.

          * ace/os_include/stdlib.h:
            Moved ACE_PSOS_SNARFS_HEADER_INFO decl for putenv() here.

          * ace/os_include/string.h:
            Moved ACE_PSOS_SNARFS_HEADER_INFO decl for strdup() here.

          * ace/os_include/unistd.h:
            Moved ACE_PSOS_SNARFS_HEADER_INFO decl's for getopt() and
            isatty() here.

          * ace/os_include/sys/stat.h:
            Moved ACE_PSOS_SNARFS_HEADER_INFO decl's for umask(), mkfifo(),
            and mkdir() here.

          * apps/gperf/src/Vectors.h:
            Moved ACE_ASCII_SIZE, ACE_EBCDIC_SIZE, and
            ACE_STANDARD_CHARACTER_SET_SIZE defines here.

        Sat May 10 18:59;32 UTC 2003  Don Hinton  <dhinton@dresystems.com>

          * ace/config-cygwin32.h:
            Added ACE_LACKS_SYS_IPC_H ACE_LACKS_SYS_MSG_H.

        Sat May 10 16:18:24 UTC 2003  Don Hinton  <dhinton@dresystems.com>

          * ace/OS.h:
            Commented and moved more code, as listed below.

          * ace/SV_Semaphore_Simple.h:
            Moved ACE_DEFAULT_SEM_KEY define here.

          * ace/os_include/fcntl.h:
            Moved O_NDELAY, ACE_NONBLOCK, and O_* defines for __BORLANDC__
            here.

          * ace/os_include/signal.h:
            Moved SIG* and ACE_SIG* defines here.

          * ace/os_include/stddef.h:
            Moved size_t for ACE_PSOS_DIAB_MIPS here.

          * ace/os_include/stdio.h:
            Moved ACE_MAX_USERID, BUFSIZ, ACE_STRBUF_SIZE, and ACE_STD*
            defines here.

          * ace/os_include/string.h:
            Moved str[n]imp() for __BORLANDC__ and ACE_SPRINTF_ADAPTER
            defines here.

          * ace/os_include/unistd.h:
            Moved _SC_AIO_MAX, chdir(), access(), getcwd(), and isatty()
            defines for __BORLANDC__ here.

          * ace/os_include/sys/mman.h:
            Moved PROT_RDWR define here.

          * ace/os_include/sys/socket.h:
            Moved CMSG_DATA define here.

          * ace/os_include/sys/stat.h:
            Moved stat(), umask(), and fstat() defines for __BORLANDC__ here.

          * ace/os_include/sys/timeb.h:
            Moved ftime() and timeb defines for __BORLANDC__ here.

          * ace/os_include/sys/types.h:
            Moved longlong_t, key_t, and pid_t here.

        Sat May 10 19:19:09 UTC 2003  Don Hinton  <dhinton@dresystems.com>

          * ace/OS.h:
            Commented and moved more code, as listed below.

          * ace/os_include/sys/types.h:
            Added ACE_LACKS_SYS_MMAN_H define.

          * ace/os_include/sys/types.h:
            Moved nlink_t, uid_t, gid_t, and caddr_t typedefs for
            ACE_WIN32 here.

        Fri May  9 22:45:24 UTC 2003  Don Hinton  <dhinton@dresystems.com>

          * ace/OS.h:
            Commented and moved more code, as listed below.

          * ace/os_include/signal.h:
            Moved ACE_HAS_SIG_MACROS and ACE_HAS_SIG_ATOMIC_T ifdefs,
            sigemptyset undefs, and SCO SIGIO def and include of
            sys/regset.h here.

          * ace/os_include/stdlib.h:
            Move rand_r() declaration here.

          * ace/os_include/string.h:
            Moved strtok_r() declaration here.

          * ace/os_include/time.h:
            Moved strptime() declaration here.

          * ace/os_include/unistd.h:
            Moved ualarm(), pread/pwrite(), getpgid(), and lseek64/llseek()
            declarations here.

          * ace/os_include/sys/mman.h:
            Moved MAP_* and PROT_* defines for ACE_WIN32 here.

          * ace/os_include/sys/msg.h:
            Moved struct msqid_sh declaration for ACE_WIN32 here.

          * ace/os_include/sys/resource.h:
            Moved struct rusage declaration for ACE_WIN32 here.

          * ace/os_include/sys/select.h:
            Moved NFDBITS define for ACE_WIN32 here.

          * ace/os_include/sys/shm.h:
            Moved struct shmaddr declaration for ACE_WIN32 here.

          * ace/os_include/sys/socket.h:
            Moved struct msghdr and related declarations here.

          * ace/os_include/sys/uio.h:
            Moved [ACE_]IOV_MAX defines here.

        Fri May  9 16:10:50 UTC 2003  Don Hinton  <dhinton@dresystems.com>

          * ace/OS.h:
            Commented and moved more code, as listed below.

          * ace/config-sunos5.5.h:
            Added ACE_LACKS_STDINT_H.

          * ace/os_include/stropts.h:
            Moved includes of [sys/]timod.h, sys/filio.h, and sys/sockio.h
            here.

          * ace/os_include/sys/msg.h:
            Moved ACE_HAS_BROKEN_MSG_H and ACE_LACKS_SYSV_MSQ_PROTOS
            #ifdef's here.

        Fri May  9 01:20:49 UTC 2003  Don Hinton  <dhinton@dresystems.com>

          * ace/config-cygwin32.h:
            Added ACE_LACKS_SYS_SEM_H macro.

        Fri May  9 00:20:32 UTC 2003  Don Hinton  <dhinton@dresystems.com>

          * ace/config-win32-msvc.h:
            Added following ACE_LACKS macros: INTTYPES_H, STROPTS_H,
            SYS_IOCTL_H, SYS_IPC_H, and SYS_SEM_H.

          * ace/SV_Semaphore_Complex.cpp:
          * ace/SV_Semaphore_Simple.cpp:
            Added #include "ace/os_include/sys/sem.h".

          * ace/SPIPE_Stream.h:
            Added #include "ace/os_include/stropts.h".

        Thu May  8 23:24:43 UTC 2003  Don Hinton  <dhinton@dresystems.com>

          * ace/OS.h:
            Commented out a ton of code and moved it into the following
            files as noted.  The commented out code will be removed once the
            other platforms have been tested and we are ready to commit to
            the main trunk.

          * ace/Thread.h:
            Moved struct cancel_state here.

          * ace/os_include/pthread.h:
            Moved pthead_self() declaration here.

          * ace/os_include/semaphore.h:
            Moved struct ACE_sema_t and SEM_FAILED here.

          * ace/os_include/stdint.h:
            Moved BSD style types, e.g., u_char, here.

          * ace/os_include/stropts.h:
            Moved struct strrecvfd declaration here.

          * ace/os_include/time.h:
            Moved ACE_HAS_2_PARAM_ASCTIME_R_AND_CTIME_R define and
            undef of ctime when ACE_HAS_BROKEN_CTIME here.

          * ace/os_include/sys/msg.h:
            Moved struct msgbuf declaration here.

          * ace/os_include/sys/resource.h:
            Moved rlimit typedef here.

          * ace/os_include/sys/sem.h:
            Moved struct sembuf declartion here.

          * ace/os_include/sys/stat.h:
            Moved ACE_LACKS_MODE_MASK, e.g., S_IRWXG, definitions
            and struct stat here.

          * ace/os_include/sys/types.h:
            Moved clockid_t and dev_t typedefs and conditional include
            of <types.h> here.

          * ace/os_include/sys/uio.h:
            Moved struct iovec and related typedefs here.

        Thu May  7 02:04:00 UTC 2003  Don Hinton  <dhinton@dresystems.com>

          * ace/OS.h:
            Replaced Windows specific includes for ws2tcpip.h, direct.h,
            process.h, and io.h with the appropriate new headers listed
            below.

          * ace/config-cygwin32.h:
            Added following ACE_LACKS macros:  STDINT_H, INTTYPES_H,
            STROPTS_H, and UCONTEXT_H.

          * ace/config-win32-msvc.h:
            Added several ACE_LACKS macros: UCONTEXT_H, STDINT_H,
            SYS_SELECT_H, TIME_H, SYS_RESOURCE_H, SYS_WAIT_H,
            SYS_UIO_H, SYS_SOCKET_H, and NETINET_IN_H.

          * ace/os_include/unistd.h:
            Added include for <process.h> and <io.h> on Windows,
            but not WINCE.

          * ace/os_include/sys/stat.h:
            Added include for <direct.h> on Windows, but not WINCE.

          * ace/os_include/netinet/in.h:
            Added include for <ws2tcpip.h> when ACE_HAS_WINSOCK2 is
            defined and != 0.

        Wed May  7 00:02:10 UTC 2003  Don Hinton  <dhinton@dresystems.com>

          * ace/OS.{i,h}:
          * ace/os_include/signal.h:
          * ace/os_include/stropts.h:
            Modified most of the #includes of systems headers to use the
            ace/os_include/*.h headers, and started moving some of the
            #ifdef'd code to the new headers.

          * ace/config-linux-common.h:
            Removed #define ACE_LACKS_STRRECVFD and added #define
            ACE_HAS_STRBUF_T.

Tue Jun 17 06:36:39 2003  Chad Elliott  <elliott_c@ociweb.com>

        * bin/MakeProjectCreator/modules/ProjectCreator.pm:
        * bin/MakeProjectCreator/modules/VC6ProjectCreator.pm:

          Removed a hack in the VC6 projects which originally appended EXE,
          DLL and LIB to the end of the project names.  This caused problems
          with exe dependencies and wasn't necessary in the first place.

        * bin/MakeProjectCreator/modules/WorkspaceCreator.pm:

          Changed value from undef to '' to avoid using an undefined
          reference in case a referenced environment variable doesn't
          exist.

Tue Jun 17 06:42:33 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ace/OS.h:
          Only define ACE_DLL_SUFFIX and ACE_DLL_PREFIX when they are not
          defined yet. This makes it easy to overrule them in the config
          files like below.

        * ace/config-cygwin32.h:
          Set ACE_DLL_SUFFIX to .dll for Cygwin.

        * ace/config-win32-mingw.h:
          Set ACE_DLL_PREFIX to lib for MinGW.

Tue Jun 17 05:37:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ACE-INSTALL.html:
          Added remedy info

        * ace/DLL.cpp:
          Removed duplicate space in debug line

        * ace/DLL_Manager.cpp:
          Corrected incorrect classname in debug line and when having problems
          loading a DLL, report also the name of the dll.

        * ace/Filecache.cpp:
          Corrected incorrect comment

        * ace/config-win32-borland.h:
          Added define ACE_NEEDS_DL_UNDERSCORE

        * ace/Lib_Find.cpp:
          Removed special borland check because for borland we set now
          ACE_NEEDS_DL_UNDERSCORE

Mon Jun 16 22:24:25 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * ace/Priority_Reactor.h: Fixed typos in the operator= and copy
          constructor. Thanks to Douglas A Stuart
          <douglas.a.stuart@boeing.com> for reporting the problem.

        * THANKS: Added Doug A Stuart to the hall of fame.
