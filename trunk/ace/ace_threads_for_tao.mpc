//  -*- MPC -*-
//
// $Id$

project(ACE_Threads_FOR_TAO) : acedefaults, core, pkgconfig, ace_for_tao {

  requires     = ace_for_tao
  libout       = $(ACE_ROOT)/lib
  sharedname   = ACE_Threads_FOR_TAO
  dynamicflags = ACE_THREADS_BUILD_DLL

  Source_Files(ACE_COMPONENTS) {
    Activation_Queue.cpp
    Barrier.cpp
    File_Lock.cpp
    Method_Request.cpp
    Process.cpp
    Process_Manager.cpp
    Process_Semaphore.cpp
    RW_Process_Mutex.cpp
    Thread_Semaphore.cpp

    // ACE_Token implementation uses semaphores on Windows and VxWorks.
    conditional(!vc6,!vc71,!vc8,!bmake) {
      Semaphore.cpp
      Process_Mutex.cpp
    }
  }

  Inline_Files {
    Activation_Queue.inl
    Barrier.inl
    File_Lock.inl
    Method_Request.inl
    Process.inl
    Process_Manager.inl
    Process_Semaphore.inl
    RW_Process_Mutex.inl
    Thread_Semaphore.inl

    // ACE_Token implementation uses semaphores on Windows and VxWorks.
    conditional(!vc6,!vc71,!vc8,!bmake) {
      Semaphore.inl
      Process_Mutex.inl
    }
  }

  Header_Files {
    Activation_Queue.h
    Barrier.h
    File_Lock.h
    Method_Request.h
    Process.h
    Process_Manager.h
    Process_Semaphore.h
    RW_Process_Mutex.h
    Thread_Semaphore.h

    // ACE_Token implementation uses semaphores on Windows and VxWorks.
    conditional(!vc6,!vc71,!vc8,!bmake) {
      Semaphore.h
      Process_Mutex.h
    }
  }

  Pkgconfig_Files {
     ACE_Threads_FOR_TAO.pc.in
  }
}
