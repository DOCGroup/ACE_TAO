//  -*- MPC -*- now wouldn't this be cool...
// $Id$

project(ACE) : acedefaults, aceversion, core, qt_reactor, other, codecs, token, svcconf, uuid, filecache {
  libout       = $(ACE_ROOT)/lib
  sharedname   = ACE
  dynamicflags = ACE_BUILD_DLL ACE_OS_BUILD_DLL

  // This mpc file could be greatly simplified by putting the separate components
  // in subdirectories.

  // Old OS files.  put these back and remove the OS_NS*, Cleanup.cpp, and
  // Object_Manager_Base.cpp to improve compile times at the cost of
  // footprint. dhinton
  //OS.cpp
  //OS_Dirent.cpp
  //OS_Memory.cpp
  //OS_String.cpp
  //Synch.cpp

  Source_Files(ACE_COMPONENTS) {
    OS {
      Basic_Types.cpp
      Time_Value.cpp
      Cleanup.cpp
      Object_Manager_Base.cpp
      OS_main.cpp
      OS_NS_arpa_inet.cpp
      OS_NS_ctype.cpp
      OS_NS_dirent.cpp
      OS_NS_dlfcn.cpp
      OS_NS_errno.cpp
      OS_NS_fcntl.cpp
      OS_NS_math.cpp
      OS_NS_netdb.cpp
      OS_NS_poll.cpp
      OS_NS_pwd.cpp
      OS_NS_regex.cpp
      OS_NS_signal.cpp
      OS_NS_stdio.cpp
      OS_NS_stdlib.cpp
      OS_NS_string.cpp
      OS_NS_strings.cpp
      OS_NS_stropts.cpp
      OS_NS_sys_mman.cpp
      OS_NS_sys_msg.cpp
      OS_NS_sys_resource.cpp
      OS_NS_sys_select.cpp
      OS_NS_sys_shm.cpp
      OS_NS_sys_socket.cpp
      OS_NS_sys_stat.cpp
      OS_NS_sys_time.cpp
      OS_NS_sys_uio.cpp
      OS_NS_sys_utsname.cpp
      OS_NS_sys_wait.cpp
      OS_NS_Thread.cpp
      OS_NS_time.cpp
      OS_NS_unistd.cpp
      OS_NS_wchar.cpp
      OS_QoS.cpp
      OS_TLI.cpp
      OS_Errno.cpp
      ARGV.cpp
      Argv_Type_Converter.cpp
      Base_Thread_Adapter.cpp
      OS_Thread_Adapter.cpp
      OS_Log_Msg_Attributes.cpp
      Thread_Hook.cpp
      Sched_Params.cpp
      Handle_Set.cpp
      Copy_Disabled.cpp
      Date_Time.cpp
      gethrtime.cpp
    }

    Utils {
      ACE.cpp
      Active_Map_Manager.cpp
      Arg_Shifter.cpp
      Capabilities.cpp
      Containers.cpp
      Configuration.cpp
      Configuration_Import_Export.cpp
      Dirent.cpp
      Dirent_Selector.cpp
      Dynamic.cpp
      Flag_Manip.cpp
      Framework_Component.cpp
      Functor.cpp
      Functor_String.cpp
      Get_Opt.cpp
      Hash_Map_Manager.cpp
      Connection_Recycling_Strategy.cpp
      Hashable.cpp
      Notification_Strategy.cpp
      Recyclable.cpp
      Refcountable.cpp
      Handle_Ops.cpp
      Init_ACE.cpp
      Lib_Find.cpp
      Message_Block.cpp
      Method_Request.cpp
      Object_Manager.cpp
      Registry.cpp
      String_Base_Const.cpp
      SString.cpp
      Stats.cpp
      Container_Instantiations.cpp
      Sample_History.cpp
    }

    Logging {
      Dump.cpp
      Log_Msg.cpp
      Log_Msg_Callback.cpp
      Log_Msg_Backend.cpp
      Log_Msg_IPC.cpp
      Log_Msg_NT_Event_Log.cpp
      Log_Msg_UNIX_Syslog.cpp
      Log_Record.cpp
      Logging_Strategy.cpp
      Trace.cpp
    }

    Threads {
      Activation_Queue.cpp
      Atomic_Op.cpp
      Process.cpp
      Process_Manager.cpp
      TSS_Adapter.cpp
      Auto_Event.cpp
      Manual_Event.cpp
      Barrier.cpp
      Condition_Thread_Mutex.cpp
      Condition_Recursive_Thread_Mutex.cpp
      Event.cpp
      Lock.cpp
      Mutex.cpp
      RW_Mutex.cpp
      RW_Thread_Mutex.cpp
      Recursive_Thread_Mutex.cpp
      Semaphore.cpp
      Thread_Mutex.cpp
      Thread_Semaphore.cpp
      Synch_Options.cpp
      Process_Semaphore.cpp
      Process_Mutex.cpp
      RW_Process_Mutex.cpp
      File_Lock.cpp
      Thread.cpp
      Thread_Manager.cpp
      Thread_Adapter.cpp
      Thread_Exit.cpp
      Thread_Control.cpp
      Token.cpp
    }

    Demux {
      Event_Handler.cpp
      FlReactor.cpp
      Msg_WFMO_Reactor.cpp
      POSIX_Proactor.cpp
      POSIX_CB_Proactor.cpp
      WIN32_Proactor.cpp
      Priority_Reactor.cpp
      Proactor.cpp
      Reactor.cpp
      Select_Reactor.cpp
      Select_Reactor_Base.cpp
      SUN_Proactor.cpp
      Dev_Poll_Reactor.cpp
      TP_Reactor.cpp
      TkReactor.cpp
      WFMO_Reactor.cpp
      XtReactor.cpp
      QtReactor.cpp
    }

    Connection {
      Asynch_IO.cpp
      Asynch_IO_Impl.cpp
      Asynch_Pseudo_Task.cpp
      POSIX_Asynch_IO.cpp
      WIN32_Asynch_IO.cpp
    }

    Sockets {
      Addr.cpp
      INET_Addr.cpp
      IPC_SAP.cpp
      LSOCK.cpp
      LSOCK_Acceptor.cpp
      LSOCK_CODgram.cpp
      LSOCK_Connector.cpp
      LSOCK_Dgram.cpp
      LSOCK_Stream.cpp
      Multihomed_INET_Addr.cpp
      SOCK.cpp
      SOCK_Acceptor.cpp
      SOCK_CODgram.cpp
      Sock_Connect.cpp
      SOCK_Connector.cpp
      SOCK_Dgram.cpp
      SOCK_Dgram_Bcast.cpp
      SOCK_Dgram_Mcast.cpp
      SOCK_IO.cpp
      SOCK_SEQPACK_Acceptor.cpp
      SOCK_SEQPACK_Association.cpp
      SOCK_SEQPACK_Connector.cpp
      SOCK_Stream.cpp
    }

    IPC {
      ATM_Addr.cpp
      ATM_Acceptor.cpp
      ATM_Connector.cpp
      ATM_Params.cpp
      ATM_QoS.cpp
      ATM_Stream.cpp
      XTI_ATM_Mcast.cpp
      DEV.cpp
      DEV_Addr.cpp
      DEV_Connector.cpp
      DEV_IO.cpp
      FIFO.cpp
      FIFO_Recv.cpp
      FIFO_Recv_Msg.cpp
      FIFO_Send.cpp
      FIFO_Send_Msg.cpp
      FILE_Addr.cpp
      FILE.cpp
      FILE_Connector.cpp
      FILE_IO.cpp
      IO_SAP.cpp
      IOStream.cpp
      Pipe.cpp
      Signal.cpp
      SPIPE_Addr.cpp
      SPIPE.cpp
      SPIPE_Acceptor.cpp
      SPIPE_Connector.cpp
      SPIPE_Stream.cpp
      SV_Message.cpp
      SV_Message_Queue.cpp
      SV_Semaphore_Complex.cpp
      SV_Semaphore_Simple.cpp
      SV_Shared_Memory.cpp
      TLI.cpp
      TLI_Acceptor.cpp
      TLI_Connector.cpp
      TLI_Stream.cpp
      TTY_IO.cpp
      UNIX_Addr.cpp
      UPIPE_Acceptor.cpp
      UPIPE_Connector.cpp
      UPIPE_Stream.cpp
      MEM_Acceptor.cpp
      MEM_Addr.cpp
      MEM_Connector.cpp
      MEM_IO.cpp
      MEM_SAP.cpp
      MEM_Stream.cpp
    }

    Streams {
      CDR_Base.cpp
      CDR_Stream.cpp
      Codeset_IBM1047.cpp
      Codeset_Registry.cpp
      Codeset_Registry_db.cpp
      Message_Queue.cpp
      Reactor_Notification_Strategy.cpp
      Task.cpp
    }

    Memory {
      Based_Pointer_Repository.cpp
      Malloc.cpp
      PI_Malloc.cpp
      Malloc_Allocator.cpp
      Malloc_Instantiations.cpp
      Mem_Map.cpp
      Memory_Pool.cpp
      Obchunk.cpp
      Obstack.cpp
      Read_Buffer.cpp
      Shared_Memory.cpp
      Shared_Memory_MM.cpp
      Shared_Memory_SV.cpp
    }

    Timer {
      Basic_Stats.cpp
      High_Res_Timer.cpp
      Profile_Timer.cpp
      System_Time.cpp
      Time_Request_Reply.cpp
      Timeprobe.cpp
      Timer_Hash.cpp
      Timer_Heap.cpp
      Timer_List.cpp
      Timer_Queue.cpp
      Timer_Wheel.cpp
    }

    Metrics {
      Metrics_Cache.cpp
    }
  }

  Template_Files {
      Acceptor.cpp
      Active_Map_Manager_T.cpp
      Array_Base.cpp
      Auto_Functor.cpp
      Atomic_Op_T.cpp
      Node.cpp
      Unbounded_Set.cpp
      Unbounded_Queue.cpp
      Asynch_Acceptor.cpp
      Asynch_Connector.cpp
      Auto_IncDec_T.cpp
      Auto_Ptr.cpp
      Based_Pointer_T.cpp
      Connector.cpp
      Containers_T.cpp
      Cache_Map_Manager_T.cpp
      Cached_Connect_Strategy_T.cpp
      Caching_Strategies_T.cpp
      Caching_Utility_T.cpp
      Cleanup_Strategies_T.cpp
      Dump_T.cpp
      Dynamic_Service.cpp
      Env_Value_T.cpp
      Event_Handler_T.cpp
      Framework_Component_T.cpp
      Free_List.cpp
      Functor_T.cpp
      Future.cpp
      Future_Set.cpp
      Hash_Map_Manager_T.cpp
      Hash_Map_With_Allocator_T.cpp
      Hash_Cache_Map_Manager_T.cpp
      IOStream_T.cpp
      Intrusive_List.cpp
      Intrusive_List_Node.cpp
      LOCK_SOCK_Acceptor.cpp
      Local_Name_Space_T.cpp
      Malloc_T.cpp
      Managed_Object.cpp
      Map_Manager.cpp
      Map_T.cpp
      Message_Block_T.cpp
      Message_Queue_T.cpp
      Module.cpp
      Obstack_T.cpp
      Pair_T.cpp
      RB_Tree.cpp
      Select_Reactor_T.cpp
      Singleton.cpp
      Strategies_T.cpp
      Stream.cpp
      Stream_Modules.cpp
      String_Base.cpp
      Svc_Handler.cpp
      Synch_T.cpp
      Task_T.cpp
      Task_Ex_T.cpp
      Template_Instantiations.cpp
      Test_and_Set.cpp
      Timeprobe_T.cpp
      Timer_Hash_T.cpp
      Timer_Heap_T.cpp
      Timer_List_T.cpp
      Timer_Queue_Adapters.cpp
      Timer_Queue_T.cpp
      Timer_Wheel_T.cpp
      Typed_SV_Message.cpp
      Typed_SV_Message_Queue.cpp
      Vector_T.cpp
  }

  Inline_Files {
    Bound_Ptr.i
    Handle_Gobbler.i
    Refcounted_Auto_Ptr.i
    ace_wchar.inl
  }

  Header_Files {
    os_include
    os_include/arpa
    os_include/net
    os_include/netinet
    os_include/sys
    ACE_export.h
    Array.h
    Bound_Ptr.h
    CORBA_macros.h
    Default_Constants.h
    Exception_Macros.h
    Global_Macros.h
    Handle_Gobbler.h
    Log_Priority.h
    Malloc_Base.h
    Method_Object.h
    Min_Max.h
    Null_Barrier.h
    Null_Condition.h
    Null_Mutex.h
    Null_Semaphore.h
    OS_Export.h
    OS_NS_macros.h
    Proactor_Impl.h
    Reactor_Impl.h
    Reactor_Timer_Interface.h
    Refcounted_Auto_Ptr.h
    SStringfwd.h
    Static_Object_Lock.h
    Strategies.h
    Svc_Conf.h
    Svc_Conf_Tokens.h
    Synch_Traits.h
    Timer_Queuefwd.h
    UPIPE_Addr.h
    Version.h
    ace_wchar.h
    config-WinCE.h
    config-all.h
    config-borland-common.h
    config-lite.h
    config-minimal.h
    config-win32-borland.h
    config-win32-common.h
    config-win32-ghs.h
    config-win32-msvc-5.h
    config-win32-msvc-6.h
    config-win32-msvc-7.h
    config-win32-msvc.h
    config-win32-visualage.h
    config-win32.h
    config.h
    iosfwd.h
    post.h
    pre.h
    streams.h
    svc_export.h
  }

  Documentation_Files {
    README
    ../VERSION
  }
}
