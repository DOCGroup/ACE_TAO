Fri Oct 15 00:36:35 1999  Douglas C. Schmidt  <schmidt@mambo.cs.wustl.edu>

	* tests/Process_Manager_Test.cpp (main): Replaced
	  ACE_OS::exit(secs) with return secs so that Purify will be
 	  happy.

Thu Oct 14 14:30:06 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Process_Manager_Test.cpp: use u_int instead of
          bool.  Make ~Exit_Handler () public so that g++ doesn't
          complain about a private destructor with no friends.
          Commented out unused local variable child7.

Thu Oct 14 14:25:44 1999  Dave Madden <dhm@mersenne.com>

        * tests/Process_Manager_Test.cpp: fixed the memory leaks, and
          most of the "unused variable" warnings should be gone.
          I've added, but left commented out, ASSERTs for the child
          process' exit codes.  The reason is that, on Unix, the exit
          code contains extra information (exited, traced, stopped,
          signaled, etc.) that causes the exit code from wait() to be
          different from what the child's main() returned.

Wed Oct 13 20:23:58 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-WinCE.h: Added ACE_LACKS_ACE_TOKEN and
          ACE_LACKS_ACE_OTHER to reduce CE dll's footprint.

        * ace/Memory_Pool.cpp (ACE_Pagefile_Memory_Pool::map): The
          SECURITY_DESCRIPTOR and its management routines are only
          supported on NT.  Changed to pass a NULL security attribute on
          non-NT platforms (95, 98, CE.)

Wed Oct 13 10:50:39 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/run_tests.sh: use uname -s without checking to
          see if /bin/uname, etc., exist.  Redirect stderr to
          the sysname string.  It works.

Wed Oct 13 10:39:50 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h: ensure that ACE_THR_PRI_FIFO_DEF and
          ACE_THR_PRI_OTHER_DEF are defined on non-threaded platforms,
          to support application source code compatibility.

Wed Oct 13 10:11:47 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Malloc_Test.cpp: fixed preprocessor logic so that
          the test is neutered on LynxOS. [Bug 224]

Wed Oct 13 01:15:45 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Parse_Node.cpp: Made sure we don't try to duplicate a null
          string.  This was causing problem when the initialization string
          was missing from a service entry.  Thanks to Chris Hafey
          <chris@stentorsoft.com> for reporting this.

Tue Oct 12 15:05:12 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/run_tests.lst: Reenabed Dave Madden's new
          Process_Manager_Test so that we can see if it works on various
          platforms.

        * tests/Process_Manager_Test.cpp (main): Added a new one-button
          test for the ACE_Process_Manager.  Thanks to Dave Madden
          <dhm@mersenne.com> for contributing this test.

        * ace/Process_Manager.cpp (wait): Fixed a bug triggered by
          a process-specific wait.  Thanks to Dave Madden
          <dhm@mersenne.com> for contributing this fix.

        * ace/ACE.cpp (format_hexdump): Replaced

          textver[i] = (c < 0x20 || c > 0x7e) ? '.' : c;

          with

          textver[i] = isprint (c) ? c : '.';

          since this is more portable.  Thanks to Jim Rogers
          <jrogers@viasoft.com> for reporting this.

        * ace/Memory_Pool.i: Changed implementation to
          round_to_chunk_size() to ACE::round_to_pagesize(), which appears
          to be the "Right Thing"[TM] on NT.

Tue Oct 12 14:49:00 1999  Ruibiao Qiu  <ruibiao@cs.wustl.edu>

        * ace/ATM_Stream.h
        * ace/ATM_Acceptor.h: Moved #pragma after ACE include
          so that g++ would not give warning messages.  Thanks to
          Dr. David L. Levine <levine@cs.wustl.edu> for pointing this out.

Tue Oct 12 14:26:15 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-qnx-neutrino.h: added #define of
          ACE_THR_PRI_FIFO_DEF.  This allows us to easily set a thread
          priority (10) that's lower the the TCP service threads (17) in
          tests.  Thanks to Sean Boudreau <seanb@qnx.com> for suggesting
          that.

Tue Oct 12 14:16:18 1999  David L. Levine  <levine@cs.wustl.edu>

        * etc/purify.solaris2: added some more UMR suppressions
          for SunOS 5.7 (with Sun CC 4.2).

Tue Oct 12 13:22:22 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_sunos5.6_sparc_sunc++_4.2.GNU:
          removed to avoid confusion.  It just included
          platform_sunos5_sunc++.GNU; that should be used directly,
          instead.  Thanks to Dan Butler <daniel.g.butler@boeing.com>
          for reporting this.

Tue Oct 12 12:40:41 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/Memory_Pool.i:
        * ace/Memory_Pool.cpp:
          Fixed some errors in Win32 specific code.

Tue Oct 12 12:20:08 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-subsets.html: updated status, and added some
          missing motivation sections.  Thanks to Wei Chiang
          <wei.chiang@nokia.com> for reporting that the document
          was out-of-date.

Tue Oct 12 11:57:21 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.6-sunc++-4.x.h: removed because it
          #included a header that no longer exists in the
          distribution.  ace/config-sunos5.6.h should be used
          instead.  Thanks to Dan Butler <daniel.g.butler@boeing.com>
          for reporting this.

Tue Oct 12 11:48:00 1999  Ruibiao Qiu  <ruibiao@cs.wustl.edu>

        * ace/ATM_Addr.{h,cpp,i}:
        * ace/ATM_Stream.{h,cpp,i}:
        * ace/ATM_Connector.{h,cpp,i}:
        * ace/ATM_Acceptor.{h,cpp,i}:
        * ace/ATM_QoS.{h,cpp,i}:
        * ace/ATM_Params.{h,cpp,i}: Added support for Fore ATM on Windows
          platform.  Enabled when ACE_HAS_ATM and ACE_HAS_FORE_ATM_WS2
          are defined.

        * ace/config-win32-common.h: Added needed header include when
          ACE_HAS_FORE_ATM_WS2 is defined.

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp: Included ATM_* classes files in the porject files.

        * examples/IPC_SAP/ATM_SAP/CPP-client.cpp
        * examples/IPC_SAP/ATM_SAP/CPP-server.cpp: Changed example codes
          so that they can be run on Windows.  They are now non-interactive,
          and show data rates at each end.

        * examples/IPC_SAP/ATM_SAP/CPP_client.dsp
        * examples/IPC_SAP/ATM_SAP/CPP_server.dsp
        * examples/IPC_SAP/ATM_SAP/ATM_SAP.dsw: Created MSVC project files
          and workspace file for these examples.

Tue Oct 12 11:37:56 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/run_tests.sh: export ACE_ROOT if setting it.

Tue Oct 12 11:32:23 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/run_tests.pl,run_tests.sh: don't print "Skipping test
          on this platform" message for DISABLED tests.  Set
          ACE_ROOT to .. if it wasn't set.

        * tests/run_tests.sh: don't invoke uname command on
          Neutrino, because it's not supported.

Tue Oct 12 08:53:52 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Message_Queue.cpp (enqueue): <cur_bytes_> and <cur_length_>
          should increase by total_size() and total_length() respectively.
          And in dequeue(), <cur_length_> should decrease by
          total_length().  Thanks to Christopher Kohlhoff
          <chris@kohlhoff.com> for pointing this out.

Tue Oct 12 10:00:52 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Memory_Pool: Added a new memory pool that uses the Win32
          page file.  Thanks to Dieter Quehl for contributing this.

Mon Oct 11 17:07:46 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Message_Queue.cpp (enqueue): ACE fails to compile because of
          a for-loop scoping problem in the method
          ACE_Message_Queue_NT::enqueue.  Thanks to Christopher Kohlhoff
          <chris@kohlhoff.com> for reporting this.

        * ace/Activation_Queue.cpp (enqueue): Changed the
          creation of the ACE_Message_Block so that it uses the sizeof
          (ACE_Method_Request) to ensure the queue's flow control
          mechanism works properly.  Thanks to Dan Gilboa
          <dgilboa@qualcomm.com> for reporting this.

Mon Oct 11 17:36:15 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

          Thanks to Wei Chiang <wei.chiang@nokia.com> for the following
          patches.

        * ace/Thread_Manager.cpp (kill_thr):  Chorus only supports
          SIGTHREADKILL here.  Made sure we remove the killed thread from
          the managed thread list.

        * tests/Thread_Manager_Test.cpp: Changed the test to check for
          cooperative cancellation even if the platform doesn't support
          sending signaling to a specific thread.  On Chorus, this signal
          has to be SIGTHREADKILL.

Mon Oct 11 17:35:51 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-kcc-common.h: Added
          ACE_HAS_STD_TEMPLATE_SPECIALIZATION for KCC.

Mon Oct 11 12:05:31 1999  Wei Chiang <wei.chiang@nokia.com>

        * ace/Signal.cpp (ACE_Sig_Action ctors),
          ace/Select_Reactor_T.cpp (register_handler,remove_handler):
          disabled signal-related operations on Chorus.

Mon Oct 11 10:15:28 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/check_build_logs: suppress some Purify warnings.  Purify
          says that it's ignoring the problem; so will we.

Mon Oct 11 10:09:56 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE version 5.0.6 released.

Mon Oct 11 07:34:34 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.h: Removed a stray '>' that was causing OS.h not to
          compile.  Thanks to Marvin Allen Wolfthal <maw@ziplink.net>
          for reporting this.

Fri Oct  8 07:47:08 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.h: Removed the word "defined" since that was breaking
          SunCC 4.2.  Thanks to Andy Gokhale for reporting this.

Thu Oct 07 18:47:03 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/OS.h (ACE_NOTSUP): Added new macro.  This one is similar to
          ACE_NOTSUP_RETURN, except that there is no return value (similar
          to ACE_GUARD and ACE_GUARD_RETURN).

        * ace/Message_Queue (message_length): Returns the total length on
          the queue, i.e., sum of the message block lengths.

          Since manual changes to these stats might be necessary,
          specially when queued message blocks change size or lengths
          (without dequeuing the messages from the queue), we also provide
          methods for setting these stats.

        * ace/Message_Block.i (total_length): This new method is similar
          to <total_size> except that it deals with the length of the
          message blocks and not the size of the message blocks.  It
          returns the length of the message blocks, including chained
          message blocks.

Thu Oct  7 13:17:29 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ACE-INSTALL.html: Changed the word "compiler" to
          "linker".  Thanks to George Ball <george@jgserv.co.uk>
          for reporting this.

Thu Oct 07 11:35:13 1999  Steve Huston  <shuston@riverace.com>

        * ace/streams.h: Added #include <strstream.h> in the non-Win32
          section of the !ACE_HAS_STANDARD_CPP_LIBRARY section, for systems
          like Solaris w/ SC4.2.

Wed Oct  6 21:36:18 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Log_Msg.cpp (log): Forgot to remove a stray %s.
          Thanks to Kitty Krishnakumar <kitty@neo.shinko.co.jp> for
          reporting this.

Wed Oct 06 16:42:56 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/Reactor/Misc/Misc.dsw:
        * examples/Reactor/Misc/demuxing.dsp: Added the demuxing test
          project file.

        * examples/Reactor/Misc/test_demuxing.cpp: MS Windows only
          supports a limited set of signals.  Made sure we use them in the
          examples.

Wed Oct 06 16:20:28 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/CDR_File_Test.cpp (run_test): when reading, ensure
          that the message block has sufficient space to properly
          align the 64-bit double on LynxOS and Neutrino.  Thanks
          to Jeff for helping to track this down, and for Carlos
          for providing the fix.

Wed Oct  6 15:40:11 1999  Vishal Kachroo  <vishal@cs.wustl.edu>

        * ace/OS.i : Initialised the qos_len variable to sizeof (QOS)
          within the ioctl () method for ACE_SIO_GET_QOS.

        * ACE_wrappers/examples/QOS/client.cpp:
        * ACE_wrappers/examples/QOS/server.cpp: Added a test for the
          ACE_SIO_GET_QOS io control code. The Sending and Receiving
          QOS flowspec parameters are extracted and printed for both the
          sender and receiver using this control code.

Wed Oct  6 08:36:17 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.h: Changed

          #   if defined (__SUNPRO_CC < 0x500)

          to this

          #   if defined (__SUNPRO_CC < 0x500) || ((__SUNPRO_CC == 0x500 && > __SUNPRO_CC_COMPAT == 4))

          to work around compilation problems with Sun CC 5.0 when used in
          Sun CC 4 compatibilty mode.  Thanks to Erik Koerber
          <erik.koerber@siemens.at> for this fix.

        * ace/Log_Msg.cpp (log): Added support for a %m option that
          behaves like strerror() rather than perror().  Thanks to Kitty
          Krishnakumar <kitty@neo.shinko.co.jp> for this feature.

        * ace/OS.i (event_wait): We need to put the call to
          ACE_OS::cond_wait() in a loop to guard against spurious wakeups.
          Thanks to Sergey Nemanov <sergey.nemanov@intel.com> and Vladimir
          Kondratiev <vladimir.kondratiev@intel.com> for reporting this
          and suggesting a fix.

        * tests/Malloc_Test.cpp: Don't run the Malloc_Test on LynxOS.

        * tests/MM_Shared_Memory_Test.cpp: Fixed the code so that it'll
          compile correctly on platforms that lack fork(), such as
          VxWorks.  Thanks to David Levine for reporting this.

Tue Oct  5 16:17:57 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/MM_Shared_Memory_Test.cpp (spawn): Make sure to
          delete the synchronizer in both the parent and the child
          processes since otherwise we get a memory leak!  Thanks to David
          Levine for pointing this out.

        * tests/Task_Test.cpp (main): Make sure to delete the thread hook
          before exiting the process to avoid a memory leak.  Thanks to
          David Levine for pointing this out.

Tue Oct  5 15:04:03 1999  Douglas C. Schmidt  <schmidt@danzon.cs.wustl.edu>

        * ace/[Active_|Hash_]Map_Manager: Modified these classes so that the
          find() methods are all "const".  Thanks to Jody Hagins
          <jody@atdesk.com> for reporting this.

Tue Oct 05 21:58:06 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-WinCE.h: Reenabled ACE_HAS_MFC.  This should be the
          most portable configuration.  If you insist not to use MFC at
          all, define ACE_HAS_MFC=0 in your config.h file.

        * ace/OS.h:
        * ace/OS.cpp (set_window): Removed the MFC specific set_window
          method so we can use ACE in both MFC and non-MFC applications.

        * ace/INET_Addr.h: Applied ASYS_TEXT to several default
          string literals.

        * ace/DLL.h:
        * ace/DLL.cpp: Changed the type of <dll_name> in ctor and the open
          method to ASYS_TCHAR to minimize string conversion.

        * tests/DLL_Test.cpp: Applied ASYS_TEXT to the name of the DLL
          file.

Tue Oct  5 19:01:43 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/CDR_Stream.i:
          Changed << for bounded (w)strings to marshal only 'length'
          bytes, instead of 'bound' bytes. The previous method could
          cause an access violation if the string fits near the end
          of a system page, but the 'bound' extends beyond it. Thanks
          to Brian Wright <bwright@paladyne.com> for reporting this
          bug.

Mon Oct  4 08:31:58 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * examples/Shared_Malloc/test_persistence.cpp: Enhanced the
          list_employees() method so that it'll print the contents of
          ACE_Malloc<> in FIFO and LIFO order.

        * ace/Malloc[_T].{h,cpp}: Added a new iterator for ACE_Malloc<>
          called ACE_Malloc_FIFO_Iterator, which prints out the
          ACE_Name_Node entries in FIFO order.  In addition, renamed
          ACE_Malloc_Iterator to be ACE_Malloc_LIFO_Iterator because it
          prints the ACE_Name_Node entries in LIFO order.  Also added a
          #define of ACE_Malloc_Iterator to ACE_Malloc_LIFO_Iterator to
          ensure backwards compatibility.  Thanks to Wenli Bai
          <bai@gsao.med.ge.com> for this enhancements.

        * tests/MM_Shared_Memory_Test.cpp: Fixed the test so that it should
          work correctly for platforms that use either processes or
          threads.  Also, make sure to call remove() on the
          ACE_Process_Semaphore so that stray semaphores aren't left
          around.  Thanks to David Levine for helping to track this down.

        * ace/Synch.h: Updated the documentation for the
          ACE_Process_Semaphore destructor to indicate that it doesn't
          remove the semaphore.  Instead, you must call remove()
          explicitly.  Thanks to David Levine for helping to track this
          down.

        * ace/Malloc_T.cpp (print_stats): Added a cast for the ACE_LOCK to
          work around the fact that the print_stats() method is const.
          Thanks to Jean-Marc Strauss <jms97@club-internet.fr> for
          reporting this.

        * ace/INET_Addr.cpp (set):  Added ACE_UNUSED_ARG
          so the compiler won't complain about the protocol paraemter in
          parts of the code where it's not used.

        * tests/MM_Shared_Memory_Test.cpp (spawn): Added ACE_UNUSED_ARG
          so the compiler won't complain about process_synchronizer in
          parts of the code where it's not used.

Sun Oct  3 12:47:35 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Process_Mutex_Test.cpp (main): Renamed the confusing "server" stuff
          to "parent" where appropriate.

        * tests/MM_Shared_Memory_Test.cpp: Don't call ACE_OS::exit()
          in the child since this won't clean up the Object_Manager
          correctly.  Thanks to David Levine for reporting this.  However,
          we'll still have two "end" statements, but only one begin
          statement, which is confusing.  I'm not sure how to solve this,
          but it won't break anything.

        * tests/MM_Shared_Memory_Test.cpp: Oops, only do the
          acquire()/release() of the Process_Semaphore if we have fork()!

        * tests/MM_Shared_Memory_Test.cpp: Added an ACE_Process_Semaphore
          so we no longer need to sleep in order to wait for the server to
          be initialized.

        * tests/Process_Strategy_Test.cpp (main): Switched the processes
          in which the client and server are run so that the server is now
          run in the parent and the client is run in the child.  This made
          it possible to remove the ACE_OS::sleep(1) call because the
          acceptor is created before the fork, so the client should always
          be able to connect to the server, even if the server isn't
          scheduled to run again before the client.

        * tests/Process_Mutex_Test.cpp,
        * tests/SV_Shared_Memory_Test.cpp:
          Fixed some improper style problems with these tests.

Sun Oct 03 10:34:19 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/SV_Shared_Memory_Test.cpp (main): only delete
          parent_mutex and parent_synch in the parent, to prevent
          double deletion by the child. [Bug 91]

Sun Oct 03 10:21:15 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/SV_Shared_Memory_Test.cpp: create parent_mutex and
          parent_synch before forking, to avoid race condition between
          their creation in the parent and use in the child.  This
          allowed us to remove the sleep (1) in the child. [Bug 91]

Sun Oct 03 10:17:21 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (ACE_Thread_Adapter::invoke): added casts of
          func (to ACE_THR_FUNC) and its return value (to void *)
          so that this function will compile for VxWorks and pSOS.

Sat Oct  2 18:54:38 1999  Vishal Kachroo  <vishal@cs.wustl.edu>

        * ace/SOCK_Dgram_Mcast.{cpp,h}: Added ACE_Protocol_info as a
          parameter to the QoS enabled private method subscribe_ifs. This
          allows the use of ACE_Protocol_Info->iAddressFamily in the call
          to join_leaf (). Thanks to Vidya Narayanan
          <CVN065@lmpsil02.comm.mot.com> for pointing this out.

Sat Oct  2 16:20:33 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-kcc-common.h: The macro __KCC_VERSION was not
          available in 3.3e so we switched to check the existence of this
          macro to decide the availability of auto_ptr::reset().  Thanks
          to Ossama for noticing this bug.

Sat Oct  2 16:10:26 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/config-linux-common.h:

          Linux (glibc 2.x) has lseek64() so define ACE_HAS_LLSEEK.

        * ace/OS.i (llseek):

          Removed external declaration for llseek() on Linux.  Linux uses
          lseek64(), not llseek().  Updated macro checks to use lseek64()
          for Linux.  [Bug 276]

Sat Oct  2 16:01:50 1999  Douglas C. Schmidt  <schmidt@mambo.cs.wustl.edu>

        * ace/INET_Addr.h (ACE_INET_Addr): Removed an unnecessary "protocol"
          string.  Thanks to Jeff and Ossama for reporting this.

Sat Oct  2 12:50:43 1999  Douglas C. Schmidt  <schmidt@danzon.cs.wustl.edu>

        * ace/INET_Addr: Previous, it was not possible to specify the
          proto argument in the ACE_INET_Addr constructor because it was
          hard-coded to "tcp".  Now, this can be passed as a parameter.
          Thanks to Jaymes Galvin <galvinj@agcs.com> for this suggestion.

Fri Oct  1 14:44:12 1999  Vishal Kachroo  <vishal@cs.wustl.edu>

        * ace/OS.h : Added the Winsock2 GQOS related #defines to this
          file. The #defines are limited to the ones used in the ACE QOS
          example.

        * ACE_wrappers/examples/QOS/server.cpp:
        * ACE_wrappers/examples/QOS/client.cpp:
        * ACE_wrappers/examples/QOS/QosEvent.h:
          Changed the QOS example to use the ACE flags instead of Windows
          flags. Removed the #defines from the example and moved them to
          OS.h

Fri Oct  1 13:14:17 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ChangeLog: Added more Borland support.  Thanks to
          Christopher Kohlhoff <chris@kohlhoff.com> for this.

Fri Oct 01 13:05:24 1999  David L. Levine  <levine@cs.wustl.edu>

        * Makefile: move instructions for creating kits down in
          the file, and added note that they're intended for
          ACE+TAO developers and maintainers, only.  Thanks to
          Rick Hess <rick.hess@lmco.com> for pointing out that
          that wasn't clear.

Fri Oct 1 08:23:36 1999  Joe Hoffert  <joeh@cs.wustl.edu>

        * ace/ATM_Connector.{h,i}: Added add_leaf method and functionality.

Thu Sep 30 16:55:41 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Task_Test.cpp (main): Added a short example illustrating
          how the new ACE_Thread_Hook mechanism works.

        * ace/OS.cpp: Added new support for the thread_hook to
          ACE_OS_Object_Manager.

        * ace/OS.cpp (invoke): Added support for a virtual "start_hook()"
          method in a new ACE_Thread_Hook class.  This makes it possible
          for users to subclass ACE_Thread_Hook perform initialization
          operations before the thread entry point method is called back.
          Thanks to Chris Hafey <chris@stentorsoft.com> for this
          suggestion.

Thu Sep 30 20:40:42 1999  Marina Spivak  <marina@cs.wustl.edu>

        * bin/run_all_list.pm:
          Added TAO/examples/Load_Balancing demo to the list of daily
          executed tests.

Thu Sep 30 11:36:20 1999  Charles Frasch  <cfrasch@spawar.navy.mil>

        * include/makeinclude/wrapper_macros.GNU: in checks for
          ACE_HAS_GNUG_PRE_2_8, use $(notdir $(CXX)) to properly
          handle case where CXX has a directory part.

Thu Sep 30 11:13:14 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Pipe.cpp (open): Don't use socketpair() for pipes on LynxOS
          since this doesn't work for some reason.  Instead, use the
          socket emulation.  Thanks to David Levine for reporting this.

Thu Sep 30 10:30:00 1999  Kirthika Parameswraan <kirthika@cs.wustl.edu>

        * ace/README:  Added documentation for:
          ACE_HAS_BROEN_EXTENDED_TEMPLATES Thanks to Fritz Bosch
          <FBosch@accatel.de> for suggesting this.

Thu Sep 30 10:07:38 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Strategies_T.h: Added

          #define ACE_Refcounted_Hash_Recyclable ARHR

          to work around broken linkers that can't handle long
          symbol names.  Thanks to Fritz Bosch <FBosch@acatel.de>
          for this suggestion.

Wed Sep 29 20:58:45 1999  Darrell Brunsch  <brunsch@cs.wustl.edu>

        * ace/config-win32.h:
        * ace/config-win32-common.h:
          Winsock2.h wasn't being included before my checks of the
          winsock version, so I moved it to -common.h instead.

Wed Sep 29 16:40:45 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

          The following changes fix the Service_Configurator on Windows
          CE.  Thanks very much to Kirthika for her help on making this
          work.

        * tests/WinCE/DLL_Test.dsp:
        * tests/WinCE/ce_tests.dsw: Added the DLL_Test project.

        * ace/ace_ce_dll.dsp:  Added DLL.cpp into the project.

        * ace/Service_Types.i (name):
        * ace/Service_Object.i (name): Changed to use ACE::strnew to
          duplicate the name string.

        * ace/Parse_Node.cpp: Changed all the ACE_*_Node classes to make
          copies of all string variables and release when they get
          destructed.  This is necessary because on Windows CE, the
          strings passed into these classes are very short-lived (we use
          ASCII to UNICODE conversion macros which make temporary copies
          only.)  The change shouldn't affect the performance of ACE since
          parsing the svc.conf entries should never be in the critical
          path.

        * ace/Parse_Node.h: The comments for <must_delete_> in
          ACE_Location_Node is completely outdated.  It now specifies
          whether the Service_Object generated by this Location_Node
          should be removed or not when it is no longer in use, not the
          <pathname_>.

        * ace/OS.i (access): Added a temporary implementation for CE here.
          ACE::ldfind check the file accessibility using this function.
          Currently, we hard-code the method to check for read-access only
          (i.e., the argument <amode> is not used) which needs to be
          fixed.

        * ace/OS.cpp (fopen): Check for invalid handle and return NULL if
          handle is invalid on CE.  Otherwise, CE programs get totally
          confused.

        * ace/Malloc.cpp (dump): I added some more operations in the dump
          methods but forgot to make them UNICODE friendly.

        * ace/config-WinCE.h: Added the macro definition for
          ACE_DEFAULT_LD_SEARCH_PATH since CE doesn't support environment
          variables at all and we need to hard-code the search path on
          CE.

        * ace/README: Added documentation for ACE_DEFAULT_LD_SEARCH_PATH.

        * ace/ACE.cpp (ldfind): When the macro ACE_DEFAULT_LD_SEARCH_PATH is
          defined, we should use the hard-coded search path instead of
          trying to use getenv to acquire the search path.

        * examples/Service_Configurator/Misc/Timer_Service.cpp:
        * examples/Service_Configurator/Misc/Timer_Service.h: Made the
          services UNICODE and CE friendly by applying ASYS_TEXT and using
          ASYS_TCHAR liberally.

        * examples/Service_Configurator/Misc/README: Added instructions on
          how to run the example on Windows CE.

Tue Sep 28 15:46:23 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/OS.i: Fixed some GQOS stuff for the older versions of
          WinSock 2.

        * ace/config-win32.h: Uses a better detection technique to
          figure out whether we are compiling with WinSock 2's newer
          headers or not.

Tue Sep 28 14:48:26 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/WFMO_Reactor.cpp (handler): Implemented previously
          unimplemented function.

Tue Sep 28 15:02:33 1999  Vishal Kachroo  <vishal@cs.wustl.edu>

        * ace/OS.i (ioctl): Added the #if def ACE_HAS_WINSOCK2_GQOS for
          the extra fields in struct _flowspec.

Mon Sep 27 19:16:34 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.i (timezone): SunOS 4 needs to use gettimeofday() to find
          the current timezone.  Thanks to Kamen Penev
          <penev@earthlink.net> for reporting this fix.

Mon Sep 27 19:30:54 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * THANKS:
          Added Dennis to the hall of fame list.

Mon Sep 27 17:12:51 1999  Vishal Kachroo  <vishal@cs.wustl.edu>

        * ace/OS.i:
        * ace/OS.h:
          Added an overloaded ioctl () that is used when the io control
          code is one of SIO_SET_QOS or SIO_GET_QOS.  Thanks to Vidya
          Narayanan <CVN065@lmpsil02.comm.mot.com> for help with this
          feature.

        * ACE_wrappers/examples/QOS/server.cpp:
        * ACE_wrappers/examples/QOS/client.cpp:
          Made changes to the usage of ioctl () in the above files to
          reflect the corresponding changes in ACE.

Mon Sep 27 13:11:02 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/config-sunos5.5.h: Wrap the define statement in a
          conditional that prevents declaration of #define
          ACE_HAS_STL_QUEUE_CONFLICT for gcc 2.95.  We don't know if this
          is a problem in newer versions of Solaris but this will get rid
          of it for 5.5.1.  Thanks to Siegurd Weber <siegurdw@hotmail.com>
          for this fix.

Mon Sep 27 16:56:10 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.cpp:
          ACE_OS::cond_init() has two completely separate versions, i
          forgot to fix the NT version too, thanks to Vishal for pointing
          this out.

Mon Sep 27 16:05:35 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tests/Object_Manager_Test.dsp:
        * tests/run_tests.bat:
        * tests/tests.dsw:
        * tests/version_tests/Object_Manager_Test.dsp:
        * tests/version_tests/version_tests.dsw:
          Added Object_Manager_Test support on Win32 and MSVC.

Mon Sep 27 15:23:47 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.h:
        * ace/OS.i:
          Fixed overloading problems for cond_init() under LynxOS and
          Chorus, thanks to John K. Black <jblack@s22ct.npt.nuwc.navy.mil>
          for reporting the problem and providing a fix.
          This fixes [BUGID:342]

Mon Sep 27 13:11:02 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SString.h: Added the default value for the ACE_CString
          method set (const char *, int = 1).  We had removed the default
          values from both the set() methods in order to remove an
          ambiguity.  However, it appears that it's ok to give just this
          method a default value.  Moreover, this prevents existing code
          from breaking.  Thanks to Giga Giguashvili
          <gregoryg@ParadigmGeo.com> and Ivan Murthy
          <Ivan.Murphy@med.siemens.de> for reporting this.

Sat Sep 25 17:09:57 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ACE version 5.0.5 released.

Fri Sep 24 17:20:41 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-kcc-common.h: KCC does support auto_ptr<T>::reset
          after 3.4.  Made sure we don't define ACE_AUTO_PTR_LACKS_RESET
          for newer version of KCC.  Thanks to Ossama for reporting the
          problem.

Fri Sep 24 08:59:13 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/config-sunos4-g++.h: Added ACE_HAS_DIRENT.
          Thanks to Kamen Penev <penev@earthlink.net> for reporting this.

        * tests/Handle_Set_Test.cpp (test_boundaries): Added some casts
          and parens so that the code will compile with MSVC++ 5.0.
          Thanks to Carlos O'Ryan for reporting this.

        * examples/Connection/blocking/SPIPE-{acceptor,connector}.cpp:
          Reformatted some of the code.

Fri Sep 24 08:27:28 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.*,Synch.cpp: reverted changes of:

          Thu Sep 23 11:13:38 1999  Wei Chiang <wei.chiang@nokia.com>

          because Bug 342 proposes a more general fix.

Thu Sep 23 19:02:47 1999  Vishal Kachroo  <vishal@cs.wustl.edu>

        * examples/QOS/server.cpp (main):
        * examples/QOS/server.cpp (main):

          Removed the instantiation of ACE_OS_Object_Manager from
          the above files. This is done automagically in ACE.

        * examples/QOS/Sender_QOS_Event_Handler.h:
          Fixed a warning regarding the #def of MY_DEFPORT.

Thu Sep 23 14:12:58 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * bin/auto_compile:
          It was reporting success even when things failed.

Thu Sep 23 11:13:38 1999  Wei Chiang <wei.chiang@nokia.com>

        * ace/OS.*,Synch.cpp: Chorus compiler (g++) seems to be
          confused by "int" and "int&" in overloaded operations.
          A dummy variables to full Chorus compiler is added to
          cond_init (ACE_cond_t*, ACE_condattr_t&, LPCTSTR void*).

        * include/makeinclude/rules.bin.GNU,platform_chorus.GNU:
          updated to support linking of TAO executables for Chorus.

Wed Sep 22 19:30:49 1999  Randall Sharo <rasb@eci.esys.com>

        * ace/OS.i (sema_wait): on VxWorks, update tv to return
          the wait time. [Bug 339]

        * ace/Synch.h (ACE_Semaphore::acquire): updated comment
          to show that the absolute acquisition time is returned,
          not the elapsed time while waiting.

Wed Sep 22 16:59:19 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-win32-common.h: Added definition of
          ACE_AUTO_PTR_LACKS_RESET when ACE_HAS_STANDARD_CPP_LIBRARY is
          defined.  Thanks to Ossama for the quick hint.

Wed Sep 22 13:05:55 1999  Jim Rogers <jrogers@viasoft.com>

        * ace/Codeset_IBM1047.cpp: added #include "ace/inc_user_config.h"
          at the beginning, to properly pick up the ACE_MVS #define
          on MVS.

Wed Sep 22 11:20:39 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Basic_Types.h:  use u_long for ptr_arith_t, even
          with 64-bit ints, with Sun CC.  For unknown reasons,
          Sun CC 5.0 won't allow a reintepret cast of a 64-bit
          pointer to a 64-bit int (with -xtarget=ultra -xarch=v9a).
          Thanks to Giga Giguashvili <gregoryg@ParadigmGeo.com> for
          reporting this.

1999-09-21  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/Makefile
        * docs/tutorials/???/*
        Added a number of notes about proper usage of THR_NEW_LWP and
        THR_DETACHED.  Rebuilt all of the .html and .shar files.  Probably
        touched too many along the way but better safe than sorry.

Tue Sep 21 21:56:10 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-subsets.html: replaced absolute link to
          ../ACE-INSTALL.html#repo with a relative link.  And,
          added "typically" to the 25 percent size reduction figure.

Tue Sep 21 16:49:36 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * docs/ACE-subsets.html,ACE-INSTALL.html: Updated the document
          to point to the -frepo discussion.  Thanks to Timothy Canham
          <Timothy.Canham@jpl.nasa.gov> for motivating this.

Tue Sep 21 16:07:26 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-subsets.html: fixed size comparison chart; the
          For TAO entry was missing for SunOS 5.7/egcs 2.91.60.
          Thanks to Timothy Canham <Timothy.Canham@jpl.nasa.gov>
          for reporting this.

Tue Sep 21 15:34:16 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Service_Config.cpp (process_directives_i): Added a fix
          so that the Service_Config allows one level of reentrancy.
          Thanks to Jonathan Reis <reis@minniemouse.cemax.com> for
          suggesting this.

Tue Sep 21 11:35:57 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * examples/Threads/tss1.cpp (main): Need to rearrange where the
          explicit template instantiations are to make certain compilers
          happy.  Thanks to Jeffrey Franks <Jeffrey_Franks@i-o.com> for
          reporting the problem.

        * tests/Makefile.bor: Updated ACE tests makefile to build (almost)
          all of the tests.  Thanks to Christopher Kohlhoff
          <chris@kohlhoff.com> for this fix.

        * examples/Reactor/Misc/test_signals_2.cpp (main),
        * examples/Reactor/WFMO_Reactor/test_talker.cpp (STDIN_Handler):
          Preemptively fixed a couple more potential problems that might
          trigger the type of problem reported in the next entry below.

Tue Sep 21 11:41:33 1999  Ossama Othman  <othman@cs.wustl.edu>

        * apps/Gateway/Gateway/Event_Channel.cpp (open):
          Changed cast style to make gcc 2.95.1 happy.  Thanks to Jeffrey
          Franks <Jeffrey_Franks@i-o.com> for reporting the problems.

Tue Sep 21 11:25:32 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * bin/auto_compile:
          Print the most recent ChangeLog entries in the log file.
          Report successful builds by default.
          Reformat email to make Darrell happier, btw, he made most of
          these suggestions.

Tue Sep 21 11:13:21 1999  Steve Huston  <shuston@riverace.com>

        * ace/streams.h: Added includes/using to pick up strstream for
          istrstream, ostrstream classes when ACE_HAS_STD_CPP_LIBRARY is set.

Tue Sep 21 09:38:20 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/run_tests.lst: disabled Signal_Test. [Bug 309]

Tue Sep 21 08:33:21 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: use shared_libs=1, not shared_libs_only=1,
          to build shared libs on VxWorks.  That avoids missing libACE.a,
          for example, when linking other libraries.  Thanks to
          Uwe Landrock <Uwe.Landrock@med.siemens.de> for reporting this.

Mon Sep 20 10:52:37 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ACE-INSTALL.html: Clarified that the --unix flag must be given for
          Cygwin tools on Vxworks and NT.  Thanks to Uwe Landrock
          <Uwe.Landrock@med.siemens.de> for reporting this.

Mon Sep 20 10:34:51 1999  Steve Huston  <shuston@riverace.com>

        * ACE-INSTALL.html: Fixed broken link to Riverace's HP-UX info.
          Thanks to Doug for finding this.

Sun Sep 19 12:48:31 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Signal_Test.cpp: Only send outselves a signal if we're
          running the signal handler in a separate thread.

Sun Sep 19 10:39:30 1999  Douglas C. Schmidt  <schmidt@mambo.cs.wustl.edu>

        * tests/Signal_Test.cpp: Changed the type of shut_down indicator from
          ACE_Atomic_Op<> to sig_atomic_t.  This prevents some nasty
          deadlocks.

        * tests/run_tests.lst: Reenabled Signal_Test so we can see if it's
          still working.

        * tests/Signal_Test.cpp: Changed the worker_child() function so that
          just before its thread exits, it will sent its process a signal
          to the signal handling thread to dislodge it if it hasn't
          shutdown on its own accord yet.  Thanks to David Levine for
          reporting this.  This fixes [BUGID:309].

        * ACE/Handle_Set.h: Updated the documentation to point out that it's
          the *caller's* responsibility to ensure handles aren't
          added/cleared from the set if their values are larger than
          ACE_DEFAULT_SELECT_REACTOR_SIZE.  This behavior is necessary to
          ensure efficiency.

        * tests/Handle_Set_Test.cpp (test_boundaries): Fixed the test so
          that it will correctly ignore any handle values >=
          ACE_DEFAULT_SELECT_REACTOR_SIZE.  Thanks to David Levine for
          reporting this.  This fixes [BUGID:315].

Sat Sep 18 18:49:31 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/config-win32-borland.h:
          Undefined ACE_HAS_BROKEN_IMPLICIT_CONST_CAST as
          suggested by Christopher Kohlhoff <chris@kohlhoff.com>.

Sat Sep 18 17:31:52 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * examples/QOS: Improved the conformance to ACE programming
          guidelines a bit.

        * ace/Message_Block.cpp: Whenever a ACE_Message_Block accepts a
          ACE_Data_Block that was produced by someone else, it should
          verify that the allocator is non-NULL and if it is, then it
          should allocate the ACE_ALLOCATOR_RETURN on it.  Thanks to
          Pierre Grondin <pierre_grondin@srtelecom.com> for reporting
          this.

        * docs/tutorials/006: Fixed the activate() method so that it uses
          THR_DETACHED.  Thanks to Shafiek Savahl
          <shafiek.savahl@ericsson.com.au> for reporting this.

Sat Sep 18 16:17:34 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * bin/auto_compile:
          The messages include the build name in the subject line. Thanks
          to Darrell for suggesting this idea.

Sat Sep 18 12:00:28 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Message_Block.h: Changed all the ACE_Message_Block constructors
          so that the priority parameter defaults to
          ACE_DEFAULT_MESSAGE_BLOCK_PRIORITY, rather than 0.  Thanks to
          Detlef Becker for this suggestion.

        * ace/OS.h: Added a new macro called
          ACE_DEFAULT_MESSAGE_BLOCK_PRIORITY, which defaults to 0 but
          which can be overridden in a config.h file to a different value
          so it's possible to transparently choose default priorities that
          are > 0.  Thanks to Detlef Becker <Detlef.Becker@med.siemens.de>
          for this suggestion.

Fri Sep 17 19:49:15 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/Hash_Map_Manager_Test.cpp: Repositioned template
          instantiations and static variables to make the debug=0 build
          happy with SunCC5.0.

Fri Sep 17 15:34:46 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Malloc.cpp (dump):
        * ace/Malloc_T.cpp (dump): Enriched various dump methods a bit.

Thu Sep 16 17:53:57 CDT 1999  Loren Rittle  <rittle@rsch.comm.mot.com>

        * bin/update-ace+tao.sh: Added force option.

Thu Sep 16 17:43:02 CDT 1999  Loren Rittle  <rittle@rsch.comm.mot.com>

        * bin/update-ace+tao.sh: Improve portability.

Thu Sep 16 11:08:45 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Makefile:
        * tests/Makefile:

          Updated dependencies.

Wed Sep 15 21:42:08 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.h:
          Removed extra "typedef" in the declaration of the
          ACE_Protocol_Info structure, it was causing a large number of
          warnings in several platforms.

Wed Sep 15 15:08:33 1999  Ossama Othman  <othman@cs.wustl.edu>

        * bin/run_all_list.pm:

          Run the newly added TAO/tests/ORB_init/run_test.pl script when
          executing the ORB_init test.

Wed Sep 15 14:49:50 1999  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Hash_Map_With_Allocator_T.h:
        * ace/Hash_Map_With_Allocator_T.i: Added a method unbind () which
          unbinds an entry by only taking a key.

Wed Sep 15 13:19:36 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Config.cpp (process_directive): Added ace_yyrestart
          to make sure the service config parser has a valid buffer to
          work on.  Thanks to Lothar Werzinger
          <werzinger.lothar@krones.de> for reporting this.

Wed Sep 15 10:50:21 1999  James Hu <jxh@entera.com>

        * ace/TP_Reactor.{cpp,h,i} (mask_ops): Fixed a problem where
          cancel_wakeup would fail.  Since an event handler is suspended
          for the duration of the up-call, the wait_mask_ was being
          over-written by the suspend_mask_ when the event handler was
          resumed.  This fixes the problem by extending TP_Reactor with
          its own implementations of mask_ops that operate on both
          wait_mask_ and suspend_mask_.

Wed Sep 15 10:14:21 1999  Ossama Othman  <othman@cs.wustl.edu>

        * docs/exceptions.html:

          Corrected some ACE_TRY_THROW examples.  The exception being
          thrown must have a parameter list, even if it is empty
          (e.g.: ACE_TRY_THROW (CORBA::BAD_PARAM ());)

Tue Sep 14 22:10:24 1999  Kristopher Johnson <kjohnson@gardnersys.com>

        * ace/Process_Manager.cpp (wait): changed array index from
          i to idx.  Thanks to Dave Madden for confirming this fix.

          Reverted this change:
          Tue Sep 14 16:01:04 1999  Christopher Kohlhoff <chris@kohlhoff.com>
          because it's no longer necessary.

Tue Sep 14 21:00:45 1999  Vishal Kachroo  <vishal@cs.wustl.edu>

        * ace/OS.h: Added a typedef for ACE_Protocol_Info for non-Win32
          platforms. Defined it as a struct (with limited fields) instead
          of u_long because applications using ACE_Protocol_Info on
          non-Win32 platforms expect this to be a structure instead of a
          u_long.

        * ACE_wrappers/examples/QOS/Makefile: Added this for the test to
          compile on non-Win32 platforms.

        * ACE_wrappers/examples/QOS/server.cpp:
        * ACE_wrappers/examples/QOS/client.cpp:
        * ACE_wrappers/examples/QOS/QosEvent.h:
        * ACE_wrappers/examples/QOS/Sender_QOS_Event_Handler.cpp:

          Removed the last remains of win32isms from the test. The QoS
          test now compiles clean on non-Win32 platforms.

Tue Sep 14 17:49:33 1999  Luther J Baker  <ljb1@cs.wustl.edu>

        * ace/Arg_Shifter.cpp (get_the_parameter): removed an errant
          return 0;

Tue Sep 14 16:01:04 1999  Christopher Kohlhoff <chris@kohlhoff.com>

        * ace/Process_Manager.cpp (wait): moved declaration of
          loop index i out of the loop, because it is used outside
          the scope of the loop.

Tue Sep 14 15:03:21 1999  Ossama Othman  <othman@cs.wustl.edu>

        * bin/run_all_list.pm:

          Added ORB_init test to the list of tests to run.

        * configure.in:
        * configure:

          Do not define ACE_USE_POLL, even if system poll() works.

Tue Sep 14 11:02:06 1999  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Hash_Map_With_Allocator_T.h:
        * ace/Hash_Map_With_Allocator_T.cpp:Added a find () method that
          would lookup at the underlying Hash_Map_Manager_Ex to do the
          find.

Sat Sep 11 12:18:22 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Pipe.cpp: Make sure to use SOCK_STREAM rather than SOCK_DGRAM
          when creating a socketpair.  Thanks to Dave Madden for reporting
          this.

Mon Sep 13 13:31:23 1999  Luther J Baker  <ljb1@cs.wustl.edu>

        * ace/Arg_Shifter.cpp (get_the_parameter): continued -ORB parsing
          fixes. Allows one simple method to return a parameter value for
          defined flag is it exists.

Mon Sep 13 11:01:24 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/Shared_Malloc/test_persistence.cpp: Added comments on
          the use of scanf.  Thanks to Wenli Bai <bai@gsao.med.ge.com> for
          reporting the problem.

Sun Sep 12 19:23:51 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ACE version 5.0.4 released.

Sat Sep 11 12:18:22 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Process_Manager.cpp: Reverted the following change so that we
          just add a fake "friend" to keep G++ happy...  Also, fixed a
          typo where we should have allocated an ACE_Managed_Process
          rather than an ACE_Process.  Thanks to Dave Madden for reporting
          this.

        * ace/Process_Manager.cpp: Added the ACE_CLASS_IS_NAMESPACE method
          to ACE_Managed_Process to make G++ happy.  Also, removed the
          trailing '_' since we don't need this because we've prefixed
          "ACE_" already.

Fri Sep 10 16:58:34 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Malloc_T.cpp (open,shared_malloc): Added several placement
          new's if position independent malloc is enabled to avoid reading
          uninitialized memory.

Fri Sep 10 16:39:13 1999  Vishal Kachroo  <vishal@cs.wustl.edu>

        * examples/QOS/README:
        * examples/QOS/server.cpp:
        * examples/QOS/client.cpp:
        * examples/QOS/Sender_QOS_Event_Handler.h:
        * examples/QOS/Sender_QOS_Event_Handler.cpp:

          Removed the Win32-isms from the above files and used cleaner ACE
          interfaces. Added a README file that describes the test.

Fri Sep 10 16:38:51 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/WinCE/*.dsp: VC 6 changed all the dsp files format.

Fri Sep 10 11:20:47 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/SOCK_Acceptor.h,
          ace/SOCK_Connector.h: Updated the documentation to clarify what
          happens wrt blocking vs. non-blocking connects and accepts.
          Thanks to Jose Rubio <jrubio@tr.comm.mot.com> for motivating
          this change.

Thu Sep  9 16:27:56 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Process_Manager,
          ace/Process: Added some new patches from Dave Madden to obtain
          greater control over the spawn() behavior.

Fri Sep 10 14:30:17 1999  Vishal Kachroo  <vishal@cs.wustl.edu>

        * ace/SOCK_Dgram_Mcast.i:
        * ace/SOCK_Dgram_Mcast.h:

          Added two send () functions using overlapped I/O to the
          ACE_SOCK_Dgram_Mcast class. These simply call the parent
          class functions with the same signature. The recv () functions
          need not be added as there is currently no recv () function
          within SOCK_Dgram_Mcast class to hide any parent class recv ()
          functions.

Fri Sep 10 12:24:17 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * THANKS:
          Added Joerg Pommnitz to the list of contributors.

Thu Sep  9 22:48:56 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/config-hpux-10.x-hpc++.h:
        * ace/config-hpux-11.x-hpc++.h:
          Fixed spelling of ACE_PREPROCESSOR_ARGS to
          ACE_CC_PREPROCESSOR_ARGS.

Thu Sep  9 18:22:21 CDT 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Future.cpp:
          HP/aCC was giving bogus warning about function without a return
          statement (the function only has a throw).

Thu Sep 09 14:56:29 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: we now fully support QNX Neutrino 2.0.

        * ACE-INSTALL.html: expanded repo=1 discussion. [Bug 248]

Thu Sep 09 13:21:03 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/ace_ce.dsw:
        * ace/ace_ce_dll.dsp: Changed to use the project file format for
          CE Toolkit for VC 6.

        * ace/config-WinCE.h: Added some macros definitons for POSIX error
          codes.  They are removed for Palm-size CE v2.01.  This
          configuration is still not working because its compilers don't
          support placement new, which I don't know how to work around.

        * ace/Process_Manager.cpp (wait): Applied ASYS_TEXT macros.

        * ace/OS.cpp (init,fini): Applied ACE_TEXT macros around error
          message print out.
          (print_error_message): Added a WinCE specialized
          implementation.

Thu Sep 09 12:45:06 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-qnx-neutrino.h: added ACE_HAS_SIGISMEMBER_BUG.
          Sigset_Ops_Test passes with that.

Thu Sep 09 12:31:51 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Handle_Set_Test (handle_vector[]):
          limit the maximum handle in handle_vector to 31, 63, 127, and
          254 if ACE_DEFAULT_REACTOR_SIZE is less than or equal to
          32, 64, 128, and 256, respectively. [Bug 315]

Thu Sep  9 09:39:46 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * etc/purify.solaris2: Added suppression for MLK due to OS accept
          call. [Bug 227]

Thu Sep 09 09:24:29 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/run_tests.lst: disabled Signal_Test. [Bug 309]

Thu Sep  9 08:46:58 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Lazy_Map_Manager_Test.cpp (main): ACEified this a bit
          and fixed a typo for the argv argument in main().

        * Updated the ACE-mail.html file to put the *-request addresses
          first.  Thanks to Lorin Hochstein <lmh@xiphos.ca> for this
          suggestion.

Wed Sep 08 23:01:22 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/Service_Configurator/Misc/Timer_Service.h: Added
          ACE_Svc_Export specifiers.

        * examples/Service_Configurator/Misc/Misc.dsw:
        * examples/Service_Configurator/Misc/Timer.dsp: Added a new
          project file for the dll file.

Wed Sep 08 22:19:47 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-qnx-neutrino.h: added some magic to allow
          compilation to succeed when optimization is enabled,
          for x86 targets.  The egcs 1.1.2 string.h #includes
          x86/string.h, which has anti-social #defines for
          memcmp, memcpy, and memset.  Therefore, they can't be
          used as C++ member functions, such as in ACE_OS.  The
          hack is to disable optimization just when #including
          string.h.

        * include/makeinclude/platform_qnx_neutrino.GNU: default
          both optimize and repo to 1.

Wed Sep  8 17:25:07 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.h (ACE_FACTORY_DEFINE): It shouldn't be necessary
          to use ACE_dynamic_cast() or ACE_static_cast() for the
          ACE_FACTORY_DEFINE macro because ACE_Service_Object's destructor
          is virtual.  Thanks to Carlos for pointing this out.

Wed Sep  8 16:51:45 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Acceptor.cpp (handle_close): Removed a unnecessary check
          for <concurrency_strategy_> which was causing UMR to occur.

Wed Sep 08 16:48:55 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/wrapper_macros.gnu (purify): moved
          -ignore-signals option to tests/Makefile, because that's
          where it's needed.

        * tests/Makefile (purify): added SIGHUP and SIGTERM to
          -ignore-signals, to prevent warnings from Signal_Test.
          [Bug 309]

Wed Sep  8 15:58:07 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Log_Msg_Test.cpp (test_ostream): Make sure to add 1
          to the buffer we allocate dynamically so we can put a NUL at the
          end of it!  Thanks to David Levine for reporting this. [Bug 312]

        * examples/Service_Configurator/Misc/main.cpp (main): Changed the
          test of the -f Service Configurator option so that it links two
          different svc.conf files to avoid reentrancy problems.

        * examples/Service_Configurator/Misc/svc.conf: Revised this
          svc.conf file (and the application) to illustrate the use of
          both static *and* dynamic service.  Thanks to Amir Bahmanyari
          <amir@peakstone.com> for motivating this.

Wed Sep  8 14:05:00 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Log_Msg.cpp: Shifted the instantiations to the top to keep
          SunCC5.0 debug=0 build happy.

        * tests/Cached_Accept_Conn_Test.cpp: Repositioned global
          declarations to ward off compilation errors on HP-UX.

Wed Sep  8 13:13:18 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Process.h (ACE_Process): Made the spawn() method virtual
          so code can be executed just before and/or after the actual
          fork().  Thanks to Dave Madden for this fix.

Tue Sep 07 19:55:52 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Map_Manager.h (ACE_Map_Manager): The old map manager (the
          one before the changes made to support the active map manager)
          used to allow deletion of entries from the map during iteration
          (note that this feature was accidental since typically changes
          to container invalidates the iterators).  The new design did not
          support this "feature".  However, some users had come to depend
          on this feature.

          The solution was to delay the movement of freed slots from the
          occupied list to the free list until we run out of free slots in
          the free list when binding new entries into the map.  However,
          this change requires additional state in each entry that keeps
          track of whether this entry has been freed.  Also, the time
          required for binding new entries is less predictable since the
          bind may require moving of freed slots from the occupied list to
          the free list because of the initial lazy unbind.

          Changes were also required to the Active_Map_Manager since it
          directly depends on the internals of the Map_Manager.

          Since this lazy feature is not required in the majority of cases
          and results in increased memory consumption, this feature is
          only support if ACE_HAS_LAZY_MAP_MANAGER is defined.

          A new test Lazy_Map_Manager_Test.cpp was added to check the new
          changes.

          Thanks for Dr. Schmidt for helping with this solution and to
          Murphy Ivan <Ivan.Murphy@med.siemens.de> for pointing out this
          problem.

          Bug fixed: id 228.

Tue Sep  7 15:19:33 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Log_Msg_Test.cpp (test_ostream): NUL-terminated the buffer
          to avoid an array bounds overflow!  Thanks to David Levine for
          reporting this.

Tue Sep  7 12:38:37 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tests/Reactor_Timer_Test.cpp: Purify was showing an UMR in
          test_registering_one_handler().  This was because Time_Handler
          didn't have a constructor that initialized its timer_id_ member
          and it wasn't being set in this method (like the others).  I
          added a default constructor to Time_Handler. [Bug 249]

Tue Sep  7 08:04:41 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.i (isatty): Fixed this code so that it doesn't use
          osf_handle() anymore on NT, but instead just casts the
          ACE_HANDLE to an int.  Thanks to Mark Winrock
          <mwinrock@nortelnetworks.com> for suggesting this fix and
          testing it out.

        * tests/run_tests.lst: Added Signal_Test.

1999-09-07  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * tests/Signal_Test.cpp (main): Fixed the test so that it won't
          try to run the "synchronous signal handler in a separate thread"
          on Linux because Linux threads are non-standard wrt signals.

Mon Sep  6 21:19:27 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Signal_Test.cpp (run_test): Added an ACE_UNUSED_ARG
          for the synchronous_signal_handler pointer-to-function for the
          case where ACE_HAS_THREADS is disabled.  Otherwise, we get a
          warning.

Mon Sep  6 18:47:18 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/Process_Manager.h: Moved handle_signal outside of a !defined
          ACE_WIN32 block and moved handle_input inside of it, and this
          fixes some errors on MSVC.

Mon Sep  6 14:19:14 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * tests/Reactor_Notify_Test.cpp (main): Added a hyphen to
          the ACE_DEBUG printout "with timeout =" so that it says "with
          time-out =" to avoid confusing the run_tests.sh script!  Thanks
          to David Levine for reporting this.

        * ace/Process_Manager.cpp: Integrated more patches from
          Dave Madden <dhm@mersenne.com> so that the correct
          register_handler() method is used on Win32.

Mon Sep 06 15:05:17 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Makefile: moved ACELIB setting (to null) to before include
          of rules.lib.GNU.  That way, rules.lib.GNU can use the value of
          $(ACELIB) to determine whether the ACE library object files
          should be linked into the library, with repo=1. [Bug 248]

        * include/makeinclude/rules.lib.GNU: with repo=1 when building
          static libs, except for libACE, include all of the ACE lib's
          object files.  The prevents multiple instantiations, by GNU
          repo, of templates that are used in the ACE library.  See the
          gcc info pages, Template Instantiation node, for more information.
          [Bug 248]

Mon Sep  6 08:45:31 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * examples/Reactor/WFMO_Reactor: Cleaned up some of the coding in
          the examples.

        * ace/Profile_Timer.cpp: Reformatted the code a bit.

        * examples/Threads/process_manager.cpp (main): Fixed some warnings
          and errors.  Thanks to David for reporting this.

        * ace/OS.i: Fixed ACE_UNUSED_ARG(options) to be
          ACE_UNUSED_ARG(wait_options).  Thanks to David's build logs for
          reporting this.

        * tests/Signal_Test.cpp: Changed the types of parameters passed
          to run_test() from int to long so that we can safely cast them
          to and from void *'s.  Thanks to David Levine for pointing this
          out.

        * ace/Process_Manager.cpp (notify_proc_handler): Removed
          the now unused parameter h.  Thanks to David for pointing this
          out.

Mon Sep 06 07:25:01 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h: added ACE_Export to ACE_OS_Exit_Info class
          declaration.  It shouldn't be necessary, but
          Dmitry Goldshtain <Goldshtain@bank.gov.ua> reports that
          Builder 4 needs it.

Mon Sep 06 03:31:34 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/Signal_Test.cpp (run_test): Removed a redundant use of
          ACE_UNUSED_ARG (synchronous_signal_handler).  Thanks to KCC 3.3e
          for pointing this out.

Mon Sep  6 01:03:03 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * examples/Threads/Makefile (BIN): Added process_manager.cpp
          back into the list of programs that get built automagically.

        * ace/Process_Manager: Added some new patches from Dave Madden
          <dhm@mersenne.com> that continue to improve the
          ACE_Process_Manager and make it portable between NT and UNIX.

        * examples/Threads: Readded process_manager.cpp now that
          Dave Madden <dhm@mersenne.com> has updated it.

Sun Sep 05 23:52:16 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h (WIFEXITED,WEXITSTATUS): On platforms that do not
          define these macros, we should always assume the child process
          exit properly because the return status does not tell us how the
          process exited.  Likewise, the WEXITSTATUS macro should simply
          return the status we got from ACE_OS::wait because it only
          contains the exit status of child process.

Sun Sep  5 23:40:25 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * examples/QOS: Continued to improve the coding style so it'll
          look like normal "ACE" code.

Sun Sep 05 21:32:40 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Synch.cpp: removed unnecessary #include of ace/Object_Manager.h.

1999-09-05  Vishal Kachroo  <vishal@cs.wustl.edu>

          Made the receiver of QOS test portable by removing
          Win32-isms from it. Files modified :

        * examples/QOS/QosEvent.h:
        * examples/QOS/server.cpp:

Sun Sep  5 13:40:18 1999  Michael Kircher  <Michael.Kircher@mchp.siemens.de>

        * ace/ACE.cpp: Made the status code to be of type
          ACE_exitcode instead of int. This is necessary
          because of the change on waitpid ().

Sun Sep  5 10:59:18 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Process.i (wait): Removed the ACE_static_cast() Michael
          had added recently because the change below makes it
          unnecessary.

        * ace/OS.h (ACE_OS): Modified the 3-arg wait() and the waitpid()
          methods to take an ACE_exitcode* rather than int* so this will
          work on Win32.

        * ace/Log_Msg.cpp: Added a new explicit template instantiation
          for template class

          ACE_Guard<ACE_Reverse_Lock<ACE_Recursive_Thread_Mutex> >;

          to fix compiler errors that showed up with EGCS.

        * tests/Signal_Test.cpp (run_test): Added ACE_UNUSED_ARG macros
          for several symbols that aren't used when the test is compiled
          single threaded.

Sat Sep 05 02:05:00 1999  Michael Kircher  <Michael.Kircher@mchp.siemens.de>

        * ace/OS.cpp: Fixed a missing "#else".

        * ace/Process.i,
          ace/Process_Manager.h,
          ace/Process_Manager.cpp:
          Fixed an "int" versus "ACE_exitcode" conversion
          problem.

Sat Sep  4 23:37:29 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/config-win32-common.h: Missing a '&&' that was causing
          problems on Win32.  Thanks to Michael Kircher
          <Michael.Kircher@mchp.siemens.de> for reporting this.

Sat Sep 04 20:24:32 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Handle_Gobbler.i (close_remaining_handles,free_handles):
          moved the function definitions ahead of their first use in
          the file.

Sat Sep 04 20:17:49 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Pipe.cpp (open): added ACE_UNUSED_ARG (buffer_size)
          for all platforms that #define ACE_LACKS_SOCKET_BUFSIZ.

Sat Sep  4 14:43:36 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Signal_Test.cpp: Finished off the test so that it now
          works for all the various combinations of synchronous and
          asynchronous tests.  Now, to make it work on Linux...

        * ace/OS.h: The use of ACE_static_cast in the ACE_FACTORY_DEFINE macro
          didn't make any sense, so I've replaced it with
          ACE_dynamic_cast.

        * ace/Process_Manager.*,
        * ace/Process.*,
        * ace/OS.h:
          Created a new typedef called ACE_exitcode that factors out the
          difference between Win32 and UNIX exit codes from wait()
          operations.  Thanks to Dave Madden <dhm@mersenne.com> for
          suggesting this.

Sat Sep 04 12:22:38 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.i (shm_open,close,filesize,ftruncate,mmap): moved
          these functions up in the file so that they're defined before
          being used by ACE_OS::sema_init ().

Fri Sep  3 11:57:24 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Event_Handler.h (ACE_Event_Handler): Added the new
          handle_exit() method, which is called by the ACE_Process_Manager
          when a process exits.  Thanks to Dave Madden <dhm@mersenne.com>
          for contributing this.

        * ace/Process.*,
          ace/Process_Manager.*: Integrated a new round of changes from
          Dave Madden <dhm@mersenne.com> that factor out most of the
          remaining differences between Win32 and UNIX.

        * ace/OS.h,
        * ace/config-win32-common.h: Added a #ifndef for __IBMCPP__ to
          make things work for Visual Age C++.  Thanks to Boris Kaminer
          <kaminer.boris@cherus.msk.ru> for reporting this.

        * ace/{ACE,OS}: Added ACE_HAS_UNICODE to conditionally compile the
          strnew() definition.  Thanks to Boris Kaminer
          <kaminer.boris@cherus.msk.ru> for reporting this.

        * ace: Added a new optimized ace-dll.icc file so that ACE will
          build better with IBM's Visual Age C++.  Thanks to Boris Kaminer
          <kaminer.boris@cherus.msk.ru> for contributing this.

        * ace/OS.h,
        * ace/config-win32-common.h: Added a #ifndef for __IBMCPP__ to
          make things work for Visual Age C++.  Thanks to Boris Kaminer
          <kaminer.boris@cherus.msk.ru> for reporting this.

        * ace/{ACE,OS}: Added ACE_HAS_UNICODE to conditionally compile the
          strnew() definition.  Thanks to Boris Kaminer
          <kaminer.boris@cherus.msk.ru> for reporting this.

        * ace: Added a new optimized ace-dll.icc file so that ACE will
          build better with IBM's Visual Age C++.  Thanks to Boris Kaminer
          <kaminer.boris@cherus.msk.ru> for contributing this.

1999-09-03  Vishal Kachroo  <vishal@cs.wustl.edu>

        * ace/OS.i:
        * ace/OS.h: Added a new overloaded ACE_OS::ioctl () function that
          takes in ACE_QoS as one of the parameters, constructs a windows
          QOS from it and passes it to WSAIoctl (). This function can be
          used when the I/O control code is SIO_SET_QOS.

Fri Sep  3 14:58:51 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * config-aix-4.x.h:
        * config-hpux-10.x-hpc++.h:
        * config-hpux-11.x-hpc++.h:
        * config-mvs.h:
        * config-win32-borland.h:
        * config-win32.h:
          Moved many of the preprocessor information for various
          platforms from TAO_IDL to here (in ACE_CC_PREPROCESSOR and
          ACE_CC_PREPROCESSOR_ARGS).

Fri Sep  3 13:52:43 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * bin/auto_compile:
          Fixed the implementation of the -dont_run option.

Fri Sep  3 09:05:20 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Containers_T.cpp (delete_nodes): Removed the redundant check
          which was verifying that <cur_size_> was always > 0. But
          <cur_size_> itself is unsigned so thsi check was redundant
          causing warnings with egcs.

Thu Sep  2 23:54:49 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Containers_T.h (class ACE_Double_Linked_List): Added more
          comments to stress that this is not a general purpose container
          class.  Thanks to Rusty Conover <rconover@zootweb.com> for
          suggesting this.

Thu Sep  2 18:39:23 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Process_Manager.cpp (handle_close): Did a better job of
          fixing the use of ACE_UNUSED_ARG to make EGCS happy.

Thu Sep  2 12:21:41 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Select_Reactor_Base: Renamed the notify_set_, alloc_set_,
          and free_set_ to *_queue_ since that's what they really are!

Thu Sep  2 17:42:22 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Malloc_T.cpp:
          Eliminated UMR problem with the position independent malloc
          support. Thanks to Doug for figuring this stuff out.

Thu Sep  2 12:21:41 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Log_Msg_Test.cpp (test_log_msg_features): Changed the
          use of %p to prevent an error message from being printed that'll
          confuse the run_tests script.

        * Just added the 700th non-DOC group individual who has contributed
          to ACE+TAO over the years.  In the last year, we've gone from
          400 to 700 contributors, which is great!

        * tests/CDR_File_Test.cpp (main): Fixed a signed/unsigned warning
          and removed the unreferenced argc/argv parameters.

        * tests{run_tests.lst,Makefile}: Added the new ACE_Log_Msg.cpp
          test.

        * tests: Added a new test called Log_Msg_Test.cpp.  This exercises
          the many features of the ACE_Log_Msg class.

        * tests/Object_Manager_Test.cpp (main): Just reformatted some
          stuff.

Thu Sep  2 14:42:31 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/Cached_Accept_Conn_Test.cpp: Repositioned
          ACE_HAS_BROKEN_EXTENDED_TEMPLATES macro before the inclusion of
          the header since thats where the typedefs had been shifted.
          Also, to keep both gcc2.7.3 and sunCC5.0 w.o debugging symbols
          happy it was necessary to move the definitions of
          <Accept_Startegy> methods before the instantiations.

Thu Sep  2 12:21:41 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.h: Added an ACE_static_cast in the ACE_FACTORY_DEFINE macro
          to let the compiler catch "bad casts," i.e., when X isn't allow
          to be cast from an ACE_Service_Object.  Thanks to Jody Hagins
          for suggesting this.

        * ace/config-win32-common.h: Deleted

          #define ACE_LACKS_STRPTIME

          and added

          #define ACE_HAS_STRPTIME
          #define ACE_LACKS_NATIVE_STRPTIME

          In addition, I removed the wday and yday stuff in
          ACE_OS::strptime().  Thanks to Kevin Lyda
          <kevin.lyda@trintech.com> for suggesting this.

        * ace/OS.h: Make sure to add a cast to ACE_Service_Object * in the
          ACE_FACTORY_DEFINE macro so that the offset will be corrected
          automagically.  Thanks to Eric C. Newton <ecn@smart.net> for
          reporting this and suggesting a fix.

        * ace/Log_Msg: Modified the msg_callback(ACE_Log_Msg_Callback *)
          method to return the existing ACE_Log_Msg_Callback * so we can
          support "chaining".

        * ace/Log_Msg.cpp: Added explicit template instantiations for
          ACE_Reverse_Lock.

        * ace/Log_Msg.cpp: Changed the implementation described below to
          use an ACE_Reverse_Lock, which is cool ;-).  Thanks to Carlos
          for explaining how this worked.

        * ace/Log_Msg.cpp: Don't hold the lock during a msg_callback() to
          avoid deadlock.  Thanks to Matthew Davis
          <matthew.davis@solers.com> for reporting this.

        * tests/Cached_Accept_Conn_Test.cpp: Removed a "static" from
          int debug so that the friggin' SunC++ compiler will link...

Thu Sep 02 11:04:18 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/check_build_logs: added /dev/null to egrep invocation
          so that it always shows the file name.  Thanks to Doug for
          reporting this.

Thu Sep 02 11:02:25 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-qnx-neutrino.h: added ACE_LACKS_SOCKET_BUFSIZ.

Thu Sep  2 08:56:39 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.i:
          Added << and >> operators for ACE_CDR::Char. These are not
          to be used by TAO or the IDL compiler, they are solely for
          use with the ACE library, so that 1-byte values can be
          streamed without using the CORBAisms to_char and from_char.
          Otherwise, if a 1-byte value were on the rhs of a CDR operator,
          the compiler will probably promote the operator to the one
          using ACE_CDR::Short, which is not at all what we want.

Wed Sep  1 21:37:59 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Makefile (BIN): Added the new CDR_File_Test.cpp to
          the list of files that are automatically built.  Also, added
          this to run_tests.lst.

        * tests: Added a new test called CDR_File_Test, which
          exercises the ACE_CDR_Stream features in conjunction with file
          I/O.  Thanks to Giga Giguashvili <gregoryg@ParadigmGeo.com>.

        * tests/CDR_Test.cpp: Moved the main() function to the end
          of the file.

        * ace/OS.i: Moved the new ACE_OS::filesize() method down in
          this file until *after* the ACE_OS::close() method to prevent a
          "used before being inlined" error on DU.  Thanks to David for
          reporting this.

Wed Sep  1 20:41:03 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/run_tests.lst:
          Disabled the Time_Service_Test, it was crashing the parent
          process.

Wed Sep 01 19:46:30 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/check_build_logs: allow log directory (-l option argument)
          to start with anything except -.

Wed Sep  1 17:15:25 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Arg_Shifter.cpp (get_current_parameter): Removed egcs
          warnings by making <difference> int and also cleaned up the
          code.

Wed Sep  1 15:51:41 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * examples/Timer_Queue/Thread_Timer_Queue_Test.cpp: Fixed a typo
          where ACE_reinterpret_cast() was misspelled.  Thanks to
          David for reporting this.

        * examples/QOS/server.cpp: "ACE"-ified this example.

        * ace/OS: Added a new method called ACE_OS::filesize() that
          takes a LPCTSTR so that we can pass a file name to this.

        * ace/config-win32-borland.h: Changed ACE_CC_COMPILER to
          CPP32.EXE on the recommendation of Christopher Kohlhoff
          <chris@kohlhoff.com>.

        * ace/Synch.h: Updated the documentation of ACE_Semaphore::remove()
          to clarify that it should only be called by one thread to avoid
          race conditions.  Thanks to Clarence Bishop
          <clarence.bishop@na.marconicomms.com> for mentioning this.

1999-09-01  Vishal Kachroo  <vishal@cs.wustl.edu>

        * ACE_wrappers/ace/OS.h:
        * ACE_wrappers/ace/OS.i:
          Added a wrapper ACE_OS::enum_protocols () for WSAEnumProtocols().
          Tested this function with the ACE QOS test.

        * examples/QOS/client.cpp:
        * examples/QOS/server.cpp:
          Replaced the occurences of WSAEnumProtocols with
          ACE_OS::enum_protocols () and successfully ran the QOS test.

Wed Sep  1 15:51:41 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.i: Ensure that ACE_OS::localtime_r() does the "Right
          Thing"[TM], i.e., returns the pointer in the buffer provided by
          the user, even if there's no native support for localtime_r() on
          the OS platform.  In addition, added an ACE_OS_GUARD for this
          use-case so that we don't have race conditions in MT programs.
          This necessitated moving the localtime_r() wrapper facade into
          the OS.cpp file.  Thanks to Jody Hagins <jody@atdesk.com> for
          these suggestions.

        * ace/SV_Semaphore_Complex: Improved the documentation a bit
          based on comments from Herbert <herbert@shym.com>.

Wed Sep  1 15:15:00 1999  Luther Baker  <ljb1@cs.wustl.edu>

        * ace/Arg_Shifter.h: Added function (get_current_parameter(offset)
          to return parameters that may be mangled with flags.

        * ace/Arg_Shifter.cpp: Implemented function above.

Wed Sep  1 14:50:48 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h: Added definitions for _O_BINARY, _O_TEXT, and _O_RAW
          if they are not defined.   Thanks to Kevin Lyda
          <kevin.lyda@trintech.com> for pointing this out.

Wed Sep  1 14:30:58 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/Process_Manager.cpp: Typo fixed.

Wed Sep  1 11:18:26 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Reactor_Notify_Test.cpp: Fixed an erroneous use of =
          rather than != and added another pair of explicit template
          instantiations for ACE_Auto_Basic_Ptr<>.  Thanks to Carlos for
          reporting this.

        * ace/Process_Manager.cpp (handle_close): Removed a warning
          about unused parameter.  Thanks to David for reporting this.

        * tests/Reactor_Notify_Test.cpp: I needed to add

          #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)

          rather than

          #else

Wed Sep 01 11:55:31 1999  Steve Huston  <shuston@riverace.com>

        * ace/CORBA_Handler.{h cpp} (ACE_ST_CORBA_Handler): Made the
          ACE_ST_CORBA_Handler instance get cleaned up via object manager
          at rundown, giving it a chance to clean up it's reactor
          registrations and reset its Orbix callbacks.  Also added a new
          capability of allowing the ACE_ST_CORBA_Handler to daisy-chain
          the Orbix callbacks - this is only enabled if
          ACE_TAKEOVER_ORBIX_CALLBACKS is set in the config.h file, and
          its use is highly discouraged unless you really know what you're
          doing and can account for all of the callbacks.

Wed Sep  1 11:18:26 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

          Thanks to David for reporting this.

        * tests/run_tests.lst: Disabled the Process_Manager_Test
          until it's stable.  Thanks to David for reporting this.

Wed Sep  1 00:05:04 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/config-win32-borland.h: Added a #define for ACE_CC_COMPILER
          so that things will work properly on Borland.  Thanks to
          Goldshtain Dmitry <goldshtain.dmitry@usa.net> and Adrian
          Mercieca <adrian@anvil.co.uk> for reporting this.

Wed Sep 01 10:45:15 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,cpp} (ACE_OS_Object_Manager::init,fini): replaced
          use of ACE_ERROR with a new, private method (print_error_message).
          If one of the operations in init () fails, then the Log_Msg
          instance might not work properly.  Thanks to Alain Magloire
          <alain@qnx.com> for noting this.

          print_error_message also consolidates the common const char
          strings into one place.  This entire changes reduces the size
          of OS.o by about 900 bytes.

Wed Sep  1 00:05:04 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Reactor_Notify_Test.cpp: Only run the iterations in
          this test for 2000 times, not 10000 times.

Wed Sep  1 07:41:58 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/Process_Manager.cpp (wait):
          An ACE_NEW_RETURN needed ACE_INVALID_PID for the return
          value instead of ACE_INVALID_HANDLE.

Wed Sep  1 00:05:04 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Process_Manager_Test.cpp: Made some minor changes in
          this test so that it'll compile.  We still need to update it so
          it'll run correctly with the new version of ACE_Process_Manager,
          however.

        * ace/Process_Manager: Integrated the latest and greatest
          ACE_Process_Manager from Dave Madden <dhm@mersenne.com>.  This
          should now work relatively transparently on all OS platforms
          that support processes.  We'll be adding a new
          Process_Manager_Test.cpp shortly...

        * tests/Reactor_Notify_Test.cpp: Modified this test to exercise
          the new user-level notification queueing in the ACE_Reactor.

Tue Aug 31 16:05:14 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Process_Manager.cpp (handle_close): Added an ACE_UNUSED_ARG
          to keep the compiler from warning that the "handle" parameter
          isn't used.

        * ace/OS.h: Added a new #defined called
          ACE_REACTOR_NOTIFICATION_ARRAY_SIZE that designates the size of
          the array of ACE_Notification_Buffers used by the new Reactor
          user-level notification queue feature.

        * ace/Select_Reactor_Base: Added support for a user-level
          notification queue that can buffer very large amounts of pending
          notifications, i.e., well beyond the 64 kbyte limit imposed by
          the use of a socket.  This feature is only enabled if
          ACE_HAS_REACTOR_NOTIFICATION_QUEUE is enabled in a config.h
          file.  Thanks to Detlef Becker <Detlef.Becker@med.siemens.de>
          for suggesting this and contributing a prototype implementation.

Tue Aug 31 20:10:49 1999  Yamuna Krishnamurthy  <yamuna@cs.wustl.edu>

        * ace/OS.h: Added the ACE_HAS_NO_THROW_SPEC check in order to
          suppress the generation of throw specs to placate some compilers
          and make it easier for CORBA developers to by lazy wrt C++
          exception throw specs ;-).  Thank to Andreas Geisler
          <Andreas.Geisler@erls.siemens.de> for suggesting this addition

1999-08-31  Vishal Kachroo  <vishal@cs.wustl.edu>

          Modified the ACE GQoS test to use a single handler registered
          for QOS_MASK|READ_MASK instead of two separate handlers. Had to
          remove the following files and add other files.

        * ACE_wrappers/examples/QOS/QOS_Event_Handler.cpp
        * ACE_wrappers/examples/QOS/Read_Handler.h
        * ACE_wrappers/examples/QOS/QOS_Event_Handler.h
        * ACE_wrappers/examples/QOS/Read_Handler.cpp

          Added the following files :

          The Sender event handler is only registered for QOS events. It
          uses the ACE_OS::sendto () as soon as it receives a QOS event.

        * ACE_wrappers/examples/QOS/Sender_QOS_Event_Handler.cpp
        * ACE_wrappers/examples/QOS/Sender_QOS_Event_Handler.h

          The Receiver event handler is registered for both QOS as well as
          READ events since it has to initially wait for a PATH RSVP
          message from the sender (QOS event, finally!!) and then read
          from the same QOS enabled socket.

        * ACE_wrappers/examples/QOS/Receiver_QOS_Event_Handler.cpp
        * ACE_wrappers/examples/QOS/Receiver_QOS_Event_Handler.cpp

          The client and server have been modified to subscribe to the
          same multicast session. The RSVP SP on the receiver side sends
          RESV messages at the earliest indication of QOS parameters AND
          existence of a matching PATH state. This state is found only if
          a multicast socket has been created (by the sender) with a
          matching "multicast session" address.

        * ACE_wrappers/examples/QOS/server.cpp:
        * ACE_wrappers/examples/QOS/client.cpp:

          Modified the following to incorporate the removal and addition
          of files listed above.

        * ACE_wrappers/examples/QOS/QOS.dsw
        * ACE_wrappers/examples/QOS/client.dsp
        * ACE_wrappers/examples/QOS/server.dsp

Tue Aug 31 16:05:14 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Malloc_T,
        * ace/Malloc: For historical reasons, we'd had a nested class
          called ACE_Malloc_Control_Block within ACE_Malloc_Header.  This
          was redundant and confusing, so I merged the fields of
          ACE_Malloc_Control_Block into ACE_Malloc_Header.  In addition, I
          also added a constructor that initialized the fields to 0 so
          that we won't have problems with Purify complaining about
          uninitialized memory reads.  Thanks to Carlos for reporting
          this.

Tue Aug 31 15:54:56 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Process_Manager.h: There was a bizarre default value
          for the pid parameter, which was helping to cause ambiguity
          warnings from the C++ compiler.  I've removed this.

Tue Aug 31 00:16:34 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * build/egcs/tests/Cached_Accept_Conn_Test.h: Moved the template
          class into the header file so that IBM C++ will be happy.

        * tests/Cached_*_Test.h: Updated these files to include the proper
          descriptive information.

        * tests/Upgradable_RW_Test.h: Cleaned up the formatting for this
          test.

        * tests/Cached_Accept_Conn_Test.cpp,
        * tests/Cached_Conn_Test.cpp,
        * tests/Conn_Test.cpp,
        * tests/DLList_Test.cpp,
        * tests/Hash_Map_Manager_Test.cpp:
          Fixed some "order of definition" problems caused by the
          workarounds for SunC++ 5.0 -g bugs.  Also replaced the use of
          ADDR and STRING with ACE_ADDR and ACE_STRING to avoid potential
          clashes with symbols in the global name space.  Thanks to David
          for reporting this.

1999-08-31  Vishal Kachroo  <vishal@cs.wustl.edu>

        * ACE_wrappers/examples/QOS/server.cpp
        * ACE_wrappers/examples/QOS/client.cpp
        * ACE_wrappers/examples/QOS/QOS_Event_Handler.cpp
        * ACE_wrappers/examples/QOS/QosEvent.h
        * ACE_wrappers/examples/QOS/Read_Handler.h
        * ACE_wrappers/examples/QOS/QOS_Event_Handler.h
        * ACE_wrappers/examples/QOS/Read_Handler.cpp
        * ACE_wrappers/examples/QOS/QOS.dsw
        * ACE_wrappers/examples/QOS/client.dsp
        * ACE_wrappers/examples/QOS/server.dsp:
          These files test the new ACE GQoS features, which
          implement IntServ features over WinNT 2000.

Tue Aug 31 14:47:54 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ACE-INSTALL.html: Added a note on building egcs with the
          -fsquangle option contributed by Skye Sweeney
          <ssweeney@sanders.com>.

Tue Aug 31 00:16:34 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * bin/clone.cpp: Modified this program so that it'll work more
          flexibly with symbolic links.  In particular, clone can now
          generate symbolic links with relative pathnames to the source.
          Thus, you can now call it like this:

          % clone -s ../../foo .

          and all of the cloned links will properly refer to ../../foo
          (adding the appropriate number of extra '..'s to handle
          directory nesting).  Thanks to Jonathan Biggar <jon@biggar.org>
          for these fixes.

        * ace/Process.cpp: Need to #include "ace/Signal.h".

        * Added a series of fixes that allow ACE to build and
          run cleanly with SunC++ 5.0 and Solaris 7 even when debugging is
          NOT enabled.  These changes require moving the explicit template
          instantiations from the BOTTOM of the *.cpp files to near the
          top.  Thanks to Robert Shewan <rshew@peri.com> for reporting
          this.

        * ace/Process_Manager.cpp: Fixed some warnings.  Thanks to
          Carlos for reporting this.

Mon Aug 30 21:14:46 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Process_Manager.cpp: Added the destructor for
          ACE_Process_Descriptor.  Thanks to David for reporting this.

Mon Aug 30 17:20:56 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-qnx-neutrino.h: added ACE_LACKS_MUTEXATTR_PSHARED.

        * ace/OS.i (mutex_init): enable the ACE_UNUSED_ARG (type)
          statement with ACE_LACKS_MUTEXATTR_PSHARED.

Mon Aug 30 17:10:00 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ACE-INSTALL.html: Added a note about the "-fsquangle" option
          to be used with egcs to shorten long symbol names.

Mon Aug 30 16:12:36 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Process.i: Oops, the implementation of gethandle() was
          in a Win32-specific part of the code...

        * ace/Msg_WFMO_Reactor.h: Fixed a problem that was causing
          ACE_Msg_WFMO_Reactor from being included in the documentation
          windex files.  Thanks to Jody Hagins for reporting this.

Mon Aug 30 16:16:46 1999  Ossama Othman  <othman@cs.wustl.edu>

        * PROBLEM-REPORT-FORM:

          Updated to point to refer reports ace-bugs mailing list.

Mon Aug 30 14:27:26 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Cached_Accept_Conn_Test.cpp,Cached_Conn_Test.cpp,
          Map_Manager.cpp:
          use the explicit template instantiations even with
          ACE_HAS_GNU_REPO.  g++ 2.91.66 misses some of them with -frepo.

Mon Aug 30 15:23:12 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Process_Manager: Integrated the new features that make it
          possible to notify a Reactor when a process exits.  Thanks to
          Dave Madden <dhm@mersenne.com> for contributing this.

        * ace/Process: Added a more portable timed wait() operation for
          UNIX platforms.  However, this method has the following two
          limitations: (1) on UNIX platforms this function uses <ualarm>,
          i.e., it overwrites any existing alarm and (2) it steals all
          SIGCHLDs during the timeout period, which will break another
          ACE_Process_Manager in the same process that's expecting SIGCHLD
          to kick off process reaping.  If you know a good solution to
          this please let us know.  Thanks to Dave Madden
          <dhm@mersenne.com> for contributing this.

        * ace/Process: Added setgroup() and getgroup() methods to
          ACE_Process_Options so that we can manage groups of processes.
          Thanks to Dave Madden <dhm@mersenne.com> for contributing this.

        * examples/OS/Process/process.cpp: Added a new version that
          tests the various wait() methods on ACE_Process.  Thanks to Dave
          Madden <dhm@mersenne.com> for contributing this.

        * config-chorus.h,
          config-cray.h,
          config-cygwin32-common.h,
          config-freebsd-pthread.h,
          config-freebsd.h,
          config-hpux-9.x.h,
          config-hpux-9.x.h,
          config-lynxos.h,
          config-netbsd.h,
          config-sunos4-g++.h,
          config-sunos4-lucid3.2.h,
          config-sunos4-sun3.x.h,
          config-sunos4-sun4.1.4.h,
          config-sunos4-sun4.x-orbix.h,
          config-sunos4-sun4.x.h,
          config-win32-common.h:
          Added ACE_LACKS_SETPGID on the assumption that platforms lacking
          getpgid() won't have setpgid() either.  If this turns out to be
          incorrect, please let me know.

        * ace/OS: Added a new wrapper facade method for setpgid().  Thanks to
          Dave Madden <dhm@mersenne.com> for contributing this.

        * ace/OS.h: Added a new macro called ACE_INVALID_PID.  Thanks to
          Dave Madden <dhm@mersenne.com> for contributing this.

        * ace/Local_Tokens.h: Added a comment explaining that these locking
          classes aren't intended as general-purpose synchronization
          mechanisms.  Thanks to Brian Wright <bwright@paladyne.com>

        * examples/Misc/test_trace.cpp (main): Added a call to
          ACE_OS::atexit() to make sure we test this someplace.

Mon Aug 30 12:11:06 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Strategies.i:
          Once a Recyclable object reaches the ACE_RECYCLABLE_CLOSED state
          its state cannot change. This eliminates a nasty race condition
          where one thread detects that the connection is closed (and sets
          the state accordingly), but another thread changes the state to
          IDLE, based on old information.
          Thanks to Mark L Boriack <mboriack@std.saic.com> for reporting
          this problem and helping us debug it.

Mon Aug 30 10:43:08 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/config-irix6.x-common.h:
          Added ACE_HAS_SIGSUSPEND and ACE_HAS_TIMEDWAIT

Mon Aug 30 10:18:52 1999  Ossama Othman  <othman@cs.wustl.edu>

        * PROBLEM-REPORT-FORM:

          Fixed typo.

        * acconfig.h:
        * configure.in:

          Removed ACE_LACKS_ATEXIT test since the macro no longer exists.

          Added test for ACE_HAS_SIGSUSPEND.

Mon Aug 30 07:38:11 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Message_Block_Test.cpp,
          examples/Reactor/Misc/test_event_handler_t.cpp:
          use the explicit template instantiations even with
          ACE_HAS_GNU_REPO.  g++ 2.91.66 misses some of them with -frepo.

Sun Aug 29 22:57:26 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Signal_Test.cpp (worker_parent): Revised the test
          so that we transmit the parent process ID in argv so that the
          child doesn't have to "guess."  This solves the annoying
          problems with Linux threads...

Sun Aug 29 21:35:17 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-g++-common.h:
          1) Don't #define ACE_HAS_EXPLICIT_INSTANTIATION with
          ACE_HAS_GNU_REPO, so that -frepo can do its thing. [Bug 248]
          2) #undef ACE_HAS_STRING_CLASS with ACE_HAS_GNU_REPO, because
          egcs 2.91.66 can't build IOStream test (due to an unresolved
          basic_string method instantiation) otherwise.

        * ace/config-aix-4.x.h,ace/config-cygwin32-common.h,
          ace/config-hpux-10.x-g++.h,ace/config-irix5.3-g++.h,
          ace/config-irix6.x-g++.h,ace/config-linux-common.h,
          ace/config-lynxos.h,ace/config-osf1-4.0.h,ace/config-sunos4-g++.h,
          ace/config-sunos5.4-g++.h,ace/config-sunos5.5.h,
          ace/config-unixware-2.*-g++.h:
          moved ACE_HAS_STRING_CLASS #define before #include of
          config-g++common.h, so that config-g++-common.h can #undef
          it with ACE_HAS_GNU_REPO.

        * include/makeinclude/rules.lib.GNU: when ace_lib_prelink is
          enabled, add a link step before building a library.  This is
          used, for example, to insert template instantiations into
          object files. [Bug 248]

        * include/makeinclude/wrapper_macros.GNU: set ace_lib_prelink
          to 1 when repo is enabled.  Added ACE_NUL and ACE_NUL_STDERR
          macros, for internal use to support the prelink step. [Bug 248]

Sun Aug 29 07:53:33 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Signal_Test.cpp: Linux threads are problematic because
          getppid() isn't the process id of your parent PROCESS, it's the
          "process" id of your parent THREAD.  Yikes!  Therefore, I had to
          rearrange this test so that it'll work on Linux.

        * ace/config-qnx-neutrino.h,
        * ace/config-vxworks5.x.h,
        * ace/config-osf1-4.0.h,
        * ace/config-sunos5.5.h,
        * ace/config-linux-common.h: Added support for
          the ACE_HAS_SIGTIMEDWAIT and ACE_HAS_SIGSUSPEND macros.

        * ace/OS: Added a new sigsuspend() wrapper to class ACE_OS.  This
          implementation is "smarter" than the default behavior of
          sigsuspend(2) because it'll handle NULL sigset_t *'s gracefully.

        * ace/Signal: Make the use of ACE_Sig_Set & parameters
          const-correct.

        * ace/Signal: Added a new method for ACE_Sig_Action that'll register
          an ACE_Sig_Set's worth of signals simultaneously.

        * ace/Signal: Updated the documentation to explain what the various
          constructors do.

        * ace/Process.h: Updated the documentation for ACE_Process::spawn()
          to explain what the return values are.

        * tests/Makefile: Added Signal_Test to the list of tests that are
          built automatically.

        * tests: Added a new test, Signal_Test.cpp, that exercises the
          various signal handling capabilities supported by ACE on various
          OS platforms.

        * ace/OS.h,
        * ace/README,
        * ace/config-vxworks5.x.h:
          Removed all mention of the ACE_LACKS_ATEXIT feature.  This is
          now the default behavior because we ACE_OS_Object_Manager::at_exit()
          to get consistent semantics, as described below.  Thanks to David
          for pointing this out.

        * ace/OS.i: Changed the implementation of ACE_OS::atexit() to always
          use the ACE_OS_Object_Manager::instance ()->at_exit() method so
          that we get consistent semantics across platforms.

Sun Aug 29 18:27:38 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ACE.ifnames:
        * ace-diff-config.in:

          Removed ace-diff-config.in and ACE.ifnames from the repository.
          They are only used for internal ACE Configuration Project
          testing.

        * Makefile.am:
        * configure.in:

          Removed references to ace-diff-config.in and ACE.ifnames.

        * acconfig.h:
        * configure.in:

          Added entries and tests for the following macros:

            ACE_AUTO_PTR_LACKS_RESET
            ACE_HAS_LLSEEK
            ACE_HAS_EXPLICIT_KEYWORD
            ACE_HAS_MUTABLE_KEYWORD
            ACE_HAS_STD_TEMPLATE_SPECIALIZATION
            ACE_HAS_STD_TEMPLATE_METHOD_SPECIALIZATION
            ACE_HAS_SIGTIMEDWAIT
            ACE_LACKS_ATEXIT
            ACE_LACKS_GETPPID

        * configure.in:

          Fixed auto_ptr test.  auto_ptr was being used incorrectly.

Sun Aug 29 07:53:33 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Process_Manager_Test.cpp: Changed the names of the signal
          handlers to one_child_synchronous_signal_handler() and
          multiple_children_synchronous_signal_handler() to reflect how
          they are used.

        * ace/OS.[hi]: Added a new wrapper for sigtimedwait() so that
          we can encapsulate this.  To make programming more consistent,
          the encapsulation uses an ACE_Time_Value, rather than a struct
          timespec.

        * ace/config-linux-pthread.h,
        * ace/config-linux-lxpthreads.h: Removed the

          #define ACE_HAS_SIGWAIT

          macro since this was already defined in config-linux-common.h.

        * tests/Malloc_Test.cpp: Improved the test by printing out
          additional diagnostic information.  Also validated that it works
          when ACE_DEFAULT_BASE_ADDR == 0 on Solaris using SunCC (with
          purify) and EGCS.

        * ace/Malloc: Added a dump() method to ACE_Malloc_Header.

        * ace/Process_Manager.cpp (ACE_Process_Descriptor): Changed
          a -1 to a 0 to prevent a compiler warning.  Thanks to
          David Levine and DEC UNIX for reporting this.

Sun Aug 29 00:14:09 1999  Luther Baker  <ljb1@cs.wustle.edu>

        * ace/Arg_Shifter.h (cur_arg_strncasecmp): Removed and replaced earlier
          method 'is_or_contains_ignore_case' with 'cur_arg_strncasecmp.'
          This method does less and it is more self-contained, adding protection
          and greater flexibility for the program program using it.

        * ace/Arg_Shifter.cpp (cur_arg_strncasecmp): Implementation
          corresponding with changes in ACE_Arg_Shifter class.

Sun Aug 29 00:13:35 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Process_Manager.i: Moved the destructor for
          ACE_Process_Descriptor out of the *.i file since it's always
          called by vector delete and therefore inlining it is pointless.

Sat Aug 28 23:46:55 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Process_Manager.cpp (resize): The loop should run
          from 0 < this->current_count_ rather than 0 <
          this->max_process_table_size_.

Sat Aug 28 16:28:33 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Synch_T.i: reordered some methods to avoid
          use before definition.

Fri Aug 27 18:52:00 1999  Luther Baker  <ljb1@cs.wustl.edu>

        * ace/Arg_Shifter.h (is_or_contains_ignore_case): added method
          to facilitate CORBA spec in ORB_init.

        * ace/Arg_Shifter.cpp (is_or_contains_ignore_case): implemented
          the method added. Part of a larger project to implement CORBA
          spec regarding -ORB parsing in ORB_init.

Fri Aug 27 18:58:50 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * tests/run_tests.lst: Reenabled the Process_Manager_Test since
          it now seems to work fine with EGCS after the fix noted below.

Fri Aug 27 18:39:14 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Process_Manager.cpp (wait): Fixed a mistake in the coding
          logic whereby we were returning from the function in a loop even
          when there was no error.  Thanks to David Levine and DEC UNIX
          for pointing this out.

Fri Aug 27 16:05:49 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.*,Log_Msg.cpp,Synch_T.i: reverted changes of
          Fri Aug 27 11:29:21 1999  David L. Levine  <levine@cs.wustl.edu>
          to see if they caused problems on NT.  Thanks to Michael
          and Jeff for reporting this.

Fri Aug 27 12:01:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (mktime): added static cast of -1 return value
          to time_t to avoid warnings on VxWorks.

Fri Aug 27 11:38:36 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Config.cpp (process_directives): Remember to close
          down the svc.conf file pointers once they are processed.  Thanks
          to Lothar Werzinger <werzinger.lothar@krones.de> for pointing
          this out.

Fri Aug 27 11:29:21 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.*: moved ACE_OS_Recursive_Thread_Mutex_Guard from
          OS.cpp to OS.h so that Log_Msg.cpp can use it.

        * ace/Log_Msg.cpp: replaced use of ACE_Guards with
          ACE_OS_Thread_Recursive_Mutex. [Bug 262]

        * ace/OS.h (ACE_OS_Recursive_Thread_Mutex_Guard::lock):
          added this method.

        * ace/OS.cpp (ACE_OS_GUARD,ACE_TSS_CLEANUP_GUARD,
          ACE_TSS_BASE_GUARD): fixed to use
          ACE_OS_Recursive_Thread_Mutex_Guard::lock.  Added
          _RETURN versions.

        * ace/Synch_T.i: reordered some methods to avoid
          use before definition.

Fri Aug 27 09:53:09 1999  Joe Hoffert  <joeh@cs.wustl.edu>

        * ace/ATM_Stream.{h,cpp}: added get_vpi_vci method.
        * examples/IPC_SAP/ATM_SAP/CPP-{client,server}.cpp: Changed tests to
          print out VPI and VCI after connected.

Fri Aug 27 10:50:10 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE version 5.0.3 released.

Fri Aug 27 09:32:26 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/make_release: added some diagnostics to see why
          diffs aren't being created.

Fri Aug 27 07:17:58 1999  Toshio Hori  <toshi@etl.go.jp>

        * ACE-INSTALL.html: fixed a typo, missing ; after
          &lt and &gt.

Thu Aug 26 21:01:02 1999  Jim Rucker  <James.D.Rucker@jpl.nasa.gov>

        * ace/Thread_Manager.cpp (spawn_i): on VxWorks, if t_handle
          is non-0, set it with thr_handle.

Thu Aug 26 16:33:42 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Log_Msg.cpp: removed unnecessary #include "ace/Synch_T.h".
          [Bug 262]

Thu Aug 26 13:49:00 1999  David L. Levine  <levine@cs.wustl.edu>

        * examples/Threads/Makefile: removed process_manager from BIN.
          See Sat Aug 21 12:36:40 1999  Douglas C. Schmidt.

Thu Aug 26 12:22:55 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-ghs-common.h: on Sun, added
          ACE_HAS_NONSTATIC_OBJECT_MANAGER.  It's necessary
          to prevent seg fault on startup.  Thanks to
          David Sunwall <das@planet8.tds-eagan.lmco.com> for
          reporting this problem.

Thu Aug 26 12:11:09 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: added guidelines to avoid
          default arguments, and favor narrow interfaces.

Thu Aug 26 11:44:26 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Time_Value_Test.cpp (main): added static casts
          of the doubles to longs.  g++ 2.7.2.3 warned about
          passing a double to a long :-)

Thu Aug 26 11:20:55 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Time_Value_Test.cpp (main): added a test showing
          that ACE_Time_Value (2.5) == ACE_Time_Value (2).
          The 2.5 gets coerced to a long with value 2.  Beware . . .

Thu Aug 26 10:43:04 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/config-sunos5.6.h:
          egcs-2.95 under Solaris 5.6 does not need
          ACE_HAS_STL_QUEUE_CONFLICT, thanks to Krishnakumar
          B. <kitty@neo.shinko.co.jp> for reporting this problem.
          This fixes [BUGID:264]

Thu Aug 26 07:29:42 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,i} (ACE_Time_Value): reverted
          Wed Aug 25 22:05:54 1999  David L. Levine  <levine@cs.wustl.edu>
          change.  It caused overload ambiguity when the types of
          sec and usec didn't match, and on Sun CC 4.2/SunOS 5.6.
          Thanks to Andy for reporting that.

Wed Aug 25 22:05:54 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,i} (ACE_Time_Value): added four new
          constructors.  One takes a double, to avoid surprises
          (truncation) when constructing an ACE_Time_Value from
          a double.  The other three constructors take two
          unsigned longs, ints, and unsigned ints.  They avoid
          the ambiguity introduced by the new double constructor.
          Thanks to Dave Meyer <dmeyer@std.saic.com> for starting this :-)

          The double constructor is wrapped with
          #ifndef ACE_LACKS_FLOATING_POINT.

        * tests/Time_Value_Test.cpp (main): removed cast of
          2.0 to long.

Wed Aug 25 16:15:07 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-subsets.html: removed spurious LOGGING_FILES
          text.

Wed Aug 25 15:55:05 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,cpp},Object_Manager.*,Signal.i (default_mask): moved
          the default_mask () static method from ACE_Object_Manager
          to ACE_OS_Object_Manager, so that it can be used by
          Log_Msg.cpp without layer inversion.  (Left a deprecated,
          inline ACE_Object_Manager::default_mask (), for backward
          compatibility.)  default_mask () now returns a sigset_t *
          instead of an ACE_Sig_Set *, again to avoid layer inversion.

        * ace/Log_Msg.cpp (log): replaced use of ACE_Sig_Guard
          with a bare-bones ACE_Log_Msg_Sig_Guard. [Bug 262]

Wed Aug 25 14:53:58 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * bin/run_all.pl:
        * bin/auto_compile:
          The script did not start with the canonical trick to run perl
          from [t]csh, [ba]sh or perl itself.

Wed Aug 25 14:45:06 1999  Ossama Othman  <othman@cs.wustl.edu>

        * tests/Process_Manager_Test.cpp:

          Explicitly include "ace/Signal.h" to make declaration of
          ACE_Sig_Set class visible.

          return statement at end of multiple_children_sig_handler()
          function is never reached.  It was commented out to prevent
          compiler warnings.

Wed Aug 25 13:34:07 1999  Narendra Ravi  <naren@cs.ualberta.ca>

        * ACE-INSTALL.html: added information about -j GNU make option.

Wed Aug 25 12:26:49 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.h:
          On Borland C++ (and other platforms) we should use
          std::bad_alloc instead of bad_alloc for the ACE_bad_alloc
          exception.  We use the ACE_USES_STD_NAMESPACE_FOR_STDCPP_LIB
          macro to detect this. Thanks to Jody Hagins <jody@atdesk.com>
          for this fix.

        * tests/run_tests.lst:
          Disabled the Token test, it is more trouble that it is worth. It
          hangs and tends to freeze the complete testsuite.

Wed Aug 25 12:09:32 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * Makefile:
          Include (conditionally) the $TAO_ROOT/tao/tao_targets.GNU file,
          that defines the targets required to compile just TAO.

Tue Aug 24 21:47:44 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Synch_Options.{h,cpp} (timeout): added const to
          ACE_Time_Value & argument, because it's not modified.
          Thanks to John Lindal <jafl@cco.caltech.edu> for suggesting this.

Tue Aug 24 10:02:51 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Process_Manager_Test.cpp: Fixed a number of warnings
          caused by unused args and signed/unsigned mismatches.  Thanks to
          David Levine for reporting this.

        * ace/Service_Repository.h,
          ace/Service_Config.h,
          ace/OS.h:
          Changed the default number of entries in the
          ACE_Service_Repository from ACE_DEFAULT_SELECT_REACTOR_SIZE
          to ACE_DEFAULT_SERVICE_REPOSITORY_SIZE, which defaults to
          1024.  Thanks to Ivan Murthy <Ivan.Murphy@med.siemens.de> for
          suggesting this.


Tue Aug 24 16:23:07 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * bin/make_release:
          Use an explicit temporary file to create the ChangeLog, i had
          some problems with the previous scheme, but it could be my
          shell.
          When tagging TAO we have to change directories.

Tue Aug 24 12:19:29 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Makefile:
          Updated dependencies

        * performance-tests/TCP/tcp_test.cpp:
          Fixed argument parsing.

Tue Aug 24 10:37:02 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/cvslog (find_changelogs): one more time: append /$file
          to `pwd`, so that we can find ChangeLogs in child directories.
          Always call basename (), again.

Tue Aug 24 09:10:58 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/cvslog (find_changelogs): don't call basename () immediately
          after calling `pwd`, so that ChangeLogs in current directory
          will be found.

Tue Aug 24 07:11:52 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.*,Object_Manager.{h,cpp},README: with ACE_LACKS_ATEXIT,
          use ACE_OS_Object_Manager::at_exit () to emulate atexit ().
          [Bug 246]

        * tests/Object_Manager_Test.cpp,tests/Makefile,
          tests/run_pharlap_tests.bat,tests/run_tests.bat,
          tests/run_tests.lst,tests/run_tests.psosim,
          tests/run_tests.vxworks,tests/t.icc,tests/icc.bat:
          added Object_Manager_Test.

Mon Aug 23 22:03:24 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * include/makeinclude/rules.lib.GNU:
        * include/makeinclude/rules.local.GNU:
          When compiling both shared and static libraries only one of them
          was installed. Thanks to Paul Calabrese <calabrese_p@ociweb.com>
          for providing this fix.

Mon Aug 23 21:41:43 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/run_tests.pl:
          We search for "Starting" instead of "starting" because that's
          what the tests print out now.

Mon Aug 23 21:20:28 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * docs/ACE-guidelines.html:
          Added new guidelines relevant to ACE+TAO.

Mon Aug 23 16:57:13 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * performance-tests/RPC/README:
        * performance-tests/RPC/client.cpp:
          Changed the options to make it more consistent with other tests
          like this one.
          Added a README file

Mon Aug 23 16:53:00 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * performance-tests/Makefile:
        * performance-tests/TCP/README:
          Added a README file for the test

        * performance-tests/TCP/tcp_test.cpp:
          Added options to pace the events and to control the message size
          on the server side.

        * performance-tests/RPC/Makefile:
        * performance-tests/RPC/client.cpp:
        * performance-tests/RPC/ping.x:
        * performance-tests/RPC/server.c:
          Added a simple RPC test to compare sockets (ACE), RPC and TAO.

Mon Aug 23 13:30:32 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * include/makeinclude/platform_sunos5_kcc.GNU: The optimization
          flag for KCC should be +K3, not -K2.

Mon Aug 23 10:56:40 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/cvslog: added this wrapper around cvs log.  It
          expands ChangeLogTags to their ChangeLog entries.
          Thanks to Luther for helping greatly with it.

Mon Aug 23 08:46:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Object_Manager.{h,cpp}: replaced the use of
          ACE_Unbounded_Queue<ACE_Cleanup_Info> with a new
          ACE_Cleanup_Info_Node private helper class.  The reduces
          the size of libACE by over 4 Kb, and is the first step
          towards moving the Object_Manager's atexit () support to
          OS. [Bug 246]

Mon Aug 23 07:28:02 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/run_tests.check: changed "starting" to "Starting",
          to match a recent change to test_config.h.

        * tests/test_config.h: changed one remaining "starting" to
          "Starting", to be consistent.

Mon Aug 23 07:08:17 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/run_tests.lst: disabled Process_Manager_Test,
          because it never terminates when built with egcs
          on both Solaris 7 and Linux.

Sun Aug 22 21:15:13 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Makefile: with Green Hills for x86 target, use
          $(MAKE) instead of make to build .obj/gethrtime.o.
          Thanks to Cliff_H_Campbell <Cliff_H_Campbell@res.raytheon.com>
          for reporting this.

Sun Aug 22 21:02:26 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-vxworks5.x.h: added ACE_LACKS_ATEXIT.

Sun Aug 22 21:01:18 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/README: added ACE_LACKS_ATEXIT.

Sun Aug 22 14:51:56 1999  Vishal Kachroo  <vishal@cs.wustl.edu>

        * ace/OS.i (join_leaf): Constructed a winsock2 QOS structure
          within ACE_OS::join_leaf () from the corresponding ACE QOS
          classes. Passed this QOS structure to WSAJoinLeaf ().

Sun Aug 22 12:18:42 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Process.i (wait): Fixed a typo.

        * ace/Process.cpp (ACE_Process): Removed an extra underscore.

        * ace/OS.i (getppid): Removed undefined variable <pid>.

Sat Aug 21 12:36:40 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.h: Moved the ACE_OS::set_exit_hook() static method
          into the OS.i file so be more consistent with the other ACE_OS
          methods.  Also, changed the signature of extern "C" void
          ACE_OS_Object_Manager_Internal_Exit_Hook () to void
          ACE_OS_Object_Manager_Internal_Exit_Hook (void) so that this
          will match the type declaration for ACE_EXIT_HOOK.
          [NOTE: that's not really a signature change.  g++ needs the
          "void", however, to avoid a bug without -pedantic.]

        * ace/Process_Manager.cpp: Use the new ACE_OS::wait() method,
          which is portable to Win32, rather than ACE_OS::waitpid().

        * tests/Process_Manager_Test.cpp: Completed the first major
          enhancement to the test that exercises the new
          ACE_Process_Manager features.  This test builds and runs cleanly
          on Solaris using CC and should run on other versions of UNIX
          that support threads and processes.  It would be great if
          someone could improve it to run on Win32, as well.

        * ace/Process_Manager: Added support for the spawn_n() method,
          which creates N new processes.

        * tests: Cleaned up the use of ACE_INIT_LOG/ACE_APPEND_LOG in
          Process_Manager_Test.cpp and Malloc_Test.cpp so we don't lose
          information.  Both these tests now write their child processes'
          output to "<testname>-child.log".

        * ace/Thread_Manager.h: Added a default value of 0 to the
          exit() method since this is a common return status.

        * ace/config-win32-common.h: Added ACE_LACKS_GETPPID.

        * ace: Added a new wrapper for getppid().  For platforms that
          don't support this system call, please add ACE_LACKS_GETPPID.

        * tests: Moved the $ACE_ROOT/examples/Threads/process_manager.cpp
          example into the $ACE_ROOT/tests directory, renamed it to
          Process_Manager_Test.cpp, and revised the test to illustrate the
          new ACE_Process_Manager features.

        * tests/run_tests.lst: Added the Process_Manager_Test to the
          list of tests to run.

        * tests/Malloc_Test.cpp (main): Added some necessary ASYS_TEXT
          macros.

        * ace/Process.i: Rather than replicate the #ifdef logic in
          ACE_OS::kill() within ACE_Process:kill(), we just forward to
          ACE_OS::kill() and let it sort this out!

        * ace/Process: Moved several of the short wait() methods from the
          *.cpp file to the *.i file and inlined them.

        * ace/Process_Manager.cpp: The logic for the implementation of
          terminate() was incorrect, i.e., the process table entry should
          be removed *if* ACE::terminate_process() succeeds but *not* if
          it fails!

        * ace/OS.h: Added a new method called wait() that works portably
          on Win32 and UNIX/POSIX platforms.

        * ace/Process: Added an optional "options" parameter to the former
          "blocking" wait() method on ACE_Process.  This allows clients to
          use the WNOHANG option to avoid blocking if the child process
          hasn't exited yet.  Also changed the type of the return value to
          pid_t rather than int.  Finally, added an optional status
          pointer to the "timed" wait() method (which only works on
          Win32).

        * ace/OS.h: On platforms that do not define WNOHANG natively,
          changed #ifdef of WNOHANG to 0100 (which can be used in bitmask
          comparisons) rather than Douglas Adams favorite constant: 42.

Sat Aug 21 14:13:46 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ACE version 5.0.2 released.

Sat Aug 21 11:52:51 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * Makefile:
          Fixed small problem in the releaseall target.

        * bin/make_release:
          The shell did not like the embedded script to print the
          ChangeLog entry.

Fri Aug 20 15:40:58 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Process_Manager: Added a new method called wait() that's
          just syntactic sugar for ACE_Process_Manager::reap().  Thanks to
          Dave Madden <dhm@mersenne.com> for suggesting this.

        * ace/OS: Added support for ACE_OS::atexit(), which necessitated
          changing the extern "C" signature for ACE_EXIT_HOOK to typedef
          void (*ACE_EXIT_HOOK) (void) so that this will be consistent
          with the signature expected by the ISO/ANSI C atexit() call.  At
          the moment, ACE_OS::atexit just calls ::atexit() (unless a
          platform's config.h file #defines ACE_LACKS_ATEXIT).
          Ultimately, we might want to have this hook into the
          ACE_OS_Object_Manager's at_exit() support, which may be more
          portable and reliable.

        * ace/ACE_Process_Manager.h: Made the destructor virtual so it's
          possible to subclass from this class.

        * ace/Process_Manager.h: Updated the comments on the wait()
          method to indicate that a signal handler must be used to keep
          track of the number of remaining child processes.  Thanks to
          Dave Binder <dbinder@globalmt.com> for motivating this.

Thu Aug 19 18:45:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/Auto_Ptr.h: modified ACE_AUTO_PTR_RESET macro, to pass the
          type of the pointer.  This is needed for the case where
          ACE_AUTO_PTR_LACKS_RESET is defined, in order to explicitly
          convert the pointer into an auto_ptr for assignment.

Thu Aug 19 17:26:50 1999  John Heitmann  <jwh1@cs.wustl.edu>

        * docs/ACE-SSL.html: Cleaned up the auto generated errors.

Thu Aug 19 16:47:21 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ACE-INSTALL.html: Added a reference to $ACE_ROOT/docs/ACE-SLL.html.

        * docs: Added a new ACE-SSL.html file that explains how to participate in the
          ACE SSL project.  Thanks to John Heitmann <jwh1@cs.wustl.edu>
          for adding this.

Thu Aug 19 15:31:58 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h (ACE_OSTREAM_TYPE): Removed the redundant trailing *
          for the defintion when ACE_LACKS_IOSTREAM_TOTALLY is defined.

Thu Aug 19 14:16:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/rules.nested.GNU: added ACE_NESTED_COMMAND
          hook.  Users can set it to whatever they like (preferably in
          include/makeinclude/platform_macros.GNU).  One example is
          to set it to:

            ACE_NESTED_COMMAND := || break $?

          to terminate building if a build in one subdirectory fails.
          Thanks to Lothar Werzinger <werzinger.lothar@krones.de> for
          suggesting this addition.

Thu Aug 19 13:06:00 1999  Michael Kircher  <Michael.Kircher@mchp.siemens.de>

        * ace/Read_Buffer.cpp: Fixed a bug in rec_read () method
          which prohibited reading more than 1024 bytes at once.

Thu Aug 19 13:03:07 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/ACE.h (ACE): Fixed a "cut & paste" error in the comment --
          basename should have been dirname.  Thanks to Mark Hyett
          <mhyett@std.saic.com> for reporting this.

        * ace/ACE.cpp: Fixed a bug in ACE::dirname() that was causing problems
          if the pathname didn't have a delim character.  Thanks to Russ
          Noseworthy for reporting this and providing a fix.

Thu Aug 19 12:59:56 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Message_Block.i:
          Moved ACE_Message_Block::replace_data_block() down in the file
          because it was using inline functions that were defined after it
          was. Thanks to David for pointing this out.

Thu Aug 19 10:53:50 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.i (setuid): added ACE_UNUSED_ARG (uid) for VxWorks,
          pSOS, WIN32, and Chorus.  Thanks to Garry Brother
          <gmbroth@ncsc.mil> for reporting this.

Thu Aug 19 10:04:12 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU: added
          trap to cause builds to fail if the exceptions flag is
          enabled.  The VxWorks libraries don't support exceptions.
          And, exceptions give the (Tornado II) compiler fits, e.g.,
          with ACE_wrappers/TAO/tao/IORManipulation.cpp.  Thanks to
          Erik Johannes <ejohannes@oresis.com> for this nifty preemptive
          solution, and to Nick Sawadsky <Nick_Sawadsky@BrooksSoftware.com>
          for motivating its implementation.

Thu Aug 19 09:34:41 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/WFMO_Reactor.h,
        * ace/WFMO_Reactor.cpp,
        * ace/Select_Reactor_T.h,
        * ace/Select_Reactor_T.cpp,
        * ace/Reactor_Impl.h,
        * ace/Reactor.h,
        * ace/Reactor.cpp:
          Added a pair of restart() methods that can be used to set/get
          the restart_ flag, which controls whether the handle_events()
          event loop is restarted automatically when select() is
          interrpted.  Thanks to Erik Koerber <erik.koerber@siemens.at>
          for suggesting this.

        * ace/Service_Config: Updated the failure result comment for
          open() and cleaned up the return value and errno propagation for
          open_i() when process_commandline_directives() fails.  Thanks to
          Jerry D. De Master <jdemaste@ipdinc.com> for reporting the bug
          and suggesting a fix.

        * ace/Service_Config.h: Moved the process_directives() method
          used to parse the svc.conf files out of the protected part of
          the class to the public part so that application programmers can
          call this directly to reconfigure services from the svc.conf
          files.  Thanks to John Mink <John.Mink@nl.origin-it.com> for
          suggesting this.

Wed Aug 18 22:45:24 1999  Douglas C. Schmidt  <schmidt@mambo.cs.wustl.edu>

        * ace/WFMO_Reactor.h,
        * ace/WFMO_Reactor.cpp,
        * ace/XtReactor.h,
        * ace/XtReactor.cpp,
        * ace/TkReactor.h,
        * ace/TkReactor.cpp,
        * ace/FlReactor.h,
        * ace/FlReactor.cpp,
        * ace/Select_Reactor_T.h,
        * ace/Select_Reactor_T.cpp,
        * ace/Reactor_Impl.h,
        * ace/Reactor.h,
        * ace/Reactor.cpp:
        * ace/Timer_Hash_T.h:
        * ace/Timer_Heap_T.h:
        * ace/Timer_List_T.h:
        * ace/Timer_Queue_T.h:
        * ace/Timer_Wheel_T.h:
        * ace/Timer_Hash_T.cpp:
        * ace/Timer_Heap_T.cpp:
        * ace/Timer_List_T.cpp:
        * ace/Timer_Wheel_T.cpp:
          Changed all uses of const long to long...

Wed Aug 18 22:15:58 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/run_tests.sh:
          It was running the DISABLED tests, thanks to David for pointing
          this out.

Wed Aug 18 21:48:52 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: added Toshio Hori <lttoshi@etl.go.jp>
          suggestions (in a new section) on building just what's
          needed for TAO, and his tips for reducing disk space
          usage on Unix platforms.

Wed Aug 18 21:32:56 1999  Ossama Othman  <othman@cs.wustl.edu>

        * docs/usage-bugzilla.html:

          Added a simple document explaining basic usage of our
          installation of bugzilla.

        * ACE-INSTALL.html:
        * PROBLEM-REPORT-FORM:

          Updated with information about the bugzilla usage
          documentation.

Wed Aug 18 20:28:23 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/check_build_logs: check for just Stop, not [Ss]top,
          to avoid snagging top output.  Gnu make says "Stop" when
          it can't find a dependency.

Wed Aug 18 19:08:08 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,cpp},Object_Manager.{h,cpp},Log_Msg.cpp:
          moved ACE_LOG_MSG_INSTANCE_LOCK from ACE_Object_Manager
          to ACE_OS_Object_Manager, so that Log_Msg.cpp needn't
          to depend on Object_Manager for it.

Wed Aug 18 18:20:11 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/SOCK_Send_Recv_Test.cpp:
          Fixed typo.

Wed Aug 18 17:58:06 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * THANKS:
        * ace/README:
        * ace/config-irix6.x-common.h:
          Added new macro (ACE_HAS_BROKEN_DGRAM_SENDV) to handle platforms
          where using sendmsg with exactly IOV_MAX elements in the iovec
          fails (normally the number of elements can be up to and
          including IOV_MAX).  Thanks to Tobin Bergen-Hill
          <tbhill@dctd.saic.com> for tracking this down.

Wed Aug 18 16:08:46 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * tests/SOCK_Send_Recv_Test.cpp: Reformatted this test so
          that it conforms to ACE programming guidelines.

Wed Aug 18 13:49:30 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Makefile: if ACE_COMPONENTS = FOR_TAO, don't include
          Filecache in UTILS_FILES.  TAO doesn't need Filecache.
          And, its ACE_Hash<ACE_CString> and ACE_Equal_To<ACE_CString>
          explicit template instantiations collide with those in
          ACE_wrappers/TAO/tao/POA.cpp.  That precludes building
          a shared libTAO for VxWorks, for example.  And, it costs 14 Kb.
          Thanks to Erik Johannes <ejohannes@oresis.com> for helping
          to find this solution.  And reminding me to implement it :-)

Wed Aug 18 13:16:09 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: clarify that PERL_PATH must include
          the full path, including the perl.exe filename.  Thanks
          to Walter Welzel <Walter.Welzel@med.siemens.de> for
          reporting this.

Wed Aug 18 13:11:30 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.h:
        * ace/OS.i:
          The new methods to manipulate condition variable attributes
          were not compiling on single threaded platforms.

Wed Aug 18 13:09:36 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Makefile: don't add libDLL_Test.$(SOEXT) to BUILD
          on VxWorks.  Thanks to Walter Welzel <Walter.Welzel@med.siemens.de>
          for reporting that it did get build for VxWorks with
          shared libs enabled, but not successfully (or usefully).

Wed Aug 18 10:36:16 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ACE-INSTALL.html: Updated all references to MSVC 4.x.  We no
          longer support the compiler.  Thanks to Welzel Walter
          <Walter.Welzel@med.siemens.de> for pointing this out.

Wed Aug 18 10:42:13 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Timer_List_T.cpp (reset_interval): Added a constcast to
          make SunC++ 4.2 happy.  Thanks to Andy for reporting this.

        * ace/WFMO_Reactor.i (reset_timer_interval): The return type
          was incorrect...  Thanks to Andy and Jeff for reporting this.

Wed Aug 18 09:47:51 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/run_tests.pl:
          The disabled tests were executed anyway, thanks to David for
          pointing this out.

Wed Aug 18 09:34:46 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/FlReactor.cpp:
        * ace/XtReactor.cpp:
          Fixed typos in the code, this is only used in a few platforms,
          that's why it didn't show up before.

Tue Aug 17 20:02:55 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Reactor_Timer_Test.cpp: Enhanced this test to exercise
          the new reset_timer_interval() feature that Darrell added.  It
          appears to work quite well.  Also, make the test easier to
          understand by adding more structure.

        * ace/WFMO_Reactor.h,
        * ace/WFMO_Reactor.cpp,
        * ace/XtReactor.h,
        * ace/XtReactor.cpp,
        * ace/TkReactor.h,
        * ace/TkReactor.cpp,
        * ace/FlReactor.h,
        * ace/FlReactor.cpp,
        * ace/Select_Reactor_T.h,
        * ace/Select_Reactor_T.cpp,
        * ace/Reactor_Impl.h,
        * ace/Reactor.h,
        * ace/Reactor.cpp:
          Exposed the new reset_interval() method Darrell added to all the
          Timer mechanisms via a method in each of these Reactor's called
          reset_timer_interval().

        * ace/Timer_Hash_T.h:
        * ace/Timer_Heap_T.h:
        * ace/Timer_List_T.h:
        * ace/Timer_Queue_T.h:
        * ace/Timer_Wheel_T.h:
        * ace/Timer_Hash_T.cpp:
        * ace/Timer_Heap_T.cpp:
        * ace/Timer_List_T.cpp:
        * ace/Timer_Wheel_T.cpp:
          Changed the return values of <reset_interval> to be (1)
          consistent (i.e., to return a value through all paths in the
          method) and (2) to return -1 on failure and 0 on success.
          Also replaced a number of C-style casts with
          ACE_reinterpret_casts.

Tue Aug 17 20:51:35 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/TP_Reactor.h:
        * ace/TP_Reactor.cpp:
          The TP Reactor also experiences a performance hit if signal
          masking is enabled.  Therefore, we can now make this optional.

Tue Aug 17 19:10:00 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/OS.cpp: Fixed typo.

        * ace/Stats.cpp: Removed some warnings showing up in MSVC when
          assigning ACE_UINT64 values to ACE_UINT32 variables.  Used
          ACE_U64_TO_U32 to remove these warnings.

        * ace/Timer_Hash_T.h:
        * ace/Timer_Heap_T.h:
        * ace/Timer_List_T.h:
        * ace/Timer_Queue_T.h:
        * ace/Timer_Wheel_T.h:
        * ace/Timer_Hash_T.cpp:
        * ace/Timer_Heap_T.cpp:
        * ace/Timer_List_T.cpp:
        * ace/Timer_Wheel_T.cpp:
          Added a new method, <reset_interval> which can be used to
          change the interval of a timer represented by a timer_id.

Tue Aug 17 18:43:53 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/OS.h:
        * ace/OS.i:
          Added wscmp and wsncmp functions to go with the existing
          wslen and wscpy functions. These all use WChar*, so arg
          size is independent of platform. These are to be used for
          all manipulations of CORBA::WString. The two that were
          added were needed for wstring tests in Param_Test. WChar*
          versions of the other string manipulation functions will
          be added as needed.

Tue Aug 17 17:49:33 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/config-sunos5.5.h: If (_LARGEFILE_SOURCE) || (_FILE_OFFSET_BITS==64)
          are enabled then #undef ACE_HAS_PROC_FS and ACE_HAS_PRUSAGE_T to
          work around problems with Solaris 7.  Thanks to Sridhara Rao
          Dasu <dasu@slac.stanford.edu> for reporting this.

        * ace/OS.i: Updated the readdir_r() conditional compilation so that
          it'll work when _FILE_OFFSET_BITS == 64.  Thanks to Sridhara Rao
          Dasu <dasu@slac.stanford.edu> for reporting this.

Tue Aug 17 17:17:13 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.h:
        * ace/OS.i:
        * ace/OS.cpp:
          Added new data type to handle condition variable attributes
          (ACE_condattr_t).  New methods to manipulate that data type
          (ACE_OS::cond_attr_init and destroy) Add new method to create a
          condition variable from a pre-initialized attribute.

        * ace/Synch.h:
        * ace/Synch.i:
        * ace/Synch.cpp:
          Added new wrapper for the ACE_condattr_t structure.

        * ace/Token.h:
        * ace/Token.cpp:
          Use ACE_Condition_Attributes to minimize the number of memory
          allocations and locks in the critical path of the TP_Reactor.

Tue Aug 17 15:55:17 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * performance-tests/TCP/TCP.{dsw,dsp}:
        * performance-tests/TCP/Makefile:
        * performance-tests/TCP/tcp_test.cpp: Added the new test modified
          by Carlos and a bit further by me.  The test measures TCP
          performance of a platform.  We can also use it to test the
          performance of various reactors.

Tue Aug 17 14:52:40 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/config-win32.h: Added ACE_CC_COMPILER definition for MSVC.
          ACE_CC_COMPILER is a string containing the compiler program.

Tue Aug 17 13:48:27 CDT 1999  Loren Rittle  <rittle@rsch.comm.mot.com>

        * bin/update-ace+tao.sh: Use authoritative name list instead of
          ad hoc list to update file.

Tue Aug 17 06:33:05 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Task.h: Clarified the comment regarding
          open() and close() on ACE_Task_Base.  Thanks to Jeff Franks
          <Jeffrey_Franks@i-o.com> for suggesting this.

Tue Aug 17 11:56:33 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Select_Reactor_T.h:
        * ace/Select_Reactor_T.cpp:
          Added option in the constructor to disable the signal handling
          features in the select reactor. This eliminates a couple of
          kernel level locks that are not needed in all applications.

        * ace/Stats.h:
        * ace/Stats.cpp:
          Now we keep track of the iteration where the minimum and maximum
          latencies were achieved.

Tue Aug 17 06:33:05 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * bin: Added a new shell script called update-ace+tao.sh
          that updates the ACE/TAO source tree to the latest
          numeric-assigned version.  Thanks to Loren Rittle
          <rittle@comm.mot.com> for contributing this.

Mon Aug 16 20:09:12 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.i:
        * ace/CDR_Stream.cpp:
          Added new method to transfer the contents of one CDR stream into
          another. This is used in the implementation of the ORB to
          minimize the number of data copies, memory allocations and
          locks.

        * ace/Message_Block.h:
        * ace/Message_Block.i:
          Added new method to replace the Data_Block, this method returns
          the old one, letting the user decide how to deallocated the Data
          block, possibly transfering it to another Message_Block.

Mon Aug 16 15:58:12 1999  Steve Huston  <shuston@riverace.com>

        * ace/config-sunos5.5.h:
        * include/makeinclude/platform_sunos5_sunc++.GNU: Added support
          for using "compat=4" mode for Sun CC 5. To use this, do
          "make compat4=1", or equivalent. Compat 4 uses -compat=4 with
          its old iostreams, but the newer Sun CC 5 scheme of explicit
          template instantiation.

Mon Aug 16 11:59:18 1999  Vishal Kachroo  <vishal@cs.wustl.edu>

        * ace/SOCK_Dgram_Mcast.cpp (subscribe): Constructed and passed a
          complete sockaddr_in to the ACE_OS::join_leaf () call. This was
          just being passed sockaddr_in.sin_addr.s_addr.

Sat Aug 14 18:01:27 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/run_tests.pl:
          Fixed some output messages that were going to stdout.

Sat Aug 14 15:20:27 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SOCK_Dgram_Mcast.cpp (subscribe): It looks like there
          was a bug where we were passing an s_addr to ACE_OS::join_leaf()
          rather than a sockaddr *.  Fixing this also cleaned up some code
          that was #ifdef'd for UNICOS.  Thanks to Vishal for reporting
          this.

        * ace/Process.h: Added a virtual to ~ACE_Process so that it
          can be used for subclassing more readily.  Thanks to Zoran
          Ivanovic <zorani@pathcom.com> for suggesting this.

Sat Aug 14 14:11:25 1999  Everett Anderson  <eea1@cs.wustl.edu>

        * ace/Remote_Tokens.cpp (tryacquire): Fixed so that it uses
          ACE_Token_Request::TRY_ACQUIRE instead of RELEASE.

Fri Aug 13 18:55:51 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Handle_Set.h (ACE_Handle_Set): Clarified the meaning of the
          nbits_ array.  Thanks to Hao Ruan <hruan@lucent.com> for
          motivating this.

Fri Aug 13 21:18:40 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.i (llseek): on Linux, moved extern "C" llseek ()
          declaration out of the function.  Thanks to Tal Lev-Ami
          <tla@tici.co.il> for this fix.

Fri Aug 13 20:50:02 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Select_Reactor_T.cpp (handle_events): Added a deactivation
          check for non-threaded case.  The original check was mixed with
          thread owner check and thus got disabled under single-threaded
          configurations.  Thanks to Kirthika for reporting the problem.

Fri Aug 13 13:11:16 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/make_release: moved ACE_wrappers/TAO addition to
          $release_files so that it's only done for the ACE+TAO kit.

Fri Aug 13 12:44:08 1999  David L. Levine  <levine@cs.wustl.edu>

        * Makefile,bin/make_release: added support (and documentation)
          for creating kits with or without new tags, or using an old
          tag; generated man pages; installation to the public ftp/http
          site on ace; and zip files.

Fri Aug 13 07:58:12 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,i},README,config-osf1-4.0.h (llseek): added
          ACE_HAS_LLSEEK support.  Thanks to Tal Lev-Ami <tla@tici.co.il>
          for providing this.

Thu Aug 12 22:05:37 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.i (sema_wait, rw_tryrdlock, rw_trywrlock):
          Replaced more ad hoc uses of the

          int error = 0;
          ...
          error = errno;
          ...
          errno = error;

          idiom with the ACE_Errno_Guard.

        * ace/Synch.h: Updated the comment to remind folks who would
          like to have a working ACE_Process_Condition to contact us if
          they know how to do this.  Thanks to Craig Anderson
          <chanders@timing.com> for motivating this.

        * tests/Process_Strategy_Test.cpp (open): Clarified the behavior
          of the code that's run when fork() is used.  Thanks to Umar
          Syyid for motivating this.

Thu Aug 12 21:30:09 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU:
          added SIMNT support.

Thu Aug 12 20:54:40 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-osf1-4.0.h: added ACE_HAS_USING_KEYWORD
          for cxx and Rational compilers. [Bug 163]

Thu Aug 12 20:47:13 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Cached_Accept_Conn_Test.cpp:
          Made the <debug> and <connection_accepted> variables global
          instead of static, because otherwise Sun/CC automatic template
          instantiation cannot find them at link time.  The variables are
          used in template code that is defined and used in the same file,
          but Sun/CC does not seem to understand that.

Thu Aug 12 17:14:35 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/OS.h:
          Changed typedef of WChar to ACE_UINT16. The CDR operations
          are already using write_2, read_2 and SHORT_SIZE, and
          in the process of implementing wchars and wstrings in
          IDL, it's going to be important to optimize for the
          Unicode common case.

Thu Aug 12 16:24:16 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/make_release: chdir up a level before removing the
          staging directory.  Thanks to Carlos for pointing out
          that it's necessary, because we had chdir'd into it.
          And for noticing that $build_commands got clobbered in
          create_kit ().  Obey $generate_man_pages setting.

Thu Aug 12 16:03:03 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE version 5.0.1 released.

Thu Aug 12 15:49:00 1999  David L. Levine  <levine@cs.wustl.edu>

        * Makefile,bin/make_release: build kits in /tmp staging
          area, and copy to ace's ftp pub/ACE directory.

Thu Aug 12 11:36:46 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.h:
        * ace/Svc_Handler.cpp:
        * ace/Future.cpp:
          Some platforms require arguments in the exception thrown from
          operator new. The standard (std::bad_alloc) does not require
          any.
          Added a new macro (ACE_throw_bad_alloc) that takes care of these
          differences, including platforms that don't throw exceptions but
          return something.

Wed Aug 11 17:00:00 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/Cached_Accept_Conn_Test.cpp:
          Removed run_event_loop and end_event_loop and put in
          handle_events with a flag to stop the loop. This is a bug fix
          for Bug183.

Wed Aug 11 15:49:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: cleaned up ACE doc tool discussion.
          Added Carlos' inlining heuristics.

Wed Aug 11 13:53:20 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-win32.h,config-win32-borland.h: added
          ACE_HAS_MUTABLE_KEYWORD.  Thanks to Jody for this request.

Wed Aug 11 13:15:26 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-g++-common.h,config-win32.h,config-win32-borland.h:
          added ACE_HAS_EXPLICIT_KEYWORD
          (for egcs only, in config-g++-common.h).  Thanks to Jody Hagins
          <jody@atdesk.com> for this update.

        * ace/config-g++-common.h: added ACE_HAS_MUTABLE_KEYWORD.

Wed Aug 11 13:10:32 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h,README: added ACE_HAS_MUTABLE_KEYWORD support.
          Thanks to Jody Hagins <jody@atdesk.com> for providing it.

Wed Aug 11 12:55:23 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Svc_Handler.cpp:
        * ace/Future.cpp:
          The throw expressions require a constructor, not just the type,
          thanks to David for pointing this out.

Wed Aug 11 10:12:11 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h,Auto_Ptr.h,SString.h,README: added support for
          ACE_HAS_EXPLICIT_KEYWORD.  Thanks to Jody Hagins <jody@atdesk.com>
          for suggesting this.

Wed Aug 11 10:07:36 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Future.cpp:
        * ace/Local_Tokens.cpp:
        * ace/Log_Msg.cpp:
        * ace/Log_Record.cpp:
        * ace/Svc_Handler.cpp:
        * netsvcs/lib/Token_Handler.cpp:
          Fixed several warnings and errors with gcc-2.95

        * include/makeinclude/wrapper_macros.GNU:
          Add -fcheck-new to the command-line of g++ when compiling with
          exceptions disabled.  In that case new operators could return 0
          and without this option the constructor will surely be invoked
          on invalid data.

        * bin/auto_compile:
          Use LOGNAME instead of USER to get the username because it is
          more portable.

Tue Aug 10 23:47:32 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Cached_Connect_Strategy_T.h:
        * ace/Caching_Utility_T.h:
        * ace/Caching_Strategies_T.h:
        * ace/Cleanup_Strategies_T.h:
        * ace/Cache_Map_Manager_T.h:
        * ace/Hash_Cache_Map_Manager_T.h:

          Defined macros to shorten lengthy class names for linkers which
          couldnt grok long names (example: Sun Linker). Thanks to
          Dr.Schmidt for this cool idea.

Tue Aug 10 19:07:32 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/run_tests.sh:
        * tests/run_tests.pl:
        * tests/run_tests.lst:
          Move the list of tests to a separate file. This file is used to
          drive both a perl version of the script and the old shell
          version.
          The new perl version is able to terminate programs that hang,
          but still has problem with processes that fork children who then
          hang for some reason. The perl script has to be ported to Win32
          too.

        * bin/run_all_list.pm:
          Use the new tests/run_tests.pl script on Unix.

        * bin/run_all.pl:
          Run all the test scripts in ACE and TAO, much like run_all_win32
          but for unix systems.

        * bin/auto_compile:
          Remember to remove the disable file in case of errors.

Tue Aug 10 18:08:30 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/CDR_Stream.h:
        * ace/CDR_STream.i:
          Added all the necessary stuff for wstrings.

Tue Aug 10 15:36:02 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Malloc_Test.cpp (main): removed unused argc
          declaration, with ACE_LACKS_FORK && ! ACE_HAS_WIN32.

Tue Aug 10 15:26:43 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (strptime): removed unreachable break after
          return statement, in default case of switch statement.

Tue Aug 10 14:46:12 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,cpp},README: Changed support for ACE_OS::strptime ()
          to be configurable.  VxWorks, LynxOS, and Chorus, for example,
          don't have a native ::strptime ().  The current emulation cost
          2 Kb, which will be objectionable to some embedded systems
          developers.

          Replaced ACE_LACKS_STRPTIME with a combination
          ACE_HAS_STRPTIME/ACE_LACKS_NATIVE_STRPTIME.  ACE_HAS_STRPTIME
          enables ACE_OS::strptime () support.  ACE_LACKS_NATIVE_STRPTIME
          lets ACE know that there's no native ::strptime (), so it then
          uses its emulation.

          This has two advantages:  it minimizes footprint in the default
          case, and doesn't break builds on platforms that don't have
          ::strptime ().  It easily allows developers to configure ACE
          identically, with respect to strptime, on their Unix, NT, and
          embedded platforms. [Bug 219]

        * ace/config-sunos5.5.h,config-linux-common.h,config-osf1-4.0.h,
          config-irix6.x-common.h:
          added #define ACE_HAS_STRPTIME. [Bug 219]

Tue Aug 10 12:28:54 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * bin/run_all_list.pm:
          Added IDL test to the list.

Mon Aug 09 16:49:45 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Process.{h,cpp} (wait): Re-visited the implementation so it
          behaves the same on both UNIX and Win32.  Thanks to Doug for
          suggesting this.

Mon Aug 09 16:30:24 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: added note to follow the
          ACE documentation tools guidelines and restrictions.
          Thanks to Doug for pointing this out.

Mon Aug 09 16:06:01 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * include/makeinclude/wrapper_macros.GNU: Applied smart eg++
          recognizer.  Thanks to Craig Anderson <chanders@timing.com> for
          providing the patch.

Mon Aug  9 11:29:36 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * bin: Fixed html-windex so that it works when class names contain
          the digit '3' in them, e.g., ACE_WIN32_Asynch_Accept, etc.
          Thanks to Jody Hagins <jody@atdesk.com> for reporting this
          problem.

Mon Aug 09 15:10:27 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Process.h (wait): Rewrote comments.

        * ace/Service_Config.h (open): Revised the comments for several
          service_config flags.  Thanks to Doug for pointing this out.

Mon Aug  9 11:29:36 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * examples/Reactor/Misc/test_demuxing.cpp: Added a destructor
          to ~STDIN_Handler that will remove the event handler for STDIN
          and the registered timer.

Mon Aug  9 10:45:24 1999  Douglas C. Schmidt  <schmidt@mambo.cs.wustl.edu>

        * ace/Memory_Pool.cpp (handle_signal):  When working with an MMAP
          memory pool, a "real" segmentation fault (not related to
          updating the memory mapping) will cause the process to fail but
          not write a core file. This is because that on linux (and
          possibly other flavours of UNIX) core file writing is a default
          behaviour which is disabled once you register a signal handler.
          Even if the signal handler returns a bad return value which
          crashes the program, a core file will not be written.

          The fix for this is to modify the mmap() signal handler so that
          it de-registers the signal handler when detecting a segfault
          with the mapping up to date and return an "ok" answer. the
          program will attempt to access the illegal address again and
          dump core.  Thanks to Joseph Weihs <joseph-w@Orbotech.Co.IL> for
          contributing this fix.

        * ace/Signal: Changed the new handle_i() and register_handler_i()
          methods to be static member functions so they can be called from
          the static dispatch() member function.  Thanks to Andreas
          Geisler <andreas.geisler@erls.siemens.de> for reporting this.

Mon Aug  9 10:33:50 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * examples/ASX/CCM_App/SC_Server.cpp: Make sure to enable
          the appropriate parameter for ACE_Service_Config::open() so that
          static services will be enabled.  Thanks to Michael Roth
          <ombelico@gmx.net> for reporting this.

Mon Aug 09 10:21:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/wrapper_macros.GNU (INCLDIRS):
          removed "-I.".  It's not necessary, because the preprocessor
          will first look for headers in the current directory, when
          appropriate.  It causes trouble, for example, on NT for
          VxWorks with Green Hills.  Instead of including the system's
          Signal.h, ACE's signal.h gets #included with "-I.".  Thanks
          to Dale Wood <dale_wood@Mitel.com> for helping to track
          this down. [Bug 35]

        * include/makeinclude/platform_vxworks5.x_ghs.GNU: no longer
          need to override INCLDIRS, now that it doesn't contain "-I.".
          [Bug 35]

Mon Aug 09 10:09:57 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h,streams.h: moved ACE_OSTREAM_TYPE #define from
          streams.h to OS.h, so that it is seen with
          ACE_LACKS_IOSTREAM_TOTALLY. And, provide default value
          for ACE_DEFAULT_LOG_STREAM. [Bug 208]

        * ace/Log_Msg.cpp: changed a couple remaining ostream occurrences
          to ACE_OSTREAM_TYPE.  Replaced conditional use of
          ACE_DEFAULT_LOG_STREAM/&cerr with ACE_DEFAULT_LOG_STREAM,
          now that it's always defined. [Bug 208]

Mon Aug 09 09:47:06 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Log_Msg.{h,cpp}: replaced the ACE_Log_Msg_key_created_
          and ACE_Log_Msg_key_ file static variables with static
          class members ACE_Log_Msg::key_created_ and
          ACE_Log_Msg::log_msg_tss_key_, respectively.  Only declare
          ACE_Log_Msg::log_msg_tss_key_ if the platform supports TSS
          (native or emulated).  Replaced the ACE_Log_Msg_message_queue
          file static variable with ACE_Log_Msg_Manager::message_queue_.
          Cleaned up Log_Msg.cpp. [Bug 86]

          Thanks to Umar Syyid <usyyid@hns.com> for suggesting that
          we remove the file static variables.

Mon Aug 09 09:33:43 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h: #define ECOMM (to ECONNABORTED) if it's not
          already #defined.  This allows support on NT.  Thanks to
          Andy for reporting this.

Mon Aug  9 07:45:19 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Signal.h: Modified the behavior of the
          ACE_Sig_Handler::dispatch() method so that on Win32 it'll
          automagically re-register the signal handler after the
          handler_signal() method returns with a non -1 value.  Thanks to
          Andreas Geisler <andreas.geisler@erls.siemens.de> for suggesting
          this.

        * tests/Malloc_Test.cpp: Win32 didn't seem to like a 32k
          offset for the virtual address.  Let's try 64k instead.  Thanks
          to Nanbor for reporting this.

        * tests/Malloc_Test.cpp: Changed the sense of the conditional
          compilation test from && !defined (ACE_WIN32) to || defined
          (ACE_WIN32) so that this will run on Win32.  Thanks to
          Nanbor for reporting this.

        * ace/OS.i: Cleaned up the coding style for the sigset*
          wrapper functions.

Sun Aug 08 21:19:42 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-osf1-4.0.h: removed unreferenced_function_param
          warning suppression.  It's no longer needed with the fixes
          to avoid unreferenced function parameters. [Bug 217]

Fri Aug 06 15:20:00 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ACE-INSTALL.html: added information about compilation on
          SunOS5.6 using egcs1.1.2.

Fri Aug 06 13:47:51 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: added note about disabling optimization
          for some files with Tornado II.

Fri Aug 06 13:39:48 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: updated VxWorks build information,
          specifically, the instructions for building on NT host.
          And, added information about linking libACE.so and libTAO.so
          into the VxWorks kernel.  Thanks to
          Erik Johannes <ejohannes@oresis.com> and Stephane Chatre
          <schatre@oresis.com> for helping to clarify and verify.

Fri Aug 06 12:10:19 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-win32-common.h: Added
          ACE_HAS_POSITION_INDEPENDENT_MALLOC.

        * ace/OS.cpp (strptime_getnum): getnum should be strptim_getnum.

        * ace/config-win32-common.h: Added ACE_LACKS_STRPTIME.  Thanks to
          Andy for pointing this out.

Fri Aug 06 11:13:27 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/streams.h,OS.h,Log_Msg.h: with ACE_LACKS_IOSTREAM_TOTALLY,
          removed the hack that re-#defined ostream.  Replaced that
          with an ACE_OSTREAM_TYPE macro. [Bug 208]

Fri Aug 06 10:49:34 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: updated egcs versions that we use
          (1.1.1 and 1.1.2).

Fri Aug  6 08:43:22 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * examples/Log_Msg/test_log_msg.cpp (main): Changed this
          test so that it no longer abort()s, but instead calls
          ACE_OS::_exit().  This should help avoid confusion when it's
          run.  Thanks to Kevin Lyda <kevin.lyda@trintech.com> for
          reporting this.  This fixes [BUGID:211].

        * ace/SOCK_Dgram_Mcast: The QoS-enabled subscribe() call must
          call the QoS-enabled open() call, rather than the "regular"
          open() call because otherwise QoS information isn't initialized!
          Thanks to Vishal for pointing this out.

Fri Aug 06 08:22:00 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Object_Manager.cpp: with ACE_SHOULD_MALLOC_STATIC_OBJECT_LOCK,
          made the ACE_Static_Object_Lock_lock instance static, to
          match the non-ACE_SHOULD_MALLOC_STATIC_OBJECT_LOCK behavior.
          Thanks to Jody for this change.

          Also, consolidated the code to alway use the
          ACE_Static_Object_Lock_Type typedef.

Fri Aug 06 06:55:49 1999  Jody Hagins <jody@atdesk.com>

        * include/makeinclude/rules.local.GNU (depend.local): added
          ACE_DEPEND_SED_CMD hook, so that users can add sed scripts.
          An example is to use relative instead of absolute paths
          in dependencies.  I put this into it to get the desired
          (site-specific) functionality:

          USER_DEPEND_SED_CMD=-e "s;$(PRISM_ROOT);\$$(PRISM_ROOT);g"

Thu Aug  5 22:26:18 1999  Douglas C. Schmidt  <schmidt@mambo.cs.wustl.edu>

        * ace/OS.h (ACE_OS): Added support for strptime() for platforms that
          lack it.  Thanks to Kevin Lyda <kevin.lyda@trintech.com> for
          contributing this.  Note that if a platform fails to compile
          because it doesn't support this function, please enable
          ACE_LACKS_STRPTIME in the config.h file and send us email.

Thu Aug 05 21:37:05 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Object_Manager.cpp (ACE_Static_Object_Lock_lock,
          ACE_Static_Object_Lock::instance, cleanup_lock):
          added support for ACE_SHOULD_MALLOC_STATIC_OBJECT_LOCK.
          It's not (currently) used by ACE.  But, applications may
          find it useful for avoiding recursive calls if they have
          overridden operator new.  Thanks to Jody Hagins
          <jody@atdesk.com> for contributing it.

Thu Aug 05 21:04:20 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/streams.h: removed #includes of istream.h and ostream.h
          with ACE_HAS_STD_CPP_LIBRARY and ACE_USES_OLD_IOSTREAMS.
          Those headers aren't available with Sun CC.  I think that
          they might be unnecessary with egcs for Tornado II.  Thanks
          to Doug for reporting this.  Ref.
          Thu Aug 05 14:31:48 1999  David L. Levine  <levine@cs.wustl.edu>.

Thu Aug  5 16:43:29 1999  Douglas C. Schmidt  <schmidt@mambo.cs.wustl.edu>

        * tests/Malloc_Test.cpp: Rearranged the #ifdefs so that
          we don't do much of anything if the platform doesn't support
          processes.  Thanks to David Levine for reporting this.

Thu Aug  5 16:27:15 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * include/makeinclude/rules.lib.GNU:
        * include/makeinclude/wrapper_macros.GNU:
          Added new macro (ACE_SHLIBS) to control the final link line of
          shared libraries.  Use this macro to list the -l options
          required by your shared library that are *not* included in the
          system LIBS macro, for example "-lTAO -lACE"; the system will
          automagically change that to be "-lTAOshr -lACEshr" on AIX.
          This also decouples the shared library link line from the
          binaries, which use LDLIBS and ACELIB, allowing the application
          developers to easily mix shared libraries and binaries in the
          same directory, even if the binaries depend on the generated
          shared library.

Thu Aug 05 15:44:39 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU:  on
          WIN32 host, assume that $(CC) is on the user's path (or is a
          full pathname).  That way, we don't need to determine ACE_CC
          dynamically, which causes trouble with the WIN32 shell.  Thanks
          to Erik Johannes <ejohannes@oresis.com> for reporting this.
          [NOTE: this had been committed on a branch, but never on the
          main line.]

Thu Aug 05 15:35:21 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * apps/gperf/src/gperf.dsp:
        * apps/gperf/src/gperf_lib.dsp:
        * ace/ace_lib.dsp:
        * ace/ace_dll.dsp: Changed the default configuration to Win32
          Debug so if anyone doesn't know what he is doing, he'll most
          likely to success.

Thu Aug 05 15:30:32 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/streams.h: with ACE_LACKS_IOSTREAMS_TOTALLY, always
          #define ostream FILE *. [Bug 208]

Thu Aug 05 15:13:01 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-lynxos.h: added note on why we don't #define
          ACE_HAS_POSIX_SEM for LynxOS. [Bug 164]

Thu Aug 05 14:53:44 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-vxworks5.x.h: added support for the Diab
          compiler, version 4.2a or later.  Compilation succeeds but links
          still have unresolved symbols related to new and delete. [Bug
          207]

        * ace/OS.h,README: added support for ACE_LACKS_NEW_H. [Bug 207]

        * ace/OS.h: for VxWorks, use the ANSI prototypes for
          inet_ntoa.h, etc., for all VxWorks compilers, not just Green
          Hills.  This allows compilation to succeed with Diab 4.2a.  [Bug
          207]

        Thanks to Erik Johannes <ejohannes@oresis.com> for helping with
        this quick port to Diab 4.2a for VxWorks.

Thu Aug 05 14:31:48 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/iosfwd.h: #include iosfwd with
          ACE_HAS_MINIMUM_IOSTREAMH_INCLUSION as well as without
          ACE_HAS_OLD_IOSTREAMS.  This allows builds to succeed for
          Tornado II with its egcs. [Bug 206]

        * ace/streams.h: added #includes of istream.h, ostream.h,
          and iomanip.h with ACE_HAS_STD_CPP_LIBRARY and
          ACE_USES_OLD_IOSTREAMS.  It's necessary for builds for Tornado
          II, but should be harmless and helpful on other platforms. [Bug
          206]

        Thanks to Matthias Schumann <matthias.schumann@xcc.de> for
        first reporting the solution to the build problem for Tornado II.

Thu Aug  5 13:03:28 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Malloc_T.cpp (shared_free): Looks like ACE_reinterpret_cast
          isn't the right thing to do...  Let's just use good ol'
          fashioned C-style casts instead.  Thanks to Bala for reporting
          this.

Thu Aug 05 12:05:42 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/wrapper_macros.GNU: moved minimum_corba
          make flag support from wrapper_macros.GNU to TAO/rules.tao.GNU.
          Thanks to Bala for noticing this. [Bug 204]

Thu Aug 05 12:01:14 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Malloc_T.cpp (shared_free): Applied
          ACE_reinterpret_cast (ACE_Malloc_Header*, yadda) to serveral
          pointer comparisons.  MSVC was complaining because the pointers are
          of different types.

Thu Aug  5 11:57:23 1999  Balachandran Natarajan  <bala@cs.wustl.edu>

        * include/makeinclude/wrapper_macros.GNU (YACC): Removed the
          definition of interface_repo a command line option with 'make'
          to $TAO_ROOT/rules.tao.GNU as per Dr.Levine's suggestions.

Thu Aug 05 08:43:27 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_diab.GNU: added.
          Thanks to Erik Johannes <ejohannes@oresis.com> for
          helping to figure out its contents.  Note that compiles
          succeed with Diab 4.2a for VxWorks, but links do not, yet.

Thu Aug 05 08:37:09 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: added Kirk Davies' notes for running
          the ACE tests on Tornado II, without NFS installed.

Thu Aug  5 00:15:45 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Based_Pointer_T: Changed the type of index for operator[]
          and operator+= to be int instead of long so that it'll work
          correctly when constant values are used.  Thanks to
          Nanbor and KCC for pointing this out!

Wed Aug  4 19:46:33 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/run_tests.sh:
          Disabled the New_Fail_Test because it breaks other
          compilations.

Wed Aug  4 15:56:51 1999  Douglas C. Schmidt  <schmidt@mambo.cs.wustl.edu>

        * tests/Malloc_Test.cpp: Make this test work even if
          ACE_HAS_POSITION_INDEPENDENT_MALLOC isn't set for a particular
          platform.

        * tests/Malloc_Test.h: Added a #include for
          "ace/Based_Pointer_T.h".  Thanks to Carlos for pointing out the
          need for this.

Wed Aug  4 17:07:12 1999  Balachandran Natarajan  <bala@cs.wustl.edu>

        * include/makeinclude/wrapper_macros.GNU : Made the interface
          repository files to be compiled by default. If the user does not
          want these files to be compiled he can turn it off by issuing
          interface_repo=1 with the 'make' command.

Wed Aug  4 15:56:51 1999  Douglas C. Schmidt  <schmidt@mambo.cs.wustl.edu>

        * ace/Task.h (ACE_Task_Base): Changed the parameter name
          <thread_names> to <thread_ids>, which is more descriptive.
          Thanks to John Forest <forestj@res.raytheon.com> for
          motivating this.

Wed Aug  4 15:54:51 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * netsvcs/clients/Naming/Client/Makefile:
        * netsvcs/clients/Naming/Dump_Restore/Makefile:
          If the libraries are specified as dependencies then they don't
          need to be listed in LDLIBS

Wed Aug  4 13:20:54 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Malloc.h: Ok, let's try this again ;-).  Removed the
          forward declarations and typedefs and replaced them with
          #defines.  Hopefully, this will make all the compilers happy!

Wed Aug 04 12:58:53 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/*.dsp:  Fixed Alpha configurations.

Wed Aug  4 12:26:53 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Malloc.h:
          Added more forward declarations for the compilations that
          enabled PIM.

Wed Aug  4 11:59:57 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Malloc.h:
          The previous fix did not work, i used forward declarations to
          make it work.

Wed Aug  4 09:28:35 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Malloc.h: Replaced the use of typedefs for macros
          to define ACE_MALLOC_HEADER_PTR ACE, ACE_NAME_NODE_PTR,
          ACE_CHAR_PTR to try to avoid "incomplete type" messages from
          certain versions of G++.  Macros are "later binding" than
          typedefs for this situation.

        * ace/Asynch_Acceptor.cpp (handle_accept): Fixed an expression
          that had incorrect parentheses.  Thanks to David Digby
          <DWD15274@glaxowellcome.co.uk> for reporting this.

Wed Aug 04 02:40:45 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/run_tests.bat:  * tests/tests.dsw:
        * tests/Malloc_Test.dsp:
        * tests/version_tests/Malloc_Test.dsp: Added project files for the
          Malloc_Test and added the test in run_test.bat.

Tue Aug  3 22:39:34 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/{Makefile,run_tests.sh}: Added support for the new
          Malloc_Test.

        * tests/Malloc_Test.cpp: Added a new test that exercises the new
          position-independent ACE_Malloc with ACE_MMAP_Memory_Pool and
          ACE_Process_Mutex.

        * ace/Malloc_T: Added an accessor called mutex() to allow
          applications to acquire()/release() the lock used to provide
          mutual exclusion to an <ACE_Malloc> allocator.

        * tests/SV_Shared_Memory_Test.cpp: Reformatted this test to
          conform to ACE programming guidelines.

        * ace/Memory_Pool: The void * and char * arguments to the various
          ACE_*_Memory_Pool_Options constructors should be const; now they
          are!

        * examples/Shared_Malloc/test_position_independent_malloc.cpp (main):
          Added auto_ptr support to this test, as well.

        * examples/Shared_Malloc/test_multiple_mallocs.cpp: Enhanced
          this test so that it uses auto pointers and also now takes
          advantage of position-independent malloc, when possible.

        * examples/Shared_Malloc/test_position_independent_malloc.cpp:
          Finished integrating all the features of this test.  It's pretty
          cool now!

        * examples/Shared_Malloc/Makefile: Updated the LSRC target so
          'make depend' works correctly...

        * ace/Select_Reactor_Base.cpp (find): Don't set errno = ENOENT
          if we find a valid mapping of handle to Event_Handler.  Thanks
          to Hao Ruan <hruan@lucent.com> for reporting this.

        * ace/Based_Pointer_T: Added support for operator= (const
          ACE_Based_Pointer_Basic<T> &).

        * ace/Based_Pointer_T: Added definitions for
          ACE_Based_Pointer::operator= and
          ACE_Based_Pointer_Basic::operator= to make EGCS happy.

        * ace/Malloc.h: Factored out the common code for
          ACE_Based_Pointer<> and the underlying types, thereby reducing
          the number of #ifdef's.

        * ace/Based_Pointer_T: Added an operator CONCRETE *() method

        * ace/Based_Pointer_Repository.cpp: The original implementation
          of this classes stored a pointer to the size of each mapped
          address, rather than just the value.  This was causing problems
          when used for shared memory because the memory was allocated in
          one process and freed in another.  This is now fixed by not
          storing a pointer, but by storing the value instead.  Thanks to
          Nanbor for reporting this.

Tue Aug  3 23:43:47 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * netsvcs/clients/Naming/Client/Makefile:
        * netsvcs/clients/Naming/Dump_Restore/Makefile:
          Fixed dependencies so parallel compilations (using the -j
          option) will work correctly. This fixes [BUGID:187]

Tue Aug  3 23:23:18 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Cached_Connect_Strategy_T.{h,cpp} (cleanup):
          Added a specialised method to prevent memory leaks with old
          versions of g++. This method calls the underlying iterator
          and does the cleanup.

        * ace/run_tests.sh:
          Removed purify check over Cached_Accept_Conn_Test and
          Cached_Conn_Test since they no longer leak memory when built
          using old version of g++.

Tue Aug  3 22:23:18 1999  Balachandran Natarajan  <bala@cs.wustl.edu>

        * include/makeinclude/wrapper_macros.GNU: Added an ifeq flag for
          the interface repository. Compiling with interface_repo=1 will
          compile  the files  for interface repository.

Tue Aug 03 21:17:00 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/SOCK_Connector_Test.cpp (host_is_up): Added a time out
          value of 5 second to spped up the test.  Thanks to Jody Hagins
          <jody@atdesk.com> for submitting the patch.

Tue Aug 03 18:30:47 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Strategies.h (ACE_Connection_Recycling_Strategy):
          Added a new pure virtual method <marked_as_closed_i> which will
          provide a non-locking implementation of the <mark_as_closed>
          method.

        * ace/Strategies_T.h (ACE_Cached_Connect_Strategy):
        * ace/Cached_Connect_Strategy_T.h (ACE_Cached_Connect_Strategy_Ex):
          Made <mark_as_closed_i> public.

        * ace/Caching_Utility_T.{h,cpp}
          (ACE_Refcounted_Recyclable_Caching_Utility): Added this class
          which caters to purging of refcounted and recyclable handlers.

        * ace/Cleanup_Strategy_T.{h,cpp}:
          (ACE_Refcounted_Recyclable_Cleanup_Strategy): Added this class
          which caters to the cleanup of handlers which are refcounted and
          recyclable. Heres where the necessity of making the non-locking
          version of <marked_as_closed> public arose in the first place.

        * ace/OS.h (ACE_Recyclable_State):
          Removed hardcoded values and left the enum values to the
          discretion of the compiler.

Tue Aug 03 16:58:08 1999  Joe Hoffert  <joeh@cs.wustl.edu>

        * ace/ATM_Acceptor.{h,cpp}:
        * ace/ATM_Connector.{h,cpp}:
        * ace/ATM_Stream.{h,i,cpp}:
        * ace/ATM_Params.cpp:
        * ace/ATM_QoS.cpp:
        * ace/XTI_ATM_Mcast.{h,i,cpp}:
          Fixed inlining errors.

Tue Aug 03 16:15:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/Auto_Ptr.h: created ACE_AUTO_PTR_RESET macros, which depend on
          whether or not ACE_AUTO_PTR_LACKS_RESET is defined.

        * ace/config-kcc-common.h: defined ACE_AUTO_PTR_LACKS_RESET, because
          KCC native auto_ptr support is difficult to disable, and implements
          an older version of auto_ptr (without the reset method).

Tue Aug 03 13:26:47 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Repository.cpp (instance): Check to see if
          the ACE_Object_Manager is being shutting down before creating a
          new instance of Service_Repository.  Otherwise, we may be
          creating a new service repository just for shutting it down.
          Thanks to Doug for noticing this.

        * ace/Service_Config.cpp (fini_svcs): Since it is now possible for
          ACE_Service_Repository::instance to return 0 during program
          shutdown, we must check its value before using it.

          Notice that the change assumes people don't do stupid things
          like initializing the Service_Config during program shutdown.

Mon Aug  2 23:21:01 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * bin/auto_compile:
          Added several flags to: disable test execution, specify the list
          of build directories on the command line, send email on
          successful compilation, keep a more detailed history, etc.

Mon Aug 02 18:38:37 1999  Joe Hoffert  <joeh@cs.wustl.edu>

        * ace/ATM_Acceptor.{h,i,cpp} :
        * ace/ATM_Connector.{h,i,cpp} :
        * ace/ATM_Params.{h,i,cpp} :
        * ace/ATM_QoS.{h,i,cpp} :
        * ace/ATM_Stream.{h,i,cpp} :
        * ace/XTI_ATM_Mcast.{h,i,cpp} :
        * ace/ATM_Addr.{h,cpp}:
        * ace/Makefile:
        * ace/TLI_Connector.i:
          Added new ATM wrapper files to make the mechanism of sockets or
          XTI transparent when using the ATM protocol. Modified existing
          files to take advantage of these wrapper classes.

        * examples/IPC_SAP/ATM_SAP :
        * examples/IPC_SAP/ATM_SAP/CPP-client.cpp :
        * examples/IPC_SAP/ATM_SAP/CPP-server.cpp :
        * examples/IPC_SAP/ATM_SAP/Makefile :
          Added new test directory and programs to test ATM wrapper classes.

        * examples/IPC_SAP/TLI_SAP/CPP-ATM-client.cpp:
          Modified existing test program to utilize new ATM_QoS class.

Mon Aug 02 17:24:05 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h (ACE_DL_TYPE): Only WinCE uses wchar_t DL type, we'll
          just deal with this in ACE_OS::dlsym instead of defining
          different types here.

        * ace/OS.i (dlsym): GetProcAddress is defined differently on
          Windows CE and other Win32 platforms so we need to treat them
          differently.

        * ace/Malloc.h (ACE_Malloc_Header): Added a dummy member function
          to prevent egcs from complaining "all member functions are
          private."

        * ace/Based_Pointer_Repository.cpp:  Fixed the use of map
          iterators.

        * examples/Shared_Malloc/test_position_independent_malloc.cpp
          (main): Delete the allocator before exiting from main.

        * ace/Malloc.h (ACE_Malloc_Header,ACE_Name_Node,ACE_Control_Block):
          Added an unimplemented assignment operator for this class.
          Otherwise, some compilers will try to use
          ACE_Based_Pointer_Base<T>::operator= which is not implemented.

Mon Aug  2 09:58:20 1999  Ossama Othman  <othman@cs.wustl.edu>

        * netsvcs/lib/Name_Handler.cpp (init):
        * netsvcs/lib/Server_Logging_Handler_T.cpp (init):
        * netsvcs/lib/TS_Clerk_Handler.cpp (init):

          Changed cast to ACE_SignalHandler to allow it to compile under
          gcc 2.95.  Thanks to Jeffrey Franks <Jeffrey_Franks@i-o.com> for
          reporting the problem.

Sun Aug  1 15:58:39 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/colorize:
          Added <PRE></PRE> wrapper around generated output.

        * docs/tutorials/Chap_03/Makefile:
        * docs/tutorials/Chap_03/README:
        * docs/tutorials/Chap_03/mm.cpp:
        * docs/tutorials/Chap_03/ex03.html: mm.cpp (and ex03.html) are a
          slightly modified version of ex02.html that uses a memory mapped
          file instead of SYSV SHMEM.  To work around the lack of fork()
          in Win32, the app must be executed once in server mode
          (argv[1] == 's') and again in client mode.

Sun Aug  1 15:58:39 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Memory_Pool.cpp: If the base_addr is 0 for the
          ACE_MMAP_Memory_Pool_Options, then we will disable the
          "use_fixed_addr" option since it's going to cause big trouble to
          mmap() at location 0!  Plus, when 0 is used it's intended as an
          indication that the application wants the OS to choose the
          appropriate mapping.  This minor change in semantics works
          particularly well with the new
          ACE_HAS_POSITION_INDEPENDENT_MALLOC feature, because we can now
          let the OS choose the mapping location with out fear of begin
          mapped to a different location!

        * ace  /Memory_Pool.cpp: Conditionally include
          ace/Based_Pointer_Repository.h when
          ACE_HAS_POSITION_INDEPENDENT_MALLOC is defined.

        * ace/config-sunos5.5.h: Enabled the
          ACE_HAS_POSITION_INDEPENDENT_MALLOC macro by default.  Let's see
          whether this breaks lots of stuff ;-).

        * ace/OS.h: Moved the definition of ACE_IPPROTO_TCP down
          further in this file so that the IPPROTO_TCP macro would be
          defined.

        * ace/Based_Pointer_T.cpp: Removed an inappropriate use of
          ACE_INLINE in the *.cpp file.  Thanks to DEC UNIX C++ for
          reporting this!

Sun Aug 01 02:41:44 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/Shared_Malloc/Shared_Malloc.dsw
        * examples/Shared_Malloc/position_independent_malloc.dsp: Added
          this new project file for position independent malloc test.
