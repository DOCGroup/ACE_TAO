Sun Apr 18 08:48:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Auto_Ptr.i: reordered inline methods to avoid use before
          definition.  Fixed a few ACE_TRACE comments.

Sun Apr 18 00:26:28 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * TAO/tao/Stub.cpp (set_policy_overrides):
        * TAO/tao/POA.cpp (create_POA):
        * tests/Notify_Performance_Test.cpp (main):
        * tests/Reactor_Performance_Test.cpp (main):
        * tests/Priority_Reactor_Test.cpp (main):

          Avoided annoying g++ warning about <auto_ptr> by explicitly
          making a temporary.

Sat Apr 17 18:52:38 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Memory_Pool.cpp (acquire): Changed use of auto_ptr.

        * ace/Auto_Ptr.i (operator=): Changed <a> to <rhs>.  Thanks to
          David Levine and Jean-Marc Strauss <strauss@club-internet.fr>
          for reporting this.

Sat Apr 17 08:34:22 1999  David L. Levine  <levine@cs.wustl.edu>

        * examples/Naming/Makefile,performance-tests/Misc/Makefile,
          tests/Makefile,all netsvcs Makefiles:
          updated for proper support of ACE subsets, with BIN2/LIB2/SHLIB2.

Fri Apr 16 22:14:36 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Auto_Ptr: Made several changes to bring the implementation
          up to the specification:

          - Made the constructors take non-const parameters.
          - Made release() non-const.
          - Added reset().

          Thanks to Simeon Simeonov <simeons@allaire.com>, Rainer Blome
          <blome@de.ibm.com>, Jody Hagins <jody@atdesk.com>, and John
          Mulhern <John.Mulhern@lawson.com> for helping.

        * tests/Reactor_Performance_Test.cpp: Updated to work with new
          auto pointer implementation.

Fri Apr 16 19:36:35 1999 Alexander Babu Arulanthu <alex@cs.wustl.edu>

        * ace/Proactor.h (ACE_Proactor): Switched the order of TIMER_QUEUE
        and delete_implementation in the constructor.

        * examples/Reactor/Proactor/test_multiple_loops.cpp: Fixed to work
        on the WIN32 correctly. This can work only on WIN32 (combining
        Proactor with Reactor's event loop). So I have put a #if defined
        around the file.

Fri Apr 16 18:09:44 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Conn_Test.cpp (server): If we timeout on accept(), it is
          not an error, and should not be reported as one. Thanks to
          Thomas Mehrkam <Thomas_Mehrkam@i-o.com> for pointing this out.

Fri Apr 16 13:08:49 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,cpp},ACE.{h,cpp}: (read_n,send_n,write_n): moved
          from ACE to ACE_OS, so that the uses in OS.cpp could be localized.
          The ACE versions are now just wrappers over the ACE_OS
          versions, for backward compatibility.  Thanks to
          Erik Ivanenko <erik.ivanenko@utoronto.ca> for reporting
          that OS.cpp used a couple of the ACE static member functions.

Fri Apr 16 10:13:14 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/rules.nested.GNU,ACE-INSTALL.html: added
          support for recursive make invocations with Windows NT's shell.
          Thanks to Dave Steele <Dave_Steele@Mitel.COM> for diagnosing the
          problem, and Tres Seaver <tseaver@palladion.com> for providing
          the wild NT FOR command.  Check it out, Darrell.

Fri Apr 16 07:52:11 1999  Darrell Brunsch  <brunsch@cs.wustl.edu>

        * ace/High_Res_Timer.cpp: Fixed my previous fix with
          calibrate being called on Windows NT when a high-res
          timer of 1 Mhz was being found.  Calibrate should not
          be called on NT now.  Thanks to Zoran Ivanovic
          <zorani@pathcom.com> for noticing this.

        * ace/Profile_Timer.cpp: Integrated the patch from Andy
          Marchewka <AndyM@who.net> for returning rusage information
          from elapsed_time.

Thu Apr 15 16:50:21 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: updated discussion of "dir unexpected"
          error when building for VxWorks on NT.  Thanks to
          Dave Steele <Dave_Steele@Mitel.COM> for providing the
          insight.

Thu Apr 15 14:04:36 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/rules.lib.GNU: don't call $(RANLIB)
          if it is null.

        * include/makeinclude/platform_vxworks5.x_{g++,ghs}.GNU: removed
          RANLIB definition, so that it will be null.  This prevents
          calling "true" on NT hosts.

        Thanks to Thomas Mehrkam <Thomas_Mehrkam@i-o.com> for reporting
        that his NT host doesn't have "true".

Thu Apr 15 14:00:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/OS.{h, i}: simplified the conditional compilation logic
          for a couple of the pSOS-specific ACE_OS methods, removed a
          handful of marker comments, added a conditional compilation
          branch for pid_t declaration.

Wed Apr 14 22:40:08 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/run_tests.sh: call run_tests.check via sh, to support
          platforms that don't have /bin/sh.  Thanks to Thomas Mehrkam
          <Thomas_Mehrkam@i-o.com> for reporting that his NT host doesn't
          have /bin/sh.

Wed Apr 14 18:56:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/OS.{h, i}
          ace/config-psos-diab-ppc.h
          include/makeinclude/platform_psos_diab_ppc.GNU: changes to adapt
          the pSOS Diab 68k/MIPS port to PPC.  Many thanks to Sarmeesha
          Reddy <sreddy@tr.comm.mot.com> for contributing these changes.

Wed Apr 14 17:06:22 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-vxworks5.x.h: added #define ACE_HAS_DLL 0.
          Thanks to Thomas Mehrkam <Thomas_Mehrkam@i-o.com> for
          reporting that it's necessary on NT hosts.

Wed Apr 14 13:10:48 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/config-sunos5.7.h:
                Enabled ACE_HAS_AIO_CALLS for Solaris
                7. ACE_POSIX_AIOCB_PROACTOR works now on this.
        * examples/Reactor/Proactor/test_aiocb.cpp: Updated comments.
        * ace/config-sunos5.6.h: Removed the ACE_AIORETURN/ERROR macros.
        * ace/Proactor.cpp (ACE_Proactor): Removed debug print statments.
        * ace/config-lynxos.h: Removed the ACE_AIORETURN/ERROR macros.
        * ace/POSIX_Proactor.cpp:
        * ace/WIN32_Asynch_IO.h:
        * ace/WIN32_Asynch_IO.cpp:
        * ace/WIN32_Proactor.h:
        * ace/WIN32_Proactor.cpp:
        * ace/Proactor_Impl.h:
        Completed committing changes related to the <signal_number>
        additions done earlier.

Wed Apr 14 09:07:38 EDT 1999  Aniruddha Gokhale  <gokhale@sahyadri.research.bell-labs.com>

        * ace/POSIX_Proactor.cpp:

          Several methods were missing the "int signal_number" parameter
          that was added as mentioned in the log entry below. In addition,
          an undefined ACE_SIG_AIO flag was used. I found a log entry in
          ChangeLog-98b which says that ACE_SIG_AIO is ACE_SIGRTMIN. So I
          replaced the 5 occurrences of ACE_SIG_AIO with ACE_SIGRTMIN.

Wed Apr 14 02:34:13 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        Added additional parameter <int signal_number> to all the Asynchronos
        Operation method so that we can specify which real-time signal should
        be used for each of  the Asynchronous Operation. This only makes sense
        in the ACE_SIG_Proactor configuration.

        * ace/Asynch_IO_Impl.h:
        * ace/Asynch_IO.h:
        * ace/Asynch_IO.cpp:
        * ace/POSIX_Asynch_IO.h:
        * ace/POSIX_Asynch_IO.cpp:
        * ace/POSIX_Proactor.h:

        - For each asynchronous call issued, the real-time signal is
          registered with the Proactor so that it can wait for the completions
          using that signal. Previously, the signal number for all the
          operations was the same signal and it was hard coded.

        - <register_aio_with_proactor> method which earlier existed only for
          <AIOCB_Proactor> has been added to <SIG_Proactor>
          also. <SIG_Proactor> just takes the <signal_number> from the result
          object and registers the signal number. Registering involves,
          masking the signal, setting the signal delivery for that RT signal
          etc.

        - Allowing to specify signal number for each operation can be useful,
          since the order in which the completions are delivered from the
          completion queue, is based on the signal numbers in addition to the
          priority. Applications might want to leverage this.

        * ace/OS.h:
        OS.h has been defined with ACE_SIGRTMIN and ACE_SIGRTMAX, which are
        defined to SIGRTMIN and SIGRTMAX respectively, for POSIX4
        platforms. For others, they are 0.


Tue Apr 13 15:29:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Object_Manager.cpp: moved ACE_Service_Config signal
          handler allocation from constructor to init ().  Tidy,
          tidy, tidy.

Tue Apr 13 14:52:15 1999  Joe Hoffert  <joeh@cs.wustl.edu>

        * ace/ATM_Addr.cpp: Fixed g++ warnings of unused parameters.

Tue Apr 13 14:47:18 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Basic_Types_Test.cpp (main): replaced call to sysconf ()
          with ACE_OS::sysconf ().  Thanks to Erik Ivanenko
          <erik.ivanenko@utoronto.ca> for noticing this.

Tue Apr 13 14:17:48 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp: replaced use of ACE_TSS<T> with ACE_WIN32 or
          ACE_HAS_TSS_EMULATION with native use of ACE_OS TSS, to remove
          dependency on ace/Synch.h.  Also, changed ACE_OS::NULL_key to
          be -1 instead of 0 with ACE_HAS_TSS_EMULATION.

Tue Apr 13 09:05:25 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Sched_Params.i (ACE_Sched_Priority_Iterator): removed
          ACE_TRACE's, because Sched_Param is in the ACE_OS (lowest)
          component.  Thanks to Erik Ivanenko <erik.ivanenko@utoronto.ca>
          for reporting this.

Tue Apr 13 08:21:41 1999  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_sunos5_sunc++.GNU
        * include/makeinclude/platform_sunos5_sunc++_orbix.GNU: Added a make
          option, mt_orbix, to control whether the MT or non-MT variant of
          Orbix is used.  Default is MT; to use non-MT, "make mt_orbix=0".

        * ace/config-sunos5.x-sunc++-4.x-orbix.h: Include correct config-sunos5
          file based on OS version at compile time.  Allow site config to
          specify ACE_HAS_MT_ORBIX 0.

Mon Apr 12 14:24:28 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/rules.local.GNU (realclean.local):
          added BIN2, LIB2, SHLIB2, and SHLIBA2 to support
          subsetting.  It allows realclean to remove old BIN,
          LIB, SHLIB, and SHLIBA targets after remove the
          ace_components information file.  Also, removed explicit
          -f following $(RM).  -f should be included in the RM macro
          if appropriate for the platform.

Mon Apr 12 13:01:32 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/gethrtime.cpp (ACE_gethrtime),Makefile: added support for
          rdtsc instruction with GHS on Intel targets.  Thanks to
          Andy Alvarez <axab@eci-esyst.com> for providing the assembly
          instructions to do this!

Mon Apr 12 12:04:20 1999  Joe Hoffert  <joeh@cs.wustl.edu>

        * ace/Makefile,ATM_Addr.cpp:
          Added ACE_ATM_Addr class back into Makefile since it's working
          now. Fixed address initialization problem in ACE_ATM_Addr.
          NOTE: This code currently only works with Solaris 2.5/2.6. Will
          need to update the code for FORE's implementation on Solaris 2.7.
          NOTE: To use FORE's XTI/ATM implementation the following #defines
          need to be included (typically in ace/config.h):
            #define ACE_HAS_FORE_ATM_XTI
            #define ACE_HAS_TIUSER_H_BROKEN_EXTERN_C
            #define ACE_TLI_TCP_DEVICE "/dev/xtisvc*" //(e.g., /dev/xtisvc0)
          AND the following flags are needed to build the ace library
          (typically in include/makeinclude/platform_macros.GNU):
            CPPFLAGS += -I$(FORE_ROOT)/include

Mon Apr 12 10:04:31 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * include/makeinclude/rules.local.GNU:
          The default rule to compile .idl files is only enabled if
          TAO_ROOT is not defined, otherwise we should use the rule in
          $TAO_ROOT/rules.tao.GNU

Mon Apr 12 00:18:23 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.36 released.

Sun Apr 11 17:06:53 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * examples/IPC_SAP/SOCK_SAP/CPP-inclient.cpp (run_client): Fixed
          the warnings on Linux (config-linux.h).

Sun Apr 11 16:09:16 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * examples/IPC_SAP/SOCK_SAP/CPP-inclient.cpp (run_client): Made
          some fixes if ACE_MT_SAFE is false...  Thanks to Alex for
          reporting these.

Sun Apr 11 16:02:49 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * examples/IPC_SAP/SOCK_SAP/CPP-inserver-fancy.cpp (create_handler):
          Fixed the warnings (control reaching end of block) and error (passing
          u_long to close) which showed up on Linux(with config-linux.h)

        * performance-tests/Misc/preempt.cpp,
        * examples/Threads/task_five.cpp: Replaced ACE_MT_SYNCH by
          ACE_SYNCH to get it compile on Linux.

Sun Apr 11 14:38:22 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in: Added test for ACE_NEEDS_FUNC_DEFINITIONS.
          Corrected bug in ACE_TEMPLATES_REQUIRE_SOURCE test.

Sat Apr 10 14:02:11 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Malloc[_Base]: Added a new no-op constructor for
          ACE_Allocator to hopefully work around a problem with DEC UNIX
          C++.

Fri Apr 09 10:08:49 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU:
          enable -fno-implicit-templates for targets other than
          Intel.  It appears to work for PPC targets, and is necessary
          to avoid compiler warnings about different symbol sizes
          in object files.  Thanks to Thomas Mehrkam <Thomas_Mehrkam@i-o.com>
          for tracking down the source of the warnings, and verifying
          that -fno-implicit-templates works for PPC targets.

Fri Apr 09 08:14:55 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/rules.local.GNU: replaced "ln -s" with
          $(LN_S), and set that to "ln -s" by default.  Thanks to
          Rainer Blome <rainer_blome@de.ibm.com> for suggesting this.

Fri Apr  9 00:38:03 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SOCK_Acceptor.cpp (shared_accept): Make sure to disable
          ACE_NONBLOCK on the newly accepted socket since otherwise
          applications can have weird behavior.  Thanks to Margaret Reitz
          <margaret@veritas.com> and Irfan for helping to track this down.

Thu Apr 08 13:47:03 1999  David L. Levine  <levine@cs.wustl.edu>

        * BUG-REPORT-FORM,PROBLEM-REPORT-FORM,
          README,VERSION,Makefile,Makefile.am,bin/make_release,
          docs/ACE-bug-process.html: moved BUG-REPORT-FORM
          to PROBLEM-REPORT-FORM.  Thanks to Thomas Lockhart
          <Thomas.G.Lockhart@jpl.nasa.gov> for suggesting this.

        * docs/ACE-guidelines.html: added checklist for ACE/TAO changes,
          including commit with a meaningful message, update a
          ChangeLog, and ack and respond to the requestor.

Thu Apr  8 13:18:22 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/SString.h: Updated the documentation to show that "Memory is
        _not_ allocated/freed if <release> is 0".

Wed Apr  7 20:24:48 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CORBA_macros.h (ACE_DECLARE_NEW_CORBA_ENV): Removed the
          trailing semi-column.  Thanks to Marina for the reminder.

Wed Apr  7 19:09:05 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Containers_T: Replaced all Foo &Foo::operator=() with void
          Foo::operator=() to avoid nasty problems with propagation of
          errors.  Thanks to Chris Schleicher <chrissch@cnd.hp.com> for
          reporting this.

Wed Apr 07 17:25:07 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * apps/Gateway/Gateway/connection_config: Changed the connection 1
          and 2 to use localhost since it would probably be the most
          common test case.

        * apps/Gateway/README: Replaced all references of proxy_config
          to connection_config.  Also change the example port number to
          10011 and 10012 which are the default port number used by the
          gatewayd.

          Thanks to Sam Rhine <rmsolution20@earchlink.net> for reporting
          this.

Wed Apr  7 16:36:41 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ACE-INSTALL.html: Put a note in saying to rebuild all
          when upgrading releases.

Wed Apr 07 14:25:47 1999  Joe Hoffert  <joeh@cs.wustl.edu>

        * ace/ATM_Addr.{h,cpp}: modified files to compile for
          machines without FORE XTI/ATM support.

        * examples/IPC_SAP/TLI_SAP/CPP-{server,client}.cpp:
          modified files to take out XTI/ATM code.

        * examples/IPC_SAP/TLI_SAP/Makefile,CPP-ATM-{server,client}.cpp:
          added separate test files for XTI/ATM

Wed Apr  7 14:20:59 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/Basic_Types.h:
          Added a signed companion to David's
          ACE_UINT64_LITERAL, to avoid MSVC warnings. If
          the platform has no 8-byte integer, this is
          useless, but we must keep all compilers happy.
          Also modified ACE_INT64_MAX tp use this, and
          added a signed companion to
          ACE_UINT64_FORMAT_SPECIFIER.

Wed Apr 07 13:57:33 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: updated egcs shared library discussion
          with information from Tim Rose <trose@bridgewatersys.com>
          that egcs 1.1.1 statics libs work fine on Solaris 2.6.

Wed Apr 07 13:14:34 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Object.{h,i} (fini_called): Accessor to the
          underlying fini_already_called_ flag.

        * ace/Service_Repository.cpp (find_i): Disallowed returning a
          service which fini() has been called upon.

Wed Apr  7 11:30:09 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * bin/auto_compile:
          Added more tests to the script.

Wed Apr 07 09:54:28 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/rules.local.GNU: instead of trying to
          overwrite an existing symlink with ln -f, remove it first.
          Thanks to Keith Rohrer <KRohrer@hnv.com> for reporting that
          Solaris' ln -f doesn't work.

        * ace/config-vxworks_5.x.h: added ACE_HAS_RECURSIVE_MUTEXES.
          Thanks to Tom Venturella <Thomas.Venturella@MW.Boeing.com>
          for suggesting this, because the VxWorks semaphores that
          ACE uses for mutexes are recursive.

        * ace/Synch.i (set_thread_id): added ACE_UNUSED_ARG (t), with
          ACE_HAS_RECURSIVE_MUTEXES.

Wed Apr 07 09:37:34 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_osf1_4.0.GNU: disable warning
          1016 when optimization is enabled.  That gets rid of the
          "D:incint" warning about bzero in sys/select.h.

        * docs/ACE-guidelines.html: always use $(RM) instead of rm or
          rm -f in Makefiles.

Wed Apr 07 02:42:50 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.35 released.

Wed Apr 07 02:04:30 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.34 released.

Tue Apr  6 21:09:32 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/ATM_Addr: Added the ATM_Addr.* files into the CVS
          respository.  However, we're not going to enable this in the
          Makefile or project files until they are tested.

Tue Apr  6 20:48:16 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/Basic_Types.h:
          Added max and min #defines for various ACE data types. Now,
          when using the ACE or ACE_CDR data types, we need not
          depend on the vagaries of limits.h and float.

Tue Apr  6 20:39:01 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Log_Record.cpp (format_msg):
        * ace/Log_Record.cpp (print):

          Changed host_name[] to *host_name since null pointers were being
          passed into the host_name array.  Strictly speaking, host_name
          should thus be a pointer, not an array.  Also cleaned up
          ternary operator in format_msg() by parenthesizing some
          expressions.

Tue Apr  6 20:19:23 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Makefile: Removed the ATM_Addr files until Joe can
          get them checked in.

Tue Apr 06 19:36:24 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Active_Map_Manager.h (ACE_Active_Map_Manager_Key): Added a
          separate structure that holds the fields of the key.  This
          separate structure makes it easier to manage copying the index
          and the generation to and from the user buffer.

Tue Apr  6 16:07:29 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Synch.cpp (get_thread_id): If we have recursive mutexes then
          it's not possible to get the id of the thread that's currently
          holding the mutex.  Thanks to David for reporting this.

Tue Apr  6 15:50:14 1999  Balachandran Natarajan  <bala@cs.wustl.edu>

        * docs/exceptions.html:
        Updated the documentation.

Tue Apr  6 15:25:56 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/High_Res_Timer.{h,i,cpp}: On Win32, don't call calibrate if
          we cannot get the scale factor.  Instead, just automatically
          fall back on ACE_OS::gettimeofday ().

          Also added another static variable to represent the conditions
          where the global scale factor is not set yet or high resolution
          timers are not supported.

Tue Apr 06 15:14:29 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Basic_Types.h:  added ACE_UINT64_LITERAL for platforms
          with ACE_LACKS_U_LONGLONG_T.

        * tests/Basic_Types_Test.cpp:  added test of ACE_UINT64_LITERAL.

Tue Apr 06 14:54:56 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/Message_Queue_Test.cpp (performance_test):
        * tests/Message_Queue_Notifications_Test.cpp (producer): Unicode
          related change.

        * ace/ace_ce_dll.dsp: Added Active_Map_Manager.cpp.

        * ace/OS.h:
        * ace/config-WinCE.h: CE now uses non-static object manager.

        * WindozeCE/WindozeCE.h: Instantiate the non-static object manager
          within the class.

        * WindozeCE/WindozeCEDlg.cpp: We should register the bridge window
          using its HANDLE so it would work no matter we build ACE with or
          without MFC support.

Tue Apr  6 14:17:06 1999  Joe Hoffert  <joeh@tango.cs.wustl.edu>

        * ace/OS.h: Added support for the FORE ATM XTI interface.

        * ace/TLI_{Acceptor,Connector}: Added support for the FORE ATM XTI
          interface.

        * ace/ATM_Addr: Added support for ATM address for the XTI ATM
          driver.  Eventually, this class will be generalized to work on
          WinSock 2 ATM support, as well.

Tue Apr 06 13:56:18 1999  Thomas Lockhart <Thomas.G.Lockhart@jpl.nasa.gov>

        * include/makeinclude/rules.local.GNU: added -f to ln -s commands,
          to force overwrite of old symlink.  This eases moving of
          installed ACE code trees.

Tue Apr  6 00:17:59 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/DLL {.h, .cpp} (set_handle): Added the set_handle () method
          which allows the user to set the ACE_SHLIB_HANDLE for the DLL.
          Thanks to Bob McWhirter for bringing up this point.

Mon Apr  5 22:27:02 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/config-irix6.x-sgic++-nothreads.h: Added

          #if !defined (ACE_HAS_NETDB_REENTRANT_FUNCTIONS)
          #define ACE_LACKS_NETDB_REENTRANT_FUNCTIONS
          #endif /* ACE_HAS_NETDB_REENTRANT_FUNCTIONS */

          to fix a problem with SGI 6.5.  Thanks to Bob Laferrie
          <laferrie@execpc.com> for reporting this.

Mon Apr  5 19:42:11 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in:
        * m4/acinclude.m4:

          Created the macro ACE_CHECK_FOR_CVS_DIR to prevent the configure
          script from continuing the configuration if the current
          configuration directory is in a CVS controlled directory.  The
          idea is to prevent automatically generated files from being
          checked into the repository.  This will prevent accidental
          overwrites of ACE's current Makefiles by the automatically
          generated ones, for example.

          In addition, this should ease the transition from the current
          Makefile scheme to the new Auto{conf,make}/libtool scheme since
          the current Makefiles can remain under CVS control without
          the generate Makefiles interfering with them.

Mon Apr 05 17:02:46 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/High_Res_Timer.cpp (global_scale_factor ()): removed
          comment that said we use BogoMIPS on Linux/Intel.  We
          only use it on Linux/alpha.  Thanks to
          Thomas Lockhart <Thomas.G.Lockhart@jpl.nasa.gov> for
          reporting this.

Mon Apr  5 15:54:57 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/Profile_Timer.i: Removed ACE_OS::gettimeofday ()
          calls from start and stop.

Mon Apr 05 15:09:49 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h: removed second #include of netdb.h.  Thanks to
          John H Aughey <tmpsp499@cec.wustl.edu> for reporting this.

Mon Apr 05 14:17:31 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Trace.cpp: removed unnecessary (and complicated)
          #include of ace/ACE.h.

Mon Apr  5 13:21:49 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/Proactor.cpp:
        (svc):
        * ace/POSIX_Proactor.cpp:
        * ace/POSIX_Proactor.h:
        * ace/Proactor.h:
        * ace/Proactor_Impl.h:
        * ace/WIN32_Proactor.cpp:
        * ace/WIN32_Proactor.h:
        * examples/Reactor/Proactor/test_timeout.cpp:
        Completed Timers implementation for POSIX platforms. Timers
        implementation is now common for POSIX and WIN32. Portable
        ACE_Auto_Event is used in the auxillary thread to wait for the
        Timer events.
        The Timer's code in WIN32 has been removed and the common code exists
        in Proactor.{h,cpp} only.
        A new factory method called create_asynch_timer has been created to
        create the Timer Result class. This is used internally by the Proactor
        to post timer completions to the Proactor completion
        queue. Application may want to use this directly to fake
        completions.

Mon Apr 05 12:05:01 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.*,Thread_Manager.{h,cpp}: moved flags members from
          ACE_Thread_Descriptor to a new ACE_OS_Thread_Descriptor base
          class, to remove dependency of OS.cpp on Thread_Manager.h.

Sun Apr  4 18:19:05 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in:

          Changed ANSI C++ cast test to fail on warnings.  Currently,
          only g++ and Sun C++ warning/error conversion is supported.

          Moved the ACE_SET_COMPILER_FLAGS macro after the AC_ARG_ENABLE
          and AC_ARG_WITH calls so that user settings can influence what
          compiler flags get set.

          Removed some M4 comments (`dnl') that were inside of the
          template specialization test header block.  The test was failing
          since `dnl' was being quoted by M4 and actually placed inside
          the test program source during test source compilation.  Also
          corrected a typo in the same test.

          Changed test for ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION so
          that it attempts to link instead of just compile.  Hopefully
          this will make the test "tougher."

        * m4/compiler.m4:

          Added `-features=castop' compiler flag and completed support for
          `-features=rtti' via `--enable-rtti'.  These flags only work for
          Sun C++ 4.2.  Added support for the `-noex' Sun C++ compiler flag
          when the user disables exception handling.

        * m4/platform.m4: Minor comment updates.

Sat Apr  3 19:41:36 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/TTY_IO.cpp (control): Disabled support for higher baudrate
          for non-NT platforms.

Sat Apr  3 19:37:07 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/TTY_IO.cpp (control): Added support for more modem speeds.
          Thanks to Valery Arkhangorodsky <avalery@geocities.com> for
          reporting this.

Sat Apr  3 17:02:48 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/*: Regenerated all the HTML to get the hyperlinks
        into the various headers.  I'm sure somebody will let me know if I
        munged it all.

        * docs/tutorials/(019|020|021) : Finally made myself sit down and
        add Kirthika's last abstracts.

Sat Apr  3 15:27:07 1999  Ossama Othman  <othman@cs.wustl.edu>

        * Makefile.am
        * ace/Makefile.am
        * netsvcs/clients/Naming/Client/Makefile.am
        * netsvcs/clients/Tokens/manual/Makefile.am
        * netsvcs/lib/Makefile.am
        * tests/Makefile.am

          Added targets to clean up files and directories created during
          compilation.  Automake will setup the `clean-local' targets to
          run automatically whenever a `make clean' is done.

Fri Apr 02 23:25:11 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/make_release: added TAO/tao/Version.h.  Thanks to
          Nanbor for suggesting this.

        * ace/OS.cpp: removed use of ACE_Array with WIN32 and
          TSS_EMULATION.  In doing this, fixed an off-by-one error:
          ACE_TSS_Cleanup::remove () would try to remove key value
          "n" from an ACE_Array of size "n".

Fri Apr  2 19:19:09 1999  Ossama Othman  <othman@cs.wustl.edu>

        * bin/autogen: Update NEWS file by copying VERSION.  Temporary
          hack to make Automake happy when doing a `make dist'.

Fri Apr  2 18:37:29 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in: Placed the asynchronous IO checks right after
          the thread library checks.  This was done to make sure the
          library with AIO support gets added to the link list before
          the rest of the tests start, and to make sure that it doesn't
          get added if AIO isn't supported or isn't working.

        * Makefile.am (ACE_EXTRA_DIST): Changed directory names to use
          `$(top_srcdir)' instead of the current directory `.'.  This
          allows a distribution to be made from a directory other than
          ACE's top level source directory.

        * m4/compiler.m4: Explicitly add the `-xildoff' flag to Sun CC's
          LDFLAGS.  This is just a precautionary measure.  It shouldn't
          be needed.

Fri Apr  2 12:41:09 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Containers_T.h (all of the classes listed below):
        * ace/Containers_T.i (ACE_Array):
        * ace/Containers_T.i (ACE_DLList):
        * ace/Containers_T.cpp (ACE_Bounded_Stack):
        * ace/Containers_T.cpp (ACE_Fixed_Stack):
        * ace/Containers_T.cpp (ACE_Unbounded_Stack):
        * ace/Containers_T.cpp (ACE_Unbounded_Queue):
        * ace/Containers_T.cpp (ACE_Double_Linked_List):
        * ace/Containers_T.cpp (ACE_Fixed_Set):
        * ace/Containers_T.cpp (ACE_Bounded_Set):
        * ace/Containers_T.cpp (ACE_Unbounded_Set):
        * ace/Containers_T.cpp (ACE_Ordered_MultiSet):
        * ace/Handle_Set.h (ACE_Handle_Set):
        * ace/Handle_Set.i (ACE_Handle_Set):

          Changed assignment operators (operator=) to return a reference
          to `*this' so that assignments may be chained.

Thu Apr  1 23:41:56 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/CDR_Stream.cpp:
          Fixed write_array() to memcpy if doing a byte-swap
          and size = 1. Previously, it was falling through
          without writing anything. Thanks to Jerry De Master
          <jdemaste@ipdinc.com> for pointing this out.

Thu Apr 01 22:38:25 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.33 released.

Thu Apr 01 21:09:00 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * Sequence.h (TAO_Base_Sequence): Made the copy constructor and
          the assignment operator public since making them protected was
          breaking some compilers.

        * ace/Filecache.cpp (ACE_Filecache_Object): Fixed typo: <lock_>
          should be <lock>.

Thu Apr  1 19:41:26 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/IPC_SAP.h (ACE_IPC_SAP):
        * ace/SOCK.h (ACE_SOCK):
        * ace/SOCK_IO.h (ACE_SOCK_IO):
        * ace/SV_Semaphore_Simple.h (ACE_SV_Semaphore_Simple):
        * ace/Synch.h (ACE_Barrier):
        * ace/Synch.h (ACE_Event):
        * ace/Synch.h (ACE_Guard):
        * ace/Synch.h (ACE_Null_Mutex):
        * ace/Synch.h (ACE_RW_Mutex):
        * ace/Synch.h (ACE_Semaphore):
          Reverted the changes that made these base class destructors
          virtual.  They don't need to be virtual for the way they are
          being used.

Thu Apr 01 19:01:20 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Containers.h (ACE_DLList_Node):
        * ace/Containers_T.h (ACE_Double_Linked_List_Iterator):
        * ace/Containers_T.h (ACE_Unbounded_Set_Iterator):
        * ace/Event_Handler.h (ACE_Event_Handler):
        * ace/Event_Handler.h (ACE_Notification_Buffer):
        * ace/Filecache.h (ACE_Filecache_Handle):
        * ace/Filecache.h (ACE_Filecache_Object):
        * ace/Local_Tokens.h (ACE_TPQ_Iterator):
        * ace/Local_Tokens.h (ACE_Token_Proxy):
        * ace/Local_Tokens.h (ACE_Token_Proxy_Queue):
        * ace/Malloc.h (ACE_Name_Node):
        * ace/Malloc.h (ACE_Static_Allocator_Base):
        * ace/Memory_Pool.h (ACE_MMAP_Memory_Pool):
        * ace/Memory_Pool.h (ACE_MMAP_Memory_Pool_Options):
        * ace/Memory_Pool.h (ACE_Shared_Memory_Pool):
        * ace/Memory_Pool.h (ACE_Shared_Memory_Pool_Options):
        * ace/OS.h (ACE_Countdown_Time):
        * ace/OS.h (ACE_Thread_Adapter):
        * ace/OS.h (ACE_Thread_Control):
        * ace/OS.h (ACE_Thread_Exit):
        * ace/Service_Object.h (ACE_Service_Type):
        * ace/Signal.h (ACE_Sig_Adapter):
        * ace/Synch.h (ACE_Adaptive_Lock):
        * ace/Synch.h (ACE_TSS_Adapter):

          In some cases, classes with pointers *can* use the default copy
          constructor and the assignment operator.  A more careful
          screening of the egcs -Weffc++ flag need to be done before a
          copy constructor and assignment operator can be considered
          harmful/dangerous.  For now, the changes Ossama made have been
          reverted.

        * ace/Filecache.cpp (ACE_Filecache_Object):
        * ace/Signal.i (ACE_Sig_Action):
        * ace/OS.i (ACE_Time_Value):

          Removed default contruction of structs. Old g++ is broken.

        * ace/Filecache.cpp (ACE_Filecache_Object): Fixed incorrect
          initialization of <mmap_>.

Thu Apr  1 16:22:18 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Containers_T.h (ACE_Unbounded_Set_Iterator):
        * ace/Containers_T.cpp (ACE_Unbounded_Set_Iterator):
          The signatures for the prefix and postfix operators were
          switched.  Prefix operators take a void and return a
          a reference and postfix operators take an int and returns a
          copy.

        * ace/Containers.h (ACE_DLList_Node):
        * ace/Containers_T.h (ACE_Double_Linked_List_Iterator):
        * ace/Containers_T.h (ACE_Unbounded_Set_Iterator):
        * ace/Event_Handler.h (ACE_Event_Handler):
        * ace/Event_Handler.h (ACE_Notification_Buffer):
        * ace/Filecache.h (ACE_Filecache_Handle):
        * ace/Filecache.h (ACE_Filecache_Object):
        * ace/Local_Tokens.h (ACE_TPQ_Iterator):
        * ace/Local_Tokens.h (ACE_Token_Proxy):
        * ace/Local_Tokens.h (ACE_Token_Proxy_Queue):
        * ace/Malloc.h (ACE_Name_Node):
        * ace/Malloc.h (ACE_Static_Allocator_Base):
        * ace/Memory_Pool.h (ACE_MMAP_Memory_Pool):
        * ace/Memory_Pool.h (ACE_MMAP_Memory_Pool_Options):
        * ace/Memory_Pool.h (ACE_Shared_Memory_Pool):
        * ace/Memory_Pool.h (ACE_Shared_Memory_Pool_Options):
        * ace/OS.h (ACE_Countdown_Time):
        * ace/OS.h (ACE_Thread_Adapter):
        * ace/OS.h (ACE_Thread_Control):
        * ace/OS.h (ACE_Thread_Exit):
        * ace/Service_Object.h (ACE_Service_Type):
        * ace/Signal.h (ACE_Sig_Adapter):
        * ace/Synch.h (ACE_Adaptive_Lock):
        * ace/Synch.h (ACE_TSS_Adapter):
          Explicitly disallow use of implicitly generated copy
          constructor and assignment operator to prevent inadvertent
          memory leaks.

        * ace/Filecache.cpp (ACE_Filecache_Object):
        * ace/OS.i (ACE_Time_Value):
        * ace/Signal.i (ACE_Sig_Action):
        * ace/Signal.i (ACE_Sig_Guard):
        * ace/Signal.i (ACE_Sig_Set):
        * ace/Synch_T.i (ACE_Guard):
          Added base member initializers for class members that weren't
          initialized.  Better style and helps avoid some warnings.

        * ace/IPC_SAP.h (ACE_IPC_SAP):
        * ace/SOCK.h (ACE_SOCK):
        * ace/SOCK_IO.h (ACE_SOCK_IO):
        * ace/SV_Semaphore_Simple.h (ACE_SV_Semaphore_Simple):
        * ace/Synch.h (ACE_Barrier):
        * ace/Synch.h (ACE_Event):
        * ace/Synch.h (ACE_Guard):
        * ace/Synch.h (ACE_Null_Mutex):
        * ace/Synch.h (ACE_RW_Mutex):
        * ace/Synch.h (ACE_Semaphore):
          Made base class destructor virtual to ensure that it gets
          called by derived class destructor.

Thu Apr  1 13:31:56 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/CDR_Stream.{i,cpp}:
          Moved the destructors and a couple of short output CDR
          functions from .cpp to .i.

Thu Apr  1 03:30:19 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/tao_svcconf.pl: New perl script to help converting TAO's
          svc.conf file to use static services.

Wed Mar 31 14:30:28 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h: Fixed mis-matched #endif comments.  Thanks to Eric
          Eide <eeide@cs.utah.edu> for pointing this out.

Thu Mar 31 14:30:20  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * tests/Message_Block_Test.cpp: updated some printouts.

Wed Mar 31 10:46:31 1999  Steve Huston  <shuston@riverace.com>

        * ace/Message_Block_T.h: Add template arg to operator = definition for
          ACE_Locked_Data_Block<>.

        * ace/config-aix-4.x.h: Don't set _BSD for AIX 4.2 (or 4.3). Setting
          it works ok on AIX 4.2, but breaks TAO builds.  Not setting it has
          caused no regressions on 4.2, and allows TAO to build more.

Tue Mar 30 23:28:41 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Message_Block.cpp (init_i): This function was not releasing
          the old data block (if <data_block_> was non-zero).  Fixed this
          problem and avoided the memory leak.  Thanks to Sangwoo Jin
          <swjinjin@sei.co.kr> for reporting this leak.

          Also changed the constructors to set <data_block_> to zero.

        * tests/Message_Queue_Test.cpp (receiver): Fixed hacked use of
          init() to prevent memory leak.  The new init_i() fixes the leak.

Tue Mar 30 23:24:02 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in:
        * m4/features.m4:
        * m4/threads.m4:
          Updated several library checks to use a single call of my
          re/implementation of the new autoconf AC_SEARCH_LIBS test instead
          of having several AC_CHECK_LIB calls in a row.  Nice!

          The thread detection tests were overhauled.  They are now
          simpler but retain the same functionality as the previous
          tests.  They were greatly reduced in size so debugging, updating
          and enhancing should be much easier now.

        * m4/acinclude.m4:
          Reimplemented Autoconf's AC_SEARCH_LIBS into ACE_SEARCH_LIBS.
          The functionality is the same but the ACE reimplementation
          actually works when C++ is the test language.  For some reason
          Autoconf's test isn't being generated properly by GNU M4.

Tue Mar 30 22:04:49 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-win32-common.h: Added definition of
          ACE_DEFAULT_THREAD_PRIORITY as 0.  Thanks to John Morey
          <jmorey@tbi.com> for reporting this.

Tue Mar 30 21:31:01 1999  David L. Levine  <levine@cs.wustl.edu>

        * Makefile (RELEASE_LIB_FILES): added bin/ and etc/.
          Thanks to John Lindal <jafl@alice.wonderland.caltech.edu>
          for reporting that the ACE library Makefile needs
          bin/ace_components.

Tue Mar 30 18:49:58 1999  Darrell Brunsch  <brunsch@cs.wustl.edu>

        * bin/make_release: Added .ico to binary file types.

Tue Mar 30 12:23:23 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.32 released.

Tue Mar 30 11:03:31 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Synch.h (ACE_Adaptive_Lock): Clarified a comment about how
          to define a constructor in a subclass that initializes the
          lock_.  Thanks to Michael Kircher for reporting this.

Tue Mar 30 10:37:43 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/OS.i (getpwnam_r): Added patch contributed by Roland Gigler
          <roland@mch.pn.siemens.de> for getpwnam_r on SCO UnixWare 7.

Mon Mar 29 20:22:44 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in:
        * m4/features.m4:
          Added new M4 macro include file, and moved asynchronous IO tests
          to `m4/features.m4'.  The asynchronous IO tests were improved by
          making them run-time tests.  Cross-compiled platforms will fall
          back to a compile-time test.  Thanks to Alex for providing
          run-time tests.  The tests are based on his AIO tests found in
          the examples/Reactor/Proactor directory.

Sun Mar 28 18:02:54 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in:
          Enabled the C++ libtool support mentioned below.  Removed all
          references to CXXCPPFLAGS since the CPPFLAGS variable is used
          by autoconf for both C and C++.

        * ltconfig:
          Added my experimental libtool C++ support.  The hacks I made
          allow it to build C++ shared libraries.

        * m4/acinclude.m4:
        * m4/threads.m4:
          Renamed some variables.  Namespace pollution was breaking most
          of the tests.

Sun Mar 28 12:20:44 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h:
        * ace/CORBA_macros.h: Moved ACE_NEW_THROW* and ACE_GUARD_THROW*
          macros from OS.h to CORBA_macros.h.  Also added
          ACE_*GUARD_THROW_EX which has the new ACE try macros semantics.
          CORBA_macros.h needs to include "OS.h" to source in the correct
          platform configuration macros.

Sun Mar 28 13:27:15 1999  Balachandran Natarajan  <bala@cs.wustl.edu>

        * docs/exceptions.html:
        Added a new example

Fri Mar 26 23:35:28 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-freebsd-pthread.h: Added ACE_NEEDS_SCHED_H.

        * ace/config-irix6.x-g++.h:
        * ace/config-irix6.x-kcc.h:
        * ace/config-irix6.x-sgic++.h:
        * ace/OS.h: Reverted changes about ACE_LASKS_SCHED_H.

        * ace/config-dgux-4.x-ghs.h:
        * ace/config-irix6.x-sgic++.h:
        * ace/README:
        * ace/OS.h: Renamed ACE_LACKS_SCHED_H with ACE_NEEDS_SCHED_H to
          refect what it really means.  The original name was quite
          confusing.

Fri Mar 26 18:16:25 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/config-irix6.x-g++.h:
        * ace/config-irix6.x-kcc.h:
        * ace/config-irix6.x-sgic++.h:
          There is no need to explicitly include <sched.h> or to define
          ACE_LACKS_SCHED_H the file is present in IRIX 6.4.

Fri Mar 26 17:57:25 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-freebsd-pthread.h: Defined cuserid as an extern "C"
          function.

        * ace/OS.h: <sched.h> should only be included when !defined
          (ACE_LACKS_SCHED_H).

          Thanks to Eric Eide <eeide@cs.utah.edu> for sending the patch.

Fri Mar 26 17:12:21 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/Profile_Timer.{h,i,cpp}: On Win32 platforms that
          support RUsage, Profile_Timer will use both that and
          High Resolution Timers for measurements.  Depending
          on the method, one or the other will be used.

Fri Mar 26 17:02:00 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in:
          Improved ACE_HAS_USING_KEYWORD test so that it works for platforms
          that support the `using' keyword but don't have the `std' namespace.

          Updated ACE_HAS_TEMPLATE_SPECIALIZATION test so that it works for
          compilers that require the "template<>" syntax for specialization.

          Improved ACE_HAS_ONLY_SCHED_OTHER by checking for run time errors
          when a thread scheduling policy other than SCHED_OTHER is set.
          Thanks to David for suggesting this modification.

        * m4/acinclude.m4:
          Added support for converting warnings to errors for Sun C++.

        * m4/threads.m4:
          Added test to check if `-Kthread' compiler flag enables thread
          support.  SCO UnixWare 7 uses this flag.

Fri Mar 26 07:21:33 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Reactor_Performance_Test.cpp (handle_input): wrapped
          final return statement with ACE_NOTREACHED.

Thu Mar 25 20:16:49 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * bin/make_release: I wasn't using $bin_files for the
          ACE+TAO.zip creation, so now that is fixed.  Thanks to
          Greg Ross <gwross@west.raytheon.com> for pointing this out.

Thu Mar 25 16:31:27 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.h:
          Added new macros for byte swapping, this are rather evil. They
          add the correct padding to use a single long to represent a
          short or char, but in such a way that the first bytes of the
          long contain the required data.
          Nobody should need that, but the IDL compiler does.

Thu Mar 25 16:25:46 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in: Added test for ACE_HAS_BROKEN_MAP_FAILED.

        * ace/OS.h: Added __USLC__ to list of macros in the conditional that
          keeps the compiler from complaining about parameters which are not
          used.  This is needed for the C++ compiler on SCO UnixWare 7.
          Thanks to Roland for letting me know about this.

Thu Mar 25 14:55:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Basic_Types_Test.cpp: print out ACE version
          information even with ACE_HAS_MINIMAL_ACE_OS.

Thu Mar 25 13:52:57 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Reactor_Performance_Test.cpp (handle_input): This code
          wasn't entirely correct.  Well actually, I think where was some
          change in the semantics of Windows. Previously, once the handle
          was close, it seems that the application still got notified if
          there was data on the socket.  With WinNT SP4, it seems that
          once the handle was closed, no additional FD_READs were issued
          by the OS, even if data was available on the socket.

          In ACE, both FD_READ and FD_CLOSE get mapped to handle_input().
          The way to know when the connection was closed is to do a recv()
          in handle_input() and check for a zero return. When told of new
          data, the old code in handle_input() only did one recv() of
          BUFSIZ bytes. If there was more than BUFSIZ bytes of data on the
          socket, there would be some data left on the socket.  Hence,
          when notified of FD_CLOSE, it did another recv() which
          succeeded, and handle_input() never returned -1, making the test
          hang.

          The change made was to make handle_input() call recv() until
          EWOULDBLOCK occurs (note that the socket is in non-blocking
          mode).  Hence, when FD_CLOSE occurred, the socket did not have
          any data left, recv() returned 0 and handle_input() returned -1,
          which finally closed the test down correctly.

Thu Mar 25 13:13:51 1999  Ossama Othman  <othman@cs.wustl.edu>

        * Makefile.am (ACE.ifnames):
          Placed rule generation of ACE.ifnames within a MAINTAINER_MODE
          automake conditional.  If a `--enable-maintainer-mode' option
          isn't given on the configure script command line then don't
          generate a new `ACE.ifnames' file.

        * configure.in:
          Added AM_MAINTAINER_MODE so that maintainer level Makefile
          features are disabled by default.

        * acconfig.h:
        * ace/OS.h:
        * ace/README:
          Added ACE_HAS_BROKEN_MAP_FAILED macro for platforms that do not
          cast MAP_FAILED to a (void *).  Defining this macro prevents
          compilers on those platforms from complaining about assigning
          an int to a (void *).  Thanks to Roland Gigler
          <roland@mch.pn.siemens.de> for providing feedback about this.

Thu Mar 25 11:30:44 1999  Balachandran Natarajan  <bala@cs.wustl.edu>

        * docs/exceptions.html:
        Corrected a couple of links...

Thu Mar 25 01:04:00 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/OS.h (ACE_OS): Added ACE_DEFAULT_TEMP_DIR_ENV to be "TEMP"
        for WIN32 and "TMP" for Unix.

Wed Mar 24 18:30:18 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * performance-tests/TTCP/ACE-C++/wrapper-new-ttcp.cpp: Added a new
          version of this program that fixes a number of bugs with the old
          one.  Thanks to Hao Ruan <hruan@lucent.com> for these fixes.

Wed Mar 24 15:31:27 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * High_Res_Timer.cpp:
        * High_Res_Timer.h:
        * OS.i:

          Changed the implementation of the High Resolution Timer on
          Win32 to use QueryPerformanceCounter instead of assembly code.
          The docs also say that this is MP-safe.  Thanks to Gregory D.
          Fee <gdf2@cec.wustl.edu> for suggesting this.

        * Profile_Timer.cpp:
        * Profile_Timer.h:
        * Profile_Timer.i:

          Now uses the High Res Timer on Win32 instead of rusage.

Wed Mar 24 14:36:12 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/OS.cpp (ACE_OS_PREALLOCATE_OBJECT): Initialized obj_p to zero
          to make egcs happy.

Wed Mar 24 13:23:36 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: removed note about building netsvcs before
          running the one-button test on WIN32.  Thanks to Nanbor for
          hacking run_tests.bat :-)

Wed Mar 24 13:16:17 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/WFMO_Reactor.i (handler):
        * ace/Select_Reactor_T.cpp (handler_i): Made sure we can safely
          pass out the event handler before we do so.  Thanks to Michael
          Preobrazhensky <mikep@xpedite.com> for reporting this.

        * tests/run_tests.bat: Do not run Time_Service_Test if
          netsvcs/servers/main.exe doesn't exist.  Thanks to
          Jeffrey_Franks@i-o.com for reporting the problem and David for
          suggesting the fix.

Wed Mar 24 12:47:56 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html: added note to build netsvcs on Win32
          before running run_tests.bat.  Thanks to Jeff Franks
          <Jeffrey_Franks@i-o.com> for suggesting this.

Wed Mar 24 06:53:57 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (thr_create): SunOS 5.7 allows thread priority of 0,
          so we no longer need to work around that.

Tue Mar 23 22:49:15 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in: Added a test for ACE_NEEDS_DEV_IO_CONVERSION.

Tue Mar 23 22:29:20 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.7.h: undef ACE_HAS_ONLY_SCHED_OTHER, because
          other scheduling policies are supported by SunOS 5.7.  Thanks
          to Ossama and autoconf for noticing this.

Tue Mar 23 20:42:44 1999  Ossama Othman  <othman@cs.wustl.edu>

        * tests/Cache_Manager_Test.cpp (main): Added missing ACE_START_TEST
          and ACE_END_TEST macros.

        * m4/threads.m4: Modified UNIX International threads check to include
          check for rwlock_destroy() in -lthread since thr_create() was
          found without explicitly linking to -lthread on Solaris 2.5.1.
          rwlock_destroy() should be found only by linking to -lthread which
          will cause the configure script to add -lthread to the library link
          list.

Tue Mar 23 16:25:39 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-subsets.html: added FOR_TAO subset sizes.

Tue Mar 23 15:15:20 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Map_Manager.{i,cpp} (ACE_Map_Iterator_Base::operator*):
          Moved this function to .cpp file to avoid compilation problem on
          SunOS 5.6 with SunCC 4.2.  Once we know a patch that will fix
          the problem, we should move it back to .i file again.  Thanks to
          James Megquier <jmegq@bbn.com> for reporting the problem.

Tue Mar 23 14:56:58 1999  Ossama Othman  <othman@cs.wustl.edu>

        * acconfig.h:
        * configure.in:
        * ace/OS.h:
        * ace/TLI.cpp:
        * ace/config-osf1-4.0.h: Removed all references to
          ACE_HAS_BROKEN_T_ERRNO and removed the definition of the _terrno()
          function from TLI.cpp since it isn't a standard TLI function (at
          least not the Steven's books that I've read).  This also fixes a
          problem on Solaris that was causing an autoconfigured build of
          TLI.cpp to fail.

        * ace/Makefile.am: Make sure template source files get installed for
          all cases.  Previously, they only got installed if the template
          source is required by the compiler.  However, they are still needed
          by compilers that don't explicitly require template sources to
          be included in a file that references them.

        * configure.in: Fixed the test for ACE_TEMPLATES_REQUIRE_SOURCE.
          Thanks to Carlos for his help on this.  Removed the test for
          ACE_HAS_BROKEN_T_ERRNO since it is no longer needed due to the
          above change.

        * README: Added Konstantinos Margaritis <kmargar@cc.uoa.gr> to the
          ACE contributor list.

Tue Mar 23 12:57:40 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * netsvcs/lib/Client_Logging_Handler.cpp: Split off the logging to
          an ostream from the logging for STDERR.  Thanks to Bill Rizzi
          (rizzi@softserv.com) for pointing out this problem.

        * netsvcs/lib/Client_Logging_Handler.cpp: Changed the default from
          ACE_STDOUT to ACE_STDERR to be consistent.  Thanks to Bill Rizzi
          (rizzi@softserv.com) for pointing out the problem.

Tue Mar 23 12:06:04 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h (ACE_THROW_SPEC): Added prgama to disable reporting
          warning 4290 on MSVC.  MSVC "supports" the exception
          specification but doesn't provide an implementation for it.
          Instead, it warns you the specification is ignored.

Mon Mar 22 21:34:06 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_sunos5_g++.GNU: use -m uname
          option instead of -i, because GNU uname doesn't support -i.

Mon Mar 22 18:59:55 1999  Steve Huston  <shuston@riverace.com>

        * ace/NT_Service.cpp (state): Changed the (DWORD *, ACE_Time_Value *)
          version to reliably return -1 on any error.  Thanks to Martin
          Krumpolec <krumpo@pobox.sk> for keeping me honest here, and for
          sending in better code.

Mon Mar 22 14:16:04 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,cpp} (cleanup_tss): added tss_close (), to enable
          deleting the native key on program termination.  That's not
          implemented yet, because it requires a separate
          ACE_OS::thr_keyfree (ACE_OS_thread_key_t).

        * ace/OS.cpp (fini), README, ace/config-linux-lxpthreads.h:
          removed ACE_FINI_HOOK support.  It wasn't helping.

Mon Mar 22 11:14:16 1999  Ossama Othman  <othman@cs.wustl.edu>

        * Makefile.am:
        Various minor updates.

        * configure.in:
        * m4/platform.m4
        Moved known platform specific macro checks from `configure.in'
        to `platform.m4'.

        * tests/Makefile.am:
        Updated to build the DLL_Test shared library.  Support for the
        test is still broken (my fault :).

        * aclocal.m4:
        * configure:
        These are automatically generated so they shouldn't be under
        CVS control.  I Removed them from the CVS repository.

Mon Mar 22 09:42:26 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-subsets.html: added current status section.

Mon Mar 22 01:04:23 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.cpp (free_all_keys_left): Changed to remove left-over
          keys using TlsFree on Win32.  We can't use ACE_OS::thr_keyfree
          here because it tries to update the TSS in_use_ information
          which has already been deleted at this point.
          (cleanup_tss): Uncommented free_all_keys_left.

Sun Mar 21 21:26:46 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/make_release: fixed error status when building ACE+TAO.
          Thanks to Doug for reporting this.

Sun Mar 21 21:16:02 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.31 released.

Sun Mar 21 20:45:57 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.30 released.

Sun Mar 21 18:39:16 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ACE.ifnames:

        Updated with new macro list.

        * Makefile.am:

        Added the m4 directory to the distribution list and made some
        minor updates.

        * ace/Makefile.am:
        * m4/subsets.m4:

        Subsetting updates/corrections.

        * configure.in:

        Added work around for buggy glibc2.1 when including both
        <ucontext.h> and <sys/procfs.h>.  Added check for auto_ptr class
        declaration since some platforms have <memory> but may not
        declare the auto_ptr class.  Shortened some of the "checking"
        messages.

        * ace-config.1.in:  ace-config script man page template
        * aceConf.sh.in:    ace-config "unknown" library script

        Added these files to the CVS repository.

        * config.guess:
        * config.sub:
        * ltconfig:
        * ltmain.sh:

        Updated these files to the ones in the latest libtool.

        * libtool:

        Removed this since it is automatically generated for each platform.
        It shouldn't be under CVS control.

Sun Mar 21 17:59:22 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.cpp:
          Fixed a problem with ACE_OutputCDR::write_octet_array_mb, thanks
          to Dave Meyer <dmeyer@std.saic.com> for isolating and reporting
          this bug again [it was fixed in TAO and somehow it crept to the
          ACE version of the CDR classes].

Sun Mar 21 17:42:08 1999  Ossama Othman  <othman@cs.wustl.edu>

        * netsvcs/lib/Server_Logging_Handler_T.cpp (handle_logging_record):
          Use ACE_NTOHL macro instead of system ntohl() to get around bug
          in egcs-2.91.6x.

Sun Mar 21 16:07:24 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/config-g++-common.h (ACE_HAS_USING_KEYWORD):
          Define ACE_HAS_USING_KEYWORD for egcs 1.1.x.

Sun Mar 21 09:44:30 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Timeprobe_Test.cpp: don't test ACE_Singleton
          creation during static construction if ACE_HAS_PURIFY
          is enabled, because it notices the memory-in-use.

        * examples/Naming/Makefile: changed SRC to PSRC.

        * examples/Naming/Makefile,performance-tests/Misc/Makefile,
          tests/Makefile:
          Use ace_components instead of the current ACE_COMPONENTS
          setting to determine what should be built.

Sat Mar 20 19:10:37 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Connector.h:
        * ace/Connector.cpp:
        * ace/Strategies_T.h:
        * ace/Strategies_T.cpp:
          Added new methods to the ACE_Connector, ACE_Strategy_Connector,
          ACE_Connect_Strategy and ACE_Cached_Connect_Strategy.
          The motivation for this new method is a bit convoluted:
            In TAO we store the Svc_Handler returned from connect() as a
            hint for later Cached_Connector lookups.  But the location
            where we store it could be shared between multiple threads.
            To minimize the number of locks this hint is only modified and
            examined by the Cached_Connector, while the lock in the
            connection map is beign held.

            The problem arises when the hint is returned: another thread
            could try to use the same hint location, detect that the hint
            is in use and replace it before the thread that just requested
            the object has a chance to read the hint value.
            The solution is to use two variables: one is the hint
            location, carefully protected by the Cached_Connector lock,
            the other is a variable in the thread stack, they return the
            same thing, but the second variable is not affected by changes
            done by other threads.

            In short: we addeda connect() method that takes two arguments,
            the first is just intented to update the cached connector
            hint, the second is where the real connection gets returned.

        * tests/Makefile:
          David discovered that using SRC to list the sources does not
          work under some platforms. But using PSRC does.

Sat Mar 20 15:51:14 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in:
          Added tests for: ACE_HAS_BROKEN_NAMESPACES
                           ACE_HAS_BROKEN_CONVERSIONS
                           ACE_HAS_BROKEN_CONDITIONAL_STRING_CASTS
                           ACE_HAS_PTHREAD_CONDATTR_SETKIND_NP
                           ACE_HAS_PTHREAD_MUTEXATTR_SETKIND_NP
                           ACE_HAS_PTHREAD_PROCESS_ENUM

          Added some minor updates and corrections.

Sat Mar 20 09:06:10 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Map_Manager_Test.cpp: changed index () to slot_index ()
          and generation () to slot_generation (), to correspond to
          Active_Map_Manager interface change.

        * examples/ASX/Message_Queue/Makefile: changed LSRC to PSRC.

        * ace/Object_Manager.{h,cpp}: removed complex support from
          ACE_Object_Manager for cleanup of some ACE_Singleton locks
          during static construction/destruction, only.  The affected
          lock types are ACE_Thread_Mutex, ACE_Mutex, and
          ACE_RW_Thread_Mutex.  ACE_Recursive_Thread_Mutex and
          ACE_Null_Mutex will still be cleaned up if used to create
          ACE_Singletons during static construction/destruction.  As
          noted in ace/Singleton.h, those are the best type of locks
          to use with ACE_Singleton, anyways.

          This support was tricky to get right, and increased the size of
          the Object_Manager object file by 46 to 59 percent.  Now, if
          ACE_Singletons are created during static construction or
          destruction, with either an ACE_Thread_Mutex, ACE_Mutex, or
          ACE_RW_Thread_Mutex lock, those locks will be dynamically
          allocated and leaked.

Sat Mar 20 02:03:53 1999  Ossama Othman  <othman@cs.wustl.edu>

        * acinclude.m4:

          Split acinclude.m4 into several M4 macro files and moved those
          files into the new `m4' subdirectory, includind acinclude.m4.

        * m4/acinclude.m4:
        * m4/compiler.m4:
        * m4/subsets.m4:
        * m4/threads.m4:

          Added these M4 files.

        * bin/autogen:

          Script to regenerate auto{conf,make} and libtool related files.
          Additional functionality may be added to this script in the
          future.

        * Makefile.am:
        * ace/Makefile.am:
        * apps/gperf/src/Makefile.am:
        * apps/gperf/tests/Makefile.am:
        * apps/gperf/Makefile.am:
        * apps/Makefile.am:
        * netsvcs/clients/Logger/Makefile.am:
        * netsvcs/clients/Naming/Client/Makefile.am:
        * netsvcs/clients/Naming/Dump_Restore/Makefile.am:
        * netsvcs/clients/Naming/Makefile.am:
        * netsvcs/clients/Tokens/collection/Makefile.am:
        * netsvcs/clients/Tokens/deadlock/Makefile.am:
        * netsvcs/clients/Tokens/invariant/Makefile.am:
        * netsvcs/clients/Tokens/manual/Makefile.am:
        * netsvcs/clients/Tokens/mutex/Makefile.am:
        * netsvcs/clients/Tokens/rw_lock/Makefile.am:
        * netsvcs/clients/Tokens/Makefile.am:
        * netsvcs/clients/Makefile.am:
        * netsvcs/lib/Makefile.am:
        * netsvcs/servers/Makefile.am:
        * netsvcs/Makefile.am:
        * man/man3/Makefile.am:   ( NOT ADDED YET )
        * man/Makefile.am:        ( NOT ADDED YET )
        * tests/log/Makefile.am:
        * tests/Makefile.am:

        Added Automake makefile templates for ACE.

        * configure.in:
        * m4/subsets.m4:
        * ace/Makefile.am:

        Added support for David's ACE subsetting work.

Fri Mar 19 23:36:37 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Active_Map_Manager.h (ACE_Active_Map_Manager_Key): Changed
          method index() to slot_index() and generation() to
          slot_generation().  These changes were motivated by the
          OpenEdition platform/compiler, which defines a macro called
          index().  Also, changed the type of <index_> and <generation_>
          from u_long to ACE_UINT32 to get consistent size across
          platforms.

Fri Mar 19 22:50:19 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/ace_ld: inserted ^['"]? at beginning of patterns that check
          for -l and -L, to make sure they're at the beginning of arguments.
          Thanks to Henric Jungheim <junghelh@pe-nelson.com> for
          suggesting this.

        * tests/Makefile: removed SRC, because it caused link problems
          on DU 4.0.

Fri Mar 19 18:56:26 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * Fixed several makefiles that did not have a SRC or LSRC variable
          defined.

        * Re-generated the dependencies for both ACE and TAO, this time on
          a platform that includes the template code.

        * include/makeinclude/rules.local.GNU:
          Now we can run make depend inside a build directory.
          Removed any $(ACE_ROOT)/ace/config*.h files from the dependency
          list, those are not used.

Fri Mar 19 18:05:27 1999  Ossama Othman  <othman@cs.wustl.edu>

        * netsvcs/lib/Server_Logging_Handler_T.cpp (handle_logging_record):
          Reverted change that was thought to work around egcs compiler bug.
          The call to ntohl() within the templates still causes the compiler
          to complain.

Fri Mar 19 17:31:57 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.cpp:
          Fixed silly error in the InputCDR constructor taking an
          ACE_Message_Block.

Fri Mar 19 15:41:30 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/config-win32-common.h: Added CE fix.

Fri Mar 19 15:03:54 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.i:
        * ace/CDR_Stream.cpp:
          Changed CDR to ACE_CDR.
          Fixed ACE_InputCDR constructor when receiving a linked list of
          Message_Blocks.

        * tests/CDR_Test.cpp:
          Added a test for the constructor above.

Fri Mar 19 10:29:17 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Singleton.cpp (instance): removed at_exit () calls
          from both ACE_Singleton and ACE_TSS_Singleton, only
          when the ACE_Object_Manager hasn't started or has already
          shutdown.  In those cases, the singletons will leak.

        * ace/Object_Manager.cpp (ACE_Object_Manager ctor),
          ace/OS.cpp (ACE_OS_Object_Manager ctor): allow
          newer instances to overwrite older ones, in case an application
          #defines ACE_HAS_NONSTATIC_OBJECT_MANAGER and uses the
          Object_Manager during construction of static objects.

        * tests/Timeprobe_Test.cpp: added test of ACE_Singleton
          creation during construction of static objects.  Timeprobes
          can do that, when they're enabled.

        * ace/OS.cpp (fini), README: added ACE_FINI_HOOK support.
          Applications can #define ACE_FINI_HOOK to any executable code,
          and it will be executed on program termination.

        * ace/config-linux-lxpthreads.h: with ACE_HAS_TSS_EMULATION,
          #define ACE_FINI_HOOK to insert a one-second sleep at
          program termination.  It's necessary to avoid occasional
          segfaults of unknown origin, but they appear to be in the
          LinuxThreads library.

        * bin/ace_components: added.  It is used to record/access
          which components were built into the ACE library.  See next
          entry for files that have been updated to use it.

        * ace/Makefile,tests/Makefile,tests/run_tests.sh: use
          ace_components to record which components are in the ACE library.
          Suppress build/run of tests that use Token and Other.

        * netsvcs/{clients,servers}/Makefile: use ace_components instead of
          the current ACE_COMPONENTS setting to determine what should be built.

Fri Mar 19 03:24:34 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Singleton.cpp (instance): Commented out the call to
          ACE_Object_Manager::at_exit().  Currently, this is causing
          multiple instances of ACE_Object_Manager to get created, and
          hence causing all sorts of problems.

        * ace/OS.cpp (cleanup_tss): Removed the call to
          free_all_keys_left() (WIN32 only), because it causes
          segmentation faults at shutdown.

Fri Mar 19 00:15:21 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        The following changes are specific to WindowsCE.  They are
        required to remove MFC dependency from CE port.  Thanks to Eric
        Covington <eric@nowsol.com> for motivating this.

        * ace/config-WinCE.h: We no longer enfoce the use of MFC with ACE
          CE port anymore.

        * ace/config-win32-common.h: When not using MFC, CE needs to
          include <windows.h> and <wce.h> explicitly.

        * ace/Log_Record.cpp (print):
        * ace/OS.{h,cpp} (ACE_CE_Bridge): Changed to use HWND to record
          target window handle instead of CWnd. Also, we stop passing
          output string in a CString anymore.  The string is now created
          using ACE_OS::strdup and must be released by the target window
          using ACE_OS::free..  A small smart pointer class will be added
          later.  Notice that if you used ACE CE port before, the wParam
          can no longer be casted to a CString*, it should be casted to
          LPTSTR now.

        * WindozeCE/WindozeCEDlg.cpp: <wParam> should be casted to LPTSTR
          and it should be freed using ACE_OS::free.

        * ace/ace_ce_dll.dsp: CE programs (or DLL only?) not using MFC
          must specify all libraries used by the program, even msvcrt.

Thu Mar 18 22:21:39 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU: changed
          ACE_QUOTE to '"', instead of "", on win32 hosts.   "" just
          evaporates to nothing; we really need one double quote.
          Thanks to Hans Rohnert for verifying this.

Thu Mar 18 18:49:32 1999  Marina Spivak  <marina@cs.wustl.edu>

        * ace/SString.i (compare): fixed the function to work properly in
        case strings have different lenghts.

        * ace/SString.cpp: fixed code to gracefully handle failed memory
        allocations.

        * ace/SString.h: added comments about strings with release=0, not
        necessarily being null terminated.

Thu Mar 18 14:31:29 1999  Steve Huston  <shuston@riverace.com>

        * tests/DLL_Test.cpp: Use the new DLL_Test.h file that contains the
          class defs - needed for AIX xlC.  This should have been done
          with the Mar 15 changes but slipped through the cracks.

        * include/makeinclude/platform_hpux_aCC.GNU: Added support for
          building HP-UX 11 distributions with both 32 and 64 bits.

        * docs/tutorials/006/client_handler.cpp (Client_Handler::open): Changed
          arg name to void_acceptor to avoid redefining it inside the function.

        * docs/tutorials/007/client_acceptor.cpp (Client_Acceptor(Thread_Pool&)
          Fixed initialization of concurrency_.

        * docs/tutorials/018/Test_T.cpp (open): Fix ACE_UNUSED_ARG(arg).

        * ace/Message_Queue.h (ACE_Message_Queue_Base): Removed "= 0" from
          ~ACE_Message_Queue_Base.  AIX xlC warns that pure virtual dtor
          needs an out-of-line definition to be a base of another class.
          There is already a definition for the dtor in Message_Queue.i.

Thu Mar 18 14:30:04 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.i (timezone): Removed the leading '::' to cope with VC
          5.  Thanks to Lan Yaolong <lyaolong@cs.sunysb.edu> for reporting
          this.

Wed Mar 17 17:23:43 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        * ace/OS.i (timezone): Added support for timezone () on CHORUS

Wed Mar 17 14:06:24 1999  Ossama Othman  <othman@cs.wustl.edu>

        * acconfig.h: Some characters got removed so I put them back.

Wed Mar 17 13:59:42 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in:
        * acconfig.h:
          Added autoconf check for rename() system call.

Wed Mar 17 07:55:38 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * include/makeinclude/platform_freebsd_pthread.GNU: Made some
          adjustment for building ELF executables which are the default on
          FreeBSD 3 and above.  I'll incoporate Russell's LinuxThread
          change later.

Wed Mar 17 13:36:32 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/make_release: return non-zero exit status on failure.

Wed Mar 17 12:47:04 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Config.cpp (open_i): Also delete the parse buffer
          before exiting the function for it is no longer needed.  We
          still need to deallocate the buffer at close method to prevent
          the case when uses manipulate Service_Config directly using
          process_directives.

Wed Mar 17 12:33:35 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/OS.i: Reenabed ACE_OS::rename() and we'll see which
          platforms need to have ACE_LACKS_RENAME.  Thanks to Susan
          Liebeskind <shl@cc.gatech.edu> for reporting this.

Wed Mar 17 10:46:26 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Message_Block.i (space): Moved ACE_Message_Block::space()
          after inline declarations of ACE_Message_Block::end() and
          ACE_Message_Block::wr_ptr() to prevent "used before it was
          declared inline" warnings on end() and wr_ptr().

Wed Mar 17 10:24:26 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (argv_to_string): initialized temp to 0 to avoid warnings
          from VxWorks g++.
          ace/OS.i (strenvdup): initialized temp to 0 to avoid warnings from
          VxWorks g++.  Thanks to Hans Rohnert for reporting these.

        * include/makeinclude/platform_vxworks5.x_g++.GNU (RANLIB):
          replaced /bin/true with @true, to avoid build warning on
          NT hosts.  Thanks to Hans Rohnert for reporting this.

Wed Mar 17 09:58:43 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Svc_Conf.l (yy_delete_parse_buffer): Added a check for NULL
          to avoid freeing buffers multiple times.  Thanks to Tom Arbuckle
          <arbuckle@uran.informatik.uni-bonn.de> for this fix and to
          Nanbor for noticing the problem in the first place!

Wed Mar 17 08:30:58 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE version 4.6.29 released.

Wed Mar 17 03:12:43 1999  James C. Hu  <jxh@entera.com>

        * ace/Message_Block.i: Changed the definition of space () to be
          something more useful than it was.  Thanks to Bill Rizzi
          (rizzi@softserv.com) for pointing out the problem.

        * ace/Cache_*: Removed by popular decree.  Can be found in
          JAWS/PROTOTYPE.

Wed Mar 17 03:06:20 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Config.cpp (close): Re-enabled cleaning up the lex
          buffer.

        * ace/Svc_Conf_l.cpp (ace_yy_delete_parse_buffer): We should not
          remove uninitialize buffer.

Tue Mar 16 19:48:57 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Makefile and tests/Makefile: Reverted these files to the
          pre-Cache_Manager state.  The Cache_Manager files don't compile
          on g++ and vxworks and we need to make a release now.

        * ace/Map_T.h (class ACE_Noop_Key_Generator): Added new class.
          This class makes it easy to use the map adapters when you don't
          care about generating new keys.

Tue Mar 16 11:36:41 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-freebsd-pthread.h: FreeBSD 2.2 and above also support
          threads, but siginfo_t is only supported on FreeBSD 3.0 and
          above.  Thanks to Goldshtain Dmitry <goldshtain.dmitry@usa.net>
          for pointing these out.

Tue Mar 16 16:46:04 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Hash_Bucket_T.h: added class to friend
          ACE_Hash_Bucket_DLCStack_Iterator declaration.

Tue Mar 16 16:35:39 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: never use TRUE, true, FALSE, false, etc.

Tue Mar 16 15:58:07 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Config.cpp (close): Don't call the
          ace_yy_delete_parse_buffer for now.  It is causing access
          violation.

Tue Mar 16 15:15:00 1999 Chris Gill  <cdgill@cs.wustl.edu>

        * ace/ACE.{cpp, i}
          ace/OS.{cpp, h, i}
          ace/FIFO.cpp
          ace/Log_Record.cpp
          ace/SOCK_Dgram_Mcast.cpp
          ace/SPIPE_Connector.cpp
          ace/TLI_Acceptor.cpp
          ace/config-psos-diab-mips.h (new)
          ace/config-psos-diab.h
          ace/config-psos-tm.h
          ace/streams.h: integrated pSOS/MIPS changes into ACE.  Thanks to
          Jaepil Kim  (jpkim@lgsoft.com) for completing the ACE pSOS port
          for the MIPS platform, and for sending these modifications.

Tue Mar 16 14:25:03 1999  Steve Huston  <shuston@riverace.com>

        * ace/ACE.cpp (get_ip_interfaces, count_interfaces, get_bcast_addr):
          On AIX, use CSIOCGIFCONF instead of SIOCGIFCONF to retrieve
          interface information.  Thanks to Eric Newton <ecn@smart.net> for
          figuring this out.

Tue Mar 16 12:20:53 1999  Balachandran Natarajan  <bala@cs.wustl.edu>

        * ace/Service_Config.h (ACE_Service_Config):
        Added documentation for the parse_args () method. This was in
        request to Bill Rizzi <rizzi@softserv.com>.

Tue Mar 16 10:57:46 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Svc_Conf.l: Added a new method ace_yy_delete_parse_buffer()
          that frees up FLEX buffers when the program is done.  Thanks to
          Tom Arbuckle <arbuckle@uran.informatik.uni-bonn.de> for
          this fix.

        * examples/ASX/Message_Queue/buffer_stream.cpp (main): Changed pm
          to cm and vice versa to be consistent.  Thanks to Rainer Blome
          <rainer_blome@de.ibm.com> for reporting this.

Tue Mar 16 10:50:42 1999  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_aix4_cset++.GNU: New file to cover
          all AIX 4.x versions with the C Set++ (xlC) compiler.

        * include/makeinclude/platform_aix.GNU, platform_aix4.2.GNU: These
          files are deprecated; they simply include the new file above,
          platform_aix4_cset++.GNU.

Tue Mar 16 10:38:35 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Hash_Bucket_T.cpp:
          Removed default parameter declaration from the constructor for
          ACE_Hash_Bucket_Manager definition. Default parameter
          declarations can only show up in the function declaration.

Tue Mar 16 10:25:53 1999  Steve Huston  <shuston@riverace.com>

        * ace/config-aix-4.1.x.h, config-aix-4.2.x.h: These now simply
          include config-aix-4.x.h.  All further changes for any AIX 4.x
          version should go in config-aix-4.x.h.

Tue Mar 16 08:12:54 1999  Steve Huston  <shuston@riverace.com>

        * ace/Thread_Manager.cpp: In thread_within(ACE_thread_t), replaced use
          of '==' with ACE_OS::thr_equal.  In hthread_within (ACE_hthread_t),
          replaced use of '==' with ACE_OS::thr_cmp.  Thanks very much to
          Peter Windle <peterw@ugsolutions.com> for pointing this out.

        * README: Added Peter Windle to the list of distinguished contributors.

Tue Mar 16 03:05:22 1999  James Hu <jxh@entera.com>

        * ace/Cache_Hash_T.{cpp,h}:
        * ace/Cache_Heap_T.{cpp,h}:
        * ace/Cache_List_T.{cpp,h}:
        * ace/Cache_Manager.{cpp,h}:
        * ace/Cache_Manager_T.{cpp,h}:
        * ace/Cache_Object.{cpp,h}:
        * ace/Hash_Bucket_T.{cpp,h}:
          Incorporated fixes from purify and benchmarking sessions at Entera.
          Cosmetic changes coming soon (documentation strings and removal
          of magic numbers).

        * ace/Makefile: Added above files to Makefile.

        * ace/OS.i: FreeBSD does not support the timezone() function as
          documented by Vishal below.  Using Chris Gill's implementation
          for LynxOS.

        * tests/Makefile:
        * tests/Cache_Manager_Test.cpp:  Added this test to illustrate
          Cache_Manager.  Still needs changes to use ACE_DEBUG instead of
          cerr.

Mon Mar 15 19:05:22 1999  Steve Huston  <shuston@riverace.com>

        * ace/config-aix-4.x.h: New config file that covers all of the AIX 4.x
          versions with C Set++ (xlC) and g++.  Many thanks to Susan
          Liebeskind <shl@cc.gatech.edu> for doing to port to AIX 4.3 and
          testing, providing needed changes!

        * ace/OS.i (wait): Fixed to handle ACE_HAS_UNION_WAIT case correctly,
          without depending on AIX - thanks to Susan Liebeskind for this too!

        * ace/ACE.cpp (fork, with zombie avoidance): Fixed to work right
          with ACE_HAS_UNION_WAIT (ala AIX 4.2).

        * include/makeinclude/rules.lib.GNU: New template instantiation
          scheme for AIX with C Set++ (xlC); goes with...
        * etc/xlc_dummy.cpp: New file, purpose of which is to help with AIX
          xlC template instantiation.  This is the new, improved method from
          IBM suport.  It still generates a zillion duplicate definition
          warnings, but IBM doesn't have any better solution.

        * include/makeinclude/platform_aix4.2.GNU: This will work with both
          AIX 4.2 and 4.3 now.  I'll take care of the naming soon.

        * tests/Map_Test.(cpp h): Moved template defs to new file, Map_Test.h
          to satisfy AIX xlC.  Thanks to Susan for this too.

        * tests/DLL_Test.(cpp h): Moved template defs to new file, DLL_Test.h
          to satisfy AIX xlC.

        * tests/Makefile, Makefile.DLL: Fixed to build libDLL_Test correctly
          on AIX w/ xlC.

        * tests/run_tests.sh: Sets LIBPATH correctly for AIX (4.2 at least).

Mon Mar 15 00:26:31 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * netsvcs/ACE-netsvcs.html: Updated this to document the current
          version.  Thanks to Bill Rizzi <rizzi@softserv.com> for
          reporting this.

        * netsvcs/lib/Client_Logging_Handler.cpp: Make sure that debug
          messages go to stderr and log messages go to stdout.  Thanks to
          Bill Rizzi <rizzi@softserv.com> for reporting this.

        * netsvcs/lib/Client_Logging_Handler.cpp (fini): Oops, fixed a
          minor buglet with return values.  Thanks to David for reporting
          this.

        * netsvcs/lib/Client_Logging_Handler.cpp (send): Added a check to
          make sure we don't crash if the ostream is NULL.  Thanks to Bill
          Rizzi <rizzi@softserv.com> for reporting this.

Sun Mar 14 22:54:41 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * netsvcs/lib/Client_Logging_Handler.cpp (init): Added an
          ACE_OS::unlink() to prevent STREAM pipes from getting confused
          if this application doesn't shutdown gracefully.  Thanks to Bill
          Rizzi <rizzi@softserv.com> for reporting this.

Sun Mar 14 19:51:25 1999  Ossama Othman  <othman@cs.wustl.edu>

        * configure.in: Added real-time support library `-lrt' check to
          asynchronous IO functions/libraries checks.

          GNU glibc 2.1 adds support for the POSIX 1b real-time
          specification in the library `librt'.  The POSIX asynchronous IO
          functions may be found in that library.  Currently, `-lpthread'
          must also be linked to in addition to `-lrt'.

Sun Mar 14 17:20:09 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Log_Msg: Generalized the enable_debug_messages() and
          disable_debug_messages() methods so they can be used to enable
          or disable arbitrary priorities.  Thanks to Susan Liebeskind
          <shl@janis.gtri.gatech.edu> for suggesting this.

Sun Mar 14 14:46:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/OS.i (tzset,timezone):  pSOS doesn't support these two
          functions.

        * ace/OS.{cpp, h}: added comments clarifying usage for
          ACE_Time_Value::max_time, use of ACE_PSOS_TM in ACE_OS::signal ().

Sun Mar 14 01:30:43 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.i (tzset,timezone):  WinCE doesn't support these two
          functions.

Sat Mar 13 12:14:34 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Thread_Manager: Changed the following methods:

          int task_list (..)
          int thread_list (...)
          int hthread_list (..)
          int thread_grp_list (...)
          int hthread_grp_list (...)

          to return actual number of fetched values.

        * ace/Thread_Manager: Added two new methods, task_all_list() and
          thread_all_list(), which return lists of all the tasks and
          threads in a Thread_Manager, respectively.  Thanks to Zoran
          Ivanovic <zorani@pathcom.com> for contributing this.

        * ace/Shared_Memory_{MM,SV}.h: Clarified the relationship of
          these classes to the more powerful ACE_Malloc<> abstraction.
          Thanks to Ti Z <tiz@cisco.com> for suggesting this.

Sat Mar 13 13:27:55 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.i (timezone,tzset): not supported on VxWorks.

        * include/makeinclude/ platform_osf1_4.0.GNU: added suppression
          of msg 1180, statement causes unreachble return, with cxx 6.2
          and later.  It doesn't like ACE_OSCALL_RETURN and
          ACE_NOTSUP_RETURN, though it seems to be going overboard.
          The warnings appeared with cxx 6.2-009.  If someone uses
          6.2-007, they might have to manually remove the 1180 suppression.

        * examples/IPC_SAP/SOCK_SAP/CPP-inserver-fancy.cpp (handle_events),
          C-inserver.cpp (main),
          netsvcs/lib/Server_Logging_Handler_T.cpp (handle_logging_record),
          apps/Gateway/Gateway/Concrete_Connection_Handlers.cpp (svc):
          replaced NOTREACHED comment with ACE_NOTREACHED macro.  DU cxx
          started complaining about the unreached return statement.

Sat Mar 13 16:16:13 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/021: Added some comments to page04 about the
          template parameters and the use of the ACE_LOCK parameter in
          particular.  (Thanks to Bala for the suggestion.)

Sat Mar 13 00:37:17 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.28 released.

Fri Mar 12 20:17:47 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Select_Reactor_Base.cpp (handle_input):
        * ace/WFMO_Reactor.cpp (handle_signal): Added support for
          dispatching QOS_MASK and GROUP_QOS_MASK.

Fri Mar 12 19:13:11 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.i:
          Implemented ACE_OS::timezone() for LynxOS.

Fri Mar 12 16:31:19 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ACE-INSTALL.html (Linux): added note about non-thread safe
        glibc 2.0 dynamic loader.  The dynamic loader in glibc 2.1 is
        thread safe.

Fri Mar 12 13:44:54 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/DLL_Test.cpp (main): Fixed the errors on VxWorks and
          LynxOS by shifting the START_TEST before the #ifdefs began.

Fri Mar 12 12:53:17 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.5.h: with CC 5.0, replaced ACE_LACKS_ACE_IOSTREAMS
          with ACE_USES_OLD_IOSTREAMS.

        * include/makeinclude/platform_sunos5.5_sunc++.GNU: with CC 5.0,
          added -library=iostream,no%Cstd to CCFLAGS.

        Thanks to Diethard Ohrt <Diethard.Ohrt@siemens.at> for the
        above two updates to support CC 5.0.

Fri Mar 12 12:09:14 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h: fixed comment after #endif to match its #ifdef.

Fri Mar 12 11:46:55 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        Added two new functions tzset () and timezone (). The former sets the
        timezone information based on an environment variable TZ which is
        set when the user logs on. (For St. Louis TZ=US/Central and
        timezone = 360 minutes or 6 hrs. from GMT.). timezone () retrieves
        the timezone value in seconds.

        * ace/OS.h (ACE_OS): Added a wrapper for timezone () and tzset ().
        * ace/OS.i (ACE_OS): Added Implementation for the above functions.

        The timezone information is being used in the Time Service.

Thu Mar 11 20:11:13 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Get_Opt.cpp (operator): Reverted the following change since
          it will break documented behavior.  Thanks to Jon Biggar for
          reporting this.

        * ace/Get_Opt.cpp (operator): When the getopt encountered an
          unknown option or an option with a missing required argument, it
          returned '?' and continues to allow processing with the next
          argument (no problem so far).  However, if it encountered an
          argument that is not an option (i.e. no '-' in front) or if it
          encounters a double dash (i.e. '--') it returns EOF which
          disallows further processing.  Now, it returns a '?'  after
          advancing optind to allow further processing.  Thanks to Mark
          Laffoon <mark.laffoon@centraxcorp.com> for reporting this.

Thu Mar 11 15:34:24 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/ACE.cpp: removed unnecessary #includes of ace/IPC_SAP.h,
          ace/Process.h, and ace/SString.h.  Thanks to Elias Sreih
          <sealstd1@nortelnetworks.com> and Liang Chen
          <chenl@nortelnetworks.com> for suggesting this.

        * ace/OS.cpp (ACE_OS::thr_setspecific): on ACE_WIN32 with
          ACE_HAS_TSS_EMULATION, don't register the one native key
          with ACE_TSS_Cleanup::instance ().  There's no need, because
          it doesn't have a destructor.  And, it prevents startup
          because the ACE_TSS_Cleanup structures haven't been set up
          completely when it is called.  Thanks to Terry Rosenbaum
          <Terry.Rosenbaum@Radiology.MSU.edu> for reporting this.

 Thu Mar 11 14:04:15 1999 David L. Levine <levine@cs.wustl.edu>

        * include/makeinclude/platform_chorus_ghs.GNU: added protection
          to not reset exceptions flag if it was defined.

Thu Mar 11 12:53:41 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Thread_Manager.i:
          The method to return the number of threads was using thr_lists_
          as a pointer, but it isn't.

Thu Mar 11 10:12:51 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Thread_Manager: Added a method to return the current number
          of threads in the ACE_Thread_Manager.  Thanks to Zoran Ivanovic
          <zorani@pathcom.com> for suggesting this.

Thu Mar 11 10:27:51 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/DLL_Test.cpp (main): Allowed the main to be accessible on
          all platforms by shifting the #ifdefs inside the main. The
          problem arose due to the main being declared an undefined
          reference on LynxOS.

Wed Mar 10 13:31:37 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/config-linux-common.h:
        Commented out ACE_HAS_DLFCN_H_BROKEN_EXTERN_C, ACE_LACKS_MSYNC and
        ACE_LACKS_MADVISE.  They are no longer needed for recent revisions
        of glibc 2.x.  Thanks to <nbecker@fred.net> for pointing this out.

Wed Mar 10 11:05:39 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Thread.h,ace/Thread_Manager.h (exit): added comment
          that exit () should not be called by main thread.

        * ace/OS.h: added an ACE_OS_thread_key_t typedef on WIN32
          with ACE_HAS_TSS_EMULATION.  Thanks to Terry Rosenbaum
          <Terry.Rosenbaum@Radiology.MSU.edu> for reporting that
          it was missing.

        * include/makeinclude/platform_osf1_4.0.GNU: disable msg 1136 with
          cxx 6.1-029.  Thanks to Doug Anderson <doug@clark.net> for
          reporting this.

Wed Mar 10 10:57:16 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Basic_Types.h:
          Fixed minor problem that would show up if sizeof(int)==2; thanks
          to Cristian Ferretti <cfs@mat.puc.cl> for reporting this
          problem.

Wed Mar 10 10:13:52 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Message_Block.i (reference_count): Made sure the inline
          function is defined before used.  Thanks to David for noticing
          this.

Wed Mar 10 08:52:59 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_chorus.GNU: fixed
          exceptions=1 support.  Thanks to Wei Chiang for
          reporting this.

        * include/makeinclude/wrapper_macros.GNU: added exceptions=1
          support for pre-2.8 g++.  It's not recommended, because pre-2.8
          g++ doesn't support exceptions well.  It's provided for
          completeness.

        * include/makeinclude/platform_chorus.GNU: removed
          exceptions=1 support, because now it's in wrapper_macros.GNU.

Tue Mar 09 21:54:39 1999  David L. Levine  <levine@cs.wustl.edu>

        * netsvcs/Makefile,netsvcs/clients/Makefile: updated
          ACE_COMPONENTS check to allow everything to be built
          in the default case, when ACE_COMPONENTS isn't set.
          Thanks to Carlos for noticing this.

        * netsvcs/Makefile,netsvcs/servers/Makefile: moved
          netsvcs/server build suppression, when ACE_COMPONENTS
          lacks Other, from netsvcs/Makefile to netsvcs/servers/Makefile.

        * examples/Naming/Makefile: suppress build if ACE_COMPONENTS
          is defined and doesn't contain Other.

        * performance-tests/Misc/Makefile: don't build test_naming
          if ACE_COMPONENTS is defined and doesn't contain Other.

        * ace/Log_Record.i (length): cast the long argument to ACE_UINT32,
          to avoid warning message if long is greater than 4 bytes.
          Thanks to Hao Ruan <hruan@lucent.com> for reporting this.

Tue Mar  9 20:56:35 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * include/makeinclude/rules.nested.GNU:
          If the DIRS macro is not set we simply do not recurse.  Before
          this change we got an error from the shell.

        * bin/auto_compile:
          If there are no errors then send a message when a warning was
          detected during compilation.

Tue Mar 09 15:15:19 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/create_ace_build: check for ace/ and include/ directories
          in top level directory, instead of ace/, examples/ and netsvcs/.
          This allows use with trimmed-down workspaces.  Thanks to Jeff
          for suggesting this.

        * include/makeinclude/platform_chorus_ghs.GNU: added exceptions
          make option support.  Thanks to Wei Chiang for reporting that
          it wasn't supported.

Tue Mar  9 12:59:09 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * docs/ACE-subsets.html: Updated the subsets to reflect what's
          actually in the ACE Makefile.

        * ace/Message_Block.h: Changed the private section in both
          ACE_Message_Block and ACE_Data_Block to protected allowing
          derived classes to access data members of the parent class;
          Thanks to Alexander Davidovich <sasha@ms.com> for suggesting
          this.

        * ace/Message_Block: Added new reference counting accessor methods
          to Message_Block and Data_Block.  Thanks to Alexander Davidovich
          <sasha@ms.com> for suggesting this.

Tue Mar 09 11:21:49 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Message_Block.h: For some reason, default ctor and operator=
          must be declared private instead of protected if they are not to
          be accessable.  Otherwise, VC complains.

Tue Mar 09 01:06:44 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.27 released.

Tue Mar 09 00:39:23 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.26 released.

Mon Mar 08 23:23:35 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Thread_Manager.{h,cpp} (thread_within,hthread_within,
          thread_grp_list,hthread_grp_list): Added new functions to
          check if a thread is managed by the thread manager and collect
          the thread ids/handles in a thread group.  Thanks to XuYifeng
          <wj@puclic.hz.zj.cn> for motivating the addition.

Mon Mar 08 22:23:33 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Makefile: added FOR_TAO short-cut to ACE_COMPONENTS.
          If the ACE_COMPONENTS variable is set to FOR_TAO, then
          only the components necessary to support TAO will be
          built into libACE.

        * netsvcs/clients/Makefile: suppress build if Other
          ACE_COMPONENT isn't built.

        * netsvcs/Makefile: suppress server build if Other and Token
          ACE_COMPONENT aren't built.

Mon Mar  8 17:35:04 1999  Gonzalo Diethelm  <gonzo@tango.cs.wustl.edu>

        * ace/NT_Service.cpp:
        * ace/NT_Service.h:
          Now the handle_control method calls separate protected virtual
          methods to do its work. That way, it is easier to override what
          must be done on each case, just by overriding one of the new
          methods.

Mon Mar 08 15:41:08 1999  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_hpux.GNU: Added -DACE_LACKS_PRAGMA_ONCE.
          Thanks to Hao Ruan for reporting this.

        * README: Added Hao Ruan to the list of contributors.

Mon Mar 08 12:27:54 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Service_Config.cpp (handle_signal): added ACE_UNUSED_ARG (sig)
          if ACE_NDEBUG is defined, to avoid compilation warning about
          unused argument with debug=0.

        * docs/ACE-subsets.html: added subset characterizations on
          several platforms.

        * include/makeinclude/platform_sunos5_ghs.GNU: fixed AR and
          ARFLAGS to use CC to build static libs.  It looks like GreenHills
          no longer supplies a separate archiver with 1.8.9.

Mon Mar 08 11:58:03 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Task.cpp (activate): Made sure we don't mess with the passed
          in grp_id if the task was not previously actived.  Thanks to
          XuYifeng <wj@puclic.hz.zj.cn> for noticing this.

Fri Mar 05 14:15:46 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (ACE_TSS_Cleanup (),free_all_keys_left ()):
          with ACE_TSS_Emulation only, don't free the TSS key that
          ACE_TSS_Cleanup uses internally for its in_use_ member.
          The key doesn't get freed in ACE_OS::thr_key_detach (),
          because that gets called during shutdown.  So,
          free_all_keys_left () would attempt to free it.  But,
          the dynamic memory associated with it had already been
          deleted by ACE_TSS_Cleanup::exit ().  And, there
          aren't any other resources associated with it.  So,
          free_all_keys_left () can just skip over it.

        * ace/OS.cpp (cleanup_tss): disabled call to
          free_all_keys_left () with ACE_HAS_TSS_EMULATION, because
          we can't safely access the TSS values that were created by
          the main thread.  They were destroyed when the ACE_TSS_Cleanup
          instance exit () function was called.  There don't seem to
          be any leaks if free_all_keys_left () isn't called, anyways.

Fri Mar  5 11:05:04 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/Log_Msg/Log_Msg.dsw: Fixed the path to Callback.dsp.
          Thanks to Zoran Ivanovic <zorani@pathcom.com> for reporting
          this.

        * performance-tests/Misc/Makefile: Removed test_guard from the
          Makefile.  This test requires having
          ACE_USES_OBSOLETE_GUARD_CLASSES defined in order to compare
          ACE_Guard to ACE_Thread_Mutex_Guard (obsolete).

        * ace/OS.h: Removed ACE_THREAD_GUARD*.

        * ace/config-psos-{diab,tm}.h: Removed
          ACE_LACKS_METHOD_DEFINITIONS_IN_CLASS_TEMPLATE.  It is no longer
          needed.

        * ace/Synch_T.{h,i}: One would assume compilers are smart enough
          to treat _all_ in-class functions as inline.  Not for template
          member functions.  This is true at least for SunCC, egcs, gcc,
          and MSVC.  These functions seems to impose extra overhead.
          After removing the in-class definitions for ACE_Guard, the cost
          of using ACE_Guard is now as good as using
          ACE_Thread_Mutex_Guard (which, by the way, is depricated.)  So,
          there's no need for a ACE_THREAD_MUTEX_GUARD class.  Afterall,
          the "ACE Way[TM]" of defining inline functions is the "Right
          Way[TM]".  The motto of the change is, always put inline
          functions in .i files (even for template specialization)
          otherwise, they'll become regular functions.  If you really need
          to put function definitions within class definitions, mark
          inline function explicitly.

          Thanks to Andy Marchewka <AndyM@who.net> for noticing the
          performance differences between ACE_Thread_Mutex_Guard and (old)
          ACE_Guard.

Fri Mar  5 11:06:12 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Svc_Conf.y: Always print out an error message when we
          increment yyerror.  Thanks to Ulf Jaehrig <jaehrig@desys.com>
          for reporting this.

Thu Mar  4 12:26:47 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/Message_Queue_Notifications_Test.cpp (svc): Made increment
          of <role_> thread-safe.

Thu Mar 04 07:00:20 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-aix-4.2.x.h: added ACE_LACKS_PRAGMA_ONCE
          to xlC section.  Thanks to Rainer Blome <rainer_blome@de.ibm.com>
          for reporting this.

        * ace/config-osf1-4.0.h: added ACE_LACKS_PRAGMA_ONCE to
          cxx section, with __DECCXX_VER < 60090010.  This should
          help avoid compilation warnings from cxx 5.x.  Thanks
          to Oliver M. Kellogg <Oliver.Kellogg@vs.dasa.de> for
          reporting this.

        * ACE-INSTALL.html: corrected name of ace/config-linux-lxpthreads.h.
          Thanks to Barry Hoggard <hoggard@cfx.com> for reporting this.

        * tests/Makefile,Makefile.DLL: instead of always running a
          recursive make to build libDLL_Test.so, only do that if it
          needs to be built.  And, added dependencies to Makefile.DLL.

        * ace/Makefile: commented out use of TEMPLATE_FILES.  I don't
          believe that it's needed.

        * ace/CLASSIX/Makefile: removed unused TEMPLATE_FILES and
          LSRC2 macros, and gethrtime build rule.

        * docs/ACE-subsets.html: updated, and added documentation for
          ACE_COMPONENTS and the ACE_OS adapation layer.

Wed Mar  3 22:30:02 1999  James CE Johnson  <jcej@lads.com>

        * ace/IOStream_T.{cpp|h|i}: Those last changes break (at least)
          examples/IOStream/server.  I'm backing them out and restoring
          the 4.6.25 versions of these files until Chris can get back to
          me about what's going on.

Wed Mar 03 21:49:58 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (socket_init,socket_fini): replaced use of
          cerr with ACE_OS::fprintf.

        * ace/OS.h: conditionally #include Object_Manager.h, only
          if ACE_HAS_MINIMAL_ACE_OS is not defined.  Merged main ()
          #defines for Unix/NT and WinCE, to ease maintenance.

        * ace/config-minimal.h: removed undef of
          ACE_HAS_NONSTATIC_OBJECT_MANAGER, because OS.h now conditionally
          #includes Object_Manager.h.  Added ACE_MAIN_OBJECT_MANAGER #define,
          to only instantiate the ACE_OS_Object_Manager.

        * ace/config-WinCE.h: added ACE_MAIN and ACE_MAIN_OBJECT_MANAGER
          #defines, to support merging of the main () #defines in OS.h.

        * ace/OS.{h,cpp}: added ACE_OS_Object_Manager::starting_up ()
          and shutting_down ().  (ACE_TSS_Cleanup::remove): replaced
          use of ACE_Object_Manager::shutting_down () with
          ACE_OS_Object_Manager::shutting_down ().  Thanks to Irfan
          for reporting that, otherwise, ace/Object_Manager.h had
          to be #included by OS.cpp on NT, if ACE_NONSTATIC_OBJECT_MANAGER
          wasn't #defined.

        * tests/Basic_Types_Test.cpp: hacked a bit to support building,
          and running, with ACE_HAS_MINIMAL_ACE_OS.  Don't look,
          unless you want to forever ruin all of your good coding habits.

Wed Mar 03 19:08:52 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Map_T.h (ACE_Map): Further degraded my code to make it
          compile with lame compilers ;-) This time it was the lame pSOS
          diab compiler that could not recongnize a typedef in the base
          template class.

Wed Mar 03 11:31:00 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: added guideline to try to limit
          the length of source code lines to less than 80 characters.
          And, reverted to the previous version of the file.  The
          last version was apparently committed by mistake.

        * include/makeinclude/wrapper_macros.GNU (ACE_HAS_GNUG_PRE_2_8):
          added support for eg++.  Assume that it's egcs, and therefore
          ACE_HAS_GNUG_PRE_2_8 is set to 0.  Thanks to Russell L. Carter
          <rcarter@consys.com> for supplying a patch.

Wed Mar  3 09:35:20 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Memory_Pool.cpp (handle_signal): Added a check to see if the
          current mapping is up to date so that faults caused by other
          mappings will be passed on.  Thanks to
          Joseph Weihs <joseph-w@Orbotech.COM> for reporting this and for
          providing a fix.

Wed Mar  3 05:48:24 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/ACE.cpp (fork): Added an extra pair of parens within the
          WIFE*() macros to work around GCC bugs.  Thanks to Alexandre
          Karev <Alexandre.Karev@cern.ch> and Andre Folkers
          <folkers@informatik.mu-leubeck.de> for reporting this.

Tue Mar  2 22:50:18 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/POSIX_Asynch_IO.h:
        * ace/POSIX_Proactor.cpp:
        Added forward declaration for ACE_Proactor_Impl. Using static cast
        to down cast from <aiocb *> to
        <ACE_POSIX_Asynch_Result *>. Thanks to John.Mulhern@lawson.com for
        reporting the warnings in HP UX.

Tue Mar 02 21:17:19 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,cpp},Object_Manager.{h,cpp}: changed Object_Manager
          state to be per-instance, instead of global.  This makes
          it easier to enforce startup and shutdown ordering,
          regardless of whether the Object_Managers are static,
          created on the stack of main (), or dynamically allocated.

        * ace/IOStream_T.h: fixed a couple more line breaks.

        * Makefile: added support for suppressing man page regeneration
          on make release command line.

        * include/makeinclude/platform_osf1_4.0.GNU: added automated
          support for warning 1136.  It's only supported by cxx 6.2.
          Thanks to James CE Johnson <jcej@lads.com> for reporting
          this, and to Andrew Hobson <ahobson@eng.mindspring.net> for
          diagnosing the problem.

        * ace/OS.i (thr_getspecific): added #else clause w/ACE_NOTSUP_RETURN
          to support ACE_HAS_MINIMAL_ACE_OS.

        * ace/config-minimal.h: added #undef of
          ACE_HAS_NONSTATIC_OBJECT_MANAGER, to avoid #include of
          Object_Manager.h.  And, added #define ACE_USE_THREAD_MANAGER_ADAPTER
          so that ACE_Thread_Adapter::invoke () won't use any
          ACE_Thread_Exit functions.

        * ace/OS.cpp (ACE_Thread_Adapter::invoke): removed
          ACE_HAS_MINIMAL_ACE_OS conditional compilation, because
          config-minimal.h now #defines ACE_USE_THREAD_MANAGER_ADAPTER.
          And, added #else clauses to three TSS-related functions.

Tue Mar 02 14:43:29 1999  Steve Huston  <shuston@riverace.com>

       * ace/Map_T.(h i): Qualified types inherited from template base
         classes; qualified with ACE_TYPENAME where needed.  Now aC++
         is happy.

       * ace/config-hpux-10.x-hpc++.h: Added ACE_HAS_TYPENAME_KEYWORD for
         aC++.

       * tests/DLL_Test.cpp: Enable on HP-UX.  Generalize the library
         prefix/suffix with the platform definitions from OS.h.

Tue Mar  2 12:41:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

       * ace/IOStream_T.{cpp, h}: Fixed some line breaks that were
         inadvertently introduced when these files were last checked in.

Tue Mar  2 10:54:16 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * Cache_{Hash,Heap}_T.{h,cpp}:
        * Cache_Manager[_T].{h,cpp}:
        * Cache_Object.cpp:
        * Hash_Bucket_T.{h,cpp}: Fixed erroneous include directives.
          Thanks to Christian.Destor@alcatel.fr for reporting this.

Tue Mar  2 10:33:47 1999  James CE Johnson  <jcej@lads.com>

        * ace/IOStream_T.{cpp|h|i}: Christopher Healey
        <chealey@entera.com> noticed occasional core dumps from
        ~ACE_IOStream on heavily loaded systems.  It turns out that
        streambuf_ was being deleted out from under the object.  These
        three files include his patches for this problem.

Tue Mar  2 02:28:54 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CDR_Stream.h (do_byte_swap): This accessor function should
          be public accessible.  Otherwise it's useless.  Reorder class
          declaration so the protected members appear before private
          members/functions.

Mon Mar  1 23:26:41 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/DLL_Test.cpp (ACE_HAS_SVR4_DYNAMIC_LINKING):
          Added this check to prevent this test from being run
          separately.

Mon Mar 01 17:02:48 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE version 4.6.25 released.

Mon Mar 01 16:54:02 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp,Object_Manager.cpp: fixed ObjMan state logic to
          ensure that the ACE_Object_Manager is fini'd before the
          ACE_OS_Object_Manager, even when both are static objects.
          Thanks to Carlos for reporting this problem.

Mon Mar 01 14:05:46 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE version 4.6.24 released.

Mon Mar 01 13:04:53 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.*,Object_Manager.{h,cpp},ACE.cpp: added class
          ACE_OS_Object_Manager.  It manages the three preallocated
          locks that ACE_OS uses.  Many thanks to Nanbor for
          suggesting the scheme to avoid dependency on Synch_T.h
          for the ACE_Guard instantiations:  OS.cpp now has a
          couple of lightweight guards for its internal use.

        * ace/ACE.{i,cpp},OS.*: moved ACE::strecpy () and
          ACE::unique_name () from class ACE to ACE_OS.  That
          allows ACE_OS to be self-contained.  The ACE versions
          were left for backward compatibility; they now just
          wrap the ACE_OS versions.

          With these changes, a stand-alone ACE OS adaptation layer
          can now be built.  The ace/config-minimal.h config file
          should be included in ace/config.h if you want to build
          the ACE OS adaptation layer.

          Two deficiencies remain with the ACE OS adaptation layer:
          the dependencies on ACE_Log_Msg have been conditionally
          compiled out by config-minimal.h.  Similarly, there is
          a conditional dependency of ACE_Thread_Adapter::invoke ()
          on ACE_Thread_Exit.  It would probably be best to move
          that to ACE Thread_Manager, if possible.

        * ace/config-minimal.h: suppress ACE_HAS_TSS_EMUATION, because
          it requires other ACE headers to be #included.

        * ace/Synch.{i,cpp} (~ACE_Recursive_Thread_Mutex): added
          a call to this->remove ().  Without it, the mutex wasn't
          being destroyed.  Uninlined both the destructor to avoid
          code bloat if there are multiple returns in a function
          that instantiates an ACE_Recursive_Thread_Mutex locally.
          And, uninlined the remove () function, to save code space,
          because it's non-trivial and not expected to be time critical.

Sun Feb 28 20:21:05 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/Makefile.DLL (realclean): Added the realclean target to
          the makefile.

        * tests/run_tests.sh (ace_version): Disabled DLL_Test for chorus,
          LynxOS, Unicos platforms as they dont support shared libraries.

Sun Feb 28 20:08:54 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/POSIX_Proactor.cpp:
        * ace/POSIX_Asynch_IO.h:
        * ace/POSIX_Asynch_IO.cpp:
        Fixed to pass <ACE_POSIX_Asynch_Result *> wherever <aiocb *> is being
        passed, since it is ok to pass the derived class pointer in place of
        base class pointer.
        Defined the fields <bytes_transferred_> and <error_> in
        <ACE_POSIX_Asynch_Result> so that they can be used instead of
        <AIO_SYSERROR> and <AIO_SYSRETURN>. Because <aiocb:;aio_return> and
        <aiocb::aio_error> fields  are not supported on HP yet.

Sun Feb 28 14:22:38 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_linux_kcc.GNU: added
          -D_GNU_SOURCE to CFLAGS, because it's needed with
          glibc 2.1.  It can't go into the config file, because
          it needs to be #defined before the #include of
          features.h.  But, features.h #defines the glibc version.
          Thanks to Ben Eng <bet@jetpen.com> for reporting this.

        * ace/config-minimal.h: disable ACE_ASSERT, ACE_DEBUG, and ACE_ERROR.

Sun Feb 28 12:57:53 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Thread_Manager.cpp (terminate): The condition for handling
          joining thread was wrong.  Thanks to Terry Rosenbaum
          <Terry.Rosenbaum@Radiology.MSU.edu> for reporting the bug.

Sun Feb 28 08:37:44 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (ACE_Thread_Adapter::invoke): replaced call
          to ACE_Thread::self () with call to ACE_OS::thr_self (),
          so that we don't need to #include ace/Thread.h.  Thanks
          to Russ Noseworthy for reporting this.

Sat Feb 27 17:25:52 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Makefile: updated dependencies.  They didn't have
          any .shobj dependencies, just .obj.

        * tests/Makefile: ran make depend.  It didn't have any
          dependencies.

        * include/makeinclude/platform_linux_kcc.GNU: added note that
          evaluation copies of KCC might come with libraries that were
          built with exception handling support.  To use them, ACE must be
          built with exception handling support
          (exceptions=1).  Thanks to John Lindal <jafl@cco.caltech.edu>
          for reporting this.

          Also, added support for the exceptions make flag.

Sat Feb 27 13:31:17 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.i: Fixed the remaining problems with ACE_OSCALL_RETURN
          macro usage for sem_wait(), sem_post(), and sem_trywait().
          Thanks to David Levine for reporting this.

        * ace/OS.h: Added a set of ACE_THREAD_GUARD macros that use
          ACE_Thread_Mutex_Guard.  These seem to be faster on many
          platforms than the ACE_Guard<ACE_Thread_Mutex>.  Thanks to
          Andy Marchewka <AndyM@who.net> for reporting this.

        * ace/Dump.cpp: Moved the explicit template instantiation of
          ACE_Guard<ACE_Thread_Mutex> out of dump and put it into
          Synch.cpp, where it's with the other instantiations.

Fri Feb 26 23:58:46 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/CDR_Stream.{h,i,cpp}:
          Added some read- and write-pointer alignment
          functions, as proposed by Carlos. Also deleted some
          ACE_OutputCDR members that weren't being used.
          Checked the build on NT and suncc. Must come up with
          some kind of test for these new functions.

Fri Feb 26 21:56:05 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Makefile: moved ACE_COMPONENTS to after include
          of wrapper_macros.GNU, so that users can set it in
          their platform_macros.GNU.  Also, added ACE_LACKS_ACE_OTHER
          to CFLAGS if Other ACE_COMPONENT is not built.

Fri Feb 26 17:48:32 1999  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_hpux_aCC.GNU: Added OCFLAGS
          value for optimize=1 builds; added support for distrib=1
          builds to build for off-site distribution.

Fri Feb 26 12:38:00 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp: added #include "ace/Thread_Manager.h" on
          WIN32, for ACE_Thread_Descriptor declaration.  Thanks
          to Barry Hoggard <hoggard@cfx.com> for reporting this.

        * ace/Managed_Object.h: fixed comments in description.

Fri Feb 26 11:56:08 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Log_Priority.h (ACE_Log_Priority): Removed all references to
          ACE_HAS_BROKEN_ENUMS since it has been deprecated (see David's
          ChangeLog entries from Feb 5).

Fri Feb 26 11:09:47 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/OS.i (sema_destroy): ACE_OSCALL and ACE_OSCALL_RETURN macro
          calls for sem_destroy, sem_unlink and sem_close had too few
          arguments.  Added the missing arguments for the macros.

Fri Feb 26 10:59:45 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * examples/Reactor/WFMO_Reactor/test_talker.cpp (main): Fixed to
        use the new proactor interface.

Thu Feb 25 22:17:58 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (spa, for VxWorks only): updated comment about
          ::sp () default values, and added comments for each argument
          to ::taskSpawn ().  Thanks to Tad Jarosinski <tadj@qualcomm.com>
          for asking about spa ().

Thu Feb 25 20:10:06 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Synch.h:
        * ace/Synch.i:
        * ace/Synch_T.h:

        Added an ACE_Null_Semaphore class.  Thanks to Irfan for his guidance
        on this.  Also fixed ACE_SYNCH_SEMAPHORE to be ACE_Null_Semaphore
        when ACE is built without thread support.

Thu Feb 25 18:37:27 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/WFMO_Reactor (cancel_wakeup and masks_ops): Fixed the
          cancel_wakeup() method.  It was doing too much, i.e., if the
          masks were reduced to null, it was removing the event handler
          entry.  The new version behaves more like the Select Reactor in
          that it simply plays with the masks without removing the event
          handler.

          Also, implemented the mask_ops() operation.

          Thanks to Douglas C. Schmidt <schmidt@cs.wustl.edu> and Zoran
          Ivanovic <zorani@pathcom.com> for helping in pinpointing the
          problem.

        * ace/Service_Config.cpp (fini_svcs and close): Since the reactor
          and proactor singletons potentially call user code (in
          handle_close()), we must shut them down *before* the log msg is
          destroyed.  Therefore, moved the close_singletons() call from
          close() to fini_svcs().

        * ace/Select_Reactor_Base.cpp (bit_ops): Since we return the old
          masks everytime, find the old reactor masks at the start of the
          method.  This automatically does the work of the GET_MASK
          operation.

        * ace/Proactor.cpp: Added #include "ace/Object_Manager.h"

        * examples/Reactor/WFMO_Reactor/test_prerun_state_changes.cpp:
          handle_close() was getting called twice; changed code to prevent
          double deletion.

        * examples/Reactor/WFMO_Reactor/test_handle_close.cpp: Added the
          ability to cancel reads, change masks, and check for existing
          reactor masks.

Thu Feb 25 17:35:10 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/DLL_Test.cpp:
          Changed the OBJ_SUFFIX to ".so" as on Linux the .o file cannot
          be a shared object. Also the OBJ_PREFIX is now "./lib" for
          non-Win32 platforms.
        * tests/Makefile:
          Additional option DLL_TEST added so that a .so can be produced
          for DLL_Test.
        * tests/Makefile.DLL:
          This is the makefile which produces libDLL_Test.so for DLL_Test.

Wed Feb 24 23:47:22 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * examples/Reactor/Proactor/test_proactor.cpp:
        * ace/WIN32_Asynch_IO.h:
        * ace/Proactor.cpp:
        * ace/WIN32_Proactor.cpp:
        * ace/Proactor.h:
        * ace/Proactor_Impl.h:
        * ace/POSIX_Proactor.h:
        Changed the return values of the <ACE_Proactor::handle_events> API to
        return -1 on error, 0 on timeout, 1 on success. This has been done so
        that it looks like the <ACE_Reactor::handle_events>. Previously
        <ACE_Proactor::handle_events> was returning -1 on error, 0 on success
        and 0 on timeout also.

        Fixed the <ACE_POSIX_AIOCB_Proactor::handle_events> and
        <ACE_POSIX_SIG_Proactor::handle_events> to do indefinite blocking when
        ACE_INFINITE is passed. <sigwaitinfo> is used instead of
        <sigtimedwait>.

        Renamed the <ACE_AIO_Accept_Handler> class to more appropriate
        <ACE_Notify_Pipe_Manager>.

Wed Feb 24 22:08:50 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.i: Fixed all the sem_* calls so that they no longer use
          the ACE_ADAPT_RETVAL() macro, which was broken since these calls
          all return -1 on failure.  Thanks to John E. Bossom
          <John.Bossom@cognos.com> for reporting this.

Wed Feb 24 17:40:49 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/combine:
        * docs/tutorials/colorize:
          A few enhancements to make the colorization better.  Also, when
          #include "ace/something.h" is seen by the colorizer, it will
          create a link to ../../../ace/something.h.  That should give
          direct links from the tutorial pages to the ACE headers.

Wed Feb 24 16:56:51 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/017/barrier2.cpp: Added this to show how you can
          change the thread count while threads are still active.

        * docs/tutorials/017/*.html: Regenerated due to the new file.

        * docs/tutorials/018/*.html: Added Kirthika's abstract &
          regenerated.

        * docs/tutorials/018/token.cpp:  Typo in the comments...

Wed Feb 24 14:57:10 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h (ASYS_ONLY_WIDE_STRING): New UNICODE macros to convert
          char* to wchar* when UNICODE is defined but not on CE.

        * ace/Service_Config.cpp (parse_args): Convert getopt.optarg using
          ASYS_ONLY_WIDE_STRING.

Wed Feb 24 13:54:15 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-minimal.h: changed #include protection to
          ACE_CONFIG_MINIMAL_H, so that this config can be #included
          by others.

        * ace/OS.{h,cpp},Thread_Manager.h: moved ACE_Thread_Control and
          ACE_Thread_Exit class definitions from Thread_Manager.h to OS.h,
          so that Task.h no longer needs to be #included by OS.cpp.

        * ace/OS.cpp: protected #include of Containers_T.h with
          defined (ACE_WIN32) || defined (ACE_HAS_TSS_EMULATION).

Wed Feb 24 05:30:59 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Message_Queue_T.i (dequeue): Replaced the improper
          self-recursive call to dequeue() with dequeue_head().  Thanks to
          Marc Engel <engelm@tlse.sofreavia.fr> for reporting this.

Tue Feb 23 20:58:17 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.i: Make sure to do the right thang if we're compiling the
          ACE recursive thread mutexes on platforms that lack threading.

        * ace/Service_Object: Added a new ACE_Service_Object constructor
          that takes an ACE_Reactor * and passes this down to the
          ACE_Event_Handler base class.

        * ace/Event_Handler: Added a new ACE_Event_Handler constructor
          that takes an ACE_Reactor * and an int priority that default to
          the right values.

Tue Feb 23 21:53:32 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.h,README: added ACE_HAS_MINIMAL_ACE_OS support.

        * ace/config-minimal.h: added this config file.  It defines
          ACE_HAS_MINIMAL_ACE_OS.  It is designed to build only
          the minimal ACE_OS adaptation layer.

Tue Feb 23 20:28:45 1999  Marina Spivak  <marina@cs.wustl.edu>

        * ace/SString.{h,i,cpp}: Added a private member <buf_len_> to the
          ACE_CString class to keep track of the size of data buffer, and
          avoid unnecessary memory reallocations.  Updated class methods
          to use buf_len_.

Tue Feb 23 19:54:55 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/POSIX_Asynch_IO.h:
        * ace/POSIX_Asynch_IO.cpp:
          Fixed the potential dominance warnings in POSIX
          implementation. Updated the documentation.

Tue Feb 23 18:11:11 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * examples/DLL/DLL.dsw:
          examples/DLL/Main.dsp:
          examples/DLL/Newsweek.dsp:
          examples/DLL/Today.dsp:
          Added extra include and linker options to the projects.

        * tests/DLL_Test:
          Added OBJ_PREFIX to cater to the problem which arose due to the fact
          that the .o is produced under the .obj directory on SunOS.

        * tests/run_tests.sh:
          tests/run_tests.bat:
          Made an entry for DLL_Test.

Tue Feb 23 16:54:33 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/OS.i (recursive_mutex_trylock and recursive_mutex_lock):
          Removed the "abandoned" versions of these routines.  Abandoned
          mutexes are only supported for process mutexes, but not for
          thread mutexes.

Tue Feb 23 15:50:40 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * ace/Proactor.cpp:
        * ace/Proactor.h:
        * ace/Proactor_Impl.h:
        * ace/POSIX_Proactor.h:
        * ace/POSIX_Proactor.cpp:
        * ace/POSIX_Asynch_IO.h:
        * ace/POSIX_Asynch_IO.cpp:
        * ace/WIN32_Proactor.cpp:
        Implemented <post_completion> for POSIX platforms. Thanks to Irfan
        for the cool design. This API has been changed a little bit for
        portability. <post_completion> API now exists at
        <ACE_Asynch_Result_Impl> class. To post completions, users will have
        to get hold of an <ACE_Asynch_Result_Impl> class (either get it from
        the predefined factory methods at the Proactor or derive from
        <ACE_WIN32_Asynch_Result> or <ACE_POSIX_Asynch_Result>, then call
        <post_completion> on it passing in the <Proactor_Impl *> which can
        be got through <implementation> method in the <ACE_Proactor>.
        The need for RTTI has been avioded in this design.

Tue Feb 23 15:19:33 1999  Steve Huston  <shuston@riverace.com>

        * ace/NT_Service.(h cpp): Added two new methods:
          state (DWORD *, ACE_Time_Value * = 0) as an alternate way to get the
          service's state, with definite indication of error.  Also changed
          comments on the other state() method to clarify the return value.
          test_access (DWORD) tests caller's access to the service.
          Thanks to Martin Krumpolec <krumpo@pobox.sk> for these ideas and
          suggestions!

Tue Feb 23 14:12:52 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Active_Map_Manager_T.h (npos): Added a new static member
          function that returns a key that cannot be found in the map.
          Thanks to Fernando D. Mato Mira <matomira@acm.org> for
          suggesting this.

Tue Feb 23 12:15:09 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Svc_Conf.y:
        * ace/Svc_Conf_y.cpp:
        * ace/Parse_Node.cpp (symbol):
        * ace/OS.cpp (fork_exec):
        * ace/INET_Addr.cpp (ACE_INET_Addr): More Unicode fixes.

Tue Feb 23 12:00:21 1999  Steve Huston  <shuston@riverace.com>

        * examples/NT_Service/main.cpp: Allow -i option without a value, and
          default to AUTO_START.  Also, added a README file to explain how to
          use the program.  Thanks to Zoran Ivanovic <zorani@pathcom.com> for
          the change and the README file!

Mon Feb 22 22:03:47 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/auto_compile_win32.pl: Perl script for compiling all the
          million different config. combination on Win32.  Hey, it also
          works on Alpha.  Thanks to Darrell Brunsch for testing it on
          Alpha/NT.

        * ace/ace_{dll,lib}.dsp: Fixed broken project settings.

Mon Feb 22 21:56:27 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Sched_Params.cpp: removed #include of ACE.h because it's
          not necessary.

        * ace/Makefile: added ACE_COMPONENTS default definition.
          Moved Sched_Params from THREADS_FILES to OS_FILES because
          OS.cpp needs it.  It only contributes 172 bytes to libACE
          on VxWorks and 248 on LynxOS.

Sun Feb 21 18:52:17 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.23 released.

Sun Feb 21 08:46:09 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.i (recursive_mutex_{init,lock,trylock}: added some
          ACE_UNUSED_ARGS.

        * ace/OS.{i,cpp} (cond_*): uninlined the ACE_OS:cond_* function
          versions with ACE_LACKS_COND_T.  Most are too big to be
          good candidates for inlining.  And the others cause use-before-
          definition problems in OS.i.

Sun Feb 21 00:17:58 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * websvcs/lib/URL_Addr.i: Can now copy null Addrs.  Also added
          hash function implementation.

        * websvcs/lib URL_Addr.h: Added hash function.

        * websvcs/lib/URL_Addr.cpp: Fixed a bug with
          ACE_HTTP_Addr::create_relative_address and urls beginning with
          "/".  It used to copy the first '/', which wasn't needed.

Sat Feb 20 15:39:16 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.{h,cpp},Object_Manager.{h,cpp}: changed ACE_OS::exit ()
          to call an exit hook that is registered by the ACE_Object_Manager,
          instead of directly calling ACE_Object_Manager::fini ().

        * ace/OS.i (thr_self): moved definitions to before first use.

Sat Feb 20 11:50:30 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.i (thr_equal): Moved the body of ACE_OS::thr_equal before
          recursive_mutex methods to avoid "function redefined as inline"
          problem.  Thanks to David Levine for reporting this.

Sat Feb 20 09:05:20 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/OS.cpp: Changed the ACE_static_cast() in ACE_OS_Wstring to
          first use an ACE_const_cast().  Thanks to Andy Gokhale for
          reporting this.

Sat Feb 20 02:53:38 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.cpp (ACE_OS_WString): Need to add a statis cast when
          converting from wchar to char to eliminate a warning from Win98.

        * ace/config-win32-common.h: Do not check for library type on CE.

        * ace/config-WinCE.h: Defined ACE_HAS_WINCE as 1.

Fri Feb 19 22:54:18 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.h:
          Fixed the return types for ACE_OS_WString and ACE_OS_CString
          assignment operators, even though they are not defined they
          should be declared to return something, otherwise egcs give us a
          ton of warnings.

Fri Feb 19 21:02:49 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/config-win32-common.h: #define'd ACE_HAS_RECURSIVE_MUTEXES
          for Win32.

        * ace/OS.cpp: Removed the SString.h dependency in OS.cpp!

Fri Feb 19 21:44:31 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/OS.i: Was using two many arguments to thread_mutex_lock ()
          and ACE_OS::thread_mutex_trylock ().

        * ace/Synch.i: Typo in comment

Fri Feb 19 18:18:13 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.{h,i,cpp}: Added ACE_OS_WString and ACE_OS_CString which
          should only be used within ACE_OS to perform conversion between
          wchar strings and char string.
          Changed the wide/multibyte conversion macros to use
          ACE_OS_?String classes and removed dependencies to Auto_Ptr.h
          and SString.h.

        * ace/config-win32-common.h: Removed checked for (_DLL) if
          ACE_HAS_DLL = 0.  Otherwise, the static build won't compile.

        * ace/Token_Manager.cpp (release_token):
        * ace/Service_Manager.cpp (list_services): Changed
          ASYS_MULTIBYTE_STRING to ASYS_ONLY_MULTIBYTE_STRING.  Because
          the new conversion classes have stronger type checking, these
          errors weren't found until now.

Fri Feb 19 17:01:08 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Makefile: moved ACE from OS_FILES to UTILS_FILES.

Fri Feb 19 15:44:23 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS,
          ace/Synch: Moved the implementation of the
          ACE_Recursive_Thread_Mutex from the Synch.* files to
          the OS.* files in order to reduce coupling in OS.* and
          other parts of ACE.

Fri Feb 19 12:36:43 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/OS.i:
          Fixed missing ACE_INLINE for ACE_OS::strenvdup()

Fri Feb 19 11:35:57 1999  Steve Huston  <shuston@riverace.com>

        * include/makeinclude/platform_sunos5_sunc++.GNU: Added new option
          "distrib".  If you do a "make distrib=1" the -R options won't be
          given when linking, which produces dynamic load records requiring
          objects/libraries in standard places, or use of LD_LIBRARY_PATH.
          The default is distrib=0, which is the existing behavior.

Fri Feb 19 11:22:48 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.cpp (open): Don't call CreateFileA with FILE_SHARE_DELETE
          when compiled on Win95 because it doesn't support the flag.  The
          implication of this change is that unlink before close will not
          work on Win95.  So programs that are targeted to both NT and
          Win95 cannot depend on it.  Thanks to Rod Joseph
          <rodjoseph@adt.com> for reporting the bug.

Thu Feb 18 21:10:45 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/OS.cpp (string_to_argv): We no longer have to special case
          for WinCE since this logic has been moved into
          ACE_OS::strenvdup().

        * ace/ACE.cpp: Implemented ACE::strenvdup() using
          ACE_OS::strenvdup().

        * ace/OS: Move the implementation of strenvdup() from ACE to
          ACE_OS to remove another dependency from the OS wrappers.

        * ace/ARGV.cpp: Rewrote the ACE_ARGV::string_to_argv() and
          ACE_ARGV::argv_to_string() methods to use the new
          ACE_OS::string_to_argv() and ACE_OS::argv_to_string().

        * ace/OS.h: Added string_to_argv() and argv_to_string() methods to
          ACE_OS to remove the dependency on ACE_ARGV.

Thu Feb 18 19:21:03 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/005/client_handler.cpp: Replaced the leading '_'
        in the open() method so that we can cast _acceptor to acceptor.

Thu Feb 18 14:12:28 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * netsvcs/clients/Naming/Client/svc.conf: Changed to start up
          ACE_Naming_Context as dynamic service.  Thanks to Darren
          Whobrey <whobrey@fecit.co.uk> for reporting this problem.

        * ace/Name_Proxy.cpp (open): The timeout value was set upp
          ACE_Time_Value::zero accidentally when we want blocking
          connect.  Thanks to Darren Whobrey <whobrey@fecit.co.uk> for
          reporting the bug.

        * ace/CDR_Stream.{h,i} (ACE_InputCDR::do_byte_swap): Added
          accessor function for Flick.

        * ace/CORBA_macros.h (ACE_THROW_INT): This should return a new
          instance of the exception.  Thanks to Andy for pointing this
          out.

Wed Feb 17 16:40:56 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h (ACE_NEW_THROW_EX): A new ACE_NEW_THROW macro which
          makes ACE_NEW_THROW_EX behave like a exception-throwing
          function.  I.e., you need to follow ACE_NEW_THOW_EX with
          appropriate ACE_CHECK* macros.  The use of ACE_NEW_THROW,
          ACE_NEW_THROW_RETURN, ACE_NEW_TRY_THROW are deprecated.

        * docs/exceptions.html: Added documentation for
          ACE_DECLARE_NEW_CORBA_ENV.

        * ace/config-WinCE.h: Automatically define ACE_HAS_WINCE if it is
          not already defined.

        * ace/Synch.cpp: I had to shuffle the location of .i file around
          to avoid a warning from SH compiler for CE.

        * ace/config-win32-common.h: Disabled checking for DLL run-time,
          WIN32, and multi-threaded run-time on Windows CE.

        * ace/CORBA_macros.h (ACE_DECLARE_NEW_CORBA_ENV): Added this macro
          for declaring a new CORBA_Environment called ACE_TRY_ENV.
          ACE_TRY_NEW_ENV should now be avoided because it won't work if
          multiple try blocks are needed in the top-most functions.
          Instead, you can use the new macro to define the environment
          variable and use ACE_TRY/ACE_TRY_EX as usually.  This is even
          more intuitive than ACE_TRY_NEW_ENV. ;)  Thanks to Andy for
          reporting the problem.

Wed Feb 17 10:44:29 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * examples/Reactor/Proactor/test_proactor.dsp:
        * examples/Reactor/Proactor/test_proactor.cpp:
        * examples/Reactor/Proactor/Makefile:
        rtagged these files with "new_proactor"

Tue Feb 16 17:08:53 1999  Steve Huston  <shuston@riverace.com>

        * examples/ASX/Event_Server/Transceiver: Moved Event_Transceiver
          class definition to new file, transceiver.h, to build ok on AIX (P15)
          and fixed core dump if ctor fails to connect.

        * examples/Connection/misc: Moved some class definitions from
          test_upipe.cpp to new file test_upipe.h to build ok on AIX (P17).
          Same thing with Connection_Handler - new file Connection_Handler.h.

        * examples/Connection/misc/Makefile: Clean out tempinc directory
          between program compiles so AIX xlC doesn't freak out.

Tue Feb 16 16:42:23 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CORBA_macros.h (ACE_PRINT_EXCEPTION): A new macro that deal
          with printing out the exception for debugging.  Thanks to Lothar
          Werzinger <lwerzinger@krones.de> for suggesting this.

        * docs/exceptions.html: Added documentation for the new macro
          ACE_PRINT_EXCEPTION.  Since there's no portable way to print out
          the content of a CORBA_Exception, we use this macro to deal with
          differences among various ORB implementations.  This macro is
          user definable.

        Thanks to Eric Covington <eric@nowsol.com> for figuring out the
        following.

        * ace/ace_ce_dll.dsp: Added Functor.cpp and Message_Queue.cpp.

        * ace/High_Res_Timer.cpp (dump): Fixed Unicode problem.

        * ace/OS.i (truncate): WinCE does not have char* version of
          truncate.

Tue Feb 16 00:39:35 1999  Alexander Babu Arulanthu  <alex@cs.wustl.edu>
        * ace/ace_dll.dsp:
        * examples/Reactor/Proactor/test_proactor.dsp:
        * examples/Reactor/Proactor/test_proactor.cpp:
        Updated the files.
        * ace/WIN32_Asynch_IO.h:
        * ace/WIN32_Asynch_IO.cpp:
        * ace/WIN32_Asynch_IO.i:
        Added the files
        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:
        Updated these files
        * examples/Reactor/Proactor/Makefile:
        New make file which also compiles the test_aiosig_ace.cpp
        program.
        * ace/POSIX_Asynch_IO.i:
        Added the file.


        rTagged the ACE_wrappers repository with <before_proactor>
        After the following changes rtagged the repository with
        <after_proactor>

        * ace/
                Proactor.h
                Asynch_IO.cpp
                Asynch_IO.h
                Makefile
                Proactor.cpp
                Proactor.h
                config-lynxos.h
                config-sunos5.6.h
                config-sunos5.7.h
                POSIX_Asynch_IO.{h,CPP}
                POSIX_Proactor.{h,cpp}
                WIN32_Asynch_IO.{h,cpp}
                Asynch_IO_Impl.{h,cpp,i}
                Proactor_Impl.h
        Applied Bridge pattern to the POSIX implementation of the Proactor
        code. ACE_POSIX_AIOCB_Proactor works fine on Solaris
        2.6. ACE_POSIX_SIG_Proactor works on LynxOS. Take a look at the tests
        at the $(ACE_ROOT)/examples/Reactor/Proactor/ and the README.

        * tests/
                Aio_Platform_Test.cpp
        *examples/Reactor/Proactor/:
                test_proactor.cpp
                test_aiocb.cpp
                test_aiosig.cpp
                test_aiosig_ace.cpp
                README
        Test files for testing out the platforms.

Mon Feb 15 13:17:15 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.22 released.

Sun Feb 14 15:25:27 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ACE-configuration.txt:
        * ACE.ifnames:
        * acconfig.h:
        * ace-config.in:
        * ace-diff-config.in:
        * acinclude.m4:
        * aclocal.m4:
        * config.guess:
        * config.sub:
        * configure:
        * configure.in:
        * install-sh:
        * libtool:
        * ltconfig:
        * ltmain.sh:
        * missing:
        * mkinstalldirs:
        * ace/config.h.in:

        Started to introduce the work done by the ACE Configuration
        Project into the official ACE distribution.

        To help speed development, the work being done by the ACE
        Configuration Project is being slowly introduced into the official
        ACE distribution.  Some of the functionality in the work created by
        the ACE Configuration Project has been removed so that ACE may be
        built in the usual fashion.  Once the ACE Configuration Project
        work stabilizes on more platforms that removed functionality may be
        added to ACE.

        Currently the configure script contains most of the tests that are
        necessary to properly configure ACE on most platforms.  However,
        there are still some autoconf tests that are missing.  As such, you
        may encounter and most likely will have compilation problems.

        The `configure' script that is currently being used has been
        modified from the ACE Configuration Project's `configure' script to
        prevent makefiles from being automatically generated since there are
        still some issues that must be addressed before automatically
        generated makefiles are incorporated into the official ACE
        distribution.

Sun Feb 14 14:09:11 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/015/server.cpp (main): Force the singleton to use
        the Select Reactor instead of the OS-default.  This should fix the
        problem this tutorial has on Win32 due to blocking vs non-blocking
        socket configuration.

        * docs/tutorials/015/Protocol_Task.h : Removed the ability to
        activate this task.  The code is now a little simpler and less
        likely to behave in unpredicatable ways.

        * docs/tutorials/015/* : A few typos fixed but mostly fallout from
        removing the ability to activate the Protocol_Task.

        * docs/tutorials/016/page01.html : Added Kirthika's abstract.

        * docs/tutorials/016/condition.cpp : Made max_threads_ a
        non-static member variable that is set by open().

        * docs/tutorials/017/page01.html : Added Kirthika's abstract.

Sun Feb 14 12:47:03 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.i:
        * ace/CDR_Stream.cpp:
          Minor cosmetic changes, mostly trailing spaces.

Sat Feb 13 22:06:17 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        The following changes are based on the patch Eric Covington
        <eric@nowsol.com> submitted.  Thanks very much to Eric for
        bringing ACE/CE up-to-date.

        * ace/ace_ce_dll.dsp: Updated.

        * ace/OS.cpp: (open): CE doesn't support opening files with
          attribute FILE_SHARE_DELETE.

        * ace/OS.i (abort): CE doesn't support abort.

        * ace/Stats.cpp (print_summary): CE doesn't support strerror.

        * ace/Stats.i (dump): Changed to use ACE_DEBUG.

        * tests/Thread_Manager_Test.cpp (main):
        * ace/tests/SOCK_Connector_Test.cpp (find_another_host):
        * ace/Log_Msg.cpp (log):
        * ace/INET_Addr.cpp (addr_to_string): Fixed Unicode problems.

Fri Feb 12 16:14:47 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Remote_Tokens.cpp: Replaced the typedef for
          ACE_TSS_CONNECTION_MUTEX with #define ACE_TSS_CONNECTION_MUTEX.
          Thanks to Arturo for reporting this.

Fri Feb 12 18:41:22 1999  Steve Huston  <shuston@riverace.com>

        * ace/SString.cpp: Added "ace/" to #include "Auto_Ptr.h" to conform
          to conding guidelines.

Fri Feb 12 17:16:17 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/run_tests.vxworks: commented out Message_Queue_Test and
          Timeprobe_Test, because they lockup the machine.  And,
          fixed string length of DLL_Test printout.

Fri Feb 12 17:06:30 1999  Arturo Montes <mitosys@colomsat.com.co>

        * ace/config-sco-5.0.0-CC-fsu-pthread.h: removed this config
          file, because it's not used.

Fri Feb 12 16:36:55 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/SOCK_IO.{h,i,cpp} (send,recv): Added back the iovec version
          of send/recv back to maintain backward compatibility.  Thanks to
          Steve for pointing this out.

Fri Feb 12 15:37:10 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Makefile: split FILES up into subsets.  See
          docs/ACE-subsets.html for more information.

Fri Feb 12 12:31:29 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Makefile: Removed blank line that was added when troubleshooting
          the cvs log problem.  The extra line cause Digital Unix's make to
          complain about a missing separator.

Fri Feb 12 09:19:21 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.5.h: added ACE_HAS_STANDARD_CPP_LIBRARY and
          ACE_USES_STD_NAMESPACE_FOR_STDCPP_LIB #defines with Sun CC 5.0.
          Thanks to Diethard Ohrt <Diethard.Ohrt@siemens.at> for
          providing these.

Thu Feb 11 15:05:42 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ACE-INSTALL.html: Reworded the first step of the Windows
          NT installation to be a bit clearer.

Thu Feb 11 14:30:35 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/ace_dll.dsp: Fixed Alpha Configuration.

Thu Feb 11 03:48:50 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CORBA_macros.h: Added #pragma once and ACE_CORBA_MACROS_H to
          prevent duplicate inclusion of this file.

          Added a new macro ACE_ANY_EXCEPTION to denote the name of the
          CORBA exception caught by the ACE_CATCHANY.  Thanks to Lothar
          Werzinger <lwerzinger@krones.de> for suggesting this.

Wed Feb 10 23:01:16 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/config-win32-common.h: Made a better effort at finding out
          if the files are compiled against the correct run-time
          libraries.  Now _DLL is checked to see if it is defined for
          ACE_HAS_DLL != 0 builds, and if it is not defined for static
          builds.

          This should help diagnose the problem of not using (Debug)
          Multithreaded DLL run-time libraries in clients that use DLL
          versions of ace (one symptom of this mistake is errno not
          working correctly because of one copy being defined in the DLL
          and one in the program itself).

Wed Feb 10 22:19:33 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/014/stream.cpp : Removed the __LINE__ displays.
        * docs/tutorials/014/page01.html : Added Kirthika's abstract

        * docs/tutorials/015/page01.html : Added Kirthika's abstract
        * docs/tutorials/015/page12.html : Oops... Wrong intro text.
        * docs/tutorials/015/Protocol_Stream.cpp : Typos fixed
        * docs/tutorials/015/Protocol_Task.cpp : Typos fixed

Wed Feb 10 15:04:26 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Makefile: added Pair_T.cpp and Template_Instantiations.cpp
          to the TEMPLATE_FILES list/variable.  They were missing.
        * tests/Conn_Test.cpp (spawn_processes): initialized
          pid_t *children_ptr to zero to prevent "uninitialized"
          warnings from egcs 1.1.1.

Wed Feb 10 14:16:25 1999  Ossama Othman  <othman@cs.wustl.edu>

        * tests/Message_Queue_Test.cpp (performance_test): initialized
          ACE_Message_Block **send_block to zero to prevent "uninitialized"
          warnings from egcs 1.1.1.

Wed Feb 10 14:02:46 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/ACE.cpp (get_ip_interfaces): initialized struct ifreq * ifs
          to zero to prevent "uninitialized" warnings from egcs 1.1.1.

Wed Feb 10 10:53:59 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * examples/IPC_SAP/TLI_SAP/ftp-server.cpp:
          Fixed several minor syntax errors.

Tue Feb 09 16:54:10 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/CDR_Stream.cpp:
          Put the 'XXX_DISABLE_SWAP_ON_READ' code back into the
          ACE_INputCDR methods read_array(), read_2(), read_4(),
          read_8() and read_16(). I didn't realize at first how
          crucial that is to the Boeing folks. Thanks to Carlos
          for bringing this to my attention.

Tue Feb 09 16:07:32 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Synch.{h,i,cpp}: Removed classes ACE_Null_Mutex_Guard and
          ACE_Thread_Mutex_Guard since there doesn't seem any need for
          them any more.  They should be replaced by
          ACE_Guard<ACE_Null_Mutex> and ACE_Guard<ACE_Thread_Mutex>.  If
          by any chance you still need to use them, add
          ACE_USES_OBSOLETE_GUARD_CLASSES into your config.h file.

        * ace/Local_Tokens.h: Replaced ACE_Null_Mutex_Guard and
          ACE_Thread_Mutex_Guard with ACE_Guard<ACE_Null_Mutex> and
          ACE_Guard<ACE_Thread_Mutex>.

Tue Feb  9 16:12:42 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/{010|011}/task.{h|cpp} : barrier_ doesn't need to be a
        pointer since Doug moved n_threads to the ctor.  Minor typos
        corrected also.

        * docs/tutorials/010/message_queue.cpp :  Typos...

        * docs/tutorials/002/server.cpp: Added call to notify() in the
        signal handler so that ^C will exit as expected.

Tue Feb 09 13:57:23 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/DLList_Test.cpp (main): The test should log the result to
          DLList_Test.log, not ACE_DLList_Test.log.

        * tests/run_tests.{sh,vxworks,psosim}: Added DLList_Test.

        * tests/run_tests.bat: Removed DLL_Test.

        * ace/ACE.cpp (ldfind): Win32 only.  Made sure we always look for
          the DLL at the current directory first on Win32 which is the
          default behavior on Win32.

        * ace/ace_{dll,lib}.dsp: Removed entries of Service_Record.{h,i}.
          Thanks to David for noticing this.

Tue Feb 09 10:21:33 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Service_Types.{i,cpp},README: removed obsolete references to
          Service_Record.

        * tests/MT_Reactor_Timer_Test.cpp (main): added printout with numbers
          of expected and actual events, if result is not ACE_MAX_TIMERS + 2

        * include/makeinclude/wrapper_macros.GNU: added BUILD line with both
          shared_libs and static_libs enabled, so that individual Makefiles
          don't need a BUILD line.

        * docs/ACE-subsets.html: updated to reflect current ACE status.

Mon Feb 08 14:32:43 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/exceptions.html: Added guidelines of switching from TAO try
          macros to ACE try macros.  Other cosmetic changes.

Mon Feb  8 13:54:32 1999  Yamuna Krishnamurthy  <yamuna@cs.wustl.edu>

        * docs/tutorials/011/task.cpp :
        In the open return this->activate (THR_NEW_LWP,
        this->n_threads_); was taking an udefined variable threads.

        * docs/tutorials/011/message_queue.cpp:
        Corrected Compilation error due to a typo (static misspelt as
        statuc!!!)

Mon Feb  8 09:21:10 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Map_T.h,
          ace/Pair_T.h: Aded parens around the #pragma implementation file
          names so the AIX compiler would be happy.  Thanks to Martin
          Krumpolec <krumpo@pobox.sk> for reporting this.

Mon Feb 08 00:39:49 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.21 released.

Sun Feb  7 22:48:01 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CORBA_macros.h (ACE_THROW_RETURN): The second macro argument
          was missing.

Sun Feb  7 22:32:21 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/CORBA_macros.h: It wasn't clear why the ACE_THROW_RETURN
          macro for non-NT platforms wasn't taking a second RETV
          parameter.  I've fixed this, however.

Sun Feb 07 13:55:15 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_sunos5_sunc++.GNU: added
          comment about possibly needing -compat=4 with Sun CC 5.0.
          Thanks to Sush Bankapura <Sush.Bankapura@sylantro.com> for
          reporting success with it.

Sun Feb  7 00:43:32 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * ace/CDR_Stream.cpp:
          Turns out that read_boolean_array was declared, but
          the body was missing (?).

Sat Feb  6 22:38:40 1999  Jeff Parsons <parsons@cs.wustl.edu>

        * ACE_wrappers/tests/CDR_Test.cpp:
          Changed #include file name to ace/CDR_Stream.h (the new
          source file name).

Sat Feb  6 22:21:14 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR_Stream.h:
        * ace/CDR_Stream.cpp:
          Fixed the write_boolean_array() method; it only needs a const
          array of booleans.

Sat Feb  6 22:07:45 1999  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/CDR.{h,i,cpp}:  Renamed these as...
        * ace/CDR_Stream.{h,i,cpp}:  Mustn't have files with the
          same name (the TAO files) for the sake of some compilers.
        * Makefile:
        * ace_dll.dsp:
          Changed to reflect the renaming above.

Sat Feb  6 20:30:51 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/CDR.h:
        * ace/CDR.i:
        * ace/CDR.cpp:
          Fixed some indentation and style problems.

Sat Feb 06 07:47:20 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/test_config.h (~ACE_Test_Output): wrapped use of
          cerr with #ifndef ACE_LACKS_IOSTREAM_TOTALLY.

Sat Feb 06 02:41:07 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Map_Test.cpp: The hell of explicit template instantiation.
          Someone please save me from these stupid compilers.

        * ace/Map: Broken g++ (2.7) has deformed my beautiful code based
          on typedefs and forced me to use their basic form.  However,
          users should continue to use the typedefs provided as I do in
          the Map_Test.

Fri Feb 05 21:57:24 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Map_T: Added a new Map mini framework to ACE.  The classes
          in this mini framework allows the Map interface to be used
          without caring about the specific Map implementation being used.
          There is the class hierarchy of the framework:

                        forwards
          ACE_Iterator  -------->  ACE_Iterator_Impl (abstract)

          ACE_Iterator_Impl is subclassed by:

          - ACE_Map_Impl_Iterator_Adapter<IMPLEMENTATION>
          - ACE_Active_Map_Manager_Iterator_Adapter
          - ACE_Hash_Map_Manager_Ex_Iterator_Adapter
          - ACE_Map_Manager_Iterator_Adapter

                                forwards
          ACE_Reverse_Iterator  -------->  ACE_Reverse_Iterator_Impl (abstract)

          ACE_Reverse_Iterator_Impl is subclassed by:

          - ACE_Map_Impl_Reverse_Iterator_Adapter<IMPLEMENTATION>
          - ACE_Active_Map_Manager_Reverse_Iterator_Adapter
          - ACE_Hash_Map_Manager_Ex_Reverse_Iterator_Adapter
          - ACE_Map_Manager_Reverse_Iterator_Adapter

          ACE_Map is subclassed by:

          - ACE_Map_Impl<IMPLEMENTATION>
          - ACE_Active_Map_Manager_Adapter
          - ACE_Hash_Map_Manager_Ex_Adapter
          - ACE_Map_Manager_Adapter

          Also included in the framework is a Key Generator class and a
          Key Adapter class.  The Key Generator class is used by some map
          adapters to generate keys since the maps they adapt do not
          generate keys. The Key Adapter class is used by the active map
          adapter to allow encoding and decoding of active keys into user
          keys.

          Note that the iterators use the bridge pattern while the map
          class uses an abstract base class based inheritance approach.
          The reason for this is that STL containers return the iterators
          by value.  An abstract base class cannot be returned by value.

          An alternative design would be to add an abstract base class
          that the ACE maps would derive from.  Unfortunately, this would
          break many things including the ability to add these maps to
          shared memory and explicit template instantiations.

          This mini framework would have been idle to apply the external
          polymorphism pattern.  However, the ACE map classes are
          different enough that adaption was necessary.  This turned out
          to be a blessing in disguise since I was able to add extra
          common functionality such as the key generator and key adapter
          to the map adapters.  I did add the external polymorphic
          subclasses to the framework for future use.

          The classes in this framework are as close STL containers as I
          would dare to make them ;) Thanks to Carlos for helping design
          them.

        * tests/Map_Test: New test to illustrate and test the workings of
          the new ACE Map classes. There are two aspect to this test:
          (a) functionality testing includes testing the iterators and
          various operations, and (b) performance testing to compare the
          relative performance of the maps.

        * ace/Pair: Added new Pair class to ACE that holds instances of
          the template arguments.  Also, added a Reference_Pair class that
          only hold references of the template arguments.

        * ace/Hash_Map_Manager_T.* (ACE_Hash_Map_Manager_Ex):
        * ace/Map_Manager.* (Map_Manager):
          Added new rebind() methods to make interface compatible with
          other maps.  Also, fixed the constness of some functions.

        * ace/Hash_Map_Manager.h: Fixed order of inclusion of template
          code.

        * ace/Active_Map_Manager_T.h (ACE_Active_Map_Manager): Added new
          versions of bind, find, and unbind to reduce the number of data
          copies.

        * ace/Active_Map_Manager.h (ACE_Active_Map_Manager_Key): Added the
          ability for the active key to encode and decode into and out of
          a data stream.  This relieves the developer from concerning
          herself about the internal structure of the active key.

        * ace/config-win32-common.h: Define WIN32 if not already defined.

        * tests/SString_Test.cpp: Added testing for substring creation and
          comparisons.

        * ace/OS.h (ACE_dynamic_cast_*_ptr and ACE_dynamic_cast_*_ref):
          Added new macros to handle casting of template class.

        * tests/test_config.h: Removed global KEY class that was not being
          used anymore anyway.

Fri Feb 05 21:12:56 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.20 released.

Fri Feb 05 12:02:31 1999  Steve Huston  <shuston@riverace.com>

        * tests/run_tests.sh: Added SHLIB_PATH support for HP-UX. Fixed
          the LD_LIBRARY_PATH setting to work if there was no path set
          on entry to the script.

        * ace/config-hpux-9.x.h, config-hpux-(10,11).x-hpc++.h:
          Removed ACE_HAS_BROKEN_ENUMS.  This affects the HP C++ compiler, not
          aC++.  I made this change based on David's experience with the
          enums and Green Hills, below.  If it causes any problems, let me
          know and I'll reset it.

Fri Feb 05 10:11:18 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Log_Priority.h: changed ENSURE_32_BITS to LM_ENSURE_32_BITS,
          and its value from 0xffffffff to 0x7fffffff.  Green Hills 1.8.9
          properly complained that 0xffffffff doesn't fit into an int.

        * ace/config-sco-5.0.0-CC-fsu-pthread.h,config-sunos5.5.h,
          config-vxworks5.x.h: removed ACE_HAS_BROKEN_ENUMS, because
          it's not necessary with 0x7fffffff.

Thu Feb  4 23:11:26 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * websvcs/lib/URL_Addr.h:
        * websvcs/lib/URL_Addr.i:
          Added operator= to the ACE_URL_Addr classes.

        * websvcs/lib/URL_Addr.cpp:
          Fixed minor memory allocation problem for invalid HTTP
          addresses.
          It removes './' when creating relative addresses.

Wed Feb 03 21:50:09 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-vxworks5.x.h: added ACE_HAS_BROKEN_ENUMS with
          Green Hills, because it's needed with 1.8.9.  And, added
          ACE_HAS_STANDARD_CPP_LIBRARY #define to 1, for Green Hills 1.8.9
          (with __STANDARD_CXX #defined) only, because it doesn't work with
          1.8.8.  Thanks to Jacob Jones <Jacob.J.Jones@notesmta.gd-is.com> for
          reporting these.

        * ace/config-sunos5.5.h: with Green Hills 1.8.9 (with
          __STANDARD_CXX #defined), added ACE_HAS_STANDARD_CPP_LIBRARY
          #define to 1.

Wed Feb 03 14:57:21 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Thread_Manager.h (ACE_At_Thread_Exit[_Func]): Added
          ACE_Export keywords.  Thanks to Terry Rosenbaum
          <Terry.Rosenbaum@Radiology.MSU.edu> for pointing this out.

        * ace/Service_Config.{h,i,cpp}: Added one more argument to open
          methods that allows ignoring the default svc.conf file.  You can
          still open svc.conf files using the -f option.

Wed Feb 03 10:12:14 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/make_release: fixed release_filter so that it doesn't put
          CVS files into the release.

        * ace/Object_Manager.h: updated comments to reflect that
          ACE_HAS_NONSTATIC_OBJECT_MANAGER is now #defined in
          several ace/config files, including that for Win32.
          Thanks to Dave Meyer <dmeyer@std.saic.com> for pointing
          that out.

Wed Feb  3 09:30:11 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * websvcs/lib/URL_Addr.cpp:
          Fixed some memory leaks.
          HTTP_Addr::create_relative_address supports the #label syntax.

Wed Feb 03 07:02:49 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/CDR_Test.cpp: commented out ACE_Auto_Basic_Array_Ptr<CDR:Char>
          explicit instantiation, because it's in ace/Memory_Pool.cpp.

Tue Feb  2 21:35:21 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/007/client_handler.h:
        * docs/tutorials/007/thread_pool.h:
          A couple of syntax goofs.  I'm surprised it compiled for anyone!

        * docs/tutorials/007/thread_pool.h:
          Changed ACE_Time_Value(0.25) to ACE_Time_Value(0,250000)

        * docs/tutorials/*/Makefile:
          Added '.depend' to the list of files removed by the CLEAN
          target.  I shoulda' done this the other day.

Tue Feb  2 20:02:22 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * bin/make_release: Added .gz to the list of binary file extensions.

Tue Feb  2 19:28:46 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * docs/tutorials: ACE-ified the first 11 tutorials.  I hope
          James still recognizes this stuff now ;-)

Tue Feb  2 19:12:50 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/001/logger.h (class Logging_Handler):
          Incorporated Pradeep's suggestion to get rid of the memset() and
          use the recv() return value to drop in the null-termination.

Tue Feb  2 14:19:30 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * websvcs/websvcs.dsw:
        * websvcs/lib/websvcs.dsw:
        * websvcs/lib/websvcs.dsp:
        * websvcs/tests/tests.dsw:
        * websvcs/tests/Test_URL_Addr.dsp:
          Added MSVC project files for the websvcs library.

        * websvcs/lib/URL_addr.cpp:
          Now correctly exports classes in DLLs.

Tue Feb  2 12:48:34 1999  Jeff Parsons  <parsons@cs.wustl.edu>

        * tests/CDR_Test.cpp:
          Changed the template type of the auto_ptr for char. We were
          getting a Purify FMR message on Unix.

Tue Feb  2 12:27:13 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/ACE.cpp: Added an ACE_UNUSED_ARG for program_name for
          ACE::daemonize().  Thanks to David Levine for reporting this.

        * ace/OS.h: Generalized the WIF* macros so that they will be
          defined on any platform that lacks them, not just NT.  Thanks to
          David Levine for reporting this.

Tue Feb 02 08:58:32 1999  Steve Huston  <shuston@riverace.com>

        * tests/MT_Reactor_Timer_Test.cpp: Moved definition of status outside
          of ACE_HAS_THREADS condition since it's used in either case.  Thanks
          to Frederic Andres <andres@rd.nacsis.ac.jp> for this fix.

Mon Feb 01 23:16:34 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.19 released.

Mon Feb 01 22:06:40 1999  David L. Levine  <levine@cs.wustl.edu>

        * bin/make_release (create_kit): fixed typo, bin_files
          instead of binfiles.

Mon Feb 01 21:24:45 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.18 released.

Mon Feb  1 21:02:26 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ace/ace_dll.dsp: Some template files were being compiled
          in the Release/Unicode/Alpha configs.  This is now not the
          case.

Mon Feb  1 13:49:11 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/config-linux-common.h:
          Added a definition for ACE_TIMER_SKEW, apparently it is only
          needed in multiple CPU machines (with SMP enabled); but it did
          solve the problems with MT_Reactor_Timer_Test.

Mon Feb 01 13:08:11 1999  Jeff Parsons <parsons@cs.wustl.edu>

        * tests/CDR_Test.cpp:
          Used an auto_ptr to manage a string sent to string_read(). I
          had included the .h file for auto ptrs (Carlos corrected my
          typo, see below), but had never checked in the code using
          auto_ptr.

Mon Feb 01 12:54:11 1999  Steve Huston  <shuston@riverace.com>

        * ace/NT_Service.(h i): Some fixes provided by Martin Krumpolec
          <krumpo@pobox.sk> - thanks to Martin for these!
          - Supplied missing ctor for name/desc variant.
          - svc() method is not pure virtual any longer to prevent SCP-type
            applications from having to override it and never use it.

Mon Feb  1 12:04:35 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * bin/make_release: Added zip and gif to the binary files in
          zips.

Mon Feb 01 12:00:55 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.5.h: With CC 5.0, enabled explicit template
          instantiation and added ACE_LACKS_ACE_IOSTREAM.  Early versions
          of CC 5.0 seem to have problems with automatic template
          instantiation and ACE_IOStream.

        * include/makeinclude/platform_sunos5_sunc++.GNU: added CC 5.0
          support to enable explicit template instantiation, and disable
          inlining by default.

        Thanks to Diethard Ohrt <Diethard.Ohrt@siemens.at> for confirming
        that above fixes allow ACE and TAO to build with CC 5.0.

        * include/makeinclude/platform_sunos5_{g++,ghs}.GNU: removed -lw
          from libs.  It's not necessary, and apparently causes problems
          on Solaris 2.6, because libc now includes the code that was
          formerly in libw.  Thanks to Steve Coleman <Steve.Coleman@jhuapl.edu>
          for reporting this.

Mon Feb  1 10:41:09 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/CDR_Test.cpp:
          There was a typo in a included filename.

Mon Feb  1 08:39:15 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Synch.h: Clarified that the ACE_Semaphore::acquire() is in
          absolute, rather than relative, time.  Thanks to Jacques
          Salerian <Jacques.Salerian@era.ericsson.se> for reporting this.

Sun Jan 31 20:10:23 1999  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/OS.h:
          Just renamed the CDR byte order macros to something more
          reasonable.

Sun Jan 31 18:19:45 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * docs/tutorials/Makefile: Now we can build the UNSHAR SHAR HTML
          right from the top-level.  Thanks James!

        * tests/Process_Strategy_Test: Updated the test to use ACE::fork()
          and the new "avoid zombies" feature of ACE_Process_Strategy.

        * ace/ACE: Added a new version of fork() that can avoid creating
          zombies.  Thanks to Garry Brother <gmbroth@romulus.ncsc.mil> for
          this code.

        * ace/Strategies_T: Changed the ACE_Process_Strategy so that
          programmers can designate to not create zombies.  Thanks to
          Garry Brother <gmbroth@romulus.ncsc.mil> for this suggestion.

        * ace/ACE.cpp (daemonize): Only do a chdir if pathname != 0.

        * ace/ACE: Added a "program_name" argument to daemonize() so that
          we can set the program name.

        * docs/tutorials: Reformatted all the header files to conform
          to the ACE programming style.

Sun Jan 31 16:09:55 1999  Jeff Parswons >parsons@cs.wustl.edu>

        * ACE_wrappers/tests/CDR_Test.cpp:
          Plugged a memory leak in a string read from the CDR stream.
          Thanks to Sangwoo Jin <swjinjin@sei.co.kr> for pointing this out.

        * ace/CDR.{h,i,cpp}:
          Changed the name of the "base" class holding the constants to
          'CDR' from 'ACE_CDR'. In leveraging this code in the TAO cdr
          classes, I've discovered that there are many files that
          use these constants, so probably best to keep the original
          name. Also made minor changes to read_string, read_wstring,
          append_string and append_wstring to prevent a memeory leak
          if the operation fails.

Sun Jan 31 11:58:32 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/{010|011|012|013|017}:
          In all of these, I'd overridden open() as open(int) to specify
          the number of threads in a thread-pool.  Steve Huston pointed
          out that this causes grief with some compilers.  I've changed
          all of these open(int) overrides to start(int) instead.

        * docs/tutorials/017/Barrier_i.cpp (threads):
          The thr_equal() call was changed to !thr_equal().

        * docs/tutorials/010/taks.cpp:
          Vishal recommended some extra commentation to make things a bit
          more clear WRT barrier synch.

        * docs/tutorials/013/page01.html:
          Added Kirthika's abstract.

Sat Jan 30 16:03:23 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * websvcs/lib/URL_Addr.h:
        * websvcs/lib/URL_Addr.cpp:
          The HTTP address class can create an URL_Addr from a path
          relative to it.  This is useful when interpreting an address
          inside an HTML document.

Sat Jan 30 13:34:00 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/Connection/non_blocking/test_sock_connector.cpp (main):
          Prevent the program from executing if compiled on non-NT Win32
          platform without Winsock2 installed.  Thanks to Greg Harrison
          <harrisog@erinet.com> for reporting ths problem.

1999-01-29  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Mem_Map.cpp (map_it): NT makes no claims about replacing
          previous mapping at the specified address.  Therefore, I have
          added a new macro ACE_LACKS_AUTO_MMAP_REPLACEMENT which is
          defined if there is no system support for replacing any previous
          mappings. In this case, we unmap() before (potentially) mapping
          to the same location.  ACE_LACKS_AUTO_MMAP_REPLACEMENT is
          defined on NT.

Fri Jan 29 17:40:34 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * websvcs/lib/URL_Addr.h:
        * websvcs/lib/URL_Addr.cpp:
          We were not checking against nil strings in several places, also
          fixed some uninitialized members in the HTTP_Addr constructors.

        * bin/auto_compile:
          Added protection against simultaneous executions of the script;
          it checks for .disable file on the $LOGDIR directory, if present
          it does not execute; if not present it creates one; the file is
          deleted at program termination.

Fri Jan 29 16:25:22 1999  Steve Huston  <shuston@riverace.com>

        * ace/config-hpux-10.x-hpc++.h: Added ACE_HAS_GPERF.
        * apps/gperf/src/List_Node.cpp (ctor): Added ACE_const_cast to
          a char * initializer.
        * apps/gperf/src/Options.cpp: Fixed -j processing (typo).

        * docs/tutorials/017/barrier.cpp: Can't init a long with a thread ID.
          On HP-UX 10.20, it's a struct.
        * docs/tutorials/017/Barrier_i.cpp: Use ACE_OS::thr_equal to check
          equality of thread IDs.

        * docs/tutorials/019/server/cpp: Removed redefinition of char *s from
          'for' loop.  Works around a compiler issue, but isn't needed anyway.

        * include/makeinclude/platform_hpux_aCC.GNU: On HP-UX 10.20, suppress
          (future)error 667 and warning 495 to stop hearing about the problems
          with the system-supplied header files.  The compiler still says
          there was 1 future error, but at least it's easy to scan the output
          for real errors now.

Fri Jan 29 14:49:37 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/ACE.cpp:
        * ace/Basic_Types.h:
        * ace/INET_Addr.cpp:
        * ace/Memory_Pool.cpp:
        * ace/OS.cpp:
        * ace/OS.h:
        * ace/OS.i:
        * ace/SOCK_Dgram_Bcast.cpp:
        * ace/config-cray.h:
        * examples/IPC_SAP/SOCK_SAP/C-inserver.cpp:
        * examples/System_V_IPC/SV_Semaphores/Semaphores_1.cpp:
        * examples/System_V_IPC/SV_Semaphores/Semaphores_2.cpp:
        * include/makeinclude/platform_cray.GNU:
        * tests/Basic_Types_Test.cpp:
        * tests/Handle_Set_Test.cpp:
        * tests/Message_Queue_Test.cpp:
        * tests/SV_Shared_Memory_Test.cpp:
        * tests/run_tests.sh:
          Thanks to Doug Anderson <doug@clark.net> for this port of ACE to
          Cray machines.

Fri Jan 29 13:51:40 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h: Removed definition of ACE_Thread_State.

        * ace/Thread_Manager.*: Changed the ACE_Thread_State as a bunch of
          bit-masks so we don't overwrite the thread states accidentally.
          Thanks to Tom Dobridge <dobridge@persimmon.com> for reporting
          the bug.

1999-01-28  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Hash_Map_Manager_T.cpp (open): this->close_i() must be
          called *before* the allocators are changed.

        * ace/Map_Manager.cpp (open): Close the old map (if any) before
          creating the new map.  This also make open() reentrant. Thanks
          to Zoran Ivanovic <zorani@pathcom.com> for reporting this bug.

Thu Jan 28 19:08:25 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Active_Map_Manager_T.h:
          Steve's change didn't make it, so I changed BASE to
          ACE_AMM_BASE, I don't know about the pragma.

Thu Jan 28 16:43:17 1999  Steve Huston  <shuston@riverace.com>

        * ace/Active_Map_Manager_T.(h i): Renamed BASE to ACE_AMM_BASE - BASE
          conflicted with something in AIX xlC.  Also fixed #pragma
          implementatation to work on xlC.

Thu Jan 28 10:04:39 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Hash_Map_Manager_T.cpp:
          Reverted to version 4.2, thanks to Kirthika for helping find
          this one.

Thu Jan 28 09:11:29 1999  Andreas Tobler <toa@pop.agri.ch>

        * ace/config-linuxppcr5.h: added this config file, for
          LinuxPPC R5 platforms.

Thu Jan 28 08:55:21 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-mklinux.h: replaced ACE_HAS_SOCKLEN_T, removed
          __USE_XOPEN.  Thanks to Andreas Tobler <toa@pop.agri.ch> for
          these clarifying this.

Wed Jan 27 19:12:48 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/008/*:
        * docs/tutorials/009/*:
        * docs/tutorials/011/*:
        * docs/tutorials/012/*:
          Updates from the reviewers.

Wed Jan 27 17:06:38 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Makefile: removed some unprintable characters.

Wed Jan 27 16:31:01 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/Makefile: Added LOCK_SOCK_Acceptor to TEMPLATE_FILES list.

Wed Jan 27 14:50:13 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/Service_Configurator/Misc/main.cpp: Changed to open the
          Service_Config object with ignore_static_svc set to 0.  That
          allows this example to use static service.  (By default, static
          services are not loaded.)  Thanks to Arturo Montes
          <mitosys@colomsat.com.co> for reporting this.

Wed Jan 27 13:47:00 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU: use
          double double quotes around COMPILE argument to ace_ld,
          but only on WIN32 hosts.  Thanks to Peter Weat <weatp@syntron.com>
          for figuring this out.

Wed Jan 27 13:04:55 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE version 4.6.17 released.

Wed Jan 27 12:32:22 1999  David L. Levine  <levine@cs.wustl.edu>

        * ACE-INSTALL.html,include/makeinclude/platform_vxworks5.x_g++.GNU:
          default PERL_PATH to "perl", and added notes to set it to the full
          perl path if perl is not on your path.

Wed Jan 27 10:16:06 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * docs/ACE-guidelines.html:
          Added an entry for the creation of files containing template
          code.

Tue Jan 26 20:44:36 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/SOCK_IO.cpp (send,recv): Changed to use sendv/recvv to
          handle variable arguments send/recv.

        * ACE-INSTALL.html: Fixed the dead link to CE-status.  Thanks to
          Mike Preradovic <michael_preradovic@epicdata.com> for reporting
          this.

Tue Jan 26 14:38:11 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_vxworks5.x_g++.GNU: expanded
          the information on the PERL_PATH environment variable for
          NT hosts.  Thanks to Peter Weat <weatp@syntron.com> for
          reporting this.

Tue Jan 26 13:40:51 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/High_Res_Timer.cpp (elapsed_time_incr): Rearranged the
          formula to avoid compilation errors for platforms without
          ULONGLONG.  Thanks to David for the tip.

Tue Jan 26 12:01:19 1999  Jeff Parsons <parsons@cs.wustl.edu>

        * ACE_wrappers/tests/CDR_Test.dsp:
        * ACE_wrappers/tests/CDR_Test.cpp:
          Added lines to the test code to send the output to
          the log file, and deleted the unnecessary Header
          Files folder in the project.
        * ace/CDR.{i,cpp}:
          Relocated the longdouble comparison operators'
          definitions, and moved a misplaced '}', which
          were causing build errors.

Tue Jan 26 10:55:02 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/Active_Map_Manager.h:
          The _T.h file has to be included *after* the inclusion of the .i
          file, otherwise the template may not see the inline functions;
          the problem only showed up on IRIX.

Mon Jan 25 22:11:36 1999  Jeff Parsons <parsons@cs.wustl.edu>

        * ACE_wrappers/tests/CDR_Test.dsp:
        * ACE_wrappers/tests/tests.dsw:
        * ACE_wrappers/tests/versions_tests/CDR_Test.dsp:
        * ACE_wrappers/tests/versions_tests/version_tests.dsw:
        * ACE_wrappers/tests/run_tests.sh:
        * ACE_wrappers/tests/run_tests.psosim:
        * ACE_wrappers/tests/run_tests.bat:
        * ACE_wrappers/tests/run_tests.vxworks:
          Fixed the project files (they had incorrrect project
          settings, I think) and updated the workspace files.
          Also, on a tip from Nanbor, added CDR_Test to the
          various run_tests files.

Mon Jan 25 20:22:01 1999  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/CDR.{h,i,cpp}:
        * ace/Basic_Types.h:
        * ACE_Wrappers/tests/CDR_Test.cpp:
          Better design of ACE CDR, compiles and runs on NT, g++
          and CC.

Mon Jan 25 09:35:42 1999  Steve Huston  <shuston@riverace.com>

        * ace/ACE.cpp (handle_timed_complete): If connect times out, set
          errno to ETIMEDOUT, not ETIME.  Matches what will happen if a
          simple blocking connect times out.

        * ace/OS.i (ACE_OS::accept, ACE_OS::recv): (only non-Win32), if
          call fails and errno is EAGAIN, change it to EWOULDBLOCK.

        * tests/MT_SOCK_Test.cpp: Remove EAGAIN hacks; above changes fix
          this for all programs.

Sun Jan 24 22:04:42 1999  David L. Levine  <levine@cs.wustl.edu>

        * docs/ACE-guidelines.html: added operator==/!= guideline.

Sun Jan 24 20:25:44 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace: When a class provides operator==, it must also provide
          operator!=.  Also, both these operators should be const.

          Fixed the above violations in:

          ACE_TSS_Ref
          ACE_Thread_ID
          ACE_Registry::Binding
          ACE_Registry::Name_Component
          ACE_Active_Map_Manager_Key

        * ace/Map_Manager: Renamed methods that may become identical if
          INT_ID is the same as size_t.  Thanks to Ossama for helping with
          this.

Sun Jan 24 19:46:55 1999  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/CDR.{h,i,cpp}:
        * ace/Basic_Types.h:
          Made some fixes to make DEC cxx happy, but I'm going to
          undo many of the typedefs and change the design. These
          changes will hopefully lead to a clean build with cxx,
          but the CDR classes are not yet in finished form.

Sun Jan 24 19:26:34 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/SString.cpp (set): Fixed usage case of when the incoming
          string is not zero but the length specified is zero.

        * tests/SString_Test.cpp (main): Added zero sized strings and
          single character strings to the test.

Sun Jan 24 19:09:45 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-win32-common.h
          (ACE_HAS_WORKING_EXPLICIT_TEMPLATE_DESTRUCTOR): VC apparently
          does it right.

Sun Jan 24 17:22:02 1999  Ossama Othman  <othman@cs.wustl.edu>

        * ace/SString.cpp (substring): the variable "length" was misspelled
          on one of the lines in the method.

Sun Jan 24 16:17:58 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/README:
        * ace/OS.h:
        * ace/config-g++-common.h:
        * ace/config-osf1-4.0.h:
        * ace/config-psos-diab.h:
        * ace/config-psos-tm.h: Replace ACE_HAS_BROKEN_EXPLICIT_DESTRUCTOR
          with ACE_HAS_WORKING_EXPLITCIT_TEMPLATE_DESTRUCTOR to reflect
          the true problem.  Thanks to Ossama for suggesting the name.

Sun Jan 24 16:20:17 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/ACE-FMM:
        Added an entry about the DONT_CALL flag to remove_handler().

        * docs/tutorials/00[45789]:
        * docs/tutorials/01[012]:
        Many changes from Yamuna, Pradeep, Kirthika and Ossama.  In all,
        there were 62 files changed.  Mostly the .html's due to
        recombination and colorization.

Sun Jan 24 14:23:07 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SString.cpp: The substring() method did not check for zero
          length.  Thanks to Mike Goldman for this fix.

Sun Jan 24 02:08:57 1999  Carlos O'Ryan  <coryan@cs.wus...tl.edu>

        * websvcs/lib/URL_Addr.cpp:
        * websvcs/lib/URL_Addr.h:
        * websvcs/lib/URL_Addr.i:
        * websvcs/tests/Test_URL_Addr.cpp:
          Added support for mailto: URLs

Sat Jan 23 23:53:29 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * websvcs/Makefile:
        * websvcs/lib/Makefile:
        * websvcs/lib/URL_Addr.h:
        * websvcs/lib/URL_Addr.i:
        * websvcs/lib/URL_Addr.cpp:
        * websvcs/tests/Makefile:
        * websvcs/tests/Test_URL_Addr.cpp:
          Added a small library to keep basic Web related wrappers. The
          first set is a small collection of URL address classes,
          including HTTP and FTP representations.

Sat Jan 23 23:26:17 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/High_Res_Timer.{h,cpp} (elapsed_time_incr): Added a new
          function to access the incremental timer in nanosecond.

Sat Jan 23 23:08:27 1999  Jeff Parsons <parsons@cs.wustl.edu>

        * ace/CDR.{h,i,cpp}:
          Caught numerous inline ordering errors and mistakes in
          long double functions (not defined on NT) with g++.

Sat Jan 23 21:13:47 1999  Jeff Parsons <jp4@cs.wustl.edu>

        * tests/tests.dsw:
        * tests/CDR_Test.dsp:
        * tests/Makefile:
        * tests/CDR_Test.cpp:
          New test in the suite for the new ACE CDR classes (see below).

        * TAO/TAOACE.dsw:
        * TAO/TAOACE_static.dsw:
        * ace/Makefile:
        * ace/CDR.{h,i,cpp}:
        * ace/OS.h:
        * ace/Basic_Types.h:
          CDR stuff modified from TAO library. Typedefs, default
          constants and macros added to OS.h and Basic_Types.h.
          There is now complete CDR functionality in ACE, except
          for the interpreter, and thus also no handling of Any
          or TypeCode types.

Sat Jan 23 17:50:22 1999  Steve Huston  <shuston@riverace.com>

        * tests/MT_SOCK_Test.cpp: 1. Check for EAGAIN as well as EWOULDBLOCK
          after an accept fail (this change will probably be removed at some
          point when we figure out how to handle EAGAIN/EWOULDBLOCK).
          2. Close the ACE_SOCK_Acceptor in the server before going into
          the "reap children" loop so any half-connected clients will get
          closed.

Sat Jan 23 17:25:48 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Hash_Map_Manager_T.{h,cpp}: Reverted changes made since the
          ACE_Hash_Map_Manager_Ex was getting used in shared memory and
          hence could not have "virtual" methods.

Sat Jan 23 04:53:12 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Active_Map_Manager: Added a new associative container (map
          abstraction) that associates system generated keys with user
          specified values. Since the key is system generated, searches
          are very fast and take a constant amount of time.  This map uses
          a key that keeps information of the index and the generation
          count of the slot it represents.  Since the index information is
          part of the key, lookups are super fast and predictable.

          This performance of this map is truely awesome:

          - inserts O(1) worse case
          - lookups O(1) worse case
          - deletes O(1) worse case

        * ace/Map_Manager: Completely reworked the internals of the
          Map_Manager.  A number of problems were addressed:

          (a) Finding an empty slot took O(n).  New code takes O(1).

          (b) Resizing was lame as it increased by ACE_DEFAULT_MAP_SIZE
              everytime.  The new scheme is cool since it grows
              exponentially up to 64K and after that grow in chunks of
              32K.

          (c) Old scheme used a simple but inefficient <is_free_> flag.
              The new scheme uses two doubly linked list to track used and
              free slots. Note that this scheme still uses an array to
              manage the search structure but manages the two linked list
              on top of the array.  Thanks to Carlos for this cool idea.

          (d) current_size() was broken.  This is fixed in the new code.

          (e) Inlined a bunch of small functions.

        * tests/SString_Test.cpp: Added empty string test.

        * ace/Containers_T.h (operator=): ACE_Array_Base must be fully
          qualified: ACE_Array_Base<T>.  Thanks to Susan Liebeskind
          <shl@janis.gtri.gatech.edu> for pointing this out.

        * tests/Map_Manager_Test.cpp (test_map_manager): Added
          Active_Map_Manager to the test.

Fri Jan 22 21:27:14 1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * ace/Hash_Map_Manager_T.h
          (class ACE_Hash_Map_Entry): Modified the destructor to be
          "virtual" so that it gets invoked on the destruction of its
          derived class objects.
          (class ACE_Hash_Map_Manager_Ex): Modified the destructor to be
          "virtual" so that it gets invoked on the destruction of its
          derived class objects.
          Modified shared_find () to be "virtual" so that it can be
          defined in its derived classes.
          Declared a virtual method for creating new entries for the map
          called create_entry ().

        * ace/Hash_Map_Manager_T.cpp
          (create_entry): Added this virtual method which creates a new
          map entry. This is necessary to allow the map to contain various
          types of map entries.
          (bind_i):
          (trybind_i):
          (unbind_i):
          Used create_entry () to obtain a new entry object.

        * ace/Hash_Purgable_Map_Manager_T.{h,i,cpp}:
          The ACE_Hash_Purgable_Map_Manager_Ex derives from
          ACE_Hash_Map_Manager_Ex and provides the feature of purging
          K entries from the map. The default purging algorithm is Least
          Recently Used, which has been implemented using a virtual timer
          that increments whenever an entry is looked up or used. Each
          entry has a purge_tag which is the timestamp updated by the
          timer value whenever it is referenced. The entry is an object of
          ACE_Hash_Purgable_Map_Entry class which is derived from
          ACE_Hash_Map_Entry.
          (purge): This is the method which flushes K entries from the
          map. Locks are held.
          (purge_i): This method also flushes K entries but w.o. locks
          being held.
          (create_entry): Creates an ACE_Hash_Purgable_Map_Entry object.
          (shared_find): This method is used to lookup and verify whether
          an entry is present in the map. Also, the purge_tag of the entry
          is updated with the current timer value.

        * tests/Purgable_Map_Manager.cpp: Added this test which
          illustrates the use of the Hash_Purgable_Map_Manager to maintain
          a cache map. Also displays the change in the map size on
          purging.

Fri Jan 22 16:10:35 1999  Steve Huston  <shuston@riverace.com>

        * ace/Select_Reactor_Base.cpp (ACE_Select_Reactor_Notify::handle_input)
          EAGAIN is also a legit errno value (not only EWOULDBLOCK) for end
          of data on pipe.  Makes count of dispatches returned from
          ACE_Select_Reactor's handle_events correct in the presence of
          notifications.

        * ace/OS.i (ACE_OS::sema_init): Always init s->name_ to 0, else it
          might be non-zero (and junk) when deleted.

        * ace/config-hpux11.h: Added an overrideable ACE_TIMER_SKEW of 10 msec.

Fri Jan 22 15:07:08 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Containers_T.cpp: Yikes, don't delete the fixed stack since
          it wasn't allocated dynamically!  Thanks to Mike Goldman
          <whig@by.net> for this fix!

Fri Jan 22 13:08:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/ACE.{cpp, h}: added static methods ACE::gcd, which computes the
          greatest common divisor of two u_longs using Euclid's algorithm, and
          ACE::minimum_frame size, which computes the minimum enclosing frame
          size for two u_longs.

Thu Jan 21 20:45:09 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/006/client_acceptor.h
        * docs/tutorials/006/client_handler.cpp
        * docs/tutorials/006/client_handler.h
        * docs/tutorials/006/page01.html
        * docs/tutorials/006/page02.html
        * docs/tutorials/006/page03.html
        * docs/tutorials/006/page04.html
        * docs/tutorials/006/page05.html
          Integrated changes from Vishal and Kirthika

        * docs/tutorials/008/combine.shar
        * docs/tutorials/008/page02.html
        * docs/tutorials/008/page03.html
        * docs/tutorials/008/page04.html
        * docs/tutorials/009/combine.shar
        * docs/tutorials/009/directed_client.cpp
        * docs/tutorials/009/page01.html
        * docs/tutorials/009/page02.html
        * docs/tutorials/009/page03.html
        * docs/tutorials/009/page04.html
        * docs/tutorials/009/page05.html
        * docs/tutorials/009/server.cpp
          Changes from Kirthika plus colorization.


Thu Jan 21 16:01:50 1999  James CE Johnson  <jcej@lads.com>

        * docs/tutorials/007/Makefile:
        * docs/tutorials/007/combine.shar:
        * docs/tutorials/007/page01.html:
        * docs/tutorials/007/page02.html:
        * docs/tutorials/007/page03.html:
        * docs/tutorials/007/page04.html:
        * docs/tutorials/007/page05.html:
        * docs/tutorials/007/page06.html:
        * docs/tutorials/007/page07.html:
        * docs/tutorials/007/page08.html:
        * docs/tutorials/007/page09.html:
        * docs/tutorials/007/thread_pool.cpp:
        * docs/tutorials/008/Makefile:
        * docs/tutorials/008/combine.shar:
        * docs/tutorials/008/directed_client.cpp:
        * docs/tutorials/008/page01.html:
        * docs/tutorials/008/page02.html:
        * docs/tutorials/008/page03.html:
        * docs/tutorials/008/page04.html:
        * docs/tutorials/008/page05.html:
        * docs/tutorials/008/server.cpp:
        * docs/tutorials/009/Makefile:
          Included Kirthika's abstract.
          Colorized both tutorials & convereted to new format.

Thu Jan 21 14:25:58 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/SString.h: changed !ACE_HAS_WINCE wrap of ostream
          operators to !ACE_LACKS_IOSTREAM_TOTALLY.

        * ace/OS.i (getuid): added static cast of -1 to uid_t on
          Chorus, to avoid compiler warning about change in sign.

        * ace/OS.h: moved (protected) MAXHOSTNAMELEN #define from
          pSOS and NT-only code to where its visible on all platforms.
          When we removed the #include of rpc.h, we lost the
          #define of MAXHOSTNAMELEN on Chorus.

Thu Jan 21 15:19:26 1999  James CE Johnson  <jcej@lads.com>

        * docs/tutorials/001/Makefile:
        * docs/tutorials/001/page01.html:
        * docs/tutorials/001/page02.html:
        * docs/tutorials/001/page03.html:
        * docs/tutorials/001/page04.html:
        * docs/tutorials/001/page05.html:
        * docs/tutorials/005/client_handler.cpp:
        * docs/tutorials/005/page02.html:
        * docs/tutorials/005/page03.html:
        * docs/tutorials/005/page04.html:
        * docs/tutorials/005/page05.html:
        * docs/tutorials/005/page06.html:
        * docs/tutorials/006/client_handler.cpp:
        * docs/tutorials/006/page01.html:
        * docs/tutorials/006/page02.html:
        * docs/tutorials/006/page03.html:
        * docs/tutorials/006/page04.html:
        * docs/tutorials/006/page05.html:
          Incorporated new comments from Vishal, Yamuna and Pradeep.

Thu Jan 21 13:05:31 1999  Steve Huston  <shuston@riverace.com>

        * docs/tutorials/Makefile:  Removed include .depend to allow the
          whole set of tutorials to be built from the top.  Thanks to James
          Johnson for guiding this fix.

Wed Jan 20 19:47:16 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.{h,i,cpp} (fopen): Reimplement fopen using Win32 APIs so
          ACE_OS::unlink behaves the same as it does on UNIX platforms.
          Both ACE_OS::open and ACE_OS::fopen have been corrected.
          There's also a ACE::open_temp_file which should be the prefered
          method to open temp files when ACE_HANDLE is used.  That's
          because Win32 tries to map the file opened by
          ACE::open_temp_file to memory.

        * ace/Parse_Node.cpp (symbol): <func> need to be initialized.
          Thanks to David for reporting the bug.

Wed Jan 20 17:37:21 1999  Steve Huston  <shuston@riverace.com>

        * ace/Log_Msg.h: Added "do {} while (0)" as defs for ACE_HEX_DUMP,
          ACE_ERROR, ACE_DEBUG when ACE_NLOGGING is defined.  Having null defs
          for these caused MSVC some problems.  Thanks to Doug Schmidt for
          giving (and explaining) the correct definitions.

Wed Jan 20 13:38:03 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.i (readdir_r): added ACE_UNUSED_ARG (entry)
          without ACE_HAS_REENTRANT_FUNCTIONS.

        * docs/ACE-guidelines.html: added guideline for calling
          ACE_OS::unlink () immediately after opening a temporary file.

        * *.h: replaced () around #pragma implementation argument.  Thanks
          to Susan Liebeskind <susan.liebeskind@gtri.gatech.edu> and
          Steve Huston for reporting and confirming that it's necessary
          on AIX.

Wed Jan 20 01:48:21 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Parse_Node.cpp (symbol): Remembered to pass down the
          "gobbler" in a Static_Function_Node.  Thanks to Eric C. Newton
          <ecn@smart.net> for reporting and providing the fix.

Tue Jan 19 17:52:49 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SString.h: Clarified the role of the <release> argument for
          the <set> method.  Thanks to Sudhanshu Garg
          <sg2@ladybug.cec.wustl.edu> for suggesting this.

Tue Jan 19 16:15:26 1999  David L. Levine  <levine@cs.wustl.edu>

        * OS.i,README,config-cygwin32-common.h,config-linux-common.h,
          config-psos-diab.h,config-psos-tm.h,config-psosim-g++.h,
          config-sco-5.0.0-mit-pthread.h,config-sco-5.0.0.h,
          config-tandem.h: removed removed include of rpc/rpc.h, and
          ACE_LACKS_RPC_H.  Thanks to Susan Liebeskind
          <susan.liebeskind@gtri.gatech.edu> for initially suggesting this,
          and to Russ Noseworthy for reporting another problem (on
          SunOS 5.6 w/o threads) with it.  ACE doesn't need it.

        * bin/g++dep: removed /project/doc/pkg/gnu/bin from PATH so that
          I can run make depend on Linux.

Tue Jan 19 12:14:09 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * Makefile (CONTROLLED_FILES): Added ChangeLog-98b to the
          CONTROLLED_FILES macro.  Thanks to Susan Liebeskind
          <susan.liebeskind@gtri.gatech.edu> for suggesting this.

Tue Jan 19 10:24:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * apps/JAWS/PROTOTYPE/HTTPU/HTTPU.{dsp, dsw}: converted to MSVC++ 6.0
          (and backward compatible) format.

        * apps/JAWS/PROTOTYPE/HTTPU/http_headers.{cpp, h}: fixed ACE_RB_Tree
          templates, template instantiations.  Thanks to Sridhar Sabella
          (ssabbella@cemax.com) for pointing this out.

Tue Jan 19 00:42:44 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * examples/Log_Msg/test_callback.cpp (log): Removed the use of
          cerr and used ACE_OS::printf() instead.

        * ace/Log_Record.cpp (print): Fixed comparison between signed and
          unsigned.  Thanks to David Levine for pointing this out.

Mon Jan 18 23:55:03 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * ACE-INSTALL.html: Added more info on Alpha configuration
          problems and fixes.

Mon Jan 18 23:07:38 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.cpp (open): Files opened with CreateFileA (on Win32 of
          course,) are now opened with FILE_SHARE_DELETE flag set.  This
          allows ACE_OS::unlink to work as it should.  However, I haven't
          figured out how to make unlink work with file opened with fopen
          yet.  Apparently, fopen does not open file with
          FILE_SHARE_DELETE.

Mon Jan 18 22:54:18 1999  Darrell Brunsch <brunsch@cs.w...ustl.edu>

        * ace/ace_dll.dsp:
        * ace/ace_lib.dsp:
          Updated NT Alpha configurations.

        * apps/gperf/src/gperf.dsp:
        * apps/gperf/src/gperf_lib.dsp:
          Added NT Alpha configurations.

Mon Jan 18 22:14:00 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/011/message_queue.cpp:
        * docs/tutorials/011/page02.html:
        ACE_Message_Block::copy() will advance the wr_ptr() for us.
        Previously, I was doing that myself in run_test().  The test only
        worked because I never wrote data to the block after that.  If I
        had, things would have broken horribly.

Mon Jan 18 20:41:48 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Message_Block.h: Clarified that the wr_ptr() is incremented
          by n as a result of the copy operation.  Thanks to Zoran
          Ivanovic <zorani@pathcom.com> for suggesting this.

        * ace/INET_Addr.h (ACE_INET_Addr): Changed the default for
          ipaddr_format to 1 (which is what it had been originally) rather
          than 0 since the original way is faster since it doesn't use
          DNS.  Thanks to Zoran Ivanovic <zorani@pathcom.com> for finding
          this.

Mon Jan 18 20:31:47 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/006/client_handler.cpp:
        Typo...

        * docs/tutorials/006/*.html:
        * docs/tutorials/006/combine.shar:
        Colorized, added Kirthika's abstract.

Mon Jan 18 16:19:56 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.cpp (open): If a file is open with _O_TEMPORARY flag set
          on Win32, we also set the FILE_ATTRIBUTE_TEMPORARY so OS will
          try to cache it in memory to speed up access.

        * ace/ACE.cpp (open_temp_file): On Win32, temporary file should be
          opened with _O_TEMPORARY flag set, not FILE_DELETE_ON_CLOSE.

        * include/makeinclude/wrapper_macros.GNU: My previous fix of
          avoiding multiple definition of ACE_NDEBUG was not correct.  Now
          the macro check where should the definition go to.  Thanks to
          David for showing me the right way to do this.

Mon Jan 18 11:23:06 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * include/makeinclude/platform_irix6.x-sgic++.GNU:
          Added the -multigot flag when building shared libraries,
          otherwise TAO/orbsvcs is too big.

Mon Jan 18 09:54:54 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.5.h: moved ACE_HAS_PRIOCNTL #define so
          that it's defined even without threads.  Thanks to
          Russ Noseworthy for reporting this.

        * ace/OS.cpp (lwp_getparams): removed ACE_MT_SAFE check
          that Doug added Saturday.  It's not necessary with the
          above fix to config-sunos5.5.h.

        * examples/Log_Msg/test_ostream.cpp: don't try to create the
          ofstream if ACE_LACKS_IOSTREAM_TOTALLY.  Also, removed
          declarations of unused argc/argv arguments because some
          g++ versions complain about them.

Mon Jan 18 08:17:49 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SOCK_IO.cpp,
          ace/SOCK_Dgram.cpp: Added

          ACE_UNUSED_ARG (timeout);

          to the #else part of the recv (iovec *) methods.  Thanks to Mike
          Goldman for reporting this.

Mon Jan 18 01:13:57 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CORBA_macros.h: ACE_TRY_NEW_ENV also needs to define a new
          CORBA::Environment even with native exceptions.  Mark exception
          caught by ACE_CATCH as unused arg to avoid compilation warnings.

Mon Jan 18 00:12:13 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.16 released.

Sun Jan 17 16:40:22 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Reactor_Exceptions_Test.cpp (main): Changed the LM_INFO
          message to indicate that C++ exception support isn't ENABLED on
          a platform, rather than saying that it's not supported at all...

Sun Jan 17 15:16:35 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/SString.cpp (operator<<): The operator<< used to print out
          ACE_WString caused an infinite loop on platform without UNICODE
          defined because we didn't convert the wide string on these
          platform.  However, since an ACE_WString always contains a wide
          string, the conversion from wide string to char string should
          always be done here.  Thanks to Scott Snyder
          <snyder@d0sgif.fnal.gov> for noticing this bug.

          (operator<<): Changed the ACE_SString and ACE_CString version to
          check against the case when the internal <rep_> contains 0.
          The ACE_CString version was printing out the string one char a
          time.  Can't see any reason why this is done like this.  Changed
          to print out the underlying <rep_> directly.

Sun Jan 17 14:42:39 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/001/*:
        * docs/tutorials/002/*:
        * docs/tutorials/003/*:
        * docs/tutorials/004/*:
        * docs/tutorials/005/*:
        Converted to the new (colorized) format used by T13 and beyond.
        I will convert the remaining tutorials (6-12) as each is reviewed.

        * docs/tutorials/005/fix.Makefile:
        * docs/tutorials/006/fix.Makefile:
        * docs/tutorials/007/fix.Makefile: Replaced by ../fix.Makefile.

        * docs/tutorials/010/Makefile:
        * docs/tutorials/011/Makefile:
        * docs/tutorials/012/Makefile:
        * docs/tutorials/013/Makefile:
        * docs/tutorials/014/Makefile:
        * docs/tutorials/016/Makefile:
        * docs/tutorials/017/Makefile:
        These all referenced ../007/fix.Makefile.  They now reference
        ../fix.Makefile instead.

Sun Jan 17 13:50:16 1999  James CE Johnson  <jcej@chiroptera.tragus.org>

        * docs/tutorials/002/handler.h:
        * docs/tutorials/002/handler.h:
        * docs/tutorials/002/page03.html:
        * docs/tutorials/003/client.cpp:
        * docs/tutorials/003/page01.html:
        * docs/tutorials/004/page01.html:
        * docs/tutorials/005/client_handler.h:
        * docs/tutorials/005/page02.html:
        * docs/tutorials/005/page04.html:
        * docs/tutorials/005/page05.html:
        * docs/tutorials/005/server.cpp:

          More improvements from Doug's class (and Ossama).  Each "page2"
          includes an abstract by Kirthika.

          Reviewers to date:
          Yamuna Krishnamurthy <yamuna@cs.wustl.edu>
          Kirthika Parameswaran <kirthika@cs.wustl.edu>
          Balachandran Natarajan <bala@cs.wustl.edu>
          Pradeep Gore <pradeep@cs.wustl.edu>
          Ossama Othman <othman@cs.wustl.edu>

Sat Jan 16 19:08:12 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/High_Res_Timer.cpp: Added #ifdef so high-res timers work
          correctly on KCC.  Thanks to Scott Snyder
          <snyder@d0sgif.fnal.gov> for contributing this.

        * tests/test_config.h: Updated randomize() so that it uses a
          "fixed" seed, so that it will produce "reusable" random numbers.

        * include/makeinclude/platform_linux_kcc.GNU (LD): Added the -lm
          flag.  Thanks to Scott Snyder <snyder@d0sgif.fnal.gov> for
          contributing this.

        * tests/run_tests.sh: Added an
          LD_LIBRARY_PATH=../netsvcs/lib:$LD_LIBRARY_PATH so that we can
          use a relative name for the svc.conf files used in the
          Time_Service_Test and Tokens_Test.

        * ace/config-irix6.x-common.h: Added support for long double for
          KCC.  Thanks to Scott Snyder <snyder@d0sgif.fnal.gov> for
          contributing this.

        * ace/config-irix6.x-kcc.h: Added KCC support.  Thanks to Scott
          Snyder <snyder@d0sgif.fnal.gov> for contributing this.

        * ace/config-osf1-4.0.h: Added KCC support.  Thanks to Scott
          Snyder <snyder@d0sgif.fnal.gov> for contributing this.

        * ace/IOStream.h: Fixed up the PUT_CODE and GET_CODE macros so
          that they work with KCC.  Thanks to Scott Snyder
          <snyder@d0sgif.fnal.gov> for contributing this.

        * ace/Env_Value_T.h (ACE_Convert): Added a new ACE_Convert
          constructor for u_int so that TAO compiles correctly with KCC.
          Thanks to Scott Snyder <snyder@d0sgif.fnal.gov> for contributing
          this.

        * include/makeinclude/platform_osf1_4.0_kcc.GNU: Added a new
          platform config file for KCC.  Thanks to Scott Snyder
          <snyder@d0sgif.fnal.gov> for contributing this.

Sat Jan 16 18:13:29 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * include/makeinclude/wrapper_macros.GNU: Commented out adding
          ACE_NDEBUG to CCFLAGS to avoid defining it twice.  Most (if not
          all) platforms include CFLAGS into CCFLAGS.  So, if "make
          debug=0" no longer work on your platform, then, you may need to
          add "CCFLAGS += $(CFLAGS)" into your platform_xxx.GNU.

Sat Jan 16 13:40:40 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/Proactor.cpp (schedule_timer): Had to add an
          ACE_SYNCH_RECURSIVE_THREAD_MUTEX in place of
          ACE_Recursive_Thread_Mutex to avoid problems when threads=0.

        * ace/OS.cpp (lwp_getparams): For some reason we had to
          add

          # if defined (ACE_HAS_STHREADS) || (defined (sun) && (ACE_MT_SAFE != 0))

          instead of

          # if defined (ACE_HAS_STHREADS) || defined (sun)

          to avoid problems when threads=0.

        * ace/Asynch_IO.cpp: Replaced some ACE_Thread_Mutex decls with
          ACE_SYNCH_MUTEX to avoid problems with threads=0.

        * ace/config-sunos5.6.h: If defined(_POSIX_C_SOURCE) &&
          _POSIX_C_SOURCE >= 199506L) || defined (__EXTENSIONS__) then
          #define ACE_HAS_SIGWAIT to avoid compilation errors.  Thanks to
          Russ Noseworthy for reporting this.

        * ace/OS.i: Fixed the ACE_OS::readdir_r() so that it doesn't fail
          if threads are disabled via "make threads=0".  Thanks to Russ
          Noseworthy for reporting this.

        * ace/FILE_Connector.h (ACE_FILE_Connector): Added the O_CREAT
          flag to the list of flags passed to connect().  This ensures
          that the file is created if it doesn't already exist.  Thanks to
          Pradeep Gore <pradeep@cs.wustl.edu> for reporting this.

Fri Jan 15 21:28:04 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Log_Msg (ACE_Log_Msg_Callback): Added an interface class
          used for getting logging callbacks.  Users who are interested in
          getting the logging messages directly, can subclass this
          interface and override the log() method. They must then register
          their subclass with the Log_Msg class and make sure that they
          turn on the ACE_Log_Msg::MSG_CALLBACK flag.

          Your log() routine is called with an instance of
          ACE_Log_Record.  From this class, you can get the log
          message, the verbose log message, message type, message
          priority, and so on.

          Remember that there is one Log_Msg object per thread.
          Therefore, you may need to register your callback object with
          many Log_Msg objects (and have the correct synchronization in
          the log() method) or have a separate callback object per
          Log_Msg object.

          Thanks to Chris Lahey <clahey@ix.netcom.com> for suggesting this
          and send patches.

        * examples/Log_Msg/test_callback.cpp: Added new example for
          Log_Msg. This program tests the Log_Msg abstraction wrt writing
          to user defined callback objects.

Fri Jan 15 21:10:25 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CORBA_macros.h: Made sure ACE_CORBA_HAS_EXCEPTIONS always
          gets set properly.  Added ACE_ADPOT_CORBA_ENV to reuse a
          existing CORBA::Environment variable.

Fri Jan 15 17:05:12 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Log_Record: Factored out the redundant formatting code.  The
          new scheme also allows the end user to get to verbose formatted
          string.  Thanks to Nanbor for helping out with this.

Fri Jan 15 17:15:18 EST 1999   James CE Johnson  <jcej@lads.com>

        * docs/tutorials/templates.html
          docs/tutorials/001/acceptor.h
          docs/tutorials/001/logger.h
          docs/tutorials/001/page01.html
          docs/tutorials/001/page02.html
          docs/tutorials/001/page03.html
          docs/tutorials/001/page04.html
          docs/tutorials/001/page05.html
          docs/tutorials/001/server.cpp
          docs/tutorials/003/page01.html

          Many changes from Ossama plus a new abstract (for T3) from
          Kirthika.

Fri Jan 15 14:40:26 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SOCK_IO,
          ace/SOCK_Dgram: Modified the recv(iovec *) and recvv(iovec *)
          methods so that they use select() to avoid spinning if no data
          is available.  Thanks to Mike Goldman <whig@by.net> for this
          fix.

Fri Jan 15 10:47:26 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Service_Repository.cpp: If a service being removed from the
          Service_Repository used the Service_Repository while being
          removed it could access objects that had already been deleted.
          Fix this by decrementing the current_size_ member in
          "real-time".  Thanks to Eric Newton for reporting this.

Fri Jan 15 08:08:31 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.15 released.

Fri Jan 15 07:20:46 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * ace/OS.i: Fixed variable names in isatty () on NT

Fri Jan 15 03:45:46 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/exceptions.html: Rewrote the exception handling guildlines
          based on ACE's try macros.

Fri Jan 15 01:32:55 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.14 released.

Fri Jan 15 00:03:32 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * examples/Log_Msg/test_ostream.cpp: Added new example for
          Log_Msg. This program tests the Log_Msg abstraction wrt writing
          to stderr and to a file.

Thu Jan 14 21:50:22 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/CORBA_macros.h: Added a new set of try macros which help
          application developers write portable code that handles
          CORBA::Exception portably.  The macros will work with any ORB.

          The total number of macros has reduces significantly and they
          should be much easier to use because the rules all follow the
          same style.

          The new try macros should be prefered over the original try
          macro in $TAO_ROOT/TAO/try_macros.h because those macros will
          soon be *DEPRICATED* once we finished convert TAO to use the new
          macros.

          Please see ACE_wrappers/docs/exceptions.html for guidelines and
          rules of using ACE's try macros.

Thu Jan 14 20:41:33 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/OS: Moved some code around to consolidate the getuid() and
          isatty() functions.

        * ace/OS: Added support for the setuid() call.  Thanks to Susan
          Liebeskind <susan.liebeskind@gtri.gatech.edu> for suggesting
          this.

Thu Jan 14 16:18:37 EST 1999  James CE Johnson  <jcej@lads.com>

        * docs/tutorials/001/page02.html:
          docs/tutorials/001/page03.html:

          Included Kirthika Parameswaran's <Kirthika@cs.wustl.edu>
          abstract and analogy.  Thanks Kirthika!

        * docs/tutorials/001/Source.tgz:
          docs/tutorials/001/acceptor.h:
          docs/tutorials/001/logger.h:
          docs/tutorials/001/server.cpp:
          docs/tutorials/001/page[345].html:
        * docs/tutorials/002/page0[23].html:
          docs/tutorials/002/handler.h:

          Added improvements from Kirthika, Pradeep and Yamuna

Thu Jan 14 11:46:25 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Synch_T.h: Pointed out that we can only parameterize
          ACE_Condition<> with ACE_Thread_Mutex and ACE_...Null_Mutex.
          Thanks to Knut-Havard Aksnes <knut@orion.no> for reporting
          this.

Thu Jan 14 02:33:37 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.13 released.

Thu Jan 14 00:07:34 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * docs/tutorials/014/stream.cpp: Added #include "ace/streams.h".

Wed Jan 13 23:18:03 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h:
        * config-g++-common.h:
        * config-osf1-4.0.h:
        * config-psos-diab.h:
        * config-psos-tm.h: Revert my previous change.  Removed the
          ChangeLog entry about the change.

Wed Jan 13 22:30:49 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_chorus_ghs.GNU: removed
          explicit link with libedgnoe.a, because GreenHills adds
          that implicitly.

        * ace/OS.h: added quick hack to ACE_HAS_BROKEN_EXPLICIT_DESTRUCTOR
          logic to allow compilation with g++.

Wed Jan 13 18:48:30 EST 1999  James CE Johnson  <jcej@lads.com>

        * docs/tutorials/004/client.cpp:
          docs/tutorials/010/message_queue.cp:
          docs/tutorials/011/message_queue.cpp:
          docs/tutorials/012/message_queue.cpp:
          docs/tutorials/013/message_queue.cpp:
          docs/tutorials/014/EndTask.h:
          docs/tutorials/019/client.cpp:
          docs/tutorials/019/client2.cpp:
          docs/tutorials/019/server.cpp:
          docs/tutorials/019/server2.cpp:
          docs/tutorials/019/shmem.cpp:
          docs/tutorials/020/client.cpp:
          docs/tutorials/020/server.cpp:
          docs/tutorials/021/client.cpp:
          docs/tutorials/021/mpool.cpp:
          docs/tutorials/021/mpool.h:
          docs/tutorials/021/server.cpp:
          Fixed many NT issues found by Irfan.  Most are related to the
          fact that NT doesn't have SysV shared memory.

Wed Jan 13 04:45:59 1999  James C Hu  <jxh@cs.wustl.edu>

        * ace/Cache_Object.{h,cpp}:
        * ace/Cache_Manager.{h,cpp}:
        * ace/Cache_Manager_T.{h,cpp}:
        * ace/Cache_Hash_T.{h,cpp}:
        * ace/Cache_Heap_T.{h,cpp}:
        * ace/Hash_Bucket_T.{h,cpp}:
          Supporting infrastructure for the new Filecache.  These classes
          form the basis of a generic in memory cache engine.

Wed Jan 13 02:17:57 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/OS.cpp (writev): This function should use ACE::write_n
          instead of ACE::send_n.  Similarly, readv() should use
          ACE::read_n instead of ACE::recv_n.

        * ace/ACE.cpp (send): This function should use ACE_OS::sendv
          instead of ACE_OS::writev.  Similarly, recv() should use
          ACE_OS::recvv instead of ACE_OS::readv.

        * docs/tutorials:  Fixed all the NT project files.

Tue Jan 12 22:41:05 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-freebsd.h: Uncommented ACE_HAS_SIGWAIT.  This is
          required for FreeBSD 2.2.8. Thanks to John Aughey
          <jha@FreeBSD.ORG> for reporting this.

        * ace/SOCK_IO.{h,i}:
        * ace/SOCK_Stream.{h,i} (sendv_n/recvv_n): Moved these functions
          from SOCK_IO to SOCK_Stream where it makes more sense to have
          the semantic of sending/receiving <n> bytes.

Tue Jan 12 19:52:26 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ACE-INSTALL.html: Added more info on dynamically linking
          run-time libraries.

        * ace/SOCK_IO.{h,i,cpp} (sendv,recvv,sendv_n,recvv_n): Renamed
          vector send_n/recv_n.  There were name clashing since these
          methods have similar signatures to some send_n/recv_n in
          ACE_SOCK_Stream, they got hidden by the derived methods.
          Renaming them solve the problem.

Tue Jan 12 10:59:58 1999  David L. Levine  <levine@cs.wustl.edu>

        * include/makeinclude/platform_chorus_ghs.GNU: fixed location of
          libedgenoe.a, so that a symlink in $(GHS_DIR) is no longer necessary.
          Thanks to Steve Kay for reporting this.

        * ace/config-mklinux.h: removed ACE_HAS_SOCKLEN_T, added __USE_XOPEN.
          Thanks to Andreas Tobler <toa@pop.agri.ch> for these updates.

Tue Jan 12 08:44:11 EST 1999  Aniruddha Gokhale  <gokhale@sahyadri.research.bell-labs.com>

        * ace/Acceptor.cpp (handle_close):

          Since the reactor_ data member is made private, we need to use
          its accessor method to retrieve it.

Tue Jan 12 02:12:38 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h (ACE_DES_NO_FREE,ACE_DES_FREE): These two macros
          shouldn't be treated differently no matter
          ACE_HAS_BROKEN_EXPLICIT_DESTRUCTOR is defined or not.
          Otherwise, virtual destructor won't work in one of the original
          definitions.

          There shouldn't be different different definitions for calling
          template destructor explicitly either.  However, we need to find
          that out.  The meaning of ACE_HAS_BROKEN_EXPLICIT_DESTRUCTOR
          seems to be reversed.  That needs to be fixed also.

Tue Jan 12 00:18:15 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Event_Handler.h: Moved the priority_ and reactor_ data
          members into the private section of the class since these can
          always be accessed via their accessor methods.  Thanks to Mike
          Goldman <whig@by.net> for reporting this.

Mon Jan 11 15:30:26 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Process.{h,i} (get_process_attributes,get_thread_attributes):
          Removed the constness from the return value to avoid Intel C++
          warnings.  Thanks to Karel Zuiderveld
          <kzuiderveld@vitalimages.com> for reporting this.

        * bin/ADDIDL.DSM: A VB script to add new IDL files into DevStudio
          projects.   Thanks to Peter <weatp@syntron.com> for contributing
          this nice tool.

Mon Jan 11 12:54:26 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * ace/SOCK_IO: Added const qualifiers to all the send*() and
          recv*() methods that take ACE_Time_Value values.  Thanks to Jody
          Hagins <jody@atdesk.com> for reporting this.

        * ace/SOCK_IO: Added a new send_n() method that uses the new
          ACE::sendv_n() method!

        * ace/ACE: Added a new sendv_n() and writev_n() method that sends
          all the bytes in the iovec!

        * ace/ACE.h (ACE): Added default values of 0 for ACE::writev() and
          ACE::readv().

        * examples/NT_Service: Tidied up the formatting to conform to the
          ACE programming guidelines.

Mon Jan 11 10:23:06 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/config-freebsd-pthread.h: Added ACE_LACKS_READDIR_R.
        * ace/config-freebsd.h: Added ACE_LACKS_READDIR_R,
          ACE_HAS_NONCONST_MSGSND, ACE_LACKS_MALLOC_H.  ACE_HAS_SIGINFO_T
          only applies to 3.0 and above.  Thanks to Ivan Pascal
          <pascal@info.tsu.ru> for reporting the change.

Sun Jan 10 21:52:57 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/Message_Queue_Notifications_Test.cpp (iterator_test):
          added comment explaining why a message queue size of 32 Kb
          is used, instead of the default of 16 Kb.

        * docs/ACE-guidelines.html: added guidelines for boolean types
          and function return values.

Sun Jan 10 17:33:29 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * tests/Message_Queue_Notifications_Test.cpp: Replaced delete mb
          with mb->release().  Thanks to Susan Liebeskind
          <susan.liebeskind@gtri.gatech.edu> for reporting this
          inconsistency.

        * ace/Task_T.h,
          ace/Message_Queue_T.h: Clarified the fact that the
          ACE_Time_Value arguments to the Message_Queue methods
          use absolute, rather than relative, time.  Thanks to
          Stanford S. Guillory <sguillory@vignette.com> for pointing out
          the need for this clarification.

Sun Jan 10 09:18:41 1999  Martin Krumpolec <krumpo@pobox.sk>

        * ace/Log_Msg.cpp (log): only re-enable tracing if it had
          not been explicitly disabled.

Sun Jan 10 01:06:18 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Log_Msg.cpp (log): Change call from exit() to abort().

        * ace/OS.i (abort): Added new function.

Sat Jan  9 22:05:07 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * bin/tao_env.pl: A new perl script that help you translate _env
          to TAO_IN_ENV.

Sat Jan 09 10:53:37 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Name_Proxy.cpp (open): swapped branches of conditional
          so that options.time_value () is used if USE_TIMEOUT is enabled.
          Thanks to Mike Goldman <whig@by.net> for reporting this.

Fri Jan 08 19:19:17 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/OS.h: Applied ACE_TEXT to the definition of
          ACE_DEFAULT_TEMP_FILE on Win32.  Thanks to
          <gwross@west.raytheon.com> for reporting this.

Fri Jan 08 13:24:12 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/Synch.h (ACE_Process_Mutex): made data members
          private instead of public.  Thanks to Peter Gross
          <pgross@signalsoftcorp.com> for reporting this.

        * examples/Threads/reader_writer.cpp: removed volatile
          qualifier from declaration of "shared_thr_id", so that
          the file will compile on DU 4.0 with DCE threads.  The
          volatile qualifier caused a type mismatch with
          ACE_thread_t.  And, it's not necessary, because all
          access of the shared_thr_id is guarded.

        * include/makeinclude/platform_chorus_ghs.GNU: added gnuch68
          to -alttools, and removed bin from AR; use libedgnoe.a instead
          of libedg.a with GHS 1.8.9.1.

        * ace/config-sunos5.5.h: don't define ACE_HAS_XPG4_MULTIBYTE_CHAR
          with ghs, because its version 1.8.9 doesn't seem to support it.
          Also, with ghs, replaced the __ctype [] declaration with an
          #include of <stdlib.h>, because that's cleaner.  Finally,
          added ACE_HAS_BROKEN_ENUMS for ghs (1.8.9).

Thu Jan 07 09:05:27 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.5.h: added ACE_HAS_SIG_C_FUNC with
          Sun CC >= 4.2.  Sun CC 5.0 needs it; Sun CC 4.2 doesn't
          object to it on SunOS 5.5.1, 5.6, and 5.7.  Thanks to
          Neil Cohen <nbc@aikisoft.com> for figuring out how to
          compile ACE with Sun CC 5.0.

        * include/makeinclude/platform_sunos5_sunc++.GNU: only
          use -features=castop and -rtti with Sun CC 4.2.  CC 5.0
          doesn't support them; I assume that it enables RTTI by
          default.  Thanks to Neil Cohen <nbc@aikisoft.com> for
          reporting this.

        * ACE-INSTALL.html: added ACE_HAS_REGEX #undef suggestion for
          shared lib link problems with egcs 1.1.x on Solaris 2.5.x.
          Thanks to Bob McWhirter <bob@werken.com> for reporting this
          problem.

Thu Jan 07 04:45:36 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * ACE version 4.6.12 released.

Thu Jan 07 04:01:08 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Containers_T.cpp (max_size): No need to reallocate if the
          new size is the same.  Thanks to Mike Goldman <whig@by.net> for
          pointing this out.

        * ace/Strategies_T.cpp (check_hint_i and cleanup_hint_i):
          purge_i() should be called after the entry is closed.

        * Select_Reactor_Base.cpp (unbind): The next <max_handlep1_>
          should be calculated not only based on the <wait_set> but also
          the <suspend_set>.

          Thanks to Mark L. Boriack <mboriack@std.saic.com> for providing
          a description of this bug.

Wed Jan 06 21:42:11 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/OS.cpp (thr_create): moved #endif /* ACE_LACKS_SETDETACH */
          outside of }, to allow compilation on DU 4.0/cxx with DCE threads.

        * ace/config-osf1-4.0.h: with DCE threads only, added
          ACE_LACKS_THREAD_PROCESS_SCOPING.

Wed Jan 06 16:36:21 1999  David L. Levine  <schmidt@cs.wustl.edu>

        * ACE version 4.6.11 released.

Wed Jan 06 15:15:37 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Config.cpp (process_directive,close): Moved the
          deletion of <svc_conf_file_queue_> into close method.
          Otherwise, there's no way to reconfigure the service
          configuration once it get started.  Thanks to Mike Goldman
          <whig@by.net> for reporting the problem.

Wed Jan  6 14:27:24 EST 1999  James CE Johnson  <jcej@lads.com

        * docs/tutorials/021/*:
        Completed the ACE_Malloc<> tutorial.  It could be a lot better
        than it is but I'm still new to ACE_Malloc...

        * docs/tutorials/021/online-tutorials.html:
        Added the link for #21

Tue Jan 05 22:55:07 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * ace/Strategies_T.cpp (cleanup_hint_i and check_hint_i): Since we
          are holding the connection cache lock in these methods, the
          Svc_Handler should not call purge().  If it does, a deadlock
          will occur (unless we have recursive locks) since we are already
          holding the connection cache lock.  Therefore, we zero out the
          recycler before calling svc_handler->close() and purge out the
          svc_handler entry ourself (through purge_i()).

          Thanks to Mark L. Boriack <mboriack@std.saic.com> for providing
          a precise example illustrating this bug.

Tue Jan  5 18:48:47  James CE Johnson  <jcej@lads.com>

        * docs/tutorials/templates.html: Fixed a number of problems here.
          Thanks to Amos Shapira <Amos_Shapira@icomverse.com> for pointing
          them out.

        * docs/tutorials/colorize: I pulled out the colorization code from
          combine into this standalone script.  One of these days I'll fix
          combine so that the code isn't duplicated...

Tue Jan  5 16:14:00 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * ace/config-irix6.x-common.h:
          Added ACE_TIMER_SKEW definition.

        * ace/FILE.cpp:
          Fixed the seek() prototype, is was declared as taking a "off_t"
          argument, but is was defined with a "long" argument,
          unfortunately in most platforms this was not a problem.

Tue Jan 05 13:15:35 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Config.i (open): Be sure to pass down the
          <ignore_static_svcs> argument down to the real open method.

Tue Jan 05 08:08:06 1999  David L. Levine  <levine@cs.wustl.edu>

        * tests/MM_Shared_Memory_Test.cpp (spawn): fixed syntax error
          by moving ) to end of ACE_ERROR invocation.

        * ace/config-osf1-4.0.h: added 10 ms ACE_TIMER_SKEW, so that
          MT_Reactor_Timer_Test passes.

        * ace/config-lynxos.h: added 10 ms ACE_TIMER_SKEW, so that
          MT_Reactor_Timer_Test comes closer to passing.  It now
          chokes on the wait () near the end.

        * ace/OS.i (thr_getspecific): moved return 0 statement inside
          the Draft 7/STD #else block, to avoid warning about unreachable
          statement with Draft 4/6.

        * ace/config-osf1-4.0.h: with Draft 4 pthreads, added
          ACE_LACKS_READDIR_R.

        * tests/MT_Reactor_Timer_Test.cpp (main): added printout if
          wait () fails.

Tue Jan  5 00:59:04 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Synch: Changed the remove() method of ACE_Thread_Mutex,
          ACE_Mutex, ACE_Semaphore, ACE_RW_Mutex, ACE_Event,
          ACE_Thread_Condition_Mutex, ACE_File_Lock, and
          ACE_Recursive_Thread_Mutex so that they check a flag to see if
          remove() has already been called.  If it has, then the remove()
          call does nothing.  This avoids nasty problems on platforms like
          Win95 that fail mysteriously if locks are destroyed multiple
          times.  Note that our solution isn't perfect since it won't
          protect against race conditions if multiple threads call
          remove() simultaneously.  However, if this happens it's a sign
          that the application was designed incorrectly...  Thanks to Paul
          Felix <pef@fluent.com> and Irfan for tracking this down....

        * ace/FILE: Added new methods, seek() and tell(), that are more
          intuitively named than the existing position() methods.  The
          position() methods have been retained for backwards
          compatiblity, but are now marked as deprecated.

        * ace/OS.h: Added a macro for ACE_DEFAULT_HTTP_PORT, which
          is 80 of course...

        * ace/INET_Addr.cpp: Make sure that addr_to_string() correctly
          checks the length of its buffer before doing a sprintf().  In
          addition, added an option to print the results in either ip-addr
          format or ip-name format.

        * ace/Mem_Map.cpp (map): where ace/Mem_Map.cpp mmap() will succeed
          if the length of the file mapping is 0, which will be the case
          if we've just created the file.  This was the wrong place to
          make this check.

        * tests/MM_Shared_Memory_Test.cpp: Cleaned up a few things
          in this test so that it'll be easier to maintain.

Mon Jan 04 08:45:45 1999  David L. Levine  <levine@cs.wustl.edu>

        * ace/config-sunos5.7.h: only use the g++ hacks if the
          g++ version is prior to 2.8.  Assume that later versions
          were built on SunOS 5.7 host, and/or don't have header
          files that are incompatible with the system headers.

        * bin/create_ace_build: changed symlink creation failure from
          error (with termination) to warning create_ace_build.

Mon Jan  4 03:15:57 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/Mem_Map: If we're remapping an already-mapped file
          (i.e., the base_addr_ != 0) && the addr parameter IS 0 (i.e.,
          the user isn't trying to respecify where to map this file), then
          we'll try to map over top of the existing region, which implies
          "MAP_FIXED".

Sun Jan 03 23:21:46 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * ace/Service_Config.cpp (initialize): Both initialize methods now
          remove the service object from the repository if its init()
          method failed.

Sun Jan  3 14:39:49 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * ace/ACE: Added a simple dirname() wrapper method.

        * ace/SString: The set(const char *, size_t, int = 1) and
          set(const c
