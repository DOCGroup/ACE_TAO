// -*- MPC -*-
// $Id$

project(Deployment_IDL) : ciaolib_with_idl, dance_output, valuetype, gen_ostream, ami, amh {
  custom_only = 1
  idlflags     += -Wb,stub_export_macro=DEPLOYMENT_STUB_Export \
                  -Wb,stub_export_include=Deployment_stub_export.h \
                  -Wb,skel_export_macro=DEPLOYMENT_SKEL_Export \
                  -Wb,skel_export_include=Deployment_skel_export.h
  after += DAnCE_Properties_IDL

  IDL_Files {
    idlflags += -SS -Sci
    Deployment_Packaging_Data.idl
    Deployment_PlanError.idl
    Deployment_Connection.idl
    Deployment_StopError.idl
    Deployment_StartError.idl
    Deployment_DeploymentPlan.idl
    Deployment_Data.idl
    Deployment_TargetData.idl
    Deployment.idl
  }

  IDL_Files {
    idlflags += -SS
    Deployment_Base.idl
  }

  IDL_Files {
    idlflags += -Gxhst -Gxhsk
    Deployment_Application.idl
  }

  IDL_Files {
    idlflags += -Ssi
    Deployment_ResourceCommitmentManager.idl
  }
}

project(Deployment_ApplicationManager_IDL) : ciaolib_with_idl, dance_output, valuetype, gen_ostream, ami, amh {
  custom_only = 1
  idlflags     += -Wb,stub_export_macro=DEPLOYMENT_APPLICATIONMANAGER_STUB_Export \
                  -Wb,stub_export_include=Deployment_ApplicationManager_stub_export.h \
                  -Wb,skel_export_macro=DEPLOYMENT_APPLICATIONMANAGER_SKEL_Export \
                  -Wb,skel_export_include=Deployment_ApplicationManager_skel_export.h \
                  -Gxhst -Gxhsk

  idlflags += -GC
  IDL_Files {
    Deployment_ApplicationManager.idl
  }
}

project(Deployment_TargetManager_IDL) : ciaolib_with_idl, dance_output, valuetype, gen_ostream {
  custom_only = 1
  idlflags     += -Wb,stub_export_macro=DEPLOYMENT_TARGETMANAGER_STUB_Export \
                  -Wb,stub_export_include=Deployment_TargetManager_stub_export.h \
                  -Wb,skel_export_macro=DEPLOYMENT_TARGETMANAGER_SKEL_Export \
                  -Wb,skel_export_include=Deployment_TargetManager_skel_export.h \
                  -Gxhst -Gxhsk -Ssi

  IDL_Files {
    Deployment_TargetManager.idl
  }
}

project(Deployment_RepositoryManager_IDL) : ciaolib_with_idl, dance_output, valuetype, gen_ostream {
  custom_only = 1
  idlflags     += -Wb,stub_export_macro=DEPLOYMENT_REPOSITORYMANAGER_STUB_Export \
                  -Wb,stub_export_include=Deployment_RepositoryManager_stub_export.h \
                  -Wb,skel_export_macro=DEPLOYMENT_REPOSITORYMANAGER_SKEL_Export \
                  -Wb,skel_export_include=Deployment_RepositoryManager_skel_export.h \
                  -Gxhst -Gxhsk

  IDL_Files {
    Deployment_RepositoryManager.idl
  }
}

project(Deployment_ExecutionManager_IDL) : ciaolib_with_idl, dance_output, valuetype, gen_ostream, amh {
  custom_only = 1
  idlflags     += -Wb,stub_export_macro=DEPLOYMENT_EXECUTIONMANAGER_STUB_Export \
                  -Wb,stub_export_include=Deployment_ExecutionManager_stub_export.h \
                  -Wb,skel_export_macro=DEPLOYMENT_EXECUTIONMANAGER_SKEL_Export \
                  -Wb,skel_export_include=Deployment_ExecutionManager_skel_export.h \
                  -Gxhst -Gxhsk

  IDL_Files {
    Deployment_ExecutionManager.idl
  }
}

project(Deployment_DAM_IDL) : ciaolib_with_idl, dance_output, valuetype, gen_ostream, amh {
  custom_only = 1
  idlflags     += -Wb,stub_export_macro=DEPLOYMENT_DOMAINAPPLICATIONMANAGER_STUB_Export \
                  -Wb,stub_export_include=Deployment_DomainApplicationManager_stub_export.h \
                  -Wb,skel_export_macro=DEPLOYMENT_DOMAINAPPLICATIONMANAGER_SKEL_Export \
                  -Wb,skel_export_include=Deployment_DomainApplicationManager_skel_export.h \
                  -Gxhst -Gxhsk

  IDL_Files {
    Deployment_DomainApplicationManager.idl
  }
}

project(Deployment_DomainApplication_IDL) : ciaolib_with_idl, dance_output, valuetype, gen_ostream, amh {
  custom_only = 1
  idlflags     += -Wb,stub_export_macro=DEPLOYMENT_DOMAINAPPLICATION_STUB_Export \
                  -Wb,stub_export_include=Deployment_DomainApplication_stub_export.h \
                  -Wb,skel_export_macro=DEPLOYMENT_DOMAINAPPLICATION_SKEL_Export \
                  -Wb,skel_export_include=Deployment_DomainApplication_skel_export.h \
                  -Gxhst -Gxhsk

  IDL_Files {
    Deployment_DomainApplication.idl
  }
}

project(Deployment_NAM_IDL) : ciaolib_with_idl, dance_output, valuetype, gen_ostream, ami {
  custom_only = 1
  idlflags     += -Wb,stub_export_macro=DEPLOYMENT_NODEAPPLICATIONMANAGER_STUB_Export \
                  -Wb,stub_export_include=Deployment_NodeApplicationManager_stub_export.h \
                  -Wb,skel_export_macro=DEPLOYMENT_NODEAPPLICATIONMANAGER_SKEL_Export \
                  -Wb,skel_export_include=Deployment_NodeApplicationManager_skel_export.h \
                  -Gxhst -Gxhsk

  IDL_Files {
    Deployment_NodeApplicationManager.idl
  }
}

project(Deployment_NodeManager_IDL) : ciaolib_with_idl, dance_output, valuetype, gen_ostream, ami {
  custom_only = 1
  idlflags     += -Wb,stub_export_macro=DEPLOYMENT_NODEMANAGER_STUB_Export \
                  -Wb,stub_export_include=Deployment_NodeManager_stub_export.h \
                  -Wb,skel_export_macro=DEPLOYMENT_NODEMANAGER_SKEL_Export \
                  -Wb,skel_export_include=Deployment_NodeManager_skel_export.h \
                  -Gxhst -Gxhsk

  IDL_Files {
    Deployment_NodeManager.idl
  }
}

project(Deployment_NodeApplication_IDL) : ciaolib_with_idl, dance_output, valuetype, gen_ostream {
  custom_only = 1
  idlflags     += -Wb,stub_export_macro=DEPLOYMENT_NODEAPPLICATION_STUB_Export \
                  -Wb,stub_export_include=Deployment_NodeApplication_stub_export.h \
                  -Wb,skel_export_macro=DEPLOYMENT_NODEAPPLICATION_SKEL_Export \
                  -Wb,skel_export_include=Deployment_NodeApplication_skel_export.h \
                  -Gxhst -Gxhsk

  IDL_Files {
    Deployment_NodeApplication.idl
  }
}

// Valuetype library must be linked for this project.
// Please don't remove.
project(Deployment_stub) : ciaolib_with_idl, dance_output, valuetype, ifr_client, messaging, dance_lib, dance_logger, gen_ostream, ami, amh {
  sharedname   =  DAnCE_Deployment_stub
  after += Deployment_IDL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  dynamicflags =  DEPLOYMENT_STUB_BUILD_DLL

  IDL_Files {
  }
  Source_Files {
    Deployment_StopErrorC.cpp
    Deployment_StartErrorC.cpp
    Deployment_BaseC.cpp
    Deployment_ConnectionC.cpp
    Deployment_DataC.cpp
    Deployment_DeploymentPlanC.cpp
    Deployment_TargetDataC.cpp
    Deployment_ApplicationC.cpp
    Deployment_Packaging_DataC.cpp
    Deployment_PlanErrorC.cpp
    DeploymentC.cpp
    Deployment_ResourceCommitmentManagerC.cpp
  }
}

project(Deployment_AM_stub) : dance_output, dance_deployment_stub, amh {
  sharedname = DAnCE_ApplicationManager_stub
  after += Deployment_ApplicationManager_IDL
  dynamicflags = DEPLOYMENT_APPLICATIONMANAGER_STUB_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_ApplicationManagerC.cpp
  }
}

project(Deployment_AM_skel) : dance_output, dance_deployment_skel, dance_applicationmanager_stub, amh {
  sharedname = DAnCE_ApplicationManager_skel
  after += Deployment_AM_stub
  dynamicflags = DEPLOYMENT_APPLICATIONMANAGER_SKEL_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_ApplicationManagerS.cpp
  }
}


project(Deployment_DAM_stub) : dance_output, dance_applicationmanager_stub, amh {
  sharedname = DAnCE_DomainApplicationManager_stub
  after += Deployment_DAM_IDL
  dynamicflags = DEPLOYMENT_DOMAINAPPLICATIONMANAGER_STUB_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_DomainApplicationManagerC.cpp
  }
}

project(Deployment_DAM_skel) : dance_output, dance_applicationmanager_skel, dance_domainapplicationmanager_stub, amh {
  sharedname = DAnCE_DomainApplicationManager_skel
  after += Deployment_DAM_stub
  dynamicflags = DEPLOYMENT_DOMAINAPPLICATIONMANAGER_SKEL_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_DomainApplicationManagerS.cpp
  }
}

project(Deployment_ExecutionManager_stub) : dance_output, dance_deployment_stub, dance_domainapplicationmanager_stub, amh {
  sharedname = DAnCE_ExecutionManager_stub
  after += Deployment_ExecutionManager_IDL
  dynamicflags = DEPLOYMENT_EXECUTIONMANAGER_STUB_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_ExecutionManagerC.cpp
  }
}

project(Deployment_ExecutionManager_skel) : dance_output, dance_deployment_skel, dance_executionmanager_stub, amh {
  sharedname = DAnCE_ExecutionManager_skel
  after += Deployment_ExecutionManager_stub
  dynamicflags = DEPLOYMENT_EXECUTIONMANAGER_SKEL_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_ExecutionManagerS.cpp
  }
}

project(Deployment_DomainApplication_stub) : dance_output, dance_deployment_stub, amh {
  sharedname = DAnCE_DomainApplication_stub
  after += Deployment_DomainApplication_IDL
  dynamicflags = DEPLOYMENT_DOMAINAPPLICATION_STUB_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_DomainApplicationC.cpp
  }
}

project(Deployment_DomainApplication_skel) : dance_output, dance_deployment_skel, dance_domainapplication_stub, amh {
  sharedname = DAnCE_DomainApplication_skel
  after += Deployment_DomainApplication_stub
  dynamicflags = DEPLOYMENT_DOMAINAPPLICATION_SKEL_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_DomainApplicationS.cpp
  }
}

project(Deployment_NAM_stub) : dance_output, dance_applicationmanager_stub {
  sharedname = DAnCE_NodeApplicationManager_stub
  after += Deployment_NAM_IDL
  dynamicflags = DEPLOYMENT_NODEAPPLICATIONMANAGER_STUB_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_NodeApplicationManagerC.cpp
  }
}

project(Deployment_NAM_skel) : dance_output, dance_applicationmanager_skel, dance_nodeapplicationmanager_stub {
  sharedname = DAnCE_NodeApplicationManager_skel
  after += Deployment_NAM_stub
  dynamicflags = DEPLOYMENT_NODEAPPLICATIONMANAGER_SKEL_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_NodeApplicationManagerS.cpp
  }
}

project(Deployment_NodeManager_stub) : dance_output, dance_deployment_stub, dance_nodeapplicationmanager_stub, dance_targetmanager_stub, ami {
  sharedname = DAnCE_NodeManager_stub
  after += Deployment_NodeManager_IDL
  dynamicflags = DEPLOYMENT_NODEMANAGER_STUB_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_NodeManagerC.cpp
  }
}

project(Deployment_NodeManager_skel) : dance_output, dance_deployment_skel, dance_nodemanager_stub, dance_nodeapplicationmanager_skel, ami {
  sharedname = DAnCE_NodeManager_skel
  after += Deployment_NodeManager_stub
  dynamicflags = DEPLOYMENT_NODEMANAGER_SKEL_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_NodeManagerS.cpp
  }
}

project(Deployment_TargetManager_stub) : dance_output, dance_deployment_stub {
  sharedname = DAnCE_TargetManager_stub
  after += Deployment_TargetManager_IDL
  dynamicflags = DEPLOYMENT_TARGETMANAGER_STUB_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_TargetManagerC.cpp
  }
}

project(Deployment_TargetManager_skel) : dance_output, dance_deployment_skel, dance_targetmanager_stub {
  sharedname = DAnCE_TargetManager_skel
  after += Deployment_TargetManager_stub
  dynamicflags = DEPLOYMENT_TARGETMANAGER_SKEL_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_TargetManagerS.cpp
  }
}

project(Deployment_RepositoryManager_stub) : dance_output, dance_deployment_stub {
  sharedname = DAnCE_RepositoryManager_stub
  after += Deployment_RepositoryManager_IDL
  dynamicflags = DEPLOYMENT_REPOSITORYMANAGER_STUB_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_RepositoryManagerC.cpp
  }
}

project(Deployment_RepositoryManager_skel) : dance_output, dance_deployment_skel, dance_repositorymanager_stub {
  sharedname = DAnCE_RepositoryManager_skel
  after += Deployment_RepositoryManager_stub
  dynamicflags = DEPLOYMENT_REPOSITORYMANAGER_SKEL_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_RepositoryManagerS.cpp
  }
}

project(Deployment_NodeApplication_stub) : dance_output, dance_deployment_stub {
  sharedname = DAnCE_NodeApplication_stub
  after += Deployment_NodeApplication_IDL
  dynamicflags = DEPLOYMENT_NODEAPPLICATION_STUB_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_NodeApplicationC.cpp
  }
}

project(Deployment_NodeApplication_skel) : dance_output, dance_deployment_skel, dance_nodeapplication_stub {
  sharedname = DAnCE_NodeApplication_skel
  after += Deployment_NodeApplication_stub
  dynamicflags = DEPLOYMENT_NODEAPPLICATION_SKEL_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_NodeApplicationS.cpp
  }
}

// CIAO_DnC_Client library must be linked for this project.
// Please don't remove. dance_deployment_stub,
project(Deployment_skel) : dance_deployment_stub, dance_output, ciaolib_with_idl, portableserver, valuetype, \
                           ifr_client, naming, dance_lib, dance_logger, messaging, gen_ostream, ami, amh {
  sharedname   =  DAnCE_Deployment_skel
  dynamicflags =  DEPLOYMENT_SKEL_BUILD_DLL
  after += Deployment_IDL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_ApplicationS.cpp
    Deployment_ResourceCommitmentManagerS.cpp
  }

}
