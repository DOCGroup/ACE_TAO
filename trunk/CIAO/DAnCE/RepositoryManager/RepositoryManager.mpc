// -*- MPC -*-
// $Id$

project (DAnCE_RepositoryManagerDaemon_IDL) : ciaoidldefaults {
  custom_only = 1
  IDL_Files {
    RepositoryManagerDaemon.idl
  }
}

project (DAnCE_RepositoryManager) : dance_repositorymanager_skel, dance_config_handlers, ccm_stub, dance_repositorymanagerbase, naming, iortable, utils, minizip, zlib, dance_lib, dance_logger {
  requires += zlib
  libs += Package_Config_Handlers
  after += DAnCE_RepositoryManagerDaemon_IDL
  dynamicflags = DANCE_REPOSITORYMANAGER_MODULE_BUILD_DLL
  IDL_Files {
  }

  Source_Files {
    RepositoryManagerDaemonC.cpp
    RepositoryManagerDaemonS.cpp
    ZIP_Wrapper.cpp
    RepositoryManager_Impl.cpp
    RM_Helper.cpp
    URL_Parser.cpp
    PC_Updater_T.cpp
    PC_Updater.cpp
    Repository_Manager_Module.cpp
  }
}

project (DAnCE_RepositoryManager_Exec) : dance_repositorymanager, dance_exe {
  exename = dance_repository_manager

  Source_Files {
    Repository_Manager_Exec.cpp
  }
  IDL_Files {
  }
}


project (DAnCE_RepositoryManager_Admin) : dance_repositorymanager_stub, dance_config_handlers, naming, dance_lib, dance_logger {
  dynamicflags = DANCE_REPOSITORYMANAGER_ADMIN_BUILD_DLL
  after += DAnCE_RepositoryManagerDaemon_IDL

  IDL_Files {
  }

  Source_Files {
    repository_manager_admin.cpp
    RepositoryManagerDaemonC.cpp
  }
}

project (DAnCE_RepositoryManager_Admin_Exec) : dance_repositorymanager, dance_config_handlers, naming, dance_exe, dance_logger {
  exename = dance_rm_admin

  libs += DAnCE_RepositoryManager_Admin
  after += DAnCE_RepositoryManager_Admin

  IDL_Files {
  }

  Source_Files {
    repository_manager_admin_exec.cpp
  }
}
