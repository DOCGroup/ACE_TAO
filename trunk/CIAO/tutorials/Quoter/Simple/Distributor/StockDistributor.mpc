// $Id$
// This file is generated with "generate_component_mpc.pl -p Stock_Base -c StockDistributorDriver StockDistributor -l ../lib -o ../lib"

project(Stock_Base_StockDistributor_idl_gen) : componentidldefaults, avoids_ccm_noevent {
  after += Stock_Base_idl_gen
  custom_only = 1
  idlflags +=  \
              -Wb,stub_export_macro=STOCKDISTRIBUTOR_STUB_Export \
              -Wb,stub_export_include=StockDistributor_stub_export.h \
              -Wb,skel_export_macro=STOCKDISTRIBUTOR_SVNT_Export \
              -Wb,skel_export_include=StockDistributor_svnt_export.h \
              -Wb,exec_export_macro=STOCKDISTRIBUTOR_EXEC_Export \
              -Wb,exec_export_include=StockDistributor_exec_export.h

  IDL_Files {
    StockDistributor.idl
  }
}

project(Stock_Base_StockDistributor_lem_gen) : ciaoidldefaults, avoids_ccm_noevent {
  after += Stock_Base_StockDistributor_idl_gen
  custom_only = 1
  idlflags += -Wb,stub_export_macro=STOCKDISTRIBUTOR_LEM_STUB_Export \
              -Wb,stub_export_include=StockDistributor_lem_stub_export.h \
              -SS -Gxhst

  IDL_Files {
    StockDistributorE.idl
  }
}

project(Stock_Base_StockDistributor_lem_stub) : ccm_svnt   {
  after += Stock_Base_StockDistributor_lem_gen Stock_Base_StockDistributor_stub Stock_Base_stub
  libs  += Stock_Base_stub StockDistributor_stub
  libpaths += ../lib
  libout = ../lib
  sharedname = StockDistributor_lem_stub
  dynamicflags += STOCKDISTRIBUTOR_LEM_STUB_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    StockDistributorEC.cpp
  }

  Header_Files {
    StockDistributorEC.h
    StockDistributor_lem_stub_export.h
  }

  Inline_Files {
    StockDistributorEC.inl
  }
}

project(Stock_Base_StockDistributor_stub) : ccm_stub   {
  after += Stock_Base_StockDistributor_idl_gen Stock_Base_stub
  libs  += Stock_Base_stub
  libpaths += ../lib
  libout = ../lib
  sharedname = StockDistributor_stub
  dynamicflags += STOCKDISTRIBUTOR_STUB_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    StockDistributorC.cpp
  }

  Header_Files {
    StockDistributorC.h
    StockDistributor_stub_export.h
  }

  Inline_Files {
    StockDistributorC.inl
  }
}

project(Stock_Base_StockDistributor_exec) : ciao_executor   {
  after   += Stock_Base_StockDistributor_lem_stub Stock_Base_StockDistributor_stub
  sharedname = StockDistributor_exec
  libs += StockDistributor_stub StockDistributor_lem_stub Stock_Base_stub
  libpaths += ../lib
  libout = ../lib
  dynamicflags += STOCKDISTRIBUTOR_EXEC_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    StockDistributor_exec.cpp
  }

  Header_Files {
    StockDistributor_exec.h
    StockDistributor_exec_export.h
  }

  Inline_Files {
  }
}


project(Stock_Base_StockDistributor_svnt) : ciao_servant   {
  after      += Stock_Base_skel  Stock_Base_StockDistributor_lem_stub
  sharedname  = StockDistributor_svnt
  libs       += StockDistributor_stub StockDistributor_lem_stub  \
                Stock_Base_skel \
                Stock_Base_stub
  libpaths += ../lib
  libout = ../lib
  dynamicflags += STOCKDISTRIBUTOR_SVNT_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    StockDistributorS.cpp
    StockDistributor_svnt.cpp
  }

  Header_Files {
    StockDistributorS.h
    StockDistributor_svnt.h
    StockDistributor_svnt_export.h
  }

  Inline_Files {
    StockDistributorS.inl
  }
}

project (Stock_Base_StockDistributorDriver) : ccm_stub, valuetype   {
  exename = StockDistributorDriver
  after += Stock_Base_StockDistributor_stub
  libs  += StockDistributor_stub Stock_Base_stub
  libpaths += ../lib
  exeout = ../lib
  IDL_Files {
  }

  Source_Files {
    StockDistributorDriver.cpp
  }

  Header_Files {
  }

  Inline_Files {
  }
}

