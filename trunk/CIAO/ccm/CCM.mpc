// $Id$

project(CCM_stub_idl) : ciaolib_with_idl, valuetype {
  idlflags  += -Wb,stub_export_include=CCM_Stub_Export.h
  idlflags  += -Wb,stub_export_macro=CCM_Stub_Export
  idlflags  += -Wb,skel_export_include=CCM_Svnt_Export.h
  idlflags  += -Wb,skel_export_macro=CCM_Svnt_Export
  custom_only = 1
  IDL_Files {
    idlflags += -SS -Sci
    CCM_Base.idl
    CCM_Component.idl
    CCM_Exceptions.idl
  }

  IDL_Files {
    idlflags += -SS
    CCM_Cookie.idl
    CCM_Enumeration.idl
  }

  IDL_Files {
    idlflags += -Ssi -Sci
    Components.idl
  }

  IDL_Files {
    CCM_HomeConfiguration.idl
    CCM_StandardConfigurator.idl
    CCM_Home.idl
    CCM_Object.idl
    CCM_PrimaryKeyBase.idl
  }

  IDL_Files {
    idlflags += -Ssi
    CCM_HomeFinder.idl
    CCM_Configurator.idl
    CCM_KeylessCCMHome.idl
    CCM_Navigation.idl
    CCM_Receptacle.idl
  }

  IDL_Files {
    CCM_Events.idl
    CCM_EventBase.idl
    CCM_EventConsumerBase.idl
  }

}

project(CCM_stub) : ciaolib_with_idl, ciao_output, valuetype, ifr_client {
  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)
  dynamicflags = CCM_STUB_BUILD_DLL
  after += CCM_stub_idl
  IDL_Files {
  }

  Source_Files {
    CCM_BaseC.cpp
    CCM_EventsC.cpp
    CCM_EventBaseC.cpp
    CCM_EventConsumerBaseC.cpp
    CCM_ComponentC.cpp
    CCM_EnumerationC.cpp
    CCM_HomeC.cpp
    CCM_ConfiguratorC.cpp
    CCM_HomeConfigurationC.cpp
    CCM_KeylessCCMHomeC.cpp
    CCM_StandardConfiguratorC.cpp
    CCM_HomeFinderC.cpp
    CCM_NavigationC.cpp
    CCM_ReceptacleC.cpp
    CCM_CookieC.cpp
    CCM_ObjectC.cpp
    CCM_PrimaryKeyBaseC.cpp
    CCM_ExceptionsC.cpp
    ComponentsC.cpp
  }
}

project(CCM_svnt_idl) : ciaolib_with_idl, valuetype {
  idlflags   += -Wb,export_include=CCM_Svnt_Export.h
  idlflags   += -Wb,export_macro=CCM_Svnt_Export
  custom_only = 1
  IDL_Files {
    idlflags += -SS -Sci \
                -Wb,versioning_begin=TAO_BEGIN_VERSIONED_NAMESPACE_DECL \
                -Wb,versioning_end=TAO_END_VERSIONED_NAMESPACE_DECL
    Security.idl
  }

  IDL_Files {
    idlflags += -SS -Sci
    CCM_Context.idl
    CCM_CCMException.idl
    CCM_EntityComponent.idl
    CCM_EntityContext.idl
  }

  IDL_Files {
    idlflags += -SS
    CCM_CCM2Context.idl
    CCM_ProxyHomeRegistration.idl
    CCM_Session2Context.idl
    CCM_Transaction.idl
    CosPersistentState.idl
    CCM_Container.idl
    CCM_SessionContext.idl
    CCM_SessionComponent.idl
    CCM_Container_Ex.idl
    CCM_StateIdFactory.idl
    CCM_Entity2Context.idl
    CCM_ComponentId.idl
    CCM_ExecutorLocator.idl
    CCM_EnterpriseComponent.idl
    CCM_SessionSynchronization.idl
    CCM_HomeRegistration.idl
    CCM_HomeExecutorBase.idl
  }

}

project(CCM_svnt) : orbsvcslib, orbsvcs_output \
                           , portableserver \
                           , valuetype \
                           , ifr_client \
                           , codecfactory \
                           , pi \
                           , ccm_stub \
                           , avoids_corba_e_compact \
                           , avoids_corba_e_micro \
{
  dynamicflags = CCM_SVNT_BUILD_DLL
  after += CCM_svnt_idl
  IDL_Files {
  }

  Source_Files {
    CCM_TransactionC.cpp
    CosPersistentStateC.cpp
    CCM_ContainerC.cpp
    CCM_SessionContextC.cpp
    CCM_SessionComponentC.cpp
    CCM_EnterpriseComponentC.cpp
    CCM_SessionSynchronizationC.cpp
    CCM_CCMExceptionC.cpp
    CCM_ContextC.cpp
    SecurityC.cpp
    CCM_Container_ExC.cpp
    CCM_StateIdFactoryC.cpp
    CCM_ComponentIdC.cpp
    CCM_Entity2ContextC.cpp
    CCM_ExecutorLocatorC.cpp
    CCM_ProxyHomeRegistrationC.cpp
    CCM_Session2ContextC.cpp
    CCM_CCM2ContextC.cpp
    CCM_HomeRegistrationC.cpp
    CCM_HomeExecutorBaseC.cpp
    CCM_EntityContextC.cpp
    CCM_EntityComponentC.cpp
    CCM_EventsS.cpp
    CCM_EventConsumerBaseS.cpp
    CCM_EventBaseS.cpp
    CCM_ConfiguratorS.cpp
    CCM_HomeConfigurationS.cpp
    CCM_KeylessCCMHomeS.cpp
    CCM_StandardConfiguratorS.cpp
    CCM_HomeS.cpp
    CCM_ObjectS.cpp
    CCM_PrimaryKeyBaseS.cpp
    CCM_HomeFinderS.cpp
    CCM_NavigationS.cpp
    CCM_ReceptacleS.cpp
    ComponentsS.cpp
  }
}

