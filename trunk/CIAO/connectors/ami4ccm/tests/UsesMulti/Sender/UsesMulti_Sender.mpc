// $Id$
// This file is generated with "generate_component_mpc.pl -p UsesMulti_Base UsesMulti_Sender"

project(AMI_UsesMulti_Base_Sender_idl_gen) : componentidldefaults {
  after += Conn_UsesMulti_Base_idl_gen AMI_UsesMulti_idl_gen
  custom_only = 1
  idlflags += -Wb,stub_export_macro=USESMULTI_SENDER_STUB_Export \
              -Wb,stub_export_include=UsesMulti_Sender_stub_export.h \
              -Wb,skel_export_macro=USESMULTI_SENDER_SVNT_Export \
              -Wb,skel_export_include=UsesMulti_Sender_svnt_export.h \
              -Wb,exec_export_macro=USESMULTI_SENDER_EXEC_Export \
              -Wb,exec_export_include=UsesMulti_Sender_exec_export.h \
              -I.. -GC

  IDL_Files {
    UsesMulti_Sender.idl
  }
}

project(AMI_UsesMulti_Base_Sender_lem_gen) : ciaoidldefaults {
  after += AMI_UsesMulti_Base_Sender_idl_gen
  custom_only = 1
  idlflags += -Wb,stub_export_macro=USESMULTI_SENDER_LEM_STUB_Export \
              -Wb,stub_export_include=UsesMulti_Sender_lem_stub_export.h \
              -SS -Gxhst -I..

  IDL_Files {
    UsesMulti_SenderE.idl
  }
}

project(AMI_UsesMulti_Base_Sender_lem_stub) : ccm_svnt, ami   {
  after += AMI_UsesMulti_Base_Sender_lem_gen AMI_UsesMulti_stub
  libs  += UsesMulti_stub 
  libpaths += ../lib
  libout = ../lib
  sharedname = UsesMulti_Sender_lem_stub
  dynamicflags   = USESMULTI_SENDER_LEM_STUB_BUILD_DLL
  includes += ..
  IDL_Files {
  }

  Source_Files {
    UsesMulti_SenderEC.cpp
  }

  Header_Files {
    UsesMulti_SenderEC.h
    UsesMulti_Sender_lem_stub_export.h
  }

  Inline_Files {
    UsesMulti_SenderEC.inl
  }
}

project(AMI_UsesMulti_Base_Sender_stub) : ccm_stub, ami   {
  after += AMI_UsesMulti_Base_Sender_idl_gen AMI_UsesMulti_Base_stub AMI_UsesMulti_stub
  libs  += UsesMulti_stub
  libpaths += ../lib
  libout = ../lib
  sharedname = UsesMulti_Sender_stub
  dynamicflags   = USESMULTI_SENDER_STUB_BUILD_DLL
  includes += ..
  IDL_Files {
  }

  Source_Files {
    UsesMulti_SenderC.cpp
  }

  Header_Files {
    UsesMulti_SenderC.h
    UsesMulti_Sender_stub_export.h
  }

  Inline_Files {
    UsesMulti_SenderC.inl
  }
}

project(AMI_UsesMulti_Base_Sender_exec) : ciao_executor, ami, ami4ccm_stub {
  after   += AMI_UsesMulti_Base_Sender_lem_stub AMI_UsesMulti_Base_Sender_stub AMI_UsesMulti_Base_exec AMI_UsesMulti_lem_stub
  sharedname = UsesMulti_Sender_exec
  libs += UsesMulti_Sender_stub UsesMulti_Sender_lem_stub UsesMulti_stub UsesMulti_stub UsesMulti_lem_stub
  libpaths += ../lib
  libout = ../lib
  dynamicflags   = USESMULTI_SENDER_EXEC_BUILD_DLL
  includes += ..
  IDL_Files {
  }

  Source_Files {
    UsesMulti_Sender_exec.cpp
  }

  Header_Files {
    UsesMulti_Sender_exec.h
    UsesMulti_Sender_exec_export.h
  }

  Inline_Files {
  }
}

project(AMI_UsesMulti_Base_Sender_svnt) : ciao_servant, ami {
  after      += AMI_UsesMulti_Base_skel AMI_UsesMulti_Base_Sender_lem_stub AMI_UsesMulti_Base_Sender_stub AMI_UsesMulti_Base_exec AMI_UsesMulti_skel
  sharedname  = UsesMulti_Sender_svnt
  libs       += UsesMulti_Sender_stub UsesMulti_Sender_lem_stub  \
                UsesMulti_skel \
                UsesMulti_stub
  libpaths += ../lib
  libout = ../lib
  dynamicflags = USESMULTI_SENDER_SVNT_BUILD_DLL
  includes += ..
  IDL_Files {
  }

  Source_Files {
    UsesMulti_SenderS.cpp
    UsesMulti_Sender_svnt.cpp
  }

  Header_Files {
    UsesMulti_SenderS.h
    UsesMulti_Sender_svnt.h
    UsesMulti_Sender_svnt_export.h
  }

  Inline_Files {
    UsesMulti_SenderS.inl
  }
}


