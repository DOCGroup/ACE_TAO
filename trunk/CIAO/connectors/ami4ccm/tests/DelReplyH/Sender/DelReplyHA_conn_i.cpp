// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v1.8.3
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:1661

#include "DelReplyHA_conn_i.h"

namespace CIAO_DelReplyH_AMI4CCM_MyFoo_Connector_AMI4CCM_Connector_Impl
{
  AMI4CCM_MyFooReplyHandler_i::AMI4CCM_MyFooReplyHandler_i (
      Atomic_UShort &nr_callbacks,
      Atomic_UShort &nr_exceptions)
   : nr_callbacks_ (nr_callbacks),
     nr_exceptions_ (nr_exceptions)
  {
    ACE_DEBUG ((LM_DEBUG,"CONSTRUCTOR replyhandle\n"));
     ++this->nr_callbacks_;
  }

  AMI4CCM_MyFooReplyHandler_i::~AMI4CCM_MyFooReplyHandler_i (void)
  {
    ACE_DEBUG ((LM_DEBUG,"DESTRUCTOR replyhandle\n"));
    --this->nr_callbacks_;
  }

  void
  AMI4CCM_MyFooReplyHandler_i::foo (
      ::CORBA::Long /*ami_return_val*/,
      const char * answer)
  {
    ACE_DEBUG ((LM_DEBUG, "OK: ASYNCH foo() returns answer: %C.\n", answer));
  }

  void
  AMI4CCM_MyFooReplyHandler_i::foo_excep (
      ::CCM_AMI::ExceptionHolder_ptr /* excep_holder */)
  {
    ++this->nr_exceptions_;
  }
}
