// $Id$

project(AMI_ExceptionT_idl_gen) : componentidldefaults, ami, ami4ccm_stub {
  custom_only = 1
  idlflags += -Wb,stub_export_macro=EXCEPTION_T_STUB_Export \
              -Wb,stub_export_include=ExceptionT_stub_export.h \
              -Wb,skel_export_macro=EXCEPTION_T_SKEL_Export \
              -Wb,skel_export_include=ExceptionT_skel_export.h \
              -Wb,conn_export_macro=EXCEPTION_T_CONN_Export \
              -Wb,conn_export_include=ExceptionT_conn_export.h \
              -Wb,exec_export_macro=EXCEPTION_T_EXEC_Export \
              -Wb,exec_export_include=ExceptionT_exec_export.h \
              -I.. -GM -Gxhcn
  idlflags -= -Gsv

  IDL_Files {
    ExceptionT.idl
  }
}

project(AMI_ExceptionT_lem_gen) : ciaoidldefaults {
  after += AMI_ExceptionT_idl_gen AMI_ExceptionT_lema_gen
  custom_only = 1
  idlflags += -Wb,export_macro=EXCEPTION_T_LEM_STUB_Export \
              -Wb,export_include=ExceptionT_lem_stub_export.h \
              -I.. -SS -Gxhst

  IDL_Files {
    ExceptionTE.idl
  }
}

project(AMI_ExceptionT_lema_gen) : ciaoidldefaults, typecode {
  after += AMI_ExceptionT_idl_gen
  custom_only = 1
  idlflags += -Wb,stub_export_macro=EXCEPTION_T_STUB_Export \
              -Wb,stub_export_include=ExceptionT_stub_export.h \
              -Wb,conn_export_macro=EXCEPTION_T_CONN_Export \
              -Wb,conn_export_include=ExceptionT_conn_export.h \
              -Wb,svnt_export_macro=EXCEPTION_T_SVNT_Export \
              -Wb,svnt_export_include=ExceptionT_svnt_export.h \
              -Wb,skel_export_macro=EXCEPTION_T_SKEL_Export \
              -Wb,skel_export_include=ExceptionT_skel_export.h \
              -I.. -Gsv -Gcn -Glem -GC -Gxhst -Gxhsv

  IDL_Files {
    ExceptionTA.idl
  }
}

project(AMI_ExceptionT_lemae_gen) : ciaoidldefaults {
  after += AMI_ExceptionT_lema_gen
  custom_only = 1
  idlflags += -Wb,stub_export_macro=EXCEPTION_T_LEM_STUB_Export \
              -Wb,stub_export_include=ExceptionT_lem_stub_export.h \
              -I.. -SS

  IDL_Files {
    ExceptionTAE.idl
  }
}

project(AMI_ExceptionT_stub) : ccm_stub, ami, ami4ccm_stub {
  after += AMI_ExceptionT_lem_gen
  libs  +=
  libout = ../lib
  libpaths += ../lib
  includes +=   ..

  sharedname = ExceptionT_stub
  dynamicflags += EXCEPTION_T_STUB_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    ExceptionTC.cpp
    ExceptionTAC.cpp
  }

  Header_Files {
    ExceptionTC.h
    ExceptionT_stub_export.h
}

  Inline_Files {
    ExceptionTC.inl
  }
}

project(AMI_ExceptionT_lem_stub) : ccm_executor, ami, ami4ccm_lem_stub {
  after += AMI_ExceptionT_lem_gen AMI_ExceptionT_stub AMI_ExceptionT_lemae_gen AMI_ExceptionT_skel
  libs += ExceptionT_stub ExceptionT_skel
  libout = ../lib
  libpaths += ../lib
  includes +=   ..

  sharedname = ExceptionT_lem_stub
  dynamicflags += EXCEPTION_T_LEM_STUB_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    ExceptionTEC.cpp
    ExceptionTAEC.cpp
  }

  Header_Files {
    ExceptionTEC.h
    ExceptionT_lem_stub_export.h
}

  Inline_Files {
    ExceptionTEC.inl
  }
}

project(AMI_ExceptionT_skel) : ciao_executor, ami, ami4ccm_servant {
  after      += AMI_ExceptionT_stub
  sharedname  = ExceptionT_skel
  libs       += ExceptionT_stub
  libout = ../lib
  libpaths += ../lib
  includes +=   ..

  dynamicflags += EXCEPTION_T_SKEL_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    ExceptionTS.cpp
    ExceptionTAS.cpp
  }

  Header_Files {
    ExceptionTS.h
   
    ExceptionT_skel_export.h
  }

  Inline_Files {
    ExceptionTS.inl
   
  }
}

project(AMI_ExceptionT_conn) : ciao_executor, ami, ami4ccm_lem_stub {
  after   += AMI_ExceptionT_lem_stub ExceptionT_Base_AMI_stub AMI_ExceptionT_skel AMI_ExceptionT_lema_gen AMI_ExceptionT_lemae_gen
  sharedname = ExceptionT_conn
  libs += ExceptionT_stub ExceptionT_skel ExceptionT_lem_stub
  libpaths += ../lib
  libout = ../lib
  dynamicflags += EXCEPTION_T_CONN_BUILD_DLL
  includes += ..
  IDL_Files {
  }

  Source_Files {
    ExceptionTA_conn.cpp
  }

  Header_Files {
    ExceptionTA_conn.h
    ExceptionT_conn_export.h
  }

  Inline_Files {
  }
}

project(AMI_ExceptionT_svnt) : ciao_servant, ami, ami4ccm_servant {
  after   += AMI_ExceptionT_lem_stub ExceptionT_Base_AMI_stub AMI_ExceptionT_skel AMI_ExceptionT_lema_gen AMI_ExceptionT_lemae_gen AMI_ExceptionT_conn
  sharedname = ExceptionT_svnt
  libs += ExceptionT_stub ExceptionT_skel ExceptionT_lem_stub ExceptionT_conn
  libpaths += ../lib
  libout = ../lib
  dynamicflags += EXCEPTION_T_SVNT_BUILD_DLL
  includes += ..
  IDL_Files {
  }

  Source_Files {
    ExceptionTA_svnt.cpp
  }

  Header_Files {
    ExceptionTA_svnt.h
    ExceptionTA_svnt_export.h
  }

  Inline_Files {
  }
}

