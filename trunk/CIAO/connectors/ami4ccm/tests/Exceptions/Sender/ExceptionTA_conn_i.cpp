// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v1.8.3
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:1661

#include "ExceptionTA_conn_i.h"

namespace CIAO_ExceptionT_AMI4CCM_MyFoo_Connector_AMI4CCM_Connector_Impl
{
  void HandleException (
        ::CCM_AMI::ExceptionHolder_ptr excep_holder,
        const char* func)
  {
    try
      {
        excep_holder->raise_exception ();
      }
    catch (const ExceptionT::InternalError& ex)
      {
        CIAO_ExceptionT_Sender_Impl::HandleException (ex.id,
                                                      ex.error_string.in (),
                                                      ex.test.in(), func);
      }
    catch (const CORBA::Exception& ex)
      {
        ex._tao_print_exception ("ERROR: Caught unexpected exception:");
      }
  }

  AMI4CCM_MyFooReplyHandler_i::AMI4CCM_MyFooReplyHandler_i (void)
  {
  }

  AMI4CCM_MyFooReplyHandler_i::~AMI4CCM_MyFooReplyHandler_i (void)
  {
  }

  void
  AMI4CCM_MyFooReplyHandler_i::foo (::CORBA::Long /* ami_return_val */,
  const char * /* answer */)
  {
    // never should come here in this test.
    ACE_ERROR ((LM_ERROR, "ERROR: MyFoo_callback_exec_i::foo: "
                           "Unexpected return.\n"));
  }

  void
  AMI4CCM_MyFooReplyHandler_i::foo_excep (
      ::CCM_AMI::ExceptionHolder_ptr excep_holder)
  {
    HandleException (excep_holder, "FOO (asyn)");
  }

  void
  AMI4CCM_MyFooReplyHandler_i::hello (::CORBA::Long /* answer */)
  {
    // never should come here in this test.
     ACE_ERROR ((LM_ERROR, "ERROR: MyFoo_callback_exec_i::hello: "
                            "Unexpected return.\n"));
  }

  void
  AMI4CCM_MyFooReplyHandler_i::hello_excep (
      ::CCM_AMI::ExceptionHolder_ptr excep_holder)
  {
    HandleException (excep_holder, "HELLO (asyn)");
  }

  void
  AMI4CCM_MyFooReplyHandler_i::get_rw_attrib (::CORBA::Short /* rw_attrib */)
  {
    // never should come here in this test.
      ACE_ERROR ((LM_ERROR, "ERROR: MyFoo_callback_exec_i::get_rw_attrib : "
                             "Unexpected return.\n"));
  }

  void
  AMI4CCM_MyFooReplyHandler_i::get_rw_attrib_excep (
      ::CCM_AMI::ExceptionHolder_ptr excep_holder)
  {
    HandleException (excep_holder, "GET RW_ATTRIB (asyn)");
  }

  void
  AMI4CCM_MyFooReplyHandler_i::set_rw_attrib (void)
  {
    // never should come here in this test.
     ACE_ERROR ((LM_ERROR, "ERROR: MyFoo_callback_exec_i::set_rw_attrib: "
                            "Unexpected return.\n"));
  }

  void
  AMI4CCM_MyFooReplyHandler_i::set_rw_attrib_excep (
      ::CCM_AMI::ExceptionHolder_ptr excep_holder)
  {
    HandleException (excep_holder, "SET_RW_ATTRIB (asyn)");
  }

  void
  AMI4CCM_MyFooReplyHandler_i::get_ro_attrib (::CORBA::Short /* ro_attrib */)
  {
    // never should come here in this test.
      ACE_ERROR ((LM_ERROR, "ERROR: MyFoo_callback_exec_i::get_ro_attrib: "
                             "Unexpected return.\n"));
  }

  void
  AMI4CCM_MyFooReplyHandler_i::get_ro_attrib_excep (
      ::CCM_AMI::ExceptionHolder_ptr excep_holder)
  {
    HandleException (excep_holder, "RO_ATTRIB (asyn)");
  }
}
