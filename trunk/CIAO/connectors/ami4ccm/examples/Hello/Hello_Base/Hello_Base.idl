// $Id$

#ifndef HELLO_BASE_IDL
#define HELLO_BASE_IDL

#include "Hello_Base/Hello.idl"
#include "tao/Messaging/Messaging.pidl"
module CCM_AMI
{

  // callback interface from AMI-component to Sender component
  interface AMI_MyFoo_callback : ::Messaging::ReplyHandler
    {
      void foo_callback_handler (in long result, in string answer);
      void foo_callback_excep   (in ::Messaging::ExceptionHolder excep_holder);

      void hello_callback_handler (in long answer);
      void hello_callback_excep   (in ::Messaging::ExceptionHolder excep_holder);
    };

  // AMI component. Sender calls AMI-component and AMI-component calls Receiver
  // using the AMI_foo interface.
  // Example of a global reply handler
  interface AMI_MyFoo
    {
      void sendc_foo (in AMI_MyFoo_callback cb_handler, in string in_str);
      void sendc_hello (in AMI_MyFoo_callback cb_handler);
    };

  // callback interface from AMI-component to Sender component
  // Example of a reply handler per request.
  interface AMI_MyInterface_callback : ::Messaging::ReplyHandler
    {
      void do_something_with_something_callback_handler (in float result);
      void do_something_with_something_callback_excep   (in ::Messaging::ExceptionHolder excep_holder);
    };

  interface AMI_MyInterface
    {
      void sendc_do_something_with_something (in AMI_MyInterface_callback cb_handler, in short something);
    };
};

#endif /* HELLO_BASE_IDL */