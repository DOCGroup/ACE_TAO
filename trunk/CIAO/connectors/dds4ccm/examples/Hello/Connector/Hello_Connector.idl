// $Id$

/**
 * @file Hello_Connector.idl
 * @author Marcel Smit <msmit@remedy.nl>
 *
 * by-hand translation of the idl3p.
 */

#ifndef HELLO_CONNECTOR_IDL_
#define HELLO_CONNECTOR_IDL_

#include  <Components.idl>
#include "Base/Hello_Base.idl"
#include "connectors/dds4ccm/idl/ccm_dds.idl"

TYPED_MODULE( ::DDSHello, ::DDSHello_Seq, Hello)

module Hello
{
  component Hello_Connector : ::CCM_DDS::Hello::DDS_MonoConnector
  {
    uses CCM_DDS::ConnectorStatusListener error_listener;
    mirrorport CCM_DDS::Hello::DDS_Write info_in;
    mirrorport CCM_DDS::Hello::DDS_Update info_update;
    mirrorport CCM_DDS::Hello::DDS_Listen info_out;
  };
};

/*
For future use: IDL3 plus
#include <dds4ccm/idl/dds4ccm_Connector_Base.idl3p>
#include <dds4ccm/idl/dds4ccm_Port_RawListen.idl3p>
#include <dds4ccm/idl/dds4ccm_Port_Write.idl3p>

module Hello
{
  connector Hello_Connector : CCM_DDS::DDS_TopicBase
  {
    mirrorport CCM_DDS::DDS_Write <DDSHello> info_in;
    mirrorport CCM_DDS::DDS_RawListen <DDSHello> info_out;
  };
};
*/

#endif /* HELLO_CONNECTOR_IDL_ */


