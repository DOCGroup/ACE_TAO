// $Id$

project (CIAO_DnC_Client) : taolib_with_idl, valuetype, ifr_client {
  sharedname  = CIAO_DnC_Client
  idlflags  += -Wb,stub_export_include=CIAO_Client_Export.h
  idlflags  += -Wb,stub_export_macro=CIAO_CLIENT_Export
  idlflags  += -Wb,skel_export_include=CIAO_Container_Export.h
  idlflags  += -Wb,skel_export_macro=CIAO_CONTAINER_Export

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)/DAnCE

  dynamicflags    = CIAO_CLIENT_BUILD_DLL

  IDL_Files {
    idlflags += -SS -Sci
    CCM_Base.idl
    CCM_Component.idl
  }

  IDL_Files {
    idlflags += -SS
    CCM_Cookie.idl
    CCM_Enumeration.idl
  }

  IDL_Files {
    idlflags += -Ssi -Sci
    Components.idl
  }

  IDL_Files {
    CCM_HomeConfigurator.idl
    CCM_StandardConfigurator.idl
    CCM_Home.idl
    CCM_Object.idl
  }

  IDL_Files {
    idlflags += -Ssi
    CCM_HomeFinder.idl
    CCM_Configurator.idl
    CCM_KeylessCCMHome.idl
    CCM_Navigation.idl
    CCM_Receptacle.idl
  }

  IDL_Files {
    CCM_Event.idl
  }

  Source_Files {
    CCM_BaseC.cpp
    CCM_EventC.cpp
    CCM_ComponentC.cpp
    CCM_EnumerationC.cpp
    CCM_HomeC.cpp
    CCM_ConfiguratorC.cpp
    CCM_HomeConfiguratorC.cpp
    CCM_KeylessCCMHomeC.cpp
    CCM_StandardConfiguratorC.cpp
    CCM_HomeFinderC.cpp
    CCM_NavigationC.cpp
    CCM_ReceptacleC.cpp
    CCM_CookieC.cpp
    CCM_ObjectC.cpp
    Client_init.cpp
    ComponentsC.cpp
  }

  Header_Files {
    CIAO_Client_Export.h
    CIAO_common.h
  }
}

project (CIAO_DnC_Container) : orbsvcslib, portableserver, security, valuetype, ifr_client, codecfactory, pi, ciao_client_dnc {
  sharedname  = CIAO_DnC_Container
  idlflags   += -Wb,export_include=CIAO_Container_Export.h
  idlflags   += -Wb,export_macro=CIAO_CONTAINER_Export
  dynamicflags = CIAO_CONTAINER_BUILD_DLL

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)/DAnCE

  IDL_Files {
    idlflags += -SS -Sci
    CCM_Context.idl
    CCM_CCMException.idl
    CCM_EntityComponent.idl
    CCM_EntityContext.idl
    SwapExec.idl
    UpgradeableContext.idl
  }

  IDL_Files {
    idlflags += -SS
    CCM_CCM2Context.idl
    CCM_ProxyHomeRegistration.idl
    CCM_Session2Context.idl
    CCM_Transaction.idl
    CosPersistentState.idl
    CCM_Container.idl
    CCM_Container_Ex.idl
    CCM_EnterpriseComponent.idl
    CCM_SessionSynchronization.idl
    CCM_HomeRegistration.idl
    CCM_HomeExecutorBase.idl
  }

  Source_Files {
    CCM_TransactionC.cpp
    CosPersistentStateC.cpp
    CCM_ContainerC.cpp
    CCM_EnterpriseComponentC.cpp
    CCM_SessionSynchronizationC.cpp
    CCM_CCMExceptionC.cpp
    CCM_ContextC.cpp
    CCM_Container_ExC.cpp
    CCM_ProxyHomeRegistrationC.cpp
    CCM_Session2ContextC.cpp
    CCM_CCM2ContextC.cpp
    CCM_HomeRegistrationC.cpp
    CCM_HomeExecutorBaseC.cpp
    CCM_EntityContextC.cpp
    CCM_EntityComponentC.cpp
    CCM_EventS.cpp
    CCM_ConfiguratorS.cpp
    CCM_HomeConfiguratorS.cpp
    CCM_KeylessCCMHomeS.cpp
    CCM_StandardConfiguratorS.cpp
    CCM_HomeS.cpp
    CCM_ObjectS.cpp
    CCM_HomeFinderS.cpp
    CCM_NavigationS.cpp
    CCM_ReceptacleS.cpp
    SwapExecC.cpp
    UpgradeableContextC.cpp
    Cookies.cpp
    ComponentsS.cpp
  }

}

// Valuetype library must be linked for this project.
// Please don't remove.
project(Deployment_stub) : taolib_with_idl, valuetype, ifr_client, ciao_events_base_dnc, ciao_client_dnc {
  sharedname   =  CIAO_Deployment_stub

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)/DAnCE $(CIAO_ROOT)

  idlflags     += -Wb,stub_export_macro=Deployment_stub_Export
  idlflags     += -Wb,stub_export_include=Deployment_stub_export.h
  idlflags     += -Wb,skel_export_macro=Deployment_svnt_Export
  idlflags     += -Wb,skel_export_include=Deployment_svnt_export.h

  dynamicflags =  DEPLOYMENT_STUB_BUILD_DLL

  IDL_Files {
    idlflags += -SS -Sci
    Packaging_Data.idl
    Target_Data.idl
  }

  IDL_Files {
    idlflags += -SS
    Deployment_Base.idl
    Deployment_Connection.idl
    Deployment_Data.idl
    Deployment_DeploymentPlan.idl
    Deployment_TargetData.idl
    ServerResources.idl
    Deployment_Events.idl
  }

  IDL_Files {
    TargetManager.idl
    NodeApplication_CallBack.idl
    Deployment_Core.idl
    Deployment_NodeApplication.idl
    Deployment_Application.idl
    Deployment_Container.idl
    Deployment.idl
    NodeManager.idl
    NodeApplicationManager.idl
    DomainApplicationManager.idl
    ExecutionManager.idl
    RepositoryManager.idl
  }

  Source_Files {
    Deployment_CoreC.cpp
    Deployment_BaseC.cpp
    Deployment_ConnectionC.cpp
    Deployment_DataC.cpp
    Deployment_DeploymentPlanC.cpp
    Deployment_TargetDataC.cpp
    Deployment_NodeApplicationC.cpp
    Deployment_ApplicationC.cpp
    Deployment_ContainerC.cpp
    Packaging_DataC.cpp
    Target_DataC.cpp
    DeploymentC.cpp
    TargetManagerC.cpp
    NodeManagerC.cpp
    NodeApplicationManagerC.cpp
    DomainApplicationManagerC.cpp
    ExecutionManagerC.cpp
    RepositoryManagerC.cpp
    NodeApplication_CallBackC.cpp
    ServerResourcesC.cpp
    Deployment_EventsC.cpp
  }
}

// CIAO_DnC_Client library must be linked for this project.
// Please don't remove.
project(Deployment_svnt) : taolib_with_idl, portableserver, valuetype, ifr_client, ciao_deployment_stub, ciao_events_dnc, ciao_client_dnc {
  sharedname   =  CIAO_Deployment_svnt
  dynamicflags =  DEPLOYMENT_SVNT_BUILD_DLL
  idlflags     += -Wb,stub_export_macro=Deployment_stub_Export
  idlflags     += -Wb,stub_export_include=Deployment_stub_export.h
  idlflags     += -Wb,skel_export_macro=Deployment_svnt_Export
  idlflags     += -Wb,skel_export_include=Deployment_svnt_export.h

  // This is necessary for MPC to pull in rules.ciao.GNU
  includes += $(CIAO_ROOT)/DAnCE $(CIAO_ROOT)

  IDL_Files {
  }

  Source_Files {
    Deployment_CoreS.cpp
    Deployment_ApplicationS.cpp
    Deployment_NodeApplicationS.cpp
    Deployment_ContainerS.cpp
    DeploymentS.cpp
    RepositoryManagerS.cpp
    NodeManagerS.cpp
    NodeApplicationManagerS.cpp
    DomainApplicationManagerS.cpp
    ExecutionManagerS.cpp
    NodeApp_CB_Impl.cpp
    TargetManagerS.cpp
    NodeApplication_CallBackS.cpp
  }

}

project (CIAO_DnC_Server) : orbsvcslib, portableserver, valuetype, naming, ifr_client, utils, security, ciao_container_dnc, ciao_client_dnc, ciao_deployment_svnt {
  includes     += $(CIAO_ROOT)/ciao
  includes     += $(CIAO_ROOT)
  sharedname   =  CIAO_DnC_Server
  idlflags     += -Wb,export_include=CIAO_Server_Export.h -Wb,export_macro=CIAO_SERVER_Export
  dynamicflags =  CIAO_SERVER_BUILD_DLL

  IDL_Files {

  }

  Source_Files {
    Container_Base.cpp
    Swapping_Container.cpp
    Context_Impl_Base.cpp
    Home_Servant_Impl_Base.cpp
    Servant_Impl_Base.cpp
    Swapping_Servant_Home_Impl_Base.cpp
    Server_init.cpp
    Servant_Activator.cpp
    Dynamic_Component_Activator.cpp
    Dynamic_Component_Servant_Base.cpp
    Port_Activator.cpp
    StandardConfigurator_Impl.cpp
  }

  Header_Files {
    CIAO_Server_Export.h
    CIAO_common.h
  }

  Template_Files {
    Context_Impl_T.cpp
    Upgradeable_Context_Impl_T.cpp
    Home_Servant_Impl_T.cpp
    Swapping_Servant_Home_Impl_T.cpp
    Dynamic_Component_Servant_T.cpp
    Servant_Impl_T.cpp
    Servant_Impl_Utils_T.cpp
    Servant_Activator_T.cpp
  }
}
