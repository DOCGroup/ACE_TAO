//$Id$:

#ifndef TIMETRIGGERCONNECTOR_IDL
#define TIMETRIGGERCONNECTOR_IDL

#include <Components.idl>

//In this demo the connector is made by hand, but in future, the connector has to be generated by idl.

module TTC {

  typedef long TimerId;

  struct TimeT
  {
    long seconds;
    unsigned long nanosec;
  };

  enum timeout_enum_t
   {
     ABSOLUTE,
     RELATIVE
   };

  //timeout can be relative or absolute, as denoted by the flag.
  struct timeout_t
   {
     // Time value for timeout
     TimeT time_val;
     // Timeout type
     timeout_enum_t flag;
   };
};

typedef string TimerService;

local interface TTC_Callback {
  void on_timer (in TTC::timeout_t time);
};

local interface  TTC_Scheduler {
  TTC::TimerId start_scheduler_periodic (in TTC::timeout_t delay_time,in TTC::timeout_t rate, in TTC_Callback cb);
  TTC::TimerId start_scheduler_sporadic (in TTC::timeout_t time, in TTC_Callback cb);
  void cancel_scheduler (in TTC::TimerId timer_id);
};

component TTSCConnector
{
  provides   TTC_Scheduler    p_provides_tcc_scheduler;
};

#endif /*TIMETRIGGERCONNECTOR_IDL*/
