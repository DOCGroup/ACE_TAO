// $Id$
// This file is generated with "generate_component_mpc.pl -u Glfa B"

project(Glfa_B_idl_gen) : componentidldefaults   {
  custom_only = 1
  idlflags += -Wb,stub_export_macro=B_STUB_Export \
              -Wb,stub_export_include=B_stub_export.h \
              -Wb,skel_export_macro=B_SVNT_Export \
              -Wb,skel_export_include=B_svnt_export.h \
              -Wb,exec_export_macro=B_EXEC_Export \
              -Wb,exec_export_include=B_exec_export.h \
              -Gxhex -Gxhsk -Gxhst -Glfa -Gex

  IDL_Files {
    B.idl
  }
}

project(Glfa_B_lem_gen) : ciaoidldefaults   {
  after += Glfa_B_idl_gen Glfa_A_idl_gen
  custom_only = 1
  idlflags += -Wb,stub_export_macro=B_LEM_STUB_Export \
              -Wb,stub_export_include=B_lem_stub_export.h \
              -SS -Gxhst

  IDL_Files {
    BE.idl
  }
}

project(Glfa_B_lem_stub) : ccm_svnt   {
  after += Glfa_B_lem_gen Glfa_B_stub Glfa_A_stub
  libs  +=  B_stub A_stub


  sharedname = B_lem_stub
  dynamicflags   = B_LEM_STUB_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    BEC.cpp
  }

  Header_Files {
    BEC.h
    B_lem_stub_export.h
  }

  Inline_Files {
    BEC.inl
  }
}

project(Glfa_B_stub) : ccm_stub   {
  after += Glfa_B_idl_gen Glfa_A_stub
  libs  += A_stub


  sharedname = B_stub
  dynamicflags   = B_STUB_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    BC.cpp
  }

  Header_Files {
    BC.h
    B_stub_export.h
  }

  Inline_Files {
    BC.inl
  }
}

project(Glfa_B_exec) : ciao_executor   {
  after   += Glfa_B_lem_stub Glfa_B_stub Glfa_A_stub
  sharedname = B_exec
  libs += B_stub B_lem_stub A_stub


  dynamicflags   = B_EXEC_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    B_exec.cpp
  }

  Header_Files {
    B_exec.h
    B_exec_export.h
  }

  Inline_Files {
  }
}


project(Glfa_B_svnt) : ciao_servant   {
  after      +=   Glfa_B_lem_stub Glfa_A_stub Glfa_A_skel
  sharedname  = B_svnt
  libs       += B_stub B_lem_stub A_stub A_skel


  dynamicflags = B_SVNT_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    BS.cpp
    B_svnt.cpp
  }

  Header_Files {
    BS.h
    B_svnt.h
    B_svnt_export.h
  }

  Inline_Files {
    BS.inl
  }
}


