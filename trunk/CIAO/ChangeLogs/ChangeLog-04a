Fri Jul 30 18:29:54 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* ciao/Servant_Impl_T.cpp (get_all_facets, get_all_consumers):

	  Fixed another instance of incorrect emulated exception
	  parameters.  The method definitions incorrectly used a default
	  valued parameters.

	  Fixed unused parameter warnings.

Fri Jul 30 17:29:18 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* NEWS:  Added CIAO 0.4.2 noteworthy items.

Thu Jul 29 16:54:01 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* DAnCE/ciao/Servant_Impl_T.cpp (get_all_facets):
	  (get_all_consumers):

	  Fixed incorrect emulated exception parameters.  The method
	  definitions incorrectly used a default valued parameters.

	  Fixed unused parameter warnings.

Thu Jul 29 16:47:56 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* DAnCE/NodeApplicationManager/NodeApplicationManager_Impl.inl
	  (get_nodeapp_manager):

	  Removed emulated exception parameter.  The corresponding method
	  declaration in the header doesn't have such a parameter.  Fixes
	  a compile-time problem.

Thu Jul 29 14:28:55 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* DAnCE/RepositoryManager/RepositoryManager_Impl.cpp
	  (createPackage, deletePackage, findPackageByName):

	  Fixed emulated exception macro usage.  Addresses compile-time
	  problems in MSVC++ 6 builds.

Tue Jul 27 14:48:10 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DAnCE/NodeApplicationManager/NodeApplicationManager_Impl.h:
	  Removed the emulated exception parameter from the destructor
	  so the file will be compiled when the exception is turned off.

Tue Jul 27 09:58:58 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DAnCE/NodeApplication/NodeApplication.mpc:
          Rearranged the order of libraries to fix link errors in static
          configurations.

Mon Jul 26 11:08:14 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DAnCE/tests/Config_Handlers/handler_test.mpb:
          Added CIAO_DnC_Client to resolve link errors

Mon Jul 26 11:06:38 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DAnCE/NodeApplicationManager/NodeApplicationManager_Impl.inl:
          Added ACE_INLINE for the get_nodeapp_ref method to resolve
          linking errors in the builds with static configurations

        * DAnCE/NodeApplicationManager/NodeApplicationManager_Impl.h:
          changed changed nade_app_manager to node_app_manager!

        * DAnCE/NodDaemon/NodeDaemon.mpc:
          Resolved link errors

Sun Jul 25 22:13:48 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* Release:

	  Makefile with release information.

Sun Jul 25 22:15:03 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* ChangeLog:

Sat Jul 24 20:57:03 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * docs/releasenotes/dance.html: Updated the release notes for
          DAnCE.

Fri Jul 23 23:43:01 2004  Nanbor Wang  <nanbor@cse.wustl.edu>

        I didn't get around to send the following to Venkita before he
	left for vacation so I'm checking them in here.

	* tests/RTCCM/Priority_Test/README:
	* tests/RTCCM/Priority_Test/descriptors/README: Documentation for
	  running the simple Priority tests applications.

Tue Jul 20 16:03:14 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * docs/releasenotes/dance.html: Updated the release notes for
          DAnCE.

Tue Jul 20 12:37:50 2004  Gan Deng  <gan.deng@vanderbilt.edu>

	* docs/releasenotes/dance.html

          Added this file to describe what the current status is
          about the DAnCE.

Mon Jul 19 14:16:10 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * ciao/ServerActivator_Impl.cpp (init): Use the argument
          spawn_delay to set the value of the delay in seconds that the
          ServerActivator waits for the ComponentServer to come up. This
          is needed when the ComponentServer is not able to come up before
          the hardcoded value of 5 seconds passes by, which happens when
          running the ComponentServer under Valgrind.

Mon Jul 19 12:47:17 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* DAnCE/ciao/CCM_Core.mpc:

	  Added ifr_client to Deployment_stub and Deployment_svnt. This
	  should fix VC6 build issues.

Sun Jul 18 12:53:04 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* DAnCE/tests/NodeApplicationTest/NodeApp_test_client.cpp (main):

	  Fixed "better conversion sequence" warning by using component
	  reference ".in()" accessor.

Thu Jul 15 21:52:12 2004  Johnnny Willemsen  <jwillemsen@remedy.nl>

        * DAnCE/NodeManager/NodeDaemon_Impl.h:
        * DAnCE/tests/NodeApplicationTest/NodeAppTest_RoundTrip.idl:
          Fixed incorrect doxygen file tag

Wed Jul 14 10:40:41 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* DAnCE/NodeApplicationManager/NodeApplicationManager_Impl.cpp
	  (init):
	* DAnCE/NodeManager/NodeDaemon_Impl.cpp (preparePlan):

	  Fixed "control reaches end of non-void function" warning.

	* DAnCE/ExecutionManager/ExecutionManager_Impl.cpp
	  (ExecutionManager_Impl):
	* DAnCE/ciao/NodeApplication_Impl.cpp:

	  Corrected emulated exception macro usage.

	  Fixed "unused parameter" warning.

Wed Jul 14 08:46:24 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* CCF/CCF/CIDL/CIDL.mpc:
	* CCF/CCF/IDL2/IDL2.mpc:

	  Fixed the MPC files that were busted.

Tue Jul 13 09:49:50 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

	* docs/releasenotes/index.html: Updated release notes with
	  information on static configurator and Nanbor's examples for
	  composition of RT applications using real-time extensions in
	  CIAO.

Tue Jul 13 04:27:19 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* performance-tests/Protocols/Controller/Controller.cpp:

	  Removed unused variable.

Mon Jul 12 11:06:54 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

	* CCF/Documentation/Build.html: Fixed a few URLs. Thanks to
	  Matthew Gillen <mgillen@bbn.com> for reporting this.

Sun Jul 11 06:07:12 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tools/XML_Helpers/Assembly_Handlers.inl:
        * tools/XML_Helpers/RTConfig_Handlers.inl:
        * tools/XML_Helpers/Softpkg_Handlers.inl:
          Fixed compile errors in Borland build, use full namespaces for the
          baseclass

Fri Jul  9 20:36:14 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/NodeApplicationManager/NodeApplicationManager_Impl.inl:

	  Fixed a warning.

Fri Jul  9 20:21:46 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* performance-tests/Protocols/Receiver/Receiver_svnt.h:
	* performance-tests/Protocols/Receiver/Receiver_svnt.cpp:
	* performance-tests/Protocols/Sender/Sender_svnt.h:
	* performance-tests/Protocols/Sender/Sender_svnt.cpp:

	  Removed them from the repo.

Thu Jul  8 17:16:34 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DAnCE/Config_Handlers/Config_Handlers.mpc:
        * DAnCE/RepositoryManager/RepositoryManager.mpc:
        * DAnCE/tests/Config_Handlers/handler_test.mpb:

          Made changes to not build these when exceptions=0

Thu Jul  8 16:59:26 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DAnCE/DomainApplicationManager/DomainApplicationManager.mpc:
        *
          DAnCE/DomainApplicationManager/DomainApplicationManager_Impl.cpp:
        * DAnCE/NodeManager/NodeDaemon_Impl.cpp:

          Fix build errors.

Thu Jul  8 16:53:06 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantSourceGenerator.cpp:

          Moved the call to populate_port_tables() from the
          component servant constructor to the end of
          the ciao_postactivate() method in the component servant,
          but it is commented out for now until related issues
          in DaNCe are resolved.

Thu Jul  8 16:46:55 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DAnCE/NodeApplicationManager/NodeApplicationManager_Impl.cpp:
        * DAnCE/ciao/NodeApp_CB_Impl.cpp:
        * DAnCE/ciao/NodeApp_CB_Impl.h:

          Fixing build errors.

Thu Jul  8 16:30:48 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DAnCE/ciao/NodeApplication_Impl.cpp:

          Made changes to fix emulated build errors.

Wed Jul  7 21:52:24 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* docs/releasenotes/index.html:

	  Revamped to provide a new look. Has updated information. The
	  notes are missing a link to dance.html which should have
	  information about DAnCE. Tao will take care of that.

Wed Jul  7 15:04:37 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

	* examples/OEP/BasicSP/descriptors/test.rtd:
	* examples/OEP/BasicSP/descriptors/svcmap.dat:
	* examples/OEP/BasicSP/descriptors/RTsvc.conf:
	* examples/OEP/BasicSP/descriptors/BasicSP-rt.cad:

	  Added these files to be used in RT version of BasicSP.

	* examples/OEP/BasicSP/NOTE.txt:

	  Updated notes on how to run with RTComponentServer.

Wed Jul  7 14:35:33 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

	* docs/static_ciao_contents.html:
	* docs/static_config_example.html:
	* docs/static_config_rtexample.html:

	  Updated documentation for CIAO Static configurator.

Wed Jul  7 12:22:04 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DAnCE/RepositoryManager/RepositoryManager_Impl.cpp:
        * DAnCE/RepositoryManager/RepositoryManager_Impl.h:
        * DAnCE/RepositoryManager/Repository_Manager.cpp:
        * DAnCE/RepositoryManager/Update_Plan.cpp:
        * DAnCE/RepositoryManager/Repository_Manager_conf.h:

          Addressed Ossama Othman's code review comments.
          Thanks Ossama.

Wed Jul  7 11:42:15 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* docs/TODO.html:
	  Some cosmetic changes.

Wed Jul  7 10:42:19 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* docs/releasenotes/switch.html:
	* docs/releasenotes/index.html:

	  Updated the file to follow the directory change for DAnCE.
	  Updated the link to the TODO list.

Wed Jul  7 09:53:56 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* docs/TODO.html:

  	  Overhauled the TODO completely keeping in mind the latest
	  thoughts and forces.

	* docs/todo.html:

	  Removed this from th erepository.

Tue Jul  6 18:05:35 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* CIAO-INSTALL.html:

	  Did a massive update to this since it was woefully outdated.

Tue Jul  6 14:34:16 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

 	* DAnCE/DomainApplicationManager/DomainApplicationManager_Impl.cpp

          Comment out the "dump plan" debugging statement, coz the current
          "DnC_dump" class is somewhat broken under VC71.

 	* DAnCE/ExecutionManager/ExecutionManager_Impl.h
 	* DAnCE/RepositoryManager/RepositoryManager_Impl.h

          Fixed warnings due to lacking including header files.

 	* DAnCE/ciao/CCM_Core.mpc
 	* DAnCE/tests/NodeApplicationTest/NodeAppTest.mpc
 	* DAnCE/NodeApplication/NodeApplication.mpc

          Fixed a bunch of linking errors under VC71.

          Now everything build fine under Windows with VC71.

Tue Jul  6 14:22:00 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* CCF/CCF/CIDL/CIDL.mpc:
	* CCF/CCF/CodeGenerationKit/CodeGenerationKit.mpc:
	* CCF/CCF/CompilerElements/CompilerElements.mpc:
	* CCF/CCF/IDL2/IDL2.mpc:
	* CCF/CCF/IDL3/IDL3.mpc:
	* CIDLC/CIDLC.mpc:

	  All of them require exceptions to be available. Therefore added
	  requires += exceptions.

	* CCF/CCF/CodeGenerationKit/IndentationXML.hpp:

	  Remove the comma at the end of the enum declaration.


	  All the above should fix compilation errors in Full_Reactors
	  builds.

Tue Jul  6 10:17:06 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

 	* DAnCE/DomainApplicationManager/DomainApplicationManager_Impl.cpp:

          Removed unnecessary comments.

Tue Jul  6 10:15:11 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DAnCE/NodeApplicationManager/ImplementationInfo.cpp (CIAO):
	* DAnCE/ExecutionManager/ExecutionManager_Impl.cpp (destroyManager):

	  Deleted some comments which has been addressed already.

Mon Jul  5 08:39:06 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* tools/Segment_Timer/Segment_Timer.cpp:
	* tools/static_configurator/Static_Assembly_Parser.cpp:

	  Fixed warnings that were caused from converting strings to
	  non-const char *.

Mon Jul  5 08:36:07 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tests/temp/README:
	* tests/temp/assembly/README:
	* tests/temp/assembly/client.cpp:
	* tests/temp/assembly/control.idl:
	* tests/temp/assembly/control.mpc:
	* tests/temp/assembly/run_test.pl:
	* tests/temp/assembly/server.cpp:

	  Completely removed them. They were not supposed to be shipped or
	  built. We have better test programs for those features now.

Mon Jul  5 08:27:39 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI.mpc:

	  Added requires += qt

	* examples/handcrafted/BasicSP_EC/EC/EC.mpc:
	* examples/handcrafted/BasicSP_EC2/BasicSP.mpc:
	* examples/handcrafted/BasicSP_EC2/RTEventService/RTEventService.mpc:

	  They should not be compiled inour daily builds at all. They are
	  not for that.

	* tests/RTCCM/DiffServ/Controller/Controller.mpc:
	* tests/RTCCM/DiffServ/Receiver/Receiver.mpc:
	* tests/RTCCM/DiffServ/Sender/Sender.mpc:

	  Change the library names. Else they clash with other things in
	  the build system.

Sun Jul  4 22:13:37 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* performance-tests/Benchmark/RoundTrip/RoundTrip_exec.cpp:
	* performance-tests/Benchmark/RoundTrip/RoundTrip_exec.h:
	* performance-tests/Benchmark/RoundTripClient/RoundTripClient_exec.cpp:
	* performance-tests/Benchmark/RoundTripClient/RoundTripClient_exec.h:

	  Added ciao_preactivate () and ciao_postactivate () methods.

	* performance-tests/Protocols/Receiver/Receiver.mpc:
	* performance-tests/Protocols/Sender/Sender.mpc:

	  Did the following

	  (1) Changed the name of the shared object to Protocol_*_stub and
	  Protocol_*_svnt. This was needed since there are other examples
	  that have named the libraries as Sender_stub and
	  Receiver_stub. Since all of these libraries are written to
	  $ACE_ROOT/lib, one library overwrites the other and all hell
	  breaks loose.

	  (2) The executor librares are not being compiled now. We have
	  used the requires += dummy to prevent them from compiling. The
	  executor code depends on a header file that hasn't been checked
	  in. I am informing the code author about this. Till the author
	  fixes the code, the executor code will  not be compiled.

	* performance-tests/Protocols/Controller/Controller.mpc:

	  They now link to Protocol_*_stubs.


Sun Jul  4 19:05:35 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* examples/handcrafted/BasicSP_EC/BasicSP.mpc:
	* examples/handcrafted/BasicSP_EC/BMClosedED/BMClosedED.mpc:
	* examples/handcrafted/BasicSP_EC/BMDevice/BMDevice.mpc:
	* examples/handcrafted/BasicSP_EC/BMDisplay/BMDisplay.mpc:
	* examples/handcrafted/BasicSP_EC/EC/EC.mpc:
	* examples/handcrafted/BasicSP_EC2/BMClosedED/BMClosedED.mpc:
	* examples/handcrafted/BasicSP_EC2/BMDevice/BMDevice.mpc:
	* examples/handcrafted/BasicSP_EC2/BMDisplay/BMDisplay.mpc:
	* examples/handcrafted/BasicSP_EC2/EC/EC.mpc:

	  Do not compile these. They wouldn't compile at all. These are
	  useful examples that are needed for EC integration.

Sun Jul  4 18:59:09 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* examples/Hello/Receiver/Receiver_exec.cpp:
	* examples/OEP/BasicSP/BMClosedED/BMClosedED_exec.cpp:
	* examples/OEP/BasicSP/BMDevice/BMDevice_exec.cpp:
	* examples/OEP/BasicSP/BMDisplay/BMDisplay_exec.cpp:
	* examples/OEP/Display/NavDisplay/NavDisplay_exec.cpp:
	* examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.cpp:

	  No need to register value factories explicitly. They are now
	  generated in the servant code.

Sun Jul  4 18:40:10 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * performance-tests/Protocols/Receiver/ReceiverImpl.ccd
	* performance-tests/Protocols/Receiver/Receiver_svnt.h
	* performance-tests/Protocols/Sender/SenderImpl.ccd
	* performance-tests/Protocols/Sender/Sender_svnt.h:

	  Removed the generated code form the repository.

Sun Jul  4 11:14:03 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* DAnCE/ciao/CCM_Core.mpc:

	  Restructured things so that CIAO_DnC_Server doesn't need to be
	  linked with stub projects.

	* DAnCE/ciao/Container_Base.h:

	  Added an include for the xport file.

Sun Jul  4 10:17:52 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* DAnCE/ciao/CCM_Core.mpc:

	  The deployment_stub should depend on the CIAO_DnC_Server. This
	  would need some restructuring. I will do this shortly.

Sun Jul  4 09:07:20 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* CIAO.mwc:

	  Added DAnCE and removed DnC

	* DAnCE/RepositoryManager/Repository_Manager.cpp:
	* DAnCE/ExecutionManager/Execution_Manager.cpp:

	  Fixed warnings in our daily builds.

	* DAnCE/NodeManager/NodeDaemon.mpc:

	  Use CIAO_DnC_Server instead of  CIAO_Server.

	* DAnCE/ciao/CCM_Core.mpc:

	  Removed unneeded dependancies.

Sat Jul  3 10:03:22 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DAnCE/ciao/Deployment_Base.idl:
	* DAnCE/ciao/Deployment_Data.idl:
	* DAnCE/ciao/Deployment.idl:
	  The original Deployment.idl is splited into the above 3 files to
	  get rid of the VC warning.

	* DAnCE/ciao/Deployment_Ex.idl:
	  This file is removed due to the bad name.

	* DAnCE/ciao/CCM_Core.idl:
	  The MPC file is changed to follow the above changes.

Thu Jul  1 16:27:07 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * CIAOTAO.mwc:
        * DAnCE/tests/Config_Handlers/handler_test.mpb:

          Updated mpc to build the new DAnCE directory.

Thu Jul  1 16:19:21 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        *
          DAnCE/DomainApplicationManager/DomainApplicationManager_Impl.cpp:
        * DAnCE/RepositoryManager/RepositoryManager_Impl.h:
        * DAnCE/tests/Config_Handlers/handler_test.mpb:
        * DAnCE/tests/scripts/BasicSP/basicNodeDaemon.pl:

          Updated the files to include the right header files.

Thu Jul  1 16:01:12 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DADAnCE/Deployment.xsd
        * DAnCE/Deployment.mwc:
        * DAnCE/Deployment.xsd.orig:
        * DAnCE/XMI.xsd:
        * DAnCE/XMI.xsd.orig:
        * DAnCE/Config_Handlers/Any_Handler.cpp:
        * DAnCE/Config_Handlers/Any_Handler.h:
        * DAnCE/Config_Handlers/Basic_Handler.cpp:
        * DAnCE/Config_Handlers/Basic_Handler.h:
        * DAnCE/Config_Handlers/CAD_Handler.cpp:
        * DAnCE/Config_Handlers/CAD_Handler.h:
        * DAnCE/Config_Handlers/CEPE_Handler.h
        * DAnCE/Config_Handlers/CEPE_Handler.cpp:
        * DAnCE/Config_Handlers/CPK_Handler.cpp:
        * DAnCE/Config_Handlers/CPK_Handler.h:
        * DAnCE/Config_Handlers/CPR_Handler.cpp:
        * DAnCE/Config_Handlers/CPR_Handler.h:
        * DAnCE/Config_Handlers/Cap_Handler.cpp:
        * DAnCE/Config_Handlers/Cap_Handler.h:
        * DAnCE/Config_Handlers/CompImplDesc_Handler.cpp:
        * DAnCE/Config_Handlers/CompImplDesc_Handler.h:
        * DAnCE/Config_Handlers/CompIntrDesc_Handler.cpp:
        * DAnCE/Config_Handlers/CompIntrDesc_Handler.h:
        * DAnCE/Config_Handlers/CompPkgDesc_Handler.cpp:
        * DAnCE/Config_Handlers/CompPkgDesc_Handler.h:
        * DAnCE/Config_Handlers/Config_Error_Handler.cpp:
        * DAnCE/Config_Handlers/Config_Error_Handler.h:
        * DAnCE/Config_Handlers/Config_Handler_export.h:
        * DAnCE/Config_Handlers/Config_Handlers.mpc:
        * DAnCE/Config_Handlers/DT_Handler.cpp:
        * DAnCE/Config_Handlers/DT_Handler.h:
        * DAnCE/Config_Handlers/Deployment.h:
        * DAnCE/Config_Handlers/DnC_Dump.cpp:
        * DAnCE/Config_Handlers/DnC_Dump.h:

          Checked in all the XML handlers needed by DAnCE.

Thu Jul  1 15:54:15 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DAnCE/Config_Handlers/Domain_Handler.cpp:
        * DAnCE/Config_Handlers/Domain_Handler.h:
        * DAnCE/Config_Handlers/ERE_Handler.cpp:
        * DAnCE/Config_Handlers/ERE_Handler.h:
        * DDAnCE/Config_Handlers/IAD_Handler.h
        * DAnCE/Config_Handlers/IAD_Handler.cpp:
        * DAnCE/Config_Handlers/ID_Handler.cpp:
        * DAnCE/Config_Handlers/ID_Handler.h:
        * DAnCE/Config_Handlers/IR_Handler.cpp:
        * DAnCE/Config_Handlers/IR_Handler.h:
        * DAnCE/Config_Handlers/MID_Handler.cpp:
        * DAnCE/Config_Handlers/MID_Handler.h:
        * DAnCE/Config_Handlers/NIA_Handler.cpp:
        * DAnCE/Config_Handlers/NIA_Handler.h:
        * DAnCE/Config_Handlers/PCI_Handler.cpp:
        * DAnCE/Config_Handlers/PCI_Handler.h:
        * DAnCE/Config_Handlers/PC_Handler.cpp:
        * DAnCE/Config_Handlers/PC_Handler.h:
        * DAnCE/Config_Handlers/Plan_Handler.cpp:
        * DAnCE/Config_Handlers/Plan_Handler.h:
        * DAnCE/Config_Handlers/Process_Element.cpp:
        * DAnCE/Config_Handlers/Process_Element.h:
        * DAnCE/Config_Handlers/Process_Element_T.cpp:
        * DAnCE/Config_Handlers/Process_Element_T.h:
        * DAnCE/Config_Handlers/Property_Handler.cpp:
        * DAnCE/Config_Handlers/Property_Handler.h:
        * DAnCE/Config_Handlers/RS_Handler.cpp:
        * DAnCE/Config_Handlers/RS_Handler.h:
        * DAnCE/Config_Handlers/RUK_Handler.cpp:
        * DAnCE/Config_Handlers/RUK_Handler.h:
        * DAnCE/Config_Handlers/Requirement_Handler.cpp:
        * DAnCE/Config_Handlers/Requirement_Handler.h:
        * DAnCE/Config_Handlers/SPK_Handler.cpp:
        * DAnCE/Config_Handlers/SPK_Handler.h:
        * DAnCE/Config_Handlers/SP_Handler.cpp:
        * DAnCE/Config_Handlers/SP_Handler.h:
        * DAnCE/Config_Handlers/TPD_Handler.cpp:
        * DAnCE/Config_Handlers/TPD_Handler.h:
        * DAnCE/Config_Handlers/Utils.cpp:
        * DAnCE/Config_Handlers/Utils.h:
        * DAnCE/Config_Handlers/XercesString.cpp:
        * DAnCE/Config_Handlers/XercesString.h:

          First cut check-in for XML handlers.



Thu Jul  1 15:51:14 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DAnCE/DomainApplicationManager/Deployment_Configuration.cpp:
        * DAnCE/DomainApplicationManager/Deployment_Configuration.h:
        * DAnCE/DomainApplicationManager/Deployment_Configuration.inl:
        * DAnCE/DomainApplicationManager/DomainApplicationManager.mpc:
        *
          DAnCE/DomainApplicationManager/DomainApplicationManager_Export.h:
        *
          DAnCE/DomainApplicationManager/DomainApplicationManager_Impl.cpp:
        * DAnCE/DomainApplicationManager/DomainApplicationManager_Impl.h:
        *
          DAnCE/DomainApplicationManager/DomainApplicationManager_Impl.inl:
        * DAnCE/ExecutionManager/ExecutionManager.idl:
        * DAnCE/ExecutionManager/ExecutionManager.mpc:
        * DAnCE/ExecutionManager/ExecutionManager_Impl.cpp:
        * DAnCE/ExecutionManager/ExecutionManager_Impl.h:
        * DAnCE/ExecutionManager/ExecutionManager_Impl.inl:
        * DAnCE/ExecutionManager/ExecutionManager_stub_export.h:
        * DAnCE/ExecutionManager/Execution_Manager.cpp:

          Checking in the DomainApplicationManager and ExecutionManager
          interfaces.

Thu Jul  1 15:47:45 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DAnCE/NodeApplication/NodeApplication.cpp:
        * DAnCE/NodeApplication/NodeApplication.mpc:
        * DAnCE/NodeApplicationManager/CIAO_NAM_Export.h:
        * DAnCE/NodeApplicationManager/ImplementationInfo.cpp:
        * DAnCE/NodeApplicationManager/ImplementationInfo.h:
        * DAnCE/NodeApplicationManager/NodeApplicationManager.mpc:
        * DAnCE/NodeApplicationManager/NodeApplicationManager_Impl.cpp:
        * DAnCE/NodeApplicationManager/NodeApplicationManager_Impl.h:
        * DAnCE/NodeApplicationManager/NodeApplicationManager_Impl.inl:
        * DAnCE/NodeManager/NodeDaemon.idl:
        * DAnCE/NodeManager/NodeDaemon.mpc:
        * DAnCE/NodeManager/NodeDaemon_Impl.cpp:
        * DAnCE/NodeManager/NodeDaemon_Impl.h:
        * DAnCE/NodeManager/NodeDaemon_Impl.inl:
        * DAnCE/NodeManager/NodeDaemon_stub_export.h:
        * DAnCE/NodeManager/Node_Daemon.cpp:

          Checked in the NodeApplication, NodeApplicationManager
          and NodeManager code.

Thu Jul  1 15:45:48 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DAnCE/RepositoryManager/RepositoryManager.idl:
        * DAnCE/RepositoryManager/RepositoryManager.mpc:
        * DAnCE/RepositoryManager/RepositoryManager_Impl.cpp:
        * DAnCE/RepositoryManager/RepositoryManager_Impl.h:
        * DAnCE/RepositoryManager/Repository_Manager.cpp:
        * DAnCE/RepositoryManager/Update_Plan.cpp:
        * DAnCE/RepositoryManager/Update_Plan.h:

          Moved the RepositoryManager directory here.

Thu Jul  1 15:40:06 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DAnCE/ciao/CCM_Base.idl:
        * DAnCE/ciao/CCM_Component.idl:
        * DAnCE/ciao/CCM_Container.idl:
        * DAnCE/ciao/CCM_Container_Ex.idl:
        * DAnCE/ciao/CCM_Core.mpc:
        * DAnCE/ciao/CCM_Event.idl:
        * DAnCE/ciao/CCM_Transaction.idl:
        * DAnCE/ciao/CIAO_Client_Export.h:
        * DAnCE/ciao/CIAO_Container_Export.h:
        * DAnCE/ciao/CIAO_Server_Export.h:
        * DAnCE/ciao/CIAO_Value.idl:
        * DAnCE/ciao/CIAO_common.h:
        * DAnCE/ciao/Client_init.cpp:
        * DAnCE/ciao/Client_init.h:
        * DAnCE/ciao/Components.idl:
        * DAnCE/ciao/ComponentsC.h:
        * DAnCE/ciao/ComponentsS.h:
        * DAnCE/ciao/Container_Base.cpp:
        * DAnCE/ciao/Container_Base.h:
        * DAnCE/ciao/Container_Base.inl:
        * DAnCE/ciao/Container_Base.pidl:
        * DAnCE/ciao/Cookies.cpp:
        * DAnCE/ciao/Cookies.h:
        * DAnCE/ciao/Cookies.inl:
        * DAnCE/ciao/CosPersistentState.idl:
        * DAnCE/ciao/Deployment.idl:
        * DAnCE/ciao/Deployment_Core.idl:
        * DAnCE/ciao/Deployment_stub_export.h:
        * DAnCE/ciao/Deployment_svnt_export.h:
        * DAnCE/ciao/NodeApp_CB_Impl.cpp:
        * DAnCE/ciao/NodeApp_CB_Impl.h:
        * DAnCE/ciao/NodeApplication_CallBack.idl:
        * DAnCE/ciao/NodeApplication_Impl.cpp:
        * DAnCE/ciao/NodeApplication_Impl.h:
        * DAnCE/ciao/NodeApplication_Impl.inl:
        * DAnCE/ciao/Servant_Impl_Base.cpp:
        * DAnCE/ciao/Servant_Impl_Base.h:
        * DAnCE/ciao/Servant_Impl_T.cpp:
        * DAnCE/ciao/Servant_Impl_T.h:
        * DAnCE/ciao/Server_init.cpp:
        * DAnCE/ciao/Server_init.h:
        * DAnCE/ciao/Version.h:

          Moving DnC/ciao over here.

Thu Jul  1 15:37:33 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DAnCE/tests/Config_Handlers/CompImplDesc_Handler_Test.cpp:
        * DAnCE/tests/Config_Handlers/CompIntrDesc_Handler_Test.cpp:
        * DAnCE/tests/Config_Handlers/CompPkgDesc_Handler_Test.cpp:
        * DAnCE/tests/Config_Handlers/Domain_Handler_Test.cpp:
        * DAnCE/tests/Config_Handlers/Handler_Test.cpp:
        * DAnCE/tests/Config_Handlers/Handler_Test.h:
        * DAnCE/tests/Config_Handlers/Handler_Test.i:
        * DAnCE/tests/Config_Handlers/Handler_Tests.mpc:
        * DAnCE/tests/Config_Handlers/IAD_Handler_Test.cpp:
        * DAnCE/tests/Config_Handlers/PC_Handler_Test.cpp:
        * DAnCE/tests/Config_Handlers/Plan_Handler_Test.cpp:
        * DAnCE/tests/Config_Handlers/handler_test.mpb:

          Checking in the tests for the XML handlers.

Thu Jul  1 15:29:57 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DAnCE/tests/Config_Handlers/HUDisplay/Airframe.ccd:
        * DAnCE/tests/Config_Handlers/HUDisplay/Airframe.cid:
        * DAnCE/tests/Config_Handlers/HUDisplay/Airframe.cpd:
        * DAnCE/tests/Config_Handlers/HUDisplay/Airframe_Exec.iad:
        * DAnCE/tests/Config_Handlers/HUDisplay/Airframe_Stub.iad:
        * DAnCE/tests/Config_Handlers/HUDisplay/Airframe_Svnt.iad:
        * DAnCE/tests/Config_Handlers/HUDisplay/Deployment.xsd:
        * DAnCE/tests/Config_Handlers/HUDisplay/Domain.cdd:
        * DAnCE/tests/Config_Handlers/HUDisplay/GPS.ccd:
        * DAnCE/tests/Config_Handlers/HUDisplay/GPS.cid:
        * DAnCE/tests/Config_Handlers/HUDisplay/GPS.cpd:
        * DAnCE/tests/Config_Handlers/HUDisplay/GPS_Exec.iad:
        * DAnCE/tests/Config_Handlers/HUDisplay/GPS_Stub.iad:
        * DAnCE/tests/Config_Handlers/HUDisplay/GPS_Svnt.iad:
        * DAnCE/tests/Config_Handlers/HUDisplay/HUDisplay.cdp:
        * DAnCE/tests/Config_Handlers/HUDisplay/HUDisplay.cid:
        * DAnCE/tests/Config_Handlers/HUDisplay/HUDisplay.cpd:
        * DAnCE/tests/Config_Handlers/HUDisplay/HUDisplay.pcd:
        * DAnCE/tests/Config_Handlers/HUDisplay/Libraries.iad:
        * DAnCE/tests/Config_Handlers/HUDisplay/NavDisplay.ccd:
        * DAnCE/tests/Config_Handlers/HUDisplay/NavDisplay.cid:
        * DAnCE/tests/Config_Handlers/HUDisplay/NavDisplay.cpd:
        * DAnCE/tests/Config_Handlers/HUDisplay/NavDisplay_Exec.iad:
        * DAnCE/tests/Config_Handlers/HUDisplay/NavDisplay_Stub.iad:
        * DAnCE/tests/Config_Handlers/HUDisplay/NavDisplay_Svnt.iad:
        * DAnCE/tests/Config_Handlers/HUDisplay/Timer.ccd:
        * DAnCE/tests/Config_Handlers/HUDisplay/Timer.cid:
        * DAnCE/tests/Config_Handlers/HUDisplay/Timer.cpd:
        * DAnCE/tests/Config_Handlers/HUDisplay/Timer_Exec.iad:
        * DAnCE/tests/Config_Handlers/HUDisplay/Timer_Stub.iad:
        * DAnCE/tests/Config_Handlers/HUDisplay/Timer_Svnt.iad:
        * DAnCE/tests/Config_Handlers/HUDisplay/XMI.xsd:
        * DAnCE/tests/Config_Handlers/HUDisplay/package.tpd:

          Checking in the HUDisplay deployment descriptors.

Thu Jul  1 15:26:54 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DAnCE/tests/NodeApplicationTest/NodeAppTest.mpc:
        * DAnCE/tests/NodeApplicationTest/NodeAppTest_RoundTrip.cidl:
        * DAnCE/tests/NodeApplicationTest/NodeAppTest_RoundTrip.idl:
        * DAnCE/tests/NodeApplicationTest/NodeApp_test_client.cpp:
        * DAnCE/tests/NodeApplicationTest/NodeApp_test_client_ex.cpp:
        * DAnCE/tests/NodeApplicationTest/NodeApp_test_client_simple.cpp:
        * DAnCE/tests/NodeApplicationTest/README:
        * DAnCE/tests/NodeApplicationTest/RoundTrip_exec.cpp:
        * DAnCE/tests/NodeApplicationTest/RoundTrip_exec.h:
        * DAnCE/tests/NodeApplicationTest/RoundTrip_exec_export.h:
        * DAnCE/tests/NodeApplicationTest/RoundTrip_stub_export.h:
        * DAnCE/tests/NodeApplicationTest/RoundTrip_svnt_export.h:
        * DAnCE/tests/NodeApplicationTest/run_test.pl:
        * DAnCE/tests/NodeApplicationTest/run_test_ex.pl:
        * DAnCE/tests/NodeApplicationTest/run_test_simple.pl:
        * DAnCE/tests/scripts/BasicSP/basicNodeDaemon.pl:
        * DAnCE/tests/scripts/BasicSP/basicsp.dat:

          First cut checkins for new DAnCE directory.

Thu Jul  1 14:46:24 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Plan_Handler.cpp:

          Removed includes to Process_Basic_Type.h.

Thu Jul  1 13:20:08 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Plan_Handler.cpp:

          Removed includes to Process_Basic_Type.h

Thu Jul  1 12:16:41 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/ExecutionManager/Execution_Manager.cpp:
        * DnC/ExecutionManager/ExecutionManager_Impl.h:
        * DnC/ExecutionManager/ExecutionManager_Impl.cpp:
        * DnC/NodeManager/Node_Daemon.cpp:
        * DnC/NodeManager/NodeDaemon_Impl.h:
        * DnC/NodeManager/NodeDaemon_Impl.cpp:

          Addressed comments left by Ossama after his code review.

Thu Jul  1 12:02:05 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/CAD_Handler.cpp:
        * DnC/Config_Handlers/CPR_Handler.cpp:
        * DnC/Config_Handlers/Cap_Handler.cpp:
        * DnC/Config_Handlers/CompImplDesc_Handler.cpp:
        * DnC/Config_Handlers/CompIntrDesc_Handler.cpp:
        * DnC/Config_Handlers/CompPkgDesc_Handler.cpp:
        * DnC/Config_Handlers/Config_Handlers.mpc:
        * DnC/Config_Handlers/Domain_Handler.cpp:
        * DnC/Config_Handlers/IAD_Handler.cpp:
        * DnC/Config_Handlers/IR_Handler.cpp:
        * DnC/Config_Handlers/NIA_Handler.cpp:
        * DnC/Config_Handlers/PCI_Handler.cpp:
        * DnC/Config_Handlers/PC_Handler.cpp:
        * DnC/Config_Handlers/Plan_Handler.cpp:
        * DnC/Config_Handlers/Process_Basic_Type.h:
        * DnC/Config_Handlers/Process_Basic_Type.i:
        * DnC/Config_Handlers/Process_Element_T.cpp:
        * DnC/Config_Handlers/TPD_Handler.cpp:
        * DnC/Config_Handlers/Utils.cpp:
        * DnC/Config_Handlers/Utils.h:
        * DnC/Config_Handlers/Process_Basic_Type.h:
        * DnC/Config_Handlers/Process_Basic_Type.i:

          Moved the code in Process_Basic_Type.h and
          Process_Basic_Type.i to Utils.h and Utils.cpp,
          as all the utility functions are defined
          in that file.

Thu Jul  1 11:37:14 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* docs/todo.html:
	  Added two bullets in the Todo list.

Thu Jul  1 11:06:42 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Process_Element_T.cpp:
        * DnC/Config_Handlers/Process_Element_T.h:

          Added the files to follow ACE coding standards.

        * DnC/Config_Handlers/Process_Element.tpp:
        * DnC/Config_Handlers/Process_Element.i:

          Removed these files, as they were not following the
          ACE standards.

          The code in the above files have been moved to
          Process_Element_T.cpp and Process_Element_T.h.

Thu Jul  1 10:56:28 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* docs/releasenotes/index.html:
	* docs/todo.html:

	  Updated the todo list.

Wed Jun 30 22:29:51 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* docs/releasenotes/switch.html:
	* docs/releasenotes/index.html:
          Updated the release note. I will work on the to-do list
	  as well.

Wed Jun 30 18:01:58 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* CIDLC/ServantSourceGenerator.cpp:

	  Fixed another bug in the receptacle code generation. Thanks to
	  Gary Duzan for reporting the problem <gduzan at bbn dot com>.

Wed Jun 30 17:16:53 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Process_Element.tpp:

          Added code to catch DOM exceptions.

Wed Jun 30 17:00:10 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/RepositoryManager_Impl.cpp:
        * DnC/RepositoryManager/RepositoryManager_Impl.h:
        * DnC/RepositoryManager/Repository_Manager.cpp:

          Added code to catch parser exceptions for
          incorrect URls

Wed Jun 30 13:32:08 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DnC/tests/NodeApplicationTest/NodeAppTest.mpc:

	  Removed "after += CIAO_DnC_Container" from the stub project.

Wed Jun 30 13:14:50 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DnC/ciao/CCM_Core.mpc:

	  Added -St to Deployment_stub probject to reduce the size of
	  generated code.

Wed Jun 30 10:59:55 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* CIAO.mwc:
	* CIAOTAO.mwc:

	  Added the new DnC directories.

	* DnC/ciao/CCM_Core.mpc:

	  Changed the name of the libraries generated. We should not
	  overwrite the original ones.

	* DnC/Config_Handlers/Config_Handlers.mpc:
	* DnC/DomainApplicationManager/DomainApplicationManager.mpc:
	* DnC/ExecutionManager/ExecutionManager.mpc:
	* DnC/NodeApplication/NodeApplication.mpc:
	* DnC/NodeApplicationManager/NodeApplicationManager.mpc:
	* DnC/NodeManager/NodeDaemon.mpc:
	* DnC/RepositoryManager/RepositoryManager.mpc:
	* DnC/tests/NodeApplicationTest/NodeAppTest.mpc:

	  Use the new libraries.

Wed Jun 30 09:26:42 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/Hello/Sender/starter.cpp:
        * examples/OEP/BasicSP/BMClosedED/BMClosedED_exec.cpp:
        * examples/OEP/BasicSP/BMDevice/BMDevice_exec.cpp:
        * examples/OEP/BasicSP/BMDevice/BMDevice_exec.h:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay_exec.cpp:
        * examples/OEP/BasicSP/EC/controller.cpp:
        * examples/OEP/Display/NavDisplay/NavDisplay_exec.cpp:
        * examples/OEP/Display/RateGen/RateGen_exec.cpp:
        * examples/OEP/Display/RateGen/controller.cpp:

          Changes to eliminate build warnings (mostly assignments of
          const char* to char*) and cosmetic changes.

Wed Jun 30 08:37:15 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/Hello/Receiver/Receiver_exec.cpp:

          In Receiver_exec_i::ccm_activate(), changed the construction of
          the argv argument passed to ORB_init() to eliminate a const
          char* to char* conversion warning.

Tue Jun 29 15:34:00 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* CIDLC/ServantSourceGenerator.cpp:

	  We were not setting the sequence length when we were iterating
	  over the sequence of connections for a "uses multiple"
	  case. Thanks Ed Mulholland for reporting this.

Tue Jun 29 01:40:25 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DnC/ExecutionManager/ExecutionManager_Impl.cpp:
	* DnC/ExecutionManager/ExecutionManager_Impl.h:
	* DnC/NodeApplicationManager/ImplementationInfo.cpp:
	* DnC/NodeApplicationManager/NodeApplicationManager_Impl.cpp:
	* DnC/NodeApplicationManager/NodeApplicationManager_Impl.h:
	* DnC/ciao/Container_Base.cpp:
	* DnC/ciao/NodeApplication_Impl.cpp:
	* DnC/ciao/NodeApplication_Impl.h:
	* DnC/ciao/NodeApplication_Impl.inl:

	Fixed some of Ossama's comments, added exception catching clauses
	in NodeApplication.

Tue Jun 29 06:18:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Protocols/Controller/Controller.mpc:
          Changed project name to avoid duplicate project names

Mon Jun 28 11:58:01 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/tests/RobotAssembly/RobotAssembly.mpc:
        * DnC/tests/RobotAssembly/RobotAssembly.mwc:
        * DnC/tests/RobotAssembly/RobotAssembly_stub_export.h:
        * DnC/tests/RobotAssembly/RobotAssembly_svnt_export.h:
        * DnC/tests/RobotAssembly/Robot_Base.idl:
        *
          DnC/tests/RobotAssembly/HumanMachineInterface/HumanMachineInterface.cidl:
        *
          DnC/tests/RobotAssembly/HumanMachineInterface/HumanMachineInterface.idl:
        *
          DnC/tests/RobotAssembly/HumanMachineInterface/HumanMachineInterface.mpc:
        *
          DnC/tests/RobotAssembly/HumanMachineInterface/HumanMachineInterface_exec.cpp:
        *
          DnC/tests/RobotAssembly/HumanMachineInterface/HumanMachineInterface_exec.h:
        *
          DnC/tests/RobotAssembly/HumanMachineInterface/HumanMachineInterface_exec_export.h:
        *
          DnC/tests/RobotAssembly/HumanMachineInterface/HumanMachineInterface_stub_export.h:
        *
          DnC/tests/RobotAssembly/HumanMachineInterface/HumanMachineInterface_svnt_export.h:
        *
          DnC/tests/RobotAssembly/ManagementWorkInstructions/ManagementWorkInstructions.cidl:
        *
          DnC/tests/RobotAssembly/ManagementWorkInstructions/ManagementWorkInstructions.idl:
        *
          DnC/tests/RobotAssembly/ManagementWorkInstructions/ManagementWorkInstructions.mpc:
        *
          DnC/tests/RobotAssembly/ManagementWorkInstructions/ManagementWorkInstructions_exec.cpp:
        *
          DnC/tests/RobotAssembly/ManagementWorkInstructions/ManagementWorkInstructions_exec.h:
        *
          DnC/tests/RobotAssembly/ManagementWorkInstructions/ManagementWorkInstructions_exec_export.h:
        *
          DnC/tests/RobotAssembly/ManagementWorkInstructions/ManagementWorkInstructions_stub_export.h:
        *
          DnC/tests/RobotAssembly/ManagementWorkInstructions/ManagementWorkInstructions_svnt_export.h:
        *
          DnC/tests/RobotAssembly/PalletConveyorManager/PalletConveyorManager.cidl:
        *
          DnC/tests/RobotAssembly/PalletConveyorManager/PalletConveyorManager.idl:
        *
          DnC/tests/RobotAssembly/PalletConveyorManager/PalletConveyorManager.mpc:
        *
          DnC/tests/RobotAssembly/PalletConveyorManager/PalletConveyorManager_exec.cpp:
        *
          DnC/tests/RobotAssembly/PalletConveyorManager/PalletConveyorManager_exec.h:
        *
          DnC/tests/RobotAssembly/PalletConveyorManager/PalletConveyorManager_exec_export.h:
        *
          DnC/tests/RobotAssembly/PalletConveyorManager/PalletConveyorManager_stub_export.h:
        *
          DnC/tests/RobotAssembly/PalletConveyorManager/PalletConveyorManager_svnt_export.h:
        * DnC/tests/RobotAssembly/RobotManager/RobotManager.cidl:
        * DnC/tests/RobotAssembly/RobotManager/RobotManager.idl:
        *
          DnC/tests/RobotAssembly/WatchSettingManager/WatchSettingManager.cidl:
        *
          DnC/tests/RobotAssembly/WatchSettingManager/WatchSettingManager.idl:
        *
          DnC/tests/RobotAssembly/WatchSettingManager/WatchSettingManager.mpc:
        *
          DnC/tests/RobotAssembly/WatchSettingManager/WatchSettingManager_exec.cpp:
        *
          DnC/tests/RobotAssembly/WatchSettingManager/WatchSettingManager_exec.h:
        *
          DnC/tests/RobotAssembly/WatchSettingManager/WatchSettingManager_exec_export.h:
        *
          DnC/tests/RobotAssembly/WatchSettingManager/WatchSettingManager_stub_export.h:
        *
          DnC/tests/RobotAssembly/WatchSettingManager/WatchSettingManager_svnt_export.h:
        * DnC/tests/RobotAssembly/RobotManager/RobotManager_svnt_export.h:
        * DnC/tests/RobotAssembly/RobotManager/RobotManager_stub_export.h:
        * DnC/tests/RobotAssembly/RobotManager/RobotManager_exec_export.h:
        * DnC/tests/RobotAssembly/RobotManager/RobotManager.mpc:
        * DnC/tests/RobotAssembly/RobotManager/RobotManager_exec.cpp:
        * DnC/tests/RobotAssembly/RobotManager/RobotManager_exec.h:

          RobotAssembly example deployment scenario files.

Mon Jun 28 11:33:00 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

	* DnC/Deployment.mwc:

	  DnC tests projects reincluded to the compilation.

	* DnC/tests/Config_Handlers/handler_test.mpb:

	  Added after statement to ensure Config_Handlers is compiled before
	  compiling handler_tests.

Mon Jun 28 11:18:00 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

	* DnC/Config_Handlers/DnC_Dump.cpp:
	* DnC/Config_Handlers/DnC_Dump.h:

	  Fixed the VC6 errors by excluding the DnC dump functionality on the
	  compilers ACE_HAS_BROKEN_NESTED_TEMPLATES.

Mon Jun 28 10:44:00 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

	* DnC/tests/Config_Handlers/Handler_Test.cpp:
	* DnC/tests/Config_Handlers/CompImplDesc_Handler_Test.cpp:
	* DnC/tests/Config_Handlers/CompIntrDesc_Handler_Test.cpp:
	* DnC/tests/Config_Handlers/CompPkgDesc_Handler_Test.cpp:
	* DnC/tests/Config_Handlers/Domain_Handler_Test.cpp:
	* DnC/tests/Config_Handlers/Handler_Test.h:
	* DnC/tests/Config_Handlers/IAD_Handler_Test.cpp:
	* DnC/tests/Config_Handlers/PC_Handler_Test.cpp:
	* DnC/tests/Config_Handlers/Plan_Handler_Test.cpp:
	* DnC/tests/Config_Handlers/handler_test.mpb:

	  Fixed the VC6 errors by excluding the DnC tests on the
	  compilers ACE_HAS_BROKEN_NESTED_TEMPLATES.

Mon Jun 28 10:40:00 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

	* DnC/tests/Config_Handlers/RobotAssembly/README.html:

	  Deleted "file://" from -p & -d options of executor.

Mon Jun 28 08:03:25 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* CIDLC/ServantSourceGenerator.cpp:

	  Fixed a bug with code generation for uses multiple. Thanks to Ed
	  Mulholland for reporting the problem.

Mon Jun 28 00:18:04 2004  Irfan Pyarali  <irfan@oomworks.com>

	* CIAO/performance-tests/Protocols:

	  Added new test.  Closely mirrors
	  $TAO_ROOT/performance-tests/Protocols but uses CCM components
	  rather that TAO applications.

Sun Jun 27 12:59:04 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/tests/scripts/BasicSP/basicNodeDaemon.pl:
        * DnC/tests/scripts/BasicSP/basicsp.dat:
        * DnC/tests/scripts/RobotAssembly/robotNodeDaemon.pl:
        * DnC/tests/scripts/RobotAssembly/robotassembly.dat:

          Added the scripts directory to help in the integrated
          testing.

Sun Jun 27 12:50:12 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/tests/Config_Handlers/HUDisplay/Deployment.xsd:
        * DnC/tests/Config_Handlers/HUDisplay/XMI.xsd:

          Checked in the schema files into the repository to assist
          unit and integration testing.

Sun Jun 27 12:20:23 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/tests/Config_Handlers/RobotAssembly/DeploymentPlan.cdp:

          Updated the plan descriptor to use just two nodes rather
          than five.

Sun Jun 27 11:56:55 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DnC/tests/NodeApplicationTest/NodeAppTest.mpc:

	  Fixed compile errors in our daily builds.

Fri Jun 25 23:59:00 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

	* Process_Element.cpp
	* Process_Element.h
	* Process_Element.i
	* Process_Element.tpp

          Re-organize the code to avoid sutble potential problems.
          Bala made above changes on my machine.

Fri Jun 25 17:35:00 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

	* DnC/tests/NodeApplicationTest/NodeApp_test_client.cpp:

          Fixed compilation problems with VC6.  Varibles defined in for loop
          remain persistant out of scope of the for loop.

Fri Jun 25 10:51:26 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* CIDLC/ServantHeaderGenerator.cpp:
	* CIDLC/ServantSourceGenerator.cpp:

	  Fixed compilation problems with VC6. To put it short VC6 just
	  cannot handle templates properly. Thanks to gan Deng for reporting
	  the problem.

Thu Jun 24 17:25:36 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/ciao/NodeApplication_Impl.cpp:

          Added ACE_TRY clock to the code.

Thu Jun 24 17:13:20 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* CIDLC/ServantHeaderGenerator.cpp:
	* CIDLC/ServantSourceGenerator.cpp:

	  Reverted changes to

	  "Fri Jun  4 18:16:47 2004  Jeff Parsons
	  <j.parsons@vanderbilt.edu>"  to get things going on VC6 builds.

	  Added changes to ensure that there is a gap between "<" brackets
	  for templates and the scoping operator "::" Thanks to Ed
	  Mulholland for reporting the problem.

	* DnC/ciao/Servant_Impl_T.cpp:
	* DnC/ciao/Servant_Impl_T.h:
	* ciao/Servant_Impl_T.cpp:
	* ciao/Servant_Impl_T.h:

	  Do not use traits as template parameters. VC6 cannot just handle
	  all this. Thanks to Theckla Louchios <theckla.louchios@lmco.com>
	  for reporting the problem.

Thu Jun 24 16:40:53 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DnC/RepositoryManager/RepositoryManager.mpc:
	* DnC/RepositoryManager/Repository_Manager.cpp:
	  Some more changes for VC6.

Thu Jun 24 15:34:53 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* CIAOTAO.mwc
	  Reversed the change to avoid trouble for people who don't use
	  the new DnC framework.

Thu Jun 24 15:17:45 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* DnC/Config_Handlers/Config_Handlers.mpc
	* DnC/Config_Handlers/DnC_Dump.cpp
	* DnC/Config_Handlers/DnC_Dump.h
	* DnC/Config_Handlers/Process_Element.tpp
	* DnC/Config_Handlers/Utils.cpp
	* DnC/Config_Handlers/XercesString.cpp
	* DnC/DomainApplicationManager/DomainApplicationManager.mpc
	* DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp
	* DnC/ExecutionManager/ExecutionManager.mpc
	* DnC/NodeApplicationManager/NodeApplicationManager_Impl.cpp
	* DnC/NodeManager/NodeDaemon.mpc

	  Checked in some changes to make DnC compile under VC6.

Thu Jun 24 14:49:44 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/Repository_Manager.cpp:

          Commented out the dump functions.

Thu Jun 24 08:10:09 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DnC/tests/NodeApplicationTest/NodeAppTest.mpc:

	  Added requires += dnc to the projects.

Wed Jun 23 16:52:50 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

	* DnC/tests/Config_Handlers/RobotAssembly/README.html:

	  Fixed links.

Wed Jun 23 16:19:25 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

	* DnC/tests/Config_Handlers/RobotAssembly/README.html:

          Committed the README file which desribes how to compile/run the
          RobotAssembly example.

Wed Jun 23 15:33:06 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager.mpc
        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp
        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.h
        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.inl

          Added "debug level" controlled debugging statements.
          Addressed Ossama's comments. Thanks Ossama!

Wed Jun 23 13:52:06 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/tests/Config_Handlers/RobotAssembly/ACE.iad:
        * DnC/tests/Config_Handlers/RobotAssembly/CIAO.iad:
        *
          DnC/tests/Config_Handlers/RobotAssembly/DefaultConfiguration.pcd:
        * DnC/tests/Config_Handlers/RobotAssembly/Deployment.xsd:
        * DnC/tests/Config_Handlers/RobotAssembly/DeploymentPlan.cdp:
        *
          DnC/tests/Config_Handlers/RobotAssembly/HumanMachineInterface.ccd:
        *
          DnC/tests/Config_Handlers/RobotAssembly/HumanMachineInterface.cid:
        *
          DnC/tests/Config_Handlers/RobotAssembly/HumanMachineInterface.cpd:
        *
          DnC/tests/Config_Handlers/RobotAssembly/HumanMachineInterface_exec.iad:
        *
          DnC/tests/Config_Handlers/RobotAssembly/HumanMachineInterface_stub.iad:
        *
          DnC/tests/Config_Handlers/RobotAssembly/HumanMachineInterface_svnt.iad:
        *
          DnC/tests/Config_Handlers/RobotAssembly/ManagementWorkInstructions.ccd:
        *
          DnC/tests/Config_Handlers/RobotAssembly/ManagementWorkInstructions.cid:
        *
          DnC/tests/Config_Handlers/RobotAssembly/ManagementWorkInstructions.cpd:
        *
          DnC/tests/Config_Handlers/RobotAssembly/ManagementWorkInstructions_exec.iad:
        *
          DnC/tests/Config_Handlers/RobotAssembly/ManagementWorkInstructions_stub.iad:
        *
          DnC/tests/Config_Handlers/RobotAssembly/ManagementWorkInstructions_svnt.iad:
        *
          DnC/tests/Config_Handlers/RobotAssembly/PalletConveyorManager.ccd:
        *
          DnC/tests/Config_Handlers/RobotAssembly/PalletConveyorManager.cid:
        *
          DnC/tests/Config_Handlers/RobotAssembly/PalletConveyorManager.cpd:
        *
          DnC/tests/Config_Handlers/RobotAssembly/PalletConveyorManager_exec.iad:
        *
          DnC/tests/Config_Handlers/RobotAssembly/PalletConveyorManager_stub.iad:
        *
          DnC/tests/Config_Handlers/RobotAssembly/PalletConveyorManager_svnt.iad:
        * DnC/tests/Config_Handlers/RobotAssembly/RobotAssembly.cid:
        * DnC/tests/Config_Handlers/RobotAssembly/RobotAssembly.cpd:
        * DnC/tests/Config_Handlers/RobotAssembly/RobotManager.ccd:
        * DnC/tests/Config_Handlers/RobotAssembly/RobotManager.cid:
        * DnC/tests/Config_Handlers/RobotAssembly/RobotManager.cpd:
        * DnC/tests/Config_Handlers/RobotAssembly/RobotManager_exec.iad:
        * DnC/tests/Config_Handlers/RobotAssembly/RobotManager_stub.iad:
        * DnC/tests/Config_Handlers/RobotAssembly/RobotManager_svnt.iad:
        * DnC/tests/Config_Handlers/RobotAssembly/TAO.iad:
        * DnC/tests/Config_Handlers/RobotAssembly/WatchSettingManager.ccd:
        * DnC/tests/Config_Handlers/RobotAssembly/WatchSettingManager.cid:
        * DnC/tests/Config_Handlers/RobotAssembly/WatchSettingManager.cpd:
        *
          DnC/tests/Config_Handlers/RobotAssembly/WatchSettingManager_exec.iad:
        *
          DnC/tests/Config_Handlers/RobotAssembly/WatchSettingManager_stub.iad:
        *
          DnC/tests/Config_Handlers/RobotAssembly/WatchSettingManager_svnt.iad:
        * DnC/tests/Config_Handlers/RobotAssembly/XMI.xsd:
        * DnC/tests/Config_Handlers/RobotAssembly/package.tpd:

          Added the robot assembly example descriptors.

Wed Jun 23 13:44:37 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/ExecutionManager/ExecutionManager_Impl.cpp:

          Fixed a compilation error.

Wed Jun 23 13:24:23 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Process_Element.cpp:
        * DnC/Config_Handlers/Process_Element.h:

          Added missing includes to fix compilation errors.

Wed Jun 23 13:07:13 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/Repository_Manager.cpp:

          Made changes to fix memory leaks.

Wed Jun 23 13:05:04 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/RepositoryManager_Impl.cpp:
        * DnC/RepositoryManager/Repository_Manager.cpp:

          Made changes to fix some memory leaks.

Wed Jun 23 12:31:14 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/RepositoryManager_Impl.cpp:
        * DnC/RepositoryManager/RepositoryManager_Impl.h:
        * DnC/RepositoryManager/Repository_Manager.cpp:

          Made changes to allow "read local URL" work in
          Windows machines as well.

Wed Jun 23 11:48:10 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

	* DnC/Config_Handlers/Process_Element.h:
	* DnC/Config_Handlers/Process_Element.i:
	* DnC/Config_Handlers/Process_Element.tpp:

	The functions and classes are placed in the deployment namespace.

Wed Jun 23 03:14:16 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp:
	* DnC/DomainApplicationManager/DomainApplicationManager_Impl.h:
	* DnC/DomainApplicationManager/DomainApplicationManager_Impl.inl:
	* DnC/ExecutionManager/ExecutionManager_Impl.cpp:
	* DnC/ExecutionManager/ExecutionManager_Impl.h:
	* DnC/NodeApplicationManager/ImplementationInfo.cpp:
	* DnC/NodeApplicationManager/NodeApplicationManager_Impl.cpp:
	* DnC/NodeApplicationManager/NodeApplicationManager_Impl.h:
	* DnC/NodeApplicationManager/NodeApplicationManager_Impl.inl:
	* DnC/NodeManager/NodeDaemon_Impl.cpp:
	* DnC/NodeManager/NodeDaemon_Impl.h:
	* DnC/RepositoryManager/RepositoryManager_Impl.cpp:
	* DnC/RepositoryManager/RepositoryManager_Impl.h:
	* DnC/RepositoryManager/Repository_Manager.cpp:
	* DnC/RepositoryManager/Update_Plan.cpp:
	* DnC/ciao/Container_Base.cpp:
	* DnC/ciao/Container_Base.h:
	* DnC/ciao/Cookies.cpp:
	* DnC/ciao/Deployment_Core.idl:
	* DnC/ciao/NodeApp_CB_Impl.cpp:
	* DnC/ciao/NodeApp_CB_Impl.h:
	* DnC/ciao/NodeApplication_Impl.cpp:
	* DnC/ciao/NodeApplication_Impl.h:
	* DnC/ciao/NodeApplication_Impl.inl:
	* DnC/ciao/Servant_Impl_Base.cpp:
	* DnC/ciao/Servant_Impl_T.cpp:

	  Performed a code review and left comments for DnC developers.

Tue Jun 22 18:05:19 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

	* CCF/Documentation/Build.html:

	  Added comment about the requirement of boost 1.30.2 in order
	  to build CCF/CIDLC on Windows.
	  Thanks to Valery <acapstan@bigpond.net.au> for catching this.

Tue Jun 22 10:38:58 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* CIDLC/ServantSourceGenerator.cpp:

	  Added a missing _duplicate () in the connect_emittype () calls.

Mon Jun 21 17:46:32 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/Update_Plan.cpp:

          Made changes to fix a run-time error.

Fri Jun 18 16:40:14 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

	* examples/OEP/BasicSP/README.html:

          ".exe" extensions are deleted, because they are not exist in
          linux

Fri Jun 18 16:18:42 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/Update_Plan.cpp:

          Added comments in the code to assist code review.

Fri Jun 18 15:49:17 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* CCF/Documentation/Build.html:

	  Cleaned links up a bit.

Fri Jun 18 14:39:39 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

	* DnC/tests/NodeApplicationTest/NodeAppTest.mpc:

	  CIAO_Container is added as an "after" dependency for the
	  NodeAppTest_RoundTrip_stub.

Fri Jun 18 14:14:12 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

	* examples/OEP/BasicSP/README.html:

	  Moved the file from Display directory to BasicSP directory.

Fri Jun 18 14:05:27 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

	* examples/OEP/Display/README.html:

	  The file describing how to build and run the example according to
	  the new DnC spec is added.

Fri Jun 18 13:34:16 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

	* DomainApplicationManager/DomainApplicationManager.mpc
	* ExecutionManager/ExecutionManager.mpc
	* NodeManager/NodeDaemon.mpc
	* RepositoryManager/Repository_Manager.cpp

          Fixed linking problems in Windows. Added debug/test
          capabilities by remotely shutdown ExecutionManager.

Fri Jun 18 11:59:56 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* docs/tutorial/Hello/hello_exec.cpp:
	* docs/tutorial/Hello/hello_exec.h:
	  Updated these files to follow up the changes in CIDLC.

Fri Jun 18 11:56:09 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/Update_Plan.cpp:
        * DnC/RepositoryManager/Update_Plan.h:

          Helper files to update the deployment plan from the package
          configuration IDL data structure.

          Made changes to follow DOC group standard of never a function
          more than a page.

Fri Jun 18 09:36:13 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* CCF/Documentation/Build.html:

	  Updated the file with a link to Win32 zip files for the Utility
	  library.

Thu Jun 17 16:59:21 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/RepositoryManager.mpc:
        * DnC/RepositoryManager/Repository_Manager.cpp:
        * DnC/RepositoryManager/Update_Plan.cpp:
        * DnC/RepositoryManager/Update_Plan.h:

          Moved all the plan handler helper functions to a new
          file Update_Plan.cpp.

Thu Jun 17 16:02:16 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* examples/OEP/BasicSP/BMClosedED/BMClosedED_exec.cpp:
	  Added one in. () to the debug call.

	* DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp
	* DnC/NodeApplicationManager/ImplementationInfo.cpp
	* DnC/NodeApplicationManager/NodeApplicationManager_Impl.cpp
	* DnC/RepositoryManager/Repository_Manager.cpp
	* DnC/ciao/Deployment_Core.idl
	* DnC/ciao/NodeApplication_Impl.cpp
	* DnC/ciao/NodeApplication_Impl.h
	  Added the support for ComponentIOR. Also adjusted the start
	  process which is essential to BasicSP.

Thu Jun 17 16:00:01 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/tests/Config_Handlers/HUDisplay/Airframe.cid:
        * DnC/tests/Config_Handlers/HUDisplay/Airframe_Exec.iad:
        * DnC/tests/Config_Handlers/HUDisplay/Airframe_Stub.iad:
        * DnC/tests/Config_Handlers/HUDisplay/Airframe_Svnt.iad:
        * DnC/tests/Config_Handlers/HUDisplay/GPS.cid:
        * DnC/tests/Config_Handlers/HUDisplay/GPS_Exec.iad:
        * DnC/tests/Config_Handlers/HUDisplay/GPS_Stub.iad:
        * DnC/tests/Config_Handlers/HUDisplay/GPS_Svnt.iad:
        * DnC/tests/Config_Handlers/HUDisplay/HUDisplay.cdp:
        * DnC/tests/Config_Handlers/HUDisplay/HUDisplay.cid:
        * DnC/tests/Config_Handlers/HUDisplay/Libraries.iad:
        * DnC/tests/Config_Handlers/HUDisplay/NavDisplay.cid:
        * DnC/tests/Config_Handlers/HUDisplay/NavDisplay_Exec.iad:
        * DnC/tests/Config_Handlers/HUDisplay/NavDisplay_Stub.iad:
        * DnC/tests/Config_Handlers/HUDisplay/NavDisplay_Svnt.iad:
        * DnC/tests/Config_Handlers/HUDisplay/Timer.cid:
        * DnC/tests/Config_Handlers/HUDisplay/Timer_Exec.iad:
        * DnC/tests/Config_Handlers/HUDisplay/Timer_Stub.iad:
        * DnC/tests/Config_Handlers/HUDisplay/Timer_Svnt.iad:

          Updated the BasicSP scenario example descriptors.

Thu Jun 17 13:24:01 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/Repository_Manager.cpp:

          Added some comments onto the code.

Wed Jun 16 17:12:21 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/ExecutionManager/ExecutionManager.mpc
        * DnC/NodeManager/NodeDaemon.mpc
        * DnC/RepositoryManager/RepositoryManager.mpc

          Fixed export library problems in Windows. Added necessary build
          dependency settings.

Wed Jun 16 16:33:13 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/RepositoryManager/Repository_Manager.cpp:

          Updated mpc file to link to the ExecutionManager and NodeDaemon
          stubs as operations on these entities are used within the
          executor.

        * DnC/NodeManager/NodeDaemon.mpc:
        * DnC/NodeManager/NodeDaemon_stub_export.h:
        * DnC/NodeManager/Node_Daemon.cpp:

          Added stub macros to generate stub libraries

        * DnC/ExecutionManager/ExecutionManager.mpc:
        * DnC/ExecutionManager/ExecutionManager_stub_export.h:

          Stub exports for ExecutionManager.

Wed Jun 16 15:18:21 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/RepositoryManager/RepositoryManager.mpc:

          Fixed linking errors by adding NodeManager and ExecutionManager
          stub code into the project settings.

Wed Jun 16 12:48:11 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/Repository_Manager.cpp:

          Made changes to use ACE_Hash_Map instead of std::map.

Wed Jun 16 12:02:12 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/Repository_Manager.cpp:

          Made substantial changes to populate the DeploymentPlan
          IDL data structure from the PackageConfiguration data
          structure.

          This change enables the DnC framework to have a much shorter
          version of the DeploymentPlan XML descriptor, as we can get
          the needed information from the PackageConfiguration IDL
          data structure and not from the XML descriptors itself.

Wed Jun 16 11:24:13 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>
	* DnC/Config_Handlers/RUK_Handler.h:
	* DnC/Config_Handlers/NIA_Handler.h:
	* DnC/Config_Handlers/MID_Handler.h:
	* DnC/Config_Handlers/IR_Handler.h:
	* DnC/Config_Handlers/IAD_Handler.h:
	* DnC/Config_Handlers/DnC_Dump.h:
	* DnC/Config_Handlers/Basic_Handler.h:

	Comments, etc.

Tue Jun 15 20:53:28 2004  Irfan Pyarali  <irfan@oomworks.com>

	* tools/ServerActivator/ServerActivator_test_client.cpp:

	  Added missing include file.

	* tools/Segment_Timer/Segment_Timer.cpp:

	  Commented out debug statement since the division in it was
	  failing to compile on Windows.

	* tools/RTComponentServer/RTServer_Impl.cpp (init):

	  Indent fixes.

	* tests/RTCCM/DiffServ/descriptors/run_test.pl:

	  Remove assembly descriptor file also.

Tue Jun 15 15:27:08 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        *  Dnc/NodeApplication/NodeApplication.cpp
        *  Dnc/NodeApplicationManager/NodeApplicationManager_Impl.cpp
        *  Dnc/NodeApplicationManager/NodeApplicationManager_Impl.h
        *  Dnc/DomainApplicationManager/DomainApplicationManager_Impl.cpp
        *  DnC/ExecutionManager/ExecutionManager_Impl.cpp
        *  Dnc/NodeManager/NodeDaemon_Impl.cpp
        *  Dnc/NodeManager/NodeDaemon_Impl.h
        *  Dnc/NodeManager/Node_Daemon.cpp
        *  DnC/ciao/NodeApp_CB_Impl.cpp
        *  DnC/ciao/NodeApp_CB_Impl.h

           Fixed memory leak problems. Now "NodeDaemon" process and
           "NodeApplication" process should have no memomry leak problem.
           Further test will be based on deploying and tearing down a
           deploymentplan many times and try to find memory leak.

Tue Jun 15 10:48:08 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        *  DnC/RepositoryManager/Repository_Manager.cpp:

           Let the object reference narrow down to ExecutionManager
           instead of ExecutionManagerDameon.

Mon Jun 14 15:01:08 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        *  DnC/RepositoryManager/Repository_Manager.cpp:
        *  DnC/ExecutionManager/Execution_Manager.cpp
        *  DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp
        *  DnC/DomainApplicationManager/Deployment_Configuration.cpp

           Fixed memory leak problems. Now ExecutionManager "process" should
           have no memomry leak at all. Further test will be on "NodeDaemon"
           process, which will detect memory management problem for NodeApplicationManager
           as well.

Mon Jun 14 14:24:08 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        *  DnC/NodeManager/Node_Daemon.cpp:
        *  examples/OEP/BasicSP/EC/client.cpp

           Added missing header file "ace/OS_NS_unistd.h" which contains
           hostname function.

Sun Jun 13 16:13:08 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        *  DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp:

           Some cosmetic changes.

Sun Jun 13 17:55:01 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/Repository_Manager.cpp:

          Made changes to check if we have a wrong URL to
          start parsing the deployment plan.

Sat Jun 12 23:17:08 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        *  DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp:
        *  DnC/NodeApplicationManager/ImplementationInfo.cpp:
        *  DnC/NodeApplicationManager/NodeApplicationManager_Impl.cpp:
        *  DnC/NodeApplicationManager/NodeApplicationManager_Impl.h:
        *  DnC/NodeApplicationManager/NodeApplicationManager_Impl.inl:
        *  DnC/NodeManager/NodeDaemon_Impl.cpp:
        *  DnC/NodeManager/NodeDaemon_Impl.h:
        *  DnC/NodeManager/NodeDaemon_Impl.inl:
        *  DnC/RepositoryManager/Repository_Manager.cpp:
        *  DnC/ciao/NodeApp_CB_Impl.cpp:
        *  DnC/ciao/NodeApp_CB_Impl.h:

           Debugged on Windows with Visual Studio + Purify. Now
           Every thing should be fine and people could start to
           do their own code revision.

           @@Note: If you want to make any change other than
           syntactic Changes please be careful and make sure you
           don't break anything.

           Now I am moving to add support for Properties.
           Things we need for the Demo.
           1. ComponentIOR registration.
           2. Component Attribute initialization.

Sat Jun 12 16:51:11 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Property_Handler.cpp:
        * DnC/Config_Handlers/TPD_Handler.cpp:

          Made some coding standard changes.

Fri Jun 11 20:34:12 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp
	* DnC/DomainApplicationManager/DomainApplicationManager_Impl.h
	* DnC/ExecutionManager/ExecutionManager_Impl.cpp
	* DnC/ExecutionManager/ExecutionManager_Impl.h
	* DnC/ExecutionManager/ExecutionManager_Impl.inl
	* DnC/NodeApplication/NodeApplication.cpp
	* DnC/NodeApplicationManager/NodeApplicationManager_Impl.cpp
	* DnC/NodeApplicationManager/NodeApplicationManager_Impl.h
	* DnC/NodeApplicationManager/NodeApplicationManager_Impl.inl
	* DnC/NodeManager/NodeDaemon_Impl.cpp
	* DnC/NodeManager/NodeDaemon_Impl.h
	* DnC/NodeManager/NodeDaemon_Impl.inl
	* DnC/RepositoryManager/Repository_Manager.cpp
	* DnC/ciao/Deployment_Core.idl
	* DnC/ciao/NodeApplication_Impl.cpp
	* DnC/ciao/NodeApplication_Impl.h

	  Many Changes of the files. Now on linux it runs up to 3 times
	  correctly and hangs on the fourth time. I am moving to windows
	  for this now. Don't commit any change till I send out
	  notification email, please!

Fri Jun 11 18:58:04 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Utils.h:
        * DnC/Config_Handlers/Utils.cpp:

          Last ChangeLog:

          Fri Jun 11 17:31:04 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

          Reverted the changes back to an earlier version since parse_href_tags
          is used by other classes, and last change caused compilation error.

Fri Jun 11 17:31:04 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Utils.h:
        * DnC/Config_Handlers/Utils.cpp:

          Removed un-used methods create_document, parse_href_tags from
          the Utils directory.

Fri Jun 11 16:59:35 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/tests/Config_Handlers/HUDisplay/HUDisplay.cdp:

          Deleted the extension name ".so" for all library artifacts, since
          this stuff is not platform generic.

Fri Jun 11 16:46:25 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Plan_Handler.cpp:
        * DnC/Config_Handlers/Process_Basic_Type.i:
        * DnC/RepositoryManager/Repository_Manager.cpp:

          Made some more coding standard changes.

Fri Jun 11 16:12:54 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/CPK_Handler.cpp:
        * DnC/Config_Handlers/CPR_Handler.cpp:
        * DnC/Config_Handlers/DT_Handler.cpp:
        * DnC/Config_Handlers/Domain_Handler.cpp:
        * DnC/Config_Handlers/IAD_Handler.cpp:
        * DnC/Config_Handlers/IR_Handler.cpp:
        * DnC/Config_Handlers/MID_Handler.cpp:
        * DnC/Config_Handlers/NIA_Handler.cpp:
        * DnC/Config_Handlers/PCI_Handler.cpp:
        * DnC/Config_Handlers/PC_Handler.cpp:

          Made some more coding standard compliance changes.

Fri Jun 11 15:44:00 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/CAD_Handler.cpp:
        * DnC/Config_Handlers/CEPE_Handler.cpp:
        * DnC/Config_Handlers/Cap_Handler.cpp:
        * DnC/Config_Handlers/CompImplDesc_Handler.cpp:
        * DnC/Config_Handlers/CompIntrDesc_Handler.cpp:
        * DnC/Config_Handlers/CompPkgDesc_Handler.cpp:
        * DnC/Config_Handlers/Config_Error_Handler.cpp:
        * DnC/Config_Handlers/DnC_Dump.cpp:
        * DnC/Config_Handlers/MID_Handler.h:
        * DnC/Config_Handlers/Process_Element.tpp:

          Made some more coding standards compliance changes.

Fri Jun 11 14:50:42 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/Repository_Manager.cpp:

          Made some more coding standard changes.

Fri Jun 11 14:15:04 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/DnC_Dump.cpp:

          Made some cosmetic changes.

Fri Jun 11 13:07:35 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/Repository_Manager.cpp:

          Uncommented some code which was accidentally
          commented in my previous commit.

Fri Jun 11 12:55:49 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Process_Element.tpp:
        * DnC/RepositoryManager/RepositoryManager_Impl.cpp:
        * DnC/RepositoryManager/Repository_Manager.cpp:

          Made changes to free up memory created by XMLString::
          transcode operations.

Fri Jun 11 12:07:27 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

	* DnC/Config_Handlers/Process_Element.cpp:
	* DnC/Config_Handlers/Process_Element.i:
	* DnC/Config_Handlers/Process_Element.tpp:
	* DnC/Config_Handlers/Utils.cpp:
	* DnC/Config_Handlers/Utils.h:
	* DnC/Config_Handlers/RepositoryManager_Impl.cpp:
	* DnC/RepositoryManager/Repository_Manager.cpp:

	Deleted the duplicate definition of create_doc & create_doc is
        replaced with create_parser.

Fri Jun 11 00:10:42 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Process_Element.cpp:
        * DnC/Config_Handlers/Utils.cpp:
        * DnC/Config_Handlers/Utils.h:
        * DnC/RepositoryManager/RepositoryManager_Impl.cpp:
        * DnC/RepositoryManager/Repository_Manager.cpp:

          Fixed segmentation faults, traced during integration
          teting.

Thu Jun 10 18:38:46 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Any_Handler.cpp:
        * DnC/Config_Handlers/CPK_Handler.cpp:
        * DnC/Config_Handlers/Utils.cpp:
        * DnC/Config_Handlers/Handler_Test.i:

          Fixed errors based on errors discovered using Purify

Thu Jun 10 18:24:58 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Process_Element.tpp:

          More memory leaks fixed.

Thu Jun 10 18:12:44 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Process_Element.cpp:
        * DnC/Config_Handlers/Property_Handler.cpp:
        * DnC/Config_Handlers/RS_Handler.cpp:
        * DnC/Config_Handlers/SP_Handler.cpp:

          Finally, Config_Handler directory compiles correctly

Thu Jun 10 18:06:52 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/CAD_Handler.cpp:
        * DnC/Config_Handlers/CPK_Handler.cpp:
	* DnC/Config_Handlers/CompImplDesc_Handler.cpp:
        * DnC/Config_Handlers/Utils.cpp:

          Fixed compilation errors from improper use of XMLString::release.

Thu Jun 10 18:05:09 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Process_Element.cpp:
        * DnC/Config_Handlers/Property_Handler.cpp:
        * DnC/Config_Handlers/RS_Handler.cpp:
        * DnC/Config_Handlers/SP_Handler.cpp:

          More memory leaks fixed.

2004-06-10  turkaye  <turkaye@lambada.isis.vanderbilt.edu>

	* DnC/Config_Handlers/CAD_Handler.cpp:
	* DnC/Config_Handlers/CPK_Handler.cpp:
	* DnC/Config_Handlers/CompImplDesc_Handler.cpp:

	Memory leak problem with XMLString::transcode () is solved.

Thu Jun 10 17:46:10 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Utils.cpp:
        * DnC/Config_Handlers/TPD_Handler.cpp:

          Fixed memory leaks pertaining to ACE_TString making copies of
          dynamically allocated memory. The memory supplied to ACE_TString
          has to be deleted! Fixed memory for these.

Thu Jun 10 17:44:57 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Process_Element.cpp:
        * DnC/Config_Handlers/Property_Handler.cpp:
        * DnC/Config_Handlers/RS_Handler.cpp:
        * DnC/Config_Handlers/Requirement_Handler.cpp:
        * DnC/Config_Handlers/SP_Handler.cpp:

          More memory leaks fixes.

Thu Jun 10 17:27:35 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Utils.cpp:

          Fixed some memory leaks as well!!

Thu Jun 10 17:26:25 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Process_Element.cpp:

          Fixed memory leaks.

Thu Jun 10 14:06:03 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * ciao/Servant_Impl_T.cpp:
        * DnC/ciao/Servant_Impl_T.cpp:

          Modified code that passed _var.out() to ACE_NEW_RETURN,
          since sometimes on Windows platforms, for whatever
          reason Var_Base::out() will be called after the
          allocation, effectively cancelling it out. It is
          alwas safe to declare a pointer, pass it to ACE_NEW_*
          and then assign it to a _var, so that is what is
          done now in get_all_facets() and get_all_consumers().

Thu Jun 10 10:17:00 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DnC/ciao/Container_Base.h:
	  Followed up a Jeff's Change in the old ciao.

	* DnC/ExecutionManager/ExecutionManager_Impl.cpp:
	* DnC/ExecutionManager/ExecutionManager_Impl.h:
	* DnC/DomainApplicationManager/DomainApplicationManager_Impl.h:
	* DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp:
	* DnC/RepositoryManager/Repository_Manager.cpp:
	* DnC/NodeManager/Node_Daemon.cpp:
	* DnC/ciao/NodeApplication_Impl.cpp:
	* DnC/DomainApplicationMananger/NodeApplicationManager_Impl.cpp:

	  Many adjustments, bug fixing, added missing functionalities.
	  This is not a working version now.

Wed Jun  9 11:17:31 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

	* DnC/DomainApplicationManager_Impl.cpp

          Fixed a bug which is caused by initialzing ulong sequence type.

Tue Jun  8 20:53:12 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DnC/NodeApplicationManager/ImplementationInfo.cpp:
	* DnC/NodeApplicationManager/ImplementationInfo.h:
	  Added these files.

	* DnC/NodeApplicationManager/NodeApplicationManager.mpc:
	  Changed MPC file reflect the changes.

	  Seems MPC doesn't support template very well for GCC. The
	  dependency is not set at all. I have no choice but to switch to
	  normal operator overlaoding.

Tue Jun  8 19:54:03 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DnC/ciao/CCM_Core.mpc:
	* DnC/ciaoImplementation.h:
	  Removed this file also changed MPC file.

Tue Jun  8 14:15:31 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

	* DnC/DomainApplicationManager_Impl.cpp

          Tested it and it could split plan well and also contact
          NodeDaemon without problem.

          Fixed a bug caused by not using a reference.

Tue Jun  8 17:18:28 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DnC/NodeApplication/NodeApplication.mpc:
	* DnC/ciao/CCM_Core.mpc:
	  Fixed another set of linking problem about export macros.

Tue Jun  8 14:15:31 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

	* DnC/RepositoryManager/RepositoryManager.mpc:

          Added missing library CIAO_Server.

Tue Jun  8 15:50:28 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DnC/NodeApplicationManager/NodeApplicationManager_Impl.cpp:
	  Added duplicate for one return value.

Tue Jun  8 15:00:30 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

	* DnC/Config_Handlers/TPD_Handler.h:
	* DnC/Config_Handlers/TPD_Handler.cpp:
	* DnC/RepositoryManager/RepositoryManager_Impl.cpp:

	Added TopLevelDescription handler.

Tue Jun  8 14:29:01 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/RepositoryManager_Impl.cpp:

          Made changes to read the top level package URL
          and create the PackageConfiguration IDL data structure.

Tue Jun  8 14:15:31 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

	* DnC/Config_Handlers/Utils.h:

          Fixed the Windows export library problem.

	* DnC/RepositoryManager/RepositoryManager_Impl.cpp:

	  Added "return" to those unimplemented functions to makde the
          compiler happy.

Tue Jun  8 14:10:08 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DnC/ciao/CCM_Core.mpc:
	  Fixed source file placement.

Tue Jun  8 10:35:32 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

	* DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp:
	* DnC/DomainApplicationManager/DomainApplicationManager_Impl.h:

	  Added dump function to dump connections.

Tue Jun  8 10:16:48 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/RepositoryManager/Repository_Manager.cpp:

          Added diagnostic comments to aid in debugging during execution
          of the Executor.

Tue Jun  8 09:55:41 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/Repository_Manager.cpp:

          Commented out certain un-necessary DEBUG statements.

Tue Jun  8 02:53:32 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp:
	* DnC/DomainApplicationManager/DomainApplicationManager_Impl.h:
	  Rewritten the connection part of the interface.
	  Enhanced the performace by avoiding excessive deep copy and
	  better condition branching. Also added exception mechanism in
	  the connction part.

Mon Jun  7 21:22:03 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DnC/NodeApplicationManager/NodeApplicationManager_Impl.cpp:
	* DnC/NodeApplicationManager/NodeApplicationManager_Impl.inl:
	* DnC/NodeApplicationManager/NodeApplicationManager_Impl.h:
	  Finished this interface implementation.

	* DnC/ciao/ImplementationInfo.h:
	  Added this file containing the templated helper operators.

Mon Jun  7 15:44:51 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/ExecutionManager/Execution_Manager.cpp:
        * DnC/ExecutionManager/ExecutionManager.mpc:

          First cut at writing the executor that is used to start
          deployment process and terminate it. Changed the mpc file to
          rename the generated executable to be named executor as
          described in the specification.

Mon Jun  7 14:23:38 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

	* DnC/Config_Handlers/DnC_Dump.cpp:

	Fixed an error causing segmentation fault by changing
	Dump_Obj::desc_map_ template argument from "const char*"
	to "std::string".


Mon Jun  7 12:10:31 2004  Gan Deng <gan.dengg@vanderbilt.edu>

	* DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp:

          The PortConnectionDescription structure a PortKind variable change the
          code to make the connection decisions based on value of that variable.
          Also change the connection fields values which will be passed to
          finishLaunch() to make the NodeApplication work.

        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.h:

          Change the definition type of the <plan_> variable from const reference
          to just regular object mapped from IDL struct type.

Mon Jun  7 01:40:57 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DnC/NodeApplicationManager/NodeApplicationManager_Impl.cpp:
	* DnC/NodeApplicationManager/NodeApplicationManager_Impl.h:
	  Finished the creat_connctions method.
	  Partially finished the startLaunch method.

	* DnC/ciao/NodeApplication_Impl.h:
	* DnC/ciao/NodeApplication_Impl.cpp:
	* DnC/ciao/NodeApplication_Impl.inl:
	  Finished implementing the NodeApplication interface.
	  Added the finish launch method.

Sun Jun  6 21:13:27 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantSourceGenerator.cpp:
        * CIDLC/ServantHeaderGenerator.cpp:

          Removed generation of a template parameter to the Servant_Impl
          base class that was removed from the CIAO_Server library in

          Fri Jun  4 18:16:47 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

Sat Jun  5 23:26:53 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp:
	  Tweaked a bit of the code to make it compile.

	  Gan, Please look at my comments in the code.

Sat Jun  5 17:24:21 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantSourceGenerator.cpp:

          Change the order of member initialization in the constructors of
          AttributeEmitter and ReadonlyAttributeEmitter to match a recent
          change in the order of their class members.

Sat Jun  5 16:45:14 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/RepositoryManager_Impl.cpp:
        * DnC/RepositoryManager/RepositoryManager_Impl.h:
        * DnC/RepositoryManager/Repository_Manager.cpp:

          Updated repository manager to return the PackageConfiguration
          element created while parsing the top level package
          URL.

Sat Jun  5 15:04:15 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/Repository_Manager.cpp:

          Updated the repository manager to dump out the
          top level package and the deployment plan.

Sat Jun  5 14:59:47 2004  Tao Lu  <lu@dre.vanderbilt.edu>

	* DnC/tests/NodeApplicationTest/README:
	  Added this readme file for user to understand the testing scenario.


Sat Jun  5 14:46:12 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * ./DnC/ciao/Servant_Impl_Base.h:

          Cosmetic changes.

        * DnC/ciao/Servant_Impl_T.cpp:
        * DnC/ciao/Servant_Impl_T.h:

          Removed one of the template parameters and used instead
          the typedefs generated by the IDL compiler for interfaces.

	  Followed Jeff Parson's Changes. Hopefully we can merge the two
	  ciao directories soon so I don't have to duplicate the commit
	  every time after Jeff makes changes.

Fri Jun  4 18:16:47 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * ciao/Servant_Impl_Base.h:

          Cosmetic changes.

        * ciao/Servant_Impl_T.cpp:
        * ciao/Servant_Impl_T.h:

          Removed one of the template parameters and used instead
          the typedefs generated by the IDL compiler for interfaces.

        * CIDLC/ServantSourceGenerator.cpp:

          Moved the call to populate_port_tables() from ciao_postactivate()
          to the servant constructor.

Fri Jun  4 17:19:44 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * DnC/tests/Config_Handlers/HUDisplay/Airframe.ccd:
        * DnC/tests/Config_Handlers/HUDisplay/Airframe.cid:
        * DnC/tests/Config_Handlers/HUDisplay/Airframe.cpd:
        * DnC/tests/Config_Handlers/HUDisplay/Airframe_Exec.iad:
        * DnC/tests/Config_Handlers/HUDisplay/Airframe_Stub.iad:
        * DnC/tests/Config_Handlers/HUDisplay/Airframe_Svnt.iad:
        * DnC/tests/Config_Handlers/HUDisplay/Domain.cdd:
        * DnC/tests/Config_Handlers/HUDisplay/GPS.ccd:
        * DnC/tests/Config_Handlers/HUDisplay/GPS.cid:
        * DnC/tests/Config_Handlers/HUDisplay/GPS.cpd:
        * DnC/tests/Config_Handlers/HUDisplay/GPS_Exec.iad:
        * DnC/tests/Config_Handlers/HUDisplay/GPS_Stub.iad:
        * DnC/tests/Config_Handlers/HUDisplay/GPS_Svnt.iad:
        * DnC/tests/Config_Handlers/HUDisplay/HUDisplay.cdp:
        * DnC/tests/Config_Handlers/HUDisplay/HUDisplay.cid:
        * DnC/tests/Config_Handlers/HUDisplay/HUDisplay.cpd:
        * DnC/tests/Config_Handlers/HUDisplay/HUDisplay.pcd:
        * DnC/tests/Config_Handlers/HUDisplay/Libraries.iad:
        * DnC/tests/Config_Handlers/HUDisplay/NavDisplay.ccd:
        * DnC/tests/Config_Handlers/HUDisplay/NavDisplay.cid:
        * DnC/tests/Config_Handlers/HUDisplay/NavDisplay.cpd:
        * DnC/tests/Config_Handlers/HUDisplay/NavDisplay_Exec.iad:
        * DnC/tests/Config_Handlers/HUDisplay/NavDisplay_Stub.iad:
        * DnC/tests/Config_Handlers/HUDisplay/NavDisplay_Svnt.iad:
        * DnC/tests/Config_Handlers/HUDisplay/Timer.ccd:
        * DnC/tests/Config_Handlers/HUDisplay/Timer.cid:
        * DnC/tests/Config_Handlers/HUDisplay/Timer.cpd:
        * DnC/tests/Config_Handlers/HUDisplay/Timer_Exec.iad:
        * DnC/tests/Config_Handlers/HUDisplay/Timer_Stub.iad:
        * DnC/tests/Config_Handlers/HUDisplay/Timer_Svnt.iad:
        * DnC/tests/Config_Handlers/HUDisplay/package.tpd:

          Moved the descriptor files needed to test BasicSP from my
          homepage to the CVS repository. The Config_Handlers should be
          able to build a tree starting from package.tpd. Not sure, if it
          works that way now.

Fri Jun  4 15:54:09 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:

          Cosmetic and other minor changes to generated code.

Fri Jun  4 15:38:18 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/ciao/Deployment_Core.idl

          Change the "Connection" IDL type by replacing the "string name"
          field with three more fields, i.e., "string instanceName",
          "string portName" and "CCMComponentPortKind kind". We feel the
          old one in DnC spec is not well defined and make the run-time
          thing harder.

        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.h:
        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp:

          Finished all the functionality to handle connections and all
          other things required.

Fri Jun  4 15:32:50 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/tests/NodeApplicationTest/RoundTripEI.idl:
          Removed this file.

        * DnC/tests/NodeApplicationTest/RoundTrip_exec.h:
        * DnC/tests/NodeApplicationTest/RoundTrip_exec.cpp:
        * DnC/tests/NodeApplicationTest/NodeAppTest_RoundTrip.idl:
        * DnC/tests/NodeApplicationTest/NodeAppTest.mpc:
          Changed these files to get the get_all_facets test working.
          Note: I have changed the component implementation to the new
          executor mapping that Boris proposed. It's not a must in this
          example but we can use it later as a tutorial for our users.

        * DnC/tests/NodeApplicationTest/run_test_ex.pl:
        * DnC/tests/NodeApplicationTest/NodeApp_test_client_ex.cpp:
          Added these two files to test the get_all_facets function.

Fri Jun  4 15:02:15 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager.mpc:
        * DnC/RepositoryManager/RepositoryManager.mpc:
        * DnC/RepositoryManager/RepositoryManager_Impl.cpp:
        * DnC/RepositoryManager/RepositoryManager_Impl.h:
        * DnC/RepositoryManager/Repository_Manager.cpp:

          Made changes so that RepositoryManager can dump out the
          PackageConfiguration elements.

Fri Jun  4 11:42:18 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.h:
        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp:

          Added functions to handle connections. Get rid of the <Connections>
          field from the hash map table since they don't need to be maintained
          any more.


Fri Jun  4 11:37:51 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:

          Fixed a bug in code generation for the port table population
          method check in with

          Thu Jun  3 12:35:51 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

          and changed code generation of facet servant classes to be
          a template class with a dummy argument. Immediately below
          the declaration, we generate a typedef to the actual
          facet servant class name, using int as the template argument.
          Because the facet servant class name is based only on the
          underlying interface type, this change prevents link errors
          when components in other translation units use the same
          interface type for a facet, since the compiler will use
          only one symbol for all the template instantiations, and
          it is legal to typedef something more than once if it is
          aliased to the same type. Finally, added checks to ensure
          that the facet servant class is generated only once in
          each translation unit, by allowing the underlying interface
          AST node to be traversed by the facet class code emitter
          only once.

Fri Jun  4 11:40:18 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * DnC/Config_Handlers/DnC_Dump.cpp:

        Clean-up of the unused, commented out code sections.

Fri Jun  4 11:31:09 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/DnC_Dump.cpp:

          Made changes to fix "Ref" variables.

Fri Jun  4 11:22:46 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/ciao/Deployment_Core.idl:
        * DnC/ciao/Deployment.idl:
          Changed the connection struct definition to better suite our
          needs.

Fri Jun  4 11:19:45 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * DnC/Config_Handlers/DnC_Dump.cpp:

        Fixed the dump function for Deployment::SubcomponentPortEndpoint.
        Prints out the instanceRef.

Fri Jun  4 10:46:42 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/DnC_Dump.cpp:

          Made changes to fix dumping of some "Ref" variables.

Fri Jun  4 09:53:14 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * DnC/Config_Handlers/tckind_names.h:
        * DnC/Config_Handlers/tckind_names.cpp:
        * DnC/Config_Handlers/DnC_Dump.cpp:

        Deleted the files which initially written for dumping out the
        ComponentPropertyDescription::type.  It is handled as a big
        switch section in DnC_Dump.cpp.

Fri Jun  4 09:52:28 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.h:
        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp:

          Removed the check_plan_validity () method and added its
          functionality in the get_plan_info () method. This eliminates
          the need to have a separate loop to iterate over the list of
          names to populate the NodeManager references, now this step is
          done within a single loop.

Thu Jun  3 17:28:49 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/tests/NodeApplicationTest/NodeApp_test_client.cpp:
          Formatted the output a bit to make the message more reflective.

        * DnC/ciao/CCM_Core.mpc:
          Moved the callback implementation from deployment servant to
          stub.

Thu Jun  3 16:25:58 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * DnC/Config_Handlers/DnC_Dump.cpp:

        Added the dump code for ComponentPropertyDescription::type (CORBA::TypeCode).

Thu Jun  3 16:15:41 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * DnC/NodeApplication/NodeApplication.mpc:
        * DnC/ciao/CCM_Core.mpc:

          Some tweaks to the MPC files.

Thu Jun  3 16:10:11 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantHeaderGenerator.cpp:

          Forgot to remove generated members of the servant class that
          have been moved to the base classes.

Thu Jun  3 16:07:35 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * DnC/Config_Handlers/DnC_Dump.h:
        * DnC/Config_Handlers/DnC_Dump.cpp:

        Added the methods required to dump referenced values
        correctly. Dump functions are chaged accordingly.

Thu Jun  3 14:19:31 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/ExecutionManager/ExecutionManager.mpc:
        * DnC/ExecutionManager/Execution_Manager.cpp:

          Removed CIAO::Server_init () method calls from the server, as
          this server does not need capabilities for explicitly processing
          valuetypes. These calls are already present in NodeApplication
          entity.

Thu Jun  3 12:35:51 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * ciao/Servant_Impl_T.cpp:
        * ciao/Servant_Impl_T.h:
        * ciao/Servant_Impl_Base.cpp:
        * ciao/Servant_Impl_Base.h:

          New files added to CIAO_Server. A template base class is now
          inserted into the inheritance hierarchy between the skeleton
          class of the component's equivalent interface and the
          servant class generated by the CIDL compiler. This template
          class also has a non-template base class to hold code that
          is based neither on the template parameters or on the
          inheritance chain. These two classes will hold code common
          to all generated servant classes, templatized for the
          skeleton class type, the executor type and the context type.
          So far, only get_all_facets() and get_all_consumers() have
          been factored out and implemented.

        * ciao/CCM_Core.mpc:

          Changes to reflect the items above. Also added -Sc to the
          generated IDL compiler command line of each project to
          suppress the generation of the TIE classes.

        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:

          Change to reflect the items listed above, and also a new
          method to populate tables in class Servant_Impl_Base that
          store port descriptions. So far the event consumers and
          the facets of the component are stored.

Thu Jun  3 12:37:21 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/NodeManager/Node_Daemon.cpp:

          Used OS_NS_stdio.h header file for fopen  fclose methods defined
          in ACE_OS namespace.

Thu Jun  3 10:51:32 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/NodeManager/NodeDaemon.idl:

          Changed #include "Deployment.idl" to "#include
          ciao/Deployment.idl" to conform to the DnC include format.

Wed Jun  2 23:26:41 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/Config_Handlers/CompImplDesc_Handler.h:
        * DnC/Config_Handlers/DnC_Dump.h:
        * DnC/ExecutionManager/ExecutionManager.mpc:
        * DnC/ExecutionManager/ExecutionManager_Impl.h:
        * DnC/NodeApplication/NodeApplication.mpc:
        * DnC/NodeApplicationManager/NodeApplicationManager.mpc:
        * DnC/NodeManager/NodeDaemon.mpc:
        * DnC/NodeManager/NodeDaemon_Impl.cpp:
        * DnC/RepositoryManager/RepositoryManager.mpc:
        * DnC/tests/NodeApplicationTest/NodeAppTest.mpc:
        * DnC/tests/NodeApplicationTest/NodeAppTest_RoundTrip.idl:
        * DnC/tests/NodeApplicationTest/NodeApp_test_client.cpp:
        * DnC/tests/NodeApplicationTest/NodeApp_test_client_simple.cpp:
        * DnC/tests/NodeApplicationTest/run_test_simple.pl:

          Updated these files to make it work with the new directory
          structure.

          Now, Let me explain the issue.
          When I started implement the new DnC spec I was forced to change
          some of the CIAO core implementations. The one very important
          CIAO session container implementation is changed but not
          significantly. However because we use MPC templates extensively
          in CIAO some of the legacy mpb files is causing some trouble. I
          catched this mistake when I was actually using some of the newly
          provided functionalities in the conatainer, the red light
          showed itself as a run time relocation error.

          Another driving force of these change is from CIDLC. Since in
          the generated code ciao/*** is used as the include file name,
          there is no way that I can make the new container implementation
          link with the servant project of the component implementation.

Wed Jun  2 23:21:37 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/ciao/CCM_Base.idl:
        * DnC/ciao/CCM_Component.idl:
        * DnC/ciao/CCM_Container.idl:
        * DnC/ciao/CCM_Container_Ex.idl:
        * DnC/ciao/CCM_Core.mpc:
        * DnC/ciao/CCM_Event.idl:
        * DnC/ciao/CCM_Transaction.idl:
        * DnC/ciao/CIAO_Client_Export.h:
        * DnC/ciao/CIAO_Container_Export.h:
        * DnC/ciao/CIAO_Server_Export.h:
        * DnC/ciao/CIAO_Value.idl:
        * DnC/ciao/CIAO_common.h:
        * DnC/ciao/CVS:
        * DnC/ciao/Client_init.cpp:
        * DnC/ciao/Client_init.h:
        * DnC/ciao/Components.idl:
        * DnC/ciao/ComponentsC.h:
        * DnC/ciao/ComponentsS.h:
        * DnC/ciao/Container_Base.cpp:
        * DnC/ciao/Container_Base.h:
        * DnC/ciao/Container_Base.inl:
        * DnC/ciao/Container_Base.pidl:
        * DnC/ciao/Cookies.cpp:
        * DnC/ciao/Cookies.h:
        * DnC/ciao/Cookies.inl:
        * DnC/ciao/CosPersistentState.idl:
        * DnC/ciao/Deployment.idl:
        * DnC/ciao/Deployment_Core.idl:
        * DnC/ciao/Deployment_stub_export.h:
        * DnC/ciao/Deployment_svnt_export.h:
        * DnC/ciao/NodeApp_CB_Impl.cpp:
        * DnC/ciao/NodeApp_CB_Impl.h:
        * DnC/ciao/NodeApplication_CallBack.idl:
        * DnC/ciao/NodeApplication_Impl.cpp:
        * DnC/ciao/NodeApplication_Impl.h:
        * DnC/ciao/NodeApplication_Impl.inl:
        * DnC/ciao/Server_init.cpp:
        * DnC/ciao/Server_init.h:
        * DnC/ciao/Version.h:

          Added these files to replace the files in the old DnC/Core directory.

Wed Jun  2 22:55:57 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/Core/CCM_Base.idl:
        * DnC/Core/CCM_BaseS.cpp:
        * DnC/Core/CCM_BaseS.h:
        * DnC/Core/CCM_Component.idl:
        * DnC/Core/CCM_ComponentS.cpp:
        * DnC/Core/CCM_ComponentS.h:
        * DnC/Core/CCM_Container.idl:
        * DnC/Core/CCM_ContainerS.cpp:
        * DnC/Core/CCM_Container_Ex.idl:
        * DnC/Core/CCM_Container_ExS.cpp:
        * DnC/Core/CCM_Core.mpc:
        * DnC/Core/CCM_Event.idl:
        * DnC/Core/CCM_EventS.cpp:
        * DnC/Core/CCM_EventS.h:
        * DnC/Core/CCM_Transaction.idl:
        * DnC/Core/CCM_TransactionS.cpp:
        * DnC/Core/CIAO_Client_Export.h:
        * DnC/Core/CIAO_Container_Export.h:
        * DnC/Core/CIAO_Server_Export.h:
        * DnC/Core/CIAO_Value.idl:
        * DnC/Core/CIAO_ValueS.cpp:
        * DnC/Core/CIAO_ValueS.h:
        * DnC/Core/CIAO_common.h:
        * DnC/Core/Client_init.cpp:
        * DnC/Core/Client_init.h:
        * DnC/Core/Components.idl:
        * DnC/Core/Container_Base.cpp:
        * DnC/Core/Container_Base.h:
        * DnC/Core/Container_Base.inl:
        * DnC/Core/Container_Base.pidl:
        * DnC/Core/Cookies.cpp:
        * DnC/Core/Cookies.h:
        * DnC/Core/Cookies.inl:
        * DnC/Core/CosPersistentState.idl:
        * DnC/Core/CosPersistentStateS.cpp:
        * DnC/Core/Deployment.idl:
        * DnC/Core/DeploymentS.cpp:
        * DnC/Core/Deployment_Core.idl:
        * DnC/Core/Deployment_stub_export.h:
        * DnC/Core/Deployment_svnt_export.h:
        * DnC/Core/GNUmakefile:
        * DnC/Core/GNUmakefile.CIAO_Client:
        * DnC/Core/GNUmakefile.CIAO_Container:
        * DnC/Core/GNUmakefile.CIAO_Server:
        * DnC/Core/GNUmakefile.Deployment_stub:
        * DnC/Core/GNUmakefile.Deployment_svnt:
        * DnC/Core/NodeApp_CB_Impl.cpp:
        * DnC/Core/NodeApp_CB_Impl.h:
        * DnC/Core/NodeApplication_CallBack.idl:
        * DnC/Core/NodeApplication_Impl.cpp:
        * DnC/Core/NodeApplication_Impl.h:
        * DnC/Core/NodeApplication_Impl.inl:
        * DnC/Core/Object_Set_T.cpp:
        * DnC/Core/Object_Set_T.h:
        * DnC/Core/Object_Set_T.inl:
        * DnC/Core/Server_init.cpp:
        * DnC/Core/Server_init.h:
        * DnC/Core/Version.h:
        * DnC/Core/:

          Removed all these files to avoid the suite the change of the
          directory. Note: now DnC/Core is replaced by DnC/ciao.

Wed Jun  2 21:54:51 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * ciao/CCM_Base.idl:

          Fixed identifier of a member of PortDescription - changed
          'Name' to 'name', to conform to the CCM spec.

Wed Jun  2 19:22:29 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        * ChangeLog:

          Forgot to add change description for the previous change.

Wed Jun  2 19:07:01 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        * ciao/CIAO_Client_Export.h:
        * ciao/CIAO_Container_Export.h:
        * ciao/CIAO_Export.h:
        * ciao/CIAO_Server_Export.h:
        * examples/OEP/BasicSP/BasicSP_stub_export.h:
        * examples/OEP/BasicSP/BasicSP_svnt_export.h:
        * examples/OEP/BasicSP/BMClosedED/BMClosedED_exec_export.h:
        * examples/OEP/BasicSP/BMClosedED/BMClosedED_stub_export.h:
        * examples/OEP/BasicSP/BMClosedED/BMClosedED_svnt_export.h:
        * examples/OEP/BasicSP/BMDevice/BMDevice_exec_export.h:
        * examples/OEP/BasicSP/BMDevice/BMDevice_stub_export.h:
        * examples/OEP/BasicSP/BMDevice/BMDevice_svnt_export.h:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay_exec_export.h:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay_stub_export.h:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay_svnt_export.h:
        * examples/OEP/BasicSP/EC/EC_exec_export.h:
        * examples/OEP/BasicSP/EC/EC_stub_export.h:
        * examples/OEP/BasicSP/EC/EC_svnt_export.h:
        * tools/Segment_Timer/Segment_Timer_Export.h:
        * tools/Simple_Component_Server/Simple_Server_Stub_Export.h:
        * tools/XML_Helpers/XML_Helpers_Export.h:

          Regenerated these files with -s option to take care of static
          builds on Windows.

Wed Jun  2 18:57:29 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/Core/NodeApplication_Impl.cpp:
          Fixed a few bugs inside.

        * DnC/tests/NodeApplicationTest/NodeAppTest.mpc:
        * DnC/tests/NodeApplicationTest/NodeApp_test_client_simple.cpp:
        * DnC/tests/NodeApplicationTest/NodeApp_test_client.cpp:
        * DnC/tests/NodeApplicationTest/run_test.pl:
        * DnC/tests/NodeApplicationTest/NodeApp_test_client_simple.cpp:

          Added a test to do a more complete test on NodeApplication.
          Please note that there is a name change of files. The mpc file
          explains very thing.

        * DnC/Core/Client_init.cpp:
          I made the default value for debug_level 1, later we should
          reverse the change.

Wed Jun  2 18:37:24 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp:
        * DnC/NodeManager/NodeDaemon_Impl.cpp:
        * DnC/NodeManager/Node_Daemon.cpp:

          Changes to ensure that the DomainApplicationManager is capable
          of calling the NodeDaemon to spawn a NodeApplicationManager for
          the corresponding application.

Wed Jun  2 16:38:48 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/CompImplDesc_Handler.cpp:
        * DnC/Config_Handlers/DnC_Dump.cpp:
        * DnC/Config_Handlers/IAD_Handler.cpp:
        * DnC/Config_Handlers/MID_Handler.cpp:
        * DnC/Config_Handlers/NIA_Handler.cpp:
        * DnC/Config_Handlers/PC_Handler.cpp:

          Made changes to fix testing errors.

Wed Jun  2 15:50:12 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager.mpc

          Added Config_Handlers library to fix linking probelm in Windows.

        * DnC/ExecutionManager/ExecutionManager.mpc

          Added ciao_deployment_stub and CIAO_Server libraries to fix
          linking probelm in Windows.

        * DnC/RepositoryManager/RepositoryManager.mpc

          Added ciao_deployment_stub library to fix linking probelm in Windows.


Wed Jun  2 15:07:56 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp

          Fixed errors in split_plan() function to make it work.


Wed Jun  2 12:30:56 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/CompImplDesc_Handler.cpp:
        * DnC/Config_Handlers/DnC_Dump.cpp:
        * DnC/Config_Handlers/IAD_Handler.cpp:
        * DnC/Config_Handlers/MID_Handler.cpp:
        * DnC/Config_Handlers/NIA_Handler.cpp:
        * DnC/Config_Handlers/PCI_Handler.cpp:
        * DnC/Config_Handlers/PC_Handler.cpp:

          Made changes to fix some more testing errors.

Wed Jun  2 11:51:57 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/ExecutionManager/Execution_Manager.cpp:
        * DnC/ExecutionManager/ExecutionManager_Impl.cpp:

          Fixed hashtable used within the ExcutionManager to check for
          duplicates in the right manner.

Wed Jun  2 10:31:27 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/tests/Config_Handlers/handler_test.mpb:
        * DnC/Config_Handlers/Config_Handlers.mpc:
          Updated these two file to make it compile with working on the
          system like Debian or RedHat which have the pre-build binary
          installed instead of xerces source.

Wed Jun  2 00:48:30 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/CAD_Handler.cpp:
        * DnC/Config_Handlers/CompImplDesc_Handler.cpp:
        * DnC/Config_Handlers/CompPkgDesc_Handler.cpp:
        * DnC/Config_Handlers/DnC_Dump.cpp:
        * DnC/Config_Handlers/Process_Element.i:
        * DnC/Config_Handlers/Process_Element.tpp:

          Made changes to fix testing errors.

Tue Jun  1 18:13:23 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/Core/NodeApplication_Impl.cpp:
        * DnC/NodeApplicationManager/NodeApplicationManager_Impl.cpp:
          Updated these two files to fix the bug related to nil ();

Tue Jun  1 18:09:19 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/NodeManager/NodeDaemon.mpc

          Modify this to fix linking errors for missing library.

Tue Jun  1 17:52:29 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/NodeApplicationManager/NodeApplicationManager.mpc

          Modify this to fix linking errors.


Tue Jun  1 17:39:57 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/CompPortDesc_Handler.cpp:
        * DnC/Config_Handlers/CompPortDesc_Handler.h:
        * DnC/Config_Handlers/CompPropDesc_Handler.cpp:
        * DnC/Config_Handlers/CompPropDesc_Handler.h:

          Removed the above handlers as they are not used at all.

        * DnC/Config_Handlers/Config_Handlers.mpc:

          Updated the MPC file accordingly.

Tue Jun  1 15:30:49 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Basic_Handler.h:
        * DnC/Config_Handlers/CAD_Handler.cpp:
        * DnC/Config_Handlers/Cap_Handler.cpp:
        * DnC/Config_Handlers/CompImplDesc_Handler.cpp:
        * DnC/Config_Handlers/CompIntrDesc_Handler.cpp:
        * DnC/Config_Handlers/CompPkgDesc_Handler.cpp:
        * DnC/Config_Handlers/CompPortDesc_Handler.cpp:
        * DnC/Config_Handlers/Process_Element.i:
        * DnC/Config_Handlers/Process_Element.tpp:

          Made changes to fix some testing errors

Tue Jun  1 15:08:23 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/NodeManager/NodeApplicationManager_Impl.h:
        * DnC/NodeManager/NodeApplicationManager_Impl.cpp:

          Removed these files; New implementation present in
          DnC/NodeApplicationManager directory

        * DnC/NodeManager/Node_Daemon.cpp:
        * DnC/NodeManager/NodeDaemon_Impl.h:
        * DnC/NodeManager/NodeDaemon_Impl.cpp:
        * DnC/NodeManager/NodeDaemon.mpc:

          Changed the Node Manager to interact with the new
          NodeApplication Manager implementation.

Tue Jun  1 15:08:13 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/tests/NodeApplicationTest/run_test.pl:
        * DnC/tests/NodeApplicationTest/NodeApp_test_client.cpp:

          Added run_test.pl to run this test via scripts

Tue Jun  1 14:48:01 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/NodeApplicationManager/NodeApplicationManager_Impl.cpp:
        * DnC/NodeApplicationManager/NodeApplicationManager_Impl.h:
        * DnC/NodeApplicationManager/NodeApplicationManager_Impl.inl:
          Updated the class to cooperate with NodeManager.
          There is some memory management and lifecycle of object issue
          solved by this update. Basically speaking, since NodeManager is
          a daemon (running forever if nothing went wrong) we have to make
          sure that the NodeApplicationManager will be actually destroyed
          when its not needed any more. This update enables us to do this
          and prevented us from hacking the OMG IDL file.

Tue Jun  1 12:36:10 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Basic_Handler.cpp:
        * DnC/Config_Handlers/Basic_Handler.h:
        * DnC/Config_Handlers/CAD_Handler.cpp:
        * DnC/Config_Handlers/CAD_Handler.h:
        * DnC/Config_Handlers/CPR_Handler.h:
        * DnC/Config_Handlers/Cap_Handler.h:
        * DnC/Config_Handlers/CompImplDesc_Handler.cpp:
        * DnC/Config_Handlers/CompImplDesc_Handler.h:
        * DnC/Config_Handlers/CompIntrDesc_Handler.h:
        * DnC/Config_Handlers/CompPkgDesc_Handler.h:
        * DnC/Config_Handlers/DnC_Dump.cpp:
        * DnC/Config_Handlers/Domain_Handler.h:
        * DnC/Config_Handlers/IAD_Handler.h:
        * DnC/Config_Handlers/IR_Handler.h:
        * DnC/Config_Handlers/MID_Handler.h:
        * DnC/Config_Handlers/NIA_Handler.h:
        * DnC/Config_Handlers/PCI_Handler.h:
        * DnC/Config_Handlers/PC_Handler.h:
        * DnC/Config_Handlers/Plan_Handler.h:
        * DnC/Config_Handlers/Process_Element.i:

          Made changes to fix testing errors.

Tue Jun  1 12:09:18 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/NodeApplicationManager/NodeApplicationManager_Impl.cpp:
        * DnC/NodeApplicationManager/NodeApplicationManager_Impl.h:
          Changed the init method to return a objectRef of
          the NodeApplicationManager to make NodeManager happy.

Tue Jun  1 11:40:29 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Basic_Handler.h
        * DnC/Config_Handlers/CompIntrDesc_Handler.h
        * DnC/Config_Handlers/CompPkgDesc_Handler.h
        * DnC/Config_Handlers/CompPortDesc_Handler.h
        * DnC/Config_Handlers/CompPropDesc_Handler.h
        * DnC/Config_Handlers/Config_Error_Handler.h
        * DnC/Config_Handlers/DnC_Dump.h
        * DnC/Config_Handlers/IAD_Handler.h
        * DnC/Config_Handlers/IR_Handler.h
        * DnC/Config_Handlers/MID_Handler.h
        * DnC/Config_Handlers/NIA_Handler.h
        * DnC/Config_Handlers/PCI_Handler.h
        * DnC/Config_Handlers/PC_Handler.h
        * DnC/Config_Handlers/RUK_Handler.h

          Fixed the export libary problem for Windows.

Tue Jun  1 10:49:49 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/CAD_Handler.cpp:
        * DnC/Config_Handlers/Domain_Handler.cpp:

          Made changes to fix testing errors.

Tue Jun  1 10:41:49 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/NodeApplicationManager/NodeApplicationManager_Impl.cpp:
        * DnC/NodeApplicationManager/NodeApplicationManager_Impl.h:
        * DnC/NodeApplicationManager/NodeApplicationManager_Impl.inl:
          Finished the NodeApplicationManager except the connection
          part.

Tue Jun  1 10:16:21 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager_Export.h

          Added this file for Windows to export library.


Tue Jun  1 10:12:46 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/RepositoryManager.idl:
        * DnC/RepositoryManager/RepositoryManager.mpc:
        * DnC/RepositoryManager/RepositoryManager_Impl.cpp:
        * DnC/RepositoryManager/RepositoryManager_Impl.h:
        * DnC/RepositoryManager/Repository_Manager.cpp:

          Made a first-cut check-i for repository manager.

Tue Jun  1 10:01:25 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        * examples/OEP/BasicSP/BMDevice/BMDevice.cidl:
        * examples/OEP/BasicSP/BMClosedED/BMClosedED.cidl:

          Included BasicSP.idl to fix problems during static linking.

Tue Jun  1 00:42:56 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/DnC_Dump.cpp:
        * DnC/Config_Handlers/Plan_Handler.cpp:
        * DnC/Config_Handlers/Process_Element.cpp:

          Made changes to fix some testing errors.


Tue Jun  1 00:32:22 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/CAD_Handler.cpp:
        * DnC/Config_Handlers/CPK_Handler.cpp:
        * DnC/Config_Handlers/DnC_Dump.cpp:
        * DnC/Config_Handlers/IAD_Handler.cpp:
        * DnC/Config_Handlers/PC_Handler.cpp:
        * DnC/Config_Handlers/Plan_Handler.cpp:
        * DnC/Config_Handlers/Process_Element.cpp:

          Made changes to fix some testing errors.

Mon May 31 18:50:28 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/PC_Handler.cpp:
        * DnC/Config_Handlers/Plan_Handler.cpp:

          Made changes to fix some testing errors.

Mon May 31 18:27:47 2004  Venkita Subramonian  <venkita@cs.wustl.edu>
         * tools/Segment_Timer/Segment_Timer.h:
         * tools/static_configurator/Static_Configurator.cpp:

           Made some fixes related to DLL exports to get rid of
           build errors on Windows.

Mon May 31 18:25:30 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Any_Handler.cpp:
        * DnC/Config_Handlers/CPK_Handler.cpp:
        * DnC/Config_Handlers/CompPkgDesc_Handler.cpp:
        * DnC/Config_Handlers/PC_Handler.cpp:
        * DnC/Config_Handlers/Plan_Handler.cpp:
        * DnC/Config_Handlers/Property_Handler.cpp:

          Made some changes to fix some testing errors.


Mon May 31 17:18:55 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Any_Handler.cpp:
        * DnC/Config_Handlers/CompIntrDesc_Handler.cpp:
        * DnC/Config_Handlers/CompPropDesc_Handler.cpp:
        * DnC/Config_Handlers/DT_Handler.cpp:
        * DnC/Config_Handlers/DT_Handler.h:

          Resolved Typecode and Any related errors relating to parsing the
          Deployment plan.

Mon May 31 16:33:16 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantSourceGenerator.cpp:

          Added support for the emits-related navigation method,
          and automatic registration of value factories for
          event consumers. Also fixed bug in code generation
          for uses multiple.

        * ciao/Container_Base.h:

          Added CIAO_REGISTER_OBV_FACTORY macro, used by the
          CIDL compiler when generating factory registration
          calls for event consumers. There is also a version of
          this macro called CIAO_REGISTER_VALUE_FACTORY in
          CIAO_common.h. This version takes an extra argument
          which is an ORB pointer. This macro was separately
          added, planning for the day when we may want
          components to run with a separate process and/or ORB
          from their containers. These two versions will have
          to be reconciled at some point.

        * tools/Segment_Timer/Segment_Timer.mpc:

          Added the export file to the project.

        * tools/XML_Helpers/RTConfig_Handlers.cpp:

          Added some static casts to eliminate warnings on
          MSVC.

Mon May 31 16:19:17 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/NodeApplicationManager/NodeApplicationManager.mpc:
          Updated this file.

        * DnC/NodeApplicationManager/CIAO_NAM_Export.h:
          Added this export file.

        * DnC/NodeApplicationManager/NodeApplicationManager.cpp:
          Removed this file since NodeApplicationManager will be
          collocated with NodeManager.

        * DnC/NodeApplicationManager/CIAO_NodeApplicationManager.idl:
          Removed this file since I have moved this into deployment_svnt
          project.

        * DnC/Core/NodeApplication_Impl.cpp:
          Changed from 0 to CORBA::Object::_nil () as return value.

Mon May 31 15:18:25 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/test/NodeApplicationTest/NodeAppTest_RoundTrip.idl:
        * DnC/test/NodeApplicationTest/NodeApp_test_client.cpp:
        * DnC/test/NodeApplicationTest/RoundTripEI.idl:
        * DnC/test/NodeApplicationTest/RoundTrip_exec.cpp:
        * DnC/test/NodeApplicationTest/RoundTrip_exec.h:

          Changed the idl interface to supports rather than provides as
          this feature has not been implemented yet.

Mon May 31 14:48:21 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager.mpc:
        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.h:

          Added export library thing for Windows.


Mon May 31 13:35:15 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Config_Handlers.mpc:

          Added the missing dependency library to the mpc file, which
          is CIAO_Server library.

Mon May 31 13:10:15 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager.mpc:

          Added necessary dependency libraries to the mpc file, which
          causes build probelm under Windows.

        * DnC/DomainApplication/DomainApplication_Impl.h
        * DnC/DomainApplication/DomainApplication_Impl.cpp

          Removed these files since DomainApplication are now
          combined with DomainApplicationManager.


Mon May 31 11:00:50 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/Core/NodeApplication_Impl.cpp:
          Fixed one bug of the refence count of Component instance
          objectRef.

Mon May 31 00:40:25 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/Core/NodeApplication_Impl.cpp:
        * DnC/Core/NodeApplication_Impl.h:

          Added component/home removal functionality.
          Also added a install method which will be called by
          NodeApplicationManager to install everything which belong
          to the NodeApplication.

Sun May 30 17:47:10 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/tests/NodeApplicationTest:

          Directory for testing CIAO's NodeApplication entity

        * DnC/tests/NodeApplicationTest/NodAppTest.mpc:
          mpc file for this test case

        * DnC/tests/NodeApplicationTest/NodeAppTest_RoundTrip.idl:
        * DnC/tests/NodeApplicationTest/NodeAppTest_RoundTrip.cidl:
        * DnC/tests/NodeApplicationTest/RoundTripEI.idl:

          A simple component as a test case that provides an interface
          LatencyTest which has a single operation defined that cubes a
          long

        * DnC/tests/NodeApplicationTest/RoundTrip_stub_export.h:
        * DnC/tests/NodeApplicationTest/RoundTrip_svnt_export.h:
        * DnC/tests/NodeApplicationTest/RoundTrip_exec_export.h:

          Export files to keep windows happy

        * DnC/tests/NodeApplicationTest/RoundTrip_exec.h:
        * DnC/tests/NodeApplicationTest/RoundTrip_exec.cpp:

          Component implementation definitions

        * DnC/tests/NodeApplicationTest/NodeApp_test_client.cpp:

          Client program that tries to install the RoundTrip home with the
          NodeApplication aka ComponentServer, create the Component,
          i.e. RoundTrip, and invoke the cube long operation.

          This test case exercises the call path for home installation,
          component creation within the new DnC specification. This test
          case should also have component removal operations, which will
          be added as and when this is implemented in CIAO.

Sun May 30 15:43:24 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/NodeApplication/NodeApplication.mpc:
        * DnC/NodeApplication/NodeApplication.cpp:

          Resolved compilation and link errors. Now the NodeApplication
          can be started generating an ior! Next step will be to write a
          test client to install homes and create components.

Sun May 30 14:36:21 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/NodeApplication/NodeApplication.mpc:
        * DnC/NodeApplication/NodeApplication.cpp:
        * DnC/Core/Container_Base.h:
        * DnC/Core/Container_Base.cpp:
        * DnC/Core/Deployment_Core.idl:
        * DnC/Core/NodeApplication_Impl.h:
        * DnC/Core/NodeApplication_Impl.cpp:

        Updateed those files to finish home creation part.

Sat May 29 15:25:22 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/RepositoryManager/RepositoryManager_Impl.h:
        * DnC/RepositoryManager/RepositoryManager_Impl.cpp:
        * DnC/RepositoryManager/RepositoryManager.mpc:

          First cut implementation of Repository Manager.

Fri May 28 23:17:44 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/NodeManager/NodeDaemon.idl:
        * DnC/NodeManager/NodeDaemon.mpc:
        * DnC/NodeManager/Node_Daemon.cpp:
        * DnC/NodeManager/NodeDaemon_Impl.h:

          Fixed compilation and linking errors stemming from refactoring
          DnC core to include the Deployment.idl files. Modified the
          include paths as now these are autogenerated from the
          ciao_deployment.mpb file

        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.h:

          Removed the getApplications () member function the the header
          file. This is not present as a part of the interface. This
          resolves link errors

        * DnC/ExecutionManager/ExecutionManager.mpc:

          Removed the unnecessary ciao_server target from the mpc file as
          this library is not needed

Fri May 28 10:18:45 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp:

          Fixed warnings resulting from non usage of .in () while
          assigning to a _ptr from a _var.

        * DnC/DomaiinApplicationManager/DomainApplicationManager_Impl.inl:
        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.h:

          Created file for storing inline functions

Thu May 27 22:16:26 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/handcrafted/BasicSP_EC/BMClosedED/BMClosedEDE.idl:
        * examples/handcrafted/BasicSP_EC/BMClosedED/BMClosedED_svnt.cpp:
        * examples/handcrafted/BasicSP_EC/BMClosedED/BMClosedED_svnt.h:
        * examples/handcrafted/BasicSP_EC/BMDevice/BMDeviceE.idl:
        * examples/handcrafted/BasicSP_EC/BMDevice/BMDevice_svnt.cpp:
        * examples/handcrafted/BasicSP_EC/BMDevice/BMDevice_svnt.h:
        * examples/handcrafted/BasicSP_EC/BMDisplay/BMDisplayE.idl:
        * examples/handcrafted/BasicSP_EC/BMDisplay/BMDisplay_svnt.cpp:
        * examples/handcrafted/BasicSP_EC/BMDisplay/BMDisplay_svnt.h:
        * examples/handcrafted/BasicSP_EC/EC/ECE.idl:
        * examples/handcrafted/BasicSP_EC/EC/EC_svnt.cpp:
        * examples/handcrafted/BasicSP_EC/EC/EC_svnt.h:

          Removed these files from the Repo. Please be careful when you
          commit files and please double check EVEN you have done make
          realclean!


Thu May 27 22:14:18 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        * tools/static_configurator/Static_Configurator.mpc:
        * tools/static_configurator/Static_Configurator.h:
        * tools/static_configurator/Static_Configurator.cpp:
        * tools/static_configurator/Static_Assembly_Visitors.cpp:
        * tools/static_configurator/Static_Assembly_Parser.cpp:

          Made changes related to performance measurement of static
          configuration mechanisms.

        * tools/Segment_Timer/Segment_Timer_Export.h:
        * tools/Segment_Timer/Segment_Timer.{cpp,h,mpc}:
        * tools/Segment_Timer/README:

          Adding segment timer files. This class is used in the
          performance measurements of static and dynamic configurations.

        * tools/RTComponentServer/RTComponentServer.mpc:
        * tools/Assembly_Deployer/Assembly_Visitors.cpp:
        * tools/Assembly_Deployer/Assembly_Manager.cpp:
        * tools/Assembly_Deployer/Assembly_Impl.cpp:
        * tools/Assembly_Deployer/Assembly_Deployer.mpc:

          Made changes related to performance measurement of dynamic
          configuration mechanisms.

Thu May 27 18:39:10 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.h:
        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp:

          Redefine the Hash map to make all the artifacts (NodeManager,
          NodeApplicationManager, NodeApplication, Connections) handy
          to use. Changed all the member functions to reflect this
          change.

Thu May 27 17:45:26 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/tests/Config_Handlers/handler_test.mpb:

          Added reqires dnc to stop the noise on the scoreboard.

Thu May 27 22:10:27 2004  Emre Turkay <turkaye@dre.vanderbilt.edu>
        * DnC/Core/Deployment.idl:

        Added DeploymentPlan::UUID.

Thu May 27 22:02:21 2004  Emre Turkay  <turkaye@dre.vanderbilt.edu>
        * DnC/Config_Handlers/Plan_Handler.cpp:

        Added handler for DeploymentPlan::UUID

Thu May 27 16:42:26 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp:

          Added a check to make sure that duplicate NodeManager names are
          not added to the internal hashmap maintained in this
          entity. This ensures that the length always corresponds to the
          unique set of node names. Thanks to Gan Deng for pointing this
          out.

Thu May 27 16:38:19 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * DnC/Deployment.xsd: Added UUID element to deploymentPlan.


Thu May 27 13:03:02 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.h:
        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp:

          Added the get_plan_info () method, that parses the plan
          according to the individual nodes on which the plan needs to be
          deployed. Also changed internal tables to use ACE_Vector to
          store plan related information.

Thu May 27 11:02:47 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.h:
        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp:

          Added two new operations get_uuid and set_uuid that will help
          the ExecutionManager associating the DomainApplicationManager
          with a concrete DeploymentPlan passed. These are defined on the
          servant only.

        * DnC/ExecutionManager/ExecutionManager_Impl.h:
        * DnC/ExecutionManager/ExecutionManager_Impl.cpp:

          Implementation of Deployment::ExecutionManager interface. This
          has now been integrated with the DomainApplicationManager.

        * DnC/DomainApplicationManager/Deployment_Configuration.h:

          Removed "#include Core/.." as now the include paths are
          generated from the deployment_svnt.mpb

        * DnC/ExecutionManager/Execution_Manager.cpp:
        * DnC/ExecutionManager/ExectionManager.idl:

          CIAO's implementation of ExecutionManager Daemon
          interface. Added a shutdown () method for clean release of
          resources associated with the Daemon

        * DnC/ExecutionManager/ExecutionManager.mpc:

          mpc file to generate Makefiles!

Wed May 26 17:08:21 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.h
        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.cpp

          Changed the member functions signature in accordance with the
          modified DomainApplicationManager IDL interface.


Wed May 26 16:24:54 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/Core/Deployment.idl

          Modified the IDL interface of the DomainApplicationManager,
          which now integrates the functionality of both
          DomainApplicationManager and DomainApplication in the original
          DnC spec. The old DomainApplication interface is deleted.

Wed May 26 11:33:11 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/Core/CCM_Core.mpc

          Added necessary library (TAO_Valuetype) to the Deployment_stub
          project. Removed the unnecessary Deployment_CoreC.cpp file which
          caused linking error.

Wed May 26 11:15:23 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/Core/NodeApplication_Impl.cpp

          Fixed linking errors because the "start" method on the
          NodeApplication used a wrong function signature.

Wed May 26 11:06:23 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager.mpc
        * DnC/DomainApplicationManager/Deployment_Configuration.inl

          Added these two files.

Wed May 26 11:03:23 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/Core/CCM_Core.mpc

          Fixed typo in this mpc file.

Wed May 26 10:14:23 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager_Impl.*

          Fixed the compiling errors. More functinality will be
          added soon.

        * DnC/DomainApplicationManager/Deployment_Configuration.*

          Added this helper class to deal with deployment topology
          data file.


Tue May 25 22:40:23 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/Core/NodeApp_CB_Impl.cpp:
        * DnC/Core/NodeApp_CB_Impl.h:
        * DnC/Core/NodeApplication_CallBack.idl:
          Added these files for NodeApplication callback interface.

        * DnC/Core/CCM_Core.mpc:
          Updated the file to reflect above changes.

Tue May 25 13:05:35 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/Deployment.idl:
        * DnC/Property.idl:
        * DnC/Deployment.mpc:
        * DnC/Deployment_stub_export.h:
        * DnC/Deployment_stub_export.h:
        * DnC/Core/Container_Impl.h:
        * DnC/Core/Container_Impl.inl:
        * DnC/Core/Container_Impl.cpp:
        * DnC/Core/CCM_Deplyment.idl:

          Removed these files. Everything is moved into the DnC/Core
          directory, also the Deployment.idl is splited into
          Deployment.idl and Deployment_Core.idl. The first one contains
          information needed for DnC runtime except NodeApplication.
          The latter file combines the old Container with NodeApplication.

        * DnC/Core/Deployment.idl:
        * DnC/Core/Deployment_Core.mpc:
        * DnC/Core/Deployment_stub_export.h:
        * DnC/Core/Deployment_stub_export.h:
        * DnC/Core/NodeApplication_Impl.h:
        * DnC/Core/NodeApplication_Impl.inl:
        * DnC/Core/NodeApplication_Impl.cpp:
          Added these files.

        * DnC/Core/CCM_Core.mpc:
          This file updated to reflect the chages above.

          The idea is to use the old container as the NodeApplication and
          the ComponentServer. This implies that new process will be
          spawned upon new NodeApplication is created.

          In turn the NodeApplicationManager will be collocated with
          NodeManager.

          These changes give us advantages for implementing the spec in an
          effecient way without inccuring much confilicts with the Spec.


Tue May 25 12:06:37 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        * tests/RTCCM/Priority_Test/Workers/IOB_Worker_exec.cpp:
        * tests/RTCCM/Priority_Test/Workers/CB_Worker_exec.cpp:
        * tests/RTCCM/Priority_Test/Controllers/Controller_exec.{cpp,h}:
        * tests/RTCCM/Priority_Test/Controllers/Rate_Controller.{cpp,h}:

          Fixed compile errors regarding pure virtual functions not being
          implemented. Added empty method definitions for ciao_preactivate
          and ciao_postactivate.

Tue May 25 12:08:48 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/NodeManager/Node_Daemon.cpp:

          Removed repetitive registration with the IORTable

Tue May 25 12:02:52 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * DnC/Deployment.xsd:

          Initial set of "normalization" changes.


        * DnC/Deployment.xsd.orig:
        * DnC/XMI.xsd.orig:

          Added backup copies.

Mon May 24 14:13:51 2004  Gan Deng  <gan.deng@vanderbilt.edu>

        * DnC/DomainApplicationManager/DomainApplicationManager.h:
        * DnC/DomainApplicationManager/DomainApplicationManager.cpp:

        * DnC/DomainApplication/DomainApplication.h:
        * DnC/DomainApplication/DomainApplication.cpp:

          Added these files.


Mon May 24 21:18:07 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * examples/Hello/descriptors/run_test_remote.pl:
        * examples/Hello/descriptors/run_test_default.pl:

          Updated the test script since Assembly_Deployer takes
          two more command line options.

Mon May 24 19:44:32 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/ADD_Handler.*:
        * DnC/Config_Handlers/ACD_Handler.*:
        * DnC/Config_Handlers/APM_Handler.*:
        * DnC/Config_Handlers/CRDD_Handler.*:
        * DnC/Config_Handlers/DP_Handler.*:
        * DnC/Config_Handlers/IDD_Handler.*:
        * DnC/Config_Handlers/IRDD_Handler.*:
        * DnC/Config_Handlers/MDD_Handler.*:
        * DnC/Config_Handlers/PCD_Handler.*:
        * DnC/Config_Handlers/PPM_Handler.*:
        * DnC/Config_Handlers/PSPE_Handler.*:
        * DnC/Config_Handlers/PSPR_Handler.*:
        * DnC/Config_Handlers/RDD_Handler.*:
        * DnC/Config_Handlers/SID_Handler.*:
        * DnC/Config_Handlers/SPE_Handler.*:
        * DnC/Config_Handlers/SPR_Handler.*:

          Removed the above mentioned handlers as they are
          not used.

Mon May 24 11:50:15 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Plan_Handler.cpp:

          Added changes to reflect the changes made in the IDL file.


Sun May 23 14:31:51 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/NodeManager/NodeDaemon.mpc:

          Added exename flag to set the right executable name to be generated

Sun May 23 13:32:34 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/NodeManager/NodeDaemon.mpc:
        * DnC/NodeManager/NodeApplicationManager_Impl.h:
        * DnC/NodeManager/NodeApplicationManger_Impl.cpp:
        * DnC/NodeManager/NodeDaemon_Impl.cpp:
        * DnC/NodeManager/Node_Daemon.cpp:

          Got the call-chain working, wherein, a preparePlan call to the
          Daemon creates a NodeApplication Manager and passes along the
          plan as well. Next, now the Daemon, depending on the command
          line argument passed can also register with the Naming Service
          using the node-name as the context. This enables multiple
          NodeManagers to be activated on different hosts. An simple IOR
          based scheme will not work in this case.

Fri May 21 20:12:43 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/NodeManager/NodeDaemon.idl:
        * DnC/NodeManager/NodeDaemon.mpc:
        * DnC/NodeManager/NodeDaemon_Impl.h:
        * DnC/NodeManager/NodeDaemon_Impl.cpp:
        * DnC/NodeManager/Node_Daemon.cpp:
        * DnC/NodeManager/NodeApplicationManager_Impl.h:
        * DnC/NodeManager/NodeApplicationManager_Impl.cpp:

          Updated these files inline with the Specification i.e. removed
          un-necessary methods along with making the
          NodeApplicationManager a CORBA::Object rather than a CORBA
          server. In this case, the NodeManager, i.e. the NodeDaemon, will
          share the same ORB with the the Application Manager. Further,
          the mpc file was updated to make things compile and link
          properly.

Thu May 20 23:29:54 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Deployment.xsd:
          Uploaded the new schema.

Thu May 20 19:28:20 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/Core/CCM_Core.mpc
        * DnC/Core/CCM_Deployment.idl
        * DnC/Core/ComponentServer_Impl.cpp
        * DnC/Core/ComponentServer_Impl.h
        * DnC/Core/ComponentServer_Impl.inl
        * DnC/Core/Container_Impl.cpp
        * DnC/Core/Container_Impl.h

          Removed the ComponentInstallation interfaces.
          Now the CORE of new CIAO should be fixed.

Thu May 20 18:54:01 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Deployment.idl:

          Updated the IDL for Component Data Model changes.

Thu May 20 14:44:48 2004  Irfan Pyarali  <irfan@oomworks.com>

        * tests/RTCCM/DiffServ/Controller/Controller.cpp:

          No RT-isms necessary anymore.

Thu May 20 14:31:20 2004  Irfan Pyarali  <irfan@oomworks.com>

        * tests/RTCCM/DiffServ/descriptors/rtsvc.conf:

          This file is no longer needed.

        * tests/RTCCM/DiffServ/descriptors/run_test.pl:

          No need to specify rtsvc.conf file.

        * tools/RTComponentServer/RTComponentServer.cpp (main):

          No need to check that multiple priorities are supported.  Some
          servers can do with one priority.

Thu May 20 13:40:25 2004  Irfan Pyarali  <irfan@oomworks.com>

        * tests/RTCCM/DiffServ/Sender/Sender.mpc:
        * tests/RTCCM/DiffServ/Sender/Custom_Network_Priority_Mapping.cpp:

          Simply refer to the same files in TAO/tests/RTCORBA/Diffserv
          instead of making a copy here.

        * tests/RTCCM/DiffServ/Receiver/Receiver_exec.cpp:
        * tests/RTCCM/DiffServ/Sender/Sender_exec.cpp:
        * tests/RTCCM/DiffServ/descriptors/run_test.pl:

          Minor fixes.

Thu May 20 11:34:33 2004  Irfan Pyarali  <irfan@oomworks.com>

        * tools/ComponentServer/ComponentServer.cpp:
        * tools/Assembly_Deployer/Assembly_Deployer.cpp:

          Added missing include file.

        * tests/RTCCM/DiffServ/descriptors/run_test.pl:

          Added new assembly deployer option.

        * tests/RTCCM/DiffServ/descriptors/rtsvc.conf:

          Added FIFO scheduling option.

        * tests/RTCCM/DiffServ/Controller/Controller.cpp (svc):

          Minor fixes.

Thu May 20 10:36:23 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/Core/CCM_Base.idl
        * DnC/Core/CCM_Component.idl
        * DnC/Core/CCM_Container.idl
        * DnC/Core/CCM_Container_Ex.idl
        * DnC/Core/CCM_Core.mpc
        * DnC/Core/CCM_Deployment.idl
        * DnC/Core/CCM_Event.idl
        * DnC/Core/CCM_Transaction.idl
        * DnC/Core/CIAO_Client_Export.h
        * DnC/Core/CIAO_Container_Export.h
        * DnC/Core/CIAO_Server_Export.h
        * DnC/Core/CIAO_Value.idl
        * DnC/Core/CIAO_common.h
        * DnC/Core/Client_init.cpp
        * DnC/Core/Client_init.h
        * DnC/Core/ComponentInstallation_Impl.cpp
        * DnC/Core/ComponentInstallation_Impl.h
        * DnC/Core/ComponentInstallation_Impl.inl
        * DnC/Core/ComponentServer_Impl.cpp
        * DnC/Core/ComponentServer_Impl.h
        * DnC/Core/ComponentServer_Impl.inl
        * DnC/Core/Component_Base.idl
        * DnC/Core/Components.idl
        * DnC/Core/Container_Base.cpp
        * DnC/Core/Container_Base.h
        * DnC/Core/Container_Base.inl
        * DnC/Core/Container_Base.pidl
        * DnC/Core/Container_Impl.cpp
        * DnC/Core/Container_Impl.h
        * DnC/Core/Container_Impl.inl
        * DnC/Core/Cookies.cpp
        * DnC/Core/Cookies.h
        * DnC/Core/Cookies.inl
        * DnC/Core/CosPersistentState.idl
        * DnC/Core/Object_Set_T.cpp
        * DnC/Core/Object_Set_T.h
        * DnC/Core/Object_Set_T.inl
        * DnC/Core/Server_init.cpp
        * DnC/Core/Server_init.h
        * DnC/Core/Version.h

         Finished refactoring the Core part of CIAO.

Wed May 19 15:15:21 2004  Irfan Pyarali  <irfan@oomworks.com>

        * tests/RTCCM/DiffServ:

          Added a new DiffServ test. This test is similar to the
          RTCORBA/DiffServ test but uses components instead of a client
          and server.

          Here are the new files:

          - Controller/Controller.cpp
          - Controller/Controller.mpc
          - Receiver/Receiver.cidl
          - Receiver/Receiver.idl
          - Receiver/Receiver.mpc
          - Receiver/Receiver_exec.cpp
          - Receiver/Receiver_exec.h
          - Receiver/Receiver_exec_export.h
          - Receiver/Receiver_stub_export.h
          - Receiver/Receiver_svnt_export.h
          - Sender/Custom_Network_Priority_Mapping.cpp
          - Sender/Custom_Network_Priority_Mapping.h
          - Sender/Sender.cidl
          - Sender/Sender.idl
          - Sender/Sender.mpc
          - Sender/Sender_exec.cpp
          - Sender/Sender_exec.h
          - Sender/Sender_exec_export.h
          - Sender/Sender_stub_export.h
          - Sender/Sender_svnt_export.h
          - common/DiffServ.idl
          - common/DiffServ.mpc
          - common/DiffServ_stub_export.h
          - common/DiffServ_svnt_export.h
          - descriptors/CIAO_Installation_Data.ini
          - descriptors/Receiver.csd
          - descriptors/Receiver.ssd
          - descriptors/Sender.csd
          - descriptors/Sender.ssd
          - descriptors/default.cad
          - descriptors/remote.cad
          - descriptors/rtsvc.conf
          - descriptors/test.dat

Tue May 18 23:20:10 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/CompIntrDesc_Handler.cpp:
        * DnC/Config_Handlers/CompIntrDesc_Handler.h:
        * DnC/Config_Handlers/Config_Handlers.mpc:

          Updated for handling HREF and IDREF tags.

Tue May 18 14:43:51 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Property_Handler.h:
        * DnC/Config_Handlers/Property_Handler.cpp:

          Revoked previous commit.

Tue May 18 14:25:25 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Property_Handler.h:
        * DnC/Config_Handlers/Property_Handler.cpp:

          Added a xercesc::DOMNode * as a formal argument. Though this
          argument is unnecessary in the process_property () function,
          this was necessary to have a common signature for all the
          process_* functions, so that they could be templatized.

Tue May 18 12:01:14 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/CAD_Handler.cpp:
        * DnC/Config_Handlers/CAD_Handler.h:

          Updated to handle HREF and IDREF tags.

Tue May 18 06:30:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * DnC/NodeApplicationManager/NodeApplicationManager.mpc:
          Fixed typos in this MPC file

Tue May 18 00:54:00 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/CAD_Handler.cpp:
        * DnC/Config_Handlers/CAD_Handler.h:
        * DnC/Config_Handlers/Config_Handlers.mpc:
        * DnC/Config_Handlers/DnC_Dump.cpp:
        * DnC/Deployment.idl:

          Made a change to the IDL for the ComponentDataModel
          elements.

          Updated the affected handlers.

Mon May 17 22:15:11 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        * docs/index.html:
        * docs/EnvVars.html:

          Left over files from RTCIAO-tests branch merge. Thanks to
          Nanbor for pointing this out.

Mon May 17 21:07:25 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        * tools/static_configurator/Static_Assembly_Visitors.h:
        * tools/static_configurator/Static_Configurator.cpp:
        * tools/static_configurator/Static_Configurator.mpc:

          Fixed some compile errors because of a typo.

Mon May 17 19:29:43 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        * tools/RTComponentServer/RTServer_Impl.cpp:
        * tools/RTComponentServer/RTServer_Impl.h:
        * tools/RTComponentServer/RTServer_Impl.inl: Added extra
          parameters to RTContainer_Impl, RTSession_Container and
          ComponentServer_Impl ctors for static configuration.

        * tools/static_configurator/Static_Assembly.h:
        * tools/static_configurator/Static_Assembly_Visitors.cpp:
        * tools/static_configurator/Static_Assembly_Visitors.h:
        * tools/static_configurator/Static_Configurator.cpp:
        * tools/static_configurator/Static_Configurator.h:
        * tools/static_configurator/Static_Configurator.mpc:

          Changes to statically parse .rtcad files and generate main
          driver for static RTCCM applications.

Mon May 17 16:16:37 2004  Venkita Subramonian  <venkita@cs.wustl.edu>

        Merging RTCIAO-tests branch to the main trunk. This branch
        contained the RTCCM tests from Nanbor (nanbor@txcorp.com).

        * ciao/CIAO_common.h:
        * ciao/Client_init.cpp: Minor modifications to CIAO core. Addition
          of CIAO_debug_level.

        * ciao/ComponentInstallation_Impl.cpp:
        * ciao/ServerActivator_Impl.cpp:
        * ciao/ServerActivator_Impl.h: Addition of extra command line
          flags to be passed on to the component server during its spawning.

        * tests/RTCCM/Priority_Test/descriptors/CB_Worker.csd:
        * tests/RTCCM/Priority_Test/descriptors/IOB_Worker.csd:
        * tests/RTCCM/Priority_Test/descriptors/Worker.ssd:
        * tests/RTCCM/Priority_Test/descriptors/CIAO_Installation_Data.ini:
        * tests/RTCCM/Priority_Test/descriptors/Controller.csd:
        * tests/RTCCM/Priority_Test/descriptors/Controller.ssd:
        * tests/RTCCM/Priority_Test/descriptors/RTsvc.conf:
        * tests/RTCCM/Priority_Test/descriptors/svcmap.dat:
        * tests/RTCCM/Priority_Test/descriptors/test.dat:
        * tests/RTCCM/Priority_Test/descriptors/test.rtd:
        * tests/RTCCM/Priority_Test/descriptors/basic-remote.cad:
        * tests/RTCCM/Priority_Test/descriptors/basic_remote.pl:
        * tests/RTCCM/Priority_Test/descriptors/basic_rt.rtd:
        * tests/RTCCM/Priority_Test/descriptors/basic_test.pl:
        * tests/RTCCM/Priority_Test/descriptors/bench.conf:
        * tests/RTCCM/Priority_Test/descriptors/Controller25.csd:
        * tests/RTCCM/Priority_Test/descriptors/Controller50.csd:
        * tests/RTCCM/Priority_Test/descriptors/Controller75.csd:
        * tests/RTCCM/Priority_Test/descriptors/demo-25.cad:
        * tests/RTCCM/Priority_Test/descriptors/demo-50.cad:
        * tests/RTCCM/Priority_Test/descriptors/demo.cad:
        * tests/RTCCM/Priority_Test/descriptors/no-rt-3rates.cad:
        * tests/RTCCM/Priority_Test/descriptors/rate_test.pl:
        * tests/RTCCM/Priority_Test/descriptors/remote.dat:
        * tests/RTCCM/Priority_Test/descriptors/rt-3rate-rt-high-dec.cad:
        * tests/RTCCM/Priority_Test/descriptors/rt-3rate-rt-high-inc.cad:
        * tests/RTCCM/Priority_Test/descriptors/rt-3rate-rt-low-dec.cad:
        * tests/RTCCM/Priority_Test/descriptors/rt-3rate-rt-low-inc.cad:
        * tests/RTCCM/Priority_Test/descriptors/rt-3rate-rt-mid-dec.cad:
        * tests/RTCCM/Priority_Test/descriptors/rt-3rate-rt-mid-inc.cad:
        * tests/RTCCM/Priority_Test/descriptors/rt-3rates-dec.cad:
        * tests/RTCCM/Priority_Test/descriptors/rt-3rates-inc.cad:
        * tests/RTCCM/Priority_Test/descriptors/rt-3rates-laned-dec.cad:
        * tests/RTCCM/Priority_Test/descriptors/rt-3rates-laned-inc.cad:
        * tests/RTCCM/Priority_Test/descriptors/shared_rt.rtd:

          New files for running the test.

        * tests/RTCCM/Priority_Test/Priority_Test.mpc:
        * tests/RTCCM/Priority_Test/Workers/Worker.mpc:
        * tests/RTCCM/Priority_Test/Controllers/Controller.mpc:  Manually
          changed the generated MPC files as the "depends" keyword is
          depricated by "after" in MPC, and the dependencies is broken in
          earlier changes in MPC generator scripts.

        * tests/RTCCM/Priority_Test/Priority_Test.idl: Changed the use of
          "unsigned long" type to "long".  CIDL compiler doesn't seem to
          support unsigned long yet.

        * tests/RTCCM/Priority_Test/Workers/Worker.idl: Fixed a typo.

        * tests/RTCCM/Priority_Test/Workers/CB_Worker_exec.cpp:
        * tests/RTCCM/Priority_Test/Workers/CB_Worker_exec.h:
        * tests/RTCCM/Priority_Test/Workers/IOB_Worker_exec.cpp:
        * tests/RTCCM/Priority_Test/Workers/IOB_Worker_exec.h:  Fixed a
          couple of compilation errors and changed some operation
          signatures to match the interface change in Priority_Test.idl.

        * tests/RTCCM/Priority_Test/Priority_Test.idl:
        * tests/RTCCM/Priority_Test/Controllers/Controller.cidl:
        * tests/RTCCM/Priority_Test/Controllers/Controller.idl:
        * tests/RTCCM/Priority_Test/Controllers/Controller.mpc:
        * tests/RTCCM/Priority_Test/Controllers/ControllerEI.idl:
        * tests/RTCCM/Priority_Test/Controllers/Controller_exec.cpp:
        * tests/RTCCM/Priority_Test/Controllers/Controller_exec.h:
        * tests/RTCCM/Priority_Test/Controllers/Controller_exec_export.h:
        * tests/RTCCM/Priority_Test/Controllers/Controller_stub_export.h:
        * tests/RTCCM/Priority_Test/Controllers/Controller_svnt_export.h:
        * tests/RTCCM/Priority_Test/Controllers/Pulser.cpp:
        * tests/RTCCM/Priority_Test/Controllers/Pulser.h:
        * tests/RTCCM/Priority_Test/Controllers/Rate_Controller.h:
        * tests/RTCCM/Priority_Test/Controllers/Rate_Controller.cpp:
        * tests/RTCCM/Priority_Test/Workers/CB_Worker_exec.cpp:
        * tests/RTCCM/Priority_Test/Workers/CB_Worker_exec.h:
        * tests/RTCCM/Priority_Test/Workers/IOB_Worker_exec.cpp:
        * tests/RTCCM/Priority_Test/Workers/IOB_Worker_exec.h:
        * tests/RTCCM/Priority_Test/Workers/README:
        * tests/RTCCM/Priority_Test/Workers/Worker.cidl:
        * tests/RTCCM/Priority_Test/Workers/Worker.idl:
        * tests/RTCCM/Priority_Test/Workers/Worker.mpc:
        * tests/RTCCM/Priority_Test/Workers/WorkerEI.idl:
        * tests/RTCCM/Priority_Test/Workers/Worker_exec_export.h:
        * tests/RTCCM/Priority_Test/Workers/Worker_stub_export.h:
        * tests/RTCCM/Priority_Test/Workers/Worker_svnt_export.h:
        * tests/RTCCM/Priority_Test/descriptors/CB_Worker.csd:
        * tests/RTCCM/Priority_Test/descriptors/IOB_Worker.csd:
        * tests/RTCCM/Priority_Test/descriptors/Worker.ssd:

          New files for test Worker components.

        * tests/RTCCM/Priority_Test/Priority_Test.idl:
        * tests/RTCCM/Priority_Test/Priority_Test.mpc:
        * tests/RTCCM/Priority_Test/Priority_Test_stub_export.h:
        * tests/RTCCM/Priority_Test/Priority_Test_svnt_export.h:

          Added files for RTCCM Priority_Test project.

        * examples/OEP/BasicSP/BMClosedED/BMClosedED_exec.cpp:
        * examples/OEP/BasicSP/BMDevice/BMDevice_exec.cpp:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay_exec.cpp:
        * examples/OEP/BasicSP/EC/EC_exec.cpp:
        * examples/OEP/BasicSP/EC/client.cpp:
        * examples/OEP/BasicSP/EC/controller.cpp:
        * examples/OEP/Display/GPS/GPS_exec.cpp:
        * examples/OEP/Display/GPS/GPS_tracing_exec.cpp:
        * examples/OEP/Display/NavDisplay/NavDisplay_exec.cpp:
        * examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.cpp:
        * examples/OEP/Display/RateGen/RateGen_exec.cpp:
        * performance-tests/Benchmark/RoundTrip/RoundTrip_exec.cpp:
        * performance-tests/Benchmark/RoundTripClient/RoundTripClient_exec.cpp:
        * performance-tests/Benchmark/RoundTripServer/LatencyTest.cpp:
        * performance-tests/Benchmark/RoundTripServer/RoundTripServer.mpc:

          Added CIAO::debug_level to facilitate conditional printing of
          debug messages.

        * performance-tests/Benchmark/RoundTripClient/run_test.pl:
        * performance-tests/Benchmark/RoundTripClient/run_test_ior_cad.pl:

          Setting CIAO_ROOT if not already set.

        * tools/Assembly_Deployer/Assembly_Deployer.cpp:
        * tools/Assembly_Deployer/Assembly_Impl.cpp:
        * tools/Assembly_Deployer/Assembly_Impl.h:
        * tools/Assembly_Deployer/Assembly_Impl.inl:
        * tools/Assembly_Deployer/Assembly_Visitors.cpp:
        * tools/RTComponentServer/ComponentServer_Task.cpp:
        * tools/RTComponentServer/RTConfig_Manager.cpp:
        * tools/ServerActivator/ServerActivator.cpp:
        * tools/XML_Helpers/Assembly_Handlers.cpp:
        * tools/XML_Helpers/RTConfig_Handlers.cpp:
        * tools/XML_Helpers/Svcconf_Handler.cpp:

          Minor changes including adding CIAO::debug_level.

        * tools/ComponentServer/ComponentServer.cpp: Changes to run
          component server in SCHED_FIFO class.

        * tools/Daemon/CIAO_Daemon.cpp: Added command line processing for
          extra command-line argument for component server process.

        * tools/XML_Helpers/XMLHelpers.mpc: Added ciao_client to the base
          project list so as to link in the CIAO::debug_level feature.

Mon May 17 19:01:36 2004  Tao Lu  <lu@dre.vanderbilt.edu>

       * DnC/ExecutionManager/ExecutionManager_Impl.cpp:
       * DnC/ExecutionManager/ExecutionManager_Impl.h:
       * DnC/ExecutionManager/ExecutionManager_Impl.inl:
       * DnC/NodeApplicationManager/CIAO_NodeApplicationManager.idl:
       * DnC/NodeApplicationManager/NodeApplicationManager.cpp:
       * DnC/NodeApplicationManager/NodeApplicationManager.mpc:
       * DnC/NodeApplicationManager/NodeApplicationManager_Impl.cpp:
       * DnC/NodeApplicationManager/NodeApplicationManager_Impl.h:
       * DnC/NodeApplicationManager/NodeApplicationManager_Impl.inl:
       * DnC/NodeManager/NodeDaemon.idl:
       * DnC/NodeManager/NodeDaemon.mpc:
       * DnC/NodeManager/NodeDaemon_Impl.cpp:
       * DnC/NodeManager/NodeDaemon_Impl.h:
       * DnC/NodeManager/NodeDaemon_Impl.inl:
       * DnC/NodeManager/Node_Daemon.cpp:
         Added these files.

       * DnC/Node/NodeApplicationManager_Impl.h
       * DnC/Node/NodeApplication_Impl.h
         Removed these files.

Mon May 17 16:17:40 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Plan_Handler.cpp:
        * DnC/Config_Handlers/Plan_Handler.h:

          Updated the handler to handle updated IDREFs.

Mon May 17 10:11:46 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Plan_Handler.h:
        * DnC/Config_Handlers/Domain_Handler.h:

          Replaced the use of a Synch_Mutex with that of a Null_Mutex as
          there will not be multiple threads parsing the handler.

Mon May 17 11:24:11 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * DnC/Config_Handlers/Plan_Handler.h:
          Fixed fuzz error

Sun May 16 12:39:40 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/DnC_Dump.h:
        * DnC/Config_Handlers/DnC_Dump.cpp:

          Added dump functions to print out values encoded within a
          CORBA::Any. Currently, this handles only basic types, support
          for types encoded using CORBA::DnyAny needs to be incorporated.

Sun May 16 01:17:44 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Deployment.idl:

          Changed the data structures needed by the Execution
          data model, to conform to the model given in the
          specification

        * DnC/Config_Handlers/Plan_Handler.cpp:
        * DnC/Config_Handlers/Plan_Handler.h:
        * DnC/Config_Handlers/Config_Handlers.mpc:
        * DnC/Config_Handlers/Domain_Handler.cpp:

          Added a new top level handler for the DeploymentPlan.

          Since the IDL changed, i had to change 11 other handlers
          and included them within the top level handler.

          Updated the .mpc file accordingly.

Fri May 14 20:53:37 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Deployment.idl:

          Separated the data model definitions from the
          management model definitions.

Fri May 14 15:28:56 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Domain_Handler.cpp:
        * DnC/Config_Handlers/Domain_Handler.h:
        * DnC/tests/Config_Handlers/Domain_Handler_Test.cpp:

          Updated Domain_Handler_Test.cpp to use the dump
          functions within the DnC_Dump.cpp rather than the
          functions from Domain_Handler.cpp.

          Removed the unnecessary functions from the Domain_Handler.cpp.

Fri May 14 15:13:17 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/DnC_Dump.cpp:
        * DnC/Config_Handlers/DnC_Dump.h:

          Added the dump functions for the Domain Handler.

Fri May 14 12:17:55 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Requirement_Handler.cpp:
        * DnC/Config_Handlers/Property_Handler.cpp:
        * DnC/Config_Handlers/SP_Handler.cpp:
        * DnC/Config_Handlers/RS_Handler.cpp:

          Among, the common data type handlers, the aforementioned four
          handlers need to handle elements that can be referenced via
          <href> tags and <xmi:id> tags. In this commit, I have addressed
          parsing <href> tags, next, more complicated step will be to
          handle <xmi:id> tags.

Thu May 13 22:56:22 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/DnC_Dump.cpp:

          Filled in the dump_* functions that pertain to common
          elements. Howerver, dumping data stored in a CORBA::Any would
          not be possible unless we know what value is stored in the first
          place! Hence, we may need to re think this approach for Anys.

        * DnC/Requirement_Handler.cpp:

          Updated the handler to process the <name> tag added to the
          Deployment schema.

Thu May 13 19:46:24 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * DnC/Deployment.xsd: Reverted an accidental check-in that
          introduced a bogus schema.

Thu May 13 17:50:16 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Deployment.xsd:

          Added the name attribute for the Deployment:Requirement complex
          type defined in the schema. This was present in the model but
          not in the schema and necessitated this addition.

Thu May 13 15:13:50 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/tests/Config_Handlers/Domain_Handler_Test.cpp:
        * DnC/tests/Config_Handlers/Domain_Handler_Test.mpc:

          Added the test to test the Domain Handler.

Thu May 13 14:27:14 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/CompPortDesc_Handler.cpp:
        * DnC/Config_Handlers/Config_Handlers.mpc:

          Changed the library name from Config_Handers
          to Config_Handlers in the .mpc file.

          Included scop resolution operators for all
          class member function definitions in the .cpp file.

Thu May 13 13:10:35 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Domain_Handler.cpp:
        * DnC/Config_Handlers/Domain_Handler.h:

          Updated Domain_Handler to handle property and
          satisfier property elements.

Wed May 12 20:05:55 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * examples/handcrafted/BasicSP_EC/EC/client.cpp:

          Corrected case of header file in #include directive.
          "ace/Streams.h" -> "ace/streams.h".  Blame it on MS Windows case
          insenstivity.  :-)

Wed May 12 15:52:29 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Utils.h:
        * DnC/Config_Handlers/Utils.cpp:

          Added two utility methods create_document () and parse_href_tag
          () that will allow creation of an iterator pointing to top of
          the document as specified in the <href = "..."> tag. Now all
          handlers that need to handle <href> definitions can make use of
          this utility.

Wed May 12 15:08:14 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/Hello/Hello_Base/Hello_Base.mpc:

          Copied export macro settings from stub project to servant
          project. The servant project had only one export macro
          defined for both *C.h and *S.h files, and so was
          clobbering the stub export macro already generated.

Wed May 12 14:25:00 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Domain_Handler.cpp:
        * DnC/Config_Handlers/Domain_Handler.h:

          Added some more general functions.

Wed May 12 13:51:37 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Domain_Handler.cpp:
        * DnC/Config_Handlers/Domain_Handler.h:

          Added some general functions which other handlers could
          use.

Wed May 12 12:59:21 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Domain_Handler.cpp:
        * DnC/Config_Handlers/Domain_Handler.h:

          Added dump functions for the structures.

Wed May 12 12:44:40 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Domain_Handler.cpp:
        * DnC/Config_Handlers/Domain_Handler.h:

          Made changes to handle HREF tags within
          another referenced document.

Wed May 12 00:06:26 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Domain_Handler.cpp:
        * DnC/Config_Handlers/Domain_Handler.h:

          Made changes to handle HREF tags.

Tue May 11 22:58:35 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:

          Changes to support multiplex uses ports in components.
          Thanks to Bala Natarajan <bala@dre.vanderbilt.edu> for
          writing the hand-crafted version of the servant glue
          code.

Tue May 11 22:55:22 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/OEP/BasicSP/BasicSP.mpc:

          Fixed IDL compiler command line options so the stub and
          skeleton export macros will get generated correctly regardless
          of the order of execution of the stub and skeleton project
          generation.

Tue May 11 16:12:07 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/DT_Handler.h:
        * DnC/Config_Handlers/DT_Handler.cpp:

          Added CORBA::TypeCode::duplicate for basic type codes as the
          individual handlers and IDL structures will be releasing the
          typecodes generated.

        * DnC/Config_Handlers/Any_Handler.h:
        * DnC/Config_Handlers/Any_Handlers.cpp:

          Insted of requiring that each top level handler pass an ORB
          reference to the Any handler, now the Any handler calls ORB init
          There is not additional overhead other than the call as the same
          ORB reference is returned each time from the ORB table

        * DnC/Config_Handlers/Config_Handlers.mpc:

          Added targets Any_Handler.cpp and DT_Handler.cpp

Tue May 11 12:51:14 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Domain_Handler.h:
        * DnC/Config_Handlers/Domain_Handler.cpp:

          Changed the interface of the functions process_domain_node
          and process_domain_bridge.

Tue May 11 12:25:39 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CIDLC/ExecutorMappingGenerator.cpp:

          Fixed bug in home operation emitter.

Tue May 11 11:17:25 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Any_Handler.h:
        * DnC/Config_Handlers/Any_Handler.cpp:

          Any handler that processes schema definitions of the type <any>
          ... </any>. Currently, this handler supports only built-in
          types. Issues pertaining to specifying properties in IDL (typed)
          v/s specifying them in schema (dynamic) as an Any are being
          examined

Tue May 11 10:45:55 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CCF/CCF/IDL3/LexicalAnalyzer.cpp:
        * CCF/CCF/IDL3/Parser.cpp:
        * CCF/CCF/IDL3/Parser.hpp:
        * CCF/CCF/IDL3/SemanticAction/Uses.hpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Uses.cpp:
        * CCF/CCF/IDL3/SemanticAction/Impl/Uses.hpp:
        * CCF/CCF/IDL3/SemanticGraph/Component.cpp:
        * CCF/CCF/IDL3/SemanticGraph/Component.hpp:
        * CCF/CCF/IDL3/Traversal/Component.hpp:
        * CIDLC/ExecutorMappingGenerator.cpp:

          Support for uses multiple.

Tue May 11 01:47:27 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * DnC/Config_Handlers/XercesString.cpp (Config_Handler): When
          changing the function used to compare strings from
          XMLString::equals() to XMLString::compareIString(), a check on
          the return value equal to zero is needed to ensure similar
          semantics.

Tue May 11 00:18:58 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * DnC/Config_Handlers/XercesString.cpp (Config_Handler): Changed
          the comparison function to use case-insensitive comparison, as
          case doesn't make sense while comparing XML strings.

Mon May 10 23:35:25 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/tests/Config_Handlers/Domain_Handler_Test.cpp:

          Added a new test to test the Domain Handler, which
          parses the D&C specification's DomainDescriptor.

Mon May 10 22:40:37 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/DnC_Dump.cpp:
        * Dnc/Config_Handlers/DnC_Dump.h:
        * DnC/Config_Handlers/Config_Handlers.mpc:

          I moved DnC_Dump.{h,cpp} from DnC/ to
          DnC/Config_Handlers

Mon May 10 19:04:57 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/DT_Handler.h:
        * DnC/Config_Handlers/DT_Handlers.cpp:

          Type code operations especially creation of dynamic typecodes
          require operations defined in the ORB interface. Hence, instead
          of calling ORB::init within this common handlers, changed the
          interface of the process_DataType method to require a
          CORBA::ORB_ptr. Also modularized the creation of typecodes into
          process_basic_tc, process_enum_tc etc depending on the *type* of
          typecode to be created

        * DnC/Config_Handlers/Utils.h:
        * DnC/Config_Handlers/Utils.cpp:

          Added helper methods that allow coversion to CORBA::* types from
          string values. These helper methods will be used by the Any
          handler to insert the required values into a CORBA::Any object
          dynamically.

Mon May 10 18:56:11 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Domain_Handler.h:
        * DnC/Config_Handlers/Domain_Handler.cpp:

          Made changes to handle the "Property" elements.

Mon May 10 18:21:34 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/DT_Handler.h:
        * DnC/Config_Handlers/DT_Handler.cpp:
          Data_Type handler class that parses the <type> .. </type> tags
          in the Deployment schema.

Mon May 10 13:42:04 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Domain_Handler.cpp:
          Removed the trailing #endif as the corresponding #ifndef was
          removed earlier.

Sun May  9 19:28:56 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Domain_Handler.cpp:

          Made some changes to the dump function to print the
          contents of the data structure.

Sun May  9 17:32:11 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/ACD_Handler.cpp:
        * DnC/Config_Handlers/ADD_Handler.cpp:
        * DnC/Config_Handlers/APM_Handler.cpp:
        * DnC/Config_Handlers/CAD_Handler.cpp:
        * DnC/Config_Handlers/Cap_Handler.cpp:
        * DnC/Config_Handlers/CEPE_Handler.cpp:
        * DnC/Config_Handlers/CompImplDes_Handler.cpp:
        * DnC/Config_Handlers/CompIntrDesc_Handler.cpp:
        * DnC/Config_Handlers/CompPkgDesc_Handler.cpp:
        * DnC/Config_Handlers/CompPortDesc_Handler.cpp:
        * DnC/Config_Handlers/Config_Error_Handler.cpp:
        * DnC/Config_Handlers/CPR_Handler.cpp:
        * DnC/Config_Handlers/CRDD_Handler.cpp:
        * DnC/Config_Handlers/Domain_Handler.cpp:
        * DnC/Config_Handlers/DP_Handler.cpp:
        * DnC/Config_Handlers/ERE_Handler.cpp:
        * DnC/Config_Handlers/IAD_Handler.cpp:
        * DnC/Config_Handlers/IDD_Handler.cpp:
        * DnC/Config_Handlers/ID_Handler.cpp:
        * DnC/Config_Handlers/IRDD_Handler.cpp:
        * DnC/Config_Handlers/IR_Handler.cpp:
        * DnC/Config_Handlers/MDD_Handler.cpp:
        * DnC/Config_Handlers/MID_Handler.cpp:
        * DnC/Config_Handlers/NIA_Handler.cpp:
        * DnC/Config_Handlers/PCD_Handler.cpp:
        * DnC/Config_Handlers/PC_Handler.cpp:
        * DnC/Config_Handlers/PCI_Handler.cpp:
        * DnC/Config_Handlers/PPM_Handler.cpp:
        * DnC/Config_Handlers/Property_Handler.cpp:
        * DnC/Config_Handlers/PSPE_Handler.cpp:
        * DnC/Config_Handlers/PSPR_Handler.cpp:
        * DnC/Config_Handlers/RDD_Handler.cpp:
        * DnC/Config_Handlers/Requirement_Handler.cpp:
        * DnC/Config_Handlers/RS_Handler.cpp:
        * DnC/Config_Handlers/SID_Handler.cpp:
        * DnC/Config_Handlers/SPE_Handler.cpp:
        * DnC/Config_Handlers/SP_Handler.cpp:
        * DnC/Config_Handlers/SPK_Handler.cpp:
        * DnC/Config_Handlers/SPR_Handler.cpp:
          Removed all #ifndef definitions that hide multiple includes from
          the .cpp files. These implementations being non-templatized will
          not be included in any header files. Hence the guard for
          multiple inclusions should not be present in them similar to
          other .cpp files in TAO.

Sun May  9 14:07:10 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Deployment.idl:
        * DnC/Config_Handlers/Domain_Handler.cpp:
        * DnC/Config_Handlers/Domain_Handler.h:

          Made changes to the IDL and supported the same in my
          XML handlers.

Sun May  9 13:06:48 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/Deployment.mpc:
        * DnC/Config_Handlers/Config_Handlers.mpc:
          Added requries += dnc to avoid unintentional build of DnC
          directory.

Sun May  9 09:08:06 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/OEP/BasicSP/BMClosedED/BMClosedED_exec.cpp:
        * examples/OEP/BasicSP/BMClosedED/BMClosedED_exec.h:
        * examples/OEP/BasicSP/BMDevice/BMDevice_exec.cpp:
        * examples/OEP/BasicSP/BMDevice/BMDevice_exec.h:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay_exec.cpp:
        * examples/OEP/BasicSP/BMDisplay/BMDisplay_exec.h:
        * examples/OEP/BasicSP/EC/EC_exec.cpp:
        * examples/OEP/BasicSP/EC/EC_exec.h:
        * examples/OEP/Display/GPS/GPS_exec.cpp:
        * examples/OEP/Display/GPS/GPS_exec.h:
        * examples/OEP/Display/GPS/GPS_tracing_exec.cpp:
        * examples/OEP/Display/GPS/GPS_tracing_exec.h:
        * examples/OEP/Display/NavDisplay/NavDisplay_exec.cpp:
        * examples/OEP/Display/NavDisplay/NavDisplay_exec.h:
        * examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.cpp:
        * examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.h:
        * examples/OEP/Display/RateGen/RateGen_exec.cpp:
        * examples/OEP/Display/RateGen/RateGen_exec.h:

          More fixes to the executors.

Sun May  9 07:46:35 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * ciao/CCM_Component.idl:
        * ciao/CCM_Container.idl:

          Added CIAO specific operations ciao_practivate () and
          ciao_postactivate () which would allow the deployment
          infrastructure to invoke them before and after ccm_activate
          (). There are more elegant methods to do this, but for want of
          time we will just stick to this. We can revisit this later if
          needed. There is a need for such things in some projects that we
          are working on to initialize a few things upfront and tear them
          later. The downside of this is that the executors need to
          implement ciao_preactivate () and ciao_postactivate (). I think
          there is a good idea to avoid that. We will visit that soon.

        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:

          Added code generation for ciao_preactivate () and
          ciao_postactivate ().

        * tools/Assembly_Deployer/Assembly_Impl.cpp:

          Cosmetic fix.

        * tools/Assembly_Deployer/Assembly_Visitors.h:

          Added a typedef for the iterator in the CIAO::Assembly_Context
          struct.

        * tools/Assembly_Deployer/Assembly_Visitors.cpp:

          Iterate over the CCMObject references and call preactivate,
          activate and postactivate on all of them one after another.

        * examples/Hello/Receiver/Receiver_exec.cpp:
        * examples/Hello/Receiver/Receiver_exec.h:
        * examples/Hello/Sender/Sender_exec.cpp:
        * examples/Hello/Sender/Sender_exec.h:

          Added the preactivate and postactivate calls.

Sat May  8 15:19:18 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/ACD_Handler.cpp:
        * DnC/Config_Handlers/ADD_Handler.cpp:
        * DnC/Config_Handlers/APM_Handler.cpp:
        * DnC/Config_Handlers/CAD_Handler.cpp:
        * DnC/Config_Handlers/CPR_Handler.cpp:
        * DnC/Config_Handlers/CRDD_Handler.cpp:
        * DnC/Config_Handlers/CompImplDesc_Handler.cpp:
        * DnC/Config_Handlers/CompPkgDesc_Handler.cpp:
        * DnC/Config_Handlers/CompPortDesc_Handler.cpp:
        * DnC/Config_Handlers/Config_Handlers.mpc:
        * DnC/Config_Handlers/DP_Handler.cpp:
        * DnC/Config_Handlers/Domain_Handler.cpp:
        * DnC/Config_Handlers/Domain_Handler.h:
        * DnC/Config_Handlers/IDD_Handler.cpp:
        * DnC/Config_Handlers/IRDD_Handler.cpp:
        * DnC/Config_Handlers/MDD_Handler.cpp:
        * DnC/Config_Handlers/MID_Handler.cpp:
        * DnC/Config_Handlers/PCD_Handler.cpp:
        * DnC/Config_Handlers/PCI_Handler.cpp:
        * DnC/Config_Handlers/PC_Handler.cpp:
        * DnC/Config_Handlers/PPM_Handler.cpp:
        * DnC/Config_Handlers/PSPE_Handler.cpp:
        * DnC/Config_Handlers/PSPR_Handler.cpp:
        * DnC/Config_Handlers/RDD_Handler.cpp:
        * DnC/Config_Handlers/SID_Handler.cpp:
        * DnC/Config_Handlers/SPE_Handler.cpp:
        * DnC/Config_Handlers/SPR_Handler.cpp:

          Removed unnecessary declaration of ACE_DECLARE_NEW_CORBA_ENV

Sat May  8 14:53:33 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Domain.cpp:

          Added a sample "main" program to test the Domain_Handler
          wrriten to parse the DomainDescriptor.

Sat May  8 14:50:26 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Deployment.idl:

          Added a missing structure member infoProperty
          to the structure Domain.

Fri May  7 20:38:15 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantSourceGenerator.cpp:

          A fix for generated code for inherited home factory operations.
          It makes use of the fact that a derived home must manage a
          component that is derived from the component its base home
          manages. This means that the corresponding executor classes
          have the same inheritance relationships. When a call is
          made to a base home factory operation on a derived home,
          the derived home's managed component will be returned as
          a base component reference. Operations called on this
          component will end up in the derived component executor
          (the user must implement the inherited operations, although
          the implementation may be different than that in the
          base component executor).

Fri May  7 17:19:02 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:

          Filled in some missing items in generation of facet, component
          and home servant classes, and of component context classes.
          These missing items included some cases of code generation for
          things inherited from the base home or the base component, such
          as regular operations, attribute operations, port operations,
          and home factory operations, as well as operations and attributes
          of supported interfaces and their ancestors. Note that there
          is still a problem with compiling home factory operations
          inherited from a base home, but this problem will be fixed
          with the upcoming refactoring of the CIAO-specific
          _ciao_activate_component() and _ciao_passivate_component()
          methods in the home servant class. This fix closes [BUGID:1800].

Fri May  7 14:46:54 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * GNUmakefile:

          Removed this GNUmakefile.  It must now be generated by MPC.

Fri May  7 13:17:10 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/ConFig_Handlers/Domain_Handler.cpp:
        * DnC/Config_Handlers/Domain_Handler.h:
        * DnC/Config_Handlers/Resource_Handler.cpp:
        * DnC/Config_Handlers/SR_Handler.cpp:

          Updated the handlers to handler href, xmi:id cases.

Fri May  7 12:53:34 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * CCF/CCF/CIDL/CIDL.mpc:
        * CCF/CCF/CodeGenerationKit/CodeGenerationKit.mpc:
        * CCF/CCF/CompilerElements/CompilerElements.mpc:
        * CCF/CCF/IDL2/IDL2.mpc:
        * CCF/CCF/IDL3/IDL3.mpc:
        Fixed a bug for using MPC to build CCF.

Fri May  7 12:44:42 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/RS_Handler.cpp:

          Modified the handler to parse out of order schema
          definitions. Now parsing is independent of the appearance of the
          schema elements as it should be.

Thu May  6 16:20:00 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handlers/SP_Handler.cpp:

          Added functionality to parse the schema definitions when the
          individual elements appear in no specific order.

Mon May  3 23:04:13 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * CIAO-INSTALL.html:

          Corrected typo.

Mon May  3 23:17:31 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Deployment.idl:

          Changed the datatype from ULongSeq to StringSeq
          in the following structures:

          SharedResource, Node, Interconnect and Bridge.

Mon May  3 22:44:09 2004  George Edwards  <g.edwards@vanderbilt.edu>

        * DnC/Deployment.idl:

          Fixed ComponentPortDescription struct to comply with new spec.

        * DnC/Deployment.mpc:

          Added DnC_Dump.cpp to Deployment_stub project.

        * DnC/DnC_Dump.h:
        * DnC/DnC_Dump.cpp:

          Added dump functions for PackageConfiguration,
          ComponentPackageDescription, PackagedComponentImplementation,
          ComponentPortDescription, and ComponentPropertyDescription.

Mon May  3 00:00:00 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * Makefile*:

          Removed all Makefiles.  GNUmakefiles must now be generated by
          MPC.

Sat May  1 22:37:33 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * Makefile:
        * GNUmakefile:

          Renamed "Makefile" to "GNUmakefile" to make it obvious to
          users that GNU Make is required to parse the file.

Fri Apr 30 17:46:09 2004  Boris Kolpackov  <boris@dre.vanderbilt.edu>

        * CIDLC/ExecutorMappingGenerator.cpp:

          Implemented supporting of forward declared interfaces.
          Also some minor tweaking for Intel C++.

Fri Apr 30 13:08:04 2004  Gan Deng  <gan.deng@vanderbilt.edu>

        * DnC/DnC_Dump.h:
        * DnC/DnC_Dump.cpp:

          Added these two new files. These two files created a
          DnC_Dump class which is used to print out the contents
          of various IDL data structures.

Thu Apr 29 22:56:04 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Deployment.idl:

          Rolled back some changes made on the TargetDataModel
          structures.

Thu Apr 29 22:34:41 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Deployment.idl:

          Changed all the structures in the TargetData Model
          to match what is given in the spec.

Thu Apr 29 22:26:05 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Deployment.idl:

          Made a change in the structure Domain
          to add a new field info_property
          which is of the type Properties.

Thu Apr 29 18:46:51 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Config_Error_Handler.h:
        * DnC/Config_Handlers/Config_Error_Handler.cpp:

          Generic Error Handler class for the main functions
          which we will be writing to dump out the IDL
          data structures populated by the XML handlers.

Thu Apr 29 18:09:41 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Deployment.xsd:

          Fixed a type "xsl" tp "xsd"

Thu Apr 29 17:47:04 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Deployment.xsd:
        * DnC/XMI.xsd:

          Updated the schemaLocation attribute within the
          Deployment.xsd schema and
          added the appropriate XMI.xsd file.

Thu Apr 29 06:13:23 2004  Aniruddha Gokhale  <a.gokhale@vanderbilt.edu>

        * DnC/Deployment.idl:
          struct ComponentImplementationDescription: Added new field called
          infoProperty of type Properties (Issue 5967).

          struct ImplementationRequirement: added a new struct (Issue 6392)

        * Dnc/ConfigHandlers/CompImplDesc_Handler.cpp:
          Fixed compilation errors due to incorrect naming usage of a typedef.

Mon Apr 26 23:40:27 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * ciao/Cookies.cpp:
        * ciao/Cookies.h:
        * ciao/Cookies.inl:

          Subtle changes to improve interoperability.

          Problem: We, for some unknown reason, created a proprietary
          cookie called  CIAO::Map_Key_Cookie (which inherited from an IDL
          type CIAO::Cookie) and used that as a concrete implementation of
          Components::Cookie.

          Context: Though this would work, this breaks interoperability
          when the Cookies are send on the wire. The remote target tries
          to unmarshal the CIAO::Cookie valuetype as a Component::Cookie
          which fails miserably.

          Solution: Deprecate this proprietary IDL type CIAO::Cookie and
          make Map_Key_Cookie inherit directly from Component::Cookie.

          Made some changes to the interface to return a bool instead of
          an int.

        * ciao/CIAO_Value.idl:

          Added note for deprecation.

        * CIDLC/ServantSourceGenerator.cpp:

          The call to Map_Key_Cookie::extract () should check for a false
          instead of -1.

        * tools/Assembly_Deployer/Assembly_Impl.cpp:

          The call to Map_Key_Cookie::extract () should check for a false
          instead of -1.

          Thanks to Ed Mulholland and Jacques Kerner for reporting the
          problem.

Mon Apr 26 17:35:29 2004  George Edwards  <g.edwards@vanderbilt.edu>

        * DnC/Config_Handlers/CompPkgDesc_Handler.cpp:

          Made changes to fix compilation errors.

Mon Apr 26 12:19:56 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/IC_Handler.cpp:

          Made changes to fix some compiler issues.

Mon Apr 26 12:13:36 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Bridge_Handler.h:
        * DnC/Config_Handlers/Bridge_Handler.h:
        * DnC/Config_Handlers/IC_Handler.cpp:
        * DnC/Config_Handlers/IC_Handler.h:
        * DnC/Config_Handlers/Node_Handler.h:
        * DnC/Config_Handlers/Node_Handler.cpp:
        * DnC/Config_Handlers/Resource_Handler.cpp:
        * DnC/Config_Handlers/Resource_Handler.h:
        * DnC/Config_Handlers/SR_Handler.h:
        * DnC/Config_Handlers/SR_Handler.cpp:
        * DnC/Config_Handlers/Domain_Handler.cpp:

          Made changes to fix some compiler issues.

Mon Apr 26 11:50:48 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Bridge_Handler.h:
        * DnC/Config_Handlers/Bridge_Handler.cpp:
        * DnC/Config_Handlers/Domain_Handler.cpp:
        * DnC/Config_Handlers/IC_Handler.cpp:
        * DnC/Config_Handlers/IC_Handler.h:
        * DnC/Config_Handlers/Node_Handler.h:
        * DnC/Config_Handlers/Resource_Handler.cpp:
        * DnC/Config_Handlers/Resource_Handler.h:
        * DnC/Config_Handlers/SR_Handler.h:

          Made changes to fix some compiler issues.

Mon Apr 26 08:57:37 2004  Aniruddha Gokhale  <a.gokhale@vanderbilt.edu>

        * DnC/Config_Handlers/Config_Handlers.mpc:
          Added Cap_Handler.cpp
          Added CompIntrDesc_Handler.cpp
          Added CompPortDesc_Handler.cpp
          Added IAD_Handler.cpp
          Added IR_Handler.cpp
          Added NIA_Handler.cpp

        * DnC/Config_handlers/SR_Handler.cpp:
          Included SP_Handler.h
          Fixed undefined variables and conversion from string to long

        * DnC/Config_handlers/Node_Handler.cpp:
          Fixed errors arising out of using same name for variables of
          different types in the same scope (one defined in the parameter
          and another as a loop variable).

          Fixed errors in type coversion.

        * DnC/Config_handlers/Resource_Handler.cpp:
          Fixed errors in type coversion.

        * DnC/Config_handlers/MID_Handler.cpp:
          Fixed an error due to incorrect number of parameters

        * DnC/Config_handlers/DP_Handler.cpp:
          Fixed an error due to incorrect number of parameters and
          incorrect file name inclusion.


Mon Apr 26 14:04:32 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ciao/CCM_Core.mpc:
          CIAO_Server must link with CIAO_Container. Not doing so causes link
          errors with Borland.

Mon Apr 26 09:33:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * DnC/Config_Handlers/Config_Handlers.mpc:
          Removed not needed / after $(CIAO_ROOT)/DnC in includes. This gave
          problems with Borland

Sun Apr 25 07:42:06 2004  Aniruddha Gokhale  <a.gokhale@vanderbilt.edu>

        * DnC/Config_Handlers/Config_Handlers.mpc:
          Added Bridge_Handler.cpp
          Added Domain_Handler.cpp
          Added IC_Handler.cpp
          Added Node_Handler.cpp
          Added Resource_Handler.cpp
          Added SR_Handler.cpp


Sat Apr 24 23:43:13 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handlers/Bridge_Handler.cpp:
        * DnC/Config_Handlers/Bridge_Handler.h:
        * DnC/Config_Handlers/Domain_Handler.h:
        * DnC/Config_Handlers/Domain_Handler.cpp:
        * DnC/Config_Handlers/IC_Handler.h:
        * DnC/Config_Handlers/IC_Handler.cpp:
        * DnC/Config_Handlers/Node_Handler.h:
        * DnC/Config_Handlers/Node_Handler.cpp:
        * DnC/Config_Handlers/Resource_Handler.h:
        * DnC/Config_Handlers/Resource_Handler.cpp:
        * DnC/Config_Handlers/SR_Handler.h:
        * DnC/Config_Handlers/SR_Handler.cpp:

          Added the following handlers belonging to the
          Target Data Model.

Sat Apr 24 23:13:56 2004  Aniruddha Gokhale  <a.gokhale@vanderbilt.edu>

        * DnC/Deployment.idl:
          struct ComponentPackageReference: Added two new fields called
          requiredUUID and requiredName of type string (Issue 6047).

        * DnC/Config_Handler/SPE_Handler.h:
        * DnC/Config_Handler/SPE_Handler.cpp:
        * DnC/Config_Handler/ACD_Handler.h:
        * DnC/Config_Handler/ACD_Handler.cpp:
        * DnC/Config_Handler/APM_Handler.h:
        * DnC/Config_Handler/APM_Handler.cpp:
        * DnC/Config_Handler/MID_Handler.h:
        * DnC/Config_Handler/MID_Handler.cpp:
          Enclosed these into the CIAO namespace

          Removed needless copies by having the parent (caller) provide
          the memory for the child (callee) to populate it.

          Other cosmetic changes, fixing typos.

        * DnC/Config_Handler/PC_Handler.cpp:
        * DnC/Config_Handler/PCI_Handler.cpp:
          Fixed undefined variables.

        * DnC/Config_Handler/CAD_Handler.h:
        * DnC/Config_Handler/CAD_Handler.cpp:
          XML handlers for the ComponentAssemblyDescription artifact of
          the Component Data Model.

        * DnC/Config_Handler/SID_Handler.h:
        * DnC/Config_Handler/SID_Handler.cpp:
          XML handlers for the ComponentPackageReference artifact of
          the Component Data Model.

        * DnC/Config_Handler/CPR_Handler.h:
        * DnC/Config_Handler/CPR_Handler.cpp:
          XML handlers for the ComponentPackageReference artifact of
          the Component Data Model.

        * DnC/Config_Handler/SPR_Handler.h:
        * DnC/Config_Handler/SPR_Handler.cpp:
          XML handlers for the SubcomponentPropertyReference artifact of
          the Component Data Model.

        * DnC/Config_Handler/CompImplDesc_Handler.h:
        * DnC/Config_Handler/CompImplDesc_Handler.cpp:
          XML handlers for the ComponentImplementationDescription artifact of
          the Component Data Model.

        * DnC/Config_Handler/DP_Handler.cpp:
          Renamed included file CID_Handler.h to CompIntfDesc_Handler.h
          since there was a name clash.

        * DnC/Config_Handler/Config_Handlers.mpc:
          Fixed the CONFIG_HANDLER_BUILD_DLL typo
          Added ACD_Handler.cpp
          Added APM_Handler.cpp
          Added CAD_Handler.cpp
          Added MID_Handler.cpp
          Added SPE_Handler.cpp
          Added CompImplDesc_Handler.cpp
          Added CompPkgDesc_Handler.cpp
          Added PC_Handler.cpp
          Added PCI_Handler.cpp
          Added SID_Handler.cpp
          Added CPR_Handler.cpp
          Added SPR_Handler.cpp
          Reincluded DP_Handler.cpp

Sat Apr 24 22:25:55 2004  George Edwards <g.edwards@vanderbilt.edu>

        Added files:
        * DnC/Config_Handlers/PCI_Handler.h:
        * DnC/Config_Handlers/PCI_Handler.cpp:

          Added new handlers for PackagedComponentImplementation.

Sat Apr 24 21:22:48 2004  George Edwards <g.edwards@vanderbilt.edu>

        Added files:
        * DnC/Config_Handlers/PC_Handler.h:
        * DnC/Config_Handlers/PC_Handler.cpp:
        * DnC/Config_Handlers/CompPkgDesc_Handler.h:
        * DnC/Config_Handlers/CompPkgDesc_Handler.cpp:

          Added new handlers for PackageConfiguration and
          ComponentPackageDescription.

Sat Apr 24 16:02:03 2004  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * DnC/Config_Handler/Domain_Handler.h:

          Added a header file for the new handler about to
          be written.

          This handler will parse the "Domain" type
          defined in the Deployment.xsd schema of the
          DnC specification.

Sat Apr 24 10:46:14 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handler/PCD_Handler.cpp:
        * DnC/Config_Handler/ERE_Handler.h:
        * DnC/Config_Handler/ERE_Handler.cpp:

          Missed out on these handlers in my earlier commit. Made the same
          changes as listed earlier for these handlers as well

Fri Apr 23 19:45:53 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handler/ADD_Handler.cpp:
        * DnC/Config_Handler/DP_Handler.cpp:
        * DnC/Config_Handler/CRDD_Handler.cpp:
        * DnC/Config_Handler/IDD_Handler.cpp:
        * DnC/Config_Handler/IRDD_Handler.cpp:
        * DnC/Config_Handler/MDD_Handler.cpp:
        * DnC/Config_Handler/RDD_Handler.cpp:
        * DnC/Config_Handler/PCD_Handler.cpp:
        * DnC/Config_Handler/DP_Handler.cpp:

          Eliminated the additional copy incurred when sequences are
          populated by de-referencing pointer to sequence return
          type. This fixes Andy's comments in the files that unearthed
          this problem. Please grep for Arvind: comments to see how the
          problem has been fixed

        * DnC/Config_Handler/Config_Handlers.mpc:

          Commented out DP_Handler.cpp from the list of files to be
          compiled as it requires CID.h file that is not yet written! This
          ensures that the Handlers build.

        * DnC/Config_Handler/Any_Handler.h:
        * DnC/Config_Handler/CEPE_Handler.h:
        * DnC/Config_Handler/ID_Handler.h:
        * DnC/Config_Handler/Property_Handler.h:
        * DnC/Config_Handler/RS_Handler.h:
        * DnC/Config_Handler/SP_Handler.h:
        * DnC/Config_Handler/SPK_Handler.h:
        * DnC/Config_Handler/Requirement_Handler.h:

          Changed the interfaces of each process_<handlerName> methods to
          take a reference to the required return type rather than return
          a pointer to the allocated return value. This change was
          necessary to accommodate the use-cases defined in top level
          handlers.

        * DnC/Config_Handler/Any_Handler.cpp:
        * DnC/Config_Handler/CEPE_Handler.cpp:
        * DnC/Config_Handler/ID_Handler.cpp:
        * DnC/Config_Handler/Property_Handler.cpp:
        * DnC/Config_Handler/RS_Handler.cpp:
        * DnC/Config_Handler/SP_Handler.cpp:
        * DnC/Config_Handler/SPK_Handler.cpp:
        * DnC/Config_Handler/Requirement_Handler.cpp:

          Removed all memory allocation for the return types within the
          Common element handler implementations. In the current use case,
          all the return types are passed in as references. Therefore, it
          is now the responsibility of the caller to allocate memory for
          the corresponding data-types.

Fri Apr 23 10:57:26 2004  Aniruddha Gokhale  <a.gokhale@vanderbilt.edu>

        * DnC/Deployment.idl:
          struct ConnectionResourceDeploymentDescription: Added a new struct
          and corresponding unbounded sequence (Issue 6392).

          struct PlanSubcomponentPropertyReference: Replaced instanceRef
          field with a field called instance of type
          InstanceDeploymentDescription.

          struct PlanSubcomponentPortEndpoint: Replaced instanceRef and
          kind fields with a field called instance of type
          InstanceDeploymentDescription.

          struct PlanConnectionDescription: Added a field called
          deployedResource of type ConnectionResourceDeploymentDescriptions.

        * DnC/Config_Handler/IRDD_Handler.h:
        * DnC/Config_Handler/IRDD_Handler.cpp:
          XML handlers for the InstanceResourceDeploymentDescription artifact of
          the Execution Model.

        * DnC/Config_Handler/IDD_Handler.h:
        * DnC/Config_Handler/IDD_Handler.cpp:
          XML handlers for the InstanceDeploymentDescription artifact of
          the Execution Model.

        * DnC/Config_Handler/IRDD_Handler.h:
        * DnC/Config_Handler/IRDD_Handler.cpp:
          XML handlers for the ConnectionResourceDeploymentDescription artifact of
          the Execution Model.

        * DnC/Config_Handler/PCD_Handler.h:
        * DnC/Config_Handler/PCD_Handler.cpp:
          XML handlers for the PlanConnectionDescription artifact of
          the Execution Model.

        * DnC/Config_Handler/PSPE_Handler.h:
        * DnC/Config_Handler/PSPE_Handler.cpp:
          XML handlers for the PlanSubcomponentPortEndpoint artifact of
          the Execution Model.

        * DnC/Config_Handler/PPM_Handler.h:
        * DnC/Config_Handler/PPM_Handler.cpp:
          XML handlers for the PlanPropertyMapping artifact of
          the Execution Model.

        * DnC/Config_Handler/PSPR_Handler.h:
        * DnC/Config_Handler/PSPR_Handler.cpp:
          XML handlers for the PlanSubcomponentPropertyReference artifact of
          the Execution Model.

        * DnC/Config_Handler/Config_Handlers.mpc:
          Added IDD_Handler.cpp
          Added IRDD_Handler.cpp
          Added CRDD_Handler.cpp
          Added PCD_Handler.cpp
          Added PSPE_Handler.cpp
          Added PPM_Handler.cpp
          Added PSPR_Handler.cpp

Fri Apr 23 04:40:12 2004  Aniruddha Gokhale  <a.gokhale@vanderbilt.edu>

        * DnC/Deployment.idl:
          struct DeploymentPlan: Added a field called infoProperty of type
          Properties (Issue 5967)

          struct ArtifactDeploymentDescription: Added a field called
          deployedResource of type ResourceDeploymentDescriptions
          (Issue 6392)

          struct ArtifactDeploymentDescription: Changed the field type for
          location from string to CORBA::StringSeq (Issue 5957, 6053).

          struct ArtifactDeploymentDescription: Moved it around to
          overcome forward declarations.

          struct MonolithicDeploymentDescription: Changed the field name
          from artifactRef to artifact and changed its type from
          CORBA::ULongSeq to ArtifactDeploymentDescriptions (Issue 5957)

          struct ResourceDeploymentDescription: Added a new struct and
          corresponding unbounded sequence (Issue 6392).

          enum ResourceUsageKind: Added a new enum (Issue 6392).

          struct InstanceResourceDeploymentDescription: Added a new struct
          and corresponding unbounded sequence (Issue 6392).

        * DnC/Config_Handler/DP_Handler.h:
        * DnC/Config_Handler/DP_Handler.cpp:
          Added handling of "infoProperty" (Issue 5967)
          Other cosmetic changes, such as fixed usage of an undefined
          variable

        * DnC/Config_Handler/ADD_Handler.h:
        * DnC/Config_Handler/ADD_Handler.cpp:
          XML handlers for the ArtifactDeploymentDescription artifact of
          the Execution Model.

        * DnC/Config_Handler/MDD_Handler.h:
        * DnC/Config_Handler/MDD_Handler.cpp:
          XML handlers for the MonolithicDeploymentDescription artifact of
          the Execution Model.

        * DnC/Config_Handler/RDD_Handler.h:
        * DnC/Config_Handler/RDD_Handler.cpp:
          XML handlers for the ResourceDeploymentDescription artifact of
          the Execution Model.

        * DnC/Config_Handler/Config_Handlers.mpc:
          Added ADD_Handler.cpp
          Added MDD_Handler.cpp
          Added RDD_Handler.cpp

Thu Apr 22 22:18:04 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * ciao/CCM_Component.idl:

          Added 'typeprefix Components "omg.org";' inside the
          Components module. All openings of an IDL module must
          have the same prefix, and the openings of the Components
          module in other IDL file have this prefix.

Thu Apr 22 21:32:39 2004  Aniruddha Gokhale  <a.gokhale@vanderbilt.edu>

        * DnC/Deployment.idl:
          Added a "string UUID;" field (Issue 6047) to the DeploymentPlan
          structure. The spec shows UUID as an attribute, which serves as
          the unique identfier of a plan. However, the spec does not
          include it in the IDL nor the schema. I decided to add it for now.

        * DnC/Config_Handler/DP_Handler.h:
        * DnC/Config_Handler/DP_Handler.cpp:
          XML handlers for the DeploymentPlan artifact of the Execution Model.

        * DnC/Config_Handler/Config_Handlers.mpc:
          Added DP_Handler.cpp

Thu Apr 22 15:36:14 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handler/Config_Handlers.mpc
        * DnC/Config_Handler/Property_Handler.cpp:
        * DnC/Config_Handler/Property_Handler.h:
        * DnC/Config_Handler/Requirement_Handler.h:
        * DnC/Config_Handler/Requirement_Handler.cpp:
        * DnC/Config_Handler/SPK_Handler.h:
        * DnC/Config_Handler/SPK_Handler.cpp:
          XML handlers for common elements present in schema definitions.

Thu Apr 22 11:35:42 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handler/CEPE_Handler.h:
        * DnC/Config_Handler/CEPE_Handler.cpp:
        * DnC/Config_Handler/ERE_Handler.h:
        * DnC/Config_Handler/ERE_Handler.cpp:
        * DnC/Config_Handler/ID_Handler.h:
        * DnC/Config_Handler/ID_Handler.cpp:
        * DnC/Config_Handler/RS_Handler.h:
        * DnC/Config_Handler/RS_Handler.cpp:
        * DnC/Config_Handlers/SP_Handler.h:
        * DnC/Config_Handler/SP_Handler.cpp:
          Correct ::Deployment namespace definitions to Deployment:: as it
          need not always start from the root. Changed ACE_NEW_RETURN
          macros to ACE_NEW_THROW_EX as exceptions are going to be used as
          default meachnism to flag errors. Thanks to Kitty for pointing
          these two changes.

Wed Apr 21 22:35:07 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Config_Handler/Config_Handlers.mpc:
          Modified the mpc file to include handlers that compile as a test
        * DnC/Config_Handler/ID_Handler.h:
        * DnC/Config_Handler/ID_Handler.cpp:
        * DnC/Config_Handler/CEPE_Handler.h:
        * DnC/Config_Handler/CEPE_Handler.cpp:
        * DnC/Config_Handler/RS_Handler.h:
        * DnC/Config_Handler/RS_Handler.cpp:
        * DnC/Config_Handler/SP_Handler.h:
        * DnC/Config_Handler/SP_Handler.cpp:
        * DnC/Config_Handler/Utils.h:
        * DnC/Config_Handler/Utils.cpp:
        * DnC/Config_Handler/Any_Handler.h:
          Handlers for common elements; each handler handles a separate
          type
        * DnC/Config_Handler/Config_Handler_export.h:
          Export files for all the handlers

Wed Apr 21 22:27:34 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Deployment.mpc:
          Changed the export tags from all-caps to mixed mode
        * DnC/Deployment_stub_export.h:
        * DnC/Deployment_svnt_export.h:
          Re-generated the export files accordingly

Wed Apr 21 13:08:50 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/Config_Handlers/APM_Handler.cpp
          Fixed a typo.

Wed Apr 21 12:33:11 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * DnC/Deployment.mwc:
        * DnC/Deployment.mpc:
          Workspace and Project files for generating stubs and skeletons
          for Deployment.idl file

        * DnC/Deployment_stub_export.h:
        * DnC/Deployment_svnt_export.h:
          Export macros for Deployment stub and skeleton files

Wed Apr 21 10:53:50 2004  Gan Deng  <dengg@dre.vanderbilt.edu>

        * DnC/Deployment.idl:

         Fixed the error in the "struct SubcomponentPortEndpoint"
         definition in the IDL file.

Wed Apr 21 10:33:50 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * DnC/Deployment.idl:
        * DnC/DnC_*:

        Switched back the the OMG IDL DnC file.

Tue Apr 20 21:37:26 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * Dnc/Config_Handlers/Config_Handlers.mpc:
          Changed the file to generate shared library rathern than an
          executable.

Tue Apr 20 20:29:37 2004  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * Dnc/Config_Handlers/Config_Handers.mpc:

          mpc file for the DnC configuration handlers

Tue Apr 20 17:11:35 2004  Irfan Pyarali  <irfan@oomworks.com>

        * examples/Hello/Sender/Sender_exec.h (Sender_Impl):

          The second constructor also needed the same fix.

Tue Apr 20 15:50:07 2004  Irfan Pyarali  <irfan@oomworks.com>

        * examples/Hello/Sender/Sender_exec.h (Sender_Impl):

          <message_> was getting initialized properly causing a crash
          later in the execution.

Mon Apr 19 18:04:11 2004  Gan Deng  <gan.deng@vanderbilt.edu>

        * DnC/Config_Handlers/ACD_Handler.cpp
        * DnC/Config_Handlers/ACD_Handler.h
        * DnC/Config_Handlers/APM_Handler.cpp
        * DnC/Config_Handlers/APM_Handler.h
        * DnC/Config_Handlers/MID_Handler.cpp
        * DnC/Config_Handlers/MID_Handler.h
        * DnC/Config_Handlers/SPE_Handler.cpp
        * DnC/Config_Handlers/SPE_Handler.h

          XML handlers for below XML data types respectively:

          "AssemblyConnectionDescription "
          "AssemblyPropertyMapping"
          "MonolithicImplementationDescription"
          "SubcomponentPortEndpoint"

        * DnC/Config_Handlers/XercesString.cpp
        * DnC/Config_Handlers/XercesString.h

          Helper class for using Xerces library to write XML handlers.

Mon Apr 19 14:50:11 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * DnC/Config_Handlers: Created new directory for adding the
          handlers for the Deployment & Configuration Specification.

Thu Apr 15 18:13:29 2004  Irfan Pyarali  <irfan@oomworks.com>

        * CIAO-INSTALL.html (HREF):

          Fixed link to binary files.

Mon Apr 12 14:40:32 2004  Tao Lu  <lu@dre.vanderbilt.edu>

        * docs/index.html:

          fixed a broken link.

