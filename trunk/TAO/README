# $Id$

	Shows how to use the scheduling service in conjunction with
the real-time event channel.  The test has a single consumer that
subscribes for two event types, using different RT_Infos for each. A
supplier pushes those events also using different RT_Infos.
	The event-channel cooperates with the scheduling service to
compute a schedule and assign priorities to each event. The event
channel will use different queues for those events, each queue
serviced by threads at different priorities.

Build Notes
-----------
Use the following in config.h

#define ACE_HAS_TIMED_MESSAGE_BLOCKS 1

Make sure that the following modules are built.

IDL compiler
$ACE_ROOT/apps/gperf
$ACE_ROOT/Kokyu
$TAO_ROOT/orbsvcs/orbsvcs/Svc_Utils
$TAO_ROOT/orbsvcs/orbsvcs/RTEvent
$TAO_ROOT/orbsvcs/orbsvcs/Makefile.CosNaming
$TAO_ROOT/orbsvcs/orbsvcs/Makefile.RTSched
$TAO_ROOT/orbsvcs/orbsvcs/Makefile.RTSchedEvent
$TAO_ROOT/orbsvcs/orbsvcs/Makefile.RTKokyuEvent

The example can be run using:

$ ./Service
