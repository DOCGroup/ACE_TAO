Mon Jan 16 08:55:26 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Cleanup_Func_Registry.h:
          Export this class, needed in some configurations due to inlining

        * tests/Param_Test/anyop.cpp:
        * tests/Param_Test/driver.cpp:
        * tests/Param_Test/server.cpp:
          Fixed memory leaks

Fri Jan 13 23:09:56 UTC 2012  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be_include/be_visitor_component/servant_svs.h:
        * TAO_IDL/be/be_visitor_component/servant_svs.cpp:

          Fixed a bug where the attributes of a component's supported
          interfaces (if any) were not getting their initialization
          code block in the generate servant's method set_attributes().
          Thanks to Michael Frommberger
          <michael dot frommberger at gmx dot net> for reporting the
          problem.

        * TAO_IDL/be_include/be_visitor_component_scope.h:

          Cosmetic changes.

Wed Jan 13 16:30:00 UTC 2012  Simon Massey  <sma at prismtech dot com>

        * tao/UB_String_Argument_T.cpp:
          Was also directly calling delete [] on CORBA::strings
          instead of using CORBA::string_free(). As this delete []
          call was also inside a template however, it needed to actualy
          use the S_var::s_traits::release () that mapped this
          to the correct CORBA::string_free() call.

Wed Jan 11 12:25:00 UTC 2012  Simon Massey  <sma at prismtech dot com>

        * tests/Sequence_Unit_Tests/bounded_string_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/unbounded_string_sequence_ut.cpp:
          These test were directly calling delete [] on CORBA::strings
          instead of using CORBA::string_free(). As these delete []
          calls were inside a template however, they needed to actualy
          use the tested_element_traits::release () that mapped these
          to the correct CORBA::string_free() call.

Tue Jan  3 14:02:44 UTC 2012  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Object_Map.cpp:
          Disable some logging with minimum corba

Fri Dec 30 12:14:06 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableServer.h:
          Added include of AdapterActivatorA.h

Thu Dec 29 13:37:22 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * MPC/config/ziop.mpb:
          ZIOP doesn't work with corba/e micro

Wed Dec 28 09:05:39 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Mixed_Sync_ASync_Events/test_i.cpp:
          Fixed compile error on OpenVMS

Tue Dec 27 11:42:55 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * NEWS:
          Updated for next release

Tue Dec 27 10:06:28 CET 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO version 2.0.7 released.

Mon Dec 26 23:50:02 UTC 2011  Adam Mitz  <mitza@ociweb.com>

        * tests/Skeleton_Inheritance/skel_inheritance.mpc:

          Fixed issues with parallel builds running tao_idl from the
          wrong project.

Sat Dec 24 11:56:39 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Mixed_Sync_ASync_Events/test_i.cpp:
          Fixed compile error on OpenVMS

Wed Dec 21 09:42:12 UTC 2011  Martin Corino  <mcorino@remedy.nl>

        * examples/RTCORBA/Activity/Activity.cpp:

          Added timer queue reset on global reactor instance.

Tue Dec 20 13:56:10 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/PI_ProcMode_Collocated.mpc:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/PI_ProcMode_Remote.mpc:
        * tests/Portable_Interceptors/Register_Initial_References/Register_ORBInitializer.mpc:
          Projects must avoid CORBA-e-micro.

Tue Dec 20 09:55:08 UTC 2011  Martin Corino  <mcorino@remedy.nl>

        * tests/Time_Policy_Custom/Custom_Time_Policy_Strategy.cpp:

          Fixed incorrect export macro in class definition.

Mon Dec 19 18:58:16 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1330_Regression/client.cpp:
        * tests/Bug_1670_Regression/client.cpp:
        * tests/Bug_2243_Regression/ORB_object_to_string.cpp:
          Fixed valgrind reported memory leaks

Mon Dec 19 10:27:45 UTC 2011  Martin Corino  <mcorino@remedy.nl>

        * tests/Time_Policy/main.cpp:

          Added preprocessor tests to detect properly configured HR timer support.

Sat Dec 17 18:13:40 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:

          Other changes that are fallout from changing the type of
          the 'index_' member below in

          Fri Dec 16 18:25:19 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

Sat Dec 17 16:28:17 UTC 2011  Martin Corino  <mcorino@remedy.nl>

        * tao/Time_Policy_Manager.cpp:

          Fix for valgrind memory leak reports.

Sat Dec 17 14:05:24 UTC 2011  Martin Corino  <mcorino@remedy.nl>

        * tests/Time_Policy_Custom/Custom_Time_Policy.mpc:

          Fix for windows compile problem.

Fri Dec 16 18:25:19 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be_include/be_visitor_typecode/typecode_defn.h:

          Change type of 'index_' member to unsigned long, to eliminate
          signed/unsigned comparison warning.

Fri Dec 16 18:22:39 UTC 2011  Martin Corino  <mcorino@remedy.nl>

        * tao/Time_Policy_Manager.cpp:

          Changed to fix wchar compile problems.

Thu Dec 15 20:46:52 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_exception/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype.cpp:
        * TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_sequence.cpp:

          Addressed the rest of the Coverity-reported issues for the
          IDL compiler.

Thu Dec 15 18:03:34 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_valuetype.cpp:
        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/be/be_visitor_xplicit_pre_proc.cpp:
        * TAO_IDL/be/be_identifier_helper.cpp:
        * TAO_IDL/util/utl_labellist.cpp:
        * TAO_IDL/util/utl_string.cpp:
        * TAO_IDL/util/utl_scope.cpp:
        * TAO_IDL/ast/ast_template_module.cpp:
        * TAO_IDL/ast/ast_visitor_reifying.cpp:
        * TAO_IDL/ast/ast_enum.cpp:

          Addressed Coverity-reported issues.

Thu Dec 15 16:49:51 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_operation/operation_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:
        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/ast/ast_expression.cpp:
        * TAO_IDL/ast/ast_sequence.cpp:
        * TAO_IDL/ast/ast_template_module.cpp:
        * TAO_IDL/ast/ast_visitor_reifying.cpp:

          Addressed Coverity-reported issues.

Thu Dec 15 14:02:06 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:

          Fixed signed/unsigned mismatch warning.

Thu Dec 15 13:25:37 UTC 2011  Marcel Smit  <msmit@remedy.nl>

        * tao/ORB_Time_Policy.h:
        * tao/ORB_Time_Policy.inl:
          Fixed warning for gcc 4.6.2

Thu Dec 15 11:00:00 UTC 2011  Martin Corino  <mcorino@remedy.nl>

        Merged timer_policy branch.

        === start changelog ===

        Thu Dec 15 09:45:00 UTC 2011  Martin Corino  <mcorino@remedy.nl>

                * NEWS:
                * docs/Options.html:

                  Added descriptions of new TIME_POLICY strategy features.

        Mon Dec 12 21:28:00 UTC 2011  Martin Corino  <mcorino@remedy.nl>

                * tao/System_Time_Policy_Strategy.cpp:
                * tao/System_Time_Policy_Strategy.h:
                * tao/TAO_Internal.cpp:
                * tao/Time_Policy_Manager.cpp:
                * tao/tao.mpc:

                  Added new time policy strategy to replace backwards
                  compatible default time policy in ACE.

                * tests/Time_Policy_Custom/Custom_Time_Policy_Strategy.cpp:

                  Added backwards compatibility support.

        Thu Dec 08 15:34:00 UTC 2011  Martin Corino  <mcorino@remedy.nl>

                * tao/HR_Time_Policy_Strategy.h

                  Fixed class comment.

                * tests/Time_Policy/main.cpp

                  Fixed comments.

                * tests/Time_Policy_Custom/Custom_Time_Policy.mpc
                * tests/Time_Policy_Custom/Custom_Time_Policy_Strategy.cpp
                * tests/Time_Policy_Custom/Custom_Time_Policy_Strategy.h
                * tests/Time_Policy_Custom/TPTest_Export.h
                * tests/Time_Policy_Custom/custom_time.conf
                * tests/Time_Policy_Custom/custom_time.conf.xml
                * tests/Time_Policy_Custom/main.cpp
                * tests/Time_Policy_Custom/run_test.pl
                * tests/Time_Policy_Custom/run_test_dyn.pl
                * bin/tao_orb_tests.lst

                  Added new tests for custom TAO Time policy support.

        Thu Dec 08 12:00:00 UTC 2011  Martin Corino  <mcorino@remedy.nl>

                * tao/Time_Policy_Manager.cpp
                * tao/default_resource.cpp

                  Logging improvements.

                * tests/Time_Policy/Time_Policy.mpc
                * tests/Time_Policy/hr_time.conf
                * tests/Time_Policy/hr_time.conf.xml
                * tests/Time_Policy/main.cpp
                * tests/Time_Policy/run_test.pl
                * tests/Time_Policy/run_test_hr.pl
                * bin/tao_orb_tests.lst

                  Added new tests for TAO Time policy support.

        Wed Dec 07 12:34:00 UTC 2011  Martin Corino  <mcorino@remedy.nl>

                * tao/TAO_Internal.cpp:

                  Added loading HR_Time_Policy_Strategy static service.

                * tao/Time_Policy_Manager.cpp:

                  Improved error reporting.

        Wed Dec 07 11:20:00 UTC 2011  Martin Corino  <mcorino@remedy.nl>

                * tao/default_resource.cpp:
                * tao/default_resource.h;
                * tao/default_resource.inl:

                  Improved protection for dynamically allocated
                  timer queues.

                * tao/Strategies/advanced_resource.cpp:

                  Added support for ORB time policies.

        Tue Dec 06 15:45:00 UTC 2011  Martin Corino  <mcorino@remedy.nl>

                * tao/HR_Time_Policy_Strategy.h:
                * tao/Time_Policy_Manager.h:
                * tao/Time_Policy_Strategy.h:

                  Fixed potential compile problems because of
                  #include placements.

        Tue Dec 06 15:30:00 UTC 2011  Martin Corino  <mcorino@remedy.nl>

                * tao/ORB_Time_Policy.cpp:
                * tao/ORB_Time_Policy.h:
                * tao/ORB_Time_Policy.inl:

                  Added dynamic time policy and a
                  countdown template instantiation based
                  on that policy.

                * tao/Block_Flushing_Strategy.cpp:
                * tao/Leader_Follower.cpp:
                * tao/LocateRequest_Invocation.cpp:
                * tao/Profile_Transport_Resolver.cpp:
                * tao/Synch_Invocation.cpp:
                * tao/Transport.cpp:
                * tao/Wait_On_Reactor.cpp:
                * tao/Wait_On_Read.cpp:

                  Replaced ACE_Countdown_Time by new ORB time
                  policy based countdown class.

                * tao/Time_Policy_Manager.cpp:
                * tao/Time_Policy_Manager.h:

                  Added ORB time policy manager service object
                  for managing dynamically configured ORB time
                  policy.

                * tao/Time_Policy_Strategy.h:

                  Added base for loadable ORB time policies.

                * tao/HR_Time_Policy_Strategy.cpp:
                * tao/HR_Time_Policy_Strategy.h:

                  Added HR ORB time policy implementation.

                * tao/default_resource.cpp:
                * tao/default_resource.h:
                * tao/TAO_Internal.cpp:

                  Added support for ORB time policies.

                * tao/orbconf.h:

                  Added ACE_HAS_TIME_POLICY compile time configuration
                  to enable/disable ORB time policy support.

                * tao/tao.mpc:

                  Added new files.

        === end changelog ===

Wed Dec 14 20:51:28 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_sequence.cpp:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_helper.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:
        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:
        * TAO_IDL/fe/fe_utils.cpp:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl-scope.cpp:

          Fixed more Coverity-reported errors.

Wed Dec 14 14:53:17 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_visitor_amh_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_ccm_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_sh.cpp:
        * TAO_IDL/fe/fe_init.cpp:

          Fixed some Coverity-reported errors.

Wed Dec 14 07:59:43 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_home/home_svs.cpp:
          Removed include that shouldn't have been added

Tue Dec 13 13:33:25 UTC 2011  Marijke Hengstmengel  <mhengstmengel@remedy.nl>

        Merged changes from our work branch. Changes for home factory with a connector.

        === start changelog ===
        Tue Dec 13 11:23:20 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                * TAO_IDL/be/be_visitor_home/home_svs.cpp:
                  If the factory method returns nil throw a CreateFailure

        Tue Dec 13 11:03:39 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                * TAO_IDL/be/be_visitor_home/home_svs.cpp:
                  Fixed scoping

        Tue Dec 13 10:19:29 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                * TAO_IDL/be/be_visitor_component/context_svs.cpp:
                * TAO_IDL/be/be_visitor_operation.cpp:
                * TAO_IDL/be/be_visitor_operation/rettype.cpp:
                * TAO_IDL/be_include/be_connector.h:
                * TAO_IDL/be_include/be_visitor_operation/rettype.h:
                  Generate the needed return type when we have a home factory method
                  that returns a connector type
        === end changelog ===

Mon Dec 12 07:33:25 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        Merged changes from our work branch. Facet servants are now generated
        as C++ template at the moment the interface is declared, this reduces
        the amount of code generated heavily. Component/Connector context is
        now also generated as C++ template

        === start changelog ===

        Sun Dec 11 19:40:16 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                * TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:
                * TAO_IDL/be/be_visitor_operation/operation_ss.cpp:
                  Throw exception when dynamic_cast fails

        Sun Dec 11 19:13:21 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                * TAO_IDL/be/be_visitor_interface/facet_svth.cpp:
                * TAO_IDL/be/be_visitor_interface/facet_svts.cpp:
                  No servant is needed for local interfaces

        Sun Dec 11 18:23:17 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                * TAO_IDL/be/be_util.cpp:
                  Removed mentioning of -Gsc which got removed a long time ago

        Sun Dec 11 12:32:28 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

                * TAO_IDL/be/be_interface.cpp:
                * TAO_IDL/be/be_visitor_interface.cpp:
                * TAO_IDL/be/be_visitor_module/module.cpp:
                * TAO_IDL/be_include/be_interface.h:
                * TAO_IDL/be_include/be_visitor_interface.h:
                * TAO_IDL/be/be_visitor_interface/interface_svh.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_svs.cpp:
                  Removed some old stuff we don't need anymore, fixes cornucopia

                * TAO_IDL/be_include/be_visitor_interface/interface_svh.h:
                * TAO_IDL/be_include/be_visitor_interface/interface_svs.h:
                  Removed these files.

        Fri Dec  9 13:23:29 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * TAO_IDL/be/be_codegen.cpp:
                * TAO_IDL/be/be_global.cpp:
                * TAO_IDL/be/be_util.cpp:
                * TAO_IDL/be/be_visitor_component.cpp:
                * TAO_IDL/be/be_visitor_component/component_ex_idl.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_ex_idl.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_svh.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_svs.cpp:
                * TAO_IDL/be_include/be_global.h:
                * TAO_IDL/be_include/be_visitor_component.h:
                * docs/compiler.html:
                  Removed the -Glfa option from the IDL compiler.

                * TAO_IDL/be/be_visitor_component/facet_ex_idl.cpp:
                * TAO_IDL/be_include/be_visitor_component/facet_ex_idl.h:
                  Removed these files.

        Thu Dec  8 14:43:36 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * TAO_IDL/be/be_visitor_component/context_svth.cpp:
                * TAO_IDL/be/be_visitor_component/context_svts.cpp:
                  Removed export macro for contextes.

                * TAO_IDL/be/be_visitor_component.cpp:
                * TAO_IDL/be/be_visitor_interface/facet_svts.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_svth.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_svts.cpp:
                  Fixed warnings.

        Thu Dec  8 14:16:52 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * TAO_IDL/be/be_produce.cpp:
                * TAO_IDL/be/be_provides.cpp:
                * TAO_IDL/be/be_visitor_component.cpp:
                * TAO_IDL/be/be_visitor_component/component_svth.cpp:
                * TAO_IDL/be/be_visitor_component/component_svts.cpp:
                * TAO_IDL/be/be_visitor_interface.cpp:
                * TAO_IDL/be/be_visitor_interface/facet_svth.cpp:
                * TAO_IDL/be/be_visitor_interface/facet_svts.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_svth.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_svts.cpp:
                * TAO_IDL/be/be_visitor_module/module.cpp:
                * TAO_IDL/be/be_visitor_operation/operation_svs.cpp:
                * TAO_IDL/be_include/be_provides.h:
                * TAO_IDL/be_include/be_visitor_component.h:
                * TAO_IDL/be_include/be_visitor_interface.h:
                * TAO_IDL/be_include/be_visitor_interface/facet_svth.h:
                * TAO_IDL/be_include/be_visitor_interface/facet_svts.h:
                * TAO_IDL/be_include/be_visitor_interface/interface_svth.h:
                * TAO_IDL/be_include/be_visitor_interface/interface_svts.h:
                * TAO_IDL/be/be_visitor_component/facet_svth.cpp:
                * TAO_IDL/be/be_visitor_component/facet_svts.cpp:
                * TAO_IDL/be_include/be_visitor_component/facet_svth.h:
                * TAO_IDL/be_include/be_visitor_component/facet_svts.h:
                  Moved the generation of the facet servants to the place
                  where they are declared (from the place where they were
                  used). -Gsv needs to set as command line option.

        Wed Dec  7 13:26:49 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * TAO_IDL/be/be_visitor_component/servant_svs.cpp:
                  Fixed errors in logging.

        Wed Dec  7 12:34:49 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * TAO_IDL/be/be_visitor_component/context_svth.cpp:
                * TAO_IDL/be/be_visitor_component/context_svts.cpp:
                  No need to visit the component_scope; just visit
                  the scope is enough..

        Wed Dec  7 07:34:56 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * TAO_IDL/be/be_codegen.cpp:
                * TAO_IDL/be_include/be_codegen.h:
                  Reduced the number of generated include files.
                  Also generated a include guard for the servant
                  template source code.

        Tue Dec  6 13:25:04 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * TAO_IDL/be/be_visitor_component/context_svth.cpp:
                * TAO_IDL/be/be_visitor_component/context_svts.cpp:
                  Fixed generation issues in case dds4ccm

        Tue Dec  6 09:22:09 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * TAO_IDL/be/be_visitor_component/component_svts.cpp:
                  Removed comments.

                * TAO_IDL/be/be_visitor_root.cpp:
                * TAO_IDL/be_include/be_visitor_root.h:
                  Removed reference to the files below.

                * TAO_IDL/be/be_visitor_root/root_ex_svs.cpp:
                * TAO_IDL/be_include/be_visitor_root/root_ex_svs.h:
                  Removed these files since a separate servant file
                  is not needed.

        Tue Dec  6 09:15:52 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * TAO_IDL/be/be_codegen.cpp:
                * TAO_IDL/be/be_global.cpp:
                * TAO_IDL/be/be_produce.cpp:
                * TAO_IDL/be/be_visitor_component/component.cpp:
                * TAO_IDL/be/be_visitor_module/module.cpp:
                * TAO_IDL/be/be_visitor_root/root_ex_svs.cpp:
                * TAO_IDL/be_include/be_global.h:
                  No need to create a new type of svnt file.

                * TAO_IDL/be_include/be_codegen.h:
                  Using pragma ciao lem to determine which files
                  to include.

        Mon Dec  5 19:33:12 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * TAO_IDL/be/be_produce.cpp:
                * TAO_IDL/be/be_visitor_root.cpp:
                * TAO_IDL/be/be_visitor_root/root_ex_svs.cpp:
                * TAO_IDL/be_include/be_visitor_root.h:
                * TAO_IDL/be_include/be_visitor_root/root_ex_svs.h:
                * TAO_IDL/be/be_visitor_root/root_ex_svnt.cpp:
                  Renamed _svnt files since these are ignored by subversion

        Mon Dec  5 18:43:32 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * TAO_IDL/be/be_codegen.cpp:
                * TAO_IDL/be/be_global.cpp:
                * TAO_IDL/be/be_produce.cpp:
                  Reduced the restrictions for generating an executor servant.

        Mon Dec  5 16:08:50 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * TAO_IDL/be/be_codegen.cpp:
                * TAO_IDL/be/be_global.cpp:
                * TAO_IDL/be/be_produce.cpp:
                * TAO_IDL/be/be_visitor_component/component.cpp:
                * TAO_IDL/be/be_visitor_module/module.cpp:
                * TAO_IDL/be/be_visitor_root.cpp:
                * TAO_IDL/be/be_visitor_root/root_ex_svnt.cpp:
                * TAO_IDL/be_include/be_codegen.h:
                * TAO_IDL/be_include/be_global.h:
                * TAO_IDL/be_include/be_helper.h:
                * TAO_IDL/be_include/be_visitor_root.h:
                  Generate a new svnt.h which is a place holder for the
                  _svnt_T.h files. This will be included via S.h.
                  The new _svnt.h is only generated when the ciao lem
                  pragma is used or when -Glem is part of the command
                  line options.

        Sun Dec  4 16:04:04 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * TAO_IDL/be/be_codegen.cpp:
                  One step closer in solving AMI4CCM compile issues.

        Fri Dec  2 15:57:52 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * TAO_IDL/be/be_provides.cpp:
                * TAO_IDL/be/be_visitor_component/context_svth.cpp:
                * TAO_IDL/be/be_visitor_component/context_svts.cpp:
                  No multiple inheritance so no virtual needed.

        Fri Dec  2 14:59:28 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * TAO_IDL/be/be_codegen.cpp:
                * TAO_IDL/be/be_global.cpp:
                * TAO_IDL/be_include/be_codegen.h:
                * TAO_IDL/be_include/be_global.h:
                  Include base file into inherited template header file.

                * TAO_IDL/be/be_visitor_component/component_svth.cpp:
                * TAO_IDL/be/be_visitor_component/component_svts.cpp:
                * TAO_IDL/be/be_visitor_component/facet_svth.cpp:
                * TAO_IDL/be/be_visitor_component/facet_svts.cpp:
                * TAO_IDL/be_include/be_visitor_component/component_svts.h:
                  Contexts are now template classes which derive from their template
                  base classes.

        Fri Dec  2 08:00:16 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * TAO_IDL/be/be_codegen.cpp:
                * TAO_IDL/be/be_visitor_component.cpp:
                * TAO_IDL/be/be_visitor_component/component_svh.cpp:
                * TAO_IDL/be/be_visitor_component/component_svs.cpp:
                * TAO_IDL/be/be_visitor_component/component_svth.cpp:
                * TAO_IDL/be/be_visitor_component/component_svts.cpp:
                * TAO_IDL/be/be_visitor_component/context_svth.cpp:
                * TAO_IDL/be/be_visitor_component/context_svts.cpp:
                * TAO_IDL/be/be_visitor_component/servant_svh.cpp:
                * TAO_IDL/be/be_visitor_component/servant_svs.cpp:
                * TAO_IDL/be_include/be_visitor_component.h:
                * TAO_IDL/be_include/be_visitor_component/context_svth.h:
                * TAO_IDL/be_include/be_visitor_component/context_svts.h:
                  Context implementation is now templated. Therefor
                  renamed context_sv* files.

                * TAO_IDL/be/be_visitor_component/context_svh.cpp:
                * TAO_IDL/be/be_visitor_component/context_svs.cpp:
                * TAO_IDL/be_include/be_visitor_component/context_svh.h:
                * TAO_IDL/be_include/be_visitor_component/context_svs.h:
                  Removed these files.

        Thu Dec  1 09:06:16 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * TAO_IDL/be/be_visitor_component/facet_svth.cpp:
                * TAO_IDL/be/be_visitor_component/facet_svts.cpp:
                  Fixed coverity warning.

        Thu Dec  1 08:37:33 UTC 2011  Marcel Smit  <msmit@remedy.nl>

                * TAO_IDL/be/be_codegen.cpp:
                * TAO_IDL/be/be_visitor_component.cpp:
                * TAO_IDL/be/be_visitor_component/component_svh.cpp:
                * TAO_IDL/be/be_visitor_component/component_svs.cpp:
                * TAO_IDL/be/be_visitor_component/component_svth.cpp:
                * TAO_IDL/be/be_visitor_component/component_svts.cpp:
                * TAO_IDL/be/be_visitor_component/context_svh.cpp:
                * TAO_IDL/be/be_visitor_component/context_svs.cpp:
                * TAO_IDL/be/be_visitor_module/module.cpp:
                * TAO_IDL/be_include/be_visitor_component.h:
                * TAO_IDL/be_include/be_visitor_component/component_svth.h:
                * TAO_IDL/be_include/be_visitor_component/component_svts.h:
                  Moved the generated Context code to the _svnt_T files. Later on
                  these classes will be templated.

        === end changelog ===

Wed Dec  7 17:54:41 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/util/utl_stack.cpp(UTL_ScopeStack::pop):

          Checks if the top scope has a #pragma prefix associated with it,
          and if so, pops the prefix (from its own stack) along with the
          scope. Fixed the check to be more robust. Thanks to Simon Massey
          for reporting the problem, which was revealed as an error message
          reporting a bogus prefix inconsistency between a forward declared
          struct and its full definition.

Wed Dec  7 10:47:15 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        Merged in the changes to update AMI4CCM to match the initial revision
        with the synchronous port and the new pragma's added

        === start changelog ===

        Tue Dec  6 14:42:39 UTC 2011  Marijke Hengstmengel  <mhengstmengel@remedy.nl>

                * TAO_IDL/be/be_interface.cpp:
                * TAO_IDL/be/be_visitor_component/component_svh.cpp:
                * TAO_IDL/be/be_visitor_component/component_svs.cpp:
                * TAO_IDL/be/be_visitor_component/servant_svh.cpp:
                * TAO_IDL/be/be_visitor_component/servant_svs.cpp:
                * TAO_IDL/be/be_visitor_operation/operation_sh.cpp:
                * TAO_IDL/be/be_visitor_operation/operation_ss.cpp:
                revert changes after 2011-11-30 (ChangeLog.BRANCH missing those items)

        Wed Nov 30 16:45:10 UTC 2011  Marijke Hengstmengel  <hengstmengel_m@remedy.nl>

                * TAO_IDL/be/be_visitor_connector/executor_ami_exs.cpp:
                * TAO_IDL/be/be_visitor_connector/facet_ami_exh.cpp:
                * TAO_IDL/be/be_visitor_connector/facet_ami_exs.cpp:

        Wed Nov 30 14:19:10 UTC 2011  Marijke Hengstmengel  <mhengstmengel@remedy.nl>

                * TAO_IDL/be/be_codegen.cpp:
                // remove debug info
                * TAO_IDL/be/be_visitor_connector/facet_ami_exh.cpp:
                * TAO_IDL/be/be_visitor_connector/facet_ami_exs.cpp:
                * TAO_IDL/be_include/be_visitor_connector/facet_ami_exs.h:
                Add visit_attribute functionality.

        Tue Nov 29 12:59:03 UTC 2011  Marijke Hengstmengel  <mhengstmengel@remedy.nl>
                * TAO_IDL/be/be_visitor_connector/facet_ami_exs.cpp:
                Correct check nil pointer in facet operation

        Mon Nov 28 15:26:03 UTC 2011  Marijke Hengstmengel  <hengstmengel_m@remedy.nl>

                * TAO_IDL/be/be_visitor_connector/executor_ami_exh.cpp:
                * TAO_IDL/be/be_visitor_connector/facet_ami_exh.cpp:
                * TAO_IDL/be/be_visitor_connector/facet_ami_exs.cpp:
                * TAO_IDL/be_include/be_visitor_connector/facet_ami_exh.h:
                * TAO_IDL/be_include/be_visitor_connector/facet_ami_exs.h:
                Add traverse_inheritance_graph, needed  for derived interfaces

        Wed Nov 23 14:00:38 UTC 2011  Marijke Hengstmengel  <hengstmengel_m@remedy.nl>

                * TAO_IDL/be/be_visitor_connector/facet_ami_exs.cpp:
                Changed return of sync operations.

        Mon Nov 21 13:32:38 UTC 2011  Marijke Hengstmengel  <hengstmengel_m@remedy.nl>

                * TAO_IDL/be/be_codegen.cpp:
                Exclude include *.AE.idl in *E.idl

                * TAO_IDL/be/be_visitor_connector/connector_ami_exs.cpp:
                * TAO_IDL/be/be_visitor_connector/executor_ami_exh.cpp:
                * TAO_IDL/be/be_visitor_connector/executor_ami_exs.cpp:
                * TAO_IDL/be/be_visitor_connector/facet_ami_exh.cpp:
                * TAO_IDL/be/be_visitor_connector/facet_ami_exs.cpp:
                * TAO_IDL/be_include/be_visitor_connector/facet_ami_exh.h:
                * TAO_IDL/be_include/be_visitor_connector/facet_ami_exs.h:
              Changes for sync port on AMI connector

        Mon Nov  7 13:02:55 UTC 2011  Marijke Hengstmengel  <hengstmengel_m@remedy.nl>

                * TAO_IDL/fe/idl.ll:
                * TAO_IDL/fe/lex.yy.cpp:
                Add beside pragma's 'ciao ami4ccm ...' the pragma's 'ami4ccm ...' , according to ami4ccm spec.
                In the future '#pragma ciao ami4ccm ...' has to  be removed.

        === end changelog ===

Wed Dec  7 10:28:00 UTC 2011  Simon Massey <simon dot massey at prismtech dot com>

        * tests/IDL_Test/IDL_Tests.mpc:

          Since the below modification removed the -GA from the valuetype.idl
          generation step in the mpc file, the valuetypeA.cpp is now
          not generated, thus this file should not be mentioned in the
          DLL projects Source_Files section. Machines were compiling and
          linking the old file or stating that it was not found.

Mon Dec  5 20:32:56 UTC 2011  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype.cpp:

          Added missing switch cases in visit_union() and visit_typedef().
          Not all context states were covered and we were seeing errors
          and bailouts.

        * tests/IDL_Test/valuetype.idl:
        * tests/IDL_Test/IDL_Tests.mpc:

          Added test case for the above problem, also removed -GA IDL
          compiler option for valuetype.idl, since the new test case
          has IDL constructed types declared inside a valuetype - the
          generated typecode for the nested types cannot be in a separate
          file since the generated valuetype class declaration cannot
          be reopened. Thanks to Simon Massey <simon dot massey at
          prismtech dot com> for reporting the problem and supplying
          example IDL.

Mon Dec  5 19:57:02 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/AMH/Sink_Server/Base_Server.h:
        * examples/AMH/Sink_Server/Base_Server.cpp:
        * examples/AMH/Sink_Server/Client_Task.cpp:
        * examples/AMH/Sink_Server/MT_AMH_Server.cpp:
        * examples/AMH/Sink_Server/client.cpp:
        * examples/AMH/Sink_Server/mt_server.cpp:
        * examples/AMH/Sink_Server/run_test.pl:
        * examples/AMH/Sink_Server/st_server.cpp:
          Improving this test, looks the crashing on some build systems is
          mostly timing due to a badly written example

Mon Dec  5 12:30:15 UTC 2011  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_connector/facet_ami_exs.cpp:
          const fix

        * TAO_IDL/be/be_visitor_valuetype/field_cs.cpp:
          Layout changes and generate doxygen style documentation

        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:
          Layout changes to the generated code

        * examples/AMH/Sink_Server/run_test.pl:
        * tao/PortableServer/Adapter_Activator.h:
        * tests/Multiple/Multiple_Impl.h:
          Zapped empty lines

        * tests/Multiple/server.cpp:
          Fixed typo in comment

        * tests/POA/DSI/server.cpp:
        * tests/POA/Explicit_Activation/server.cpp:
        * tests/POA/On_Demand_Act_Direct_Coll/Server_Task.cpp:
        * tests/POA/On_Demand_Loading/Server_Manager.cpp:
        * tests/POA/Reference_Counted_Servant/server.cpp:
          Close file descriptors earlier to resolve Coverity errors

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
