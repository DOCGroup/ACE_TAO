Thu Nov 23 01:05:04 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.cpp:
          Fix typo in ACE_Get_Opt option specification which made it
          impossible to specify the number of threads.

Wed Nov 22 22:20:12 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/Makefile.am:

          Regenerated.

Wed Nov 22 20:29:03 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

Wed Nov 22 20:18:50 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_template_export.cpp:
        * TAO_IDL/be_include/be_visitor_template_export.h:

          New files, defining a new visitor that optionally
          generates an explicit export of the template base class
          of the C++ class generated for an IDL sequence. This
          visitor is triggered by the new command line option
          described below, and is intended as a workaround for a
          bug in Visual Studio. This fixes bugzilla 2703.

        * TAO_IDL/be/be_visitor_root.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be_include/be_global.h:

          - Added new command line option -Gse that will trigger the
            generation of an explicit export described above.

          - Fixed call to lookup_by_name() when it is used to locate
            CCMObject in the AST and store it for future access in
            the backend global data class. An additional argument
            was recently added to lookup_by_name() and should have
            been used in this call but wasn't. Thanks to Johnny
            Willemsen <jwillemsen@remedy.nl> for reporting the
            resulting incorrect code generation in the copy
            constructor for components. This fixes bugzilla 2724.

        * TAO_IDL/be/be_interface.cpp:

          Cosmetic changes.

        * docs/releasenotes/index.html:
        * docs/compiler.html:

          Updated IDL compiler documentation with the new command line
          option.

Wed Nov 22 19:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/CosEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent.mpc:
          Add -GT to the idlflags because we have some examples that use
          the TIE files from these services

Wed Nov 22 18:50:59 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:

          Now the infinate recursion problem has been resolved, we invoke
          TAO_LogMgr_i::create_log_reference() from TAO_Log_i::init() and
          stash it away in a member variable.  This allows us to remove
          the code that lazily obtained the object reference within the
          active data path of the server.

        * orbsvcs/orbsvcs/Log/LogMgr_i.cpp:

          Changed TAO_LogMgr_i::create_log_reference() to use
          _unchecked_narrow() while narrowing the object reference.  This
          avoids the infinite recursion which occured with _narrow() when
          this was called by the servant activator's incarnate() method.


Wed Nov 22 18:48:02 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:

          Remove extraneous ACE_DEBUG's in destructor.

Wed Nov 22 18:42:53 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/examples/Log/Event/run_test.pl:
        * orbsvcs/examples/Log/RTEvent/run_test.pl:
        * orbsvcs/examples/Log/Notify/run_test.pl:

          Increase timeout so that test passes on slower systems.

Wed Nov 22 15:38:40 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Version.h:

          Remove extraneous whitespace from TAO_VERSION macro definition.

Wed Nov 22 15:14:51 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:
  * orbsvcs/performance-tests/RTEvent/lib/Makefile.am:
  * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Makefile.am:
  * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Makefile.am:
  * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Makefile.am:
  * orbsvcs/tests/Event/Makefile.am:
  * orbsvcs/tests/Simple_Naming/Makefile.am:
  * orbsvcs/tests/ImplRepo/Makefile.am:
  * orbsvcs/tests/EC_Custom_Marshal/Makefile.am:
  * orbsvcs/tests/Trading/Makefile.am:
  * orbsvcs/tests/BiDir_CORBALOC/Makefile.am:
  * orbsvcs/tests/Bug_2377_Regression/Makefile.am:
  * orbsvcs/tests/Security/ssliop_corbaloc/Makefile.am:
  * orbsvcs/tests/Redundant_Naming/Makefile.am:
  * orbsvcs/tests/Interoperable_Naming/Makefile.am:
  * orbsvcs/tests/Notify/performance-tests/Throughput/Makefile.am:
  * orbsvcs/tests/Notify/lib/Makefile.am:
  * orbsvcs/tests/FT_App/Makefile.am:
  * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/Makefile.am:
  * orbsvcs/ImplRepo_Service/Makefile.am:
  * orbsvcs/examples/CosEC/TypedSimple/Makefile.am:
  * orbsvcs/examples/CosEC/Factory/Makefile.am:
  * orbsvcs/examples/LoadBalancing/Makefile.am:
  * tao/Makefile.am:
  * docs/tutorials/Quoter/idl/Makefile.am:
  * performance-tests/Sequence_Latency/DSI/Makefile.am:
  * performance-tests/Sequence_Latency/Deferred/Makefile.am:
  * performance-tests/Sequence_Latency/Thread_Pool/Makefile.am:
  * performance-tests/Sequence_Latency/Single_Threaded/Makefile.am:
  * performance-tests/Sequence_Latency/DII/Makefile.am:
  * performance-tests/Sequence_Latency/AMH_Single_Threaded/Makefile.am:
  * performance-tests/Sequence_Latency/AMI/Makefile.am:
  * performance-tests/Sequence_Latency/Thread_Per_Connection/Makefile.am:
  * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/Makefile.am:
  * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/Makefile.am:
  * performance-tests/Callback/Makefile.am:
  * performance-tests/Latency/DSI/Makefile.am:
  * performance-tests/Latency/Deferred/Makefile.am:
  * performance-tests/Latency/Thread_Pool/Makefile.am:
  * performance-tests/Latency/Single_Threaded/Makefile.am:
  * performance-tests/Latency/DII/Makefile.am:
  * performance-tests/Latency/AMH_Single_Threaded/Makefile.am:
  * performance-tests/Latency/AMI/Makefile.am:
  * performance-tests/Latency/Thread_Per_Connection/Makefile.am:
  * performance-tests/Cubit/TAO/MT_Cubit/Makefile.am:
  * performance-tests/Cubit/TAO/DII_Cubit/Makefile.am:
  * performance-tests/Cubit/TAO/IDL_Cubit/Makefile.am:
  * performance-tests/Throughput/Makefile.am:
  * examples/POA/TIE/Makefile.am:
  * examples/Kokyu_dsrt_schedulers/Makefile.am:
  * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile.am:
  * examples/RTScheduling/MIF_Scheduler/Makefile.am:
  * examples/CSD_Strategy/ThreadPool6/Makefile.am:
  * examples/RTCORBA/Activity/Makefile.am:
  * examples/AMH/Sink_Server/Makefile.am:
  * examples/mfc/Makefile.am:
  * examples/AMI/FL_Callback/Makefile.am:
  * examples/PluggableUDP/tests/Basic/Makefile.am:
  * examples/PluggableUDP/tests/Performance/Makefile.am:
  * examples/PluggableUDP/tests/SimplePerformance/Makefile.am:

          Regenerated.

Wed Nov 22 12:34:29 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.inl:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerService_Activate.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerORBInitializer.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicyFactory.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientService_Activate.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicyFactory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientORBInitializer.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.inl:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerService_Activate.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicyFactory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientService_Activate.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerORBInitializer.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicyFactory.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.h:
        * orbsvcs/tests/Bug_2137_Regression/README:
        * orbsvcs/tests/Bug_2137_Regression/client.cpp:
        * orbsvcs/tests/Bug_2137_Regression/Bug_2137_Regression.mpc:
        * orbsvcs/tests/Bug_2248_Regression/Server_Request_Interceptor.h:
        * orbsvcs/tests/Bug_2248_Regression/test.idl:
        * orbsvcs/tests/Bug_2248_Regression/server.cpp:
        * orbsvcs/tests/Bug_2248_Regression/Server_ORBInitializer.cpp:
        * orbsvcs/tests/Bug_2248_Regression/README:
        * orbsvcs/tests/Bug_2248_Regression/client.cpp:
        * orbsvcs/tests/Bug_2248_Regression/Server_ORBInitializer.h:
        * orbsvcs/tests/Bug_2248_Regression/client.h:
        * orbsvcs/tests/Bug_2248_Regression/test_i.cpp:
        * orbsvcs/tests/Bug_2248_Regression/tests.idl:
        * orbsvcs/tests/Bug_2248_Regression/Bug_2248_Regression.mpc:
        * orbsvcs/tests/Bug_2248_Regression/Client_i.h:
        * orbsvcs/tests/Bug_2248_Regression/test_i.h:
        * orbsvcs/tests/Bug_2248_Regression/Server_Request_Interceptor.cpp:
        * orbsvcs/tests/Bug_2247_Regression/Manager.h:
        * orbsvcs/tests/Bug_2247_Regression/test.idl:
        * orbsvcs/tests/Bug_2247_Regression/server.cpp:
        * orbsvcs/tests/Bug_2247_Regression/test_i.cpp:
        * orbsvcs/tests/Bug_2247_Regression/Bug_2247_Regression.mpc:
        * orbsvcs/tests/Bug_2247_Regression/Manager.cpp:
        * orbsvcs/tests/Bug_2247_Regression/Client_i.h:
        * orbsvcs/tests/Bug_2247_Regression/README:
        * orbsvcs/tests/Bug_2247_Regression/test_i.h:
        * orbsvcs/tests/FT_App/FT_ReplicationManagerController.cpp:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.cpp:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.h:
        * orbsvcs/Logging_Service/Event_Logging_Service/README:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/README:
        * orbsvcs/Logging_Service/Notify_Logging_Service/README:
        * tao/PortableServer/Servant_var.inl:
        * tao/PortableServer/Servant_var.cpp:
        * tao/PortableServer/Servant_var.h:
        * tao/Incoming_Message_Stack.inl:
        * tao/Incoming_Message_Stack.h:
        * tests/Bug_2222_Regression/test.cpp:
        * tests/Bug_2222_Regression/Bug_2222_Regression.mpc:
        * tests/Bug_2222_Regression/TestCase.idl:
        * tests/Bug_2222_Regression/TestType.idl:
        * tests/Bug_2144_Regression/test.cpp:
        * tests/Bug_2144_Regression/Bug_2144_Regression.mpc:
        * tests/Bug_2144_Regression/test.idl:
        * tests/Bug_2144_Regression/README:
        * tests/QtTests/client.cpp:
        * tests/QtTests/client.h:
        * tests/QtTests/test.idl:
        * tests/QtTests/server.cpp:
        * tests/QtTests/test_i.cpp:
        * tests/QtTests/test_i.h:
        * tests/Bug_2375_Regression/test.cpp:
        * tests/Bug_2375_Regression/test.idl:
        * tests/Bug_2375_Regression/Bug_2375_Regression.mpc:
        * tests/Bug_2375_Regression/README:
        * tests/Bug_1812_Regression/test.cpp:
        * tests/Bug_1812_Regression/Bug_1812_Regession.mpc:
        * tests/Bug_1812_Regression/Test.idl:
        * tests/MProfile_Forwarding/Servant_Locator.cpp:
        * tests/MProfile_Forwarding/test.idl:
        * tests/MProfile_Forwarding/server.cpp:
        * tests/MProfile_Forwarding/test_i.inl:
        * tests/MProfile_Forwarding/Servant_Locator.h:
        * tests/Permanent_Forward/Permanent_Forward.mpc:
        * tests/Permanent_Forward/README:
        * tests/Permanent_Forward/StubTest.cpp:
        * tests/ICMG_Any_Bug/client.cpp:
        * tests/ICMG_Any_Bug/HelloWorld.h:
        * tests/ICMG_Any_Bug/Hello.cpp:
        * tests/ICMG_Any_Bug/server.cpp:
        * tests/ICMG_Any_Bug/Hello.h:
        * tests/Bug_2183_Regression/client.cpp:
        * tests/Bug_2183_Regression/Hello.cpp:
        * tests/Bug_2183_Regression/Test.idl:
        * tests/Bug_2183_Regression/server.cpp:
        * tests/Bug_2183_Regression/Bug_2183_Regression.mpc:
        * tests/Bug_2183_Regression/Hello.h:
        * tests/Bug_2183_Regression/README:
        * tests/IDL_Test/array_only.idl:
        * tests/Bug_1813_Regression/test.cpp:
        * tests/Bug_1813_Regression/Bug_1813_Regession.mpc:
        * tests/Bug_1813_Regression/Test.idl:
        * examples/RTCORBA/Activity/Job.idl:
        * examples/RTCORBA/Activity/README:
        * examples/Load_Balancing_persistent/Identity_i.cpp:
        * examples/Load_Balancing_persistent/Load_Balancing_Service.h:
        * examples/Load_Balancing_persistent/Identity_i.h:
        * examples/Load_Balancing_persistent/README:
        * examples/Load_Balancing_persistent/Load_Balancer_i.cpp:
        * examples/Load_Balancing_persistent/Identity.idl:
        * examples/Load_Balancing_persistent/Identity_Server.cpp:
        * examples/Load_Balancing_persistent/Load_Balancer_i.h:
        * examples/Load_Balancing_persistent/Identity_Server.h:
        * examples/Load_Balancing_persistent/Identity_Client.cpp:
        * examples/Load_Balancing_persistent/Identity_Client.h:
        * examples/Load_Balancing_persistent/Load_Balancer.idl:
        * examples/Load_Balancing_persistent/Load_Balancing_Service.cpp:

          Removed svn:executable property.

Wed Nov 22 11:51:49 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/IFR_Service/IFR_Server.cpp:
        * orbsvcs/IFR_Service/IFR_Service.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Loader.cpp:
        * orbsvcs/orbsvcs/IFRService/Options.cpp:

          Make IFR exit when it receives an invalid startup option and improve
          usage message. Fixes bugzilla #2720.

Wed Nov 22 11:39:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/FlResource/FlResource_Factory.cpp:
        * tao/FlResource/FlResource_Factory.h:
        * tao/QtResource/QtResource_Factory.cpp:
        * tao/QtResource/QtResource_Factory.h:
        * tao/TkResource/TkResource_Factory.cpp:
        * tao/TkResource/TkResource_Factory.h:
        * tao/XtResource/XtResource_Factory.cpp:
        * tao/XtResource/XtResource_Factory.h:
          Updated these files because the reactors they use are moved
          to their own directories in ACE.

Wed Nov 22 10:54:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies.mpc:
          Now build with ace_for_tao but derive from core_strategies

        * tao/tao.mpc:
          Added new HTTP files and moved all sequence.pidl files to one
          group because soon they all will get a special tao_idl argument
          to be used.

        * tao/TAO_Internal.cpp:
        * tao/default_resource.cpp:
          Added HTTP

        * tao/GUIResource_Factory.{h,cpp}:
          Changed dynamically_allocated_reactor to bool

        * tao/ORB_Core.{h,cpp,inl}:
          Changed has_shutdown to a real bool

        * tao/Valuetype/ValueBase.h:
          Doxygen improvement

Wed Nov 22 10:23:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Callback/Callback.mpc:
        * performance-tests/Cubit/TAO/IDL_Cubit/IDL_Cubit.mpc:
        * performance-tests/Cubit/TAO/MT_Cubit/MT_Cubit.mpc:
        * performance-tests/Latency/AMH_Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Latency/Collocation/Collocation.mpc:
        * performance-tests/Latency/Deferred/Deferred.mpc:
        * performance-tests/Latency/DII/DII.mpc:
        * performance-tests/Latency/DSI/DSI.mpc:
        * performance-tests/Latency/Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Sequence_Latency/Deferred/Deferred.mpc:
        * performance-tests/Sequence_Latency/DII/DII.mpc:
        * performance-tests/Sequence_Latency/DSI/DSI.mpc:
        * performance-tests/Sequence_Latency/Single_Threaded/Single_Threaded.mpc:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/LoadBalancing.mpc:
          Explicitly add avoids += ace_for_tao to these projects. At this
          moment they are not build because the strategies library is not
          available with ace_for_tao, but this is something I will change
          but besides strategies these projects do use some ACE classes
          which are not available in the ace_for_tao configuration

        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp:
          Const improvement

        * orbsvcs/tests/Event/UDP/Consumer.cpp:
        * orbsvcs/tests/Event/UDP/receiver.cpp:
        * orbsvcs/tests/Event/UDP/Supplier.cpp:
        * orbsvcs/tests/Event/UDP/Supplier.h:
        * orbsvcs/tests/Event/UDP/Test.idl:
          Extended this test and reproduced the bug we had in CIAO. This
          test now will fail until Jeff Parsons commits some related
          valuetype changes.

Wed Nov 22 10:17:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * Release:
          Removed dsw files

        * docs/ORBEndpoint.html:
          Added reuse_addr to the list of options, request has been made
          to OCI to check and extend the documentation of this option
          which has been available starting TAO 1.4.8

        * TAO_IDL/be/be_codegen.cpp:
          Removed check for IFR_Client, we do have an empty A.h file for
          the IFR_Client files now

        * TAO_IDL/be/be_global.cpp:
          Updated help of -GA

        * tao/AnyTypeCode/NVList.cpp:
          Use true/false

        * tao/HTTP_Client.{h,cpp}:
        * tao/HTTP_Handler.{h,cpp}:
        * tao/HTTP_Parser.{h,cpp}:
          New files to support http:/ as IOR format. Fixes bugzilla bugs
          2670 and 372

        * tao/IIOP_Acceptor.cpp:
          Removed check for priority, that is gone already a long time and
          this takes footprint.

        * tao/Stub.cpp:
          Const changes and removed TAO_Synchronous_Cancellation_Required which
          doesn't seem used at all.

Mon Nov 20 08:16:34 2006  Simon McQueen  <sm@prismtech.com>

        * TAO version 1.5.4 released.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:

