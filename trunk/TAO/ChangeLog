Thu Sep 25 20:28:39 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/AMI/server.cpp
        * tests/Portable_Interceptors/Benchmark/client.cpp
        * tests/Portable_Interceptors/Benchmark/Interceptor_Type.cpp
        * tests/Portable_Interceptors/Benchmark/Interceptor_Type.h
        * tests/Portable_Interceptors/Benchmark/marker.cpp
        * tests/Portable_Interceptors/Benchmark/marker.h
        * tests/Portable_Interceptors/Benchmark/server.cpp
        * tests/Portable_Interceptors/Bug_1559/client.cpp
        * tests/Portable_Interceptors/Bug_1559/server.cpp
          ACE_TCHAR changes

Thu Sep 25 20:19:39 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/File_IO/client.cpp:
        * tests/File_IO/server.cpp:
        * tests/Multiple_Inheritance/client.cpp:
        * tests/Multiple_Inheritance/server.cpp:
        * tests/Param_Test/options.cpp:
        * tests/Param_Test/options.h:
        * tests/POA/DSI/server.cp:
        * tests/POA/Forwarding/client.cpp:
        * tests/POA/Forwarding/server.cpp:
        * tests/POA/Object_Reactivation/Object_Reactivation.cpp:
        * tests/POA/On_Demand_Actiation/server.cpp:
        * tests/POA/TIE/client.cpp:
        * tests/UNKNOWN_Exception/client.cpp:
          ACE_TCHAR changes

Thu Sep 25 11:27:39 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/CosLifeCycle.mpc:

          Changed server skeleton project to inherit from portableserver
          base project.

Thu Sep 25 07:47:24 UTC 2008  Simon McQueen  <sm@prismtech.com>

        * tao/Protocols_Hooks.h:
        * tao/TSS_Resources.h:
        * tao/TSS_Resources.cpp:
        * tao/RTCORBA/Continuous_Priority_Mapping.cpp:
        * tao/RTCORBA/Linear_Priority_Mapping.cpp:
        * tao/RTCORBA/RT_Current.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tao/RTCORBA/RT_Protocols_Hooks.h:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:

          The CORBA priority as set by the user with RTCurrent::the_priority
          is now held in thread local storage. This value is propagated in
          request contexts and returned via the RTCurrent accessor method.
          Previously the value propagated / returned was the result of calling
          ::to_CORBA on the result of ::to_native on the original priority
          using the effective priority mapping. This had the potential to
          introduce rounding effects with mappings like 'linear' particularly
          in systems comprised of heterogenuous RTOS flavours.
          An implicit CORBA priority, derived from the native thread priority,
          will now only be transmitted as the request context in the even that
          a CORBA priority hasn't been explicitly set.
          The RTCurrent::the_priority read accessor now throws a
          CORBA::INITIALIZE exception if no value has previously been set via
          the write accessor as required by the spec.
          The RTCurrent::the_priority write accessor will now throw a
          CORBA::BAD_PARAM exception, as required by section "2.6 RTCurrent" of
          the RT specification, if an attempt has been made to set an out of
          range CORBA priority if the effective priority mapping indicates that
          the CORBA priority cannot be mapped to_native or the attempt to set
          the priority on the RTOS has failed. If the CORBA priortiy is not out
          of the maximum permitted range then a DATA_CONVERSION exception will
          continue to be thrown in these circumstances.
          The linear priority mapping has been changed such that, for an
          instance of the linear priority mapping 'pm' and a CORBA::Priority
          'x', the result of calling pm->to_CORBA (pm->to_native (x)) is equal
          to pm->to_CORBA (pm->to_native (pm->to_CORBA (pm->to_native (x)))).
          This means that whilst a rounding effect may occur on the initial
          conversion between priority types and back, subsequent repeat
          conversions should be idempotent.
          The continuous priority mapping will now correctly return the value
          false when asked to convert RTCORBA::maxPriority ::to_native when
          there are less that 32768 native priorities available on the RTOS.

        * tests/RTCORBA/Bug_3382_Regression:
        * tests/RTCORBA/Bug_3382_Regression/Bug_3382_Regression.mpc:
        * tests/RTCORBA/Bug_3382_Regression/Client_ORBInitializer.h:
        * tests/RTCORBA/Bug_3382_Regression/Client_ORBInitializer.cpp:
        * tests/RTCORBA/Bug_3382_Regression/README:
        * tests/RTCORBA/Bug_3382_Regression/client.cpp:
        * tests/RTCORBA/Bug_3382_Regression/interceptors.h:
        * tests/RTCORBA/Bug_3382_Regression/interceptors.cpp:
        * tests/RTCORBA/Bug_3382_Regression/run_test.pl:
        * tests/RTCORBA/Bug_3382_Regression/server.cpp:
        * tests/RTCORBA/Bug_3382_Regression/simple_client.cpp:
        * tests/RTCORBA/Bug_3382_Regression/svc.conf:
        * tests/RTCORBA/Bug_3382_Regression/test.idl:

          Regression test for as much of the above as is feasible.

        * tests/RTCORBA/Banded_Connections/client.cpp:
        * tests/RTCORBA/Client_Propagated/server.cpp:
        * tests/RTCORBA/Collocation/Collocation.cpp:
        * tests/RTCORBA/Destroy_Thread_Pool/Destroy_Thread_Pool.cpp:
        * tests/RTCORBA/Dynamic_Thread_Pool/client.cpp:
        * tests/RTCORBA/Dynamic_Thread_Pool/server.cpp:
        * tests/RTCORBA/MT_Client_Protocol_Priority/client.cpp:
        * tests/RTCORBA/Persistent_IOR/server.cpp:
        * tests/RTCORBA/Policy_Combinations/client.cpp:
        * tests/RTCORBA/Policy_Combinations/server.cpp:
        * tests/RTCORBA/Priority_Inversion_With_Bands/client.cpp:
        * tests/RTCORBA/Priority_Inversion_With_Bands/server.cpp:
        * tests/RTCORBA/Thread_Pool/client.cpp:
        * tests/RTCORBA/Thread_Pool/server.cpp:
        * tests/RTCORBA/check_supported_priorities.cpp:

          Update the above tests for the corrected RTCurrent behaviour.
          In essence, accessing ::the_priority when it hasn't been set is an
          error as per spec so these tests have been changed so they don't do
          that anymore.

Wed Sep 24 17:43:22 UTC 2008  Rich Seibel <seibel_r@ociweb.com>

        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushConsumer.cpp:
        * orbsvcs/tests/Bug_3387_Regression/:

          Fix and test for Bug 3387.  The fix causes validation
          of connection on first attempt to use it.  This will purge the
          bad connection and then create a new one.

Wed Sep 24 17:22:00 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/TimeService.idl:

          Changed to #include "tao/TimeBase.pidl" instead of orbsvcs
          wrapper "TimeBase.idl", as that forces a dependency on the
          Svc_Utils project / library.

        * MPC/config/time.mpb:
        * MPC/config/time_serv.mpb:
        * orbsvcs/orbsvcs/CosTime.mpc:

          Revert change:

          Wed Sep 24 10:59:39 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

Wed Sep 24 10:59:39 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * MPC/config/time.mpb:
        * MPC/config/time_serv.mpb:

          Changed client stub base project to inherit from svc_utils
          base project.  Changed server implementation base project
          so it no longer inherits from svc_utils base project.

        * orbsvcs/orbsvcs/CosTime.mpc:

          Changed client stub library project to inherit from svc_utils
          base project, to insure the orbsvcs TimeBase.idl wrapper has
          been compiled.

Wed Sep 24 10:03:02 UTC 2008  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/InterfaceRepo/Union_Forward_Test/README.txt:

          Updated - now fixed.

Tue Sep 23 21:31:40 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Time_Service/Time_Service.mpc:

          Changed to inherit from the time_serv base project.

        * MPC/config/time_serv.mpb:
        * MPC/config/time_skel.mpb:

          New MPC base projects for the time server skeleton and server
          implementation libraries.

        * MPC/config/time.mpb:

          Update time base project so it reflects only the client stub
          library.

        * orbsvcs/orbsvcs/TAO_CosTime_Serv.pc.in:
        * orbsvcs/orbsvcs/TAO_CosTime_Skel.pc.in:

          New files, pkgconfig templates for server skeleton and server
          implementation libraries.

        * orbsvcs/orbsvcs/TAO_CosTime.pc.in:

          Update pkgconfig template so it reflects only the client stub
          library.

        * orbsvcs/orbsvcs/Time/time_serv_export.h:
        * orbsvcs/orbsvcs/Time/time_skel_export.h:

          New files, export directives for server skeleton and server
          implementation libraries.

        * orbsvcs/orbsvcs/CosTime.mpc:

          Split CosTime project into separate projects for IDL
          compilation, client stub libray, server skeleton library, and
          server implementation library.

          Fixes bugzilla issue #3433.

        * examples/Quoter/Quoter.mpc:
        * orbsvcs/LifeCycle_Service/LifeCycle_Service.mpc:

          Changed to inherit from lifecycle_skel base project.

        * MPC/config/lifecycle_skel.mpb:

          New file, MPC base project for the lifecycle server skeleton
          library.

        * MPC/config/lifecycle.mpb:

          Update lifecycle base project so it reflects only the client
          stub library.

        * orbsvcs/orbsvcs/TAO_CosLifeCycle_Skel.pc.in:

          New file, pkgconfig template for server skeleton library.

        * orbsvcs/orbsvcs/TAO_CosLifeCycle.pc.in

          Update pkgconfig template so it reflects only the client stub
          library.

        * orbsvcs/orbsvcs/LifeCycle/lifecycle_skel_export.h:

          New file, export directives for server skeleton library.

        * orbsvcs/orbsvcs/CosLifeCycle.mpc:

          Split CosLifeCycle project into separate projects for IDL
          compilation, client stub library, and server skeleton library.

          Fixes bugzilla issue #2409.

Tue Sep 23 20:50:05 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_union.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_structure.cpp:

          Changes to the logic of union and struct processing,
          especially in the discrimination of the case where a
          full definition of a previous forward declaration is
          being processed. Thanks to Phil Mesnier <mesnier_p@ociweb.com>
          for discovering the problem, adding a regression test
          for forward delcared unions. These changes fix [BUGID:3431].

        * orbsvcs/tests/InterfaceRepo/Union_Forward_Test/client.cpp:

          Elimination of some #includes, other minor changes.

        * orbsvcs/tests/InterfaceRepo/Union_Forward_Test/run_test.pl:

          Changed the path in the command string that launches tao_ifr
          to $ACE_ROOT/bin, which is portable, from tao_ifr's
          build directory, which doesn't work on Windows.

Tue Sep 23 12:00:26 UTC 2008  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/tests/InterfaceRepo/Union_Forward_Test/client.cpp:

          Fix for fussy compilers that don't like direct sequence element
          dereferencing from a var.

Mon Sep 22 19:26:42 UTC 2008  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/tests/InterfaceRepo/Union_Forward_Test:

        * orbsvcs/tests/InterfaceRepo/Union_Forward_Test/README.txt:
        * orbsvcs/tests/InterfaceRepo/Union_Forward_Test/Union_Forward_Test.mpc:
        * orbsvcs/tests/InterfaceRepo/Union_Forward_Test/client.cpp:
        * orbsvcs/tests/InterfaceRepo/Union_Forward_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Union_Forward_Test/test.idl:

          New test added to support bugzilla #3431


Mon Sep 22 16:33:41 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:

          Rolled back previous version for main file name comparison
          on OPENVMS.

Mon Sep 22 14:57:34 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp:
        * tao/ETCL/TAO_ETCL_Contraint.cpp:

          Fix fuzz errors.

Mon Sep 22 13:30:28 UTC 2008  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_component/component_ci.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ci.cpp:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:

          Scope use of IOP module.

        * tao/PI_Server/ServerInterceptorAdapter.h:
        * tao/ServerRequestInterceptor_Adapter.h:

          Remove misleading comments.

        * tao/Utils/Servant_Var.inl:

          Remove pointless try / catch.

Sat Sep 19 10:05:29 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Hello/client.cpp:
        * tests/Hello/server.cpp:
          Unicode changes

Sat Sep 19 10:04:29 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.{h,cpp}:
          Added a string_to_object with a wchar_t argument which is TAO
          specific. This makes it much easier to use TAO in an unicode
          application

Fri Sep 19 17:53:29 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp:
        * tao/ETCL/TAO_ETCL_Constraint.cpp:

          Avoid core dump by returning 0 when evaluating division by zero.
          Partial fix for bugzilla issue #3429.

Fri Sep 19 16:24:20 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:

          Updated to not compare realpath if it's not found.

Thu Sep 18 22:45:39 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/idl.ll:

          Made idl_parse_line_and_file() to compare the full path to verify
          two path are referring to the same file. This would correctly verify
          even one path is full path and the other is real path.

Thu Sep 18 18:36:39 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2936_Regression/bug2936.mpc:
        * tests/Bug_2936_Regression/run_test.pl:
          Changed the exe project to build the executable server. We
          first build an exe and lib with the same name which caused
          the vxtest mpc generator to issue a warning

Thu Sep 18 11:03:39 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * utils/nslist/Makefile.am:

          Regenerated.

Thu Sep 18 11:02:03 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp:

          Explicitly initialize base class in TAO_Literal_Constraint copy
          constructor.

Wed Sep 17 18:59:57 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_sunsoft.cpp (print):

          Changed signed long long case to be similar to unsigned
          long long, using ACE macros that expand to the correct
          thing whether native 64-bit integers are defined or not.
          This change enables code generation for signed long long
          literals (as the rhs of 'const long long' declarations)
          to be correct on all platforms. Thanks to Ittehad Shaikh
          <ishaikh@verivue.com> for reporting the Linux warning
          that uncovered this bug. Fixes [BUGID:3423].

Wed Sep 17 18:48:41 UTC 2008  Phil Mesnier  <mesnier_p@ociweb.com>

        * examples/AMH/Sink_Server/Client_Task.h:
        * examples/AMH/Sink_Server/Client_Task.cpp:
        * examples/AMH/Sink_Server/client.cpp:

          Correct the example so that -ORB* parameters, such as debug
          level could be supplied via the command line.

        * tao/Messaging/AMH_Response_Handler.cpp:

          AMH was not correctly handling codeset translation.

        * tao/ORB_Core.cpp:

          Reprioritize the debug output generated by the run() method to
          only be output for debug levels greater than 10. The motivation
          for this is that it is difficult to wade through hundreds or
          thousands of lines of output from a server that is only sparsely
          active but running for a long time. With this change, an
          otherwise idle server running with -ORBDebuglevel 10 will not
          fill up the log. Use -ORBDebuglevel 11 to generate these
          messages if necessary.

Wed Sep 17 18:47:59 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Acceptor_Impl.{h,cpp}:
          restart is a bool

Wed Sep 17 13:13:38 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.inl:

          Wrap contents with versioned namespace macros.

        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp:

          #include "orbsvcs/Trader/Constraint_Nodes.inl" when
          __ACE_INLINE__ is not defined.

Wed Sep 17 11:45:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tao/String_Manager_T.h:

          Removed extranioius ;

Tue Sep 16 18:51:13 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tao/String_Manager_T.h:

          Added global operator< definition for TAO::String_Manager.
          This is required by OpenDDS to support string type DCPS_DATA_KEY.

Tue Sep 16 22:15:32 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/ETCL/TAO_ETCL_Constraint.cpp:

          Changed TAO_ETCL_Literal_Constraint::copy() so that the any
          associated with a constraint object of type ACE_ETCL_COMPONENT
          has it's reference count decremented before the constraint is
          overwritten by the new value.  Previously this was only done if
          the new value was also of type ACE_ETCL_COMPONENT.  This avoids
          a memory leak.

        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp:

          Changed TAO_Literal_Constraint::copy(), so that the string
          associated with a constraint object of type TAO_STRING is
          freed before the constraint is overwritten by the new value.
          This avoids a memory leak.

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * orbsvcs/orbsvcs/CosTrading.mpc:

          Add Constraint_Nodes.inl to Inline_Files section.

        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.h:
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.inl:

          Implement operator!=, operator<=, and operator>= for
          TAO_Literal_Constraint operands in terms of operator==,
          operator>, and operator< and make them inline. Removes a lot of
          boilerplate code and reduces static footprint.

Tue Sep 16 13:12:00 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Cubit/TAO/IDL_Cubit/run_test.pl:
          Also test shmiop on windows

Tue Sep 16 12:40:00 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/catior/catior.mpc:
          Renamed to tao_catior to prevent clash with similar utility
          from different orbs. Resolves bugzilla 3398

Tue Sep 16 12:38:00 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/nslist/nslist.cpp:
        * utils/nslist/nslist.mpc:
        * utils/nslist/run_test.pl:
          Link the strategies lib and also renamed the executables
          to have a tao_ prefix to prevent clashes with similar utilities
          from different orbs.

Tue Sep 16 11:59:00 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * Release:
          Ship bmak files

        * rules.tao.GNU:
          No need to check for TAO_ROOT in the ldflags

        * orbsvcs/IFR_Service/IFR_Service.mpc:
          Fixed bug in this file, fixes bugzilla 3397

        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/RT_Notification.mpc:
          Removed borland support

Tue Sep 16 11:32:00 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/EC_Throughput/ECT_Throughput.h
        * orbsvcs/tests/Event/Basic/BCast.cpp
        * orbsvcs/tests/Event/Basic/BCast.h
        * orbsvcs/tests/Event/Basic/Observer.cpp
        * orbsvcs/tests/Event/Basic/Observer.h
        * orbsvcs/tests/Event/Basic/Reconnect.cpp
        * orbsvcs/tests/Event/Basic/Reconnect.h
        * orbsvcs/tests/Event/Basic/Schedule.cpp
        * orbsvcs/tests/Event/Basic/Schedule.h
        * orbsvcs/tests/Event/lib/Driver.cpp
        * orbsvcs/tests/Event/lib/Driver.h
        * orbsvcs/tests/Event/Mcast/Common/Gateway_EC.cpp
        * orbsvcs/tests/Event/Mcast/Common/Gateway_EC.h
        * orbsvcs/tests/Event/Mcast/Two_Way/application.cpp
        * orbsvcs/tests/Event/Performance/Connect.cpp
        * orbsvcs/tests/Event/Performance/Connect.h
        * orbsvcs/tests/Event/Performance/Latency.cpp
        * orbsvcs/tests/Event/Performance/Latency_Server.cpp
        * orbsvcs/tests/Event/Performance/Throughput.cpp
        * orbsvcs/tests/Event/Performance/Throughput.h
        * orbsvcs/tests/Event/UDP/receiver.cpp
        * orbsvcs/tests/Event/UDP/sender.cpp
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/client.cpp
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/server.cpp
        * orbsvcs/tests/FaultTolerance/IOGR/Manager.cpp
        * orbsvcs/tests/FaultTolerance/IOGR/server.cpp
        * orbsvcs/tests/FT_App/FT_Client.cpp
        * orbsvcs/tests/FT_App/FT_Creator.cpp
        * orbsvcs/tests/FT_App/FT_Creator.h
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp
        * orbsvcs/tests/FT_App/FT_ReplicationManagerController.cpp
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp
        * orbsvcs/tests/FT_App/FT_TestReplica_i.h
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.cpp
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp
        * orbsvcs/tests/FT_App/StubFaultConsumer.cpp
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp
        * orbsvcs/tests/HTIOP/AMI/client.cpp
        * orbsvcs/tests/HTIOP/AMI/server.cpp
        * orbsvcs/tests/HTIOP/AMI/simple_client.cpp
        * orbsvcs/tests/HTIOP/BiDirectional/client.cpp
        * orbsvcs/tests/HTIOP/BiDirectional/server.cpp
        * orbsvcs/tests/HTIOP/Hello/client.cpp
        * orbsvcs/tests/HTIOP/Hello/server.cpp
        * orbsvcs/tests/ImplRepo/airplane_client_i.cpp
        * orbsvcs/tests/ImplRepo/airplane_server_i.cpp
        * orbsvcs/tests/ImplRepo/nestea_client_i.cpp
        * orbsvcs/tests/ImplRepo/nestea_server_i.cpp
        * orbsvcs/tests/ImplRepo/scale/server_i.cpp
        * orbsvcs/tests/ImplRepo/scale/server_i.h
        * orbsvcs/tests/InterfaceRepo/Application_Test/ifr_dii_client.cpp
        * orbsvcs/tests/InterfaceRepo/Bug_3155_Regression/test_idl.cpp
        * orbsvcs/tests/InterfaceRepo/Bug_3174_Regression/test_idl.cpp
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.cpp
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.cpp
        * orbsvcs/tests/InterfaceRepo/Latency_Test/Latency_Query_Client.cpp
        * orbsvcs/tests/InterfaceRepo/Persistence_Test/Ptest.cpp
        * orbsvcs/tests/Interoperable_Naming/ncontextext_client_i.cpp
        * orbsvcs/tests/IOR_MCast/server_i.cpp
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/client.cpp
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/client.cpp
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/client.cpp
        * orbsvcs/tests/Log/Basic_Log_Test/Basic_Log_Test.cpp
        * orbsvcs/tests/Miop/McastHello/client.cpp
        * orbsvcs/tests/Miop/McastHello/server.cpp
        * orbsvcs/tests/Notify/Basic/AdminProperties.h
        * orbsvcs/tests/Notify/Blocking/Structured_Consumer.cpp
        * orbsvcs/tests/Notify/Blocking/Structured_Supplier.cpp
        * orbsvcs/tests/Notify/Bug_1385_Regression/Structured_Consumer.cpp
        * orbsvcs/tests/Notify/Bug_1385_Regression/Structured_Supplier.cpp
        * orbsvcs/tests/Notify/Bug_2561_Regression/Consumer.cpp
        * orbsvcs/tests/Notify/Bug_2561_Regression/Supplier.cpp
        * orbsvcs/tests/Notify/Discarding/Sequence_Consumer.cpp
        * orbsvcs/tests/Notify/Discarding/Sequence_Supplier.cpp
        * orbsvcs/tests/Notify/Discarding/Structured_Consumer.cpp
        * orbsvcs/tests/Notify/Discarding/Structured_Supplier.cpp
        * orbsvcs/tests/Notify/lib/Driver.cpp
        * orbsvcs/tests/Notify/lib/Driver.h
        * orbsvcs/tests/Notify/MC/Structured_Consumer.cpp
        * orbsvcs/tests/Notify/MC/Structured_Supplier.cpp
        * orbsvcs/tests/Notify/MT_Dispatching/Structured_Consumer.cpp
        * orbsvcs/tests/Notify/MT_Dispatching/Structured_Supplier.cpp
        * orbsvcs/tests/Notify/Ordering/Sequence_Consumer.cpp
        * orbsvcs/tests/Notify/Ordering/Sequence_Supplier.cpp
        * orbsvcs/tests/Notify/Ordering/Structured_Consumer.cpp
        * orbsvcs/tests/Notify/Ordering/Structured_Supplier.cpp
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Consumer.cpp
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Supplier.cpp
        * orbsvcs/tests/Notify/performance-tests/Filter/Structured_Consumer.cpp
        * orbsvcs/tests/Notify/performance-tests/Filter/Structured_Supplier.cpp
        * orbsvcs/tests/Notify/Persistent_POA/Structured_Supplier.cpp
        * orbsvcs/tests/Notify/Reconnecting/Consumer.cpp
        * orbsvcs/tests/Notify/Reconnecting/Consumer.h
        * orbsvcs/tests/Notify/Reconnecting/Supplier.cpp
        * orbsvcs/tests/Notify/Reconnecting/Supplier.h
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Consumer.cpp
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Supplier.cpp
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Consumer.cpp
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Supplier.cpp
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Consumer.cpp
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Consumer.cpp
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Supplier.cpp
        * orbsvcs/tests/Notify/Timeout/Structured_Consumer.cpp
        * orbsvcs/tests/Notify/Timeout/Structured_Supplier.cpp
        * orbsvcs/tests/RTCosScheduling/client.cpp
        * orbsvcs/tests/RTCosScheduling/server.cpp
        * orbsvcs/tests/Sched_Conf/Sched_Conf.cpp
        * orbsvcs/tests/Sched_Conf/Sched_Conf_Anomalies.cpp
        * orbsvcs/tests/Security/BiDirectional/client.cpp
        * orbsvcs/tests/Security/BiDirectional/server.cpp
        * orbsvcs/tests/Security/Big_Request/client.cpp
        * orbsvcs/tests/Security/Big_Request/server.cpp
        * orbsvcs/tests/Security/Bug_1107_Regression/client.cpp
        * orbsvcs/tests/Security/Bug_1107_Regression/server.cpp
        * orbsvcs/tests/Security/Crash_Test/client.cpp
        * orbsvcs/tests/Security/Crash_Test/server.cpp
        * orbsvcs/tests/Security/EndpointPolicy/test.cpp
        * orbsvcs/tests/Security/InsecureReferences/test.cpp
        * orbsvcs/tests/Security/MT_IIOP_SSL/client.cpp
        * orbsvcs/tests/Security/MT_IIOP_SSL/server.cpp
        * orbsvcs/tests/Security/MT_SSLIOP/client.cpp
        * orbsvcs/tests/Security/MT_SSLIOP/server.cpp
        * orbsvcs/tests/Security/Secure_Invocation/client.cpp
        * orbsvcs/tests/Security/Secure_Invocation/server.cpp
        * orbsvcs/tests/Security/ssliop_corbaloc/client.cpp
        * orbsvcs/tests/Simple_Naming/client.cpp
        * orbsvcs/tests/Time/Client_i.cpp
        * orbsvcs/tests/Trading/colocated_test.cpp
          ACE_TCHAR changes

Tue Sep 16 11:32:00 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Abstract_Interface/client.cpp
        * tests/Abstract_Interface/server.cpp
        * tests/AMH_Oneway/client.cpp
        * tests/AMH_Oneway/server.cpp
        * tests/AMI/client.cpp
        * tests/AMI/server.cpp
        * tests/AMI/simple_client.cpp
        * tests/AMI_Buffering/admin.cpp
        * tests/AMI_Buffering/client.cpp
        * tests/AMI_Buffering/server.cpp
        * tests/AMI_Timeouts/client.cpp
        * tests/AMI_Timeouts/server.cpp
        * tests/Any/Recursive/client.cpp
        * tests/Any/Recursive/server.cpp
        * tests/BiDirectional/client.cpp
        * tests/BiDirectional/server.cpp
        * tests/BiDirectional_DelayedUpcall/client.cpp
        * tests/BiDirectional_DelayedUpcall/server.cpp
        * tests/BiDirectional_NestedUpcall/client.cpp
        * tests/BiDirectional_NestedUpcall/server.cpp
        * tests/Big_AMI/client.cpp
        * tests/Big_AMI/server.cpp
        * tests/Big_Oneways/client.cpp
        * tests/Big_Oneways/server.cpp
        * tests/Big_Reply/client.cpp
        * tests/Big_Reply/server.cpp
        * tests/Big_Request_Muxing/client.cpp
        * tests/Big_Request_Muxing/server.cpp
        * tests/Big_Twoways/client.cpp
        * tests/Big_Twoways/server.cpp
        * tests/Blocking_Sync_None/client.cpp
        * tests/Blocking_Sync_None/server.cpp
        * tests/Bug_1020_Basic_Regression/client.cpp
        * tests/Bug_1020_Basic_Regression/server.cpp
        * tests/Bug_1020_Regression/client.cpp
        * tests/Bug_1020_Regression/server.cpp
        * tests/Bug_1254_Regression/client.cpp
        * tests/Bug_1254_Regression/server.cpp
        * tests/Bug_1269_Regression/client.cpp
        * tests/Bug_1269_Regression/server.cpp
        * tests/Bug_1269_Regression/shutdown.cpp
        * tests/Bug_1270_Regression/client.cpp
        * tests/Bug_1270_Regression/server.cpp
        * tests/Bug_1270_Regression/shutdown.cpp
        * tests/Bug_1330_Regression/client.cpp
        * tests/Bug_1330_Regression/server.cpp
        * tests/Bug_1361_Regression/client.cpp
        * tests/Bug_1361_Regression/server.cpp
        * tests/Bug_1361_Regression/shutdown.cpp
        * tests/Bug_1476_Regression/client.cpp
        * tests/Bug_1476_Regression/server.cpp
        * tests/Bug_1476_Test/client.cpp
        * tests/Bug_1482_Regression/client.cpp
        * tests/Bug_1482_Regression/server.cpp
        * tests/Bug_1495_Regression/Threaded_Client.cpp
        * tests/Bug_1495_Regression/Threaded_Server.cpp
        * tests/Bug_1551_Regression/client.cpp
        * tests/Bug_1551_Regression/server.cpp
        * tests/Bug_1568_Regression/client.cpp
        * tests/Bug_1568_Regression/server.cpp
        * tests/Bug_1627_Regression/client.cpp
        * tests/Bug_1627_Regression/server.cpp
        * tests/Bug_1670_Regression/client.cpp
        * tests/Bug_1670_Regression/server.cpp
        * tests/Bug_1676_Regression/client.cpp
        * tests/Bug_1676_Regression/server.cpp
        * tests/Bug_2084_Regression/Collocated_Test.cpp
        * tests/Bug_2174_Regression/client.cpp
        * tests/Bug_2174_Regression/server.cpp
        * tests/Bug_2183_Regression/client.cpp
        * tests/Bug_2183_Regression/server.cpp
        * tests/Bug_2186_Regression/client.cpp
        * tests/Bug_2186_Regression/server.cpp
        * tests/Bug_2188_Regression/client.cpp
        * tests/Bug_2188_Regression/server.cpp
        * tests/Bug_2289_Regression/client.cpp
        * tests/Bug_2289_Regression/server.cpp
        * tests/Bug_2319_Regression/server.cpp
        * tests/Bug_2328_Regression/client.cpp
        * tests/Bug_2328_Regression/server.cpp
        * tests/Bug_2356_Regression/client.cpp
        * tests/Bug_2356_Regression/server.cpp
        * tests/Bug_2429_Regression/server.cpp
        * tests/Bug_2494_Regression/client.cpp
        * tests/Bug_2494_Regression/server.cpp
        * tests/Bug_2503_Regression/client.cpp
        * tests/Bug_2503_Regression/server.cpp
        * tests/Bug_2560_Regression/server.cpp
        * tests/Bug_2593_Regression/client.cpp
        * tests/Bug_2593_Regression/server.cpp
        * tests/Bug_2595_Regression/client.cpp
        * tests/Bug_2595_Regression/server.cpp
        * tests/Bug_2654_Regression/client.cpp
        * tests/Bug_2654_Regression/server.cpp
        * tests/Bug_2669_Regression/client.cpp
        * tests/Bug_2678_Regression/client.cpp
        * tests/Bug_2683_Regression/client.cpp
        * tests/Bug_2702_Regression/client.cpp
        * tests/Bug_2734_Regression/client.cpp
        * tests/Bug_2734_Regression/server.cpp
        * tests/Bug_2768_Regression/client.cpp
        * tests/Bug_2804_Regression/client.cpp
        * tests/Bug_2804_Regression/server.cpp
        * tests/Bug_2805_Regression/client.cpp
        * tests/Bug_2844_Regression/client.cpp
        * tests/Bug_2844_Regression/server.cpp
        * tests/Bug_2909_Regression/client.cpp
        * tests/Bug_2918_Regression/client.cpp
        * tests/Bug_2918_Regression/server.cpp
        * tests/Bug_2966_Regression/client.cpp
        * tests/Bug_2966_Regression/server.cpp
        * tests/Bug_3000_Regression/client.cpp
        * tests/Bug_3000_Regression/server.cpp
        * tests/Bug_3108_Regression/server.cpp
        * tests/Bug_3163_Regression/client.cpp
        * tests/Bug_3163_Regression/server.cpp
        * tests/Bug_3171_Regression/server.cpp
        * tests/Bug_3198_Regression/bug_3198_regression.cpp
        * tests/Bug_3276_Regression/client.cpp
        * tests/Bug_3276_Regression/Manager.cpp
        * tests/Bug_3299_Regression/client.cpp
        * tests/Bug_3299_Regression/server.cpp
        * tests/Cache_Growth_Test/client.cpp
        * tests/Cache_Growth_Test/server.cpp
        * tests/CallbackTest/client.cpp
        * tests/CallbackTest/server.cpp
        * tests/CDR/allocator.cpp
        * tests/CDR/basic_types.cpp
        * tests/CDR/growth.cpp
        * tests/Client_Leaks/client.cpp
        * tests/Client_Leaks/server.cpp
        * tests/COIOP/COIOP_Test.cpp
        * tests/Collocated_Forwarding/server.cpp
        * tests/Collocation_Exception_Test/Collocated_Test.cpp
        * tests/Collocation_Oneway_Tests/Collocated_Test.cpp
        * tests/Collocation_Tests/Collocated_Test.cpp
        * tests/Connect_Strategy_Test/client.cpp
        * tests/Connect_Strategy_Test/server.cpp
        * tests/Connection_Purging/client.cpp
        * tests/Connection_Purging/server.cpp
        * tests/Connection_Timeout/client.cpp
        * tests/Crash_On_Write/client.cpp
        * tests/Crash_On_Write/server.cpp
        * tests/Crashed_Callback/client.cpp
        * tests/Crashed_Callback/server.cpp
        * tests/CSD_Strategy_Tests/Broken/ClientApp.cpp
        * tests/CSD_Strategy_Tests/Broken/ClientApp.h
        * tests/CSD_Strategy_Tests/Broken/ServerApp.cpp
        * tests/CSD_Strategy_Tests/Broken/ServerApp.h
        * tests/CSD_Strategy_Tests/TP_Test_1/ClientApp.cpp
        * tests/CSD_Strategy_Tests/TP_Test_1/ClientApp.h
        * tests/CSD_Strategy_Tests/TP_Test_1/ServerApp.cpp
        * tests/CSD_Strategy_Tests/TP_Test_1/ServerApp.h
        * tests/CSD_Strategy_Tests/TP_Test_2/ClientApp.cpp
        * tests/CSD_Strategy_Tests/TP_Test_2/ClientApp.h
        * tests/CSD_Strategy_Tests/TP_Test_2/ServerApp.cpp
        * tests/CSD_Strategy_Tests/TP_Test_2/ServerApp.h
        * tests/CSD_Strategy_Tests/TP_Test_3/ClientApp.cpp
        * tests/CSD_Strategy_Tests/TP_Test_3/ClientApp.h
        * tests/CSD_Strategy_Tests/TP_Test_3/ServerApp.cpp
        * tests/CSD_Strategy_Tests/TP_Test_3/ServerApp.h
        * tests/CSD_Strategy_Tests/TP_Test_4/ClientApp.cpp
        * tests/CSD_Strategy_Tests/TP_Test_4/ClientApp.h
        * tests/CSD_Strategy_Tests/TP_Test_4/ServerApp.cpp
        * tests/CSD_Strategy_Tests/TP_Test_4/ServerApp.h
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/client.cpp
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/server.cpp
        * tests/CSD_Strategy_Tests/TP_Test_Static/ClientApp.cpp
        * tests/CSD_Strategy_Tests/TP_Test_Static/ClientApp.h
        * tests/CSD_Strategy_Tests/TP_Test_Static/ServerApp.cpp
        * tests/DiffServ/client.cpp
        * tests/DII_AMI_Forward/client.cpp
        * tests/DII_AMI_Forward/server.cpp
        * tests/DII_Collocation_Tests/oneway/Collocated_Test.cpp
        * tests/DII_Collocation_Tests/twoway/Collocated_Test.cpp
        * tests/DIOP/client.cpp
        * tests/DIOP/server.cpp
        * tests/DLL_ORB/Test_Client_Module.cpp
        * tests/DLL_ORB/Test_Server_Module.cpp
        * tests/DSI_AMH/client.cpp
        * tests/DSI_AMH/server.cpp
        * tests/DSI_AMI_Gateway/client.cpp
        * tests/DSI_AMI_Gateway/gateway.cpp
        * tests/DSI_AMI_Gateway/server.cpp
        * tests/DSI_Gateway/client.cpp
        * tests/DSI_Gateway/gateway.cpp
        * tests/DSI_Gateway/server.cpp
        * tests/DynAny_Test/driver.cpp
        * tests/Explicit_Event_Loop/server.cpp
        * tests/Faults/client.cpp
        * tests/Faults/middle.cpp
        * tests/Faults/ping.cpp
        * tests/Faults/pong.cpp
        * tests/Faults/server.cpp
        * tests/File_IO/client.cpp
        * tests/File_IO/server.cpp
        * tests/FL_Cube/client.cpp
        * tests/FL_Cube/server.cpp
        * tests/Forwarding/client.cpp
        * tests/Forwarding/server.cpp
        * tests/GIOP_Fragments/Java_Big_Reply/client.cpp
        * tests/GIOP_Fragments/Java_Big_Request/server.cpp
        * tests/GIOP_Fragments/PMB_With_Fragments/server.cpp
        * tests/HandleExhaustion/client.cpp
        * tests/HandleExhaustion/server.cpp
        * tests/Hang_Shutdown/client.cpp
        * tests/Hello/client.cpp
        * tests/Hello/server.cpp
        * tests/ICMG_Any_Bug/client.cpp
        * tests/ICMG_Any_Bug/server.cpp
        * tests/InterOp-Naming/Server_i.cpp
        * tests/IPV6/client.cpp
        * tests/IPV6/server.cpp
        * tests/Leader_Followers/client.cpp
        * tests/Leader_Followers/server.cpp
        * tests/LongDouble/client.cpp
        * tests/LongDouble/server.cpp
        * tests/LongUpcalls/ami_client.cpp
        * tests/LongUpcalls/ami_server.cpp
        * tests/LongUpcalls/blocking_client.cpp
        * tests/LongUpcalls/blocking_server.cpp
        * tests/MProfile/client.cpp
        * tests/MProfile/server.cpp
        * tests/MProfile_Connection_Timeout/client.cpp
        * tests/MProfile_Connection_Timeout/server.cpp
        * tests/MProfile_Forwarding/client.cpp
        * tests/MProfile_Forwarding/Manager.cpp
        * tests/MProfile_Forwarding/server.cpp
        * tests/MT_BiDir/client.cpp
        * tests/MT_BiDir/server.cpp
        * tests/MT_Client/client.cpp
        * tests/MT_Client/orb_creation.cpp
        * tests/MT_Client/server.cpp
        * tests/MT_Server/client.cpp
        * tests/MT_Server/server.cpp
        * tests/MT_Timeout/client.cpp
        * tests/MT_Timeout/server.cpp
        * tests/Multiple/client.cpp
        * tests/Multiple/server.cpp
        * tests/Multiple_Inheritance/client.cpp
        * tests/Multiple_Inheritance/server.cpp
        * tests/Muxed_GIOP_Versions/client.cpp
        * tests/Muxed_GIOP_Versions/server.cpp
        * tests/Muxing/client.cpp
        * tests/Muxing/server.cpp
        * tests/Native_Exceptions/client.cpp
        * tests/Native_Exceptions/server.cpp
        * tests/Nested_Event_Loop/client.cpp
        * tests/Nested_Event_Loop/server.cpp
        * tests/Nested_Upcall_Crash/client.cpp
        * tests/Nested_Upcall_Crash/scavenger.cpp
        * tests/Nested_Upcall_Crash/server.cpp
        * tests/NestedUpcall/MT_Client_Test/client.cpp
        * tests/NestedUpcall/MT_Client_Test/local_server.cpp
        * tests/NestedUpcall/MT_Client_Test/server.cpp
        * tests/NestedUpcall/Simple/client.cpp
        * tests/NestedUpcall/Simple/server.cpp
        * tests/NestedUpcall/Simple/simple-client.cpp
        * tests/NestedUpcall/Triangle_Test/initiator.cpp
        * tests/NestedUpcall/Triangle_Test/server_A.cpp
        * tests/NestedUpcall/Triangle_Test/server_B.cpp
        * tests/No_Server_MT_Connect_Test/client.cpp
        * tests/No_Server_MT_Connect_Test/server.cpp
        * tests/Objref_Sequence_Test/client.cpp
        * tests/Objref_Sequence_Test/server.cpp
        * tests/OBV/Any/client.cpp
        * tests/OBV/Any/server.cpp
        * tests/OBV/Collocated/Forward/Collocated_Test.cpp
        * tests/OBV/Factory/client.cpp
        * tests/OBV/Factory/server.cpp
        * tests/OBV/Forward/client.cpp
        * tests/OBV/Forward/server.cpp
        * tests/OBV/Simple/Simple_util.cpp
        * tests/OBV/Supports/client.cpp
        * tests/OBV/TC_Alignment/client.cpp
        * tests/OBV/Truncatable/client.cpp
        * tests/OBV/Truncatable/server.cpp
        * tests/OBV/ValueBox/client.cpp
        * tests/OBV/ValueBox/server.cpp
        * tests/OctetSeq/client.cpp
        * tests/OctetSeq/OctetSeq.cpp
        * tests/OctetSeq/server.cpp
        * tests/Ondemand_Write/client.cpp
        * tests/Ondemand_Write/server.cpp
        * tests/Oneway_Buffering/admin.cpp
        * tests/Oneway_Buffering/client.cpp
        * tests/Oneway_Buffering/server.cpp
        * tests/Oneway_Send_Timeouts/Client.cpp
        * tests/Oneway_Send_Timeouts/Server.cpp
        * tests/Oneways_Invoking_Twoways/client.cpp
        * tests/Oneways_Invoking_Twoways/server.cpp
        * tests/Optimized_Connection/oc_client.cpp
        * tests/ORB_Local_Config/Two_DLL_ORB/client.cpp
        * tests/ORB_Local_Config/Two_DLL_ORB/server.cpp
        * tests/ORT/client.cpp
        * tests/ORT/server.cpp
        * tests/Parallel_Connect_Strategy/client.cpp
        * tests/Parallel_Connect_Strategy/server.cpp
        * tests/Param_Test/anyop.cpp
        * tests/Param_Test/options.cpp
        * tests/Param_Test/server.cpp
        * tests/POA/Adapter_Activator/server.cpp
        * tests/POA/Bug_1592_Regression/client.cpp
        * tests/POA/Bug_1592_Regression/server.cpp
        * tests/POA/Default_Servant2/client.cpp
        * tests/POA/Default_Servant2/server.cpp
        * tests/POA/DSI/client.cpp
        * tests/POA/DSI/server.cpp
        * tests/POA/EndpointPolicy/client.cpp
        * tests/POA/Explicit_Activation/server.cpp
        * tests/POA/Forwarding/client.cpp
        * tests/POA/Forwarding/server.cpp
        * tests/POA/Generic_Servant/client.cpp
        * tests/POA/Loader/Server_Manager.cpp
        * tests/POA/Object_Reactivation/Object_Reactivation.cpp
        * tests/POA/On_Demand_Activation/server.cpp
        * tests/POA/On_Demand_Loading/Server_Manager.cpp
        * tests/POA/Persistent_ID/client.cpp
        * tests/POA/Persistent_ID/server.cpp
        * tests/POA/POAManagerFactory/POAManagerFactory.cpp
        * tests/POA/Reference_Counted_Servant/server.cpp
        * tests/POA/TIE/client.cpp
        * tests/Policies/Manipulation.cpp
        * tests/Portable_Interceptors/AMI/client.cpp
        * tests/Portable_Interceptors/AMI/server.cpp
        * tests/Portable_Interceptors/Benchmark/client.cpp
        * tests/Portable_Interceptors/Benchmark/server.cpp
        * tests/Portable_Interceptors/Bug_1559/client.cpp
        * tests/Portable_Interceptors/Bug_1559/server.cpp
        * tests/Portable_Interceptors/Bug_2133/server.cpp
        * tests/Portable_Interceptors/Bug_2510_Regression/server.cpp
        * tests/Portable_Interceptors/Bug_3079/client.cpp
        * tests/Portable_Interceptors/Bug_3079/server.cpp
        * tests/Portable_Interceptors/Bug_3080/client.cpp
        * tests/Portable_Interceptors/Bug_3080/server.cpp
        * tests/Portable_Interceptors/Collocated/Dynamic/Collocated_Test.cpp
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/Collocated_Test.cpp
        * tests/Portable_Interceptors/Dynamic/client.cpp
        * tests/Portable_Interceptors/Dynamic/server.cpp
        * tests/Portable_Interceptors/ForwardRequest/client.cpp
        * tests/Portable_Interceptors/ForwardRequest/server.cpp
        * tests/Portable_Interceptors/IORInterceptor/client.cpp
        * tests/Portable_Interceptors/IORInterceptor/server.cpp
        * tests/Portable_Interceptors/ORB_Shutdown/client.cpp
        * tests/Portable_Interceptors/ORB_Shutdown/server.cpp
        * tests/Portable_Interceptors/PICurrent/client.cpp
        * tests/Portable_Interceptors/PICurrent/server.cpp
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Collocated_Test.cpp
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/client_main.cpp
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/server_main.cpp
        * tests/Portable_Interceptors/Redirection/client.cpp
        * tests/Portable_Interceptors/Redirection/server.cpp
        * tests/Portable_Interceptors/Request_Interceptor_Flow/client.cpp
        * tests/Portable_Interceptors/Request_Interceptor_Flow/server.cpp
        * tests/Portable_Interceptors/Service_Context_Manipulation/client.cpp
        * tests/Portable_Interceptors/Service_Context_Manipulation/server.cpp
        * tests/QtTests/client.cpp
        * tests/QtTests/client.h
        * tests/QtTests/server.cpp
        * tests/Reliable_Oneways/client.cpp
        * tests/Reliable_Oneways/server.cpp
        * tests/RTCORBA/Banded_Connections/client.cpp
        * tests/RTCORBA/Banded_Connections/server.cpp
        * tests/RTCORBA/Client_Propagated/client.cpp
        * tests/RTCORBA/Client_Propagated/server.cpp
        * tests/RTCORBA/Client_Protocol/client.cpp
        * tests/RTCORBA/Client_Protocol/server.cpp
        * tests/RTCORBA/Destroy_Thread_Pool/Destroy_Thread_Pool.cpp
        * tests/RTCORBA/Diffserv/client.cpp
        * tests/RTCORBA/Diffserv/server.cpp
        * tests/RTCORBA/Dynamic_Thread_Pool/client.cpp
        * tests/RTCORBA/Dynamic_Thread_Pool/server.cpp
        * tests/RTCORBA/Explicit_Binding/client.cpp
        * tests/RTCORBA/Explicit_Binding/server.cpp
        * tests/RTCORBA/Linear_Priority/client.cpp
        * tests/RTCORBA/Linear_Priority/server.cpp
        * tests/RTCORBA/MT_Client_Protocol_Priority/client.cpp
        * tests/RTCORBA/MT_Client_Protocol_Priority/server.cpp
        * tests/RTCORBA/Persistent_IOR/client.cpp
        * tests/RTCORBA/Persistent_IOR/server.cpp
        * tests/RTCORBA/Policy_Combinations/client.cpp
        * tests/RTCORBA/Policy_Combinations/server.cpp
        * tests/RTCORBA/Priority_Inversion_With_Bands/client.cpp
        * tests/RTCORBA/Priority_Inversion_With_Bands/server.cpp
        * tests/RTCORBA/Private_Connection/client.cpp
        * tests/RTCORBA/Private_Connection/server.cpp
        * tests/RTCORBA/Profile_And_Endpoint_Selection/client.cpp
        * tests/RTCORBA/Profile_And_Endpoint_Selection/server.cpp
        * tests/RTCORBA/RTMutex/server.cpp
        * tests/RTCORBA/Server_Declared/client.cpp
        * tests/RTCORBA/Server_Declared/server.cpp
        * tests/RTCORBA/Server_Protocol/client.cpp
        * tests/RTCORBA/Server_Protocol/server.cpp
        * tests/RTCORBA/Thread_Pool/client.cpp
        * tests/RTCORBA/Thread_Pool/server.cpp
        * tests/RTScheduling/Scheduling_Interceptor/test_client.cpp
        * tests/RTScheduling/Scheduling_Interceptor/test_server.cpp
        * tests/Servant_To_Reference_Test/server.cpp
        * tests/Server_Connection_Purging/client.cpp
        * tests/Server_Connection_Purging/client2.cpp
        * tests/Server_Connection_Purging/server.cpp
        * tests/Server_Leaks/client.cpp
        * tests/Server_Leaks/server.cpp
        * tests/Server_Port_Zero/server.cpp
        * tests/Single_Read/client.cpp
        * tests/Single_Read/server.cpp
        * tests/Smart_Proxies/Benchmark/client.cpp
        * tests/Smart_Proxies/Benchmark/server.cpp
        * tests/Smart_Proxies/client.cpp
        * tests/Smart_Proxies/dtor/client.cpp
        * tests/Smart_Proxies/dtor/server.cpp
        * tests/Smart_Proxies/On_Demand/client.cpp
        * tests/Smart_Proxies/On_Demand/server.cpp
        * tests/Smart_Proxies/Policy/client.cpp
        * tests/Smart_Proxies/Policy/server.cpp
        * tests/Smart_Proxies/server.cpp
        * tests/Stack_Recursion/client.cpp
        * tests/Stack_Recursion/server.cpp
        * tests/Strategies/client.cpp
        * tests/Strategies/server.cpp
        * tests/Timed_Buffered_Oneways/client.cpp
        * tests/Timed_Buffered_Oneways/server.cpp
        * tests/Timeout/client.cpp
        * tests/Timeout/server.cpp
        * tests/TransportCurrent/Framework/client.cpp
        * tests/TransportCurrent/Framework/server.cpp
        * tests/TransportCurrent/IIOP/client.cpp
        * tests/TransportCurrent/IIOP/server.cpp
        * tests/Two_Objects/client.cpp
        * tests/Two_Objects/server.cpp
        * tests/Typedef_String_Array/client.cpp
        * tests/Typedef_String_Array/server.cpp
        * tests/UNKNOWN_Exception/client.cpp
        * tests/UNKNOWN_Exception/server.cpp
        * tests/Xt_Stopwatch/client.cpp
        * tests/Xt_Stopwatch/Client.h
        * tests/Xt_Stopwatch/server.cpp
        * tests/ZIOP/client.cpp
        * tests/ZIOP/server.cpp
          ACE_TCHAR changes

Tue Sep 16 11:25:00 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/monitor/monitor_client.cpp:
        * performance-tests/Anyop/anyop.cpp
        * performance-tests/Callback/client.cpp
        * performance-tests/Callback/server.cpp
        * performance-tests/CSD_Strategy/TestApps/ClientApp.cpp
        * performance-tests/CSD_Strategy/TestApps/ClientApp.h
        * performance-tests/CSD_Strategy/TestApps/ServerApp.cpp
        * performance-tests/CSD_Strategy/TestApps/ServerApp.h
        * performance-tests/CSD_Strategy/TestInf/TestAppBase.cpp
        * performance-tests/CSD_Strategy/TestInf/TestAppBase.h
        * performance-tests/Cubit/TAO/DII_Cubit/client.cpp
        * performance-tests/Cubit/TAO/IDL_Cubit/collocation_test.cpp
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Client.cpp
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Server.cpp
        * performance-tests/Cubit/TAO/MT_Cubit/Globals.cpp
        * performance-tests/Cubit/TAO/MT_Cubit/Task_Client.cpp
        * performance-tests/Latency/AMH_Single_Threaded/client.cpp
        * performance-tests/Latency/AMH_Single_Threaded/server.cpp
        * performance-tests/Latency/AMI/client.cpp
        * performance-tests/Latency/AMI/server.cpp
        * performance-tests/Latency/Collocation/Collocated_Test.cpp
        * performance-tests/Latency/Deferred/client.cpp
        * performance-tests/Latency/Deferred/server.cpp
        * performance-tests/Latency/DII/client.cpp
        * performance-tests/Latency/DII/server.cpp
        * performance-tests/Latency/DSI/client.cpp
        * performance-tests/Latency/DSI/server.cpp
        * performance-tests/Latency/Single_Threaded/client.cpp
        * performance-tests/Latency/Single_Threaded/server.cpp
        * performance-tests/Latency/Thread_Per_Connection/client.cpp
        * performance-tests/Latency/Thread_Per_Connection/server.cpp
        * performance-tests/Latency/Thread_Pool/client.cpp
        * performance-tests/Latency/Thread_Pool/server.cpp
        * performance-tests/Memory/IORsize/client.cpp
        * performance-tests/Memory/IORsize/server.cpp
        * performance-tests/Memory/Single_Threaded/client.cpp
        * performance-tests/Memory/Single_Threaded/server.cpp
        * performance-tests/Pluggable/PP_Test_Client.cpp
        * performance-tests/Pluggable/PP_Test_Server.cpp
        * performance-tests/POA/Create_Reference/create_reference.cpp
        * performance-tests/POA/Demux/demux_stats.cpp
        * performance-tests/POA/Demux/demux_test_client.cpp
        * performance-tests/POA/Demux/demux_test_server.cpp
        * performance-tests/POA/Implicit_Activation/client.cpp
        * performance-tests/POA/Implicit_Activation/collocated.cpp
        * performance-tests/POA/Implicit_Activation/server.cpp
        * performance-tests/POA/Object_Creation_And_Registration/registration.cpp
        * performance-tests/Protocols/distributor.cpp
        * performance-tests/Protocols/receiver.cpp
        * performance-tests/Protocols/sender.cpp
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/client.cpp
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/server.cpp
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/client.cpp
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/server.cpp
        * performance-tests/RTCorba/Oneways/Reliable/client.cpp
        * performance-tests/RTCorba/Oneways/Reliable/server.cpp
        * performance-tests/RTCorba/Thread_Pool/client.cpp
        * performance-tests/RTCorba/Thread_Pool/server.cpp
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/client.cpp
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/server.cpp
        * performance-tests/Sequence_Latency/AMI/client.cpp
        * performance-tests/Sequence_Latency/AMI/server.cpp
        * performance-tests/Sequence_Latency/Deferred/client.cpp
        * performance-tests/Sequence_Latency/Deferred/server.cpp
        * performance-tests/Sequence_Latency/DII/client.cpp
        * performance-tests/Sequence_Latency/DII/server.cpp
        * performance-tests/Sequence_Latency/DSI/client.cpp
        * performance-tests/Sequence_Latency/DSI/server.cpp
        * performance-tests/Sequence_Latency/Single_Threaded/client.cpp
        * performance-tests/Sequence_Latency/Single_Threaded/server.cpp
        * performance-tests/Sequence_Latency/Thread_Per_Connection/client.cpp
        * performance-tests/Sequence_Latency/Thread_Per_Connection/server.cpp
        * performance-tests/Sequence_Latency/Thread_Pool/client.cpp
        * performance-tests/Sequence_Latency/Thread_Pool/server.cpp
        * performance-tests/Throughput/client.cpp
        * performance-tests/Throughput/server.cpp
          ACE_TCHAR changes

Tue Sep 16 11:06:00 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/AMH/Sink_Server/AMH_Servant.cpp
        * examples/AMH/Sink_Server/AMH_Servant.h
        * examples/AMH/Sink_Server/Base_Server.cpp
        * examples/AMH/Sink_Server/Base_Server.h
        * examples/AMH/Sink_Server/Client_Task.cpp
        * examples/AMH/Sink_Server/Client_Task.h
        * examples/AMH/Sink_Server/MT_AMH_Server.cpp
        * examples/AMH/Sink_Server/MT_AMH_Server.h
        * examples/AMI/FL_Callback/peer.cpp
        * examples/AMI/FL_Callback/progress.cpp
        * examples/Buffered_AMI/client.cpp
        * examples/Buffered_AMI/server.cpp
        * examples/Buffered_Oneways/client.cpp
        * examples/Buffered_Oneways/server.cpp
        * examples/Callback_Quoter/Consumer_Handler.cpp
        * examples/Callback_Quoter/Notifier_Input_Handler.cpp
        * examples/Callback_Quoter/Supplier_i.cpp
        * examples/CSD_Strategy/ThreadPool2/ClientApp.cpp
        * examples/CSD_Strategy/ThreadPool2/ClientApp.h
        * examples/CSD_Strategy/ThreadPool2/ServerApp.cpp
        * examples/CSD_Strategy/ThreadPool2/ServerApp.h
        * examples/CSD_Strategy/ThreadPool3/ClientApp.cpp
        * examples/CSD_Strategy/ThreadPool3/ClientApp.h
        * examples/CSD_Strategy/ThreadPool3/ServerApp.cpp
        * examples/CSD_Strategy/ThreadPool3/ServerApp.h
        * examples/CSD_Strategy/ThreadPool4/ServerApp.cpp
        * examples/CSD_Strategy/ThreadPool4/ServerApp.h
        * examples/CSD_Strategy/ThreadPool5/ClientApp.cpp
        * examples/CSD_Strategy/ThreadPool5/ClientApp.h
        * examples/CSD_Strategy/ThreadPool5/ServerApp.cpp
        * examples/CSD_Strategy/ThreadPool5/ServerApp.h
        * examples/CSD_Strategy/ThreadPool6/ClientApp.cpp
        * examples/CSD_Strategy/ThreadPool6/ClientApp.h
        * examples/CSD_Strategy/ThreadPool6/ServerApp.cpp
        * examples/CSD_Strategy/ThreadPool6/ServerApp.h
        * examples/CSD_Strategy/ThreadPool/ClientApp.cpp
        * examples/CSD_Strategy/ThreadPool/ClientApp.h
        * examples/CSD_Strategy/ThreadPool/ServerApp.cpp
        * examples/CSD_Strategy/ThreadPool/ServerApp.h
        * examples/Kokyu_dsrt_schedulers/fp_example/client.cpp
        * examples/Kokyu_dsrt_schedulers/fp_example/server.cpp
        * examples/Kokyu_dsrt_schedulers/mif_example/client.cpp
        * examples/Kokyu_dsrt_schedulers/mif_example/server.cpp
        * examples/Kokyu_dsrt_schedulers/muf_example/client.cpp
        * examples/Kokyu_dsrt_schedulers/muf_example/server.cpp
        * examples/Load_Balancing/Identity_Client.cpp
        * examples/Load_Balancing/Identity_Client.h
        * examples/Load_Balancing/Identity_Server.cpp
        * examples/Load_Balancing/Identity_Server.h
        * examples/Load_Balancing/Load_Balancing_Service.cpp
        * examples/Load_Balancing/Load_Balancing_Service.h
        * examples/Load_Balancing_persistent/Identity_Client.cpp
        * examples/Load_Balancing_persistent/Identity_Client.h
        * examples/Load_Balancing_persistent/Identity_Server.cpp
        * examples/Load_Balancing_persistent/Identity_Server.h
        * examples/Load_Balancing_persistent/Load_Balancing_Service.cpp
        * examples/Load_Balancing_persistent/Load_Balancing_Service.h
        * examples/Logging/Logging_Service_i.cpp
        * examples/Logging/Logging_Test_i.cpp
        * examples/OBV/Simple_util.cpp
        * examples/OBV/Simple_util.h
        * examples/Persistent_Grid/Grid_Client_i.cpp
        * examples/Persistent_Grid/Grid_Client_i.h
        * examples/Persistent_Grid/Persistent_Client.h
        * examples/Persistent_Grid/Persistent_Client_i.cpp
        * examples/Persistent_Grid/Simple_util.cpp
        * examples/PluggableUDP/tests/Performance/client.cpp
        * examples/PluggableUDP/tests/Performance/server.cpp
        * examples/Quoter/client.cpp
        * examples/Quoter/client.h
        * examples/Quoter/Factory_Finder.cpp
        * examples/Quoter/Generic_Factory.cpp
        * examples/Quoter/server.cpp
        * examples/Simple/chat/Client_i.cpp
        * examples/Simple/chat/Client_i.h
        * examples/Simple/chat/Server_i.cpp
        * examples/Simple/chat/Server_i.h
        * examples/Simple/grid/Grid_Client_i.cpp
        * examples/Simple/grid/Grid_Client_i.h
        * examples/Simple/Simple_util.cpp
        * examples/Simple/time-date/Time_Date.cpp
        * examples/Simple/time-date/Time_Date.h
        * examples/Simple/time-date/Time_Date_Client_i.h
        * examples/Simulator/Event_Supplier/DualEC_Sup.cpp
        * examples/Simulator/Event_Supplier/Event_Con.cpp
        * examples/Simulator/Event_Supplier/Event_Sup.cpp
        * examples/Simulator/Event_Supplier/Logging_Sup.cpp
          ACE_TCHAR changes

Mon Sep 15 16:34:00 UTC 2008  Simon Massey <sma at prismtech dot com>

        * NEWS:
          Updated for x.6.6

Mon Sep 15 11:08:04 UTC 2008  Simon Massey  <sma@prismtech.com>

        * TAO version 1.6.6 released.

Fri Sep 12 19:21:07 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tao/Transport.h:
        * tao/Transport.cpp:

          Removed the ACE_Lock object that wrapped output_cdr_mutex_, we'll
          just use the mutex object directly (TAO_SYNCH_MUTEX).

        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/LocateRequest_Invocation.cpp:
        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/Synch_Invocation.cpp:

          Fixed-up all uses of TAO::Transport output_cdr_lock() for the new
          return type.

Tue Sep  9 22:25:46 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/AMI_Buffering/client.cpp:
          Increased over all test tolerance by 100 msecs. The test seems
          to throttle ocassionally in system heavy load scenarios.

Tue Sep  9 21:55:12 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:

          Made token_array_ all elements initialized to be 0.

        * orbsvcs/orbsvcs/AV/Endpoint_Strategy_T.cpp:

          Made all pointer data memebers in TAO_AV_Child_Process to be
          initialized to be 0.

Tue Sep  9 21:36:01 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tao/Transport.inl (cache_map_entry):

          Added locking to avoid a race with purge_entry().

        * tao/Transport_Connector.cpp (connect):

          Added a check for is_closed() after a transport is selected from the
          cache.  Added logging in the case where make_connection() fails.

Tue Sep  9 06:43:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/COIOP/run_test.pl:
          Added support for -debug which runs the server with ORBDebugLevel 10

Fri Sep  5 21:33:11 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tao/Transport_Connector.cpp (wait_for_transport):

          In the timeout case (before waiting), purge from cache but don't
          close.  This is effectively a partial revert of the change from
          Wed Aug 13 16:21:34 UTC 2008  Adam Mitz  <mitza@ociweb.com>
          Also added logging in both wait_for_transport() and
          wait_for_connection_completion() when the LF state is reset.

        * tao/IIOP_Connection_Handler.h:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/LF_CH_Event.cpp:

          Added logging for connection handler (transport) reference counting
          and LF state changes.  The log messages are only output at level 10.
          Logging every add_reference() and remove_reference() call is only
          compiled-in when the macro TAO_LOG_CH_REF_COUNTS is defined.

Fri Sep  5 19:55:17 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Big_Request_Muxing/Client_Task.cpp:
        * tests/Big_Request_Muxing/Payload_Receiver.h:
        * tests/Big_Request_Muxing/Payload_Receiver.cpp:
        * tests/Big_Request_Muxing/Test.idl:
          validate_connection() uses a twoway invocation instead of a
          oneway. This simplifies the test.

        * tests/Oneway_Buffering/client.cpp:
          Error messages were being pushed into the debug stream.

Fri Sep  5 18:38:55 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/Portable_Interceptors/ForwardRequest/server.cpp:

          Added AnyTypeCode_Adapter_Impl.h include so that the static
          initializers to run in a static build

Thu Sep  4 18:36:23 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Oneways_Invoking_Twoways/Client_Task.cpp:
          Give remote side an additional second to cleanup before invoking
          shutdown.

Wed Sep  3 20:02:42 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/tests/AVStreams/Component_Switching/run_test.pl:

          Added missing "-" for ORBSvcConf option.

Wed Sep 03 10:30:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/TransportCurrent/IIOP/IIOP.mpc:

          Typo corrected in client name for after += of server.

Tue Sep  2 22:57:39 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/Oneway_Timeouts/client.cpp:
        * tests/Oneway_Timeouts/server.cpp:

          Added make_request_queued option to work around test failure due to
          different connection establishment behavior between OS.  Some system
          can connect immediately and some may take longer time. With the option,
          the test sets the SYNC_NONE scope and sends a request so the transport
          queue is not empty for some SYNC_DELAYED_BUFFERING test cases and hence
          the requests are all queued and will be received by server continueously
          during a short period. (Bugzilla #3384)

        * tests/Oneway_Timeouts/run_test.pl:

          Added -make_request_queued option for the two failed test cases.
           - test_buffering -- case 4 of 6
           - test_buffer_timeout -- case 2 of 3

Tue Sep  2 12:50:38 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tao/Transport.cpp:
          remove unrequired locking.

Tue Sep 02 09:00:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tao/Synch_Invocation.cpp:
        * tao/Transport.cpp:

          Un-tabify these to correct fuzz errors.

Mon Sep  1 20:18:51 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/LocateRequest_Invocation.cpp:
        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/Transport.h:
        * tao/Transport.cpp:
          A transport in connecting state can potentially be referenced by
          multiple concurrent oneway invocations. Transport access needs
          to be synchronized during invocation.

Fri Aug 29 19:12:49 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tao/Transport_Connector.cpp (wait_for_connection_completion):

          If the connection is already complete, add it to the cache here.

Fri Aug 29 03:39:39 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/Bug_1269_Regression/run_test.pl:

          Increased client timeout to 60 seconds from 45 seconds to fix
          timeout error. The client receives 100th request and sleep for
          15 seconds before abort. If server block for 15 seconds for
          each client, then 45 seconds would not be enough.

Thu Aug 28 21:47:42 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tao/Connection_Handler.h:
        * tao/Connection_Handler.inl:
        * tao/Connection_Handler.cpp:

          Added a bool is_closed_ to track the "closed" state.  This is used
          in addition to the Leader-Follower state so that it cannot be re-set
          to another state after it's been closed.

        * tao/Transport_Connector.cpp:

          Fixed whitespace.

        * tests/Bug_1361_Regression/run_test.pl:

          Increased client timeout (we're just testing the server's response).
          Reduced the server debug level when "-debug" is specificed.

Thu Aug 28 20:27:37 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/Faults/run_test.pl:

          Increased timeout to avoid the pong timeout error on windows.
          When server dies, the client tries to make new connection. The
          time spent on trying new connection varies on different platform.
          On windows, it takes much longer than on Linux.

Wed Aug 27 21:24:33 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/Faults/client.cpp:

          Added sleep after twoway invocation for suicide test cases. The
          client will wait for the shutdown callback and abort until timeout.
          If it timed out, the test will fail, otherwise, the test succeed.
          This should fix test failure due to twoway request returned before
          receiving shutdown callback and abort.

Tue Aug 26 22:18:38 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tao/Transport.cpp (purge_entry):

          Use the handler_lock_ when changing state (cache_map_entry_).

        * tao/Transport_Connector.cpp (wait_for_connection_completion):

          Combine the blocked and non-blocked cases for the part where it
          checks if the transport has already been connected, closed, or
          timed-out.  Previously the blocked connect didn't check these.

Mon Aug 25 22:28:04 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tao/LF_Event.h:
        * tao/LF_Event.inl:

          Allow for multiple followers per event (if derived classes implement
          this behavior).  Specifically, added a "follower" argument to
          unbind() to match bind().

        * tao/LF_Multi_Event.h:
        * tao/LF_Multi_Event.cpp:

          Modified for the new unbind() signature.

        * tao/LF_CH_Event.h:
        * tao/LF_CH_Event.cpp:

          Implement multiple followers using an ACE_Hash_Map_Manager_Ex.  This
          allows multiple threads to wait for a Connection Handler event.

        * tao/LF_Event_Binder.h:
        * tao/LF_Event_Binder.inl:
        * tao/LF_Event_Binder.cpp:

          Store the follower pointer so that it can be passed to unbind().

        * tao/Transport_Connector.cpp (wait_for_connection_completion):

          Purge the entry from the cache if the connection fails.

        * tests/Bug_1361_Regression/run_test.pl:

          Add server logging output if -debug is passed.

Mon Aug 18 14:03:23 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Oneway_Send_Timeouts/run_test.pl:
          Increase timeout. Test fails on slower HPUX & Solaris machines.

Wed Aug 13 16:21:34 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tao/Transport_Connector.cpp (wait_for_transport):

          Combined the if/else branches for is_timeout and is_closed since both
          cases need to remove the Transport from the cache.

Tue Aug 12 21:54:43 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tao/Transport_Connector.cpp (wait_for_transport):

          If the connection is timed-out or closed, return false immediately.

        * tao/Transport.cpp (post_open):

          Write to is_connected_ within the handler_lock_, updated comment.

        * tao/Transport.inl (is_connected):

          Updated comment to reflect change to is_connected_ in post_open().

        * tao/Transport_Cache_Manager.inl:
        * tao/Transport_Cache_Manager.cpp:

          set_entry_state() now updates the cache entry's is_connected_ flag to
          match the real state of the transport.  This change required
          un-inlining the method.
          Removed multiple instances of the code "if (entry == 0) ..."
          that occured before locking.  These could be added back if they are
          proved safe.  As of now I'm not convinced, so that check is done with
          the lock held.  These were in set_entry_state(), purge_entry(),
          mark_invalid(), mark_connected(), and mark_idle().

        * tests/Bug_1361_Regression/run_test.pl:

          Added lots of logging when -debug is passed on the command line.

Mon Aug 11 18:09:15 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Muxed_TMS.cpp:
          Dispatch timeout after unlocking the mutex, same behaviour as
          previously, but the rd is now stored in one place

Mon Aug 11 11:14:15 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Naming_Service/Naming_Service.cpp:
          Check if we have a valid orb reference before using it. Could be
          zero if we start the naming service and kill it just a second later

Mon Aug 11 18:35:15 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_3068_Regression/Bug_3068_Regression.mpc:
          No need to give server an exename

        * tests/Bug_3068_Regression/test_i.cpp:
          Fixed gcc 2.96 warning

        * tests/AMI_Timeouts/timeout_client.cpp:
          Documentation fix

        * tests/AMI_Timeouts/timeout_i.cpp:
          Prefix increment

Mon Aug 11 17:56:15 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

          Some changes related to AMI timeouts. The tms stores the relationship
          between the request id and the reply dispatcher. For AMI timeouts the
          Asynch_Timeout_Handler did the same, so reworked that. The ATH now just
          calls a method on the TMS, then also we can callback to the rd with the
          tms lock hold just as we do for regular replies.

        * tao/Asynch_Reply_Dispatcher_Base.cpp:
        * tao/Asynch_Reply_Dispatcher_Base.h:
          No need to deliver an implementation for pure virtual methods

        * tao/Exclusive_TMS.cpp:
        * tao/Exclusive_TMS.h:
        * tao/Muxed_TMS.cpp:
        * tao/Muxed_TMS.h:
        * tao/Transport_Mux_Strategy.h:
          Added reply_timed_out method

        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
          Make sure we always cancel the timeout handler

        * tao/Messaging/Asynch_Timeout_Handler.cpp:
        * tao/Messaging/Asynch_Timeout_Handler.h:
          No need to store the reply_dispatcher, it is stored in the tms

        * tao/Reply_Dispatcher.h:
        * tao/Synch_Reply_Dispatcher.cpp
        * tao/Synch_Reply_Dispatcher.h
          Added reply_timed_out method

        * tao/ORB.cpp:
          Layout change

Mon Aug 11 16:23:52 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/bidir_giop.mpb:

          Added avoids_corba_e_micro as base.  BiDir GIOP requires a child POA,
          which makes it incompatible with CORBA/e Micro.

        * tests/Bug_3068_Regression/Bug_3068_Regression.mpc:

          Added "threads" as a base -- this test requires threads.

Mon Aug 11 15:39:15 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bind_Dispatcher_Guard.{h,cpp}:
          No need to store the reply dispatcher as member

Mon Aug 11 12:47:15 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.h:
          Corrected locked signature

Mon Aug 11 09:02:15 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.{h,cpp}:
          Initialise the is_gateway member to false, use bool and some
          minor code improvements. Thanks to Joe Seward
          <joseph dot f dot seward at saic dot com> for reporting this. This
          fixes bugzilla 3392

Fri Aug  8 16:30:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/Notify/Federation/Agent/Agent.cpp:
          Removed deprecated RefCountServantBase

Fri Aug  8 15:25:13 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tao/Transport_Cache_Manager.cpp:

          Fixed whitespace.

        * tao/Transport_Connector.cpp:

          Add the transport to the cache (ENTRY_CONNECTING) in the non-blocked
          case.  This covers non-blocking invocations such as AMI and oneways
          with SYNC_NONE, etc.

Fri Aug  8 14:47:42 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:

          Reverted the change in

          Wed Aug  6 19:08:39 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

          since it seems to have caused a test failure.

Fri Aug  8 14:22:01 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tests/Bug_3068_Regression/test_i.h:
        * tests/Bug_3068_Regression/test_i.inl:

          Removed a deprecated macro; cleaned up whitespace.

Fri Aug  8 14:08:58 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tests/Bug_3068_Regression/Bug_3068_Regression.mpc:
        * tests/Bug_3068_Regression/test.idl:
        * tests/Bug_3068_Regression/test_i.h:

          Addressed "fuzz" errors.

Fri Aug  8 12:10:12 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tests/Nested_Event_Loop/test_i.cpp:

          Fixed a compile error in CORBA/e compact and micro builds.

Thu Aug  7 23:19:55 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/Nested_Event_Loop/client.cpp:
        * tests/Nested_Event_Loop/test_i.h:
        * tests/Nested_Event_Loop/test_i.cpp:

          Made client servant explicitly activated for CORBA e build
          since CORBA e does not allow implicit servant activation. This
          should fix test failure due to WrongPolicy exception.

Thu Aug  7 21:30:32 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tests/Bug_3068_Regression:

          Added a test for bug 3068.

Thu Aug  7 19:15:34 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * NEWS:

          Added a news entry for the ImR Activator change in
          Thu Jul 31 15:13:48 UTC 2008  Adam Mitz  <mitza@ociweb.com>

Thu Aug  7 17:46:45 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        This commit fixes Bug 2935 (again) and resolves other transport cache
        management issues.  The key issue of 2935 is that the transport is
        cached while the connection is in progress, so that other threads see
        that there's a connection in progress and don't start their own.
        That feature is essentially restoring one of the changes from
        Tue May 20 18:05:08 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>
        that were reverted in
        Fri May 30 13:21:20 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Transport_Connector.h:
        * tao/Transport_Connector.cpp:

          Cache the transport before waiting for the connection to complete.
          This requires the re-addition of a Transport_Descriptor_Interface
          parameter to wait_for_connection_completion().

        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * tao/Strategies/SCIOP_Connector.cpp:
        * tao/Strategies/UIOP_Connector.cpp:

          Pass the transport descriptor to wait_for_connection_completion().

        * tao/IIOP_Connector.cpp:

          Pass the transport descriptor to wait_for_connection_completion().
          In the case where the transport is already connected in
          complete_connection() add it to the cache here.  In the case of
          parallel connects in complete_connection(), modified the logic for
          when the cache is updated.

        * tao/Transport_Cache_Manager.h:
        * tao/Transport_Cache_Manager.inl:
        * tao/Transport_Cache_Manager.cpp:

          Removed the unused, private, bind() method.  Added logging at level
          10.  Update the is_connected_ flag in the case where we're updating
          an existing cache entry.  In cache_transport(), construct the IntId
          with the lock held to ensure consistent state.  Also, if the
          transport is already connected make sure not to set the state to
          ENTRY_CONNECTING.

        * tao/Connector_Impl.cpp:

          Moved the line that sets the transport to CLIENT_ROLE here.

        * tao/IIOP_Connection_Handler.cpp:
        * tao/Transport.cpp:

          Logging improvements.

        * tao/Cache_Entries.h:
        * tao/Cache_Entries.inl:
        * tao/Cache_Entries.cpp:

          Added logging using state names instead of numbers.

        * tests/Bug_2243_Regression/run_test.pl:

          Removed faulty assumption that required $TAO_ROOT == $ACE_ROOT/TAO.

        * tests/Bug_3108_Regression/client.cpp:

          Added a -c parameter to client to change the number of threads.

        * tests/Bug_3108_Regression/run_test.pl:

          Added separate log files {client,server}.log when -debug is used.

Thu Aug  7 17:30:28 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * tests/POA/EndpointPolicy/Makefile.am:

          Regenerated.

Thu Aug  7 09:43:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Muxed_TMS.{h,cpp}:
          Made all members private. Changed clear_cache to
          clear_cache_i to make clear this method expects the
          lock to be hold. Simplified logic in the bind_dispatcher

Wed Aug  6 23:12:35 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * tests/Big_Oneways/Peer.cpp:

          Updated create_session() to explicitly activate servant for CORBA e
          build since CORBA e does not allow implicit servant activation. This
          prevents WrongPolicy exception raised and hence avoids the MARSHAL
          exception when trying to send WrongPolicy reply exception.

Wed Aug  6 22:38:46 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Add call to ACE_PATH_BZIP2.

Wed Aug  6 22:30:40 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated.

        * tao/Bzip2Compressor.mpc:

          Changed to inherit from ace_bzip2 instead of bzip2 base project.

        * tao/TC.mpc:

          Added Transport_Current_Export.h to Header_Files section.

Wed Aug  6 19:08:39 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * rbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.cpp:
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.cpp:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
        * orbsvcs/examples/ImR/Combined_Service/test.cpp:
        * orbsvcs/examples/ImR/Advanced/TestServer.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/Codeset/UTF16_BOM_Translator.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tests/Server_Connection_Purging/client.cpp:
        * tests/CodeSets/libs/UTF16_UCS2/UTF16_UCS2_Translator.cpp:
        * tests/CodeSets/libs/UCS4_UTF16/WUCS4_UTF16.cpp:

          Cosmetic changes to eliminate warnings from some
          Linux compilers.

Wed Aug  6 12:25:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * TAO_IDL/fe/y.tab.cpp:
          Removed a couple blank lines to force a commit, some builds were
          thinking this was out of date (AGAIN).

Wed Aug  6 12:02:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp
          Fixed gcc 4.3 warning

Wed Aug  6 11:53:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.cpp:
          Fixed gcc 4.3 warning

Wed Aug  6 11:45:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor.cpp:
        * orbsvcs/orbsvcs/Notify/Event_Map_T.cpp:
          Fixed gcc 4.3 warning

Wed Aug  6 11:42:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.cpp:
          Fixed gcc 4.3 warning

Wed Aug  6 07:45:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ZIOP/ZIOP.cpp:
        * tao/ZIOP/ZIOP.pidl:
        * tao/ZIOP/ZIOP_Policy_i.cpp:
        * tao/ZIOP/ZIOP_Policy_i.h:
        * tao/ZIOP/ZIOP_PolicyFactory.cpp:
        * tao/Compression/Base_Compressor.cpp:
        * tao/Compression/Base_Compressor.h:
        * tao/Compression/Compression.pidl:
          CompressionRatio could get negative, so make it a regular long.
          Added a new typedef for the ratio and uses this. Thanks to IONA
          for pointing out that the ratio could get negative.

        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
          Use ACE_TEXT

        * tao/Strategies/UIOP_Connection_Handler.cpp:
          Const and layout changes

        * tao/Valuetype/ValueBase.h:
          Changed Value_tag_sigbits to 0x7fffff00L to resolve warnings
          with gcc 4.3

Tue Aug  5 07:51:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/nslist/nsdel.cpp:
          Fixed gcc4.3 warning

Tue Aug  5 06:44:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/tao_idl.1:
          Removed -Ge which has been removed a long time ago

Mon Aug 04 14:40:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * TAO/tests/POA/Adapter_Activator/server.cpp:
        * TAO/tests/Portable_Interceptors/AdvSlot/client.cpp:
        * TAO/tests/Portable_Interceptors/AdvSlotDblCpy/client.cpp:
        * TAO/tests/Portable_Interceptors/AdvSlotExt/client.cpp:
        * TAO/tests/Portable_Interceptors/Bug_2133/client.cpp:

          Minor wide character conversions misses from previous commits.

Mon Aug 04 14:25:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * TAO/tests/POA/EndpointPolicy/server.cpp:
        * TAO/tests/POA/Default_Servant2/client.cpp:

          Minor wide character conversions misses from previous commit.

Fri Aug  1 17:56:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/AMI/FL_Callback/progress.cpp:
          Fixed incorrect include which wasn't noticed because nobody
          has build with fl support for a long time

Fri Aug  1 17:44:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO-INSTALL.html:
          Document that we first need to build TAO_IDL before we can
          build TAO. Thanks to antred <NutJob at gmx dot net>
          for reporting this.

Thu Jul 31 15:13:48 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/ImplRepo_Service/Activator_Options.h:
        * orbsvcs/ImplRepo_Service/Activator_Options.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.h:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:

          By default ACE_Process_Options limits us to 512 environment
          variables.  This change adds a -m option to the Activator, which will
          pass its argument on to ACE_Process_Options as the maximum number of
          environment variables which will be passed to the child process.
          Also, store the -m and -e options in the Windows Registry along with
          all the other options.

Thu Jul 31 12:41:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Bug_2133/client.cpp:
        * tests/Portable_Interceptors/Bug_2510_Regression/client.cpp:
          Wchar improvements

        * tests/AMI_Timeouts/server.cpp:
          Use prefix increment

Wed Jul 30 18:41:27 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Oneway_Send_Timeouts/Client.cpp:
          Add documentation. Force flush the connection after async tests
          so the queued data doesn't affect the synchronous tests.

        * tests/Oneway_Send_Timeouts/Server.h:
          Remove unused members.

Wed Jul 30 14:13:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport_Cache_Manager.cpp:
          No need to check a pointer before deleting it. Simplified
          mark_invalid_i

        * tao/GIOP_Message_Base.cpp:
          Moved variable into a try block, only used there

Wed Jul 30 13:19:45 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * utils/catior/Makefile.am:

          Regenerate (link with ZIOP libraries).

Wed Jul 30 12:13:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/default_client.cpp:
          Use switch, makes the code more readable, explicit, and faster

Wed Jul 30 11:48:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Muxed_TMS.cpp {dispatch_reply):
          Check rd before we use it and just have one single point of
          return

Tue Jul 29 22:30:27 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerate (adds bzip2 support).

Tue Jul 29 19:50:46 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tao/Queued_Message.h:

          Cleaned up comments.

        * tao/Transport.cpp (send_reply_message_i):

          When the flushing strategy indicates MUST_FLUSH, flush the whole
          transport instead of the "current" message.  Because the lock was
          released and reacquired, the is no way to identify the "current"
          message and ensure it wasn't already destroyed.  This should fix
          bug #3163.

Tue Jul 29 18:26:14 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerate.

Tue Jul 29 08:25:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * TAO/TAO_IDL/driver/drv_preproc.cpp:
          Interesting results, looks like some sort of fd conflict or
          temporary name problem, remove the delay and increase error
          diagnostics.

Mon Jul 28 14:58:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/Asynch_Timeout_Handler.cpp:
          Added a debug statement to print a message when a request gets
          a timeout

        * tao/Muxed_TMS.cpp:
          Just unbind without getting the rd

Mon Jul 28 14:41:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
          Only parse the reply and generate a fake exception when there
          is a reply handler. Improved performance if a client makes
          AMI invocations but doesn't specify a reply handler

Mon Jul 28 14:20:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport.cpp:
          Make sure tms_ and ws_ are initialised to 0

        * tao/Resume_Handle.h:
          Documentation changes

        * tao/Muxed_TMS.cpp:
          Const changes

        * tao/Connection_Handler.cpp:
          Layout changes

        * tao/GIOP_Message_Base.cpp (dump_msg):
          Return directly when we don't have orb debug level 10, increases
          performance when we run at level 5 until 9

Mon Jul 28 13:57:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * TAO/TAO_IDL/driver/drv_preproc.cpp:
          Change test for Vista specifically not just all win32.

Mon Jul 28 13:25:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * TAO/TAO_IDL/driver/drv_preproc.cpp:
          Vista specifically has some OS file timing issues, TAO_IDL
          keeps failing to open temporary files. These mods should
          help identify where these are comming from. (I beleive it is
          a timing issue with file deletetion, then immediate recreation.)

Mon Jul 28 12:04:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/nslist/nslist.cpp:
          Fixed OpenVMS warning

        * tao/ZIOP/ZIOP.cpp:
          Fixed compile problem when messaging is disabled

Mon Jul 28 10:17:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * MPC/config/imr_client.mpb:
          Missing portableserver dependancy for the use of imr_client.

Mon Jul 28 09:15:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Connector.cpp:
          Only call remove_reference when we have a valid svc_handler
          pointer. Could be zero in the case we run out of TSS keys

        * tao/MCAST_Parser.cpp:
          Use ACE_MAX_DEFAULT_PORT

Sun Jul 27 06:18:11 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Security/SL2_SecurityManager.cpp:
          Removed obsolete HPUX compiler workaround

Sun Jul 27 00:51:11 UTC 2008  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/EndpointPolicy/IIOPEndpointValue_i.cpp:
          Add to the criteria for invalidating the addr type of a
          defaulted hostname. This is necessary for ipv4 only builds
          because the INET_Addr::set() function in that case explicitly
          sets the address family to INET regardless of the address. The
          endpoint policy later relies on an invalid addr type for
          deciding how strictly to test candidate endpoint addresses. In
          particular, defaulted hostnames are allowed in the endpoint
          policy only when more than one protocol is present.

        * tests/POA/EndpointPolicy/EndpointPolicy.mpc:
        * tests/POA/EndpointPolicy/multi_prot.conf:
        * tests/POA/EndpointPolicy/server.cpp:

          Switched the alternate protocol to DIOP from IIOP for the multi
          protocol test, and explicitly link to the strategies library to
          get around load issues on VxWorks.

Sat Jul 26 21:32:41 UTC 2008  Carlos O'Ryan  <coryan@atdesk.com>

        * tests/DynAny_Test/test_dynsequence.cpp:
          Removed tabs.

Fri Jul 25 11:51:26 UTC 2008  Carlos O'Ryan  <coryan@atdesk.com>

        * tests/DynAny_Test/test_dynsequence.cpp:
          This fixes the following bug.
            http://bugzilla.dre.vanderbilt.edu/show_bug.cgi?id=3341
          Short recap, the test was failing silently.  The failure was a
          false positive because the test had been changed to reproduce
          one bug (2877), but in the process broke the original test.
          Fortunately or unfortunately, you had to read the output to
          detect the problem.

        * tests/DynAny_Test/driver.h:
        * tests/DynAny_Test/driver.cpp:
        * tests/DynAny_Test/test_dynany.cpp:
        * tests/DynAny_Test/test_dynunion.cpp:
        * tests/DynAny_Test/test_dynenum.cpp:
        * tests/DynAny_Test/test_wrapper.cpp:
        * tests/DynAny_Test/test_wrapper.h:
        * tests/DynAny_Test/test_dynarray.cpp:
        * tests/DynAny_Test/test_dynstruct.cpp:
          Change all the tests and drivers to return the number of errors
          detected.  The main program exits with the number of errors
          detect by Johnny's request.

Thu Jul 24 21:09:35 UTC 2008  Yan Dai  <dai_y@ociweb.com>

        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:

          Made logging of pid of the spawned process. It would help
          test script to make sure spawned processes exit when test
          finishes.

        * orbsvcs/examples/ImR/Combined_Service/run_test.pl:

          Redirected the output to a file and retrieve the id of
          spawned processes from log file. Kill the process if they
          do not exit for some reasons and report an error.

Thu Jul 24 12:49:28 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/ZIOP.pdf:
          Updated to the latest version of the ZIOP proposal specification

Wed Jul 23 17:15:32 UTC 2008  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/contrib/mcpp/configed.H:
        * TAO_IDL/contrib/mcpp/directive.cpp:
        * TAO_IDL/contrib/mcpp/expand.cpp:
        * TAO_IDL/contrib/mcpp/lib.cpp:
        * TAO_IDL/contrib/mcpp/main.cpp:
        * TAO_IDL/contrib/mcpp/noconfig.H:
        * TAO_IDL/contrib/mcpp/support.cpp:
        * TAO_IDL/contrib/mcpp/system.cpp:

          Enforced use of mcpp implementation of stpcpy, as ACE doesn't
          implement it, and its not gauranteed to be present everywhere.

Wed Jul 23 13:46:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp:

          Fixed Fuzz errors introduced by
          Tue Jul 22 17:51:55 UTC 2008  Jeff Parsons

Wed Jul 23 12:59:28 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ZIOP/ZIOP_ORBInitializer.cpp
        * tao/ZIOP/ZIOP_ORBInitializer.h
        * tao/ZIOP/ZIOP_Stub.cpp
        * tao/ZIOP/ZIOP_Stub.h
        * tao/ZIOP/ZIOP_Stub_Factory.cpp
        * tao/ZIOP/ZIOP_Stub_Factory.h
          Don't build when there is no messaging

Wed Jul 23 06:17:28 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Event_Service/Event_Service.cpp:
          Fixed crash when -b is used, thanks to Roger Leblanc
          <rog dot leblanc at gmail dot com> for reporting this.
          This fixes bugzilla 3370

Tue Jul 22 17:51:55 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.h:

          Applied patches sent by Frank Pilhofer <fp@mc.com> to fix
          Container::lookup() and Container::contents() methods
          bugs related to value members. This fix closes [BUGID:3373].

Tue Jul 22 17:32:46 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:

          In converting a predefined type in the AST to a CORBA
          pk_kind, added a case in the switch statement for
          ValueBase nodes. Thanks to Frank Pilhofer <fp@mc.com>
          for reporting the problem and supplying a patch.
          This fix closes [BUGID:3372].

Tue Jul 22 17:04:23 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:

          In code that writes the IFR Service's IOR to a file,
          replaced use of ACE_OS::write() with ACE_OS:fprintf(),
          which is used in all other ORB services for this purpose.
          This fix closes [BUGID:3371]. Thanks to Frank Pilhofer
          <fp@mc.com> for reporting the problem of the extra
          NULL character in the Bugzilla entry.

Tue Jul 22 11:53:28 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/ZIOP.pdf:
          Added draft ZIOP spec to the documentation. If you want to know
          more about ZIOP check this spec first

Tue Jul 22 11:34:28 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/ZIOP/*:
          New ZIOP test using zlib

Tue Jul 22 11:31:28 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        Major commit to add ZIOP to the core of TAO. This adds the capability
        to compress the data on the wire. This is a proof of concept implementation
        that we try to get standardized within the CORBA spec. Interoperability
        with other ORBs and different TAO versions isn't guaranteed until ZIOP
        has been formally adopted by the OMG. If you want to experiment with ZIOP
        add TAO_HAS_ZIOP 1 as define to your config.h file. This prototype will need
        some more work to support ZIOP for the full request/reply chain, in some
        cases the reply isn't compressed at this moment. For this we need to rework
        the full policy support in the ORB for which we search funding.

        * MPC/config/ziop.mpb:
          New base project for anyone using ZIOP

        * tao/BiDir_GIOP/BiDir_Service_Context_Handler.cpp:
        * tao/BiDir_GIOP/BiDir_Service_Context_Handler.h:
          Updated this class to the new service context handler API which is more
          generic

        * tao/CDR.cpp:
        * tao/CDR.h:
        * tao/CDR.inl:
          Added a compressed flag to the input and output stream which indicated
          whether this stream contains compressed data

        * tao/GIOP_Message_Base.cpp:
          Decompress the data when it is compressed

        * tao/GIOP_Message_Generator_Parser_12.cpp:
          Use new service context handler api

        * tao/GIOP_Message_State.{h,cpp,inl}:
          Added compressed flag

        * tao/IIOP_Transport.cpp:
        * tao/Strategies/DIOP_Transport.cpp:
        * tao/Strategies/SCIOP_Transport.cpp:
        * tao/Strategies/SHMIOP_Transport.cpp:
        * tao/Strategies/UIOP_Transport.cpp:

          Made messaging_object_ private, derived classes should use
          messaging_object()

        * tao/Invocation_Base.{h,cpp,inl}:
          Removed cached orb_core, can easily get this from the stub when we need
          it

        * tao/Messaging/Asynch_Invocation.cpp:
          Set compressed to false again

        * tao/ORB_Core.{h,cpp,inl}:
          Added ziop_adapter

        * tao/orbconf.h:
          Disabled ZIOP by default, added cached values for ZIOP policies

        * tao/PI/ClientRequestInfo.cpp:
          Get the core from the stub

        * tao/PolicyC.h:
          Use false instead of 0

        * tao/PortableServer/POA_Policy_Set.cpp:
          Use prefix increment and use ! operator

        * tao/PortableServer/Upcall_Wrapper.{h,cpp}:
          Use ZIOP

        * tao/Profile.cpp:
          Client exposed policies are not really related to CORBA messaging anymore, do
          handle them each time. Fixed a bug which could lead to a crash when a
          not supported policy was found in the object reference

        * tao/Remote_Invocation.cpp:
          Use ziop

        * tao/RTCORBA/RT_Endpoint_Utils.{h,cpp}:
          Use Policy_ptr

        * tao/RTCORBA/RT_ORBInitializer.cpp:
          Fixed some comments

        * tao/RTCORBA/RT_Policy_i.{h,cpp}:
          Layout changes, const changes, use ! operator

        * tao/RTCORBA/RT_PolicyFactory.cpp:
        * tao/RTCORBA/RT_PolicyFactory.h:
          Layout changes and use switch instead of a lot of if checks

        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
          Use _nil() instead of 0

        * tao/RTCORBA/RT_Stub.cpp:
        * tao/RTCORBA/RT_Stub.h:
          Use dynamic_cast, use switch, not dependent on messaging

        * tao/Service_Context_Handler.h:
          Made the api more generic

        * tao/Service_Context_Handler_Registry.cpp:
        * tao/Service_Context_Handler_Registry.h:
          Updated the api and fixed a possible bug when a handler is
          requested but which is not there. This fixes bugzilla 3354
          Thanks to Russ Noseworthy <j dot russell dot noseworthy at saic dot com>
          for reporting this

        * tao/Stub.cpp:
        * tao/Stub.h:
          Make policies independent of messaging

        * tao/Synch_Invocation.cpp:
          Use operator!

        * tao/Synch_Reply_Dispatcher.cpp:
          Call service context handler registry

        * tao/Tagged_Components.cpp
        * tao/Tagged_Components.h
        * tao/Tagged_Components.inl
          Use operator! and use bool

        * tao/TAO_Internal.cpp:
          Use ZIOP

        * tao/TAO_Server_Request.cpp:
          Set compressed to false

        * tao/Transport.cpp
        * tao/Transport.h
        * tao/Transport.inl
          Use bool, layout changes, use ACE_ERROR for errors

        * tao/ZIOP.mpc:
          New file

        * tao/ZIOP/TAO_ZIOP.pc.in
        * tao/ZIOP/ZIOP.cpp
        * tao/ZIOP/ZIOP.h
        * tao/ZIOP/ZIOP.pidl
        * tao/ZIOP/ziop_export.h
        * tao/ZIOP/ZIOP_ORBInitializer.cpp
        * tao/ZIOP/ZIOP_ORBInitializer.h
        * tao/ZIOP/ZIOP_Policy_i.cpp
        * tao/ZIOP/ZIOP_Policy_i.h
        * tao/ZIOP/ZIOP_Policy_Validator.cpp
        * tao/ZIOP/ZIOP_Policy_Validator.h
        * tao/ZIOP/ZIOP_PolicyFactory.cpp
        * tao/ZIOP/ZIOP_PolicyFactory.h
        * tao/ZIOP/ZIOP_Stub.cpp
        * tao/ZIOP/ZIOP_Stub.h
        * tao/ZIOP/ZIOP_Stub_Factory.cpp
        * tao/ZIOP/ZIOP_Stub_Factory.h
          New ZIOP library implementation

        * tao/catior/catior.cpp:
          Recognize TIDC++ orb, handle policy values correctly, added support
          for ZIOP

        * tao/catior/catior.mpc:
          Added ziop as base

        * tao/Unbounded_Octet_Sequence_T.h:
          Documentation change

Tue Jul 22 10:02:28 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bzip2Compressor.mpc:
          Use correct base project

        * tao/Compression.mpc:
          Generate Any insertion operators

        * tao/GIOP_Fragmentation_Strategy.h:
          Layout changes

        * tao/Muxed_TMS.cpp:
          When the unbind fails print the request id that failed

        * tao/Object.h:
          Use false instead of 0

        * tao/ORBInitializer_Registry.cpp:
        * tao/PI/ORBInitializer_Registry_Impl.cpp:
          Updated layout of some debug message to match other messages
          in TAO

        * tao/BiDir_GIOP/BiDirPolicy_Validator.cpp:
          Use is_nil to check whether a policy is nil or not, don't compare
          it with 0

        * tao/IIOP_Acceptor.cpp:
          Documentation change

        * tao/Messaging/Messaging_Policy_i.h:
          Layout change

        * tao/tao.mpc:
        * tao/ZIOP_Adapter.{h,cpp}:
          Added new ZIOP Adapter for the ZIOP library which will be added
          to the repository soon

Tue Jul 22 08:14:28 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Compression.mpc:
        * tao/Compression/Base_Compressor.cpp:
        * tao/Compression/Base_Compressor.h:
        * tao/Compression/Compression.cpp:
        * tao/Compression/Compression.h:
        * tao/Compression/Compression.pidl:
        * tao/Compression/Compression_Manager.cpp:
        * tao/Compression/Compressor_Factory.cpp:
        * tao/Compression/Compressor_Factory.h:
          Updated the Compression library to match the latest ZIOP
          proposal. Statistics are now gathered per compressor and
          added a few types used by ZIOP

        * tao/Compression/zlib/ZlibCompressor.cpp:
        * tao/Compression/zlib/ZlibCompressor.h:
          Updated for the compression changes

        * tao/Compression/bzip2/Bzip2Compressor.cpp:
        * tao/Compression/bzip2/Bzip2Compressor.h:
        * tao/Compression/bzip2/Bzip2Compressor_export.h:
        * tao/Compression/bzip2/Bzip2Compressor_Factory.cpp:
        * tao/Compression/bzip2/Bzip2Compressor_Factory.h:
        * tao/Compression/bzip2/TAO_Bzip2Compressor.pc.in:
        * tao/Compression/bzip2/TAO_Bzip2Compressor.rc:
        * tao/Bzip2Compressor.mpc:
          Added new bzip2 compressor

        * tao/Transport_Cache_Manager.cpp:
          Use true/false and correct logging format specifier

        * tao/PortableServer/Key_Adapters.cpp:
          Const changes

Tue Jul 22 06:26:28 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Monitor.mpc:
        * tao/Monitor/Monitor.pidl:
        * tao/Monitor/Monitor_Types.pidl:
          Moved types to their own idl file and updated mpc file

Mon Jul 21 13:08:28 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/monitor/monitor_client.cpp:
          updated for changes below

        * utils/nslist/run_test.pl:
          Updated for vxworks testing

Mon Jul 21 13:06:28 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/Notify/MC/monitor/monitor.cpp:
          Updated to use new monitor types

        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.cpp:
          Layout changes

        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMC.idl:
          Moved struct definitions to TAO monitor lib and use the structs from
          there

        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMonitor_i.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMonitor_i.h:
          Updated to use TAO Monitor code

        * tao/Monitor/Monitor.pidl:
          Extended structs with the information from the notification service

        * tao/Monitor/Monitor_Impl.cpp:
        * tao/Monitor/Monitor_Impl.h:
          Update to fill updated structs

        * tests/TransportCurrent/lib/Server_Request_Interceptor.h:
          Layout change

Fri Jul 18 12:16:28 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/tests/unit/Notify/MC/NotificationServiceMonitor/NotificationServiceMonitor.cpp:

          More fixes to make this test portable over platforms that
          have differing numbers of monitors already added at the start
          of the test.

Tue Jul 15 17:36:24 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/tests/unit/Notify/MC/NotificationServiceMonitor/NotificationServiceMonitor.cpp:
        * orbsvcs/tests/unit/Notify/MC/Statistic_Registry/Statistic_Registry.cpp:
        * orbsvcs/tests/unit/Notify/MC/Statistic/Statistic.cpp:

          Changes corresponding to relocation of monitor statistics-related
          values in ACE.

Tue Jul 15 17:20:17 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannel.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannelFactory.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Dynamic_Statistic.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMonitor_i.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Timestamp_Monitor.cpp:
        * tao/Monitor/Monitor_Impl.cpp:

          Minor changes required by the relocation in ACE of the
          statistics-related values from Monitor_Base to
          Monitor_Control_Types.

Tue Jul 15 11:25:54 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/CSI.idl
        * orbsvcs/orbsvcs/CSIIOP.idl
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Set_Update_Interceptor.cpp
        * orbsvcs/tests/Bug_3215_Regression/ServerRequest_Interceptor2.cpp
        * orbsvcs/tests/Bug_3216_Regression/ServerRequest_Interceptor.cpp
        * orbsvcs/tests/Bug_2615_Regression/ServerRequest_Interceptor2.cpp
        * orbsvcs/tests/Bug_2287_Regression/ServerRequest_Interceptor2.cpp
        * orbsvcs/tests/Bug_2285_Regression/ServerRequest_Interceptor2.cpp
        * orbsvcs/tests/Bug_2285_Regression/ServerRequest_Interceptor.cpp
          Replace IOP_IOR with IOP

Tue Jul 15 01:10:54 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_interface.cpp
        * TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp
        * TAO_IDL/be/be_visitor_interface/direct_proxy_impl_ss.cpp
        * TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_sh.cpp
        * TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_ss.cpp
        * TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp
          Also don't generate a constructor for the direct proxy broker and
          made the proxy broker a global static object to prevent possible
          problems with multiple threads invoking the proxy broker method
          at the same moment. This fixes bugzilla 3363. Also made some
          layout changes to the generated code to format things better.

Tue Jul 15 00:34:58 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Time_Utilities.cpp:
        * orbsvcs/orbsvcs/Time_Utilities.h:

          An error in transcribing the Julian Date representation for
          January 1, 1970 resulted in the constant for the difference
          between the CORBA and POSIX epochs being off by 9 days.  Thanks
          to Hans Utz < hans dot utz at nasa dot gov> for reporting this.

Mon Jul 14 20:24:54 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
          Use ! operator

Mon Jul 14 20:07:54 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_ss.cpp:
          No need to generate a constructor for the proxy broker and made
          some layout changes to the generated code. This got discussed
          as part of bugzilla 3363.

Mon Jul 14 18:40:54 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

          Moved the contents of IOP_IOR.pidl to IOP.pidl and removed IOP_IOR.pidl
          and updated all files that included IOP_IORC.h

        * tao/AnyTypeCode.mpc:
        * tao/Makefile.am
        * tao/tao.mpc
          Updated files to build

        * tao/Asynch_Reply_Dispatcher_Base.h:
        * tao/EndpointPolicy/EndpointPolicy.h
        * tao/GIOP.pidl
        * tao/IIOP_Endpoint.cpp
        * tao/IIOP_Factory.cpp
        * tao/IORInterceptor/IORInfo.pidl
        * tao/Messaging_PolicyValue.pidl
        * tao/Object.h
        * tao/PI/RequestInfo.pidl
        * tao/Pluggable_Messaging_Utils.h
        * tao/Protocols_Hooks.h
        * tao/Service_Context_Handler.h
        * tao/Service_Context_Handler_Registry.h
        * tao/Tagged_Components.h
        * tao/Transport.cpp
          Updated include

        * tao/Collocation_Proxy_Broker.h:
        * tao/Incoming_Message_Stack.inl
        * tao/Monitor/Monitor_Impl.cpp
          Layout change

        * tao/IOP.pidl
        * tao/IOP_IOR.pidl
          Moved contents

Mon Jul 14 15:29:14 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/tests/unit/Notify/MC/NotificationServiceMonitor/NotificationServiceMonitor.cpp:

          Added a fetch of the number of entries in the registry at the
          start of the test, subsequent compares check that all monitors
          added by the test itself are found and recognized. The number of
          monitors extant at the start of the test on different platforms
          varies, so this is the only way to decouple the test code from
          the platform.

Mon Jul 14 12:48:54 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * NEWS:

          Added an entry for my change from Mon Jul  7 12:09:10 UTC 2008.

Fri Jul 11 16:35:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/server_main.cpp:
        * tests/Abstract_Interface/client.cpp:
        * tests/Hang_Shutdown/server.cpp:
        * tests/Portable_Interceptors/AMI/client.cpp:
        * tests/POA/Persistent_ID/server.cpp:
        * tests/Object_Loader/Loader.h:
        * tests/Object_Loader/Loader.cpp:
        * tests/Oneway_Timeouts/server.cpp:
        * tests/POA/EndpointPolicy/server.cpp:
        * tests/POA/EndpointPolicy/client.cpp:
        * tests/POA/Default_Servant2/server.cpp:
        * tests/POA/Default_Servant2/client.cpp:

          Added/Corrected wide-character compatablity.

Fri Jul 11 11:20:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/ORB_Local_Config/Two_DLL_ORB/server.cpp:
        * utils/catior/catior.cpp:

          Missing bracket and missnamed argcw & argvw.

Fri Jul 11 08:00:25 UTC 2008  Vladimir Zykov  <vzykov@prismtech.com>

        * TAO_IDL/include/fe_extern.h:

          Fixed a compile error on versioned namespace builds.

Fri Jul 11 07:28:12 UTC 2008  Vladimir Zykov  <vzykov@prismtech.com>

        * TAO_IDL/util/utl_global.cpp:

          Removed comment about Prism addition which slipped in during
          my previous commit.

Thu Jul 10 15:25:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/Client_Leaks/client.cpp:
        * tests/Transport_Current/IIOP/server.cpp:
        * tests/Transport_Current/IIOP/IIOP_Tester.cpp:
        * tests/Transport_Current/IIOP/IIOP_Server_Request_Interceptor.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/server_main.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/Server_Task.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/Server_Task.cpp:

          Added/Corrected wide-character compatablity.

Thu Jul 10 13:45:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/ORB_Local_Config/Two_DLL_ORB/Two_DLL_ORB.mpc:

          Both server and client are compiling the same files (I'm
          not sure why or if this is correct, but it was multi-build
          unsafe, which I have corrected).

        * tests/ORB_Local_Config/Two_DLL_ORB/client.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/server.cpp:
        * tests/ORB_Local_Config/Two_DLL_ORB/ORB_DLL.h:
        * tests/ORB_Local_Config/Two_DLL_ORB/ORB_DLL.cpp:
        * tests/ORB_Local_Config/Bug_2612/DllOrb.h:
        * tests/ORB_Local_Config/Bug_2612/DllOrb.cpp:
        * tests/ORB_Local_Config/Bug_2612/Test.cpp:
        * tests/ORB_Local_Config/Service_Dependency/Test.cpp:
        * tests/ORB_Local_Config/Separation/Test.cpp:
        * tests/ORB_Local_Config/Bunch/Test.cpp:
        * utils/catior/catior.cpp:

          Added/Corrected wide-character compatablity.

Thu Jul 10 09:52:15 UTC 2008  Vladimir Zykov  <vzykov@prismtech.com>

        * docs/compiler.html:
          Added documentation about -Se tao_idl option.

        * TAO_IDL/be/be_global.cpp:
          Updated help message for -Se option.

        * TAO_IDL/include/fe_extern.h:
        * TAO_IDL/fe/fe_init.cpp:
          Added FE_extract_env_include_paths which extracts include
          paths from INCLUDE environment variable.

        * TAO_IDL/util/utl_global.cpp:
          Updated the algorithm implemented for bug 3154 to make it more
          maintainable.

Wed Jul 09 13:30:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/TransportCurrent/lib/Client_Request_Interceptor.cpp:
        * tests/TransportCurrent/lib/Server_Request_Interceptor.cpp:
        * tests/Big_Reply/client.cpp:
        * tests/Bug_3251_Regression/PersistentPoa.h:
        * tests/Bug_3251_Regression/PersistentPoa.cpp:
        * tests/TransportCurrent/Framework/server.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/server.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Static/ServerApp.h:
        * tests/CSD_Strategy_Tests/TP_Test_Static/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/AppTestBase.h:
        * tests/CSD_Strategy_Tests/TP_Common/AppTestBase.cpp:

          Added wide character compatablity.

Tue Jul  8 14:20:44 UTC 2008  Vladimir Zykov  <vzykov@prismtech.com>

        * TAO_IDL/driver/drv_mcpp_preproc.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:

          Fixed mistakenly used TAO_ROOT where ACE_ROOT was meant.

Mon Jul  7 15:13:09 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannelFactory.cpp:

          Restored creation of ActiveEventChannelNames monitor.

Mon Jul  7 12:09:10 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/examples/Notify/MC/TkMonitor/README:

          Added more info on how to run the example.

        * orbsvcs/examples/Notify/MC/TkMonitor/external_idl.pl:

          Fixed up the script for the monitor idl changes.

        * orbsvcs/orbsvcs/Notify/Admin.h:
        * orbsvcs/orbsvcs/Notify/Admin.cpp:
        * orbsvcs/orbsvcs/Notify/EventChannel.h:
        * orbsvcs/orbsvcs/Notify/EventChannel.cpp:

          Added a parameter to cleanup_proxy that allows the caller to
          indicate if a timeout was experienced.

        * orbsvcs/orbsvcs/Notify/Consumer.h:
        * orbsvcs/orbsvcs/Notify/Consumer.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.cpp:

          If a timeout occurred, indicate this by returning a status of
          DISPATCH_FAIL_TIMEOUT.

        * orbsvcs/orbsvcs/Notify/ProxyConsumer.cpp:

          We're not keeping track of consumer proxies, so pass false to the
          cleanup_proxy method.

        * orbsvcs/orbsvcs/Notify/ProxySupplier.h:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.cpp:

          Added a destroy method that takes a boolean to indicate if a
          timeout had occurred.  This flag is passed to cleanup_proxy called
          on the consumer admin.

        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannel.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannel.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/NotifyMonitoringExt.idl:

          Added a text based monitor to keep track of consumers that were
          removed due to a timeout.

Mon Jul  7 11:44:40 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:

          Always use the wchar_t environment buffer when activating
          processes (on Windows).

Sun Jul  6 20:43:24 UTC 2008  Nanbor Wang  <nanbor (at) txcorp (dot) com>

        * tests/Portable_Interceptors/ForwardRequest/README:
        * tests/Portable_Interceptors/ForwardRequest/client.cpp:
        * tests/Portable_Interceptors/ForwardRequest/Serer_Request_Interceptor:
          Extended the test to verify that ForwardRequest is work properly
          from the send_exception() interception point.

Fri Jul  4 15:31:27 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Makefile.am:

          Removed Statistic.{h,inl,cpp} and added
          Timestamp_Monitor.{h,cpp} to the CosNotification_MC build.

        * orbsvcs/tests/unit/Notify/MC/NotificationServiceMonitor/NotificationServiceMonitor.cpp:

          Disabled some test result checks for HPUX platforms,
          they seem to have a different number of monitors in
          the registry, since several are now created automatically
          for ACE message queues, CDR buffers, POA active object
          maps, etc., but it isn't a bug.

Thu Jul  3 19:17:57 UTC 2008  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/fe/y.tab.cpp:
          Added a couple spaces to a comment to force a commit, some builds were
          thinking this was out of date.

Wed Jul 02 16:16:00 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Incoming_Message_Stack.h:
        * orbsvcs/orbsvcs/Trader/Trader.h:
          Borland C++ changes

        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
        * orbsvcs/orbsvcs/Event/EC_Reactive_ConsumerControl.cpp:
          Layout change

        * tao/Stub.h:
          Layout and doxygen changes

Wed Jul 02 12:59:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/tests/unit/Notify/MC/NotificationServiceMonitor/NotificationServiceMonitor.cpp:

          Fixed multiple definition of for loop i warnings.

Wed Jul  2 12:45:53 UTC 2008  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * Updated the COPYING file to make it consistent with what's on the website.

Wed Jul 02 12:47:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/tests/unit/Notify/MC/MonitorManager/MonitorManager.cpp:
        * orbsvcs/tests/unit/Notify/MC/MonitorControlExt/MonitorControlExt.cpp:
        * tests/Monitor/Marshal_Buffer/client.cpp:

          Fixed unused variable warnings.

        * orbsvcs/Notify_Service/Notify_Service.cpp:

          Fixed choosing this over that warnings.

Wed Jul 02 09:14:00 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/OC_Endpoint_Selector_Factory.cpp:
          Renamed timeout to connect_timeout, timeout is a macro in some
          environments

Tue Jul 01 12:18:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/tests/Notify/Basic/IdAssignment.cpp:
        * orbsvcs/tests/Notify/Blocking/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Blocking/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Bug_1385_Regression/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Bug_1385_Regression/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Discarding/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Discarding/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/lib/Notify_Test_Client.h:
        * orbsvcs/tests/Notify/lib/Notify_Test_Client.cpp:
        * orbsvcs/tests/Notify/MC/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/MC/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/MT_Dispatching/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/MT_Dispatching/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Ordering/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Ordering/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Persistent_POA/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/PluggableTopology/main.cpp:
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Supplier.cpp:

          Fix fuzz errors incorrect ACE_TMAIN/main use.

Tue Jul 01 08:48:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/tests/AVStreams/Modify_QoS/receiver.h:

          This mornings round of fixes/typos etc. to my changes yesterday,
          missed edited the init() signature.

Mon Jun 30 15:05:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/tests/AVStreams/Full_Profile/ftp.h:
        * orbsvcs/tests/AVStreams/Full_Profile/ftp.cpp:
        * orbsvcs/tests/AVStreams/Full_Profile/server.h:
        * orbsvcs/tests/AVStreams/Full_Profile/server.cpp:
        * orbsvcs/tests/AVStreams/Modify_QoS/receiver.h:
        * orbsvcs/tests/AVStreams/Modify_QoS/receiver.cpp:
        * orbsvcs/tests/AVStreams/Modify_QoS/sender.h:
        * orbsvcs/tests/AVStreams/Modify_QoS/sender.cpp:
        * orbsvcs/tests/AVStreams/Multicast/ftp.h:
        * orbsvcs/tests/AVStreams/Multicast/ftp.cpp:
        * orbsvcs/tests/AVStreams/Multicast/server.h:
        * orbsvcs/tests/AVStreams/Multicast/server.cpp:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/receiver.h:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/receiver.cpp:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/sender.h:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/sender.cpp:
        * orbsvcs/tests/AVStreams/Multiple_Flows/receiver.h:
        * orbsvcs/tests/AVStreams/Multiple_Flows/receiver.cpp:
        * orbsvcs/tests/AVStreams/Multiple_Flows/sender.h:
        * orbsvcs/tests/AVStreams/Multiple_Flows/sender.cpp:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/receiver.h:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/receiver.cpp:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/sender.h:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/sender.cpp:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/receiver.h:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/receiver.cpp:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/sender.h:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/sender.cpp:
        * orbsvcs/tests/AVStreams/Component_Switching/distributer.h:
        * orbsvcs/tests/AVStreams/Component_Switching/distributer.cpp:
        * orbsvcs/tests/AVStreams/Component_Switching/receiver.h:
        * orbsvcs/tests/AVStreams/Component_Switching/receiver.cpp:
        * orbsvcs/tests/AVStreams/Component_Switching/sender.h:
        * orbsvcs/tests/AVStreams/Component_Switching/sender.cpp:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/distributer.h:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/distributer.cpp:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/receiver.h:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/receiver.cpp:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/sender.h:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/sender.cpp:

          Fix fuzz errors incorrect ACE_TMAIN/main use.

Mon Jun 30 08:33:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventSupplierMain.cpp:
        * tao/Acceptor_Registry.cpp:
        * tao/IIOP_Acceptor.cpp:

          Remove tabs introduced by commit (Fri Jun 27 14:48:54 UTC 2008 Phil Mesnier)

Fri Jun 27 15:16:58 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * docs/tutorials/Quoter/AMI/Makefile.am:
        * docs/tutorials/Quoter/Event_Service/Makefile.am:
        * docs/tutorials/Quoter/On_Demand_Activation/Makefile.am:
        * docs/tutorials/Quoter/RTCORBA/Makefile.am:
        * docs/tutorials/Quoter/RT_Event_Service/Makefile.am:
        * docs/tutorials/Quoter/idl/Makefile.am:
        * examples/AMH/Sink_Server/Makefile.am:
        * examples/AMI/FL_Callback/Makefile.am:
        * examples/Advanced/ch_3/Makefile.am:
        * examples/Buffered_AMI/Makefile.am:
        * examples/Buffered_Oneways/Makefile.am:
        * examples/CSD_Strategy/ThreadPool/Makefile.am:
        * examples/CSD_Strategy/ThreadPool2/Makefile.am:
        * examples/CSD_Strategy/ThreadPool3/Makefile.am:
        * examples/CSD_Strategy/ThreadPool4/Makefile.am:
        * examples/CSD_Strategy/ThreadPool5/Makefile.am:
        * examples/CSD_Strategy/ThreadPool6/Makefile.am:
        * examples/Callback_Quoter/Makefile.am:
        * examples/Content_Server/AMI_Iterator/Makefile.am:
        * examples/Content_Server/AMI_Observer/Makefile.am:
        * examples/Content_Server/SMI_Iterator/Makefile.am:
        * examples/Event_Comm/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.am:
        * examples/Load_Balancing/Makefile.am:
        * examples/Load_Balancing_persistent/Makefile.am:
        * examples/Logging/Makefile.am:
        * examples/OBV/Typed_Events/Makefile.am:
        * examples/Persistent_Grid/Makefile.am:
        * examples/PluggableUDP/tests/Performance/Makefile.am:
        * examples/PluggableUDP/tests/SimplePerformance/Makefile.am:
        * examples/Quoter/Makefile.am:
        * examples/RTCORBA/Activity/Makefile.am:
        * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile.am:
        * examples/RTScheduling/MIF_Scheduler/Makefile.am:
        * examples/RTScheduling/Makefile.am:
        * examples/Simple/bank/Makefile.am:
        * examples/Simple/chat/Makefile.am:
        * examples/Simple/echo/Makefile.am:
        * examples/Simple/grid/Makefile.am:
        * examples/Simple/time-date/Makefile.am:
        * examples/Simple/time/Makefile.am:
        * examples/Simulator/Event_Supplier/Makefile.am:
        * examples/TypeCode_Creation/Makefile.am:
        * examples/ior_corbaloc/Makefile.am:
        * examples/mfc/Makefile.am:
        * interop-tests/wchar/Makefile.am:
        * orbsvcs/ImplRepo_Service/Makefile.am:
        * orbsvcs/examples/CosEC/Factory/Makefile.am:
        * orbsvcs/examples/CosEC/TypedSimple/Makefile.am:
        * orbsvcs/examples/FaultTolerance/RolyPoly/Makefile.am:
        * orbsvcs/examples/ImR/Advanced/Makefile.am:
        * orbsvcs/examples/ImR/Combined_Service/Makefile.am:
        * orbsvcs/examples/LoadBalancing/Makefile.am:
        * orbsvcs/examples/ORT/Makefile.am:
        * orbsvcs/examples/Security/Send_File/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/lib/Makefile.am:
        * orbsvcs/tests/BiDir_CORBALOC/Makefile.am:
        * orbsvcs/tests/Bug_1395_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2247_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2248_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2285_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2287_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2316_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2377_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2615_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2709_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2800_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2925_Regression/Makefile.am:
        * orbsvcs/tests/Bug_3215_Regression/Makefile.am:
        * orbsvcs/tests/Bug_3216_Regression/Makefile.am:
        * orbsvcs/tests/COIOP_Naming_Test/Makefile.am:
        * orbsvcs/tests/EC_Custom_Marshal/Makefile.am:
        * orbsvcs/tests/Event/UDP/Makefile.am:
        * orbsvcs/tests/FT_App/Makefile.am:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Makefile.am:
        * orbsvcs/tests/FaultTolerance/IOGR/Makefile.am:
        * orbsvcs/tests/HTIOP/AMI/Makefile.am:
        * orbsvcs/tests/HTIOP/BiDirectional/Makefile.am:
        * orbsvcs/tests/HTIOP/Hello/Makefile.am:
        * orbsvcs/tests/IOR_MCast/Makefile.am:
        * orbsvcs/tests/ImplRepo/Bug_2604_Regression/Makefile.am:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/Makefile.am:
        * orbsvcs/tests/ImplRepo/Makefile.am:
        * orbsvcs/tests/ImplRepo/scale/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Application_Test/Makefile.am:
        * orbsvcs/tests/Interoperable_Naming/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/Makefile.am:
        * orbsvcs/tests/Miop/McastHello/Makefile.am:
        * orbsvcs/tests/Notify/Blocking/Makefile.am:
        * orbsvcs/tests/Notify/Bug_1385_Regression/Makefile.am:
        * orbsvcs/tests/Notify/Bug_2561_Regression/Makefile.am:
        * orbsvcs/tests/Notify/Discarding/Makefile.am:
        * orbsvcs/tests/Notify/MC/Makefile.am:
        * orbsvcs/tests/Notify/MT_Dispatching/Makefile.am:
        * orbsvcs/tests/Notify/Ordering/Makefile.am:
        * orbsvcs/tests/Notify/Persistent_POA/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Timeout/Makefile.am:
        * orbsvcs/tests/Notify/lib/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile.am:
        * orbsvcs/tests/Redundant_Naming/Makefile.am:
        * orbsvcs/tests/Security/BiDirectional/Makefile.am:
        * orbsvcs/tests/Security/Big_Request/Makefile.am:
        * orbsvcs/tests/Security/Bug_1107_Regression/Makefile.am:
        * orbsvcs/tests/Security/Bug_2908_Regression/Makefile.am:
        * orbsvcs/tests/Security/Callback/Makefile.am:
        * orbsvcs/tests/Security/Crash_Test/Makefile.am:
        * orbsvcs/tests/Security/MT_IIOP_SSL/Makefile.am:
        * orbsvcs/tests/Security/MT_SSLIOP/Makefile.am:
        * orbsvcs/tests/Security/Secure_Invocation/Makefile.am:
        * orbsvcs/tests/Security/mixed_security_test/Makefile.am:
        * orbsvcs/tests/Security/ssliop_CSD/Makefile.am:
        * orbsvcs/tests/Security/ssliop_corbaloc/Makefile.am:
        * orbsvcs/tests/Simple_Naming/Makefile.am:
        * orbsvcs/tests/Trading/Makefile.am:
        * orbsvcs/tests/ior_corbaname/Makefile.am:
        * performance-tests/Anyop/Makefile.am:
        * performance-tests/CSD_Strategy/TestInf/Makefile.am:
        * performance-tests/CSD_Strategy/TestServant/Makefile.am:
        * performance-tests/Callback/Makefile.am:
        * performance-tests/Cubit/TAO/DII_Cubit/Makefile.am:
        * performance-tests/Cubit/TAO/IDL_Cubit/Makefile.am:
        * performance-tests/Cubit/TAO/MT_Cubit/Makefile.am:
        * performance-tests/Latency/AMH_Single_Threaded/Makefile.am:
        * performance-tests/Latency/AMI/Makefile.am:
        * performance-tests/Latency/Collocation/Makefile.am:
        * performance-tests/Latency/DII/Makefile.am:
        * performance-tests/Latency/DSI/Makefile.am:
        * performance-tests/Latency/Deferred/Makefile.am:
        * performance-tests/Latency/Single_Threaded/Makefile.am:
        * performance-tests/Latency/Thread_Per_Connection/Makefile.am:
        * performance-tests/Latency/Thread_Pool/Makefile.am:
        * performance-tests/Memory/IORsize/Makefile.am:
        * performance-tests/Memory/Single_Threaded/Makefile.am:
        * performance-tests/POA/Demux/Makefile.am:
        * performance-tests/POA/Implicit_Activation/Makefile.am:
        * performance-tests/POA/Object_Creation_And_Registration/Makefile.am:
        * performance-tests/Pluggable/Makefile.am:
        * performance-tests/Protocols/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Common/Makefile.am:
        * performance-tests/RTCorba/Oneways/Reliable/Makefile.am:
        * performance-tests/RTCorba/Thread_Pool/Makefile.am:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/Makefile.am:
        * performance-tests/Sequence_Latency/AMI/Makefile.am:
        * performance-tests/Sequence_Latency/DII/Makefile.am:
        * performance-tests/Sequence_Latency/DSI/Makefile.am:
        * performance-tests/Sequence_Latency/Deferred/Makefile.am:
        * performance-tests/Sequence_Latency/Single_Threaded/Makefile.am:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Makefile.am:
        * performance-tests/Sequence_Latency/Thread_Pool/Makefile.am:
        * performance-tests/Throughput/Makefile.am:
        * tao/Makefile.am:
        * tests/AMH_Exceptions/Makefile.am:
        * tests/AMH_Oneway/Makefile.am:
        * tests/AMI/Makefile.am:
        * tests/AMI_Buffering/Makefile.am:
        * tests/AMI_Timeouts/Makefile.am:
        * tests/Abstract_Interface/Makefile.am:
        * tests/Any/Recursive/Makefile.am:
        * tests/BiDirectional/Makefile.am:
        * tests/BiDirectional_DelayedUpcall/Makefile.am:
        * tests/BiDirectional_NestedUpcall/Makefile.am:
        * tests/Big_AMI/Makefile.am:
        * tests/Big_Oneways/Makefile.am:
        * tests/Big_Reply/Makefile.am:
        * tests/Big_Request_Muxing/Makefile.am:
        * tests/Big_Twoways/Makefile.am:
        * tests/Blocking_Sync_None/Makefile.am:
        * tests/Bug_1020_Basic_Regression/Makefile.am:
        * tests/Bug_1020_Regression/Makefile.am:
        * tests/Bug_1254_Regression/Makefile.am:
        * tests/Bug_1269_Regression/Makefile.am:
        * tests/Bug_1270_Regression/Makefile.am:
        * tests/Bug_1330_Regression/Makefile.am:
        * tests/Bug_1361_Regression/Makefile.am:
        * tests/Bug_1383_Regression/Makefile.am:
        * tests/Bug_1476_Regression/Makefile.am:
        * tests/Bug_1476_Test/Makefile.am:
        * tests/Bug_1482_Regression/Makefile.am:
        * tests/Bug_1495_Regression/Makefile.am:
        * tests/Bug_1535_Regression/Makefile.am:
        * tests/Bug_1551_Regression/Makefile.am:
        * tests/Bug_1568_Regression/Makefile.am:
        * tests/Bug_1627_Regression/Makefile.am:
        * tests/Bug_1636_Regression/Makefile.am:
        * tests/Bug_1639_Regression/Makefile.am:
        * tests/Bug_1670_Regression/Makefile.am:
        * tests/Bug_1676_Regression/Makefile.am:
        * tests/Bug_1693_Test/Makefile.am:
        * tests/Bug_1812_Regression/Makefile.am:
        * tests/Bug_1813_Regression/Makefile.am:
        * tests/Bug_1869_Regression/Makefile.am:
        * tests/Bug_1904_Regression/Makefile.am:
        * tests/Bug_2084_Regression/Makefile.am:
        * tests/Bug_2119_Regression/Makefile.am:
        * tests/Bug_2122_Regression/Makefile.am:
        * tests/Bug_2124_Regression/Makefile.am:
        * tests/Bug_2126_Regression/Makefile.am:
        * tests/Bug_2134_Regression/Makefile.am:
        * tests/Bug_2144_Regression/Makefile.am:
        * tests/Bug_2174_Regression/Makefile.am:
        * tests/Bug_2183_Regression/Makefile.am:
        * tests/Bug_2186_Regression/Makefile.am:
        * tests/Bug_2188_Regression/Makefile.am:
        * tests/Bug_2201_Regression/Makefile.am:
        * tests/Bug_2222_Regression/Makefile.am:
        * tests/Bug_2234_Regression/Makefile.am:
        * tests/Bug_2289_Regression/Makefile.am:
        * tests/Bug_2319_Regression/Makefile.am:
        * tests/Bug_2328_Regression/Makefile.am:
        * tests/Bug_2349_Regression/Makefile.am:
        * tests/Bug_2356_Regression/Makefile.am:
        * tests/Bug_2375_Regression/Makefile.am:
        * tests/Bug_2399_Regression/Makefile.am:
        * tests/Bug_2417_Regression/Makefile.am:
        * tests/Bug_2419_Regression/Makefile.am:
        * tests/Bug_2424_Regression/Makefile.am:
        * tests/Bug_2429_Regression/Makefile.am:
        * tests/Bug_2494_Regression/Makefile.am:
        * tests/Bug_2503_Regression/Makefile.am:
        * tests/Bug_2542_Regression/Makefile.am:
        * tests/Bug_2543_Regression/Makefile.am:
        * tests/Bug_2549_Regression/Makefile.am:
        * tests/Bug_2560_Regression/Makefile.am:
        * tests/Bug_2593_Regression/Makefile.am:
        * tests/Bug_2595_Regression/Makefile.am:
        * tests/Bug_2654_Regression/Makefile.am:
        * tests/Bug_2669_Regression/Makefile.am:
        * tests/Bug_2678_Regression/Makefile.am:
        * tests/Bug_2683_Regression/Makefile.am:
        * tests/Bug_2702_Regression/Makefile.am:
        * tests/Bug_2734_Regression/Makefile.am:
        * tests/Bug_2768_Regression/Makefile.am:
        * tests/Bug_2791_Regression/Makefile.am:
        * tests/Bug_2804_Regression/Makefile.am:
        * tests/Bug_2805_Regression/Makefile.am:
        * tests/Bug_2826_Regression/Makefile.am:
        * tests/Bug_2844_Regression/Makefile.am:
        * tests/Bug_2909_Regression/Makefile.am:
        * tests/Bug_2918_Regression/Makefile.am:
        * tests/Bug_2935_Regression/Makefile.am:
        * tests/Bug_2953_Regression/Makefile.am:
        * tests/Bug_2966_Regression/Makefile.am:
        * tests/Bug_3000_Regression/Makefile.am:
        * tests/Bug_3042_Regression/Makefile.am:
        * tests/Bug_3108_Regression/Makefile.am:
        * tests/Bug_3163_Regression/Makefile.am:
        * tests/Bug_3276_Regression/Makefile.am:
        * tests/Bug_3299_Regression/Makefile.am:
        * tests/Bug_3311_Regression/Makefile.am:
        * tests/Bug_933_Regression/Makefile.am:
        * tests/COIOP/Makefile.am:
        * tests/CORBA_e_Implicit_Activation/Makefile.am:
        * tests/CSD_Collocation/Makefile.am:
        * tests/CSD_Strategy_Tests/TP_Common/Makefile.am:
        * tests/CSD_Strategy_Tests/TP_Foo_A/Makefile.am:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Makefile.am:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Makefile.am:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/Makefile.am:
        * tests/Cache_Growth_Test/Makefile.am:
        * tests/CallbackTest/Makefile.am:
        * tests/Client_Leaks/Makefile.am:
        * tests/CodeSets/simple/Makefile.am:
        * tests/Codec/Makefile.am:
        * tests/Collocated_Forwarding/Makefile.am:
        * tests/Collocation/Makefile.am:
        * tests/CollocationLockup/Makefile.am:
        * tests/Collocation_Exception_Test/Makefile.am:
        * tests/Collocation_Oneway_Tests/Makefile.am:
        * tests/Collocation_Opportunities/Makefile.am:
        * tests/Collocation_Tests/Makefile.am:
        * tests/Connect_Strategy_Test/Makefile.am:
        * tests/Connection_Failure/Makefile.am:
        * tests/Connection_Purging/Makefile.am:
        * tests/Connection_Timeout/Makefile.am:
        * tests/Crash_On_Write/Makefile.am:
        * tests/Crashed_Callback/Makefile.am:
        * tests/DII_AMI_Forward/Makefile.am:
        * tests/DII_Collocation_Tests/oneway/Makefile.am:
        * tests/DII_Collocation_Tests/twoway/Makefile.am:
        * tests/DIOP/Makefile.am:
        * tests/DLL_ORB/Makefile.am:
        * tests/DSI_AMH/Makefile.am:
        * tests/DSI_AMI_Gateway/Makefile.am:
        * tests/DSI_Gateway/Makefile.am:
        * tests/DiffServ/Makefile.am:
        * tests/DynAny_Test/Makefile.am:
        * tests/DynUnion_Test/Makefile.am:
        * tests/Explicit_Event_Loop/Makefile.am:
        * tests/Exposed_Policies/Makefile.am:
        * tests/FL_Cube/Makefile.am:
        * tests/Faults/Makefile.am:
        * tests/File_IO/Makefile.am:
        * tests/Forwarding/Makefile.am:
        * tests/GIOP_Fragments/Java_Big_Reply/Makefile.am:
        * tests/GIOP_Fragments/Java_Big_Request/Makefile.am:
        * tests/GIOP_Fragments/PMB_With_Fragments/Makefile.am:
        * tests/HandleExhaustion/Makefile.am:
        * tests/Hang_Shutdown/Makefile.am:
        * tests/Hello/Makefile.am:
        * tests/ICMG_Any_Bug/Makefile.am:
        * tests/IDL_Test/Makefile.am:
        * tests/IORManipulation/filter/Makefile.am:
        * tests/IOR_Endpoint_Hostnames/Makefile.am:
        * tests/IPV6/Makefile.am:
        * tests/InterOp-Naming/Makefile.am:
        * tests/Leader_Followers/Makefile.am:
        * tests/LongDouble/Makefile.am:
        * tests/LongUpcalls/Makefile.am:
        * tests/MProfile/Makefile.am:
        * tests/MProfile_Connection_Timeout/Makefile.am:
        * tests/MProfile_Forwarding/Makefile.am:
        * tests/MT_BiDir/Makefile.am:
        * tests/MT_Client/Makefile.am:
        * tests/MT_Server/Makefile.am:
        * tests/MT_Timeout/Makefile.am:
        * tests/Monitor/Marshal_Buffer/Makefile.am:
        * tests/Multiple/Makefile.am:
        * tests/Multiple_Inheritance/Makefile.am:
        * tests/Muxed_GIOP_Versions/Makefile.am:
        * tests/Muxing/Makefile.am:
        * tests/Native_Exceptions/Makefile.am:
        * tests/NestedUpcall/MT_Client_Test/Makefile.am:
        * tests/NestedUpcall/Simple/Makefile.am:
        * tests/NestedUpcall/Triangle_Test/Makefile.am:
        * tests/Nested_Event_Loop/Makefile.am:
        * tests/Nested_Upcall_Crash/Makefile.am:
        * tests/No_Server_MT_Connect_Test/Makefile.am:
        * tests/OBV/Any/Makefile.am:
        * tests/OBV/Collocated/Forward/Makefile.am:
        * tests/OBV/Factory/Makefile.am:
        * tests/OBV/Forward/Makefile.am:
        * tests/OBV/Simple/Makefile.am:
        * tests/OBV/TC_Alignment/Makefile.am:
        * tests/OBV/Truncatable/Makefile.am:
        * tests/OBV/ValueBox/Makefile.am:
        * tests/ORB_Local_Config/Two_DLL_ORB/Makefile.am:
        * tests/ORB_init/Portspan/Makefile.am:
        * tests/ORB_shutdown/Makefile.am:
        * tests/ORT/Makefile.am:
        * tests/Object_Loader/Makefile.am:
        * tests/Objref_Sequence_Test/Makefile.am:
        * tests/OctetSeq/Makefile.am:
        * tests/Ondemand_Write/Makefile.am:
        * tests/Oneway_Buffering/Makefile.am:
        * tests/Oneway_Send_Timeouts/Makefile.am:
        * tests/Oneway_Timeouts/Makefile.am:
        * tests/Oneways_Invoking_Twoways/Makefile.am:
        * tests/Optimized_Connection/Makefile.am:
        * tests/POA/Bug_1592_Regression/Makefile.am:
        * tests/POA/Bug_2511_Regression/Makefile.am:
        * tests/POA/DSI/Makefile.am:
        * tests/POA/Deactivate_Object/Makefile.am:
        * tests/POA/Default_Servant/Makefile.am:
        * tests/POA/Default_Servant2/Makefile.am:
        * tests/POA/EndpointPolicy/Makefile.am:
        * tests/POA/Etherealization/Makefile.am:
        * tests/POA/Excessive_Object_Deactivations/Makefile.am:
        * tests/POA/Forwarding/Makefile.am:
        * tests/POA/Generic_Servant/Makefile.am:
        * tests/POA/Identity/Makefile.am:
        * tests/POA/MT_Servant_Locator/Makefile.am:
        * tests/POA/Nested_Non_Servant_Upcalls/Makefile.am:
        * tests/POA/Non_Servant_Upcalls/Makefile.am:
        * tests/POA/Object_Reactivation/Makefile.am:
        * tests/POA/POA_Destruction/Makefile.am:
        * tests/POA/Persistent_ID/Makefile.am:
        * tests/POA/Reference_Counting/Makefile.am:
        * tests/POA/Single_Threaded_POA/Makefile.am:
        * tests/POA/TIE/Makefile.am:
        * tests/POA/wait_for_completion/Makefile.am:
        * tests/Parallel_Connect_Strategy/Makefile.am:
        * tests/Param_Test/Makefile.am:
        * tests/Policies/Makefile.am:
        * tests/Portable_Interceptors/AMI/Makefile.am:
        * tests/Portable_Interceptors/AdvSlot/Makefile.am:
        * tests/Portable_Interceptors/AdvSlotDblCpy/Makefile.am:
        * tests/Portable_Interceptors/AdvSlotExt/Makefile.am:
        * tests/Portable_Interceptors/Benchmark/Makefile.am:
        * tests/Portable_Interceptors/Bug_1559/Makefile.am:
        * tests/Portable_Interceptors/Bug_2133/Makefile.am:
        * tests/Portable_Interceptors/Bug_2510_Regression/Makefile.am:
        * tests/Portable_Interceptors/Bug_3079/Makefile.am:
        * tests/Portable_Interceptors/Bug_3080/Makefile.am:
        * tests/Portable_Interceptors/Collocated/Dynamic/Makefile.am:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/Makefile.am:
        * tests/Portable_Interceptors/Dynamic/Makefile.am:
        * tests/Portable_Interceptors/ForwardRequest/Makefile.am:
        * tests/Portable_Interceptors/IORInterceptor/Makefile.am:
        * tests/Portable_Interceptors/ORB_Shutdown/Makefile.am:
        * tests/Portable_Interceptors/PICurrent/Makefile.am:
        * tests/Portable_Interceptors/PolicyFactory/Makefile.am:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Makefile.am:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/Makefile.am:
        * tests/Portable_Interceptors/Redirection/Makefile.am:
        * tests/Portable_Interceptors/Register_Initial_References/Makefile.am:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Makefile.am:
        * tests/Portable_Interceptors/Service_Context_Manipulation/Makefile.am:
        * tests/QtTests/Makefile.am:
        * tests/RTCORBA/Activate_Object_Multiple_ORBs/Makefile.am:
        * tests/RTCORBA/Banded_Connections/Makefile.am:
        * tests/RTCORBA/Client_Propagated/Makefile.am:
        * tests/RTCORBA/Client_Protocol/Makefile.am:
        * tests/RTCORBA/Collocation/Makefile.am:
        * tests/RTCORBA/Diffserv/Makefile.am:
        * tests/RTCORBA/Dynamic_Thread_Pool/Makefile.am:
        * tests/RTCORBA/Explicit_Binding/Makefile.am:
        * tests/RTCORBA/Linear_Priority/Makefile.am:
        * tests/RTCORBA/MT_Client_Protocol_Priority/Makefile.am:
        * tests/RTCORBA/Persistent_IOR/Makefile.am:
        * tests/RTCORBA/Policy_Combinations/Makefile.am:
        * tests/RTCORBA/Priority_Inversion_With_Bands/Makefile.am:
        * tests/RTCORBA/Private_Connection/Makefile.am:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/Makefile.am:
        * tests/RTCORBA/Server_Declared/Makefile.am:
        * tests/RTCORBA/Server_Protocol/Makefile.am:
        * tests/RTCORBA/Thread_Pool/Makefile.am:
        * tests/RTScheduling/Scheduling_Interceptor/Makefile.am:
        * tests/RTScheduling/VoidData/Makefile.am:
        * tests/Reliable_Oneways/Makefile.am:
        * tests/Servant_To_Reference_Test/Makefile.am:
        * tests/Server_Connection_Purging/Makefile.am:
        * tests/Server_Leaks/Makefile.am:
        * tests/Server_Port_Zero/Makefile.am:
        * tests/Single_Read/Makefile.am:
        * tests/Smart_Proxies/Benchmark/Makefile.am:
        * tests/Smart_Proxies/Collocation/Makefile.am:
        * tests/Smart_Proxies/Makefile.am:
        * tests/Smart_Proxies/On_Demand/Makefile.am:
        * tests/Smart_Proxies/Policy/Makefile.am:
        * tests/Smart_Proxies/dtor/Makefile.am:
        * tests/Stack_Recursion/Makefile.am:
        * tests/Strategies/Makefile.am:
        * tests/Timed_Buffered_Oneways/Makefile.am:
        * tests/Timeout/Makefile.am:
        * tests/TransportCurrent/lib/Makefile.am:
        * tests/Two_Objects/Makefile.am:
        * tests/Typedef_String_Array/Makefile.am:
        * tests/UNKNOWN_Exception/Makefile.am:
        * tests/Xt_Stopwatch/Makefile.am:
        * tests/objref_comparison_test/Makefile.am:

          Regenerated for new name of gperf executable.

Fri Jun 27 14:48:54 UTC 2008  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventConsumer_i.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventSupplierMain.cpp:

          Fix the test for cases when TAO_LACKS_EVENT_CHANNEL_ANY is defined.

        * tao/Acceptor_Registry.cpp:
        * tao/IIOP_Acceptor.cpp:

          Allow TAO to work on win32 hosts with only IPv4 when TAO is built
          with ACE_HAS_IPV6 and ACE_USES_IPV4_IPV6_MIGRATION both set. The
          migration flag is intended to make ACE/TAO test if IPv6 is enabled
          at runtime, and to work without it. However, when TAO was required
          to default its endpoint, it insisted on making an IPv6 endpoint
          regardless of the enablement. This fix resolves bug 3353.

Fri Jun 27 12:55:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/tests/AVStreams/Pluggable/ftp.h:
        * orbsvcs/tests/AVStreams/Pluggable/ftp.cpp:
        * orbsvcs/tests/AVStreams/Pluggable/server.h:
        * orbsvcs/tests/AVStreams/Pluggable/server.cpp:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/receiver.h:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/receiver.cpp:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/sender.h:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/sender.cpp:

          Fix fuzz errors incorrect ACE_TMAIN/main use.

Fri Jun 27 12:20:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/tests/AVStreams/Latency/ping.cpp:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/ftp.h:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/ftp.cpp:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/server.h:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/server.cpp:

          Fix fuzz errors incorrect ACE_TMAIN/main use.

Fri Jun 27 12:00:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/tests/AVStreams/Latency/control.cpp:
        * orbsvcs/tests/AVStreams/Latency/ping.cpp:
        * orbsvcs/tests/AVStreams/Latency/pong.cpp:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/distributer.h:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/distributer.cpp:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/receiver.h:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/receiver.cpp:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/sender.h:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/sender.cpp:

          Fix fuzz errors incorrect ACE_TMAIN/main use.

Fri Jun 27 11:00:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventConsumerMain.cpp:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/EchoEventSupplierMain.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicationManagerController.cpp:
        * orbsvcs/tests/Bug_2800_Regression/NamingTeask.h:
        * orbsvcs/tests/Bug_2800_Regression/NamingTeask.cpp:
        * orbsvcs/tests/Bug_2800_Regression/nsmain.cpp:
        * orbsvcs/tests/Bug_2800_Regression/server.cpp:
        * orbsvcs/tests/ior_corbaname/client.cpp:
        * orbsvcs/tests/ior_corbaname/ior_corbaname_client_i.h:
        * orbsvcs/tests/ior_corbaname/ior_corbaname_client_i.cpp:
        * orbsvcs/tests/ior_corbaname/server.cpp:
        * orbsvcs/tests/IOR_MCast/client.cpp:
        * orbsvcs/tests/IOR_MCast/ior_mcast_client_i.h:
        * orbsvcs/tests/IOR_MCast/ior_mcast_client_i.cpp:
        * orbsvcs/tests/IOR_MCast/server.cpp:
        * orbsvcs/tests/IOR_MCast/server_i.h:
        * orbsvcs/tests/IOR_MCast/server_i.cpp:

          Fix fuzz errors incorrect ACE_TMAIN/main use.

Fri Jun 27 09:40:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/tests/Bug_2248_Regression/client.h:
        * orbsvcs/tests/Bug_2248_Regression/client.cpp:

          This mornings round of fixes/typos etc. to my changes yesterday,
          missed the header change corresponding to the cpp. Tidied this up
          as well.

Fri Jun 27 08:00:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/tests/Notify/Timeout/run_test.pl:

          Added missing PerlACE::add_lib_path ('../lib'); to run-time
          test so that test dynamic libraries can be found. Stops
          windows dialog concerning missing dll.
          (Update to Mon Jun 23 12:32:07 UTC 2008 Chad Elliott)

Thu Jun 26 19:39:28 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/tests/unit/Notify/MC/MonitorManager/MonitorClient.cpp(main):

          Added ACE_UNUSED_ARG macros for argc and argv, to avoid unused
          arg warnings when monitors are disabled.

Thu Jun 26 15:08:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/tests/Security/ssliop_CSD/MessengerClient.cpp:
        * orbsvcs/tests/Security/ssliop_CSD/MessengerServer.cpp:
        * orbsvcs/tests/FaultTolerance/IOGR/Manager.cpp:
        * orbsvcs/tests/tests_svc_loader/tests_svc_loader.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/client.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.h:
        * orbsvcs/tests/InterfaceRepo/Persistence_Test/test.cpp:
        * orbsvcs/tests/InterfaceRepo/Persistence_Test/Ptest.h:
        * orbsvcs/tests/InterfaceRepo/Persistence_Test/Ptest.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/main.cpp:
        * orbsvcs/tests/InterfaceRepo/Bug_2962_Regression/client.cpp:
        * orbsvcs/tests/InterfaceRepo/Bug_3155_Regression/test_idl.cpp:
        * orbsvcs/tests/InterfaceRepo/Bug_3174_Regression/test_idl.cpp:
        * orbsvcs/tests/Interoperable_Naming/client.cpp:
        * orbsvcs/tests/Interoperable_Naming/ncontextext_client_i.h:
        * orbsvcs/tests/Interoperable_Naming/ncontextext_client_i.cpp:
        * orbsvcs/tests/ImplRepo/NameService/test.cpp:
        * orbsvcs/tests/ImplRepo/scale/client.cpp:
        * orbsvcs/tests/ImplRepo/Bug_2604_Regression/MessengerClient.cpp:
        * orbsvcs/tests/Bug_1334_Regression/client.cpp:
        * orbsvcs/tests/Bug_1393_Regression/client.cpp:
        * orbsvcs/tests/Bug_1630_Regression/testclient.cpp:
        * orbsvcs/tests/Bug_2074_Regression/test.cpp:
        * orbsvcs/tests/Bug_2247_Regression/Manager.cpp:
        * orbsvcs/tests/Bug_2248_Regression/client.cpp:

          Fix fuzz errors incorrect ACE_TMAIN/main use.

Thu Jun 26 13:14:15 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MC_Default_Factory.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorConsumerAdmin.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannel.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorSupplierAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/NotifyMonitoringExt.idl:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MC_Notify_Service.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorSupplierAdmin.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannelFactory.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MC_Notify_Service.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Timestamp_Monitor.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Dynamic_Statistic.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/MonitorManager.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/MonitorManager.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMonitor_i.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMonitor_i.h:
        * orbsvcs/tests/unit/Notify/MC/NotificationServiceMonitor/NotificationServiceMonitor.cpp:
        * orbsvcs/tests/unit/Notify/MC/MonitorManager/MonitorManager.cpp:
        * orbsvcs/tests/unit/Notify/MC/Statistic/Statistic.cpp:
        * orbsvcs/tests/unit/Notify/MC/MonitorControlExt/MonitorControlExt.cpp:
        * orbsvcs/tests/Notify/MC/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/MC/test_monitor.cpp:
        * orbsvcs/examples/Notify/MC/monitor/monitor.cpp:

          - Restored support and testing for monitors storing string data.

          - Additions and fixes to #ifdef guards that ensure a
            successful build when monitors are disabled.

Thu Jun 26 12:30:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/Bug_2809_Regression/server.cpp:

          I miss-removed a const and a const_cast<>() yesterday. It
          would have been better to have the const_cast<>() in place
          around the initial strings, rather than the call point to
          highlight the reason for the cast in the first place. i.e:
          warning: deprecated conversion from string constant to ACE_TCHAR*
          Since our ORB_init() call doesn't actually modify the strings
          we can get away with the casting instead of buffer allocation
          and copying.

Thu Jun 26 11:04:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/client.cpp:
        * tests/DynAny_Test/driver.cpp:

          Fix slight miss-edits from yesterdays commits.

Thu Jun 26 02:37:59 UTC 2008  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Messaging/AMH_Response_Handler.cpp:

          Set the outbound GIOP version number to the correct value when
          sending a response from an AMH servant. The problem is that there
          are too many output CDR instances and AMH response handler uses
          a different one from the generated skeletons. This resolves the
          issue raised by Steve Vinoski and Ittehad Shaikh.

Wed Jun 25 15:35:59 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannelFactory.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannel.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannel.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannelFactory.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Timestamp_Monitor.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Dynamic_Statistic.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/MonitorManager.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Timestamp_Monitor.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMonitor_i.h:

          Added TAO_HAS_MONITOR_FRAMEWORK==1 guards or changed existing ones
          from ACE_HAS_MONITOR_FRAMEWORK==1.

Wed Jun 25 14:15:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/HandleExhaustion/client.cpp:
        * tests/HandleExhaustion/server.cpp:
        * tests/Bug_2424_Regression/client.cpp:
        * tests/Bug_2549_Regression/test.cpp:
        * tests/Multiple/client.cpp:
        * tests/RTCORBA/Activate_Object_Multiple_ORBs/test.cpp:
        * tests/Smart_Proxies/Collocation/main.cpp:
        * tests/Smart_Proxies/Collocation/Coll_Tester.h:
        * tests/Smart_Proxies/Collocation/Coll_Tester.cpp:
        * tests/Smart_Proxies/dtor/client.cpp:
        * tests/Smart_Proxies/dtor/server.cpp:

          Fix fuzz errors incorrect ACE_TMAIN/main use.

Wed Jun 25 13:55:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/FTRT_Event_Service/Gateway_Service/FTRTEC_Gateway_Service.cpp:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/server.cpp:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/client.cpp:
        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/driver.cpp:
        * orbsvcs/performance-tests/RTEvent/Roundtrip/server.cpp:
        * orbsvcs/performance-tests/RTEvent/Roundtrip/client.cpp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/server.cpp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/client.cpp:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/server.cpp:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/client.cpp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/server.cpp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/client.cpp:
        * orbsvcs/examples/ImR/Combined_Service/combined.cpp:
        * orbsvcs/examples/ImR/Combined_Service/test_server.cpp:
        * orbsvcs/examples/ImR/Combined_Service/controller.cpp:
        * orbsvcs/examples/ImR/Advanced/server_main.cpp:
        * orbsvcs/examples/ImR/Advanced/TestServer.h:
        * orbsvcs/examples/ImR/Advanced/TestServer.cpp:
        * orbsvcs/examples/ImR/Advanced/client_main.cpp:
        * orbsvcs/examples/ImR/Advanced/TestClient.h:
        * orbsvcs/examples/ImR/Advanced/TestClient.cpp:
        * orbsvcs/examples/ImR/Advanced/manager_main.cpp:
        * orbsvcs/examples/PSS/client.cpp:
        * orbsvcs/PSS/psdl_tao.cpp:

          Fix fuzz errors incorrect ACE_TMAIN/main use.

Wed Jun 25 13:45:29 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Move orbsvcs/examples/* and orbsvcs/tests/* from the list of
          AC_CONFIG_FILES that are generated unconditionally, to lists
          that are generated if examples and/or tests are configured.

Wed Jun 25 13:35:06 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Remove orbsvcs/examples/Notify/Timeout/Makefile and add
          orbsvcs/tests/Notify/Timeout/Makefile from list of makefiles
          to generate.

Wed Jun 25 13:05:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/Bug_1254_Regression/client.cpp:
        * tests/Bug_1254_Regression/server.cpp:
        * tests/Bug_2122_Regression/test.cpp:
        * tests/Bug_2124_Regression/test.cpp:
        * tests/Bug_2126_Regression/test.cpp:
        * tests/Bug_2134_Regression/Hello.cpp:
        * tests/Bug_2144_Regression/test.cpp:
        * tests/Bug_2174_Regression/client.cpp:
        * tests/Bug_2234_Regression/client.cpp:
        * tests/Bug_2234_Regression/server.cpp:
        * tests/Bug_2319_Regression/server.cpp:
        * tests/Bug_2345_Regression/server.cpp:
        * tests/Bug_2375_Regression/test.cpp:
        * tests/Bug_2542_Regression/bug_2542_regression.cpp:
        * tests/Bug_2560_Regression/client.cpp:
        * tests/Bug_2560_Regression/server.cpp:
        * tests/Bug_2678_Regression/server.cpp:
        * tests/Bug_2734_Regression/client.cpp:
        * tests/Bug_2768_Regression/client.cpp:
        * tests/Bug_2768_Regression/server.cpp:
        * tests/Bug_2791_Regression/client.cpp:
        * tests/Bug_2809_Regression/server.cpp:
        * tests/Bug_2826_Regression/bug_2826_regression.cpp:
        * tests/Bug_3163_Regression/server.cpp:
        * tests/Bug_3311_Regression/test.cpp:
        * tests/CDR/alignment.cpp:
        * tests/CDR/octet_sequence.cpp:
        * tests/CodeSets/simple/client.cpp:
        * tests/CodeSets/simple/server.cpp:
        * tests/CSD_Collocation/Collocation.cpp:
        * tests/CSD_Collocation/Collocation_Tester.h:
        * tests/CSD_Collocation/Collocation_Tester.cpp:
        * tests/DynAny_Test/driver.h:
        * tests/DynAny_Test/driver.cpp:
        * tests/Monitor/Marshal_Buffer/client.cpp:
        * tests/Monitor/Marshal_Buffer/server.cpp:
        * tests/MProfile_Forwarding/Manager.h:
        * tests/MProfile_Forwarding/Manager.cpp:
        * tests/ORT/server.cpp:

          Fix fuzz errors incorrect ACE_TMAIN/main use.

Wed Jun 25 11:49:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * examples/ior_corbaloc/corbaname_client.cpp:
        * examples/ior_corbaloc/server.cpp:
        * examples/ior_corbaloc/ior_corbaloc_client_i.cpp:
        * docs/tutorials/Quoter/On_Demand_Activation/client.cpp:
        * docs/tutorials/Quoter/On_Demand_Activation/server.cpp:
        * docs/tutorials/Quoter/AMI/client.cpp:
        * docs/tutorials/Quoter/AMI/server.cpp:
        * docs/tutorials/Quoter/Simple/Persistent/client.cpp:
        * docs/tutorials/Quoter/Simple/Impl-Repo/client.cpp:
        * docs/tutorials/Quoter/Simple/Client/client.cpp:
        * docs/tutorials/Quoter/Simple/Server/server.cpp:
        * docs/tutorials/Quoter/Simple/ImprovedServer/server.cpp:
        * docs/tutorials/Quoter/Event_Service/client.cpp:
        * docs/tutorials/Quoter/Event_Service/server.cpp:
        * docs/tutorials/Quoter/RT_Event_Service/client.cpp:
        * docs/tutorials/Quoter/RT_Event_Service/server.cpp:
        * docs/tutorials/Quoter/Naming_Service/client.cpp:
        * docs/tutorials/Quoter/Naming_Service/server.cpp:
        * orbsvcs/examples/PSS/client.cpp:
        * orbsvcs/tests/Interoperable_Naming/ncontextext_client_i.cpp:
        * orbsvcs/tests/IOR_MCast/server_i.cpp:
        * orbsvcs/tests/IOR_MCast/ior_mcast_client_i.cpp:

          Remove redundant "" 3rd parameter (orbID) from ORB_init() calls.

Wed Jun 25 11:03:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/Timeout/client.cpp:

          miss edited swapped ACE_TMAIN / ACE_TCHAR macros around!

Wed Jun 25 07:01:52 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/util/utl_global.cpp:
          Updated for the rename of gperf to ace_gperf as part of bugzilla
          3342

Tue Jun 24 15:22:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/Bug_1636_Regression/client.cpp:

          Fix fuzz errors incorrect ACE_TMAIN/main use.

Tue Jun 24 14:10:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/Bug_1383_Regression/SimpleServer.cpp:
        * tests/Bug_1383_Regression/SimpleClient.cpp:
        * tests/Bug_1639_Regression/struct_client.cpp:
        * tests/Bug_2543_Regression/bug_2543_regression.cpp:
        * tests/Bug_3198_Regression/bug_3198_regression.cpp:
        * tests/DynUnion_Test/DynUnionTest.cpp:
        * tests/ORB_Local_Config/Bug_2612/Test.cpp:
        * tests/POA/wait_for_completion/wait_for_completion.cpp:
        * tests/Timeout/client.cpp:

          Fix fuzz errors incorrect ACE_TMAIN/main use.

Tue Jun 24 13:37:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/Bug_1869_Regression/client.cpp:
        * tests/Bug_1869_Regression/server.cpp:
        * tests/Bug_2419_Regression/client.cpp:
        * tests/Collocation/Collocation.cpp:
        * tests/Collocation/Collocation_Tester.cpp:
        * tests/Collocation/Collocation_Tester.h:
        * tests/FL_Cube/client.cpp:
        * tests/Oneway_Timeouts/client.cpp:
        * tests/Oneway_Timeouts/server.cpp:
        * tests/Sequence_Unit_Tests/Unbounded_String.cpp:
        * tests/Sequence_Unit_Tests/Unbounded_Octet.cpp:
        * tests/Sequence_Unit_Tests/Bounded_String.cpp:
        * tests/Sequence_Unit_Tests/Unbounded_Simple_Types.cpp:
        * tests/Sequence_Unit_Tests/Bounded_Simple_Types.cpp:

          Fix fuzz errors incorrect ACE_TMAIN/main use.

Tue Jun 24 12:43:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * TAO_IDL/contrib/mcpp/testmain.cpp:
        * TAO_IDL/contrib/mcpp/cc1.cpp:
        * utils/monitor/monitor_client.cpp:

          Fix fuzz errors incorrect ACE_TMAIN/main use.

Tue Jun 24 12:02:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * docs/tutorials/Quoter/Naming_Service/server.cpp:
        * docs/tutorials/Quoter/Naming_Service/client.cpp:
        * docs/tutorials/Quoter/RT_Event_Service/server.cpp:
        * docs/tutorials/Quoter/RT_Event_Service/client.cpp:
        * docs/tutorials/Quoter/Event_Service/server.cpp:
        * docs/tutorials/Quoter/Event_Service/client.cpp:
        * docs/tutorials/Quoter/Simple/ImprovedServer/server.cpp:
        * docs/tutorials/Quoter/Simple/Server/server.cpp:
        * docs/tutorials/Quoter/Simple/Client/client.cpp:
        * docs/tutorials/Quoter/Simple/Impl-Repo/server.cpp:
        * docs/tutorials/Quoter/Simple/Impl-Repo/client.cpp:
        * docs/tutorials/Quoter/Simple/Persistent/server.cpp:
        * docs/tutorials/Quoter/Simple/Persistent/client.cpp:
        * docs/tutorials/Quoter/AMI/server.cpp:
        * docs/tutorials/Quoter/AMI/client.cpp:
        * docs/tutorials/Quoter/On_Demand_Activation/client.cpp:
        * docs/tutorials/Quoter/On_Demand_Activation/server.cpp:
        * performance-tests/Cubit/TAO/DII_Cubit/client.cpp:
        * performance-tests/POA/Demux/server.cpp:
        * performance-tests/POA/Demux/demux_test_server.cpp:
        * performance-tests/POA/Demux/demux_test_server.h:

          Fix fuzz errors incorrect ACE_TMAIN/main use.

Tue Jun 24 09:22:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/tests/Notify/Timeout/Timeout.mpc:
          Renamed the idl project name to avoid duplicating "tests/Timeout"
          to fix commit of Mon Jun 23 12:32:07 UTC 2008 Chad Elliott

Mon Jun 23 15:02:02 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/tests/unit/Notify/MC/NotificationServiceMonitor/NotificationServiceMonitor.cpp:
        * orbsvcs/tests/unit/Notify/MC/Statistic_Registry/Statistic_Registry.cpp:
        * orbsvcs/tests/unit/Notify/MC/Control/Control.cpp:
        * orbsvcs/tests/unit/Notify/MC/MonitorManager/MonitorManager.cpp:
        * orbsvcs/tests/unit/Notify/MC/MonitorManager/MonitorClient.cpp:
        * orbsvcs/tests/unit/Notify/MC/Statistic/Statistic.cpp:
        * orbsvcs/tests/unit/Notify/MC/MonitorControlExt/MonitorControlExt.cpp:
        * orbsvcs/tests/Notify/MC/test_monitor.cpp:

          Rearranged TAO_HAS_MONITOR_FRAMEWORK guards to allow main()
          to be seen regardless of the evaluation of the guards.

Mon Jun 23 12:39:23 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Oneway_Send_Timeouts/run_test.pl:

          Fixed a bug in the script where the wrong variable was used as the
          TestTarget object.

Mon Jun 23 12:32:07 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * NEWS:
        * orbsvcs/Notify_Service/Makefile.am:
        * orbsvcs/Notify_Service/Notify_Service.h:
        * orbsvcs/Notify_Service/Notify_Service.mpc:
        * orbsvcs/Notify_Service/Notify_Service.cpp:
        * orbsvcs/Notify_Service/README:

          Added a -Timeout option to allow the user to apply a relative
          round-trip timeout to the ORB.

        * configure.ac:
        * orbsvcs/tests/Notify/Makefile.am:
        * orbsvcs/tests/Notify/Timeout:
        * orbsvcs/tests/Notify/Timeout/Makefile.am:
        * orbsvcs/tests/Notify/Timeout/Notify_Structured_Push_Consumer.h:
        * orbsvcs/tests/Notify/Timeout/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Timeout/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Timeout/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Timeout/Timeout.mpc:
        * orbsvcs/tests/Notify/Timeout/run_test.pl:
        * orbsvcs/tests/Notify/Timeout/sig.idl:

          Added a test for this new feature.

Mon Jun 23 11:23:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * examples/ior_corbaloc/server.cpp:
        * examples/ior_corbaloc/client.cpp:
        * examples/ior_corbaloc/corbaname_client.cpp:
        * examples/PluggableUDP/tests/SimplePerformance/client.cpp:
        * examples/PluggableUDP/tests/SimplePerformance/server.cpp:

          Fix fuzz errors incorrect ACE_TMAIN/main use.

Mon Jun 23 10:30:36 UTC 2008  Vladimir Zykov  <vzykov@prismtech.com>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:

          Fixed a memory leak described in bug#3344. The fix was in adding
          a temporary CORBA::ValueBase_var that owns a pointer and deletes
          it if something goes wrong in the course of _tao_unmarshal.

Fri Jun 20 19:53:02 UTC 2008  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * docs/components.html: Fixed a minor formatting error.

Fri Jun 20 20:33:41 UTC 2008  Steve Huston  <shuston@riverace.com>

        * tests/AMH_Exceptions/run_test.pl:
        * tests/Param_Test/run_test.pl:
        * tests/Hello/run_test.pl:
        * tests/CallbackTest/run_test.pl:
        * tests/Codec/run_test.pl:
        * tests/Collocation/run_test.pl: Change test component references from
          names ("client", "server") to numbers per new convention.
          See ACE ChangeLog
          Fri Jun 20 20:25:12 UTC 2008  Steve Huston  <shuston@riverace.com>

        * tests/Bug_2702_Regression/run_test.pl:
        * tests/Oneway_Send_Timeouts/run_test.pl:
        * tests/Abstract_Interface/run_test.pl: Converted to use new test
          framework.

Fri Jun 20 14:32:52 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tests/OctetSeq/run_test.pl:

          Reverted my change from Mon Jun  9 12:28:24 UTC 2008.  The test
          framework is moving in a different direction.

Fri Jun 20 14:15:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/orbsvcs/Notify/MonitorControl/MonitorManager.h:

          Incorrect ACE_ARGV_T base character type corrected.

Fri Jun 20 12:23:19 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * examples/RTScheduling/DT_Creator.cpp:

          Fixed a memory leak and a time_t conversion warning.

        * examples/RTScheduling/Task_Stats.h:
        * examples/RTScheduling/Task_Stats.inl:
        * examples/RTScheduling/Task_Stats.cpp:

          Use time_t for time related data to avoid the need to cast.

        * examples/RTScheduling/Job_i.cpp:

          Removed static_cast's that are no longer needed.

Thu Jun 19 17:38:09 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tests/Reliable_Oneways/client.cpp:

          Remove redundant "" 3rd parameter (orbID) from ORB_init() calls.

Thu Jun 19 16:49:23 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * performance-tests/CSD_Strategy/TestApps/ClientApp.cpp:
        * performance-tests/CSD_Strategy/TestApps/ServerApp.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/server.cpp:
        * performance-tests/RTCorba/Oneways/Reliable/client.cpp:
        * performance-tests/RTCorba/Oneways/Reliable/server.cpp:
        * performance-tests/RTCorba/Thread_Pool/server.cpp:

          Remove redundant "" 3rd parameter (orbID) from ORB_init() calls.

Thu Jun 19 16:43:52 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tests/Bug_2319_Regression/server.cpp:
        * tests/Bug_2429_Regression/server.cpp:
        * tests/Bug_2560_Regression/client.cpp:
        * tests/CSD_Strategy_Tests/Broken/ClientApp.cpp:
        * tests/CSD_Strategy_Tests/Broken/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_1/ClientApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_1/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_2/ClientApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_2/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_3/ClientApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_3/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_4/ClientApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_4/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Static/ClientApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Static/ServerApp.cpp:
        * tests/DII_AMI_Forward/server.cpp:
        * tests/Explicit_Event_Loop/client.cpp:
        * tests/IDL_Test/main.cpp:
        * tests/LongDouble/client.cpp:
        * tests/LongDouble/server.cpp:
        * tests/ORB_init/Portspan/server.cpp:
        * tests/Objref_Sequence_Test/client.cpp:
        * tests/Objref_Sequence_Test/server.cpp:
        * tests/Permanent_Forward/StubTest.cpp:

          Remove redundant "" 3rd parameter (orbID) from ORB_init() calls.

Thu Jun 19 16:28:43 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/tests/Notify/Basic/IdAssignment.cpp:
        * tests/Bug_1535_Regression/bug_1535_regression.cpp:
        * tests/Bug_2935_Regression/middle.cpp:
        * tests/Bug_2935_Regression/sink.cpp:
        * tests/Bug_3276_Regression/client.cpp:
        * tests/CodeSets/simple/server.cpp:
        * tests/DiffServ/client.cpp:
        * tests/DiffServ/server.cpp:
        * tests/HandleExhaustion/client.cpp:
        * tests/HandleExhaustion/server.cpp:
        * tests/IORManipulation/IORTest.cpp:
        * tests/Leader_Followers/server.cpp:
        * tests/OBV/TC_Alignment/client.cpp:
        * tests/OBV/TC_Alignment/server.cpp:
        * tests/Portable_Interceptors/Bug_2133/client.cpp:
        * tests/Portable_Interceptors/Bug_2133/server.cpp:
        * tests/RTCORBA/Banded_Connections/client.cpp:
        * tests/RTCORBA/Banded_Connections/server.cpp:
        * tests/RTCORBA/Collocation/Collocation.cpp:
        * tests/RTCORBA/Destroy_Thread_Pool/Destroy_Thread_Pool.cpp:
        * tests/RTCORBA/Dynamic_Thread_Pool/server.cpp:
        * tests/RTCORBA/Priority_Inversion_With_Bands/server.cpp:
        * tests/RTCORBA/Thread_Pool/server.cpp:
        * tests/RTScheduling/Current/test.cpp:
        * tests/RTScheduling/DT_Spawn/test.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_client.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_server.cpp:
        * tests/RTScheduling/Thread_Cancel/test.cpp:
        * tests/RTScheduling/VoidData/test_client.cpp:
        * tests/Single_Read/server.cpp:
        * tests/Smart_Proxies/Benchmark/client.cpp:
        * tests/Smart_Proxies/Benchmark/server.cpp:
        * tests/Smart_Proxies/On_Demand/client.cpp:
        * tests/Smart_Proxies/On_Demand/server.cpp:
        * tests/Smart_Proxies/Policy/client.cpp:
        * tests/Smart_Proxies/Policy/server.cpp:
        * tests/Smart_Proxies/client.cpp:
        * tests/Smart_Proxies/dtor/client.cpp:
        * tests/Smart_Proxies/dtor/server.cpp:
        * tests/Smart_Proxies/server.cpp:
        * tests/Timed_Buffered_Oneways/server.cpp:

          Remove redundant "" 3rd parameter (orbID) from ORB_init() calls.

Thu Jun 19 15:34:28 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/AV/media_timer.h:
        * orbsvcs/orbsvcs/AV/media_timer.cpp:

          Use time_t when dealing with time related values, and thus avoid
          needing to cast.

Thu Jun 19 15:08:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/tests/BiDir_CORBALOC/TimeServer.cpp:
        * orbsvcs/tests/Bug_2377_Regression/uipmc_test.cpp:
        * orbsvcs/tests/Bug_2925_Regression/client.cpp:
        * orbsvcs/tests/Bug_2925_Regression/server.cpp:
        * orbsvcs/tests/Bug_3215_Regression/client.cpp:
        * orbsvcs/tests/Bug_3215_Regression/server.cpp:
        * orbsvcs/tests/Bug_3216_Regression/server.cpp:
        * orbsvcs/tests/Event/Mcast/AddrServer/Client.cpp:
        * orbsvcs/tests/FtRtEvent/consumer.cpp:
        * orbsvcs/tests/FtRtEvent/supplier.cpp:
        * orbsvcs/tests/InterfaceRepo/Application_Test/server.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/LB_server.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/LB_server.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/LB_server.cpp:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/client.cpp:
        * orbsvcs/tests/Notify/Basic/IdAssignment.cpp:
        * orbsvcs/tests/Notify/Basic/LifeCycle.cpp:
        * orbsvcs/tests/Notify/lib/Notify_Test_Client.cpp:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/RedGreen_Test.cpp:
        * orbsvcs/tests/Notify/Reconnecting/Consumer.cpp:
        * orbsvcs/tests/Notify/Reconnecting/Supplier.cpp:
        * orbsvcs/tests/Notify/XML_Persistence/main.cpp:
        * orbsvcs/tests/Security/InsecureReferences/test.cpp:
        * orbsvcs/tests/Security/mixed_security_test/client.cpp:

          Remove redundant "" 3rd parameter (orbID) from ORB_init() calls.

Thu Jun 19 14:46:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/examples/CosEC/Factory/FactoryClient.cpp:
        * orbsvcs/examples/CosEC/Factory/FactoryDriver.cpp:
        * orbsvcs/examples/CosEC/RtEC_Based/bin/RtEC_Based_CosEC.cpp:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Basic/Basic.cpp:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Multiple.cpp:
        * orbsvcs/examples/Notify/Filter/Filter.cpp:
        * orbsvcs/examples/Notify/Lanes/Consumer_Client.cpp:
        * orbsvcs/examples/Notify/Lanes/Supplier_Client.cpp:
        * orbsvcs/examples/Notify/Subscribe/Subscribe.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Consumer_Client.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Supplier_Client.cpp:
        * orbsvcs/FTRT_Event_Service/Factory_Service/FTRTEC_Factory_Service.cpp:
        * orbsvcs/LoadBalancer/LoadManager.cpp:
        * orbsvcs/LoadBalancer/LoadMonitor.cpp:
        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.cpp:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.cpp:
        * orbsvcs/orbsvcs/Event/EC_RTCORBA_Factory.cpp:

          Remove redundant "" 3rd parameter (orbID) from ORB_init() calls.

Thu Jun 19 14:25:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * examples/AMH/Sink_Server/Base_Server.cpp:
        * examples/AMH/Sink_Server/Client_Task.cpp:
        * examples/Buffered_AMI/server.cpp:
        * examples/Buffered_Oneways/server.cpp:
        * examples/CSD_Strategy/ThreadPool/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool2/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool3/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool3/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool4/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool5/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool5/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool6/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool6/ServerApp.cpp:
        * examples/RTScheduling/Starter.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler/test.cpp:
        * examples/RTScheduling/MIF_Scheduler/test.cpp:
        * examples/TypeCode_Creation/main.cpp:

          Remove redundant "" 3rd parameter (orbID) from ORB_init() calls.

Thu Jun 19 13:47:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/Portable_Interceptors/ForwardRequest/Client_Request_Interceptor.cpp:
        * tests/Portable_Interceptors/Redirection/Client_Request_Interceptor.cpp:
        * tests/RTCORBA/Linear_Priority/client.cpp:
        * tests/RTCORBA/Linear_Priority/server.cpp:
        * tests/RTCORBA/Persistent_IOR/client.cpp:
        * tests/RTCORBA/Persistent_IOR/server.cpp:
        * tests/RTCORBA/Policies/Policies.cpp:
        * tests/RTCORBA/Policies_Combinations/client.cpp:
        * tests/RTCORBA/Policies_Combinations/server.cpp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/client.cpp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/server.cpp:
        * tests/Server_Connection_Purging/client2.cpp:
        * tests/Single_Read/client.cpp:
        * tests/Timed_Buffered_Oneways/client.cpp:

          Correct Fuzz errors concerning Wide character build compatabily
          with ORB_init().

Thu Jun 19 13:07:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * performance-tests/RTCorba/Multiple_Endpoints/Common/test_i.cpp:
        * tests/Bug_2234_Regression/client.cpp:
        * tests/Bug_2234_Regression/server.cpp:
        * tests/Bug_2935_Regression/source.cpp:
        * tests/Bug_3276_Regression/Manager.cpp:
        * tests/Bug_3276_Regression/Manager.h:
        * tests/CDR/basic_types.cpp:
        * tests/CDR/tc.cpp:
        * tests/MProfile_Forward/Manager.cpp:
        * tests/NestedUpcall/Simple/client.cpp:
        * tests/NestedUpcall/Simple/server.cpp:
        * tests/NestedUpcall/Simple/simple-client.cpp:
        * tests/POA/Loader/Server_Manager.cpp:
        * tests/POA/On_Demand_Loading/Server_Manager.cpp:

          Correct Fuzz errors concerning Wide character build compatabily
          with ORB_init().

Thu Jun 19 12:25:02 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/AV/media_timer.cpp:

          Reverted the cast altogether at Johnny Willemsen's request.

Thu Jun 19 11:31:59 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/tests/unit/Notify/MC/Statistic_Registry/Statistic_Registry.cpp:
        * orbsvcs/tests/unit/Notify/MC/Statistic/Statistic.cpp:

          Added TAO_HAS_MONITOR_FRAMEWORK==1 guards to these files.

Thu Jun 19 11:31:45 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/AV/media_timer.cpp:

          Changed truncate_cast to static_cast.  Borland can't handle the
          template.

Thu Jun 19 11:25:58 UTC 2008  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/POA/EndpointPolicy/server.cpp:

          Reword the report of a successful rejection of defaulted hotnames.

Thu Jun 19 11:13:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/tests/InterfaceRepo/Latency_Test/Latency_Query_Client.cpp:
        * orbsvcs/tests/InterfaceRepo/Persistence_Test/Ptest.cpp:
        * orbsvcs/tests/Time/Client_i.cpp:
        * performance-tests/Anyop/anyop.cpp:
        * performance-tests/POA/Object_Creation_And_Registration/registration.cpp:
        * performance-tests/Protocols/distributor.cpp:
        * performance-tests/Protocols/receiver.cpp:
        * performance-tests/Protocols/sender.cpp:

          Correct Fuzz errors concerning Wide character build compatabily
          with ORB_init().

Wed Jun 18 17:05:50 UTC 2008  William R. Otte  <wotte@CHELESTRA>

        * TAO_IDL/fe/lex.yy.cpp:

          Replaced a bunch of stuff carelessly discarded when this file
          was last regenerated.

Wed Jun 18 15:20:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/tests/Bug_1334_Regression/client.cpp:
        * orbsvcs/tests/Bug_2247_Regression/Manager.cpp:
        * orbsvcs/tests/Bug_2248_Regression/client.cpp:
        * orbsvcs/tests/FaultTolerance/IOGR/Manager.cpp:
        * orbsvcs/tests/ImplRepo/scale/client.cpp:
        * orbsvcs/tests/InterfaceRepo/Application_Test/ifr_dii_client.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/main.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/admin_client.cpp:

          Correct Fuzz errors concerning Wide character build compatabily
          with ORB_init().

Wed Jun 18 14:48:56 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * examples/RTScheduling/DT_Creator.h:
        * examples/RTScheduling/DT_Creator.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_DT_Creator.h:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_DT_Creator.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Task.h:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Task.cpp:
        * examples/RTScheduling/MIF_Scheduler/MIF_DT_Creator.h:
        * examples/RTScheduling/MIF_Scheduler/MIF_DT_Creator.cpp:
        * examples/RTScheduling/MIF_Scheduler/MIF_Task.h:
        * examples/RTScheduling/MIF_Scheduler/MIF_Task.cpp:
        * examples/RTScheduling/Thread_Task.h:
        * examples/RTScheduling/Thread_Task.cpp:

          Use time_t where time is concerned to avoid so many casts to int.

Wed Jun 18 14:40:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/orbsvcs/LoadBalancing/LB_IORInterceptor.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.cpp:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/distributer.cpp:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/receiver.cpp:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/sender.cpp:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/receiver.cpp:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/sender.cpp:
        * orbsvcs/tests/AVStreams/Component_Switching/distributer.cpp:
        * orbsvcs/tests/AVStreams/Component_Switching/receiver.cpp:
        * orbsvcs/tests/AVStreams/Component_Switching/sender.cpp:
        * orbsvcs/tests/AVStreams/Modify_QoS/receiver.cpp:
        * orbsvcs/tests/AVStreams/Modify_QoS/sender.cpp:
        * orbsvcs/tests/AVStreams/Multiple_Flows/receiver.cpp:
        * orbsvcs/tests/AVStreams/Multiple_Flows/sender.cpp:
        * orbsvcs/tests/AVStreams/Pluggable_Flows_Protocol/receiver.cpp:
        * orbsvcs/tests/AVStreams/Pluggable_Flows_Protocol/sender.cpp:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/distributer.cpp:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/receiver.cpp:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/sender.cpp:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/receiver.cpp:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/sender.cpp:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/receiver.cpp:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/sender.cpp:

          Correct Fuzz errors concerning Wide character build compatabily
          with ORB_init().

Wed Jun 18 14:39:38 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2494_Regression/client.cpp:

          Use .in() on a CORBA::String_var to avoid warnings from older gcc
          compilers.

Wed Jun 18 14:15:04 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * examples/Load_Balancing/Load_Balancer_i.cpp:
        * examples/Load_Balancing_persistent/Load_Balancer_i.cpp:
        * examples/Logging/Logging_Test_i.cpp:
        * examples/OBV/Typed_Events/Event_Types_impl.cpp:
        * orbsvcs/tests/Event/Basic/Observer.cpp:
        * orbsvcs/tests/ImplRepo/airplane_i.cpp:
        * orbsvcs/tests/Interoperable_Naming/ncontextext_client_i.cpp:
        * examples/RTScheduling/Job_i.cpp:
        * examples/RTScheduling/Starter.cpp:
        * examples/Simple/time-date/Time_Date_i.cpp:
        * orbsvcs/ImplRepo_Service/Locator_Options.cpp:
        * orbsvcs/examples/ImR/Advanced/TestClient.cpp:
        * orbsvcs/examples/RtEC/Kokyu/Service.cpp:

          Added static_cast's to avoid warnings from vc8.

        * examples/PluggableUDP/tests/SimplePerformance/client.cpp:

          Use the correct type to avoid warnings from vc8.

        * orbsvcs/orbsvcs/AV/RTCP.cpp:
        * orbsvcs/orbsvcs/AV/media_timer.cpp:

          Added truncate_cast's to avoid warnings from vc8.

Wed Jun 18 13:50:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * examples/Buffered_AMI/client.cpp:
        * examples/Buffered_Oneways/client.cpp:
        * examples/Callback_Quoter/Consumer_Handler.cpp:
        * examples/Callback_Quoter/Supplier_i.cpp:
        * examples/Event_Comm/Consumer_Handler.cpp:
        * examples/Event_Comm/Notifier_Handler.cpp:
        * examples/Persistent_Grid/Simple_util.cpp:
        * examples/Simple/Simple_util.cpp:

          Correct Fuzz errors concerning Wide character build compatabily
          with ORB_init().

Wed Jun 18 13:22:00 UTC 2008  Johnny Willemsen <jwillemsen@remedy.nl>

        * tests/Hello/run_test.pl:
          Use ProcessStopWaitInterval

Wed Jun 18 13:22:32 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Oneway_Timeouts/run_test.pl:

          Corrected the first minimum time for the new behavior of delayed
          buffering.

Wed Jun 18 13:04:00 UTC 2008  Johnny Willemsen <jwillemsen@remedy.nl>

        * tests/CallbackTest/run_test.pl:
          DottedDecimalAddresses is not required for this test. Don't duplicate
          ior filename

Wed Jun 18 12:40:00 UTC 2008  Johnny Willemsen <jwillemsen@remedy.nl>

        * tao/Compression.mpc:
          Add new Compression_include.pidl

        * tao/Compression/Compression.pidl:
          Add CompressionIdList typedef

        * tao/Compression/Compression_include.pidl:
          New file for people that want to include Compression.pidl

        * tao/GIOP_Message_State.cpp:
        * tao/GIOP_Message_State.h:
        * tao/GIOP_Message_State.inl:
          Changed more_fragents to a bool. Use static_cast for the message
          type instead of using a helper for just the cast, removed that
          helper method. Doxygen changes

        * tao/Queued_Data.h:
        * tao/Queued_Data.cpp:
        * tao/Queued_Data.inl:
          Changed more_fragments to bool and doxygen changes

Wed Jun 18 11:58:00 UTC 2008  Johnny Willemsen <jwillemsen@remedy.nl>

        * tao/Unbounded_Octet_Sequence_T.h:
        * tao/Transport.cpp:
        * tao/Compression/zlib/ZlibCompressor.cpp:
          Layout change

        * tao/TAO_Server_Request.h:
          Doxygen changes

        * tao/Service_Context.cpp:
        * tao/Service_Context.inl:
          Moved set_context to inline file

        * tao/Invocation_Base.h:
          Made is_remote_request_ a const member

        * tao/GIOP_Message_Generator_Parser_12.h:
          Layout and doxygen change

        * tao/GIOP_Message_Generator_Parser_10.cpp:
          Layout and use ! instead of compare with false

Wed Jun 18 10:07:00 UTC 2008  Johnny Willemsen <jwillemsen@remedy.nl>

        * tao/TAO_Internal.cpp:
          Add docu to endif

        * tao/Tagged_Profile.h:
        * tao/Tagged_Components.h:
        * tao/Object_T.h:
        * tao/Strategies/UIOP_Profile.h:
        * tao/Incoming_Message_Stack.h:
          Doxygen changes

Wed Jun 18 09:55:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/Param_Test/anyop.cpp:

          typo miss-edit lost a bracket.

Tue Jun 17 15:20:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/InterOP-Naming/INS_test_client.cpp:
        * tests/Portable_Interceptors/Bug_3079/Client_Request_Interceptor.cpp:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/Collocated_Test.cpp:

          Wide character build fixes.

Tue Jun 17 14:54:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/Leader_Followers/client.cpp:
        * tests/Nested_Event_Loop/client.cpp:
        * tests/Param_Test/anyop.cpp:
        * tests/POA/Generic_Servant/client.cpp:
        * tests/POA/MT_Servant_Locator/MT_Servant_Locator.cpp:
        * tests/POA/Nested_Non_Servant_Upcalls/Nested_Non_Servant_Upcalls.cpp:
        * tests/POA/NewPOA/NewPOA.cpp:
        * tests/POA/POA_BiDir/POA_BiDir.cpp:
        * tests/POA/Persistent_ID/client.cpp:
        * tests/POA/Reference_Counted_Servant/server.cpp:
        * tests/OctetSeq/OctetSeq.cpp:

          Wide character build fixes.

Tue Jun 17 13:55:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * examples/Borland/ChatClientWnd.cpp:
        * orbsvcs/CosEvent_Service/CosEvent_Service.cpp:
        * orbsvcs/Naming_Service/Naming_Service.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.cpp:
        * orbsvcs/orbsvcs/Event/EC_RTCORBA_Factory.cpp:
        * orbsvcs/tests/CosEvent/Timeout/TimeoutTestMain.cpp:
        * tests/Bug_3315_Regression/main.cpp:
        * tests/Bug_3321_Regression/main.cpp:
        * tests/CSD_Collocation/Collocation_Tester.cpp:
        * tests/File_IO/File_i.cpp:
        * tests/Object_Loader/driver.cpp:
        * tests/POA/Forwarding/server.cpp:
        * tests/Portable_Interceptors/Bug_1559/client_interceptor.cpp:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/interceptor.cpp:
        * tests/Portable_Interceptors/Service_Context_Manipulation/client_interceptor.cpp:
        * tests/Reliable_Oneways/client.cpp:
        * tests/RTCORBA/ORB_init/ORB_init.cpp:
        * tests/RTCORBA/Client_Propagated/interceptors.cpp:
        * tests/TransportCurrent/IIOP/IIOP_Server_Request_Interceptor.cpp:

          Wide character build fixes.

Tue Jun 17 13:37:09 UTC 2008  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * docs/configurations.html: Zapped the discussion of GIOPlite
          since it's no longer supported.  Thanks to Abdul Sowayan for
          reporting this.

Tue Jun 17 09:30:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * TAO_IDL/contrib/mcpp/main.cpp:
        * TAO_IDL/contrib/mcpp/system.cpp:

          Fuzz errors, Untabify.

Mon Jun 16 18:50:55 UTC 2008  William R. Otte  <wotte@dre.vanderbilt.edu>

        * MPC/config/tao_idl_mcpp.mpb:
        * TAO_IDL/contrib/mcpp/main.cpp:
        * TAO_IDL/contrib/mcpp/noconfig.H:
        * TAO_IDL/contrib/mcpp/support.cpp:
        * TAO_IDL/contrib/mcpp/system.cpp:

          Fixes for mcpp on Windows.

Mon Jun 16 18:13:21 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * examples/mfc/Resource.h:
        * orbsvcs/examples/ORT/Gateway.idl:
        * orbsvcs/examples/ORT/sum_server.idl:
        * tests/POA/EndpointPolicy/server.cpp:

          Untabify.

Mon Jun 16 17:51:31 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tao/EndpointPolicy/EndpointPolicy_Factory.cpp:
        * tao/EndpointPolicy/Endpoint_Value_Impl.h:
        * tao/EndpointPolicy/IIOPEndpointValue_i.h:
        * tao/EndpointPolicy/IIOPEndpointValue_i.cpp:

          Untabify.

Mon Jun 16 14:01:58 UTC 2008  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/EndpointPolicy/EndpointPolicy_Factory.cpp:
        * tao/EndpointPolicy/Endpoint_Value_Impl.h:
        * tao/EndpointPolicy/IIOPEndpointValue_i.h:
        * tao/EndpointPolicy/IIOPEndpointValue_i.cpp:

          Add support for limiting the use of defaulted hostnames in IIOP
          endpoints to only be allowed when using multiple protocols on
          the ORB. The motivation for this limit is described in bugzilla
          3256.

        * tests/POA/EndpointPolicy/README:
        * tests/POA/EndpointPolicy/multi_prot.conf:
        * tests/POA/EndpointPolicy/run_test_dh.pl:
        * tests/POA/EndpointPolicy/run_test_lh.pl:
        * tests/POA/EndpointPolicy/server.cpp:

          Extend the test to accomodate the new capability of the
          EndpointPolicy with IIOP endpoints. The lh variant of the
          test uses localhost endpoints which are not ordinarily tested.
          This case is not described specifically in bug 3256.

Mon Jun 16 13:40:13 UTC 2008  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/ORB_Local_Config/Bug_3049/Test.cpp:
        * tests/ORB_Local_Config/Bug_3049/a.conf:

          Replace UIOP with something else so that the test can run on
          windows. Also update the test to make explicit the verification
          that an otherwise local configuration is shared between two ORBs.

Mon Jun 16 12:45:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * performance-tests/Protocols/test.idl:

          Un-tabify.

Mon Jun 16 11:31:27 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tests/CallbackTest/run_test.pl:

          Fixed a couple of typos in the test.

Mon Jun 16 11:25:06 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * performance-tests/Cubit/TAO/MT_Cubit/Util_Thread.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/server.cpp:
        * performance-tests/Protocols/receiver.cpp:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/Roundtrip.h:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/client.cpp:
        * performance-tests/Sequence_Latency/DII/client.cpp:
        * performance-tests/Sequence_Latency/DSI/Roundtrip.cpp:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/client.cpp:

          Untabify.

Mon Jun 16 10:30:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/orbsvcs/SecurityLevel1.idl:

          Un-tabify.

Mon Jun 16 10:20:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/PSS/PSDL_l.cpp:
        * orbsvcs/PSS/PSDL_y.h:
        * orbsvcs/PSS/PSDL_y.cpp:

          Re-enable Fuzz check for tabs in the files above and untabified them.

        * orbsvcs/orbsvcs/Trader/Constraint_l.cpp:
        * orbsvcs/tests/Concurrency/lex.CC_command.cpp:
        * orbsvcs/tests/Concurrency/CC_command.tab.cpp:
        * orbsvcs/tests/Concurrency/CC_command.tab.h:
        * orbsvcs/orbsvcs/Log/Log_Persistence_Strategy.h:
        * orbsvcs/orbsvcs/Log/EventLog_i.h:
        * orbsvcs/orbsvcs/Log/Hash_logStore.h:
        * orbsvcs/orbsvcs/Log/Log_i.h:
        * orbsvcs/orbsvcs/Log/BasicLog_i.h:
        * orbsvcs/orbsvcs/Log/NotifyLog_i.h:
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.h:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.h:
        * orbsvcs/orbsvcs/Time/Timer_Helper.h:
        * orbsvcs/tests/Log/Basic_log_Test/Basic_Log_Test.h:
        * orbsvcs/orbsvcs/SecurityLevel2.idl:
        * orbsvcs/orbsvcs/Security.idl:
        * orbsvcs/orbsvcs/CosLifeCycle.idl:
        * orbsvcs/orbsvcs/DsEventLogAdmin.idl:
        * orbsvcs/orbsvcs/CosNaming.idl:
        * orbsvcs/orbsvcs/DsNotifyLogAdmin.idl:
        * orbsvcs/orbsvcs/CosTrading.idl:
        * orbsvcs/orbsvcs/DsLogNotification.idl:
        * orbsvcs/orbsvcs/RTEventLogAdmin.idl:
        * orbsvcs/tests/Bug_2248_Regression/test.idl:
        * orbsvcs/tests/InterfaceRepo/Bug_3155_Regression/test/idl:
        * tests/Bug_2188_Regression/broken.idl:
        * tests/OBV/Supports/Supports_Test.idl:
        * tests/Bug_2417_Regression/publisher.idl:
        * tests/Bug_2417_Regression/subscriber.idl:
        * tests/DII_AMI_Forward/test.idl:
        * tests/IDL_Test/constants.idl:
        * tests/IDL_Test/repo_id_mod.idl:
        * tests/IDL_Test/array.idl:
        * tests/IDL_Test/interface.idl:
        * tests/Bug_1383_Regression/callee.idl:
        * tests/Bug_1383_Regression/simple.idl:

          Un-tabify.

Mon Jun 16 00:51:02 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tests/AMI/ami_test_i.h:
        * tests/Bug_1361_Regression/Server_Thread_Pool.cpp:
        * tests/Bug_1383_Regression/SimpleClient.cpp:
        * tests/Bug_1383_Regression/SimpleServer.cpp:
        * tests/Bug_1383_Regression/simple_i.h:
        * tests/Bug_1383_Regression/simple_i.cpp:
        * tests/Bug_1676_Regression/Hello.h:
        * tests/Bug_1676_Regression/Hello.cpp:
        * tests/Bug_1676_Regression/client.cpp:
        * tests/Bug_2084_Regression/Client_Task.cpp:
        * tests/Bug_2243_Regression/ORB_object_to_string.cpp:
        * tests/Bug_2289_Regression/client.cpp:
        * tests/Bug_2319_Regression/server.cpp:
        * tests/Bug_2417_Regression/client.cpp:
        * tests/Bug_2417_Regression/publisher_impl.h:
        * tests/Bug_2417_Regression/server.cpp:
        * tests/Bug_2417_Regression/subscriber_impl.h:
        * tests/Bug_2417_Regression/subscriber_impl.cpp:
        * tests/Bug_2678_Regression/server.cpp:
        * tests/Bug_2768_Regression/client.cpp:
        * tests/Bug_2768_Regression/server.cpp:
        * tests/Bug_2805_Regression/ami_test_i.h:
        * tests/Bug_933_Regression/MessengerClient.cpp:
        * tests/CDR/growth.cpp:
        * tests/COIOP/Client_Task.cpp:
        * tests/CodeSets/simple/client.cpp:
        * tests/Collocation_Exception_Test/Client_Task.cpp:
        * tests/Collocation_Oneway_Tests/Client_Task.cpp:
        * tests/Collocation_Tests/Client_Task.cpp:
        * tests/DII_AMI_Forward/server.cpp:
        * tests/DII_AMI_Forward/test_i.h:
        * tests/DII_AMI_Forward/test_i.cpp:
        * tests/DII_Collocation_Tests/oneway/Client_Task.cpp:
        * tests/DII_Collocation_Tests/twoway/Client_Task.cpp:
        * tests/Faults/ping.cpp:
        * tests/HandleExhaustion/server.cpp:
        * tests/ICMG_Any_Bug/Hello.cpp:
        * tests/ICMG_Any_Bug/server.cpp:
        * tests/MProfile/client.cpp:
        * tests/Monitor/Marshal_Buffer/client.cpp:
        * tests/Monitor/Marshal_Buffer/server.cpp:
        * tests/OBV/Collocated/Forward/Client_Task.cpp:
        * tests/OBV/Supports/Supports_Test_impl.cpp:
        * tests/OBV/Supports/server.cpp:
        * tests/Portable_Interceptors/Bug_1559/client_interceptor.cpp:
        * tests/Portable_Interceptors/Bug_2510_Regression/client.cpp:
        * tests/RTCORBA/common_args.cpp:
        * tests/RTScheduling/DT_Spawn/Thread_Action.h:
        * tests/RTScheduling/DT_Spawn/test.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_client.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_server.cpp:
        * tests/RTScheduling/Thread_Cancel/test.cpp:
        * tests/RTScheduling/VoidData/test.h:
        * tests/Timed_Buffered_Oneways/client.cpp:
        * tests/objref_comparison_test/main.cpp:

          Untabify.

Sun Jun 15 15:59:40 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/PSS/PSDL_l.cpp:
        * orbsvcs/PSS/PSDL_y.h:
        * orbsvcs/PSS/PSDL_y.cpp:

          Disable Fuzz check for tabs in the files above. There are way too
          many tabs to fix.

Sun Jun 15 15:49:22 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/orbsvcs/Time_Utilities.h:
        * orbsvcs/orbsvcs/Time_Utilities.inl:

          Untabify.

Sun Jun 15 15:32:10 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:
        * orbsvcs/orbsvcs/Sched/Scheduler_Generic.cpp:
        * orbsvcs/orbsvcs/Security/SL2_SecurityManager.h:
        * orbsvcs/orbsvcs/Security/SL2_SecurityManager.cpp:
        * orbsvcs/tests/Bug_2248_Regression/client.cpp:
        * orbsvcs/tests/Security/mixed_security_test/client.cpp:
        * orbsvcs/tests/Security/mixed_security_test/server.cpp:

          Untabify.

Sun Jun 15 15:32:01 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:
        * orbsvcs/orbsvcs/Sched/Scheduler_Generic.cpp:
        * orbsvcs/orbsvcs/Security/SL2_SecurityManager.h:
        * orbsvcs/orbsvcs/Security/SL2_SecurityManager.cpp:
        * orbsvcs/tests/Bug_2248_Regression/client.cpp:
        * orbsvcs/tests/Security/mixed_security_test/client.cpp:
        * orbsvcs/tests/Security/mixed_security_test/server.cpp:

          Untabify.

Sun Jun 15 13:35:36 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/orbsvcs/AV/SCTP_SEQ.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS_T.inl:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.inl:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS_T.inl:
        * orbsvcs/orbsvcs/Time_Utilities.h:
        * orbsvcs/orbsvcs/Time_Utilities.inl:

          Untabify.

Sun Jun 15 12:36:37 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/PSS/PSDL_Node.cpp:
        * orbsvcs/PSS/PSDL_Struct_Visitor.cpp:

          Untabify.

Sun Jun 15 01:28:01 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Connection_Manager.cpp:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/distributer.cpp:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/receiver.cpp:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/sender.cpp:
        * orbsvcs/tests/AVStreams/Full_Profile/ftp.cpp:
        * orbsvcs/tests/AVStreams/Pluggable/server.cpp:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Receiver_Stats.h:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Receiver_Stats.cpp:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/receiver.cpp:
        * orbsvcs/tests/Bug_1630_Regression/testclient.cpp:
        * orbsvcs/tests/Bug_2248_Regression/client.h:
        * orbsvcs/tests/Bug_2248_Regression/server.cpp:
        * orbsvcs/tests/Bug_2248_Regression/test_i.cpp:
        * orbsvcs/tests/COIOP_Naming_Test/Client_Task.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Data.cpp:
        * orbsvcs/tests/FT_App/FT_Client.cpp:
        * orbsvcs/tests/FT_App/FT_Creator.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicationManagerController.cpp:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/Latency_Query_Client.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/client.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/server.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Factory.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/LB_server.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/server.cpp:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/client.cpp:
        * orbsvcs/tests/Log/Basic_Log_Test/client.cpp:
        * orbsvcs/tests/Security/Bug_2908_Regression/Client_Task.cpp:
        * orbsvcs/tests/Security/mixed_security_test/Foo_i.cpp:

          Untabify.

Sat Jun 14 15:41:37 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/orbsvcs/Event/EC_Bitmask_Filter.cpp:
        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/BasicLog_i.cpp:
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/EventLog_i.h:
        * orbsvcs/orbsvcs/Log/EventLog_i.cpp:
        * orbsvcs/orbsvcs/Log/Hash_Iterator_i.h:
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.h:
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:
        * orbsvcs/orbsvcs/Log/Iterator_i.h:
        * orbsvcs/orbsvcs/Log/Iterator_i.cpp:
        * orbsvcs/orbsvcs/Log/LogActivator.h:
        * orbsvcs/orbsvcs/Log/LogActivator.cpp:
        * orbsvcs/orbsvcs/Log/LogMgr_i.h:
        * orbsvcs/orbsvcs/Log/LogMgr_i.cpp:
        * orbsvcs/orbsvcs/Log/LogRecordStore.h:
        * orbsvcs/orbsvcs/Log/LogStore.h:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLog_i.h:
        * orbsvcs/orbsvcs/Log/NotifyLog_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.h:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.cpp:
        * orbsvcs/orbsvcs/Notify/Timer_Reactor.cpp:
        * orbsvcs/orbsvcs/Time/Timer_Helper.h:
        * orbsvcs/orbsvcs/Time_Utilities.h:
        * orbsvcs/orbsvcs/Time_Utilities.inl:
        * orbsvcs/orbsvcs/Trader/Constraint_Interpreter.h:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.h:

          Untabify.

Sat Jun 14 14:37:01 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/orbsvcs/AV/QoS_UDP.h:
        * orbsvcs/orbsvcs/AV/QoS_UDP.cpp:
        * orbsvcs/orbsvcs/AV/RTCP_Packet.cpp:
        * orbsvcs/orbsvcs/AV/SCTP_SEQ.h:
        * orbsvcs/orbsvcs/AV/UDP.cpp:
        * orbsvcs/orbsvcs/AV/default_resource.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.h:
        * orbsvcs/orbsvcs/Event/EC_Bitmask_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.cpp:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.inl:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxySupplier.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/IFRService/AbstractInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtAbstractInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtLocalInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS_T.inl:

          Untabify.

Fri Jun 13 18:16:33 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Param_Test/run_test.pl:

          Use the correct ior file variable in the server command line
          options.

Fri Jun 13 10:37:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/TransportCurrent/lib/Client_Request_Interceptor.cpp:

          Didn't provide the full change!

Fri Jun 13 03:53:52 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Add -p argument to mkdir for tests/Bug_2399_Regression/mytmp
          directory.  Avoids warning/error when configure is run more
          than once in a given directory.

Thu Jun 12 16:58:20 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Makefile.am:

          Added new files from Tue Jun 10 14:53:00 UTC 2008.

Thu Jun 12 16:27:53 UTC 2008  Steve Huston  <shuston@riverace.com>

        * tests/AMH_Exceptions/run_test.pl:
        * tests/Param_Test/run_test.pl:
        * tests/Hello/run_test.pl:
        * tests/CallbackTest/run_test.pl:
        * tests/Codec/run_test.pl:
        * tests/Collocation/run_test.pl: Adjusted to work with new scheme to
          run pieces of tests on other machines/platforms. See ACE ChangeLog
          Thu Jun 12 16:04:33 UTC 2008  Steve Huston  <shuston@riverace.com>

Thu Jun 12 15:17:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/TransportCurrent/lib/Client_Request_Interceptor.cpp:
        * tests/TransportCurrent/lib/Server_Request_Interceptor.cpp:
        * tests/Default_Servant2/File_i.cpp:
        * tests/POA/Bug_2511_Regression/server.cpp:
        * tests/POA/Excessive_Object_Deactivations/Excessive_Object_Deactivations.cpp:
        * tests/POA/Etherealization/Etherealization.cpp:
        * tests/POA/Explicit_Activation/server.cpp:
        * tests/POA/DSI/client.cpp:
        * tests/POA/Adapter_Activator/server.cpp:

          Wide character build disambiguate ORB_init () calls.

Thu Jun 12 13:04:43 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/Locator_Options.cpp:

          Added another cast to disambiguate the msec() call.

Thu Jun 12 12:31:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * TAO_IDL/driver/drv_mcpp_preproc.cpp:

          Mangled yesterdays conversion, missing a ) and changed const
          instead of char to ACE_TCHAR. Corrected these mistakes.

Wed Jun 11 20:50:15 UTC 2008  Chris Cleeland  <cleeland@ociweb.com>

        * tests/ORB_Local_Config/Bug_3049/a.conf:

          Committing this for Phil Mesnier, who was having problems with
          subversion and this file for some reason.

Wed Jun 11 19:07:03 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Profile_Transport_Resolver.cpp:

          After connecting a transport, determine if flushing needs to take
          place and indicate it to the transport via a flag.

        * tao/Transport.h:
        * tao/Transport.inl:

          Added a flag and mutator to determine if flushing needs to occur
          after opening a transport.

        * tao/Transport.cpp:

          Schedule flushing if indicated by the transport resolver.

        * tests/Oneway_Timeouts/run_test.pl:

          Adjust the delay sync time for the above change.

Wed Jun 11 16:07:34 UTC 2008  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/ORB.cpp:

          Fix the test used to determine that the parameter passed to
          the -ORBGestalt option is another ORBid. This feature was
          originally added to resolve bug 3049.

        * tests/ORB_Local_Config/Bug_3049:

          Added a test case to verify the fix for Bug 3049.

Wed Jun 11 15:54:42 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2494_Regression/client.cpp:

          Use .in() on CORBA::String_var to avoid warnings from gcc.

Wed Jun 11 15:51:43 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tao/PI/DLL_Resident_ORB_Initializer.h:

          Moved #include to avoid the #pragma once is obsolete warning.

Wed Jun 11 15:45:22 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Timed_Buffered_Oneways/test_i.cpp:

          Added another cast to disambiguate the msec() call.

Wed Jun 11 14:03:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Factory.cpp:

          Replace ACE_LIB_TEXT with ACE_TEXT from previous commit of:
          Tue Jun 10 14:53:00 UTC 2008  Ciju John

Wed Jun 11 12:27:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tao/PI/DLL_Resident_ORB_Initializer.cpp:
        * tao/PI/DLL_Resident_ORB_Initializer.h:

          Remove exception specifications altogether to correct FUZZ
          errors from my correction to the previous commit of:
          Tue Jun 10 14:53:00 UTC 2008  Ciju John

Wed Jun 11 12:17:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/driver/drv_mcpp_preproc.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:

          A few more wide character conversions required to get
          the tao_idl working on wide character builds.

Wed Jun 11 11:20:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tao/PI/CSD_Framework/CSD_Framework_Loader.cpp:

          Replace ACE_LIB_TEXT with ACE_TEXT from previous commit of:
          Tue Jun 10 14:53:00 UTC 2008  Ciju John

Wed Jun 11 11:17:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tao/PI/DLL_Resident_ORB_Initializer.cpp:

          Replace ACE_LIB_TEXT with ACE_TEXT from previous commit of:
          Tue Jun 10 14:53:00 UTC 2008  Ciju John

Wed Jun 11 11:07:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tao/PI/DLL_Resident_ORB_Initializer.cpp:
        * tao/PI/DLL_Resident_ORB_Initializer.h:

          Remove prepricated ACE_THROW_SPEC macro and correct filename
          header to correct FUZZ errors from previous commit of:
          Tue Jun 10 14:53:00 UTC 2008  Ciju John

Tue Jun 10 16:32:32 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/fe/lex.yy.cpp:

          Removed trailing white space.

        * TAO_IDL/fe/lex.yy.cpp.diff:

          Updated the diff file based on my change from Tue Jun 10 13:21:29
          UTC 2008.

Tue Jun 10 15:00:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * TAO_IDL/be/be_visitor_structure/serializer_op_ch.cpp:

          Another wide character conversion required to get
          the tao_idl working on wide character builds.

Tue Jun 10 14:53:00 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Factory.cpp:
          Tie Security and SSLIOP library lifetimes to that of their
          registered ORBInitializers. This prevents the library getting
          unloaded before the ORBInitializer destructions.

        * tao/CSD_Framework/CSD_Framework_Loader.cpp:
        * tao/CSD_Framework/CSD_POA.cpp:
        * tao/CSD_Framework/CSD_Strategy_Base.h:
        * tao/CSD_Framework/CSD_Strategy_Base.inl:
        * tao/CSD_Framework/CSD_Strategy_Base.cpp:
        * tao/CSD_Framework/CSD_Strategy_Proxy.h:
        * tao/CSD_Framework/CSD_Strategy_Proxy.inl:
        * tao/CSD_ThreadPool/CSD_TP_Strategy.h:
        * tao/CSD_ThreadPool/CSD_TP_Strategy.cpp:
        * tao/ORB_Core.cpp:
          CSD threads borrow the ORB's thread-manager to spawn CSD
          threads. Doing this forces the ORB to wait for CSD cleanup at
          destruction time. This prevents a race between CSD cleanup and
          ORB destruction.

        * tao/PI/DLL_Resident_ORB_Initializer.h:
        * tao/PI/DLL_Resident_ORB_Initializer.cpp:
          Define and use DLL_Resident_ORB_Initializer to act as
          a decorator/intermediary for an ORB_Initializer that is
          defined in a DLL.  Without this there are timing issues
          when the DLL is unloaded before the ORB_Initializer is
          released.

        * tao/PI/ORBInitializer_Registry_Impl.cpp:
          Release ORB Initializers in the reverse order
          of their creation.
          Add diagnostic messages.

Tue Jun 10 14:16:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/fe/fe_init.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:

          A few more wide character conversions required to get
          the tao_idl working on wide character builds.

Tue Jun 10 13:21:29 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/fe/lex.yy.cpp:

          Fixed redefinition warnings from aCC.

        * TAO/orbsvcs/orbsvcs/Security/SL2_SecurityManager.cpp:

          Fixed no return warning from aCC.

Tue Jun 10 11:46:44 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_3315_Regression/main.cpp:
        * tests/Bug_3321_Regression/main.cpp:

          For SunCC only, added an extern "C" to the declaration of
          main_orb() to avoid warnings.

Tue Jun 10 11:38:15 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * examples/RTScheduling/DT_Creator.cpp:

          Added a static cast to avoid warnings on QNX.

Mon Jun  9 12:28:24 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tests/OctetSeq/run_test.pl:

          Testing a change to utilize my new process modules that will
          simplify the test script modifications necessary for VxWorks
          testing.

Mon Jun  9 12:14:12 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/MonitorControl/MonitorManager.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/MonitorManager.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMonitor_i.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMonitor_i.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.cpp:

          These files require that ACE_HAS_MONITOR_FRAMEWORK be defined to 1
          in order to compile.

        * orbsvcs/orbsvcs/Notify/MonitorControl/Control_Registry.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.inl:

          Removed trailing whitespace.

Mon Jun 09 11:13:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * utils/NamingViewer/NamingViewer.cpp:
        * utils/NamingViewer/SelectNSDialog.cpp:

          Correct Wide character build miss-converstions.

        * tao/CORBA_methods.h:
        * tao/ORB.cpp:
        * tao/ORB_Core.h:
        * tao/ORB_Core.cpp:

          Provide wide "helper" ORB_Init() only in wide char builds.
          (Too many tests try and send wide versions of argv
          into ORB_init() and whilst that function was written
          with converters in mind, it was only defined in terms
          of the narrow OMG standard interface, having extra helper
          "auto-converting" interfaces helps.)

Mon Jun 09 11:13:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/Oneway_Send_Timeouts/Test_i.cpp:
        * tests/Timed_Buffered_Oneways/test_i.cpp:

          unambiguated call to time_value msec(long)
          caused by new uint64 non-const setter provided by:
          (ACE) Thu Jun  5 14:52:43 UTC 2008  Steve Huston
          (Not sure why HPUX is saying CORBA::Long is ambiguous
          between long and unsigned long long &.)

Sun Jun  8 21:09:07 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/Concurrency_Service/Concurrency_Service.cpp:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.cpp:
        * orbsvcs/Time_Service/Clerk_i.cpp:
        * orbsvcs/Time_Service/Server_i.cpp:
        * orbsvcs/examples/CosEC/TypedSimple/Consumer.cpp:
        * orbsvcs/examples/RtEC/Simple/Service.cpp:
        * orbsvcs/orbsvcs/AV/AVStreams_i.inl:
        * orbsvcs/orbsvcs/AV/AV_Core.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/Roundtrip.h:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/client.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Roundtrip.h:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/client.cpp:

          Untabify.

Fri Jun 06 14:20:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * TAO_IDL/fe/fe_init.cpp
        * TAO_IDL/be/be_global.cpp
        * TAO_IDL/be/be_interface.cpp
        * TAO_IDL/be/be_sunsoft.cpp
        * TAO_IDL/be/be_visitor_structure/serializer_op_ch.cpp
        * TAO_IDL/driver/drv_args.cpp
        * TAO_IDL/driver/drv_preproc.cpp

          Wide character build fixes mainly to allow correct error
          message display.

Fri Jun  6 13:35:50 UTC 2008  Vladimir Zykov  <vzykov@prismtech.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:

          Changed the function for parsing of group id from strtoul
          to strtoull as it's required by CORBA specification.

Fri Jun 06 11:50:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tests/Bug_2494_Regression/client.cpp:

          Removed amiguity from previous commit of
          Thu Jun  5 11:56:09 UTC 2008  Chad Elliott

Thu Jun  5 23:05:32 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:

          Changed create_repositoryid() method to obtain the repository id
          by using the appropriate typecode's id() method instead of using
          a hardcoded string.  This avoids problems like the one reported
          in issue #3320, where the repository id for BasicLog had a typo.
          Thanks to Bogdan Jeram < bjeram at eso dot org > for reporting
          this.

Thu Jun  5 18:02:10 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Transport_Connector.h:
        * tao/Transport_Connector.cpp:

          Reverted a portion of my change from Fri May 30 13:21:20 UTC 2008.

Thu Jun 05 15:22:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/util/utl_global.cpp:

          Correct the wide character output messages and strings.

        * examples/MFC/server.mpc:
        * utils/NamingViewer/NamingViewer.mpc:

          Originally was going to provide specific *Unicode.mpc
          but the non-unicode ones se can actually dual up (so
          reverse the previous original change).

Thu Jun  5 11:56:09 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Queued_Message.h:

          Added a new template method to enable copying of the underlying
          message block chain on demand.

        * tao/Asynch_Queued_Message.h:
        * tao/Asynch_Queued_Message.cpp:

          This is never necessary for asynch messages and is implemented as
          such.

        * tao/Synch_Queued_Message.h:
        * tao/Synch_Queued_Message.cpp:

          Copy the underlying message block chain when it is part of the
          target chain (passed in).

        * tao/Transport.cpp:

          Call the new copy_if_necessary() method on the queued message if
          we have sent out only a portion of the message.  Without this
          change, the Bug_2494_Regression was core dumping every time.

        * tests/Bug_2494_Regression/client.cpp:

          Fixed memory leaks.

        * tests/Bug_2494_Regression/server.cpp:

          Fixed a bug in the default ior output file name.

        * tests/Bug_2654_Regression/client.cpp:

          Documented a couple of the magic numbers.

Tue Jun  3 15:19:18 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * docs/LocalObject.html:
          TAO has been updated conform to the 1.2 IDL to C++ mapping.
          LocalObject is now refcounted by default. Updated the
          documentation to reflect the changes.

Tue Jun  3 15:15:10 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Transport_Connector.h:
        * tao/Transport_Connector.cpp:

          Changed the wait_for_transport() method to always use a timeout
          when waiting through the active connect strategy.  Not doing so
          can cause a deadlock if another thread is already in the reactor
          (through CORBA::ORB::run()).

Tue Jun 03 14:15:00 UTC 2008  Simon Massey  <sma at prismtech dot com>

        * tao/TAO_Internal.cpp:

          Remove tabs to fix fuzz errors.

Mon Jun  2 21:51:36 UTC 2008  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/TAO_Internal.cpp:

          Reordered the parsing of parameters and the registration of global
          services within TAO::ORB::open_global_services(), as the global
          services registration needs to have the result of parsing out
          -ORBNegotiateCodesets before it tries to load the codeset library.

Mon Jun  2 14:58:26 UTC 2008  William R. Otte  <wotte@dre.vanderbilt.edu>

        * MPC/config/fe_mcpp.mpb:
        * TAO_IDL/contrib/mcpp/mbchar.cpp:
        * TAO_IDL/fe/mcpp_tao_yyinput.h:

          Fuzz errors.

Mon Jun  2 14:21:40 UTC 2008  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/fe/lex.yy.cpp:

          Fixes a compile error on QNX.  Thanks to Adam Mitz for providing
          the patch.

        * TAO_IDL/fe/lex.yy.cpp.diff:

          Added this and change from previous commit to be automatically
          applied when lex.yy.cpp is generated; Not sure why these are suddenly
          necessary, may be an anomaly in my version of flex.

Mon Jun  2 14:02:02 UTC 2008  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/fe/lex.yy.cpp:

          Manually fixed an issue in flex generated code that was causing a
          signed/unsigned mismatch.

Sun Jun  1 23:14:35 UTC 2008  William R. Otte  <wotte@dre.vanderbilt.edu>

        * MPC/config/tao_idl_mcpp.mpb:

          Fully qualified paths to driver source files for non-tao_idl
          projects using this base.

Sun Jun  1 23:11:34 UTC 2008  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/fe/mcpp_tao_yyinput.h:

          Fixed signed/unsigned mismatch.

Sun Jun  1 22:58:39 UTC 2008  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/contrib/mcpp/directive.cpp:
        * TAO_IDL/contrib/mcpp/eval.cpp:
        * TAO_IDL/contrib/mcpp/internal.H:
        * TAO_IDL/contrib/mcpp/mbchar.cpp:
        * TAO_IDL/contrib/mcpp/system.cpp:
        * TAO_IDL/driver/drv_mcpp_preproc.cpp:

          Fixed warnings exposed on Debian Core build.

Sat May 31 22:06:27 UTC 2008  William R. Otte  <wotte@dre.vanderbilt.edu>

        * MPC/config/tao_idl_mcpp.mpb:

        Moved these base projects to the MPC directory so other front-ends can
        take advantage.

Sat May 31 16:11:30 UTC 2008  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/driver/drv_mcpp_preproc.cpp:
        * TAO_IDL/fe/fe_extern.cpp:
        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/lex.yy.cpp.diff:
        * TAO_IDL/fe/mcpp_tao_yyinput.h:
        * TAO_IDL/include/fe_extern.h:
        * TAO_IDL/tao_idl.mpc:
        * TAO_IDL/tao_idl_mcpp.mpb:
        * TAO_IDL/fe_mcpp.mpb:

        Changes to enable in-memory preprocessing AND lexing of IDL files
        with the MCPP preprocessor.  This eliminates the need to use multiple
        temporary files for this process.  This capability is triggered by enabling
        the mcpp feature when generating project files, which causes the in-memory
        preprocessing and lexing to replace the external preprocessor/temporary file
        preprocessing and lexing which is still used by default.

        * TAO_IDL/preproc.mpb:

        Renamed to tao_idl_mcpp.mbp.

Sat May 31 01:10:02 UTC 2008  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/contrib/mcpp/configed.H:
        * TAO_IDL/contrib/mcpp/noconfig.H:
        * TAO_IDL/contrib/mcpp/system.cpp:

          Changes to make generated output more similar to that of GCC.

        * TAO_IDL/driver/drv_mcpp_preproc.cpp:

          Fixed a bug which resulted in includes not being properly generated.

Fri May 30 23:32:47 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/LogNotification.cpp:

          Convert current time to TimeBase::TimeT with new
          ORBSVCS_Time::to_Absolute_TimeT() method.  This fixes a
          bug where we were returning the time as a relative time,
          and simplifies the code by removing temporaries.

Fri May 30 15:04:17 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Time_Utilities.h:
        * orbsvcs/orbsvcs/Time_Utilities.cpp:

          Add new methods ORBSVCS_Time::to_Absolute_TimeT() and
          ORBSVCS_Time::to_TimeT() which take an ACE_Time_Value parameter
          and return a TimeBase::TimeT. These are wrappers around the
          existing ORBSVCS_Time::Absolute_Time_Value_to_TimeT() and
          ORBSVCS_Time::Time_Value_to_TimeT() methods, but allow use in
          contexts that would otherwise require the introduction of a
          temporary.

Fri May 30 13:21:20 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Transport_Connector.h:
        * tao/Transport_Connector.cpp:

          Modified the connect() method to wait for the connection
          completion if a transport is found but not connected.  Also, fixed
          a memory leak if a connection was found in the cache but had
          previously experienced an error.

          This version of connect() is a hybrid of Dale's version and the
          previous version.

          Also, the wait_for_connection_completion() method was changed to
          not require the descriptor interface.

        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * tao/IIOP_Connector.cpp:
        * tao/Strategies/SCIOP_Connector.cpp:
        * tao/Strategies/UIOP_Connector.cpp:

          It is no longer necessary to pass in the descriptor interface to
          wait_for_connection_completion().

Fri May 30 13:04:00 UTC 2008  Simon Massey <sma@prismtech.com>

        * orbsvcs/tests/unit/Notify/MC/Statistic/Statistic.cpp:

          And again! Corrected for unsigned integer (size_t) ambiguity errors.

Wed May 28 14:00:00 UTC 2008  Simon Massey <sma@prismtech.com>

        * orbsvcs/tests/unit/Notify/MC/NotificationServiceMonitor/NotificationServiceMonitor.cpp:
        * orbsvcs/tests/unit/Notify/MC/Statistic/Statistic.cpp:

          Corrected for unsigned integer (size_t) ambiguity errors.

Tue May 27 13:34:12 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.cpp:

          Added implementation for the overload of receive() taking
          a size_t argument. Even though there is an implementation
          in the base class, we were getting warnings from some of
          the Red Hat Linux builds.

Sun May 25 00:37:12 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * docs/tutorials/Quoter/Simple/Client/Makefile.am:
        * docs/tutorials/Quoter/Simple/ImprovedServer/Makefile.am:
        * docs/tutorials/Quoter/Simple/Server/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Basic/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Makefile.am:
        * orbsvcs/examples/Notify/Federation/Agent/Makefile.am:
        * orbsvcs/examples/Notify/Federation/SpaceCraft/Makefile.am:
        * orbsvcs/examples/Notify/MC/monitor/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/tests/Notify/MC/Makefile.am:
        * orbsvcs/tests/unit/Notify/MC/Control/Makefile.am:
        * orbsvcs/tests/unit/Notify/MC/MonitorControlExt/Makefile.am:
        * orbsvcs/tests/unit/Notify/MC/MonitorManager/Makefile.am:
        * orbsvcs/tests/unit/Notify/MC/NotificationServiceMonitor/Makefile.am:
        * orbsvcs/tests/unit/Notify/MC/Statistic/Makefile.am:
        * orbsvcs/tests/unit/Notify/MC/Statistic_Registry/Makefile.am:
        * tao/Makefile.am:
        * tests/Makefile.am:
        * tests/POA/Adapter_Activator/Makefile.am:
        * tests/POA/Explicit_Activation/Makefile.am:
        * tests/POA/On_Demand_Activation/Makefile.am:
        * tests/POA/Reference_Counted_Servant/Makefile.am:

          Regenerated.

        * configure.ac:

          Update for new directories.

        * tests/Bug_2085_Regression/Makefile.am:
        * tests/Bug_2243_Regression/Makefile.am:

          New Makefile.am's.

Sat May 24 19:45:39 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/Bug_2925_Regression/Bug_2925_Regression.mpc:

          Add IDL custom-only project to compile *.idl files.  Changed
          Server and Client projects to depend on it.

        * tests/DynUnion_Test/dynunion_test.mpc:

          Add empty IDL_Files section in dynuniontest project.

Mon May 19 16:06:54 UTC 2008  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * docs/configurations.html: Fixed several typos.  Thanks to
          Stephen Mouring <stephen dot mouring at lmco dot com> for
          reporting this.

Fri May 23 15:24:40 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/examples/Notify/MC/monitor/monitor.cpp:

          Changed the type name of the NameList variable occurrences
          to reflect the recent change to NotificationServiceMC.idl.

Fri May 23 11:42:38 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannel.cpp (add_stats):

          Removed an unused local variable, thanks again to Simon Massey
          <simon.massey@prismtech.com> for reporting the problem.

Fri May 23 11:30:15 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.inl:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.cpp:

          Changed occurrences of ACE_SYNCH_MUTEX to TAO_SYNCH_MUTEX to
          eliminate some fuzz errors. Thanks to Simon Massey
          <simon.massey@prismtech.com> for reporting the problem.

Thu May 22 19:38:02 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.h (clear):

          Made the method virtual, also made virtual in the ACE
          base class Monitor_Base. Now it behaves correctly when
          called on a TAO_Statistic monitor fetched from the registry
          as a Monitor_Base pointer.

        * orbsvcs/tests/unit/Notify/MC/NotificationServiceMonitor/NotificationServiceMonitor.cpp:
        * orbsvcs/tests/unit/Notify/MC/Statistic_Registry/Statistic_Registry.cpp:
        * orbsvcs/tests/unit/Notify/MC/Control/Control.cpp:
        * orbsvcs/tests/unit/Notify/MC/MonitorManager/MonitorManager.cpp:
        * orbsvcs/tests/unit/Notify/MC/MonitorManager/MonitorClient.cpp:
        * orbsvcs/tests/unit/Notify/MC/Statistic/Statistic.cpp:
        * orbsvcs/tests/unit/Notify/MC/MonitorControlExt/MonitorControlExt.cpp:

          Modified these test code files to be in line with recent
          changes to the Notification Service monitors.

Thu May 22 11:43:44 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_1361_Regression/Echo.cpp:
        * tests/Bug_1361_Regression/client.cpp:

          Reverted changes to this test.  It caused issues with VxWorks.

Wed May 21 19:02:38 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Makefile.am:
        * tao/Monitor/Monitor_Impl.cpp:
        * utils/monitor/Makefile.am:
        * tests/Monitor/Marshal_Buffer/client.cpp:
        * tests/Monitor/Marshal_Buffer/Makefile.am:

          Changes resulting from the renaming of
          $ACE_ROOT/ace/MonitorControl and its contents.

Wed May 21 15:52:17 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic_Registry.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic_Registry.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Generic_Registry.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Generic_Registry.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Generic.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Generic.h:

          Removed these files, using the base registry and monitor
          classes in ACE instead.

        * MPC/config/notification_mc.mpb:

          Added tao_monitor base project.

        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMC.idl:

          Added include of $TAO_ROOT/tao/Monitor.idl and used the
          indirectly included StringSeq type for NameList, instead of
          declaring a new typedef. These changes are the start of
          the integration of the new ACE and TAO monitor and control
          framework with the existing one in the Notification Service.

        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannel.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannel.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannelFactory.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.inl:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Control_Registry.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Control_Registry.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Control.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Dynamic_Statistic.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/MonitorManager.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Control.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMonitor_i.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/MonitorManager.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMonitor_i.h:
        * orbsvcs/tests/Notify/MC/test_monitor.cpp:

          Changes falling out from the file removal and IDL changes
          above, as well as format and style changes.

        * orbsvcs/orbsvcs/CosNotification.mpc:

          Added tao_monitor as a base project.

        * tao/Monitor.mpc:

          Changes to IDL compiler command line options to generate
          typecodes needed by dependent types in NotificationServiceMC.idl.

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_structure/structure_cs.cpp:

          Fixed a bug in the use case where typecodes must be
          generated into *A.h and *A.cpp files, and the headers
          propagated via a 'safe include' through another IDL
          file with no declarations of its own.

Tue May 20 19:37:31 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Transport_Cache_Manager.cpp:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:

          Added the ORB's string name to the name of the connection
          cache size monitor, connection cache purge monitor, and
          the Active Object Map size monitor, since some tests were
          creating multiple ORBs, causing name clashes in the monitor
          registry.

Tue May 20 18:05:08 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * NEWS:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * tao/IIOP_Connector.cpp:
        * tao/Profile_Transport_Resolver.cpp:
        * tao/Strategies/SCIOP_Connector.cpp:
        * tao/Strategies/UIOP_Connector.cpp:
        * tao/Transport.h:
        * tao/Transport.inl:
        * tao/Transport.cpp:
        * tao/Transport_Cache_Manager.h:
        * tao/Transport_Cache_Manager.inl:
        * tao/Transport_Cache_Manager.cpp:
        * tao/Transport_Connector.h:
        * tao/Transport_Connector.cpp:
        * tests/AMI/run_test.pl:
        * tests/BiDirectional/run_test.pl:
        * tests/Bug_1361_Regression/Echo.cpp:
        * tests/Bug_1361_Regression/client.cpp:
        * tests/Bug_1476_Test/client.cpp:

          Reinstated Dale Wilson's changes from Wed Aug  1 15:54:01 UTC 2007.

          Briefly: the change involves adding the transport to the
          cache at the time the connection is initiated rather than
          waiting until the connection is complete.   This avoids the
          situation where *way* too many connections are started in a
          nested upcall and/or multithreading situation because none
          of the connection attempts know the others are already in
          progress.
          At the same time it eliminates the wait-for-condition code
          technique for honoring the -MaxMuxedConnections. The old
          technique is unsafe and ineffective.

          These changes were reverted on Fri Aug 17 15:50:19 UTC 2007.

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Mcast_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/Strategies/COIOP_Connection_Handler.cpp:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.cpp:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Connection_Handler.cpp:

          Pass the flags provided to the close() method on to the call of
          close_handler().

        * tao/Connection_Handler.h:
        * tao/Connection_Handler.cpp:

          Changed close_handler() to accept flags (from the service handler
          close() call).  These flags help determine when the reference
          count of the transport should be removed.

          The above changes are part of Bug 2935.

Tue May 20 13:43:14 UTC 2008  Simon McQueen  <sm@prismtech.com>

        * docs/releasenotes/index.html:

          Add to known issues for CSD.

Tue May 20 12:13:16 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tao/TransportCurrent/IIOP_Current_Impl.cpp:

          When retrieving the connection handler, check the result of the
          dynamic_cast and throw a NoContext exception if it is zero.

Mon May 19 18:34:21 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Object.cpp:
          Use false instead of 0

        * tao/ORB.cpp (object_to_string):
          Handle objrefstyle url with orbit references where some of the
          profile are of an unknown type. This fixes bugzilla 2243, thanks
          to Jules Colding <colding at 42tools dot com> for reporting this.

Mon May 19 15:12:21 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_Reply/run_test.pl:
        * tests/Big_Request_Muxing/run_test.pl:
          Improved this script

        * tests/Big_Twoways/run_test.pl:
          Dottedecimaladdresses isn't required for vxworks

        * tests/Bug_1476_Test/client.cpp:
        * tests/Bug_2494_Regression/client.cpp:
          Use error in the error message

Mon May 19 14:29:21 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2085_Regression/*:
          New regression test for the fact that string_to_object doesn't
          return an exception. Thanks to Frank Pilhofer <fpilhofe at mc dot com>
          for reporting this.

        * tests/Bug_2243_Regression/*:
          New regression test for bugzilla 2243 which is about
          interoperability with orbit. Thanks to Jules Colding
          <colding at 42tools dot com> for reporting this.

Mon May 19 12:49:09 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tests/HandleExhaustion/server.cpp:

          Change the location of the setting of the file descriptor rlimit.

Mon May 19 02:53:21 CDT 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO version 1.6.5 released.

Sun May 18 22:50:47 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/Bug_2925_Regression/Makefile.am:
        * tests/DynUnion_Test/Makefile.am:

          Hand tweak generated makefiles to avoid make warnings due to
          duplicate IDL compilation rules.  We'll update the MPC
          configuration so this isn't needed in a future release.

Sun May 18 21:48:39 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Hand-tweak for ZLIB/ZZIP support, as we want to defer this
          decision from MPC to configure.

        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/Makefile.am
        * orbsvcs/performance-tests/RTEvent/Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Makefile.am:
        * orbsvcs/tests/Event/Basic/Makefile.am:
        * orbsvcs/tests/Event/Performance/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Complex/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Simple/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Two_Way/Makefile.am:
        * orbsvcs/tests/CosEvent/Basic/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/bin/Makefile.am:
        * docs/tutorials/Quoter/Naming_Service/Makefile.am:
        * docs/tutorials/Quoter/Simple/Persistent/Makefile.am:
        * docs/tutorials/Quoter/Simple/Impl-Repo/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/Makefile.am:
          Hand tweak generated makefiles to avoid make warnings.  We'll
          update the MPC configuration so this isn't needed in a future
          release.

Sun May 18 12:12:36 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tests/HandleExhaustion/server.cpp:

          Make sure RLIMIT_NOFILE is defined.

Sat May 17 01:57:30 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tests/HandleExhaustion/server.cpp:

          Only call set the rlimit if ACE_LACKS_RLIMIT is not defined.

Fri May 16 12:59:22 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tests/HandleExhaustion/run_test.pl:

          This test has the same issues on LynxOS as HP-UX and can't be run.

        * tests/HandleExhaustion/server.cpp:

          Changed to set the rlimit for file descriptors.

Wed May 14 11:03:15 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Monitor/*:
          Renamed MonitorControl namespace to Monitor_Control to comply
          to ACE coding guidelines

Tue May 13 15:04:10 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Notify/Bug_3252_Regression/server.cpp:
          Extended this test as mentioned in bugzilla 3252. Thanks for
          Lothar Werzinger <lothar at tradescape dot biz> for extending
          this test

Tue May 13 14:50:10 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp (fini):
          Also destroy the dispatching ORB when it has one and
          the nofication service is configured to use one

        * tests/Explicit_Event_Loop/server.cpp:
          No need to pass in an empty orb name

Tue May 13 07:37:10 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.cpp:
          Don't try to load the TAO PI library in VxWorks kernel mode
          with shared libraries

        * tests/ORB_Local_Config/Bug_1459/run_test.pl:
        * tests/ORB_Local_Config/Bug_2612/run_test.pl:
        * tests/ORB_Local_Config/Bunch/run_test.pl:
        * tests/ORB_Local_Config/run_tests_all.pl:
        * tests/ORB_Local_Config/Separation/run_test.pl:
        * tests/ORB_Local_Config/Service_Dependency/run_test.pl:
        * tests/ORB_Local_Config/Shared/run_test.pl:
        * tests/ORB_Local_Config/Simple/run_test.pl:
        * tests/ORB_Local_Config/Two_DLL_ORB/run_test.pl:
          Updated for VxWorks cross platform testing

        * tests/TransportCurrent/lib/Server_Request_Interceptor.h:
          Layout change

Mon May 12 15:51:28 UTC 2008  Vladimir Zykov  <vzykov@prismtech.com>

        * tao/Stub.cpp:

          Removed one line that I added along with a fix of memory leak.
          This particular line turned out to be erroneous.

Mon May 12 12:30:01 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Monitor/Marshal_Buffer/client.cpp:

          Added appropriate preprocessor guards to get a successful
          build when TAO_HAS_MONITOR_FRAMEWORK is defined as 0.

Fri May  9 18:26:24 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

              * orbsvcs/orbsvcs/Makefile.am:
              * orbsvcs/Notify_Service/Makefile.am:
              * orbsvcs/tests/unit/Notify/MC/MonitorControlExt/Makefile.am:
              * orbsvcs/tests/Log/Basic_Log_Test/Makefile.am:
              * orbsvcs/tests/Bug_2926_Regression/Makefile.am:
              * orbsvcs/tests/Notify/Basic/Makefile.am:
              * orbsvcs/tests/Notify/Structured_Multi_Filter/Makefile.am:
              * orbsvcs/tests/Notify/Test_Filter/Makefile.am:
              * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile.am:
              * orbsvcs/tests/Notify/Bug_3252_Regression/Makefile.am:
              * orbsvcs/tests/Notify/Blocking/Makefile.am:
              * orbsvcs/tests/Notify/Destroy/Makefile.am:
              * orbsvcs/tests/Notify/Bug_2561_Regression/Makefile.am:
              * orbsvcs/tests/Notify/Driver/Makefile.am:
              * orbsvcs/tests/Notify/MT_Dispatching/Makefile.am:
              * orbsvcs/tests/Notify/Bug_1385_Regression/Makefile.am:
              * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile.am:
              * orbsvcs/tests/Notify/PluggableTopology/Makefile.am:
              * orbsvcs/tests/Notify/Persistent_POA/Makefile.am:
              * orbsvcs/tests/Notify/MC/Makefile.am:
              * orbsvcs/tests/Notify/performance-tests/Filter/Makefile.am:
              * orbsvcs/tests/Notify/performance-tests/Throughput/Makefile.am:
              * orbsvcs/tests/Notify/performance-tests/RedGreen/Makefile.am:
              * orbsvcs/tests/Notify/XML_Persistence/Makefile.am:
              * orbsvcs/tests/Notify/lib/Makefile.am:
              * orbsvcs/tests/Notify/Discarding/Makefile.am:
              * orbsvcs/tests/Notify/Ordering/Makefile.am:
              * orbsvcs/tests/Notify/Structured_Filter/Makefile.am:
              * orbsvcs/tests/Notify/RT_lib/Makefile.am:
              * orbsvcs/tests/Notify/Reconnecting/Makefile.am:
              * orbsvcs/Logging_Service/Basic_Logging_Service/Makefile.am:
              * orbsvcs/Logging_Service/Event_Logging_Service/Makefile.am:
              * orbsvcs/Logging_Service/RTEvent_Logging_Service/Makefile.am:
              * orbsvcs/Logging_Service/Notify_Logging_Service/Makefile.am:
              * orbsvcs/Fault_Notifier/Makefile.am:
              * orbsvcs/examples/Notify/Federation/SpaceCraft/Makefile.am:
              * orbsvcs/examples/Notify/Federation/Agent/Makefile.am:
              * orbsvcs/examples/Notify/ThreadPool/Makefile.am:
              * orbsvcs/examples/Notify/Lanes/Makefile.am:
              * tao/ETCL/Makefile.am:
              * tao/Makefile.am:
              * utils/monitor/Makefile.am:
              * tests/Monitor/Marshal_Buffer/Makefile.am:
              * tests/Makefile.am:
              * tests/Compression/Makefile.am:

          Regenerated.

              * configure.ac:

          build new directory.

        * tests/Bug_3321_Regression/Makefile.am:

          New Makefile.am.

              * tao/ZlibCompressor.mpc:
              * MPC/config/zlibcompressor.mpb:

          Changed to derive from MPC's own zlib base project to ace_zlib
          base project to get settings overriden for the automake build.

Fri May  9 18:13:10 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/PI.h:
          Also enable the static initializer in vxworks kernel mode
          with shared libs

Fri May  9 13:36:02 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:

          Fixed name of included ACE size monitor file.

Fri May  9 12:55:10 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bug_3321_Regression/Bug_3321_Regression.mpc:
        * tao/Bug_3321_Regression/main.cpp:
          Messaging is not used here

Fri May  9 12:42:10 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orbconf.h:
          Added TAO_HAS_MONITOR_POINTS which is default defined to
          ACE_HAS_MONITOR_POINTS (which is 0 at this moment)

        * tao/GIOP_Message_Base.cpp:
          Added monitor points

        * tao/Messaging/Buffering_Constraint_Policy.h:
          Doxygen change

        * tao/PI/PICurrent_Loader.cpp:
          Changed initialisation

        * tao/PI_Server/ServerRequestInfo.h:
        * tao/PortableServer/Root_POA.cpp:
        * tao/TypeCodeFactory_Adapter.h:
          Layout change

        * tao/PortableServer/Active_Object_Map.{h,cpp,inl}:
          Added monitor points and code layout changes

        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
          Corrected rcsid

        * tao/Transport_Cache_Manager.{h,cpp}:
          Added monitor points

Fri May  9 12:25:13 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * MPC/config/tao_monitor.mpb:

          Removed unneeded base project.

Fri May  9 11:59:52 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * MPC/config/etcl.mpb:

          Changed the name of a base project that was changed
          in ACE_RROT/bin/MakeProjectCreator/config.

Fri May  9 10:40:10 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/TAO_Internal.cpp:
          Don't try to load the Codeset lib when it is not available
          with VxWorks shared lib kernel mode

Thu May  8 22:51:38 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Fix missing \ in ZlibCompressor project.

Thu May  8 07:38:10 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_3321_Regression/*:
          New regression test for bugzilla 3321

        * tests/Bug_3315_Regression/main.cpp:
          Improved result handling

Wed May  7 19:33:14 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.h:

          Changes of method signatures back to using
          TAO_ETCL_Literal_Constraint that were overlooked in

          Wed May  7 19:16:14 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

Wed May  7 19:16:14 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/ETCL/ETCL_include:
        * tao/ETCL/ETCL_y.cpp:
        * tao/ETCL/ETCL_l.cpp:
        * tao/ETCL/ETCL_Interpreter.cpp:
        * tao/ETCL/TAO_ETCL_Parser.pc.in:

          Removed these files and the directory, by way
          of eliminating the TAO ETCL parser, only the
          ETCL parser in ACE_ROOT/ace/ETCL is needed.

        * MPC/config/tao_etcl.mpb:
        * MPC/config/tao_monitor.mpb:
        * MPC/config/etcl.mpb:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.h:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.h:
        * tao/ETCL/TAO_ETCL_Constraint.cpp:
        * tao/ETCL/TAO_ETCL_Constraint.inl:
        * tao/ETCL/TAO_ETCL_Constraint.h:
        * tao/ETCL/TAO_ETCL.mpc:

          - Changes required by the TAO ETCL parser's removal.

          - Reverted a change to the Notify and Log constraint
            visitors that made their internal literal constraint
            queue be of type ETCL_Literal_Constraint. Changed
            the type of queue element back to
            TAO_ETCL_Literal_Constraint.

          - Removed all constraint classes from TAO_ETCL except
            TAO_ETCL_Literal_Constraint. This class is the only
            one that uses CORBA::Any and is thus CORBA-specific,
            all the other classes can be represented by their
            base classes in ACE_ROOT/ace/ETCL.

Wed May  7 18:44:10 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Log/BasicLog_i.h:
        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.h:
          Layout issues

        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Interpreter.h:
          Doxygen change

        * orbsvcs/orbsvcs/Notify/CosNotify_Service.h:
          Doxygen changes

        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp:
          Close the notify singleton when the service is closed

Wed May  7 14:24:17 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Log/Log_i.cpp(scheduled):

          Replaced use of native type timeval with ACE_Time_Value,
          to eliminate Windows warnings.

Wed May  7 10:18:10 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * MPC/config/tao_etcl.mpb:
          Requires dynamicany

Wed May  7 09:06:56 UTC 2008  Vladimir Zykov  <vzykov@prismtech.com>

        * tao/Stub.cpp:

          Fixed a memory leak in forward_profiles_perm_.

        * tao/Invocation_Base.h:
        * tao/LocateRequest_Invocation_Adapter.cpp:
        * tao/Invocation_Base.cpp:
        * tao/Synch_Invocation.inl:
        * tao/Collocated_Invocation.cpp:
        * tao/Synch_Invocation.h:
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
        * tao/Invocation_Base.inl:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.cpp:
        * tao/Invocation_Adapter.cpp:
        * tao/Synch_Invocation.cpp:

          Added reply_status to Invocation_Base and changed the code that need
          to handle permanent locacation accordingly. Now in order to find out
          whether the invocation is forwarded reply_status must be checked.
          Also renamed reply_received to invoke_status in Invocation_Base.
          This is for fix of bug 3277.

Wed May  7 06:49:33 UTC 2008  William R. Otte  <wotte@dre.vanderbilt.edu>

        * examples/Callback_Quoter/Notifier_i.h:
        * examples/Callback_Quoter/Notifier_i.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_MemberInfo.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_MemberInfo.cpp:

          Qualified equality operators with const to fix errors with Unbounded_Set.

Tue May  6 19:45:00 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp(visit_exist):

          Fixed an incorrect template argument to dynamic_cast<>,
          causing it to always return 0.

Tue May  6 12:49:47 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Interpreter.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.h:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Interpreter.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.h:
        * tao/ETCL/TAO_ETCL_Constraint.cpp:
        * tao/ETCL/TAO_ETCL_Constraint.inl:
        * tao/ETCL/TAO_ETCL_Constraint.h:

          - Factored code from the TAO ETCL constraint classes to
            base classes in ACE_ROOT/ace/ETCL.

          - Changed the signatures of the visitor methods in the
            logging and notification services to take the ace/ETCL
            constraint classes as arguments.

          - Changed the literal constraint queues in the above
            services to contain ETCL_Literal_Constraint instead
            of TAO_ETCL_Literal_Constraint.

          - Replaced CORBA::Boolean 0s and 1s with 'true' and
            'false'.

Mon May  5 20:40:02 UTC 2008  William R. Otte  <wotte@dre.vanderbilt.edu>

        * tao/Object.cpp:

          Fix a segfault in a nil pointer is passed to _is_equivalent.

Mon May  5 14:45:45 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/ImplRepo_Service/Makefile.am:

          Fix "extra trailing-backslash" typo in automake conditional.

Sun May  4 22:15:32 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/ETCL/TAO_ETCL.mpc:

          Add Pkgconfig_Files section for TAO_ETCL_Parser library.

        * orbsvcs/orbsvcs/TAO_ETCL.pc.in:

          Remove pkgconfig template file from old TAO ETCL library.

        * tao/ETCL/TAO_ETCL.pc.in:
        * tao/ETCL/TAO_ETCL_Parser.pc.in:
        * tao/Monitor/TAO_Monitor.pc.in:

          Added pkgconfig template files for new TAO libraries.

Sun May  4 15:50:25 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/ImplRepo_Service/Makefile.am:
        * tao/Makefile.am:
        * tests/Compression/Makefile.am:

          Hand-tweak for ZLIB/ZZIP support, as we want to defer this
          decision from MPC to configure.

Sun May  4 15:02:24 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/Notify/MC/Makefile.am:
        * tests/Object_Loader/Makefile.am:
        * tests/Oneway_Send_Timeouts/Makefile.am:
        * tests/ORB_Local_Config/Two_DLL_ORB/Makefile.am:

          Regenerated.

        * orbsvcs/tests/Notify/MC/MonitorControl.mpc:
        * tests/Object_Loader/Object_Loader.mpc:
        * tests/Oneway_Send_Timeouts/Oneway_scenarios.mpc:
        * tests/ORB_Local_Config/Two_DLL_ORB/Two_DLL_ORB.mpc:

          Add empty IDL_Files section to avoid emitting duplicate IDL
          compilation rules in generated Makefile.am's.

Sat May  3 23:39:24 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Add AM_CONDITIONAL for BUILD_WINCE.

Sat May  3 22:23:22 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        The below changes should be most of the work necessary to fix
        automake build errors.  A few hand tweaks more will be needed
        to resolve the rest.

        * configure.ac:

          Updated for new directories.

        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/Notify_Service/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Makefile.am:
        * orbsvcs/tests/unit/Notify/MC/MonitorControlExt/Makefile.am:
        * orbsvcs/tests/Event/Basic/Makefile.am:
        * orbsvcs/tests/Event/Performance/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Complex/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Simple/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Two_Way/Makefile.am:
        * orbsvcs/tests/Log/Basic_Log_Test/Makefile.am:
        * orbsvcs/tests/Bug_2800_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2925_Regression/Makefile.am:
        * orbsvcs/tests/Security/mixed_security_test/Makefile.am:
        * orbsvcs/tests/Security/Makefile.am:
        * orbsvcs/tests/Property/Makefile.am:
        * orbsvcs/tests/CosEvent/Basic/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Makefile.am:
        * orbsvcs/tests/Bug_2926_Regression/Makefile.am:
        * orbsvcs/tests/Notify/Basic/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Test_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Blocking/Makefile.am:
        * orbsvcs/tests/Notify/Destroy/Makefile.am:
        * orbsvcs/tests/Notify/Bug_2561_Regression/Makefile.am:
        * orbsvcs/tests/Notify/Driver/Makefile.am:
        * orbsvcs/tests/Notify/MT_Dispatching/Makefile.am:
        * orbsvcs/tests/Notify/Bug_1385_Regression/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile.am:
        * orbsvcs/tests/Notify/PluggableTopology/Makefile.am:
        * orbsvcs/tests/Notify/Persistent_POA/Makefile.am:
        * orbsvcs/tests/Notify/MC/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/Makefile.am:
        * orbsvcs/tests/Notify/XML_Persistence/Makefile.am:
        * orbsvcs/tests/Notify/lib/Makefile.am:
        * orbsvcs/tests/Notify/Discarding/Makefile.am:
        * orbsvcs/tests/Notify/Ordering/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Makefile.am:
        * orbsvcs/tests/Notify/RT_lib/Makefile.am:
        * orbsvcs/tests/Notify/Reconnecting/Makefile.am:
        * orbsvcs/tests/Makefile.am:
        * orbsvcs/Logging_Service/Basic_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/Event_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Makefile.am:
        * orbsvcs/ImplRepo_Service/Makefile.am:
        * orbsvcs/Fault_Notifier/Makefile.am:
        * orbsvcs/examples/Notify/Federation/SpaceCraft/Makefile.am:
        * orbsvcs/examples/Notify/Federation/Agent/Makefile.am:
        * orbsvcs/examples/Notify/ThreadPool/Makefile.am:
        * orbsvcs/examples/Notify/Lanes/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Makefile.am:
        * tao/Makefile.am:
        * docs/tutorials/Quoter/Naming_Service/Makefile.am:
        * docs/tutorials/Quoter/Simple/Persistent/Makefile.am:
        * docs/tutorials/Quoter/Simple/Impl-Repo/Makefile.am:
        * docs/tutorials/Quoter/Simple/Server/Makefile.am:
        * docs/tutorials/Quoter/Simple/ImprovedServer/Makefile.am:
        * docs/tutorials/Quoter/Simple/Client/Makefile.am:
        * docs/tutorials/Quoter/RTCORBA/Makefile.am:
        * utils/Makefile.am:
        * performance-tests/POA/Demux/Makefile.am:
        * performance-tests/Anyop/Makefile.am:
        * performance-tests/CSD_Strategy/TestServant/Makefile.am:
        * performance-tests/CSD_Strategy/TestApps/Makefile.am:
        * performance-tests/Callback/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/Makefile.am:
        * performance-tests/Latency/DSI/Makefile.am:
        * tests/Server_Connection_Purging/Makefile.am:
        * tests/Bug_2222_Regression/Makefile.am:
        * tests/Bug_1270_Regression/Makefile.am:
        * tests/Bug_2702_Regression/Makefile.am:
        * tests/Any/Recursive/Makefile.am:
        * tests/Bug_2560_Regression/Makefile.am:
        * tests/Object_Loader/Makefile.am:
        * tests/DynUnion_Test/Makefile.am:
        * tests/Bug_2669_Regression/Makefile.am:
        * tests/QtTests/Makefile.am:
        * tests/DLL_ORB/Makefile.am:
        * tests/Bug_2503_Regression/Makefile.am:
        * tests/HandleExhaustion/Makefile.am:
        * tests/Hello/Makefile.am:
        * tests/Bug_2122_Regression/Makefile.am:
        * tests/Makefile.am:
        * tests/IOR_Endpoint_Hostnames/Makefile.am:
        * tests/Bug_2084_Regression/Makefile.am:
        * tests/FL_Cube/Makefile.am:
        * tests/Portable_Interceptors/Bug_3080/Makefile.am:
        * tests/Portable_Interceptors/Makefile.am:
        * tests/Bug_2417_Regression/Makefile.am:
        * tests/Bug_3000_Regression/Makefile.am:
        * tests/POA/Adapter_Activator/Makefile.am:
        * tests/POA/Explicit_Activation/Makefile.am:
        * tests/POA/On_Demand_Activation/Makefile.am:
        * tests/POA/Reference_Counted_Servant/Makefile.am:
        * tests/POA/Makefile.am:
        * tests/Optimized_Connection/Makefile.am:
        * tests/Xt_Stopwatch/Makefile.am:
        * tests/GIOP_Fragments/Java_Big_Request/Makefile.am:
        * tests/GIOP_Fragments/Java_Big_Reply/Makefile.am:
        * tests/IDL_Test/Makefile.am:
        * tests/CodeSets/libs/Makefile.am:
        * tests/ORB_Local_Config/Two_DLL_ORB/Makefile.am:
        * tests/OBV/Forward/Makefile.am:
        * tests/OBV/Truncatable/Makefile.am:
        * tests/OBV/ValueBox/Makefile.am:
        * tests/OBV/Collocated/Forward/Makefile.am:
        * tests/Oneway_Timeouts/Makefile.am:
        * tests/DSI_AMH/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/Makefile.am:
        * examples/Simple/time-date/Makefile.am:
        * examples/CSD_Strategy/ThreadPool4/Makefile.am:
        * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile.am:
        * examples/RTScheduling/MIF_Scheduler/Makefile.am:
        * examples/RTScheduling/Makefile.am:
        * examples/mfc/Makefile.am:
        * examples/AMI/FL_Callback/Makefile.am:

          Regenerated.

        * orbsvcs/tests/Bug_3216_Regression/Makefile.am:
        * orbsvcs/tests/Security/ssliop_CSD/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Bug_3155_Regression/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Bug_3174_Regression/Makefile.am:
        * orbsvcs/tests/Bug_3215_Regression/Makefile.am:
        * orbsvcs/tests/Notify/Bug_3252_Regression/Makefile.am:
        * tao/ETCL/Makefile.am:
        * utils/monitor/Makefile.am:
        * tests/DII_AMI_Forward/Makefile.am:
        * tests/Bug_3315_Regression/Makefile.am:
        * tests/Bug_2935_Regression/Makefile.am:
        * tests/Monitor/Marshal_Buffer/Makefile.am:
        * tests/Monitor/Makefile.am:
        * tests/Bug_3171_Regression/Makefile.am:
        * tests/Bug_3108_Regression/Makefile.am:
        * tests/Bug_2734_Regression/Makefile.am:
        * tests/Oneway_Send_Timeouts/Makefile.am:
        * tests/Bug_3311_Regression/Makefile.am:
        * tests/Bug_3042_Regression/Makefile.am:
        * tests/Bug_3163_Regression/Makefile.am:
        * tests/Collocated_Forwarding/Makefile.am:
        * tests/Portable_Interceptors/Bug_2133/Makefile.am:
        * tests/Portable_Interceptors/Bug_3079/Makefile.am:
        * tests/Bug_3276_Regression/Makefile.am:
        * tests/CSD_Collocation/Makefile.am:
        * tests/CodeSets/libs/UTF16_UCS2/Makefile.am:
        * tests/Bug_3251_Regression/Makefile.am:
        * tests/Bug_3198_Regression/Makefile.am:
        * tests/Bug_3299_Regression/Makefile.am:

          New Makefile.am's.

Fri May  2 20:48:50 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/ETCL/TAO_ETCL_Constraint.cpp:
        * tao/ETCL/TAO_ETCL_Constraint.inl:

          For all constructors except the one that takes an Any*,
          initialize the Any_Impl* member to 0, in order that
          _remove_ref() isn't called on an uninitialized pointer
          in the destructor.

Fri May  2 19:33:55 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/ETCL/ETCL_y.cpp:
        * tao/ETCL/ETCL_l.cpp:
        * tao/ETCL/ETCL_Interpreter.cpp:

          New files that simply include their counterparts in
          $ACE_ROOT/ace/ETCL. The lex and yacc files are generated
          and can't be factored into CORBA and non-CORBA pieces as
          the other ETCL files have been. On the other hand, there
          doesn't seem to be any way found so far to get makefiles
          to recompile a set of source files into a different set
          of object files in a different location, so that things
          like realclean will depend on the new object files. This
          workaround in similar to what has been done for the IDL
          compiler driver, which is composed of the same source
          but links to different backends.

        * tao/ETCL/TAO_ETCL.mpc:

          Changed the TAO_ETCL_Parser project to reflect the changes
          above.

Fri May  2 18:38:27 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/ETCL/TAO_ETCL_Constraint.h:

          Fix for build problems with versioned namespaces turned on.

Fri May  2 09:35:10 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_3315_Regression/*:
          New regression for bugzilla 3315. When TAO is used from a thread
          created without ACE it leads to an assert in ACE. When we have
          pthread we use the pthread api, else we just use ACE. Without
          the change from Iliyan in ace/Service_Config.cpp this test fails
          but with his change this test runs. Thanks to Abdul Sowayan for
          creating this regression test.

Fri May  2 08:27:10 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Connection_Handler.cpp:
        * tao/Load_Protocol_Factory_T.h:
          Fixed incorrect debug statements which print garbage when
          unicode is enabled. Thanks to Karl-Heinz Wind <wind at itq dot de>
          for reporting this. This fixes bugzilla 3309

Fri May  2 08:15:10 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/config/monitor.mpb:
        * tao/config/tao_monitor.mpb:
          Renamed monitor to tao_monitor

        * utils/monitor/monitor.mpc:
          updated base project

Thu May  1 18:32:10 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Monitor/Marshal_Buffer/client.cpp:
        * tests/Monitor/Marshal_Buffer/server.cpp:
          Don't use deprecated macros

Thu May  1 18:27:10 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ETCL/TAO_ETCL_Constraint.cpp:
        * tao/ETCL/TAO_ETCL_Constraint.h:
          Use a full include path

        * tao/Leader_Follower.h:
          Docu change

Thu May  1 18:09:05 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_ACE.mwc:

          Removed $ACE_ROOT/MonitorControl/MonitorControl.mpc, this MPC
          file has been relocated and is now covered under $ACE_ROOT/ace.

        * tao/Monitor/Monitor_Impl.cpp:
        * tests/Monitor/Marshal_Buffer/client.cpp:

          Changed header include paths to reflect the relocation of
          the MonitorControl library.

Wed Apr 30 17:16:54 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Monitor/Marshal_Buffer/client.cpp:
        * tests/Monitor/Marshal_Buffer/server.cpp:

          Added include to pull in ACE_PRINT_EXCEPTION and
          ACE_ANY_EXCEPTION macros, which were not recognized
          in some Debian builds.

Wed Apr 30 17:01:24 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Monitor/Marshal_Buffer/client.cpp:
        * tests/Monitor/Marshal_Buffer/marshal_buffer.mpc:

          Removed ENABLE_MONITORS macro which is no longer used.

Wed Apr 30 12:13:59 UTC 2008  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/ast/ast_union.cpp:

          Added missing break.

        * TAO_IDL/be/be_helper.cpp:
        * TAO_IDL/be_include/be_helper.h:

          Ugly macros to get this to compile portably.

Wed Apr 30 11:57:18 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:

          Restored the original order of included header files to
          eliminate template-related compile errors with gcc.

Wed Apr 30 11:55:04 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Portable_Interceptors/PICurrent/run_test.pl:
        * tests/Portable_Interceptors/PICurrent/server.cpp:

          Modified this test to use -SvcConfDirective instead of creating an
          svc.conf.  For single-threaded builds, the thread-per-connection
          setting does not work.  So, when threads are enabled add the
          -SvcConfDirective to enable thread-per-connection.  When threads
          are disabled, issue a notice and continue on in single-threaded
          mode.

Wed Apr 30 11:51:40 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * MPC/config/tao_vc8warnings.mpb:

          Added support for vc9.

Tue Apr 29 19:58:21 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/ETCL.mpc:
        * orbsvcs/orbsvcs/ETCL.rc:

          Removed these files, overlooked in checkin

          Tue Apr 29 19:55:12 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

Tue Apr 29 19:55:12 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/ETCL/*:

          Removed this directory and its contents, it is replaced
          by $TAO_ROOT/tao/ETCL. Some code has been factored to
          $ACE_ROOT/ace/ETCL and some identifiers have changed,
          but no intentional changes have been made to the behavior.

        * MPC/config/etcl.mpb:
        * TAO_ACE.mwc:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Interpreter.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Interpreter.h:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.h:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Interpreter.h:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Interpreter.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.h:
        * tao/ETCL/TAO_ETCL_Constraint.cpp:
        * tao/ETCL/TAO_ETCL_Constraint.h:
        * tao/ETCL/TAO_ETCL.mpc:

          Changes to integrate the replacement of
          $TAO_ROOT/orbsvcs/orbsvcs/ETCL with
          $TAO_ROOT/tao/ETCL and $ACE_ROOT/ace/ETCL.

Tue Apr 29 15:17:52 UTC 2008  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/ast/ast_union.cpp:
        * TAO_IDL/be/be_helper.cpp:
        * TAO_IDL/be/be_union_branch.cpp:
        * TAO_IDL/be/be_visitor_union/discriminant_ci.cpp:
        * TAO_IDL/be_include/be_helper.h:
        * TAO_IDL/include/ast_union.h:

          Add support for (unsigned) long long union discriminators.

        * tests/Bug_3311_Regression:
        * tests/Bug_3311_Regression/Bug_3311_Regression.mpc:
        * tests/Bug_3311_Regression/README:
        * tests/Bug_3311_Regression/test.idl:
        * tests/Bug_3311_Regression/test.cpp:

          Regression test for the above.

Mon Apr 28 19:38:08 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Monitor/Monitor.h:
        * tao/Monitor/Monitor.cpp:
        * tao/Monitor/Monitor_Impl.h:
        * tao/Monitor/Monitor_Impl.cpp:

          Added TAO_HAS_MONITOR_FRAMEWORK guards around these files.

Mon Apr 28 17:57:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/Notify/MC/monitor/monitor.mpc:
          Made project name more unique

        * orbsvcs/orbsvcs/AV/Flows_T.cpp:
          Initialise pointer with 0

Mon Apr 28 14:24:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Kokyu_dsrt_schedulers/EDF_Scheduler.h
        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.cpp
        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.h
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduler.cpp
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduler.h
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduler.cpp
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduler.h
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Scheduler.h
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.h
        * orbsvcs/examples/FaultTolerance/RolyPoly/ORB_Initializer.h
        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.h
        * orbsvcs/examples/LoadBalancing/ORBInitializer.h
        * orbsvcs/examples/LoadBalancing/ServerRequestInterceptor.h
        * orbsvcs/examples/ORT/Server_IORInterceptor.h
        * orbsvcs/examples/ORT/Server_IORInterceptor_ORBInitializer.h
        * orbsvcs/ImplRepo_Service/INS_Locator.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientORBInitializer.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.inl
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicyFactory.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ORBInitializer.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.inl
        * orbsvcs/orbsvcs/FaultTolerance/FT_PolicyFactory.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerORBInitializer.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.inl
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicyFactory.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.h
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Initializer.h
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Interceptor.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ORBInitializer.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Set_Update_Interceptor.h
        * orbsvcs/orbsvcs/LoadBalancing/LB_ClientORBInitializer.h
        * orbsvcs/orbsvcs/LoadBalancing/LB_ClientRequestInterceptor.h
        * orbsvcs/orbsvcs/LoadBalancing/LB_IORInterceptor.h
        * orbsvcs/orbsvcs/LoadBalancing/LB_MemberLocator.h
        * orbsvcs/orbsvcs/LoadBalancing/LB_ORBInitializer.h
        * orbsvcs/orbsvcs/LoadBalancing/LB_ServerRequestInterceptor.h
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_ORBInitializer.h
        * orbsvcs/orbsvcs/Security/Security_Current.h
        * orbsvcs/orbsvcs/Security/Security_ORBInitializer.h
        * orbsvcs/orbsvcs/Security/Security_PolicyFactory.h
        * orbsvcs/orbsvcs/Security/SL2_EstablishTrustPolicy.h
        * orbsvcs/orbsvcs/Security/SL2_QOPPolicy.h
        * orbsvcs/orbsvcs/Security/SL2_SecurityManager.h
        * orbsvcs/orbsvcs/Security/SL3_ContextEstablishmentPolicy.h
        * orbsvcs/orbsvcs/Security/SL3_CredentialsCurator.h
        * orbsvcs/orbsvcs/Security/SL3_ObjectCredentialsPolicy.h
        * orbsvcs/orbsvcs/Security/SL3_PolicyFactory.h
        * orbsvcs/orbsvcs/Security/SL3_SecurityCurrent.h
        * orbsvcs/orbsvcs/Security/SL3_SecurityManager.h
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.h
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_CredentialsAcquirer.h
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.h
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.h
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.h
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/ORBInitializer.h
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/ORBInitializer.h
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/ServerRequestInterceptor.h
        * orbsvcs/tests/Bug_2248_Regression/Server_ORBInitializer.h
        * orbsvcs/tests/Bug_2248_Regression/Server_Request_Interceptor.h
        * orbsvcs/tests/Bug_2285_Regression/ServerORBInitializer.h
        * orbsvcs/tests/Bug_2285_Regression/ServerORBInitializer2.h
        * orbsvcs/tests/Bug_2285_Regression/ServerRequest_Interceptor.h
        * orbsvcs/tests/Bug_2285_Regression/ServerRequest_Interceptor2.h
        * orbsvcs/tests/Bug_2287_Regression/ServerORBInitializer2.h
        * orbsvcs/tests/Bug_2287_Regression/ServerRequest_Interceptor2.h
        * orbsvcs/tests/Bug_2615_Regression/ServerORBInitializer2.h
        * orbsvcs/tests/Bug_2615_Regression/ServerRequest_Interceptor2.h
        * orbsvcs/tests/Bug_3215_Regression/ServerORBInitializer2.h
        * orbsvcs/tests/Bug_3215_Regression/ServerRequest_Interceptor2.h
        * orbsvcs/tests/Bug_3216_Regression/ServerORBInitializer.h
        * orbsvcs/tests/Bug_3216_Regression/ServerRequest_Interceptor.h
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Server_ORBInitializer.h
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Server_Request_Interceptor.h
        * tao/LocalObject.h
        * tao/LocalObject.inl
        * TAO_IDL/be/be_visitor_interface/interface_ih.cpp
        * tests/Bug_1495_Regression/client_interceptor.h
        * tests/Bug_1495_Regression/Client_ORBInitializer.h
        * tests/Bug_1495_Regression/server_interceptor.h
        * tests/Bug_1495_Regression/Server_ORBInitializer.h
        * tests/Bug_3276_Regression/Servant_Locator.h
        * tests/Collocated_Forwarding/Server_ORBInitializer.h
        * tests/Collocated_Forwarding/Server_Request_Interceptor.h
        * tests/ORT/ORT_test_IORInterceptor.h
        * tests/ORT/ServerORBInitializer.h
        * tests/ORT/ServerRequestInterceptor.h
        * tests/POA/Bug_1592_Regression/ServantLocator.h
        * tests/POA/Bug_1592_Regression/Server_ORBInitializer.h
        * tests/POA/Bug_1592_Regression/Server_Request_Interceptor.h
        * tests/POA/Forwarding/Servant_Activator.h
        * tests/POA/Loader/Servant_Activator.h
        * tests/POA/Loader/Servant_Locator.h
        * tests/POA/On_Demand_Activation/Servant_Activator.h
        * tests/POA/On_Demand_Activation/Servant_Locator.h
        * tests/POA/On_Demand_Loading/Servant_Activator.h
        * tests/POA/On_Demand_Loading/Servant_Locator.h
        * tests/Portable_Interceptors/AdvSlot/server.cpp
        * tests/Portable_Interceptors/AdvSlotDblCpy/server.cpp
        * tests/Portable_Interceptors/AdvSlotExt/server.cpp
        * tests/Portable_Interceptors/AMI/Client_Interceptor.h
        * tests/Portable_Interceptors/AMI/Client_ORBInitializer.h
        * tests/Portable_Interceptors/AMI/Server_Interceptor.h
        * tests/Portable_Interceptors/AMI/Server_ORBInitializer.h
        * tests/Portable_Interceptors/Benchmark/client_interceptors.h
        * tests/Portable_Interceptors/Benchmark/Client_ORBInitializer.h
        * tests/Portable_Interceptors/Benchmark/server_interceptors.h
        * tests/Portable_Interceptors/Benchmark/Server_ORBInitializer.h
        * tests/Portable_Interceptors/Bug_1559/client_interceptor.h
        * tests/Portable_Interceptors/Bug_1559/Client_ORBInitializer.h
        * tests/Portable_Interceptors/Bug_1559/server_interceptor.h
        * tests/Portable_Interceptors/Bug_1559/Server_ORBInitializer.h
        * tests/Portable_Interceptors/Bug_2088/Client_ORBInitializer.h
        * tests/Portable_Interceptors/Bug_2133/ClientORBInitializer.h
        * tests/Portable_Interceptors/Bug_2133/ClientRequest_Interceptor.h
        * tests/Portable_Interceptors/Bug_2510_Regression/client_interceptor.h
        * tests/Portable_Interceptors/Bug_2510_Regression/Client_ORBInitializer.h
        * tests/Portable_Interceptors/Bug_2510_Regression/server_interceptor.h
        * tests/Portable_Interceptors/Bug_2510_Regression/Server_ORBInitializer.h
        * tests/Portable_Interceptors/Bug_3079/Client_ORBInitializer.h
        * tests/Portable_Interceptors/Bug_3079/Client_Request_Interceptor.h
        * tests/Portable_Interceptors/Bug_3079/Server_ORBInitializer.h
        * tests/Portable_Interceptors/Bug_3079/Server_Request_Interceptor.h
        * tests/Portable_Interceptors/Bug_3080/Client_ORBInitializer.h
        * tests/Portable_Interceptors/Bug_3080/Client_Request_Interceptor.h
        * tests/Portable_Interceptors/Collocated/Dynamic/Echo_Collocated_ORBInitializer.h
        * tests/Portable_Interceptors/Collocated/Dynamic/interceptors.h
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/Collocated_ORBInitializer.h
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/interceptors.h
        * tests/Portable_Interceptors/Dynamic/client_interceptor.h
        * tests/Portable_Interceptors/Dynamic/Echo_Client_ORBInitializer.h
        * tests/Portable_Interceptors/Dynamic/Echo_Server_ORBInitializer.h
        * tests/Portable_Interceptors/Dynamic/server_interceptor.h
        * tests/Portable_Interceptors/ForwardRequest/Client_ORBInitializer.h
        * tests/Portable_Interceptors/ForwardRequest/Client_Request_Interceptor.h
        * tests/Portable_Interceptors/ForwardRequest/Server_ORBInitializer.h
        * tests/Portable_Interceptors/ForwardRequest/Server_Request_Interceptor.h
        * tests/Portable_Interceptors/IORInterceptor/FOO_Client_ORBInitializer.h
        * tests/Portable_Interceptors/IORInterceptor/FOO_ClientRequestInterceptor.h
        * tests/Portable_Interceptors/IORInterceptor/FOO_IORInterceptor.h
        * tests/Portable_Interceptors/IORInterceptor/FOO_IORInterceptor_ORBInitializer.h
        * tests/Portable_Interceptors/ORB_Shutdown/Server_ORBInitializer.h
        * tests/Portable_Interceptors/ORB_Shutdown/Server_Request_Interceptor.h
        * tests/Portable_Interceptors/PICurrent/ClientORBInitializer.h
        * tests/Portable_Interceptors/PICurrent/ClientRequestInterceptor.h
        * tests/Portable_Interceptors/PICurrent/ClientRequestInterceptor2.h
        * tests/Portable_Interceptors/PICurrent/ServerORBInitializer.h
        * tests/Portable_Interceptors/PICurrent/ServerRequestInterceptor.h
        * tests/Portable_Interceptors/PolicyFactory/IORInterceptor.h
        * tests/Portable_Interceptors/PolicyFactory/Policy.h
        * tests/Portable_Interceptors/PolicyFactory/PolicyFactory.h
        * tests/Portable_Interceptors/PolicyFactory/Server_ORBInitializer.h
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Echo_Collocated_ORBInitializer.h
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/interceptors.h
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/client_interceptor.h
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/Echo_Client_ORBInitializer.h
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/Echo_Server_ORBInitializer.h
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/server_interceptor.h
        * tests/Portable_Interceptors/Recursive_ORBInitializer/Client_ORBInitializer.h
        * tests/Portable_Interceptors/Redirection/Client_ORBInitializer.h
        * tests/Portable_Interceptors/Redirection/Client_Request_Interceptor.h
        * tests/Portable_Interceptors/Redirection/Server_ORBInitializer.h
        * tests/Portable_Interceptors/Redirection/Server_Request_Interceptor.h
        * tests/Portable_Interceptors/Register_Initial_References/Server_ORBInitializer.h
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Client_ORBInitializer.h
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Client_Request_Interceptor.h
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Server_ORBInitializer.h
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Server_Request_Interceptor.h
        * tests/Portable_Interceptors/Service_Context_Manipulation/client_interceptor.h
        * tests/Portable_Interceptors/Service_Context_Manipulation/Client_ORBInitializer.h
        * tests/Portable_Interceptors/Service_Context_Manipulation/server_interceptor.h
        * tests/Portable_Interceptors/Service_Context_Manipulation/Server_ORBInitializer.h
        * tests/Portable_Interceptors/Slot/driver.cpp
        * tests/RTCORBA/Client_Propagated/Client_ORBInitializer.h
        * tests/RTCORBA/Client_Propagated/interceptors.h
        * tests/RTScheduling/Scheduler.h
        * tests/TransportCurrent/IIOP/IIOP_Server_Request_Interceptor.h
        * tests/TransportCurrent/lib/Client_ORBInitializer.h
        * tests/TransportCurrent/lib/Client_Request_Interceptor.h
        * tests/TransportCurrent/lib/Server_ORBInitializer.h
        * tests/TransportCurrent/lib/Server_Request_Interceptor.h
          Don't use TAO_Local_RefCounted_Object but ::CORBA::LocalObject now
          LocalObject is also refcounted. Users can still use TAO_Local_RefCounted_Object,
          it just does nothing, actions have been takin in LocalObject.h
          to prevent the usage of TAO_Local_RefCounted_Object in the
          TAO distribution itself

Mon Apr 28 13:45:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_ACE.mwc:
          Added ETCL and MonitorControl

Mon Apr 28 13:19:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Notify/RT_lib/RT_Application_Command.h
        * orbsvcs/tests/Notify/RT_lib/RT_POA_Command.h
        * orbsvcs/tests/Notify/Test_Filter/RT_Test_Filter.h
        * orbsvcs/tests/Notify/Test_Filter/RT_Test_FilterFactory.h
          Fixed Constuctor to Constructor

Mon Apr 28 13:16:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Monitor/*:
          New test for the monitoring framework

Mon Apr 28 13:10:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * MPC/config/monitor.mpb:
        * MPC/config/tao_etcl.mpb:
        * MPC/config/tao_etcl_parser.mpb:
          New base projects

        * tao/ETCL/*:
          New TAO ETCL library which uses the ACE ETCL library. This will
          replace the orbsvcs ETCL lib

        * tao/Monitor/*:
          New TAO library to get/clear monitor points from a corba client

        * tao/objectid.h:
          Added an id for the Monitor

        * utils/monitor/*:
          Commandline client to retrieve monitor points from a TAO server

        * tao/ORB.cpp:
          Extended rir for Monitor

        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/ORB_Core.inl:
          Added code to get and store the Monitor

        * tao/orbconf.h:
          When ACE has monitoring enabled we also enable it for TAO

Mon Apr 28 12:42:36 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tao/ORB_Core.cpp:
        * tao/params.h:
        * tao/params.inl:
        * tao/params.cpp:
        * docs/Options.html:
        * NEWS:

          Added a new ORB parameter, -ORBAcceptErrorDelay, that controls the
          amount of time to wait before attempting to accept new connections
          when a possibly transient error occurs during accepting a new
          connection. A delay of zero indicates that accepting should not be
          attempted again after the transient error and the handler will be
          removed from the reactor.

        * tao/Transport_Acceptor.h:
        * tao/Transport_Acceptor.inl:
        * tao/Transport_Acceptor.cpp:

          Added code to inspect the error behind an accept() failure and
          take action according to the above ORB parameter.  This includes a
          template that derives from ACE_Strategy_Acceptor that allows the
          sub-classed accptors to use this error handling with minimal code
          changes.

        * tao/IIOP_Acceptor.h:
        * tao/IIOP_Acceptor.cpp:
        * tao/Strategies/SCIOP_Acceptor.h:
        * tao/Strategies/SCIOP_Acceptor.cpp:
        * tao/Strategies/SHMIOP_Acceptor.h:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/UIOP_Acceptor.h:
        * tao/Strategies/UIOP_Acceptor.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.cpp:

          Use the new template provided by TAO_Acceptor and set the accept
          error delay based on the ORB parameter.

        * configure.ac:
        * tests/HandleExhaustion:
        * tests/HandleExhaustion/HandleExhaustion.mpc:
        * tests/HandleExhaustion/Makefile.am:
        * tests/HandleExhaustion/README:
        * tests/HandleExhaustion/Test.idl:
        * tests/HandleExhaustion/client.cpp:
        * tests/HandleExhaustion/run_test.pl:
        * tests/HandleExhaustion/server.cpp:
        * tests/Makefile.am:

          Added a test to exersice the above changes.

Mon Apr 28 11:39:21 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_1269_Regression/client.cpp:
        * tests/Bug_1270_Regression/client.cpp:

          Removed #include of ORB_Task.h.

        * tests/Bug_1269_Regression/ORB_Task.h:
        * tests/Bug_1269_Regression/ORB_Task.cpp:
        * tests/Bug_1270_Regression/ORB_Task.h:
        * tests/Bug_1270_Regression/ORB_Task.cpp:

          Removed these files.  There were not used.

Mon Apr 28 10:26:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype_Adapter.h:
        * tao/RTScheduling/RTScheduler_Initializer.h:
        * tao/PI/PI_ORBInitializer.h:
        * tao/PI_Server/PortableServer_ORBInitializer.h:
          Layout changes

        * tao/Thread_Lane_Resources.cpp:
          No need for intermediate variable

        * tao/RTCORBA/Thread_Pool.cpp:
        * docs/Options.html:
          Extended the -ORBLaneListenEndpoints commandline option with
          support for *, *:* means all pools and all lanes, *:1 means
          lane 1 of all pools, 1:* means all lanes for pool 1. This makes
          it easier to specify an endpoint in a dynamic system. This
          fixes bugzilla 3308

Mon Apr 28 07:45:00 UTC 2008  Simon Massey  <sma at pristmech dot com>

        * tests/Bug_3299_Regression/Hello.cpp:
        Renamed (and rescoped) variable count due to vxworks 5.5 system
        over-used of common variable name.

Fri Apr 25 13:24:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Acceptor_Registry.cpp:
        * tao/IIOP_Acceptor.cpp:
        * tao/ORB_Core.cpp:
        * tao/params.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/Thread_Lane_Resources.cpp:
          layout changes

Fri Apr 25 09:25:00 UTC 2008  Simon Massey  <sma at pristmech dot com>

        * examples/MFC/server.mpc:
        * utils/NamingViewer/NamingViewer.mpc:

          Feature name "uses_wchar" already used within ACE/TAO. Replaces
          the "unicode" feature name. Template / project name within MPC
          still named unicode.

Fri Apr 25 09:10:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DiffServPolicy/Server_Network_Priority_Policy.cpp:
        * tao/Messaging/Buffering_Constraint_Policy.cpp:
        * tao/Messaging/Connection_Timeout_Policy_i.cpp:
        * tao/Messaging/Messaging_Policy_i.cpp:
          Fixed gnu warnings

Fri Apr 25 07:27:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Profile.h:
          Doxygen change

        * tao/RTCORBA/RT_Policy_i.cpp:
          Fixed gnu warning

Thu Apr 24 19:23:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Notify_Service/Notify_Service.{h,cpp}:
          Use bool and removed not used flag

Thu Apr 24 18:33:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BiDir_GIOP/BiDir_ORBInitializer.h
        * tao/BiDir_GIOP/BiDir_PolicyFactory.h
        * tao/CodecFactory/CDR_Encaps_Codec.h
        * tao/CodecFactory/CodecFactory_impl.h
        * tao/Codeset/Codeset_Manager_i.cpp
        * tao/Compression/Base_Compressor.h
        * tao/Compression/Compression_Manager.h
        * tao/Compression/Compressor_Factory.h
        * tao/Configurable_Refcount.h
        * tao/CSD_Framework/CSD_ORBInitializer.h
        * tao/CSD_Framework/CSD_Strategy_Base.h
        * tao/DiffServPolicy/Client_Network_Priority_Policy.cpp
        * tao/DiffServPolicy/Client_Network_Priority_Policy.h
        * tao/DiffServPolicy/DiffServPolicy_Factory.h
        * tao/DiffServPolicy/DiffServPolicy_ORBInitializer.h
        * tao/DiffServPolicy/Server_Network_Priority_Policy.cpp
        * tao/DiffServPolicy/Server_Network_Priority_Policy.h
        * tao/DynamicAny/DynAny_i.h
        * tao/DynamicAny/DynAnyFactory.h
        * tao/DynamicAny/DynArray_i.h
        * tao/DynamicAny/DynEnum_i.h
        * tao/DynamicAny/DynSequence_i.h
        * tao/DynamicAny/DynStruct_i.h
        * tao/DynamicAny/DynUnion_i.h
        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp
        * tao/DynamicInterface/AMH_DSI_Response_Handler.h
        * tao/DynamicInterface/DII_Reply_Handler.h
        * tao/EndpointPolicy/EndpointPolicy_Factory.h
        * tao/EndpointPolicy/EndpointPolicy_i.cpp
        * tao/EndpointPolicy/EndpointPolicy_i.h
        * tao/EndpointPolicy/EndpointPolicy_ORBInitializer.h
        * tao/EndpointPolicy/IIOPEndpointValue_i.cpp
        * tao/EndpointPolicy/IIOPEndpointValue_i.h
        * tao/IORInterceptor/IORInfo.h
        * tao/IORManipulation/IORManipulation.h
        * tao/IORTable/IOR_Table_Impl.h
        * tao/Messaging/AMH_Response_Handler.h
        * tao/Messaging/Buffering_Constraint_Policy.cpp
        * tao/Messaging/Buffering_Constraint_Policy.h
        * tao/Messaging/Connection_Timeout_Policy_i.cpp
        * tao/Messaging/Connection_Timeout_Policy_i.h
        * tao/Messaging/Messaging_ORBInitializer.h
        * tao/Messaging/Messaging_Policy_i.cpp
        * tao/Messaging/Messaging_Policy_i.h
        * tao/Messaging/Messaging_PolicyFactory.h
        * tao/MProfile.inl
        * tao/ORB_Core.cpp
        * tao/PI/ClientRequestInfo.h
        * tao/PI/ORBInitInfo.h
        * tao/PI/PI_ORBInitializer.h
        * tao/PI/PI_PolicyFactory.h
        * tao/PI/PICurrent.h
        * tao/PI/ProcessingModePolicy.h
        * tao/PI_Server/PortableServer_ORBInitializer.h
        * tao/PI_Server/PortableServer_PolicyFactory.h
        * tao/PI_Server/ServerRequestInfo.h
        * tao/Policy_Current.h
        * tao/Policy_Manager.h
        * tao/PortableServer/IdAssignmentPolicy.h
        * tao/PortableServer/IdUniquenessPolicy.h
        * tao/PortableServer/ImplicitActivationPolicy.h
        * tao/PortableServer/LifespanPolicy.h
        * tao/PortableServer/POA_Current.h
        * tao/PortableServer/POAManager.h
        * tao/PortableServer/POAManagerFactory.h
        * tao/PortableServer/RequestProcessingPolicy.h
        * tao/PortableServer/Root_POA.cpp
        * tao/PortableServer/Root_POA.h
        * tao/PortableServer/Servant_Base.cpp
        * tao/PortableServer/ServantRetentionPolicy.h
        * tao/PortableServer/ThreadPolicy.h
        * tao/RTCORBA/Network_Priority_Mapping_Manager.h
        * tao/RTCORBA/Priority_Mapping_Manager.h
        * tao/RTCORBA/RT_Current.h
        * tao/RTCORBA/RT_Mutex.h
        * tao/RTCORBA/RT_ORB.h
        * tao/RTCORBA/RT_ORBInitializer.h
        * tao/RTCORBA/RT_Policy_i.cpp
        * tao/RTCORBA/RT_Policy_i.h
        * tao/RTCORBA/RT_PolicyFactory.h
        * tao/RTCORBA/RT_Transport_Descriptor.h
        * tao/RTCORBA/RT_Transport_Descriptor_Property.h
        * tao/RTScheduling/Current.h
        * tao/RTScheduling/Distributable_Thread.h
        * tao/RTScheduling/Request_Interceptor.h
        * tao/RTScheduling/RTScheduler_Initializer.h
        * tao/RTScheduling/RTScheduler_Manager.h
        * tao/RTScheduling/ThreadAction.h
        * tao/SmartProxies/Smart_Proxies.h
        * tao/Strategies/Strategies_ORBInitializer.h
        * tao/Stub.inl
        * tao/target_specification.h
        * tao/Thread_Lane_Resources_Manager.h
        * tao/TransportCurrent/Current_Impl.h
        * tao/TransportCurrent/Current_ORBInitializer_Base.h
        * tao/TypeCodeFactory/TypeCodeFactory_i.h
          Use CORBA::LocalObject instead of TAO_Local_RefCounted_Object

        * tao/Object.cpp
        * tao/Object.h
          Added _refcount_value as mentioned in the C++ mapping

        * tao/Profile.cpp
        * tao/Profile.inl
          Moved refcount methods inline

Thu Apr 24 14:08:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/LocalObject.{h,inl}:
          Give TAO_Local_RefCounted_Object again a constructor and
          assignment/copy constructor. Footprint increased after
          removing these.

Thu Apr 24 13:59:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/Notify/Lanes/Consumer.h
        * orbsvcs/examples/Notify/Lanes/Consumer_Client.h
        * orbsvcs/examples/Notify/Lanes/ORB_Objects.h
        * orbsvcs/examples/Notify/Lanes/ORB_Run_Task.h
        * orbsvcs/examples/Notify/Lanes/Supplier_Client.h
        * orbsvcs/examples/Notify/ThreadPool/Consumer.h
        * orbsvcs/examples/Notify/ThreadPool/Consumer_Client.h
        * orbsvcs/examples/Notify/ThreadPool/ORB_Objects.h
        * orbsvcs/examples/Notify/ThreadPool/ORB_Run_Task.h
        * orbsvcs/examples/Notify/ThreadPool/Supplier_Client.h
        * orbsvcs/tests/Notify/lib/Activation_Manager.h
        * orbsvcs/tests/Notify/lib/Application_Command.h
        * orbsvcs/tests/Notify/lib/Command.h
        * orbsvcs/tests/Notify/lib/Command_Builder.h
        * orbsvcs/tests/Notify/lib/Command_Factory.h
        * orbsvcs/tests/Notify/lib/Command_Factory_T.h
        * orbsvcs/tests/Notify/lib/Consumer_T.h
        * orbsvcs/tests/Notify/lib/ConsumerAdmin_Command.h
        * orbsvcs/tests/Notify/lib/Direct_Consumer.h
        * orbsvcs/tests/Notify/lib/Direct_Supplier.h
        * orbsvcs/tests/Notify/lib/Driver.h
        * orbsvcs/tests/Notify/lib/EventChannel_Command.h
        * orbsvcs/tests/Notify/lib/Filter_Command.h
        * orbsvcs/tests/Notify/lib/LookupManager.h
        * orbsvcs/tests/Notify/lib/Options_Parser.h
        * orbsvcs/tests/Notify/lib/Peer.h
        * orbsvcs/tests/Notify/lib/Peer_T.h
        * orbsvcs/tests/Notify/lib/Periodic_Consumer.h
        * orbsvcs/tests/Notify/lib/Periodic_Consumer_Command.h
        * orbsvcs/tests/Notify/lib/Periodic_Supplier.h
        * orbsvcs/tests/Notify/lib/Periodic_Supplier_Command.h
        * orbsvcs/tests/Notify/lib/PushConsumer.h
        * orbsvcs/tests/Notify/lib/PushSupplier.h
        * orbsvcs/tests/Notify/lib/Relay_Consumer.h
        * orbsvcs/tests/Notify/lib/SequencePushConsumer.h
        * orbsvcs/tests/Notify/lib/SequencePushSupplier.h
        * orbsvcs/tests/Notify/lib/StructuredEvent.h
        * orbsvcs/tests/Notify/lib/StructuredPushConsumer.h
        * orbsvcs/tests/Notify/lib/StructuredPushSupplier.h
        * orbsvcs/tests/Notify/lib/Supplier_T.h
        * orbsvcs/tests/Notify/lib/SupplierAdmin_Command.h
          Fixed Constuctor to Constructor

        * orbsvcs/orbsvcs/Notify/Properties.{h,cpp}:
          Added close method

Thu Apr 24 10:41:42 UTC 2008  Simon McQueen  <sm@prismtech.com>

        * tao/Synch_Invocation.cpp:

          Fixed a bug where TAO did not honour the required CORBA 'at most
          once' invocation rules whenever an IOR had more than one profile.

        * tests/Bug_3299_Regression:
        * tests/Bug_3299_Regression/Bug_3299_Regression.mpc:
        * tests/Bug_3299_Regression/Hello.h:
        * tests/Bug_3299_Regression/Hello.cpp:
        * tests/Bug_3299_Regression/README:
        * tests/Bug_3299_Regression/Test.idl:
        * tests/Bug_3299_Regression/client.cpp:
        * tests/Bug_3299_Regression/run_test.pl:
        * tests/Bug_3299_Regression/server.cpp:

          Regression test for the above.

Thu Apr 24 12:13:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/Admin.h
        * orbsvcs/orbsvcs/Notify/AdminProperties.h
        * orbsvcs/orbsvcs/Notify/Any/AnyEvent.h
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushConsumer.h
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushSupplier.h
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushConsumer.h
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushSupplier.h
        * orbsvcs/orbsvcs/Notify/Any/PushConsumer.h
        * orbsvcs/orbsvcs/Notify/Any/PushSupplier.h
        * orbsvcs/orbsvcs/Notify/Consumer.h
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.h
        * orbsvcs/orbsvcs/Notify/Container_T.h
        * orbsvcs/orbsvcs/Notify/CosNotify_Initializer.h
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.h
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.h
        * orbsvcs/orbsvcs/Notify/ETCL_FilterFactory.h
        * orbsvcs/orbsvcs/Notify/Event.h
        * orbsvcs/orbsvcs/Notify/Event_Manager.h
        * orbsvcs/orbsvcs/Notify/Event_Map_T.h
        * orbsvcs/orbsvcs/Notify/EventChannel.h
        * orbsvcs/orbsvcs/Notify/EventType.h
        * orbsvcs/orbsvcs/Notify/ID_Factory.h
        * orbsvcs/orbsvcs/Notify/Method_Request_Event.h
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.h
        * orbsvcs/orbsvcs/Notify/Method_Request_Shutdown.h
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates.h
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates_T.h
        * orbsvcs/orbsvcs/Notify/Peer.h
        * orbsvcs/orbsvcs/Notify/Properties.h
        * orbsvcs/orbsvcs/Notify/Property_Boolean.h
        * orbsvcs/orbsvcs/Notify/Property_T.h
        * orbsvcs/orbsvcs/Notify/PropertySeq.h
        * orbsvcs/orbsvcs/Notify/Proxy.h
        * orbsvcs/orbsvcs/Notify/Proxy_T.h
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.h
        * orbsvcs/orbsvcs/Notify/ProxyConsumer_T.h
        * orbsvcs/orbsvcs/Notify/ProxySupplier.h
        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.h
        * orbsvcs/orbsvcs/Notify/QoSProperties.h
        * orbsvcs/orbsvcs/Notify/Reactive_Task.h
        * orbsvcs/orbsvcs/Notify/Refcountable_Guard_T.h
        * orbsvcs/orbsvcs/Notify/RT_Builder.h
        * orbsvcs/orbsvcs/Notify/RT_Factory.h
        * orbsvcs/orbsvcs/Notify/RT_Notify_Service.h
        * orbsvcs/orbsvcs/Notify/RT_Properties.h
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushConsumer.h
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushSupplier.h
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushSupplier.h
        * orbsvcs/orbsvcs/Notify/Structured/RT_StructuredProxyPushSupplier.h
        * orbsvcs/orbsvcs/Notify/Structured/StructuredEvent.h
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushConsumer.h
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushSupplier.h
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushConsumer.h
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushSupplier.h
        * orbsvcs/orbsvcs/Notify/Subscription_Change_Worker.h
        * orbsvcs/orbsvcs/Notify/Supplier.h
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.h
        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.h
        * orbsvcs/orbsvcs/Notify/Timer_Queue.h
        * orbsvcs/orbsvcs/Notify/Timer_Reactor.h
        * orbsvcs/orbsvcs/Notify/Worker_Task.h
          Fixed Constuctor to Constructor

Thu Apr 24 12:16:30 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * examples/RTScheduling/DT_Creator.h:
        * examples/RTScheduling/DT_Creator.cpp:
        * examples/RTScheduling/Job_i.cpp:
        * examples/RTScheduling/MIF_Scheduler/MIF_DT_Creator.cpp:

          Changed to not hold onto the RTScheduling::Current, RTCORBA::RTORB
          or PortableServer::POA.  They are retrieved on demand.  Otherwise,
          static destruction causes problems on some platforms.

        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.h:
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.cpp:

          Modified this test to convert the native priority to the CORBA
          priority before passing it to the RTCORBA::Current::the_priority()
          method.  It expects an RTCORBA priority, not a native priority.

        * examples/RTScheduling/Task_Stats.cpp:

          Changed to only dump statistics if the object has been
          initialized.

        * tao/RTScheduling/RTScheduler_Manager.h:

          Fixed the header guard.  It was the same as the
          Priority_Mapping_Manager.h guard.

Thu Apr 24 12:13:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.h
        * orbsvcs/orbsvcs/Notify/Object.h
        * orbsvcs/orbsvcs/Notify/Object.inl
        * orbsvcs/orbsvcs/Notify/Peer.h
        * orbsvcs/orbsvcs/Notify/Persistent_File_Allocator.h
        * orbsvcs/orbsvcs/Notify/POA_Helper.h
          Layout, bool and doxygen changes

Thu Apr 24 11:34:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.cpp
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.h
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxyConsumer.cpp
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.h
        * orbsvcs/orbsvcs/Notify/Property_Boolean.h
        * orbsvcs/orbsvcs/Notify/Proxy.h
        * orbsvcs/orbsvcs/Notify/ProxyConsumer_T.h
        * orbsvcs/orbsvcs/Notify/Reconnect_Worker_T.h
        * orbsvcs/orbsvcs/Notify/Reconnection_Registry.h
        * orbsvcs/orbsvcs/Notify/Refcountable.h
        * orbsvcs/orbsvcs/Notify/Routing_Slip_Persistence_Manager.h
        * orbsvcs/orbsvcs/Notify/Routing_Slip_Queue.h
        * orbsvcs/orbsvcs/Notify/RT_Notify_Service.h
        * orbsvcs/orbsvcs/Notify/RT_Properties.h
        * orbsvcs/orbsvcs/Notify/Seq_Worker_T.h
          Layout, bool and doxygen changes

Thu Apr 24 11:10:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/Admin.cpp
        * orbsvcs/orbsvcs/Notify/Admin.h
        * orbsvcs/orbsvcs/Notify/AdminProperties.h
        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.h
        * orbsvcs/orbsvcs/Notify/Consumer.h
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.h
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.h
        * orbsvcs/orbsvcs/Notify/Event_Persistence_Factory.h
        * orbsvcs/orbsvcs/Notify/EventChannel.h
        * orbsvcs/orbsvcs/Notify/EventChannelFactory.h
        * orbsvcs/orbsvcs/Notify/EventType.h
        * orbsvcs/orbsvcs/Notify/EventTypeSeq.h
        * orbsvcs/orbsvcs/Notify/ID_Factory.h
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.cpp
          Layout and doxygen changes

Thu Apr 24 10:38:00 UTC 2008  Simon Massey  <sma at pristmech dot com>

        * orbsvcs/tests/Security/mixed_security_test/mixed_security.mpc:
        * orbsvcs/tests/Security/ssliop_CSD/ssliop_CSD.mpc:

          Stopped multi-build conflicts with VC8.

        * examples/MFC/client.mpc:
        * examples/MFC/server.mpc:

          Stopped multi-build conflicts with VC8 (Avoid Unicode for now).

        * utils/NamingViewer/NamingViewer.mpc:

          Avoid unicode for now.

Thu Apr 24 10:25:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/Admin.h:
        * orbsvcs/orbsvcs/Notify/EventChannel.h:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.h:
        * orbsvcs/orbsvcs/Notify/QoSProperties.h:
        * orbsvcs/orbsvcs/Notify/Reactive_Task.h:
        * orbsvcs/orbsvcs/Notify/RT_POA_Helper.h:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.h:
        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.cpp:
        * orbsvcs/orbsvcs/Notify/Timer_Queue.h:
        * orbsvcs/orbsvcs/Notify/Timer_Reactor.h:
        * orbsvcs/orbsvcs/Notify/Topology_Object.h:
        * orbsvcs/orbsvcs/NotifyExt.idl:
        * orbsvcs/orbsvcs/PortableGroup/GOA.cpp:
        * orbsvcs/orbsvcs/PortableGroup/GOA.h:
          Layout changes

        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Guard.{h,cpp}:
          Changed released flag to a bool

Thu Apr 24 09:49:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BiDir_GIOP/BiDir_Policy_i.cpp:
        * tao/BiDir_GIOP/BiDir_Policy_i.h:
          Get rid of TAO_Local_RefCounted_Object. If this doesn't lead to
          compile warnings I will commit more changes to the core TAO libs

Thu Apr 24 09:21:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Adapter_Registry.{h,cpp}:
        * tao/Compression/Compression.h:
        * tao/PortableServer/Adapter_Activator.cpp:
        * tao/ORB_Core.h:
          Layout changes

        * tao/BiDir_GIOP/BiDir_Policy_i.cpp:
          Initialise pointer with 0

        * tao/IORTable/IORTable.pidl:
          Doxygen changes

        * tao/PortableServer/Root_POA.cpp:
          Layout and bool changes

        * tao/Object.{h,cpp,inl}:
        * tao/LocalObject.{h,cpp,inl}:
          Updated TAO to the 1.2 IDL to C++ mapping. LocalObject is now
          refcounted by default. TAO_Local_RefCounted_Object is now an
          empty class kept for backward compatibility. CORBA::LocalObject
          can be used directly now, we have to update the other parts
          of TAO to not use this class anymore

Wed Apr 23 18:12:35 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/AV/AV_Core.cpp:

          A change made to this file back on Tue June 24 16:26:06 2003
          caused the Simple_Three_Stage test to fail 100% of the time.  I'm
          not sure how this went unnoticed.  I reworked the change to retain
          the intended functionality, but still allow the test pass.

        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.h:
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.inl:
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.cpp:
        * orbsvcs/orbsvcs/AV/UDP.cpp:

          Cleaned up memory errors and leaks.

        * orbsvcs/orbsvcs/AV/Protocol_Factory.cpp:
        * orbsvcs/orbsvcs/AV/Transport.cpp:

          Initialize the ref_count data member.

        * orbsvcs/tests/AVStreams/Simple_Three_Stage/sender.cpp:

          Use the correct return type for the call to ACE_OS::fread().

Wed Apr 23 15:22:20 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Oneway_Send_Timeouts/Client.cpp:
        * tests/Oneway_Send_Timeouts/Server.cpp:
        * tests/Oneway_Send_Timeouts/run_test.pl:
          Fix minor memory leak. Fix mismatched delete.

Wed Apr 23 14:08:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2494_Regression/run_test.pl:
          Check return value of spawn

        * tests/CodeSets/libs/IBM1047_ISO8859/Char_IBM1047_ISO8859_Translator.h:
        * tests/CodeSets/libs/IBM1047_ISO8859/Wchar_IBM1047_ISO8859_Translator.h:
          Layout changes

        * tests/OBV/Forward/run_test.pl:
          Changed wait time

        * tests/Portable_Interceptors/Dynamic/run_test.pl:
          Removed duplicated names

Wed Apr 23 14:05:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/catior/catior.cpp:
          Handle TAG_RMI_CUSTOM_MAX_STREAM_FORMAT and IBM_PARTNER_VERSION

Wed Apr 23 14:03:32 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CodeSets/libs/UTF16_UCS2/UTF16_UCS2_export.h:
        * tests/CodeSets/libs/UTF16_UCS2/UTF16_UCS2_Factory.cpp:
        * tests/CodeSets/libs/UTF16_UCS2/UTF16_UCS2_Factory.h:
        * tests/CodeSets/libs/UTF16_UCS2/UTF16_UCS2_Translator.cpp:
        * tests/CodeSets/libs/UTF16_UCS2/UTF16_UCS2_Translator.h:
        * tests/CodeSets/libs/UTF16_UCS2/UTF16_UCS2_Translator.mpc:
          Ported UTF16_UCS2 translator from OCI 1.4a to svn head. Fixes
          bugzilla 3296

Wed Apr 23 01:53:32 CDT 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO version 1.6.4 released.

Wed Apr 16 13:03:25 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/TAO_Internal.cpp:

        Synthetic arguments for -ORBSvcConfDirective must be quoted to
        ensure correct interpretation.

Tue Apr 15 12:15:35 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/TAO_Internal.cpp:

          Turns out ACE_ARGV only allows "iterative" use (e.g. adding new
          arguments to the list), when created with one of the ctors.

Mon Apr 14 20:14:18 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/ORB.cpp:
        * tao/TAO_Internal.h:

          Adding a wchar/char conversion before calling the
          initialization.

        * tao/TAO_Internal.cpp:

          Removing the use of CORBA::StringSeq to store intermediate
          argument lists in favor of ACE_ARGV, which is more wchar-aware.

Fri Apr 11 10:50:37 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/TAO_Internal.cpp:

          Adding ACE_TEXT

Thu Apr 10 22:40:22 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/ORB.cpp:
        * tao/ORB_Core.h:
        * tao/ORB_Core.cpp:
        * tao/TAO_Internal.cpp:

          Eliminating the typedef for
          ACE_Intrusive_Auto_Ptr<ACE_Service_Gestalt>.

Thu Apr 10 12:42:34 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CodeSets/simple/run_test.pl:
          Fixed bug in add_lib_paths

Thu Apr 10 11:42:34 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
          Fixed invalid delete

Thu Apr 10 11:29:34 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Object_Map.{h,cpp}:
          Use an auto_ptr to store the members, simplifies our code

        * tao/PortableServer/ServantRetentionStrategyRetain.{h,cpp}:
          Don't use an auto_ptr in the constructor, just use it as member. This was
          a left over of emulated exception support, thanks to Jeff Parsons
          for finding this

        * tao/Transport.cpp:
          Layout change

Thu Apr 10 08:15:00 UTC 2008  Simon Massey  <simon dot massey at prismtech dot com>

        * orbsvcs/performance-tests/RTEvent/lib/RIR_Narrow.cpp:

          Another "interface" VC8 MFC conflict.

        * tests/DII_AMI_Forward/DII_AMI_Forward.mpc:

          VC8 multi-build conflict (both server + client) over the test.idl

        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/UUID.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/UUID.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/UUID.inl:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Identification_Service.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.cpp:

          Place this specialised UUID class into it's own TAO_FtRt namespace.

Wed Apr  9 18:01:34 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Default_Thread_Lane_Resources_Manager.cpp:
        * tao/IORManipulation/IORManip_Loader.cpp:
          Layout changes

        * tao/IORManipulation/IORManipulation.h:
          Doxygen and layout changes

        * tao/ORBInitializer_Registry.cpp:
          Removed VxWorks specific code, with the new SG/SC implementation
          this shouldn't be needed anymore.

        * tao/Transport_Cache_Manager.cpp:
          Const and layout changes

Wed Apr  9 14:00:34 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/ORB.cpp:

          Fixing a complaint about the use of a implicit temporary with
          operator=().

Tue Apr  8 12:58:34 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/TAO_Internal.cpp:

          Fixing a fuzz complaint

Tue Apr  8 12:04:20 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

          This is the last batch of changes related to the re-factoring of
          the service configuration, which aims to eliminate a number of
          related memory leaks and bugs. The changes are being ported back
          from the "iliyan-gestalt" branch.

        * tao/ORB.h:
        * tao/ORB.cpp (ORB_init,init_orb_globals,find_orb_context):

          Modified ORB_init to accept -ORBGestalt command line parameter
          which specifies which service configuration context the new ORB
          will use.  Acceptable values (case-insensitive) include "LOCAL"
          forces the ORB to manage its own, local service configuration
          context (gestalt).  "GLOBAL" forces the new ORB to use (but not
          own) the process-global gestalt. The caller can also identify a
          particular existing ORB, who will share its ownership of a gestalt
          with the new ORB. The existing ORB ID must be prefixed with "ORB:"
          and the resulting string as a whole is case-sensitive. Removed
          init_orb_globals.

        * tao/ORB_Core.h (TAO_ORB_Core):
        * tao/ORB_Core.inl (configuration):
        * tao/ORB_Core.cpp (TAO_ORB_Core,orbinitializer_registry_i):

          Modified tor to take a smart pointer for the service
          configuration. The core now has a smart pointer member which
          allows us to destroy local service configuration contexts
          _exactly_ when they are no longer needed and eliminate memory
          leaks.

        * tao/TAO_Internal.h:
        * tao/TAO_Internal.cpp (close_services,open_services):

          Updated for the use of smart pointer for the gestalt

        * tests/ORB_Local_Config/Shared/Test.cpp (testReusingGlobals):

Sun Apr  6 00:03:27 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * orbsvcs/tests/Notify/Bug_3252_Regression/server.cpp:
        * tests/ORB_Local_Config/Bug_1459/Test.cpp:
        * tests/ORB_Local_Config/Bunch/Test.cpp:
        * tests/ORB_Local_Config/Separation/Test.cpp:
        * tests/ORB_Local_Config/Service_Dependency/Test.cpp:
        * tests/ORB_Local_Config/Shared/Test.cpp:
        * tests/ORB_Local_Config/Simple/Test.cpp:

        Changes to account for the intrusive-recounted-ness of
        ACE_Service_Gestalt instances.

Fri Apr  4 22:15:16 UTC 2008  Iliyan Jeliazkov  <iliyan@ociweb.com>

        This is the first batch of changes related to the refactoring of
        the service configuration, which aims to eliminate a number of
        related memory leaks and bugs. The changes are being ported back
        from the "iliyan-gestalt" branch.

        * orbsvcs/tests/Bug_3216_Regression/run_test.pl:

        Fixed to use $ACE_ROOT instead of '../..', to search for PerlACE.

        * tao/ORBInitializer_Registry.cpp:

        Removing a misplaced call to TAO::ORB::init_orb_globals(). Now
        that the latter has non-trivial functionality, calling it from an
        ORB initializer would be wrong.

        * tests/Bug_2735_Regression/server.cpp:

        The argv must be 0-terminated to fulfill the contract with C's
        argv.

        * tests/Bug_2936_Regression/PersistentPOA.cpp:

        Fixing (what seems to be) a bad ownership transfer of Object's,
        causing memory leaks.

        * tests/Bug_3251_Regression/Bug_3251.conf:
        * tests/Bug_3251_Regression/PersistentPoa.h:
        * tests/Bug_3251_Regression/server.cpp:

        Changes to make it compile (but not test anything) on
        Windows. Also added a call to sync (after fork) so we get the
        correct values for PID in the child.

        * tests/ORB_Local_Config/run_tests_all.pl:

        Fixed a bug that was preventing it from running.

Fri Apr  4 10:20:00 UTC 2008  Simon Massey  <simon dot massey at prismtech dot com>

        * orbsvcs/tests/Bug_1630_Regression/testclient.cpp:

          Another "interface" VC8 MFC conflict.

Thu Apr  3 15:15:00 UTC 2008  Simon Massey  <simon dot massey at prismtech dot com>

        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.cpp:

          Another "interface" VC8 MFC conflict.

Thu Apr  3 09:40:00 UTC 2008  Simon Massey  <simon dot massey at prismtech dot com>

        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.h:

          Using "interface" as the descriptive name of a parameter seems to
          cause VC8 (when building with MFC) to assume you mean a struct type
          and it raises an incorrect systax error.

Thu Apr  3 01:18:45 UTC 2008  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/DSI_Gateway/client.cpp:

          Reworded exception handlers to avoid having the nightly build
          scoreboard detect expected exceptions as errors. This is the
          same error that was documented in bug 2879.

Wed Apr  2 12:13:50 UTC 2008  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/DSI_AMI_Gateway/client.cpp:

          Reworded exception handlers to avoid having the nightly build
          scoreboard detect expected exceptions as errors. This resolves
          bug 2879.

Wed Apr  2 11:47:45 UTC 2008  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tests/Collocated_Forwarding/Server_ORBInitializer.h:
        * tests/Collocated_Forwarding/Server_Request_Interceptor.h:
        * tests/Collocated_Forwarding/test_i.h:

          Added Id svn keyword to those headers.

Wed Apr  2 11:33:48 UTC 2008  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tao/PortableServer/Direct_Collocation_Upcall_Wrapper.cpp:
          Fixed a warning.

        * tests/Collocated_Forwarding/Collocated_Forwarding.mpc:
          Added avoids_minimum_corba, avoids_corba_e_compact, and
          avoids_corba_e_micro.

Tue Apr  1 14:57:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Collocated_Forwarding/run_test.pl:
          VxWorks updates

        * tests/Collocated_Forwarding/Collocated_Forwarding.mpc:
          Simplified

Tue Apr  1 14:11:00 UTC 2008  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tao/PortableServer/Object_Adapter.cpp:
          Fixed a memory leak that was happening because a forward
          reference was duplicated twice.

        * tests/Collocated_Forwarding/Server_ORBInitializer.h:
        * tests/Collocated_Forwarding/Server_Request_Interceptor.h:
        * tests/Collocated_Forwarding/test.idl:
        * tests/Collocated_Forwarding/server.cpp:
        * tests/Collocated_Forwarding/test_i.cpp:
        * tests/Collocated_Forwarding/Collocated_Forwarding.mpc:
        * tests/Collocated_Forwarding/Server_ORBInitializer.cpp:
        * tests/Collocated_Forwarding/Server_Request_Interceptor.cpp:
        * tests/Collocated_Forwarding/run_test.pl:
        * tests/Collocated_Forwarding/test_i.h:
          Added a new test for collocated forwarding case.
          For details see Bug#3276.

        * tests/Bug_3276_Regression/client.cpp:
        * tests/Bug_3276_Regression/Servant_Locator.cpp:
        * tests/Bug_3276_Regression/Manager.cpp:
          Changed main to ACE_TMAIN.

Tue Apr  1 13:17:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Load_Balancing/run_test.pl:
        * examples/Logging/run_test.pl:
        * examples/TypeCode_Creation/run_test.pl:
          Improved these scripts

Tue Apr  1 13:13:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/AMH/Sink_Server/run_test.pl:
        * examples/Buffered_AMI/run_test.pl:
        * examples/OBV/Typed_Events/run_test.pl:
          Improved these scripts

Tue Apr  1 12:59:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/AnySeq.pidl
        * tao/AnyTypeCode/Dynamic.pidl
        * tao/AnyTypeCode/Dynamic_Parameter.pidl
        * tao/AnyTypeCode/ValueModifier.pidl
        * tao/AnyTypeCode/Visibility.pidl
        * tao/BiDir_GIOP/BiDirPolicy.pidl
        * tao/CharSeq.pidl
        * tao/CSD_Framework/CSD_Framework.pidl
        * tao/DoubleSeq.pidl
        * tao/EndpointPolicy/EndpointPolicyType.pidl
        * tao/FloatSeq.pidl
        * tao/GIOP.pidl
        * tao/IFR_Client/IFR_Base.pidl
        * tao/IFR_Client/IFR_Basic.pidl
        * tao/IFR_Client/IFR_Components.pidl
        * tao/IFR_Client/IFR_Extended.pidl
        * tao/IIOP.pidl
        * tao/IIOP_Endpoints.pidl
        * tao/ImR_Client/ImplRepo.pidl
        * tao/ImR_Client/ServerObject.pidl
        * tao/IORInterceptor/IORInfo.pidl
        * tao/IORInterceptor/IORInterceptor.pidl
        * tao/IORManipulation/IOR.pidl
        * tao/IORTable/IORTable.pidl
        * tao/LongDoubleSeq.pidl
        * tao/LongLongSeq.pidl
        * tao/LongSeq.pidl
        * tao/Messaging/Messaging.pidl
        * tao/Messaging/Messaging_No_Impl.pidl
        * tao/Messaging/Messaging_RT_Policy.pidl
        * tao/Messaging/Messaging_SyncScope_Policy.pidl
        * tao/Messaging/Messaging_Types.pidl
        * tao/Messaging/Pollable.pidl
        * tao/Messaging_PolicyValue.pidl
        * tao/Messaging_SyncScope.pidl
        * tao/Object_Key.pidl
        * tao/orb_types.pidl
        * tao/ParameterMode.pidl
        * tao/PI/ClientRequestInfo.pidl
        * tao/PI/ClientRequestInterceptor.pidl
        * tao/PI/Interceptor.pidl
        * tao/PI/InvalidSlot.pidl
        * tao/PI/ORBInitializer.pidl
        * tao/PI/ORBInitInfo.pidl
        * tao/PI/PIForwardRequest.pidl
        * tao/PI/RequestInfo.pidl
        * tao/PI_Server/ServerRequestInfo.pidl
        * tao/PI_Server/ServerRequestInterceptor.pidl
        * tao/PortableInterceptor.pidl
        * tao/PortableServer/POA.pidl
        * tao/PortableServer/PortableServer.pidl
        * tao/PortableServer/PS_Forward.pidl
        * tao/PortableServer/ServantActivator.pidl
        * tao/PortableServer/ServantLocator.pidl
        * tao/PortableServer/ServantManager.pidl
        * tao/RTCORBA/RTCORBA.pidl
        * tao/RTPortableServer/RTPortableServer.pidl
        * tao/RTScheduling/RTScheduler.pidl
        * tao/Services.pidl
        * tao/ShortSeq.pidl
        * tao/Strategies/COIOP_Endpoints.pidl
        * tao/Strategies/sciop_endpoints.pidl
        * tao/Strategies/uiop_endpoints.pidl
        * tao/StringSeq.pidl
        * tao/TimeBase.pidl
        * tao/UShortSeq.pidl
        * tao/WCharSeq.pidl
        * tao/WStringSeq.pidl
          Updated regeneration instructions

Tue Apr  1 12:57:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Logging/run_test.pl:
        * examples/OBV/Typed_Events/run_test.pl:
          Improved these scripts

Tue Apr  1 12:51:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/PluggableUDP/tests/Performance/run_test.pl:
        * examples/PluggableUDP/tests/Performance/run_test_ipv6.pl:
        * examples/PluggableUDP/tests/SimplePerformance/run_test.pl:
        * examples/PluggableUDP/tests/SimplePerformance/run_test_ipv6.pl:
        * tests/DIOP/run_test.pl:
          Improved these scripts

Tue Apr  1 12:40:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DSI_AMI_Gateway/run_exception_test.pl:
        * tests/DSI_AMI_Gateway/run_test.pl:
        * tests/DSI_Gateway/run_exception_test.pl:
        * tests/DSI_Gateway/run_test.pl:
          Improved these scripts

Tue Apr  1 10:25:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/RTScheduling/Scheduling_Interceptor/run_test.pl:
        * tests/AMH_Exceptions/run_test.pl:
        * tests/AMH_Oneway/run_test.pl:
        * tests/TransportCurrent/Framework/run_test.pl:
          Improved these scripts

Tue Apr  1 08:48:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/BiDir_CORBALOC/run_test.pl:
        * orbsvcs/tests/Bug_2800_Regression/run_test_federated.pl:
        * orbsvcs/tests/Event/Mcast/Complex/run_test.pl:
        * orbsvcs/tests/Event/Mcast/Simple/run_test.pl:
        * orbsvcs/tests/Event/Mcast/Two_Way/run_test.pl:
        * orbsvcs/tests/Interoperable_Naming/run_test.pl:
        * orbsvcs/tests/Redundant_Naming/run_test.pl:
        * orbsvcs/tests/Security/ssliop_corbaloc/run_test.pl:
        * orbsvcs/tests/Simple_Naming/run_test.pl:
        * orbsvcs/tests/Simple_Naming/run_test_ffp.pl:
        * orbsvcs/tests/Simple_Naming/run_test_ipv6.pl:
        * orbsvcs/tests/Trading/run_test.pl:
          Improved these scripts

        * orbsvcs/tests/AVStreams/Pluggable/ftp.cpp:
        * orbsvcs/tests/AVStreams/Pluggable/server.cpp:
          No need to specify empty orb name

Tue Apr  1 08:46:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Advanced/ch_18/run_test.pl:
        * examples/Callback_Quoter/run_test.pl:
        * examples/ior_corbaloc/run_test.pl:
        * examples/Logging/run_test.pl:
        * examples/Quoter/run_test.pl:
        * examples/RTScheduling/Fixed_Priority_Scheduler/run_test.pl:
        * examples/RTScheduling/MIF_Scheduler/run_test.pl:
          Improved these scripts

Tue Apr  1 07:34:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/AMH/Sink_Server/run_test.pl:
        * examples/Load_Balancing/run_test.pl:
        * examples/PluggableUDP/tests/Performance/run_test.pl:
        * examples/PluggableUDP/tests/Performance/run_test_ipv6.pl:
          Updated to support VxWorks

Tue Apr  1 07:26:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/nslist/run_test.pl:
          Also test nsdel

Tue Apr  1 06:55:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/CSD_Strategy/ThreadPool2/ClientApp.cpp:
          Layout changes

        * examples/CSD_Strategy/ThreadPool2/Foo_i.cpp:
          Removed not needed semi colon

        * examples/Simple/bank/run_test.pl:
        * examples/Simple/echo/run_test.pl:
        * examples/Simple/grid/run_test.pl:
        * examples/Simple/time-date/run_test.pl:
        * examples/Simple/time/run_test.pl:
          Updated to support VxWorks

Mon Mar 31 18:20:01 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * tests/Oneway_Send_Timeouts/Client.cpp:
        * tests/Oneway_Send_Timeouts/Server.cpp:
        * tests/Oneway_Send_Timeouts/Server_Task.h:
        * tests/Oneway_Send_Timeouts/Test_i.h:
        * tests/Oneway_Send_Timeouts/Test_i.cpp:
        * tests/Oneway_Send_Timeouts/main.cpp:
          Thread cleanup fixes.

Mon Mar 31 15:55:18 UTC 2008  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tao/GIOP_Message_Base.cpp:
        * tao/PortableServer/PolicyS.cpp:
        * tao/PortableServer/PolicyS.h:
        * tao/PortableServer/Direct_Collocation_Upcall_Wrapper.h:
        * tao/PortableServer/Upcall_Wrapper.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Direct_Collocation_Upcall_Wrapper.cpp:
        * tao/Collocation_Proxy_Broker.h:
        * tao/Collocated_Invocation.cpp:
        * tao/PI_Server/ServerInterceptorAdapter.cpp:
        * TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_ss.cpp:

          Provided additional fix for Bug#2376. In particular added is_forwaded
          argument to Collocation_Proxy_Broker::dispatch which will indicate a
          forwarding case. Changed code generation in tao_idl according to the
          new signature of that dispatch method. Also found another place in
          Upcall_Wrapper.cpp that assumes that forwarding must be done if a
          forward reference is not nil. And since TAO_ServerRequest has both
          pi_reply_status and reply_status features added a code that set to
          forwarding state each of them if only one changes. So, that if
          reply_status is set GIOP::LOCATION_FORWARD then pi_reply_status
          is set to PortableInterceptor::LOCATION_FORWARD immediately after
          that.

Mon Mar 31 08:45:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * configure.ac:
          Improved TAO autoconf support, fixes bugzilla 3274
          This to Thomas Girard <thomas dot g dot girard at free dot fr>
          for reporting this

Mon Mar 31 08:39:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
          Corrected length of MIOP packet_length. This fixes bugzilla 3275. Thanks
          to Alvaro Vega Garcia <avega at tid dot es> for reporting this

        * orbsvcs/examples/PSS/server.cpp:
        * orbsvcs/examples/PSS/Simple_Naming.cpp:
        * orbsvcs/Notify_Service/Notify_Service.cpp:
          No need to specify empty orb name

        * orbsvcs/Naming_Service/Naming_Service.cpp:
          Const change

        * orbsvcvs/tests/Notify/Test_Filter/Test_Filter.mpc:
          Layout changes

Mon Mar 31 08:31:18 UTC 2008  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tests/Bug_3276_Regression/Manager.h:
        * tests/Bug_3276_Regression/Manager.cpp:
        * tests/Bug_3276_Regression/Servant_Locator.h:
        * tests/Bug_3276_Regression/Bug_3276_Regression.mpc:

          Changed a bit the tests in spirit of TAO and excluded it from
          corba_e_compact and corba_e_micro builds.

Fri Mar 28 15:30:12 UTC 2008  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tao/Invocation_Base.h:
        * tao/LocateRequest_Invocation_Adapter.cpp:
        * tao/Invocation_Base.cpp:
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/ClientRequestInterceptor_Adapter.h:
        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.h:
        * tao/PI/ClientRequestInfo.cpp:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.cpp:
        * tao/Invocation_Adapter.cpp:

          Changed reply_status to pi_reply_status as agreed in Bug#2377.

Fri Mar 28 14:57:25 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Invocation_Adapter.cpp:
        * tao/LocateRequest_Invocation_Adapter.cpp:

          Use .in() on a var to avoid warnings from gcc.

Fri Mar 28 14:34:35 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/CosNaming_Serv.mpc:
        * orbsvcs/orbsvcs/cosnaming_serv_persistence.mpb:

          Pulled the persistence related files into it's own base project
          that's only enabled when the 'corba_e_micro' feature is disabled.

        * orbsvcs/orbsvcs/Naming/Naming_Server.h:
        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp:
        * orbsvcs/orbsvcs/Naming/Transient_Naming_Context.cpp:

          Made modifications to allow the server library to compile when
          'corba_e_micro' is enabled.  All persistence is disabled in this
          case.  It requires more functionality than is provided by the POA.

Fri Mar 28 09:07:14 UTC 2008  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tao/GIOP_Message_Base.cpp:
        * tao/PortableServer/Upcall_Wrapper.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/Invocation_Base.h:
        * tao/LocateRequest_Invocation_Adapter.cpp:
        * tao/Invocation_Base.cpp:
        * tao/Collocated_Invocation.cpp:
        * tao/ORB_Core.inl:
        * tao/IORTable/Table_Adapter.cpp:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/TAO_Server_Request.cpp:
        * tao/Invocation_Base.inl:
        * tao/Adapter_Registry.cpp:
        * tao/TAO_Server_Request.h:
        * tao/Invocation_Adapter.cpp:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/TAO_Server_Request.inl:

          Fixed a bug in the server side code with incorrect handling
          of forward request exception that was contstructed with nil
          object reference. Added throwing of a TRANSIENT exception on
          the client side in case server forwards to nil object.

        * tests/Bug_3276_Regression/client.cpp:
        * tests/Bug_3276_Regression/Manager.h:
        * tests/Bug_3276_Regression/Servant_Locator.cpp:
        * tests/Bug_3276_Regression/test.idl:
        * tests/Bug_3276_Regression/test_i.cpp:
        * tests/Bug_3276_Regression/Manager.cpp:
        * tests/Bug_3276_Regression/Servant_Locator.h:
        * tests/Bug_3276_Regression/Bug_3276_Regression.mpc:
        * tests/Bug_3276_Regression/README:
        * tests/Bug_3276_Regression/run_test.pl:
        * tests/Bug_3276_Regression/test_i.h:

          Added a regression test.

Thu Mar 27 18:44:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/Options.html:
          Fixed bugzilla links

Thu Mar 27 13:15:39 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tao/diffs/Object_Key.diff:

          Fixed this malformed patch.

Thu Mar 27 12:02:29 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Notify/Bug_3252_Regression/DllOrb.cpp:
        * tests/Bug_3251_Regression/DllOrb.cpp:

          Use ACE_auto_ptr_reset() instead of directly assigning to an
          auto_ptr.  This doesn't work for VxWorks 6.4 (gcc 3.4.4).

Thu Mar 27 11:50:03 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp:

          Removed build warning from gcc on Solaris.

Wed Mar 26 22:35:31 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * docs/ORBEndpoint.html:
        * tao/ORB_Core.h:

          Removed references to ORBListenEndpoint (singular) from comments and
          HTML documentation.  The option is called ORBListenEndpoints (plural).

Tue Mar 25 18:01:58 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * tests/CDR/allocator.cpp:
        * tests/OctetSeq/client.cpp:
        * tests/RTCORBA/RTMutex/server.cpp:

          Added casts to avoid compiler warnings.

Tue Mar 25 17:50:23 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/examples/Notify/MC/monitor/monitor.cpp:
        * orbsvcs/tests/unit/Notify/MC/MonitorControlExt/MonitorControlExt.cpp:

          Use .in() to avoid warnings from gcc.

Tue Mar 25 14:13:15 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/notify_serv.mpb:

          Changed the order of Notification_Serv and Notification_Skel so they
          are in the correct dependency order.

        * orbsvcs/tests/Bug_2926_Regression/Bug_2926_Regression.mpc:

          Removed a redundant base project.

Mon Mar 24 21:17:12 UTC 2008  J.T. Conklin  <jtc@acorntoolworks.com>

        * utils/nslist/Makefile.am:

          Regenerated.

Mon Mar 24 17:28:37 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/MonitorControl/Generic_Registry.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Generic_Registry.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.inl:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannel.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannel.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannelFactory.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannelFactory.cpp:

          Switch from using ACE_SYNCH_* to TAO_SYNCH_* to avoid fuzz errors.

Mon Mar 24 12:33:47 UTC 2008  Chad Elliott  <elliott_c@ociweb.com>

        * NEWS:

          Added an entry for this feature addition.

        * docs/notification/using_monitor_extensions.html:

          Documented the ability to create named consumer and supplier
          admins.

        * orbsvcs/examples/Notify/MC/TkMonitor/modules/MonitorControl.pm:

          Changed to avoid displaying queue size if the queue size is zero.

        * orbsvcs/examples/Notify/MC/monitor/monitor.cpp:

          Added commands to remove consumer and supplier admins.

        * orbsvcs/orbsvcs/Notify/Admin.cpp:

          Fixed a bug where memory was accessed after it was deleted.

        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.h:
        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorConsumerAdmin.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannelFactory.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/NotifyMonitoringExt.idl:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/Statistic.cpp:

          Added a statistic to track the queue size for each ConsumerAdmin.
          Each time a message is added to or removed from the queue, a queue
          measurement is taken.  This allows the statistic observer to see
          the average queue size for each consumer admin.

          Conversly, the event channel queue size is calculated by adding up
          all the consumer admin queues and is only accessed when the
          statistic observer requests it.

        * orbsvcs/orbsvcs/Notify/MonitorControl/Control.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMC.idl:
        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMonitor_i.h:
        * orbsvcs/orbsvcs/Notify/MonitorControl/NotificationServiceMonitor_i.cpp:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannel.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorEventChannel.cpp:

          Added the ability to remove individual consumers and suppliers
          from the event channel.  Technically, the supplier proxy and
          consumer proxy are the objects that are removed.

          Added operations to remove consumer and supplier admins through
          the monitor interface.

        * orbsvcs/orbsvcs/Notify/EventChannel.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorSupplierAdmin.h:
        * orbsvcs/orbsvcs/Notify/MonitorControlExt/MonitorSupplierAdmin.cpp:

          Added statistics to track the names and counts of consumer and
          supplier admins.  Also added code to remove consumer and supplier
          admins by name.

        * orbsvcs/tests/Notify/MC/test_monitor.cpp:
        * orbsvcs/tests/unit/Notify/MC/Control/Control.cpp:
        * orbsvcs/tests/unit/Notify/MC/MonitorControlExt/MonitorControlExt.cpp:

          Updated tests for the changes above.

Mon Mar 24 02:25:48 UTC 2008  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * COPYING: Updated the license a bit based on feedback from Tom
          Callaway" <tcallawa at redhat dot com>.  These changes will
          enable ACE+TAO to be shipped with Fedora.

Fri Mar 21 15:43:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_3251_Regression/server.cpp:
          Fixed warnings in vxworks build

Fri Mar 21 15:41:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/nslist/nslist.cpp:
        * utils/nslist/nsdel.cpp:
          Added missign duplicate calls

Thu Mar 20 18:29:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/nslist/nslist.cpp:
          Fixed argument not used warning

Thu Mar 20 14:09:06 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/tests/Notify/Bug_3252_Regression/DllOrb.cpp:

          Same fix as my previous commit, applied to this copy of DllOrb.cpp:
          Tue Mar 18 15:07:23 UTC 2008  Adam Mitz  <mitza@ociweb.com>

Wed Mar 19 15:16:46 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * orbsvcs/orbsvcs/IFRService/OperationDef_i.cpp:

          Updated to throw an exception instead of crashing when the IFR
          encounters an incomplete type during a query operation.

Wed Mar 19 14:54:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CSD_Strategy_Tests/TP_Common/CSD_TP_Test_Lib.mpc:
          Set project name

        * tests/DII_AMI_Forward/DII_AMI_Forward.mpc:
        * tests/ORB_Local_Config/Two_DLL_ORB/Two_DLL_ORB.mpc:
          Simplified this file

        * tests/DSI_AMH/server.cpp:
          Initialise pointer with 0

Wed Mar 19 14:48:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Latency/DSI/DSI.mpc:
          Added custom idl project

Wed Mar 19 08:48:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/nslist/nsdell.cpp:
        * utils/nslist/nslist.cpp:
        * utils/nslist/nslist.mpc:
          Improved these utilities to work better when servers are not
          responding

Tue Mar 18 20:47:25 UTC 2008  Steve Huston  <shuston@riverace.com>

        * tests/AMH_Exceptions/run_test.pl:
        * tests/Param_Test/run_test.pl:
        * tests/Hello/run_test.pl:
        * tests/Oneway_Send_Timeouts/run_test.pl:
        * tests/CallbackTest/run_test.pl: On LabVIEW RT, run the server part on
          the target and the client on the host.

Tue Mar 18 15:07:23 UTC 2008  Adam Mitz  <mitza@ociweb.com>

        * tests/Bug_3251_Regression/DllOrb.cpp:

          Use ACE_auto_ptr_reset instead of auto_ptr::reset() for compatibility
          with older std library implementations.

Tue Mar 18 09:41:57 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_helper.cpp:
          Print the TAO_IDL version in the header of the generated files.
          This fixes bugzilla 3255

Tue Mar 18 09:24:57 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Object_Map.h:
          Doxygen changes

Tue Mar 18 07:33:57 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/IDL_Test.mpc:
          For OpenVMS add -Wc/DISTINGUISH_NESTED_ENUMS to the compiler
          flags which is only required for one of the generated files
          in this test

Tue Mar 18 07:29:57 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        Reverted this change of yesterday
        * tests/CSD_Strategy_Tests/TP_Common/CSD_TP_Test_Lib.mpc:
          Set explicit project name to resolve issues on VMS

        * orbsvcs/tests/Notify/Test_Filter/RT_Test_Filter.h:
          Layout changes

        * orbsvcs/tests/Notify/Test_Filter/RT_Test_FilterFactory.{h,cpp}:
          Updated because of interface changes of yesterday

Mon Mar 17 15:39:57 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CSD_Strategy_Tests/TP_Common/CSD_TP_Test_Lib.mpc:
          Set explicit project name to resolve issues on VMS

Mon Mar 17 13:39:57 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/Builder.cpp:
        * orbsvcs/orbsvcs/Notify/Builder.h:
          Changed build_filter_factory to accept a POA_ptr instead
          of retrieving it here

        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp:
          Use CORBA::is_nil to check for a nil object reference

        * orbsvcs/orbsvcs/Notify/ETCL_Filter.cpp:
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.h:
          Store the POA used to activate the filter, use it then
          when cleaning up

        * orbsvcs/orbsvcs/Notify/ETCL_FilterFactory.cpp:
        * orbsvcs/orbsvcs/Notify/ETCL_FilterFactory.h:
        * orbsvcs/orbsvcs/Notify/FilterFactory.h:
          Don't use _this but the POA passed. Also changed the
          signatures of some methods to get the regular memory
          management

        * orbsvcs/orbsvcs/Notify/EventChannel.cpp:
        * orbsvcs/orbsvcs/Notify/EventChannel.h:
          Create a filter factory for each event channel instead
          of a global singleton

        * orbsvcs/orbsvcs/Notify/EventChannelFactory.cpp:
        * orbsvcs/orbsvcs/Notify/EventChannelFactory.h:
          Removed the global event filter factory

        * orbsvcs/orbsvcs/Notify/POA_Helper.cpp:
          Layout changes

        * orbsvcs/tests/Notify/Bug_3252_Regression/server.cpp:
          Use 5 load/unload iterations

        * orbsvcs/orbsvcs/IFRService/Repository_i.cpp:
          Const change

Mon Mar 17 10:42:57 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Notify/Bug_3252_Regression/Persistent_POA.{h,cpp}:
          Removed

        * orbsvcstests/Notify/Bug_3252_Regression/Bug_3252_Regression.mpc:
          Updated

Mon Mar 17 09:02:57 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Notify/Bug_3252_Regression/*:
          New test for bugzilla 3252

Mon Mar 17 09:02:57 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_3251_Regression/*:
          New test for bugzilla 3251

Fri Mar 14 14:59:57 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IOP.pidl:
          Added an empty pragma prefix so that the Visual Age preprocessor
          not drops these files

Fri Mar 14 14:55:35 UTC 2008  Ciju John  <johnc at ociweb dot com>

        * orbsvcs/tests/Notify/Persistent_POA/run_test.pl:
          Add test lib path.

Fri Mar 14 14:55:57 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/PI_include.pidl:
        * tao/RTScheduling/RTScheduler_include.pidl:
        * tao/CodecFactory/IOP_Codec_include.pidl:
          Added an empty pragma prefix so that the Visual Age preprocessor
          not drops these files

Fri Mar 14 13:55:57 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/default_resource.h:
          Fixed Visual Age 6 warning

Fri Mar 14 11:18:57 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Optimized_Connection/Optimized_Connection.mpc:
        * tests/DSI_AMH/DSI_AMH.mpc:
        * tests/Bug_2702_Regression/CloseConnection.mpc:
        * tests/Bug_2122_Regression/Bug_2122_Regression.mpc:
        * orbsvcs/tests/Bug_2800_Regression/Bug_2800_Regression.mpc:
          Added custom idl project to resolve problems on OpenVMS

Thu Mar 13 09:31:57 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Root_POA.cpp:
          Get the acceptor filter in the constructor and then check it
          when we need it.

Wed Mar 12 13:43:34 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:

          Fixed a comment that was triggering an error in the fuzz build.

Wed Mar 12 12:59:57 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * configure.ac:
          Added support for fox, thanks to Thomas Girard
          <thomas dot g dot girard at free dot fr> for reporting this

Wed Mar 12 11:55:57 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ForResource/TAO_FoxResource_Export.h:
          Corrected this file, thanks to Thomas Girard
          <thomas dot g dot girard at free dot fr> for reporting this

Wed Mar 12 07:08:57 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/FoxResource/FoxResource_Loader.h:
          Added missing fox include, thanks to Thomas Girard
          <thomas dot g dot girard at free dot fr> for reporting this

Tue Mar 11 20:25:13 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/ast_interface.h:
        * TAO_IDL/include/ast_component.h:
        * TAO_IDL/ast/ast_component.cpp:

          Removed AST_Component override of redef_clash(), it does
          nothing but call the base class version in AST_Interface.
          Also made the AST_Interface version non-virtual.

Tue Mar 11 19:46:44 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:

          The IFR now throws an exception when referenced types are
          unknown, rather than crashing without an error.

Tue Mar 11 18:51:10 UTC 2008  Jonathan Pollack  <pollack_j@ociweb.com>

        * TAO_IDL/ast/ast_interface.cpp:

          The -Cw option generated a warning message instead of an error,
          but it had the same end result: a premature exit from a method
          call. This has been fixed.

Mon Mar 10 08:02:30 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * MPC/config/dynamicinterface.mpb:
          DII is not available with minimum corba and corba/e

        * tao/DynamicInterface.mpc:
          Use regular base prject

        * tao/DynamicInterface/Context.h:
        * tao/IIOP_Transport.cpp:
          Layout changes

Sat Mar  8 07:15:30 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Makefile.am:
          Added new files

Sat Mar  8 07:12:30 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode.mpc:
        * tao/BiDir_GIOP.mpc:
        * tao/CodecFactory.mpc:
        * tao/Codeset.mpc:
        * tao/Compression.mpc:
        * tao/CSD_Framework.mpc:
        * tao/CSD_ThreadPool.mpc:
        * tao/DiffServPolicy.mpc:
        * tao/DynamicAny.mpc:
        * tao/DynamicInterface.mpc:
        * tao/EndpointPolicy.mpc:
        * tao/IFR_Client.mpc:
        * tao/ImR_Client.mpc:
        * tao/IORInterceptor.mpc:
        * tao/IORManipulation.mpc:
        * tao/IORTable.mpc:
        * tao/Messaging.mpc:
        * tao/ObjRefTemplate.mpc:
        * tao/PI.mpc:
        * tao/PI_Server.mpc:
        * tao/PortableServer.mpc:
        * tao/RTCORBA.mp:
        * tao/RTPortableServer.mpc:
        * tao/RTScheduler.mpc:
        * tao/SmartProxies.mpc:
        * tao/Strategies.mpc:
        * tao/TC.mpc:
        * tao/TC_IIOP.mpc:
        * tao/TypeCodeFactory.mpc:
        * tao/Valuetype.mpc:
        * tao/ZlibCompressor.mpc:
          Explicitly specify the project name, on VMS the filenames
          are returned lower case and MPC compares project names
          case sensitive.

        * tao/LocalObject.cpp:
        * tao/LocalObject.h:
          _repository_id must be available with CORBA/e

Fri Mar  7 13:47:30 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BiDir_GIOP/BiDir_ORBInitializer.cpp:
        * tao/BiDir_GIOP/BiDir_Service_Context_Handler.cpp:
        * tao/BiDir_GIOP/BiDir_Service_Context_Handler.h:
        * tao/BiDir_GIOP/BiDirPolicy_Validator.h:
        * tao/GIOP_Message_Generator_Parser_12.cpp:
        * tao/GIOP_Message_Generator_Parser_12.h:
        * tao/Service_Context_Handler.cpp:
        * tao/Service_Context_Handler.h:
        * tao/Service_Context_Handler_Registry.cpp:
        * tao/Service_Context_Handler_Registry.h:
        * tao/tao.mpc:
          Made the handling of service contexts pluggable. Previously
          the core of TAO did know how to handle the IOP::BI_DIR_IIOP
          service context. Introduced a new Service Context Handler
          base class from which concrete handlers are derived, these
          handlers are then registered with the service context handler
          registry for a certain context id. This way the BiDIR
          library handles the BiDIR service context. The future
          compression support can now also be implemented without
          that the core knows much about this. The next step is to
          refactor the adding of the bidir service context to a message
          in such a way that it is pluggable.

        * tao/GIOP_Message_Generator_Parser_10.cpp:
          Check the return value of several streaming operators

        * tao/Object.{h,cpp}:
          Disable the _request operation with CORBA/e

        * tao/LocalObject.{h,cpp}:
          Disabled a few operations with CORBA/e

        * tao/Service_Callbacks.h:
        * tao/Service_Context.cpp:
        * tao/Service_Context.h:
        * tao/Service_Context.inl:
          Layout changes

Tue Mar  4 10:10:30 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Table.{h,cpp,inl}:
          Removed obsolete methods and members

        * tao/PI/Interceptor_List_T.{h,cpp}:
          Const changes

        * tao/Policy_Validator.h:
        * tao/TAO_Server_Request.h:
          Layout changes

Mon Mar  3 14:52:30 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Generator_Parser.h:
        * tao/GIOP_Message_Generator_Parser_10.h:
        * tao/GIOP_Message_Generator_Parser_11.h:
        * tao/GIOP_Message_Generator_Parser_12.h:
        * tao/GIOP_Message_Generator_Parser_Impl.h:
          No need to export these classes from the TAO library

Sat Mar  1 19:14:30 UTC 2008  William Otte  <wotte@dre.vanderbilt.edu>

        * MPC/config/mcpp.mpb:
        * TAO_IDL/contrib/mcpp/directive.cpp:
        * TAO_IDL/contrib/mcpp/expand.cpp:
        * TAO_IDL/contrib/mcpp/main.cpp:
        * TAO_IDL/driver/drv_mcpp_preproc.cpp:
        * TAO_IDL/preproc.mpb:

          Fuzz fixes.

Fri Feb 29 16:24:43 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:

          Fixed signed/unsigned mismatch warning on Debian, introduced
          by changes in

          Thu Feb 28 19:16:43 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

Fri Feb 28 10:54:37 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_3154_Regression/run_test.pl:
          Updated for VxWorks cross platform testing

Thu Feb 28 19:16:43 UTC 2008  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/EnumDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ConstantDef_i.h:

          Cosmetic changes.

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:

          Changed creation of IOR output file to use
          ACE_DEFAULT_FILE_PERMS. Also added more error checking to
          cover the open, write and close steps. Thanks to Jules
          Colding <colding at 42tools dot com> for reporting that
          the previous code created a file that was world writable.

Thu Feb 28 13:26:12 UTC 2008  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/contrib/mcpp/eval.cpp:
        * TAO_IDL/contrib/mcpp/expand.cpp:
        * TAO_IDL/contrib/mcpp/mbchar.cpp:
        * TAO_IDL/contrib/mcpp/mcpp.mpc:
        * TAO_IDL/contrib/mcpp/support.cpp:
        * TAO_IDL/contrib/mcpp/system.cpp:

          Compile error fixes.

Thu Feb 28 06:01:19 UTC 2008  Sumant Tambe  <sutambe@nospam>

        * TAO_IDL/contrib/mcpp/main.cpp:
        * TAO_IDL/contrib/mcpp/support.cpp:
        * TAO_IDL/contrib/mcpp/system.cpp:

          #included OS_NS_stdlib.h header for ACE_OS::free,
          ACE_OS::malloc, and ACE_OS::realloc.

Wed Feb 27 19:24:02 UTC 2008  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/contrib/mcpp/LICENSE:
        * TAO_IDL/contrib/mcpp/Makefile.am:
        * TAO_IDL/contrib/mcpp/Makefile.in:
        * TAO_IDL/contrib/mcpp/cc1.cpp:
        * TAO_IDL/contrib/mcpp/config.h.in:
        * TAO_IDL/contrib/mcpp/configed.H:
        * TAO_IDL/contrib/mcpp/directive.cpp:
        * TAO_IDL/contrib/mcpp/eval.cpp:
        * TAO_IDL/contrib/mcpp/expand.cpp:
        * TAO_IDL/contrib/mcpp/internal.H:
        * TAO_IDL/contrib/mcpp/lib.cpp:
        * TAO_IDL/contrib/mcpp/main.cpp:
        * TAO_IDL/contrib/mcpp/mbchar.cpp:
        * TAO_IDL/contrib/mcpp/mcpp.mpc:
        * TAO_IDL/contrib/mcpp/mcpp_lib.h:
        * TAO_IDL/contrib/mcpp/mcpp_lib.cpp:
        * TAO_IDL/contrib/mcpp/mcpp_lib_export.h:
        * TAO_IDL/contrib/mcpp/noconfig.H:
        * TAO_IDL/contrib/mcpp/preproc.cpp:
        * TAO_IDL/contrib/mcpp/support.cpp:
        * TAO_IDL/contrib/mcpp/system.H:
        * TAO_IDL/contrib/mcpp/system.cpp:
        * TAO_IDL/contrib/mcpp/testmain.cpp:

          An open source, BSD licensed C preprocessor.

        * TAO_IDL/driver/drv_mcpp_preproc.cpp:

          Derived from drv_preproc.cpp, invokes the MCPP preprocessor
          as a library call instad of spawning a process.

        * TAO_IDL/preproc.mpb:
        * TAO_IDL/tao_idl.mpc:
        * MPC/config/mcpp.mpb:

          Modifications supporting selection of drv_preproc/drv_mcpp_preproc
          based on the mcpp feature.

Wed Feb 27 15:21:48 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/Naming_Service/NT_Naming_Server.cpp:
        * orbsvcs/Notify_Service/NT_Notify_Server.cpp:
        * orbsvcs/examples/CosEC/Simple/Consumer.cpp:
        * orbsvcs/examples/CosEC/Simple/Service.cpp:
        * orbsvcs/examples/CosEC/Simple/Supplier.cpp:
        * orbsvcs/examples/CosEC/TypedSimple/Consumer.cpp:
        * orbsvcs/examples/CosEC/TypedSimple/Supplier.cpp:
        * orbsvcs/examples/ImR/Combined_Service/test.cpp:
        * orbsvcs/examples/Notify/Federation/Agent/Agent.cpp:
        * orbsvcs/examples/Notify/Federation/SpaceCraft/SpaceCraft.cpp:
        * orbsvcs/examples/RtEC/IIOPGateway/Consumer.cpp:
        * orbsvcs/examples/RtEC/IIOPGateway/EC.cpp:
        * orbsvcs/examples/RtEC/IIOPGateway/Gateway.cpp:
        * orbsvcs/examples/RtEC/IIOPGateway/Supplier.cpp:
        * orbsvcs/examples/RtEC/Kokyu/Service.cpp:
        * orbsvcs/examples/RtEC/MCast/MCast.cpp:
        * orbsvcs/examples/RtEC/Schedule/Service.cpp:
        * orbsvcs/examples/RtEC/Simple/Consumer.cpp:
        * orbsvcs/examples/RtEC/Simple/Service.cpp:
        * orbsvcs/examples/RtEC/Simple/Supplier.cpp:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/server.cpp:
        * orbsvcs/tests/Redundant_Naming/client.cpp:
        * orbsvcs/tests/Sched/DynSched_Test.cpp:

          Use ACE_TMAIN instead of main as the program entry point to comply
          with ACE/TAO/CIAO coding standards.

        * orbsvcs/examples/CosEC/Simple/CosEC_Simple.mpc:
        * orbsvcs/examples/CosEC/TypedSimple/CosEC_TypedSimple.mpc:
        * orbsvcs/examples/ImR/Combined_Service/ImR_Combined_Service.mpc:
        * orbsvcs/examples/RtEC/Kokyu/RtECKokyu.mpc:
        * orbsvcs/examples/RtEC/IIOPGateway/RtEC_IIOPGateway.mpc:
        * orbsvcs/examples/RtEC/MCast/RtEC_MCast.mpc:
        * orbsvcs/examples/RtEC/Schedule/RtEC_Schedule.mpc:
        * orbsvcs/examples/RtEC/Simple/RtEC_Simple.mpc:

          MPC doesn't recognize ACE_TMAIN as an entry point, as such, we need
          to explicitly set exename in the MPC file.

Wed Feb 27 08:36:37 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Generator_Parser_12.cpp:
          Check the return value of operator<<

        * tao/Invocation_Base.{cpp,inl}:
          Moved a few methods to the inline file

        * tao/LocalObject.h:
        * tao/TAO_Server_Request.cpp:
          Layout change

Tue Feb 26 16:16:16 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * TAO_IDL/tao_idl.cpp:

          Use ACE_TMAIN instead of main as the program entry point to comply
          with ACE/TAO/CIAO coding standards.

Mon Feb 25 22:19:46 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/examples/CosEC/Factory/FactoryClient.cpp:
        * orbsvcs/examples/CosEC/Factory/main.cpp:
        * orbsvcs/examples/CosEC/RtEC_Based/bin/RtEC_Based_CosEC.cpp:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Basic/Basic.cpp:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Consumer.cpp:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Supplier.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/client.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/server.cpp:
        * orbsvcs/examples/LoadBalancing/client.cpp:
        * orbsvcs/examples/LoadBalancing/server.cpp:
        * orbsvcs/examples/Notify/Filter/main.cpp:
        * orbsvcs/examples/Notify/Lanes/Consumer_Client.cpp:
        * orbsvcs/examples/Notify/Lanes/Supplier_Client.cpp:
        * orbsvcs/examples/Notify/Subscribe/main.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Consumer_Client.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Supplier_Client.cpp:
        * orbsvcs/examples/ORT/client.cpp:
        * orbsvcs/examples/ORT/gateway_server.cpp:
        * orbsvcs/examples/ORT/server.cpp:
        * orbsvcs/examples/PSS/Simple_Naming.cpp:
        * orbsvcs/examples/PSS/server.cpp:
        * orbsvcs/examples/Security/SecurityLevel1/client.cpp:
        * orbsvcs/examples/Security/SecurityLevel1/server.cpp:
        * orbsvcs/examples/Security/Send_File/client.cpp:
        * orbsvcs/examples/Security/Send_File/server.cpp:
        * orbsvcs/tests/Notify/Destroy/main.cpp:
        * orbsvcs/tests/Notify/Driver/main.cpp:
        * orbsvcs/tests/RTCosScheduling/client.cpp:

          Use ACE_TMAIN instead of main as the program entry point to comply
          with ACE/TAO/CIAO coding standards.

        * orbsvcs/examples/CosEC/RtEC_Based/bin/CosEC_RtEC_Based_bin.mpc:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Basic/CosEC_RtEC_Based_tests_Basic.mpc:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/CosEC_RtEC_Based_Mult.mpc:
        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly.mpc:
        * orbsvcs/examples/LoadBalancing/LoadBalancing.mpc:
        * orbsvcs/examples/ORT/ORT.mpc:
        * orbsvcs/examples/Security/Send_File/Security_Send_File.mpc:

          MPC doesn't recognize ACE_TMAIN as an entry point, as such, we need
          to explicitly set exename in the MPC file.

Mon Feb 25 20:14:37 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/ORB_Local_Config/run_tests_all.pl:
        * tests/Parallel_Connect_Strategy/run_test.pl:
          Updated for VxWorks

        * tests/CSD_Collocation/run_test.pl:
          No need to set libpath

Mon Feb 25 19:47:37 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2183_Regression/run_test.pl:
        * tests/Bug_2702_Regression/run_test.pl:
          Use the new IgnoreHostRoot support when spawning perl

        * tests/Bug_3154_Regression/run_test.pl:
          Don't use HOST_ROOT to get tao_idl, the test framework will
          do this

        * tests/Hang_Shutdown/client.cpp:
        * tests/Hang_Shutdown/server.cpp
          Fixed typo and no need to pass in an empty orb name

        * tests/Leader_Followers/run_test.pl:
        * tests/MT_Timeout/run_test.pl:
        * tests/MProfile_Connection_Timeout/run_test.pl:
          Only store the ior filename once

        * tests/OctetSeq/test_i.cpp
          Initialise pointer with 0

        * tests/MT_Timeout/Client_Task.cpp:
          Use prefix increment

        * tests/MProfile_Connection_Timeout/client.cpp:
          Laout changes

Mon Feb 25 15:36:17 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/IFR_Service/IFR_Server.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Locator.cpp:
        * orbsvcs/Naming_Service/NT_Naming_Server.cpp:
        * orbsvcs/Notify_Service/NT_Notify_Server.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/client.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/server.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/client.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/server.cpp:
        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/compare_histo.cpp:
        * orbsvcs/tests/Bug_3215_Regression/client.cpp:
        * orbsvcs/tests/Bug_3215_Regression/server.cpp:
        * orbsvcs/tests/Bug_3216_Regression/client.cpp:
        * orbsvcs/tests/Bug_3216_Regression/server.cpp:
        * orbsvcs/tests/Security/mixed_security_test/client.cpp:
        * orbsvcs/tests/Security/mixed_security_test/server.cpp:

          Use ACE_TMAIN instead of main as the program entry point to comply
          with ACE/TAO/CIAO coding standards.

        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/LoadBalancing.mpc:

          MPC doesn't recognize ACE_TMAIN as an entry point, as such, we need
          to explicitly set exename in the MPC file.

Mon Feb 25 09:45:37 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Loader/Servant_Locator.cpp:
        * tests/POA/On_Demand_Loading/Servant_Manager.cpp:
          Fixed OpenVMS IA64 warnings

Sun Feb 24 19:48:37 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_3154_Regression/run_test.pl:
          Extended timeout for OpenVMS

Sun Feb 24 19:44:37 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.cpp:
        * orbsvcs/IFR_Service/IFR_Service.cpp:
          No need to pass in empty orb name

        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Server.cpp:
          Small code simplification

        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerAdmin.h:
          Doxygen change

        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullConsumer.cpp:
          Layout change

        * orbsvcs/orbsvcs/IFRService/AbstractInterfaceDef_i.cpp:
          Use true instead of 1

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
          Use LM_DEBUG with ACE_DEBUG

        * orbsvcs/tests/InterfaceRepo/Bug_2962_Regression/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Bug_3155_Regression/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Bug_3174_Regression/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Bug_3200_Regression/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/run_test.pl:
          Just check whether the spawn worked or not instead of trying to
          check for the existince of the executable. The tests did fail on
          OpenVMS and VxWorks

Fri Feb 22 18:27:39 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tests/Bug_2935_Regression/middle.cpp:
        * tests/Bug_2935_Regression/sink.cpp:
        * tests/Bug_2935_Regression/source.cpp:
        * tests/DII_AMI_Forward/client.cpp:
        * tests/DII_AMI_Forward/server.cpp:
        * tests/POA/Adapter_Activator/server.cpp:
        * tests/POA/DSI/client.cpp:
        * tests/POA/DSI/server.cpp:
        * tests/POA/Default_Servant2/client.cpp:
        * tests/POA/Default_Servant2/server.cpp:
        * tests/POA/Explicit_Activation/server.cpp:
        * tests/POA/FindPOA/FindPOA.cpp:
        * tests/POA/Forwarding/client.cpp:
        * tests/POA/Forwarding/server.cpp:
        * tests/POA/Generic_Servant/client.cpp:
        * tests/POA/Loader/server.cpp:
        * tests/POA/NewPOA/NewPOA.cpp:
        * tests/POA/On_Demand_Activation/server.cpp:
        * tests/POA/On_Demand_Loading/server.cpp:
        * tests/POA/POA_BiDir/POA_BiDir.cpp:
        * tests/POA/Reference_Counted_Servant/server.cpp:
        * tests/POA/RootPOA/RootPOA.cpp:
        * tests/POA/TIE/client.cpp:
        * tests/POA/TIE/server.cpp:
        * tests/Portable_Interceptors/Bug_2133/client.cpp:
        * tests/Portable_Interceptors/Bug_2133/server.cpp:
        * tests/objref_comparison_test/main.cpp:

          Use ACE_TMAIN instead of main as the program entry point to comply
          with ACE/TAO/CIAO coding standards.

        * tests/POA/Generic_Servant/POA_Generic_Servant.mpc:
        * tests/POA/On_Demand_Activation/POA_On_Demand_Activation.mpc:
        * tests/POA/On_Demand_Loading/POA_On_Demand_Loading.mpc:
        * tests/POA/Reference_Counted_Servant/Reference_Counted_Servant.mpc:

          MPC doesn't recognize ACE_TMAIN as an entry point, as such, we need
          to explicitly set exename in the MPC file.

Fri Feb 22 17:01:26 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * docs/tutorials/Quoter/RTCORBA/Admin.cpp:
        * docs/tutorials/Quoter/RTCORBA/Broker.cpp:
        * docs/tutorials/Quoter/RTCORBA/Distributor.cpp:

          Use ACE_TMAIN instead of main as the program entry point to comply
          with ACE/TAO/CIAO coding standards.

Fri Feb 22 08:57:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * MPC/config/optimize_collocated_invocations.mpb:
          New file, when this feature is set to 0 we pass -Sp -Sd to the
          idl compiler. In the future we can also change the core libraries
          to disable certain classes

        * MPC/config/taoidldefaults.mpb:
          Derive from optimize_collocated_invocations

Fri Feb 22 00:39:46 UTC 2008  Steve Huston  <shuston@riverace.com>

        * tests/Param_Test/run_test.pl: Use target class to wait for, and
          delete, the IOR files. Allows good execution on LabVIEW_RT.

        * tests/AMH_Exceptions/run_test.pl: Correct the target obj creation.

Thu Feb 21 19:25:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_component/component_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ci.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_root/root_ch.cpp:
          When collocation optimizations have been disabled also don't
          generate a collocated proxy broker function and the checks
          for this cpb function, this results in a footprint reduction
          for each interface but also for each operation. This fixes
          bugzilla 2971

Thu Feb 21 15:35:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * MPC/config/corba_e_compact.mpb:
        * MPC/config/corba_e_micro.mpb:
        * MPC/config/core_minimum_corba.mpb:
        * MPC/config/minimum_corba.mpb:
        * MPC/config/taoidldefaults.mpb:
        * MPC/config/taobaseidldefaults.mpb:
          Moved the contents of taoidldefaults to taobaseidldefaults,
          taoidldefaults now also derives from the CORBA profiles
          so that when we compile IDL we also generate code focused
          for the set profile. This reduces the size of the generated
          code, this fixes bugzilla 3233

Thu Feb 21 02:34:37 CST 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO version 1.6.3 released.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
