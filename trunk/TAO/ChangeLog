Mon Nov 24 02:38:58 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * rules.tao.GNU:
          Removed $(IDL_EXT) from SUFFIXES, and set SUFFIXES to null,
          which turns off all the implicit rules--we only want our
          explicit rules to fire.  Added the IDL generated files to
          .PRECIOUS:, since this seems to be done all over in individual
          Makefiles.  This means that these files won't be deleted if make
          is interrupted--but since they are cheap, maybe they should be.
          Commented out the $(TAO_IDL_DEP) dependency from rule that
          invokes the tao_idl compiler.  If the compiler either hasn't
          been built or can't be found, this dependency produces a cryptic
          errors like: "no rule to build xC.h needed by xC.cpp," instead
          of the more useful, "tao_idl not found."

        * examples/Simple/time-date/Makefile:
          Removed $(SHLIB) from the dependency list for the server
          target.  It isn't needed and wouldn't work like this anyway, if
          you want a library, add it to LDLIBS.  Removed the empty BIN:
          target.

        * examples/Simulator/Event_Supplier/Makefile:
          Changed IDL_FILES from NavWeap to ../NavWeap so it could be
          found, and removed unneeded IDL variables.  Removed include
          rules.bin.GNU since we aren't define our own targets, as well as
          the realclean and .NOTPARALLEL targets (parallelism works now),
          and the NavWeapC.h: target that invoke the tao_idl compiler.  Also,
          added link lines to each of the targets since the BIN rule no
          longer adds all the dependencies as objects via the $^
          variable--which is what made it impossible to have BIN targets
          depend on LIB or IDL targets and broke parallelism.  BIN no
          longer does that, see the ACE ChangeLog entry with the same tag
          for an explaination.

        * orbsvcs/tests/Trading/Makefile:
          Added -lTTest to LDLIBS and removed the BIN target dependencies
          that are no longer needed.

        * tests/Object_Loader/Makefile:
          Added -lTest_DLL to LDLIBS.

        * examples/Kokyu_dsrt_schedulers/FP_SchedulingC.h:
        * examples/Kokyu_dsrt_schedulers/Kokyu_qosC.h:
        * examples/Kokyu_dsrt_schedulers/MIF_SchedulingC.h:
        * examples/Kokyu_dsrt_schedulers/MUF_SchedulingC.h:
          Changed the directory seperator from '\' to '/' so non-Windows
          platforms will be happy.

Sun Nov 23 21:52:19 2003  Huang-Ming Huang  <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtecEventComm.idl:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxyConsumer.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxySupplier.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxySupplier.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_Base.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_Base.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_T.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Identification_Service.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Identification_Service.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/activate_with_id.h:

        Changed FtRtecEventComm::ObjectId from a typedef to CORBA::ObjectSeq
        to sequence<octet>. Most references to PortableServer::ObjectId use
        FtRtecEventComm::ObjectId instead.

Sun Nov 23 21:28:48 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAOACE.dsw:

          Added project dependencies that had gone missing.

        * orbsvcs/orbsvcs/FTORB_Utils.dsp:
        * orbsvcs/orbsvcs/FT_ClientORB.dsp:
        * orbsvcs/orbsvcs/FT_ServerORB.dsp:

          Fixed link lib paths and build output directories.

        * orbsvcs/orbsvcs/SSLIOP.dsp:

          Turned on RTTI.

Sun Nov 23 20:43:52 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:

	  #included "ace/os_include/os_netdb.h" to pacify Win32 VC6
	  builds.

Sun Nov 23 20:09:53 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/RTCORBA/RTCORBA_include.pidl:
	* tao/RTCORBA/RTCORBA_includeC.h:

	  New files, a .pidl which only includes RTCORBA.pidl, and the
	  stub header file generated from it, hand-crafted to include
	  RTCORBA.h instead of RTCORBAC.h. This pair of files allows
	  applications to include RTCORBA.pidl in their IDL files by
	  including RTCORBA_include.pidl instead and let the IDL compiler
	  automatically include  RTCORBA_includeC.h in the associated
	  generated file, thus avoiding the error of including RTCORBAC.h
	  directly.

	* tao/RTCORBA/RTCORBA.mpc:

	  Added RTCORBA_includeC.h to the header file list.

	* examples/Kokyu_dsrt_schedulers/FP_Scheduling.idl:
        * examples/Kokyu_dsrt_schedulers/Kokyu_qos.idl:
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduling.idl:
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduling.idl:

          Replaced include of RTCORBA.pidl in these files with
          RTCORBA_include.pidl.

        * examples/Kokyu_dsrt_schedulers/Kokyu_DSRT_Schedulers.mpc:

          Reverted change to idlflags in

          Sat Nov 22 17:20:13 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

          since changes above now make it unnecessary.

Sun Nov 23 17:48:09 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_decl.cpp (compute_full_name):

          Added a copy operation to the char* return value since it
          is owned by a locally created ACE_CString. Even though
          this copy operation is necessary, its omission does not always
          show up as a problem. Thanks to Malcolm McRoberts
          <mmcroberts@ideorlando.org> for pointing out a case and a
          platform where it does.

Sun Nov 23 14:31:46 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

	* docs/tutorials/Quoter/Simple/Client/Quoter_Simple_Client.mpc:
	* docs/tutorials/Quoter/Simple/Impl-Repo/Quoter_Simple_Impl_Repo.mpc:
	* docs/tutorials/Quoter/Simple/ImprovedServer/Quoter_Simple_ImprovedServer.mpc:
	* docs/tutorials/Quoter/Simple/Persistent/Quoter_Simple_Persistent.mpc:
	* docs/tutorials/Quoter/Simple/Server/Quoter_Simple_Server.mpc:
	* docs/tutorials/Quoter/idl/Quoter_idl.mpc:
	* docs/tutorials/Quoter/AMI/Quoter_AMI.mpc:
	* docs/tutorials/Quoter/Event_Service/Quoter_Event_Service.mpc:
	* docs/tutorials/Quoter/Naming_Service/Quoter_Naming_Service.mpc:
	* docs/tutorials/Quoter/On_Demand_Activation/Quoter_On_Demand_Activation.mpc:
	  Updated these MPC files, exceptions are needed for all at this moment and
	  the Quoter_idl file must be build before the Simple ones.

Sun Nov 23 08:20:44 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tao/OctetSeq.pidl:
	* tao/OctetSeqC.h:
	* tao/OctetSeqC.i:

	  Thanks to Johnny for reporting a small problem with generated
	  code that caused the Borland builds to freak out.

Sat Nov 22 20:44:19 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* examples/Simple/grid/Makefile:

	  Added TAO_Messaging to the link line.

Sat Nov 22 20:39:59 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tests/ORT/ORT.mpc:

	  Changed teh project name in the above file so that they don't
	  clash with projects in orbsvcs/examples.

Sat Nov 22 20:35:45 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* examples/Kokyu_dsrt_schedulers/Kokyu_DSRT_Schedulers.mpc:

	  Fixed a typo in the mpc file.

Sat Nov 22 17:20:13 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/Advanced/ch_12/client.cpp:
        * examples/Advanced/ch_12/icp.cpp:
        * examples/Advanced/ch_12/server.cpp:
        * examples/Advanced/ch_12/server.h:
        * examples/Advanced/ch_18/client.cpp:
        * examples/Advanced/ch_18/icp.cpp:
        * examples/Advanced/ch_18/server.cpp:
        * examples/Advanced/ch_18/server.h:
        * examples/Advanced/ch_21/client.cpp:
        * examples/Advanced/ch_21/icp.cpp:
        * examples/Advanced/ch_21/server.cpp:
        * examples/Advanced/ch_21/server.h:
        * examples/Advanced/ch_3/client.cpp:
        * examples/Advanced/ch_3/server.cpp:
        * examples/Advanced/ch_8_and_10/client.cpp:
        * examples/Advanced/ch_8_and_10/icp.cpp:
        * examples/Advanced/ch_8_and_10/server.h:

          Added missing #includes, also added 'u' to some
          integer literals used as sequence indices.

        * examples/Kokyu_dsrt_schedulers/FP_SchedulingC.cpp:
        * examples/Kokyu_dsrt_schedulers/FP_SchedulingC.h:
        * examples/Kokyu_dsrt_schedulers/FP_SchedulingC.i:
        * examples/Kokyu_dsrt_schedulers/Kokyu_qosC.cpp:
        * examples/Kokyu_dsrt_schedulers/Kokyu_qosC.h:
        * examples/Kokyu_dsrt_schedulers/Kokyu_qosC.i:
        * examples/Kokyu_dsrt_schedulers/MIF_SchedulingC.cpp:
        * examples/Kokyu_dsrt_schedulers/MIF_SchedulingC.h:
        * examples/Kokyu_dsrt_schedulers/MIF_SchedulingC.i:
        * examples/Kokyu_dsrt_schedulers/MUF_SchedulingC.cpp:
        * examples/Kokyu_dsrt_schedulers/MUF_SchedulingC.h:
        * examples/Kokyu_dsrt_schedulers/MUF_SchedulingC.i:
        * examples/Kokyu_dsrt_schedulers/utils.h:
        * examples/Kokyu_dsrt_schedulers/Kokyu_DSRT_Schedulers.mpc:

          Modified MPC file and added #includes of RTCORBA.h to
          allow the project to build automatically, without
          needing a separate step for code generation.

        * examples/Kokyu_dsrt_schedulers/FP_Scheduling.idl:
        * examples/Kokyu_dsrt_schedulers/Kokyu_qos.idl:
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduling.idl:
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduling.idl:

          New files renamed from the ones below.

        * examples/Kokyu_dsrt_schedulers/FP_Scheduling.pidl:
	* examples/Kokyu_dsrt_schedulers/Kokyu_qos.pidl:
	* examples/Kokyu_dsrt_schedulers/MIF_Scheduling.pidl:
	* examples/Kokyu_dsrt_schedulers/MUF_Scheduling.pidl:

          Removed files, renamed to the ones above.

Sat Nov 22 11:32:30 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Bug_1330_Regression/server.cpp:
        * tests/Bug_1627_Regression/server.cpp:
        * tests/Bug_1635_Regression/client.cpp:
        * tests/Bug_1636_Regression/client.cpp:
        * tests/Bug_1639_Regression/struct_client.cpp:
        * tests/ICMG_Any_Bug/HelloWorld.h:
        * tests/IORManipulation/IORTest.cpp:
        * tests/Portable_Interceptors/Bug_1559/server.cpp:
        * tests/Portable_Interceptors/Collocated/Dynamic/Echo_Collocated_ORBInitializer.cpp:
        * tests/Portable_Interceptors/Collocated/Dynamic/interceptors.cpp:
        * tests/RTCORBA/Diffserv/Custom_Network_Priority_Mapping.cpp:
        * tests/RTCORBA/Diffserv/Custom_Network_Priority_Mapping.h:
        * tests/RTCORBA/Diffserv/server.cpp:

          Added missing #includes and removed #includes of corba.h
          and corbafwd.h.

        * tests/Smart_Proxies/Collocation/Smart_Proxies_Collocation.mpc:

          Made the IDL command line options of stub and skeleton
          projects the same (both sets of export macro and include
          directives in both projects) so the 2nd execution of the
          IDL compiler won't change anything in files generated
          from the 1st execution.

Sat Nov 22 10:12:37 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* rules.tao.GNU:

	  If messaging is set to zero, set RTCORBA to zero.

	* tests/RTCORBA/Linear_Priority/Makefile:
	* tests/RTCORBA/Persistent_IOR/Makefile:
	* tests/RTCORBA/Policy_Combinations/Makefile:
	* tests/RTCORBA/Priority_Inversion_With_Bands/Makefile:
	* tests/RTCORBA/Profile_And_Endpoint_Selection/Makefile:
	* tests/RTCORBA/Thread_Pool/Makefile:

	  Fixed what I broke before. The makefiles also need to ensure
	  that RTCORBA is available in addition to minimum_corba being set
	  to zero.

Sat Nov 22 08:34:57 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Makefile:
	* orbsvcs/examples/Notify/Lanes/Makefile:
	* orbsvcs/examples/Notify/ThreadPool/Makefile:
	* examples/Callback_Quoter/Makefile:
	* examples/Event_Comm/Makefile:
	* examples/Logging/Makefile:
	* examples/Simple/bank/Makefile:
	* examples/Simple/echo/Makefile:
	* examples/Simple/time/Makefile:
	* examples/Simple/time-date/Makefile:
	* performance-tests/POA/Demux/Makefile:

	  Fixed the above Makefiles to link in the messaging
	  library. Fallout due to the change from Simon.

	* orbsvcs/tests/Notify/RT_lib/RT_Notify_lib.mpc:

	  Do not build if minimum_corba is enabled.

Sat Nov 22 07:42:04 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tests/Smart_Proxies/On_Demand/Makefile:

	  Fix the static build linking errors. Thanks to Don Hinton for
	  the patches.

Fri Nov 21 22:19:39 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tests/Bug_1636_Regression/client.cpp:

	  Fixed compilation errors in builds where exceptions are turned
	  off.

	* tests/Bug_1639_Regression/Makefile:
	* tests/Bug_1639_Regression/Makefile.Bug_1639_testclient:
	* tests/Bug_1639_Regression/test.mpc:

	  Made this test compilable only when exceptions are turned
	  on. The right way would be to use ACE_EXCEPTION macros. But
	  Simon has to be doing that. Till then, let me  get the builds
	  clean.

Fri Nov 21 21:48:27 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* orbsvcs/orbsvcs/AV.mpc:

	  Added SCT_SEQ.cpp coditionally in makefiles only when sctp is
	  enabled.

	* orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.cpp:
	* orbsvcs/orbsvcs/ESF/ESF_Shutdown_Proxy.cpp:

	  Fixed compile error that showed up in MPC builds. They needed a
	  couple of inclusions.

Fri Nov 21 21:05:32 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/FTRT_Event_Service/Gateway_Service/FTRTEC_Gateway_Service.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_Loader.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_T.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ForwardCtrlServerInterceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Service.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/SCTP_Fault_Detector.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/SCTP_Fault_Detector.h:
        * orbsvcs/orbsvcs/Log/PersistStore.cpp:

          Added missing file includes, and made the RTFT Event Channel build
          work when TAO_HAS_SCIOP is not defined.

        * orbsvcs/orbsvcs/FtRtEvent.mpc:

          Added missing export header file.

        * tao/tao.mpc:

          Added missing file OctetSeqA.cpp.

        * tao/Utils/tao_Utils.mpc:

          Added missing TAO_UTILS_BUILD_DLL preprocessor directive.

Fri Nov 21 20:48:18 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* TAO_IDL/be/be_typedef.cpp:

	  Fixed a warning in the daily builds.

Fri Nov 21 14:57:06 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/amh_si.cpp:
        * TAO_IDL/be_include/be_visitor_interface/amh_si.h:

          New files containing a visitor that generates calls to
          base skeleton methods for base classes in AMH. These
          methods were not getting generated before.

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_visitor_interface.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_si.cpp:
        * TAO_IDL/be_include/be_interface.h:
        * TAO_IDL/be_include/be_visitor_interface.h:
        * TAO_IDL/be_include/be_visitor_interface/amh_sh.h:
        * TAO_IDL/be_include/be_visitor_interface/interface_si.h:

          Changes related to the bug fix above. Thanks to Malcolm
          McRoberts <mmcroberts@ideorlando.org> for pointing out
          the problem. This closes {BUGID:1568]

Fri Nov 21 11:16:50 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicAny/DynSequence_i.cpp (equal):

          Added check for equal sequence length before doing the
          member-wise comparison. Thanks to David Kinder
          <david.kinder@sophos.com> for reporting the bug. This
          closes [BUGID:1654].

Fri Nov 21 10:31:38 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_decl.cpp:
        * TAO_IDL/be/be_typedef.cpp:
        * TAO_IDL/include/ast_decl.h:

          Fixed error in logic of determining whether a sequence
          is anonymous or typedef'd.

Fri Nov 21 08:55:16 2003 Charlie Frasch  <cfrasch@atdesk.com>

	* utils/wxNamingViewer/Makefile:
	* utils/wxNamingViewer/README:
	* utils/wxNamingViewer/mondrian.xpm:
	* utils/wxNamingViewer/wxAddNameServerDlg.cpp:
	* utils/wxNamingViewer/wxBindDialog.cpp:
	* utils/wxNamingViewer/wxBindDialog.h:
	* utils/wxNamingViewer/wxBindNewContext.cpp:
	* utils/wxNamingViewer/wxNamingObject.cpp:
	* utils/wxNamingViewer/wxNamingTree.cpp:
	* utils/wxNamingViewer/wxNamingViewer.cpp:
	* utils/wxNamingViewer/wxNamingViewerFrame.cpp:
	* utils/wxNamingViewer/wxSelectNSDialog.cpp:
	* utils/wxNamingViewer/wxViewIORDialog.cpp:
	  Updated for linux, gcc, latest ACE/TAO and wxWindows 2.4.2. For
	  linux, the wxNamingViewer.wxr file is no longer used, and the
	  dialog components are created  inline. A future change should
	  incorporate wxWindow's new XML-based resource system.

Fri Nov 21 02:57:35 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * rules.tao.GNU:
          Added IDL_SRC and IDL_OBJ variables.  If you define IDL_SRC in
          your Makefile to be the name of an IDL file (without .idl),
          these variables will automatically contain a list of
          corresponding *.C.h and *S.h, and *C.o and *S.o files
          respectively.  In a related ACE ChangeLog entry with the same
          ChangeLogTag, $(IDL_SRC) was added as a target dependant on the
          IDL_FILES, so if these files are modified, the IDL_SRC will be
          automatically regenerated.  Also, the same ChangeLog entry
          mentioned that $(IDL_SRC) is now alway listed as the first
          dependency in the BUILD variable, so it will alway be generated
          first an no longer constitute a problem for parallel builds.
          Makefiles need do no more than define IDL_FILES and use IDL_SRC
          and IDL_OBJS for this to work.

        * docs/tutorials/Quoter/AMI/Makefile:
        * docs/tutorials/Quoter/Event_Service/Makefile:
        * docs/tutorials/Quoter/On_Demand_Activation/Makefile:
        * docs/tutorials/Quoter/idl/Makefile:
        * examples/AMH/Sink_Server/Makefile:
        * examples/POA/Generic_Servant/Makefile.client:
        * examples/POA/Generic_Servant/Makefile.generic_servant:
        * examples/ior_corbaloc/Makefile:
        * orbsvcs/tests/EC_Custom_Marshal/Makefile:
        * orbsvcs/tests/FaultTolerance/IOGR/Makefile:
        * orbsvcs/tests/IOR_MCast/Makefile:
        * orbsvcs/tests/Notify/Structured_Filter/Makefile:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Makefile:
        * orbsvcs/tests/ior_corbaname/Makefile:
        * performance-tests/RTCorba/Multiple_Endpoints/Common/Makefile:
        * tests/AMH_Exceptions/Makefile:
        * tests/AMI_Buffering/Makefile:
        * tests/Codec/Makefile:
        * tests/Collocation/Makefile.impl:
        * tests/Collocation/Makefile.stub:
        * tests/Collocation/Makefile.test:
        * tests/DLL_ORB/Makefile.Test_Client_Module:
        * tests/DLL_ORB/Makefile.Test_Server_Module:
        * tests/Portable_Interceptors/Bug_1559/Makefile:
        * tests/Smart_Proxies/On_Demand/Makefile:
          Removed IDL_SRC and adjusted other variables in accordance with
          the above changes.  Also removed the realclean and .PRECIOUS
          targets as they are no longer needed.  These instances of
          IDL_SRC did not include the .cpp extention.  All other instances
          in TAO include the .cpp extention.

        * orbsvcs/Makefile.CosConcurrency:
        * orbsvcs/orbsvcs/Makefile.CosEvent:
        * orbsvcs/orbsvcs/Makefile.CosLifeCycle:
        * orbsvcs/orbsvcs/Makefile.CosLoadBalancing:
        * orbsvcs/orbsvcs/Makefile.CosNaming:
        * orbsvcs/orbsvcs/Makefile.CosNotification:
        * orbsvcs/orbsvcs/Makefile.CosProperty:
        * orbsvcs/orbsvcs/Makefile.CosTime:
        * orbsvcs/orbsvcs/Makefile.CosTrading:
        * orbsvcs/orbsvcs/Makefile.DsEventLogAdmin:
        * orbsvcs/orbsvcs/Makefile.DsLogAdmin:
        * orbsvcs/orbsvcs/Makefile.DsNotifyLogAdmin:
        * orbsvcs/orbsvcs/Makefile.ESF:
        * orbsvcs/orbsvcs/Makefile.ETCL:
        * orbsvcs/orbsvcs/Makefile.FTORB:
        * orbsvcs/orbsvcs/Makefile.FaultTolerance:
        * orbsvcs/orbsvcs/Makefile.IFRService:
        * orbsvcs/orbsvcs/Makefile.Metrics:
        * orbsvcs/orbsvcs/Makefile.PortableGroup:
        * orbsvcs/orbsvcs/Makefile.RTCORBAEvent:
        * orbsvcs/orbsvcs/Makefile.RTCosScheduling:
        * orbsvcs/orbsvcs/Makefile.RTEvent:
        * orbsvcs/orbsvcs/Makefile.RTEventLogAdmin:
        * orbsvcs/orbsvcs/Makefile.RTKokyuEvent:
        * orbsvcs/orbsvcs/Makefile.RTOLDEvent:
        * orbsvcs/orbsvcs/Makefile.RTSched:
        * orbsvcs/orbsvcs/Makefile.RTSchedEvent:
        * orbsvcs/orbsvcs/Makefile.RT_Notification:
        * orbsvcs/orbsvcs/Makefile.SSLIOP:
        * orbsvcs/orbsvcs/Makefile.Security:
        * orbsvcs/orbsvcs/Makefile.Svc_Utils:
        * orbsvcs/orbsvcs/Makefile.av:
          Modified these makefiles to use the new all_in_one.GNU file
          which simplifies Makefiles by only requiring them to include a
          single file and automatically handles conditional compiles based
          on requirements list passed as a list assigned to
          REQUIRED_COMPONENTS.  Updated dependencies.

Thu Nov 20 21:02:43 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* orbsvcs/orbsvcs/CosEvent/CEC_DynamicImplementation.cpp:
	* orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.cpp:
	* orbsvcs/orbsvcs/CosEvent/CEC_TypedEvent.h:
	* orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.cpp:
	* orbsvcs/orbsvcs/Notify/Method_Request_Dispatch_T.inl:

	  Added missing includes to get them compiling on VC7.1

Thu Nov 20 20:25:35 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/UNKNOWN_Exception/server.dsp:

          Added missing link to TAO_Valuetype*.lib.

Thu Nov 20 20:24:29 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tao/VarOut_T.h:

	  Moved a header file inclusion from below the pragma directive to
	  the top of the file.

Thu Nov 20 20:12:37 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:

          Removed generation of _tao_any_destructor for anonymous sequences.

        * TAO_IDL/be/be_visitor_tmplinst/tmplinst_cs.cpp:

          Removed generation of explicit template instantiation of
          sequence base class for anonymous sequences of typedef'd
          basic types. Also removed generation of explicit template
          instantiation of Any impl class for anonymous sequences.

        * orbsvcs/performance-tests/RTEvent/lib/RIR_Narrow.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/RT_Class.cpp:
        * orbsvcs/performance-tests/RTEvent/lib/Send_Task.cpp:
        * tests/Smart_Proxies/Collocation/Smart_Proxy_Impl.cpp:

          Added missing ACE file includes.

Thu Nov 20 19:16:28 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tao/DomainC.cpp:
	* tao/DomainC.h:
	* tao/DomainC.i:
	* tao/ServicesC.cpp:
	* tao/ServicesC.h:
	* tao/ServicesC.i:

	  Regenerated the code and removed the duplicate explicit template
	  instantations.

        * tao/Tagged_Components.cpp:
	* tao/Typecode.cpp:

	  Removed duplicate explicit template instantiations.

	* tao/diffs/Domain.diff

	  Updated the diff files.

Thu Nov 20 18:28:58 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tao/IFR_Client_Adapter.h:
	* tao/IFR_Client/IFR_Client_Adapter_Impl.cpp:
	* tao/IFR_Client/IFR_Client_Adapter_Impl.h:

	  Added TAO_HAS_MINIMUM_CORBA around create_operation_list.

	* tao/orbconf.h:
	* rules.tao.GNU:

	  Nowhere in the CORBA spec does it say that messaging and
	  RTCORBA needs to disabled when minimum corba is enabled. It has
	  been a TAO artifact from legacy code. This prevented users from
	  using RTCORBA in minimum_corba mode, which IMHO is insane to say
	  the least. I am sure Bill Beckwith would support my argument:-)

	  Just enabled RTCORBA and messaging in minimum_corba builds.

	* tao/RTCORBA/RTCORBA.cpp:
	* tao/RTCORBA/RTCORBA.h:

	  Set the #defined  properly.

	* tests/RTCORBA/Linear_Priority/Makefile:
	* tests/RTCORBA/Persistent_IOR/Makefile:
	* tests/RTCORBA/Policy_Combinations/Makefile:
	* tests/RTCORBA/Priority_Inversion_With_Bands/Makefile:
	* tests/RTCORBA/Profile_And_Endpoint_Selection/Makefile:
	* tests/RTCORBA/Thread_Pool/Makefile:

	  These tests specifically use the minimum_poa features. So
	  prevented these tests from compiling in minimum_corba builds.

Thu Nov 20 18:05:05 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Valuetype/AbstractBase.cpp:
        * tao/Valuetype/AbstractBase.h:
        * tao/Valuetype/AbstractBase.inl:
        * tao/Valuetype/AbstractBase_T.cpp (unchecked_narrow):

          Removed _downcast() and _unchecked_narrow() methods. The
          second has been removed from TAO entirely, replace with
          dynamic_cast<>, while the first was added to the original
          implementation of abstract interfaces but, in hindsight
          seems not to be need. Thanks to George Edwards
          <edwardsgt@vanderbilt.edu> for his advice on this last item.

        * tao/Valuetype/TAO_Valuetype.dsp:

          Added missing files AbstractBase_T.h and AbstractBase_T.cpp
          to the project.

        * tao/Valuetype/ValueBase.h:

          Removed no-op inline remanat of _tao_obv_narrow(), that was
          only waiting for regeration of code within the TAO libraries
          to be removed.

        * TAO_IDL/be/be_visitor_component/component_ch.cpp:

          Removed overlooked code generation of _unchecked_narrow()
          and _tao_class_id, both of which have been already removed
          from interface code generation.

        * TAO_IDL/be/be_visitor_constant/constant_ch.cpp:

          Added missing 'static' qualifier to code generation for a
          constant inside an interface or a valuetype.

        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:

          Cosmetic changes to comments in source code.

        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be_include/be_visitor_interface/interface_cs.h:

          Removed code generation for _downcast() and _tao_obv_narrow()
          for abstract interfaces. Also removed methods (no longer used)
          that generated _unchecked_narrow() for concrete and abstract
          interfaces.

Thu Nov 20 13:05:00 2003  Justin mIchel <michel_j@ociweb.com>

	* tao/PortableServer/ImR_LocatorC.cpp:
	* tao/PortableServer/ImR_Locator.pidl:

	  Removed redundant explicit template instantiations. This should
	  be a temporary workaround. Eventually, the generated file will
	  work as is.

Thu Nov 20 11:04:09 2003  Dale Wilson  <wilson_d@>

        * orbsvcs/orbsvcs/FT_ORB.dsp:
          Remove this and replace it with the following three libraries.

        * orbsvcs/orbsvcs/FTORB_Utils.dsp:
        * orbsvcs/orbsvcs/FT_ClientORB.dsp:
        * orbsvcs/orbsvcs/FT_ServerORB.dsp:
          New shared libraries.

        * TAOACE.dsw:
          Include above changes in dsw
          Working on VC6 build errors in scoreboard.


Thu Nov 20 15:39:44 2003  Simon McQueen  <sm@prismtechnologies.com>

        * TAOACE.dsw:

          Added dependency on Messaging to CosNaming to hopefully fix new
          errors in VC++ XP build on scoreboard.

Thu Nov 20 08:20:18 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile:
        * examples/RTScheduling/MIF_Scheduler/Makefile:

          Added TAO_Messaging to the link line.

Wed Nov 19 21:38:59 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:
        * tao/Typecode.cpp:

          Fixed typos in explicit template instantiations.

Wed Nov 19 20:09:17 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/Concurrency_Service/Makefile:
        * orbsvcs/Naming_Service/Makefile:
        * orbsvcs/Time_Service/Makefile
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Makefile:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/Makefile:
        * orbsvcs/tests/AVStreams/Component_Switching/Makefile
        * orbsvcs/tests/AVStreams/Full_Profile/Makefile:
        * orbsvcs/tests/AVStreams/Multicast/Makefile:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/Makefile:
        * orbsvcs/tests/AVStreams/Pluggable/Makefile:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/Makefile:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Makefile:
        * orbsvcs/tests/Concurrency/Makefile:
        * orbsvcs/tests/Property/Makefile:
        * orbsvcs/tests/Sched_Conf/Makefile:
        * orbsvcs/tests/Simple_Naming/Makefile:
        * orbsvcs/tests/Time/Makefile:

          Added TAO_Messaging to the link line. Further made sure that we
          don't build these when messaging is disabled.

Wed Nov 19 19:43:15 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DomainC.cpp:

          Cosmetic changes, to keep line lengths under 80 characters.

        * tao/ORB.cpp:

          Changed the exception thrown by create_operation_list() to
          INTF_REPOS, since we are call IFR_Client in this function.
          Also added .inout() to a couple uses of String_var.

        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp (create_operation_list):

          Plugged memory leak, made changes to conform to the ACE style
          guidelines, and several other changes to clean up the code.

Wed Nov 19 19:24:50 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/ORB.cpp:

          Fixed a warning. Probably this would be millionth time in the
          history of ACE+TAO that we fix a warning, which is basically
          a .in () for a _var.

Wed Nov 19 17:39:56 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/driver/drv_args.cpp:

          Changed generated code for constants defined in a module to be
          inlined by default, and added command line option -Guc to
          uninline such generated code, for use with compiler that have
          a problem with such things when using pre-compiled headers.
          Also updated usage message to reflect the command line option
          change. Removed the option -Gic to make the generated code
          inline, since it is now redundant.

        * docs/compiler.html:
        * docs/releasenotes/index.html:

          Updated the IDL compiler options table and the releasenotes
          with the changes above.

Wed Nov 19 13:51:18 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any_Special_Impl_T.cpp (insert):

          Eliminated a memory leak (TypeCode copy not released) when
          inserting a string into an Any.

        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynArray_i.cpp:
        * tao/DynamicAny/DynCommon.cpp:
        * tao/DynamicAny/DynEnum_i.cpp:
        * tao/DynamicAny/DynSequence_i.cpp:
        * tao/DynamicAny/DynStruct_i.cpp:
        * tao/DynamicAny/DynUnion_i.cpp:

          Eliminated memory leaks (ACE_Message_Block copy not released) that
          occur when an Any of known type is used to create or assign to a
          Dynamic Any. Such Anys do not contain their value encoded in a
          CDR stream as Anys of unknown type do. However, all of TAO's
          interpretive (de)marshaling code assumes the latter so, if the
          Any's type is known, it must be marshaled into a CDR stream
          before it can be processed by Dynamic Any code. In taking this
          step, we were leaving an extra copy of a message block lying
          around. Thanks to Harvinder Sawhney <harvinder_sawhney@agilent.com>
          for pointing out the leaks. Also made cosmetic changes to keep
          line lengths under 80 characters.

Tue Nov 18 23:17:24 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/Concurrency_Service/Makefile:
        * orbsvcs/Time_Service/Makefile:

          Added messaging library. This is not sufficient. We need to make
          a check whether messaging is on or not. I just wanted to fix
          this before I went to bed.

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_TargetCredentials.cpp:

          Fixed an unused variable warning.

Tue Nov 18 22:49:33 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/Naming_Service/Makefile:

          Added messaging library.

Tue Nov 18 22:32:48 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/CosNaming.mpc:

          Naming service now uses the messaging library.

Tue Nov 18 22:26:41 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/ORB.cpp:

          Cosmetic fixes.

Tue Nov 18 12:11:32 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/LoadBalancer/Makefile.LoadManager:
        * orbsvcs/LoadBalancer/Makefile.LoadMonitor:

          Fixed brain damaged way of doing things. Checks for whether
          certain options have been turned on or off made sure that they
          would never be built.

Tue Nov 18 12:03:11 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Makefile.CosNotification:

          Updated dependencies.

Tue Nov 18 11:29:30 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/IFR_Client_Adapter.h:
        * tao/ORB.cpp:
        * tao/IFR_Client/IFR_Client_Adapter_Impl.h:

          Fixed compile errors that were caused due to improper macro
          usage.

Tue Nov 18 13:59:11 2003  Simon McQueen  <sm@prismtechnologies.com>

        * tao/ORB.cpp (resolve_service):

          Remove the check for an environment property defining the IOR of one
          of the four 'known' services.

          (resolve_initial_references):

          Check instead for an environment property in the form <name>IOR after
          checking the IOR table (where name is any name). This fixes bug
          #1334.

          (create_operation_list):
          Added this method. Delegates to TAO_IFR_Client_Adapter (see below).

        * tao/CORBA_methods.h:
        * tao/ORB.h (create_operation_list):
        * tao/IFR_Client_Adapter.h (create_operation_list):
        * tao/IFR_Client/IFR_ClientAdapterImpl.h (create_operation_list):
        * tao/IFR_Client/IFR_ClientAdapterImpl.cpp (create_operation_list):

          Implemented create_operation_list. This fixes bug #1630.

        * orbsvcs/IFR_Service/ifr_removing_visitor.cpp:
        * orbsvcs/IFR_Service/ifr_removing_visitor.h:

          Added visit_root method. This fixes bug #1331.

        * tao/DynamicAny/DynUnion_i.cpp (to_any):

          Check if union is empty, i.e. check if it has an active member,
          before adding member_ to the CDR Stream. This fixes bug #1636.

          (set_from_any):

          Strip alias from type code. This fixes bug #1639.

        * utils/nslist/nsadd.cpp:
        * utils/nslist/nslist.cpp:
        * utils/nslist/README:

          Add the ability to list the IORs of subcontexts within a naming
          graph. This fixes bug #1624.

        * tao/Valuetype/ValueBase.cpp (_tao_unmarshal_pre):

          If no type information is given in the CDR encoding, as indicated
          by the <value-tag>, then use the repository id parameter instead.
          This fixes bug #1629.

        * TAO_IDL/be/be_visitor_typedef/typedef_ci.cpp (visit_array):

          Fix check for definition in another file. This fixes bug #1628.

        * utils/catior/catior.cpp (main):

          Removed -n option. It doesn't do anything. Fixes bug #1332.

        * tao/Acceptor_Registry.cpp (open):

          Allow additional -ORBEndpoint value(s) to be specified as the
          environment property TAO_ORBENDPOINT. This fixes bug #1627.

        * orbsvcs/orbsvcs/CosNaming.bor:
        * orbsvcs/orbsvcs/CosNaming.dsp:
        * orbsvcs/orbsvcs/CosNaming.mpc:
        * orbsvcs/orbsvcs/Makefile.CosNaming:

          Added dependency on TAO_Messaging. See below.

        * orbsvcs/orbsvcs/Naming/Hash_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Utils.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Utils.h:

          Set relative round trip timeout on Orb in response to value
          of new '-z' command line NameService parameter. This fixes
          bug #1634.

        * orbsvcs/Naming_Service/README:

          Documented the -z option.

        * orbsvcs/tests/Bug_1334_Regression/Bug_1334_client.dsp:
        * orbsvcs/tests/Bug_1334_Regression/Bug_1334_client.dsw:
        * orbsvcs/tests/Bug_1334_Regression/Bug_1334_Regression.dsw:
        * orbsvcs/tests/Bug_1334_Regression/client.cpp:
        * orbsvcs/tests/Bug_1334_Regression/Makefile:
        * orbsvcs/tests/Bug_1334_Regression/Makefile.Bug_1334_client:
        * orbsvcs/tests/Bug_1334_Regression/README:
        * orbsvcs/tests/Bug_1334_Regression/run_test.pl:
        * orbsvcs/tests/Bug_1334_Regression/test.mpc:
        * orbsvcs/tests/Bug_1630_Regression/Bug_1630_Regression.dsw:
        * orbsvcs/tests/Bug_1630_Regression/Bug_1630_testclient.dsp:
        * orbsvcs/tests/Bug_1630_Regression/Makefile:
        * orbsvcs/tests/Bug_1630_Regression/Makefile.Bug_1630_testclient:
        * orbsvcs/tests/Bug_1630_Regression/run_test.pl:
        * orbsvcs/tests/Bug_1630_Regression/test.mpc:
        * orbsvcs/tests/Bug_1630_Regression/testclient.cpp:
        * tests/Bug_1330_Regression/Bug_1330_Client.dsp:
        * tests/Bug_1330_Regression/Bug_1330_Regression.mpc:
        * tests/Bug_1330_Regression/Bug_1330_Server.dsp:
        * tests/Bug_1330_Regression/client.cpp:
        * tests/Bug_1330_Regression/Makefile:
        * tests/Bug_1330_Regression/Makefile.Bug_1330_Client:
        * tests/Bug_1330_Regression/Makefile.Bug_1330_Server:
        * tests/Bug_1330_Regression/README:
        * tests/Bug_1330_Regression/run_test.pl:
        * tests/Bug_1330_Regression/server.cpp:
        * tests/Bug_1330_Regression/Test.idl:
        * tests/Bug_1330_Regression/Test_i.cpp:
        * tests/Bug_1330_Regression/Test_i.h:
        * tests/Bug_1627_Regression/Bug_1627_Client.dsp:
        * tests/Bug_1627_Regression/Bug_1627_Regression.dsw:
        * tests/Bug_1627_Regression/Bug_1627_Server.dsp:
        * tests/Bug_1627_Regression/client.cpp:
        * tests/Bug_1627_Regression/Makefile:
        * tests/Bug_1627_Regression/Makefile.Bug_1627_Client:
        * tests/Bug_1627_Regression/Makefile.Bug_1627_Server:
        * tests/Bug_1627_Regression/README:
        * tests/Bug_1627_Regression/run_test.pl:
        * tests/Bug_1627_Regression/server.cpp::
        * tests/Bug_1627_Regression/Test.idl:
        * tests/Bug_1627_Regression/test.mpc:
        * tests/Bug_1627_Regression/Test_i.cpp:
        * tests/Bug_1627_Regression/Test_i.h:
        * tests/Bug_1628_Regression/run_test.pl:
        * tests/Bug_1628_Regression/TestCase.idl:
        * tests/Bug_1628_Regression/TestType.idl:
        * tests/Bug_1635_Regression/Bug_1635_Client.dsp:
        * tests/Bug_1635_Regression/Bug_1635_Regression.dsw:
        * tests/Bug_1635_Regression/Bug_1635_Regression.mpc:
        * tests/Bug_1635_Regression/client.cpp:
        * tests/Bug_1635_Regression/Makefile:
        * tests/Bug_1635_Regression/Makefile.Bug_1635_Client:
        * tests/Bug_1635_Regression/README:
        * tests/Bug_1635_Regression/run_test.pl:
        * tests/Bug_1636_Regression/Bug_1636_Regression.dsw:
        * tests/Bug_1636_Regression/bug_1636_testclient.dsp:
        * tests/Bug_1636_Regression/client.cpp:
        * tests/Bug_1636_Regression/Makefile:
        * tests/Bug_1636_Regression/Makefile.bug_1636_testclient:
        * tests/Bug_1636_Regression/README:
        * tests/Bug_1636_Regression/run_test.pl:
        * tests/Bug_1636_Regression/test.idl:
        * tests/Bug_1636_Regression/test.mpc:
        * tests/Bug_1639_Regression/Bug_1639_Regression.dsw:
        * tests/Bug_1639_Regression/Bug_1639_testclient.dsp:
        * tests/Bug_1639_Regression/Makefile:
        * tests/Bug_1639_Regression/Makefile.Bug_1639_testclient:
        * tests/Bug_1639_Regression/run_test.pl:
        * tests/Bug_1639_Regression/struct.idl:
        * tests/Bug_1639_Regression/struct_client.cpp:
        * tests/Bug_1639_Regression/test.mpc:

          Regression tests added.

Tue Nov 18 07:46:30 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ORB_Utils_export.h:

          Removed the pragma message.

Tue Nov 18 05:12:17 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * rules.tao.GNU:
          Made assignments to ACE_MAKE_OPTIONS for each TAO specific make
          flag, e.g., ami, rt_corba, etc. Added -I$(TAO_ROOT) to INCLDIRS
          and -L$(TAO_ROOT)/tao to LDFLAGS which keeps us from having to
          include taoconfig.mk.

        * orbsvcs/orbsvcs/Makefile.RTCosScheduling:
          Heavily modified this Makefile to use the new makefile scheme,
          including setting ADDITIONAL_INCLUDE = $(TAO_ROOT)/rules.tao.GNU
          and REQUIRED_COMPONENTS = interceptors rt_corba RTCosScheduling
          before including include/makeinclude/all_in_one.GNU.  Assuming
          this worksout okay, we should be able to use this as a model for
          modifying the MPC templates.

Mon Nov 17 20:42:06 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/fault_tol_export.h:

          Reverted the change to fault_tol_export.h. This was creating
          problems with g++, especially the pragma messages. This
          reversion just removes those messages.

Mon Nov 17 16:31:39 2003  Dale Wilson  <wilson_d@ociweb.com>

        * orbsvcs/orbsvcs/FTORB.mpc:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientORBInitializer.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientORB_export.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicyFactory.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientService_Activate.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientService_Activate.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Endpoint_Selector_Factory.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Endpoint_Selector_Factory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Invocation_Endpoint_Selectors.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ORB_Utils_export.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerORBInitializer.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerORB_export.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicyFactory.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerService_Activate.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerService_Activate.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.h:
        * orbsvcs/orbsvcs/FaultTolerance/fault_tol_export.h:
          Add new export files for FT_ORB_Utils, FT_ServerORB, and FT_ClientORB.

        * orbsvcs/orbsvcs/Notify/Event_Map_Entry_T.h:
          Build error: TAO_SYNCH_MUTEX undefined.  Add included to define it.

Mon Nov 17 21:43:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Trading/Trading.mpc:
          Removed dynamicflags and idlflags because this test doesn't use them.
          This resulted in hundreds of errors in the MinGW build

Mon Nov 17 21:35:43 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/RTCORBA/Diffserv/client.cpp:
        * tests/RTCORBA/Diffserv/Custom_Network_Priority_Mapping.cpp:
          Fixed compile problems in MinGW build

Mon Nov 17 17:00:03 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Notify/Test_Filter/Makefile.bor:
          Added ValueType library

Mon Nov 17 10:04:56 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_array/array_ci.cpp:

          For generation of inline array traits methods, changed
          ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION to
          ACE_TEMPLATE_METHOD_SPECIALIZATION.

Sun Nov 16 22:47:53 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Synch_Invocation.cpp:

          Fixed a compile error due to wrong exception macro usage.

Sun Nov 16 18:04:05 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/operation_details.i:

          Removed 'return' from the last line of two methods returning void.

Sun Nov 16 16:49:33 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.cpp:
        * tao/ORB_Core.cpp:
        * tao/Synch_Invocation.cpp:

          Fix for [BUG 1384]. Please see

          http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=1384

          for details. The crux of the problem is whether the FTORB
          infrastructure should do a reinvocation when it receives a
          TRANSIENT over the wire. Opinions were widely different on
          this. We finally took the opinion of Jon Biggar who said this
          was okay.

Sun Nov 16 12:40:15 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Portable_Interceptors/Bug_1559/interceptors.cpp:

          In receive_request_service_context (), return if we receive a
          shutdown call. If not the test will not shutdwon cleanly.

Sun Nov 16 12:32:02 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/operation_details.h:
        * tao/operation_details.i:

          Added two new methods reset_request_service_info () and
          reset_reply_service_info () which resets the buffer within the
          underlying service context list.

        * tao/Invocation_Adapter.cpp:

          If the call on a traget object returned a
          TAO::TAO_INVOKE_RESTART, reset the buffer of the service context
          list cached within the operation_details before restarting the
          invocation on a new target. This should fix [BUG1559].

        * tao/Sequence.cpp:
        * tao/Sequence.h:
        * tao/Sequence_T.cpp:

          The _dellocate_buffer () implementations just released the
          buffer and set the buffer to be null. The length_, release_ and
          maximum_ (not for bounded sequences) need to be reset too. If
          not the following code fragment could crash

          some_sequence._deallocate_buffer ();
          some_sequence[i].something ();

        * tao/Synch_Invocation.cpp:
        * tao/Synch_Invocation.h:

          Cosmetic fixes like adding more comments, adding preconditions
          and postconditions for a few calls etc.

Sun Nov 16 18:33:27 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * TAO_IDL/fe/lex.yy.cpp:
          Removed #include OS.h and added os_stdio.h"

        * orbsvcs/orbsvcs/Makefile.CosNotification:
          Moved $(IDL_SRC) in front of $(addsuffix .cpp,$(FILES)) in LSRC
          to fix dependencies, by requiring them to be build first.
          Updated dependencies.

        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.cpp:
          Added #include OS_NS_errno.h and OS_NS_stdio.h.

        * tao/Valuetype/Sequence_T.inl:
          Added #include Log_Msg.h to pick up ACE_ASSERT.

Sun Nov 16 10:03:59 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/TAO.dsp:

          Added the new generated files into the project.

Sun Nov 16 09:46:17 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Dynamic.pidl:
        * tao/Messaging_PolicyValue.pidl:
        * tao/Policy_Forward.pidl:
        * tao/OctetSeq.pidl:
        * tao/Services.pidl:
        * tao/StringSeq.pidl:
        * tao/TAO.pidl:

          Added the new option to needed to regenerate code.

        * tao/DynamicA.cpp:
        * tao/DynamicA.h:
        * tao/Messaging_PolicyValueA.cpp:
        * tao/Messaging_PolicyValueA.h:
        * tao/OctetSeqA.cpp:
        * tao/OctetSeqA.h:
        * tao/Policy_ForwardA.cpp:
        * tao/Policy_ForwardA.h:
        * tao/ServicesA.cpp:
        * tao/ServicesA.h:
        * tao/StringSeqA.cpp:
        * tao/StringSeqA.h:

          New files that have the Any operators declared and defined
          elsewhere.

        * tao/DynamicC.cpp:
        * tao/DynamicC.h:
        * tao/Messaging_PolicyValueC.cpp:
        * tao/Messaging_PolicyValueC.i:
        * tao/OctetSeqC.cpp:
        * tao/OctetSeqC.i:
        * tao/Policy_ForwardC.cpp:
        * tao/Policy_ForwardC.i:
        * tao/ServicesC.cpp:
        * tao/ServicesC.i:
        * tao/StringSeqC.cpp:
        * tao/StringSeqC.h:
        * tao/StringSeqC.i:

          Regenerated code since the Any operators have been moved from
          the above files.

        * tao/Makefile.bor:
        * tao/Makefile.tao:
        * tao/tao.mpc:

          Added the new files which has the Any operators for
          compilation.

Sun Nov 16 13:23:42 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/ImplRepo_Service/ImplRepo.bor:
        * orbsvcs/ImplRepo_Service/ImR_Activator.bor:
          Fixed these BCB makefiles

Sat Nov 15 16:18:29 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicAny/DynEnum_i.cpp:
        * tao/DynamicAny/DynUnion_i.cpp:

          Added checks for 0 ACE_Message_Block return value from call to
          _tao_get_cdr() on an Any, and alternate method of extraction
          if the message block is 0. This closes [BUGID:1645].

Sat Nov 15 14:33:39 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_constant/constant_ch.cpp:

          Replaced a generated 'extern' with 'TAO_NAMESPACE_STORAGE_CLASS'
          to automatically include the export macro, if any. Thanks to
          Mike Hepburn <mike@anvil.com> for rerorting the problem.

Fri Nov 14 15:04:53 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/AMI/FL_Callback/peer.cpp:
          Added #include ace/OS_NS_errno.h

Fri Nov 14 04:53:28 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tests/RTScheduling/Scheduling_Interceptor/Makefile:
          Moved the testC.o and testS.o objects in from of the
          test_client.o and test_server.o objects in the CLIENT_OBJS and
          SERVER_OBJS lists to force them to get created first.

Fri Nov 14 03:47:33 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/examples/RtEC/Kokyu/Makefile:
          Only define BIN target and build if RTKokyuEvent and CosNaming
          have been built.

        * orbsvcs/orbsvcs/Makefile.RTKokyuEvent:
          Added -*- Makefile -*- to top of file to highlight syntax.

Fri Nov 14 02:51:44 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * examples/Logging/Logger_i.cpp:
          Added #include os_netdb.h.

Fri Nov 14 02:28:09 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tao/Messaging/Asynch_Invocation_Adapter.{h,cpp,inl}:
          Added new file, Asynch_Invocation_Adapter.inl, and added invoke
          method that matches the one in the base class that had been
          hidden by the new one with different parameters.

Thu Nov 13 21:02:31 2003  Carlos O'Ryan  <coryan@atdesk.com>

        * tao/Queued_Message.cpp:
          Made the remove_from_list() operation safe if called multiple
          times.  This fixes:
            http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=1614

Fri Nov 14 00:26:46 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tests/RTScheduling/Scheduling_Interceptor/Makefile:
          Removed BIN_UNCHECKED from the SRC variable. Updated
          dependencies.

Thu Nov 13 15:42:44 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile:
          Updated dependencies.

Thu Nov 13 04:26:17 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/PSS/Makefile.datastore:
          Added MAKEFILE variable and updated dependencies.

Wed Nov 12  5:01:00 2003  George Edwards <g.edwards@vanderbilt.edu>

        * tests/Portable_Interceptors/Bug_1559/interceptors.cpp:

          Added check for "is_a" calls in client interceptors.

Wed Nov 12 16:55:00 2003  Justin Michel  <michel_j@ociweb.com>

        * docs/tutorials/Quoter/AMI/Quoter_AMI.mpc:
        * docs/tutorials/Quoter/Event_Service/Quoter_Event_Service.mpc:
        * docs/tutorials/Quoter/Naming_Service/Quoter_Naming_Service.mpc:
        * docs/tutorials/Quoter/On_Demand_Activation/Quoter_On_Demand_Activation.mpc:
        * docs/tutorials/Quoter/RT_Event_Service/Quoter_RT_Event_Service.mpc:
        * docs/tutorials/Quoter/Simple/Client/Quoter_Simple_Client.mpc:
        * docs/tutorials/Quoter/Simple/Impl-Repo/Quoter_Simple_Impl_Repo.mpc:
        * docs/tutorials/Quoter/Simple/ImprovedServer/Quoter_Simple_ImprovedServer.mpc:
        * docs/tutorials/Quoter/Simple/Persistent/Quoter_Simple_Persistent.mpc:
        * docs/tutorials/Quoter/Simple/Server/Quoter_Simple_Server.mpc:
        * docs/tutorials/Quoter/idl/Quoter_idl.mpc:
        * examples/AMH/Sink_Server/Sink_Server.mpc:
        * examples/AMI/FL_Callback/FL_Callback.mpc:
        * examples/Advanced/ch_12/Advanced_ch_12.mpc:
        * examples/Advanced/ch_18/Advanced_ch_18.mpc:
        * examples/Advanced/ch_21/Advanced_ch_21.mpc:
        * examples/Advanced/ch_3/Advanced_ch_3.mpc:
        * examples/Advanced/ch_8_and_10/Advanced_ch_8_and_10.mpc:
        * examples/Buffered_AMI/Buffered_AMI.mpc:
        * examples/Buffered_Oneways/Buffered_Oneways.mpc:
        * examples/Callback_Quoter/Callback_Quoter.mpc:
        * examples/Content_Server/AMI_Iterator/AMI_Iterator.mpc:
        * examples/Content_Server/AMI_Observer/AMI_Observer.mpc:
        * examples/Content_Server/SMI_Iterator/SMI_Iterator.mpc:
        * examples/Event_Comm/Event_Comm.mpc:
        * examples/Load_Balancing/Load_Balancing.mpc:
        * examples/Load_Balancing_persistent/Load_Balancing_persistent.mpc:
        * examples/Logging/Logging.mpc:
        * examples/OBV/Typed_Events/Typed_Events.mpc:
        * examples/POA/Adapter_Activator/POA_Adapter_Activator.mpc:
        * examples/POA/DSI/POA_DSI.mpc:
        * examples/POA/Default_Servant/POA_Default_Servant.mpc:
        * examples/POA/Explicit_Activation/POA_Explicit_Activation.mpc:
        * examples/POA/Explicit_Activation/Alt_Resources/Alt_Resource.mpc:
        * examples/POA/FindPOA/POA_FindPOA.mpc:
        * examples/POA/Forwarding/POA_Forwarding.mpc:
        * examples/POA/Generic_Servant/POA_Generic_Servant.mpc:
        * examples/POA/Loader/POA_Loader.mpc:
        * examples/POA/NewPOA/POA_NewPOA.mpc:
        * examples/POA/On_Demand_Activation/POA_On_Demand_Activation.mpc:
        * examples/POA/On_Demand_Loading/POA_On_Demand_Loading.mpc:
        * examples/POA/POA_BiDir/POA_BiDir.mpc:
        * examples/POA/Reference_Counted_Servant/Reference_Counted_Servant.mpc:
        * examples/POA/RootPOA/RootPOA.mpc:
        * examples/POA/TIE/POA_TIE.mpc:
        * examples/Persistent_Grid/Persistent_Grid.mpc:
        * examples/PluggableUDP/tests/Basic/Basic.mpc:
        * examples/PluggableUDP/tests/Performance/Performance.mpc:
        * examples/PluggableUDP/tests/SimplePerformance/SimplePerformance.mpc:
        * examples/Simple/chat/chat.mpc:
        * examples/Simple/time-date/Simple_time_date.mpc:
        * examples/ior_corbaloc/ior_corbaloc.mpc:
        * examples/mfc/client.mpc:
        * examples/mfc/server.mpc:
        * orbsvcs/ImplRepo_Service/Activator_NT_Service.cpp:
        * orbsvcs/ImplRepo_Service/Activator_NT_Service.h:
        * orbsvcs/ImplRepo_Service/Activator_Options.cpp:
        * orbsvcs/ImplRepo_Service/Activator_Options.h:
        * orbsvcs/ImplRepo_Service/INS_Locator.cpp:
        * orbsvcs/ImplRepo_Service/INS_Locator.h:
        * orbsvcs/ImplRepo_Service/ImplRepo_Service.mpc:
        * orbsvcs/ImplRepo_Service/Locator_NT_Service.h:
        * orbsvcs/ImplRepo_Service/Locator_Options.cpp:
        * orbsvcs/ImplRepo_Service/Locator_Options.h:
        * orbsvcs/LoadBalancer/LoadBalancer.mpc:
        * orbsvcs/Naming_Service/NT_Naming_Service.h:
        * orbsvcs/Notify_Service/NT_Notify_Service.h:
        * orbsvcs/Notify_Service/Notify_Service.mpc:
        * orbsvcs/PSS/PSDL.mpc:
        * orbsvcs/examples/CosEC/Factory/CosEC_Factory.mpc:
        * orbsvcs/examples/CosEC/RtEC_Based/bin/CosEC_RtEC_Based_bin.mpc:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/CosEC_RtEC_Based_lib.mpc:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Basic/CosEC_RtEC_Based_tests_Basic.mpc:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/CosEC_RtEC_Based_tests_Multiple.mpc:
        * orbsvcs/examples/CosEC/Simple/CosEC_Simple.mpc:
        * orbsvcs/examples/Log/Basic/Log_Basic.mpc:
        * orbsvcs/examples/Log/Event/Log_Event.mpc:
        * orbsvcs/examples/Log/Notify/Log_Notify.mpc:
        * orbsvcs/examples/Log/RTEvent/Log_RTEvent.mpc:
        * orbsvcs/examples/Notify/Filter/Notify_Filter.mpc:
        * orbsvcs/examples/Notify/Subscribe/Notify_Subscribe.mpc:
        * orbsvcs/examples/ORT/ORT.mpc:
        * orbsvcs/examples/PSS/PSS.mpc:
        * orbsvcs/examples/RtEC/MCast/RtEC_MCast.mpc:
        * orbsvcs/examples/RtEC/Schedule/RtEC_Schedule.mpc:
        * orbsvcs/examples/RtEC/Simple/RtEC_Simple.mpc:
        * orbsvcs/examples/Security/Send_File/Security_Send_File.mpc:
        * orbsvcs/orbsvcs/AV.mpc:
        * orbsvcs/orbsvcs/CosConcurrency.mpc:
        * orbsvcs/orbsvcs/CosEvent.mpc:
        * orbsvcs/orbsvcs/CosLifeCycle.mpc:
        * orbsvcs/orbsvcs/CosLoadBalancing.mpc:
        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/CosProperty.mpc:
        * orbsvcs/orbsvcs/CosTrading.mpc:
        * orbsvcs/orbsvcs/DsEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsNotifyLogAdmin.mpc:
        * orbsvcs/orbsvcs/ETCL.mpc:
        * orbsvcs/orbsvcs/SSLIOP.mpc:
        * orbsvcs/tests/CosEvent/Basic/basiceventtestexe.mpb:
        * orbsvcs/tests/CosEvent/lib/CosEvent_lib.mpc:
        * orbsvcs/tests/EC_Custom_Marshal/EC_Custom_Marshal.mpc:
        * orbsvcs/tests/EC_MT_Mcast/EC_MT_Mcast.mpc:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.mpc:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.mpc:
        * orbsvcs/tests/EC_Throughput/EC_Throughput.mpc:
        * orbsvcs/tests/Event/Performance/eventperftestexe.mpb:
        * orbsvcs/tests/FaultTolerance/IOGR/FaultTolerance_IOGR.mpc:
        * orbsvcs/tests/FaultTolerance/IOGRManipulation/FaultTolerance_IOGRManipulation.mpc:
        * orbsvcs/tests/InterfaceRepo/Application_Test/InterfaceRepo_Application_Test.mpc:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Application_Controlled.mpc:
        * orbsvcs/tests/Log/Basic_Log_Test/Log_Basic_Log_Test.mpc:
        * orbsvcs/tests/Miop/McastHello/McastHello.mpc:
        * orbsvcs/tests/Notify/Basic/Basic.mpc:
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Filter.mpc:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Multi_Filter.mpc:
        * orbsvcs/tests/Notify/lib/Notify_lib.mpc:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/RedGreen.mpc:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Throughput.mpc:
        * orbsvcs/tests/Property/Property.mpc:
        * orbsvcs/tests/Sched/Sched.mpc:
        * orbsvcs/tests/Sched_Conf/Sched_Conf.mpc:
        * orbsvcs/tests/Security/Big_Request/Big_Request.mpc:
        * orbsvcs/tests/Security/Callback/Callback.mpc:
        * orbsvcs/tests/Security/Crash_Test/Security_Crash_Test.mpc:
        * orbsvcs/tests/Security/MT_IIOP_SSL/MT_IIOP_SSL.mpc:
        * orbsvcs/tests/Security/Secure_Invocation/Secure_Invocation.mpc:
        * orbsvcs/tests/Security/SecurityLevel1/SecurityLevel1.mpc:
        * orbsvcs/tests/Simple_Naming/Simple_Naming.mpc:
        * orbsvcs/tests/Time/Time.mpc:
        * orbsvcs/tests/Trading/Trading.mpc:
        * performance-tests/Callback/Callback.mpc:
        * performance-tests/Cubit/TAO/DII_Cubit/DII_Cubit.mpc:
        * performance-tests/Cubit/TAO/IDL_Cubit/IDL_Cubit.mpc:
        * performance-tests/Cubit/TAO/MT_Cubit/MT_Cubit.mpc:
        * performance-tests/Latency/AMH/Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Latency/AMI/AMI.mpc:
        * performance-tests/Latency/DII/DII.mpc:
        * performance-tests/Latency/DSI/DSI.mpc:
        * performance-tests/Latency/Deferred/Deferred.mpc:
        * performance-tests/Latency/Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Latency/Thread_Per_Connection/Thread_Per_Connection.mpc:
        * performance-tests/Latency/Thread_Pool/Thread_Pool.mpc:
        * performance-tests/Memory/IORsize/Memory_IORsize.mpc:
        * performance-tests/Memory/Single_Threaded/Memory_Growth.mpc:
        * performance-tests/POA/Create_Reference/Create_Reference.mpc:
        * performance-tests/POA/Implicit_Activation/Implicit_Activation.mpc:
        * performance-tests/POA/Object_Creation_And_Registration/Object_Creation_And_Registration.mpc:
        * performance-tests/Pluggable/Pluggable.mpc:
        * performance-tests/Throughput/Throughput.mpc:
        * tao/RTCORBA/RTCORBA.mpc:
        * tao/RTPortableServer/RTPortableServer.mpc:
        * tao/Utils/tao_Utils.mpc:
        * tests/AMH_Exceptions/AMH_Exceptions.mpc:
        * tests/AMH_Oneway/AMH_Oneway.mpc:
        * tests/AMI/AMI.mpc:
        * tests/AMI_Buffering/AMI_Buffering.mpc:
        * tests/AMI_Timeouts/AMI_Timeouts.mpc:
        * tests/Abstract_Interface/Abstract_Interface.mpc:
        * tests/BiDirectional/BiDirectional.mpc:
        * tests/BiDirectional_NestedUpcall/BiDirectional_NestedUpcall.mpc:
        * tests/Big_Oneways/Big_Oneways.mpc:
        * tests/Big_Reply/Big_Reply.mpc:
        * tests/Big_Request_Muxing/Big_Request_Muxing.mpc:
        * tests/Big_Twoways/Big_Twoways.mpc:
        * tests/Blocking_Sync_None/Blocking_Sync_None.mpc:
        * tests/Bug_1020_Basic_Regression/Bug_1020_Basic_Regression.mpc:
        * tests/Bug_1020_Regression/Bug_1020_Regression.mpc:
        * tests/Bug_1269_Regression/Bug_1269_Regression.mpc:
        * tests/Bug_1270_Regression/Bug_1270_Regression.mpc:
        * tests/Bug_1361_Regression/Bug_1361_Regression.mpc:
        * tests/Cache_Growth_Test/Cache_Growth_Test.mpc:
        * tests/Client_Leaks/Client_Leaks.mpc:
        * tests/CodeSets/libs/IBM1047_ISO8859/CodeSets_libs_IMB1047_ISO8859.mpc:
        * tests/CodeSets/simple/CodeSets_simple.mpc:
        * tests/Codec/Codec.mpc:
        * tests/Collocation/Collocation.mpc:
        * tests/Connect_Strategy_Test/Connect_Strategy_Test.mpc:
        * tests/Connection_Purging/Connection_Purging.mpc:
        * tests/Connection_Timeout/Connection_Timeout.mpc:
        * tests/Crash_On_Write/Crash_On_Write.mpc:
        * tests/Crashed_Callback/Crashed_Callback.mpc:
        * tests/DLL_ORB/DLL_ORB.mpc:
        * tests/DSI_Gateway/DSI_Gateway.mpc:
        * tests/DynAny_Test/DynAny_Test.mpc:
        * tests/Explicit_Event_Loop/Explicit_Event_Loop.mpc:
        * tests/FL_Cube/FL_Cube.mpc:
        * tests/Faults/Faults.mpc:
        * tests/File_IO/File_IO.mpc:
        * tests/Forwarding/Forwarding.mpc:
        * tests/Hello/Hello.mpc:
        * tests/InterOp-Naming/InterOp-Naming.mpc:
        * tests/Leader_Followers/Leader_Followers.mpc:
        * tests/LongUpcalls/LongUpcalls.mpc:
        * tests/MProfile/MProfile.mpc:
        * tests/MProfile_Connection_Timeout/MProfile_Connection_Timeout.mpc:
        * tests/MProfile_Forwarding/MProfile_Forwarding.mpc:
        * tests/MT_BiDir/MT_BiDir.mpc:
        * tests/MT_Client/MT_Client.mpc:
        * tests/MT_Server/MT_Server.mpc:
        * tests/MT_Timeout/MT_Timeout.mpc:
        * tests/Multiple/Multiple.mpc:
        * tests/Multiple_Inheritance/Multiple_Inheritance.mpc:
        * tests/Muxed_GIOP_Versions/Muxed_GIOP_Versions.mpc:
        * tests/Muxing/Muxing.mpc:
        * tests/Native_Exceptions/Native_Exceptions.mpc:
        * tests/NestedUpcall/MT_Client_Test/MT_Client_Test.mpc:
        * tests/NestedUpcall/Simple/Simple.mpc:
        * tests/NestedUpcall/Triangle_Test/Triangle_Test.mpc:
        * tests/Nested_Event_Loop/Nested_Event_Loop.mpc:
        * tests/Nested_Upcall_Crash/Nested_Upcall_Crash.mpc:
        * tests/No_Server_MT_Connect_Test/No_Server_Connect_Test.mpc:
        * tests/OBV/Any/OBV_Any.mpc:
        * tests/OBV/Factory/OBV_Factory.mpc:
        * tests/OBV/Forward/OBV_Forward.mpc:
        * tests/OBV/TC_Alignment/OBV_TC_Alignment.mpc:
        * tests/ORB_destroy/ORB_destroy.mpc:
        * tests/ORB_init/Portspan/ORB_Init_Portspan.mpc:
        * tests/ORB_shutdown/Foo_Bar.mpc:
        * tests/ORT/ORT.mpc:
        * tests/Object_Loader/Object_Loader.mpc:
        * tests/Objref_Sequence_Test/Objref_Sequence_Test.mpc:
        * tests/OctetSeq/OctetSeq.mpc:
        * tests/Oneway_Buffering/Oneway_Buffering.mpc:
        * tests/Oneways_Invoking_Twoways/Oneways_Invoking_Twoways.mpc:
        * tests/POA/Current/Current.mpc:
        * tests/POA/Etherealization/Etherealization.mpc:
        * tests/POA/Excessive_Object_Deactivations/Excessive_Object_Deactivations.mpc:
        * tests/POA/Identity/Identity.mpc:
        * tests/POA/MT_Servant_Locator/MT_Servant_Locator.mpc:
        * tests/POA/Nested_Non_Servant_Upcalls/Nested_Non_Servant_Upcalls.mpc:
        * tests/POA/Non_Servant_Upcalls/Non_Servant_Upcalls.mpc:
        * tests/POA/Object_Reactivation/Object_Reactivation.mpc:
        * tests/POA/POA_Destruction/POA_Destruction.mpc:
        * tests/POA/Persistent_ID/Persistent_ID.mpc:
        * tests/POA/Policies/Policies.mpc:
        * tests/POA/Single_Threaded_POA/Single_Threaded_POA.mpc:
        * tests/POA/wait_for_completion/wait_for_completion.mpc:
        * tests/Param_Test/Param_Test.mpc:
        * tests/Policies/Policies.mpc:
        * tests/Portable_Interceptors/AMI/Portable_Interceptors_AMI.mpc:
        * tests/Portable_Interceptors/Benchmark/Portable_Interceptors_Benchmark.mpc:
        * tests/Portable_Interceptors/Dynamic/Portable_Interceptors_Dynamic.mpc:
        * tests/Portable_Interceptors/ForwardRequest/Portable_Interceptors_ForwardRequest.mpc:
        * tests/Portable_Interceptors/IORInterceptor/Portable_Interceptors_IORInterceptor.mpc:
        * tests/Portable_Interceptors/PICurrent/Portable_Interceptors_PICurrent.mpc:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Portable_Interceptors_Request_Interceptor_Flow.mpc:
        * tests/Portable_Interceptors/Service_Context_Manipulation/Portable_Interceptors_Service_Context_Manipulation.mpc:
        * tests/QtTests/QtTests.mpc:
        * tests/RTCORBA/Collocation/RTCORBA_Collocation.mpc:
        * tests/RTCORBA/Destroy_Thread_Pool/RTCORBA_Destroy_Thread_Pool.mpc:
        * tests/RTCORBA/Diffserv/RTCORBA_Diffserv.mpc:
        * tests/RTCORBA/Persistent_IOR/RTCORBA_Persistent_IOR.mpc:
        * tests/RTCORBA/Policies/Policies.mpc:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/Profile_And_Endpoint_Selection.mpc:
        * tests/Reliable_Oneways/Reliable_Oneways.mpc:
        * tests/Server_Connection_Purging/Server_Connection_Purging.mpc:
        * tests/Server_Leaks/Server_Leaks.mpc:
        * tests/Single_Read/Single_Read.mpc:
        * tests/Smart_Proxies/Smart_Proxies.mpc:
        * tests/Smart_Proxies/Benchmark/Smart_Proxies_Benchmark.mpc:
        * tests/Smart_Proxies/Collocation/Smart_Proxies_Collocation.mpc:
        * tests/Smart_Proxies/On_Demand/Smart_Proxies_On_Demand.mpc:
        * tests/Smart_Proxies/Policy/Smart_Proxies_Policy.mpc:
        * tests/Stack_Recursion/Stack_Recursion.mpc:
        * tests/Strategies/Strategies.mpc:
        * tests/TestUtils/TestUtils.mpc:
        * tests/Timed_Buffered_Oneways/Timed_Buffered_Oneways.mpc:
        * tests/Timeout/Timeout.mpc:
        * tests/Two_Objects/Two_Objects.mpc:
        * tests/Xt_Stopwatch/Xt_Stopwatch.mpc:
        * utils/IOR-parser/IOR-parser.mpc:
        * utils/NamingViewer/NamingViewer.mpc:
        * utils/nslist/nslist.mpc:
        * utils/wxNamingViewer/wxNamingViewer.mpc:

          Imported many misc MPC file fixes from the OCI repository.
          Imported new mpc and mpb files from the OCI repository.
          Cleaned up Fuzz warnings in the ImR.
          Fixed incorrect Mutex type used in ACE_Singleton<> typedefs
            for most NT services.


Wed Nov 12 17:09:38 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/orbsvcs/Makefile.RTCosScheduling:
          Moved the LIB and SHLIB assignments up before wrapper_macros.GNU
          so that it can do it's magic and decide which gets built.

Wed Nov 12 16:44:24 UTC 2003  Don Hinton  <dhinton@dresystems.com>"

        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp (init):
          Changed ACE_THROW to ACE_THROW_RETURN to fix compile error.

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp (unregister_activator):
          Changed ACE_ENV_ARG_DECL to ACE_ENV_ARG_DECL_NOT_USED to fix
          compile warning about unused variable.

Wed Nov 12 14:51:14 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/orbsvcs/Makefile:
          Reverted the change to this file in Wed Nov 12 07:40:27 UTC 2003
          Don Hinton  <dhinton@dresystems.com>, and added back the
          ORBSVCS_COMPONENTS_realclean target.

Wed Nov 12 09:26:48 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * examples/AMI/FL_Callback/Makefile:
          Fixed problems with BIN and BIN_UNCHECKED usage, moved BUILD
          variable assignment down to below BIN assignment, so it will be
          available.

Wed Nov 12 08:22:13 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/RTCORBA/Persistent_IOR/server.cpp:
          Added #include of ace/OS_NS_string.h to get ACE_OS::strlen

        * tests/Smart_Proxies/Benchmark/client.cpp:
        * tests/Smart_Proxies/Benchmark/server.cpp:
        * tests/Smart_Proxies/Policy/client.cpp:
        * tests/Smart_Proxies/Policy/server.cpp:
          Added #include of ace/OS_NS_string.h to get ACE_OS::strdup

        * tests/Strategies/server.cpp:
          Added #include of ace/OS_NS_stdio.h to get ACE_OS::fopen/printf/fclose

        * orbsvcs/tests/Notify/lib/Activation_Manager.cpp:
        * orbsvcs/tests/Time/Client_i.cpp:
          Added #include of ace/os_include/os_netdb.h to get MAXHOSTNAMELEN

Wed Nov 12 07:40:27 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * examples/Kokyu_dsrt_schedulers/Makefile:
          Removed unused DIRS variable.

        * orbsvcs/LoadBalancer/Makefile:
        * orbsvcs/LoadBalancer/Makefile.LoadManager:
        * orbsvcs/LoadBalancer/Makefile.LoadMonitor:
          Moved the component test and BIN variable assignment to the two
          Load* makefiles and added the use of BIN_UNCHECKED variable so
          that it will get cleaned up.

        * orbsvcs/orbsvcs/Makefile:
          Removed the ORBSVCS_COMPONENTS_realclean target.  It's unneeded
          and caused the ORBSVCS_COMPONENTS.list to get deleted
          immediately during realclean, even though it was needed for
          testing later.  This is no longer a problem since we now clean
          the *_UNCHECKED targets by default.

        * orbsvcs/orbsvcs/Makefile.RTCosScheduling:
        * orbsvcs/orbsvcs/Makefile.RT_Notification:
          Removed the compclean targets--they don't belong here, since
          they would remove the ORBSVCS_COMPONENTS.list file which isn't
          what they should be doing.

        * orbsvcs/orbsvcs/Makefile.RTCosScheduling:
        * orbsvcs/tests/RTCosScheduling/Makefile.commonlib:
          Added use of *_UNCHECKED variables.

Tue Nov 11 16:54:38 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/Security/Callback/server.cpp:

          Fixed compile errors with g++.

Tue Nov 11 14:54:02 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/DynamicInterface/Request.cpp:

          Fixed a compile error due to wrong environment variable usage.

Tue Nov 11 11:43:50 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_constant/constant_ch.cpp:
        * TAO_IDL/be/be_visitor_constant/constant_cs.cpp:

          Restored the functionality of the command line option -Gic to
          generate the value assignment of constants declared in a
          namespace (IDL module) in the *C.h file. This provides
          application developers with a way to use such constants by
          name in application code, as array bounds and such. Thanks to
          Carlos O'Ryan <coryan@atdesk.com> for pointing out the
          problem.

Tue Nov 11 11:03:09 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_array/array_ci.cpp:

          Added missing ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION macros.

Tue Nov 11 16:13:42 2003  Simon McQueen  <sm@prismtechnologies.com>

        * orbsvcs/ImplRepo_Service/implrepo.dsp:
        * orbsvcs/ImplRepo_Service/ImR_Activator.dsp:

          Updated files following Justin's IMR changes.

Tue Nov 11 15:48:13 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Reliable_Oneways/client.bor:
          Added ValueType library

Tue Nov 11 01:14:58 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * examples/POA/Loader/Server_Manager.h:
        * examples/POA/On_Demand_Loading/Server_Manager.h:
        * orbsvcs/tests/Security/Callback/client.cpp:
        * orbsvcs/tests/Security/Callback/server.cpp:
          Removed #include streams.h.

        * orbsvcs/tests/Interoperable_Naming/ncontextext_client_i.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/RTCosScheduling/server.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/server.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/server.cpp:
        * tests/Bug_1361_Regression/shutdown.cpp:
        * tests/CodeSets/simple/client.cpp:
        * tests/CodeSets/simple/server.cpp:
          Fixed FUZZ errors.

        * tests/Collocation/Collocation.cpp:
          Removed #include streams.h, Get_Opt.h, and
          tao/Strategies/advanced_resource.h.

        * tests/Smart_Proxies/Collocation/main.cpp:
          Removed #include streams.h and Get_Opt.h,

Mon Nov 10 23:56:15 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/LB_server.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/LB_server.cpp:
          Added #include OS_NS_stdio.h.

Mon Nov 10 23:31:20 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/ImplRepo_Service/Makefile:
          Modified Makefile to match changes below; updated dependencies.

Mon Nov 10 16:44:43 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicInterface/Request.cpp (poll_response):

          Reverted the return value to be CORBA::Request::response_recieved_,
          but also added a call to perform_work() with a timeout of 0, if
          response_received_ is false, so that, in the single-threaded
          case, the application doesn't starve the ORB (and prevent the
          appearance of the response). Thanks to David Faure <faure@kde.org>
          for reporting the problem, and to Bala Natarajan
          <bala@dre.vanderbilt.edu> for his help with the fix.

Mon Nov 10 22:43:42 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.fp_client:
        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.fp_server:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.mif_client:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.mif_server:
          Added -lTAO_RTScheduler to LDLIBS needed by
          libTAO_Kokyu_DSRT_Schedulers.

Mon Nov 10 22:07:56 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tests/Abstract_Interface/server.cpp:
        * tests/Portable_Interceptors/AMI/server.cpp:
        * tests/UNKNOWN_Exception/server.cpp:
          Added #include OS_NS_stdio.h.

Mon Nov 10 20:45:45 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * TAO_IDL/ast/ast_decl.cpp:
          Added #include streams.h.

Mon Nov 10 20:15:46 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/ast/ast_expression.cpp:
        * TAO_IDL/ast/ast_union.cpp:
        * TAO_IDL/ast/ast_union_label.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * tao/CORBA_String.cpp:
        * tao/Exception.cpp:
        * tao/ORB_Core.cpp:
          Fixed FUZZ errors.

        * tao/ClientRequestInfo.cpp:
          Removed #include streams.h.

        * TAO_IDL/util/utl_err.cpp:
        * TAO_IDL/util/utl_identifier.cpp:
        * TAO_IDL/util/utl_idlist.cpp:
        * TAO_IDL/util/utl_indenter.cpp:
        * TAO_IDL/util/utl_scope.cpp:
        * TAO_IDL/util/utl_string.cpp:
        * TAO_IDL/util/utl_strlist.cpp:
          Added #include steams.h.

        * TAO_IDL/ast/ast_decl.cpp:
        * TAO_IDL/include/ast_decl.h:
          Added dump_i() method to hide use of ostream, obviating the need
          to #include streams.h in every file.

        * TAO_IDL/ast/ast_argument.cpp:
        * TAO_IDL/ast/ast_array.cpp:
        * TAO_IDL/ast/ast_attribute.cpp:
        * TAO_IDL/ast/ast_component.cpp:
        * TAO_IDL/ast/ast_component_fwd.cpp:
        * TAO_IDL/ast/ast_constant.cpp:
        * TAO_IDL/ast/ast_enum.cpp:
        * TAO_IDL/ast/ast_eventtype.cpp:
        * TAO_IDL/ast/ast_eventtype_fwd.cpp:
        * TAO_IDL/ast/ast_exception.cpp:
        * TAO_IDL/ast/ast_factory.cpp:
        * TAO_IDL/ast/ast_field.cpp:
        * TAO_IDL/ast/ast_home.cpp:
        * TAO_IDL/ast/ast_interface_fwd.cpp
        * TAO_IDL/ast/ast_interface.cpp:
        * TAO_IDL/ast/ast_module.cpp:
        * TAO_IDL/ast/ast_operation.cpp:
        * TAO_IDL/ast/ast_sequence.cpp:
        * TAO_IDL/ast/ast_string.cpp:
        * TAO_IDL/ast/ast_structure.cpp:
        * TAO_IDL/ast/ast_structure_fwd.cpp:
        * TAO_IDL/ast/ast_typedef.cpp:
        * TAO_IDL/ast/ast_union_branch.cpp:
        * TAO_IDL/ast/ast_union_fwd.cpp:
        * TAO/TAO_IDL/ast/ast_valuetype.cpp:
        * TAO_IDL/ast/ast_valuetype_fwd.cpp:
          Removed #include streams.h and changed ostream& << calls to use
          new dump_i() method.  Removing streams.h will reduce compile
          times and footprint and since dump calls are for debugging, they
          won't effect performance.

        * TAO_IDL/be/be_sunsoft.cpp:
          Added #include os_ctype.h.

        * TAO_IDL/include/utl_identifier.h:
        * TAO_IDL/include/utl_indenter.h:
          Changed #include streams.h to iosfwd.h.

Mon Nov 10 13:19:01 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_union.cpp:

          Cosmetic changes to source code.

        * TAO_IDL/be/be_visitor_constant/constant_ch.cpp:
        * TAO_IDL/be/be_visitor_constant/constant_cs.cpp:

          Changed code generation for constants defined in a module
          to use 'extern' in the *C.h file and assign the value in
          the *C.cpp file. Assigning the value of such constants in
          the header file was causing a problem with pre-compiled
          headers on BCB. Thanks to Mike Hepburn <mike@anvil.com> for
          reporting the problem.

Mon Nov 10 18:09:59 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/server.cpp:
        * tests/AMI_Buffering/admin.cpp:
        * tests/AMI_Buffering/server.cpp:
        * tests/Crashed_Callback/server.cpp:
        * tests/OBV/Any/server.cpp:
        * tests/OBV/Factory/server.cpp:
        * tests/OBV/Forward/server.cpp:
        * tests/OBV/TC_Alignment/server.cpp:
          Added #include ace/OS_NS_stdio.h to get ACE_OS::fclose/fopen/fprintf.

        * tests/ORT/ServerRequestInterceptor.cpp:
          Added #include ace/OS_NS_string.h to get ACE_OS::strcmp

        * tests/Connection_Timeout/client.bor:
        * tests/MT_Timeout/client.bor:
        * tests/Oneway_Buffering/client.bor:
        * tests/Nested_Upcall_Crash/scavenger.bor:
          Added ValueType library

Mon Nov 10 11:33:34 2003  Justin Michel <michel_j@ociweb.com>

        * TAO/orbsvcs/ImplRepo_Service/Activator_NT_Service.cpp:
        * TAO/orbsvcs/ImplRepo_Service/Activator_NT_Service.h:
        * TAO/orbsvcs/ImplRepo_Service/Activator_Options.cpp:
        * TAO/orbsvcs/ImplRepo_Service/Activator_Options.h:
        * TAO/orbsvcs/ImplRepo_Service/Forwarder.cpp:
        * TAO/orbsvcs/ImplRepo_Service/Forwarder.h:
        * TAO/orbsvcs/ImplRepo_Service/INS_Locator.cpp:
        * TAO/orbsvcs/ImplRepo_Service/INS_Locator.h:
        * TAO/orbsvcs/ImplRepo_Service/ImR_Activator.cpp:
        * TAO/orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:
        * TAO/orbsvcs/ImplRepo_Service/ImR_Activator_i.h:
        * TAO/orbsvcs/ImplRepo_Service/ImR_Locator.cpp:
        * TAO/orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:
        * TAO/orbsvcs/ImplRepo_Service/ImR_Locator_i.h:
        * TAO/orbsvcs/ImplRepo_Service/ImplRepo_Service.mpc:
        * TAO/orbsvcs/ImplRepo_Service/Iterator.cpp:
        * TAO/orbsvcs/ImplRepo_Service/Iterator.h:
        * TAO/orbsvcs/ImplRepo_Service/Locator.cpp:
        * TAO/orbsvcs/ImplRepo_Service/Locator.h:
        * TAO/orbsvcs/ImplRepo_Service/Locator_NT_Service.cpp:
        * TAO/orbsvcs/ImplRepo_Service/Locator_NT_Service.h:
        * TAO/orbsvcs/ImplRepo_Service/Locator_Options.cpp:
        * TAO/orbsvcs/ImplRepo_Service/Locator_Options.h:
        * TAO/orbsvcs/ImplRepo_Service/NT_Service.cpp:
        * TAO/orbsvcs/ImplRepo_Service/NT_Service.h:
        * TAO/orbsvcs/ImplRepo_Service/Options.cpp:
        * TAO/orbsvcs/ImplRepo_Service/Options.h:
        * TAO/orbsvcs/ImplRepo_Service/README.txt:
        * TAO/orbsvcs/ImplRepo_Service/Repository_Configuration.cpp:
        * TAO/orbsvcs/ImplRepo_Service/Repository_Configuration.h:
        * TAO/orbsvcs/ImplRepo_Service/Server_Info.cpp:
        * TAO/orbsvcs/ImplRepo_Service/Server_Info.h:
        * TAO/orbsvcs/ImplRepo_Service/Server_Repository.cpp:
        * TAO/orbsvcs/ImplRepo_Service/Server_Repository.h:
        * TAO/orbsvcs/ImplRepo_Service/XML_ContentHandler.cpp:
        * TAO/orbsvcs/ImplRepo_Service/XML_ContentHandler.h:
        * TAO/orbsvcs/ImplRepo_Service/tao_imr_i.cpp:
        * TAO/orbsvcs/ImplRepo_Service/tao_imr_i.h:
        * TAO/orbsvcs/tests/ImplRepo/ImplRepo.mpc:
        * TAO/orbsvcs/tests/ImplRepo/README:
        * TAO/orbsvcs/tests/ImplRepo/run_test.pl:
        * TAO/orbsvcs/tests/ImplRepo/NameService/ImplRepo_NameService.mpc:
        * TAO/tao/corba.h:
        * TAO/tao/PortableServer/ImR_ActivatorC.cpp:
        * TAO/tao/PortableServer/ImR_ActivatorC.h:
        * TAO/tao/PortableServer/ImR_ActivatorC.i:
        * TAO/tao/PortableServer/ImR_ActivatorS.cpp:
        * TAO/tao/PortableServer/ImR_ActivatorS.h:
        * TAO/tao/PortableServer/ImR_ActivatorS.i:
        * TAO/tao/PortableServer/ImR_ActivatorS_T.cpp:
        * TAO/tao/PortableServer/ImR_ActivatorS_T.h:
        * TAO/tao/PortableServer/ImR_ActivatorS_T.i:
        * TAO/tao/PortableServer/ImR_Locator.pidl:
        * TAO/tao/PortableServer/ImR_LocatorC.cpp:
        * TAO/tao/PortableServer/ImR_LocatorC.h:
        * TAO/tao/PortableServer/ImR_LocatorC.i:
        * TAO/tao/PortableServer/ImR_LocatorS.cpp:
        * TAO/tao/PortableServer/ImR_LocatorS.h:
        * TAO/tao/PortableServer/ImR_LocatorS.i:
        * TAO/tao/PortableServer/ImR_LocatorS_T.cpp:
        * TAO/tao/PortableServer/ImR_LocatorS_T.h:
        * TAO/tao/PortableServer/ImR_LocatorS_T.i:
        * TAO/tao/PortableServer/ImplRepo.pidl:
        * TAO/tao/PortableServer/ImplRepoC.cpp:
        * TAO/tao/PortableServer/ImplRepoC.h:
        * TAO/tao/PortableServer/ImplRepoC.i:
        * TAO/tao/PortableServer/ImplRepoS.cpp:
        * TAO/tao/PortableServer/ImplRepoS.h:
        * TAO/tao/PortableServer/ImplRepoS.i:
        * TAO/tao/PortableServer/ImplRepoS_T.cpp:
        * TAO/tao/PortableServer/ImplRepoS_T.h:
        * TAO/tao/PortableServer/ImplRepoS_T.i:
        * TAO/tao/PortableServer/Makefile:
        * TAO/tao/PortableServer/Makefile.bor:
        * TAO/tao/PortableServer/POA.cpp:
        * TAO/tao/PortableServer/PortableServer.mpc:
        * TAO/tao/PortableServer/TAO_PortableServer.dsp:
        * TAO/tao/PortableServer/TAO_PortableServer.vcp:
        * TAO/tao/PortableServer/TAO_PortableServer_Static.dsp:

          Added server->activator hash map and renamed the existing hash map.
        Also removed unnecessary typedefs for entry and iterator.

          Added the ability to safely unregister an activator, although it
        is really untested, as there is no way to cleanly shutdown except
        when run as an nt service.

          Many tao_imr commands now seem to work. I don't know of any problems,
        but many combinations are untested.

          Updated idl exception specifications because many operations should
        throw NotFound when an activator can't be found for a server, and
        reregister_server() can throw AlreadyRegistered if you try to register
        with a different activator.

        Removed unused template files from tao/PortableServer, and
          updated instructions to use -Sc.

          Changed the text of some output messages to remove
        the use of Error: which was incorrectly showing up as
        errors during implrepo run_test.pl's
          Updated to support passing of persisted servers back
        to the locator when the activator registers.

          Updated to support passing of persisted servers back
        to the locator when the activator registers.

        Removed unused tao/PortableServer/ImR_Activator*.*

        Support for ImR as NT Services.

        Updated run_test.pl for the main ImplRepo tests.

        Updated all -?/-h options for command line programs.

        Commented out include of missing file in corba.h

Mon Nov 10 11:20:52 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicAny/DynUnion.cpp (to_any):

          Added check for 0 message block in the Any created from the
          discriminator, similarly to the check applied to the Any
          created from the active member. Thanks to Harvinder Sawhney
          <harvinder_sawhney@agilent.com> for reporting the problem
          and for suggesting a fix.

Mon Nov 10 11:03:34 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicAny/DynCommon.cpp (insert_reference):

          Added code to cover CDR insertion of a nil object reference
          (an empty string for the type hint, and a 0 for number of
          profiles). Thanks to Harvinder Sawhney
          <harvinder_sawhney@agilent.com> for reporting the problem.

Mon Nov 10 16:59:13 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Buffered_AMI/server.cpp:
        * examples/OBV/Simple_util.cpp:
        * examples/POA/On_Demand_Loading/Server_Manager.cpp:
        * tests/AMH_Exceptions/server.cpp:
        * tests/AMH_Oneway/server.cpp:
          Added #include ace/OS_NS_stdio.h to get ACE_OS::fclose/fopen/fprintf.
          This fixes compile problems with the BCB6 compiler

Mon Nov 10 16:49:45 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Time_Service/Clerk_i.cpp:
          Added #include ace/os_include/os_netdb.h to get MAXHOSTNAMELEN

        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Monitor.cpp:
          Added #include ace/OS_NS_stdio.h to get ACE_OS::sprintf
          Added #include ace/os_include/os_netdb.h to get MAXHOSTNAMELEN

Mon Nov 10 16:41:33 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp:
          Added #include ace/OS_NS_stdio.h to get ACE_OS::sprintf

Mon Nov 10 16:06:09 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/Fast_Reactor.h:
          Added #include ace/OS_NS_sys_select.h to get ACE_OS::select

Mon Nov 10 16:01:13 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/util/utl_indenter.cpp:
          Changed order of includes to get this file compiling with BCB6

Mon Nov 10 07:18:42 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/PortableServer/ImR_ActivatorC.cpp:

          Not sure why this file is there. Anyway, just removed the vague
          includes that it has.

Sun Nov  9 23:23:20 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Remote_Object_Proxy_Impl.cpp:
        * tao/Remote_Object_Proxy_Impl.h:

          More retirements.

        * tao/Makefile*: Updated dependencies.

Sun Nov  9 23:06:22 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Asynch_Invocation.cpp:
        * tao/Asynch_Invocation.h:
        * tao/Asynch_Invocation.i:
        * tao/ClientInterceptorAdapter.cpp:
        * tao/ClientInterceptorAdapter.h:
        * tao/ClientInterceptorAdapter.inl:
        * tao/Invocation.cpp:
        * tao/Invocation.h:
        * tao/Invocation.i:

          Their service for our mankind is over. Time to remove them and
          go on with others.

Sun Nov  9 17:33:06 2003  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * tests/Timeout/client.cpp (send_echo): Added a comment to
          explain what the orb->run() call does.  Thanks to Vladimir
          Naylov <vladimir@monosphere.com> for reporting this.

Mon Nov 10 08:14:26 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/TAO.dsp:

        * tao/Makefile.bor:

          Added the new generated files into the project.


Sun Nov  9 19:19:06 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/tao.mpc:

          Added the new generated files into the list of source files.

Sun Nov  9 19:12:40 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/IOP_CodecA.cpp
        * tao/IOP_CodecA.h:
        * tao/IOP_IORA.cpp:
        * tao/IOP_IORA.h:
        * tao/PolicyA.cpp:
        * tao/PolicyA.h:
        * tao/PortableInterceptorA.cpp:
        * tao/PortableInterceptorA.h:

          New files that were created using the new IDL compiler
          option, that puts the Any operators in a seperate file.  This
          is just a test. If this gives good wins, we can go ahead fix all
          the generated code in $TAO_ROOT/tao to maintain the Any's in a
          seperate file. This can be used by the application by just
          including the header.

        * tao/IOP_CodecC.cpp:
        * tao/IOP_CodecC.i:
        * tao/IOP_IOR.pidl
        * tao/IOP_IORC.cpp:
        * tao/IOP_IORC.i:
        * tao/Makefile.tao:
        * tao/Policy.pidl:
        * tao/PolicyC.cpp:
        * tao/PolicyC.i:
        * tao/PortableInterceptor.pidl:
        * tao/PortableInterceptorC.cpp:
        * tao/PortableInterceptorC.i:

          Regenerated the code to keep the Any operators away. We will
          update the diffss and such if we are damn sure that this is
          going to give us wins.

Sun Nov  9 18:09:07 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Makefile.RTCosScheduling:

          Updated dependencies.

Sun Nov  9 17:57:40 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_tmplinst/tmplinst_cs.cpp:
        * TAO_IDL/be_include/be_codegen.h:
        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/driver/drv_args.cpp:

          Added a new IDL compiler option (intended for use on TAO
          .pidl files only) and associated mechanism to generate
          Any operators into a separate set of .h and .cpp files.
          This option will result in footprint reduction in most,
          if not all, application programs that link to TAO.

Sun Nov  9 17:57:57 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Synch_Refcountable.h:
        * tao/tao.mpc:
        * tao/BiDir_GIOP/BiDir_GIOP.mpc:
        * tao/Domain/Domain.mpc:
        * tao/DynamicAny/DynamicAny.mpc:
        * tao/DynamicInterface/DynamicInterface.mpc:
        * tao/IFR_Client/IFR_Client.mpc:
        * tao/IORInterceptor/IORInterceptor.mpc:
        * tao/IORManipulation/IORManipulation.mpc:
        * tao/IORTable/IORTable.mpc:
        * tao/Messaging/Messaging.mpc:
        * tao/ObjRefTemplate/ObjRefTemplate.mpc:
        * tao/PortableServer/AMH_Response_Handler.h:
        * tao/PortableServer/POA.h:
        * tao/PortableServer/PortableServer.mpc:
        * tao/RTCORBA/RTCORBA.mpc:
        * tao/RTPortableServer/RTPortableServer.mpc:
        * tao/RTScheduling/RTScheduler.mpc:
        * tao/SmartProxies/SmartProxies.mpc:
        * tao/Strategies/DIOP_Profile.h:
        * tao/Strategies/DIOP_Transport.h:
        * tao/Strategies/SCIOP_Transport.h:
        * tao/Strategies/SHMIOP_Profile.h:
        * tao/Strategies/Strategies.mpc:
        * tao/Strategies/UIOP_Profile.h:
        * tao/Strategies/UIOP_Transport.h:
        * tao/TypeCodeFactory/TypeCodeFactory.mpc:
        * tao/Valuetype/ValueBase.h:
        * tao/Valuetype/ValueFactory.cpp:
        * tao/Valuetype/ValueFactory.h:
        * tao/Valuetype/Valuetype.mpc:
        * tests/Bug_1361_Regression/Server_Thread_Pool.h:
        * tests/OBV/Supports/Supports_Test_impl.cpp:
        * tests/OBV/Supports/Supports_Test_impl.h:

          Fixed fuzz errors.

Sun Nov  9 22:12:29 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tao/Makefile.dirs:
          Moved IORInterceptor below ObjRefTemplate since
          libTAO_IORInterceptor now depends on libTAO_ObjRefTemplate.

Sun Nov  9 16:32:28 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * examples/Kokyu_dsrt_schedulers/Makefile:
          Added subdirectory targets since the DIRS variable doesn't work
          when the targets are explicitely redefined.

        * examples/Kokyu_dsrt_schedulers/Makefile.Kokyu_DSRT_Schedulers:
        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.fp_client:
        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.fp_server:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.mif_client:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.mif_server:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.muf_client:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.muf_server:
        * orbsvcs/orbsvcs/Makefile.RTCosScheduling:
        * orbsvcs/orbsvcs/Makefile.RT_Notification:
        * orbsvcs/tests/Bug_1395_Regression/Makefile.Bug_1395_Client:
        * orbsvcs/tests/Bug_1395_Regression/Makefile.Bug_1395_Server:
        * orbsvcs/tests/Notify/Destroy/Makefile:
        * orbsvcs/tests/Notify/Driver/Makefile:
        * orbsvcs/tests/Notify/RT_lib/Makefile:
        * orbsvcs/tests/Notify/Test_Filter/Makefile:
        * tests/UNKNOWN_Exception/Makefile.UNKNOWN_Exception_Client:
        * tests/UNKNOWN_Exception/Makefile.UNKNOWN_Exception_Server:
          Removed DEPENDENCY_FILE variable and updated dependencies.

        * orbsvcs/orbsvcs/Makefile.*
        * orbsvcs/tests/Notify/*:
          Udpated dependencies.

        * orbsvcs/tests/Notify/Test_Filter/RT_Test_FilterFactory.cpp:
          Added #include OS_NS_string.h.

Sun Nov  9 11:19:23 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/IORInterceptor/IORInterceptor.mpc:
        * tao/IORInterceptor/Makefile:
        * tao/IORInterceptor/Makefile.bor:

          IORInterceptor needs Valuetype and ORT libraries to build fine.

Sun Nov  9 14:39:33 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/Makefile.bor:
          Added Messaging library

Sun Nov  9 08:35:11 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/DynamicInterface/DynamicInterface.mpc:

          Fixed the MPC file to use the messaging library. Thanks to
          Johnny for reminding me.

Sun Nov  9 08:18:52 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:

          Fixed a unused variable warning in _is_a () for abstract
          interfaces.

Sun Nov  9 08:06:10 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/InterfaceRepo/Application_Test/Makefile:

          Updated dependencies.

Sun Nov  9 08:03:48 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/MProfile/client.cpp:

          Fixed a unused variable warning.

Sun Nov  9 07:53:04 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Messaging/Messaging_No_ImplC.h:
        * tao/Messaging/Messaging_RT_PolicyC.h:
        * tao/Messaging/Messaging_SyncScope_PolicyC.h:
        * tao/Messaging/TAO_ExtC.h:

          Fixed post.h inclusions in the above files. Looks like they got
          missed during regeneration. Thanks to Johnny for poitning this
          out.

Sun Nov  9 13:41:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IORInterceptor/Makefile.bor:
          Added valuetype lib to lin with

Sat Nov  8 23:58:14 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/File_IO/client.cpp
        * tests/IDL_Test/main.cpp
        * tests/MProfile/client.cpp:
        * tests/MT_BiDir/Sender_i.cpp:
        * tests/Multiple_Inheritance/client.cpp
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/Server_Task.cpp:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/test_i.cpp:
        * tests/Two_Objects/server.cpp:
        * tao/corbafwd.h:
        * utils/catior/catior.cpp:
        * utils/catior/catior.mpc:

          Fixed fuzz errors.

Sun Nov  9 05:53:59 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tao/TypeCodeFactory/TypeCodeFactoryC.cpp:
        * tao/TypeCodeFactory/TypeCodeFactoryC.h:
          Fixed typo.

Sat Nov  8 23:36:46 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Collection.h:
        * orbsvcs/orbsvcs/Notify/Event_Map_Entry_T.h:

          #included "tao/ORB_Constants.h" and "ace/CORBA_macros.h"

Sat Nov  8 23:19:13 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/examples/Security/Send_File/Makefile:

          Updated dependencies.

        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEvent.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.h:

          #included tao/NVList.h

Sat Nov  8 22:31:01 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/examples/RtEC/Schedule/Makefile:

          Do not build if RTOLDEvent is not built.

Sat Nov  8 22:23:55 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * performance-tests/Latency/Deferred/Makefile:
        * orbsvcs/tests/InterfaceRepo/Application_Test/Makefile:

          Fixed the Makefiles so that these don't build when
          corba_messaging is turned off.

Sat Nov  8 22:19:30 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/TypeCodeFactory/TypeCodeFactoryC.cpp:
        * tao/TypeCodeFactory/TypeCodeFactoryC.h:
        * tao/TypeCodeFactory/TypeCodeFactoryC.inl:

          Regenerated code.

        * tao/TypeCodeFactory/diffs/TypeCodeFactoryC.cpp.diff:
        * tao/TypeCodeFactory/diffs/TypeCodeFactoryC.h.diff:
        * tao/TypeCodeFactory/diffs/TypeCodeFactoryC.inl.diff:

          Diff files that are no longer necessary.

Sun Nov  9 04:08:16 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/tests/Notify/lib/LookupManager.cpp:
          Added #include OS_NS_string.h.

Sat Nov  8 22:06:04 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/diffs/TAO.diff:

          Placed the diffs in a single file.

        * tao/diffs/TAOC.cpp.diff:
        * tao/diffs/TAOC.h.diff:
        * tao/diffs/TAOC.i.diff:

          Removed the diffs placed in the above files.

Sat Nov  8 22:00:48 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Acceptor_Impl.cpp:

          #included debug.h. This should fix compilation errorson HPUX.

        * tao/IIOP_Connection_Handler.cpp:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:

          #included os_include/netinet/os_tcp.h to get the declaration of
          TCP_NODELAY on HPUX.

        * tao/TAO.pidl:

          Improved comments in the file.

        * tao/TAOC.cpp:
        * tao/TAOC.h:
        * tao/TAOC.i:

          Regenerated the code to fix warnings in HPUX and Solaris.

Sat Nov  8 17:51:07 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * TAO/orbsvcs/tests/RTCosScheduling/Makefile.RTCosScheduling_Client:
        * TAO/orbsvcs/tests/RTCosScheduling/Makefile.RTCosScheduling_Server:
        * TAO/orbsvcs/tests/RTCosScheduling/Makefile.commonlib:

          Removed DEPENENCY_FILE variable and updated dependencies.  This
          should cause the library to get rebuilt and relinked and clear
          up the autobuild errors.  This particular lib hasn't been
          rebuilt/relinked since 1.3.4 (on SUSE82_WChar).

Sat Nov  8 05:40:27 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/tests/Notify/lib/Makefile:
          Removed DEPENDENCY_FILE variable and updated dependencies so that
          realclean will actually cleanup all the objects.  This should
          fix build errors associated with this library.

Fri Nov 7 21:12:37 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * orbsvcs/tests/AVStreams/Simple_Two_Stage/README:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/receiver.cpp:

          Replaced the recording of frame rate with the recording of
          inter-frame arrival time. This does not use the
          ACE_Countdown_Time class and hence does not use the incorrect
          restart method on that class. This should fix the compile
          errors.

Fri Nov  7 20:11:19 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/Time_Service/Server_i.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Random.cpp
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
        * orbsvcs//orbsvcs/Trader/Trading_Loader.cpp:

          #included "ace/os_include/os_netdb.h" to fix compile errors on
          Solaris 7 builds.

Fri Nov  7 19:40:06 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * performance-tests//Latency/AMI/run_test.pl:
        * performance-tests//Latency/DSI/run_test.pl:
        * performance-tests//Latency/Single_Threaded/default_configuration.pl:
        * performance-tests//Latency/Single_Threaded/run_test.pl:
        * performance-tests//Latency/Thread_Per_Connection/run_test.pl:
        * performance-tests//Latency/Thread_Pool/run_test.pl:

          More fixes for the number of iterations.

Fri Nov  7 19:25:29 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * performance-tests//Latency/AMI/run_test.pl:
        * performance-tests//Latency/DSI/run_test.pl:
        * performance-tests//Latency/Single_Threaded/default_configuration.pl:
        * performance-tests//Latency/Single_Threaded/run_test.pl:
        * performance-tests//Latency/Thread_Per_Connection/run_test.pl:
        * performance-tests//Latency/Thread_Pool/run_test.pl:

          Fixed the number of iterations so that our tests run
          longer. They run for a short time exhibiting jitters in our
          daily builds.

Fri Nov  7 18:40:46 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/Security/Big_Request/Makefile:
        * orbsvcs/tests/Security/Callback/Makefile:
        * orbsvcs/tests/Security/Crash_Test/Makefile:
        * orbsvcs/tests/Security/MT_IIOP_SSL/Makefile:
        * orbsvcs/tests/Security/MT_SSLIOP/Makefile:
        * orbsvcs/tests/Security/Secure_Invocation/Makefile:
        * orbsvcs/tests/Security/SecurityLevel1/Makefile:

          Fixed the dependencies.

Fri Nov  7 16:37:15 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Object_KeyC.cpp:
        * tao/Object_KeyC.h:

          Added another static method, demarshal_key (), which works more
          or less like extraction operator >>, but with a difference. We
          don't check for locked_data_blocks () within the resource
          factory while trying to extract the key.

          Why do we need all this? Please see bugzilla entry [BUGID 1616]
          for details. To make the long story short, under certain
          configurations (ie. when we set the locks on the buffer
          allocator to null), we tend to copy the object key. Further we
          tend to make copies over and over again when writing the GIOP
          header.

          This new method, by not checking for the locked datablocks
          circumvents the copying for single threaded builds. We have to
          wait and see how much of an improvement does this get us.

          There is some code duplication between this method and the new
          static method. This is okay. The extraction operators are
          generated by the IDL compiler. Trying to share code would make
          the maintenance of this generated code a nightmare.

        * tao/Profile.cpp:

          Use the new method added instead of the extraction operator.

Fri Nov  7 21:44:59 UTC 2003  Edward R. Mulholland  <emulholl@atl.lmco.com>

        * tao/Strategies/SCIOP_Connector.h:
        * tao/Strategies/SCIOP_Connector.cpp:

          If an SCIOP_Connector fails to bind to an endpoint, it will try
          a different endpoint in the same profile before it tries a
          different profile.

        * tao/Strategies/SCIOP_Endpoint.h:
        * TAO/tao/Strategies/SCIOP_Factory.cpp:
        * TAO/tao/Strategies/SCIOP_Lite_Factory.cpp:

          Minor changes to accommodate recent refactorings elsewhere in
          TAO.

Fri Nov 7 14:33:37 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * orbsvcs/tests/AVStreams/Simple_Two_Stage/README:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/receiver.cpp:

          Recorded the rate at which frames are received for every sec
          after the first frame is received in the Stats.dat file.

Fri Nov  7 11:23:22 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Any_Unknown_IDL_Type.cpp:

          The constructor tried to duplicate the message block
          irresepctive of where it came from. To make the long story
          short, it is quite possible that the message block that this
          class gets could be from the stack and blind duplicate () would
          lead to crashes. If you don't believe me, please see the failure
          of the DII test in the daily builds.

          This started showing up after the optimizations to the critical
          path outlined in

          "Thu Nov  6 22:32:19 2003  Balachandran Natarajan
          <bala@dre.vanderbilt.edu>"

        * tao/Synch_Reply_Dispatcher.cpp:

          Removed a debug statement which was a waste.

        * tao/DynamicInterface/DII_Invocation.cpp:

          Cosmetic changes.

        * ChangeLog:

          Removed a long listing of Makefile whose dependencies were
          updated. They have served no purpose AFAIK other than blowing up
          the size of ChangeLogs. Just a regexp indicating that the
          Makefile's dependencies were updated should be sufficient.

Fri Nov  7 07:06:59 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Makefile*:
        * tests/Exposed_Policies/Makefile:
        * orbsvcs/tests/Notify/Makefile*:

          Updated dependencies since the last dependencies left them
          broken.

Fri Nov  7 06:50:49 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * */Makefile*:

          Updated dependencies.

Thu Nov  6 22:32:19 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        This checkin is about an optimization and definitely not for the
        weak hearted :-)! All this jugglery is for getting rid of one
        allocation along the critical path. Not sure how much would this
        fetch us, but nevertheless an useful optimization.

        A quick brief. In older versions of TAO, the client thread used to
        create a output CDR on the TSS and use that for marshalling data
        and sending data which was neat. But during the reply, we used to
        create an InputCDR on the global memory since the thread reading
        the reply message could be different from the thread to whom the
        reply belongs to. If you want to know why, look for documentation
        of TAO's LF. After we worked on BUG 1369, we got a few advantages
        and this  optimization cashed in on that.

        Refactoring the generated code allowed us to move the CDR stream
        inside the transport, to be more specific inside the GIOP
        objects. This was also right, since the CDR's are tied to
        GIOP. But this gave rise to a problem. We could not use the TSS
        anymore since multiple threads could share the same transport (one
        after another). Hence we used the global memory pool (different
        from the global heap) to allocate the CDR and this is a one time
        activity cached inside the transport. All threads can infact use
        the same chunk of memory. That was done when we merged the branch
        for fixes from 1369. Since the transports are anyway on a per-lane
        basis RTCORBA wouldn't be affected at all.

        This checkin broke another barrier, ie. the allocation required
        while getting the replies. The thread collecting the reply can
        read the messages on its stack and copy the messages to the stack
        of another thread which is expecting a reply. Therefore we now
        require no allocations but for a copy.

        All the above are valid for messages of decent size. If the
        messages are big we have to hit the global memory. What are the
        end results?

        - TAO now does not do any allocation along the outgoing request
          path.

        - It doesn't do any allocation along the reply collection path
          even in MT scenarios for decent sized messages and when the
          network is behaving well (ie. when there is no IP
          fragmentation).

        We were also helped by an optimization that was added in ACE
        yesterday to the CDR streams. We have to wait and see how much
        does this checkin buys us in terms of performance. Anyway, this
        documentation should be useful for others.

        * tao/GIOP_Message_Lite.cpp:
        * tao/GIOP_Message_Base.cpp (process_reply_message):

          Construct the CDR stream and use that CDR to dispatch the
          reply. Now the reply dispatch is done by the GIOP objects.

        * tao/GIOP_Message_Generator_Parser.cpp:
        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/GIOP_Message_Generator_Parser_12.cpp:

          No need to do any exchange CDR blocks since things are being
          taken care elsewhere.

        * tao/Pluggable_Messaging_Utils.cpp:
        * tao/Pluggable_Messaging_Utils.h:

          Added a transport pointer to the Reply_Params object. It is
          used by the GIOP layer to dispatch the reply. Removed the
          temporary CDR that was created here.

        * tao/Synch_Reply_Dispatcher.cpp:
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:

          Added a check for null CDR's in the Reply_Param's object.

        * tao/Transport.cpp: Construct the Reply_Params using the
          transport instead of the ORB_Core.


          This fixes [BUG 1615]

Fri Nov  7 02:08:17 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/ImplRepo_Service/Server_Repository.cpp:
          Changed use of cerr to ACE_ERROR_RETURN.

        * performance_tests/Cubit/TAO/MT_Cubit/Timer.h:
          Removed #include of OS.h.

Thu Nov  6 17:58:21 2003  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Basic.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/client.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/run_test.pl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/server.cpp:

          Changed the application controlled membership test.
          The test uses the Random load balancing strategy built in TAO
          load balancer service.

          Servers or members are added onto object groups. After
          request invocations are made, application has to delete
          those members from the object group. This is application
          controlled membership.

Thu Nov  6 14:13:46 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:

          Fixed some ACE_CHECK_RETURN's that were trying to return -1 from
          functions that were suppoed to return pointers.

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.cpp:

          #included "ace/OS_NS_string.h"

Thu Nov 6 14:54:42 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * orbsvcs/tests/AVStreams/Simple_Two_Stage/README:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/sender.h:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/sender.cpp:

          Added command line arguments to specify local and peer
          addresses. In case of SCTP_SEQ protocol added command line
          arguments to specify secondary addresses.

        * orbsvcs/tests/AVStreams/Simple_Two_Stage/README:

          Updated to include info about command line arguments to specify
          local and peer addresses.

Thu Nov  6 13:17:34 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Synch_Invocation.cpp:

          If the ORB prepares to throw a COMM_FAILURE exception with
          completed_maybe, just delegate to the ORB_Core to take the right
          decision. This is required to for FT_CORBA.

Thu Nov  6 12:53:46 2003  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/examples/LoadBalancing/server.cpp:
          Added a include to OS.h to fix a compile error.

Thu Nov  6 07:04:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Queued_Message.h:
          Added #include ace/os_include/os_stddef.h to get size_t

Wed Nov  5 19:19:08 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/PollableC.cpp:
        * tao/PollableC.h:
        * tao/PollableC.i:

          Regenerated the code.

        * tao/Synch_Reply_Dispatcher.cpp:
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:

          Added debugging statements to indicate failure of clone_from ()
          when debugging level is cranked up.

        * tao/Remote_Invocation.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp (handle_timeout):

          Changed the completion status of the CORBA::TIMEOUT exception
          thrown. For example returning a completion status of
          COMPLETED_NO while timing out waiting for the reply seems brain
          dead. Further fixed the minor code to return the SEND_MINOR_CODE
          or RECV_MINOR_CODE as the case maybe.

          This fixes a problem reported by Torsten Kuepper
          <torsten.kuepper@nokia.com> [BUG 1600].

Wed Nov 5 16:03:08 2003  Yamuna Krishnamurthy  <yamuna@oomworks.com>

        * orbsvcs/orbsvcs/AV/SCTP_SEQ.h:
        * orbsvcs/orbsvcs/AV/SCTP_SEQ.cpp:

          Added the change_qos (...) method to
          TAO_AV_SCTP_SEQ_Flow_Handler in order to set the specified
          Diffserv Codepoint on the data packets sent.

Wed Nov  5 09:56:26 2003  Chris Cleeland  <cleeland_c@ociweb.com>

        * tao/ORB_Core.cpp (run): Removed 'int' declaration to prevent
          obscuring the 'result' variable.  The reason this is important
          is because, by obscuring the 'result' variable, the true return
          value of Reactor::handle_events() never got returned, and the
          caller (typically ORB_Core::run) couldn't tell why handle_events
          exited even though it wants to.

        * tao/ORB_Core.cpp (init): Added new option, -ORBVerboseLogging,
          to turn on the VERBOSE or VERBOSE_LITE flag in ACE_Log_Msg.
          Range of values are 0, 1, or 2 for no verbose, VERBOSE_LITE, and
          VERBOSE, respectively.

Wed Nov  5 09:21:38 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_union.cpp:

          Set the aggregate_seen_ bit inaddition to the union_seen_ bit.

Wed Nov  5 05:33:44 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * TAO/performance-tests/Cubit/TAO/MT_Cubit/server.h:
          Removed #include of OS.h which seems to cause a problem if
          included before streams.h.  Not sure why.

        * TAO/tests/RTScheduling/VoidData/testC.cpp:
          Added #include of OS_NS_string.h.

Tue Nov  4 22:14:18 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:

          Added a new bit union_seen_ to keep track of unions.

        * TAO_IDL/be/be_codegen.cpp:

          Generate OS_NS_string.h even when you see a union.

        * TAO_IDL/be/be_union.cpp:

          Set the union_seen_ bit within the visitor's constructor.

Wed Nov  5 04:08:36 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * examples/Event_Comm/Event_Comm_i.h:
        * examples/Logging/Logging_Test_i.cpp:
        * examples/OBV/Typed_Events/Client_i.cpp:
        * examples/OBV/Typed_Events/Event_Types_impl.cpp:
        * examples/POA/DSI/Database_i.cpp:
        * examples/RTCORBA/Activity/Activity.cpp:
        * examples/RTScheduling/Job_i.cpp:
        * examples/RTScheduling/Starter.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:
        * orbsvscs/PSS/PSDL_Scope.cpp:
        * orbsvcs/TAO_Service/TAO_Service.cpp:
        * orbsvcs/Trading_Service/Trading_Service.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LeastLoaded.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ObjectReferenceFactory.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_RoundRobin.h:
        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Clerk.cpp:
        * orbsvcs/orbsvcs/Time/Timer_Helper.cpp:
        * orbsvcs/tests/Concurrency/lex.CC_command.cpp:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Factory.h:
        * tests/Blocking_Sync_None/client.cpp:
        * tests/Oneway_Buffering/client.cpp:
        * tests/Reliable_Oneways/client.cpp:
          Added #includes needed due to subsetting in ACE.

Tue Nov  4 21:08:53 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_argument.cpp:

          Removed the check for !dcl->imported () in the constructor
          before setting the bits. This was required to get the right
          Valuetype includes within the generated code. The inclusion is
          necessary for eventtype {} declarations to work.

        * TAO_IDL/be/be_home.cpp:

          Within the constructor narrow the AST_Component to a
          be_component and call seen_in_operation (), and ACE_SET_BITS for
          further processing. This is required to generate the
          Object_Argument_T.h includes in the stub cpp file.

        * TAO_IDL/be/be_visitor_arg_traits.cpp:
        * TAO_IDL/be_include/be_visitor_arg_traits.h:

          Added two new methods visit_component () and visit_component_fwd
          () that delegates to the visit_interface () and
          visit_interface_fwd () call.

        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_component/component_cs.cpp:

          Bunch of changes to these files. The changes include

          - Generating and initializing the right collocated factory
            function pointer
          - Generating the right implementation for the setup_collocation
            () call
          - Generating the right implementation for the _narrow () call.
          - Removal of the old _unchecked_narrow () generation.
          - Removal of the tao_QueryInterface () call

          With the above changes CIAO examples seem to compile fine.

Tue Nov 04 19:36:46 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * COPYING: Modified to include CIAO in the Copyright disclaimer.
          Thanks to Roland Schimmack <SC@ProCom.de> for motivating the change.

Wed Nov  5 01:00:31 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * tao/Leader_Follower.cpp:
        * tao/Transport.cpp:
        * tao/PortableServer/POA.cpp:
          Added #include of OS_NS_sys_time.h.

Tue Nov  4 17:02:39 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:

          Corrected system exception minor codes.  In particular, they
          have to be logically ORed with the standard CORBA::OMGVMCID
          constant.

Wed Nov  5 00:28:47 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Loader.cpp:
        * orbsvcs/tests/Bug_1393_Regression/client.cpp:
        * orbsvcs/tests/Bug_1395_Regression/server.cpp:
        * orbsvcs/tests/Concurrency/CC_naming_service.cpp:
        * tests/ICMG_Any_Bug/server.cpp:
        * tests/Portable_Interceptors/Bug_1559/interceptors.cpp:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/Collocated_ORBInitializer.cpp:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/interceptors.cpp:
          Added #includes needed due to subsetting.

Tue Nov  4 15:57:09 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/IIOP_Transport.cpp (get_listen_point):

          Verify that dynamically casted TAO_IIOP_Acceptor pointer is
          non-zero before use.  Addresses potential run-time errors.

          Improved const-correctness.

        * tao/Object_Proxy_Impl.h:

          Include "tao/orbconf.h" to pull in TAO_HAS_MINIMUM_CORBA macro
          definition.  Fixes a g++ warning exhibited when "-Wundef"
          compiler flag is set.

        * tao/Typecode_Constants.cpp:

          Check if TAO_HAS_AMI_POLLER is defined before checking its
          value.  Fixes a g++ warning exhibited when "-Wundef" compiler
          flag is set.

        * tao/NVList.i:

          Nuked trailing whitespace.

Tue Nov  4 16:23:35 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/corbafwd.h:

          #included the files where the contents of this file have been
          moved. This is necessary for backward compatibility. Lots of
          application code might still be using this.

        * tao/corbafwd.cpp (ACE_RCSID):

          Emptied the contents since they are no longer needed. They are
          just around for backward compatibility.

Tue Nov  4 16:22:02 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current_Impl.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Factory.cpp:

          Added missing includes to get them compiling.

Tue Nov  4 20:40:26 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * TAO_IDL/include/ast_union_label.h:
        * TAO_IDL/include/utl_idlist.h:
        * TAO_IDL/include/utl_string.h:
        * TAO_IDL/include/utl_strlist.h:
          Changed #include from streams.h to iosfwd.h.  This fixes the
          current compilation problems on SuSE inlined builds complaining
          about 'ceil' and 'floor' already declared in this scope.

Tue Nov  4 18:26:36 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.i:
          Added #include OS_NS_strings.h.

Tue Nov  4 16:48:54 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
          Added #include os_tcp.h needed when ssl=1.

Tue Nov  4 08:18:37 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * docs/tutorials/Quoter/RT_Event_Service/client.cpp:
        * examples/Callback_Quoter/Supplier_i.cpp:
        * examples/Content_Server/SMI_Iterator/Iterator_Factory_i.cpp:
        * examples/Kokyu_dsrt_schedulers/FP_SchedulingC.cpp:
        * examples/Kokyu_dsrt_schedulers/MIF_SchedulingC.cpp:
        * examples/Kokyu_dsrt_schedulers/MUF_SchedulingC.cpp:
        * examples/Kokyu_dsrt_schedulers/utils.cpp:
        * examples/Load_Balancing/Identity_Client.cpp:
        * examples/POA/Adapter_Activator/server.cpp:
        * examples/POA/DSI/client.cpp:
        * examples/POA/Generic_Servant/test_i.cpp:
        * examples/POA/Loader/Servant_Activator.cpp:
        * examples/POA/Loader/Servant_Locator.cpp:
        * examples/POA/On_Demand_Activation/Servant_Activator.cpp:
        * examples/POA/On_Demand_Activation/Servant_Locator.cpp:
        * examples/POA/Reference_Counted_Servant/server.cpp:
        * examples/POA/TIE/client.cpp:
        * examples/Persistent_Grid/Simple_util.cpp:
        * examples/RTScheduling/FP_SchedulingC.cpp:
        * examples/RTScheduling/MIF_SchedulingC.cpp:
        * examples/Simple/Simple_util.cpp:
        * examples/Simulator/Event_Supplier/Event_Sup.cpp:
        * examples/Simulator/Event_Supplier/Logging_Sup.cpp:
        * orbsvcs/LifeCycle_Service/Criteria_Evaluator.cpp:
        * orbsvcs/Time_Service/Clerk_i.cpp:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/CosEvent_Utilities.cpp:
        * orbsvcs/orbsvcs/Event_Utilities.cpp:
        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.cpp:
        * orbsvcs/orbsvcs/Notify/EventType.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Operators.cpp:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.cpp:
        * orbsvcs/orbsvcs/Trader/Trader.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.cpp:
        * orbsvcs/tests/Concurrency/CC_client.cpp:
        * orbsvcs/tests/ImplRepo/nestea_i.cpp:
        * orbsvcs/tests/InterfaceRepo/Persistence_Test/Ptest.cpp:
        * orbsvcs/tests/Notify/Ordering/common.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/common.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/common.cpp:
        * orbsvcs/tests/RTCosScheduling/Object1_i.cpp:
        * orbsvcs/tests/Time/Client_i.cpp:
        * orbsvcs/tests/Trading/TT_Info.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Client.cpp:
        * performance-tests/POA/Demux/demux_test_client.cpp:
        * performance-tests/POA/Demux/demux_test_server.cpp:
        * performance-tests/Pluggable/PP_Test_Client.cpp:
        * tests/DynAny_Test/driver.cpp:
        * tests/Exposed_Policies/Policy_Verifier.cpp:
        * tests/Exposed_Policies/RT_Properties.cpp:
        * tests/Multiple/Collocation_Tester.cpp:
        * tests/Param_Test/anyop.cpp:
        * tests/Portable_Interceptors/AMI/Client_Interceptor.cpp:
        * tests/Portable_Interceptors/AMI/Server_Interceptor.cpp:
        * tests/Portable_Interceptors/Benchmark/interceptors.cpp:
        * tests/Portable_Interceptors/Benchmark/test_i.cpp:
        * tests/Portable_Interceptors/Dynamic/interceptors.cpp:
        * tests/Portable_Interceptors/ForwardRequest/Client_ORBInitializer.cpp:
        * tests/Portable_Interceptors/PICurrent/ClientRequestInterceptor.cpp:
        * tests/Portable_Interceptors/PICurrent/ClientRequestInterceptor2.cpp:
        * tests/Portable_Interceptors/PICurrent/ServerRequestInterceptor.cpp:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Client_Request_Interceptor.cpp:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Server_Request_Interceptor.cpp:
        * tests/Portable_Interceptors/Service_Context_Manipulation/interceptors.cpp:
        * tests/RTScheduling/DT_Spawn/Thread_Action.h:
        * tests/Smart_Proxies/client.cpp:
        * tests/Smart_Proxies/server.cpp:
        * tests/Smart_Proxies/On_Demand/client.cpp:
        * tests/Smart_Proxies/On_Demand/server.cpp:
        * utils/nslist/nsadd.cpp:
        * utils/nslist/nsdel.cpp:
          Added #include of OS_NS_string.h.

Mon Nov  3 23:23:04 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_module.cpp:
        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/y.tab.cpp:

          Fixed bug in redefinition of forward declared union. Thanks to
          Tommy Persson <tpe@ida.liu.se> for reporting the problem. This
          closes [BUGID:1625].

Tue Nov  4 04:55:40 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * TAO_IDL/ast/ast_array.cpp:
        * TAO_IDL/ast/ast_decl.cpp:
        * TAO_IDL/ast/ast_generator.cpp:
        * TAO_IDL/ast/ast_root.cpp:
        * TAO_IDL/ast/ast_sequence.cpp:
        * TAO_IDL/ast/ast_string.cpp:
        * TAO_IDL/ast/ast_type.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_helper.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_predefined_type.cpp:
        * TAO_IDL/be/be_sunsoft.cpp:
        * TAO_IDL/be/be_visitor_valuetype/arglist.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype.cpp:
        * TAO_IDL/be_include/be_codegen.h:
        * TAO_IDL/be_include/be_helper.h:
        * TAO_IDL/be_include/be_stream_factory.h:
        * TAO_IDL/be_include/be_visitor_factory.h:
        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/fe/fe_lookup.cpp:
        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/include/ast_attribute.h:
        * TAO_IDL/include/ast_union_label.h:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/include/utl_identifier.h:
        * TAO_IDL/include/utl_idlist.h:
        * TAO_IDL/include/utl_indenter.h:
        * TAO_IDL/include/utl_string.h:
        * TAO_IDL/include/utl_strlist.h:
        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/util/utl_idlist.cpp:
        * TAO_IDL/util/utl_indenter.cpp:
        * TAO_IDL/util/utl_list.cpp:
        * TAO_IDL/util/utl_scope.cpp:
        * TAO_IDL/util/utl_strlist.cpp:
        * examples/Callback_Quoter/Consumer_Input_Handler.cpp:
        * examples/Callback_Quoter/Supplier_i.cpp:
        * examples/Content_Server/AMI_Iterator/Iterator_Factory_i.cpp:
        * examples/Content_Server/AMI_Iterator/Iterator_Handler.cpp:
        * examples/Content_Server/AMI_Observer/Callback_i.cpp:
        * examples/Content_Server/AMI_Observer/Push_Iterator_Factory_i.cpp:
        * examples/Content_Server/SMI_Iterator/Iterator_Factory_i.cpp:
        * examples/Content_Server/SMI_Iterator/client.cpp:
        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/Task_Stats.h:
        * examples/Load_Balancing/Load_Balancer_i.h:
        * examples/Load_Balancing/Load_Balancing_Service.cpp:
        * examples/Load_Balancing_persistent/Load_Balancing_Service.cpp:
        * examples/Logging/Logging_Test_i.cpp:
        * examples/Persistent_Grid/Simple_util.cpp:
        * examples/PluggableUDP/tests/Basic/UDP_i.h:
        * examples/RTCORBA/Activity/Activity.cpp:
        * examples/RTCORBA/Activity/Task_Stats.h:
        * examples/RTScheduling/Task_Stats.h:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Task.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler/test.cpp:
        * examples/RTScheduling/MIF_Scheduler/MIF_Task.cpp:
        * examples/Simulator/Event_Supplier/DualEC_Sup.cpp:
        * examples/Simulator/Event_Supplier/Event_Sup.cpp:
        * examples/Simulator/Event_Supplier/Logging_Sup.cpp:
        * orbsvcs/Event_Service/Event_Service.cpp:
        * orbsvcs/IFR_Service/drv_args_ifr.cpp:
        * orbsvcs/IFR_Service/drv_preproc_ifr.cpp:
        * orbsvcs/ImplRepo_Service/Options.cpp:
        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:
        * orbsvcs/LoadBalancer/LoadManager.cpp:
        * orbsvcs/LoadBalancer/LoadMonitor.cpp:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.cpp:
        * orbsvcs/Scheduling_Service/Scheduling_Service.cpp:
        * orbsvcs/Time_Service/Server_i.cpp:
        * orbsvcs/examples/Log/RTEvent/RTEvent_Supplier.cpp:
        * orbsvcs/examples/RtEC/Kokyu/Service.cpp:
        * orbsvcs/examples/RtEC/Simple/Supplier.cpp:
        * orbsvcs/orbsvcs/Event_Utilities.cpp:
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.cpp:
        * orbsvcs/orbsvcs/AV/RTCP.cpp:
        * orbsvcs/orbsvcs/AV/RTCP_Packet.h:
        * orbsvcs/orbsvcs/AV/RTP.cpp:
        * orbsvcs/orbsvcs/AV/TCP.cpp:
        * orbsvcs/orbsvcs/AV/UDP.cpp:
        * orbsvcs/orbsvcs/AV/default_resource.cpp:
        * orbsvcs/orbsvcs/AV/media_timer.cpp:
        * orbsvcs/orbsvcs/AV/media_timer.h:
        * orbsvcs/orbsvcs/AV/sfp.cpp:
        * orbsvcs/orbsvcs/Concurrency/CC_Lock.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/ETCL/ETCL_Interpreter.cpp:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.i:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.inl:
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Event/EC_Sched_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Sched_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Component.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ObjectReferenceFactory.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.h:
        * orbsvcs/orbsvcs/Naming/Transient_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Notify/AdminProperties.h:
        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.cpp:
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.h:
        * orbsvcs/orbsvcs/Notify/POA_Helper.cpp:
        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.cpp:
        * orbsvcs/orbsvcs/Notify/Timer_Queue.h:
        * orbsvcs/orbsvcs/Notify/Sequence/Batch_Buffering_Strategy.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Factory.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.cpp:
        * orbsvcs/orbsvcs/Sched/DynSched.cpp:
        * orbsvcs/orbsvcs/Sched/DynSched.h:
        * orbsvcs/orbsvcs/Sched/SchedEntry.cpp:
        * orbsvcs/orbsvcs/Sched/Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Scheduler_Generic.cpp:
        * orbsvcs/orbsvcs/Sched/Scheduler_Generic.h:
        * orbsvcs/orbsvcs/Time/Timer_Helper.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_y.cpp:
        * orbsvcs/orbsvcs/Trader/Interpreter.cpp:
        * orbsvcs/orbsvcs/Trader/Interpreter_Utils.cpp:
        * orbsvcs/orbsvcs/Trader/Trader.cpp:
        * orbsvcs/tests/AVStreams/Latency/ping.h:
        * orbsvcs/tests/Concurrency/CC_client.cpp:
        * orbsvcs/tests/Concurrency/CC_command.cpp:
        * orbsvcs/tests/CosEvent/Basic/Random.cpp:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer_Driver.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier_Driver.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Throughput.cpp:
        * orbsvcs/tests/Event/Basic/Random.cpp:
        * orbsvcs/tests/Event/Performance/Connect.cpp:
        * orbsvcs/tests/Event/lib/Counting_Supplier.cpp:
        * orbsvcs/tests/Event/lib/Supplier.cpp:
        * orbsvcs/tests/Notify/Blocking/common.cpp:
        * orbsvcs/tests/Notify/Discarding/common.cpp:
        * orbsvcs/tests/Notify/Ordering/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/common.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/common.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/common.cpp:
        * orbsvcs/tests/Notify/Structured_Filter/Notify_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Notify_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/lib/Task_Stats.h:
        * orbsvcs/tests/Notify/performance-tests/Filter/common.cpp:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/RedGreen_Test.cpp:
        * orbsvcs/tests/RTCosScheduling/Object1_i.cpp:
        * orbsvcs/tests/RTCosScheduling/client.cpp:
        * orbsvcs/tests/Time/Client_i.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Client.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/collocation_test.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/Cubit_Task.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/Globals.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/Globals.h:
        * performance-tests/Cubit/TAO/MT_Cubit/Task_Client.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/Util_Thread.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/client.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/server.cpp:
        * performance-tests/Memory/IORsize/Memory_Growth.cpp:
        * tao/Acceptor_Registry.cpp:
        * tao/Adapter.cpp:
        * tao/Any.cpp:
        * tao/Any_Basic_Impl.cpp:
        * tao/Any_Dual_Impl_T.cpp:
        * tao/Any_Impl_T.cpp:
        * tao/Asynch_Queued_Message.cpp:
        * tao/BoundsC.cpp:
        * tao/CDR_Encaps_Codec.cpp:
        * tao/CORBALOC_Parser.cpp:
        * tao/CORBA_String.cpp:
        * tao/CurrentC.cpp:
        * tao/Exception.cpp:
        * tao/GIOPC.cpp:
        * tao/IIOP_Connector.cpp:
        * tao/IIOP_Endpoint.cpp:
        * tao/IIOP_Factory.cpp:
        * tao/IIOP_Lite_Factory.cpp:
        * tao/IOP_CodecC.cpp:
        * tao/Interceptor_List.cpp:
        * tao/MCAST_Parser.cpp:
        * tao/ORB.cpp:
        * tao/ORBInitInfo.cpp:
        * tao/ORB_Core.cpp:
        * tao/Object_Ref_Table.cpp:
        * tao/PolicyC.cpp:
        * tao/PollableC.cpp:
        * tao/PortableInterceptorC.cpp:
        * tao/Sequence.cpp:
        * tao/Service_Context.cpp:
        * tao/TAOC.cpp:
        * tao/TAO_Singleton_Manager.h:
        * tao/Tagged_Components.cpp:
        * tao/Typecode.cpp:
        * tao/WrongTransactionC.cpp:
        * tao/default_resource.cpp:
        * tao/operation_details.cpp:
        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynCommon.cpp:
        * tao/DynamicInterface/Unknown_User_Exception.cpp:
        * tao/IFR_Client/IFR_BaseC.cpp:
        * tao/IFR_Client/IFR_BasicC.cpp:
        * tao/IFR_Client/IFR_ComponentsC.h:
        * tao/IFR_Client/IFR_ExtendedC.cpp:
        * tao/IORTable/IORTableC.cpp:
        * tao/PortableServer/ImR_LocatorC.cpp:
        * tao/PortableServer/ImplRepoC.cpp:
        * tao/PortableServer/Key_Adapters.cpp:
        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/ServerRequestInfo.cpp:
        * tao/RTCORBA/Continuous_Priority_Mapping.h:
        * tao/RTCORBA/RTCORBAC.cpp:
        * tao/RTCORBA/RT_ORB_Loader.cpp:
        * tao/RTPortableServer/RTPortableServerC.cpp:
        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/RTSchedulerC.cpp::
        * tao/RTScheduling/Request_Interceptor.cpp:
        * tao/Strategies/DIOP_Connector.cpp:
        * tao/Strategies/DIOP_Factory.cpp:
        * tao/Strategies/SHMIOP_Connector.cpp:
        * tao/Strategies/SHMIOP_Factory.cpp:
        * tao/Strategies/UIOP_Connector.cpp:
        * tao/Strategies/UIOP_Factory.cpp:
        * tao/Strategies/UIOP_Lite_Factory.cpp:
        * tao/Strategies/advanced_resource.cpp:
        * tao/Valuetype/AbstractBase.h:
        * tests/Bug_1269_Regression/Server_Timer.cpp:
        * tests/Bug_1270_Regression/Server_Timer.cpp:
        * tests/Bug_1361_Regression/Echo.cpp:
        * tests/CDR/octet_sequence.cpp:
        * tests/CodeSets/libs/IBM1047_ISO8859/Char_IBM1047_ISO8859_Translator.cpp:
        * tests/CodeSets/simple/client.cpp:
        * tests/Codec/client.cpp:
        * tests/Exposed_Policies/Policy_Verifier.cpp:
        * tests/Exposed_Policies/RT_Properties.cpp:
        * tests/IDL_Test/main.cpp:
        * tests/InterOp-Naming/INS_test_client.cpp:
        * tests/MProfile_Forwarding/Servant_Locator.cpp:
        * tests/Multiple_Inheritance/client.cpp:
        * tests/Multiple_Inheritance/server.cpp:
        * tests/Nested_Event_Loop/test_i.cpp:
        * tests/Nested_Upcall_Crash/server.cpp:
        * tests/OctetSeq/OctetSeq.cpp:
        * tests/POA/Etherealization/Etherealization.cpp:
        * tests/POA/MT_Servant_Locator/MT_Servant_Locator.cpp:
        * tests/POA/Nested_Non_Servant_Upcalls/Nested_Non_Servant_Upcalls.cpp:
        * tests/POA/Persistent_ID/client.cpp:
        * tests/Param_Test/bd_wstr_seq.cpp:
        * tests/Param_Test/bd_wstring.cpp:
        * tests/Param_Test/param_test_i.cpp:
        * tests/Param_Test/ub_wstr_seq.cpp:
        * tests/Param_Test/ub_wstring.cpp:
        * tests/Portable_Interceptors/AMI/Server_Interceptor.cpp:
        * tests/Portable_Interceptors/Benchmark/client.cpp:
        * tests/Portable_Interceptors/ForwardRequest/Client_ORBInitializer.cpp:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Client_Request_Interceptor.cpp:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Server_Request_Interceptor.cpp:
        * tests/Portable_Interceptors/Service_Context_Manipulation/interceptors.cpp:
        * tests/Two_Objects/First_i.h:
        * utils/IOR-parser/ior-handler.cpp:
        * utils/nslist/nsadd.cpp:
        * utils/nslist/nsdel.cpp:
          Refactored includes and changed remaining instances of
          ACE_OS_String to ACE_OS, and added ACE_OS to many instances of
          string functions.

Mon Nov  3 22:46:31 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:

          Added check for IDL exception to condition for generating
          #include of ace/OS_NS_String.h - the _downcast() method uses
          strcmp().

        * TAO_IDL/be/be_interface.cpp:

          Removed extra empty line in code generation for the interface
          constructor from Stub.

        * TAO_IDL/be/be_visitor_traits.cpp:
        * TAO_IDL/be_include/be_visitor_traits.h:

          Added visit_component() and visit_component_fwd().

        * TAO_IDL/be/be_visitor_array/array_ci.cpp:
        * TAO_IDL/be/be_visitor_component/component_cs.cpp:

          Added ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION macro to traits
          specialization definitions.

Mon Nov  3 21:36:05 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/diffs/Current.diff:

          Added a new diff file for tao/CurrentC.*

        * tao/diffs/CurrentC.cpp.diff:
        * tao/diffs/CurrentC.h.diff:
        * tao/diffs/CurrentC.i.diff:

          Three files are maddening. Replace them with one file (above)
          that serve the same purpose.

Mon Nov  3 21:33:42 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/BiDir_GIOP/diffs/BiDirPolicy.diff:

          Added a new diff file for BiDirPolicy generated code.

        * tao/BiDir_GIOP/diffs/BiDirPolicyC.cpp.diff:
        * tao/BiDir_GIOP/diffs/BiDirPolicyC.h.diff:
        * tao/BiDir_GIOP/diffs/BiDirPolicyC.i.diff:

          Three different files are maddening. Just removed them and added
          a new file (above) to serve the same purpose.

Mon Nov  3 21:28:31 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/CurrentC.cpp: Cosmetic fix.

        * tao/Domain.pidl: Fixed the comments in the pidl file.

        * tao/DomainC.cpp:
        * tao/DomainC.h:
        * tao/DomainC.i:
        * tao/BiDir_GIOP/BiDirPolicyC.cpp:
        * tao/BiDir_GIOP/BiDirPolicyC.h:
        * tao/BiDir_GIOP/BiDirPolicyC.i:
        * tao/Messaging/Messaging_No_ImplC.cpp:
        * tao/Messaging/Messaging_No_ImplC.h:
        * tao/Messaging/Messaging_No_ImplC.i:
        * tao/Messaging/Messaging_RT_PolicyC.cpp:
        * tao/Messaging/Messaging_RT_PolicyC.h:
        * tao/Messaging/Messaging_RT_PolicyC.i:
        * tao/Messaging/Messaging_SyncScope_PolicyC.cpp:
        * tao/Messaging/Messaging_SyncScope_PolicyC.h:
        * tao/Messaging/Messaging_SyncScope_PolicyC.i:
        * tao/PortableServer/Default_ORTC.cpp:
        * tao/PortableServer/Default_ORTC.h:
        * tao/PortableServer/Default_ORTC.i:
        * tao/Messaging/TAO_ExtC.cpp:
        * tao/Messaging/TAO_ExtC.h:
        * tao/Messaging/TAO_ExtC.i: Regenerated code to get the new IDL
          compiler change.

        * tao/Messaging/diffs/Messaging_No_Impl.diff:
        * tao/Messaging/diffs/Messaging_RT_Policy.diff:
        * tao/Messaging/diffs/Messaging_SyncScope_Policy.diff:
        * tao/Messaging/diffs/TAO_ExtC.diff:
        * tao/PortableServer/diffs/Default_ORT.diff:
        * tao/diffs/Domain.diff: Updated diffs with new stuff. This should
          now be minimal.

        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp;

          Cosmetic fix.

Mon Nov  3 19:42:49 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:

          Generate ACE_HAS_STD_TEMPLATE_CLASS_MEMBER_SPECIALIZATION for
          Objref_Traits<> member specializations.

        * tao/CurrentC.cpp:
        * tao/CurrentC.h:
        * tao/CurrentC.i:

          Regenerated the code for a start with the above macro.

        * tao/Current.pidl:

          Fixed commment about including corbafwd.h, since it is not
          required.

Mon Nov  3 19:20:48 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:

          Fixed a typo from the last checkin.

Mon Nov  3 18:40:31 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:

          Added generation of include of ace/OS_NS_String.h if any
          kind of interface is seen in the IDL file.

        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:

          Cosmetic changes to source code.

Mon Nov  3 04:43:43 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * Makefile:
          Pass the $(MAKE) variable to the reverseclean script
          instead of "make".  This fixes problems in autobuilds that
          assign something other than "make" to the make_program
          variable.

Mon Nov  3 03:04:48 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Endpoint.cpp:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/IIOP_Endpoint.cpp:
        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/DIOP_Endpoint.cpp:
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
        * tao/Strategies/SHMIOP_Endpoint.cpp:
        * tao/Strategies/SHMIOP_Profile.cpp:
          Added #includes needed due to recent subsetting.

Sun Nov  2 23:28:26 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * docs/tutorials/Quoter/Event_Service/server.cpp:
        * docs/tutorials/Quoter/RT_Event_Service/server.cpp:
        * examples/POA/DSI/client.cpp:
        * examples/POA/Default_Servant/File_i.cpp:
        * examples/POA/Generic_Servant/test_i.cpp:
        * examples/Persistent_Grid/Simple_util.cpp:
        * examples/Simple/Simple_util.cpp:
        * examples/Simple/bank/Bank_Client_i.cpp:
        * examples/Simple/echo/Echo_Client_i.cpp:
        * examples/Simple/grid/Grid_Client_i.cpp:
        * orbsvcs/Time_Service/Clerk_i.cpp:
        * orbsvcs/Time_Service/Server_i.cpp::
        * orbsvcs/examples/CosEC/Simple/Supplier.cpp:
        * orbsvcs/examples/Notify/Lanes/Consumer_Client.cpp:
        * orbsvcs/examples/Notify/Lanes/Supplier_Client.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Consumer_Client.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Supplier_Client.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.cpp:
        * orbsvcs/orbsvcs/Event/RT_Task.cpp:
        * orbsvcs/orbsvcs/Log/LogNotification.cpp:
        * orbsvcs/orbsvcs/Log/PersistStore.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request.inl:
        * orbsvcs/tests/Concurrency/CC_client.cpp:
        * orbsvcs/tests/CosEvent/lib/Counting_Consumer.cpp:
        * orbsvcs/tests/CosEvent/lib/Counting_Supplier.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Consumer.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Supplier.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer_Driver.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier_Driver.cpp:
        * orbsvcs/tests/Event/Performance/Latency.cpp:
        * orbsvcs/tests/Event/Performance/Latency_Server.cpp:
        * orbsvcs/tests/Event/lib/Driver.cpp:
        * orbsvcs/tests/Notify/MT_Dispatching/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Structured_Consumer.cpp:
        * performance-tests/Callback/client.cpp:
        * performance-tests/Callback/server.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Client.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/client.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/server.cpp:
        * performance-tests/Latency/AMH/Single_Threaded/client.cpp:
        * performance-tests/Latency/AMH/Single_Threaded/server.cpp:
        * performance-tests/Latency/AMI/client.cpp:
        * performance-tests/Latency/AMI/server.cpp:
        * performance-tests/Latency/DII/client.cpp:
        * performance-tests/Latency/DII/server.cpp:
        * performance-tests/Latency/DSI/client.cpp:
        * performance-tests/Latency/DSI/server.cpp:
        * performance-tests/Latency/Deferred/client.cpp:
        * performance-tests/Latency/Deferred/server.cpp:
        * performance-tests/Latency/Single_Threaded/client.cpp:
        * performance-tests/Latency/Single_Threaded/server.cpp:
        * performance-tests/Latency/Thread_Per_Connection/client.cpp:
        * performance-tests/Latency/Thread_Per_Connection/server.cpp:
        * performance-tests/Latency/Thread_Pool/client.cpp:
        * performance-tests/Latency/Thread_Pool/server.cpp:
        * performance-tests/POA/Create_Reference/create_reference.cpp:
        * performance-tests/POA/Implicit_Activation/client.cpp:
        * performance-tests/POA/Implicit_Activation/collocated.cpp:
        * performance-tests/POA/Implicit_Activation/server.cpp:
        * performance-tests/Pluggable/PP_Test_Client.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/client.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/server.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/client.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/server.cpp:
        * performance-tests/RTCorba/Oneways/Reliable/client.cpp:
        * performance-tests/RTCorba/Oneways/Reliable/server.cpp:
        * performance-tests/Sequence_Latency/AMH/Single_Threaded/client.cpp:
        * performance-tests/Sequence_Latency/AMH/Single_Threaded/server.cpp:
        * performance-tests/Sequence_Latency/AMI/client.cpp:
        * performance-tests/Sequence_Latency/AMI/server.cpp:
        * performance-tests/Sequence_Latency/DII/client.cpp:
        * performance-tests/Sequence_Latency/DII/server.cpp:
        * performance-tests/Sequence_Latency/DSI/client.cpp:
        * performance-tests/Sequence_Latency/DSI/server.cpp:
        * performance-tests/Sequence_Latency/Deferred/client.cpp:
        * performance-tests/Sequence_Latency/Deferred/server.cpp:
        * performance-tests/Sequence_Latency/Single_Threaded/client.cpp:
        * performance-tests/Sequence_Latency/Single_Threaded/server.cpp:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/client.cpp:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/server.cpp:
        * performance-tests/Sequence_Latency/Thread_Pool/client.cpp:
        * performance-tests/Sequence_Latency/Thread_Pool/server.cpp:
        * tao/IIOP_Profile.cpp:
        * tests/Blocking_Sync_None/Blocking_Sync_None.cpp:
        * tests/Bug_1020_Basic_Regression/Echo.cpp:
        * tests/Bug_1269_Regression/Echo.cpp:
        * tests/Bug_1270_Regression/Echo.cpp:
        * tests/Bug_1361_Regression/Echo.cpp:
        * tests/Client_Leaks/Process.cpp:
        * tests/Crash_On_Write/Crash_Task.cpp:
        * tests/Crash_On_Write/client.cpp:
        * tests/Explicit_Event_Loop/server.cpp:
        * tests/Faults/pong.cpp:
        * tests/Faults/test_i.cpp:
        * tests/File_IO/File_i.cpp:
        * tests/Leader_Followers/test_i.cpp:
        * tests/MProfile/server.cpp:
        * tests/MProfile_Forwarding/server.cpp:
        * tests/MT_Server/test_i.cpp:
        * tests/MT_Timeout/Sleep_Service.cpp::
        * tests/Multiple_Inheritance/client.cpp:
        * tests/Muxed_GIOP_Versions/test_i.cpp:
        * tests/NestedUpcall/MT_Client_Test/client.cpp:
        * tests/NestedUpcall/MT_Client_Test/local_server.cpp:
        * tests/NestedUpcall/Triangle_Test/Object_B_i.cpp:
        * tests/NestedUpcall/Triangle_Test/initiator.cpp:
        * tests/POA/Single_Threaded_POA/Single_Threaded_POA.cpp:
        * tests/Param_Test/options.cpp:
        * tests/RTCORBA/RTMutex/server.cpp:
        * tests/RTScheduling/Current/Thread_Task.cpp:
        * tests/RTScheduling/DT_Spawn/Thread_Action.h:
        * tests/RTScheduling/Scheduling_Interceptor/test_server.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:
        * tests/Single_Read/test_i.cpp:
        * tests/Timed_Buffered_Oneways/test_i.cpp:
        * tests/Timeout/test_i.cpp:
          Added missing #included needed (especially when not inlining)
          due to recent subsetting.

Sun Nov  2 16:33:13 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/orbconf.h:

          Removed a couple of macros for namespaces that are no longer
          used and absolete. We can now use the keyword namespace
          directly.

          There are few more macros that can go. But that is the next
          step.

        * tao/CONV_FRAMES.h:
        * tao/Exception.cpp:
        * tao/IOPS.h:
        * tao/IOPS_T.h:
        * tao/TAOS.h:
        * tao/Messaging/MessagingS_T.h:

          Removal of the macro forced us to fudge these files where it was
          used.

Sun Nov  2 16:23:42 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.cpp:
        * orbsvcs/orbsvcs/Event/RT_Task.cpp:
        * orbsvcs/orbsvcs/Log/LogNotification.cpp:
        * orbsvcs/orbsvcs/Log/LogRecordStore.cpp:
        * orbsvcs/orbsvcs/Log/PersistStore.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request.h:

          Added missing includes.

Sun Nov  2 15:45:55 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Collocated_Invocation.h:
        * tao/Invocation_Adapter.cpp:
        * tao/Invocation_Adapter.h:
        * tao/Invocation_Base.h:
        * tao/LocateRequest_Invocation.h:
        * tao/LocateRequest_Invocation_Adapter.cpp:
        * tao/LocateRequest_Invocation_Adapter.h:
        * tao/Remote_Invocation.cpp:
        * tao/Remote_Invocation.h:
        * tao/Synch_Invocation.h:

          Added and improved doxygen documentation.

Sat Nov  1 14:58:02 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Sync_Strategies.cpp:
        * tao/TAO_Singleton.h:
        * tao/Transport.h:
        * tao/RTCORBA/RT_Mutex.cpp:
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.cpp:
        * orbsvcs/orbsvcs/Event/GPlot_File.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/IFRService/Options.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Endpoint.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Server.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:

          #included a bunch of OS_NS_sys_* files to get the right methods
          that are used from the ACE_OS namespace.

Sat Nov  1 12:13:59 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Security/MechanismPolicy.cpp:
        * orbsvcs/orbsvcs/Security/MechanismPolicy.h:

          Added the required #includes to get them compiling.

Sat Nov  1 11:30:20 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * performance-tests/Cubit/TAO/DII_Cubit/Makefile
        * performance-tests/Latency/DII/Makefile:
        * performance-tests/Latency/DSI/Makefile:
        * performance-tests/Sequence_Latency/DII/Makefile:
        * performance-tests/Sequence_Latency/DSI/Makefile:
        * performance-tests/Sequence_Latency/Deferred/Makefile:
        * orbsvcs/examples/ORT/Makefile:
        * orbsvcs/tests/InterfaceRepo/Application_Test/Makefile:

          Do not compile if corba_messaging is turned off.

Sat Nov  1 09:56:10 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/examples/RtEC/Kokyu/Service.cpp: Added fixes to get rid
          of link errors in Debian_NoInterceptor build.

Sat Nov  1 05:40:21 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * examples/Buffered_Oneways/server.cpp:
        * examples/Content_Server/AMI_Iterator/Iterator_Factory_i.{h,cpp}:
        * examples/Content_Server/AMI_Observer/Push_Iterator_Factory_i.{h,cpp}:
        * examples/Content_Server/SMI_Iterator/Iterator_Factory_i.{h,cpp}:
        * examples/Load_Balancing/Identity_Server.cpp:
        * examples/Load_Balancing/Load_Balancer_i.cpp:
        * examples/Load_Balancing_persistent/Identity_Server.cpp:
        * examples/POA/Adapter_Activator/server.cpp:
        * examples/POA/DSI/client.cpp:
        * examples/POA/Default_Servant/File_i.cpp:
        * examples/POA/Default_Servant/server.cpp:
        * examples/POA/Explicit_Activation/server.cpp:
        * examples/POA/Forwarding/server.cpp:
        * examples/POA/Loader/Server_Manager.cpp:
        * examples/POA/On_Demand_Activation/server.cpp:
        * examples/POA/Reference_Counted_Servant/server.cpp:
        * examples/POA/TIE/server.cpp:
        * examples/Persistent_Grid/Simple_util.cpp:
        * examples/Simple/Simple_util.cpp:
        * examples/Simple/chat/Server_i.cpp:
        * examples/Simple/time/Time_Client_i.cpp:
        * examples/Simple/time/Time_i.cpp:
        * examples/Simple/time-date/Time_Date_i.cpp:
        * orbsvcs/Concurrency_Service/Concurrency_Service.cpp:
        * orbsvcs/CosEvent_Service/CosEvent_Service.cpp:
        * orbsvcs/Dump_Schedule/Dump_Schedule.cpp:
        * orbsvcs/Event_Service/Event_Service.cpp:
        * orbsvcs/FTRT_Event_Service/Event_Service/FT_EventService.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:
        * orbsvcs/ImplRepo_Service/Repository_Configuration.cpp:
        * orbsvcs/ImplRepo_Service/tao_imr.cpp:
        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:
        * orbsvcs/LifeCycle_Service/LifeCycle_Service.cpp:
        * orbsvcs/LoadBalancer/LoadManager.cpp:
        * orbsvcs/LoadBalancer/LoadMonitor.cpp:
        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Server.cpp:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.cpp:
        * orbsvcs/Notify_Service/Notify_Server.cpp:
        * orbsvcs/Time_Service/Clerk_i.cpp:
        * orbsvcs/Scheduling_Service/Scheduling_Service.cpp:
        * orbsvcs/Time_Service/Server_i.cpp:
        * orbsvcs/Time_Service/Time_Service_Clerk.cpp:
        * orbsvcs/Time_Service/Time_Service_Server.cpp:
        * orbsvcs/Trading_Service/Trading_Server.cpp:
        * orbsvcs/examples/CosEC/Simple/Service.cpp:
        * orbsvcs/examples/Log/Basic/main.cpp:
        * orbsvcs/examples/Log/Event/Event_Consumer.cpp:
        * orbsvcs/examples/Log/Event/Event_Supplier.cpp:
        * orbsvcs/examples/Log/Notify/Notify_Consumer.cpp:
        * orbsvcs/examples/Log/Notify/Notify_Supplier.cpp:
        * orbsvcs/examples/Log/RTEvent/RTEvent_Consumer.cpp:
        * orbsvcs/examples/Log/RTEvent/RTEvent_Supplier.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Consumer.cpp:
        * orbsvcs/examples/Notify/ThreadPool/Consumer.h:
        * orbsvcs/examples/ORT/gateway_server.cpp:
        * orbsvcs/examples/ORT/server.cpp:
        * orbsvcs/examples/RtEC/Simple/Service.cpp:
        * orbsvcs/orbsvcs/Time_Utilities.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Monitor.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Random.cpp:
        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp:
        * orbsvcs/orbsvcs/Naming/Persistent_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Endpoint.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Database.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
        * orbsvcs/tests/Concurrency/CC_client.cpp:
        * orbsvcs/tests/Concurrency/CC_command.tab.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Consumer.h:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer.h:
        * orbsvcs/tests/Event/lib/Consumer.h:
        * orbsvcs/tests/Event/lib/Supplier.h:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/server.cpp:
        * orbsvcs/tests/FaultTolerance/IOGR/Manager.cpp:
        * orbsvcs/tests/FaultTolerance/IOGR/server.cpp:
        * orbsvcs/tests/ImplRepo/airplane_i.cpp:
        * orbsvcs/tests/ImplRepo/airplane_server_i.cpp:
        * orbsvcs/tests/ImplRepo/nestea_i.cpp:
        * orbsvcs/tests/ImplRepo/nestea_server_i.cpp:
        * orbsvcs/tests/InterfaceRepo/Application_Test/server.cpp:
        * orbsvcs/tests/Log/Basic_Log_Test/Basic_Log_Test.cpp:
        * orbsvcs/tests/Log/Basic_Log_Test/client.cpp:
        * orbsvcs/tests/Miop/McastHello/server.cpp:
        * orbsvcs/tests/Notify/Blocking/common.cpp:
        * orbsvcs/tests/Notify/Discarding/common.cpp:
        * orbsvcs/tests/Notify/Driver/main.cpp:
        * orbsvcs/tests/Notify/Ordering/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/common.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/common.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/common.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/common.cpp:
        * orbsvcs/tests/RTCosScheduling/client.cpp:
        * orbsvcs/tests/Redundant_Naming/client.cpp:
        * orbsvcs/tests/Trading/Offer_Exporter.cpp:
        * orbsvcs/tests/Trading/TT_Info.cpp:
        * performance-tests/Callback/Callback_i.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Client.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Server.cpp:
        * performance-tests/Latency/AMI/Roundtrip_Handler.cpp:
        * performance-tests/Latency/Thread_Per_Connection/Client_Task.cpp:
        * performance-tests/Latency/Thread_Pool/Client_Task.cpp:
        * performance-tests/Memory/IORsize/server.cpp:
        * performance-tests/Memory/Single_Threaded/server.cpp:
        * performance-tests/POA/Create_Reference/create_reference.cpp:
        * performance-tests/POA/Demux/demux_test_client.cpp:
        * performance-tests/POA/Demux/demux_test_server.cpp:
        * performance-tests/POA/Implicit_Activation/server.cpp:
        * performance-tests/Pluggable/PP_Test_Client.cpp:
        * performance-tests/Pluggable/PP_Test_Server.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/server.cpp:
        * performance-tests/RTCorba/Oneways/Reliable/server.cpp:
        * performance-tests/Sequence_Latency/AMI/Roundtrip_Handler.cpp:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Client_Task.cpp:
        * performance-tests/Sequence_Latency/Thread_Pool/Client_Task.cpp:
        * performance-tests/Throughput/Receiver.h:
        * tao/Exception.cpp:
        * tao/FILE_Parser.cpp:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/IIOP_Endpoint.cpp:
        * tao/Synch_Refcountable.inl:
        * tao/default_client.cpp:
        * tao/default_server.cpp:
        * tao/PortableServer/Operation_Table.h:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
        * tests/BiDirectional/server.cpp:
        * tests/BiDirectional_NestedUpcall/server.cpp:
        * tests/Big_Oneways/server.cpp:
        * tests/Big_Reply/server.cpp:
        * tests/Big_Request_Muxing/server.cpp:
        * tests/Big_Twoways/server.cpp:
        * tests/Blocking_Sync_None/server.cpp:
        * tests/CDR/growth.cpp:
        * tests/Cache_Growth_Test/server.cpp:
        * tests/Connect_Strategy_Test/server.cpp:
        * tests/Explicit_Event_Loop/server.cpp:
        * tests/Exposed_Policies/Policy_Tester.cpp:
        * tests/Faults/middle.cpp:
        * tests/Faults/ping.cpp:
        * tests/Faults/server.cpp:
        * tests/File_IO/File_i.cpp:
        * tests/Forwarding/server.cpp:
        * tests/Hello/server.cpp:
        * tests/InterOp-Naming/Server_i.cpp:
        * tests/MProfile/server.cpp:
        * tests/MProfile_Connection_Timeout/server.cpp:
        * tests/MProfile_Forwarding/Manager.cpp:
        * tests/MProfile_Forwarding/server.cpp:
        * tests/MT_Client/server.cpp:
        * tests/Multiple/server.cpp:
        * tests/Multiple_Inheritance/client.cpp:
        * tests/Multiple_Inheritance/server.cpp:
        * tests/Native_Exceptions/server.cpp:
        * tests/NestedUpcall/MT_Client_Test/server.cpp:
        * tests/NestedUpcall/Triangle_Test/initiator.cpp:
        * tests/NestedUpcall/Triangle_Test/server_A.cpp:
        * tests/NestedUpcall/Triangle_Test/server_B.cpp:
        * tests/No_Server_MT_Connect_Test/server.cpp:
        * tests/ORT/server.cpp:
        * tests/Object_Loader/driver.cpp:
        * tests/Objref_Sequence_Test/server.cpp:
        * tests/OctetSeq/client.cpp:
        * tests/OctetSeq/server.cpp:
        * tests/Oneway_Buffering/admin.cpp:
        * tests/Oneway_Buffering/server.cpp:
        * tests/POA/Persistent_ID/server.cpp:
        * tests/Param_Test/param_test_i.cpp:
        * tests/Param_Test/server.cpp:
        * tests/Policies/Manipulation.cpp:
        * tests/Portable_Interceptors/Benchmark/server.cpp:
        * tests/Portable_Interceptors/Dynamic/server.cpp:
        * tests/Portable_Interceptors/ForwardRequest/server.cpp:
        * tests/Portable_Interceptors/IORInterceptor/server.cpp:
        * tests/Portable_Interceptors/PICurrent/server.cpp:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/server.cpp:
        * tests/Portable_Interceptors/Service_Context_Manipulation/server.cpp:
        * tests/Queued_Message_Test/Queued_Message_Test.cpp:
        * tests/RTCORBA/common_args.cpp:
        * tests/RTCORBA/ORB_init/ORB_init.cpp:
        * tests/RTCORBA/Persistent_IOR/server.cpp:
        * tests/RTCORBA/Private_Connection/server.cpp:
        * tests/Reliable_Oneways/server.cpp,:
        * tests/Server_Connection_Purging/server.cpp:
        * tests/Server_Leaks/server.cpp:
        * tests/Single_Read/server.cpp:
        * tests/Timed_Buffered_Oneways/server.cpp:
        * tests/Timeout/server.cpp:
        * utils/nslist/nslist.cpp:
          Added #includes needed due to subsetting in ACE, e.g.,
          ace/OS_NS_stdio.h, ace/OS_NS_time.h, ace/OS_NS_sys_stat.h,
          ace/OS_NS_fcntl.h, ace/OS_main.h, ace/OS_NS_netdb.h,
          ace/os_include/netinet/os_tcp.h, ace/Guard_T.h,
          ace/OS_NS_strings.h, ace/Synch_Traits.h, ace/Null_Mutex.h,

Fri Oct 31 14:42:09 2003  Edward R. Mulholland  <emulholl@atl.lmco.com>

        * tao/Strategies/SCIOP_Acceptor.cpp:
        * tao/Strategies/SCIOP_Acceptor.h:
        * tao/Strategies/SCIOP_Connector.cpp:

          SCIOP URLs with comma-separated hostnames (e.g.,
          "sciop://host-a,host-b") are implemented with distinct Acceptors
          and produce separate Profiles in the SCIOR.  In contrast, SCIOP
          URLs with plus-separated hostnames (e.g.,
          "sciop://host-a+host-b") are implemented with a single Acceptor
          and produce a shared Profile in the SCIOR.  Thanks to Yamuna
          Krishnamurthy <yamuna@oomworks.com> and Craig Rodrigues
          <crodrigu@bbn.com> for identifying the previous, erroneous
          behavior in which URLs with comma-separated hostnames were
          implemented with distinct Acceptors, but produced a single,
          shared Profile, which mistakenly implied the benefits of a
          single Acceptor (i.e., SCTP failover and network path
          multiplexing.)

Fri Oct 31 10:14:56 2003  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:

          Added a missing break from the loop to remove trailing whitespace
          from constant strings.  The result from the missing break is that
          the string would get chopped in the middle if it had a space. Thanks
          to Onopin V. Mikhail <kool@garant.ru> for reporting the problem.

Fri Oct 31 08:50:00 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/ast/ast_string.cpp:
        * TAO_IDL/be/be_visitor_array/array_ci.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_tmplinst/tmplinst_cs.cpp:

          Fixes for warnings in minimum static builds. The warnings were
          due to wrong format specifiers in sprintf.

Fri Oct 31 07:59:13 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/Buffered_Oneways/Makefile:
        * examples/Content_Server/AMI_Iterator/Content_Iterator_i.cpp:
        * examples/Content_Server/SMI_Iterator/Content_Iterator_i.cpp:

          Fixed simple compilation errors in static builds.

Fri Oct 31 13:47:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Parser_Registry.h:
          Added include of ace/os_include/os_stddef.h to pickup size_t type

Fri Oct 31 07:39:04 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Special_Basic_Argument_T.h:

          Removed export declarations.

Fri Oct 31 08:34:11 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/Makefile.bor:
          Added missing files

Fri Oct 31 07:36:33 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/Makefile.bor:
          Removed obsolete files.

Fri Oct 31 07:34:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype/AbstractBase_Invocation_Adapter.h:
          Removed ; after ACE_UNIMPLEMENTED_FUNC

        * tao/Valuetype/Makefile.bor:
          Added missing file

        * tao/Messaging/Makefile.bor:
          Removed obsolete files.

Thu Oct 30 23:23:05 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * performance-tests/Cubit/TAO/DII_Cubit/Makefile:
        * performance-tests/Latency/DII/Makefile:
        * performance-tests/Latency/DSI/Makefile:
        * performance-tests/Latency/Deferred/Makefile:
        * performance-tests/RTCorba/Oneways/Reliable/Makefile:
        * performance-tests/Sequence_Latency/DII/Makefile:
        * performance-tests/Sequence_Latency/DSI/Makefile:
        * performance-tests/Sequence_Latency/Deferred/Makefile:

          Added missing libraries to the link line. This is necessary
          since the DynamicInterface library depends on the Messaging
          library.

        * tests/OBV/Supports/Supports_Test_impl.cpp:
        * tests/Xt_Stopwatch/Stopwatch_display.h:

          Fixed compilation problems. These showed up only in builds which
          used MPC.

        * tao/Messaging/Asynch_Timeout_Handler.cpp:
        * tao/Messaging/Asynch_Timeout_Handler.h:
        * tao/Messaging/Messaging.cpp:
        * tao/Messaging/Messaging.h:

          Cosmetic fixes to get them compiling in minimum_corba builds.

        * tao/Messaging/Messaging.mpc:

          Added the list of files in the project.

Thu Oct 30 22:57:43 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/examples/ORT/Makefile:

          Added misisng libraries.

        * orbsvcs/tests/EC_Throughput/ECT_Driver.h:

          Added a forward declaration.

Thu Oct 30 22:09:17 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_traits.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:

          Added tao_release() to the generated Value_Traits<> specialization,
          so the INOUT argument template helper class can release the argument
          at demarshal time with the same call for both interface and
          valuetypes. This extra method has already been added to
          CORBA::ValueBase.

Thu Oct 30 15:01:43 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/AV/Endpoint_Strategy_T.cpp:
        * orbsvcs/tests/Notify/Blocking/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Notify_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Notify_Push_Supplier.cpp:
        * orbsvcs/tests/Notify/lib/Command.cpp:
        * orbsvcs/tests/Notify/lib/Command.h:
        * orbsvcs/tests/Notify/performance-tests/Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Notify_Structured_Push_Consumer.cpp:

          Fixed compilation on platforms where exceptions are turned off.

Thu Oct 30 20:45:00 UTC 2003  Gautam Thaker  <gthaker@atl.lmco.com>

        Please direct all queries regarding this commit to
        Jason Cohen <jcohen@atl.lmco.com>

        * tao/Strategies/SCIOP_Acceptor.cpp:

          Cleaned up commented code.  No functional change.

Thu Oct 30 20:30:00 UTC 2003  Gautam Thaker  <gthaker@atl.lmco.com>

        Please direct all queries regarding this commit to
        Jason Cohen <jcohen@atl.lmco.com>

        * tao/Strategies/SCIOP_Acceptor.cpp:
        * tao/Strategies/SCIOP_Acceptor.h:
        * tao/Strategies/SCIOP_Endpoint.cpp:
        * tao/Strategies/SCIOP_Lite_Factory.h:

          Moved include files which are suspected to have been
          refactored upstream.  The previous problems only affected
          the SCTP enabled TAO build.

Thu Oct 30 13:50:50 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/DynamicInterface/DII_Invocation.cpp:
        * TAO_IDL/ast/ast_string.cpp:

          Fixed warnings with g++ 2.95.3.

Thu Oct 30 11:47:34 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Portable_Interceptors/Bug_1559/Client_ORBInitializer.h:
        * tests/Portable_Interceptors/Bug_1559/Makefile:
        * tests/Portable_Interceptors/Bug_1559/Server_ORBInitializer.h:
        * tests/Portable_Interceptors/Bug_1559/client.cpp:
        * tests/Portable_Interceptors/Bug_1559/interceptors.cpp:
        * tests/Portable_Interceptors/Bug_1559/server.cpp:

          Get the above files compiling on g++.

Thu Oct 30 10:21:19 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicInterface/Request.h:
        * tao/DynamicInterface/ServerRequest.h:

          Added missing redefinition of TAO_EXPORT_MACRO.

Thu Oct 30 22:02:28 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP.dsp:

          Turned on RTTI for a few files.

Thu Oct 30 09:44:11 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/examples/RtEC/Kokyu/Makefile:

          Updated dependencies. Not sure how Venkita got this into the
          main trunk without usingthe Makefile.

Thu Oct 30 09:38:01 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/examples/RtEC/Kokyu/Makefile: Updated dependencies.

Thu Oct 30 09:28:20 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Notify/Method_Request_Updates_T.h:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Acceptor_Registry.h:

          Forward declared CORBA::Environment to get around build problems
          in static builds.

Thu Oct 30 10:44:58 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Makefile.bor:
          Updated this makefile with all the recent changes

        * tao/DynamicInterface/DII_Invocation_Adapter.h:
        * tao/Messaging/Asynch_Invocation_Adapter.h:
          Removed ; after ACE_UNIMPLEMENTED_FUNC

Thu Oct 30 08:10:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Collocated_Invocation.h:
          Removed ; after ACE_UNIMPLEMENTED_FUNC

        * tao/Makefile.bor:
          Updated this makefile with all the recent changes

Thu Oct 30 07:22:33 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ClientInterceptorAdapter.h:
          Added TAO_GIOP_Invocation as forward declaration

        * tao/Invocation_Adapter.h:
        * tao/Invocation_Base.h:
          Removed ; after ACE_UNIMPLEMENTED_FUNC

Thu Oct 30 07:00:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/TAO_IDL_BE.bor:
          Add missing files.

Wed Oct 29 21:35:48 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp: Fixed compilation
          errors in Win32 core builds. Strange that g++ missed this.

Wed Oct 29 21:10:08 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/RTCORBA/Multi_Priority_Mapping.cpp:

          Added ace/Log_Msg.h to get this compiling on one of RH8 builds.

Wed Oct 29 20:39:32 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_tmplinst/tmplinst_cs.cpp:
        * TAO_IDL/be/be_visitor_tmplinst/tmplinst_ss.cpp:
        * TAO_IDL/be_include/be_visitor_tmplinst/tmplinst_cs.h:
        * TAO_IDL/be_include/be_visitor_tmplinst/tmplinst_ss.h:

          Fixed fuzz errors.

Wed Oct 29 20:36:08 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Initializer.h:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Interceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Interceptor.h:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Loader.cpp:

          Remved #include of corbafwd.h and added other includes necessray
          to get them compiling on builds with MPC.

Wed Oct 29 19:41:14 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/ESF/ESF_Worker.h:
        * orbsvcs/orbsvcs/Event/ECG_ConsumerEC_Control.h:
        * orbsvcs/orbsvcs/Event/EC_ConsumerControl.h:
        * orbsvcs/orbsvcs/Event/EC_SupplierControl.h:
        * orbsvcs/orbsvcs/Notify/Factory.h:

          Forward declared CORBA::Environment in all these header files.

        * orbsvcs/orbsvcs/FaultTolerance/FT_Endpoint_Selector_Factory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Invocation_Endpoint_Selectors.cpp:

          #included Environment.h.

          The above fixes should take care of the build problems with
          SuSE static builds.

Wed Oct 29 17:31:16 2003  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/examples/LoadBalancing/Makefile:
        * orbsvcs/examples/LoadBalancing/ORBInitializer.cpp:
        * orbsvcs/examples/LoadBalancing/ORBInitializer.h:
        * orbsvcs/examples/LoadBalancing/RPS_Monitor.cpp:
        * orbsvcs/examples/LoadBalancing/RPS_Monitor.h:
        * orbsvcs/examples/LoadBalancing/server.cpp:
        * orbsvcs/examples/LoadBalancing/client.cpp:
        * orbsvcs/examples/LoadBalancing/ServerRequestInterceptor.h:
        * orbsvcs/examples/LoadBalancing/ServerRequestInterceptor.cpp:
        * orbsvcs/examples/LoadBalancing/Stock.cpp:
        * orbsvcs/examples/LoadBalancing/Stock.h:
        * orbsvcs/examples/LoadBalancing/StockFactory.h:
        * orbsvcs/examples/LoadBalancing/StockFactory.cpp:
        * orbsvcs/examples/LoadBalancing/Test.idl:
        * orbsvcs/examples/LoadBalancing/run_test.pl:

          Added a new directory "Load Balancing" under
          TAO/orbsvcs/examples.

          This directory contains an example of the adaptive load
          balancing strategy built in TAO's Load Balancing Service
          named the Cygnus Load Balancing/Monitoring Service.

          The server objects, which the LB service is trying to load
          balance is a StockFactory object. Clients make lot
          of requests to StockFactory objects, which inturn
          call a Stock object to return the stock price of
          a particular Stock symbol.

Wed Oct 29 15:03:58 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Invocation_Adapter.cpp (invoke_oneway):

          Explicitly convert Messaging::SyncScope to octet before
          assigning to TAO_Operation_Details::response_flags, as is
          done in all other occurrences in TAO.

Wed Oct 29 14:14:15 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/examples/RtEC/Makefile: Added Kokyu subdirectory.

Wed Oct 29 12:57:51 2003  Jaiganesh B  <jai@dre.vanderbilt.edu>

        * orbsvcs/performance-tests/LoadBalancing/ORBInitializer.cpp:
        * orbsvcs/performance-tests/LoadBalancing/RPS_Monitor.cpp:
          Added #includes to tao/ORB_Constants.h to define the new "home"
          of TAO_DEFAULT_MINOR_CODE.

Wed Oct 29 12:44:26 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicInterface/DynamicInterface.mpc:
        * tao/PortableServer/PortableServer.mpc:

          Added extra header files (not corresponding to .cpp files)
          to these .mpc files.

Wed Oct 29 12:16:57 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:

          Reverted the changes in

          Wed Oct 29 11:00:56 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

          since the original motivation was from warnings in gcc 3.2,
          whereas the chanages in question produced errors in gcc 3.3.

Wed Oct 29 12:15:35 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/IIOP_Transport.cpp: Cosmetic fix.

        * tao/Strategies/SCIOP_Endpoint.cpp:
        * tao/Strategies/SCIOP_Endpoint.h:
        * tao/Strategies/SCIOP_Factory.h:
        * tao/Strategies/SCIOP_Transport.cpp:

          Fixes for the compilation errors in lksctp build. Since I have o
          clue on what the problem could be, this is just a guess.

Wed Oct 29 12:09:09 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicInterface/DynamicInterface.mpc:
        * tao/PortableServer/PortableServer.mpc:

          Added list of source files, since the CVS respository
          contains source files which are not to be built but not
          yet removed.

Wed Oct 29 11:28:36 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Valuetype/AbstractBase_Invocation_Adapter.cpp:
        * tao/Valuetype/AbstractBase_Invocation_Adapter.h:

          Added 'const' qualifier to operation name parameter in the
          constructor, to correlate with the signature of the base
          class constructor.

Wed Oct 29 11:14:33 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Portable_Interceptors/PICurrent/ClientRequestInterceptor.cpp:
        * tests/Portable_Interceptors/PICurrent/ClientRequestInterceptor2.cpp:
        * tests/Portable_Interceptors/PICurrent/ServerRequestInterceptor.cpp:

          #include OS.h in the above files to get them compiling in single
          threaded builds.

Wed Oct 29 11:00:56 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:

          Added generation of ACE_TEMPLATE_SPECIALIZATION macro
          to implementataion of Objref_Traits<> and Value_Traits<>
          specializations.

Wed Oct 29 10:50:36 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/RTCORBA/RT_Transport_Descriptor.cpp: Added a missing
          include.

Wed Oct 29 10:23:42 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Object_Proxy_Broker.h:
        * tao/Remote_Object_Proxy_Broker.h:

          Added #include of orbconf.h to pull in TAO_HAS_MINIMUM_CORBA flag.

        * tao/PortableServer/PortableServerC.cpp:
        * tao/PortableServer/PortableServerC.h:

          Added TAO_HAS_MINIMUM_POA guards around TAO::Objref_Traits<>
          specializations, TAO::Arg_Traits<> specializations and
          associated explicit template instantiations.

Wed Oct 29 09:53:09 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/TypeCodeFactory_Adapter.h: Added a missing inclusion.

Tue Oct 28 23:19:18 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/util/utl_scope.cpp (lookup_pseudo):

          Removed unused local variables.

Tue Oct 28 22:46:46 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService.dsp:

          Turned on RTTI in the project settings.

        * orbsvcs/orbsvcs/IFRService/IFR_BaseS.h:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS.h:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.h:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.h:

          Removed the IFR_Client export macro from these files.

Tue Oct 28 22:29:25 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/TypeCodeFactory/TypeCodeFactoryC.cpp:

          Fixed typo in #include.

Tue Oct 28 22:22:29 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/FT_ORB.dsp:

          Updated project file list.

        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:

          Added include of tao/Typecode.h.

        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.cpp:

          Replaced instances of TAO_INVOKE_EXCEPTION with
          TAO::TAO_INVOKE_SYSTEM_EXCEPTION.

Tue Oct 28 22:12:23 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * performance-tests/RTCorba/Multiple_Endpoints/Common/Makefile:
        * docs/tutorials/Quoter/AMI/Makefile:
        * docs/tutorials/Quoter/Event_Service/Makefile:
        * docs/tutorials/Quoter/Naming_Service/Makefile:
        * docs/tutorials/Quoter/On_Demand_Activation/Makefile:
        * docs/tutorials/Quoter/RT_Event_Service/Makefile:
        * docs/tutorials/Quoter/Simple/Client/Makefile:
        * docs/tutorials/Quoter/Simple/Impl-Repo/Makefile:
        * docs/tutorials/Quoter/Simple/ImprovedServer/Makefile:
        * docs/tutorials/Quoter/Simple/Persistent/Makefile:
        * docs/tutorials/Quoter/Simple/Server/Makefile:
        * docs/tutorials/Quoter/idl/Makefile:

          Updated dependencies.

        * docs/tutorials/Quoter/On_Demand_Activation/Stock_Factory_Locator_i.h:
          #included ORB.h instead of corba.h.

Tue Oct 28 22:04:02 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/examples/CosEC/Factory/FactoryClient.cpp:
        * orbsvcs/examples/Log/Basic/TLS_Client.cpp:
        * orbsvcs/examples/ORT/Server_IORInterceptor.h:
        * orbsvcs/examples/ORT/Server_IORInterceptor_ORBInitializer.cpp:
        * orbsvcs/examples/ORT/server.cpp:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/Latency_Query_Client.h:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/Makefile:
        * orbsvcs/tests/Log/Basic_Log_Test/client.cpp:
        * orbsvcs/tests/RTCosScheduling/client.cpp:

          All those simple mistakes that were left behind. Changing
          corba.h to ORB.h, including additional header files like
          ace/Log_Msg.h were done to get these files compiling.

Tue Oct 28 21:53:13 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:

          Removed #include of Invocation.h. We need to remove this from
          the repo. We will do that once things stabilize a bit.

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.h: Removed the
          declaratrion of _tao_QueryInterface () since it is no longer
          required.

        * orbsvcs/tests/Security/MT_IIOP_SSL/Makefile:

          Updated dependecies.

        * orbsvcs/tests/Security/MT_IIOP_SSL/Server_Worker.h:
        * orbsvcs/tests/Security/MT_SSLIOP/Server_Worker.h:

          Changed the #include of corba.h to ORB.h. This (corba.h)
          is another file that needs to be removed from the repo.

        * orbsvcs/tests/Security/Secure_Invocation/server.cpp: Fixed a
          unused variable warning.

Tue Oct 28 21:51:19 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Dynamic_Adapter.cpp:
        * tao/Dynamic_Adapter.h:
        * tao/DynamicInterface/Context.h:
        * tao/DynamicInterface/Request.h:
        * tao/DynamicInterface/Request.inl:
        * tao/DynamicInterface/Server_Request.h:
        * tao/DynamicInterface/Server_Request.inl:

          Moved CORBA::release() and CORBA::is_nil() for Request and
          ServerRequest from Dynamic_Adapter.* to their associated
          files in the DynamicInterface library.

        * TAOACE.dsw:

          Added dependency on the TAO_Messaging library to
          TAO_DynamicInterface library build.

Tue Oct 28 20:56:41 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_arg_traits.cpp:
        * TAO_IDL/be_include/be_sequence.h:
        * TAO_IDL/be_include/be_visitor_arg_traits.h:
        * TAO_IDL/util/utl_scope.cpp:

          Fixed warnings that arose due to a conversion of string to a
          non-const pointers.

Tue Oct 28 15:53:42 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Invocation_Adapter.h:
        * tao/Invocation_Adapter.inl:
        * tao/Invocation_Adapter.h:
        * tao/Invocation_Adapter.inl:
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/DynamicInterface/DII_Invocation_Adapter.h:
        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
        * tao/Messaging/Asynch_Invocation_Adapter.h

          Added const qualifier to the operation names. Not sure how this
          got missed. Thought I had done this once before!

Tue Oct 28 14:06:52 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/AVStreams/Latency/pong.cpp:

          #included ORB.h and removed corba.h

        * tao/Invocation_Adapter.h: Cosmetic fixes.

        * TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:

          Implementation of the insertion operators for the valuetypes
          generated the ACE_INLINE macro. Removed generation of the
          ACE_INLINE macro.

Tue Oct 28 13:48:50 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Invocation_Adapter.h:

          Added some documentation. More stuff needs to be added.

        * tao/Profile_Transport_Resolver.cpp:

          Cosmetic fix.

        * tao/Messaging/MessagingC.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.cpp:

          Fixed a couple of fuzz errors that slipped.

Tue Oct 28 13:33:58 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/IORInterceptor/TAO_IORInterceptor.dsp;

          Added link to Valuetype library.

Tue Oct 28 13:21:43 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/ORB.cpp:

          Replaced a TypeCode::_nil () return value with 0, similar to other
          locations in this file, to avoid dependency on Typecode.h.

        * tao/ORB.h:

          Cosmetic changes.

        * tao/ORB_Core.cpp:

          Fixed misstypes of TAO::TAO_INVOKE_SYSTEM_EXCEPTION.

        * tao/ObjRefTemplate/TAO_ObjRefTemplate_Static.dsp:
        * tao/Valuetype/TAO_Valuetype_Static.dsp:

          Minor changes to project configurations.

Tue Oct 28 13:11:03 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/ORB.cpp:
        * tao/Service_Callbacks.cpp:

          Fixed compilation errors due to a wrong casting of an int as an
          enum. VC6.o doesn't like this.

Tue Oct 28 12:47:54 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp
          (visit_interface_fwd):

          Unused variable warning.

Tue Oct 28 12:39:01 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Any.cpp (operator>>):

          Inspite of numerous compilations we seemed to have missed a
          warning. The fix is to use .in () on a Typecode_var while
          passing the pointer to another object.

Tue Oct 28 12:02:47 2003  Balachandran Natarajan <bala@dre.vanderbilt.edu>
                          Jeff Parsons  <parsons@dre.vanderbilt.edu>

        This checkin is aimed at revamping the invocation code path
        including the generated code. The design is outlined in the
        bugzilla. Please see

        http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=1369

        This checkin only concentrates on the stub path. During the work
        we tried addressing the following additional problems

        - Header inclusions. Now IDL compiler generates just enough
          headers for the applications. There is no need to include
          corba.h or corbafwd.h anymore.

        - Wide range of problems with PortableInterceptors. Please see the
          dependencies in the above bug list.

        - We have tried reducing the inter-header dependencies quite a
          bit within the TAO library. Other libraries need more
          work. There are more places in TAO where this can be done
          effectively. We will address all of them with time.

        - We have changed most of the tests and examples including the ORB
          services to include thelight weight headers.

        - The generated code has gone down by more than 50%
          everywhere. This work also clearly demarcates the responsibility
          of the IDL compiler from the ORB. More work is needed on the
          skeleton side.

        More gory details of the changes can be found in
        $TAO_ROOT/ChangeLogs/ChangeLog-03d. The documentation for all the
        new interfaces are not complete yet. We will do them as we
        cleanup the scoreboard.

        * ChangeLogs/ChangeLog-03d: New changelog entry for the changes.

Tue Oct 28 12:01:06 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * ChangeLogs/ChangeLog-03c: Moved a bunch of ChangeLog entries
          right untril 1.3.5 to this new file.

Tue Oct 28 07:05:46 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        The following changes are designed to make profile equivalance
        checking code consistent between all pluggable protocol
        implementations.

        * tao/Profile.h (is_equivalent):

          This method is no longer virtual since it relies on template
          methods implemented by subclasses to perform pluggable
          protocol-specific profile equivalence check processing.

          (do_is_equivalent):

          New protected template method that subclasses must implement in
          order to allow pluggable protocols to apply their own definition
          of profile equivalance.

          (endpoint_count):

          Made this method const to address "discards const qualifier"
          errors.  This is now necessary since some equivalence checking
          code that calls this method has been refactored to the
          is_equivalence() method.

        * tao/Profile.cpp (is_equivalent):

          Check for a zero pointer to avoid potential a seg fault.

          Invoke the new do_is_equivalent() template method and the new
          is_equivalent_hook() hook method.

          (is_profile_equivalent_i, is_equivalent_hook):

          Renamed is_profile_equivalent_i() method to is_equivalent_hook()
          to better reflect the purpose of this method.  Note that
          is_equivalent_hook() is virtual to allow subclasses to override
          the default behavior.

          (is_equivalent_hook):

          The TAO_Unknown_Profile::is_equivalent() method does not need to
          allow some services (e.g. FT) to apply their own definition of
          profile equivalence.  Override this method so that it always
          return true.  Note that this behavior is consistent with the
          behavior that existed prior to these changes.

        * tao/IIOP_Profile.h (endpoint_count):

          Now a "const" method to address "discards const qualifier"
          errors.

          (is_equivalent, do_is_equivalent):

          Renamed this public method to the new protected
          do_is_equivalent() template method.

        * tao/IIOP_Profile.cpp (is_equivalent):

          Refactored common profile equivalence checking code to the
          TAO_Profile base class.

          (do_is_equivalent):

          Moved protocol-specific profile equivalence checks to this
          template method.

          (endpoint_count):

          Now a "const" method to address "discards const qualifier"
          errors.

        * tao/Strategies/DIOP_Profile.h:
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Strategies/SCIOP_Profile.h:
        * tao/Strategies/SCIOP_Profile.cpp:
        * tao/Strategies/SHMIOP_Profile.h:
        * tao/Strategies/SHMIOP_Profile.cpp:
        * tao/Strategies/UIOP_Profile.h:
        * tao/Strategies/UIOP_Profile.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.cpp:

          Likewise.

        * orbsvcs/tests/Security/Secure_Invocation/server.cpp:

          Added a sanity check for properly functioning SSLIOP object
          reference equivalence checks.  Thanks to Sebastien Lalonde
          <SLalonde@interstarinc.com> for pointing out that SSLIOP object
          reference equivalence was not working properly.

Sat Oct 25 13:19:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAOACE.dsw: Added that EventService is dependent of BiDIR GIOP
          to make sure that BiDIR GIOP is build first.
