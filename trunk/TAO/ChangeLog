Mon Feb 25 15:36:17 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * orbsvcs/IFR_Service/IFR_Server.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Locator.cpp:
        * orbsvcs/Naming_Service/NT_Naming_Server.cpp:
        * orbsvcs/Notify_Service/NT_Notify_Server.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/client.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/server.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/client.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/server.cpp:
        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/compare_histo.cpp:
        * orbsvcs/tests/Bug_3215_Regression/client.cpp:
        * orbsvcs/tests/Bug_3215_Regression/server.cpp:
        * orbsvcs/tests/Bug_3216_Regression/client.cpp:
        * orbsvcs/tests/Bug_3216_Regression/server.cpp:
        * orbsvcs/tests/Security/mixed_security_test/client.cpp:
        * orbsvcs/tests/Security/mixed_security_test/server.cpp:

          Use ACE_TMAIN instead of main as the program entry point to comply
          with ACE/TAO/CIAO coding standards.

        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/LoadBalancing.mpc:

          MPC doesn't recognize ACE_TMAIN as an entry point, as such, we need
          to explicitly set exename in the MPC file.

Mon Feb 25 09:45:37 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Loader/Servant_Locator.cpp:
        * tests/POA/On_Demand_Loading/Servant_Manager.cpp:
          Fixed OpenVMS IA64 warnings

Sun Feb 24 19:48:37 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_3154_Regression/run_test.pl:
          Extended timeout for OpenVMS

Sun Feb 24 19:44:37 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.cpp:
        * orbsvcs/IFR_Service/IFR_Service.cpp:
          No need to pass in empty orb name

        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Server.cpp:
          Small code simplification

        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerAdmin.h:
          Doxygen change

        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullConsumer.cpp:
          Layout change

        * orbsvcs/orbsvcs/IFRService/AbstractInterfaceDef_i.cpp:
          Use true instead of 1

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
          Use LM_DEBUG with ACE_DEBUG

        * orbsvcs/tests/InterfaceRepo/Bug_2962_Regression/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Bug_3155_Regression/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Bug_3174_Regression/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Bug_3200_Regression/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/run_test.pl:
          Just check whether the spawn worked or not instead of trying to
          check for the existince of the executable. The tests did fail on
          OpenVMS and VxWorks

Fri Feb 22 18:27:39 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tests/Bug_2935_Regression/middle.cpp:
        * tests/Bug_2935_Regression/sink.cpp:
        * tests/Bug_2935_Regression/source.cpp:
        * tests/DII_AMI_Forward/client.cpp:
        * tests/DII_AMI_Forward/server.cpp:
        * tests/POA/Adapter_Activator/server.cpp:
        * tests/POA/DSI/client.cpp:
        * tests/POA/DSI/server.cpp:
        * tests/POA/Default_Servant2/client.cpp:
        * tests/POA/Default_Servant2/server.cpp:
        * tests/POA/Explicit_Activation/server.cpp:
        * tests/POA/FindPOA/FindPOA.cpp:
        * tests/POA/Forwarding/client.cpp:
        * tests/POA/Forwarding/server.cpp:
        * tests/POA/Generic_Servant/client.cpp:
        * tests/POA/Loader/server.cpp:
        * tests/POA/NewPOA/NewPOA.cpp:
        * tests/POA/On_Demand_Activation/server.cpp:
        * tests/POA/On_Demand_Loading/server.cpp:
        * tests/POA/POA_BiDir/POA_BiDir.cpp:
        * tests/POA/Reference_Counted_Servant/server.cpp:
        * tests/POA/RootPOA/RootPOA.cpp:
        * tests/POA/TIE/client.cpp:
        * tests/POA/TIE/server.cpp:
        * tests/Portable_Interceptors/Bug_2133/client.cpp:
        * tests/Portable_Interceptors/Bug_2133/server.cpp:
        * tests/objref_comparison_test/main.cpp:

          Use ACE_TMAIN instead of main as the program entry point to comply
          with ACE/TAO/CIAO coding standards.

        * tests/POA/Generic_Servant/POA_Generic_Servant.mpc:
        * tests/POA/On_Demand_Activation/POA_On_Demand_Activation.mpc:
        * tests/POA/On_Demand_Loading/POA_On_Demand_Loading.mpc:
        * tests/POA/Reference_Counted_Servant/Reference_Counted_Servant.mpc:

          MPC doesn't recognize ACE_TMAIN as an entry point, as such, we need
          to explicitly set exename in the MPC file.

Fri Feb 22 17:01:26 UTC 2008  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * docs/tutorials/Quoter/RTCORBA/Admin.cpp:
        * docs/tutorials/Quoter/RTCORBA/Broker.cpp:
        * docs/tutorials/Quoter/RTCORBA/Distributor.cpp:

          Use ACE_TMAIN instead of main as the program entry point to comply
          with ACE/TAO/CIAO coding standards.

Fri Feb 22 08:57:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * MPC/config/optimize_collocated_invocations.mpb:
          New file, when this feature is set to 0 we pass -Sp -Sd to the
          idl compiler. In the future we can also change the core libraries
          to disable certain classes

        * MPC/config/taoidldefaults.mpb:
          Derive from optimize_collocated_invocations

Fri Feb 22 00:39:46 UTC 2008  Steve Huston  <shuston@riverace.com>

        * tests/Param_Test/run_test.pl: Use target class to wait for, and
          delete, the IOR files. Allows good execution on LabVIEW_RT.

        * tests/AMH_Exceptions/run_test.pl: Correct the target obj creation.

Thu Feb 21 19:25:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_component/component_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ci.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_root/root_ch.cpp:
          When collocation optimizations have been disabled also don't
          generate a collocated proxy broker function and the checks
          for this cpb function, this results in a footprint reduction
          for each interface but also for each operation. This fixes
          bugzilla 2971

Thu Feb 21 15:35:12 UTC 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * MPC/config/corba_e_compact.mpb:
        * MPC/config/corba_e_micro.mpb:
        * MPC/config/core_minimum_corba.mpb:
        * MPC/config/minimum_corba.mpb:
        * MPC/config/taoidldefaults.mpb:
        * MPC/config/taobaseidldefaults.mpb:
          Moved the contents of taoidldefaults to taobaseidldefaults,
          taoidldefaults now also derives from the CORBA profiles
          so that when we compile IDL we also generate code focused
          for the set profile. This reduces the size of the generated
          code, this fixes bugzilla 3233

Thu Feb 21 02:34:37 CST 2008  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO version 1.6.3 released.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
