Mon Apr 24 10:16:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1676_Regression/*:
          Added regression for bug 1676 written by Kees van Marle. This bug
          seems not to be fixed yet.

Mon Apr 24 09:39:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Runtime_Scheduler.{h,cpp}:
          Made the arguments of the set method a const reference, this fixes
          the internal backend errors in the BCB2006 release builds.

Mon Apr 24 06:59:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.inl:
          Removed some left over ACE_NESTED_CLASS usage

Sun Apr 23 11:26:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.cpp:
          Removed some left over ACE_NESTED_CLASS usage

Fri Apr 21 20:43:24 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/Makefile.am:
        * performance-tests/Makefile.am:

          Remove handful of subdirectories that have not yet been updated
          to work with autoconf builds.

Fri Apr 21 19:32:27 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Added orbsvcs/tests/Bug_2377_Regression/Makefile to
          AC_CONFIG_FILES.

        * orbsvcs/tests/Bug_2377_Regression/Makefile.am:

          New file.

Fri Apr 21 14:07:51 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

	* TAO_IDL/Makefile.am:
	* docs/Makefile.am:
	* docs/tutorials/Makefile.am:
	* docs/tutorials/Quoter/Makefile.am:
	* docs/tutorials/Quoter/AMI/Makefile.am:
	* docs/tutorials/Quoter/Event_Service/Makefile.am:
	* docs/tutorials/Quoter/Naming_Service/Makefile.am:
	* docs/tutorials/Quoter/On_Demand_Activation/Makefile.am:
	* docs/tutorials/Quoter/RT_Event_Service/Makefile.am:
	* docs/tutorials/Quoter/Simple/Makefile.am:
	* docs/tutorials/Quoter/Simple/Client/Makefile.am:
	* docs/tutorials/Quoter/Simple/Impl-Repo/Makefile.am:
	* docs/tutorials/Quoter/Simple/ImprovedServer/Makefile.am:
	* docs/tutorials/Quoter/Simple/Persistent/Makefile.am:
	* docs/tutorials/Quoter/Simple/Server/Makefile.am:
	* docs/tutorials/Quoter/idl/Makefile.am:
	* examples/Makefile.am:
	* examples/AMH/Makefile.am:
	* examples/AMH/Sink_Server/Makefile.am:
	* examples/AMI/Makefile.am:
	* examples/AMI/FL_Callback/Makefile.am:
	* examples/Advanced/Makefile.am:
	* examples/Advanced/ch_3/Makefile.am:
	* examples/Buffered_AMI/Makefile.am:
	* examples/Buffered_Oneways/Makefile.am:
	* examples/CSD_Strategy/Makefile.am:
	* examples/CSD_Strategy/ThreadPool/Makefile.am:
	* examples/CSD_Strategy/ThreadPool2/Makefile.am:
	* examples/CSD_Strategy/ThreadPool3/Makefile.am:
	* examples/CSD_Strategy/ThreadPool4/Makefile.am:
	* examples/CSD_Strategy/ThreadPool5/Makefile.am:
	* examples/CSD_Strategy/ThreadPool6/Makefile.am:
	* examples/Callback_Quoter/Makefile.am:
	* examples/Content_Server/Makefile.am:
	* examples/Content_Server/AMI_Iterator/Makefile.am:
	* examples/Content_Server/AMI_Observer/Makefile.am:
	* examples/Content_Server/SMI_Iterator/Makefile.am:
	* examples/Event_Comm/Makefile.am:
	* examples/Kokyu_dsrt_schedulers/Makefile.am:
	* examples/Kokyu_dsrt_schedulers/fp_example/Makefile.am:
	* examples/Kokyu_dsrt_schedulers/mif_example/Makefile.am:
	* examples/Kokyu_dsrt_schedulers/muf_example/Makefile.am:
	* examples/Load_Balancing/Makefile.am:
	* examples/Load_Balancing_persistent/Makefile.am:
	* examples/Logging/Makefile.am:
	* examples/OBV/Makefile.am:
	* examples/OBV/Typed_Events/Makefile.am:
	* examples/POA/Makefile.am:
	* examples/POA/Adapter_Activator/Makefile.am:
	* examples/POA/DSI/Makefile.am:
	* examples/POA/Default_Servant/Makefile.am:
	* examples/POA/Explicit_Activation/Makefile.am:
	* examples/POA/Explicit_Activation/Alt_Resources/Makefile.am:
	* examples/POA/FindPOA/Makefile.am:
	* examples/POA/Forwarding/Makefile.am:
	* examples/POA/Generic_Servant/Makefile.am:
	* examples/POA/Loader/Makefile.am:
	* examples/POA/NewPOA/Makefile.am:
	* examples/POA/On_Demand_Activation/Makefile.am:
	* examples/POA/On_Demand_Loading/Makefile.am:
	* examples/POA/POA_BiDir/Makefile.am:
	* examples/POA/Reference_Counted_Servant/Makefile.am:
	* examples/POA/RootPOA/Makefile.am:
	* examples/POA/TIE/Makefile.am:
	* examples/Persistent_Grid/Makefile.am:
	* examples/PluggableUDP/Makefile.am:
	* examples/PluggableUDP/tests/Makefile.am:
	* examples/PluggableUDP/tests/Basic/Makefile.am:
	* examples/PluggableUDP/tests/Performance/Makefile.am:
	* examples/PluggableUDP/tests/SimplePerformance/Makefile.am:
	* examples/Quoter/Makefile.am:
	* examples/RTCORBA/Makefile.am:
	* examples/RTCORBA/Activity/Makefile.am:
	* examples/RTScheduling/Makefile.am:
	* examples/RTScheduling/Fixed_Priority_Scheduler/Makefile.am:
	* examples/RTScheduling/MIF_Scheduler/Makefile.am:
	* examples/Simple/Makefile.am:
	* examples/Simple/bank/Makefile.am:
	* examples/Simple/chat/Makefile.am:
	* examples/Simple/echo/Makefile.am:
	* examples/Simple/grid/Makefile.am:
	* examples/Simple/time/Makefile.am:
	* examples/Simple/time-date/Makefile.am:
	* examples/Simulator/Makefile.am:
	* examples/Simulator/Event_Supplier/Makefile.am:
	* examples/TypeCode_Creation/Makefile.am:
	* examples/ior_corbaloc/Makefile.am:
	* examples/mfc/Makefile.am:
	* interop-tests/Makefile.am:
	* interop-tests/wchar/Makefile.am:
	* orbsvcs/Makefile.am:
	* orbsvcs/Concurrency_Service/Makefile.am:
	* orbsvcs/CosEvent_Service/Makefile.am:
	* orbsvcs/Dump_Schedule/Makefile.am:
	* orbsvcs/Event_Service/Makefile.am:
	* orbsvcs/FTRT_Event_Service/Makefile.am:
	* orbsvcs/FTRT_Event_Service/Event_Service/Makefile.am:
	* orbsvcs/FTRT_Event_Service/Factory_Service/Makefile.am:
	* orbsvcs/FTRT_Event_Service/Gateway_Service/Makefile.am:
	* orbsvcs/FT_ReplicationManager/Makefile.am:
	* orbsvcs/Fault_Detector/Makefile.am:
	* orbsvcs/Fault_Notifier/Makefile.am:
	* orbsvcs/IFR_Service/Makefile.am:
	* orbsvcs/ImplRepo_Service/Makefile.am:
	* orbsvcs/LoadBalancer/Makefile.am:
	* orbsvcs/Logging_Service/Makefile.am:
	* orbsvcs/Logging_Service/Basic_Logging_Service/Makefile.am:
	* orbsvcs/Logging_Service/Event_Logging_Service/Makefile.am:
	* orbsvcs/Logging_Service/Notify_Logging_Service/Makefile.am:
	* orbsvcs/Logging_Service/RTEvent_Logging_Service/Makefile.am:
	* orbsvcs/Naming_Service/Makefile.am:
	* orbsvcs/Notify_Service/Makefile.am:
	* orbsvcs/Scheduling_Service/Makefile.am:
	* orbsvcs/TAO_Service/Makefile.am:
	* orbsvcs/Time_Service/Makefile.am:
	* orbsvcs/Trading_Service/Makefile.am:
	* orbsvcs/examples/Makefile.am:
	* orbsvcs/examples/CosEC/Makefile.am:
	* orbsvcs/examples/CosEC/Factory/Makefile.am:
	* orbsvcs/examples/CosEC/RtEC_Based/Makefile.am:
	* orbsvcs/examples/CosEC/RtEC_Based/bin/Makefile.am:
	* orbsvcs/examples/CosEC/RtEC_Based/lib/Makefile.am:
	* orbsvcs/examples/CosEC/RtEC_Based/tests/Makefile.am:
	* orbsvcs/examples/CosEC/RtEC_Based/tests/Basic/Makefile.am:
	* orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Makefile.am:
	* orbsvcs/examples/CosEC/Simple/Makefile.am:
	* orbsvcs/examples/CosEC/TypedSimple/Makefile.am:
	* orbsvcs/examples/FaultTolerance/Makefile.am:
	* orbsvcs/examples/FaultTolerance/RolyPoly/Makefile.am:
	* orbsvcs/examples/ImR/Makefile.am:
	* orbsvcs/examples/ImR/Advanced/Makefile.am:
	* orbsvcs/examples/ImR/Combined_Service/Makefile.am:
	* orbsvcs/examples/LoadBalancing/Makefile.am:
	* orbsvcs/examples/Log/Makefile.am:
	* orbsvcs/examples/Log/Basic/Makefile.am:
	* orbsvcs/examples/Log/Event/Makefile.am:
	* orbsvcs/examples/Log/Notify/Makefile.am:
	* orbsvcs/examples/Log/RTEvent/Makefile.am:
	* orbsvcs/examples/Notify/Makefile.am:
	* orbsvcs/examples/Notify/Federation/Makefile.am:
	* orbsvcs/examples/Notify/Federation/Agent/Makefile.am:
	* orbsvcs/examples/Notify/Federation/Gate/Makefile.am:
	* orbsvcs/examples/Notify/Federation/SpaceCraft/Makefile.am:
	* orbsvcs/examples/Notify/Filter/Makefile.am:
	* orbsvcs/examples/Notify/Lanes/Makefile.am:
	* orbsvcs/examples/Notify/Subscribe/Makefile.am:
	* orbsvcs/examples/Notify/ThreadPool/Makefile.am:
	* orbsvcs/examples/ORT/Makefile.am:
	* orbsvcs/examples/RtEC/Makefile.am:
	* orbsvcs/examples/RtEC/IIOPGateway/Makefile.am:
	* orbsvcs/examples/RtEC/Kokyu/Makefile.am:
	* orbsvcs/examples/RtEC/MCast/Makefile.am:
	* orbsvcs/examples/RtEC/Schedule/Makefile.am:
	* orbsvcs/examples/RtEC/Simple/Makefile.am:
	* orbsvcs/examples/Security/Makefile.am:
	* orbsvcs/examples/Security/Send_File/Makefile.am:
	* orbsvcs/orbsvcs/Makefile.am:
	* orbsvcs/performance-tests/Makefile.am:
	* orbsvcs/performance-tests/LoadBalancing/Makefile.am:
	* orbsvcs/performance-tests/LoadBalancing/LBPerf/Makefile.am:
	* orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Makefile.am:
	* orbsvcs/performance-tests/RTEvent/Makefile.am:
	* orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/Makefile.am:
	* orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/Makefile.am:
	* orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Makefile.am:
	* orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Makefile.am:
	* orbsvcs/performance-tests/RTEvent/Roundtrip/Makefile.am:
	* orbsvcs/performance-tests/RTEvent/TCP_Baseline/Makefile.am:
	* orbsvcs/performance-tests/RTEvent/lib/Makefile.am:
	* orbsvcs/tests/Makefile.am:
	* orbsvcs/tests/AVStreams/Makefile.am:
	* orbsvcs/tests/AVStreams/Asynch_Three_Stage/Makefile.am:
	* orbsvcs/tests/AVStreams/Bidirectional_Flows/Makefile.am:
	* orbsvcs/tests/AVStreams/Component_Switching/Makefile.am:
	* orbsvcs/tests/AVStreams/Full_Profile/Makefile.am:
	* orbsvcs/tests/AVStreams/Latency/Makefile.am:
	* orbsvcs/tests/AVStreams/Modify_QoS/Makefile.am:
	* orbsvcs/tests/AVStreams/Multicast/Makefile.am:
	* orbsvcs/tests/AVStreams/Multicast_Full_Profile/Makefile.am:
	* orbsvcs/tests/AVStreams/Multiple_Flows/Makefile.am:
	* orbsvcs/tests/AVStreams/Pluggable/Makefile.am:
	* orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/Makefile.am:
	* orbsvcs/tests/AVStreams/Simple_Three_Stage/Makefile.am:
	* orbsvcs/tests/AVStreams/Simple_Two_Stage/Makefile.am:
	* orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/Makefile.am:
	* orbsvcs/tests/BiDir_CORBALOC/Makefile.am:
	* orbsvcs/tests/Bug_1334_Regression/Makefile.am:
	* orbsvcs/tests/Bug_1393_Regression/Makefile.am:
	* orbsvcs/tests/Bug_1395_Regression/Makefile.am:
	* orbsvcs/tests/Bug_1630_Regression/Makefile.am:
	* orbsvcs/tests/Bug_2074_Regression/Makefile.am:
	* orbsvcs/tests/Bug_2137_Regression/Makefile.am:
	* orbsvcs/tests/Bug_2247_Regression/Makefile.am:
	* orbsvcs/tests/Bug_2248_Regression/Makefile.am:
	* orbsvcs/tests/Bug_2285_Regression/Makefile.am:
	* orbsvcs/tests/Bug_2287_Regression/Makefile.am:
	* orbsvcs/tests/Bug_2316_Regression/Makefile.am:
	* orbsvcs/tests/Concurrency/Makefile.am:
	* orbsvcs/tests/CosEvent/Makefile.am:
	* orbsvcs/tests/CosEvent/Basic/Makefile.am:
	* orbsvcs/tests/CosEvent/lib/Makefile.am:
	* orbsvcs/tests/EC_Custom_Marshal/Makefile.am:
	* orbsvcs/tests/EC_MT_Mcast/Makefile.am:
	* orbsvcs/tests/EC_Mcast/Makefile.am:
	* orbsvcs/tests/EC_Multiple/Makefile.am:
	* orbsvcs/tests/EC_Throughput/Makefile.am:
	* orbsvcs/tests/Event/Makefile.am:
	* orbsvcs/tests/Event/Basic/Makefile.am:
	* orbsvcs/tests/Event/Mcast/Makefile.am:
	* orbsvcs/tests/Event/Mcast/Common/Makefile.am:
	* orbsvcs/tests/Event/Mcast/Complex/Makefile.am:
	* orbsvcs/tests/Event/Mcast/Simple/Makefile.am:
	* orbsvcs/tests/Event/Mcast/Two_Way/Makefile.am:
	* orbsvcs/tests/Event/Performance/Makefile.am:
	* orbsvcs/tests/Event/lib/Makefile.am:
	* orbsvcs/tests/FT_App/Makefile.am:
	* orbsvcs/tests/FaultTolerance/Makefile.am:
	* orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Makefile.am:
	* orbsvcs/tests/FaultTolerance/IOGR/Makefile.am:
	* orbsvcs/tests/FaultTolerance/IOGRManipulation/Makefile.am:
	* orbsvcs/tests/FtRtEvent/Makefile.am:
	* orbsvcs/tests/HTIOP/Makefile.am:
	* orbsvcs/tests/HTIOP/AMI/Makefile.am:
	* orbsvcs/tests/HTIOP/BiDirectional/Makefile.am:
	* orbsvcs/tests/HTIOP/Hello/Makefile.am:
	* orbsvcs/tests/IOR_MCast/Makefile.am:
	* orbsvcs/tests/ImplRepo/Makefile.am:
	* orbsvcs/tests/ImplRepo/NameService/Makefile.am:
	* orbsvcs/tests/ImplRepo/scale/Makefile.am:
	* orbsvcs/tests/InterfaceRepo/Makefile.am:
	* orbsvcs/tests/InterfaceRepo/Application_Test/Makefile.am:
	* orbsvcs/tests/InterfaceRepo/IDL3_Test/Makefile.am:
	* orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/Makefile.am:
	* orbsvcs/tests/InterfaceRepo/IFR_Test/Makefile.am:
	* orbsvcs/tests/InterfaceRepo/Latency_Test/Makefile.am:
	* orbsvcs/tests/InterfaceRepo/Persistence_Test/Makefile.am:
	* orbsvcs/tests/Interoperable_Naming/Makefile.am:
	* orbsvcs/tests/LoadBalancing/Makefile.am:
	* orbsvcs/tests/LoadBalancing/GenericFactory/Makefile.am:
	* orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Makefile.am:
	* orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Makefile.am:
	* orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/Makefile.am:
	* orbsvcs/tests/LoadBalancing/LoadMonitor/Makefile.am:
	* orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/Makefile.am:
	* orbsvcs/tests/Log/Makefile.am:
	* orbsvcs/tests/Log/Basic_Log_Test/Makefile.am:
	* orbsvcs/tests/Miop/Makefile.am:
	* orbsvcs/tests/Miop/McastHello/Makefile.am:
	* orbsvcs/tests/Notify/Makefile.am:
	* orbsvcs/tests/Notify/Basic/Makefile.am:
	* orbsvcs/tests/Notify/Blocking/Makefile.am:
	* orbsvcs/tests/Notify/Destroy/Makefile.am:
	* orbsvcs/tests/Notify/Discarding/Makefile.am:
	* orbsvcs/tests/Notify/Driver/Makefile.am:
	* orbsvcs/tests/Notify/MT_Dispatching/Makefile.am:
	* orbsvcs/tests/Notify/Ordering/Makefile.am:
	* orbsvcs/tests/Notify/PluggableTopology/Makefile.am:
	* orbsvcs/tests/Notify/RT_lib/Makefile.am:
	* orbsvcs/tests/Notify/Reconnecting/Makefile.am:
	* orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile.am:
	* orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile.am:
	* orbsvcs/tests/Notify/Structured_Filter/Makefile.am:
	* orbsvcs/tests/Notify/Structured_Multi_Filter/Makefile.am:
	* orbsvcs/tests/Notify/Test_Filter/Makefile.am:
	* orbsvcs/tests/Notify/XML_Persistence/Makefile.am:
	* orbsvcs/tests/Notify/lib/Makefile.am:
	* orbsvcs/tests/Notify/performance-tests/Makefile.am:
	* orbsvcs/tests/Notify/performance-tests/Filter/Makefile.am:
	* orbsvcs/tests/Notify/performance-tests/RedGreen/Makefile.am:
	* orbsvcs/tests/Notify/performance-tests/Throughput/Makefile.am:
	* orbsvcs/tests/Property/Makefile.am:
	* orbsvcs/tests/Redundant_Naming/Makefile.am:
	* orbsvcs/tests/Sched/Makefile.am:
	* orbsvcs/tests/Sched_Conf/Makefile.am:
	* orbsvcs/tests/Security/Makefile.am:
	* orbsvcs/tests/Security/BiDirectional/Makefile.am:
	* orbsvcs/tests/Security/Big_Request/Makefile.am:
	* orbsvcs/tests/Security/Callback/Makefile.am:
	* orbsvcs/tests/Security/Crash_Test/Makefile.am:
	* orbsvcs/tests/Security/MT_IIOP_SSL/Makefile.am:
	* orbsvcs/tests/Security/MT_SSLIOP/Makefile.am:
	* orbsvcs/tests/Security/Secure_Invocation/Makefile.am:
	* orbsvcs/tests/Security/ssliop_corbaloc/Makefile.am:
	* orbsvcs/tests/Simple_Naming/Makefile.am:
	* orbsvcs/tests/Time/Makefile.am:
	* orbsvcs/tests/Trading/Makefile.am:
	* orbsvcs/tests/ior_corbaname/Makefile.am:
	* orbsvcs/tests/tests_svc_loader/Makefile.am:
	* performance-tests/Makefile.am:
	* performance-tests/Anyop/Makefile.am:
	* performance-tests/CSD_Strategy/Makefile.am:
	* performance-tests/CSD_Strategy/TestApps/Makefile.am:
	* performance-tests/CSD_Strategy/TestInf/Makefile.am:
	* performance-tests/CSD_Strategy/TestServant/Makefile.am:
	* performance-tests/Callback/Makefile.am:
	* performance-tests/Cubit/Makefile.am:
	* performance-tests/Cubit/TAO/Makefile.am:
	* performance-tests/Cubit/TAO/DII_Cubit/Makefile.am:
	* performance-tests/Cubit/TAO/IDL_Cubit/Makefile.am:
	* performance-tests/Cubit/TAO/MT_Cubit/Makefile.am:
	* performance-tests/Latency/Makefile.am:
	* performance-tests/Latency/AMH_Single_Threaded/Makefile.am:
	* performance-tests/Latency/AMI/Makefile.am:
	* performance-tests/Latency/Collocation/Makefile.am:
	* performance-tests/Latency/DII/Makefile.am:
	* performance-tests/Latency/DSI/Makefile.am:
	* performance-tests/Latency/Deferred/Makefile.am:
	* performance-tests/Latency/Single_Threaded/Makefile.am:
	* performance-tests/Latency/Thread_Per_Connection/Makefile.am:
	* performance-tests/Latency/Thread_Pool/Makefile.am:
	* performance-tests/Memory/Makefile.am:
	* performance-tests/Memory/IORsize/Makefile.am:
	* performance-tests/Memory/Single_Threaded/Makefile.am:
	* performance-tests/POA/Makefile.am:
	* performance-tests/POA/Create_Reference/Makefile.am:
	* performance-tests/POA/Demux/Makefile.am:
	* performance-tests/POA/Implicit_Activation/Makefile.am:
	* performance-tests/POA/Object_Creation_And_Registration/Makefile.am:
	* performance-tests/Pluggable/Makefile.am:
	* performance-tests/Protocols/Makefile.am:
	* performance-tests/RTCorba/Makefile.am:
	* performance-tests/RTCorba/Multiple_Endpoints/Makefile.am:
	* performance-tests/RTCorba/Multiple_Endpoints/Common/Makefile.am:
	* performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/Makefile.am:
	* performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/Makefile.am:
	* performance-tests/RTCorba/Oneways/Makefile.am:
	* performance-tests/RTCorba/Oneways/Reliable/Makefile.am:
	* performance-tests/RTCorba/Thread_Pool/Makefile.am:
	* performance-tests/Sequence_Latency/Makefile.am:
	* performance-tests/Sequence_Latency/AMH_Single_Threaded/Makefile.am:
	* performance-tests/Sequence_Latency/AMI/Makefile.am:
	* performance-tests/Sequence_Latency/DII/Makefile.am:
	* performance-tests/Sequence_Latency/DSI/Makefile.am:
	* performance-tests/Sequence_Latency/Deferred/Makefile.am:
	* performance-tests/Sequence_Latency/Single_Threaded/Makefile.am:
	* performance-tests/Sequence_Latency/Thread_Per_Connection/Makefile.am:
	* performance-tests/Sequence_Latency/Thread_Pool/Makefile.am:
	* performance-tests/Throughput/Makefile.am:
	* tao/Makefile.am:
	* utils/Makefile.am:
	* utils/catior/Makefile.am:
	* utils/nslist/Makefile.am:

          Regenerate with latest MPC and *.mpc/*.mpb changes.

Fri Apr 21 09:25:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport_Connector.cpp:
          Removed the fix for bug 2417, according to the test stats things
          didn't got fixed.

Fri Apr 21 08:18:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/String_Traits_Base_T.h:
          Disabled the warning when wchar_t is not a native type. This
          makes the vxworks logs unreadable.

Fri Apr 21 08:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Trading/TTest.idl:
          Use the CORBA predefined sequence types

Fri Apr 21 07:38:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/IFRService/IFR_BaseS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.inl:
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.h:
        * orbsvcs/orbsvcs/Notify/EventTypeSeq.cpp:
        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduler.cpp:
        * tests/Smart_Proxies/Collocation/Smart_Proxy_Impl.cpp:
          Removed usage of ACE_NESTED_CLASS

Thu Apr 20 14:41:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/extra_core.mpb:
        * tao/tao.mpc:
          Moved ServicesC.cpp to tao.mpc

Thu Apr 20 14:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bounded_Sequence_CDR_T.h:
        * tao/Unbounded_Sequence_CDR_T.h:
          Include orbconf.h instead of one of the sequence header files

Thu Apr 20 13:37:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Asynch_Reply_Dispatcher_Base.{h,cpp}:
        * tao/ObjectKey_Table.cpp:
        * tao/Refcounted_ObjectKey.{h,cpp,inl}:
          Made the refcounts CORBA::ULong and only return the refcount
          from the incr/decr methods when really needed, using the refcount
          form external is always tricky. Fixes bugzilla bug 2505.

Thu Apr 20 12:28:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        Integrated ondemand branch to cvs head. This makes an ondemand write
        possible. The user specified maximum is at this moment not a hard
        maximum, it is more an indication how large the GIOP fragments
        should become, we can send out smaller and larger fragments if needed.

        * tao/tests/Ondemand_Write/*:
          New test

        Mon Apr  3 12:30:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/On_Demand_Fragmentation_Strategy.cpp:
          Print the debug message after we padded it so that sizes do match
          in the logs

        * tao/GIOP_Message_Base.cpp:
          For fragments also retrieve the request/reply id

        * tests/Ondemand_Write:
          Simple test for ondemand write, needs now inspection of output to
          check if things work ok

        Mon Apr  3 07:19:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CDR.h:
          Commented out write_octet_array decleration, there is no
          implementation yet.

        Thu Mar 30 13:02:18 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
          Added the missing transport parameter to the TAO_GIOP_Message_Base
          constructor.

        Thu Mar 30 12:41:17 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tao/CDR.cpp:
        * tao/On_Demand_Fragmentation_Strategy.cpp:

          Fixed checks for return values.

        Wed Mar 22 20:13:22 UTC 2006  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Messaging/Asynch_Invocation.cpp (remote_invocation):

          Added missing GIOP fragmentation support.

        Wed Mar 22 13:53:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.h:
          Fixed warning of the Intel compiler

        Wed Mar 22 01:33:47 UTC 2006  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/CDR.cpp:
        * tao/CDR.h:
        * tao/CDR.i:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Base.h:
        * tao/GIOP_Message_Generator_Parser.h:
        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/GIOP_Message_Generator_Parser_10.h:
        * tao/GIOP_Message_Generator_Parser_12.cpp:
        * tao/GIOP_Message_Generator_Parser_12.h:
        * tao/GIOP_Message_Lite.cpp:
        * tao/GIOP_Message_Lite.h:
        * tao/ORB_Core.cpp:
        * tao/On_Demand_Fragmentation_Strategy.cpp:
        * tao/Pluggable_Messaging.h:
        * tao/Remote_Invocation.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/TAO_Server_Request.cpp:
        * tao/default_resource.cpp:
        * tao/PortableServer/Upcall_Wrapper.cpp:

          Added remaining code necessary to send fragments through the
          underlying transport.

          Added missing outgoing GIOP reply fragment support.

        Tue Mar 21 22:18:45 UTC 2006  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * docs/Options.html:

          Document new "-ORBMaxMessageSize" ORB option.

        Tue Mar 21 15:16:43 UTC 2006  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/GIOP_Message_Base.cpp (set_giop_flags):

          Cast CDR stream buffer to an array of octets.

        * tao/GIOP_Message_Base.h (set_giop_flags):

          Added missing method declaration.

        * tao/Resource_Factory.h (fragmentation_strategy):
        * tao/default_resource.cpp:
        * tao/default_resource.h:

          Made factory method name consistent with existing naming
          convention, i.e. create_fragmentation_strategy().

          Corrected return value.  It should have been
          auto_ptr<TAO_GIOP_Fragmentation_Strategy>, not
          TAO_GIOP_Fragmentation_Strategy *.

        * tao/IIOP_Transport.cpp:
        * tao/Strategies/DIOP_Transport.cpp:
        * tao/Strategies/SCIOP_Transport.cpp:
        * tao/Strategies/SHMIOP_Transport.cpp:
        * tao/Strategies/UIOP_Transport.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Transport.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:

          The TAO_GIOP_Message_Base constructor now accepts a pointer to
          TAO_Transport parameter.  Updated constructor call accordingly.

        * tao/CDR.h:
        * tao/CDR.i:
        * tao/CDR.cpp:

          Added missing fragmentation-enabling constructor and
          fragmentation flag accessors.

          Removed legacy initial implementa code.  Addresses build
          errors.

        * tao/GIOP_Fragmentation_Strategy.h (TAO_GIOP_Fragmentation_Strategy):

          Export to allow users to provide their own implementation
          through the resource factory.

          (fragment):

          Return an "int" instead of "void".  Allows the error status of
          the underlying transport send to be propagated up the stack.

        * tao/Null_Fragmentation_Strategy.h (fragment):
        * tao/Null_Fragmentation_Strategy.cpp (fragment):
        * tao/On_Demand_Fragmentation_Strategy.h (fragment):
        * tao/On_Demand_Fragmentation_Strategy.cpp (fragment):

          Likewise.

        * tao/operation_details.cpp (marshal_args):

          Mark the CDR as having no other fragments to send after all
          arguments have been marshaled, not before the last one is
          marshaled.

        * ORB_Core.h (fragmentation_Strategy):

          Added missing transport parameter.

          Removed const qualifier.  The resource_factory() accessor isn't
          a const method.

        * ORB_Core.cpp (fragmentation_strategy):

          Likewise.

        * params.h:
        * params.i:
        * params.cpp:

          Added missing max_message_size attribute.

        Fri Mar 17 10:59:02 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Resource_Factory.h:
          Added missing include of Basic_Types and added forward declarations

        * tao/On_Demand_Fragmentation_Strategy.h:
          Fixed copy constructor/assignment operators

        * tao/CDR.h:
          Removed do_fragmentation method, there is no implementation, added
          fragment_stream

        * tao/CDR.i:
          Fixed typo

        * tao/default_resource.cpp:
          Added missing includes and updated signature of
          create_fragmentation_strategy to match header file

        Fri Mar 17 07:48:02 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

          Updated code after update from Ossama Othman

        * tao/On_Demand_Fragmentation_Strategy.{h,cpp}:
          New files

        * tao/default_resource.{h,cpp}:
          Added create_fragmentation_strategy

        * tao/GIOP_Fragmentation_Strategy.h:
          Doxygen improvements

        * tao/Resource_Factory.h:
          Added pure virtual fragmentation_strategy method

        * tao/ORB_Core.{h,cpp}:
          Added fragmentation_strategy accessor method

        * tao/GIOP_Message_Base.{h,cpp}:
          Added TAO_Transport to the constructor arguments

        * tao/GIOP_Message_Base.cpp:
          Added come comments

        * tao/True_Fragmentation_Strategy.{h,cpp}:
          Removed again, replaced by On_Demand so far as I can tell

        * tao/tao.mpc:
          Added new files

        Thu Mar 16 07:48:02 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

          Integrated first set of code from Ossama Othman

        * tao/GIOP_Fragmentation_Strategy.{h,cpp}:
        * tao/Null_Fragmentation_Strategy.{h,cpp}:
        * tao/True_Fragmentation_Strategy.{h,cpp}:
          New files

        * tao/operation_details.cpp:
          When marshaling the last argument put this information on the
          cdr_stream

        * tao/GIOP_Message_Base.cpp:
          Some refactoring

        * tao/CDR.{h,cpp,i}:
          Call fragment_stream as part of the streaming calls

Thu Apr 20 11:50:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/sfp.idl:
          Use CORBA::OctetSeq and CORBA::ULongSeq

        * tao/Strategies/SCIOP_Profile.cpp:
          Fixed compile error

Thu Apr 20 08:32:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.cpp:
          Fixed compile error

Thu Apr 20 07:15:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/ssl_endpointsC.h:
          Fixed template instantiation

Wed Apr 19 18:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/UShortSeqC.h:
        * tao/OctetSeqC.h:
          Do an explicit export of the base template

Wed Apr 19 16:01:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/ExceptionHolderC.{h,cpp}:
          Added constructor that accepts all values as generated now by the
          IDL compiler

        * tao/Messaging/ExceptionHolder_i.cpp:
          Use the new constructor

Wed Apr 19 14:19:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Exception.h:
          Made the copy constructor public again, vc7.1 complains when
          it is protected. Made a todo in this file again, have to retest
          this later.

Wed Apr 19 13:28:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_CredentialsAcquirer.cpp:
        * examples/Advanced/ch_12/icp.cpp:
        * examples/Advanced/ch_21/icp.cpp:
        * examples/Advanced/ch_18/icp.cpp:
        * examples/Advanced/ch_8_and_10/icp.cpp:
        * orbsvcs/orbsvcs/SSLIOP/params_dup.h:
          Removed workarounds for vc6

Wed Apr 19 13:16:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype/AbstractBase.cpp:
          Use true/false, const improvements

        * tao/Valuetype/AbstractBase.cpp:
          Use C++ cast instead of C cast

Wed Apr 19 13:03:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Any_Unknown_IDL_Type.h:
          Removed not needed forward declarations

        * tao/AnyTypeCode/Any.cpp:
        * tao/AnyTypeCode/Any_Impl.cpp:
        * tao/BiDir_GIOP/BiDirPolicy_Validator.cpp:
          Use false/true instead of 0/1 for bool

        * tao/PortableServer/Object_Adapter.h:
          Don't export poa_name_iterator and iteratable_poa_name

        * tao/PortableServer/Object_Adapter.cpp:
          Use true/false and when the object adapter can't be found
          throw a OBJECT_NOT_EXIST with minor code 2

Wed Apr 19 12:56:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport_Timer.h:
          No need to export this class from the TAO lib

        * tao/ORB.h:
          Use false for the default of the shutdown method

Wed Apr 19 12:51:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.mpc:
        * examples/RTScheduling/Fixed_Priority_Scheduler/Fixed_Priority_Scheduler.mpc:
          Made these projects dependent on each other to make sure
          that they don't build in parallel and generate the same idl
          file twice at the same moment. Thanks to Chad Elliot for the
          info how to do this the easiest

Wed Apr 19 12:42:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_interface/tie_sh.cpp:
          Generate doxygen documentation style and use true instead of 1

        * TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:
          Generate true for boolean instead of 1

        * TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:
          Generate also argument names in the header file so that doxygen
          can parse IDL generated code

Wed Apr 19 12:38:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushConsumer.{h,cpp,i}:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.{h,i}:
          Use bool and prefix increment/decrement

Wed Apr 19 11:58:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_Oneways/run_test.pl:
        * tests/Hello/run_test.pl:
        * performance-tests/Throughput/run_test.pl:
          Check the return value of spawn, speedsup the builds when no
          executable is build

        * performance-tests/Throughput/Receiver.cpp:
          Prefix increment

        * performance-tests/Throughput/Receiver_Factory.cpp:
          Initialise pointer with 0

        * performance-tests/Throughput/Throughput.mpc:
          Simplified

Wed Apr 19 11:39:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        Integrated iioptbranch. This fixes bugzilla 2467

        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
        No need to include IIOP files, just use the base classes

        Wed Mar 29 08:01:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/default_resource.cpp
        * tao/IIOP_Acceptor.cpp
        * tao/IIOP_Acceptor.h
        * tao/IIOP_Acceptor.i
        * tao/IIOP_Connection_Handler.cpp
        * tao/IIOP_Connection_Handler.h
        * tao/IIOP_Connector.cpp
        * tao/IIOP_Connector.h
        * tao/IIOP_Endpoint.cpp
        * tao/IIOP_Endpoint.h
        * tao/IIOP_Endpoint.i
        * tao/IIOP_Factory.cpp
        * tao/IIOP_Factory.h
        * tao/IIOP_Lite_Factory.cpp
        * tao/IIOP_Lite_Factory.h
        * tao/IIOP_Profile.cpp
        * tao/IIOP_Profile.h
        * tao/IIOP_Transport.cpp
        * tao/IIOP_Transport.h
        * tao/orbconf.h
        * tao/TAO_Internal.cpp
        Added TAO_HAS_IIOP. This is default set to 1 but can be overridden
        in the config.h file to 0 meaning we don't support IIOP. This is
        usefull for embedded systems that support one of the other
        pluggable protocols and don't need IIOP support at all. With
        TAO_HAS_IIOP set to 0 not everything will compile, just the
        core libs itself.

Wed Apr 19 07:48:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        Integrated sequpdate3 branch. Thanks to Carlos O'Ryan for the initial
        work for this new sequence implementation which I merged to cvs head
        and finished

        This fixes the following bugzilla entries:
        2492 - Simplify TAO_Seq_Out_T
        2493 - Simplify _reset method on union generated code
        2352 - Valuefactory operations not safe
        2353 - Valuefactories stored per process instead of per orb
        2349 - ORB::destroy() should throw BAD_INV_ORDER if called during a
        2315 - Reimplement (w)string_var/_out as templates
        1989 - Footprint reduction issue, split Sequence files
        2273 - Deprecate old AMI support
        2300 - Simplify serialize/deserialize of sequences
        2299 - Reimplement string/wstring managers as templates
        1936 - Unnecessary usage of virtual functions in sequence implementation
        1673 - operator[] of sequence<string> returns TAO_SeqElem_String_Manager
        instead of TAO_String_Manager. Thanks to Mark Paulus <mark dot paulus
        at mci dot com> for reporting this one.
        1930 - Assignment operator for sequences is not exception safe.
        1931 - The length() member function for sequences is not exception-safe.
        1933 - Incomplete implementation of freebuf() for reference types.
        1934 - const version of operator[] for string sequences allows assignment
        1938 - Possible incorrect duplication in sequences of references
        1928 - Assignment from T_mgr to sequence elements does not duplicate
        2417 - Double delete on Transport when using oneways with sync_none
        Thanks to Jan Ohlenburg <jan dot ohlenburg at fit dot fraunhofer dot de>
        for reporting this.
        2355 - oneway op. with timeout crashes client due to server termination
        Thans to Jan Zima <jan dot zima at sofis dot cz> for reporting this.

        Also did several const changes throughout the code

        Fri Apr  7 08:03:12 UTC 2006  Kees van Marle  <kvmarle@remedy.nl>

        * tao/Valuetype_Adapter_Factory.{h,cpp}:
        New files, value type adapter factory

        * tao/tao.mpc:
        Added new files

        * tao/Valuetype/Valuetype_Adapter_Factory_Impl.h:
        Value type adapter factory implementation

        * tao/Valuetype/ValueFactory_Map.{h,cpp}:
        Map isn't a singleton anymore and guard access with a mutex

        * tao/Valuetype/Valuetype_Adapter_Impl.{h,cpp}:
        The value type adapter isn't loaded with service configurator
        anymore, the value type factory is now the one we load on demand

        * tao/ORB.cpp:
        Updated the value type methods to use the new ORB_Core method
        to get the valuetype adapter, is the ORB_Core can't get the
        adapter it will throw already the internal exception

        * tao/ORB_Core.{h,cpp,i}:
        Get the value type adapter factory with svc conf instead of the
        adapter itself. Create a unique instance per orb.

        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp:
        * tao/AnyTypeCode/append.cpp:
        * tao/AnyTypeCode/skip.cpp:
        Changed the way we get the valuetype adapter

        Store the value type factories per orb and made things thread safe.
        This fixes bugzilla bugs 2352 and 23253.

        Thu Apr  6 09:17:25 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport_Connector.cpp:
        Applied fix of bug 2417, let us see what the results are in the
        branch build

        Thu Apr  6 09:08:25 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/POA/FindPOA/FindPOA.cpp:
        * tests/Bug_2349_Regression/client.cpp:
        * tests/Bug_2349_Regression/foo.idl:
        * tests/Bug_2349_Regression/server.cpp:
        Improved tests

        * tao/Adapter_Registry.{h,cpp}:
        Remove the empty throw spec for close and check_close. This way
        exceptions from lower layers are propagated up.

        * tao/ORB_Core.{h,cpp}:
        Removed empty throw spec from shutdown, if there are exceptions from
        a lower layer and as a result we can't shutdown, let the user be
        aware of it. This fixes bugzilla bug 2349

        Mon Apr  3 07:59:25 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO/IDL/be/be_visitor_union/discriminant_ci.cpp
        * TAO/IDL/be/be_visitor_union/union_ch.cpp
        * TAO/IDL/be/be_visitor_union/union_cs.cpp
        * TAO/IDL/be/be_visitor_union_branch/public_ci.cpp
        * tao/GIOPC.{h,cpp,inl}:
        Removed arguments from the _reset method on the union generated,
        these are not used.

        Sun Apr  2 18:56:25 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_exception/exception_ch.cpp
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ch.cpp
        * tao/BooleanSeqC.h
        * tao/CONV_FRAMEC.h
        * tao/CharSeqC.h
        * tao/DomainC.h
        * tao/DoubleSeqC.h
        * tao/FloatSeqC.h
        * tao/IIOPC.h
        * tao/IIOP_EndpointsC.h
        * tao/IOP_IORC.h
        * tao/LongDoubleSeqC.h
        * tao/LongLongSeqC.h
        * tao/LongSeqC.h
        * tao/Messaging_PolicyValueC.h
        * tao/ORB.h
        * tao/ObjectIdListC.h
        * tao/Object_KeyC.h
        * tao/OctetSeqC.h
        * tao/Policy_ForwardC.h
        * tao/Seq_Out_T.h
        * tao/Seq_Out_T.inl
        * tao/ServicesC.h
        * tao/ShortSeqC.h
        * tao/StringSeqC.h
        * tao/ULongLongSeqC.h
        * tao/ULongSeqC.h
        * tao/UShortSeqC.h
        * tao/WCharSeqC.h
        * tao/WStringSeqC.h
        * tao/AnyTypeCode/AnySeqC.h
        * tao/AnyTypeCode/DynamicC.h
        * tao/DynamicAny/DynamicAnyC.h
        * tao/IFR_Client/IFR_BaseC.h
        * tao/IFR_Client/IFR_BasicC.h
        * tao/IFR_Client/IFR_ComponentsC.h
        * tao/IFR_Client/IFR_ExtendedC.h
        * tao/IORManipulation/IORC.h
        * tao/ImR_Client/ImplRepoC.h
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.h
        * tao/PortableServer/PortableServerC.h
        * tao/RTCORBA/RTCORBAC.h
        * tao/RTScheduling/RTSchedulerC.h
        * tao/Strategies/sciop_endpointsC.h
        * tao/Strategies/uiop_endpointsC.h
        Simplified TAO_Seq_Out_T to just use one template argument. Updated
        the IDL compiler for this. Also use false for the release argument
        of generated sequence constructors and add an argument to
        _tao_encode/_tao_decode when generated in a header file to help
        doxygen.

        * TAO_Objref_Out_T.{h,inl}:
        Assinging _var to _out is not allowed according to the spec

        * tao/Messaging/*:
        Removed old AMI mapping. Fixes partly bugzilla bug 2273, need to
        update the IDL compiler yet

        * tao/Exception.h:
        Moved constructors, assignment operator and copy constructor to
        protected now vc6 has been dropped. Also moved
        create_system_exception from TAO_Exceptions class to TAO namespace

        * tao/Messaging/Messaging.cpp:
        * tao/Sync_Invocation.cpp:
        * tao/SystemException.cpp:
        Updated because of the create_system_exception move

        * tao/String_Manager_T.h:
        Renamed String_Manager to String_Manager_T, this way we can have
        TAO::String_Manager and TAO::WString_Manager. These replace
        TAO_String_Manager and TAO_WString_Manager

        * CIAO/tools/Config_Handlers/DnC_Dump.cpp
        * CIAO/tools/Config_Handlers/DnC_Dump.h
        * TAO_IDL/be/be_visitor_array/array.cpp
        * TAO_IDL/be/be_visitor_field/field_ch.cpp
        * orbsvcs/PSS/PSDL_Exception_Visitor.cpp
        * orbsvcs/PSS/PSDL_Node.h
        * orbsvcs/PSS/PSDL_Struct_Visitor.cpp
        * orbsvcs/orbsvcs/HTIOP/htiop_endpointsC.h
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor_T.h
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor_T.i
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.cpp
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.h
        * tao/CORBA_String.h
        * tao/IIOPC.h
        * tao/IIOP_EndpointsC.h
        * tao/IOP_IORC.h
        * tao/String_Manager_T.h
        * tao/String_Traits_Base_T.h
        * tao/Tagged_Profile.h
        * tao/DynamicAny/DynamicAnyC.h
        * tao/IFR_Client/IFR_BaseC.h
        * tao/IFR_Client/IFR_BasicC.h
        * tao/IFR_Client/IFR_ComponentsC.h
        * tao/IFR_Client/IFR_ExtendedC.h
        * tao/ImR_Client/ImplRepoC.h
        * tao/PI/ORBInitInfoC.h
        * tao/Strategies/sciop_endpointsC.h
        * tao/Strategies/uiop_endpointsC.h
        Updated all these files because of TAO::String_Manager and
        TAO::WString_Manager introduction

        * tests/Sequence_Unit_Tests/mock_reference.cpp:
        * tests/Sequence_Unit_Tests/mock_reference.hpp:
        Added counter to count number of marshal calls

        * tests/Sequence_Unit_Tests/bounded_sequence_cdr_ut.cpp:
        * tests/Sequence_Unit_Tests/unbounded_sequence_cdr_ut.cpp:
        Check the right counter, should be marshal.

        * tao/PI/ClientRequestDetails.cpp:
        * tao/PI_Server/ServerRequestDetails.cpp:
        Added missing duplicate call

        * TAO_IDL/be/be_interface.cpp
        * TAO_IDL/be/be_visitor_component/component_cs.cpp
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp
        * TAO_IDL/be/be_visitor_interface/tie_si.cpp
        * TAO_IDL/be/be_visitor_root/root.cpp
        * tao/CurrentC.cpp
        * tao/DomainC.cpp
        * tao/ORB_Core.cpp
        * tao/Object.cpp
        * tao/Object_Ref_Table.cpp
        * tao/PolicyC.cpp
        * tao/Pseudo_VarOut_T.cpp
        * tao/Pseudo_VarOut_T.inl
        * tao/TAOC.cpp
        * tao/AnyTypeCode/Any_Array_Impl_T.cpp
        * tao/AnyTypeCode/Any_Basic_Impl.cpp
        * tao/AnyTypeCode/Any_Basic_Impl_T.cpp
        * tao/AnyTypeCode/Any_Dual_Impl_T.cpp
        * tao/AnyTypeCode/Any_Impl.cpp
        * tao/AnyTypeCode/Any_Impl_T.cpp
        * tao/AnyTypeCode/Any_Special_Impl_T.cpp
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp
        * tao/AnyTypeCode/TypeCode.cpp
        * tao/AnyTypeCode/TypeCode.inl
        * tao/BiDir_GIOP/BiDirPolicyC.cpp
        * tao/CSD_Framework/CSD_Default_Servant_Dispatcher.cpp
        * tao/CSD_Framework/CSD_FrameworkC.cpp
        * tao/CSD_Framework/CSD_POA.cpp
        * tao/CodecFactory/IOP_CodecC.cpp
        * tao/DynamicAny/DynamicAnyC.cpp
        * tao/DynamicInterface/Dynamic_Implementation.cpp
        * tao/DynamicInterface/ExceptionList.cpp
        * tao/DynamicInterface/Request.cpp
        * tao/DynamicInterface/Server_Request.cpp
        * tao/IFR_Client/IFR_BaseC.cpp
        * tao/IFR_Client/IFR_BasicC.cpp
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp
        * tao/IFR_Client/IFR_ComponentsC.cpp
        * tao/IFR_Client/IFR_ExtendedC.cpp
        * tao/IORInterceptor/IORInfoC.cpp
        * tao/IORInterceptor/IORInterceptorC.cpp
        * tao/IORManipulation/IORC.cpp
        * tao/IORManipulation/IORManipulation.cpp
        * tao/IORTable/IORTableC.cpp
        * tao/IORTable/Table_Adapter.cpp
        * tao/ImR_Client/ImplRepoC.cpp
        * tao/ImR_Client/ServerObjectC.cpp
        * tao/Messaging/MessagingC.cpp
        * tao/Messaging/Messaging_No_ImplC.cpp
        * tao/Messaging/Messaging_RT_PolicyC.cpp
        * tao/Messaging/Messaging_SyncScope_PolicyC.cpp
        * tao/Messaging/PollableC.cpp
        * tao/Messaging/TAO_ExtC.cpp
        * tao/PI/ClientRequestInfoC.cpp
        * tao/PI/ClientRequestInterceptorC.cpp
        * tao/PI/InterceptorC.cpp
        * tao/PI/ORBInitInfo.cpp
        * tao/PI/ORBInitInfoC.cpp
        * tao/PI/ORBInitializerC.cpp
        * tao/PI/PICurrentC.cpp
        * tao/PI/PolicyFactoryC.cpp
        * tao/PI/PolicyFactory_Registry.cpp
        * tao/PI/ProcessingModePolicyC.cpp
        * tao/PI/RequestInfoC.cpp
        * tao/PI_Server/ServerRequestInfoC.cpp
        * tao/PI_Server/ServerRequestInterceptorC.cpp
        * tao/PortableServer/AdapterActivatorC.cpp
        * tao/PortableServer/IdAssignmentPolicyC.cpp
        * tao/PortableServer/IdUniquenessPolicyC.cpp
        * tao/PortableServer/ImplicitActivationPolicyC.cpp
        * tao/PortableServer/LifespanPolicyC.cpp
        * tao/PortableServer/Object_Adapter.cpp
        * tao/PortableServer/POAManager.cpp
        * tao/PortableServer/POAManagerC.cpp
        * tao/PortableServer/PS_CurrentC.cpp
        * tao/PortableServer/PortableServerC.cpp
        * tao/PortableServer/RequestProcessingPolicyC.cpp
        * tao/PortableServer/Root_POA.cpp
        * tao/PortableServer/ServantActivatorC.cpp
        * tao/PortableServer/ServantLocatorC.cpp
        * tao/PortableServer/ServantManagerC.cpp
        * tao/PortableServer/ServantRetentionPolicyC.cpp
        * tao/PortableServer/ThreadPolicyC.cpp
        * tao/RTCORBA/RTCORBAC.cpp
        * tao/RTPortableServer/RTPortableServerC.cpp
        * tao/RTScheduling/Current.cpp
        * tao/RTScheduling/RTSchedulerC.cpp
        * tao/TypeCodeFactory/TypeCodeFactoryC.cpp
        * tao/Utils/Server_Main.cpp
        * tao/Valuetype/AbstractBase.cpp:
        Use :: before ::CORBA

        * TAO_IDL/be/be_interface.cpp
        * tao/DomainC.cpp
        * tao/DomainC.inl
        * tao/GIOPC.h
        * tao/PolicyC.cpp
        * tao/PolicyC.h
        * tao/PolicyC.inl
        * tao/WrongTransactionC.cpp
        * tao/AnyTypeCode/Alias_TypeCode.inl
        * tao/AnyTypeCode/Alias_TypeCode_Static.inl
        * tao/AnyTypeCode/BoundsC.cpp
        * tao/AnyTypeCode/Empty_Param_TypeCode.inl
        * tao/AnyTypeCode/Enum_TypeCode.inl
        * tao/AnyTypeCode/Enum_TypeCode_Static.inl
        * tao/AnyTypeCode/Fixed_TypeCode.inl
        * tao/AnyTypeCode/Objref_TypeCode.inl
        * tao/AnyTypeCode/Objref_TypeCode_Static.inl
        * tao/AnyTypeCode/Recursive_Type_TypeCode.cpp
        * tao/AnyTypeCode/Sequence_TypeCode.inl
        * tao/AnyTypeCode/Sequence_TypeCode_Static.inl
        * tao/AnyTypeCode/String_TypeCode.inl
        * tao/AnyTypeCode/String_TypeCode_Static.inl
        * tao/AnyTypeCode/Struct_TypeCode.inl
        * tao/AnyTypeCode/Struct_TypeCode_Static.inl
        * tao/AnyTypeCode/Union_TypeCode.inl
        * tao/AnyTypeCode/Union_TypeCode_Static.inl
        * tao/AnyTypeCode/Value_TypeCode.inl
        * tao/AnyTypeCode/Value_TypeCode_Static.inl
        * tao/BiDir_GIOP/BiDir_Policy_i.cpp
        * tao/CodecFactory/IOP_CodecC.cpp
        * tao/Domain/DomainS.cpp
        * tao/DynamicAny/DynamicAnyC.cpp
        * tao/IFR_Client/IFR_BaseC.cpp
        * tao/IFR_Client/IFR_BaseC.h
        * tao/IFR_Client/IFR_BaseC.inl
        * tao/IFR_Client/IFR_BasicC.cpp
        * tao/IFR_Client/IFR_BasicC.h
        * tao/IFR_Client/IFR_BasicC.inl
        * tao/IFR_Client/IFR_ComponentsC.cpp
        * tao/IFR_Client/IFR_ComponentsC.inl
        * tao/IFR_Client/IFR_ExtendedC.cpp
        * tao/IFR_Client/IFR_ExtendedC.h
        * tao/IFR_Client/IFR_ExtendedC.inl
        * tao/IORManipulation/IORC.cpp
        * tao/IORTable/IORTableC.cpp
        * tao/ImR_Client/ImplRepoC.cpp
        * tao/ImR_Client/ImplRepoC.inl
        * tao/ImR_Client/ServerObjectC.cpp
        * tao/ImR_Client/ServerObjectC.inl
        * tao/Messaging/Connection_Timeout_Policy_i.cpp
        * tao/Messaging/MessagingC.cpp
        * tao/Messaging/MessagingC.inl
        * tao/Messaging/Messaging_Policy_i.cpp
        * tao/Messaging/PollableC.cpp
        * tao/PI/InvalidSlotC.cpp
        * tao/PI/ORBInitInfoC.cpp
        * tao/PI/PIForwardRequestC.cpp
        * tao/PortableServer/ForwardRequestC.cpp
        * tao/PortableServer/POAManagerC.cpp
        * tao/PortableServer/PS_CurrentC.cpp
        * tao/PortableServer/PortableServerC.cpp
        * tao/RTCORBA/RTCORBAC.cpp
        * tao/RTCORBA/RT_Policy_i.cpp
        * tao/RTScheduling/RTSchedulerC.cpp
        * tao/TypeCodeFactory/Recursive_TypeCode.inl
        * tao/Valuetype/StringValueC.inl
        Removed ACE_NESTED_CLASS

        * TAO_IDL/ast/ast_type.cpp
        * TAO_IDL/be/be_interface.cpp
        * TAO_IDL/be/be_visitor_component/component_ci.cpp
        * TAO_IDL/be/be_visitor_component/component_cs.cpp
        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp
        * TAO_IDL/be/be_visitor_interface/amh_ss.cpp
        * TAO_IDL/be/be_visitor_interface/interface_ci.cpp
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp
        * TAO_IDL/be/be_visitor_interface/interface_is.cpp
        * TAO_IDL/be/be_visitor_operation/ami_cs.cpp
        * TAO_IDL/be/be_visitor_operation/operation.cpp
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ci.cpp
        * TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp
        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ss.cpp
        Removed generation of ACE_NESTED_CLASS, just use A::B instead

        All changes below is the merge of the branch sequenceupdate to
        sequpdate2. This is the new sequence implementation for TAO.

        * tao/Array_VarOut_T.h:
        Only do an empty forward declaration of Array_Traits. This will
        make sure that we have to do each specialization explicitly, if
        we lack one, we get a compile error instead of this empty default
        one.

        * tao/Objref_VarOut_T.h:
        Only do an empty forward declaration of Objref_Traits. This will
        make sure that we have to do each specialization explicitly, if
        we lack one, we get a compile error instead of this empty default
        one.

        * tao/Basic_Types.h:
        Updated the string types, these are implemented by a template now.

        * tao/BooleanSeqC.{h,cpp}:
        * tao/CharSeqC.{h,cpp}:
        * tao/CONV_FRAMEC.{h,cpp}:
        * tao/CurrentC.{h,cpp}:
        * tao/DomainC.{h,cpp}:
        * tao/DoubleSeqC.{h,cpp}:
        * tao/FloatSeqC.{h,cpp}:
        * tao/WStringSeqC.{h,cpp}:
        * tao/LongSeqC.{h,cpp}:
        * tao/WCharSeqC.{h,cpp}:
        * tao/Object_KeyC.{h,cpp}:
        * tao/ObjectIdListC.{h,cpp}:
        * tao/IIOP_EndpointsC.{h,cpp}:
        * tao/LongLongSeqC.{h,cpp}:
        * tao/IIOPC.{h,cpp}:
        * tao/IOP_IORC.{h,cpp}:
        * tao/LongDoubleSeqC.{h,cpp}:
        * tao/Messaging_PolicyValueC.{h,cpp}:
        * tao/OctetSeqC.{h,cpp}:
        * tao/Policy_ForwardC.{h,cpp}:
        * tao/PolicyC.{h,cpp}:
        * tao/ServicesC.{h,cpp}:
        * tao/ShortSeqC.{h,cpp}:
        * tao/StringSeqC.{h,cpp}:
        * tao/TAOC.{h,cpp}:
        * tao/ULongLongSeqC.{h,cpp}:
        * tao/ULongSeqC.{h,cpp}:
        * tao/UShortSeqC.{h,cpp}:
        * tao/AnyTypeCode/AnySeqC.{h,cpp}:
        * tao/AnyTypeCode/DynamicC.{h,cpp}:
        * tao/DynamicAny/DynamicAnyC.{h,cpp}:
        * tao/IFR_Client/IFR_ExtendedC.{h,cpp}:
        * tao/IFR_Client/IFR_ComponentsC.{h,cpp}:
        * tao/IFR_Client/IFR_BasicC.{h,cpp}:
        * tao/IFR_Client/IFR_BaseC.{h,cpp}:
        * tao/ImR_Client/ImplRepoC.{h,cpp}:
        * tao/IORManipulation/IORC.{h,cpp}:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.{h,cpp}:
        * tao/PortableServer/PortableServerC.{h,cpp}:
        * tao/RTCORBA/RTCORBAC.{h,cpp}:
        * tao/RTScheduling/RTSchedulerC.{h,cpp}:
        * tao/Strategies/sciop_endpointsC.{h,cpp}:
        * tao/Strategies/uiop_endpointsC.{h,cpp}:
        * orbsvcs/orbsvcs/HTIOP/htiop_endpointsC.{h,cpp}:
        Updated all these files because of the changes to the sequence
        implementation. The base classes are changed including the way we
        marshal and demarshal sequences. The argument to the marshal method
        is also const.

        * tao/Bounded_Array_Allocation_Traits.h:
        * tao/Bounded_Reference_Allocation_Traits_T.h:
        * tao/Bounded_Value_Allocation_Traits_T.h:
        New allocation traits for bounded sequences

        * tao/Value_Traits_T.h:
        New value traits.

        * tao/Bounded_Array_Sequence_T.h:
        New template for Bounded Array Sequences

        * tao/Bounded_Basic_String_Sequence_T.h:
        * tao/Bounded_String_Sequence_T.h:
        * tao/Bounded_Wstring_Sequence_T.h:
        New template for bounded strings, derived are string and wstring
        bounded sequences

        * tao/Bounded_Object_Reference_Sequence_T.h:
        New template for bounded object reference sequences

        New allocation traits for bounded reference

        * tao/Bounded_Sequence_CDR_T.h:
        Template method for sequence marshal/demarshal

        * tao/corba.h:
        Updated includes, Managed_Types.h is replaced with
        String_Manager_T.h

        * tao/CORBA_String.{h,cpp,inl}:
        The CORBA::String_var/_out and CORBA::WString_var/_out are now
        implemented with the new TAO::String_var/_out template

        * tao/Generic_Sequence_T.h:
        New generic sequence template

        * tao/Managed_Types.{h,cpp,i}:
        Removed these files

        * tao/MProfile.cpp:
        Initialise pointers with 0 and fixed retrieval of a policy

        * tao/Object.{h,cpp}:
        Made the argument of the marshal method const

        * tao/operation_details.i:
        Changed the way we reset the service info

        * tao/ORB.h:
        Updated all typedefs in this file

        * tao/Policy_Set.{h,cpp.i}:
        Made the get_policy_by_index const and fixed the
        set_policy_overrides to work with the new sequences, as a result
        the workarounds could be removed

        * tao/Sequence_T.{cpp,i}:
        Removed these files

        * tao/Sequence_T.h:
        Include all new sequence template files, makes it easy for old apps
        to keep compiling

        * tao/String_Alloc.{h,cpp}:
        All string allocation methods

        * tao/VarOut_T.h:
        Removed THIS_OUT_TYPE typedef

        * tao/DynamicInterface/Request.h:
        Removed include of Sequence.h, not needed

        * tao/Profile.h:
        Updated typedef for TAO_opaque

        * tao/Object_Reference_Sequence_Element_T.h:
        * tao/Object_Reference_Traits_Base_T.h:
        * tao/Object_Reference_Traits_T.h:
        * tao/Range_Checking_T.h:
        New files

        * tao/Seq_Out_T.{h,inl}:
        Removed TAO_MngSeq_Out_T, not needed anymore

        * tao/Sequence.{h,cpp,i}:
        Removed

        * tao/Seq_Var_T.{h,cpp.inl}:
        Removed TAO_MngSeq_Var_T, not needed anymore

        * tao/String_Manager_T.h:
        TAO string manager as template, new file

        * tao/String_Sequence_Element_T.h:
        Element in a string sequence

        * tao/String_Traits_Base_T.h:
        * tao/String_Traits_T.h:
        String traits

        * tao/Unbounded_Array_Allocation_Traits_T.h
        * tao/Unbounded_Array_Sequence_T.h
        * tao/Unbounded_Basic_String_Sequence_T.h
        * tao/Unbounded_Object_Reference_Sequence_T.h
        * tao/Unbounded_Octet_Sequence_T.h
        * tao/Unbounded_Reference_Allocation_Traits_T.h
        * tao/Unbounded_Sequence_CDR_T.h
        * tao/Unbounded_String_Sequence_T.h
        * tao/Unbounded_Value_Allocation_Traits_T.h
        * tao/Unbounded_Value_Sequence_T.h
        * tao/Unbounded_Wstring_Sequence_T.h
        Unbounded sequence files

        * tao/diffs/Object_Key.diff:
        Updated

        * tao/PI/ClientRequestInfo.cpp:
        * tao/PI_Server/ServerRequestInfo.cpp:
        Removed temporary object usage

        * tao/RTCORBA/RT_Stub.cpp:
        * tao/RTScheduling/Request_Interceptor.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
        Updated for the fact that an object sequence now returns a _ptr
        on the subscript operators instead of the _var which wasn't
        confirming to the CORBA C++ mapping

        * tao/RTScheduling/Current.h:
        Updated IdType typedef

        * tao/Valuetype/Bounded_Valuetype_Allocation_Traits_T.h
        * tao/Valuetype/Bounded_Valuetype_Sequence_T.h
        * tao/Valuetype/Unbounded_Valuetype_Allocation_Traits_T.h
        * tao/Valuetype/Unbounded_Valuetype_Sequence_T.h
        * tao/Valuetype/Valuetype_Sequence_Element_T.h
        * tao/Valuetype/Valuetype_Traits_Base_T.h
        * tao/Valuetype/Valuetype_Traits_T.h
        New sequence implementated for valuetypes

        * tao/Valuetype/Sequence_T.{cpp,inl}:
        Removed

        * tao/Valuetype/Sequence_T.h:
        Just include the new files, easier for backward compatibility

        * tao/Valuetype/Value_VarOut_T.{h,cpp}:
        Just define an empty Value_Traits, make sure we get all
        specializations

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_traits.cpp:
        * TAO_IDL/be/be_visitor_array/array_ch.cpp:
        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/array_cs.cpp:
        * TAO_IDL/be/be_visitor_array/array_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_ci.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
        * TAO_IDL/be_include/be_visitor_traits.h:
        Updated for new sequence implementation

        * examples/CSD_Strategy/ThreadPool4/ClientTask.cpp:
        * examples/CSD_Strategy/ThreadPool5/ClientTask.cpp:
        * examples/Load_Balancing/Identity_Client.cpp:
        * examples/Load_Balancing_persistent/Identity_Client.cpp:
        * examples/POA/NewPOA/NewPOA.cpp:
        * examples/POA/POA_BiDir/POA_BiDir.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_ClientEngine.cpp:
        * tests/DynAny_Test/test_dynsequence.cpp:
        * tests/Sequence_Unit_Tests/*:
        * tests/ORT/ServerRequestInterceptor.cpp:
        * tests/Param_Test/big_union.cpp:
        *
        tests/Portable_Interceptors/ForwardRequest/Client_ORBInitializer.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:
        * orbsvcs/orbsvcs/DsLogAdmin.idl:
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.{cpp,i}:
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.{h,cpp,i}
        * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.cpp
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp
        * orbsvcs/orbsvcs/IFRService/EnumDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/HomeDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/OperationDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ObjectReferenceFactory.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.h:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.h:
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.{h,cpp}
        * orbsvcs/tests/AVStreams/Component_Switching/distributer.cpp:
        * orbsvcs/tests/AVStreams/Component_Switching/receiver.cpp:
        * orbsvcs/tests/AVStreams/Component_Switching/sender.cpp:
        * orbsvcs/tests/Bug_1393_Regression/client.cpp:
        * orbsvcs/tests/FT_App/FT_Client.cpp:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/idl3_client.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.cpp:
        *
        orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/IOGR_Maker.cpp:
        * tests/RTScheduling/Current/Thread_Task.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:
        Updated for sequence implementation

        * tests/Sequence_Unit_Tests/*:
        Removed files that are now in the core TAO lib

Wed Apr 19 07:48:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2503_Regression/*:
          New regression for bug 2503. Thanks to Carlos O'Ryan for creating
          this test

Tue Apr 18 20:51:48 2006  Wallace Zhang  <zhangw@ociweb.com>

        * TAO version 1.5.1 released.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
