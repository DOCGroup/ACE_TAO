Tue Jan 24 20:37:55 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IIOP_Connection_Handler.cpp:

          Extended Simon McQueen's Fri Jan 20 17:11:49 UTC 2006 addition
          of support for SO_KEEPALIVE to include taking the value from
          RTCORBA::TCPPrototocolProperties::keep_alive, when RTCORBA is
          used, and the application is using a Server or Client
          ProtocolPolicy.

        * docs/rtcorba/issues.html:

          Removed lack of support for the keep alive protocol property
          from the list of issues.

Tue Jan 24 19:35:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Borland/ChatClientWnd.cpp:
          Fixed parameter unused warnings

Tue Jan 24 15:24:58 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.h:

          Calling create_reference_with_id() (via create_log_reference) in
          the constructor and/or ::init() appears to result in an infinate
          loop within the ORB.  Until that's resolved, defer obtaining the
          logs object reference until it's needed.

Tue Jan 24 14:36:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Concurrency/Concurrency_Loader.h:
          Fixed export macro in ACE_FACTORY_DECLARE

Tue Jan 24 10:20:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * NEWS:
          Added -ORBUseLocalMemoryPool option info.

Mon Jan 23 12:46:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/AdvSlot/client.cpp:
        * tests/Portable_Interceptors/AdvSlot/server.cpp:
          Fixed compile warnings

Sun Jan 22 18:32:03 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Property/CosPropertyService_i.h:

          Use _Serv versions of the export macros.  It seems I missed
          some that should have been part of this:

          Tue Jan 17 22:26:52 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

Sun Jan 22 18:24:37 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Concurrency/Concurrency_Loader.cpp:

          Update ACE_FACTORY_DEFINE() that wasn't updated when splitting
          the Concurrency Service libraries.

Sun Jan 22 16:54:55 UTC 2006  Boris Kolpackov  <boris@kolpackov.net>

        * tests/Portable_Interceptors/AdvSlot/server.cpp:

          Fixed a problem with VC6.

Sun Jan 22 02:42:21 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.h:

          Added operator== and operator!= for IDL generated types
          DsLogAdmin::QoSList and DsLogAdmin::TimeInterval. Use them to
          compare old and new log attribute values to decide whether to
          send an AttributeValueChange event.

Sun Jan 22 02:34:02 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.h:

          Added a new member variable to store the log channel's object
          reference.  Until now, the code was calling _this() each time
          the reference was needed.  Not only was this inefficient (the
          reference is a field of each of the the structures used for log
          notification events, so it's needed relatively frequently), but
          also it resulted in the servant being activated in the RootPOA,
          so a transient rather than persistent IOR was returned.

        * orbsvcs/orbsvcs/Log/LogNotification.cpp:

          The event's logref field wasn't being set in state_change() and
          threshold alarm(), even though the log channel object reference
          was being passed to the methods.

Sat Jan 21 01:56:30 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log_i.cpp:

          Call reset_capacity_alarm_threshold () in set_log_full_action()
          if the value is changed.

          If the log full action is DsLogAdmin::halt, capacity threshold
          alarms are triggered when the size of a log exceeds one if its
          capacity alarm thresholds; if the log full action is ::wrap,
          capacity threshold alarms are triggered "as if coupled to a
          guage that counts from zero to the highest capacity threshold
          value".  The specification doesn't describe required behavior
          when changing from one to the other.  Since the recordkeeping
          needed for each option is so different, resetting may be the
          only realistic option --- at least that way we won't be using
          one set of data for the other.

        * orbsvcs/orbsvcs/Log_i.cpp:

          The current revision of the log service spec is inconsistent
          whether an AttributeValueChange event should generated only if
          the attribute's value actually changed or whether it should be
          sent unconditionally.  TAO's log service implements the former,
          which I believe to be the most useful behavior.  Nevertheless,
          I've filed a defect report with the OMG for clarification.  I've
          also added a block comment to this effect before each instance
          to alert future maintainers.

Sat Jan 21 01:02:46 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log_i.cpp:
        * orbsvcs/orbsvcs/Log_i.h:

          Changed set_week_mask() to avoid recomputing week_intervals_,
          updating the record store, and sending an AttributeValueChange
          event if the new mask has the same value as the old.

          Added operator== and operator!= for many IDL generated types and
          sequences.  Use them to compare old and new log attribute values
          to decide whether to send an AttributeValueChange event.

        * orbsvcs/orbsvcs/Log_i.cpp:

          Although set_week_mask() updated week_intervals_ (an optimized
          representation) from the new mask, it didn't actually save it;
          this resulted in get_week_mask() returning the original value.

Fri Jan 20 17:11:49 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * tao/IIOP_Connection_Handler.cpp:
        * tao/ORB_Core.cpp:
        * tao/params.h:
        * tao/params.i:
        * tao/params.cpp:

          Add configuration option -ORBKeepalive to allow users to specify
          that the SO_KEEPALIVE option be set on TCP sockets.

          This fixes bug #2374.

        * docs/Options.html:

          Add documentation for the above.

Fri Jan 20 16:30:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * docs/Options.html
        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/Resource_Factory.cpp
        * tao/Resource_Factory.h
        * tao/default_resource.cpp
        * tao/default_resource.h
          Fix for Bug 2373.
          Add run-time option -ORBUseLocalMemoryPool (0|1) which defaults
          to the compile time option TAO_USES_LOCAL_MEMORY_POOL.

Fri Jan 20 15:30:00 UTC 2006  Simon Massey  <sma@prismtech.com>

        * tao/CDR.cpp:
        * tao/CDR.h:
        * tao/Synch_Reply_Dispatcher.cpp:
          Fix for Bug 2372.
          Possiably unnecessary reply_cdr_.clone_from() inside
          TAO_Synch_Reply_Dispatcher::dispatch_reply() averted.

Fri Jan 20 11:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/AdvSlot/*:
          Added new regression from Boris Kolpackov
          <boris at dre dot vanderbilt dot edu> for a bug with PI. Not fixed
          yet, but having a regression will make finding the problem a lot
          easier

Fri Jan 20 11:18:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/ORBInitializer_Registry_Impl.cpp:
          Fixed bug related to the slot functionality of PICurrent, when the
          slot count is not equal to zero and there is no PICurrent yet,
          then force the creation of PICurrent by the ORB to make sure we
          don't loose the slot_count. Thanks to Boris Kolpackov
          <boris at dre dot vanderbilt dot edu> for providing the patch

Thu Jan 19 02:45:48 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log_i.cpp:

          Call reset_capacity_alarm_threshold () in set_max_size () and
          set_capacity_alarm_thresholds () if the value is changed.  If
          either the max size or the threshold list is changed, the old
          capacity index no longer makes sense.

          Reseting the index means that a ThresholdAlarm event will be
          sent after the next threshold is crossed.  It is unclear whether
          this is the correct behavior.  An argument could be made that an
          event should be sent for each threshold that has already been
          crossed given the new max size or capacity alarm threshold list.

          Unfortunately the current version of the specification does not
          describe what is the correct behavior.

Wed Jan 18 23:35:24 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerate.

        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:

          Fix typos in symbol export header file names.

Wed Jan 18 19:43:11 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/RTEventLogConsumer.h:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/RTEventLogNotification.h:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.h:

          Now that we use the *_Serv_Export versions of the symbol export
          macros, we need to #include "*_serv_export.h"

Wed Jan 18 19:38:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Slot/*:
          Added new regression from Boris Kolpackov
          <boris at dre dot vanderbilt dot edu> for a bug with PI. Not fixed
          yet, but having a regression will make finding the problem a lot
          easier

Wed Jan 18 18:41:09 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Concurrency/CC_Lock.h:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSet.h:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSetFactory.h:
        * orbsvcs/orbsvcs/Concurrency/Concurrency_Utils.h:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.h:

          Now that we use the *_Serv_Export versions of the symbol export
          macros, we need to #include "*_serv_export.h"

Wed Jan 18 13:44:07 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tao/RTScheduling/Current.h:
        * tao/RTScheduling/Current.cpp:
        * tests/RTScheduling/Current/Thread_Task.cpp:
        * tests/RTScheduling/DT_Spawn/Thread_Action.h:
        * tests/RTScheduling/DT_Spawn/test.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:

          Reverted a portion of my memory leak changes.  I was mistaken as
          to the reference counting.

        * tests/RTScheduling/VoidData/test.h:

          Dereference the "something" pointer as was most likely the
          original intention.

Wed Jan 18 01:42:04 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * NEWS:

          Update for splitting ORB service libraries.

Tue Jan 17 23:03:46 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Logging_Service/RTEvent_Logging_Service/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

Tue Jan 17 22:26:52 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Concurrency/CC_Lock.h:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSet.h:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSetFactory.h:
        * orbsvcs/orbsvcs/Concurrency/Concurrency_Loader.h:
        * orbsvcs/orbsvcs/Concurrency/Concurrency_Utils.h:
        * orbsvcs/orbsvcs/Log/RTEventLogConsumer.h:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/RTEventLogNotification.h:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.h:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.h:

          Use _Serv_ version of the symbol export macros.

Tue Jan 17 20:36:35 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.mpc:
          Update project to inherit from rteventlogadmin_serv.mpb ---
          rteventlogadmin.mpb now only brings in the client stubs.

        * orbsvcs/orbsvcs/TAO_RTEventLogAdmin.pc.in:
        * orbsvcs/orbsvcs/TAO_RTEventLogAdmin_Serv.pc.in:
        * orbsvcs/orbsvcs/TAO_RTEventLogAdmin_Skel.pc.in:

          New files, pkg-template files for RTEventLogAdmin client stub,
          servant skeleton, and service implementation libraries.

        * orbsvcs/orbsvcs/Log/rteventlog_serv_export.h:
        * orbsvcs/orbsvcs/Log/rteventlog_skel_export.h:

          New export headers for RTEventLogAdmin servant skeleton and
          service implementation libraries.

        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:

          Split the RTEventLogAdmin Service (A varient of the OMG Telecom
          Logging Service that uses TAO's Real-Time Event channels) into
          three libraries: RTEventLogAdmin, RTEventLogAdmin_Skel, and
          RTEventLogAdmin_Serv for client stubs, servant skeletons, and
          service implementation respectively.

Tue Jan 17 13:31:40 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/main.cpp:

          Changed #include to use "" instead of <>.

Tue Jan 17 02:32:37 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * orbsvcs/orbsvcs/TAO_RTEvent.pc.in:
        * orbsvcs/orbsvcs/TAO_RTEvent_Serv.pc.in:
        * orbsvcs/orbsvcs/TAO_RTEvent_Skel.pc.in:

          New files, pkg-template files for RTEvent client stub,
          servant skeleton, and service implementation libraries.

        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent_Serv.mpc:
        * orbsvcs/orbsvcs/RTEvent_Skel.mpc:

          Added Pkgconfig_Files section for pkg-config templates.

Tue Jan 17 02:21:56 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/TAO_CosEvent_Serv.pc.in:

          Somehow this pkg-config template was describing the
          CosNaming_Serv library.

Tue Jan 17 01:50:24 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.h:

          Change type of property_lookup_ map from Any_var to Any, similar
          to what was done for the Notify_Constraint_Visitor some time
          ago.  This allows us to avoid dynamically allocating Anys in
          the constructor for increased performance and reliability.

          I've measured a ~10% performance boost from this change.

Mon Jan 16 17:57:53 UTC 2006  William Otte  <wotte@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/AV.mpc

          Fixed a linking error on OS X.

Mon Jan 16 16:49:27 UTC 2006  Olli Savia  <ops@iki.fi>

        * tao/AnyTypeCode/SystemExceptionA.cpp:
        * tao/Exception.h:
        * tao/RTScheduling/Current.cpp:
        * tao/SystemException.h:
        * tao/SystemException.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_client.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:
          Get rid of ACE_HAS_PREDEFINED_THREAD_CANCELLED_MACRO.
          If macro THREAD_CANCELLED is defined we now simply undef it.

Mon Jan 16 14:17:47 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tao/AnyTypeCode/Any_Special_Impl_T.cpp:

          Delete the stored memory in _tao_decode() before calling
          demarshal_value() to avoid leaking memory.

        * tao/RTScheduling/Current.h:
        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/Distributable_Thread.h:
        * tao/RTScheduling/RTScheduler_Initializer.cpp:
        * tao/RTScheduling/Request_Interceptor.h:
        * tao/RTScheduling/Request_Interceptor.cpp:

          Corrected various misuses of memory management.

        * tests/CodeSets/simple/client.cpp:
        * tests/CodeSets/simple/server.cpp:

          Added memory cleanup code so these tests do not contribute to
          the memory leak list.

        * tests/OBV/TC_Alignment/test_i.cpp:

          Call shutdown() on the ORB from within test_i::shutdown() instead
          of destroy().  Calling destroy() within this context is not
          allowed by CORBA 2.3.

        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/test_i.cpp:

          Call shtdown() on the ORB with a wait_for_completion of zero
          instead of 1.  The later is not allowed by CORBA 2.3.

        * tests/Portable_Interceptors/IORInterceptor/server.cpp:

          This test registers a portable interceptor with the ORB.  If
          destroy() is not called on the ORB the interceptor initializer
          will be leaked.

        * tests/Queued_Message_Test/Queued_Message_Test.cpp:

          The TAO_Asynch_Queued_Message needs to know if it is allocated on
          the heap in order to clean itself properly.

        * tests/RTScheduling/Current/Thread_Task.h:
        * tests/RTScheduling/Current/Thread_Task.cpp:
        * tests/RTScheduling/Current/test.cpp:
        * tests/RTScheduling/DT_Spawn/Thread_Action.h:
        * tests/RTScheduling/DT_Spawn/test.cpp:
        * tests/RTScheduling/Scheduler.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_client.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_server.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:
        * tests/RTScheduling/Thread_Cancel/test.cpp:
        * tests/RTScheduling/VoidData/test_client.cpp:

          Corrected various misuses of memory management.

Mon Jan 16 05:51:14 2006  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * orbsvcs/examples/ImR/Combined_Service/test.cpp (assertTrue):
          Make sure to #include <string> so that "std::" makes sense.
          Thanks to Ian Zagorskih <ianzag at megasignal dot com> for this
          fix.  This fixes bugid 2362.

Sun Jan 15 19:18:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1869_Regression/client.cpp:
          Fixed conversion warning

Sun Jan 15 18:54:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1869_Regression/client.cpp:
          Fixed unused argument warning

Sun Jan 15 05:44:45 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Concurrency_Service/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/Makefile.am:
        * orbsvcs/tests/AVStreams/Component_Switching/Makefile.am:
        * orbsvcs/tests/AVStreams/Full_Profile/Makefile.am:
        * orbsvcs/tests/AVStreams/Latency/Makefile.am:
        * orbsvcs/tests/AVStreams/Modify_QoS/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/Makefile.am:
        * orbsvcs/tests/AVStreams/Multiple_Flows/Makefile.am:
        * orbsvcs/tests/AVStreams/Pluggable/Makefile.am:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/Makefile.am:
        * orbsvcs/tests/Concurrency/Makefile.am:
        * orbsvcs/tests/Property/Makefile.am:

          Regenerated.

        * orbsvcs/tests/Property/Property.mpc:

          Update project to inherit from property_serv.mpb, as this
          test uses a collocated concurrency service --- property.mpb
          now only brings in the client stubs.

        * orbsvcs/Concurrency_Service/Concurrency_Service.mpc:

          Update project to inherit from concurrency_serv.mpb, as this
          test uses a collocated concurrency service --- concurrency.mpb
          now only brings in the client stubs.

        * orbsvcs/orbsvcs/TAO_CosConcurrency.pc.in:
        * orbsvcs/orbsvcs/TAO_CosConcurrency_Serv.pc.in:
        * orbsvcs/orbsvcs/TAO_CosConcurrency_Skel.pc.in:

          Split TAO_CosConcurrency.pc.in pkg-config template into one for
          each library.

        * orbsvcs/orbsvcs/Concurrency/concurrency_serv_export.h:
        * orbsvcs/orbsvcs/Concurrency/concurrency_skel_export.h:

          New export headers for CosConcurrency servant skeleton and
          service implementation libraries.

        * orbsvcs/orbsvcs/CosConcurrency.mpc:

          Split CosConcurrency Service into three libraries:
          CosConcurrency, CosConcurrency_Skel, and CosConcurrency_Serv for
          client stubs, servant skeletons, and service implementation
          respectively.

        * orbsvcs/orbsvcs/TAO_CosProperty.pc.in:
        * orbsvcs/orbsvcs/TAO_CosProperty_Serv.pc.in:
        * orbsvcs/orbsvcs/TAO_CosProperty_Skel.pc.in:

          Split TAO_CosProperty.pc.in pkg-config template into one for
          each library.

        * orbsvcs/orbsvcs/Property/property_serv_export.h:
        * orbsvcs/orbsvcs/Property/property_skel_export.h:

          New export headers for CosProperty servant skeleton and service
          implementation libraries.

        * orbsvcs/orbsvcs/CosProperty.mpc:

          Split CosProperty Service into three libraries:
          CosProperty, CosProperty_Skel, and CosProperty_Serv for client
          stubs, servant skeletons, and service implementation
          respectively.

Sun Jan 15 05:35:57 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:
        * orbsvcs/tests/InterfaceRepo/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/Makefile.am:

          Added autoconf build support for this new test.

Sat Jan 14 23:44:39 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.h:

          Changed TAO_Log_i::set_capacity_alarm_thresholds() to compare
          the new threshold list against the old.  If they're the same,
          we don't send a change notification.

          Added operator== and operator!= for DsLogAdmin::
          CapacityAlarmThresholdList.

Sat Jan 14 16:29:47 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/TAO_CosEvent.pc.in:
        * orbsvcs/orbsvcs/TAO_CosNaming.pc.in:
        * orbsvcs/orbsvcs/TAO_CosTrading.pc.in:
        * orbsvcs/orbsvcs/TAO_DsLogAdmin.pc.in:
        * orbsvcs/orbsvcs/TAO_ETCL.pc.in:

          Changed to Require TAO_AnyTypeCode.

Sat Jan 14 09:35:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/ExceptionHolder_i.h:
          Fixed casing of include

Fri Jan 13 13:24:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1869_Regression/*:
          Added this regression to cvs, no fix yet and regression could
          be improved more to give more output to the user

Fri Jan 13 12:49:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/ExceptionHolder_i.{h,cpp}:
        * tao/Messaging/Messaging_ORBInitializer.{h,cpp}:
          Added a OBV Factory for the ExceptionHolder. At the moment we use
          AMI with collocation disabled the ExceptionHolder is marshaled
          and then tried to be demarshaled and then we need an OBV factory.
          For system exceptions things work fine now, for user exceptions
          always an UNKNOWN exception occurs in the _excep method, the
          meta data which user exceptions we could throw is not available
          in the current callstack so we just can't recreate the correct
          user exception, have to see how we could fix that but
          this is at least a good step in the direction. This only works
          for the new AMI mapping. This is part of the fix for bugzilla
          bug 2350. Thanks to Alan Stokes <alan at alanstokes dot org dot uk>
          for reporting this.

Fri Jan 13 12:30:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/simple_client.cpp:
          Print out the exception when we get a not expected exception

Fri Jan 13 11:43:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype/ValueBase.cpp:
          When no OBV Factory is found, throw a MARSHAL exception with
          minor code 1 and completed MAYBE. This fixes bugzilla bug
          2354

Fri Jan 13 04:57:20 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:

          Changed to #include "Thread_Lane_Resources.h".  This was missed
          in this change:

          Thu Jan 12 00:31:27 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

          because I didn't have SSL enabled at the time.

Thu Jan 12 19:27:12 UTC 2006  Tim Bradley  <bradley_t@ociweb.com>

        * tests/Portable_Interceptors/Collocated/Dynamic/Collocated_Test.cpp
        * tests/Portable_Interceptors/Collocated/Dynamic/Server_Task.cpp
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Collocated_Test.cpp
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Server_Task.cpp

          The files listed above were modified to fix a problem that was
          observed in two similar tests.  The original problem was observed
          to occur when the test application was shutting down, and is not
          100% repeatable.  It is theorized that a race condition in the
          existing test code, causing the tests to sometimes succeed.

          When the test applications did fail, some platforms caused the
          message "pure virtual method called" to be printed to standard
          error.  A core file, created using Linux (FC3), showed a somewhat
          corrupt stack trace pointing to the implementation of the
          shutdown() operation in the Visual_i (servant) class (test_i.cpp).

          Both tests are very similar, and the following description applies
          to both.  Note that there are details not being described (such
          as the Portable Interceptor usage), but are not important to the
          problem that was fixed (hopefully).

          The test is a "collocation" (thru_poa) test, consisting of one
          application/executable.  A single IDL interface (Visual)
          is declared, and a servant class (Visual_i) is defined that
          implements the interface.

          The test application creates two active objects (ClientTask and
          ServerTask), and two ORBs.  Each active object is given its own
          ORB to use, and then each is activated in a separate thread.
          The "mainline" thread waits until both of the task threads complete,
          performs the expected vs. actual results comparison, and then exits.

          The ServerTask::svc() does the following:

            - Obtain the RootPOA
            - Create/activate the Visual_i servant object
            - Save the IOR to a file
            - Run the (server) ORB event loop.
            - Destroy the RootPOA
            - Destroy the (server) ORB.

          The ClientTask::svc() does the following:

            - Read/convert/narrow the server-side's IOR file into a
              "Visual" object reference (using the ClientTask's ORB).
            - Invoke each of the operations on the (Visual) object reference.
            - Invoke the "shutdown" operation on the (Visual) object reference.

          The problem lies with the servant's (Visual_i) implementation of
          the "shutdown" operation.  The IDL interface, Visual, declares the
          "shutdown" operation to be a "oneway" operation.  The
          Visual_i::shutdown() method is implemented to invoke
          "shutdown(false)" on the (server) ORB.  This is a rather common
          approach taken by many other TAO tests, but the approach doesn't
          work here because the servant object is collocated (thru_poa).

          The "oneway" operations do not work the same way under collocated
          versus remote request contexts.  A collocated oneway request gets
          treated as if it were a synchronous request, for it is the client's
          "requesting thread" that carries out the entire dispatching and
          invocation of the appropriate method on the collocated servant
          object.  Control is not returned to the client's requesting thread
          until the request is completely finished.

          So, the steps that lead up to the problem in the tests is that
          the ClientTask's thread is the thread that ends up invoking
          shutdown() on the (server) ORB.  At some point soon afterwards,
          and before the ClientTask's thread has been given back control,
          the (server) ORB event loop being run in the ServerTask completes.
          This causes the ServerTask thread to continue on in its logic,
          which is to destroy the (server) RootPOA, destroy the (server) ORB,
          and then go away (the ServerTask thread, that is).  Meanwhile,
          the ClientTask's thread left executing a method in an object that
          has been destroyed.  When the stack is unwound, bad things happen,
          and a segmentation fault, with a somewhat corrupt stack trace
          is produced.

          The fix to the tests was to stop destroying the (server) ORB
          in the ServerTask thread.  Instead, the application mainline code
          was modified (Collocated_Test.cpp) to destroy the (server) ORB
          after both the ServerTask and the ClientTask threads have
          completed.


Thu Jan 12 11:33:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
          Replaced some return 0, with return false

Thu Jan 12 11:08:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO-INSTALL.html:
          Small updates

Thu Jan 12 10:28:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/PluggableUDP/tests/SimplePerformance/server.cpp:
        * examples/PluggableUDP/tests/SimplePerformance/client.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/client.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/server.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/server.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/client.cpp:
          In rtp model don't do main redefinition

Thu Jan 12 09:54:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Latency/DII/client.cpp:
        * performance-tests/Sequence_Latency/DII/client.cpp:
          Added include of AnyTypeCode/Any.h to get all operator <<

Thu Jan 12 00:49:53 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/TAO_CosNotification.pc.in:

          Add TAO_CosEvent to Requires.

        * orbsvcs/orbsvcs/TAO_CosNotification_Skel.pc.in:

          Add TAO_CosEvent_Skel to Requires.

Thu Jan 12 00:31:27 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/be/be_visitor_arg_traits.cpp:
        * TAO_IDL/be/be_visitor_home.cpp:
        * TAO_IDL/be/be_visitor_interface.cpp:
        * TAO_IDL/be/be_visitor_valuebox.cpp:
        * examples/Kokyu_dsrt_schedulers/Task_Stats.inl:
        * examples/RTCORBA/Activity/Task_Stats.inl:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/ORB_Initializer.cpp:
        * orbsvcs/orbsvcs/IOR_Multicast.cpp:
        * orbsvcs/orbsvcs/Shutdown_Utilities.cpp:
        * orbsvcs/orbsvcs/AV/TCP.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Endpoint.cpp:
        * orbsvcs/orbsvcs/IFRService/EventPortDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/HomeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Options.h:
        * orbsvcs/orbsvcs/IFRService/ProvidesDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UsesDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueMemberDef_i.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.h:
        * orbsvcs/orbsvcs/Notify/EventChannel.cpp:
        * orbsvcs/orbsvcs/Notify/EventChannelFactory.cpp:
        * orbsvcs/orbsvcs/Notify/Event_Manager.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.cpp:
        * orbsvcs/orbsvcs/Notify/Random_File.cpp:
        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Factory.cpp:
        * orbsvcs/tests/Bug_2285_Regression/ServerRequest_Interceptor.cpp:
        * orbsvcs/tests/Bug_2285_Regression/ServerRequest_Interceptor2.cpp:
        * orbsvcs/tests/Bug_2287_Regression/ServerRequest_Interceptor2.cpp:
        * orbsvcs/tests/Notify/Blocking/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/lib/Activation_Manager.h:
        * orbsvcs/tests/Notify/lib/Periodic_Consumer.cpp:
        * orbsvcs/tests/Notify/lib/Task_Stats.inl:
        * tao/Any_Insert_Policy_T.h:
        * tao/ORB_Table.inl:
        * tao/WrongTransactionC.cpp:
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.inl:
        * tao/Codeset/UTF16_BOM_Factory.cpp:
        * tao/Codeset/UTF8_Latin1_Factory.cpp:

          On systems where ACE_TEMPLATES_REQUIRE_SOURCE is not defined,
          template implementation files (*_T.cpp) are not #included by the
          corresponding template header file (*_T.h).  So headers that had
          been implicitly #included via the template implementation file,
          may now need to be #included explicitly.

          This change explicitly #includes those headers (most commonly
          ace/Log_Msg.h and ace/Auto_Ptr.h).  Now TAO can be built with
          autoconf on Solaris using the Sun Studio C++ compiler.

          Thanks to Vladimir Panov for reporting this problem and
          providing the initial patch.

Tue Jan 10 19:38:49 UTC 2006  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/main.cpp:

          Fix VC++ v6.0 compile error and conform to ACE coding standards.

Tue Jan 10 19:26:58 UTC 2006  Wallace Zhang  <zhangw@ociweb.com>

        * tests/Portable_Interceptors/Collocated/Dynamic/Collocated_Test.cpp:
        * tests/Portable_Interceptors/Collocated/Dynamic/Server_Task.cpp:

        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Collocated_Test.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Server_Task.cpp:

          On behalf of Tim Bradley (bradley_t@ociweb.com), applying these
          changes to resolve the failure of the two tests.

Tue Jan 10 10:16:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2349_Regression/server.cpp:
          Added missign return

Mon Jan  9 23:33:10 UTC 2006  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * orbsvcs/tests/Notify/lib/common.h:

          Correcting a build problem due to the wrong placement of an
          export modifier in the function's declaration.

Mon Jan  9 13:51:05 MST 2006  Scott Harris  <harris_s@ociweb.com>

        * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.cpp:
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:

          Fixed an Interface Repository inheritance bug.
          Thanks to Bryan Cassell <BryanCassell@iti-team.com> for identifying
          the problem.
          Thanks to Jeff Parsons <j.parsons@vanderbilt.edu> for reviewing
          the changes.

        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/IFR_Inheritance_Test.mpc:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/README:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/main.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/IFR_Inheritance_Test.idl:

          An automated test of the bug.

Mon Jan  9 16:20:05 UTC 2006  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * orbsvcs/tests/Notify/lib/common.cpp:

          Correcting a build problem due to an unnecessary export in the
          function's definition.

Mon Jan  9 13:47:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2349_Regression/*:
          Added regression for this test. Not fixed yet, just to make
          clear that we have this bug, thanks to Chad Elliot
          <elliott_c at ociweb dot com> for creating this regression
          test.

Mon Jan  9 13:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/Security/SSLIOP-INSTALL.html:
          Updated this file, update references to local files instead
          of webbased and refer to ACE-INSTALL.html for how to build
          ACE_SSL

Mon Jan  9 09:26:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype/ValueFactory_Map.h:
          No need to export this class from the Valuetype library

Mon Jan  9 08:59:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/OBV/Factory/client.cpp:
          Extended this test to check if we get a marshal exception with
          minor code 1 when using OBV without a valuefactory registered.
          This is added for bugzilla bug 2354

Mon Jan  9 08:10:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Cubit/TAO/MT_Cubit/client.cpp:
          Made this test compiling with VxWorks and pthread support

Fri Jan  6 19:03:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/run_test.pl:
          Extended this test to also run the client with -ORBCollocation
          no. This will fail at this moment, this bug seems to be there
          already for a long time, not it is visible for everyone

        * tao/Valuetype/ValueBase.cpp:
          Use true/false instead of 0/1

Fri Jan  6 18:25:18 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/Notify/Blocking/Makefile.am:
        * orbsvcs/tests/Notify/Discarding/Makefile.am:
        * orbsvcs/tests/Notify/Ordering/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile.am:

          Regenerated.

Fri Jan  6 16:14:56 UTC 2006  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * orbsvcs/tests/Notify/lib/Makefile.am:
        * orbsvcs/tests/Notify/lib/common.h:
        * orbsvcs/tests/Notify/lib/common.cpp:

          Newly created to give permanent home to previously scattered and
          duplicated functionality. Updated to use the
          ACE_[U]INT[16|32|64]_FORMAT_SPECIFIER macros. Thanks to Johnny
          Willemsen <jwillemsen@remedy.nl> for suggesting it.

        * orbsvcs/tests/Notify/Blocking/common.h:
        * orbsvcs/tests/Notify/Blocking/common.cpp:
        * orbsvcs/tests/Notify/Discarding/common.h:
        * orbsvcs/tests/Notify/Discarding/common.cpp:
        * orbsvcs/tests/Notify/Ordering/common.h:
        * orbsvcs/tests/Notify/Ordering/common.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/common.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/common.h:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/common.h:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/common.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/common.h:
        * orbsvcs/tests/Notify/performance-tests/Filter/common.cpp:

          Removed these files to eliminate duplication. Moved the code to
          the lib/common.{cpp|h}

        * orbsvcs/tests/Notify/Blocking/Blocking.mpc:
        * orbsvcs/tests/Notify/Discarding/Discarding.mpc:
        * orbsvcs/tests/Notify/Ordering/Ordering.mpc:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Seq_Multi_ETCL_Filter.mpc:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Seq_Multi_Filter.mpc:
        * orbsvcs/tests/Notify/performance-tests/Filter/Filter.mpc:

          Updated to remove references to common.{cpp|h}

        * orbsvcs/tests/Notify/Blocking/Makefile.am:
        * orbsvcs/tests/Notify/Discarding/Makefile.am:
        * orbsvcs/tests/Notify/Ordering/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile.am:

          Updated to remove references to common.{cpp|h}

Fri Jan  6 12:23:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype/ValueBase.cpp:
          When no OBV Factory is found, tell in the error message for what we
          are lacking an OBV Factory.

Thu Jan  5 19:56:43 2006  Michi Henning <michi@triodia.com>

        * End of bloatware predicted.

Fri Jan  6 03:16:41 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * interop-tests/wchar/Makefile.am:

          Regenerated.

        * interop-tests/wchar/interop_wchar.mpc:

          Add *_IDL projects for compiling *.idl files.  This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

Fri Jan  6 02:34:55 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.h:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.h:

          Moved static const definitions out of class declaration as VC6
          doesn't support this.  Thanks to Wallace Zhang for the initial
          patch for Notify Service, which I've adapted for the Logging
          Service.

Fri Jan  6 01:57:00 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/ior_corbaloc/Makefile.am:

          Regenerated.

        * examples/ior_corbaloc/ior_corbaloc.mpc:

          Changed client and corbaname client projects not to inherit
          from portableserver.  These are pure clients.

          Changed corbaname client project to not add status_i.cpp to
          Source Files section.  It's not part of the client.

          Add *_IDL projects for compiling *.idl files.  This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

        * examples/ior_corbaloc/corbaname_client.cpp

          Changed to #include "corbanameC.h" instead of
          "ior_corbaloc_client_i.h", which is actually part of the
          client project.

Thu Jan  5 15:50:47 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/Simple/bank/Makefile.am:
        * examples/Simple/chat/Makefile.am:
        * examples/Simple/echo/Makefile.am:
        * examples/Simple/grid/Makefile.am:
        * examples/Simple/time/Makefile.am:

          Regenerated.

        * examples/Simple/bank/bank.mpc:
        * examples/Simple/chat/chat.mpc:
        * examples/Simple/echo/echo.mpc:
        * examples/Simple/grid/grid.mpc:
        * examples/Simple/time/time.mpc:

          Add *_IDL projects for compiling *.idl files.  This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

Thu Jan  5 15:44:15 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * Release:

          Add TAO/m4 subdirectory to CONTROLLED_FILES.

Thu Jan  5 10:29:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/simple_client.cpp:
          Small layout fixes

        * tests/AMI/client.cpp:
          Use prefix decrement

Thu Jan  5 09:52:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/IFR_Service/be_init.cpp:
          Fixed 64bit conversion warnings

Wed Jan  4 21:27:38 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * ChangeLog:

          Changed "add-log-time-format" to a really ugly lambda expression
          that formats changelog timestamps in UTC and works with both GNU
          Emacs and XEmacs.

Wed Jan  4 11:08:58 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/ast/ast_expression.cpp:

          Fix cut-n-pasto where unsigned long longs / long longs were
          compared with a floating point zero literal. This should be
          benign, but triggers a VC6 bug.

Wed Jan  4 09:54:01 2006  David Giovannini  <giovannd@ociweb.com>

        * orbsvcs/ImplRepo_Service/Activator_Loader.cpp:
        * orbsvcs/ImplRepo_Service/Activator_NT_Service.cpp:
        * orbsvcs/ImplRepo_Service/Activator_Options.h:
        * orbsvcs/ImplRepo_Service/Activator_Options.cpp:
        * orbsvcs/ImplRepo_Service/Adapter_Activator.cpp:
        * orbsvcs/ImplRepo_Service/AsyncStartupWaiter_i.h:
        * orbsvcs/ImplRepo_Service/AsyncStartupWaiter_i.cpp:
        * orbsvcs/ImplRepo_Service/Forwarder.cpp:
        * orbsvcs/ImplRepo_Service/INS_Locator.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Locator.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Locator.idl:
        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:
        * orbsvcs/ImplRepo_Service/Iterator.cpp:
        * orbsvcs/ImplRepo_Service/Locator_Loader.h:
        * orbsvcs/ImplRepo_Service/Locator_Loader.cpp:
        * orbsvcs/ImplRepo_Service/Locator_NT_Service.cpp:
        * orbsvcs/ImplRepo_Service/Locator_Options.h:
        * orbsvcs/ImplRepo_Service/Locator_Options.cpp:
        * orbsvcs/ImplRepo_Service/Locator_Repository.cpp:
        * orbsvcs/ImplRepo_Service/Locator_XMLHandler.h:
        * orbsvcs/ImplRepo_Service/Locator_XMLHandler.cpp:
        * orbsvcs/ImplRepo_Service/Server_Info.cpp:
        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:

          Corrected white-space to match ACE/TAO guidelines.
          Adding a const to an int in Imr_Locator_i.cpp.
          Changing a command line behavior for defualt activator
          in tao_imr_i.cpp.

Tue Jan  3 21:34:30 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * ChangeLog:

          Add "indent-tabs-mode: nil" to Local Variables at end of file.
          Untabify.
          Delete-trailing-whitespace.

Tue Jan  3 11:27:56 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/OBV/Typed_Events/Makefile.am:
        * examples/POA/DSI/Makefile.am:
        * examples/POA/Default_Servant/Makefile.am:
        * examples/POA/Forwarding/Makefile.am:
        * examples/PluggableUDP/tests/Basic/Makefile.am:
        * examples/PluggableUDP/tests/Performance/Makefile.am:
        * examples/PluggableUDP/tests/SimplePerformance/Makefile.am:
        * examples/Quoter/Makefile.am:

          Regenerated.

        * examples/OBV/Typed_Events/Typed_Events.mpc:
        * examples/POA/DSI/POA_DSI.mpc:
        * examples/POA/Default_Servant/POA_Default_Servant.mpc:
        * examples/POA/Forwarding/POA_Forwarding.mpc:
        * examples/PluggableUDP/tests/Basic/Basic.mpc:
        * examples/PluggableUDP/tests/Performance/Performance.mpc:
        * examples/PluggableUDP/tests/SimplePerformance/SimplePerformance.mpc:
        * examples/Quoter/Quoter.mpc:

          Add *_IDL projects for compiling *.idl files.  This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

Tue Jan  3 10:39:12 UTC UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2345_Regression/server.cpp:
          Fixed unused variable warning

Mon Jan  2 18:45:12 UTC UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2345_Regression/server.cpp:
          Fixed implicit conversion warning

Mon Jan  2 15:21:27 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.cpp:
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:

          Fixed a bug in the describe_interface() API operation that occurs
          when an interface has one or more parents. Thanks to Scott Harris
          <harris_s@ociweb.com> for reporting the problem.

Mon Jan  2 14:12:15 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/include/drv_extern.h:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:

          - Frontend changes necessary to support a backend option
            for the CoSMIC IDL importer that passes a directory
            name instead of a list of IDL files. This option is
            not available for any other backends and should not
            affect their behavior.

          - Added a patch submitted by Ken Sedgwick <ken+5a4@bonsai,com>
            that fixes a bug in the functioning of TAO_IDL_INCLUDE_DIR.

Sun Jan  1 10:50:39 2006  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp (is_alive):
          Fixed a couple of bugs reported by Yariv Tal
          <yariv_tal2003@hotmail.com>.  This fixes bugid 2347.

Fri Dec 30 15:36:04 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/Event_Comm/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.am:
        * examples/Logging/Makefile.am:

          Regenerated.

        * examples/Event_Comm/Event_Comm.mpc:
        * examples/Kokyu_dsrt_schedulers/fp_example/fp_example.mpc:
        * examples/Kokyu_dsrt_schedulers/mif_example/mif_example.mpc:
        * examples/Kokyu_dsrt_schedulers/muf_example/muf_example.mpc:
        * examples/Logging/Logging.mpc:

          Add *_IDL projects for compiling *.idl files.  This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

Fri Dec 30 16:15:24 2005  Wallace Zhang  <zhangw@ociweb.com>

        * NEWS: Updated information for the wchar refactoring work.

Wed Dec 30 14:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/RTScheduling/MIF_Scheduler/MIF_DT_Creator.cpp:
        * tests/MT_Timeout/server.cpp:
        * tests/Crash_On_Write/server.cpp:
          Fixed compile error

Wed Dec 30 12:31:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2345_Regression/*:
          Added regression for bug 2345, this is not fixed yet, just
          adding the regression first. Thanks to Yariv Tal
          <yariv_tal2003 at hotmail dot com> for reporting this
          problem and delivering this simple regression

Thu Dec 29 11:43:02 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/Content_Server/AMI_Iterator/Makefile.am
        * examples/Content_Server/AMI_Observer/Makefile.am
        * examples/Content_Server/SMI_Iterator/Makefile.am

          Regenerated.

        * examples/Content_Server/AMI_Iterator/AMI_Iterator.mpc:
        * examples/Content_Server/AMI_Observer/AMI_Observer.mpc:
        * examples/Content_Server/SMI_Iterator/SMI_Iterator.mpc:

          Add *_IDL projects for compiling *.idl files.  This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

Thu Dec 29 11:26:45 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/Bug_2316_Regression/Makefile.am:

          Regenerated.

        * orbsvcs/tests/Bug_2316_Regression/Bug_2316_Regression.mpc:

          Add *_IDL projects for compiling *.idl files.  This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

Thu Dec 29 09:43:07 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tao/PI/PI_PolicyFactory.cpp:
        * tao/PI/ProcessingModePolicy.h:
        * tao/PI/ProcessingModePolicy.pidl:

          Took care of some TBD comments.  The TBD in the .pidl has been
          changed into a Doxygen @todo.

Thu Dec 29 07:29:38 2005  Phil Mesnier  <mesnier_p@ociweb.com>

        * NEWS:

          Added Comment regarding new Endpoint Selector.

Thu Dec 29 06:47:37 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Strategies/OC_Endpoint_Selector_Factory.cpp:

          Wrapped plain text string in ACE_TEXT () to avoid problems on
          wide-character builds.

Wed Dec 28 18:20:23 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/Callback_Quoter/Makefile.am:

          Regenerated.

        * examples/Callback_Quoter/Callback_Quoter.mpc:

          Add *_IDL projects for compiling *.idl files.  This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

Wed Dec 28 17:07:23 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/AMH/Sink_Server/Makefile.am:
        * examples/Buffered_AMI/Makefile.am:
        * examples/Buffered_Oneways/Makefile.am:

          Regenerated.

        * examples/AMH/Sink_Server/Sink_Server.mpc:
        * examples/Buffered_AMI/Buffered_AMI.mpc:
        * examples/Buffered_Oneways/Buffered_Oneways.mpc:

          Add *_IDL projects for compiling *.idl files.  This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

Wed Dec 28 13:09:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Native_Exceptions/Native_Exceptions.mpc:
        * tests/UNKNOWN_Exception/UNKNOWN_Exception.mpc:
          Removed setting of idlflags, native exceptions are the default
          now and the overruling of the idlflags gives problem when
          trying to extend TAO_IDLFLAGS from the platform_macros.GNU
          file

Wed Dec 28 11:11:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Cubit/TAO/MT_Cubit/client.cpp:
          Made this test compiling again with VxWorks 6.1, the WIND_TCB
          struct has been changed and shouldn't be used directly anymore

Wed Dec 28 10:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/RTScheduling/Synch_i.cpp:
          Cast number of seconds explicitly to time_t

Wed Dec 28 10:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils_T.cpp:
          Applied a workaround for Borland to not give argument not used
          warnings. This problem has been reported to Borland to get it
          fixed in the next version.

Wed Dec 28 09:31:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
          Fixed 64bit conversion warning

Wed Dec 28 09:23:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/test_i.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/test_i.h:
          No need to derive explicitly from ServantBase

Wed Dec 28 09:07:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/catior/catior.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_Loader.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/RequestProcessingStrategyFactoryImpl.cpp:
        * tao/PortableServer/RequestProcessingStrategyDefaultServantFI.cpp:
        * tao/PortableServer/RequestProcessingStrategyAOMOnlyFactoryImpl.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
          Added missing include

Wed Dec 28 08:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/Optimized_Connection_Endpoint_Selector.cpp:
          Removed incorrect ; at end of method

Tue Dec 27 22:50:22 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * orbsvcs/orbsvcs/CosTrading.mpc:

          Fix typo in last change.

Tue Dec 27 18:17:49 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * orbsvcs/orbsvcs/CosTrading.mpc:

          Tweak so trading_serv_export.h is installed.

Tue Dec 27 17:21:54 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * orbsvcs/orbsvcs/CosNotification.mpc:

          Tweak so notify_serv_export and notify_persist_export.h are
          installed.

        * orbsvcs/orbsvcs/CosTime.mpc:

          Tweak so time_export.h is installed.

        * orbsvcs/orbsvcs/CosEvent.mpc:
        * orbsvcs/orbsvcs/ec_typed_events_serv.mpb:

          Tweak so that CEC_Defaults.h and event_serv_export.h are
          installed.

Tue Dec 27 16:17:30 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * orbsvcs/orbsvcs/CosConcurrency.mpc:

          Tweak so concurrency_export.h is installed.  Thanks to Vladimir
          Panov for pointing out this class of problems.

        * tao/Makefile.am:

          Regenerated due to new Optimized Connection Endpoint Selector
          feature.  C.f.:

          Tue Dec 27 08:22:42 2005  Phil Mesnier  <mesnier_p@ociweb.com>

Tue Dec 27 15:33:28 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * Makefile.am:

          Remove DISTCLEANFILES definitions.  We no longer ship
          tao-config and tao-config.1.

        * Makefile.am:

          Build examples and interop-tests subdirectories.

        * Makefile.am:

          I accidently clobbered this file by checking in the MPC
          generated version.   Restore to revision 1.13, the last
          known good version.

Tue Dec 27 15:11:18 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * Release

          Add aclocal.m4 to RELEASE_FILES.  Thanks to Vladimir Panov
          < gbr at voidland dot org >.

Fri Dec 23 20:17:39 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.h:

          Changed lock strategy of implicit_ids_, filterable_data_, and
          variable_header_ maps from TAO_SYNCH_MUTEX to ACE_Null_Mutex,
          since accesses to the maps are already protected at a higher
          level.

          Explicitly set the size of the implicit_ids_, filterable_data_,
          and variable_header_ maps to 27, 31, and 31 hash buckets
          respectively.

          A fixed set of 9 keys are stored in implicit_ids_.  With the
          default hash_pjw() hash function, 27 buckets is the smallest
          table where each key is hashed to a unique bucket.  Further
          optimizations, perhaps using a minimal perfect hash, may be
          possible.

          A 31 bucket hash table size was selected for filterable_data_
          and variable_header_ because a typical structured event has very
          few if any attributes, the cost of allocating default (1024 hash
          buckets) size maps outweigh any benefits of fewer hash
          collisions.

Tue Dec 27 12:24:29 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * Makefile.am:

          Fixed botched ACLOCAL_AMFLAGS definition.

Tue Dec 27 11:34:29 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * Makefile.am:

          Build examples subdirectory.

        * examples/Makefile.am:

          Disable building CSD_Strategy and RTScheduling subdirectories.
          These *.mpc files need major changes to support separate build
          directories.  This is too risky to complete within this beta
          cycle.

        * performance-tests/Makefile.am:

          Disable building CSD_Strategy subdirectory.
          These *.mpc files need major changes to support separate build
          directories.  This is too risky to complete within this beta
          cycle.

        * examples/Load_Balancing/Makefile.am:
        * examples/Load_Balancing_persistent/Makefile.am:
        * examples/POA/Adapter_Activator/Makefile.am:
        * examples/POA/Explicit_Activation/Makefile.am:
        * examples/POA/On_Demand_Activation/Makefile.am:
        * examples/POA/Reference_Counted_Servant/Makefile.am:
        * examples/POA/TIE/Makefile.am:
        * examples/Persistent_Grid/Makefile.am:
        * examples/Simulator/Event_Supplier/Makefile.am:

          Regenerated.

        * examples/POA/Adapter_Activator/POA_Adapter_Activator.mpc:
        * examples/POA/Explicit_Activation/POA_Explicit_Activation.mpc:
        * examples/POA/On_Demand_Activation/POA_On_Demand_Activation.mpc:
        * examples/POA/Reference_Counted_Servant/Reference_Counted_Servant.mpc:

          Change automake specific includes definitions to to have both
          build dir and source dir relative paths.

        * examples/Load_Balancing/Load_Balancing.mpc:
        * examples/Load_Balancing_persistent/Load_Balancing_persistent.mpc:
        * examples/POA/TIE/POA_TIE.mpc:
        * examples/Persistent_Grid/Persistent_Grid.mpc:
        * examples/Simulator/Event_Supplier/Event_Supplier.mpc:

          Add *_IDL projects for compiling *.idl files.  This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

Tue Dec 27 08:22:42 2005  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Profile_Transport_Resolver.cpp:
        * tao/Profile_Transport_Resolver.h:
        * tao/Strategies/OC_Endpoint_Selector_Loader.cpp:
        * tao/Strategies/OC_Endpoint_Selector_Loader.h:
        * tao/Strategies/OC_Endpoint_Selector_Factory.cpp:
        * tao/Strategies/OC_Endpoint_Selector_Factory.h:
        * tao/Strategies/Optimized_Connection_Endpoint_Selector.cpp:
        * tao/Strategies/Optimized_Connection_Endpoint_Selector.h:

          A new feature requested by Homag.  This feature is an
          alternative endpoint selector that improves the performance of
          connection establishment when an IOR contains unreachable
          endpoints. The two elements of this optimization are a
          connection cache lookup before attempting any connections and a
          second means for setting the connection timeout without loading
          the AMI library to use the TAO-specific connection timeout
          policy.

        * tests/AlternateIIOP/svc.conf:

          The alternate IIOP test now uses the Optimized Connection
          Endpoint Selector to speed up the selection of the correct endpoint.

Tue Dec 27 09:18:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/FlResource_Loader.h:
        * tao/TkResource_Loader.h:
          Added missing versioning include. Thanks to
          Ken Sedgwick <ken at bonsai dot com>

Tue Dec 27 09:03:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IORInterceptor/IORInterceptor_Details.h:
          Fixed pragma once warning

Fri Dec 23 16:16:20 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Add orbsvcs/tests/Bug_2316_Regression/Makefile to
          AC_CONFIG_FILES.

        * orbsvcs/tests/Bug_2316_Regression/Makefile.am:

          New file.

Fri Dec 23 13:06:22 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.h:

          Don't assign values to dynamically allocated Any's if the
          allocation failed.

          Remove rec_ member variable.  The constructor extracts all
          relevant fields and adds them to property_lookup_ map.

          Const-qualify constructor argument.

Fri Dec 23 10:47:55 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:

          Removed unused variable.

Fri Dec 23 09:09:14 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tao/PI/PI_ORBInitializer.h:
        * tao/PI/PI_ORBInitializer.cpp:
        * tao/PI/PI_PolicyFactory.h:
        * tao/PI/PI_PolicyFactory.cpp:
        * tao/PI/ProcessingModePolicy.h:
        * tao/PI/ProcessingModePolicy.cpp:

          Added the TAO versioning namespace macros.

Fri Dec 23 08:50:37 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Echo_Collocated_ORBInitializer.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/interceptors.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/test_i.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/Echo_Client_ORBInitializer.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/Echo_Server_ORBInitializer.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/client_interceptor.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/server_interceptor.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/test_i.h:

          Fixed fuzz errors related to RefCountedServantBase and _MSC_VER >=
          1200.

Fri Dec 23 13:24:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/util/utl_err.cpp:
          Added include of Log_Msg.h to get ACE_ERROR. Can't reproduce
          it on my machine but it can be that because of other defines
          this file is not included implicitly. This fixes bugzilla bug
          2342. Thanks to Dave Craig <dwcraig at qualcomm dot com> for
          reporting this.

Fri Dec 23 10:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Acceptor.cpp:
        * examples/POA/On_Demand_Loading/Servant_Manager.cpp:
          Fixed 64bit conversion warnings

Fri Dec 23 10:29:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Native_Exceptions/Native_Exceptions.mpc:
        * tests/UNKNOWN_Exception/UNKNOWN_Exception.mpc:
          Changed the way we change the TAO_IDL flags so that adding
          more flags from the platform_macros.GNU file works for these
          projects

Fri Dec 23 10:19:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/PI_PolicyFactory.h:
          Fixed export macros

Fri Dec 23 10:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/ClientRequestDetails.{h,inl}:
        * tao/PI_Server/ServerRequestDetails.{h,inl}:
        * tao/IORInterceptor/IORInterceptor_Details.{h,inl,cpp}:
          Fixed pragma once warning, removed empty destructor, not needed

        * tao/IORInterceptor/IORInterceptor_Details.inl:
          Removed this file, it is now empty

        * tao/Makefile.am:
          Updated

Fri Dec 23 08:29:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/PI_ORBInitializer.h:
        * tao/PI/ProcessingModePolicy.h:
          Fixed export macros

Thu Dec 22 16:07:11 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * docs/tutorials/Quoter/RT_Event_Service/Makefile.am:
        * examples/Makefile.am:
        * examples/AMH/Sink_Server/Makefile.am:
        * examples/AMI/FL_Callback/Makefile.am:
        * examples/Buffered_AMI/Makefile.am:
        * examples/Buffered_Oneways/Makefile.am:
        * examples/CSD_Strategy/ThreadPool/Makefile.am:
        * examples/CSD_Strategy/ThreadPool2/Makefile.am:
        * examples/CSD_Strategy/ThreadPool3/Makefile.am:
        * examples/CSD_Strategy/ThreadPool5/Makefile.am:
        * examples/CSD_Strategy/ThreadPool6/Makefile.am:
        * examples/Content_Server/AMI_Iterator/Makefile.am:
        * examples/Content_Server/AMI_Observer/Makefile.am:
        * examples/Content_Server/SMI_Iterator/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.am:
        * examples/Load_Balancing/Makefile.am:
        * examples/Load_Balancing_persistent/Makefile.am:
        * examples/OBV/Typed_Events/Makefile.am:
        * examples/POA/DSI/Makefile.am:
        * examples/POA/Default_Servant/Makefile.am:
        * examples/POA/Forwarding/Makefile.am:
        * examples/POA/Generic_Servant/Makefile.am:
        * examples/POA/TIE/Makefile.am:
        * examples/Persistent_Grid/Makefile.am:
        * examples/PluggableUDP/tests/Basic/Makefile.am:
        * examples/PluggableUDP/tests/Performance/Makefile.am:
        * examples/PluggableUDP/tests/SimplePerformance/Makefile.am:
        * examples/Simulator/Event_Supplier/Makefile.am:
        * interop-tests/wchar/Makefile.am:
        * orbsvcs/Event_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Event_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Factory_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Gateway_Service/Makefile.am:
        * orbsvcs/FT_ReplicationManager/Makefile.am:
        * orbsvcs/Fault_Detector/Makefile.am:
        * orbsvcs/Fault_Notifier/Makefile.am:
        * orbsvcs/IFR_Service/Makefile.am:
        * orbsvcs/ImplRepo_Service/Makefile.am:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/Makefile.am:
        * orbsvcs/Naming_Service/Makefile.am:
        * orbsvcs/Notify_Service/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/bin/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Basic/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Makefile.am:
        * orbsvcs/examples/FaultTolerance/RolyPoly/Makefile.am:
        * orbsvcs/examples/LoadBalancing/Makefile.am:
        * orbsvcs/examples/Log/RTEvent/Makefile.am:
        * orbsvcs/examples/Notify/Federation/Agent/Makefile.am:
        * orbsvcs/examples/Notify/Federation/Gate/Makefile.am:
        * orbsvcs/examples/Notify/Federation/SpaceCraft/Makefile.am:
        * orbsvcs/examples/Notify/Subscribe/Makefile.am:
        * orbsvcs/examples/RtEC/IIOPGateway/Makefile.am:
        * orbsvcs/examples/RtEC/Kokyu/Makefile.am:
        * orbsvcs/examples/RtEC/MCast/Makefile.am:
        * orbsvcs/examples/RtEC/Schedule/Makefile.am:
        * orbsvcs/examples/RtEC/Simple/Makefile.am:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/lib/Makefile.am:
        * orbsvcs/tests/Makefile.am:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/Makefile.am:
        * orbsvcs/tests/AVStreams/Component_Switching/Makefile.am:
        * orbsvcs/tests/AVStreams/Full_Profile/Makefile.am:
        * orbsvcs/tests/AVStreams/Latency/Makefile.am:
        * orbsvcs/tests/AVStreams/Modify_QoS/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/Makefile.am:
        * orbsvcs/tests/AVStreams/Multiple_Flows/Makefile.am:
        * orbsvcs/tests/AVStreams/Pluggable/Makefile.am:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/Makefile.am:
        * orbsvcs/tests/Bug_2137_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2247_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2248_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2285_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2287_Regression/Makefile.am:
        * orbsvcs/tests/EC_Custom_Marshal/Makefile.am:
        * orbsvcs/tests/EC_MT_Mcast/Makefile.am:
        * orbsvcs/tests/EC_Mcast/Makefile.am:
        * orbsvcs/tests/EC_Multiple/Makefile.am:
        * orbsvcs/tests/EC_Throughput/Makefile.am:
        * orbsvcs/tests/Event/Basic/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Common/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Complex/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Simple/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Two_Way/Makefile.am:
        * orbsvcs/tests/Event/Performance/Makefile.am:
        * orbsvcs/tests/Event/lib/Makefile.am:
        * orbsvcs/tests/FT_App/Makefile.am:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Makefile.am:
        * orbsvcs/tests/FaultTolerance/IOGR/Makefile.am:
        * orbsvcs/tests/FaultTolerance/IOGRManipulation/Makefile.am:
        * orbsvcs/tests/FtRtEvent/Makefile.am:
        * orbsvcs/tests/ImplRepo/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Makefile.am:
        * orbsvcs/tests/Security/Big_Request/Makefile.am:
        * orbsvcs/tests/Security/Callback/Makefile.am:
        * orbsvcs/tests/Security/Crash_Test/Makefile.am:
        * orbsvcs/tests/Security/MT_IIOP_SSL/Makefile.am:
        * orbsvcs/tests/Security/MT_SSLIOP/Makefile.am:
        * orbsvcs/tests/Security/Secure_Invocation/Makefile.am:
        * performance-tests/Makefile.am:
        * performance-tests/Anyop/Makefile.am:
        * performance-tests/Callback/Makefile.am:
        * performance-tests/Cubit/TAO/DII_Cubit/Makefile.am:
        * performance-tests/Cubit/TAO/IDL_Cubit/Makefile.am:
        * performance-tests/Cubit/TAO/MT_Cubit/Makefile.am:
        * performance-tests/Latency/AMH_Single_Threaded/Makefile.am:
        * performance-tests/Latency/AMI/Makefile.am:
        * performance-tests/Latency/Collocation/Makefile.am:
        * performance-tests/Latency/DII/Makefile.am:
        * performance-tests/Latency/DSI/Makefile.am:
        * performance-tests/Latency/Deferred/Makefile.am:
        * performance-tests/Latency/Single_Threaded/Makefile.am:
        * performance-tests/Latency/Thread_Per_Connection/Makefile.am:
        * performance-tests/Latency/Thread_Pool/Makefile.am:
        * performance-tests/POA/Create_Reference/Makefile.am:
        * performance-tests/POA/Implicit_Activation/Makefile.am:
        * performance-tests/POA/Object_Creation_And_Registration/Makefile.am:
        * performance-tests/Protocols/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/Makefile.am:
        * performance-tests/RTCorba/Thread_Pool/Makefile.am:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/Makefile.am:
        * performance-tests/Sequence_Latency/AMI/Makefile.am:
        * performance-tests/Sequence_Latency/DII/Makefile.am:
        * performance-tests/Sequence_Latency/DSI/Makefile.am:
        * performance-tests/Sequence_Latency/Deferred/Makefile.am:
        * performance-tests/Sequence_Latency/Single_Threaded/Makefile.am:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Makefile.am:
        * performance-tests/Sequence_Latency/Thread_Pool/Makefile.am:
        * performance-tests/Throughput/Makefile.am:

          Regenerated.

Thu Dec 22 15:24:38 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/tao_idl.mpc:
        * docs/tutorials/Quoter/Naming_Service/Quoter_Naming_Service.mpc:
        * docs/tutorials/Quoter/Simple/Client/Quoter_Simple_Client.mpc:
        * docs/tutorials/Quoter/Simple/Impl-Repo/Quoter_Simple_Impl_Repo.mpc:
        * docs/tutorials/Quoter/Simple/ImprovedServer/Quoter_Simple_ImprovedServer.mpc:
        * docs/tutorials/Quoter/Simple/Persistent/Quoter_Simple_Persistent.mpc:
        * docs/tutorials/Quoter/Simple/Server/Quoter_Simple_Server.mpc:
        * examples/POA/Adapter_Activator/POA_Adapter_Activator.mpc:
        * examples/POA/Explicit_Activation/POA_Explicit_Activation.mpc:
        * examples/POA/On_Demand_Activation/POA_On_Demand_Activation.mpc:
        * examples/POA/Reference_Counted_Servant/Reference_Counted_Servant.mpc:
        * orbsvcs/examples/CosEC/RtEC_Based/bin/CosEC_RtEC_Based_bin.mpc:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Basic/CosEC_RtEC_Based_tests_Basic.mpc:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/CosEC_RtEC_Based_Mult.mpc:
        * orbsvcs/examples/Notify/Federation/Agent/Agent.mpc:
        * orbsvcs/examples/Notify/Federation/SpaceCraft/SpaceCraft.mpc:
        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/Colocated_Roundtrip.mpc:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/Federated_Roundtrip.mpc:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/RTCORBA_Baseline.mpc:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/RTCORBA_Callback.mpc:
        * orbsvcs/performance-tests/RTEvent/Roundtrip/Roundtrip.mpc:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/TCP_Baseline.mpc:
        * orbsvcs/tests/Bug_2285_Regression/Bug_2285_Regression.mpc:
        * orbsvcs/tests/Bug_2287_Regression/Bug_2287_Regression.mpc:
        * orbsvcs/tests/CosEvent/Basic/basiceventtestexe.mpb:
        * orbsvcs/tests/Event/Basic/rteventtestexe.mpb:
        * orbsvcs/tests/Event/Mcast/Complex/Complex.mpc:
        * orbsvcs/tests/Event/Mcast/Simple/Simple.mpc:
        * orbsvcs/tests/Event/Mcast/Two_Way/Two_Way.mpc:
        * orbsvcs/tests/Event/Performance/eventperftestexe.mpb:
        * performance-tests/Protocols/Protocols.mpc:

          Add automake specific blocks that either add or replace include
          paths definitions with $(srcdir) relative paths.

Thu Dec 22 13:04:09 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Added BUILD_ACE_FOR_TAO automake conditional.  Explicitly
          set to false (at least for now).

Thu Dec 22 14:43:24 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.cpp:

          Fix some uninitialized data members.

Thu Dec 22 12:38:37 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

Thu Dec 22 14:13:14 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/run_test.pl:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/run_test.pl:

          Made an attempt at supporting these new tests on VxWorks.

Wed Dec 21 19:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/Notify/Federation/federation.mwc:
          Removed this file, it causes project files with
          just different casing, which causes problems when extracting
          the zip release files under windows

Thu Dec 22 10:12:33 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tao/PI/ProcessingModePolicyC.h:
        * tao/PI/ProcessingModePolicyC.cpp:
        * tao/PI/ProcessingModePolicyS.h:

          These did not show up as unknown files for the previous commit.

Thu Dec 22 08:54:09 2005  Chad Elliott  <elliott_c@ociweb.com>

        Committing these changes on behalf of Tim Bradley
        <bradley_t@ociweb.com>.

          The following changes were made in order to support a new
          feature that is described in the CORBA 3.1 draft specification.
          The new feature consists of adding the capability to register
          Portable Interceptors with an associated set of Policy objects.
          In addition, a new Policy was introduced: the
          PortableInterceptor::ProcessingModePolicy.  This policy can be
          applied to either client request interceptors or server request
          interceptors.  There are three possible ProcessingMode values:

          - LOCAL_AND_REMOTE (the default)
          - LOCAL_ONLY
          - REMOTE_ONLY

          The policy is used during the dispatching of a CORBA request.
          It comes into play for remote requests as well as collocated
          (thru-poa) requests.  When the policy value is something other
          than the default value, the interception points on the
          corresponding interceptor may or may not be invoked.  For the
          LOCAL_ONLY policy value, the interception points are only invoked
          on the interceptor if the request is a collocated (thru-poa)
          request.  If it is a remote request, the LOCAL_ONLY policy value
          causes the interceptor to not apply to the current request.
          The REMOTE_ONLY has the opposite effect - only remote requests
          cause the interception points to be invoked in the interceptor.

        * tao/IORInterceptor/IORInterceptor_Details.cpp:
        * tao/IORInterceptor/IORInterceptor_Details.h:
        * tao/IORInterceptor/IORInterceptor_Details.inl:
        * tao/PI/ClientRequestDetails.cpp:
        * tao/PI/ClientRequestDetails.h:
        * tao/PI/ClientRequestDetails.inl:
        * tao/PI/PI_ORBInitializer.cpp:
        * tao/PI/PI_ORBInitializer.h:
        * tao/PI/PI_PolicyFactory.cpp:
        * tao/PI/PI_PolicyFactory.h:
        * tao/PI/ProcessingModePolicy.cpp:
        * tao/PI/ProcessingModePolicy.h:
        * tao/PI/ProcessingModePolicy.pidl:
        * tao/PI/ProcessingModePolicyC.cpp:
        * tao/PI/ProcessingModePolicyC.h:
        * tao/PI/ProcessingModePolicyS.h:
        * tao/PI_Server/ServerRequestDetails.cpp:
        * tao/PI_Server/ServerRequestDetails.h:
        * tao/PI_Server/ServerRequestDetails.inl:

          The files listed above have been added as part of the
          the new PI Policy support (including the new
          PI ProcessingModePolicy).

        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Client_Task.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Client_Task.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Collocated_Test.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Echo_Collocated_ORBInitializer.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Echo_Collocated_ORBInitializer.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/interceptors.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/interceptors.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/PI_ProcMode_Collocated.mpc:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/run_test.pl:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Server_Task.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/Server_Task.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/test_i.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/test.idl:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/test_i.h:

          The files listed above make up a new "collocated" test for the
          new PortableInterceptor::ProcessingModePolicy "feature".

        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/client_interceptor.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/client_interceptor.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/client_main.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/Client_Task.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/Client_Task.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/Echo_Client_ORBInitializer.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/Echo_Client_ORBInitializer.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/Echo_Server_ORBInitializer.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/Echo_Server_ORBInitializer.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/PI_ProcMode_Remote.mpc:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/run_test.pl:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/server_interceptor.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/server_interceptor.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/server_main.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/Server_Task.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/Server_Task.h:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/test_i.cpp:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/test.idl:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/test_i.h:

          The files listed above make up a new "remote" test for the
          new PortableInterceptor::ProcessingModePolicy "feature".

        * tao/PortableServer/Upcall_Wrapper.cpp:

          The Upcall_Wrapper class was modified to fix a bug that
          was observed while testing the new ProcessingModePolicy.
          The server request portable interceptors were being supplied
          with a ServerRequestInfo object that referenced uninitialized
          operation arguments in the collocated (thru_poa) case.

        * tao/PI/ClientRequestInfo.cpp:

          During testing of the new ProcessingModePolicy, another bug
          was observed.  Client request interceptors were not getting
          the proper "result argument" (both collocated and remote cases).
          The changes made to the tao/PI/ClientRequestInfo.cpp file fixes
          this bug.

        * tao/ClientRequestInterceptor_Adapter.h:
        * tao/Collocated_Invocation.cpp:
        * tao/IORInterceptor_Adapter.h:
        * tao/Invocation_Base.cpp:
        * tao/Invocation_Base.h:
        * tao/Invocation_Base.inl:
        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/Remote_Invocation.cpp:
        * tao/ServerRequestInterceptor_Adapter.h:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.h:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.cpp:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.h:
        * tao/PI/Interceptor_List_T.cpp:
        * tao/PI/Interceptor_List_T.h:
        * tao/PI/ORBInitInfo.cpp:
        * tao/PI/ORBInitInfo.h:
        * tao/PI/ORBInitInfo.pidl:
        * tao/PI/ORBInitInfoC.cpp:
        * tao/PI/ORBInitInfoC.h:
        * tao/PI/ORBInitInfoS.h:
        * tao/PI/PI.cpp:
        * tao/PI_Server/ServerInterceptorAdapter.cpp:
        * tao/PI_Server/ServerInterceptorAdapter.h:

          The files listed above were modified as part of the
          changes made to support policies at PI registration-time
          and the new PI ProcessingModePolicy.

        * tests/Portable_Interceptors/Collocated/Dynamic/test_i.cpp:

          Added a sleep before the shutdown to allow the client thread to
          complete the collocated call before shutting down the ORB to avoid
          BAD_INV_ORDER exceptions on fast multi-processor machines.

Thu Dec 22 14:04:12 UTC 2005  Johnny Willemsen <jwillemsen@remedy.nl>

        * tests/RTCORBA/Dynamic_Thread_Pool/client.cpp:
          Fixed variable not used warning

Thu Dec 22 12:25:12 UTC 2005  Johnny Willemsen <jwillemsen@remedy.nl>

        * tests/RTCORBA/Dynamic_Thread_Pool/*.mpc:
          Shortened filename to fix fuzz error

Wed Dec 21 13:06:53 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Use TAO_ENABLE_MINIMUM_CORBA macro instead of explicitly setting
          BUILD_MINIMUM_CORBA automake conditional to false.

        * m4/tao.m4:

          New file, autoconf macros for TAO-specific feature tests.

          Added TAO_ENABLE_MINIMUM_CORBA autoconf macro.  Configuring with
          --enable-minimum-corba will set the BUILD_MINIMUM_CORBA automake
          conditional.

        * configure.ac:
        * Makefile.am:

          Look for automake macro files (*.m4) in ../m4 and ./m4.

Wed Dec 21 12:08:57 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:

          Changed TAO_Log_Constraint_Visitor constructor to use
          ACE_CString constructors that don't copy or take ownership of
          the string, this allows us to wrap string literals for use as
          map bindings with as little overhead as possible.

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.h:

          Changed lock strategy of property_lookup_map_ from
          TAO_SYNCH_MUTEX to ACE_Null_Mutex, since all accesses to the map
          are already protected at a higher level.

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.h:

          Explicitly set the size of the property_lookup_map_ to 31 hash
          buckets.  A typical log record has very few if any attributes,
          the cost of allocating the default (1024 hash bucket) size map
          outweighs any benefits of fewer hash collisions.

Wed Dec 21 19:28:12 UTC 2005  Johnny Willemsen <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Upcall.cpp:
          No need to store the TAO_Adapter in an intermediate variable

        * examples/Load_Balancing_persistent/Load_Balancer_i.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
          Fixed 64bit conversion warning

        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.cpp:
          Initialise pointer with 0 and removed some debugging statements that
          appear always and don't add a value to the log

        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp:
          Removed some old comments

        * tao/orbconf.h:
          Did some cleanup, removed TAO_USE_SEQUENCE_TEMPLATES,
          TAO_MAXIMUM_NATIVE_TYPE_SIZE, TAO_MAX_TRANSPORT_REREAD_ATTEMPTS.
          I couldn't find these throughtout all the code.

Wed Dec 21 11:03:25 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/ast/ast_expression.cpp:
        * TAO_IDL/include/ast_expression.h:

          If !ACE_LACKS_LONGLONG_T, perform operations on CORBA::LongLong
          and CORBA::ULongLong types using 64 bit arithmetic.  Previously
          this was done with doubles (53 bit mantissa) for '+', '-', '*';
          or disallowed for the other operators.

        * TAO_IDL/ast/ast_expression.cpp:
        * TAO_IDL/include/ast_expression.h:

          Add EvalKind parameter to ::eval_bin_op and ::eval_mod_op so
          that operations can be done in terms of the given type.

        * TAO_IDL/ast/ast_expression.cpp:

          Remove handling of '%' operator in AST_Expression::eval_bin_op()
          as it is handled by AST_Expression::eval_mod_op().

Wed Dec 21 18:50:12 UTC 2005  Johnny Willemsen <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Trader/constraint.l:
        * orbsvcs/orbsvcs/Trader/Constraint_l.cpp:
        * tao/RTPortableServer/RT_Collocation_Resolver.cpp:
          Use true and false for booleans

Wed Dec 21 18:40:12 UTC 2005  Johnny Willemsen <jwillemsen@remedy.nl>

        * tests/Bug_2328_Regression/*:
          Added new regression for bug 2328. When having a client without
          codeset support and a server with, sending multiple strings in one
          invocation caused a crash with x.4.7. A retest just before the
          release of x.4.8 proved things where fixed already, just putting
          the regression into the repo to make sure we don't get this bug
          back.

Wed Dec 21 16:23:12 UTC 2005  Johnny Willemsen <jwillemsen@remedy.nl>

        * tao/Leader_Follower.cpp:
          Use prefix increment/decrement instead of postfix

        * tao/Object.cpp:
          Made lazy_strategy a real bool instead of an int

        * tao/CSD_ThreadPool/CSD_TP_Strategy.{h,inl}:
          Made num_threads a long to fix 64bit conversion warnings

        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
          Initialise pointer with 0

        * tests/IDL_Test/array.idl:
          Added some bound array types

        * tests/IDL_Test/interface.idl:
          Added an empty local interface

        * tests/IDL_Test/sequence.idl:
          Added a sequence of local interfaces

        * tests/RTCORBA/Dynamic_Thread_Pool/*:
          Added new test to show dynamic thread pools with the idle timeout
          functionality

Tue Dec 20 08:04:30 2005  Simon McQueen  <sm@prismtech.com>

        * TAO version 1.4.8 released.

Fri Dec 16 18:06:27 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/driver/drv_args.cpp:

          Added missing code that sets versioned namespace opening and
          closing text.

        * TAO_IDL/be/be_visitor_union/any_op_ch.cpp:

          Fixed typo that caused generated versioned namespace to be
          reopened before it was closed.

        * orbsvcs/orbsvcs/AV.mpc:
        * orbsvcs/orbsvcs/CosConcurrency.mpc:
        * orbsvcs/orbsvcs/CosEvent.mpc:
        * orbsvcs/orbsvcs/CosLifeCycle.mpc:
        * orbsvcs/orbsvcs/CosLoadBalancing.mpc:
        * orbsvcs/orbsvcs/CosNaming.mpc:
        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/CosProperty.mpc:
        * orbsvcs/orbsvcs/CosTime.mpc:
        * orbsvcs/orbsvcs/CosTrading.mpc:
        * orbsvcs/orbsvcs/DsEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsNotifyLogAdmin.mpc:
        * orbsvcs/orbsvcs/FTORB.mpc:
        * orbsvcs/orbsvcs/FaultTolerance.mpc:
        * orbsvcs/orbsvcs/FtRtEvent.mpc:
        * orbsvcs/orbsvcs/HTIOP.mpc:
        * orbsvcs/orbsvcs/PortableGroup.mpc:
        * orbsvcs/orbsvcs/RTCosScheduling.mpc:
        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/RTSched.mpc:
        * orbsvcs/orbsvcs/RT_Notification.mpc:
        * orbsvcs/orbsvcs/SSLIOP.mpc:
        * orbsvcs/orbsvcs/Security.mpc:
        * orbsvcs/orbsvcs/Svc_Utils.mpc:

          Core orbsvcs stubs/skeletons must have ability to support
          versioned namespaces.  IDL-capable MPC projects now inherit from
          the "tao_versioning_idl_defaults" MPC base project.

        * tao/CONV_FRAME.pidl:
        * tao/CharSeq.pidl:
        * tao/Current.pidl:
        * tao/Domain.pidl:
        * tao/DoubleSeq.pidl:
        * tao/FloatSeq.pidl:
        * tao/GIOP.pidl:
        * tao/IIOP.pidl:
        * tao/AnyTypeCode/AnySeq.pidl:
        * tao/AnyTypeCode/Bounds.pidl:
        * tao/AnyTypeCode/Dynamic.pidl:
        * tao/AnyTypeCode/Dynamic_Parameter.pidl:
        * tao/AnyTypeCode/ValueModifier.pidl:
        * tao/AnyTypeCode/Visibility.pidl:
        * tao/BiDir_GIOP/BiDirPolicy.pidl:
        * tao/CSD_Framework/CSD_Framework.pidl:
        * tao/CodecFactory/IOP_Codec.pidl:
        * tao/CodecFactory/IOP_Codec_include.pidl:
        * tao/DynamicAny/DynamicAny.pidl:
        * tao/IFR_Client/IFR_Base.pidl:
        * tao/IFR_Client/IFR_Basic.pidl:
        * tao/IFR_Client/IFR_Components.pidl:
        * tao/IFR_Client/IFR_Extended.pidl:

          Added versioned namespace related TAO_IDL command line options
          to the stub/skeleton generation documentation.

        * tests/Param_Test/results.h:

          Wrap forward declaration of class in CORBA namespace within a
          TAO versioned namespace since the core TAO library does so.

Thu Dec 15 16:19:48 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_valuetype.cpp:
        * TAO_IDL/be/be_visitor_arg_traits.cpp:
        * TAO_IDL/be/be_visitor_traits.cpp:
        * TAO_IDL/be/be_visitor_array/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_array/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_enum/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_enum/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_enum/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_enum/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_exception/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_root/root_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:
        * TAO_IDL/be/be_visitor_union/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuebox/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuebox/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuebox/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuebox/cdr_op_cs.cpp:
        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/driver/drv_args.cpp:

          Added ability to set "versioned" namespace opening and closing
          text.  Addresses problem where applications that do not enable
          versioned namespace support in their own code need not get
          "versioned" stubs/skeletons.

Tue Dec 13 12:13:26 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * COPYING: Updated this file to mention compliance issues wrt the
          new "The Energy Policy Act of 2005".  Thanks to Malcolm Spence
          for providing this.

Wed Dec 14 09:03:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Borland/README:
          Updated contact information

Tue Dec 13 13:35:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/string_traits_base.hpp:
          Removed static from the declaration of empty to fix VxWorks warnings

Tue Dec 13 12:55:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Notify/Discarding/notify.conf:
          Use DispatchingThreads instead of ListeningThreads, the last one
          is deprecated

Tue Dec 13 12:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/Notify/Subscribe/Notify_Subscribe.mpc:
          Set exename to Subscribe to match the run_test perl script

Tue Dec 13 12:34:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Notify_Service/Notify_Service.cpp (shutdown):
          Only unbind from the naming service when we have a valid object
          reference to it.

Tue Dec 13 10:22:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Codeset_Manager_Factory_Base.h:
          Fixed typo in comment

Tue Dec 13 09:27:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Shutdown_Utilities.{h,cpp}:
          The vc8 runtime seems to check wether a signal number is a valid
          one, if not it asserts. The Shutdown_Utilities where just
          calling remove_handler for all signal numbers, changed this to just
          call it for the signals we registered. This way we can end the
          orbsvcs executable with ctrl-c again.

Mon Dec 12 15:20:10 2005    <ossama@dre.vanderbilt.edu>

        * orbsvcs/Notify_Service/Notify_Service.mpc:

          Disable NT_Notify_Service project in ace_for_tao configuration.
          It depends on ace/NT_Service.*, which is currently not part of
        the ace_for_tao subset.

        * examples/Load_Balancing/Load_Balancing.mpc:

          Disable in ace_for_tao configuration.  It requires ACE_DLList,
          which is not part of the ace_for_tao subset.

Mon Dec 12 09:35:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.cpp:
          Minor formatting improvement in debug logging

Sun Dec 11 17:39:54 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_ClientEngine.cpp:

          Added sleep before client call done(). This is workaround with
          the problem that some oneway requests lost when the server has
          multiple orb threads.

Fri Dec  9 16:36:27 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_Statistics.cpp:

          Made actual_vs_expected() dump more details with the failure.

Fri Dec  9 21:48:48 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Array_VarOut_T.h:
        * tao/Array_VarOut_T.inl:

          In the TAO_Array_Forany_T<> template class:

          - Changed initialization values for the CORBA::Boolean
            nocopy_ member from '0' to 'false'.

          - Removed the 'const' qualifier from the nocopy_ member.
            This member gets assigned to in the class assignment
            operator, and because of this, tools like insure++
            complain. It's a mystery why C++ compilers don't
            complain as well. This fix closes [BUGID:2326]. Thanks
            to Brian Buesker <bbuesker@qualcomm.com> for reporting
            the problem.

Thu Dec  8 16:37:06 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * examples/RTCORBA/Activity/Activity.mpc:

          Do not override "macros" variable.  Add to it instead.  Fixes
          problem where versioned namespace preprocessor symbols were not
          added to generated Makefiles/projects.

        * examples/RTCORBA/Activity/Activity.h:
        * examples/RTCORBA/Activity/Builder.h:
        * examples/RTCORBA/Activity/Job_i.h:
        * examples/RTCORBA/Activity/POA_Holder.h:
        * examples/RTCORBA/Activity/Periodic_Task.h:
        * examples/RTScheduling/Job_i.h:
        * examples/RTScheduling/POA_Holder.h:
        * examples/Simple/bank/AccountManager_i.h:

          Fixed versioned namespace support.

Thu Dec  8 14:19:52 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlert_Handler.h:

          Fixed versioned namespace support.  The versioning macros calls
          were missing.

Thu Dec  8 20:24:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * interop-tests/wchar/interop_wchar.mpc:
        * examples/PluggableUDP/tests/Basic/Basic.mpc:
        * examples/PluggableUDP/tests/SimplePerformance/SimplePerformance.mpc:
        * examples/POA/Default_Servant/POA_Default_Servant.mpc:
        * examples/POA/DSI/POA_DSI.mpc:
        * examples/Content_Server/AMI_Iterator/AMI_Iterator.mpc:
        * examples/Content_Server/AMI_Observer/AMI_Observer.mpc:
        * examples/Content_Server/SMI_Iterator/SMI_Iterator.mpc:
        * examples/Buffered_Oneways/Buffered_Oneways.mpc:
        * examples/Buffered_AMI/Buffered_AMI.mpc:
          Added 'after += ...' lines to files where projects share one or
          more IDL files.

Thu Dec  8 13:10:42 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/CSD_Strategy_Tests/TP_Test_3/run_test.pl:

          Commented the client command line output previously added for
          debugging.

Thu Dec  8 07:17:36 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Asynch_Queued_Message.h:
        * tao/default_server.h:
        * tao/PortableServer/Operation_Table_Binary_Search.h:

          Fixed versioned namespace support.  The versioning macros calls
          were missing.

Thu Dec  8 06:54:31 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/examples/LoadBalancing/ServerRequestInterceptor.h:

          Fixed versioned namespace build errors, predominantly caused by
          forwared declarations not being placed within the appropriate
          {ACE,TAO}_{BEGIN,END}_VERSIONED_NAMESPACE_DECL block.

Thu Dec  8 06:45:36 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/OctetSeq/OctetSeq.mpc:
        * performance-tests/Anyop/Anyop.mpc:
        * performance-tests/POA/Create_Reference/Create_Reference.mpc:
        * performance-tests/POA/Implicit_Activation/Implicit_Activation.mpc:
        * performance-tests/POA/Object_Creation_And_Registration/Object_Creation_And_Registration.mpc:
        * performance-tests/Protocols/Protocols.mpc:
        * performance-tests/RTCorba/Thread_Pool/Thread_Pool.mpc:

          Disable these projects when "ace_for_tao" is enabled.

Wed Dec  7 19:19:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
          Workaround for Borland is also needed for BSD2006

Wed Dec  7 18:56:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/CSD_Strategy/ThreadPool/CSD_Test_ThreadPool.mpc:
        * examples/CSD_Strategy/ThreadPool2/CSD_Test_ThreadPool2.mpc:
        * examples/CSD_Strategy/ThreadPool3/CSD_Test_ThreadPool3.mpc:
        * examples/CSD_Strategy/ThreadPool3/CSD_Test_ThreadPool5.mpc:
        * examples/CSD_Strategy/ThreadPool3/CSD_Test_ThreadPool6.mpc:
          Added 'after += ...' lines to files where projects share one or
          more IDL files.

        * examples/CSD_Strategy/ThreadPool4/CSD_Test_ThreadPool4.mpc:
          Simplified

Wed Dec  7 05:43:53 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Connection_Timeout/Connection_Timeout.mpc:
        * tests/Hang_Shutdown/Hang.mpc:
        * tests/Param_Test/Param_Test.mpc:

          Disable these projects when "ace_for_tao" is enabled.

Wed Dec  7 10:59:55 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_i.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_Statistics.cpp:

          Added more logging in test results checking to help debug the
          TP_Test_3 failure on RHEL3_Minimum build.

        * tests/CSD_Strategy_Tests/TP_Foo_B/Callback_i.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Callback_i.h:

          Removed the ACE_Atomic_Op for num_callbacks_ data member since the
          CSD synchronizes the request dispatching.

Wed Dec  7 17:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2316_Regression/Bug_2316_Regression.mpc:
        * examples/POA/Forwarding/POA_Forwarding.mpc:
        * examples/Kokyu_dsrt_schedulers/mif_example/mif_example.mpc:
          Added 'after += ...' lines to files where projects share one or
          more IDL files.

Wed Dec  7 12:31:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Trader/Trader.h:
          Work around for TAO_Lockable is also needed for BCB2006 Update 1

Tue Dec  6 21:16:05 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/ServerRequestInterceptor.h:
        * orbsvcs/tests/Notify/lib/Activation_Manager.h:
        * orbsvcs/tests/Notify/lib/Command.h:
        * orbsvcs/tests/Notify/lib/EventChannel_Command.h:
        * orbsvcs/tests/Notify/lib/Options_Parser.cpp:
        * orbsvcs/tests/Notify/lib/Options_Parser.h:
        * orbsvcs/tests/Notify/lib/Peer.h:
        * orbsvcs/tests/Notify/lib/Periodic_Consumer.h:
        * orbsvcs/tests/Notify/lib/Periodic_Supplier.h:

          Fixed versioned namespace build errors, predominantly caused by
          forwared declarations not being placed within the appropriate
          {ACE,TAO}_{BEGIN,END}_VERSIONED_NAMESPACE_DECL block.

Tue Dec  6 14:55:41 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/CSD_Strategy_Tests/TP_Test_3/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_3/ServerApp.cpp:

          Added debug message to help debugging the problem of
          "<server_main> failed: No such file or directory".

Tue Dec  6 15:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2285_Regression/Bug_2285_Regression.mpc:
          Added 'after += ...' lines to files where projects share one or
          more IDL files.

Tue Dec  6 15:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Security/BiDirectional/client.cpp:
        * orbsvcs/tests/Security/BiDirectional/test_i.cpp:
          Fixed 64bit conversion warnings

Tue Dec  6 08:34:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2287_Regression/Bug_2287_Regression.mpc:
        * examples/OBV/Typed_Events/Typed_Events.mpc:
        * examples/Load_Balancing/Load_Balancing.mpc:
          Added 'after += ...' lines to files where projects share one or
          more IDL files.

Tue Dec  6 08:26:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Trader/Trader.h:
          Also with BDS2006 we need to export the TAO_Lockable class as
          workaround. Reported this to Borland, hopefully they will fix
          this soon

Mon Dec  5 19:43:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2137_Regression/client.cpp:
          Added include of PI/PI.h to fix test failures in static builds

Mon Dec  5 14:58:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/releasenotes/index.html:
          Small improvements

Sun Dec  4 11:34:11 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Notify/XML_Loader.cpp

        Moved definition of TOPOLOGY_ID_NAME earier in the file to avoid
        undefined argument error.

Sun Dec  4 11:14:45 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/be/be_helper.cpp

        Fixed an unused arg warning.

Sat Dec  3 20:54:28 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/XML_Loader.cpp: Moved the namespace decl
          for TOPOLOGY_ID_NAME inside the VERSIONED_NAMESPACE_DECL block
          to fix broken versioned namespace builds.  Thanks to Ossama for
          pointing this out.

Sat Dec  3 19:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/QtTests/QtTests.mpc:
          Added anytypecode to the client project

Sat Dec  3 09:43:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/constants.idl:
          Removed the wstring constants for the time being, cause issues
          with some builds that lack wchar_t support

Fri Dec  2 16:18:15 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/tests/Notify/performance-tests/RedGreen/RedGreen_Test.cpp (DTOR):
          Add try/catch block around call to ec->destroy() because it
          seems that often in this test the EC is gone by the time
          destroy() gets called.  This raises a COMM_FAILURE which now
          gets caught and noticed printed.  We also now catch and print
          any exception raised in the DTOR since there's little chance of
          doing anything about it, and at least this way we get
          information.

Fri Dec  2 10:26:33 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/XML_Topology_Factory.h: Added 'extern'
          declaration in here as this seems to placate the VC8 compiler's
          errors.

Fri Dec  2 11:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/params_dup.h:
          Added missing include of ace/pre.h

Fri Dec  2 11:12:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1627_Regression/test.mpc:
        * tests/Bug_1551_Regression/test.mpc:
        * tests/Bug_1482_Regression/test.mpc:
        * tests/Bug_1627_Regression/Bug_1627_Regression.mpc:
        * tests/Bug_1551_Regression/Bug_1551_Regression.mpc:
        * tests/Bug_1482_Regression/Bug_1482_Regression.mpc:
          Renamed test.mpc to a more specific name to fix duplicate errors
          in the MPC generation

Fri Dec  2 11:05:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/constants.idl:
          Added several wstring constants for test

Fri Dec  2 01:35:31 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/orbsvcs/SSLIOP/params_dup.c:
        * orbsvcs/orbsvcs/SSLIOP/params_dup.cpp:

          Reintroduced `params_dup.c' and removed `params_dup.cpp' file.
          Some C++ compiler/platform combinations cannot handle the broken
          OpenSSL function pointer conversions.  Stick with a C compiler.

        * orbsvcs/orbsvcs/SSLIOP/params_dup.h:

          Include the new "ace/config-macros.h" header instead of
          "ace/config-lite.h".  The former can be parsed by C compilers.

        * tao/TAO_Singleton_Manager.cpp:
        * tao/TAO_Singleton_Manager.h:

          Moved static "instance_" pointer to an anonymous namespace
          within the implementation file.  Allows the friend declaration
          to be removed, in turn fixing builds that cannot handle the
          global scope qualifier prepended to that friend declaration.

          Removed unused "preallocated_object" static array.

        * tao/Versioned_Namespace.h:

          Update preprocessor check to use new config-macros.h specific
          include guard preprocessor symbol.

Thu Dec  1 08:07:23 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO-INSTALL.html: Updated this file for VxWorks.
          Thanks to Nathan Anderson <nathan dot l dot anderson at lmco dot
          com> for these suggestions.

Thu Dec  1 20:17:29 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/Topology_Object.h:
        * orbsvcs/orbsvcs/Notify/Topology_Object.cpp:

          Removed TOPOLOGY_ID from here.  It should have been nmoved when
          the persistence stuff was broken into a separate library.

        * orbsvcs/orbsvcs/Notify/XML_Loader.cpp:
        * orbsvcs/orbsvcs/Notify/XML_Saver.cpp:
        * orbsvcs/orbsvcs/Notify/XML_Topology_Factory.cpp:

          Moved TOPOLOGY_ID into here since that's all that uses it.

Thu Dec  1 12:08:17 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/Object.h: Revert previous change as it
          apparently confused Borland BC6.

        * orbsvcs/orbsvcs/Notify/Topology_Object.*:
        * orbsvcs/orbsvcs/Notify/Reconnection_Registry.*:

          Changed manifest constants for TOPOLOGY_ID_NAME, REGISTRY_TYPE,
          RECONNECT_ID, RECONNECT_IOR, and REGISTRY_CALLBACK_TYPE from
          statics within the namespace to being declared in the namespace
          in the header, but defined in the .cpp file.  This de-warns on
          OS X Tiger G++ 3.3 builds, but may also have a minor reduction
          in footprint everywhere since now there will be only one
          instance of these rather than an instance everywhere the
          relevant header gets #included.

Thu Dec  1 18:10:48 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/AMH_Exceptions/AMH_Exceptions.mpc:
        * tests/AMH_Oneway/AMH_Oneway.mpc:
        * tests/AMI_Buffering/AMI_Buffering.mpc:
        * tests/Abstract_Interface/Abstract_Interface.mpc:
        * tests/Any/Recursive/RecursiveHello.mpc:
        * tests/BiDirectional/BiDirectional.mpc:
        * tests/BiDirectional_NestedUpcall/BiDir_NestedUpcall.mpc:
        * tests/Big_AMI/Big_AMI.mpc:
        * tests/Big_Oneways/Big_Oneways.mpc:
        * tests/Big_Reply/Big_Reply.mpc:
        * tests/Big_Request_Muxing/Big_Request_Muxing.mpc:
        * tests/Big_Twoways/Big_Twoways.mpc:
        * tests/Blocking_Sync_None/Blocking_Sync_None.mpc:
        * tests/Bug_1020_Basic_Regression/Bug_1020_Basic_Regression.mpc:
        * tests/Bug_1269_Regression/Bug_1269_Regression.mpc:
        * tests/Bug_1270_Regression/Bug_1270_Regression.mpc:
        * tests/Bug_1330_Regression/Bug_1330_Regression.mpc:
        * tests/Bug_1361_Regression/Bug_1361_Regression.mpc:
        * tests/Bug_1476_Regression/Bug_1476_Regression.mpc:
        * tests/Bug_1482_Regression/test.mpc:
        * tests/Bug_1495_Regression/Bug_1495.mpc:
        * tests/Bug_1551_Regression/test.mpc:
        * tests/Bug_1568_Regression/Bug_1568_Regression.mpc:
        * tests/Bug_1627_Regression/test.mpc:
        * tests/Bug_2174_Regression/Bug_2174_Regression.mpc:
        * tests/Bug_2183_Regression/Bug_2183_Regression.mpc:
        * tests/Bug_2234_Regression/Bug_2234_Regression.mpc:
        * tests/CSD_Strategy_Tests/TP_Common/CSD_TP_Test_Lib.mpc:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/CSD_TP_Test_Dynamic.mpc:
        * tests/CSD_Strategy_Tests/TP_Test_Static/CSD_TP_Test_Static.mpc:
        * tests/Cache_Growth_Test/Cache_Growth_Test.mpc:
        * tests/CallbackTest/CallbackTest.mpc:
        * tests/Client_Leaks/Client_Leaks.mpc:
        * tests/Collocation/Collocation.mpc:
        * tests/Connect_Strategy_Test/Connect_Strategy_Test.mpc:
        * tests/Connection_Purging/Connection_Purging.mpc:
        * tests/Crash_On_Write/Crash_On_Write.mpc:
        * tests/Crashed_Callback/Crashed_Callback.mpc:
        * tests/DLL_ORB/DLL_ORB.mpc:
        * tests/DSI_Gateway/DSI_Gateway.mpc:
        * tests/Explicit_Event_Loop/Explicit_Event_Loop.mpc:
        * tests/Exposed_Policies/Exposed_Policies.mpc:
        * tests/FL_Cube/FL_Cube.mpc:
        * tests/Faults/Faults.mpc:
        * tests/File_IO/File_IO.mpc:
        * tests/Forwarding/Forwarding.mpc:
        * tests/Hang_Shutdown/Hang.mpc:
        * tests/Hello/Hello.mpc:
        * tests/ICMG_Any_Bug/Hello.mpc:
        * tests/IPV6/IPV6_Hello.mpc:
        * tests/InterOp-Naming/InterOp-Naming.mpc:
        * tests/Leader_Followers/Leader_Followers.mpc:
        * tests/LongUpcalls/LongUpcalls.mpc:
        * tests/MProfile/MProfile.mpc:
        * tests/MProfile_Connection_Timeout/MProfile_Connection_Timeout.mpc:
        * tests/MProfile_Forwarding/MProfile_Forwarding.mpc:
        * tests/MT_BiDir/MT_BiDir.mpc:
        * tests/MT_Client/MT_Client.mpc:
        * tests/MT_Server/MT_Server.mpc:
        * tests/Multiple/Multiple.mpc:
        * tests/Multiple_Inheritance/Multiple_Inheritance.mpc:
        * tests/Muxed_GIOP_Versions/Muxed_GIOP_Versions.mpc:
        * tests/Muxing/Muxing.mpc:
        * tests/Native_Exceptions/Native_Exceptions.mpc:
        * tests/NestedUpcall/MT_Client_Test/MT_Client_Test.mpc:
        * tests/NestedUpcall/Triangle_Test/TT.mpc:
        * tests/Nested_Event_Loop/Nested_Event_Loop.mpc:
        * tests/No_Server_MT_Connect_Test/No_Server_Connect_Test.mpc:
        * tests/OBV/Any/OBV_Any.mpc:
        * tests/OBV/Factory/OBV_Factory.mpc:
        * tests/OBV/Forward/OBV_Forward.mpc:
        * tests/OBV/Supports/Supports_Test.mpc:
        * tests/OBV/TC_Alignment/OBV_TC_Alignment.mpc:
        * tests/OBV/ValueBox/valuebox.mpc:
        * tests/Object_Loader/Object_Loader.mpc:
        * tests/Objref_Sequence_Test/Objref_Sequence_Test.mpc:
        * tests/OctetSeq/OctetSeq.mpc:
        * tests/Oneway_Buffering/Oneway_Buffering.mpc:
        * tests/Oneways_Invoking_Twoways/Oneways_Invoking_Twoways.mpc:
        * tests/POA/Persistent_ID/Persistent_ID.mpc:
        * tests/Param_Test/Param_Test.mpc:
        * tests/Portable_Interceptors/AMI/PI_AMI.mpc:
        * tests/Portable_Interceptors/Benchmark/PI_Benchmark.mpc:
        * tests/Portable_Interceptors/Bug_1559/Bug_1559.mpc:
        * tests/Portable_Interceptors/Dynamic/PI_Dynamic.mpc:
        * tests/Portable_Interceptors/IORInterceptor/PI_IORInterceptor.mpc:
        * tests/Portable_Interceptors/ORB_Shutdown/PI_ORB_Shutdown.mpc:
        * tests/Portable_Interceptors/PICurrent/PI_PICurrent.mpc:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/PI_Request_Interceptor_Flow.mpc:
        * tests/Portable_Interceptors/Service_Context_Manipulation/PI_Svc_Context_Manip.mpc:
        * tests/QtTests/QtTests.mpc:
        * tests/RTCORBA/Banded_Connections/RTCORBA_Banded_Conn.mpc:
        * tests/RTCORBA/Client_Propagated/RTCORBA_Client_Propagated.mpc:
        * tests/RTCORBA/Client_Protocol/RTCORBA_Client_Protocol.mpc:
        * tests/RTCORBA/Diffserv/RTCORBA_Diffserv.mpc:
        * tests/RTCORBA/Explicit_Binding/RTCORBA_Explicit_Binding.mpc:
        * tests/RTCORBA/Persistent_IOR/RTCORBA_Persistent_IOR.mpc:
        * tests/RTCORBA/Policy_Combinations/RTCORBA_Policy_Combinations.mpc:
        * tests/RTCORBA/Priority_Inversion_With_Bands/Priority_Inversion_With_Bands.mpc:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/PaE_Selection.mpc:
        * tests/RTCORBA/Server_Declared/RTCORBA_Server_Declared.mpc:
        * tests/RTCORBA/Server_Protocol/RTCORBA_Server_Protocol.mpc:
        * tests/RTCORBA/Thread_Pool/RTCORBA_Thread_Pool.mpc:
        * tests/RTScheduling/Scheduling_Interceptor/Scheduler_Interceptor.mpc:
        * tests/Reliable_Oneways/Reliable_Oneways.mpc:
        * tests/Server_Connection_Purging/Server_Connection_Purging.mpc:
        * tests/Server_Leaks/Server_Leaks.mpc:
        * tests/Single_Read/Single_Read.mpc:
        * tests/Smart_Proxies/Smart_Proxies.mpc:
        * tests/Stack_Recursion/Stack_Recursion.mpc:
        * tests/Strategies/Strategies.mpc:
        * tests/Timed_Buffered_Oneways/Timed_Buffered_Oneways.mpc:
        * tests/Timeout/Timeout.mpc:
        * tests/Two_Objects/Two_Objects.mpc:
        * tests/UNKNOWN_Exception/UNKNOWN_Exception.mpc:
        * tests/Xt_Stopwatch/Xt_Stopwatch.mpc:

          Added 'after += ...' lines to files where projects share one or
          more IDL files. This change will order the builds and eliminate
          concurrency problems in VC8 builds. This is a temporary solution
          until there is time to apply J.T. Conklin's <jtc@acorntoolworks.com>
          approach of creating a separate project in each file that just
          executes the IDL compiler on the shared files, and ordering all
          other projects that build the resulting generated files to
          come after this step.

Thu Dec  1 16:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/Thread_Pool.cpp:
          Fixed bug in thread pool id calculation

Thu Dec  1 16:02:36 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/MT_Timeout/MT_Timeout.mpc:

          Added 'after' line in one project to order the builds (which
          share an IDL file) for VC8.

Thu Dec  1 14:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO-INSTALL.html:
          Updated VxWorks part

Wed Nov 30 10:23:05 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/performance-tests/RTEvent/lib/Client_Options.h:
        * orbsvcs/performance-tests/RTEvent/lib/Low_Priority_Setup.h:
        * orbsvcs/performance-tests/RTEvent/lib/RTEC_Initializer.h:
        * orbsvcs/performance-tests/RTEvent/lib/Send_Task.h:
        * orbsvcs/tests/EC_Throughput/ECT_Driver.h:
        * orbsvcs/tests/Event/Basic/BCast.h:
        * orbsvcs/tests/Event/Mcast/Common/EC_Wrapper.h:
        * orbsvcs/tests/Event/Performance/Latency.h:
        * orbsvcs/tests/Event/lib/Driver.h:
        * orbsvcs/tests/FT_App/FT_Creator.h:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.h:
        * orbsvcs/tests/FtRtEvent/PushSupplier.h:

          Fixed forward declarations so that they take into account
          versioned namespace support.

Wed Nov 30 00:33:21 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * examples/Content_Server/AMI_Iterator/AMI_Iterator.mpc:
        * examples/Content_Server/AMI_Observer/AMI_Observer.mpc:
        * examples/Content_Server/SMI_Iterator/SMI_Iterator.mpc:
        * examples/Load_Balancing_persistent/Load_Balancing_persistent.mpc:
        * examples/POA/Generic_Servant/POA_Generic_Servant.mpc:
        * examples/POA/TIE/POA_TIE.mpc:
        * examples/Persistent_Grid/Persistent_Grid.mpc:
        * orbsvcs/examples/LoadBalancing/LoadBalancing.mpc:
        * orbsvcs/orbsvcs/AV.mpc:
        * orbsvcs/tests/EC_Custom_Marshal/EC_Custom_Marshal.mpc:
        * orbsvcs/tests/EC_Throughput/EC_Throughput.mpc:
        * orbsvcs/tests/ImplRepo/ImplRepo.mpc:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/Latency_Test.mpc:

          Disable these projects when "ace_for_tao" is enabled.

        * tao/GIOP_Message_Generator_Parser_Impl.inl:

          Removed "static" keywork from constant variable declaration.
          Corrected semantics are not supported in shared libraries on
          VxWorks.  Thanks to Frank Rehberger for suggesting the change,
          and to Johnny for pointing out the VxWorks issue.  [Bug 2304]

Wed Nov 30 14:59:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/RT_ORB_Loader.cpp:
        * tao/RTCORBA/Thread_Pool.{h,cpp}:
          Fixed warnings in GCC build

Wed Nov 30 12:50:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Security/MT_SSLIOP/run_test_heavy.pl:
          New regression test script. Test the TAO SSLIOP under heavy load
          and it will fail. This test takes a long time to succeed so
          didn't put it in the standard test suite. We have no idea why
          it fails, but something is buggy in the SSLIOP support

Wed Nov 30 11:13:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/RT_ORB.{h,cpp}:
        * tao/RTCORBA/RT_ORB_Loader.cpp:
        * tao/RTCORBA/RT_ORBInitializer.{h,cpp}:
        * tao/RTCORBA/Thread_Pool.{h,cpp,inl}:
        * docs/rtcorba/features.html:
          When using RTCorba threadpools dynamic threads can be used, these
          will be created on demand but will life forever after that. A new
          option has been added to the RT_ORB_Loader:
          RTORBDynamicThreadIdleTimeout. With this option a number of micro
          seconds can be specified. If a dynamic thread has not performed
          anywork in that time it will end itself. This way dynamic threads
          can go away if the load reduces again on the server, at the moment
          they are needed they are recreated. Because of this some internal
          administration has been updated, argument parsing has been updated
          and the timeout is passed through several interfacs.

        * docs/releasenotes/index.html:
          Fixed RTCorba link

Wed Nov 30 08:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/RequestProcessingStrategyAOMOnly.h:
          Added brief class description

Tue Nov 29 06:44:35 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/FTRT_Event_Service/Event_Service/FT_EventService.h:
        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.h:
        * orbsvcs/FT_ReplicationManager/FT_Property_Validator.cpp:
        * orbsvcs/FT_ReplicationManager/FT_Property_Validator.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.h:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
        * orbsvcs/Fault_Detector/Fault_Detector_i.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_i.h:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.h:
        * orbsvcs/ImplRepo_Service/ImR_Locator_i.h:
        * orbsvcs/Notify_Service/Notify_Service.h:
        * orbsvcs/orbsvcs/ETCL/ETCL_Interpreter.h:
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Extensions.h:

          More versioned namespace build fixes.

Tue Nov 29 13:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/LRU_Connection_Purging_Strategy.cpp:
          Use prefix increment instead of postfix

Tue Nov 29 11:21:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.h:
          Added argument names to perform_work methods, improves doxygen
          docu

Tue Nov 29 09:48:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/PluggableUDP/tests/Performance/Performance.mpc:
          Added 'after' lines to order the builds for VC8.

Mon Nov 28 22:22:11 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Nested_Upcall_Crash/Nested_Upcall_Crash.mpc:
        * tests/RTCORBA/Linear_Priority/RTCORBA_Linear_Priority.mpc:

          Added 'after' lines to order the builds for VC8.

Mon Nov 28 12:09:12 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/CSD_Strategy/TestApps/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/Broken/ClientApp.cpp:
        * tests/CSD_Strategy_Tests/Broken/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_1/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_2/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_3/ClientApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_3/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_4/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Static/ServerApp.cpp:

          Made main thread call ACE_Object_Manager::instance()->wait()
          after orb shutdown. This would avoid the problem that the main
          thread possiably exit before all CSD threads exit and crash
          upon exit.

Mon Nov 28 07:30:58 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP/params_dup.h:

          Added missing "/**/ between "include" and "{pre,post}.h".

        * tao/Utils/Server_Main.h:

          Fixed "obsolete #pragma once" warning.

Sun Nov 27 04:00:27 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:
        * orbsvcs/orbsvcs/Scheduler_Factory.h:
        * orbsvcs/orbsvcs/Scheduler_Factory.i:
        * orbsvcs/orbsvcs/AV/AV_Core.h:
        * orbsvcs/orbsvcs/AV/Endpoint_Strategy.h:
        * orbsvcs/orbsvcs/AV/Policy.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Factory.h:
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Changes.h:
        * orbsvcs/orbsvcs/ETCL/ETCL_l.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Adapters.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.h:
        * orbsvcs/orbsvcs/Event/EC_ConsumerControl.cpp:
        * orbsvcs/orbsvcs/Event/EC_ConsumerControl.h:
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.h:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Loader.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Loader.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_Loader.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_Loader.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Identification_Service.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Identification_Service.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Service.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Service.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connector.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connector_Impl.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Factory.h:
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS.h:
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS.inl:
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS_T.h:
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS_T.inl:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS.h:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS.inl:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS_T.h:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS_T.inl:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.h:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.inl:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.h:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.inl:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.h:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.inl:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS_T.h:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS_T.inl:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.h:
        * orbsvcs/orbsvcs/IFRService/ProvidesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/PublishesDef_i.h:
        * orbsvcs/orbsvcs/Log/BasicLog_i.cpp:
        * orbsvcs/orbsvcs/Log/BasicLog_i.h:
        * orbsvcs/orbsvcs/Log/Hash_LogStore.h:
        * orbsvcs/orbsvcs/Log/Log_Compaction_Handler.h:
        * orbsvcs/orbsvcs/Log/Log_Flush_Handler.h:
        * orbsvcs/orbsvcs/Naming/Naming_Service_Container.h:
        * orbsvcs/orbsvcs/Notify/Factory.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates_T.h:
        * orbsvcs/orbsvcs/Notify/Property.h:
        * orbsvcs/orbsvcs/Notify/Timer.h:
        * orbsvcs/orbsvcs/Notify/Timer_Reactor.h:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connection_Handler.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_EVP_PKEY.cpp:
        * orbsvcs/orbsvcs/SSLIOP/params_dup.c:
        * orbsvcs/orbsvcs/SSLIOP/params_dup.cpp:
        * orbsvcs/orbsvcs/SSLIOP/params_dup.h:
        * orbsvcs/orbsvcs/Trader/Constraint_l.cpp:
        * tao/Basic_Types.h:
        * tao/TAO_Singleton_Manager.inl:
        * tao/AnyTypeCode/String_TypeCode_Traits.h:
        * tao/AnyTypeCode/TAOA.h:
        * tao/AnyTypeCode/TypeCodeA.cpp:
        * tao/AnyTypeCode/TypeCode_Case_Base_T.h:
        * tao/AnyTypeCode/TypeCode_Constants.cpp:
        * tao/IFR_Client/IFR_BasicC.cpp:
        * tao/ImR_Client/ImR_Client.cpp:
        * tao/ImR_Client/ImR_Client.h:
        * tao/ObjRefTemplate/ORT_Adapter_Factory_Impl.cpp:
        * tao/ObjRefTemplate/ORT_Adapter_Factory_Impl.h:
        * tao/PI/InvalidSlotA.cpp:
        * tao/PI/ORBInitInfoC.cpp:
        * tao/PI/ORBInitInfoC.h:
        * tao/PI/PICurrentC.cpp:
        * tao/PortableServer/IdAssignmentStrategyFactoryImpl.cpp:
        * tao/PortableServer/IdAssignmentStrategyFactoryImpl.h:
        * tao/PortableServer/IdAssignmentStrategySystem.cpp:
        * tao/PortableServer/IdAssignmentStrategySystem.h:
        * tao/PortableServer/IdAssignmentStrategyUser.cpp:
        * tao/PortableServer/IdAssignmentStrategyUser.h:
        * tao/PortableServer/IdUniquenessStrategyFactoryImpl.cpp:
        * tao/PortableServer/IdUniquenessStrategyFactoryImpl.h:
        * tao/PortableServer/IdUniquenessStrategyMultiple.cpp:
        * tao/PortableServer/IdUniquenessStrategyMultiple.h:
        * tao/PortableServer/IdUniquenessStrategyUnique.cpp:
        * tao/PortableServer/IdUniquenessStrategyUnique.h:
        * tao/PortableServer/IdUniquenessStrategyUniqueFactoryImpl.cpp:
        * tao/PortableServer/IdUniquenessStrategyUniqueFactoryImpl.h:
        * tao/PortableServer/ImplicitActivationStrategyExplicit.cpp:
        * tao/PortableServer/ImplicitActivationStrategyExplicit.h:
        * tao/PortableServer/ImplicitActivationStrategyFactoryImpl.cpp:
        * tao/PortableServer/ImplicitActivationStrategyFactoryImpl.h:
        * tao/PortableServer/ImplicitActivationStrategyImplicit.cpp:
        * tao/PortableServer/ImplicitActivationStrategyImplicit.h:
        * tao/PortableServer/LifespanStrategyFactoryImpl.cpp:
        * tao/PortableServer/LifespanStrategyFactoryImpl.h:
        * tao/PortableServer/LifespanStrategyPersistentFactoryImpl.cpp:
        * tao/PortableServer/LifespanStrategyPersistentFactoryImpl.h:
        * tao/PortableServer/LifespanStrategyTransientFactoryImpl.cpp:
        * tao/PortableServer/LifespanStrategyTransientFactoryImpl.h:
        * tao/PortableServer/Non_Servant_Upcall.h:
        * tao/PortableServer/PortableServer.cpp:
        * tao/PortableServer/PortableServerA.cpp:
        * tao/PortableServer/RequestProcessingStrategyAOMOnlyFactoryImpl.cpp:
        * tao/PortableServer/RequestProcessingStrategyAOMOnlyFactoryImpl.h:
        * tao/PortableServer/RequestProcessingStrategyDefaultServantFI.cpp:
        * tao/PortableServer/RequestProcessingStrategyDefaultServantFI.h:
        * tao/PortableServer/RequestProcessingStrategyFactoryImpl.cpp:
        * tao/PortableServer/RequestProcessingStrategyFactoryImpl.h:
        * tao/PortableServer/RequestProcessingStrategyServantActivatorFI.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantActivatorFI.h:
        * tao/PortableServer/RequestProcessingStrategyServantLocatorFI.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantLocatorFI.h:
        * tao/PortableServer/ServantRetentionStrategyFactory.h:
        * tao/PortableServer/ServantRetentionStrategyFactoryImpl.cpp:
        * tao/PortableServer/ServantRetentionStrategyFactoryImpl.h:
        * tao/PortableServer/ServantRetentionStrategyNonRetainFactoryImpl.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetainFactoryImpl.h:
        * tao/PortableServer/ServantRetentionStrategyRetainFactoryImpl.cpp:
        * tao/PortableServer/ServantRetentionStrategyRetainFactoryImpl.h:
        * tao/PortableServer/StrategyFactory.h:
        * tao/PortableServer/ThreadStrategyFactoryImpl.cpp:
        * tao/PortableServer/ThreadStrategyFactoryImpl.h:
        * tao/PortableServer/ThreadStrategyORBControl.cpp:
        * tao/PortableServer/ThreadStrategyORBControl.h:
        * tao/PortableServer/ThreadStrategySingle.cpp:
        * tao/PortableServer/ThreadStrategySingle.h:
        * tao/PortableServer/ThreadStrategySingleFactoryImpl.cpp:
        * tao/PortableServer/ThreadStrategySingleFactoryImpl.h:
        * tao/PortableServer/Var_Size_SArgument_T.cpp:
        * tao/PortableServer/Var_Size_SArgument_T.h:
        * tao/PortableServer/Var_Size_SArgument_T.inl:
        * tao/RTCORBA/Network_Priority_Mapping_Manager.h:
        * tao/RTCORBA/RTCORBAA.cpp:
        * tao/RTCORBA/RT_ORB.h:
        * tao/RTPortableServer/RTPortableServerA.cpp:
        * tao/RTScheduling/RTSchedulerA.cpp:
        * tao/TypeCodeFactory/TypeCodeFactoryA.cpp:
        * tao/Utils/PolicyList_Destroyer.h:
        * tao/Utils/Server_Main.cpp:
        * tao/Utils/Server_Main.h:

          Corrected build errors in versioned namespace builds.

Sat Nov 26 14:57:56 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/include/idl_global.h:

          Modified files overlooked in the checkin of

          Fri Nov 25 19:26:03 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

Fri Nov 25 18:54:19 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * NEWS:

          Updated with latest versioned namespace information.

        * TAO_IDL/tao_idl.mpc:
        * orbsvcs/orbsvcs/CosNaming_Serv.mpc:
        * orbsvcs/orbsvcs/FTORB.mpc:
        * orbsvcs/orbsvcs/IFRService.mpc:
        * orbsvcs/orbsvcs/PortableGroup.mpc:
        * orbsvcs/orbsvcs/RTEvent_Serv.mpc:
        * orbsvcs/orbsvcs/Svc_Utils.mpc:
        * tao/Strategies.mpc:

          Updated to take into account latest "ace_for_tao" subset
          changes.

        * tao/TAO_Singleton_Manager.h:
        * tao/AnyTypeCode/CharSeqA.cpp:
        * tao/AnyTypeCode/CharSeqA.h:
        * tao/AnyTypeCode/CurrentA.cpp:
        * tao/AnyTypeCode/CurrentA.h:
        * tao/AnyTypeCode/DomainA.cpp:
        * tao/AnyTypeCode/DomainA.h:
        * tao/AnyTypeCode/DoubleSeqA.cpp:
        * tao/AnyTypeCode/DoubleSeqA.h:
        * tao/AnyTypeCode/DynamicA.cpp:
        * tao/AnyTypeCode/DynamicA.h:
        * tao/AnyTypeCode/Dynamic_ParameterA.cpp:
        * tao/AnyTypeCode/Dynamic_ParameterA.h:
        * tao/AnyTypeCode/ExceptionA.cpp:
        * tao/AnyTypeCode/ExceptionA.h:
        * tao/AnyTypeCode/FloatSeqA.cpp:
        * tao/AnyTypeCode/FloatSeqA.h:
        * tao/AnyTypeCode/GIOPA.cpp:
        * tao/AnyTypeCode/GIOPA.h:
        * tao/AnyTypeCode/IIOPA.cpp:
        * tao/AnyTypeCode/IIOPA.h:
        * tao/AnyTypeCode/IIOP_EndpointsA.cpp:
        * tao/AnyTypeCode/IIOP_EndpointsA.h:
        * tao/AnyTypeCode/IOP_IORA.cpp:
        * tao/AnyTypeCode/IOP_IORA.h:
        * tao/AnyTypeCode/LongDoubleSeqA.cpp:
        * tao/AnyTypeCode/LongDoubleSeqA.h:
        * tao/AnyTypeCode/LongLongSeqA.cpp:
        * tao/AnyTypeCode/LongLongSeqA.h:
        * tao/AnyTypeCode/LongSeqA.cpp:
        * tao/AnyTypeCode/LongSeqA.h:
        * tao/AnyTypeCode/Messaging_PolicyValueA.cpp:
        * tao/AnyTypeCode/Messaging_PolicyValueA.h:
        * tao/AnyTypeCode/ObjectIdListA.cpp:
        * tao/AnyTypeCode/ObjectIdListA.h:
        * tao/AnyTypeCode/PI_ForwardA.cpp:
        * tao/AnyTypeCode/PI_ForwardA.h:
        * tao/AnyTypeCode/ParameterModeA.cpp:
        * tao/AnyTypeCode/ParameterModeA.h:
        * tao/AnyTypeCode/PolicyA.cpp:
        * tao/AnyTypeCode/PolicyA.h:
        * tao/AnyTypeCode/Policy_ForwardA.cpp:
        * tao/AnyTypeCode/Policy_ForwardA.h:
        * tao/AnyTypeCode/PortableInterceptorA.h:
        * tao/AnyTypeCode/ServicesA.cpp:
        * tao/AnyTypeCode/ServicesA.h:
        * tao/AnyTypeCode/ShortSeqA.cpp:
        * tao/AnyTypeCode/ShortSeqA.h:
        * tao/AnyTypeCode/StringSeqA.cpp:
        * tao/AnyTypeCode/StringSeqA.h:
        * tao/AnyTypeCode/SystemExceptionA.cpp:
        * tao/AnyTypeCode/SystemExceptionA.h:
        * tao/AnyTypeCode/TAOA.cpp:
        * tao/AnyTypeCode/TimeBaseA.cpp:
        * tao/AnyTypeCode/TimeBaseA.h:
        * tao/AnyTypeCode/ULongLongSeqA.cpp:
        * tao/AnyTypeCode/ULongLongSeqA.h:
        * tao/AnyTypeCode/ULongSeqA.cpp:
        * tao/AnyTypeCode/ULongSeqA.h:
        * tao/AnyTypeCode/UShortSeqA.cpp:
        * tao/AnyTypeCode/UShortSeqA.h:
        * tao/AnyTypeCode/ValueModifierA.cpp:
        * tao/AnyTypeCode/ValueModifierA.h:
        * tao/AnyTypeCode/VisibilityA.cpp:
        * tao/AnyTypeCode/VisibilityA.h:
        * tao/AnyTypeCode/WCharSeqA.cpp:
        * tao/AnyTypeCode/WCharSeqA.h:
        * tao/AnyTypeCode/WStringSeqA.cpp:
        * tao/AnyTypeCode/WStringSeqA.h:
        * tao/AnyTypeCode/WrongTransactionA.cpp:
        * tao/AnyTypeCode/WrongTransactionA.h:
        * tao/AnyTypeCode/orb_typesA.cpp:
        * tao/AnyTypeCode/orb_typesA.h:
        * tao/CSD_Framework/CSD_FrameworkA.cpp:
        * tao/CSD_Framework/CSD_FrameworkA.h:
        * tao/CSD_Framework/CSD_FrameworkC.cpp:
        * tao/CSD_Framework/CSD_FrameworkC.h:
        * tao/Domain/DomainS.cpp:
        * tao/Domain/DomainS.h:
        * tao/Domain/DomainS.inl:
        * tao/Domain/DomainS_T.h:
        * tao/Domain/DomainS_T.inl:
        * tao/DynamicAny/DynamicAnyC.cpp:
        * tao/DynamicAny/DynamicAnyC.h:
        * tao/IFR_Client/IFR_BaseC.cpp:
        * tao/IFR_Client/IFR_BaseC.h:
        * tao/IFR_Client/IFR_BaseC.inl:
        * tao/IFR_Client/IFR_BaseS.h:
        * tao/IFR_Client/IFR_BasicC.h:
        * tao/IFR_Client/IFR_BasicC.inl:
        * tao/IFR_Client/IFR_ComponentsC.cpp:
        * tao/IFR_Client/IFR_ComponentsC.h:
        * tao/IFR_Client/IFR_ComponentsC.inl:
        * tao/IFR_Client/IFR_ExtendedC.cpp:
        * tao/IFR_Client/IFR_ExtendedC.h:
        * tao/IFR_Client/IFR_ExtendedC.inl:
        * tao/IORInterceptor/IORInfoC.cpp:
        * tao/IORInterceptor/IORInfoC.h:
        * tao/IORInterceptor/IORInterceptorC.cpp:
        * tao/IORInterceptor/IORInterceptorC.h:
        * tao/IORManipulation/IORA.cpp:
        * tao/IORManipulation/IORC.cpp:
        * tao/IORManipulation/IORC.h:
        * tao/IORTable/IORTableC.cpp:
        * tao/IORTable/IORTableC.h:
        * tao/ImR_Client/ImplRepoC.cpp:
        * tao/ImR_Client/ImplRepoC.h:
        * tao/ImR_Client/ImplRepoC.inl:
        * tao/ImR_Client/ImplRepoS.cpp:
        * tao/ImR_Client/ImplRepoS.h:
        * tao/ImR_Client/ServerObjectC.cpp:
        * tao/ImR_Client/ServerObjectC.h:
        * tao/ImR_Client/ServerObjectC.inl:
        * tao/ImR_Client/ServerObjectS.cpp:
        * tao/ImR_Client/ServerObjectS.h:
        * tao/Messaging/ExceptionHolderA.cpp:
        * tao/Messaging/ExceptionHolderA.h:
        * tao/Messaging/ExceptionHolderC.cpp:
        * tao/Messaging/ExceptionHolderC.h:
        * tao/Messaging/ExceptionHolderC.inl:
        * tao/Messaging/MessagingA.cpp:
        * tao/Messaging/MessagingA.h:
        * tao/Messaging/MessagingC.cpp:
        * tao/Messaging/MessagingC.h:
        * tao/Messaging/MessagingC.inl:
        * tao/Messaging/MessagingS.cpp:
        * tao/Messaging/MessagingS.h:
        * tao/Messaging/MessagingS_T.h:
        * tao/Messaging/MessagingS_T.inl:
        * tao/Messaging/Messaging_No_ImplA.cpp:
        * tao/Messaging/Messaging_No_ImplA.h:
        * tao/Messaging/Messaging_No_ImplC.cpp:
        * tao/Messaging/Messaging_No_ImplC.h:
        * tao/Messaging/Messaging_RT_PolicyA.cpp:
        * tao/Messaging/Messaging_RT_PolicyA.h:
        * tao/Messaging/Messaging_RT_PolicyC.cpp:
        * tao/Messaging/Messaging_RT_PolicyC.h:
        * tao/Messaging/Messaging_SyncScope_PolicyA.cpp:
        * tao/Messaging/Messaging_SyncScope_PolicyA.h:
        * tao/Messaging/Messaging_SyncScope_PolicyC.cpp:
        * tao/Messaging/Messaging_SyncScope_PolicyC.h:
        * tao/Messaging/OldExceptionHolderA.cpp:
        * tao/Messaging/OldExceptionHolderA.h:
        * tao/Messaging/OldExceptionHolderC.cpp:
        * tao/Messaging/OldExceptionHolderC.h:
        * tao/Messaging/OldExceptionHolderC.inl:
        * tao/Messaging/PollableC.cpp:
        * tao/Messaging/PollableC.h:
        * tao/Messaging/TAO_ExtA.cpp:
        * tao/Messaging/TAO_ExtA.h:
        * tao/Messaging/TAO_ExtC.cpp:
        * tao/Messaging/TAO_ExtC.h:
        * tao/ObjRefTemplate/Default_ORTA.cpp:
        * tao/ObjRefTemplate/Default_ORTC.cpp:
        * tao/ObjRefTemplate/Default_ORTC.h:
        * tao/ObjRefTemplate/ObjectReferenceTemplateA.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.h:
        * tao/ObjRefTemplate/ObjectReferenceTemplate_includeC.h:
        * tao/PI/ClientRequestInfoA.cpp:
        * tao/PI/ClientRequestInfoA.h:
        * tao/PI/ClientRequestInfoC.cpp:
        * tao/PI/ClientRequestInterceptorA.cpp:
        * tao/PI/ClientRequestInterceptorA.h:
        * tao/PI/ClientRequestInterceptorC.cpp:
        * tao/PI/InterceptorA.cpp:
        * tao/PI/InterceptorA.h:
        * tao/PI/InterceptorC.cpp:
        * tao/PI/InterceptorC.h:
        * tao/PI/InvalidSlotA.h:
        * tao/PI/InvalidSlotC.cpp:
        * tao/PI/InvalidSlotC.h:
        * tao/PI/ORBInitializerA.cpp:
        * tao/PI/ORBInitializerA.h:
        * tao/PI/ORBInitializerC.cpp:
        * tao/PI/ORBInitializerC.h:
        * tao/PI/PICurrentA.cpp:
        * tao/PI/PICurrentA.h:
        * tao/PI/PICurrentC.h:
        * tao/PI/PIForwardRequestA.cpp:
        * tao/PI/PIForwardRequestA.h:
        * tao/PI/PIForwardRequestC.cpp:
        * tao/PI/PIForwardRequestC.h:
        * tao/PI/PolicyFactoryA.cpp:
        * tao/PI/PolicyFactoryA.h:
        * tao/PI/PolicyFactoryC.cpp:
        * tao/PI/PolicyFactoryC.h:
        * tao/PI/RequestInfoA.cpp:
        * tao/PI/RequestInfoA.h:
        * tao/PI/RequestInfoC.cpp:
        * tao/PI/RequestInfoC.h:
        * tao/PI_Server/ServerRequestInfoA.cpp:
        * tao/PI_Server/ServerRequestInfoA.h:
        * tao/PI_Server/ServerRequestInfoC.cpp:
        * tao/PI_Server/ServerRequestInfoC.h:
        * tao/PI_Server/ServerRequestInterceptorA.cpp:
        * tao/PI_Server/ServerRequestInterceptorA.h:
        * tao/PI_Server/ServerRequestInterceptorC.cpp:
        * tao/PI_Server/ServerRequestInterceptorC.h:
        * tao/PortableServer/AdapterActivatorA.cpp:
        * tao/PortableServer/AdapterActivatorA.h:
        * tao/PortableServer/AdapterActivatorC.cpp:
        * tao/PortableServer/AdapterActivatorC.h:
        * tao/PortableServer/ForwardRequestA.cpp:
        * tao/PortableServer/ForwardRequestA.h:
        * tao/PortableServer/ForwardRequestC.cpp:
        * tao/PortableServer/ForwardRequestC.h:
        * tao/PortableServer/IdAssignmentPolicyA.cpp:
        * tao/PortableServer/IdAssignmentPolicyA.h:
        * tao/PortableServer/IdAssignmentPolicyC.cpp:
        * tao/PortableServer/IdAssignmentPolicyC.h:
        * tao/PortableServer/IdUniquenessPolicyA.cpp:
        * tao/PortableServer/IdUniquenessPolicyA.h:
        * tao/PortableServer/IdUniquenessPolicyC.cpp:
        * tao/PortableServer/IdUniquenessPolicyC.h:
        * tao/PortableServer/ImplicitActivationPolicyA.cpp:
        * tao/PortableServer/ImplicitActivationPolicyA.h:
        * tao/PortableServer/ImplicitActivationPolicyC.cpp:
        * tao/PortableServer/ImplicitActivationPolicyC.h:
        * tao/PortableServer/LifespanPolicyA.cpp:
        * tao/PortableServer/LifespanPolicyA.h:
        * tao/PortableServer/LifespanPolicyC.cpp:
        * tao/PortableServer/LifespanPolicyC.h:
        * tao/PortableServer/POAManagerC.cpp:
        * tao/PortableServer/POAManagerC.h:
        * tao/PortableServer/PS_CurrentC.cpp:
        * tao/PortableServer/PS_CurrentC.h:
        * tao/PortableServer/PS_ForwardA.cpp:
        * tao/PortableServer/PS_ForwardA.h:
        * tao/PortableServer/PS_ForwardC.cpp:
        * tao/PortableServer/PS_ForwardC.h:
        * tao/PortableServer/PolicyS.cpp:
        * tao/PortableServer/PolicyS.h:
        * tao/PortableServer/PolicyS_T.h:
        * tao/PortableServer/PolicyS_T.inl:
        * tao/PortableServer/PortableServerC.cpp:
        * tao/PortableServer/PortableServerC.h:
        * tao/PortableServer/PortableServerS.h:
        * tao/PortableServer/PortableServer_includeC.h:
        * tao/PortableServer/RequestProcessingPolicyA.cpp:
        * tao/PortableServer/RequestProcessingPolicyA.h:
        * tao/PortableServer/RequestProcessingPolicyC.cpp:
        * tao/PortableServer/RequestProcessingPolicyC.h:
        * tao/PortableServer/ServantActivatorA.cpp:
        * tao/PortableServer/ServantActivatorA.h:
        * tao/PortableServer/ServantActivatorC.cpp:
        * tao/PortableServer/ServantActivatorC.h:
        * tao/PortableServer/ServantLocatorA.cpp:
        * tao/PortableServer/ServantLocatorA.h:
        * tao/PortableServer/ServantLocatorC.cpp:
        * tao/PortableServer/ServantLocatorC.h:
        * tao/PortableServer/ServantManagerA.cpp:
        * tao/PortableServer/ServantManagerA.h:
        * tao/PortableServer/ServantManagerC.cpp:
        * tao/PortableServer/ServantManagerC.h:
        * tao/PortableServer/ServantRetentionPolicyA.cpp:
        * tao/PortableServer/ServantRetentionPolicyA.h:
        * tao/PortableServer/ServantRetentionPolicyC.cpp:
        * tao/PortableServer/ServantRetentionPolicyC.h:
        * tao/PortableServer/ThreadPolicyA.cpp:
        * tao/PortableServer/ThreadPolicyA.h:
        * tao/PortableServer/ThreadPolicyC.cpp:
        * tao/PortableServer/ThreadPolicyC.h:
        * tao/RTCORBA/RTCORBAC.cpp:
        * tao/RTCORBA/RTCORBAC.h:
        * tao/RTCORBA/RTCORBA_includeC.h:
        * tao/RTPortableServer/RTPortableServerC.cpp:
        * tao/RTPortableServer/RTPortableServerC.h:
        * tao/RTPortableServer/RTPortableServerS.h:
        * tao/RTPortableServer/RTPortableServer_includeC.h:
        * tao/RTScheduling/RTSchedulerC.cpp:
        * tao/RTScheduling/RTSchedulerC.h:
        * tao/RTScheduling/RTScheduler_includeA.h:
        * tao/RTScheduling/RTScheduler_includeC.h:
        * tao/Strategies/sciop_endpointsC.cpp:
        * tao/Strategies/sciop_endpointsC.h:
        * tao/Strategies/uiop_endpointsC.cpp:
        * tao/Strategies/uiop_endpointsC.h:
        * tao/TypeCodeFactory/TypeCodeFactoryC.cpp:
        * tao/TypeCodeFactory/TypeCodeFactoryC.h:
        * tao/Valuetype/StringValueC.cpp:
        * tao/Valuetype/StringValueC.h:
        * tao/Valuetype/StringValueC.inl:

          Added missing versioned namespace support.

Fri Nov 25 19:26:03 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_field.cpp:
        * TAO_IDL/fe/fe_declarator.cpp:

          Added code generation for explicit inclusionn of
          tao/Managed_Types.h if TAO_(W)String_Manager is seen
          anywhere in the generated code. This inclusion is
          redundant now, but will make it easier to merge the
          new sequence implementation branch, where managed_Types.h
          will be changed to the name of a new file, into which
          templatized versions of TAO_(W)String_Manager have
          been factored.

Fri Nov 25 07:43:56 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/TAO_Singleton_Manager.h (~TAO_Singleton_Manager):

          Made destructor protected to address warnings about a class with
          a private destructor and no friends.

Fri Nov 25 15:06:43 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/fe_interface_header.cpp:

          Applied a patch submitted by Max Khon <mkhon@swsoft.com>
          to fix a bug in computing the inheritance list of an IDL
          interface. This fix closes [BUGID:2318].

Fri Nov 25 13:01:23 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/ImplRepo/run_test.pl:

          Added time parameter to WaitKill to fix spurious test error.

Fri Nov 25 11:18:12 2005  Simon McQueen  <sm@prismtech.com>

        * orsbvcs/tests/Bug_2074_Regression/run_test.pl:

          Correct the use lib path to give this a sporting chance.
          Can't have ever been run from this location.

Thu Nov 24 19:50:35 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.h:

          Override the base class ::decode method with one that
          doesn't try and extract an object key from the CDR encoding.
          MIOP profiles don't have an object key marshalled between
          the address info and the tagged components.

          This fixes bug #2316.

        * orbsvcs/tests/Bug_2316_Regression/Bug_2316_Regression.mpc:
        * orbsvcs/tests/Bug_2316_Regression/README:
        * orbsvcs/tests/Bug_2316_Regression/Test.idl:
        * orbsvcs/tests/Bug_2316_Regression/Test_impl.cpp:
        * orbsvcs/tests/Bug_2316_Regression/Test_impl.h:
        * orbsvcs/tests/Bug_2316_Regression/client.cpp:
        * orbsvcs/tests/Bug_2316_Regression/run_test.pl:
        * orbsvcs/tests/Bug_2316_Regression/server.cpp:
        * orbsvcs/tests/Bug_2316_Regression/svc.conf:

          Regression test for the above.

Thu Nov 24 19:07:56 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.cpp:

          Fix calculation of protocol name length. This fixes the
          failure in orbsvcs/tests/Miop/McastHello.

Thu Nov 24 15:56:31 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Bug_1670_Regression/Bug_1670_Regression.mpc:

          Added 'after' line in one project to avoid concurrently
          clashes in VC8 builds, since the two projects share an
          IDL file.

Thu Nov 24 03:01:29 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEvent.h:
        * orbsvcs/orbsvcs/ETCL/ETCL_l.cpp:
        * orbsvcs/orbsvcs/ETCL/ETCL_y.cpp:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.i:
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.i:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ConnectionHandler_T.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Factory.cpp:
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor.h:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Notify/Refcountable.cpp:
        * orbsvcs/orbsvcs/Notify/XML_Topology_Factory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp:
        * orbsvcs/orbsvcs/Security/Security_Current.h:
        * orbsvcs/orbsvcs/Trader/Constraint_Visitors.h:
        * orbsvcs/orbsvcs/Trader/Constraint_l.cpp:
        * orbsvcs/orbsvcs/Trader/Trader.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.h:
        * tao/Acceptor_Registry.h:
        * tao/Asynch_Reply_Dispatcher_Base.h:
        * tao/BooleanSeqC.cpp:
        * tao/BooleanSeqC.h:
        * tao/CDR.h:
        * tao/CONV_FRAMEC.cpp:
        * tao/CONV_FRAMEC.h:
        * tao/CORBA_methods.h:
        * tao/CharSeqC.cpp:
        * tao/CharSeqC.h:
        * tao/Client_Strategy_Factory.h:
        * tao/Codeset_Manager.h:
        * tao/Codeset_Translator_Base.h:
        * tao/Collocation_Strategy.h:
        * tao/Condition.h:
        * tao/Connect_Strategy.h:
        * tao/Connection_Handler.h:
        * tao/Connection_Handler.inl:
        * tao/Connector_Impl.h:
        * tao/CurrentC.cpp:
        * tao/CurrentC.h:
        * tao/DomainC.cpp:
        * tao/DomainC.h:
        * tao/DomainC.inl:
        * tao/DoubleSeqC.cpp:
        * tao/DoubleSeqC.h:
        * tao/Exception.h:
        * tao/Fault_Tolerance_Service.h:
        * tao/FlResource_Factory.h:
        * tao/FloatSeqC.cpp:
        * tao/FloatSeqC.h:
        * tao/Flushing_Strategy.h:
        * tao/GIOPC.cpp:
        * tao/GIOPC.h:
        * tao/GIOPC.inl:
        * tao/GIOP_Utils.h:
        * tao/GUIResource_Factory.h:
        * tao/IIOPC.cpp:
        * tao/IIOPC.h:
        * tao/IIOP_EndpointsC.cpp:
        * tao/IIOP_EndpointsC.h:
        * tao/IIOP_Lite_Factory.cpp:
        * tao/IOPC.cpp:
        * tao/IOPC.h:
        * tao/IOP_IORC.cpp:
        * tao/IOP_IORC.h:
        * tao/IORInterceptor_Adapter.h:
        * tao/Incoming_Message_Queue.h:
        * tao/Invocation_Adapter.h:
        * tao/Invocation_Endpoint_Selectors.h:
        * tao/LF_Connect_Strategy.h:
        * tao/LF_Strategy.h:
        * tao/Leader_Follower.h:
        * tao/LocateRequest_Invocation_Adapter.h:
        * tao/LongDoubleSeqC.cpp:
        * tao/LongDoubleSeqC.h:
        * tao/LongLongSeqC.cpp:
        * tao/LongLongSeqC.h:
        * tao/LongSeqC.cpp:
        * tao/LongSeqC.h:
        * tao/Messaging_PolicyValueC.cpp:
        * tao/Messaging_PolicyValueC.h:
        * tao/Messaging_SyncScopeC.cpp:
        * tao/Messaging_SyncScopeC.h:
        * tao/ORBInitializer_Registry.h:
        * tao/ORB_Core.h:
        * tao/Object.h:
        * tao/ObjectIdListC.cpp:
        * tao/ObjectIdListC.h:
        * tao/Object_KeyC.cpp:
        * tao/Object_KeyC.h:
        * tao/OctetSeqC.cpp:
        * tao/OctetSeqC.h:
        * tao/PI_ForwardC.cpp:
        * tao/PI_ForwardC.h:
        * tao/ParameterModeC.cpp:
        * tao/ParameterModeC.h:
        * tao/Pluggable_Messaging.h:
        * tao/PolicyC.cpp:
        * tao/PolicyC.h:
        * tao/PolicyC.inl:
        * tao/Policy_Current.h:
        * tao/Policy_ForwardC.cpp:
        * tao/Policy_ForwardC.h:
        * tao/PortableInterceptorC.cpp:
        * tao/PortableInterceptorC.h:
        * tao/Profile.h:
        * tao/Profile_Transport_Resolver.cpp:
        * tao/Profile_Transport_Resolver.h:
        * tao/Queued_Message.h:
        * tao/Reactive_Connect_Strategy.h:
        * tao/Resource_Factory.h:
        * tao/Sequence.h:
        * tao/ServicesC.cpp:
        * tao/ServicesC.h:
        * tao/ShortSeqC.cpp:
        * tao/ShortSeqC.h:
        * tao/StringSeqC.cpp:
        * tao/StringSeqC.h:
        * tao/Synch_Invocation.h:
        * tao/TAOC.cpp:
        * tao/TAOC.h:
        * tao/TAO_Internal.h:
        * tao/TAO_Server_Request.h:
        * tao/TAO_Singleton_Manager.cpp:
        * tao/TAO_Singleton_Manager.h:
        * tao/Thread_Lane_Resources.h:
        * tao/TimeBaseC.cpp:
        * tao/TimeBaseC.h:
        * tao/Transport_Acceptor.h:
        * tao/Transport_Cache_Manager.h:
        * tao/Transport_Connector.h:
        * tao/Transport_Mux_Strategy.h:
        * tao/Transport_Queueing_Strategies.h:
        * tao/TypeCodeFactory_Adapter.h:
        * tao/Typecode_typesC.cpp:
        * tao/Typecode_typesC.h:
        * tao/ULongLongSeqC.cpp:
        * tao/ULongLongSeqC.h:
        * tao/ULongSeqC.cpp:
        * tao/ULongSeqC.h:
        * tao/UShortSeqC.cpp:
        * tao/UShortSeqC.h:
        * tao/VarOut_T.cpp:
        * tao/Var_Size_Argument_T.inl:
        * tao/Versioned_Namespace.h:
        * tao/WCharSeqC.cpp:
        * tao/WCharSeqC.h:
        * tao/WStringSeqC.cpp:
        * tao/WStringSeqC.h:
        * tao/Wait_Strategy.h:
        * tao/WrongTransactionC.cpp:
        * tao/WrongTransactionC.h:
        * tao/default_resource.h:
        * tao/orb_typesC.cpp:
        * tao/orb_typesC.h:
        * tao/target_specification.h:
        * tao/target_specification.i:
        * tao/AnyTypeCode/AnySeqA.cpp:
        * tao/AnyTypeCode/AnySeqA.h:
        * tao/AnyTypeCode/AnySeqC.cpp:
        * tao/AnyTypeCode/AnySeqC.h:
        * tao/AnyTypeCode/AnyTypeCode_Adapter_Impl.cpp:
        * tao/AnyTypeCode/Any_Impl.h:
        * tao/AnyTypeCode/Any_Impl_T.h:
        * tao/AnyTypeCode/Any_Impl_T.inl:
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.h:
        * tao/AnyTypeCode/BooleanSeqA.cpp:
        * tao/AnyTypeCode/BooleanSeqA.h:
        * tao/AnyTypeCode/BoundsA.cpp:
        * tao/AnyTypeCode/BoundsA.h:
        * tao/AnyTypeCode/BoundsC.cpp:
        * tao/AnyTypeCode/BoundsC.h:
        * tao/AnyTypeCode/CONV_FRAMEA.cpp:
        * tao/AnyTypeCode/CONV_FRAMEA.h:
        * tao/AnyTypeCode/DynamicC.cpp:
        * tao/AnyTypeCode/DynamicC.h:
        * tao/AnyTypeCode/Dynamic_ParameterC.cpp:
        * tao/AnyTypeCode/Dynamic_ParameterC.h:
        * tao/AnyTypeCode/OctetSeqA.cpp:
        * tao/AnyTypeCode/OctetSeqA.h:
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.h:
        * tao/AnyTypeCode/ValueModifierC.cpp:
        * tao/AnyTypeCode/ValueModifierC.h:
        * tao/AnyTypeCode/VisibilityC.cpp:
        * tao/AnyTypeCode/VisibilityC.h:
        * tao/BiDir_GIOP/BiDirPolicyC.cpp:
        * tao/BiDir_GIOP/BiDirPolicyC.h:
        * tao/CodecFactory/IOP_CodecC.cpp:
        * tao/CodecFactory/IOP_CodecC.h:
        * tao/CodecFactory/IOP_Codec_includeC.h:
        * tao/Codeset/Codeset_Translator_Factory.h:
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/DynamicInterface/DII_Invocation_Adapter.h:
        * tao/Messaging/AMH_Response_Handler.h:
        * tao/Messaging/Asynch_Invocation.h:
        * tao/Messaging/Asynch_Invocation_Adapter.h:
        * tao/Messaging/Asynch_Reply_Dispatcher.h:
        * tao/Messaging/Connection_Timeout_Policy_i.h:
        * tao/PI/ClientRequestInfo.cpp:
        * tao/PI/ClientRequestInfoC.h:
        * tao/PI/ClientRequestInterceptorC.h:
        * tao/PortableServer/IdUniquenessStrategyUnique.h:
        * tao/PortableServer/Key_Adapters.h:
        * tao/PortableServer/Servant_Dispatcher.cpp:
        * tao/PortableServer/Servant_Dispatcher.h:
        * tao/Utils/Synch_Refcountable.h:
        * tao/Valuetype/Valuetype_Adapter_Impl.h:

          Corrected build errors in versioned namespace builds.

Wed Nov 23 22:24:38 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/Event_Manager.h:

          Explicitly declared a private copy constructor and assignment
          operator for TAO_Notify_Event_Manager.  By not declaring them,
          the compiler has to generate them.  In generating them, it needs
          to be able to know the complete type for the template arguments
          to its ACE_Auto_Ptr<> private instances.  Various circular
          dependencies make that difficult to impossible without
          restructuring, so we take this approach instead.

          This change should eliminate warnings from Windows-based
          compilers (e.g., VC8) about calling delete through a pointer to
          an incomplete type while instantiating ACE_Auto_Ptr<> methods.

        * orbsvcs/orbsvcs/Notify/Object.h:
        * orbsvcs/orbsvcs/Notify/Object.cpp:

          Only needed a forward decl in Object.h; we only needed the
          complete type in Object.cpp.  Maybe this will help footprint.

Wed Nov 23 09:20:03 2005  Chris Cleeland  <cleeland_c@ociweb.com>

          Fix a few things I should have caught in the Great Merge, but
          missed.

        * orbsvcs/orbsvcs/Notify/Consumer.cpp (dispatch_request): Change
          from using deprecated TAO_DEFAULT_MINOR_CODE to TAO::VMCID.

        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.cpp: Use
          real C++ static_cast<> rather than deprecated ACE_static_cast().

Wed Nov 23 14:53:09 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Portable_Interceptors/ForwardRequest/PI_ForwardRequest.mpc:

          Added an 'after' line to one project to avoid concurrency
          collisions in VC8 builds, since the 2 projects in this file
          share IDL.

Wed Nov 23 14:31:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/OBV/ValueBox/client.cpp:
          This test was doing a few release calls to much causing it to
          crash.

Wed Nov 23 14:07:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_valuebox/valuebox_ci.cpp:
          Make sure all generated pointers are initialised to 0

Wed Nov 23 10:07:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/BiDirectional/run_test_ipv6.pl:
        * tests/CallbackTest/run_test_ipv6.pl:
        * tests/IPV6/run_test.pl:
        * orbsvcs/tests/Notify/Basic/run_test_ipv6.pl:
          Updated these scripts because of the following change, use
          1|0 instead of YES|NO
          Tue Nov 22 07:49:59 2005  Douglas C. Schmidt

Tue Nov 22 22:58:55 2005  Chris Cleeland  <cleeland@ociweb.com>

        * orbsvcs/orbsvcs/Notify/Any/PushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushConsumer.cpp:

          Fixed warnings about preferring one conversion over another
          from a _var that appeared on a couple of platforms.

Tue Nov 22 07:49:59 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * tao/ORB_Core.cpp (init): Updated the code to use 1 or 0 for
          options, rather than YES or NO.  Thanks to Abhi Sachdev for
          motivating this cleanup.

        * docs/Options.html: Updated the documentation to remove the use of
          YES and NO as options and replace them with 1 or 0 to be
          consistent with the other options.

Tue Nov 22 04:14:05 2005  Bala Natarajan  <bala_natarajan at symantec dot com>

        * TAO_IDL/be_include/be_visitor_traits.h:

          Added missing operation declaration.

Tue Nov 22 01:42:48 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/PortableGroup.mpc:

          Rather than disable this project in the ACE_FOR_TAO
          configuration, inherit from acesocketslib_for_tao to allow it to
          be used.

Tue Nov 22 09:33:30 (IST) 2005  Bala Natarajan <bala_natarajan@symantec.com>

        * orbsvcs/orbsvcs/PortableGroup.mpc:

          Do not build in ACE_FOR_TAO configuration.

Mon Nov 21 19:28:51 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/EventChannel.h: Removed mistakenly left
          in attempt to #include EventChannel.inl.

Mon Nov 21 22:22:41 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuebox/valuebox_cs.cpp:

          Removed commented out code.

        * TAO_IDL/be/be_visitor_traits.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
        * TAO_IDL/be_include/be_visitor_traits.h:

          Added code generation of Value_Traits<> template
          specialization for boxed valuetypes. Thanks to
          Johnny Willemse <jwillemsen@remedy.nl> for reporting
          the missing code. This fix closes [BUGID:2311].

Mon Nov 21 20:14:09 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/RTCORBA/Private_Connection/RTCORBA_Private_Connection.mpc:

          Added an 'after' line for one of the two projects, since they
          share an IDL file and VC8 concurrency features need an
          ordering.

Mon Nov 21 13:21:03 2005  Chris Cleeland  <cleeland_c@ociweb.com>

          This entry is the result of an accumulation of many changes in
          the OCITAO repository for the Notification Service and the
          subsequent merge of those changes back to DOC.  There have been
          general changes to improve code formatting in accordance with
          ACE guidelines, improve lax checking of emulated exceptions, and
          the like, so these sorts of changes are not noted on a per-file
          basis.

          These changes include changes from the following OCITAO 1.4a
          OCIChangeLog entries:

          Thu Oct 27 13:01:00 2005  Wallace Zhang  <zhangw@ociweb.com>
          Wed Sep 28 14:25:52 2005  David Giovannini  <giovannd@ociweb.com>
          Mon Sep 26 15:58:41 USMST 2005  Yan Dai  <dai_y@ociweb.com>
          Tue Sep 13 17:14:25 2005  Justin Michel  <michel_j@ociweb.com>
          Sun Sep 11 14:21:45 2005  Justin Michel  <michel_j@ociweb.com>
          Thu Aug 18 13:50:50 2005  David Giovannini  <giovannd@ociweb.com>
          Tue Aug 16 14:16:47 2005  Justin Michel  <michel_j@ociweb.com>
          Wed Jul 27 12:38:01 2005  Justin Michel  <michel_j@ociweb.com>
          Wed Jul 13 14:28:39 2005  Justin Michel  <michel_j@ociweb.com>
          Mon Jul 11 16:47:08 2005  Justin Michel  <michel_j@ociweb.com>
          Mon May 23 09:18:46 2005  David Giovannini  <giovanninid@ociweb.com>
          Fri Apr 22 15:24:43 2005  David Giovannini <giovanninid@ociweb.com>

        * orbsvcs/Notify_Service/Notify_Server.cpp:

          Added #include of valuetype header file to that the service can
          use valuetypes portably.

        * orbsvcs/Notify_Service/Notify_Service.cpp:

          Made some error messages more informative and removed dead code.

        * orbsvcs/orbsvcs/Notify/Admin.cpp:
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.cpp:

          Improve compliance with ACE formatting guidelines.

        * orbsvcs/orbsvcs/Notify/Admin.cpp:
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/Event_Manager.cpp:
        * orbsvcs/orbsvcs/Notify/Find_Worker_T.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.cpp:
        * orbsvcs/orbsvcs/Notify/Object.cpp:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Reconnection_Registry.cpp:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/Topology_Object.cpp:
        * orbsvcs/tests/Notify/Basic/Filter.cpp:
        * orbsvcs/tests/Notify/Basic/MultiTypes.cpp:
        * orbsvcs/tests/Notify/Reconnecting/Consumer.cpp:
        * orbsvcs/tests/Notify/Reconnecting/Supplier.cpp:
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/lib/Application_Command.cpp:
        * orbsvcs/tests/Notify/lib/ConsumerAdmin_Command.cpp:
        * orbsvcs/tests/Notify/lib/EventChannel_Command.cpp:
        * orbsvcs/tests/Notify/lib/Filter_Command.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Consumer_Command.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Supplier_Command.cpp:
        * orbsvcs/tests/Notify/lib/SupplierAdmin_Command.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Supplier.cpp:

          Emulated exception cleanup.

        * orbsvcs/orbsvcs/Notify/Consumer.h:
        * orbsvcs/orbsvcs/Notify/Peer.cpp:
        * orbsvcs/orbsvcs/Notify/RT_Notify_Service.h:
        * orbsvcs/orbsvcs/Notify/Any/AnyEvent.h:
        * orbsvcs/tests/Notify/PluggableTopology/main.cpp:

          Improved/removed crufty comments.

        * orbsvcs/orbsvcs/Notify/AllocTracker.h (ACE_WIN32_HEAP_MONITOR):

          Explicitly scoped reference to CrtHeapDumper to address a
          compiler error.

        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.h:
        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.cpp:

          Changed methods using TAO_Notify_Method_Request_Queueable to use
          a pointer rather than a reference.  This improves expectations
          in areas of code that take the address of the reference and
          store it or treat it as a pointer.

        * orbsvcs/orbsvcs/Notify/Consumer.cpp (dispatch_request):
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp:

          Handle COMM_FAILURE and TIMEOUT exceptions when pushing to a
          consumer. These exceptions used to result in simply discarding
          the event, but now they are considered a failure, and consumer
          resources will be released.

        * orbsvcs/orbsvcs/Notify/Consumer.cpp (dispatch_batch):
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.cpp:

          Fixed the detection of dead consumers for batches of events, so
          that killing (or crashing) a consumer will correctly discard
          remaining queued events for that consumer, and prevent new
          events from being queued.

        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp:

          Simplify the types of threads from "dispatching, listener,
          source, and lookup" to simply be "consumer" and "supplier"
          threads.  This is the way they were used, anyway.

          Changed the info message printed at startup to correctly
          indicate that -DispatchingThreads threads are used
          *per-consumer_admin*.  Previously it indicated that the thread
          pool was per-channel.

        * orbsvcs/orbsvcs/Notify/EventChannel.h:
        * orbsvcs/orbsvcs/Notify/EventChannel.cpp (destroy):

          Fixed a memory leak where event channel destroy was not cleaning
          up the admins.  This avoids circular reference counting problems
          similar to those described in the next entry.

        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.cpp (destroy):
        * orbsvcs/orbsvcs/Notify/EventChannel.cpp (destroy):
        * orbsvcs/orbsvcs/Notify/EventChannelFactory.cpp (destroy):
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.cpp (destroy):
        * orbsvcs/orbsvcs/Notify/ProxySupplier.cpp (destroy):
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.cpp (destroy):

          Fixed exceptions=0 builds logical error in destroy methods and
          made certain all owned circular refcounted members are released
          in class::destroy methods.

        * orbsvcs/orbsvcs/Notify/EventChannelFactory.cpp (init):

          Prefer ACE_Auto_Ptr<> to auto_ptr<>.

        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.h (event_var_):

          Eliminated 'const'.

        * orbsvcs/orbsvcs/Notify/Method_Request_Event.h (CTOR):
        * orbsvcs/orbsvcs/Notify/Method_Request_Event.cpp (CTOR):

          Changed potentially confusing name of argument; it had "_var"
          appended when it was really a pointer of sorts.

        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.cpp:

          Eliminated 'const' on event_var_ data member and changed
          potentially confusing name of local variable in copy() b/c it
          had "_var" appended when it was really a pointer of sorts.

        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.h:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:

          Changed the filterable_data_ and variable_header_
          maps. Previously they contained a CORBA::Any* which was not
          properly reference counted; the reference count was always one
          regardless of the number of threads using the Any.  Now it is
          changed to contain the light-weighted CORBA::Any Object. Now the
          "bind" method for the map will pass in the value from
          StructuredEvent by value. Since the payload object of the
          CORBA::Any is reference counted, we are safe.

          This change fixed a Notification Service crash.

        * orbsvcs/orbsvcs/Notify/Object.h (lock_):

          Added new mutex to serialize access to state variables.  In the
          past, the notification service reused mutexes for different
          purposes, allowing a mutex in one scope to be used in a
          different scope.  When we started using reference counting on
          objects properly, these scopes occasionally crossed, creating
          deadlocks, race conditions, and all other sorts of mayhem
          associated with misuse of mutexes.

        * orbsvcs/orbsvcs/Notify/EventChannelFactory.cpp:
        * orbsvcs/orbsvcs/Notify/Peer.h:
        * orbsvcs/orbsvcs/Notify/Proxy.cpp:
        * orbsvcs/orbsvcs/Notify/Reactive_Task.h:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Any/PushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Any/PushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Any/PushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Any/PushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushSupplier.cpp:
        * orbsvcs/tests/Notify/XML_Persistence/run_test.pl:

          Changed how the persistence specific methods handle nil object
          references - since TAO throws an exception with url ref styles
          on nil references.

        * orbsvcs/orbsvcs/Notify/README:

          Changed "ListenerThreads" to "SourceThreads".

        * orbsvcs/orbsvcs/Notify/Reactive_Task.h (timer_):

          Changed to private scope.  There was no need for it to be
          anything but private.

        * orbsvcs/orbsvcs/Notify/Refcountable.h (TAO_Notify_Tracker):
        * orbsvcs/orbsvcs/Notify/Refcountable.cpp (TAO_Notify_Tracker):

          Added class to track reference counted objects in the
          notification service.  This is disabled by default, and enabled
          by setting the preprocessor macro
          TAO_NOTIFY_REFCOUNT_DIAGNOSTICS to 1.  Note that currently this
          class requires the availability of the STL map and string
          features.

          Use CORBA::Long for reference count rather than compilation
          environment's 'long'.

        * orbsvcs/orbsvcs/Notify/Routing_Slip.cpp:

          Updates to use isSet() predicate on TAO_Notify_Event::Ptr.

        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.h:
        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.cpp:

          Remove the fix for zombie threads, and instead use THR_DETACHED
          to avoid the problem entirely.

        * orbsvcs/orbsvcs/Notify/Topology_Factory.h (DTOR):
        * orbsvcs/orbsvcs/Notify/EventChannelFactory.cpp:

          Add explicit virtual destructor to get around the problem in g++
          4.0 where inlines get hidden.  Without the virtual DTOR, this
          class does not get exported and code that dynamically loads
          classes derived from this class cannot access this type and
          access the derived instances through pointers of this type.
          This happens most notably when loading topology persistence
          mechanisms via the Service Configurator.

          The actual code for the do-nothing destructor is in
          EventChannelFactory.cpp.  I did this because the only chunk of
          code that uses Topology_Factory is already in that file, and it
          didn't seem terribly reasonable to create a completely new file
          to hold a do-nothing implementation of a destructor.

        * orbsvcs/orbsvcs/Notify/XML_Topology_Factory.h:
        * orbsvcs/orbsvcs/Notify/XML_Topology_Factory.cpp:

          Added explicit virtual destructor for the same reasons as
          described immediately above.

        * orbsvcs/orbsvcs/Notify/Any/AnyEvent.cpp:

          Changed ANY_CODE from being static to being
          scope-local.

        * orbsvcs/orbsvcs/Notify/Any/PushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushConsumer.cpp:

          Removed asserts associated with parameters. If a param is not
          optional we throw a BAD_PARAM exception.

        * orbsvcs/tests/Notify/Basic/Basic.mpc:
        * orbsvcs/tests/Notify/XML_Persistence/XML_Persistence.mpc:

          Provide explicit exenames for each project.  While not strictly
          required, this is "best practice" because it eliminates the need
          for MPC to open each source file and search for the pattern
          "*main*" to intuit an exename.

        * orbsvcs/tests/Notify/Basic/Sequence.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Notify_Sequence_Push_Consumer.h:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/run_test.pl:
        * orbsvcs/tests/Notify/XML_Persistence/main.cpp:

          Fix incorrect use of pacing interval and other test issues.

        * orbsvcs/tests/Notify/Discarding/Notify_Structured_Push_Consumer.cpp:

          Fixed ACE_DEBUG printf-style message that had one too many
          arguments.

        * orbsvcs/tests/Notify/Reconnecting/event.conf:
        * orbsvcs/tests/Notify/Reconnecting/ns_mt_both.conf:
        * orbsvcs/tests/Notify/Reconnecting/ns_mt_topo.conf:
        * orbsvcs/tests/Notify/Reconnecting/ns_st_both.conf:
        * orbsvcs/tests/Notify/Reconnecting/ns_st_topo.conf:
        * orbsvcs/tests/Notify/XML_Persistence/svc.conf:

          Changed name of factory function used to dynamically load
          persistence mechanism to be consistent with the new use of
          ACE_FACTORY_NAMESPACE_DEFINE.

        * orbsvcs/tests/Notify/XML_Persistence/run_test.pl:

          Use -ORBObjRefStyle url so that IORs will be comparable.

Mon Nov 21 07:23:46 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.h:

          Re-export TAO_SSLIOP_Transport class.  It is currently used
          outside of the TAO_SSLIOP shared library by some of our
          regression tests.

Fri Nov 18 19:27:29 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/lex.yy.cpp:

          Reverted change of

          Wed Nov 16 21:53:08 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

          since it caused problems with Borland and Intel compilers.
          We'll try it again after the next beta, or when there is
          more time to track down the problems.

Fri Nov 18 15:08:19 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Typedef_String_Array/typedef_string_array.mpc:

          Added 'after' line to one of two projects that share an IDL
          file, to avoid concurrency problems with the VC8 build.

Thu Nov 17 16:38:27 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/RTCORBA/MT_Client_Protocol_Priority/RTCORBA_MT_Client_Proto_Prio.mpc:

          Added 'after' line to one project to avoid concurrency clashes
          in IDL compiler execution when compiling with VC8.

Thu Nov 17 07:57:13 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * docs/releasenotes/index.html:

          Added CSD feature to ORB related section.

Thu Nov 17 06:55:53 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Security/SL3_CredentialsAcquirerFactory.h:
        * orbsvcs/orbsvcs/Security/SL3_CredentialsCurator.h:

          Re-export the classes in these files.  Addresses unresolved
          symbol errors in g++ 4.x builds.

Thu Nov 17 06:49:02 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP/params_dup.h:

          Declare wrapper functions with their versioned namespace macro
          counterparts.

        * orbsvcs/orbsvcs/SSLIOP/params_dup.c:

          Include "params_dup.h" to pull in wrapper function names with
          versioned namespace support.

Thu Nov 17 13:17:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Borland/ChatClient.mpc:
          New MPC file, add vcl=1 to your default.features and pass VCL=1
          to the make flags to build this

        * examples/Borland/README:
          Updated

Thu Nov 17 12:12:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Borland/ChatClient.bpr:
        * examples/Borland/ChatClient.res:
          Updated to BCB6 format

Wed Nov 16 21:53:08 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/lex.yy.cpp.diff:

          Since the change of

          Wed Nov 16 11:23:15 2005  Jeff Parsons  <j.parsons@vanderbilt.edu>

          checked in a version of lex.yy.cpp that had been generated
          elsewhere, regenerated this file with the version of flex
          that's on tango.dre.vanderbilt.edu, and updated the
          corresponding diff file.

Wed Nov 16 14:12:08 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B.idl:
        * tests/CSD_Strategy_Tests/TP_Test_1/run_test.pl:

          Rolled back the changes
          "Sun Nov 13 12:15:58 USMST 2005  Yan Dai  <dai_y@ociweb.com>"
          made for debugging test failures on VxWorks build.

        * NEWS:

          Added description for CSD feature.

Wed Nov 16 11:23:15 2005  Jeff Parsons  <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/idl.yy.cpp:

          Applied patches submitted by Thomas Lockhart
          <Thomas.Lockhart@jpl.nasa.gov> to enable the IDL compiler's
          lexer to handle extra numeric fields produced by the gcc
          4.0.1 preprocessor. Closes [BUGID:2294].

Wed Nov 16 09:14:21 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current_Impl.cpp:

          Include "tao/ORB_Constants.h" to pull TAO::VMCID constant.

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_CredentialsAcquirer.h
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_TargetCredentials.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_TargetCredentials.h:

          Corrected typos in versioned namespace macros.

Wed Nov 16 09:05:08 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.h (Current):

          Removed "const" qualifier for tss_slot_ member.  It must
          currently remain mutable.

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_OpenSSL_st_T.h:

          Include "tao/Versioned_Namespace.h" to pull in versioned
          namespace macro definitions.

Wed Nov 16 14:52:32 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/NestedUpcall/Simple/Simple.mpc:

          Added 'after' line to one of the two projects in the MPC file,
          so VC8 doesn't execute the IDL compiler concurrently.

Tue Nov 15 23:48:47 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_SSL.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_X509.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler.cpp:

          Removed empty files.

        * orbsvcs/orbsvcs/ETCL/ETCL.ll:
        * orbsvcs/orbsvcs/ETCL/ETCL.yy:
        * orbsvcs/orbsvcs/ETCL/ETCL_l.cpp:
        * orbsvcs/orbsvcs/ETCL/ETCL_y.cpp:

          Added missing versioned namespace macros.

        * orbsvcs/orbsvcs/Property/CosPropertyService_i.cpp:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.i:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.i:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Acceptor.cpp:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Acceptor.h:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connection_Handler.inl:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.h:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Transport.cpp:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Transport.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Accept_Strategy.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Accept_Strategy.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.i:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ClientCredentials.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ClientCredentials.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.i:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.inl:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_CredentialsAcquirer.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_CredentialsAcquirer.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_CredentialsAcquirerFactory.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_CredentialsAcquirerFactory.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.inl:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current_Impl.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current_Impl.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current_Impl.inl:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_EVP_PKEY.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_EVP_PKEY.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.i:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Factory.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Factory.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_OpenSSL_st_T.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_OpenSSL_st_T.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_OpenSSL_st_T.inl:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_OwnCredentials.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_OwnCredentials.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_SSL.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_TargetCredentials.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_TargetCredentials.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Util.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Util.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_X509.h:
        * orbsvcs/orbsvcs/SSLIOP/params_dup.c:
        * orbsvcs/orbsvcs/SSLIOP/params_dup.h:
        * orbsvcs/orbsvcs/SSLIOP/ssl_endpointsC.cpp:
        * orbsvcs/orbsvcs/SSLIOP/ssl_endpointsC.h:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.h:
        * orbsvcs/orbsvcs/Sched/DynSched.cpp:
        * orbsvcs/orbsvcs/Sched/DynSched.h:
        * orbsvcs/orbsvcs/Sched/DynSched.i:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.h:
        * orbsvcs/orbsvcs/Sched/SchedEntry.cpp:
        * orbsvcs/orbsvcs/Sched/SchedEntry.h:
        * orbsvcs/orbsvcs/Sched/SchedEntry.i:
        * orbsvcs/orbsvcs/Sched/Scheduler_Generic.cpp:
        * orbsvcs/orbsvcs/Sched/Scheduler_Generic.h:
        * orbsvcs/orbsvcs/Sched/Strategy_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Strategy_Scheduler.h:
        * orbsvcs/orbsvcs/Security/CSI_Utils.cpp:
        * orbsvcs/orbsvcs/Security/CSI_Utils.h:
        * orbsvcs/orbsvcs/Security/SL2_EstablishTrustPolicy.cpp:
        * orbsvcs/orbsvcs/Security/SL2_EstablishTrustPolicy.h:
        * orbsvcs/orbsvcs/Security/SL2_QOPPolicy.cpp:
        * orbsvcs/orbsvcs/Security/SL2_QOPPolicy.h:
        * orbsvcs/orbsvcs/Security/SL3_ContextEstablishmentPolicy.cpp:
        * orbsvcs/orbsvcs/Security/SL3_ContextEstablishmentPolicy.h:
        * orbsvcs/orbsvcs/Security/SL3_CredentialsAcquirerFactory.cpp:
        * orbsvcs/orbsvcs/Security/SL3_CredentialsAcquirerFactory.h:
        * orbsvcs/orbsvcs/Security/SL3_CredentialsCurator.cpp:
        * orbsvcs/orbsvcs/Security/SL3_CredentialsCurator.h:
        * orbsvcs/orbsvcs/Security/SL3_ObjectCredentialsPolicy.cpp:
        * orbsvcs/orbsvcs/Security/SL3_ObjectCredentialsPolicy.h:
        * orbsvcs/orbsvcs/Security/SL3_PolicyFactory.cpp:
        * orbsvcs/orbsvcs/Security/SL3_PolicyFactory.h:
        * orbsvcs/orbsvcs/Security/SL3_SecurityCurrent.cpp:
        * orbsvcs/orbsvcs/Security/SL3_SecurityCurrent.h:
        * orbsvcs/orbsvcs/Security/SL3_SecurityCurrent.inl:
        * orbsvcs/orbsvcs/Security/SL3_SecurityCurrent_Impl.cpp:
        * orbsvcs/orbsvcs/Security/SL3_SecurityCurrent_Impl.h:
        * orbsvcs/orbsvcs/Security/SL3_SecurityManager.cpp:
        * orbsvcs/orbsvcs/Security/SL3_SecurityManager.h:
        * orbsvcs/orbsvcs/Security/Security_Current.cpp:
        * orbsvcs/orbsvcs/Security/Security_Current.h:
        * orbsvcs/orbsvcs/Security/Security_Current.inl:
        * orbsvcs/orbsvcs/Security/Security_Current_Impl.cpp:
        * orbsvcs/orbsvcs/Security/Security_Current_Impl.h:
        * orbsvcs/orbsvcs/Security/Security_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/Security/Security_ORBInitializer.h:
        * orbsvcs/orbsvcs/Security/Security_PolicyFactory.cpp:
        * orbsvcs/orbsvcs/Security/Security_PolicyFactory.h:
        * orbsvcs/orbsvcs/Time/TAO_TIO.cpp:
        * orbsvcs/orbsvcs/Time/TAO_TIO.h:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Clerk.cpp:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Clerk.h:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Server.cpp:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Server.h:
        * orbsvcs/orbsvcs/Time/TAO_UTO.cpp:
        * orbsvcs/orbsvcs/Time/TAO_UTO.h:
        * orbsvcs/orbsvcs/Time/Timer_Helper.cpp:
        * orbsvcs/orbsvcs/Time/Timer_Helper.h:
        * orbsvcs/orbsvcs/Trader/Constraint_Interpreter.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_Interpreter.h:
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.h:
        * orbsvcs/orbsvcs/Trader/Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_Visitors.h:
        * orbsvcs/orbsvcs/Trader/Constraint_l.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_y.cpp:
        * orbsvcs/orbsvcs/Trader/Interpreter.cpp:
        * orbsvcs/orbsvcs/Trader/Interpreter.h:
        * orbsvcs/orbsvcs/Trader/Interpreter_Utils.cpp:
        * orbsvcs/orbsvcs/Trader/Interpreter_Utils.h:
        * orbsvcs/orbsvcs/Trader/Interpreter_Utils_T.cpp:
        * orbsvcs/orbsvcs/Trader/Interpreter_Utils_T.h:
        * orbsvcs/orbsvcs/Trader/Locking.h:
        * orbsvcs/orbsvcs/Trader/Offer_Database.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Database.h:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators.h:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators_T.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators_T.h:
        * orbsvcs/orbsvcs/Trader/Service_Type_Repository.cpp:
        * orbsvcs/orbsvcs/Trader/Service_Type_Repository.h:
        * orbsvcs/orbsvcs/Trader/Trader.cpp:
        * orbsvcs/orbsvcs/Trader/Trader.h:
        * orbsvcs/orbsvcs/Trader/Trader_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Constraint_Visitors.h:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.h:
        * orbsvcs/orbsvcs/Trader/Trader_T.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_T.h:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.h:
        * orbsvcs/orbsvcs/Trader/constraint.l:
        * orbsvcs/orbsvcs/Trader/constraint.y:

          Added versioned namespace support.

Tue Nov 15 07:44:59 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/Bug_2285_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2287_Regression/Makefile.am:

          Regenerate with a separate project for compiling *.idl files.
          The corresponding *.mpc changes will be committed at a later
          date since the repo is frozen.

Tue Nov 15 06:56:51 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/Makefile.am:
        * examples/POA/Explicit_Activation/Makefile.am:
        * orbsvcs/Naming_Service/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Makefile.am:
        * orbsvcs/examples/Log/RTEvent/Makefile.am:
        * orbsvcs/examples/Notify/Lanes/Makefile.am:
        * orbsvcs/examples/Notify/ThreadPool/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/tests/Makefile.am:
        * orbsvcs/tests/Notify/Basic/Makefile.am:
        * orbsvcs/tests/Notify/Blocking/Makefile.am:
        * orbsvcs/tests/Notify/Destroy/Makefile.am:
        * orbsvcs/tests/Notify/Discarding/Makefile.am:
        * orbsvcs/tests/Notify/Driver/Makefile.am:
        * orbsvcs/tests/Notify/MT_Dispatching/Makefile.am:
        * orbsvcs/tests/Notify/Ordering/Makefile.am:
        * orbsvcs/tests/Notify/RT_lib/Makefile.am:
        * orbsvcs/tests/Notify/Reconnecting/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/lib/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Makefile.am:
        * orbsvcs/tests/Security/Crash_Test/Makefile.am:
        * orbsvcs/tests/Security/MT_IIOP_SSL/Makefile.am:
        * orbsvcs/tests/Security/Secure_Invocation/Makefile.am:
        * performance-tests/Makefile.am:
        * tao/Makefile.am:

          Regenerated.

        * configure.ac:

          Add new files to AC_CONFIG_FILES.

        * examples/CSD_Strategy/Makefile.am:
        * examples/CSD_Strategy/ThreadPool/Makefile.am:
        * examples/CSD_Strategy/ThreadPool2/Makefile.am:
        * examples/CSD_Strategy/ThreadPool3/Makefile.am:
        * examples/CSD_Strategy/ThreadPool4/Makefile.am:
        * examples/CSD_Strategy/ThreadPool5/Makefile.am:
        * examples/CSD_Strategy/ThreadPool6/Makefile.am:
        * orbsvcs/tests/Bug_2074_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2285_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2287_Regression/Makefile.am:
        * performance-tests/CSD_Strategy/Makefile.am:
        * performance-tests/CSD_Strategy/TestApps/Makefile.am:
        * performance-tests/CSD_Strategy/TestInf/Makefile.am:
        * performance-tests/CSD_Strategy/TestServant/Makefile.am:

          New files.

Tue Nov 15 07:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/*:
          Handle sequences of forward declared object references and
          added some more unit tests

Mon Nov 14 23:37:09 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * examples/CSD_Strategy/ThreadPool4/Foo_i.cpp:
        * examples/CSD_Strategy/ThreadPool5/Foo_i.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_i.cpp:

          Fixed memory leaks.

Mon Nov 14 13:54:08 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Makefile.am (libTAO_PortableGroup_la_SOURCES):
        * orbsvcs/orbsvcs/PortableGroup/PG_Factory_Map.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Factory_Set.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Map.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroup_Map.cpp:

          Removed empty map/set source files.

        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/EventLogConsumer.cpp:
        * orbsvcs/orbsvcs/Log/EventLogConsumer.h:
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/EventLogNotification.cpp:
        * orbsvcs/orbsvcs/Log/EventLogNotification.h:
        * orbsvcs/orbsvcs/Log/EventLog_i.cpp:
        * orbsvcs/orbsvcs/Log/EventLog_i.h:
        * orbsvcs/orbsvcs/Log/Hash_Iterator_i.cpp:
        * orbsvcs/orbsvcs/Log/Hash_Iterator_i.h:
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.h:
        * orbsvcs/orbsvcs/Log/Hash_LogStore.cpp:
        * orbsvcs/orbsvcs/Log/Hash_LogStore.h:
        * orbsvcs/orbsvcs/Log/Hash_Persistence_Strategy.cpp:
        * orbsvcs/orbsvcs/Log/Hash_Persistence_Strategy.h:
        * orbsvcs/orbsvcs/Log/Iterator_i.cpp:
        * orbsvcs/orbsvcs/Log/Iterator_i.h:
        * orbsvcs/orbsvcs/Log/LogActivator.cpp:
        * orbsvcs/orbsvcs/Log/LogActivator.h:
        * orbsvcs/orbsvcs/Log/LogMgr_i.cpp:
        * orbsvcs/orbsvcs/Log/LogMgr_i.h:
        * orbsvcs/orbsvcs/Log/LogNotification.cpp:
        * orbsvcs/orbsvcs/Log/LogNotification.h:
        * orbsvcs/orbsvcs/Log/LogRecordStore.cpp:
        * orbsvcs/orbsvcs/Log/LogRecordStore.h:
        * orbsvcs/orbsvcs/Log/LogRecordStore_persist.cpp:
        * orbsvcs/orbsvcs/Log/LogRecordStore_persist.h:
        * orbsvcs/orbsvcs/Log/LogStore.h:
        * orbsvcs/orbsvcs/Log/Log_Compaction_Handler.cpp:
        * orbsvcs/orbsvcs/Log/Log_Compaction_Handler.h:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Interpreter.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Interpreter.h:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.h:
        * orbsvcs/orbsvcs/Log/Log_Flush_Handler.cpp:
        * orbsvcs/orbsvcs/Log/Log_Flush_Handler.h:
        * orbsvcs/orbsvcs/Log/Log_Persistence_Strategy.h:
        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.h:
        * orbsvcs/orbsvcs/Log/NotifyLogConsumer.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogConsumer.h:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/NotifyLogNotification.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogNotification.h:
        * orbsvcs/orbsvcs/Log/NotifyLog_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLog_i.h:
        * orbsvcs/orbsvcs/Log/PersistStore.cpp:
        * orbsvcs/orbsvcs/Log/PersistStore.h:
        * orbsvcs/orbsvcs/Log/RTEventLogConsumer.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogConsumer.h:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/RTEventLogNotification.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogNotification.h:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_FrameManager.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_LocalCache.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_LocalCache_T.cpp:
        * orbsvcs/orbsvcs/Metrics/Metrics_LocalCache_T.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_Logger.cpp:
        * orbsvcs/orbsvcs/Metrics/Metrics_Logger.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor.i:
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor_T.cpp:
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor_T.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor_T.i:
        * orbsvcs/orbsvcs/Metrics/Metrics_Utils.cpp:
        * orbsvcs/orbsvcs/Metrics/Metrics_Utils.h:
        * orbsvcs/orbsvcs/Metrics/Metrics_Utils.i:
        * orbsvcs/orbsvcs/Naming/Bindings_Iterator_T.cpp:
        * orbsvcs/orbsvcs/Naming/Bindings_Iterator_T.h:
        * orbsvcs/orbsvcs/Naming/Entries.cpp:
        * orbsvcs/orbsvcs/Naming/Entries.h:
        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp:
        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.h:
        * orbsvcs/orbsvcs/Naming/Hash_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Hash_Naming_Context.h:
        * orbsvcs/orbsvcs/Naming/Naming_Client.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Client.h:
        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.h:
        * orbsvcs/orbsvcs/Naming/Naming_Loader.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Loader.h:
        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Server.h:
        * orbsvcs/orbsvcs/Naming/Naming_Service_Container.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Service_Container.h:
        * orbsvcs/orbsvcs/Naming/Persistent_Context_Index.cpp:
        * orbsvcs/orbsvcs/Naming/Persistent_Context_Index.h:
        * orbsvcs/orbsvcs/Naming/Persistent_Entries.cpp:
        * orbsvcs/orbsvcs/Naming/Persistent_Entries.h:
        * orbsvcs/orbsvcs/Naming/Persistent_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Persistent_Naming_Context.h:
        * orbsvcs/orbsvcs/Naming/Storable.h:
        * orbsvcs/orbsvcs/Naming/Storable.inl:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.h:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context_Activator.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context_Activator.h:
        * orbsvcs/orbsvcs/Naming/Transient_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Transient_Naming_Context.h:
        * orbsvcs/orbsvcs/Notify/Admin.cpp:
        * orbsvcs/orbsvcs/Notify/Admin.h:
        * orbsvcs/orbsvcs/Notify/Admin.inl:
        * orbsvcs/orbsvcs/Notify/AdminProperties.cpp:
        * orbsvcs/orbsvcs/Notify/AdminProperties.h:
        * orbsvcs/orbsvcs/Notify/AdminProperties.inl:
        * orbsvcs/orbsvcs/Notify/Bit_Vector.cpp:
        * orbsvcs/orbsvcs/Notify/Bit_Vector.h:
        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.cpp:
        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.h:
        * orbsvcs/orbsvcs/Notify/Builder.cpp:
        * orbsvcs/orbsvcs/Notify/Builder.h:
        * orbsvcs/orbsvcs/Notify/Consumer.cpp:
        * orbsvcs/orbsvcs/Notify/Consumer.h:
        * orbsvcs/orbsvcs/Notify/Consumer.inl:
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.h:
        * orbsvcs/orbsvcs/Notify/Consumer_Map.h:
        * orbsvcs/orbsvcs/Notify/Container_T.cpp:
        * orbsvcs/orbsvcs/Notify/Container_T.h:
        * orbsvcs/orbsvcs/Notify/Container_T.inl:
        * orbsvcs/orbsvcs/Notify/CosNotify_Initializer.cpp:
        * orbsvcs/orbsvcs/Notify/CosNotify_Initializer.h:
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp:
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.h:
        * orbsvcs/orbsvcs/Notify/Default_Factory.cpp:
        * orbsvcs/orbsvcs/Notify/Default_Factory.h:
        * orbsvcs/orbsvcs/Notify/Delivery_Request.cpp:
        * orbsvcs/orbsvcs/Notify/Delivery_Request.h:
        * orbsvcs/orbsvcs/Notify/Delivery_Request.inl:
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.cpp:
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.h:
        * orbsvcs/orbsvcs/Notify/ETCL_FilterFactory.cpp:
        * orbsvcs/orbsvcs/Notify/ETCL_FilterFactory.h:
        * orbsvcs/orbsvcs/Notify/Event.cpp:
        * orbsvcs/orbsvcs/Notify/Event.h:
        * orbsvcs/orbsvcs/Notify/Event.inl:
        * orbsvcs/orbsvcs/Notify/EventChannel.cpp:
        * orbsvcs/orbsvcs/Notify/EventChannel.h:
        * orbsvcs/orbsvcs/Notify/EventChannelFactory.cpp:
        * orbsvcs/orbsvcs/Notify/EventChannelFactory.h:
        * orbsvcs/orbsvcs/Notify/EventType.cpp:
        * orbsvcs/orbsvcs/Notify/EventType.h:
        * orbsvcs/orbsvcs/Notify/EventType.inl:
        * orbsvcs/orbsvcs/Notify/EventTypeSeq.cpp:
        * orbsvcs/orbsvcs/Notify/EventTypeSeq.h:
        * orbsvcs/orbsvcs/Notify/Event_Manager.cpp:
        * orbsvcs/orbsvcs/Notify/Event_Manager.h:
        * orbsvcs/orbsvcs/Notify/Event_Map_Entry_T.cpp:
        * orbsvcs/orbsvcs/Notify/Event_Map_Entry_T.h:
        * orbsvcs/orbsvcs/Notify/Event_Map_Entry_T.inl:
        * orbsvcs/orbsvcs/Notify/Event_Map_T.cpp:
        * orbsvcs/orbsvcs/Notify/Event_Map_T.h:
        * orbsvcs/orbsvcs/Notify/Event_Map_T.inl:
        * orbsvcs/orbsvcs/Notify/Event_Persistence_Factory.cpp:
        * orbsvcs/orbsvcs/Notify/Event_Persistence_Factory.h:
        * orbsvcs/orbsvcs/Notify/Event_Persistence_Strategy.h:
        * orbsvcs/orbsvcs/Notify/Factory.h:
        * orbsvcs/orbsvcs/Notify/FilterAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/FilterAdmin.h:
        * orbsvcs/orbsvcs/Notify/FilterAdmin.inl:
        * orbsvcs/orbsvcs/Notify/FilterFactory.h:
        * orbsvcs/orbsvcs/Notify/Find_Worker_T.cpp:
        * orbsvcs/orbsvcs/Notify/Find_Worker_T.h:
        * orbsvcs/orbsvcs/Notify/Find_Worker_T.inl:
        * orbsvcs/orbsvcs/Notify/ID_Factory.cpp:
        * orbsvcs/orbsvcs/Notify/ID_Factory.h:
        * orbsvcs/orbsvcs/Notify/ID_Factory.inl:
        * orbsvcs/orbsvcs/Notify/Method_Request.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Event.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Event.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Shutdown.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Shutdown.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates_T.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates_T.inl:
        * orbsvcs/orbsvcs/Notify/Name_Value_Pair.cpp:
        * orbsvcs/orbsvcs/Notify/Name_Value_Pair.h:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Interpreter.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Interpreter.h:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.h:
        * orbsvcs/orbsvcs/Notify/Notify_Default_CO_Factory.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Default_CO_Factory.h:
        * orbsvcs/orbsvcs/Notify/Notify_Default_Collection_Factory.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Default_Collection_Factory.h:
        * orbsvcs/orbsvcs/Notify/Notify_Default_EMO_Factory.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Default_EMO_Factory.h:
        * orbsvcs/orbsvcs/Notify/Notify_Default_POA_Factory.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Default_POA_Factory.h:
        * orbsvcs/orbsvcs/Notify/Notify_EventChannelFactory_i.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_EventChannelFactory_i.h:
        * orbsvcs/orbsvcs/Notify/Notify_Extensions.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Extensions.h:
        * orbsvcs/orbsvcs/Notify/Object.cpp:
        * orbsvcs/orbsvcs/Notify/Object.h:
        * orbsvcs/orbsvcs/Notify/Object.inl:
        * orbsvcs/orbsvcs/Notify/POA_Helper.cpp:
        * orbsvcs/orbsvcs/Notify/POA_Helper.h:
        * orbsvcs/orbsvcs/Notify/POA_Helper.inl:
        * orbsvcs/orbsvcs/Notify/Peer.cpp:
        * orbsvcs/orbsvcs/Notify/Peer.h:
        * orbsvcs/orbsvcs/Notify/Persistent_File_Allocator.cpp:
        * orbsvcs/orbsvcs/Notify/Persistent_File_Allocator.h:
        * orbsvcs/orbsvcs/Notify/Properties.cpp:
        * orbsvcs/orbsvcs/Notify/Properties.h:
        * orbsvcs/orbsvcs/Notify/Properties.inl:
        * orbsvcs/orbsvcs/Notify/Property.h:
        * orbsvcs/orbsvcs/Notify/PropertySeq.cpp:
        * orbsvcs/orbsvcs/Notify/PropertySeq.h:
        * orbsvcs/orbsvcs/Notify/PropertySeq.inl:
        * orbsvcs/orbsvcs/Notify/Property_Boolean.cpp:
        * orbsvcs/orbsvcs/Notify/Property_Boolean.h:
        * orbsvcs/orbsvcs/Notify/Property_Boolean.inl:
        * orbsvcs/orbsvcs/Notify/Property_T.cpp:
        * orbsvcs/orbsvcs/Notify/Property_T.h:
        * orbsvcs/orbsvcs/Notify/Property_T.inl:
        * orbsvcs/orbsvcs/Notify/Proxy.cpp:
        * orbsvcs/orbsvcs/Notify/Proxy.h:
        * orbsvcs/orbsvcs/Notify/Proxy.inl:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.h:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.inl:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer_T.cpp:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer_T.h:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.cpp:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.h:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.inl:
        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.cpp:
        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.h:
        * orbsvcs/orbsvcs/Notify/Proxy_T.cpp:
        * orbsvcs/orbsvcs/Notify/Proxy_T.h:
        * orbsvcs/orbsvcs/Notify/QoSProperties.cpp:
        * orbsvcs/orbsvcs/Notify/QoSProperties.h:
        * orbsvcs/orbsvcs/Notify/QoSProperties.inl:
        * orbsvcs/orbsvcs/Notify/RT_Builder.cpp:
        * orbsvcs/orbsvcs/Notify/RT_Builder.h:
        * orbsvcs/orbsvcs/Notify/RT_Factory.cpp:
        * orbsvcs/orbsvcs/Notify/RT_Factory.h:
        * orbsvcs/orbsvcs/Notify/RT_Notify_Service.cpp:
        * orbsvcs/orbsvcs/Notify/RT_Notify_Service.h:
        * orbsvcs/orbsvcs/Notify/RT_POA_Helper.cpp:
        * orbsvcs/orbsvcs/Notify/RT_POA_Helper.h:
        * orbsvcs/orbsvcs/Notify/RT_Properties.cpp:
        * orbsvcs/orbsvcs/Notify/RT_Properties.h:
        * orbsvcs/orbsvcs/Notify/RT_Properties.inl:
        * orbsvcs/orbsvcs/Notify/Random_File.cpp:
        * orbsvcs/orbsvcs/Notify/Random_File.h:
        * orbsvcs/orbsvcs/Notify/Reactive_Task.cpp:
        * orbsvcs/orbsvcs/Notify/Reactive_Task.h:
        * orbsvcs/orbsvcs/Notify/Reactive_Task.inl:
        * orbsvcs/orbsvcs/Notify/Reconnect_Worker_T.cpp:
        * orbsvcs/orbsvcs/Notify/Reconnect_Worker_T.h:
        * orbsvcs/orbsvcs/Notify/Reconnection_Registry.cpp:
        * orbsvcs/orbsvcs/Notify/Reconnection_Registry.h:
        * orbsvcs/orbsvcs/Notify/Refcountable.cpp:
        * orbsvcs/orbsvcs/Notify/Refcountable.h:
        * orbsvcs/orbsvcs/Notify/Refcountable_Guard_T.h:
        * orbsvcs/orbsvcs/Notify/Refcountable_Guard_T.inl:
        * orbsvcs/orbsvcs/Notify/Routing_Slip.cpp:
        * orbsvcs/orbsvcs/Notify/Routing_Slip.h:
        * orbsvcs/orbsvcs/Notify/Routing_Slip_Persistence_Manager.cpp:
        * orbsvcs/orbsvcs/Notify/Routing_Slip_Persistence_Manager.h:
        * orbsvcs/orbsvcs/Notify/Routing_Slip_Queue.cpp:
        * orbsvcs/orbsvcs/Notify/Routing_Slip_Queue.h:
        * orbsvcs/orbsvcs/Notify/Save_Persist_Worker_T.cpp:
        * orbsvcs/orbsvcs/Notify/Save_Persist_Worker_T.h:
        * orbsvcs/orbsvcs/Notify/Seq_Worker_T.cpp:
        * orbsvcs/orbsvcs/Notify/Seq_Worker_T.h:
        * orbsvcs/orbsvcs/Notify/Seq_Worker_T.inl:
        * orbsvcs/orbsvcs/Notify/Service.cpp:
        * orbsvcs/orbsvcs/Notify/Service.h:
        * orbsvcs/orbsvcs/Notify/Standard_Event_Persistence.cpp:
        * orbsvcs/orbsvcs/Notify/Standard_Event_Persistence.h:
        * orbsvcs/orbsvcs/Notify/Subscription_Change_Worker.cpp:
        * orbsvcs/orbsvcs/Notify/Subscription_Change_Worker.h:
        * orbsvcs/orbsvcs/Notify/Supplier.cpp:
        * orbsvcs/orbsvcs/Notify/Supplier.h:
        * orbsvcs/orbsvcs/Notify/Supplier.inl:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.h:
        * orbsvcs/orbsvcs/Notify/Supplier_Map.h:
        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.cpp:
        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.h:
        * orbsvcs/orbsvcs/Notify/Timer.h:
        * orbsvcs/orbsvcs/Notify/Timer_Queue.cpp:
        * orbsvcs/orbsvcs/Notify/Timer_Queue.h:
        * orbsvcs/orbsvcs/Notify/Timer_Reactor.cpp:
        * orbsvcs/orbsvcs/Notify/Timer_Reactor.h:
        * orbsvcs/orbsvcs/Notify/Topology_Factory.h:
        * orbsvcs/orbsvcs/Notify/Topology_Loader.cpp:
        * orbsvcs/orbsvcs/Notify/Topology_Loader.h:
        * orbsvcs/orbsvcs/Notify/Topology_Object.cpp:
        * orbsvcs/orbsvcs/Notify/Topology_Object.h:
        * orbsvcs/orbsvcs/Notify/Topology_Object.inl:
        * orbsvcs/orbsvcs/Notify/Topology_Saver.cpp:
        * orbsvcs/orbsvcs/Notify/Topology_Saver.h:
        * orbsvcs/orbsvcs/Notify/Worker_Task.cpp:
        * orbsvcs/orbsvcs/Notify/Worker_Task.h:
        * orbsvcs/orbsvcs/Notify/XML_Loader.cpp:
        * orbsvcs/orbsvcs/Notify/XML_Loader.h:
        * orbsvcs/orbsvcs/Notify/XML_Saver.cpp:
        * orbsvcs/orbsvcs/Notify/XML_Saver.h:
        * orbsvcs/orbsvcs/Notify/XML_Topology_Factory.cpp:
        * orbsvcs/orbsvcs/Notify/XML_Topology_Factory.h:
        * orbsvcs/orbsvcs/Notify/Any/AnyEvent.cpp:
        * orbsvcs/orbsvcs/Notify/Any/AnyEvent.h:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Any/PushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Any/PushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Any/PushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Any/PushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Structured/RT_StructuredProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/RT_StructuredProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredEvent.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredEvent.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushSupplier.h:
        * orbsvcs/orbsvcs/PortableGroup/GOA.cpp:
        * orbsvcs/orbsvcs/PortableGroup/GOA.h:
        * orbsvcs/orbsvcs/PortableGroup/MIOP.cpp:
        * orbsvcs/orbsvcs/PortableGroup/MIOP.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Default_Property_Validator.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Default_Property_Validator.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Factory_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Factory_Set.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Guard.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Guard.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Equal_To.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Equal_To.inl:
        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Hash.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Hash.inl:
        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_MemberInfo.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_MemberInfo.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Null_Property_Validator.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Null_Property_Validator.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroup_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Adapter_Factory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Adapter_Factory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Manipulator.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Manipulator.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Operators.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Operators.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.inl:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Support.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Support.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_PropertyManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_PropertyManager.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set_Find.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Utils.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Utils.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Servant_Dispatcher.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Servant_Dispatcher.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Utils.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Utils.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_conf.h:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Acceptor_Registry.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Acceptor_Registry.h:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Loader.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Loader.h:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_ORBInitializer.h:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Request_Dispatcher.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Request_Dispatcher.h:
        * orbsvcs/orbsvcs/PortableGroup/Portable_Group_Map.cpp:
        * orbsvcs/orbsvcs/PortableGroup/Portable_Group_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.i:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Endpoint.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Endpoint.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Endpoint.i:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Factory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Factory.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Message_Block_Data_Iterator.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Message_Block_Data_Iterator.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Wait_Never.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Wait_Never.h:

          Added versioned namespace support.

Mon Nov 14 15:00:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_traits.cpp:
        * TAO_IDL/be/be_visitor_component/component_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
          The first argument of Objref_Traits::marshal should be
          a const argument

Mon Nov 14 09:13:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/unbounded_octet_sequence.hpp:
          Fixed compile error with HPUX

Mon Nov 14 07:03:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/mock_stream.{hpp,cpp}:
        * tests/Sequence_Unit_Tests/fwd_mock_reference.{hpp,cpp}:
          New mock_stream and fwd_mock_reference, needed for some more unit
          tests

Sun Nov 13 12:15:58 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B.idl:

          Changed the done() method to be oneway to see if this fixes TRANSIENT
          exception caught on VXWORKS builds.

        * tests/CSD_Strategy_Tests/TP_Test_1/run_test.pl:

          Extended timeout for server process startup to see if this fixes
          server.ior not found problem on VXWORKS builds.

Sat Nov 12 09:55:33 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Change "FaultTolerance/FT_IOGR_Property.i" to
          "FaultTolerance/FT_IOGR_Property.inl".

          Remove "ETCL/ETCL_Constraint.i".

Sat Nov 12 01:34:26 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/CosLoadBalancing.mpc:
        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlertMap.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadListMap.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMap.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Location_Index_Map.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_MonitorMap.cpp:

          Removed empty LoadBalancing/*Map.cpp source files.

        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Initializer.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Initializer.h:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Interceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Interceptor.h:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Loader.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Loader.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Replication_Strategy.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Basic_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Basic_Replication_Strategy.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ConnectionHandler_T.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ConnectionHandler_T.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Dynamic_Bitset.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Dynamic_Bitset.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Dynamic_Bitset.inl:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Become_Primary_Listener.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Become_Primary_Listener.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ConsumerAdmin.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Factory.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Factory.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Fault_Listener.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Group_Manager.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Group_Manager.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ORBInitializer.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxyConsumer.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxySupplier.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ProxySupplier.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_SupplierAdmin.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_SupplierAdmin.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_Base.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_Base.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_T.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_T.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_Loader.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_Loader.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_T.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_T.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Listener.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ForwardCtrlServerInterceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ForwardCtrlServerInterceptor.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/GroupInfoPublisher.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/GroupInfoPublisher.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/IOGR_Maker.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/IOGR_Maker.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Identification_Service.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Identification_Service.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ObjectGroupManagerHandler.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ObjectGroupManagerHandler.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ProxyConsumerStateWorker.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ProxyConsumerStateWorker.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ProxySupplierStateWorker.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ProxySupplierStateWorker.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Service.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Service.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Strategy.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/SCTP_Fault_Detector.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/SCTP_Fault_Detector.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Set_Update_Interceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Set_Update_Interceptor.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Update_Manager.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Update_Manager.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/UpdateableHandler.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/UpdateableHandler.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/create_persistent_poa.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/create_persistent_poa.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/replace_key.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.inl:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/Log.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/Log.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/Log.inl:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/Safe_InputCDR.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/Safe_InputCDR.inl:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/ScopeGuard.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/UUID.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/UUID.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/UUID.inl:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/activate_with_id.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/resolve_init.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor.i:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor_Impl.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor_Impl.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Completion_Handler.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Completion_Handler.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connection_Handler.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connector.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connector.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connector_Impl.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connector_Impl.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Endpoint.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Endpoint.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Endpoint.i:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Factory.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Factory.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Profile.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Profile.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Transport.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Transport.h:
        * orbsvcs/orbsvcs/HTIOP/htiop_endpointsC.cpp:
        * orbsvcs/orbsvcs/HTIOP/htiop_endpointsC.h:
        * orbsvcs/orbsvcs/IFRService/AbstractInterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/AbstractInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/AliasDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/AliasDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ArrayDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ArrayDef_i.h:
        * orbsvcs/orbsvcs/IFRService/AttributeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/AttributeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.h:
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ComponentModuleDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentModuleDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ComponentRepository_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentRepository_i.h:
        * orbsvcs/orbsvcs/IFRService/ConstantDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ConstantDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ConsumesDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ConsumesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/Contained_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Contained_i.h:
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Container_i.h:
        * orbsvcs/orbsvcs/IFRService/EmitsDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/EmitsDef_i.h:
        * orbsvcs/orbsvcs/IFRService/EnumDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/EnumDef_i.h:
        * orbsvcs/orbsvcs/IFRService/EventDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/EventDef_i.h:
        * orbsvcs/orbsvcs/IFRService/EventPortDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/EventPortDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExceptionDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExceptionDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtAbstractInterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtAbstractInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtAttributeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtAttributeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtInterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtLocalInterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtLocalInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.h:
        * orbsvcs/orbsvcs/IFRService/FactoryDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/FactoryDef_i.h:
        * orbsvcs/orbsvcs/IFRService/FinderDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/FinderDef_i.h:
        * orbsvcs/orbsvcs/IFRService/FixedDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/FixedDef_i.h:
        * orbsvcs/orbsvcs/IFRService/HomeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/HomeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/IDLType_i.cpp:
        * orbsvcs/orbsvcs/IFRService/IDLType_i.h:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Loader.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Loader.h:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.h:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils_T.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils_T.h:
        * orbsvcs/orbsvcs/IFRService/IRObject_i.cpp:
        * orbsvcs/orbsvcs/IFRService/IRObject_i.h:
        * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.cpp:
        * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.h:
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/LocalInterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/LocalInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ModuleDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ModuleDef_i.h:
        * orbsvcs/orbsvcs/IFRService/NativeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/NativeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/OperationDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/OperationDef_i.h:
        * orbsvcs/orbsvcs/IFRService/Options.cpp:
        * orbsvcs/orbsvcs/IFRService/Options.h:
        * orbsvcs/orbsvcs/IFRService/PrimitiveDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/PrimitiveDef_i.h:
        * orbsvcs/orbsvcs/IFRService/RecursDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/RecursDef_i.h:
        * orbsvcs/orbsvcs/IFRService/Repository_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Repository_i.h:
        * orbsvcs/orbsvcs/IFRService/SequenceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/SequenceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/StringDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/StringDef_i.h:
        * orbsvcs/orbsvcs/IFRService/StructDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/StructDef_i.h:
        * orbsvcs/orbsvcs/IFRService/TypedefDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/TypedefDef_i.h:
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.h:
        * orbsvcs/orbsvcs/IFRService/UsesDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UsesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ValueBoxDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueBoxDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ValueMemberDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueMemberDef_i.h:
        * orbsvcs/orbsvcs/IFRService/WstringDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/WstringDef_i.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Load_Average_Monitor.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Load_Average_Monitor.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Utilization_Monitor.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Utilization_Monitor.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ClientComponent.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ClientComponent.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ClientORBInitializer.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ClientORBInitializer.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ClientRequestInterceptor.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ClientRequestInterceptor.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Component.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Component.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_IORInterceptor.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_IORInterceptor.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LeastLoaded.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LeastLoaded.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LeastLoaded.inl:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlert.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlert.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlert.inl:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlertInfo.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlertInfo.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlertMap.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlert_Handler.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.inl:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadListMap.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMap.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMinimum.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMinimum.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMinimum.inl:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Location_Index_Map.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_MemberLocator.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_MemberLocator.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ORBInitializer.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ObjectReferenceFactory.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ObjectReferenceFactory.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Pull_Handler.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Pull_Handler.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Random.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Random.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_RoundRobin.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_RoundRobin.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ServerRequestInterceptor.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ServerRequestInterceptor.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_conf.h:

          Added versioned namespace support.

Fri Nov 11 08:55:05 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/CosEvent/CEC_Factory.h:

          Include "tao/Versioned_Namespace.h" for
          TAO_BEGIN_VERSIONED_NAMESPACE_DECL macro definition.

Fri Nov 11 08:50:02 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/AV/Endpoint_Strategy_T.cpp:

          Include "ace/OS_NS_unistd.h" for ACE_OS::getgid() prototype.

Thu Nov 10 10:18:20 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tao/CSD_ThreadPool/CSD_TP_Strategy_Factory.cpp:

          Merged a bug fix from OCI 1.4a.
          "Thu Nov 10 02:34:04 2005  Ciju John  <john_c@ociweb.com>"

Thu Nov 10 10:29:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerControl.cpp:
          Fixed incorrect macro

Wed Nov  9 22:34:24 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Channel_Clients_T.cpp:
        * orbsvcs/orbsvcs/Channel_Clients_T.h:
        * orbsvcs/orbsvcs/Channel_Clients_T.i:
        * orbsvcs/orbsvcs/Event_Service_Constants.h:
        * orbsvcs/orbsvcs/Event_Utilities.cpp:
        * orbsvcs/orbsvcs/Event_Utilities.h:
        * orbsvcs/orbsvcs/Event_Utilities.i:
        * orbsvcs/orbsvcs/IOR_Multicast.cpp:
        * orbsvcs/orbsvcs/IOR_Multicast.h:
        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/orbsvcs/RTEvent_Serv.mpc:
        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp:
        * orbsvcs/orbsvcs/Runtime_Scheduler.h:
        * orbsvcs/orbsvcs/Shutdown_Utilities.cpp:
        * orbsvcs/orbsvcs/Shutdown_Utilities.h:
        * orbsvcs/orbsvcs/Time_Utilities.cpp:
        * orbsvcs/orbsvcs/Time_Utilities.h:
        * orbsvcs/orbsvcs/Time_Utilities.i:
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
        * orbsvcs/orbsvcs/AV/AVStreams_i.h:
        * orbsvcs/orbsvcs/AV/AVStreams_i.i:
        * orbsvcs/orbsvcs/AV/AV_Core.cpp:
        * orbsvcs/orbsvcs/AV/AV_Core.h:
        * orbsvcs/orbsvcs/AV/Endpoint_Strategy.cpp:
        * orbsvcs/orbsvcs/AV/Endpoint_Strategy.h:
        * orbsvcs/orbsvcs/AV/Endpoint_Strategy_T.cpp:
        * orbsvcs/orbsvcs/AV/Endpoint_Strategy_T.h:
        * orbsvcs/orbsvcs/AV/Fill_ACE_QoS.cpp:
        * orbsvcs/orbsvcs/AV/Fill_ACE_QoS.h:
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.cpp:
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.h:
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.i:
        * orbsvcs/orbsvcs/AV/Flows_T.cpp:
        * orbsvcs/orbsvcs/AV/Flows_T.h:
        * orbsvcs/orbsvcs/AV/MCast.cpp:
        * orbsvcs/orbsvcs/AV/MCast.h:
        * orbsvcs/orbsvcs/AV/MCast.i:
        * orbsvcs/orbsvcs/AV/Policy.cpp:
        * orbsvcs/orbsvcs/AV/Policy.h:
        * orbsvcs/orbsvcs/AV/Policy.i:
        * orbsvcs/orbsvcs/AV/Protocol_Factory.cpp:
        * orbsvcs/orbsvcs/AV/Protocol_Factory.h:
        * orbsvcs/orbsvcs/AV/QoS_UDP.cpp:
        * orbsvcs/orbsvcs/AV/QoS_UDP.h:
        * orbsvcs/orbsvcs/AV/QoS_UDP.i:
        * orbsvcs/orbsvcs/AV/RTCP.cpp:
        * orbsvcs/orbsvcs/AV/RTCP.h:
        * orbsvcs/orbsvcs/AV/RTCP_Channel.cpp:
        * orbsvcs/orbsvcs/AV/RTCP_Channel.h:
        * orbsvcs/orbsvcs/AV/RTCP_Packet.cpp:
        * orbsvcs/orbsvcs/AV/RTCP_Packet.h:
        * orbsvcs/orbsvcs/AV/RTP.cpp:
        * orbsvcs/orbsvcs/AV/RTP.h:
        * orbsvcs/orbsvcs/AV/Resource_Factory.h:
        * orbsvcs/orbsvcs/AV/SCTP_SEQ.cpp:
        * orbsvcs/orbsvcs/AV/SCTP_SEQ.h:
        * orbsvcs/orbsvcs/AV/TCP.cpp:
        * orbsvcs/orbsvcs/AV/TCP.h:
        * orbsvcs/orbsvcs/AV/Transport.cpp:
        * orbsvcs/orbsvcs/AV/Transport.h:
        * orbsvcs/orbsvcs/AV/Transport.i:
        * orbsvcs/orbsvcs/AV/UDP.cpp:
        * orbsvcs/orbsvcs/AV/UDP.h:
        * orbsvcs/orbsvcs/AV/UDP.i:
        * orbsvcs/orbsvcs/AV/default_resource.cpp:
        * orbsvcs/orbsvcs/AV/default_resource.h:
        * orbsvcs/orbsvcs/AV/media_timer.cpp:
        * orbsvcs/orbsvcs/AV/media_timer.h:
        * orbsvcs/orbsvcs/AV/ntp-time.h:
        * orbsvcs/orbsvcs/AV/sfp.cpp:
        * orbsvcs/orbsvcs/AV/sfp.h:
        * orbsvcs/orbsvcs/Concurrency/CC_Lock.cpp:
        * orbsvcs/orbsvcs/Concurrency/CC_Lock.h:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSet.cpp:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSet.h:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSetFactory.cpp:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSetFactory.h:
        * orbsvcs/orbsvcs/Concurrency/Concurrency_Loader.cpp:
        * orbsvcs/orbsvcs/Concurrency/Concurrency_Loader.h:
        * orbsvcs/orbsvcs/Concurrency/Concurrency_Utils.cpp:
        * orbsvcs/orbsvcs/Concurrency/Concurrency_Utils.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerAdmin.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerAdmin.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerControl.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerControl.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_Defaults.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_DynamicImplementation.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_DynamicImplementation.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_DynamicImplementation.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Factory.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Factory.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_MT_Dispatching.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_MT_Dispatching.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullConsumer.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullConsumer.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullConsumer.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushConsumer.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushConsumer.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_Pulling_Strategy.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Pulling_Strategy.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_Pulling_Strategy.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_Pulling_Strategy.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_Pulling_Strategy.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierAdmin.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierAdmin.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierAdmin.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierControl.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierControl.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEvent.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEvent.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedSupplierAdmin.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedSupplierAdmin.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedSupplierAdmin.i:
        * orbsvcs/orbsvcs/ESF/ESF_Busy_Lock.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Busy_Lock.h:
        * orbsvcs/orbsvcs/ESF/ESF_Busy_Lock.i:
        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Read.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Read.h:
        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Write.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Write.h:
        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Write.i:
        * orbsvcs/orbsvcs/ESF/ESF_Defaults.h:
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Changes.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Changes.h:
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Changes.i:
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Command.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Command.h:
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Command.i:
        * orbsvcs/orbsvcs/ESF/ESF_Immediate_Changes.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Immediate_Changes.h:
        * orbsvcs/orbsvcs/ESF/ESF_Immediate_Changes.i:
        * orbsvcs/orbsvcs/ESF/ESF_Peer_Admin.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Peer_Admin.h:
        * orbsvcs/orbsvcs/ESF/ESF_Peer_Workers.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Peer_Workers.h:
        * orbsvcs/orbsvcs/ESF/ESF_Peer_Workers.i:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Admin.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Admin.h:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Admin.i:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Collection.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Collection.h:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_List.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_List.h:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_List.i:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RB_Tree.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RB_Tree.h:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RB_Tree.i:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RefCount_Guard.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RefCount_Guard.h:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_RefCount_Guard.i:
        * orbsvcs/orbsvcs/ESF/ESF_RefCount_Guard.h:
        * orbsvcs/orbsvcs/ESF/ESF_RefCount_Guard.i:
        * orbsvcs/orbsvcs/ESF/ESF_Shutdown_Proxy.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Shutdown_Proxy.h:
        * orbsvcs/orbsvcs/ESF/ESF_Shutdown_Proxy.i:
        * orbsvcs/orbsvcs/ESF/ESF_Worker.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Worker.h:
        * orbsvcs/orbsvcs/ETCL/ETCL.ll:
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.cpp:
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.i:
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint_Visitor.h:
        * orbsvcs/orbsvcs/ETCL/ETCL_Interpreter.cpp:
        * orbsvcs/orbsvcs/ETCL/ETCL_Interpreter.h:
        * orbsvcs/orbsvcs/ETCL/ETCL_l.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Adapters.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Adapters.h:
        * orbsvcs/orbsvcs/Event/ECG_Address_Server_Base.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Address_Server_Base.h:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.i:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.cpp:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.h:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.i:
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.h:
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.i:
        * orbsvcs/orbsvcs/Event/ECG_ConsumerEC_Control.cpp:
        * orbsvcs/orbsvcs/Event/ECG_ConsumerEC_Control.h:
        * orbsvcs/orbsvcs/Event/ECG_Defaults.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.i:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.i:
        * orbsvcs/orbsvcs/Event/ECG_Reactive_ConsumerEC_Control.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Reactive_ConsumerEC_Control.h:
        * orbsvcs/orbsvcs/Event/ECG_Reconnect_ConsumerEC_Control.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Reconnect_ConsumerEC_Control.h:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.h:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.i:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Mcast_EH.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Mcast_EH.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.i:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.i:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Protocol.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.i:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.inl:
        * orbsvcs/orbsvcs/Event/EC_And_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_And_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Basic_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Basic_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Basic_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Event/EC_Basic_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_Basic_Filter_Builder.i:
        * orbsvcs/orbsvcs/Event/EC_Bitmask_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Bitmask_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Busy_Lock.cpp:
        * orbsvcs/orbsvcs/Event/EC_Busy_Lock.h:
        * orbsvcs/orbsvcs/Event/EC_Busy_Lock.i:
        * orbsvcs/orbsvcs/Event/EC_Channel_Destroyer.cpp:
        * orbsvcs/orbsvcs/Event/EC_Channel_Destroyer.h:
        * orbsvcs/orbsvcs/Event/EC_Conjunction_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Conjunction_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_ConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/Event/EC_ConsumerAdmin.h:
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.i:
        * orbsvcs/orbsvcs/Event/EC_Default_ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Event/EC_Default_ProxyConsumer.h:
        * orbsvcs/orbsvcs/Event/EC_Default_ProxySupplier.cpp:
        * orbsvcs/orbsvcs/Event/EC_Default_ProxySupplier.h:
        * orbsvcs/orbsvcs/Event/EC_Disjunction_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Disjunction_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.cpp:
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.h:
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.i:
        * orbsvcs/orbsvcs/Event/EC_Event_Channel.cpp:
        * orbsvcs/orbsvcs/Event/EC_Event_Channel.h:
        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.cpp:
        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.h:
        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.i:
        * orbsvcs/orbsvcs/Event/EC_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Filter.i:
        * orbsvcs/orbsvcs/Event/EC_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Event/EC_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_Filter_Builder.i:
        * orbsvcs/orbsvcs/Event/EC_Gateway.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.i:
        * orbsvcs/orbsvcs/Event/EC_Gateway_Sched.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_Sched.h:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.i:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Factory.i:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter_Builder.i:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Scheduling.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Scheduling.h:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Scheduling.i:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.h:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.i:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.cpp:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.h:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils_T.i:
        * orbsvcs/orbsvcs/Event/EC_MT_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_MT_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_Masked_Type_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Masked_Type_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Negation_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Negation_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Null_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Null_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.cpp:
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.h:
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.i:
        * orbsvcs/orbsvcs/Event/EC_Per_Supplier_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Per_Supplier_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Per_Supplier_Filter.i:
        * orbsvcs/orbsvcs/Event/EC_Prefix_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Event/EC_Prefix_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_Prefix_Filter_Builder.i:
        * orbsvcs/orbsvcs/Event/EC_Priority_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_Priority_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_Priority_Scheduling.cpp:
        * orbsvcs/orbsvcs/Event/EC_Priority_Scheduling.h:
        * orbsvcs/orbsvcs/Event/EC_Priority_Scheduling.i:
        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.h:
        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.i:
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.cpp:
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.h:
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.i:
        * orbsvcs/orbsvcs/Event/EC_Proxy_Disconnector.cpp:
        * orbsvcs/orbsvcs/Event/EC_Proxy_Disconnector.h:
        * orbsvcs/orbsvcs/Event/EC_QOS_Info.h:
        * orbsvcs/orbsvcs/Event/EC_QOS_Info.i:
        * orbsvcs/orbsvcs/Event/EC_RTCORBA_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_RTCORBA_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_RTCORBA_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_RTCORBA_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_ConsumerControl.cpp:
        * orbsvcs/orbsvcs/Event/EC_Reactive_ConsumerControl.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_ConsumerControl.i:
        * orbsvcs/orbsvcs/Event/EC_Reactive_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_Reactive_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.cpp:
        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.i:
        * orbsvcs/orbsvcs/Event/EC_Reactive_Timeout_Generator.cpp:
        * orbsvcs/orbsvcs/Event/EC_Reactive_Timeout_Generator.h:
        * orbsvcs/orbsvcs/Event/EC_Sched_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Sched_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Sched_Factory.i:
        * orbsvcs/orbsvcs/Event/EC_Sched_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Sched_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Sched_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Event/EC_Sched_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_Sched_Filter_Builder.i:
        * orbsvcs/orbsvcs/Event/EC_Scheduling_Strategy.cpp:
        * orbsvcs/orbsvcs/Event/EC_Scheduling_Strategy.h:
        * orbsvcs/orbsvcs/Event/EC_SupplierAdmin.cpp:
        * orbsvcs/orbsvcs/Event/EC_SupplierAdmin.h:
        * orbsvcs/orbsvcs/Event/EC_SupplierControl.cpp:
        * orbsvcs/orbsvcs/Event/EC_SupplierControl.h:
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter.i:
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching_Task.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching_Task.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxyConsumer.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxySupplier.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxySupplier.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxySupplier.i:
        * orbsvcs/orbsvcs/Event/EC_Timeout_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Timeout_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Timeout_Filter.i:
        * orbsvcs/orbsvcs/Event/EC_Timeout_Generator.cpp:
        * orbsvcs/orbsvcs/Event/EC_Timeout_Generator.h:
        * orbsvcs/orbsvcs/Event/EC_Timeout_Generator.i:
        * orbsvcs/orbsvcs/Event/EC_Trivial_Supplier_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Trivial_Supplier_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Type_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Type_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_UDP_Admin.cpp:
        * orbsvcs/orbsvcs/Event/EC_UDP_Admin.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientORBInitializer.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientORBInitializer.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicyFactory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicyFactory.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.inl:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientService_Activate.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientService_Activate.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Endpoint_Selector_Factory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Endpoint_Selector_Factory.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.i:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.inl:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Invocation_Endpoint_Selectors.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Invocation_Endpoint_Selectors.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ORBInitializer.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_PolicyFactory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_PolicyFactory.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.i:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.inl:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerORBInitializer.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerORBInitializer.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicyFactory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicyFactory.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.inl:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerService_Activate.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerService_Activate.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Activate.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.h:

          Added versioned namespace support.

Wed Nov  9 22:54:43 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * tao/CSD_ThreadPool/CSD_TP_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Strategy.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Strategy.h:
        * tao/CSD_ThreadPool/CSD_TP_Strategy.inl:
        * tao/CSD_ThreadPool/CSD_TP_Strategy_Factory.cpp:

        Merged changes from OCI TAO 1.4a that optionally supports the
        serialization of requests. (See OCIChangeLog entry
        "Mon Nov  7 09:31:11 MST 2005  Tim Bradley  <bradley_t@ociweb.com>"
        for details.)

Wed Nov  9 15:59:01 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * tests/Bug_2234_Regression/client.cpp

        Fixed a warning on the OS X build.

Wed Nov  9 13:39:13 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * examples/CSD_Strategy/ThreadPool4/Foo.idl:
        * examples/CSD_Strategy/ThreadPool4/Foo_i.cpp:
        * examples/CSD_Strategy/ThreadPool4/Foo_i.h:
        * examples/CSD_Strategy/ThreadPool5/Foo.idl:
        * examples/CSD_Strategy/ThreadPool5/Foo_i.cpp:
        * examples/CSD_Strategy/ThreadPool5/Foo_i.h:

          Added exception raise to test_callback() in idl. This would fix the
          warnings on borland builds.

Wed Nov  9 10:20:05 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * performance-tests/CSD_Strategy/TestInf/csd_pt_testinf.mpc:

          Removed duplicated dependency on pi and codecfactory and removed
          dependency on interceptors since it's not needed and it makes the
          test library not built on minumum corba build.

Wed Nov  9 14:57:54 2005  Simon McQueen  <sm@prismtech.com>

        * tests/Bug_2289_Regression/Bug_2289_Regression.mpc:
        * tests/Bug_2289_Regression/MyInterfaceImpl.cpp:
        * tests/Bug_2289_Regression/MyInterfaceImpl.h:
        * tests/Bug_2289_Regression/README:
        * tests/Bug_2289_Regression/Test.idl:
        * tests/Bug_2289_Regression/client.cpp:

          Updated this test so it doesn't need handcrafted code.

        * tests/Bug_2289_Regression/MyStruct.idl:
        * tests/Bug_2289_Regression/MyStructC.cpp:
        * tests/Bug_2289_Regression/MyStructC.h:
        * tests/Bug_2289_Regression/MyStructC.inl:
        * tests/Bug_2289_Regression/MyStructS.cpp:
        * tests/Bug_2289_Regression/MyStructS.h:
        * tests/Bug_2289_Regression/MyStructS.inl:
        * tests/Bug_2289_Regression/MyStructS_T.cpp:
        * tests/Bug_2289_Regression/MyStructS_T.h:
        * tests/Bug_2289_Regression/MyStructS_T.inl:

          Removed these files. They are no longer needed.

Wed Nov  9 14:25:41 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/IDL_Test/constants.idl:

          Reverted the change of

          Tue Nov  8 20:11:47 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

          since that constant value is being used to address an Intel compiler
          bug, and the value itself is a legal one. Thanks to Johnny Willemsen
          <jwillemsen@remedy.nl> for pointing this out.

Tue Nov  8 20:11:47 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/IDL_Test/constants.idl:

          Changed the literal rhs for one of the constants
          to a value that won't challenge compilers that are not
          compliant with the ANSI/IEEE minimum positive value for
          double. This change should eliminate a warning on
          SuSE 9.3 ICC90.

Tue Nov  8 11:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2074_Regression/Bug_2074_Regression.mpc:
          Added minimum_corba as base project

Tue Nov  8 10:41:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_Request_Muxing/server.cpp:
          Slightly changed this server, when we directly have all expected
          messages then there is no need to wait for anymore. If we don't
          have all messages, we print how many we have and then we run
          the orb for another 5 seconds to see if we get extra messages

Tue Nov  8 10:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/unbounded_octet_sequence.hpp:
          Reimplemented the copy constructor and implemented the assignment
          operator in terms of using the copy constructor

Tue Nov  8 10:01:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Makefile.am:
          Removed POA_Current.inl

Tue Nov  8 08:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/bounded_string_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/bounded_value_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/unbounded_value_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/unbounded_string_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/unbounded_octet_sequence_ut.cpp:
          Changed test_get_buffer_true_with_release_false to use
          a BOOST_CHECK to chekd that we correctly return a null pointer

        * tests/Sequence_Unit_Tests/unbounded_octet_sequence_ut.cpp:
          Trying to test the normal sequence behaviour and the special
          TAO optimization when TAO_NO_COPY_OCTET_SEQUENCES in one file
          will make things hard to maintain, this file now just tests
          the default behaviour, the special behaviour is now done in the
          new unit test listed below.

        * tests/Sequence_Unit_Tests/unbounded_octet_sequence_nocopy_ut.cpp:
          New unit test file

        * tests/Sequence_Unit_Tests/unbounded_octet_sequence.hpp:
          Fixed get_buffer()

        * tests/Sequence_Unit_Tests/Sequence_Unit_Tests.mpc:
        * tests/Sequence_Unit_Tests/run_test.pl:
          Added the new unit test

Tue Nov  8 08:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/unbounded_octet_sequence.hpp:
          Specialization for unbounded octet sequences, enabled when
          TAO_NO_COPY_OCTET_SEQUENCES is defined to 1. This is not
          ready yet, but this way it is easier to share the code
          and build it on multiple systems

        * tests/Sequence_Unit_Tests/Unbounded_Octet.cpp:
          Include unbounded_octet_sequences.hpp

        * tests/Sequence_Unit_Tests/unbounded_octet_sequence_ut.cpp:
          Added a first extra test for when TAO_NO_COPY_OCTET_SEQUENCES
          is defined

Tue Nov  8 08:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/bounded_object_reference_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/bounded_string_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/bounded_value_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/object_reference_sequence_element_ut.cpp:
        * tests/Sequence_Unit_Tests/string_sequence_element_ut.cpp:
        * tests/Sequence_Unit_Tests/testing_allocation_traits_ut.cpp:
        * tests/Sequence_Unit_Tests/unbounded_object_reference_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/unbounded_value_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/unbounded_string_sequence_ut.cpp:
          Made these unit tests working with boost 1.33

        * tests/Sequence_Unit_Tests/unbounded_value_sequence.hpp:
          Enabled the explicit for the single argument constructor

        * tests/Sequence_Unit_Tests/run_test.pl:
          Reduced test time to 10 seconds, long enough

Tue Nov  8 08:02:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2287_Regression/ServerRequest_Interceptor2.cpp:
          Fixed compile error on Solaris

Mon Nov  7 16:25:38 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/CosEC_RtEC_Based_Mult.mpc
        * orbsvcs/tests/Notify/lib/Notify_lib.mpc
        * orbsvcs/tests/Security/Crash_Test/Security_Crash_Test.mpc
        * orbsvcs/tests/Security/MT_IIOP_SSL/MT_IIOP_SSL.mpc
        * orbsvcs/tests/Security/Secure_Invocation/Secure_Invocation.mpc
        * orbsvcs/tests/Trading/Trading.mpc
        * performance-tests/CSD_Strategy/TestInf/csd_pt_testinf.mpc

        Fixes for linking problems on OS X.

Mon Nov  7 12:07:44 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/PortableServer/POA_Current.h (POA_Current):

          Re-exported this class.  Unfortunately, some other TAO libraries
          make direct calls on this class.  Addresses unresolved symbol
          errors.

        * tao/PortableServer/POA_Current.inl:

          Removed this unused file.

Mon Nov  7 19:51:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/bounded_string_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/bounded_value_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/unbounded_string_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/unbounded_value_sequence_ut.cpp:
          Extended test_get_buffer_true_with_release_true test

Mon Nov  7 08:51:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Primary_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
        * orbsvcs/tests/Notify/lib/EventChannel_Command.cpp:
          Fixed warning in MinGW build

Mon Nov  7 08:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/Thread_Pool.{h,inl}:
          Don't export TAO_Thread_Pool_Threads and removed
          threads accessor it exposes internal data
          and current_threads modifier which just is invalid todo

Mon Nov  7 00:54:58 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * examples/CSD_Strategy/ThreadPool4/Foo_i.cpp:
        * examples/CSD_Strategy/ThreadPool5/Foo_i.cpp:

          Fixed warnings that complains mis-use of throw expression.

Sun Nov  6 14:34:51 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:
        * TAO_IDLbe/be_visitor_valuetype/field_cs.cpp:

          Made the generated signature of member mutators
          consistent with IN parameter semantics.

Sat Nov  5 01:43:59 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/PI/ClientRequestInfo.h (TAO_ClientRequestInfo):

          Re-exported this class.  TAO's FT client side requires access to
          it.

Fri Nov  4 11:57:12 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Versioned_Namespace.h:

          Added TAO_ORBCONF_H include/define sanity check.

        * tao/Utils/Synch_Refcountable.h:

          Include "tao/Versioned_Namespace.h" to pull in versioned
          namespace macros.

Fri Nov  4 10:31:15 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/SmartProxies/Smart_Proxies.h:
        * tao/SmartProxies/Smart_Proxies.inl:
        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/DIOP_Acceptor.h:
        * tao/Strategies/DIOP_Acceptor.i:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/DIOP_Connection_Handler.h:
        * tao/Strategies/DIOP_Connector.cpp:
        * tao/Strategies/DIOP_Connector.h:
        * tao/Strategies/DIOP_Endpoint.cpp:
        * tao/Strategies/DIOP_Endpoint.h:
        * tao/Strategies/DIOP_Endpoint.i:
        * tao/Strategies/DIOP_Factory.cpp:
        * tao/Strategies/DIOP_Factory.h:
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Strategies/DIOP_Profile.h:
        * tao/Strategies/DIOP_Transport.cpp:
        * tao/Strategies/DIOP_Transport.h:
        * tao/Strategies/FIFO_Connection_Purging_Strategy.cpp:
        * tao/Strategies/FIFO_Connection_Purging_Strategy.h:
        * tao/Strategies/LFU_Connection_Purging_Strategy.cpp:
        * tao/Strategies/LFU_Connection_Purging_Strategy.h:
        * tao/Strategies/LF_Strategy_Null.cpp:
        * tao/Strategies/LF_Strategy_Null.h:
        * tao/Strategies/NULL_Connection_Purging_Strategy.cpp:
        * tao/Strategies/NULL_Connection_Purging_Strategy.h:
        * tao/Strategies/SCIOP_Acceptor.cpp:
        * tao/Strategies/SCIOP_Acceptor.h:
        * tao/Strategies/SCIOP_Acceptor.i:
        * tao/Strategies/SCIOP_Connection_Handler.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.h:
        * tao/Strategies/SCIOP_Connector.cpp:
        * tao/Strategies/SCIOP_Connector.h:
        * tao/Strategies/SCIOP_Endpoint.cpp:
        * tao/Strategies/SCIOP_Endpoint.h:
        * tao/Strategies/SCIOP_Endpoint.i:
        * tao/Strategies/SCIOP_Factory.cpp:
        * tao/Strategies/SCIOP_Factory.h:
        * tao/Strategies/SCIOP_Lite_Factory.cpp:
        * tao/Strategies/SCIOP_Lite_Factory.h:
        * tao/Strategies/SCIOP_Profile.cpp:
        * tao/Strategies/SCIOP_Profile.h:
        * tao/Strategies/SCIOP_Transport.cpp:
        * tao/Strategies/SCIOP_Transport.h:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/SHMIOP_Acceptor.h:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
        * tao/Strategies/SHMIOP_Connection_Handler.h:
        * tao/Strategies/SHMIOP_Connector.cpp:
        * tao/Strategies/SHMIOP_Connector.h:
        * tao/Strategies/SHMIOP_Endpoint.cpp:
        * tao/Strategies/SHMIOP_Endpoint.h:
        * tao/Strategies/SHMIOP_Endpoint.i:
        * tao/Strategies/SHMIOP_Factory.cpp:
        * tao/Strategies/SHMIOP_Factory.h:
        * tao/Strategies/SHMIOP_Profile.cpp:
        * tao/Strategies/SHMIOP_Profile.h:
        * tao/Strategies/SHMIOP_Transport.cpp:
        * tao/Strategies/SHMIOP_Transport.h:
        * tao/Strategies/UIOP_Acceptor.cpp:
        * tao/Strategies/UIOP_Acceptor.h:
        * tao/Strategies/UIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Connection_Handler.h:
        * tao/Strategies/UIOP_Connector.cpp:
        * tao/Strategies/UIOP_Connector.h:
        * tao/Strategies/UIOP_Endpoint.cpp:
        * tao/Strategies/UIOP_Endpoint.h:
        * tao/Strategies/UIOP_Endpoint.i:
        * tao/Strategies/UIOP_Factory.cpp:
        * tao/Strategies/UIOP_Factory.h:
        * tao/Strategies/UIOP_Lite_Factory.cpp:
        * tao/Strategies/UIOP_Lite_Factory.h:
        * tao/Strategies/UIOP_Profile.cpp:
        * tao/Strategies/UIOP_Profile.h:
        * tao/Strategies/UIOP_Transport.cpp:
        * tao/Strategies/UIOP_Transport.h:
        * tao/Strategies/advanced_resource.cpp:
        * tao/Strategies/advanced_resource.h:
        * tao/TypeCodeFactory/Recursive_TypeCode.cpp:
        * tao/TypeCodeFactory/Recursive_TypeCode.h:
        * tao/TypeCodeFactory/Recursive_TypeCode.inl:
        * tao/TypeCodeFactory/TypeCodeFactory_Adapter_Impl.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_Adapter_Impl.h:
        * tao/TypeCodeFactory/TypeCodeFactory_Loader.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_Loader.h:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.h:
        * tao/Utils/Encodable.cpp:
        * tao/Utils/Encodable.h:
        * tao/Utils/Implicit_Deactivator.cpp:
        * tao/Utils/Implicit_Deactivator.h:
        * tao/Utils/ORB_Destroyer.cpp:
        * tao/Utils/ORB_Destroyer.h:
        * tao/Utils/ORB_Manager.cpp:
        * tao/Utils/ORB_Manager.h:
        * tao/Utils/PolicyList_Destroyer.cpp:
        * tao/Utils/PolicyList_Destroyer.inl:
        * tao/Utils/RIR_Narrow.cpp:
        * tao/Utils/RIR_Narrow.h:
        * tao/Utils/Servant_Var.h:
        * tao/Utils/Servant_Var.inl:
        * tao/Utils/Synch_Refcountable.cpp:
        * tao/Utils/Synch_Refcountable.h:
        * tao/Utils/Synch_Refcountable.inl:
        * tao/Valuetype/AbstractBase.cpp:
        * tao/Valuetype/AbstractBase.h:
        * tao/Valuetype/AbstractBase.inl:
        * tao/Valuetype/AbstractBase_Invocation_Adapter.cpp:
        * tao/Valuetype/AbstractBase_Invocation_Adapter.h:
        * tao/Valuetype/AbstractBase_T.cpp:
        * tao/Valuetype/AbstractBase_T.h:
        * tao/Valuetype/Sequence_T.cpp:
        * tao/Valuetype/Sequence_T.h:
        * tao/Valuetype/Sequence_T.inl:
        * tao/Valuetype/ValueBase.cpp:
        * tao/Valuetype/ValueBase.h:
        * tao/Valuetype/ValueBase.inl:
        * tao/Valuetype/ValueFactory.cpp:
        * tao/Valuetype/ValueFactory.h:
        * tao/Valuetype/ValueFactory_Map.cpp:
        * tao/Valuetype/ValueFactory_Map.h:
        * tao/Valuetype/Value_CORBA_methods.h:
        * tao/Valuetype/Value_VarOut_T.cpp:
        * tao/Valuetype/Value_VarOut_T.h:
        * tao/Valuetype/Valuetype_Adapter_Impl.cpp:
        * tao/Valuetype/Valuetype_Adapter_Impl.h:

          Added remaining core TAO library versioned namespace support.

Fri Nov  4 10:13:43 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/RTScheduling/Request_Interceptor.h (Client_Interceptor):

          Re-exported this class.  The export declaration was
          inadvertently removed.

Fri Nov  4 08:59:36 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/ORB_Core.i (add_tss_cleanup_func):
        * tao/ORB_Core.cpp (add_tss_cleanup_func):

          Moved this method out of line.  Allows the
          TAO_Cleanup_Func_Registry class to remain unexported from the
          TAO DLL.

        * tao/AnyTypeCode/TypeCode_Constants.h (_tc_UnknownUserException):

          Removed this forward declaration.  It's DLL linkage ends up
          differing from the same declaration in the DynamicInterface
          library.  Addresses "inconsistent dll linkage" warnings from
          VC++.

        * tao/PortableServer/POA_Current_Impl.h (POA_Current_Impl):

          Re-exported this class.  Unfortunately, some other TAO libraries
          make direct calls on this class.  Addresses unresolved symbol
          errors.

Fri Nov  4 16:56:06 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_cs.cpp:

          Added a 'const' qualifier to the generated member mutator
          argument for array member types, since this arguement has
          the same semantics as an 'in' operation argument.

        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_obv_cs.h:

          Change generation of the initializing constructor definition to
          simply call the corresponding member mutators in the constructor
          body. This change allows reuse of the copy semantics already
          generated in the various member mutator methods, and as a side
          effect, avoids a VC6 compiler bug that complained when we had
          a call to the base class initializing constructor in the
          derived constructor's initialization list.

Thu Nov  3 22:17:27 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * performance-tests/Cubit/TAO/DII_Cubit/client.cpp:
        * performance-tests/Latency/DII/client.cpp:
        * performance-tests/Latency/DSI/Roundtrip.cpp:
        * performance-tests/Latency/Deferred/client.cpp:
        * performance-tests/Sequence_Latency/DII/client.cpp:
        * performance-tests/Sequence_Latency/DSI/Roundtrip.cpp:
        * performance-tests/Sequence_Latency/Deferred/client.cpp:
        * tests/CDR/tc.cpp:
        * tests/DynAny_Test/data.h:
        * tests/Portable_Interceptors/IORInterceptor/FOO_ClientRequestInterceptor.cpp:

          Include "TypeCode_Constants.h" instead of
          "TC_Constants_Forward.h".  The latter is deprecated.

Thu Nov  3 22:06:44 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/AnyTypeCode/TC_Constants_Forward.h:

          Reintroduced this header as a backward compatibility header that
          includes "tao/AnyTypeCode/TypeCode_Constants.h".

Thu Nov  3 19:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2084_Regression/Hello.cpp:
          Fixed variable not used warning

Thu Nov  3 12:17:09 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * tao/CSD_Framework.mpc:

          Removed interceptor as the base project since it's not needed.

Thu Nov  3 09:26:21 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Concurrency/Concurrency_Loader.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.h:
        * orbsvcs/orbsvcs/Event/EC_And_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Bitmask_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Conjunction_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Disjunction_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Group_Scheduling.h:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Scheduling.h:
        * orbsvcs/orbsvcs/Event/EC_Masked_Type_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Negation_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Null_Scheduling.h:
        * orbsvcs/orbsvcs/Event/EC_Priority_Scheduling.h:
        * orbsvcs/orbsvcs/Event/EC_Sched_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Timeout_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Type_Filter.h:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Loader.h:
        * orbsvcs/orbsvcs/Naming/Naming_Loader.h:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Acceptor_Registry.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.cpp:
        * orbsvcs/orbsvcs/Sched/DynSched.h:
        * orbsvcs/orbsvcs/Sched/Scheduler.h:
        * orbsvcs/orbsvcs/Sched/Scheduler_Generic.h:
        * orbsvcs/orbsvcs/Sched/Strategy_Scheduler.h:
        * orbsvcs/orbsvcs/Security/Security_Current.h:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.h:
        * orbsvcs/orbsvcs/Trader/Trading_Loader.h:

          Removed unnecessary uses of ACE_UNIMPLEMENTED_FUNC macro.  It is
          only meant to be used for private unimplemented member functions
          in class templates.

        * tao/Collocated_Invocation.h:
        * tao/Connector_Registry.h:
        * tao/Object_Ref_Table.h:
        * tao/PolicyFactory_Registry_Factory.cpp:
        * tao/PolicyFactory_Registry_Factory.h:
        * tao/Profile.h:
        * tao/Resource_Factory.h:
        * tao/Stub.h:
        * tao/TSS_Resources.h:
        * tao/Transport.h:
        * tao/Wait_On_LF_No_Upcall.cpp:
        * tao/AnyTypeCode/Alias_TypeCode.cpp:
        * tao/AnyTypeCode/Alias_TypeCode.h:
        * tao/AnyTypeCode/Alias_TypeCode.inl:
        * tao/AnyTypeCode/Alias_TypeCode_Static.cpp:
        * tao/AnyTypeCode/Alias_TypeCode_Static.h:
        * tao/AnyTypeCode/Alias_TypeCode_Static.inl:
        * tao/AnyTypeCode/Any.cpp:
        * tao/AnyTypeCode/Any.h:
        * tao/AnyTypeCode/Any.inl:
        * tao/AnyTypeCode/AnyTypeCode_Adapter_Impl.cpp:
        * tao/AnyTypeCode/AnyTypeCode_Adapter_Impl.h:
        * tao/AnyTypeCode/AnyTypeCode_methods.h:
        * tao/AnyTypeCode/Any_Arg_Traits.h:
        * tao/AnyTypeCode/Any_Array_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Array_Impl_T.h:
        * tao/AnyTypeCode/Any_Array_Impl_T.inl:
        * tao/AnyTypeCode/Any_Basic_Impl.cpp:
        * tao/AnyTypeCode/Any_Basic_Impl.h:
        * tao/AnyTypeCode/Any_Basic_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Basic_Impl_T.h:
        * tao/AnyTypeCode/Any_Basic_Impl_T.inl:
        * tao/AnyTypeCode/Any_Dual_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Dual_Impl_T.h:
        * tao/AnyTypeCode/Any_Dual_Impl_T.inl:
        * tao/AnyTypeCode/Any_Impl.cpp:
        * tao/AnyTypeCode/Any_Impl.h:
        * tao/AnyTypeCode/Any_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Special_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Special_Impl_T.h:
        * tao/AnyTypeCode/Any_Special_Impl_T.inl:
        * tao/AnyTypeCode/Any_SystemException.cpp:
        * tao/AnyTypeCode/Any_SystemException.h:
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp:
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.h:
        * tao/AnyTypeCode/Empty_Param_TypeCode.cpp:
        * tao/AnyTypeCode/Empty_Param_TypeCode.h:
        * tao/AnyTypeCode/Empty_Param_TypeCode.inl:
        * tao/AnyTypeCode/Enum_TypeCode.cpp:
        * tao/AnyTypeCode/Enum_TypeCode.h:
        * tao/AnyTypeCode/Enum_TypeCode.inl:
        * tao/AnyTypeCode/Enum_TypeCode_Static.cpp:
        * tao/AnyTypeCode/Enum_TypeCode_Static.h:
        * tao/AnyTypeCode/Enum_TypeCode_Static.inl:
        * tao/AnyTypeCode/Fixed_TypeCode.cpp:
        * tao/AnyTypeCode/Fixed_TypeCode.h:
        * tao/AnyTypeCode/Fixed_TypeCode.inl:
        * tao/AnyTypeCode/Marshal.cpp:
        * tao/AnyTypeCode/Marshal.h:
        * tao/AnyTypeCode/Marshal.inl:
        * tao/AnyTypeCode/NVList.cpp:
        * tao/AnyTypeCode/NVList.h:
        * tao/AnyTypeCode/NVList.inl:
        * tao/AnyTypeCode/NVList_Adapter_Impl.cpp:
        * tao/AnyTypeCode/NVList_Adapter_Impl.h:
        * tao/AnyTypeCode/Null_RefCount_Policy.h:
        * tao/AnyTypeCode/Objref_TypeCode.cpp:
        * tao/AnyTypeCode/Objref_TypeCode.h:
        * tao/AnyTypeCode/Objref_TypeCode.inl:
        * tao/AnyTypeCode/Objref_TypeCode_Static.cpp:
        * tao/AnyTypeCode/Objref_TypeCode_Static.h:
        * tao/AnyTypeCode/Objref_TypeCode_Static.inl:
        * tao/AnyTypeCode/Recursive_Type_TypeCode.cpp:
        * tao/AnyTypeCode/Recursive_Type_TypeCode.h:
        * tao/AnyTypeCode/Recursive_Type_TypeCode.inl:
        * tao/AnyTypeCode/RefCount_Policy_Traits.h:
        * tao/AnyTypeCode/Sequence_TypeCode.cpp:
        * tao/AnyTypeCode/Sequence_TypeCode.h:
        * tao/AnyTypeCode/Sequence_TypeCode.inl:
        * tao/AnyTypeCode/Sequence_TypeCode_Static.cpp:
        * tao/AnyTypeCode/Sequence_TypeCode_Static.h:
        * tao/AnyTypeCode/Sequence_TypeCode_Static.inl:
        * tao/AnyTypeCode/String_TypeCode.cpp:
        * tao/AnyTypeCode/String_TypeCode.h:
        * tao/AnyTypeCode/String_TypeCode.inl:
        * tao/AnyTypeCode/String_TypeCode_Static.cpp:
        * tao/AnyTypeCode/String_TypeCode_Static.h:
        * tao/AnyTypeCode/String_TypeCode_Static.inl:
        * tao/AnyTypeCode/Struct_TypeCode.cpp:
        * tao/AnyTypeCode/Struct_TypeCode.h:
        * tao/AnyTypeCode/Struct_TypeCode.inl:
        * tao/AnyTypeCode/Struct_TypeCode_Static.cpp:
        * tao/AnyTypeCode/Struct_TypeCode_Static.h:
        * tao/AnyTypeCode/Struct_TypeCode_Static.inl:
        * tao/AnyTypeCode/True_RefCount_Policy.cpp:
        * tao/AnyTypeCode/True_RefCount_Policy.h:
        * tao/AnyTypeCode/True_RefCount_Policy.inl:
        * tao/AnyTypeCode/TypeCode.cpp:
        * tao/AnyTypeCode/TypeCode.h:
        * tao/AnyTypeCode/TypeCode.inl:
        * tao/AnyTypeCode/TypeCode_Base_Attributes.h:
        * tao/AnyTypeCode/TypeCode_Base_Attributes.inl:
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp:
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.h:
        * tao/AnyTypeCode/TypeCode_Case_Base_T.cpp:
        * tao/AnyTypeCode/TypeCode_Case_Base_T.h:
        * tao/AnyTypeCode/TypeCode_Case_Base_T.inl:
        * tao/AnyTypeCode/TypeCode_Case_T.cpp:
        * tao/AnyTypeCode/TypeCode_Case_T.h:
        * tao/AnyTypeCode/TypeCode_Case_T.inl:
        * tao/AnyTypeCode/TypeCode_Constants.h:
        * tao/AnyTypeCode/TypeCode_Struct_Field.h:
        * tao/AnyTypeCode/TypeCode_Traits.h:
        * tao/AnyTypeCode/TypeCode_Value_Field.h:
        * tao/AnyTypeCode/Union_TypeCode.cpp:
        * tao/AnyTypeCode/Union_TypeCode.h:
        * tao/AnyTypeCode/Union_TypeCode.inl:
        * tao/AnyTypeCode/Union_TypeCode_Static.cpp:
        * tao/AnyTypeCode/Union_TypeCode_Static.h:
        * tao/AnyTypeCode/Union_TypeCode_Static.inl:
        * tao/AnyTypeCode/Value_TypeCode.cpp:
        * tao/AnyTypeCode/Value_TypeCode.h:
        * tao/AnyTypeCode/Value_TypeCode.inl:
        * tao/AnyTypeCode/Value_TypeCode_Static.cpp:
        * tao/AnyTypeCode/Value_TypeCode_Static.h:
        * tao/AnyTypeCode/Value_TypeCode_Static.inl:
        * tao/AnyTypeCode/append.cpp:
        * tao/AnyTypeCode/skip.cpp:
        * tao/BiDir_GIOP/BiDirGIOP.cpp:
        * tao/BiDir_GIOP/BiDirGIOP.h:
        * tao/BiDir_GIOP/BiDirPolicy_Validator.cpp:
        * tao/BiDir_GIOP/BiDirPolicy_Validator.h:
        * tao/BiDir_GIOP/BiDir_ORBInitializer.cpp:
        * tao/BiDir_GIOP/BiDir_ORBInitializer.h:
        * tao/BiDir_GIOP/BiDir_PolicyFactory.cpp:
        * tao/BiDir_GIOP/BiDir_PolicyFactory.h:
        * tao/BiDir_GIOP/BiDir_Policy_i.cpp:
        * tao/BiDir_GIOP/BiDir_Policy_i.h:
        * tao/CSD_Framework/CSD_Default_Servant_Dispatcher.cpp:
        * tao/CSD_Framework/CSD_Default_Servant_Dispatcher.h:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.h:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.inl:
        * tao/CSD_Framework/CSD_Framework_Loader.cpp:
        * tao/CSD_Framework/CSD_Framework_Loader.h:
        * tao/CSD_Framework/CSD_ORBInitializer.cpp:
        * tao/CSD_Framework/CSD_ORBInitializer.h:
        * tao/CSD_Framework/CSD_Object_Adapter.cpp:
        * tao/CSD_Framework/CSD_Object_Adapter.h:
        * tao/CSD_Framework/CSD_Object_Adapter_Factory.cpp:
        * tao/CSD_Framework/CSD_Object_Adapter_Factory.h:
        * tao/CSD_Framework/CSD_POA.cpp:
        * tao/CSD_Framework/CSD_POA.h:
        * tao/CSD_Framework/CSD_POA.inl:
        * tao/CSD_Framework/CSD_Strategy_Base.cpp:
        * tao/CSD_Framework/CSD_Strategy_Base.h:
        * tao/CSD_Framework/CSD_Strategy_Base.inl:
        * tao/CSD_Framework/CSD_Strategy_Proxy.cpp:
        * tao/CSD_Framework/CSD_Strategy_Proxy.h:
        * tao/CSD_Framework/CSD_Strategy_Proxy.inl:
        * tao/CSD_Framework/CSD_Strategy_Repository.cpp:
        * tao/CSD_Framework/CSD_Strategy_Repository.h:
        * tao/CSD_ThreadPool/CSD_TP_Cancel_Visitor.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Cancel_Visitor.h:
        * tao/CSD_ThreadPool/CSD_TP_Cancel_Visitor.inl:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Asynch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Asynch_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Asynch_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_With_Server_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_With_Server_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_With_Server_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Corba_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Corba_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Corba_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Asynch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Asynch_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Asynch_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Request_Operation.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Request_Operation.h:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Request_Operation.inl:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Synch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Synch_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Synch_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Dispatchable_Visitor.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Dispatchable_Visitor.h:
        * tao/CSD_ThreadPool/CSD_TP_Dispatchable_Visitor.inl:
        * tao/CSD_ThreadPool/CSD_TP_Queue.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Queue.h:
        * tao/CSD_ThreadPool/CSD_TP_Queue.inl:
        * tao/CSD_ThreadPool/CSD_TP_Queue_Visitor.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Queue_Visitor.h:
        * tao/CSD_ThreadPool/CSD_TP_Queue_Visitor.inl:
        * tao/CSD_ThreadPool/CSD_TP_Remote_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Remote_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Remote_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Servant_State.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Servant_State.h:
        * tao/CSD_ThreadPool/CSD_TP_Servant_State.inl:
        * tao/CSD_ThreadPool/CSD_TP_Servant_State_Map.h:
        * tao/CSD_ThreadPool/CSD_TP_Servant_State_Map.inl:
        * tao/CSD_ThreadPool/CSD_TP_Strategy.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Strategy.h:
        * tao/CSD_ThreadPool/CSD_TP_Strategy.inl:
        * tao/CSD_ThreadPool/CSD_TP_Strategy_Factory.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Strategy_Factory.h:
        * tao/CSD_ThreadPool/CSD_TP_Synch_Helper.h:
        * tao/CSD_ThreadPool/CSD_TP_Synch_Helper.inl:
        * tao/CSD_ThreadPool/CSD_TP_Task.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Task.h:
        * tao/CSD_ThreadPool/CSD_TP_Task.inl:
        * tao/CSD_ThreadPool/CSD_ThreadPool.cpp:
        * tao/CSD_ThreadPool/CSD_ThreadPool.h:
        * tao/CodecFactory/CDR_Encaps_Codec.cpp:
        * tao/CodecFactory/CDR_Encaps_Codec.h:
        * tao/CodecFactory/CodecFactory.cpp:
        * tao/CodecFactory/CodecFactory.h:
        * tao/CodecFactory/CodecFactory_impl.cpp:
        * tao/CodecFactory/CodecFactory_impl.h:
        * tao/Codeset/Codeset.cpp:
        * tao/Codeset/Codeset.h:
        * tao/Codeset/Codeset_Descriptor.cpp:
        * tao/Codeset/Codeset_Descriptor.h:
        * tao/Codeset/Codeset_Manager_Factory.cpp:
        * tao/Codeset/Codeset_Manager_Factory.h:
        * tao/Codeset/Codeset_Manager_i.cpp:
        * tao/Codeset/Codeset_Manager_i.h:
        * tao/Codeset/Codeset_Translator_Factory.cpp:
        * tao/Codeset/Codeset_Translator_Factory.h:
        * tao/Codeset/Codeset_Translator_Factory_T.cpp:
        * tao/Codeset/Codeset_Translator_Factory_T.h:
        * tao/Codeset/UTF16_BOM_Factory.cpp:
        * tao/Codeset/UTF16_BOM_Factory.h:
        * tao/Codeset/UTF16_BOM_Translator.cpp:
        * tao/Codeset/UTF16_BOM_Translator.h:
        * tao/Codeset/UTF8_Latin1_Factory.cpp:
        * tao/Codeset/UTF8_Latin1_Factory.h:
        * tao/Codeset/UTF8_Latin1_Translator.cpp:
        * tao/Codeset/UTF8_Latin1_Translator.h:
        * tao/DynamicAny/DynAnyFactory.cpp:
        * tao/DynamicAny/DynAnyFactory.h:
        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynAny_i.h:
        * tao/DynamicAny/DynArray_i.cpp:
        * tao/DynamicAny/DynArray_i.h:
        * tao/DynamicAny/DynCommon.cpp:
        * tao/DynamicAny/DynCommon.h:
        * tao/DynamicAny/DynEnum_i.cpp:
        * tao/DynamicAny/DynEnum_i.h:
        * tao/DynamicAny/DynSequence_i.cpp:
        * tao/DynamicAny/DynSequence_i.h:
        * tao/DynamicAny/DynStruct_i.cpp:
        * tao/DynamicAny/DynStruct_i.h:
        * tao/DynamicAny/DynUnion_i.cpp:
        * tao/DynamicAny/DynUnion_i.h:
        * tao/DynamicAny/DynamicAny.cpp:
        * tao/DynamicAny/DynamicAny.h:
        * tao/DynamicInterface/Context.cpp:
        * tao/DynamicInterface/Context.h:
        * tao/DynamicInterface/Context.inl:
        * tao/DynamicInterface/DII_Arguments.cpp:
        * tao/DynamicInterface/DII_Arguments.h:
        * tao/DynamicInterface/DII_Arguments.inl:
        * tao/DynamicInterface/DII_CORBA_methods.h:
        * tao/DynamicInterface/DII_Invocation.cpp:
        * tao/DynamicInterface/DII_Invocation.h:
        * tao/DynamicInterface/DII_Invocation_Adapter.h:
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/DynamicInterface/DII_Reply_Dispatcher.h:
        * tao/DynamicInterface/Dynamic_Adapter_Impl.cpp:
        * tao/DynamicInterface/Dynamic_Adapter_Impl.h:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/DynamicInterface/Dynamic_Implementation.h:
        * tao/DynamicInterface/ExceptionList.cpp:
        * tao/DynamicInterface/ExceptionList.h:
        * tao/DynamicInterface/ExceptionList.inl:
        * tao/DynamicInterface/Request.cpp:
        * tao/DynamicInterface/Request.h:
        * tao/DynamicInterface/Request.inl:
        * tao/DynamicInterface/Server_Request.cpp:
        * tao/DynamicInterface/Server_Request.h:
        * tao/DynamicInterface/Server_Request.inl:
        * tao/DynamicInterface/Unknown_User_Exception.cpp:
        * tao/DynamicInterface/Unknown_User_Exception.h:
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp:
        * tao/IFR_Client/IFR_Client_Adapter_Impl.h:
        * tao/IORInterceptor/IORInfo.cpp:
        * tao/IORInterceptor/IORInfo.h:
        * tao/IORInterceptor/IORInfo.inl:
        * tao/IORInterceptor/IORInterceptor_Adapter_Factory_Impl.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Factory_Impl.h:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.h:
        * tao/IORManipulation/IORManip_Loader.cpp:
        * tao/IORManipulation/IORManip_Loader.h:
        * tao/IORManipulation/IORManipulation.cpp:
        * tao/IORManipulation/IORManipulation.h:
        * tao/IORTable/IORTable.cpp:
        * tao/IORTable/IORTable.h:
        * tao/IORTable/IOR_Table_Impl.cpp:
        * tao/IORTable/IOR_Table_Impl.h:
        * tao/IORTable/Table_Adapter.cpp:
        * tao/IORTable/Table_Adapter.h:
        * tao/ImR_Client/ImR_Client.cpp:
        * tao/ImR_Client/ImR_Client.h:
        * tao/ImR_Client/ServerObject_i.cpp:
        * tao/ImR_Client/ServerObject_i.h:
        * tao/Messaging/AMH_Response_Handler.cpp:
        * tao/Messaging/AMH_Response_Handler.h:
        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/Messaging/Asynch_Invocation.h:
        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
        * tao/Messaging/Asynch_Invocation_Adapter.h:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.h:
        * tao/Messaging/Asynch_Timeout_Handler.cpp:
        * tao/Messaging/Asynch_Timeout_Handler.h:
        * tao/Messaging/Connection_Timeout_Policy_i.cpp:
        * tao/Messaging/Connection_Timeout_Policy_i.h:
        * tao/Messaging/ExceptionHolder_i.cpp:
        * tao/Messaging/ExceptionHolder_i.h:
        * tao/Messaging/Messaging.cpp:
        * tao/Messaging/Messaging.h:
        * tao/Messaging/Messaging_Loader.cpp:
        * tao/Messaging/Messaging_Loader.h:
        * tao/Messaging/Messaging_ORBInitializer.cpp:
        * tao/Messaging/Messaging_ORBInitializer.h:
        * tao/Messaging/Messaging_PolicyFactory.cpp:
        * tao/Messaging/Messaging_PolicyFactory.h:
        * tao/Messaging/Messaging_Policy_i.cpp:
        * tao/Messaging/Messaging_Policy_i.h:
        * tao/Messaging/Messaging_Policy_i.i:
        * tao/ObjRefTemplate/ORT_Adapter_Factory_Impl.cpp:
        * tao/ObjRefTemplate/ORT_Adapter_Factory_Impl.h:
        * tao/ObjRefTemplate/ORT_Adapter_Impl.cpp:
        * tao/ObjRefTemplate/ORT_Adapter_Impl.h:
        * tao/ObjRefTemplate/ObjectReferenceTemplate_i.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplate_i.h:
        * tao/PI/ClientRequestInfo.cpp:
        * tao/PI/ClientRequestInfo.h:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.cpp:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.h:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.inl:
        * tao/PI/ClientRequestInterceptor_Factory_Impl.cpp:
        * tao/PI/ClientRequestInterceptor_Factory_Impl.h:
        * tao/PI/Interceptor_List_T.cpp:
        * tao/PI/Interceptor_List_T.h:
        * tao/PI/ORBInitInfo.cpp:
        * tao/PI/ORBInitInfo.h:
        * tao/PI/ORBInitInfo.inl:
        * tao/PI/ORBInitializer_Registry_Impl.cpp:
        * tao/PI/ORBInitializer_Registry_Impl.h:
        * tao/PI/PI.cpp:
        * tao/PI/PI.h:
        * tao/PI/PICurrent.cpp:
        * tao/PI/PICurrent.h:
        * tao/PI/PICurrent.inl:
        * tao/PI/PICurrent_Copy_Callback.cpp:
        * tao/PI/PICurrent_Copy_Callback.h:
        * tao/PI/PICurrent_Impl.cpp:
        * tao/PI/PICurrent_Impl.h:
        * tao/PI/PICurrent_Impl.inl:
        * tao/PI/PICurrent_Loader.cpp:
        * tao/PI/PICurrent_Loader.h:
        * tao/PI/PolicyFactory_Loader.cpp:
        * tao/PI/PolicyFactory_Loader.h:
        * tao/PI/PolicyFactory_Registry.cpp:
        * tao/PI/PolicyFactory_Registry.h:
        * tao/PI/RequestInfo_Util.cpp:
        * tao/PI/RequestInfo_Util.h:
        * tao/PI_Server/PICurrent_Guard.cpp:
        * tao/PI_Server/PICurrent_Guard.h:
        * tao/PI_Server/PI_Server.cpp:
        * tao/PI_Server/PI_Server.h:
        * tao/PI_Server/PI_Server_Loader.cpp:
        * tao/PI_Server/PI_Server_Loader.h:
        * tao/PI_Server/Policy_Creator_T.h:
        * tao/PI_Server/PortableServer_ORBInitializer.cpp:
        * tao/PI_Server/PortableServer_ORBInitializer.h:
        * tao/PI_Server/PortableServer_PolicyFactory.cpp:
        * tao/PI_Server/PortableServer_PolicyFactory.h:
        * tao/PI_Server/ServerInterceptorAdapter.cpp:
        * tao/PI_Server/ServerInterceptorAdapter.h:
        * tao/PI_Server/ServerRequestInfo.cpp:
        * tao/PI_Server/ServerRequestInfo.h:
        * tao/PI_Server/ServerRequestInfo.inl:
        * tao/PI_Server/ServerRequestInterceptor_Factory_Impl.cpp:
        * tao/PI_Server/ServerRequestInterceptor_Factory_Impl.h:
        * tao/PortableServer/Active_Object_Map.cpp:
        * tao/PortableServer/Active_Object_Map.h:
        * tao/PortableServer/Active_Object_Map.i:
        * tao/PortableServer/Active_Object_Map_Entry.cpp:
        * tao/PortableServer/Active_Object_Map_Entry.h:
        * tao/PortableServer/Active_Policy_Strategies.cpp:
        * tao/PortableServer/Active_Policy_Strategies.h:
        * tao/PortableServer/Active_Policy_Strategies.inl:
        * tao/PortableServer/Adapter_Activator.cpp:
        * tao/PortableServer/Adapter_Activator.h:
        * tao/PortableServer/Any_SArg_Traits.h:
        * tao/PortableServer/BD_String_SArgument_T.cpp:
        * tao/PortableServer/BD_String_SArgument_T.h:
        * tao/PortableServer/BD_String_SArgument_T.inl:
        * tao/PortableServer/Basic_SArgument_T.cpp:
        * tao/PortableServer/Basic_SArgument_T.h:
        * tao/PortableServer/Basic_SArgument_T.inl:
        * tao/PortableServer/Basic_SArguments.h:
        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp:
        * tao/PortableServer/Collocated_Object_Proxy_Broker.h:
        * tao/PortableServer/Creation_Time.h:
        * tao/PortableServer/Creation_Time.inl:
        * tao/PortableServer/Default_Acceptor_Filter.cpp:
        * tao/PortableServer/Default_Acceptor_Filter.h:
        * tao/PortableServer/Default_Policy_Validator.cpp:
        * tao/PortableServer/Default_Policy_Validator.h:
        * tao/PortableServer/Default_Servant_Dispatcher.cpp:
        * tao/PortableServer/Default_Servant_Dispatcher.h:
        * tao/PortableServer/Direct_Collocation_Upcall_Wrapper.cpp:
        * tao/PortableServer/Direct_Collocation_Upcall_Wrapper.h:
        * tao/PortableServer/Fixed_Array_SArgument_T.cpp:
        * tao/PortableServer/Fixed_Array_SArgument_T.h:
        * tao/PortableServer/Fixed_Array_SArgument_T.inl:
        * tao/PortableServer/Fixed_Size_SArgument_T.cpp:
        * tao/PortableServer/Fixed_Size_SArgument_T.h:
        * tao/PortableServer/Fixed_Size_SArgument_T.inl:
        * tao/PortableServer/IdAssignmentPolicy.cpp:
        * tao/PortableServer/IdAssignmentPolicy.h:
        * tao/PortableServer/IdAssignmentStrategy.cpp:
        * tao/PortableServer/IdAssignmentStrategy.h:
        * tao/PortableServer/IdAssignmentStrategyFactory.h:
        * tao/PortableServer/IdAssignmentStrategyFactoryImpl.cpp:
        * tao/PortableServer/IdAssignmentStrategyFactoryImpl.h:
        * tao/PortableServer/IdAssignmentStrategySystem.cpp:
        * tao/PortableServer/IdAssignmentStrategySystem.h:
        * tao/PortableServer/IdAssignmentStrategyUser.cpp:
        * tao/PortableServer/IdAssignmentStrategyUser.h:
        * tao/PortableServer/IdUniquenessPolicy.cpp:
        * tao/PortableServer/IdUniquenessPolicy.h:
        * tao/PortableServer/IdUniquenessStrategy.h:
        * tao/PortableServer/IdUniquenessStrategyFactory.h:
        * tao/PortableServer/IdUniquenessStrategyFactoryImpl.cpp:
        * tao/PortableServer/IdUniquenessStrategyFactoryImpl.h:
        * tao/PortableServer/IdUniquenessStrategyMultiple.cpp:
        * tao/PortableServer/IdUniquenessStrategyMultiple.h:
        * tao/PortableServer/IdUniquenessStrategyUnique.cpp:
        * tao/PortableServer/IdUniquenessStrategyUnique.h:
        * tao/PortableServer/IdUniquenessStrategyUniqueFactoryImpl.cpp:
        * tao/PortableServer/IdUniquenessStrategyUniqueFactoryImpl.h:
        * tao/PortableServer/ImR_Client_Adapter.cpp:
        * tao/PortableServer/ImR_Client_Adapter.h:
        * tao/PortableServer/ImplicitActivationPolicy.cpp:
        * tao/PortableServer/ImplicitActivationPolicy.h:
        * tao/PortableServer/ImplicitActivationStrategy.cpp:
        * tao/PortableServer/ImplicitActivationStrategy.h:
        * tao/PortableServer/ImplicitActivationStrategyExplicit.cpp:
        * tao/PortableServer/ImplicitActivationStrategyExplicit.h:
        * tao/PortableServer/ImplicitActivationStrategyFactory.h:
        * tao/PortableServer/ImplicitActivationStrategyFactoryImpl.cpp:
        * tao/PortableServer/ImplicitActivationStrategyFactoryImpl.h:
        * tao/PortableServer/ImplicitActivationStrategyImplicit.cpp:
        * tao/PortableServer/ImplicitActivationStrategyImplicit.h:
        * tao/PortableServer/Key_Adapters.cpp:
        * tao/PortableServer/Key_Adapters.h:
        * tao/PortableServer/LifespanPolicy.cpp:
        * tao/PortableServer/LifespanPolicy.h:
        * tao/PortableServer/LifespanStrategy.cpp:
        * tao/PortableServer/LifespanStrategy.h:
        * tao/PortableServer/LifespanStrategyFactory.h:
        * tao/PortableServer/LifespanStrategyFactoryImpl.cpp:
        * tao/PortableServer/LifespanStrategyFactoryImpl.h:
        * tao/PortableServer/LifespanStrategyPersistent.cpp:
        * tao/PortableServer/LifespanStrategyPersistent.h:
        * tao/PortableServer/LifespanStrategyPersistentFactoryImpl.cpp:
        * tao/PortableServer/LifespanStrategyPersistentFactoryImpl.h:
        * tao/PortableServer/LifespanStrategyTransient.cpp:
        * tao/PortableServer/LifespanStrategyTransient.h:
        * tao/PortableServer/LifespanStrategyTransientFactoryImpl.cpp:
        * tao/PortableServer/LifespanStrategyTransientFactoryImpl.h:
        * tao/PortableServer/Local_Servant_Base.cpp:
        * tao/PortableServer/Local_Servant_Base.h:
        * tao/PortableServer/Local_Servant_Base.inl:
        * tao/PortableServer/Non_Servant_Upcall.cpp:
        * tao/PortableServer/Non_Servant_Upcall.h:
        * tao/PortableServer/Non_Servant_Upcall.inl:
        * tao/PortableServer/ORT_Adapter.cpp:
        * tao/PortableServer/ORT_Adapter.h:
        * tao/PortableServer/ORT_Adapter_Factory.cpp:
        * tao/PortableServer/ORT_Adapter_Factory.h:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Object_Adapter.h:
        * tao/PortableServer/Object_Adapter.i:
        * tao/PortableServer/Object_Adapter_Factory.cpp:
        * tao/PortableServer/Object_Adapter_Factory.h:
        * tao/PortableServer/Object_SArg_Traits.h:
        * tao/PortableServer/Object_SArgument_T.cpp:
        * tao/PortableServer/Object_SArgument_T.h:
        * tao/PortableServer/Object_SArgument_T.inl:
        * tao/PortableServer/Operation_Table.cpp:
        * tao/PortableServer/Operation_Table.h:
        * tao/PortableServer/Operation_Table_Binary_Search.cpp:
        * tao/PortableServer/Operation_Table_Binary_Search.h:
        * tao/PortableServer/Operation_Table_Dynamic_Hash.cpp:
        * tao/PortableServer/Operation_Table_Dynamic_Hash.h:
        * tao/PortableServer/Operation_Table_Linear_Search.cpp:
        * tao/PortableServer/Operation_Table_Linear_Search.h:
        * tao/PortableServer/Operation_Table_Perfect_Hash.cpp:
        * tao/PortableServer/Operation_Table_Perfect_Hash.h:
        * tao/PortableServer/POAManager.cpp:
        * tao/PortableServer/POAManager.h:
        * tao/PortableServer/POAManager.i:
        * tao/PortableServer/POA_Cached_Policies.cpp:
        * tao/PortableServer/POA_Cached_Policies.h:
        * tao/PortableServer/POA_Cached_Policies.i:
        * tao/PortableServer/POA_Current.cpp:
        * tao/PortableServer/POA_Current.h:
        * tao/PortableServer/POA_Current.inl:
        * tao/PortableServer/POA_Current_Factory.cpp:
        * tao/PortableServer/POA_Current_Factory.h:
        * tao/PortableServer/POA_Current_Impl.cpp:
        * tao/PortableServer/POA_Current_Impl.h:
        * tao/PortableServer/POA_Current_Impl.inl:
        * tao/PortableServer/POA_Guard.cpp:
        * tao/PortableServer/POA_Guard.h:
        * tao/PortableServer/POA_Policy_Set.cpp:
        * tao/PortableServer/POA_Policy_Set.h:
        * tao/PortableServer/POA_Policy_Set.i:
        * tao/PortableServer/Policy_Strategy.h:
        * tao/PortableServer/PortableServer.cpp:
        * tao/PortableServer/PortableServer.h:
        * tao/PortableServer/PortableServer_Functions.cpp:
        * tao/PortableServer/PortableServer_Functions.h:
        * tao/PortableServer/PortableServer_WFunctions.cpp:
        * tao/PortableServer/PortableServer_WFunctions.h:
        * tao/PortableServer/Regular_POA.cpp:
        * tao/PortableServer/Regular_POA.h:
        * tao/PortableServer/Regular_POA.inl:
        * tao/PortableServer/RequestProcessingPolicy.cpp:
        * tao/PortableServer/RequestProcessingPolicy.h:
        * tao/PortableServer/RequestProcessingStrategy.cpp:
        * tao/PortableServer/RequestProcessingStrategy.h:
        * tao/PortableServer/RequestProcessingStrategyAOMOnly.cpp:
        * tao/PortableServer/RequestProcessingStrategyAOMOnly.h:
        * tao/PortableServer/RequestProcessingStrategyAOMOnlyFactoryImpl.cpp:
        * tao/PortableServer/RequestProcessingStrategyAOMOnlyFactoryImpl.h:
        * tao/PortableServer/RequestProcessingStrategyDefaultServant.cpp:
        * tao/PortableServer/RequestProcessingStrategyDefaultServant.h:
        * tao/PortableServer/RequestProcessingStrategyDefaultServantFI.cpp:
        * tao/PortableServer/RequestProcessingStrategyDefaultServantFI.h:
        * tao/PortableServer/RequestProcessingStrategyFactory.h:
        * tao/PortableServer/RequestProcessingStrategyFactoryImpl.cpp:
        * tao/PortableServer/RequestProcessingStrategyFactoryImpl.h:
        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantActivator.h:
        * tao/PortableServer/RequestProcessingStrategyServantActivatorFI.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantActivatorFI.h:
        * tao/PortableServer/RequestProcessingStrategyServantLocator.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantLocator.h:
        * tao/PortableServer/RequestProcessingStrategyServantLocatorFI.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantLocatorFI.h:
        * tao/PortableServer/RequestProcessingStrategyServantManager.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantManager.h:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Root_POA.h:
        * tao/PortableServer/Root_POA.inl:
        * tao/PortableServer/SArg_Traits_T.h:
        * tao/PortableServer/ServantRetentionPolicy.cpp:
        * tao/PortableServer/ServantRetentionPolicy.h:
        * tao/PortableServer/ServantRetentionStrategy.h:
        * tao/PortableServer/ServantRetentionStrategyFactoryImpl.cpp:
        * tao/PortableServer/ServantRetentionStrategyFactoryImpl.h:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.h:
        * tao/PortableServer/ServantRetentionStrategyNonRetainFactoryImpl.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetainFactoryImpl.h:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
        * tao/PortableServer/ServantRetentionStrategyRetain.h:
        * tao/PortableServer/ServantRetentionStrategyRetainFactoryImpl.cpp:
        * tao/PortableServer/ServantRetentionStrategyRetainFactoryImpl.h:
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/Servant_Base.h:
        * tao/PortableServer/Servant_Base.i:
        * tao/PortableServer/Servant_Dispatcher.cpp:
        * tao/PortableServer/Servant_Dispatcher.h:
        * tao/PortableServer/Servant_Location.h:
        * tao/PortableServer/Servant_Upcall.cpp:
        * tao/PortableServer/Servant_Upcall.h:
        * tao/PortableServer/Servant_Upcall.inl:
        * tao/PortableServer/Special_Basic_SArgument_T.cpp:
        * tao/PortableServer/Special_Basic_SArgument_T.h:
        * tao/PortableServer/Special_Basic_SArgument_T.inl:
        * tao/PortableServer/Special_Basic_SArguments.h:
        * tao/PortableServer/StrategyFactory.cpp:
        * tao/PortableServer/StrategyFactory.h:
        * tao/PortableServer/ThreadPolicy.cpp:
        * tao/PortableServer/ThreadPolicy.h:
        * tao/PortableServer/ThreadStrategy.cpp:
        * tao/PortableServer/ThreadStrategy.h:
        * tao/PortableServer/ThreadStrategyFactory.h:
        * tao/PortableServer/ThreadStrategyFactoryImpl.cpp:
        * tao/PortableServer/ThreadStrategyFactoryImpl.h:
        * tao/PortableServer/ThreadStrategyORBControl.cpp:
        * tao/PortableServer/ThreadStrategyORBControl.h:
        * tao/PortableServer/ThreadStrategySingle.cpp:
        * tao/PortableServer/ThreadStrategySingle.h:
        * tao/PortableServer/ThreadStrategySingleFactoryImpl.cpp:
        * tao/PortableServer/ThreadStrategySingleFactoryImpl.h:
        * tao/PortableServer/TypeCode_SArg_Traits.h:
        * tao/PortableServer/UB_String_SArgument_T.cpp:
        * tao/PortableServer/UB_String_SArgument_T.h:
        * tao/PortableServer/UB_String_SArgument_T.inl:
        * tao/PortableServer/UB_String_SArguments.h:
        * tao/PortableServer/Upcall_Command.cpp:
        * tao/PortableServer/Upcall_Command.h:
        * tao/PortableServer/Upcall_Wrapper.cpp:
        * tao/PortableServer/Upcall_Wrapper.h:
        * tao/PortableServer/Var_Array_SArgument_T.cpp:
        * tao/PortableServer/Var_Array_SArgument_T.h:
        * tao/PortableServer/Var_Array_SArgument_T.inl:
        * tao/PortableServer/get_arg.h:
        * tao/PortableServer/poa_macros.h:
        * tao/RTCORBA/Continuous_Priority_Mapping.cpp:
        * tao/RTCORBA/Continuous_Priority_Mapping.h:
        * tao/RTCORBA/Direct_Priority_Mapping.cpp:
        * tao/RTCORBA/Direct_Priority_Mapping.h:
        * tao/RTCORBA/Linear_Network_Priority_Mapping.cpp:
        * tao/RTCORBA/Linear_Network_Priority_Mapping.h:
        * tao/RTCORBA/Linear_Priority_Mapping.cpp:
        * tao/RTCORBA/Linear_Priority_Mapping.h:
        * tao/RTCORBA/Multi_Priority_Mapping.cpp:
        * tao/RTCORBA/Multi_Priority_Mapping.h:
        * tao/RTCORBA/Network_Priority_Mapping.cpp:
        * tao/RTCORBA/Network_Priority_Mapping.h:
        * tao/RTCORBA/Network_Priority_Mapping_Manager.cpp:
        * tao/RTCORBA/Network_Priority_Mapping_Manager.i:
        * tao/RTCORBA/Priority_Mapping.cpp:
        * tao/RTCORBA/Priority_Mapping.h:
        * tao/RTCORBA/Priority_Mapping_Manager.cpp:
        * tao/RTCORBA/Priority_Mapping_Manager.h:
        * tao/RTCORBA/Priority_Mapping_Manager.i:
        * tao/RTCORBA/RTCORBA.cpp:
        * tao/RTCORBA/RTCORBA.h:
        * tao/RTCORBA/RT_Current.cpp:
        * tao/RTCORBA/RT_Current.h:
        * tao/RTCORBA/RT_Endpoint_Selector_Factory.cpp:
        * tao/RTCORBA/RT_Endpoint_Selector_Factory.h:
        * tao/RTCORBA/RT_Endpoint_Utils.cpp:
        * tao/RTCORBA/RT_Endpoint_Utils.h:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.h:
        * tao/RTCORBA/RT_Mutex.cpp:
        * tao/RTCORBA/RT_Mutex.h:
        * tao/RTCORBA/RT_ORB.cpp:
        * tao/RTCORBA/RT_ORB.h:
        * tao/RTCORBA/RT_ORBInitializer.cpp:
        * tao/RTCORBA/RT_ORBInitializer.h:
        * tao/RTCORBA/RT_ORB_Loader.cpp:
        * tao/RTCORBA/RT_ORB_Loader.h:
        * tao/RTCORBA/RT_PolicyFactory.cpp:
        * tao/RTCORBA/RT_PolicyFactory.h:
        * tao/RTCORBA/RT_Policy_i.cpp:
        * tao/RTCORBA/RT_Policy_i.h:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTCORBA/RT_Protocols_Hooks.h:
        * tao/RTCORBA/RT_Stub.cpp:
        * tao/RTCORBA/RT_Stub.h:
        * tao/RTCORBA/RT_Stub_Factory.cpp:
        * tao/RTCORBA/RT_Stub_Factory.h:
        * tao/RTCORBA/RT_Thread_Lane_Resources_Manager.cpp:
        * tao/RTCORBA/RT_Thread_Lane_Resources_Manager.h:
        * tao/RTCORBA/RT_Transport_Descriptor.cpp:
        * tao/RTCORBA/RT_Transport_Descriptor.h:
        * tao/RTCORBA/RT_Transport_Descriptor.inl:
        * tao/RTCORBA/RT_Transport_Descriptor_Property.cpp:
        * tao/RTCORBA/RT_Transport_Descriptor_Property.h:
        * tao/RTCORBA/RT_Transport_Descriptor_Property.inl:
        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/RTCORBA/Thread_Pool.h:
        * tao/RTCORBA/Thread_Pool.inl:
        * tao/RTCORBA/rtcorba_typedefs.h:
        * tao/RTPortableServer/RTPortableServer.cpp:
        * tao/RTPortableServer/RTPortableServer.h:
        * tao/RTPortableServer/RT_Acceptor_Filters.cpp:
        * tao/RTPortableServer/RT_Acceptor_Filters.h:
        * tao/RTPortableServer/RT_Collocation_Resolver.cpp:
        * tao/RTPortableServer/RT_Collocation_Resolver.h:
        * tao/RTPortableServer/RT_Object_Adapter_Factory.cpp:
        * tao/RTPortableServer/RT_Object_Adapter_Factory.h:
        * tao/RTPortableServer/RT_POA.cpp:
        * tao/RTPortableServer/RT_POA.h:
        * tao/RTPortableServer/RT_POA.i:
        * tao/RTPortableServer/RT_Policy_Validator.cpp:
        * tao/RTPortableServer/RT_Policy_Validator.h:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.h:
        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/Current.h:
        * tao/RTScheduling/Distributable_Thread.cpp:
        * tao/RTScheduling/Distributable_Thread.h:
        * tao/RTScheduling/RTScheduler.cpp:
        * tao/RTScheduling/RTScheduler.h:
        * tao/RTScheduling/RTScheduler_Initializer.cpp:
        * tao/RTScheduling/RTScheduler_Initializer.h:
        * tao/RTScheduling/RTScheduler_Loader.cpp:
        * tao/RTScheduling/RTScheduler_Loader.h:
        * tao/RTScheduling/RTScheduler_Manager.cpp:
        * tao/RTScheduling/RTScheduler_Manager.h:
        * tao/RTScheduling/RTScheduler_Manager.i:
        * tao/RTScheduling/Request_Interceptor.cpp:
        * tao/RTScheduling/Request_Interceptor.h:
        * tao/RTScheduling/ThreadAction.h:
        * tao/Valuetype/AbstractBase_Invocation_Adapter.h:

          Added versioned namespace support.

          Removed unnecessary *_Export keywords from symbols that need not
          be exported from the shared library within which they reside.

        * tao/AnyTypeCode/TC_Constants_Forward.h:

          Removed this unused file.

        * tao/Makefile.am (nobase_include_HEADERS):

          Removed `AnyTypeCode/TC_Constants_Forward.h' header from this
          list.

Thu Nov  3 09:11:51 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype.cpp
          (visit_valuetype_scope):

          Removed unused variable.

Thu Nov  3 05:30:41 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:
        * tao/tao.mpc:

          Fix tipo.  Change Version_Namespace.h to Versioned_Namespace.h.

Wed Nov  2 09:07:48 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/TAO_Singleton.h:

          Include "tao/Versioned_Namespace.h" to pull in
          "TAO_BEGIN_VERSIONED_NAMESPACE_DECL" macro definition.
          Addresses VC++ 6 build errors.

Wed Nov  2 09:39:27 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:

          Commented the if/endif with TAO_HAS_INTERCEPTORS because the code
          guarded by the macro is commented out already.

Wed Nov  2 08:30:41 2005  Bala Natarajan  <bala_natarajan at symantec dot com>

        * tao/Synch_Invocation.cpp:
        * tao/LocalRequest_Invocation.cpp:

          Reverted "Fri Aug 26 11:33:07 2005  Justin Michel
          <michel_j@ociweb.com>" since the change was wrong. Chris
          Cleeland is informed, and he has accepted to do a right fix
          when he gets time.

        * tao/orbconf.h:

          Removed TAO_RESET_OUTPUT_CDR_AFTER_SEND #define, since it is of no
          use anymore.

Wed Nov  2 14:17:47 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:

          Fixed logic for generating commas separating base
          constructor call and member inits in generated valuetype
          initializing constructor.

Wed Nov  2 13:19:02 2005  Simon McQueen  <sm@prismtech.com>

        * tests/Bug_2287_Regression/ServerRequest_Interceptor2.cpp:

          Add explicit exclude of forward request exception header to
          try and fix Solaris build error.

Wed Nov  2 12:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Intrusive_Ref_Count_Handle_T.inl:
          Fixed compile error

Wed Nov  2 12:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2289_Regression/MyStruct*.*:
          Readded these files to get things building, having hand modified
          generated file in the repo is not the right things todo.

Wed Nov  2 08:17:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/Unbounded_Octet.cpp:
          Changed include for the time being

Tue Nov  1 14:49:40 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp (end_anyop_header):
          (end_anyop_source, end_client_header, end_client_inline):
          (end_client_stubs, end_server_header, end_server_inline):
          (end_server_skeletons, end_server_template_skeletons):
          (end_server_template_inline, end_server_template_header):
          (gen_stub_hdr_includes):
          (start_anyop_source, start_anyop_header, start_client_header):
          (start_client_inline, start_client_stubs):
          (start_server_template_inline, start_server_header):
          (start_server_inline, start_server_template_skeletons):
          (start_server_skeletons, start_server_template_header):

          Generate versioned namespace macro/declaration in the
          appropriate location.

        * TAO_IDL/be_include/be_codegen.h (end_client_inline):
          (end_client_stubs, end_server_inline):

          New methods that (currently) add ending versioned namespace
          macro/declaration to the corresponding file.

        * TAO_IDL/be/be_visitor_root/root.cpp (visit_root):

          Added calls to end client stubs, and client and server inline
          files.

        * tao/Makefile.am (nobase_include_HEADERS):
        * tao/tao.mpc:

          Added new "tao/Versioned_Namespace.h" header.

        * tao/Versioned_Namespace.h:

          TAO-specific versioned namespace macros.

        * tao/Abstract_Servant_Base.cpp:
        * tao/Abstract_Servant_Base.h:
        * tao/Acceptor_Filter.cpp:
        * tao/Acceptor_Filter.h:
        * tao/Acceptor_Impl.cpp:
        * tao/Acceptor_Impl.h:
        * tao/Acceptor_Registry.cpp:
        * tao/Acceptor_Registry.h:
        * tao/Acceptor_Registry.i:
        * tao/Adapter.cpp:
        * tao/Adapter.h:
        * tao/Adapter_Factory.cpp:
        * tao/Adapter_Factory.h:
        * tao/Adapter_Registry.cpp:
        * tao/Adapter_Registry.h:
        * tao/Allocator.h:
        * tao/AnyTypeCode_Adapter.cpp:
        * tao/AnyTypeCode_Adapter.h:
        * tao/Any_Insert_Policy_T.h:
        * tao/Arg_Traits_T.h:
        * tao/Argument.cpp:
        * tao/Argument.h:
        * tao/Array_VarOut_T.cpp:
        * tao/Array_VarOut_T.h:
        * tao/Array_VarOut_T.inl:
        * tao/Asynch_Queued_Message.cpp:
        * tao/Asynch_Reply_Dispatcher_Base.cpp:
        * tao/Asynch_Reply_Dispatcher_Base.h:
        * tao/Asynch_Reply_Dispatcher_Base.i:
        * tao/Auto_Functor.h:
        * tao/BD_String_Argument_T.cpp:
        * tao/BD_String_Argument_T.h:
        * tao/BD_String_Argument_T.inl:
        * tao/Base_Transport_Property.cpp:
        * tao/Base_Transport_Property.h:
        * tao/Base_Transport_Property.inl:
        * tao/Basic_Argument_T.cpp:
        * tao/Basic_Argument_T.h:
        * tao/Basic_Argument_T.inl:
        * tao/Basic_Arguments.h:
        * tao/Basic_Types.h:
        * tao/BiDir_Adapter.cpp:
        * tao/BiDir_Adapter.h:
        * tao/Bind_Dispatcher_Guard.cpp:
        * tao/Bind_Dispatcher_Guard.h:
        * tao/Bind_Dispatcher_Guard.i:
        * tao/Block_Flushing_Strategy.cpp:
        * tao/Block_Flushing_Strategy.h:
        * tao/Blocked_Connect_Strategy.cpp:
        * tao/Blocked_Connect_Strategy.h:
        * tao/Buffer_Allocator_T.cpp:
        * tao/Buffer_Allocator_T.h:
        * tao/Buffering_Constraint_Policy.cpp:
        * tao/Buffering_Constraint_Policy.h:
        * tao/Buffering_Constraint_Policy.i:
        * tao/CDR.cpp:
        * tao/CDR.h:
        * tao/CDR.i:
        * tao/CORBALOC_Parser.cpp:
        * tao/CORBALOC_Parser.h:
        * tao/CORBALOC_Parser.i:
        * tao/CORBANAME_Parser.cpp:
        * tao/CORBANAME_Parser.h:
        * tao/CORBANAME_Parser.i:
        * tao/CORBA_String.cpp:
        * tao/CORBA_String.h:
        * tao/CORBA_String.inl:
        * tao/Cache_Entries.cpp:
        * tao/Cache_Entries.h:
        * tao/Cache_Entries.inl:
        * tao/Cleanup_Func_Registry.cpp:
        * tao/Cleanup_Func_Registry.h:
        * tao/Cleanup_Func_Registry.inl:
        * tao/ClientRequestInterceptor_Adapter.cpp:
        * tao/ClientRequestInterceptor_Adapter.h:
        * tao/ClientRequestInterceptor_Adapter_Factory.cpp:
        * tao/ClientRequestInterceptor_Adapter_Factory.h:
        * tao/Client_Strategy_Factory.cpp:
        * tao/Client_Strategy_Factory.h:
        * tao/Codeset_Descriptor_Base.h:
        * tao/Codeset_Manager.cpp:
        * tao/Codeset_Manager.h:
        * tao/Codeset_Manager_Factory_Base.cpp:
        * tao/Codeset_Manager_Factory_Base.h:
        * tao/Codeset_Translator_Base.cpp:
        * tao/Codeset_Translator_Base.h:
        * tao/Collocated_Invocation.cpp:
        * tao/Collocated_Invocation.h:
        * tao/Collocation_Proxy_Broker.cpp:
        * tao/Collocation_Proxy_Broker.h:
        * tao/Collocation_Resolver.cpp:
        * tao/Collocation_Resolver.h:
        * tao/Condition.cpp:
        * tao/Condition.h:
        * tao/Condition.inl:
        * tao/Connect_Strategy.cpp:
        * tao/Connect_Strategy.h:
        * tao/Connection_Handler.cpp:
        * tao/Connection_Handler.h:
        * tao/Connection_Handler.inl:
        * tao/Connection_Purging_Strategy.cpp:
        * tao/Connection_Purging_Strategy.h:
        * tao/Connection_Purging_Strategy.inl:
        * tao/Connector_Impl.cpp:
        * tao/Connector_Impl.h:
        * tao/Connector_Registry.cpp:
        * tao/Connector_Registry.h:
        * tao/Connector_Registry.i:
        * tao/DLL_Parser.cpp:
        * tao/DLL_Parser.h:
        * tao/DLL_Parser.i:
        * tao/Default_Collocation_Resolver.cpp:
        * tao/Default_Collocation_Resolver.h:
        * tao/Default_Endpoint_Selector_Factory.cpp:
        * tao/Default_Endpoint_Selector_Factory.h:
        * tao/Default_Protocols_Hooks.cpp:
        * tao/Default_Protocols_Hooks.h:
        * tao/Default_Stub_Factory.cpp:
        * tao/Default_Stub_Factory.h:
        * tao/Default_Thread_Lane_Resources_Manager.cpp:
        * tao/Default_Thread_Lane_Resources_Manager.h:
        * tao/Dynamic_Adapter.cpp:
        * tao/Dynamic_Adapter.h:
        * tao/Endpoint.cpp:
        * tao/Endpoint.h:
        * tao/Endpoint.i:
        * tao/Endpoint_Selector_Factory.cpp:
        * tao/Endpoint_Selector_Factory.h:
        * tao/Environment.cpp:
        * tao/Environment.h:
        * tao/Environment.i:
        * tao/Exception.cpp:
        * tao/Exception.h:
        * tao/Exception.i:
        * tao/Exception_Data.h:
        * tao/Exclusive_TMS.cpp:
        * tao/Exclusive_TMS.h:
        * tao/FILE_Parser.cpp:
        * tao/FILE_Parser.h:
        * tao/FILE_Parser.i:
        * tao/Fault_Tolerance_Service.cpp:
        * tao/Fault_Tolerance_Service.h:
        * tao/Fault_Tolerance_Service.i:
        * tao/Fixed_Array_Argument_T.cpp:
        * tao/Fixed_Array_Argument_T.h:
        * tao/Fixed_Array_Argument_T.inl:
        * tao/Fixed_Size_Argument_T.cpp:
        * tao/Fixed_Size_Argument_T.h:
        * tao/Fixed_Size_Argument_T.inl:
        * tao/FlResource_Factory.cpp:
        * tao/FlResource_Factory.h:
        * tao/FlResource_Loader.cpp:
        * tao/FlResource_Loader.h:
        * tao/Flushing_Strategy.cpp:
        * tao/Flushing_Strategy.h:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Base.h:
        * tao/GIOP_Message_Generator_Parser.cpp:
        * tao/GIOP_Message_Generator_Parser.h:
        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/GIOP_Message_Generator_Parser_10.h:
        * tao/GIOP_Message_Generator_Parser_11.cpp:
        * tao/GIOP_Message_Generator_Parser_11.h:
        * tao/GIOP_Message_Generator_Parser_12.cpp:
        * tao/GIOP_Message_Generator_Parser_12.h:
        * tao/GIOP_Message_Generator_Parser_Impl.h:
        * tao/GIOP_Message_Generator_Parser_Impl.inl:
        * tao/GIOP_Message_Lite.cpp:
        * tao/GIOP_Message_Lite.h:
        * tao/GIOP_Message_Locate_Header.cpp:
        * tao/GIOP_Message_Locate_Header.h:
        * tao/GIOP_Message_Locate_Header.i:
        * tao/GIOP_Message_State.cpp:
        * tao/GIOP_Message_State.h:
        * tao/GIOP_Message_State.inl:
        * tao/GIOP_Message_Version.h:
        * tao/GIOP_Message_Version.inl:
        * tao/GIOP_Utils.cpp:
        * tao/GIOP_Utils.h:
        * tao/GUIResource_Factory.cpp:
        * tao/GUIResource_Factory.h:
        * tao/IFR_Client_Adapter.cpp:
        * tao/IFR_Client_Adapter.h:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Acceptor.h:
        * tao/IIOP_Acceptor.i:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/IIOP_Connection_Handler.h:
        * tao/IIOP_Connector.cpp:
        * tao/IIOP_Connector.h:
        * tao/IIOP_Endpoint.cpp:
        * tao/IIOP_Endpoint.h:
        * tao/IIOP_Endpoint.i:
        * tao/IIOP_Factory.cpp:
        * tao/IIOP_Factory.h:
        * tao/IIOP_Lite_Factory.cpp:
        * tao/IIOP_Lite_Factory.h:
        * tao/IIOP_Profile.cpp:
        * tao/IIOP_Profile.h:
        * tao/IIOP_Transport.cpp:
        * tao/IIOP_Transport.h:
        * tao/IORInterceptor_Adapter.cpp:
        * tao/IORInterceptor_Adapter.h:
        * tao/IORInterceptor_Adapter_Factory.cpp:
        * tao/IORInterceptor_Adapter_Factory.h:
        * tao/IOR_Parser.cpp:
        * tao/IOR_Parser.h:
        * tao/Incoming_Message_Queue.cpp:
        * tao/Incoming_Message_Queue.h:
        * tao/Incoming_Message_Queue.inl:
        * tao/Intrusive_Ref_Count_Base_T.cpp:
        * tao/Intrusive_Ref_Count_Base_T.h:
        * tao/Intrusive_Ref_Count_Base_T.inl:
        * tao/Intrusive_Ref_Count_Handle_T.cpp:
        * tao/Intrusive_Ref_Count_Handle_T.h:
        * tao/Intrusive_Ref_Count_Handle_T.inl:
        * tao/Invocation_Adapter.cpp:
        * tao/Invocation_Adapter.h:
        * tao/Invocation_Adapter.inl:
        * tao/Invocation_Base.cpp:
        * tao/Invocation_Base.h:
        * tao/Invocation_Base.inl:
        * tao/Invocation_Endpoint_Selectors.cpp:
        * tao/Invocation_Endpoint_Selectors.h:
        * tao/Invocation_Utils.h:
        * tao/LF_CH_Event.cpp:
        * tao/LF_CH_Event.h:
        * tao/LF_Connect_Strategy.cpp:
        * tao/LF_Connect_Strategy.h:
        * tao/LF_Event.cpp:
        * tao/LF_Event.h:
        * tao/LF_Event.inl:
        * tao/LF_Event_Binder.cpp:
        * tao/LF_Event_Binder.h:
        * tao/LF_Event_Binder.inl:
        * tao/LF_Event_Loop_Thread_Helper.cpp:
        * tao/LF_Event_Loop_Thread_Helper.h:
        * tao/LF_Event_Loop_Thread_Helper.inl:
        * tao/LF_Follower.cpp:
        * tao/LF_Follower.h:
        * tao/LF_Follower.inl:
        * tao/LF_Follower_Auto_Adder.cpp:
        * tao/LF_Follower_Auto_Adder.h:
        * tao/LF_Follower_Auto_Adder.inl:
        * tao/LF_Follower_Auto_Ptr.cpp:
        * tao/LF_Follower_Auto_Ptr.h:
        * tao/LF_Follower_Auto_Ptr.inl:
        * tao/LF_Invocation_Event.cpp:
        * tao/LF_Invocation_Event.h:
        * tao/LF_Strategy.cpp:
        * tao/LF_Strategy.h:
        * tao/LF_Strategy_Complete.cpp:
        * tao/LF_Strategy_Complete.h:
        * tao/LF_Strategy_Complete.inl:
        * tao/LRU_Connection_Purging_Strategy.cpp:
        * tao/LRU_Connection_Purging_Strategy.h:
        * tao/Leader_Follower.cpp:
        * tao/Leader_Follower.h:
        * tao/Leader_Follower.i:
        * tao/Leader_Follower_Flushing_Strategy.cpp:
        * tao/Leader_Follower_Flushing_Strategy.h:
        * tao/LocalObject.cpp:
        * tao/LocalObject.h:
        * tao/LocalObject.i:
        * tao/LocateRequest_Invocation.cpp:
        * tao/LocateRequest_Invocation.h:
        * tao/LocateRequest_Invocation_Adapter.cpp:
        * tao/LocateRequest_Invocation_Adapter.h:
        * tao/MCAST_Parser.cpp:
        * tao/MCAST_Parser.h:
        * tao/MCAST_Parser.i:
        * tao/MProfile.cpp:
        * tao/MProfile.h:
        * tao/MProfile.i:
        * tao/Managed_Types.cpp:
        * tao/Managed_Types.h:
        * tao/Managed_Types.i:
        * tao/Muxed_TMS.cpp:
        * tao/Muxed_TMS.h:
        * tao/NVList_Adapter.cpp:
        * tao/NVList_Adapter.h:
        * tao/New_Leader_Generator.cpp:
        * tao/New_Leader_Generator.h:
        * tao/ORB.cpp:
        * tao/ORB.h:
        * tao/ORB.i:
        * tao/ORBInitializer_Registry.cpp:
        * tao/ORBInitializer_Registry.h:
        * tao/ORBInitializer_Registry_Adapter.cpp:
        * tao/ORBInitializer_Registry_Adapter.h:
        * tao/ORB_Constants.h:
        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/ORB_Core.i:
        * tao/ORB_Core_Auto_Ptr.cpp:
        * tao/ORB_Core_Auto_Ptr.h:
        * tao/ORB_Core_Auto_Ptr.inl:
        * tao/ORB_Core_TSS_Resources.cpp:
        * tao/ORB_Core_TSS_Resources.h:
        * tao/ORB_Table.cpp:
        * tao/ORB_Table.h:
        * tao/ORB_Table.inl:
        * tao/Object.cpp:
        * tao/Object.h:
        * tao/Object.i:
        * tao/ObjectKey_Table.cpp:
        * tao/ObjectKey_Table.h:
        * tao/Object_Argument_T.cpp:
        * tao/Object_Argument_T.h:
        * tao/Object_Argument_T.inl:
        * tao/Object_Loader.cpp:
        * tao/Object_Loader.h:
        * tao/Object_Proxy_Broker.cpp:
        * tao/Object_Proxy_Broker.h:
        * tao/Object_Ref_Table.cpp:
        * tao/Object_Ref_Table.h:
        * tao/Object_Ref_Table.inl:
        * tao/Object_T.cpp:
        * tao/Object_T.h:
        * tao/Objref_VarOut_T.cpp:
        * tao/Objref_VarOut_T.h:
        * tao/Parser_Registry.cpp:
        * tao/Parser_Registry.h:
        * tao/Parser_Registry.i:
        * tao/Pluggable_Messaging.cpp:
        * tao/Pluggable_Messaging.h:
        * tao/Pluggable_Messaging_Utils.cpp:
        * tao/Pluggable_Messaging_Utils.h:
        * tao/Pluggable_Messaging_Utils.i:
        * tao/PolicyFactory_Registry_Adapter.cpp:
        * tao/PolicyFactory_Registry_Adapter.h:
        * tao/Policy_Current.cpp:
        * tao/Policy_Current.h:
        * tao/Policy_Current.inl:
        * tao/Policy_Current_Impl.cpp:
        * tao/Policy_Current_Impl.h:
        * tao/Policy_Current_Impl.inl:
        * tao/Policy_Manager.cpp:
        * tao/Policy_Manager.h:
        * tao/Policy_Manager.i:
        * tao/Policy_Set.cpp:
        * tao/Policy_Set.h:
        * tao/Policy_Set.i:
        * tao/Policy_Validator.cpp:
        * tao/Policy_Validator.h:
        * tao/Principal.cpp:
        * tao/Principal.h:
        * tao/Principal.i:
        * tao/Profile.cpp:
        * tao/Profile.h:
        * tao/Profile.i:
        * tao/Profile_Transport_Resolver.cpp:
        * tao/Profile_Transport_Resolver.h:
        * tao/Profile_Transport_Resolver.inl:
        * tao/Protocol_Factory.cpp:
        * tao/Protocol_Factory.h:
        * tao/Protocols_Hooks.cpp:
        * tao/Protocols_Hooks.h:
        * tao/Pseudo_VarOut_T.cpp:
        * tao/Pseudo_VarOut_T.h:
        * tao/Pseudo_VarOut_T.inl:
        * tao/QtResource_Factory.cpp:
        * tao/QtResource_Factory.h:
        * tao/QtResource_Loader.cpp:
        * tao/QtResource_Loader.h:
        * tao/Queued_Message.cpp:
        * tao/Queued_Message.h:
        * tao/Reactive_Connect_Strategy.cpp:
        * tao/Reactive_Connect_Strategy.h:
        * tao/Reactive_Flushing_Strategy.cpp:
        * tao/Reactive_Flushing_Strategy.h:
        * tao/Refcounted_ObjectKey.cpp:
        * tao/Refcounted_ObjectKey.h:
        * tao/Refcounted_ObjectKey.inl:
        * tao/Remote_Invocation.cpp:
        * tao/Remote_Invocation.h:
        * tao/Remote_Object_Proxy_Broker.cpp:
        * tao/Remote_Object_Proxy_Broker.h:
        * tao/Reply_Dispatcher.cpp:
        * tao/Reply_Dispatcher.h:
        * tao/Reply_Dispatcher.i:
        * tao/Request_Dispatcher.cpp:
        * tao/Request_Dispatcher.h:
        * tao/Resource_Factory.cpp:
        * tao/Resource_Factory.h:
        * tao/Resume_Handle.cpp:
        * tao/Resume_Handle.h:
        * tao/Resume_Handle.inl:
        * tao/Seq_Out_T.cpp:
        * tao/Seq_Out_T.h:
        * tao/Seq_Out_T.inl:
        * tao/Seq_Var_T.cpp:
        * tao/Seq_Var_T.h:
        * tao/Seq_Var_T.inl:
        * tao/Sequence.cpp:
        * tao/Sequence.h:
        * tao/Sequence.i:
        * tao/Sequence_T.cpp:
        * tao/Sequence_T.h:
        * tao/Sequence_T.i:
        * tao/ServerRequestInterceptor_Adapter.cpp:
        * tao/ServerRequestInterceptor_Adapter.h:
        * tao/ServerRequestInterceptor_Adapter_Factory.cpp:
        * tao/ServerRequestInterceptor_Adapter_Factory.h:
        * tao/Server_Strategy_Factory.cpp:
        * tao/Server_Strategy_Factory.h:
        * tao/Service_Callbacks.cpp:
        * tao/Service_Callbacks.h:
        * tao/Service_Context.cpp:
        * tao/Service_Context.h:
        * tao/Service_Context.inl:
        * tao/Services_Activate.cpp:
        * tao/Services_Activate.h:
        * tao/Special_Basic_Argument_T.cpp:
        * tao/Special_Basic_Argument_T.h:
        * tao/Special_Basic_Argument_T.inl:
        * tao/Special_Basic_Arguments.h:
        * tao/Stub.cpp:
        * tao/Stub.h:
        * tao/Stub.i:
        * tao/Stub_Factory.cpp:
        * tao/Stub_Factory.h:
        * tao/Synch_Invocation.cpp:
        * tao/Synch_Invocation.h:
        * tao/Synch_Invocation.inl:
        * tao/Synch_Queued_Message.cpp:
        * tao/Synch_Queued_Message.h:
        * tao/Synch_Reply_Dispatcher.cpp:
        * tao/Synch_Reply_Dispatcher.h:
        * tao/SystemException.cpp:
        * tao/SystemException.h:
        * tao/SystemException.inl:
        * tao/TAO_Internal.cpp:
        * tao/TAO_Server_Request.cpp:
        * tao/TAO_Server_Request.h:
        * tao/TAO_Server_Request.i:
        * tao/TAO_Singleton.cpp:
        * tao/TAO_Singleton.h:
        * tao/TAO_Singleton.inl:
        * tao/TAO_Singleton_Manager.cpp:
        * tao/TAO_Singleton_Manager.h:
        * tao/TAO_Singleton_Manager.inl:
        * tao/TSS_Resources.cpp:
        * tao/TSS_Resources.h:
        * tao/Tagged_Components.cpp:
        * tao/Tagged_Components.h:
        * tao/Tagged_Components.i:
        * tao/Tagged_Profile.cpp:
        * tao/Tagged_Profile.h:
        * tao/Tagged_Profile.i:
        * tao/Thread_Lane_Resources.cpp:
        * tao/Thread_Lane_Resources.h:
        * tao/Thread_Lane_Resources_Manager.cpp:
        * tao/Thread_Lane_Resources_Manager.h:
        * tao/Thread_Per_Connection_Handler.cpp:
        * tao/Thread_Per_Connection_Handler.h:
        * tao/TkResource_Factory.cpp:
        * tao/TkResource_Factory.h:
        * tao/TkResource_Loader.cpp:
        * tao/TkResource_Loader.h:
        * tao/Transport.cpp:
        * tao/Transport.h:
        * tao/Transport.inl:
        * tao/Transport_Acceptor.cpp:
        * tao/Transport_Acceptor.h:
        * tao/Transport_Acceptor.inl:
        * tao/Transport_Cache_Manager.cpp:
        * tao/Transport_Cache_Manager.h:
        * tao/Transport_Cache_Manager.inl:
        * tao/Transport_Connector.cpp:
        * tao/Transport_Connector.h:
        * tao/Transport_Connector.inl:
        * tao/Transport_Descriptor_Interface.cpp:
        * tao/Transport_Descriptor_Interface.h:
        * tao/Transport_Descriptor_Interface.inl:
        * tao/Transport_Mux_Strategy.cpp:
        * tao/Transport_Mux_Strategy.h:
        * tao/Transport_Queueing_Strategies.cpp:
        * tao/Transport_Queueing_Strategies.h:
        * tao/Transport_Timer.cpp:
        * tao/Transport_Timer.h:
        * tao/TypeCodeFactory_Adapter.h:
        * tao/UB_String_Argument_T.cpp:
        * tao/UB_String_Argument_T.h:
        * tao/UB_String_Argument_T.inl:
        * tao/UB_String_Arguments.h:
        * tao/UserException.cpp:
        * tao/UserException.h:
        * tao/UserException.inl:
        * tao/Valuetype_Adapter.cpp:
        * tao/Valuetype_Adapter.h:
        * tao/VarOut_T.cpp:
        * tao/VarOut_T.h:
        * tao/VarOut_T.inl:
        * tao/Var_Array_Argument_T.cpp:
        * tao/Var_Array_Argument_T.h:
        * tao/Var_Array_Argument_T.inl:
        * tao/Var_Size_Argument_T.cpp:
        * tao/Var_Size_Argument_T.h:
        * tao/Var_Size_Argument_T.inl:
        * tao/Wait_On_LF_No_Upcall.cpp:
        * tao/Wait_On_LF_No_Upcall.h:
        * tao/Wait_On_Leader_Follower.cpp:
        * tao/Wait_On_Leader_Follower.h:
        * tao/Wait_On_Reactor.cpp:
        * tao/Wait_On_Reactor.h:
        * tao/Wait_On_Read.cpp:
        * tao/Wait_On_Read.h:
        * tao/Wait_Strategy.cpp:
        * tao/Wait_Strategy.h:
        * tao/corba.h:
        * tao/corbafwd.cpp:
        * tao/debug.cpp:
        * tao/debug.h:
        * tao/default_client.cpp:
        * tao/default_client.h:
        * tao/default_environment.h:
        * tao/default_resource.cpp:
        * tao/default_resource.h:
        * tao/default_server.cpp:
        * tao/objectid.h:
        * tao/operation_details.cpp:
        * tao/operation_details.h:
        * tao/operation_details.i:
        * tao/orbconf.h:
        * tao/params.cpp:
        * tao/params.h:
        * tao/params.i:
        * tao/varbase.h:

          Added versioned namespace support.

          Removed some empty and/or unnecessary `.cpp' and `.inl' files.

          Improved exception safety in some assignment operators.

Tue Nov  1 14:27:36 USMST 2005  Yan Dai  <dai_y@ociweb.com>

        * examples/CSD_Strategy/ThreadPool/run_test.pl:
        * examples/CSD_Strategy/ThreadPool2/run_test.pl:
        * examples/CSD_Strategy/ThreadPool3/run_test.pl:
        * examples/CSD_Strategy/ThreadPool4/run_test.pl:
        * examples/CSD_Strategy/ThreadPool5/run_test.pl:
        * examples/CSD_Strategy/ThreadPool6/run_test.pl:
        * performance-tests/CSD_Strategy/TestApps/run_test.pl:
        * tests/CSD_Strategy_Tests/Broken/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_1/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_2/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_3/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_4/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_Static/run_test.pl:

          Changed to enable these scripts to run from autobuild for VxWorks builds.

        * tests/CSD_Strategy_Tests/TP_Test_1/ServerApp.cpp:

          Removed duplicated log message.

Tue Nov  1 14:30:05 2005  William Otte  <wotte@dre.vanderbilt.edu>

        * orbsvcs/ImplRepo_Service/ImplRepo_Service.mpc

        Added missing project dependancies to fix errors/warnings for the
        strict OS X linker.

Tue Nov  1 19:58:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2289_Regression/MyInterfaceImpl.h:
          Fixed fuzz error

Tue Nov  1 19:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/bounded_string_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/unbounded_string_sequence_ut.cpp:
          Added regression for bug 2201

Tue Nov  1 19:12:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/bounded_value_sequence_ut.cpp:
          Added regression for bug 2201

Tue Nov  1 19:06:48 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_preproc.cpp:

          Fixed addition of default paths to preprocess command line,
          for the case where only $ACE_ROOT, and not $TAO_ROOT, is
          defined in the environment. Thanks to Chris Cleeland
          <cleeland_c@ociweb.cpm> for reporting the problem.

Tue Nov  1 19:04:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/Sequence_Unit_Tests.mpc:
        * tests/Sequence_Unit_Tests/run_test.pl:
        * tests/Sequence_Unit_Tests/Unbounded_Octet.cpp:
        * tests/Sequence_Unit_Tests/unbounded_octet_sequence_ut.cpp:
          Added new tests for unbounded octet sequences, a specialization
          for octet sequences will follow in the near future

Tue Nov  1 18:58:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/bounded_value_sequence.hpp:
          Fixed incorrect guards

Tue Nov  1 17:55:43 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:

          Fixed bug in code generation of valuetype initialzing
          constructor when there is a generated call to the
          valuetype's base class constrcutor.

Tue Nov  1 15:44:41 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:

          Eliminated unused local variable.

Tue Nov  1 15:41:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/value_sequence_tester.hpp:
          Fixed two bugs in this tester, it expected that the sequence
          always expects int which is not true, made it generic so
          that it can also be used for sequences of other types

Tue Nov  1 15:37:04 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_obv_cs.h:

          Fixed generation of valuetype initializing constructor for
          array members. These cannot be handled in the constructor's
          initialization list, so they are handled in the constructor
          body.

Tue Nov  1 14:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/unbounded_value_sequence_ut.cpp:
          Added a regression for bug 2201

        * tests/Sequence_Unit_Tests/value_traits.hpp:
          Implement initialize_range and zero_range as fix for bug
          2201 which also seemed to exist in the new sequence implementation

Tue Nov  1 14:42:14 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:

          Fixed bug in generation of constructor initializing member
          values that failed to screen out attributes when traversing
          the valuetype's scope for stub source file generation.

Tue Nov  1 14:14:31 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Managed_Types.h:
        * tao/Managed_Types.i:

          Added constructors for TAO_String_Manager and
          TAO_WString_Manager from const char* and const CORBA::WChar*
          respectively (each constructor makes a copy). These new
          constructors are used in generated code for valuetypes, in
          the initializing constructor added in

          Fri Oct 28 23:55:14 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

Tue Nov  1 12:33:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2074_Regression/*:
        * orbsvcs/tests/Bug_2074_Regression/*:
          Moved test to orbsvs

Tue Nov  1 11:47:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/generic_sequence.hpp:
          Fixed typo

Tue Nov  1 10:19:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/File_IO/File_i.cpp:
          64bit fix

Tue Nov  1 10:11:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/CSD_Strategy/TestInf/ClientTask.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/ClientTask.cpp:
          Fixed 64bit conversion warnings

Tue Nov  1 10:04:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Profile.cpp:
          Use prefix operators to modify the refcount

Tue Nov  1 09:50:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1495_Regression/Client_Task.cpp:
          Extended this test to do multiple calls. It will fail now

        * tests/Bug_2289_Regression/MyStruct*.{h,cpp,inl}:
          Removed generated files, shouldn't be in the repo

Tue Nov  1 09:35:36 2005  Simon McQueen  <sm@prismtech.com>

        * tests/Bug_2289_Regression/Bug_2289_Regression.mpc:
        * tests/Bug_2289_Regression/MyInterfaceImpl.cpp:
        * tests/Bug_2289_Regression/MyInterfaceImpl.h:
        * tests/Bug_2289_Regression/MyStruct.idl:
        * tests/Bug_2289_Regression/MyStructC.cpp:
        * tests/Bug_2289_Regression/MyStructC.h:
        * tests/Bug_2289_Regression/MyStructC.inl:
        * tests/Bug_2289_Regression/MyStructS.cpp:
        * tests/Bug_2289_Regression/MyStructS.h:
        * tests/Bug_2289_Regression/MyStructS.inl:
        * tests/Bug_2289_Regression/MyStructS_T.cpp:
        * tests/Bug_2289_Regression/MyStructS_T.h:
        * tests/Bug_2289_Regression/MyStructS_T.inl:
        * tests/Bug_2289_Regression/README:
        * tests/Bug_2289_Regression/Test.idl:
        * tests/Bug_2289_Regression/client.cpp:
        * tests/Bug_2289_Regression/run_test.pl:
        * tests/Bug_2289_Regression/server.cpp:

          Added regression test for this bug. Bug is not yet fixed so it
          *will* fail.

Mon Oct 31 15:19:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/mock_reference.hpp:
        * tests/Sequence_Unit_Tests/range_checking.hpp:
          Small doxygen improvements

Mon Oct 31 12:00:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2084_Regression/*:
          Integrated regression for bug 2084. Thanks to David Faure
          <dfaure at klaralvdalens-datakonsult dot se> for creating this
          test. It seems this bug has already been resolved in the past
          but to prevent to reappear it in the future added the test
          to our regression suite.

Mon Oct 31 11:36:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2074_Regression/*:
          Integrated regression for bug 2074. Thanks to Robert Hancock
          <hancockr at shaw dot ca> for creating this test

Sat Oct 29 13:19:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2285_Regression/client2.cpp:
          Fixed compile error

Fri Oct 28 23:55:14 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_type.cpp:

          Cosmetic changes.

        * TAO_IDL/include/ast_attribute.h:

          Removed legacy comment.

        * TAO_IDL/be/be_valuetype.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:
        * TAO_IDL/be_include/be_valuetype.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_obv_cs.h:

          Added generation of valuetype constructor that initializes all
          members, including inherited members, as specified in the CORBA
          C++ mapping (03-06-03) section 1.17.2. This fix closes
          [BUGID:2270].

Thu Oct 27 14:55:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Dynamic/server_interceptor.cpp:
          Reordered includes to fix gcc4 errors

Fri Oct 28 15:35:54 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/Bug_2287_Regression/Hello.cpp:
        * orbsvcs/tests/Bug_2285_Regression/ServerRequest_Interceptor.cpp:
        * orbsvcs/tests/Bug_2285_Regression/client2.cpp:

          More unused arg warnings and 'EXCEPTION' in the debug output
          was incorrectly marking this as a 'fail'.

Fri Oct 28 09:53:24 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:

          Fixed debian full build error - residual ACE cast macro.

Thu Oct 27 14:20:35 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_global.cpp:

          Modified change in

          Wed Oct 26 18:57:47 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

          to handle the use case where skeleton files are generated
          from a .pidl file, for example tao/ImR_Client/ImplRepo.pidl.
          Thanks to Johnny Willemsen <jwillemsen@remedy.nl> for
          reporting the problem.

Thu Oct 27 14:31:12 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/Bug_2287_Regression/Hello.cpp:

          Fix gcc unused arg warning.

Thu Oct 27 13:36:53 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/Bug_2285_Regression/Hello.h:
        * orbsvcs/tests/Bug_2287_Regression/Hello.h:
        * orbsvcs/tests/Bug_2285_Regression/ServerORBInitializer.h:
        * orbsvcs/tests/Bug_2285_Regression/ServerORBInitializer2.h:
        * orbsvcs/tests/Bug_2285_Regression/ServerRequest_Interceptor.h:
        * orbsvcs/tests/Bug_2285_Regression/ServerRequest_Interceptor2.h:
        * orbsvcs/tests/Bug_2287_Regression/ServerORBInitializer2.h:
        * orbsvcs/tests/Bug_2287_Regression/ServerRequest_Interceptor2.h:

          Fix the obligatory fuzz errors.

Thu Oct 27 11:41:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
        * tao/GIOP_Utils.cpp:
        * tao/Transport_Connector.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Strategy_Factory.cpp:
          64bit fixes

Thu Oct 27 11:30:59 2005  Simon McQueen  <sm@prismtech.com>

        * tao/operation_details.h:
        * tao/operation_details.i:

          Add members (with accessors) for the FT request retention ID and
          expiration time.

        * tao/PI/ClientRequestInfo.cpp:
        * tao/PI/ClientRequestInfo.h:

          Add accessors for the FT request retention ID and expiration time
          of the underlying request operation details (see above).

        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:

          Transmit the correct retention ID and request expiration time in
          the request service context. Bound retries by the expiration time.

          This fixes bus #2285 and #2287.

        * orbsvcs/tests/Bug_2285_Regression/Bug_2285_Regression.mpc:
        * orbsvcs/tests/Bug_2285_Regression/Hello.cpp:
        * orbsvcs/tests/Bug_2285_Regression/Hello.h:
        * orbsvcs/tests/Bug_2285_Regression/README:
        * orbsvcs/tests/Bug_2285_Regression/ServerORBInitializer.cpp:
        * orbsvcs/tests/Bug_2285_Regression/ServerORBInitializer.h:
        * orbsvcs/tests/Bug_2285_Regression/ServerORBInitializer2.cpp:
        * orbsvcs/tests/Bug_2285_Regression/ServerORBInitializer2.h:
        * orbsvcs/tests/Bug_2285_Regression/ServerRequest_Interceptor.cpp:
        * orbsvcs/tests/Bug_2285_Regression/ServerRequest_Interceptor.h:
        * orbsvcs/tests/Bug_2285_Regression/ServerRequest_Interceptor2.cpp:
        * orbsvcs/tests/Bug_2285_Regression/ServerRequest_Interceptor2.h:
        * orbsvcs/tests/Bug_2285_Regression/Test.idl:
        * orbsvcs/tests/Bug_2285_Regression/client.cpp:
        * orbsvcs/tests/Bug_2285_Regression/client2.cpp:
        * orbsvcs/tests/Bug_2285_Regression/run_test.pl:
        * orbsvcs/tests/Bug_2285_Regression/run_test2.pl:
        * orbsvcs/tests/Bug_2285_Regression/server.cpp:
        * orbsvcs/tests/Bug_2285_Regression/server2.cpp:
        * orbsvcs/tests/Bug_2287_Regression/Bug_2287_Regression.mpc:
        * orbsvcs/tests/Bug_2287_Regression/Hello.cpp:
        * orbsvcs/tests/Bug_2287_Regression/Hello.h:
        * orbsvcs/tests/Bug_2287_Regression/README:
        * orbsvcs/tests/Bug_2287_Regression/ServerORBInitializer2.cpp:
        * orbsvcs/tests/Bug_2287_Regression/ServerORBInitializer2.h:
        * orbsvcs/tests/Bug_2287_Regression/ServerRequest_Interceptor2.cpp:
        * orbsvcs/tests/Bug_2287_Regression/ServerRequest_Interceptor2.h:
        * orbsvcs/tests/Bug_2287_Regression/Test.idl:
        * orbsvcs/tests/Bug_2287_Regression/client.cpp:
        * orbsvcs/tests/Bug_2287_Regression/run_test.pl:
        * orbsvcs/tests/Bug_2287_Regression/server.cpp:

          Regression tests for these bugs.

Thu Oct 27 09:34:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Sequence_T.{h,cpp}:
          Applied the fix of bug 2201, when shrinking a sequence we
          re initialize the elements. Fixes bugzilla 2201.
          Thanks to Frank Pilhofer <fp at mc dot com> for reporting this
          and supplying the patch.

Thu Oct 27 09:27:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2201_Regression/*:
          Added regression for bug 2201 to the cvs archive

Thu Oct 27 06:48:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
          Fixed conversion warnings

Wed Oct 26 17:22:12 2005  Don Busch  <busch_d@ociweb.com>

        * orbsvcs/CosEvent_Service/CosEvent_Service.mpc
        * orbsvcs/examples/ORT/ORT.mpc
        * orbsvcs/orbsvcs/CosEvent.mpc
        * orbsvcs/orbsvcs/CosNaming_Serv.mpc
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_Pulling_Strategy.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.cpp
        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp
        * tao/CSD_Framework.mpc

          This is a footprint reduction fix, eliminating a library dependency.
          TAO 1.4 introduced a new dependency on the Messaging, Valuetype,
          PI, and CodecFactory libraries for the CosNaming_Serv and
          CosEvent_Serv libraries.  Turning off CORBA Messaging did not remove
          this dependency. Thus, any application that uses CosNaming_Serv or
          CosEvent_Serv, but not CORBA Messaging, depends on those libraries
          anyway. This change eliminates the CosNaming_Serv and CosEvent_Serv
          dependencies on Messaging (and thus PI, CodecFactory, and Valuetype)
          when CORBA Messaging and Interceptors are turned off.  It reduces
          the footprint in that case by about 600K.
          There is a ACE ChangeLog entry with the same timestamp that
          descibes the MPC config file changes.

Wed Oct 26 19:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CodecFactory/IOP_Codec_includeA.h:
          Added new file

        * tao/Makefile.am:
          Updated

Wed Oct 26 18:57:47 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_global.cpp (be_change_idl_file_extension):

          Changed logic to ignore a header extension set by the -hc
          option and use "C.h", if we are processing a .pidl file,
          and we are not generating an *A.h file. Thanks to
          Johnny Willemsen <jwillemsen@remedy.nl> for reporting
          the problem.

Wed Oct 26 18:54:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/ClientRequestInfoA.cpp
        * tao/PI/ClientRequestInfoC.cpp
        * tao/PI/ClientRequestInfoC.h
        * tao/PI/ClientRequestInfoS.h
        * tao/PI/ClientRequestInterceptorA.cpp
        * tao/PI/ClientRequestInterceptorC.cpp
        * tao/PI/ClientRequestInterceptorC.h
        * tao/PI/ClientRequestInterceptorS.h
        * tao/PI/InterceptorA.cpp
        * tao/PI/InterceptorC.cpp
        * tao/PI/InterceptorC.h
        * tao/PI/InterceptorS.h
        * tao/PI/ORBInitInfoC.cpp
        * tao/PI/ORBInitInfoC.h
        * tao/PI/ORBInitInfoS.h
        * tao/PI/ORBInitializerA.cpp
        * tao/PI/ORBInitializerC.cpp
        * tao/PI/ORBInitializerC.h
        * tao/PI/ORBInitializerS.h
        * tao/PI/PIForwardRequestA.cpp
        * tao/PI/PIForwardRequestC.cpp
        * tao/PI/PIForwardRequestC.h
        * tao/PI/PIForwardRequestS.h
        * tao/PI/PolicyFactoryA.cpp
        * tao/PI/PolicyFactoryC.cpp
        * tao/PI/PolicyFactoryC.h
        * tao/PI/PolicyFactoryS.h
        * tao/PI/RequestInfoA.cpp
        * tao/PI/RequestInfoC.cpp
        * tao/PI/RequestInfoC.h
        * tao/PI/RequestInfoS.h
        * tao/PI_Server/ServerRequestInfoA.cpp
        * tao/PI_Server/ServerRequestInfoC.cpp
        * tao/PI_Server/ServerRequestInfoC.h
        * tao/PI_Server/ServerRequestInfoS.h
        * tao/PI_Server/ServerRequestInterceptorA.cpp
        * tao/PI_Server/ServerRequestInterceptorC.cpp
        * tao/PI_Server/ServerRequestInterceptorC.h
        * tao/PI_Server/ServerRequestInterceptorS.h
        * tao/IORInterceptor/IORInfoC.cpp
        * tao/IORInterceptor/IORInfoC.h
          Regenerated

        * tao/IORInterceptor/IORInfo.pidl
        * tao/PI/ORBInitInfo.pidl
          Updated regeneration instructions

        * tao/PI/ORBInitInfoA.cpp:
          Removed

        * tao/PI/ClientRequestInfoA.h
        * tao/PI/ClientRequestInterceptorA.h
        * tao/PI/InterceptorA.h
        * tao/PI/ORBInitializerA.h
        * tao/PI/PIForwardRequestA.h
        * tao/PI/PolicyFactoryA.h
        * tao/PI/RequestInfoA.h
        * tao/PI_Server/ServerRequestInfoA.h
        * tao/PI_Server/ServerRequestInterceptorA.h
          New generated files

        * tao/PortableServer/POA_Cached_Policies.cpp
          Layout fix

        * tao/Makefile.am
          Added new files

        * tao/IORInterceptor/IORInterceptor.pidl
        * tao/IORInterceptor/IORInterceptorC.cpp
        * tao/IORInterceptor/IORInterceptorC.h
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp
          Splitted PortableInterceptor::IORInterceptor into IORInterceptor
          and IORInterceptor_3_0. This is triggered by bug 1271 which contained
          issues about CORBA Compliance. In the 3.0.3 spec the IORInterceptor
          was splitted. This fixes bug 1271.

          IMPORTANT!!!
          If you use IORInterceptor methods components_established,
          adapter_manger_state_changed and adapter_state_changed you have to
          derive your implementation from IORInterceptor_3_0 else these
          methods don't get called!!!

        * tests/ORT/ORT_test_IORInterceptor.h
        * tests/Portable_Interceptors/IORInterceptor/FOO_IORInterceptor.h
        * tests/Portable_Interceptors/PolicyFactory/IORInterceptor.cpp
        * tests/Portable_Interceptors/PolicyFactory/IORInterceptor.h
        * orbsvcs/examples/ORT/Server_IORInterceptor.h
        * orbsvcs/orbsvcs/LoadBalancing/LB_IORInterceptor.h
          Changes for IORInterceptor_3_0.

Wed Oct 26 13:13:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/diffs/ServerRequestInterceptor.diff:
        * tao/PI_Server/diffs/ServerRequestInterceptor.diff:
          Moved this diff to the PI_Server directory, it belongs there

Wed Oct 26 09:15:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ObjRefTemplate/ObjectReferenceTemplate.pidl:
          Removed the equals and make_profiles methods which where
          commented out. That these exist in the IDL of CORBA 3.0.3
          is an editorial error. See also OMG issue 9112

Tue Oct 25 22:24:36 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/LocateRequest_Invocation.cpp (invoke):
        * tao/Synch_Invocation.cpp (remote_oneway, remote_twoway):

          Changed OutputCDR_Auto_Reset to ACE_OutputCDR_Auto_Reset to
          match corresponding changes made to ACE.

Tue Oct 25 21:50:46 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * utils/wxNamingViewer/wxNamingViewer.cpp:
        * utils/wxNamingViewer/wxNamingViewerFrame.cpp: Added some #include
          files to get things working again on Linux.  Thanks to Matt
          Gillen <mgillen@bbn.com> for these fixes.

Tue Oct 25 08:34:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/CosEvent/Basic/Shutdown.cpp:
          Fixed warning in MinGW build

Tue Oct 25 07:22:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Current_Impl.cpp:
          Implemented POA_Current::get_reference. This is the last item
          of bugzilla bug 1917, which is now totally fixed

Mon Oct 24 19:08:06 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/util/utl_scope.cpp:
        * TAO_IDL/util/utl_string.cpp:

          Added immediate exits when name clash errors are encountered,
          since trying to continue parsing from these points can lead to a
          crash. Thanks to Ian Zagorskih <ianzag@megasignal.com> for
          reporting the problem. This fix closes [BUGID:2281].

Mon Oct 24 18:39:31 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/fe_interface_header.cpp:
        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/include/fe_interface_header.h:

          For IDL types that are added to the IDL compiler's
          AST via an FE_*Header class (interfaces, valuetypes,
          eventtypes, components, and homes), modified the
          creation of this class to pass in a scoped name
          created on the heap instead of on the stack.
          Memory allocated within this scoped name was being
          freed in a different scope, and it's dangerous
          to assume that the stack address would still be
          valid. Also added a destroy() method to the
          FE_InterfaceHeader class (base class to all the
          others) that handles the destruction of the scoped
          name member and its contents, if it is nonzero.
          Thanks to Iliyan Jeliazkov <jeliazkov_i@ociweb.com>
          for reporting the problem.

Mon Oct 24 18:18:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CodecFactory/CodecFactory_impl.cpp:
          Added validation whether the requested codesets are supported

        * tao/Codeset/Codeset_Manager_i.{h,cpp}:
        * tao/Codeset_Manager.h:
          Added get_ncs to be able to check whether a codeset is supported.
          Thanks to Phil Mesnier for helping with this issue.

Mon Oct 24 17:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Codec/client.cpp:
          Added missing return

Mon Oct 24 06:53:12 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/IFR_Service/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:
        * tao/Makefile.am:

          Regenerated.

Mon Oct 24 13:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Codec/client.cpp:
        * tests/Codec/Codec.mpc:
          Extended this test

Mon Oct 24 13:26:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CodecFactory/CDR_Encaps_Codec.{h,cpp}
        * tao/CodecFactory/CodecFactory_impl.{h,cpp}:
        * tao/CodecFactory/IOP_Codec.pidl:
        * tao/CodecFactory/IOP_Codec_includeC.h:
        * tao/CodecFactory/IOP_Codec_includeS.h:
        * tao/CodecFactory/IOP_CodecC.{h,cpp}:
          The current Codec just encode/decodes wstring without
          using the codesets. When wstrings are encoded/decoded
          this causes problems. We found that there has been
          raised already an issue at the OMG for this: issue 6050,
          see http://www.omg.org/issues/issue6050.txt
          This proposes a new IDL method on CodecFactory,
          CodecFactory::create_codec_with_codesets.
          With this method a Codec can be created with specific
          codesets in place. We implemented this method in TAO,
          the only thing we will add soon is the extra check whether
          the requested codeset is supported, this is not possible
          at this moment because the codeset interfaces are not really
          setup in a way to do this.

        * tao/CodecFactory/IOP_CodecA.cpp:
          Removed

        * tao/Codeset_Manager.h:
        * tao/Codeset_Descriptor_Base.h:
          Small layout/doxygen fixes

        * tao/Makefile.am:
          Removed tao/CodecFactory/IOP_CodecA.cpp

        * tao/CodecFactory/diff/IOP_Codec.diff:
          Updated

Mon Oct 24 12:59:07 2005  Simon McQueen  <sm@prismtech.com>

        * tao/Messaging/ExceptionHolder_i.cpp:

          Fixed compile error with VC++ 6.

Mon Oct 24 07:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * Adapter_Registry.cpp:
        * ORB_Core.cpp:
        * Object.cpp:
        * BiDir_GIOP/BiDirGIOP.cpp:
        * CSD_Framework/CSD_Object_Adapter_Factory.cpp:
        * Messaging/Messaging_Loader.cpp:
        * PortableServer/Root_POA.cpp:
        * RTPortableServer/RT_Servant_Dispatcher.cpp:
          Don't pass %P, %t, \n to ACE_PRINT_EXCEPTION, it
          does this itself already.

        * Codeset/Codeset_Manager_i.cpp:
          Layout improvements

Fri Oct 21 14:12:49 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * examples/CSD_Strategy/ThreadPool6/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool5/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool5/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool3/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool2/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool4/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Static/ClientApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Static/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_3/ClientApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_3/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_4/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_2/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_1/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/Broken/ClientApp.cpp:
        * tests/CSD_Strategy_Tests/Broken/ServerApp.cpp:
        * performance-tests/CSD_Strategy/TestApps/ServerApp.cpp:

          Added PI.h include to force statically initialization happen
          before the TAO_CSD_Object_Adapter::init() is called. This would
          resolve the problem that CSD test failures on static builds.

        * examples/CSD_Strategy/ThreadPool/CSD_Test_ThreadPool.mpc:
        * examples/CSD_Strategy/ThreadPool2/CSD_Test_ThreadPool2.mpc:
        * examples/CSD_Strategy/ThreadPool3/CSD_Test_ThreadPool3.mpc:
        * examples/CSD_Strategy/ThreadPool4/CSD_Test_ThreadPool4.mpc:
        * examples/CSD_Strategy/ThreadPool5/CSD_Test_ThreadPool5.mpc:
        * examples/CSD_Strategy/ThreadPool6/CSD_Test_ThreadPool6.mpc:

          Added dependency on pi base project since the PI.h is included
          in the test application.

        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_i.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_Statistics.cpp:

          Corrected the conversion specifier (using %u) for unsigned value.

Fri Oct 21 12:25:56 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * tao/PI_Server/PI_Server_Loader.cpp:

          Removed the %P|%t in the ACE_PRINT_EXCEPTION info parameter.

Fri Oct 21 11:17:10 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * tao/CSD_ThreadPool/CSD_TP_Strategy_Factory.cpp:

          Made the number of threads to use the default value 1 if the
          number of threads is not specified in the service config file.

        * tao/CSD_ThreadPool/CSD_TP_Task.cpp:

          Replaced the unsigned* with unsigned int* to fix a parse error
          compilation error on some compilers.

Fri Oct 21 07:19:32 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * performance-tests/Sequence_Latency/Deferred/Deferred.mpc:

          Fix tipo in server project that caused it not to depend on IDL
          project.

Fri Oct 21 13:34:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CodeSets/simple/client.cpp:
          Fixed signed/unsigned warning

Fri Oct 21 10:03:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/driver.cpp:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/client.cpp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/client.cpp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/client.cpp:
        * orbsvcs/performance-tests/RTEvent/Roundtrip/client.cpp:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/client.cpp:
          Don't use barrier as variable name, can be a macro. fixes bugzila
          bug 2271. Thanks to Francesco Salvestrini
          <f dot salvestrini at nextworks dot it> for reporting this.

        * tests/Nested_Upcall_Crash/Clock_Ticks.{h,cpp}:
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
        * tests/CodeSets/simple/client.cpp:
          64bit fixes

        * examples/Simple/echo/Echo_i.cpp:
          Initialise pointer with 0

        * tao/PortableServer/POA_Current.{h,cpp}:
        * tao/PortableServer/POA_Current_Impl.{h,cpp}:
        * tao/PortableServer/PS_CurrentA.cpp:
        * tao/PortableServer/PS_CurrentC.{h,cpp}:
        * tao/PortableServer/PS_Current.pidl:
          Added Current::get_reference as to be implemented method, that will
          be done soon. Generated the pidl file as a result of AnyTypeCode
          refactoring the PS_CurrentA.cpp is not usable for this file, so
          zapped it.

        * tao/Makefile.am:
          Removed PS_CurrentA.cpp

Fri Oct 21 09:19:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/ExceptionHolder_i.h:
          Fixed forward declaration

Thu Oct 20 12:24:30 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/server.cpp:

          Made the ACE_Thread_Manager instance wait for CSD task threads
          exit. This should fix test failure shown on scoreboard.

Thu Oct 20 11:54:38 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * examples/CSD_Strategy/ThreadPool/Foo_i.h:
        * examples/CSD_Strategy/ThreadPool2/Foo_i.h:
        * examples/CSD_Strategy/ThreadPool3/Foo_i.h:
        * examples/CSD_Strategy/ThreadPool4/Callback_i.h:
        * examples/CSD_Strategy/ThreadPool4/Foo_i.h:
        * examples/CSD_Strategy/ThreadPool5/Callback_i.h:
        * examples/CSD_Strategy/ThreadPool5/Foo_i.h:
        * performance-tests/CSD_Strategy/TestServant/Foo_i.h:
        * tests/CSD_Strategy_Tests/TP_Foo_A/Foo_A_i.h:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Callback_i.h:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_i.h:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_i.h:

          Removed the duplicated inheritence of PortableServer::ServantBase.

        * tao/CSD_Framework/CSD_Framework.pidl:

          Fixed fuzz errors.

        * tao/CSD_Framework/CSD_FrameworkA.cpp:
        * tao/CSD_Framework/CSD_FrameworkA.h:
        * tao/CSD_Framework/CSD_FrameworkC.cpp:
        * tao/CSD_Framework/CSD_FrameworkC.h:
        * tao/CSD_Framework/diffs/CSD_Framework.diff:

          Regenerated files from pidl file and updated to resolve error
          message from compiler.

        * tao/CSD_Framework/CSD_FrameworkC.inl:

          Removed the empty file to fix fuzz error.

        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/CSD_Framework/CSD_Strategy_Base.h:
        * tao/CSD_ThreadPool/CSD_ThreadPool.h:
        * tao/CSD_ThreadPool/CSD_TP_Task.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_Custom_ClientEngine.h:

          Fixed fuzz errors and compilation errors shown on scoreboard.

        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/client.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/Hello.h:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/run_test.pl:

          Updated to be the same as in $TAO_ROOT/tests/Hello test.

Thu Oct 20 14:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ObjectGroupManagerHandler.cpp:
          Fixed argument not used warning

Thu Oct 20 13:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        Enabled the new AMI implementation as described in the CORBA
        3.0.3 specification. All tests and examples are updated to the
        new spec but if you want to use the old specification for
        your application then define TAO_HAS_DEPRECATED_EXCEPTION_HOLDER
        in your config.h and rebuild the core libs and the TAO IDL compiler.
        This deprecated AMI support will be kept alive until x.5.1 has
        been released and then we will zap it completely from the
        TAO distribution.

        When you want to update the application code for the new mapping,
        all _excep methods in the reply handler must be updated. Change
        the interface specific exceptionholder in the interface to
        ::Messaging::ExceptionHolder, change in the implementation the
        raise_x call to raise_exception.

        * TAO_IDL/be_include/be_global.h:
        * tao/orbconf.h:
          Removed define of TAO_HAS_DEPRECATED_EXCEPTION_HOLDER, we
          are switching now to the new AMI implementation

        * docs/tutorials/Quoter/AMI/Handler_i.{h,cpp}:
        * docs/tutorials/Quoter/On_Demand_Activation/Handler_i.{h,cpp}:
        * examples/AMI/FL_Callback/Peer_i.{h,cpp}:
        * examples/Buffered_AMI/client.cpp:
        * examples/Content_Server/AMI_Iterator/Iterator_Handler.h:
        * examples/Content_Server/AMI_Observer/Callback_Handler.{h,cpp}:
        * examples/Content_Server/AMI_Observer/Push_Iterator_Handler.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ObjectGroupManagerHandler.{h,cpp}:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/UpdateableHandler.{h,cpp}:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.cpp
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlert_Handler.{h,cpp}:
        * orbsvcs/tests/HTIOP/AMI/client.cpp
        * orbsvcs/tests/HTIOP/AMI/simple_client.cpp
        * performance-tests/Latency/AMI/Roundtrip_Handler.{h,cpp}:
        * performance-tests/Sequence_Latency/AMI/Roundtrip_Handler.{h,cpp}:
        * tests/AMI/client.cpp:
        * tests/AMI/simple_client.cpp:
        * tests/AMI_Buffering/Reply_Handler.{h,cpp}:
        * tests/AMI_Timeouts/timeout_i.{h,cpp}:
        * tests/Big_AMI/client.cpp:
        * tests/Bug_1482_Regression/Reply_Handler.{h,cpp}:
        * tests/Bug_1551_Regression/Reply_Handler.{h,cpp}:
        * tests/LongUpcalls/AMI_Manager.{h,cpp}:
        * tests/LongUpcalls/Manager_Handler.{h,cpp}:
        * tests/Portable_Interceptors/AMI/Echo_Handler.{h,cpp}:
          Updated for the new AMI mapping

Thu Oct 20 12:09:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/compiler.html:
          Documented AMI behaviour and fixed some incorrect links

Thu Oct 20 12:03:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/releasenotes/index.html:
          Fixed html tag

Thu Oct 20 10:45:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:
          Fixed problem with the exceptionholder in the new AMI mapping, it
          was created for each interface in an idl file, it should only
          be created once

Thu Oct 20 09:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_operation/ami_exception_holder_operation_cs.cpp:
          Guarded another part of code with TAO_HAS_DEPRECATED_EXCEPTION_HOLDER,
          it is not needed with the new AMI implementation

Wed Oct 19 14:09:44 2005  Bala Natarajan  <bala_natarajan at symantec dot com>

        * tao/Messaging/AMH_Response_Handler.cpp:

          Release the lock in the destructor before calling
          _tao_rh_send_exception (). The said method is well
          protected. Calling this method with the lock held could create a
          deadlock. Thanks to Anton Bakanovskiy <Anton dot Bakanovskiy at
          bercut dot ru> and Toha Bakanovsky <im-scooter at yandex.ru> for
          reporting the problem. This fixes [BUGID 2269].

Wed Oct 19 11:30:23 MST 2005  Yan Dai  <dai_y@ociweb.com>

        * tao/CSD_Framework/CSD_Strategy_Base.h:

          Removed extra ";" from the POAManager forward declaration.

        * tao/CSD_Framework/CSD_Strategy_Base.cpp:
        * tao/PortableServer/Root_POA.cpp:

          Removed the argument name from the csd hook interfaces instead
          of using ACE_UNUSED_ARG.

        * docs/libraries.html:

          Added CSD_Framework and CSD_ThreadPool library descriptions.

        * examples/CSD_Strategy/ThreadPool/Foo_i.h:
        * examples/CSD_Strategy/ThreadPool2/Foo_i.h:
        * examples/CSD_Strategy/ThreadPool3/Foo_i.h:
        * examples/CSD_Strategy/ThreadPool4/Callback_i.h:
        * examples/CSD_Strategy/ThreadPool4/Foo_i.h:
        * examples/CSD_Strategy/ThreadPool5/Callback_i.h:
        * examples/CSD_Strategy/ThreadPool5/Foo_i.h:
        * performance-tests/CSD_Strategy/TestServant/Foo_i.h:
        * tests/CSD_Strategy_Tests/TP_Foo_A/Foo_A_i.h:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Callback_i.h:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_i.h:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_i.h:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/Hello.h:

          Replaced deprecated RefCountServantBase with ServantBase.

Wed Oct 19 10:01:03 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Valuetype/Value_VarOut_T.cpp (operator=):

          Implement assignment operators in terms of their constructor
          counterparts using the canonical copy and (non-throwing) swap
          technique.  Provides strong exception safety guarantee, obviates
          need for self-assignment check and reduces code duplication
          between constructors and assignment operators.  This change also
          reverts "Tue Jun 21 13:38:23 2005  Gary Maxey <gary.maxey@...>",
          and fixes a memory leak reported by Mickael P. Golovin <migel at
          garant dot ru>.

Wed Oct 19 12:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/ExceptionHolder_i.cpp:
          Added todo that code could be simplified when missing valuetype
          constructor is generated

Wed Oct 19 10:56:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be_include/be_global.h:
          Added define of TAO_HAS_DEPRECATED_EXCEPTION_HOLDER. This way
          I can the new AMI support to the IDL compiler in the repo
          and build it on multiple boxes by removing this define by hand.
          At the moment the new AMI support is fully ready I will remove
          this define and then it is up to the user to set it.

        * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_ch.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/ami_exception_holder_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/ami_exception_holder_cs.cpp:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:
          Added support for the new AMI mapping, is enabled when
          TAO_HAS_DEPRECATED_EXCEPTION_HOLDER is not defined, so by
          default it is disabled at this moment

Wed Oct 19 09:34:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/ExceptionHolder_i.{h,cpp}:
          Added new Messaging::ExceptionHolder implementation, will be used
          for the new AMI mapping

        * tao/Makefile.am:
          Added new files above

Wed Oct 19 08:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/be/be_global.cpp:
          Added member to store the new Messaging::ExceptionHolder
          for the latest AMI mapping

Wed Oct 19 00:35:02 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Add default AM_CONDITIONAL for BUILD_WFMO.

Wed Oct 19 07:34:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:
          Fixed MinGW warning

Wed Oct 19 00:11:34 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/POA/Explicit_Activation/Alt_Resources/Makefile.am:

          Regenerate.

        * examples/POA/Explicit_Activation/Alt_Resources/Alt_Resource.mpc:

          Changed to inherit from wfmo instead of using a verbatim section
          to disable building on systems without the ACE_WFMO_Reactor.

Tue Oct 18 23:43:02 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am

          Regenerate.

        * tao/CSD_Framework.mpc:
        * tao/CSD_ThreadPool.mpc:

          Add Pkconfig_Files section for new pkg-config templates.

        * tao/CSD_Framework/TAO_CSD_Framework.pc.in:

          New file, pkg-config *.pc template for TAO_CSD_Framework
          library.

        * tao/CSD_ThreadPool/TAO_CSD_ThreadPool.pc.in:

          New file, pkg-config *.pc template for TAO_CSD_ThreadPool
          library.

Tue Oct 18 20:56:24 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/CSD_ThreadPool.mpc:

          Changed to inherit from core.mpb base project.

Tue Oct 18 18:35:26 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerate due to CSD.

Tue Oct 18 18:33:04 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.am:

          Regenerate due to change in Kokyu_dsrt_schedulers.mpb.

Tue Oct 18 17:24:26 MST 2005  Yan Dai  <dai_y@ociweb.com>

        Merged in the CSD (Custom Servant Dispatching) feature from OCI.

        The main changes to existing code are:

          - Four hooks are added to TAO_Root_POA to notify the CSD when poa
            is activated/deactivated and servant is activated/deactivated.
            Some areas of the code were instrumented to call these hooks to
            notify the CSD Strategy object of POA activation and deactivation
            "events".  Likewise, code was added to notify the CSD Strategy object
            of servant activation and deactivation "events".
          - A virtual method do_dispatch() is added to the TAO_Object_Adapter so
            the CSD object adpater can override the default implementation to
            dispatch the requests to the CSD strategy.
          - The remote requests and the collocated oneway requests are cloned when
            they are dispatched to the CSD strategy. To support the TAO_ServerRequest
            clone in the CSD library, the friendship is added to the TAO_ServerRequest
            class and it's data member classes such as TAO_Service_Context class,
            TAO_Operation_Details class and TAO_Tagged_Profile class.

        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Root_POA.h:

          Added four hooks.

        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Object_Adapter.h:
        * tao/PortableServer/POAManager.cpp:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:

          Instrumented to call the hooks.

        * tao/operation_details.h:
        * tao/Service_Context.h:
        * tao/Tagged_Profile.h:

          Added friendship with CSD_FW_Server_Request_Wrapper to support
          the TAO_ServerRequest clone in CSD library.

        * tao/TAO_Server_Request.h:

          - Changed the operation_details_ to be pointer to const
          TAO_Operation_Details object instead of const pointer to const
          TAO_Operation_Details object. This change is made to accommodate
          the change of TAO_ServerRequest clone in the CSD library.
          - Added friendship with CSD_FW_Server_Request_Wrapper to support
          the TAO_ServerRequest clone in CSD library.

        * tao/PortableServer/get_arg.h:

          Made the get_in_arg template function check whether the
          detail argument is nil. If the detail is not nil and the
          argument list in detail is nil(collocated oneway case) then it
          will demarshall the input CDR stream and get arguments. This
          change is made to accommodate the changes in TAO_Operation_Details
          clone that writes the argument list to the input CDR of the
          TAO_ServerRequest object.

        * tao/Intrusive_Ref_Count_Base_T.cpp:
        * tao/Intrusive_Ref_Count_Base_T.h:
        * tao/Intrusive_Ref_Count_Base_T.inl:
        * tao/Intrusive_Ref_Count_Handle_T.cpp:
        * tao/Intrusive_Ref_Count_Handle_T.h:
        * tao/Intrusive_Ref_Count_Handle_T.inl:

          These are two new classes that provide infrastructure-level support
          for classes that need an "intrusive" reference counting mechanism.

        * tao/CSD_Framework.mpc:
        * tao/CSD_Framework/CSD_Default_Servant_Dispatcher.cpp:
        * tao/CSD_Framework/CSD_Default_Servant_Dispatcher.h:
        * tao/CSD_Framework/CSD_Framework.pidl:
        * tao/CSD_Framework/CSD_Framework_Loader.cpp:
        * tao/CSD_Framework/CSD_Framework_Loader.h:
        * tao/CSD_Framework/CSD_FrameworkA.cpp:
        * tao/CSD_Framework/CSD_FrameworkA.h:
        * tao/CSD_Framework/CSD_FrameworkC.cpp:
        * tao/CSD_Framework/CSD_FrameworkC.h:
        * tao/CSD_Framework/CSD_FrameworkC.inl:
        * tao/CSD_Framework/CSD_FW_Export.h:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.h:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.inl:
        * tao/CSD_Framework/CSD_Object_Adapter.cpp:
        * tao/CSD_Framework/CSD_Object_Adapter.h:
        * tao/CSD_Framework/CSD_Object_Adapter_Factory.cpp:
        * tao/CSD_Framework/CSD_Object_Adapter_Factory.h:
        * tao/CSD_Framework/CSD_ORBInitializer.cpp:
        * tao/CSD_Framework/CSD_ORBInitializer.h:
        * tao/CSD_Framework/CSD_POA.cpp:
        * tao/CSD_Framework/CSD_POA.h:
        * tao/CSD_Framework/CSD_POA.inl:
        * tao/CSD_Framework/CSD_Strategy_Base.cpp:
        * tao/CSD_Framework/CSD_Strategy_Base.h:
        * tao/CSD_Framework/CSD_Strategy_Base.inl:
        * tao/CSD_Framework/CSD_Strategy_Proxy.cpp:
        * tao/CSD_Framework/CSD_Strategy_Proxy.h:
        * tao/CSD_Framework/CSD_Strategy_Proxy.inl:
        * tao/CSD_Framework/CSD_Strategy_Repository.cpp:
        * tao/CSD_Framework/CSD_Strategy_Repository.h:
        * tao/CSD_Framework/diffs/CSD_Framework.diff:

          All of the files listed above are brand new and are used to build
          the new CSD Framework library. This framework implements the base
          classes for the concrete strategy implementation and implements
          the service objects for CSD strategy static and dynamic loading
          via the service configuration file.

        * tao/CSD_ThreadPool.mpc:
        * tao/CSD_ThreadPool/CSD_ThreadPool.cpp:
        * tao/CSD_ThreadPool/CSD_ThreadPool.h:
        * tao/CSD_ThreadPool/CSD_TP_Cancel_Visitor.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Cancel_Visitor.h:
        * tao/CSD_ThreadPool/CSD_TP_Cancel_Visitor.inl:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Asynch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Asynch_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Asynch_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_With_Server_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_With_Server_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_With_Server_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Corba_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Corba_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Corba_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Asynch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Asynch_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Asynch_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Request_Operation.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Request_Operation.h:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Request_Operation.inl:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Synch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Synch_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Synch_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Dispatchable_Visitor.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Dispatchable_Visitor.h:
        * tao/CSD_ThreadPool/CSD_TP_Dispatchable_Visitor.inl:
        * tao/CSD_ThreadPool/CSD_TP_Export.h:
        * tao/CSD_ThreadPool/CSD_TP_Queue.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Queue.h:
        * tao/CSD_ThreadPool/CSD_TP_Queue.inl:
        * tao/CSD_ThreadPool/CSD_TP_Queue_Visitor.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Queue_Visitor.h:
        * tao/CSD_ThreadPool/CSD_TP_Queue_Visitor.inl:
        * tao/CSD_ThreadPool/CSD_TP_Remote_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Remote_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Remote_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Request.h:
        * tao/CSD_ThreadPool/CSD_TP_Request.inl:
        * tao/CSD_ThreadPool/CSD_TP_Servant_State.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Servant_State.h:
        * tao/CSD_ThreadPool/CSD_TP_Servant_State.inl:
        * tao/CSD_ThreadPool/CSD_TP_Servant_State_Map.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Servant_State_Map.h:
        * tao/CSD_ThreadPool/CSD_TP_Servant_State_Map.inl:
        * tao/CSD_ThreadPool/CSD_TP_Strategy.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Strategy.h:
        * tao/CSD_ThreadPool/CSD_TP_Strategy.inl:
        * tao/CSD_ThreadPool/CSD_TP_Strategy_Factory.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Strategy_Factory.h:
        * tao/CSD_ThreadPool/CSD_TP_Synch_Helper.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Synch_Helper.h:
        * tao/CSD_ThreadPool/CSD_TP_Synch_Helper.inl:
        * tao/CSD_ThreadPool/CSD_TP_Task.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Task.h:
        * tao/CSD_ThreadPool/CSD_TP_Task.inl:

          All of the files listed above are brand new and are used to build
          the new CSD ThreadPool library.  Collectively, these classes
          represent the reference-implementation for the CSD Strategy feature.

        * examples/CSD_Strategy/README:
        * examples/CSD_Strategy/ThreadPool/client_main.cpp:
        * examples/CSD_Strategy/ThreadPool/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool/ClientApp.h:
        * examples/CSD_Strategy/ThreadPool/CSD_Test_ThreadPool.mpc:
        * examples/CSD_Strategy/ThreadPool/Foo.idl:
        * examples/CSD_Strategy/ThreadPool/Foo_i.cpp:
        * examples/CSD_Strategy/ThreadPool/Foo_i.h:
        * examples/CSD_Strategy/ThreadPool/OrbShutdownTask.cpp:
        * examples/CSD_Strategy/ThreadPool/OrbShutdownTask.h:
        * examples/CSD_Strategy/ThreadPool/README:
        * examples/CSD_Strategy/ThreadPool/run_test.pl:
        * examples/CSD_Strategy/ThreadPool/server_main.cpp:
        * examples/CSD_Strategy/ThreadPool/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool/ServerApp.h:
        * examples/CSD_Strategy/ThreadPool2/client_main.cpp:
        * examples/CSD_Strategy/ThreadPool2/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool2/ClientApp.h:
        * examples/CSD_Strategy/ThreadPool2/CSD_Test_ThreadPool2.mpc:
        * examples/CSD_Strategy/ThreadPool2/Foo.idl:
        * examples/CSD_Strategy/ThreadPool2/Foo_i.cpp:
        * examples/CSD_Strategy/ThreadPool2/Foo_i.h:
        * examples/CSD_Strategy/ThreadPool2/FooServantList.cpp:
        * examples/CSD_Strategy/ThreadPool2/FooServantList.h:
        * examples/CSD_Strategy/ThreadPool2/OrbShutdownTask.cpp:
        * examples/CSD_Strategy/ThreadPool2/OrbShutdownTask.h:
        * examples/CSD_Strategy/ThreadPool2/README:
        * examples/CSD_Strategy/ThreadPool2/run_test.pl:
        * examples/CSD_Strategy/ThreadPool2/server_main.cpp:
        * examples/CSD_Strategy/ThreadPool2/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool2/ServerApp.h:
        * examples/CSD_Strategy/ThreadPool3/client_main.cpp:
        * examples/CSD_Strategy/ThreadPool3/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool3/ClientApp.h:
        * examples/CSD_Strategy/ThreadPool3/CSD_Test_ThreadPool3.mpc:
        * examples/CSD_Strategy/ThreadPool3/Foo.idl:
        * examples/CSD_Strategy/ThreadPool3/Foo_i.cpp:
        * examples/CSD_Strategy/ThreadPool3/Foo_i.h:
        * examples/CSD_Strategy/ThreadPool3/OrbShutdownTask.cpp:
        * examples/CSD_Strategy/ThreadPool3/OrbShutdownTask.h:
        * examples/CSD_Strategy/ThreadPool3/OrbTask.cpp:
        * examples/CSD_Strategy/ThreadPool3/OrbTask.h:
        * examples/CSD_Strategy/ThreadPool3/README:
        * examples/CSD_Strategy/ThreadPool3/run_test.pl:
        * examples/CSD_Strategy/ThreadPool3/server_main.cpp:
        * examples/CSD_Strategy/ThreadPool3/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool3/ServerApp.h:
        * examples/CSD_Strategy/ThreadPool4/Callback.idl:
        * examples/CSD_Strategy/ThreadPool4/Callback_i.cpp:
        * examples/CSD_Strategy/ThreadPool4/Callback_i.h:
        * examples/CSD_Strategy/ThreadPool4/ClientTask.cpp:
        * examples/CSD_Strategy/ThreadPool4/ClientTask.h:
        * examples/CSD_Strategy/ThreadPool4/CSD_Test_ThreadPool4.mpc:
        * examples/CSD_Strategy/ThreadPool4/Foo.idl:
        * examples/CSD_Strategy/ThreadPool4/Foo_i.cpp:
        * examples/CSD_Strategy/ThreadPool4/Foo_i.h:
        * examples/CSD_Strategy/ThreadPool4/OrbShutdownTask.cpp:
        * examples/CSD_Strategy/ThreadPool4/OrbShutdownTask.h:
        * examples/CSD_Strategy/ThreadPool4/README:
        * examples/CSD_Strategy/ThreadPool4/run_test.pl:
        * examples/CSD_Strategy/ThreadPool4/server_main.cpp:
        * examples/CSD_Strategy/ThreadPool4/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool4/ServerApp.h:
        * examples/CSD_Strategy/ThreadPool5/Callback.idl:
        * examples/CSD_Strategy/ThreadPool5/Callback_i.cpp:
        * examples/CSD_Strategy/ThreadPool5/Callback_i.h:
        * examples/CSD_Strategy/ThreadPool5/client_main.cpp:
        * examples/CSD_Strategy/ThreadPool5/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool5/ClientApp.h:
        * examples/CSD_Strategy/ThreadPool5/ClientTask.cpp:
        * examples/CSD_Strategy/ThreadPool5/ClientTask.h:
        * examples/CSD_Strategy/ThreadPool5/CSD_Test_ThreadPool5.mpc:
        * examples/CSD_Strategy/ThreadPool5/Foo.idl:
        * examples/CSD_Strategy/ThreadPool5/Foo_i.cpp:
        * examples/CSD_Strategy/ThreadPool5/Foo_i.h:
        * examples/CSD_Strategy/ThreadPool5/FooServantList.cpp:
        * examples/CSD_Strategy/ThreadPool5/FooServantList.h:
        * examples/CSD_Strategy/ThreadPool5/OrbShutdownTask.cpp:
        * examples/CSD_Strategy/ThreadPool5/OrbShutdownTask.h:
        * examples/CSD_Strategy/ThreadPool5/OrbTask.cpp:
        * examples/CSD_Strategy/ThreadPool5/OrbTask.h:
        * examples/CSD_Strategy/ThreadPool5/README:
        * examples/CSD_Strategy/ThreadPool5/run_test.pl:
        * examples/CSD_Strategy/ThreadPool5/server_main.cpp:
        * examples/CSD_Strategy/ThreadPool5/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool5/ServerApp.h:
        * examples/CSD_Strategy/ThreadPool6/client_main.cpp:
        * examples/CSD_Strategy/ThreadPool6/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool6/ClientApp.h:
        * examples/CSD_Strategy/ThreadPool6/CSD_Test_ThreadPool6.mpc:
        * examples/CSD_Strategy/ThreadPool6/Foo.idl:
        * examples/CSD_Strategy/ThreadPool6/Foo_i.cpp:
        * examples/CSD_Strategy/ThreadPool6/Foo_i.h:
        * examples/CSD_Strategy/ThreadPool6/OrbShutdownTask.cpp:
        * examples/CSD_Strategy/ThreadPool6/OrbShutdownTask.h:
        * examples/CSD_Strategy/ThreadPool6/README:
        * examples/CSD_Strategy/ThreadPool6/run_test.pl:
        * examples/CSD_Strategy/ThreadPool6/server_main.cpp:
        * examples/CSD_Strategy/ThreadPool6/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool6/ServerApp.h:
        * performance-tests/CSD_Strategy/TestApps/client_main.cpp:
        * performance-tests/CSD_Strategy/TestApps/ClientApp.cpp:
        * performance-tests/CSD_Strategy/TestApps/ClientApp.h:
        * performance-tests/CSD_Strategy/TestApps/csd_pt_testapps.mpc:
        * performance-tests/CSD_Strategy/TestApps/run_test.pl:
        * performance-tests/CSD_Strategy/TestApps/server_main.cpp:
        * performance-tests/CSD_Strategy/TestApps/ServerApp.cpp:
        * performance-tests/CSD_Strategy/TestApps/ServerApp.h:
        * performance-tests/CSD_Strategy/TestApps/README:
        * performance-tests/CSD_Strategy/TestInf/AppHelper.cpp:
        * performance-tests/CSD_Strategy/TestInf/AppHelper.h:
        * performance-tests/CSD_Strategy/TestInf/AppShutdown.cpp:
        * performance-tests/CSD_Strategy/TestInf/AppShutdown.h:
        * performance-tests/CSD_Strategy/TestInf/CancelledException.idl:
        * performance-tests/CSD_Strategy/TestInf/ClientEngine.cpp:
        * performance-tests/CSD_Strategy/TestInf/ClientEngine.h:
        * performance-tests/CSD_Strategy/TestInf/ClientTask.cpp:
        * performance-tests/CSD_Strategy/TestInf/ClientTask.h:
        * performance-tests/CSD_Strategy/TestInf/csd_pt_testinf.mpc:
        * performance-tests/CSD_Strategy/TestInf/CSD_PT_TestInf_Export.h:
        * performance-tests/CSD_Strategy/TestInf/CustomException.idl:
        * performance-tests/CSD_Strategy/TestInf/FooException.idl:
        * performance-tests/CSD_Strategy/TestInf/OrbRunner.cpp:
        * performance-tests/CSD_Strategy/TestInf/OrbRunner.h:
        * performance-tests/CSD_Strategy/TestInf/OrbShutdownTask.cpp:
        * performance-tests/CSD_Strategy/TestInf/OrbShutdownTask.h:
        * performance-tests/CSD_Strategy/TestInf/OrbTask.cpp:
        * performance-tests/CSD_Strategy/TestInf/OrbTask.h:
        * performance-tests/CSD_Strategy/TestInf/ServantList_T.cpp:
        * performance-tests/CSD_Strategy/TestInf/ServantList_T.h:
        * performance-tests/CSD_Strategy/TestInf/TestAppBase.cpp:
        * performance-tests/CSD_Strategy/TestInf/TestAppBase.h:
        * performance-tests/CSD_Strategy/TestInf/TestAppException.idl:
        * performance-tests/CSD_Strategy/TestInf/TestAppMain.h:
        * performance-tests/CSD_Strategy/TestInf/README:
        * performance-tests/CSD_Strategy/TestServant/csd_pt_testservant.mpc:
        * performance-tests/CSD_Strategy/TestServant/CSD_PT_TestServant_Export.h:
        * performance-tests/CSD_Strategy/TestServant/Foo.idl:
        * performance-tests/CSD_Strategy/TestServant/Foo_ClientEngine.cpp:
        * performance-tests/CSD_Strategy/TestServant/Foo_ClientEngine.h:
        * performance-tests/CSD_Strategy/TestServant/Foo_i.cpp:
        * performance-tests/CSD_Strategy/TestServant/Foo_i.h:
        * performance-tests/CSD_Strategy/TestServant/Foo_Statistics.cpp:
        * performance-tests/CSD_Strategy/TestServant/Foo_Statistics.h:
        * performance-tests/CSD_Strategy/TestServant/README:
        * tests/CSD_Strategy_Tests/README:
        * tests/CSD_Strategy_Tests/Broken/client_main.cpp:
        * tests/CSD_Strategy_Tests/Broken/ClientApp.cpp:
        * tests/CSD_Strategy_Tests/Broken/ClientApp.h:
        * tests/CSD_Strategy_Tests/Broken/CSD_TP_Broken.mpc:
        * tests/CSD_Strategy_Tests/Broken/run_test.pl:
        * tests/CSD_Strategy_Tests/Broken/server_main.cpp:
        * tests/CSD_Strategy_Tests/Broken/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/Broken/ServerApp.h:
        * tests/CSD_Strategy_Tests/TP_Common/AppHelper.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/AppHelper.h:
        * tests/CSD_Strategy_Tests/TP_Common/AppShutdown.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/AppShutdown.h:
        * tests/CSD_Strategy_Tests/TP_Common/CancelledException.idl:
        * tests/CSD_Strategy_Tests/TP_Common/ClientEngine.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/ClientEngine.h:
        * tests/CSD_Strategy_Tests/TP_Common/ClientTask.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/ClientTask.h:
        * tests/CSD_Strategy_Tests/TP_Common/CSD_TP_Test_Export.h:
        * tests/CSD_Strategy_Tests/TP_Common/CSD_TP_Test_Lib.mpc:
        * tests/CSD_Strategy_Tests/TP_Common/CustomException.idl:
        * tests/CSD_Strategy_Tests/TP_Common/FooException.idl:
        * tests/CSD_Strategy_Tests/TP_Common/OrbRunner.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/OrbRunner.h:
        * tests/CSD_Strategy_Tests/TP_Common/OrbShutdownTask.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/OrbShutdownTask.h:
        * tests/CSD_Strategy_Tests/TP_Common/OrbTask.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/OrbTask.h:
        * tests/CSD_Strategy_Tests/TP_Common/ServantList_T.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/ServantList_T.h:
        * tests/CSD_Strategy_Tests/TP_Common/StatisticsHelper.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/StatisticsHelper.h:
        * tests/CSD_Strategy_Tests/TP_Common/TestAppBase.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/TestAppBase.h:
        * tests/CSD_Strategy_Tests/TP_Common/TestAppException.idl:
        * tests/CSD_Strategy_Tests/TP_Common/TestAppMain.h:
        * tests/CSD_Strategy_Tests/TP_Foo_A/CSD_TP_Foo_A_Export.h:
        * tests/CSD_Strategy_Tests/TP_Foo_A/csd_tp_foo_a_lib.mpc:
        * tests/CSD_Strategy_Tests/TP_Foo_A/Foo_A.idl:
        * tests/CSD_Strategy_Tests/TP_Foo_A/Foo_A_ClientEngine.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_A/Foo_A_ClientEngine.h:
        * tests/CSD_Strategy_Tests/TP_Foo_A/Foo_A_i.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_A/Foo_A_i.h:
        * tests/CSD_Strategy_Tests/TP_Foo_A/Foo_A_Statistics.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_A/Foo_A_Statistics.h:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Callback.idl:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Callback_i.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Callback_i.h:
        * tests/CSD_Strategy_Tests/TP_Foo_B/CSD_TP_Foo_B_Export.h:
        * tests/CSD_Strategy_Tests/TP_Foo_B/csd_tp_foo_b_lib.mpc:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B.idl:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_ClientEngine.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_ClientEngine.h:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_i.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_i.h:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_SimpleClientEngine.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_SimpleClientEngine.h:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_Statistics.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B_Statistics.h:
        * tests/CSD_Strategy_Tests/TP_Foo_C/CSD_TP_Foo_C_Export.h:
        * tests/CSD_Strategy_Tests/TP_Foo_C/csd_tp_foo_c_lib.mpc:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C.idl:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_ClientEngine.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_ClientEngine.h:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_cust_op1.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_cust_op1.h:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_cust_op2.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_cust_op2.h:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_cust_op3.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_cust_op3.h:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_cust_op4.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_cust_op4.h:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_cust_op5.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_cust_op5.h:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_Custom_ClientEngine.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_Custom_ClientEngine.h:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_Custom_Proxy.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_Custom_Proxy.h:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_i.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_i.h:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_Statistics.cpp:
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_Statistics.h:
        * tests/CSD_Strategy_Tests/TP_Test_1/client_main.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_1/ClientApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_1/ClientApp.h:
        * tests/CSD_Strategy_Tests/TP_Test_1/CSD_TP_Test_1.mpc:
        * tests/CSD_Strategy_Tests/TP_Test_1/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_1/server_main.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_1/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_1/ServerApp.h:
        * tests/CSD_Strategy_Tests/TP_Test_2/client_main.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_2/ClientApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_2/ClientApp.h:
        * tests/CSD_Strategy_Tests/TP_Test_2/CSD_TP_Test_2.mpc:
        * tests/CSD_Strategy_Tests/TP_Test_2/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_2/server_main.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_2/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_2/ServerApp.h:
        * tests/CSD_Strategy_Tests/TP_Test_3/client_main.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_3/ClientApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_3/ClientApp.h:
        * tests/CSD_Strategy_Tests/TP_Test_3/CSD_TP_Test_3.mpc:
        * tests/CSD_Strategy_Tests/TP_Test_3/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_3/server_main.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_3/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_3/ServerApp.h:
        * tests/CSD_Strategy_Tests/TP_Test_4/client_main.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_4/ClientApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_4/ClientApp.h:
        * tests/CSD_Strategy_Tests/TP_Test_4/CSD_TP_Test_4.mpc:
        * tests/CSD_Strategy_Tests/TP_Test_4/README:
        * tests/CSD_Strategy_Tests/TP_Test_4/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_4/server_main.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_4/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_4/ServerApp.h:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/client.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/CSD_TP_Test_Dynamic.mpc:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/Hello.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/Hello.h:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/README:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/server.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/svc.conf:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/Test.idl:
        * tests/CSD_Strategy_Tests/TP_Test_Static/client_main.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Static/ClientApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Static/ClientApp.h:
        * tests/CSD_Strategy_Tests/TP_Test_Static/CSD_TP_Test_Static.mpc:
        * tests/CSD_Strategy_Tests/TP_Test_Static/README:
        * tests/CSD_Strategy_Tests/TP_Test_Static/run_test.pl:
        * tests/CSD_Strategy_Tests/TP_Test_Static/server_main.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Static/ServerApp.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Static/ServerApp.h:
        * tests/CSD_Strategy_Tests/TP_Test_Static/svc.conf:

          All of the files above are part of the examples, tests and performance
          tests added for the CSD feature.

Tue Oct 18 13:23:21 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * docs/ec_options.html: Finally updated documentation to
          include information about the "new" queue-full options.
          See entry from "Thu Aug 25 11:00:47 2005  Chris Cleeland" for
          more info.

Tue Oct 18 10:31:38 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:

          Updated TAO multicast service ID enumerator names to match
          new names in tao/objectid.h.

Tue Oct 18 09:34:53 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp (setup_multicast):
        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp (init_new_naming):
        * orbsvcs/orbsvcs/Trader/Trading_Loader.cpp
          (init_multicast_server):

          Updated TAO multicast service ID enumerator names to match
          new names in tao/objectid.h.

Tue Oct 18 09:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_global.cpp:
          Removed duplicate space

Tue Oct 18 08:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
        * orbsvcs/orbsvcs/AV/RTCP_Packet.cpp:
          Fixed warnings in MinGW build

Tue Oct 18 00:19:41 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/ORB_Core.cpp (init):

          Corrected minor typo in previous commit.

Tue Oct 18 00:08:30 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/SystemException.cpp:
        * tao/SystemException.inl:

          Moved concrete SystemException constructors out of line again.
          The intended footprint decreases were unfortunately not seen
          across all platforms.

        * tao/ORB.h (resolve_service):

          Removed unnecessary return type and emulated exception
          parameter.

        * tao/ORB.cpp (resolve_service):

          Use snprintf() to simplify integer-to-string conversion and
          string concatenation.  Thanks to Jiang Wei <jw dot tao at sduept
          dot com> for providing a patch.

          Optimized to only determine multicast port if multicast default
          initial reference is enabled.

          Removed unused "return_value" variable.

          (resolve_initial_references):

          Updated calls to resolve_service() to reflect new signature and
          void return type.

        * tao/ORB_Core.cpp (init):

          Simplified code that sets Name Service default initial
          reference.

          Updated names of multicast-capable service IDs to match the new
          names in tao/objectid.h.

        * tao/objectid.h (TAO_MCAST_SERVICEID):

          Addressed global namespace pollution by placing this enumeration
          within the TAO namespace.  Also prepended each service ID
          enumerator with "MCAST_" to further reduce potential internal
          TAO namespace pollution.

        * tao/params.h:
        * tao/params.i:

          TAO_MCAST_SERVICEID is now TAO::MCAST_SERVICEID, as changed in
          tao/objectid.h.

Tue Oct 18 06:45:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/DII_Invocation.h:
          Added forward declaration of ParameterList

Mon Oct 17 14:43:18 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated due to tao/Messaging/* refactor.

Mon Oct 17 14:42:09 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/examples/Notify/Lanes/Makefile.am:
        * orbsvcs/tests/Notify/Basic/Makefile.am:
        * orbsvcs/tests/Notify/Blocking/Makefile.am:
        * orbsvcs/tests/Notify/Destroy/Makefile.am:
        * orbsvcs/tests/Notify/Discarding/Makefile.am:
        * orbsvcs/tests/Notify/Driver/Makefile.am:
        * orbsvcs/tests/Notify/MT_Dispatching/Makefile.am:
        * orbsvcs/tests/Notify/Ordering/Makefile.am:
        * orbsvcs/tests/Notify/Reconnecting/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Makefile.am:

          Regenerated due to notification_serv being added to notifytest
          base project.

Mon Oct 17 12:45:57 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * performance-tests/POA/Demux/Makefile.am:
        * performance-tests/RTCorba/Oneways/Reliable/Makefile.am:
        * performance-tests/RTCorba/Thread_Pool/Makefile.am:

          Regenerated.

        * performance-tests/POA/Demux/Demux.mpc:
        * performance-tests/RTCorba/Oneways/Reliable/Reliable.mpc:
        * performance-tests/RTCorba/Thread_Pool/Thread_Pool.mpc:

          Add/tweak *_IDL projects for compiling *.idl files.

Mon Oct 17 12:33:03 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * orbsvcs/orbsvcs/ec_typed_events_idl.mpb:

          Set idlflags to be used when compiling Cos TypedEvent IDL files.
          Reset idlflags so they won't be duplicated when compiling plain
          CosEvent IDL files.

Mon Oct 17 18:03:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Invocation_Base.h:
          Removed some not needed forward declarations

Mon Oct 17 09:52:05 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * Makefile.am:

          Enabled building "performance-tests" subdirectory.

        * configure.ac:

          Configure all Makefile.am's in performance-tests subdirectories.

        * performance-tests/Makefile.am:
        * performance-tests/Anyop/Makefile.am:
        * performance-tests/Callback/Makefile.am:
        * performance-tests/Cubit/Makefile.am:
        * performance-tests/Cubit/TAO/Makefile.am:
        * performance-tests/Cubit/TAO/DII_Cubit/Makefile.am:
        * performance-tests/Cubit/TAO/IDL_Cubit/Makefile.am:
        * performance-tests/Cubit/TAO/MT_Cubit/Makefile.am:
        * performance-tests/Latency/Makefile.am:
        * performance-tests/Latency/AMH_Single_Threaded/Makefile.am:
        * performance-tests/Latency/AMI/Makefile.am:
        * performance-tests/Latency/Collocation/Makefile.am:
        * performance-tests/Latency/DII/Makefile.am:
        * performance-tests/Latency/DSI/Makefile.am:
        * performance-tests/Latency/Deferred/Makefile.am:
        * performance-tests/Latency/Single_Threaded/Makefile.am:
        * performance-tests/Latency/Thread_Per_Connection/Makefile.am:
        * performance-tests/Latency/Thread_Pool/Makefile.am:
        * performance-tests/Memory/Makefile.am:
        * performance-tests/Memory/IORsize/Makefile.am:
        * performance-tests/Memory/Single_Threaded/Makefile.am:
        * performance-tests/POA/Makefile.am:
        * performance-tests/POA/Create_Reference/Makefile.am:
        * performance-tests/POA/Demux/Makefile.am:
        * performance-tests/POA/Implicit_Activation/Makefile.am:
        * performance-tests/POA/Object_Creation_And_Registration/Makefile.am:
        * performance-tests/Pluggable/Makefile.am:
        * performance-tests/Protocols/Makefile.am:
        * performance-tests/RTCorba/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Common/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/Makefile.am:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/Makefile.am:
        * performance-tests/RTCorba/Oneways/Makefile.am:
        * performance-tests/RTCorba/Oneways/Reliable/Makefile.am:
        * performance-tests/RTCorba/Thread_Pool/Makefile.am:
        * performance-tests/Sequence_Latency/Makefile.am:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/Makefile.am:
        * performance-tests/Sequence_Latency/AMI/Makefile.am:
        * performance-tests/Sequence_Latency/DII/Makefile.am:
        * performance-tests/Sequence_Latency/DSI/Makefile.am:
        * performance-tests/Sequence_Latency/Deferred/Makefile.am:
        * performance-tests/Sequence_Latency/Single_Threaded/Makefile.am:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Makefile.am:
        * performance-tests/Sequence_Latency/Thread_Pool/Makefile.am:
        * performance-tests/Throughput/Makefile.am:

          New files.

        * performance-tests/Callback/Callback.mpc:
        * performance-tests/Cubit/TAO/IDL_Cubit/IDL_Cubit.mpc:
        * performance-tests/Cubit/TAO/MT_Cubit/MT_Cubit.mpc:
        * performance-tests/Latency/AMH_Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Latency/AMI/AMI.mpc:
        * performance-tests/Latency/DII/DII.mpc:
        * performance-tests/Latency/Deferred/Deferred.mpc:
        * performance-tests/Latency/Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Latency/Thread_Per_Connection/Thread_Per_Connection.mpc:
        * performance-tests/Latency/Thread_Pool/Thread_Pool.mpc:
        * performance-tests/Memory/IORsize/Memory_IORsize.mpc:
        * performance-tests/Memory/Single_Threaded/Memory_Growth.mpc:
        * performance-tests/POA/Implicit_Activation/Implicit_Activation.mpc:
        * performance-tests/Pluggable/Pluggable.mpc:
        * performance-tests/Protocols/Protocols.mpc:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Sequence_Latency/AMI/ami.mpc:
        * performance-tests/Sequence_Latency/DII/DII.mpc:
        * performance-tests/Sequence_Latency/DSI/DSI.mpc:
        * performance-tests/Sequence_Latency/Deferred/Deferred.mpc:
        * performance-tests/Sequence_Latency/Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Thread_Per_Conn.mpc:
        * performance-tests/Sequence_Latency/Thread_Pool/Thread_Pool.mpc:
        * performance-tests/Throughput/Throughput.mpc:

          Add *_IDL projects for compiling *.idl files.  This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

Mon Oct 17 09:24:13 2005  Paul Calabrese  <calabrese_p@ociweb.com>

        * docs/ec_options.html:

          Rename the -q option's parameter from servant_name to ec_object_id.

Mon Oct 17 13:31:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orbconf.h:
        * tao/Messaging/ExceptionHolder*.*:
        * tao/Messaging/OldExceptionHolder*.*:
          Added also the new ExceptionHolder. Old and new are guarded with
          TAO_HAS_DEPRECATED_EXCEPTION_HOLDER. This is enabled at this
          moment until the new mapping is fully working, at that moment
          we remove this define from orbconf.h and it is up to the user
          to enable the old mapping

Mon Oct 17 11:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/*:
          Moved the ExceptionHolder to its own file (OldExceptionHolder)
          the latest CORBA spec describe an updated ExceptionHolder
          and this impacts the AMI generated but also user written
          code. Working on this new spec but we will keep the old
          mapping supported until x.5.1 has come out. By moving
          this to its own file we can easier support the new one

Mon Oct 17 11:19:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/*:
          Regenerated all files with the latest version of the idl
          compiler.

Mon Oct 17 10:20:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/TAO_PI.pc.in:
        * tao/PI_Server/TAO_PI_Server.pc.in:
          Fixed incorrect libs. Thanks to Francesco Salvestrini
          <f dot salvestrini at nextworks dot it> for reporting this.
          This fixes bugzilla bug 2267

Mon Oct 17 10:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/CosEvent/Basic/Shutdown.cpp:
          Fixed MinGW build warnings

Mon Oct 17 07:11:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * rules.tao.GNU:
          Prevent building with emulated exceptions

Mon Oct 17 07:07:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/Service.h:
        * orbsvcs/orbsvcs/CosNotification.mpc:
          Service should be in CosNotification_Serv. Thanks for JT
          for notificing this

Sun Oct 16 12:05:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.cpp:
          Fixed signed/unsigned warning

Sat Oct 15 00:42:36 2005  Steve Totten  <totten_s@ociweb.com>

        * orbsvcs/examples/CosEC/TypedSimple/Consumer.cpp:
        * orbsvcs/examples/CosEC/TypedSimple/Country.idl:
        * orbsvcs/examples/CosEC/TypedSimple/Country.idl.for_ifr:
        * orbsvcs/examples/CosEC/TypedSimple/Country_i.cpp:
        * orbsvcs/examples/CosEC/TypedSimple/Supplier.cpp:
        * orbsvcs/examples/CosEC/TypedSimple/run_test.pl:

          Merge changes from OCI TAO 1.4a to fix build errors for exceptions=0
          builds, remove the hard-coded repository IDs and the unneeded pragma
          prefix from this test, add various missing #includes for Windows
          builds, disable use of IFR persistence, add a new test script for
          this example, and make some changes to Consumer.cpp to make the
          script reliable.  Thanks to Paul Calabrese <calabrese_p@ociweb.com>
          and Chad Elliott <elliott_c@ociweb.com> for originating these
          changes.

Fri Oct 14 09:35:33 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerate.

        * orbsvcs/orbsvcs/CosEvent.mpc:

          Split out separate project for generating IDL files.

        * orbsvcs/orbsvcs/ec_typed_event.mpb:

          Remove IDL Files section from project, they've been moved
          to ec_typed_event_idl.mpb.

        * orbsvcs/orbsvcs/ec_typed_event_idl.mpb:

          New base project containing Typed Event IDL files.

Fri Oct 14 11:25:17 2005  Paul Calabrese  <calabrese_p@ociweb.com>

          Merge some changes from OCI TAO 1.4a that are mostly
          documentation.

        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/driver/drv_args.cpp:

          Move the documentation for the -g option from the front end
          to the back end.  This causes it to not be in the help message
          of other IDL processors (like tao_ifr) as it is specific to
          tao_idl.
          Add an error check to the processing of -t (avoids a core if
          no argument is passed).

        * docs/interfacerepo/tao_ifr.html:

          Document some missing options.

        * orbsvcs/Event_Service/Event_Service.h:
        * orbsvcs/Event_Service/Event_Service.cpp:

          Rename the servant_name variable and documentation to object_id.

        * orbsvcs/orbsvcs/Event/EC_Kokyu_Factory.cpp:

          Fix the scope settings for kokyu scheduling.

Fri Oct 14 14:45:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/ExceptionList.cpp:
          Use prefix increment/decrement and store the value after decrement
          in a temporarily variable and use that check whether to delete
          ourself to prevent a possible double deletion.

Fri Oct 14 14:07:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Notify/Basic/run_test.pl:
          When the exe can't be spawned break directly instead of waiting
          for a minute

Fri Oct 14 08:55:07 2005  Ciju John  <john_c@ociweb.com>

        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Acceptor.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.cpp:

        Added new IIOP specific option 'reuse_addr' which would be
        provided to the -ORBEndpoint option to control socket level
        option SO_REUSEADDR being set/unset.

Fri Oct 14 12:13:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_operation/ami_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:
          64bit fixes

Fri Oct 14 09:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        From James Megquier <jmegq at radiance dot com>

        * orbsvcs/orbsvcs/Notify/Service.h:
          This should be in the notification project, removed include of
          PortableServer, just add some forward declarations, this is
          an interface class, no need to pull in portableserver library

        * orbsvcs/orbsvcs/CosNotification.mpc:
          Moved service to Notification project

        * orbsvcs/orbsvcs/Notify/Property.h:
          Added typedef for ULong property

Thu Oct 13 13:12:12 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/examples/ImR/Combined_Service/ImR_Combined_Service.mpc:

          Add synthetic dependencies for the gnuace build so that IDL-
          generated files used by more than one project won't be compiled
          multiple times simultaneously (with parallel builds), which may
          result in corrupted object files.  Thanks to Simon Massey for
          pointing out this problem in a scoreboard build.

Thu Oct 13 12:26:47 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/ORB_Core.cpp:

          Minor coding convention updates.  Class members outside of a
          base member initializer list should be referenced with the
          "this" pointer (e.g. this->client_request_interceptor_adapter_).

        * tao/Pseudo_VarOut_T.h:

          Added unimplemented copy constructor and assignment operator
          that accept a TAO_Base_var parameter.  Prevents invalid
          widening.

        * tao/Pseudo_VarOut_T.inl:

          Explicitly initialize TAO_Base_var in the copy constructor
          base member initializer list.

        * tao/SystemException.cpp:
        * tao/SystemException.inl:

          Inlined concrete system exception constructors and static
          _tao_any_destructor() method.  Since they are small, a good
          footprint decrease is achieved by doing so, especially since
          only a few of the concrete SystemExceptions are used within
          TAO.

        * tao/UserException.cpp:
        * tao/UserException.inl:

          Likewise.

          Moved _tao_type() method of out of line.  Since it is virtual
          inlining can cause RTTI related problems when using g++ 4.x's
          "-fvisibility-inlines-hidden" feature.

        * tao/TSS_Resources.cpp:

          Do not use "this" pointer in base member initializer list.  It
          is not guaranteed to be available until after base member
          initialization is completed.

        * tao/TSS_Resources.h:

          Minor include directive reorganization.

        * tao/PI/ClientRequestInterceptor_Adapter_Impl.h:

          Cosmetic update.

        * tao/PI/ClientRequestInterceptor_Adapter_Impl.cpp:
        * tao/PI/ClientRequestInterceptor_Factory_Impl.cpp:

          Corrected ACE_RCSID macro arguments.

Thu Oct 13 12:03:05 2005  Steve Totten  <totten_s@ociweb.com>:

        * orbsvcs/orbsvcs/CosEvent/CEC_DynamicImplementation.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.cpp:

          Applied several changes from OCI's TAO 1.4a release to fix problems
          in the Typed Event Channel implementation.  The primary fixes are to
          properly handle consumer/supplier disconnects when using typed event
          channels, and to properly deal with unresponsive push consumers when
          the reactive consumer control is used.  Also fixed some memory
          leaks.  Most of these changes originated from Jonathon Astle
          <jon@astle45.fsnet.co.uk> and Paul Calabrese
          <calabrese_p@ociweb.com>.

Thu Oct 13 10:06:22 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Any/Recursive/client.cpp:

          Added recursive union test case.

Thu Oct 13 11:54:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        From James Megquier <jmegq at radiance dot com>
        * orbsvcs/orbsvcs/Notify/Service.{h,cpp}:
          Added destructor to fix runtime gcc4 problems. Fixes bugzilla
          2262

        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/Makefile.am:
          Added new cpp file

Wed Oct 12 19:26:48 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * docs/notification/reliability.html:

          Fix library name in service config file examples.

          Fix formatting of NotifyExt.inl excerpts.

Wed Oct 12 12:47:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_Request_Muxing/server.cpp:
          Run the orb 3 seconds instead of 1 and print out how many
          messages we expect so that it is easy to see how many
          messages we didn't receive.

Wed Oct 12 10:53:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.{h,cpp,i}:
        * tao/Transport_Queueing_Strategies.{h,cpp}:
          Added new flush strategy. For asynchronous calls we now have
          the following behaviour:
          - Normal oneways are not explicitly buffered, but when send
            returns EWOULDBLOCK we buffer the message and schedule for
            output, we just send the data later and don't explicitly
            flush things, we return control directly to the app
          - Oneways with SYNC_WITH_TRANSPORT, SYNC_WITH_SERVER and
            SYNC_WITH_TARGET, we don't explicitly buffer but when
            send returns EWOULDBLOCK we buffer things, but we do
            then explicitly flush things
          - When SYNC_NONE is specified, this is the same as
            TAO::SYNC_EAGER_BUFFERING and we do buffer then things
            explicitly

        * tests/Reliable_Oneways/client.cpp:
          After doing all calls run the orb for 3 seconds, this way at
          least all queues are flushed


Wed Oct 12 09:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/UIOP_Transport.cpp:
        * tao/Strategies/SCIOP_Transport.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
          Remove not needed include of tao/Sync_Strategies.h

Wed Oct 12 09:06:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Sync_Strategies.{h,cpp}:
        * tao/Transport_Queueing_Strategies.{h,cpp}:
          Renamed Sync_Strategies to Transport_Queueing_Strategies, this is
          what it are, and there was already a todo that a rename should be
          done. Also use bool instead of int where usable and there is no
          need to export these classes.

        * tao/Makefile.am:
        * tao/tao.mpc:
        * tao/ORB_Core.{h,cpp,i}:
        * tao/Stub.{h,cpp}:
        * tao/Transport.{h,cpp}:
          Updated for change above, also updated these files to talk about
          Transport Queueing Strategies

Wed Oct 12 08:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * rules.tao.GNU:
          Just for some hours disabled no exception check, the performance
          stats use no exceptions, if the stats are back to normal I will
          enable this check again

Wed Oct 12 08:37:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/performance-tests/RTEvent/lib/Servant_var.h:
        * orbsvcs/examples/Notify/Federation/Gate/Gate.h:
          Fixed fuzz check

Wed Oct 12 08:33:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * rules.tao.GNU:
          Emulated exception macros are not maintained anymore, so it
          is just not safe to use them, so when exceptions=0, we output
          an error about this and refer to the NEWS file.

Wed Oct 12 07:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/DIOP_Transport.cpp:
        * tao/Strategies/SHMIOP_Transport.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Transport.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:
          Remove not needed include of tao/Sync_Strategies.h

Wed Oct 12 03:59:27 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_union/discriminant_ci.cpp:

          In the generated body of the _default() method for a
          union, which sets the discriminator to its default
          value (the _default() method is not generated unless
          the discriminator can have a valid default value),
          added a call to _reset(), which will free memory
          allocated for the existing active member. The former
          behavior, without the call to _reset(), was producing
          a memory leak in many cases when _default() is called
          on an instantiated union. Thanks to Georg Lohrer
          <news@tropezien.de> for reporting the problem.

        * TAO_IDL/be/be_visitor_union/union_cs.cpp:

          Minor change to generated code formatting.

Tue Oct 11 22:23:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * tao/IIOP_Connection_Handler.cpp:
          Fixed the performance problem.
          Simplifications sometimes become over-simplifications:-(

Tue Oct 11 08:33:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * tao/IIOP_Acceptor.cpp:
          Fix to counter problems with IPv4-compatible IPv6 addresses.

Tue Oct 11 01:24:45 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        From James Megquier <jmegq at radiance dot com>
        * orbsvcs/orbsvcs/AV/AV_Core.h:
        * orbsvcs/orbsvcs/Notify/Properties.h:
        * orbsvcs/orbsvcs/Notify/RT_Properties.h:
        * orbsvcs/tests/Notify/lib/LookupManager.h:

          Declare exported (i.e. default visibility) singleton templates
          prior to typedefs that reference  them.  Prevents g++ 4.0 from
          silently making their visibility hidden.  [Bug 2260]

Tue Oct 11 07:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI_Timeouts/timeout_client.cpp:
          Added casts to unsigned long to silence compiler warnings

Tue Oct 11 07:10:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Sync_Strategies.cpp:
          Changed the default for flush for TAO_Transport_Sync_Strategy to
          false. This means that when an application does oneway calls or
          AMI calls, we only buffer at the moment the send block and we
          schedule the transport for output but don't do a forced flush
          at that moment. We just control to the app and send out the data
          later when the socket is free again.

Mon Oct 10 21:15:45 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/include/drv_extern.h:

          Added some commonly used include paths to the list that is passed
          by the IDL compiler to the preprocessor, and to its own
          internal list of include paths. Some are necessary to find
          canonical IDL files without requiring command line include
          paths (the include path to find orb.idl was already added
          internally in the IDL compiler), while others are paths to
          files commonly included in applications. The current order
          of include paths is:

          1. $ACE_ROOT/TAO
          2. $ACE_ROOT/TAO/tao
          3. -I command line options
          4. $ACE_ROOT/TAO/orbsvcs
          5. $ACE_ROOT/TAO/CIAO
          6. $ACE_ROOT/TAO/CIAO/ciao

          The last 3 can be overridden by the user, by passing in alternate
          paths ahead of these 3 on the command line, but this practice
          is almost sure to cause link problems.

Mon Oct 10 19:37:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Codeset/UTF16_BOM_Factory.cpp:
        * tao/Codeset/UTF16_BOM_Translator.cpp:
          Changed layout of some debug statements to have the same
          formatting as the others in TAO

Mon Oct 10 07:13:58 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/IFR_Service/IFR_Service.mpc:

          Partially revert:
          Sun Oct  9 14:14:01 2005  J.T. Conklin  <jtc@acorntoolworks.com>

          Add $(TAO_ROOT)/orbsvcs/IFR_Service back to includes definition
          for TAO_IFR_EXE project.

Mon Oct 10 13:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI_Timeouts/timeout_client.{h,cpp}:
          Fixed 64bit conversion warnings

Mon Oct 10 13:26:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/AVStreams/Modify_QoS/sender.cpp:
        * orbsvcs/tests/AVStreams/Pluggable/ftp.cpp:
        * orbsvcs/tests/AVStreams/Pluggable/server.cpp:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/TimeStamp.cpp:
          Fixed 64bit conversion warningw

Mon Oct 10 13:13:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_valuetype/arglist.cpp:
          Fixed 64bit conversion warning

        * tao/ORB_Core.cpp (init):
          Fixed 64bit conversion warnings when setting sock_rcvbuf_size
          and sock_sndbuf_size

Mon Oct 10 11:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport.cpp:
          Added missing return

Mon Oct 10 10:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_AMI/run_test.pl:
          Perl script for running this test.

        * tests/Big_AMI/README:
          Short readme

Mon Oct 10 10:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Quoter/Quoter.idl:
          Fixed include

Mon Oct 10 10:23:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp (_tao_decode):
          Take over the version of the source cdr. For example the
          (de)marshaling of a wstring is dependent on the GIOP version,
          it can be that we get a 1.1 version to decode, by default the
          version is 1.2 and when we don't take over the version number
          we try to decode a 1.1 version streams as 1.2 version which
          will fail. When we take over the version we correctly decode
          the stream later as 1.1. Thanks to Lothar Werzinger
          <lothar at tradescape dot biz> for reporting this issue
          and supply a test case. This fixes the Codec test in our
          daily builds.

Mon Oct 10 06:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport.{h,cpp}:
          Refactored send_message_shared_i. This method contains now
          just a switch to check for message_semantics and for asynchronous
          calls it now calls the new method send_asynchronous_message_i

Sun Oct  9 14:38:12 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/Quoter/Makefile.am:
        * examples/Simulator/Event_Supplier/Makefile.am:
        * orbsvcs/IFR_Service/Makefile.am:
        * orbsvcs/examples/RtEC/Kokyu/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:

          Regenerate with recent *.mpc file changes.

Sun Oct  9 14:14:01 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/IFR_Service/IFR_Service.mpc:

          Removed includes definitions pointing to $(TAO_ROOT) and
          $(TAO_ROOT)/orbsvcs/IFR_Service.  These are already
          obtained from the base projects we derive from.

          Set TAO_IDL_INCLUDE_DIR to $(includedir)/tao for automake
          builds so end-user's won't have to set ACE_ROOT/TAO_ROOT
          to run the installed executable.

Sun Oct  9 08:16:17 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/examples/RtEC/Kokyu/RtECKokyu.mpc:
        * orbsvcs/orbsvcs/FtRtEvent.mpc:

          Removed includes definitions pointing to directories under
          $(TAO_ROOT)/orbsvcs.  This appears no longer to be needed,
          all headers are specified relative to $(TAO_ROOT)/orbsvcs.

Sat Oct  8 18:43:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Codec/client.cpp:
        * tests/Codec/test.idl:
          Added a wstring to the struct we encode/decode, this fails at
          this moment, working on a fix, but this at least demonstrates
          the problem

Sat Oct  8 08:18:29 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.mpc:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.mpc:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.mpc:
        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/Colocated_Roundtrip.mpc:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/Federated_Roundtrip.mpc:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/RTCORBA_Baseline.mpc:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/RTCORBA_Callback.mpc:
        * orbsvcs/performance-tests/RTEvent/Roundtrip/Roundtrip.mpc:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/TCP_Baseline.mpc:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Infrastructure_Controlled.mpc:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/LoadMonitorCPU.mpc:

          Remove includes definitions pointing to $(TAO_ROOT)/orbsvcs.
          This is already obtained from the base projects we derive from.

        * orbsvcs/tests/FT_App/FT_App.mpc:

          Remove includes definitions pointing to $(TAO_ROOT).
          This is already obtained from the base projects we derive from.

Sat Oct  8 07:50:48 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/Simulator/Event_Supplier/Event_Supplier.mpc:
        * examples/Quoter/Quoter.mpc:

          Remove includes and idlflags definitions pointing to
          ../../orbsvcs/orbsvcs.  This hasn't been right since we
          normalized all orbsvcs header files to be included with
          "orbsvcs/foo.h".  The correct settings of ../../orbsvcs is
          already obtained from the base projects we derive from.

Fri Oct  7 16:40:05 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/Bug_2248_Regression/Server_Request_Interceptor.cpp:

          Another day, another emulated exception macro problem.

Fri Oct  7 14:03:54 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * docs/tutorials/Quoter/AMI/Makefile.am:
        * docs/tutorials/Quoter/Event_Service/Makefile.am:
        * docs/tutorials/Quoter/On_Demand_Activation/Makefile.am:
        * docs/tutorials/Quoter/RT_Event_Service/Makefile.am:
        * docs/tutorials/Quoter/idl/Makefile.am:
        * examples/AMH/Sink_Server/Makefile.am:
        * examples/AMI/FL_Callback/Makefile.am:
        * examples/Advanced/ch_3/Makefile.am:
        * examples/Buffered_AMI/Makefile.am:
        * examples/Buffered_Oneways/Makefile.am:
        * examples/Callback_Quoter/Makefile.am:
        * examples/Content_Server/AMI_Iterator/Makefile.am:
        * examples/Content_Server/AMI_Observer/Makefile.am:
        * examples/Content_Server/SMI_Iterator/Makefile.am:
        * examples/Event_Comm/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.am:
        * examples/Load_Balancing/Makefile.am:
        * examples/Load_Balancing_persistent/Makefile.am:
        * examples/Logging/Makefile.am:
        * examples/OBV/Typed_Events/Makefile.am:
        * examples/POA/DSI/Makefile.am:
        * examples/POA/Default_Servant/Makefile.am:
        * examples/POA/Forwarding/Makefile.am:
        * examples/POA/Generic_Servant/Makefile.am:
        * examples/POA/TIE/Makefile.am:
        * examples/Persistent_Grid/Makefile.am:
        * examples/PluggableUDP/tests/Basic/Makefile.am:
        * examples/PluggableUDP/tests/Performance/Makefile.am:
        * examples/PluggableUDP/tests/SimplePerformance/Makefile.am:
        * examples/Quoter/Makefile.am:
        * examples/RTCORBA/Activity/Makefile.am:
        * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile.am:
        * examples/RTScheduling/MIF_Scheduler/Makefile.am:
        * examples/Simple/bank/Makefile.am:
        * examples/Simple/chat/Makefile.am:
        * examples/Simple/echo/Makefile.am:
        * examples/Simple/grid/Makefile.am:
        * examples/Simple/time/Makefile.am:
        * examples/Simple/time-date/Makefile.am:
        * examples/Simulator/Event_Supplier/Makefile.am:
        * examples/TypeCode_Creation/Makefile.am:
        * examples/ior_corbaloc/Makefile.am:
        * examples/mfc/Makefile.am:
        * interop-tests/wchar/Makefile.am:
        * orbsvcs/ImplRepo_Service/Makefile.am:
        * orbsvcs/examples/CosEC/Factory/Makefile.am:
        * orbsvcs/examples/CosEC/TypedSimple/Makefile.am:
        * orbsvcs/examples/FaultTolerance/RolyPoly/Makefile.am:
        * orbsvcs/examples/ImR/Advanced/Makefile.am:
        * orbsvcs/examples/ImR/Combined_Service/Makefile.am:
        * orbsvcs/examples/LoadBalancing/Makefile.am:
        * orbsvcs/examples/ORT/Makefile.am:
        * orbsvcs/examples/Security/Send_File/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/lib/Makefile.am:
        * orbsvcs/tests/BiDir_CORBALOC/Makefile.am:
        * orbsvcs/tests/Bug_1395_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2247_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2248_Regression/Makefile.am:
        * orbsvcs/tests/EC_Custom_Marshal/Makefile.am:
        * orbsvcs/tests/FT_App/Makefile.am:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Makefile.am:
        * orbsvcs/tests/FaultTolerance/IOGR/Makefile.am:
        * orbsvcs/tests/HTIOP/AMI/Makefile.am:
        * orbsvcs/tests/HTIOP/BiDirectional/Makefile.am:
        * orbsvcs/tests/HTIOP/Hello/Makefile.am:
        * orbsvcs/tests/IOR_MCast/Makefile.am:
        * orbsvcs/tests/ImplRepo/Makefile.am:
        * orbsvcs/tests/ImplRepo/scale/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Application_Test/Makefile.am:
        * orbsvcs/tests/Interoperable_Naming/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/Makefile.am:
        * orbsvcs/tests/Miop/McastHello/Makefile.am:
        * orbsvcs/tests/Notify/Blocking/Makefile.am:
        * orbsvcs/tests/Notify/Discarding/Makefile.am:
        * orbsvcs/tests/Notify/MT_Dispatching/Makefile.am:
        * orbsvcs/tests/Notify/Ordering/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/lib/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile.am:
        * orbsvcs/tests/Redundant_Naming/Makefile.am:
        * orbsvcs/tests/Security/BiDirectional/Makefile.am:
        * orbsvcs/tests/Security/Big_Request/Makefile.am:
        * orbsvcs/tests/Security/Callback/Makefile.am:
        * orbsvcs/tests/Security/Crash_Test/Makefile.am:
        * orbsvcs/tests/Security/MT_IIOP_SSL/Makefile.am:
        * orbsvcs/tests/Security/MT_SSLIOP/Makefile.am:
        * orbsvcs/tests/Security/Secure_Invocation/Makefile.am:
        * orbsvcs/tests/Security/ssliop_corbaloc/Makefile.am:
        * orbsvcs/tests/Simple_Naming/Makefile.am:
        * orbsvcs/tests/Trading/Makefile.am:
        * orbsvcs/tests/ior_corbaname/Makefile.am:

          Regenerate with recent MPC and base project changes.

Fri Oct  7 07:11:29 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/LogActivator.h:

          Changed header inclusion guard macro name to match file name.

Fri Oct  7 07:07:28 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * docs/tutorials/Quoter/Event_Service/Quoter_Event_Service.mpc:
        * docs/tutorials/Quoter/RT_Event_Service/Quoter_RT_Event_Service.mpc:

          Changed *idl project to inherit from anytypecode.

Fri Oct  7 10:43:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Sync_Strategies.h:
          Document must_flush argument

Fri Oct  7 10:35:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_AMI/client.cpp:
          Added a check that after sending the AMI requests we shouldn't
          have received any reply at that moment. If so, we output an
          error

Fri Oct  7 07:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_Request_Muxing/Payload_Receiver.cpp:
          Removed RefCountServantBase and made the count an Atomic_Op
          to make sure it does get incremented correctly in a MT situation

Thu Oct  6 10:03:16 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * Makefile.am:

          Enabled building "docs" subdirectory.

        * docs/tutorials/Quoter/Naming_Service/Makefile.am:
        * docs/tutorials/Quoter/Simple/Makefile.am:
        * docs/tutorials/Quoter/Simple/Client/Makefile.am:
        * docs/tutorials/Quoter/Simple/Impl-Repo/Makefile.am:
        * docs/tutorials/Quoter/Simple/ImprovedServer/Makefile.am:
        * docs/tutorials/Quoter/Simple/Persistent/Makefile.am:
        * docs/tutorials/Quoter/Simple/Server/Makefile.am:

          Hand tweaks to _CPPFLAGS to find Stub/Skeleton headers in ../idl

          directory.

        * docs/tutorials/Quoter/AMI/Makefile.am:
        * docs/tutorials/Quoter/Event_Service/Makefile.am:
        * docs/tutorials/Quoter/On_Demand_Activation/Makefile.am:
        * docs/tutorials/Quoter/RT_Event_Service/Makefile.am:

          Regenerate.

        * docs/tutorials/Quoter/AMI/Quoter_AMI.mpc:
        * docs/tutorials/Quoter/Event_Service/Quoter_Event_Service.mpc:
        * docs/tutorials/Quoter/On_Demand_Activation/Quoter_On_Demand_Activation.mpc:
        * docs/tutorials/Quoter/RT_Event_Service/Quoter_RT_Event_Service.mpc:

          Add "*idl" project for compiling *.idl files.

Thu Oct  6 15:44:13 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/Bug_2248_Regression/Server_Request_Interceptor.h:

          Yet another emulated exception fix.

Thu Oct  6 10:02:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_AMI/*:
          Added new test to test the behaviour of AMI when sending
          large request. We shouldn't block in that case. Perl script
          will follow but put the files now in cvs so that I can build
          the server remotely and then test AMI between two hosts that
          are connected using the internet. Testing things locally doesn't
          show the issues I want to address

Thu Oct  6 09:19:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/ami_test_i.h:
        * orbsvcs/tests/HTIOP/AMI/simple_client.cpp:
        * orbsvcs/tests/HTIOP/AMI/ami_test_i.h:
          Removed usage of TAO_HAS_AMI_EXCEPTIONS, seems something that has gone
          a long time ago

Thu Oct  6 08:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/ami_test_i.{h,cpp}:
        * tests/AMI/client.cpp:
        * tests/AMI/server.cpp:
        * tests/AMI/simple_client.cpp:
          Converted documentation to doxygen style

Thu Oct  6 08:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Param_Test/client.cpp:
          Fixed might be unitialized warning in MinGW build

Wed Oct  5 13:54:00 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/Miop/McastHello/Makefile.am:

          Regenerate.

        * orbsvcs/tests/Miop/McastHello/McastHello.mpc:

          Add "*idl" project for compiling *.idl files.

Wed Oct  5 12:18:39 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * examples/POA/DSI/Database_i.h:

          Include appropriate headers to address incomplete type
          definition related compile-time errors.  Necessitated by header
          dependency reductions in ACE.

Wed Oct  5 17:28:52 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_native.cpp:
        * TAO_IDL/ast/ast_operation.cpp:
        * TAO_IDL/be/be_native.cpp:
        * TAO_IDL/be_include/be_native.h:
        * TAO_IDL/include/ast_native.h:

          Implemented the handling of IDL native declarations in an
          IDL operation exception list. Thanks to Johnny Willemsen
          <jwillemsen@remedy.nl> for pointing out that, in the latest
          version of the CORBA Messaging specification, the
          ExceptionHolder valuetype contains an operation with this
          use case.

Wed Oct  5 11:44:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/AMH_Response_Handler.cpp:
          Removed not needed return at end of method

Wed Oct  5 11:23:27 2005  Simon McQueen  <sm@prismtech.com>

        * tao/CodecFactory.mpc:
        * tao/DynamicAny.mpc:
        * tao/IFR_Client.mpc:
        * tao/IORManipulation.mpc:
        * tao/PortableServer.mpc:
        * tao/Strategies.mpc:
        * tao/Valuetype.mpc:

          Removed 'anytypecode' base project and substituted 'core_anytypecode'.
          This removes a dependency on the IDL compiler that had crept in.

Wed Oct  5 02:24:50 2005  Bala Natarajan  <bala_natarajan at symantec dot com>

        * tests/Queued_Message_Test/Queued_Message_Test.cpp:

          Fixed compilation errors introduced from Mon Oct  3 06:33:20
          2005  Bala Natarajan  <bala_natarajan at symantec dot com>

Tue Oct  4 15:15:02 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:
        * orbsvcs/tests/Makefile.am:

          Add Bug_2247_Regression and Bug_2248_Regression directories.

        * orbsvcs/tests/Bug_2247_Regression/Makefile.am:
        * orbsvcs/tests/Bug_2248_Regression/Makefile.am:

          New files.

        * orbsvcs/tests/ImplRepo/Makefile.am:
        * orbsvcs/tests/ImplRepo/scale/Makefile.am:

          Regenerated.

        * orbsvcs/tests/Bug_2247_Regression/Bug_2247_Regression.mpc:
        * orbsvcs/tests/Bug_2248_Regression/Bug_2248_Regression.mpc:
        * orbsvcs/tests/ImplRepo/ImplRepo.mpc:
        * orbsvcs/tests/ImplRepo/scale/scaletest.mpc

          Add "*idl" project for compiling *.idl files.

Tue Oct  4 11:19:47 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/PortableServer/Creation_Time.inl:

          Include "tao/orbconf.h" to pull in POA_NO_TIMESTAMP definition.
          Addresses problems where comparison to this preprocessor
          constant were made but no definition of it was available.

Tue Oct  4 14:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Transport.cpp (send):
          Make clear the number printed out in the send failure message is
          errno.

Tue Oct  4 14:22:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_Oneways/server.cpp:
          Improved debug statement to make clear we are waiting on the
          sessions to finish.

Tue Oct  4 14:06:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport.cpp (send_message_shared_i):
          Get the flushing_strategy later in the method just before the
          moment we need it.

Tue Oct  4 13:32:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1476_Regression/client.cpp:
          Added -c commandline argument to control how many client
          tasks will be created. Makes it easier to debug

Tue Oct  4 12:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1476_Regression/client.cpp:
          Fixed bug in handling of -n commandline argument

Tue Oct  4 12:48:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1476_Regression/server.cpp:
          Print an error when the server didn't receive any calls

Tue Oct  4 13:01:42 2005  Simon McQueen  <sm@prismtech.com>

        * tests/Bug_2183_Regression/Hello.h:

          Remove reference to deprecated RefCountServantBase.

Tue Oct  4 12:57:09 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/Bug_2248_Regression/tests.idl:

          Swapped <> for "" in #includes to fix fuzz error.

Tue Oct  4 11:37:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/fe/fe_tmplinst.cpp:
          Removed, not needed anymore

        * TAO_IDL/Makefile.am:
          Removed file above

        * TAO_IDL/be/be_helper.cpp
        * TAO_IDL/be/be_tmplinst.cpp
        * TAO_IDL/be_include/be_helper.h
        * examples/RTCORBA/Activity/Activity.cpp
        * examples/RTCORBA/Activity/Task_Stats.cpp
        * examples/RTScheduling/Task_Stats.cpp
        * examples/RTScheduling/Fixed_Priority_Scheduler/test.cpp
        * examples/RTScheduling/MIF_Scheduler/test.cpp
        * orbsvcs/PSS/PSDL_Datastore.cpp
        * orbsvcs/PSS/PSDL_Interface_Visitor.cpp
        * orbsvcs/PSS/PSDL_Scope.cpp
        * orbsvcs/Scheduling_Service/Scheduling_Service.cpp
        * orbsvcs/Trading_Service/Trading_Service.cpp
        * orbsvcs/orbsvcs/Scheduler_Factory.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/GroupInfoPublisher.cpp
        * orbsvcs/orbsvcs/Notify/Properties.cpp
        * orbsvcs/orbsvcs/Notify/RT_Properties.cpp
        * orbsvcs/orbsvcs/Notify/Routing_Slip.cpp
        * orbsvcs/orbsvcs/Notify/Routing_Slip_Persistence_Manager.cpp
        * orbsvcs/orbsvcs/Notify/Routing_Slip_Queue.cpp
        * orbsvcs/orbsvcs/Notify/Standard_Event_Persistence.cpp
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.cpp
        * orbsvcs/orbsvcs/Notify/Topology_Object.cpp
        * orbsvcs/orbsvcs/Notify/XML_Loader.cpp
        * orbsvcs/orbsvcs/PortableGroup/GOA.cpp
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp
        * orbsvcs/orbsvcs/PortableGroup/PG_Factory_Map.cpp
        * orbsvcs/orbsvcs/PortableGroup/PG_Factory_Set.cpp
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.cpp
        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Map.cpp
        * orbsvcs/orbsvcs/PortableGroup/PG_MemberInfo.cpp
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroup_Map.cpp
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Manipulator.cpp
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Encoder.cpp
        * orbsvcs/orbsvcs/PortableGroup/PG_Properties_Support.cpp
        * orbsvcs/orbsvcs/PortableGroup/PG_PropertyManager.cpp
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set.cpp
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Acceptor_Registry.cpp
        * orbsvcs/orbsvcs/PortableGroup/Portable_Group_Map.cpp
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.cpp
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.cpp
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp
        * orbsvcs/orbsvcs/Sched/DynSched.cpp
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler.cpp
        * orbsvcs/orbsvcs/Sched/Scheduler.cpp
        * orbsvcs/orbsvcs/Sched/Scheduler_Generic.cpp
        * orbsvcs/orbsvcs/Sched/Strategy_Scheduler.cpp
        * orbsvcs/orbsvcs/Security/SL3_CredentialsCurator.cpp
        * orbsvcs/orbsvcs/Time/Timer_Helper.cpp
        * orbsvcs/orbsvcs/Trader/Constraint_Interpreter.cpp
        * orbsvcs/orbsvcs/Trader/Constraint_Visitors.cpp
        * orbsvcs/orbsvcs/Trader/Interpreter_Utils.cpp
        * orbsvcs/orbsvcs/Trader/Offer_Iterators.cpp
        * orbsvcs/orbsvcs/Trader/Service_Type_Repository.cpp
        * orbsvcs/orbsvcs/Trader/Trader.cpp
        * orbsvcs/orbsvcs/Trader/Trader_Utils.cpp
        * orbsvcs/orbsvcs/Trader/Trading_Loader.cpp
        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/driver.cpp
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/client.cpp
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/server.cpp
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/client.cpp
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/server.cpp
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/client.cpp
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/server.cpp
        * orbsvcs/performance-tests/RTEvent/Roundtrip/client.cpp
        * orbsvcs/performance-tests/RTEvent/Roundtrip/server.cpp
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/client.cpp
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/server.cpp
        * orbsvcs/performance-tests/RTEvent/lib/Loopback.cpp
        * orbsvcs/performance-tests/RTEvent/lib/ORB_Task.cpp
        * orbsvcs/performance-tests/RTEvent/lib/ORB_Task_Activator.cpp
        * orbsvcs/performance-tests/RTEvent/lib/Peer_Base.cpp
        * orbsvcs/performance-tests/RTEvent/lib/Send_Task.cpp
        * orbsvcs/performance-tests/RTEvent/lib/Send_Task_Stopper.cpp
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Connection_Manager.cpp
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/distributer.cpp
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/receiver.cpp
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/sender.cpp
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/receiver.cpp
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/sender.cpp
        * orbsvcs/tests/AVStreams/Component_Switching/Connection_Manager.cpp
        * orbsvcs/tests/AVStreams/Component_Switching/distributer.cpp
        * orbsvcs/tests/AVStreams/Component_Switching/receiver.cpp
        * orbsvcs/tests/AVStreams/Component_Switching/sender.cpp
        * orbsvcs/tests/AVStreams/Full_Profile/ftp.cpp
        * orbsvcs/tests/AVStreams/Full_Profile/server.cpp
        * orbsvcs/tests/AVStreams/Latency/control.cpp
        * orbsvcs/tests/AVStreams/Latency/ping.cpp
        * orbsvcs/tests/AVStreams/Latency/pong.cpp
        * orbsvcs/tests/AVStreams/Modify_QoS/receiver.cpp
        * orbsvcs/tests/AVStreams/Modify_QoS/sender.cpp
        * orbsvcs/tests/AVStreams/Multicast/ftp.cpp
        * orbsvcs/tests/AVStreams/Multicast/server.cpp
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/ftp.cpp
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/server.cpp
        * orbsvcs/tests/AVStreams/Multiple_Flows/receiver.cpp
        * orbsvcs/tests/AVStreams/Multiple_Flows/sender.cpp
        * orbsvcs/tests/AVStreams/Pluggable/ftp.cpp
        * orbsvcs/tests/AVStreams/Pluggable/server.cpp
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/receiver.cpp
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/sender.cpp
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/distributer.cpp
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/receiver.cpp
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/sender.cpp
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/receiver.cpp
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/sender.cpp
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/receiver.cpp
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/sender.cpp
        * orbsvcs/tests/CosEvent/Basic/Disconnect.cpp
        * orbsvcs/tests/CosEvent/Basic/MT_Disconnect.cpp
        * orbsvcs/tests/CosEvent/Basic/Shutdown.cpp
        * orbsvcs/tests/CosEvent/lib/Counting_Consumer.cpp
        * orbsvcs/tests/CosEvent/lib/Counting_Supplier.cpp
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Data.cpp
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Supplier.cpp
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp
        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp
        * orbsvcs/tests/EC_Throughput/ECT_Consumer.cpp
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.cpp
        * orbsvcs/tests/EC_Throughput/ECT_Throughput.cpp
        * orbsvcs/tests/Event/Basic/Atomic_Reconnect.cpp
        * orbsvcs/tests/Event/Basic/BCast.cpp
        * orbsvcs/tests/Event/Basic/Bitmask.cpp
        * orbsvcs/tests/Event/Basic/Control.cpp
        * orbsvcs/tests/Event/Basic/Disconnect.cpp
        * orbsvcs/tests/Event/Basic/MT_Disconnect.cpp
        * orbsvcs/tests/Event/Basic/Negation.cpp
        * orbsvcs/tests/Event/Basic/Observer.cpp
        * orbsvcs/tests/Event/Basic/Reconnect.cpp
        * orbsvcs/tests/Event/Basic/Schedule.cpp
        * orbsvcs/tests/Event/Basic/Shutdown.cpp
        * orbsvcs/tests/Event/Basic/Timeout.cpp
        * orbsvcs/tests/Event/Mcast/Common/EC_Wrapper.cpp
        * orbsvcs/tests/Event/Performance/Connect.cpp
        * orbsvcs/tests/Event/Performance/Inversion.cpp
        * orbsvcs/tests/Event/Performance/Latency.cpp
        * orbsvcs/tests/Event/Performance/Latency_Server.cpp
        * orbsvcs/tests/Event/Performance/Throughput.cpp
        * orbsvcs/tests/Event/lib/Consumer.cpp
        * orbsvcs/tests/Event/lib/Counting_Consumer.cpp
        * orbsvcs/tests/Event/lib/Counting_Supplier.cpp
        * orbsvcs/tests/Event/lib/Supplier.cpp
        * orbsvcs/tests/FT_App/FTAPP_Analyzer_Main.cpp
        * orbsvcs/tests/FT_App/FTAPP_FactoryRegistry_Main.cpp
        * orbsvcs/tests/FT_App/FTAPP_FaultConsumer_Main.cpp
        * orbsvcs/tests/FT_App/FTAPP_Notifier_Main.cpp
        * orbsvcs/tests/FT_App/FT_Client.cpp
        * orbsvcs/tests/FT_App/FT_Creator.cpp
        * orbsvcs/tests/FT_App/FT_Replica.cpp
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.cpp
        * orbsvcs/tests/FT_App/StubBatchConsumer.cpp
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp
        * orbsvcs/tests/FT_App/StubFaultConsumer.cpp
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp
        * orbsvcs/tests/HTIOP/AMI/Test_Output.cpp
        * orbsvcs/tests/HTIOP/BiDirectional/Test_Output.cpp
        * orbsvcs/tests/HTIOP/Hello/Test_Output.cpp
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Factory_Map.cpp
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Factory_Struct.cpp
        * orbsvcs/tests/Notify/Basic/Events.cpp
        * orbsvcs/tests/Notify/Basic/Filter.cpp
        * orbsvcs/tests/Notify/Basic/Sequence.cpp
        * orbsvcs/tests/Notify/Basic/Simple.cpp
        * orbsvcs/tests/Notify/Basic/Updates.cpp
        * orbsvcs/tests/Notify/RT_lib/RT_Factories_Define.cpp
        * orbsvcs/tests/Notify/Reconnecting/Consumer.cpp
        * orbsvcs/tests/Notify/Reconnecting/Supplier.cpp
        * orbsvcs/tests/Notify/Test_Filter/RT_Test_Filter.cpp
        * orbsvcs/tests/Notify/lib/Activation_Manager.cpp
        * orbsvcs/tests/Notify/lib/Command_Builder.cpp
        * orbsvcs/tests/Notify/lib/Driver.cpp
        * orbsvcs/tests/Notify/lib/Factories_Define.cpp
        * orbsvcs/tests/Notify/lib/LookupManager.cpp
        * orbsvcs/tests/Notify/lib/Periodic_Supplier.cpp
        * orbsvcs/tests/Notify/lib/PushConsumer.cpp
        * orbsvcs/tests/Notify/lib/PushSupplier.cpp
        * orbsvcs/tests/Notify/lib/SequencePushConsumer.cpp
        * orbsvcs/tests/Notify/lib/SequencePushSupplier.cpp
        * orbsvcs/tests/Notify/lib/StructuredPushConsumer.cpp
        * orbsvcs/tests/Notify/lib/StructuredPushSupplier.cpp
        * orbsvcs/tests/Notify/lib/Task_Stats.cpp
        * orbsvcs/tests/Notify/performance-tests/RedGreen/RedGreen_Test.cpp
        * orbsvcs/tests/Notify/performance-tests/Throughput/Throughput.cpp
        * orbsvcs/tests/Trading/Offer_Exporter.cpp
        * orbsvcs/tests/Trading/colocated_test.cpp
        * performance-tests/Callback/client.cpp
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Client.cpp
        * performance-tests/Cubit/TAO/MT_Cubit/Globals.cpp
        * performance-tests/Cubit/TAO/MT_Cubit/client.cpp
        * performance-tests/Cubit/TAO/MT_Cubit/server.cpp
        * performance-tests/POA/Demux/demux_test_server.cpp
        * performance-tests/RTCorba/Thread_Pool/client.cpp
        * tao/ORB_Table.cpp
        * tao/TSS_Resources.cpp
        * tao/Strategies/DIOP_Connector.cpp
        * tao/Valuetype/ValueFactory_Map.cpp
        * tests/CodeSets/libs/IBM1047_ISO8859/Char_IBM1047_ISO8859_Factory.cpp
        * tests/CodeSets/libs/IBM1047_ISO8859/Wchar_IBM1047_ISO8859_Factory.cpp
        * tests/CodeSets/libs/UCS4_UTF16/WUCS4_UTF16_Factory.cpp
        * tests/DynAny_Test/driver.cpp
        * tests/IOR_Endpoint_Hostnames/list_interfaces.cpp
        * tests/OctetSeq/OctetSeq.cpp
        * tests/Param_Test/driver.cpp
        * tests/Param_Test/helper.cpp
        * tests/Param_Test/options.cpp
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Request_Interceptor.cpp
        * tests/RTCORBA/Collocation/Collocation.cpp
          Zapped explicit templates

Tue Oct  4 11:08:35 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/Bug_2248_Regression/tests.idl:

          Added missing file.

        * orbsvcs/tests/Bug_2248_Regression/Bug_2248_Regression.mpc:
        * orbsvcs/tests/Bug_2248_Regression/Server_Request_Interceptor.h:

          Correct errors.

Tue Oct  4 10:04:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/POA/DSI/Database_i.cpp
        * examples/RTCORBA/Activity/Activity.cpp
        * examples/RTCORBA/Activity/Task_Stats.cpp
        * examples/RTScheduling/Task_Stats.cpp
        * examples/RTScheduling/Fixed_Priority_Scheduler/test.cpp
        * examples/RTScheduling/MIF_Scheduler/test.cpp
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager_Main.cpp
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp
        * orbsvcs/Fault_Detector/Fault_Detector_Main.cpp
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp
        * orbsvcs/Fault_Notifier/Fault_Notifier_Main.cpp
        * orbsvcs/IFR_Service/be_global.cpp
        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp
        * orbsvcs/IFR_Service/ifr_adding_visitor_exception.cpp
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.cpp
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp
        * orbsvcs/orbsvcs/AV/AV_Core.cpp
        * orbsvcs/orbsvcs/AV/Fill_ACE_QoS.cpp
        * orbsvcs/orbsvcs/AV/Policy.cpp
        * orbsvcs/orbsvcs/AV/Protocol_Factory.cpp
        * orbsvcs/orbsvcs/AV/RTCP.cpp
        * orbsvcs/orbsvcs/AV/TCP.cpp
        * orbsvcs/orbsvcs/AV/Transport.cpp
        * orbsvcs/orbsvcs/AV/sfp.cpp
        * orbsvcs/orbsvcs/Concurrency/CC_LockSet.cpp
        * orbsvcs/orbsvcs/Concurrency/Concurrency_Loader.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerAdmin.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerControl.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Factory.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierAdmin.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedSupplierAdmin.cpp
        * orbsvcs/orbsvcs/Event/ECG_Adapters.cpp
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.cpp
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.cpp
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp
        * orbsvcs/orbsvcs/Event/ECG_Reconnect_ConsumerEC_Control.cpp
        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.cpp
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.cpp
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.cpp
        * orbsvcs/orbsvcs/Event/EC_ConsumerAdmin.cpp
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.cpp
        * orbsvcs/orbsvcs/Event/EC_Factory.cpp
        * orbsvcs/orbsvcs/Event/EC_Filter.cpp
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.cpp
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.cpp
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.cpp
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Factory.cpp
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.cpp
        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.cpp
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.cpp
        * orbsvcs/orbsvcs/Event/EC_Reactive_ConsumerControl.cpp
        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.cpp
        * orbsvcs/orbsvcs/Event/EC_Sched_Factory.cpp
        * orbsvcs/orbsvcs/Event/EC_SupplierAdmin.cpp
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientService_Activate.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerService_Activate.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Activate.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/GroupInfoPublisher.cpp
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor.cpp
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connection_Handler.cpp
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connector.cpp
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Transport.cpp
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Loader.cpp
        * orbsvcs/orbsvcs/IFRService/Options.cpp
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlertMap.cpp
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadListMap.cpp
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMap.cpp
        * orbsvcs/orbsvcs/LoadBalancing/LB_Location_Index_Map.cpp
        * orbsvcs/orbsvcs/LoadBalancing/LB_MonitorMap.cpp
        * orbsvcs/orbsvcs/LoadBalancing/LB_ObjectReferenceFactory.cpp
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp
        * orbsvcs/orbsvcs/Log/Hash_LogStore.cpp
        * orbsvcs/orbsvcs/Log/LogRecordStore_persist.cpp
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp
        * orbsvcs/orbsvcs/Log/Log_i.cpp
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp
        * orbsvcs/orbsvcs/Metrics/Metrics_LocalCache.cpp
        * orbsvcs/orbsvcs/Metrics/Metrics_Logger.cpp
        * orbsvcs/orbsvcs/Metrics/Metrics_UpcallMonitor.cpp
        * orbsvcs/orbsvcs/Metrics/Metrics_Utils.cpp
        * orbsvcs/orbsvcs/Naming/Naming_Loader.cpp
        * orbsvcs/orbsvcs/Naming/Persistent_Context_Index.cpp
        * orbsvcs/orbsvcs/Naming/Persistent_Naming_Context.cpp
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp
        * orbsvcs/orbsvcs/Naming/Transient_Naming_Context.cpp
        * orbsvcs/orbsvcs/Notify/Bit_Vector.cpp
        * orbsvcs/orbsvcs/Notify/Builder.cpp
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.cpp
        * orbsvcs/orbsvcs/Notify/Delivery_Request.cpp
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.cpp
        * orbsvcs/orbsvcs/Notify/EventChannel.cpp
        * orbsvcs/orbsvcs/Notify/FilterAdmin.cpp
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates.cpp
        * orbsvcs/orbsvcs/Notify/Name_Value_Pair.cpp
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp
        * orbsvcs/orbsvcs/Notify/Notify_EventChannelFactory_i.cpp
        * orbsvcs/orbsvcs/Notify/Object.cpp
        * orbsvcs/orbsvcs/Notify/Persistent_File_Allocator.cpp
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.cpp
        * orbsvcs/orbsvcs/Notify/ProxySupplier.cpp
        * orbsvcs/orbsvcs/Notify/QoSProperties.cpp
        * orbsvcs/orbsvcs/Notify/Random_File.cpp
        * orbsvcs/orbsvcs/Notify/Reconnection_Registry.cpp:
          Zapped explicit templates

Mon Oct  3 23:43:08 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/FT_App/Makefile.am:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Makefile.am:
        * orbsvcs/tests/FaultTolerance/IOGR/Makefile.am:
        * orbsvcs/tests/IOR_MCast/Makefile.am:
        * orbsvcs/tests/ior_corbaname/Makefile.am:

          Regenerated.

        * orbsvcs/tests/FT_App/FT_App.mpc:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/GroupRef_Manipulation.mpc:
        * orbsvcs/tests/FaultTolerance/IOGR/FaultTolerance_IOGR.mpc:
        * orbsvcs/tests/IOR_MCast/IOR_MCast.mpc:
        * orbsvcs/tests/ior_corbaname/ior_corbaname.mpc:

          Add "*idl" project for compiling *.idl files.

Mon Oct  3 19:26:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/tutorials/Quoter/Event_Service/Stock_i.cpp
        * docs/tutorials/Quoter/RT_Event_Service/Stock_i.cpp
        * examples/Callback_Quoter/Notifier_i.cpp
        * examples/Event_Comm/Event_Comm_i.cpp
        * examples/Kokyu_dsrt_schedulers/EDF_Scheduler.cpp
        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.cpp
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduler.cpp
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduler.cpp
        * examples/Kokyu_dsrt_schedulers/Task_Stats.cpp
        * examples/Kokyu_dsrt_schedulers/utils.cpp
        * examples/Load_Balancing/Load_Balancer_i.cpp
        * examples/Load_Balancing_persistent/Load_Balancer_i.cpp
        * examples/Logging/Logger_i.cpp
        * examples/OBV/Typed_Events/Client_i.cpp
        * examples/OBV/Typed_Events/server.cpp
        * examples/POA/On_Demand_Loading/Servant_Manager.cpp
        * examples/Persistent_Grid/Grid_Client_i.cpp
        * examples/Persistent_Grid/Persistent_Client_i.cpp
        * examples/Persistent_Grid/server.cpp
        * examples/PluggableUDP/tests/Basic/UDP_i.cpp
        * examples/PluggableUDP/tests/Performance/UDP_i.cpp
        * examples/RTScheduling/Starter.cpp
        * examples/Simple/bank/AccountManager_i.cpp
        * examples/Simple/bank/Bank_Client_i.cpp
        * examples/Simple/bank/server.cpp
        * examples/Simple/chat/Broadcaster_i.cpp
        * examples/Simple/echo/Echo_Client_i.cpp
        * examples/Simple/echo/server.cpp
        * examples/Simple/grid/Grid_Client_i.cpp
        * examples/Simple/grid/server.cpp
        * examples/Simple/time/Time_Client_i.cpp
        * examples/Simple/time/server.cpp
        * examples/Simple/time-date/Time_Date.cpp
        * examples/Simple/time-date/Time_Date_Client_i.cpp
        * examples/Simulator/Event_Supplier/DualEC_Sup.cpp
        * examples/Simulator/Event_Supplier/Event_Sup.cpp
        * examples/Simulator/Event_Supplier/Logging_Sup.cpp
        * orbsvcs/examples/CosEC/Factory/CosEventChannelFactory_i.cpp
        * orbsvcs/examples/CosEC/RtEC_Based/lib/ConsumerAdmin_i.cpp
        * orbsvcs/examples/CosEC/RtEC_Based/lib/CosEvent_Utilities.cpp
        * orbsvcs/examples/CosEC/RtEC_Based/lib/EventChannel_i.cpp
        * orbsvcs/examples/CosEC/RtEC_Based/lib/ProxyPushConsumer_i.cpp
        * orbsvcs/examples/CosEC/RtEC_Based/lib/ProxyPushSupplier_i.cpp
        * orbsvcs/examples/CosEC/RtEC_Based/lib/SupplierAdmin_i.cpp
        * orbsvcs/examples/CosEC/Simple/Consumer.cpp
        * orbsvcs/examples/CosEC/Simple/Service.cpp
        * orbsvcs/examples/CosEC/Simple/Supplier.cpp
        * orbsvcs/examples/Log/Event/Event_Consumer.cpp
        * orbsvcs/examples/Log/Event/Event_Supplier.cpp
        * orbsvcs/examples/Log/Notify/Notify_Consumer.cpp
        * orbsvcs/examples/Log/Notify/Notify_Supplier.cpp
        * orbsvcs/examples/Log/RTEvent/RTEvent_Consumer.cpp
        * orbsvcs/examples/Log/RTEvent/RTEvent_Supplier.cpp
        * orbsvcs/examples/Notify/Filter/Filter.cpp
        * orbsvcs/examples/Notify/Subscribe/Subscribe.cpp
        * orbsvcs/examples/RtEC/IIOPGateway/Consumer.cpp
        * orbsvcs/examples/RtEC/IIOPGateway/EC.cpp
        * orbsvcs/examples/RtEC/IIOPGateway/Gateway.cpp
        * orbsvcs/examples/RtEC/IIOPGateway/Supplier.cpp
        * orbsvcs/examples/RtEC/Kokyu/Consumer.cpp
        * orbsvcs/examples/RtEC/Kokyu/Service.cpp
        * orbsvcs/examples/RtEC/Kokyu/Supplier.cpp
        * orbsvcs/examples/RtEC/MCast/Consumer.cpp
        * orbsvcs/examples/RtEC/MCast/MCast.cpp
        * orbsvcs/examples/RtEC/MCast/Supplier.cpp
        * orbsvcs/examples/RtEC/Schedule/Service.cpp
        * orbsvcs/examples/RtEC/Simple/Consumer.cpp
        * orbsvcs/examples/RtEC/Simple/Service.cpp
        * orbsvcs/examples/RtEC/Simple/Supplier.cpp
          Zapped explicit templates

Mon Oct  3 18:29:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Acceptor.cpp
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Accept_Strategy.cpp
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.cpp
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.cpp
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.cpp
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_EVP_PKEY.cpp
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.cpp
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_OwnCredentials.cpp
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_SSL.cpp
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_X509.cpp
          Zapped explicit templates

Mon Oct  3 18:26:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTPortableServer/RT_Policy_Validator.cpp:
          Emulated exception fix

        * tao/RTCORBA/Thread_Pool.{h,cpp}:
          Renamed request_dynamic_thread to new_dynamic_thread.

Mon Oct  3 10:48:45 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/tao_idl.mpc:
        * orbsvcs/orbsvcs/CosNaming_Serv.mpc:
        * orbsvcs/orbsvcs/Svc_Utils.mpc:
        * tao/Strategies.mpc:

          Added "ace_for_tao" ACE library subset support.

        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/fe/fe_extern.cpp:
        * TAO_IDL/fe/fe_init.cpp:
        * TAO_IDL/include/fe_extern.h:

          Removed use of ACE_UUID.  Rely on ACE_OS::mkstemp() instead to
          avoid depending on more areas of ACE than necessary.

        * orbsvcs/orbsvcs/Naming/Persistent_Context_Index.h:
        * tao/default_resource.cpp:
        * tao/Strategies/advanced_resource.cpp:

          Include appropriate headers to address incomplete type
          definition related compile-time errors.  Necessitated by header
          dependency reductions in ACE.

Mon Oct  3 15:39:59 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/Bug_2248_Regression/Bug_2248_Regression.mpc:
        * orbsvcs/tests/Bug_2248_Regression/Server_Request_Interceptor.h:
        * orbsvcs/tests/Bug_2248_Regression/client.h:

          Linux build errors.

Mon Oct  3 06:54:16 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/examples/ImR/Advanced/Makefile.am:
        * orbsvcs/examples/ImR/Combined_Service/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Makefile.am:
        * orbsvcs/tests/Security/MT_SSLIOP/Makefile.am:

          Regenerated.

        * orbsvcs/examples/ImR/Advanced/Advanced.mpc:
        * orbsvcs/examples/ImR/Combined_Service/ImR_Combined_Service.mpc:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Application_Controlled.mpc:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Infrastructure_Controlled.mpc:
        * orbsvcs/tests/Security/MT_SSLIOP/MT_SSLIOP.mpc:

          Add "*idl" project for compiling *.idl files.

Mon Oct  3 13:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTPortableServer/RT_Policy_Validator.cpp:
          Updated for threadpool manager interfaces

Mon Oct  3 12:37:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/Thread_Pool.{h,cpp,inl}:
          Fixed deadlock that occured when a ThreadPool was being destructed
          when the ORB is still running. At that moment we did a wait on
          the thread pool wait the lock on the thread pool manager was still
          hold which resulted in a deadlock. Now each Thread Pool lane has
          its own lock to guard its state, the lock in the thread pool manager
          is just to guard the map in the manager. This fixes bugzilla bug
          #2235.
          Thanks to Anders Olsson <Anders dot EPK dot Olsson at ericsson dot com>
          for reporting this issue.

        * tao/Makefile.am:
          Added new Thread_Pool.inl

Mon Oct  3 12:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/RTCORBA/Thread_Pool/test_i.cpp:
          Use C++ cast instead of c-style cast

Mon Oct  3 11:45:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/releasenotes/index.html:
          Documented IPv6 status

Mon Oct  3 06:33:20 2005  Bala Natarajan  <bala_natarajan at symantec dot com>

        * tao/LF_Event.cpp (state_changed):
        * tao/LF_Event.h:

          There was strange problem that showed up during our testing
          here. The problem happens only on peers that have server threads
          waiting for requests,  effectively leaving some threads hanging
          around LF waiting for the reply, when infact the reply was
          received by the server thread -- sort of missed wakeups.

          Problem: Server threads that wait for requests can process
          replies (for requests initiated by client threads) since they
          can get to the reactor right away and become leaders within the
          reactor. What happens when a reply is received by a server
          thread before a client thread adds itslf as a follower (in the
          LF loop as a follower)? Disaster.

          Context: Why disaster? The server thread, never bound by the
          synchronization in the LF, would pick the reply. It would
          check for the follower (without holding the LF lock), and since
          the follower is still joining the follower list, the LF_Event
          would not have a follower pointer. The server thread would then
          simply exit state_changed () without waiting for a follower. The
          client thread that becomes a follower will never get a wakeup
          signal and continue to hang around blocking a resource.

          Solution: Do wakeups only with the locks held. Grab LF lock
          before thinking of doing wakeups, which would allow clients
          languishing to set the follower pointer.

          To implement the solution, all I did was to change the interface
          of state_changed () to pass in a LF reference.

        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * performance-tests/Latency/Thread_Pool/run_test.pl:
        * tao/Asynch_Queued_Message.cpp:
        * tao/Asynch_Queued_Message.h:
        * tao/Connection_Handler.cpp:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/Queued_Message.cpp:
        * tao/Queued_Message.h:
        * tao/Synch_Queued_Message.cpp:
        * tao/Synch_Queued_Message.h:
        * tao/Synch_Reply_Dispatcher.cpp:
        * tao/Transport.cpp:
        * tao/Wait_On_Read.cpp:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.cpp:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Connection_Handler.cpp:

          Changes that got propogated due to the interface change in
          LF_Event.

Mon Oct  3 11:20:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Connection_Handler.cpp (close_connection_eh):
          Removed some asserts that triggered when a RTCorba ThreadLane
          was destroyed from a thread not belonging to this ThreadLane,
          now we just have a fallback when the reactor associated with the
          event handler is zero. This fixes bugzilla bug #2244. Thanks to
          Bala for validating my ideas.

        * tao/Transport.{h,cpp,inl}:
          Moved sent_byte_count and recv_buffer_size const and moved
          them to the inline file

Mon Oct  3 10:02:06 2005  Simon McQueen  <sm@prismtech.com>

        * tao/Synch_Invocation.cpp:

          Don't reset the profiles upon a comm failure exception when
          the FT service callback indicates a restart. This fixes bug #2248.

          Thanks to Milan Cvetkovic for reporting the problem and providing
          the regression test.

        * orbsvcs/tests/Bug_2248_Regression/Bug_2248_Regression.mpc:
        * orbsvcs/tests/Bug_2248_Regression/Client_i.h:
        * orbsvcs/tests/Bug_2248_Regression/README:
        * orbsvcs/tests/Bug_2248_Regression/Server_ORBInitializer.cpp:
        * orbsvcs/tests/Bug_2248_Regression/Server_ORBInitializer.h:
        * orbsvcs/tests/Bug_2248_Regression/Server_Request_Interceptor.cpp:
        * orbsvcs/tests/Bug_2248_Regression/Server_Request_Interceptor.h:
        * orbsvcs/tests/Bug_2248_Regression/client.cpp:
        * orbsvcs/tests/Bug_2248_Regression/client.h:
        * orbsvcs/tests/Bug_2248_Regression/run_test.pl:
        * orbsvcs/tests/Bug_2248_Regression/server.cpp:
        * orbsvcs/tests/Bug_2248_Regression/test.idl:
        * orbsvcs/tests/Bug_2248_Regression/test_i.cpp:
        * orbsvcs/tests/Bug_2248_Regression/test_i.h:

          Regression test for the above.

Sun Oct  2 11:05:51 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp (validate_capacity_alarm_thresholds):

          Fixed out-of-range array element access that occured with single
          element sequences.

          Add note that the specification does not require theshold values
          to be in order or unique.

Sun Oct  2 22:22:55 IST 2005  Bala Natarajan  <bala_natarajan at symantec dot com>

        * performance-tests/Latency/Thread_Per_Connection/run_test.pl:

          Increased the timeout for the test to succeed on all platforms.

Sun Oct  2 12:01:40 2005  Carlos O'Ryan  <coryan@atdesk.com>

        * tests/Sequence_Unit_Tests/Sequence_Unit_Tests.mpc:
        * tests/Sequence_Unit_Tests/bounded_object_reference_sequence.hpp:
        * tests/Sequence_Unit_Tests/bounded_object_reference_sequence_ut.cpp:
        * tests/Sequence_Unit_Tests/run_test.pl:
          Implemented bounded sequences of object references.

        * tests/Sequence_Unit_Tests/bounded_value_sequence_ut.cpp:
          Fixed typos in unit test.

        * tests/Sequence_Unit_Tests/object_reference_traits.hpp:
        * tests/Sequence_Unit_Tests/object_reference_traits_base.hpp:
          Refactor traits so it is possible to implement better unit
          tests.

        * tests/Sequence_Unit_Tests/string_traits_base.hpp:
          Fixed comment

        * tests/Sequence_Unit_Tests/testing_allocation_traits.hpp:
          Fixed #include guards

        * tests/Sequence_Unit_Tests/testing_object_reference_traits.hpp:
          Modified so we can better test object reference management in
          the sequences.

        * tests/Sequence_Unit_Tests/unbounded_object_reference_sequence_ut.cpp:
          Add more test cases

Sat Oct  1 08:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/fe/fe_init.cpp:
          Reverted WChar fixes, we have some problems in the idl compiler,
          maybe they are caused by this

Fri Sep 30 18:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Smart_Proxies/dtor/dtor.mpc:
          Added anytypecode as base project to the client

Fri Sep 30 12:26:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/params.cpp:
          Fixed 64bit conversion warning

Fri Sep 30 12:22:51 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/Bug_2247_Regression/Bug_2247_Regression.mpc:

          Add minimum_corba.

        * orbsvcs/tests/Bug_2247_Regression/Manager.cpp:

          ACE_CHECK to ACE_CHECK_RETURN.

Fri Sep 30 10:48:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Invocation_Base.{h,cpp}:
          Set the invoke_status_ correctly when an exception has occured.
          This fixes bugzilla bug 2247. Thanks to Simon McQueen
          <sm@prismtech.com> for adding the regression for this test
          to the repo and to Milan Cvetkovic
          <milan dot cvetkovic at mpathix dot com> for creating the
          regression

Fri Sep 30 10:41:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/fe/fe_init.cpp:
          WChar fix

Fri Sep 30 09:10:00 2005  Simon Massey  <simon.massey@prismtech.com>

        * tao/PI_Server/ServerInterceptorAdapter.cpp:

          This fixes Bugzilla 2249.
          (Problems with  TAO_HAS_EXTENDED_FT_INTERCEPTORS  builds)

Thu Sep 29 15:07:30 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/EventLog_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLog_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.cpp:

          De-fuzzed simple cases ACE_CHECK/ACE_TRY_CHECK warnings.
          I'll get to the remaining cases that need new temporary
          variables, etc. in the next week.

Thu Sep 29 17:25:39 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/Bug_2247_Regression/test_i.cpp:
        * orbsvcs/tests/Bug_2247_Regression/test_i.h:

          Fixing the inevitable emulated exception errors.

Thu Sep 29 10:02:19 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Event/EC_TPC_ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxySupplier.cpp:

          De-fuzzed ACE_CHECK/ACE_TRY_CHECK warnings.  Thanks to Johnny
          Willemsen for catching this and holding my feet to the fire.

Thu Sep 29 09:12:24 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tao/SmartProxies/Smart_Proxies.h:

          Removed the virtual from the inheritance list.  It is not
          necessary.

Thu Sep 29 14:29:17 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/Bug_2247_Regression/Bug_2247_Regression.mpc:
        * orbsvcs/tests/Bug_2247_Regression/Client_i.h:
        * orbsvcs/tests/Bug_2247_Regression/Manager.cpp:
        * orbsvcs/tests/Bug_2247_Regression/Manager.h:
        * orbsvcs/tests/Bug_2247_Regression/README:
        * orbsvcs/tests/Bug_2247_Regression/run_test.pl:
        * orbsvcs/tests/Bug_2247_Regression/server.cpp:
        * orbsvcs/tests/Bug_2247_Regression/test.idl:
        * orbsvcs/tests/Bug_2247_Regression/test_i.cpp:
        * orbsvcs/tests/Bug_2247_Regression/test_i.h:

          Regression test added.

Thu Sep 29 07:38:32 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Smart_Proxies/dtor/client.cpp:
        * tests/Smart_Proxies/dtor/server.cpp:

          Corrected build issues (include files, exception macros and
          minimum corba related problems) and warnings from certain versions
          of the GNU compiler about implicit conversion.

Thu Sep 29 12:34:50 2005  Simon McQueen  <sm@prismtech.com>

        * tao/Makefile.am:

          Removed WrongTransactionS.inl - file no longer in CVS.

Thu Sep 29 09:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/AVStreams/Bidirectional_Flows/sender.cpp
        * orbsvcs/tests/AVStreams/Component_Switching/distributer.cpp
        * orbsvcs/tests/AVStreams/Modify_QoS/sender.cpp
        * orbsvcs/tests/AVStreams/Multicast/server.cpp
        * orbsvcs/tests/AVStreams/Multiple_Flows/sender.cpp
        * orbsvcs/tests/AVStreams/Pluggable/ftp.cpp
        * tests/Big_Twoways/client.cpp
        * tests/Two_Objects/Object_Factory_i.cpp
          Fixed fuzz errors

        * utils/catior/catior.cpp
          Wchar fix

Thu Sep 29 07:53:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Smart_Proxies/server.cpp:
        * tests/Smart_Proxies/Benchmark/client.cpp:
        * tests/Smart_Proxies/Benchmark/server.cpp:
        * tests/Smart_Proxies/On_Demand/server.cpp:
        * tests/Smart_Proxies/Policy/client.cpp:
        * tests/Smart_Proxies/Policy/server.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
          Fixed fuzz errors

Thu Sep 29 07:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.cpp:
          Emulated exception fix

Thu Sep 29 07:24:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Connect_Strategy.h:
        * tao/ORB.h:
        * tao/PI_Server/Policy_Creator_T.h:
          Layout and documentation changes

        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
          Updated debug statement to have the same layout as the other messages

        * tao/Stub.{h,cpp,i}:
          Use an Atomic_Op for the refcount, removed some accessors that are
          not needed and which violated the encapsulation principle. Made
          some methods protected which don't need to be public, removed the
          return value of the _incr_refcnt and _decr_refcnt methods, the
          return value isn't something you can build logic on because it
          can change again quickly. Also fixed a 64bit problem.

        * tao/Valuetype/AbstractBase.cpp:
          Removed (void) before calls of _incr_rfcnt/_decr_refcnt, they don't
          return a value anymore.

Thu Sep 29 07:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Trading_Loader.cpp:
          Fixed emulated exception fuzz errors. It seems the Trading service
          is not really correct related to emulated exceptions, if someone
          really wants to use it in that configuration some more work has
          to be done.

Thu Sep 29 06:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/LoadBalancing/LB_ServerRequestInterceptor.cpp:
          Fixed emulated exception fuzz errors

Wed Sep 28 20:05:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * tao/IIOP_Acceptor.cpp:

          Fixed compile error for Borland compiler.

Wed Sep 28 18:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp:
          Fixed emulated exception errors

Wed Sep 28 11:35:17 2005  Chad Elliott  <elliott_c@ociweb.com>

        Committing the following changes on behalf of Wallace Zhang
        <zhang_w@ociweb.com>.

        * tao/SmartProxies/Smart_Proxies.h:

          Let TAO_Smart_Proxy_Base inherit from
          TAO_Local_RefCounted_Object to have a correct destruction of smart
          proxies. This also fixed the problem that _non_existent() crashes
          when using smart proxy

        * tests/Smart_Proxies/dtor/.cvsignore:
        * tests/Smart_Proxies/dtor/README:
        * tests/Smart_Proxies/dtor/Smart_Proxy_Impl.h:
        * tests/Smart_Proxies/dtor/Smart_Proxy_Impl.cpp:
        * tests/Smart_Proxies/dtor/client.cpp:
        * tests/Smart_Proxies/dtor/dtor.mpc:
        * tests/Smart_Proxies/dtor/run_test.pl:
        * tests/Smart_Proxies/dtor/server.cpp:
        * tests/Smart_Proxies/dtor/test.idl:

          Created a new test for Smart Proxy. This test is to detect
          the destruction of smart proxies and a _non_existent()
          crash.

Wed Sep 28 15:21:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * tao/Acceptor_Registry{.h .cpp}:
        * tao/IIOP_Acceptor{.h .cpp .i}:

          Added improvements for IPv6 support with Windows (circumventing
          the problems coming from MS's single-stack implementation of
          IPv4/IPv6).

Fri Sep 23 13:11:31 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * tao/orbconf.h: Added a comment warning users about the
          impact of setting huge values for the number of configured
          handles.  Thanks to Jan.Zima@sofis.cz for motivating this.

Wed Sep 28 14:31:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/IFRService/*S.{h,cpp,inl}:
        * orbsvcs/orbsvcs/IFRService/*S_T.{h,cpp,inl}:
          Regenerated with the latest version of the TAO_IDL compiler

Wed Sep 28 14:12:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/POA/Demux/demux_test_server.cpp:
          Fixed fuzz error

Wed Sep 28 14:53:27 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/Bug_2137_Regression/client.cpp:

          What kind of muppet makes 35 seperate mistakes with emulated
          exception handling in one file ? That would be me.

Wed Sep 28 14:35:26 2005  Simon McQueen  <sm@prismtech.com>

        * tao/WrongTransaction.pidl:

          Changed generation instructions to include use of -SS.

        * tao/WrongTransactionS.h:

          Regenerated using -SS.

        * tao/WrongTransactionS.inl:

          Removed file.

Tue Sep 27 18:23:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Single_Threaded_POA/Single_Threaded_POA.cpp:
          Emulated exception fix

Mon Sep 26 14:19:42 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * orbsvcs/orbsvcs/DsLogAdmin.mpc:

          Added "Log/LogStore.h" to Header_Files in the DsLogAdmin_Serv
          project.

Mon Sep 26 09:47:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:
          Wchar fix

        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent_Skel.mpc:
          Added export files to the header section so that they get copied
          on install

Mon Sep 26 09:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Event_Service/Event_Service.cpp:
          Corrected the way we check whether we should create a persistent POA
          or not.

Mon Sep 26 07:34:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:
          Added ACE_CHECK generation and fixed some layout issues

Sun Sep 25 21:33:41 2005  Bala Natarajan  <bala_natarajan at symantec dot com>

        * tao/Transport_Cache_Manager.cpp:

          Cosmetic check, which seems to help some builds.

Sat Sep 24 11:37:37 2005  Balachandran Natarajan  <bala_natarajan at symantec dot com>

        * tao/default_client.cpp:

          Changed the default value of use_cleanup_options_ switch to
          false. This should address performance and thread_pool latency
          test failures in our daily scoreboard.

Fri Sep 23 12:17:29 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Bug_2222_Regression/test.cpp (main):

          Removed unnecessary try/catch block that caused an "unused
          ACE_TRY_LABEL" warning in emulated exception builds.  Thanks to
          Simon Massey for pointing out the problem.

Fri Sep 23 16:22:01 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/AnyTypeCode/Any_Basic_Impl_T.cpp:

          Added include of Any.h, similar to the other Any_*_Impl_T.cpp
          files. The need for this include shows up only when enums
          are seen in an IDL file, with no other IDL types to
          pull in the include. Thanks to Jules Colding <colding@omesc.com>
          for reporting the problem.

Fri Sep 23 07:42:38 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/examples/Security/Send_File/Makefile.am:

          Regenerate.

        * orbsvcs/examples/Security/Send_File/Security_Send_File.mpc:

          Add "*idl" project for compiling *.idl files.

Fri Sep 23 07:07:33 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/examples/LoadBalancing/LoadBalancing.mpc:

          Changed *idl project to inherit from anytypecode.

Fri Sep 23 14:31:39 2005  Simon McQueen  <sm@prismtech.com>

        * docs/Options.html:

          Removed some text that had been put in the wrong place.

Fri Sep 23 05:55:03 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/HTIOP/Hello/Makefile.am:

          Regenerated.

        * orbsvcs/HTIOP/Hello/HTIOP_Hello.mpc:

          Added "custom_only = 1" to *idl project.

Fri Sep 23 11:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/Event.inl:
          Emulated exception fix

Fri Sep 23 11:09:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.{h,cpp}:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:
          Some wchar fixes

Fri Sep 23 10:05:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * tests/CallbackTest/Callback.cpp:
        * tests/CallbackTest/server.cpp:
        * tests/CallbackTest/client.cpp:

          Fixed compile warnings.

Thu Sep 22 23:55:22 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/HTIOP/AMI/Makefile.am:
        * orbsvcs/tests/HTIOP/Hello/Makefile.am:

          Regenerated.

        * orbsvcs/tests/HTIOP/AMI/HTIOP_AMI.mpc:
        * orbsvcs/tests/HTIOP/Hello/HTIOP_Hello.mpc:

          Add "*idl" projects for compiling *.idl files. This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

Thu Sep 22 14:03:11 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Updated AC_CONFIG_FILES for the new directories.

          Added BUILD_REPO, BUILD_THREADS, and BUILD_EC_TYPED_EVENTS
          automake conditionals.  Explicitly set to false, true, and
          true (at least for now).

        * TAO_IDL/Makefile.am:
        * orbsvcs/Makefile.am:
        * orbsvcs/Concurrency_Service/Makefile.am:
        * orbsvcs/CosEvent_Service/Makefile.am:
        * orbsvcs/Dump_Schedule/Makefile.am:
        * orbsvcs/Event_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Event_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Factory_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Gateway_Service/Makefile.am:
        * orbsvcs/FT_ReplicationManager/Makefile.am:
        * orbsvcs/Fault_Detector/Makefile.am:
        * orbsvcs/Fault_Notifier/Makefile.am:
        * orbsvcs/IFR_Service/Makefile.am:
        * orbsvcs/ImplRepo_Service/Makefile.am:
        * orbsvcs/LifeCycle_Service/Makefile.am:
        * orbsvcs/LoadBalancer/Makefile.am:
        * orbsvcs/Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/Basic_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/Event_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/Makefile.am:
        * orbsvcs/Naming_Service/Makefile.am:
        * orbsvcs/Notify_Service/Makefile.am:
        * orbsvcs/Scheduling_Service/Makefile.am:
        * orbsvcs/TAO_Service/Makefile.am:
        * orbsvcs/Time_Service/Makefile.am:
        * orbsvcs/Trading_Service/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/bin/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/performance-tests/Makefile.am:
        * orbsvcs/performance-tests/LoadBalancing/Makefile.am:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/Makefile.am:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/lib/Makefile.am:
        * orbsvcs/tests/Makefile.am:
        * orbsvcs/tests/AVStreams/Makefile.am:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/Makefile.am:
        * orbsvcs/tests/AVStreams/Component_Switching/Makefile.am:
        * orbsvcs/tests/AVStreams/Full_Profile/Makefile.am:
        * orbsvcs/tests/AVStreams/Latency/Makefile.am:
        * orbsvcs/tests/AVStreams/Modify_QoS/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/Makefile.am:
        * orbsvcs/tests/AVStreams/Multiple_Flows/Makefile.am:
        * orbsvcs/tests/AVStreams/Pluggable/Makefile.am:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/Makefile.am:
        * orbsvcs/tests/BiDir_CORBALOC/Makefile.am:
        * orbsvcs/tests/Bug_1334_Regression/Makefile.am:
        * orbsvcs/tests/Bug_1393_Regression/Makefile.am:
        * orbsvcs/tests/Bug_1395_Regression/Makefile.am:
        * orbsvcs/tests/Bug_1630_Regression/Makefile.am:
        * orbsvcs/tests/Concurrency/Makefile.am:
        * orbsvcs/tests/CosEvent/Makefile.am:
        * orbsvcs/tests/CosEvent/Basic/Makefile.am:
        * orbsvcs/tests/CosEvent/lib/Makefile.am:
        * orbsvcs/tests/EC_Custom_Marshal/Makefile.am:
        * orbsvcs/tests/EC_MT_Mcast/Makefile.am:
        * orbsvcs/tests/EC_Mcast/Makefile.am:
        * orbsvcs/tests/EC_Multiple/Makefile.am:
        * orbsvcs/tests/EC_Throughput/Makefile.am:
        * orbsvcs/tests/Event/Makefile.am:
        * orbsvcs/tests/Event/Basic/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Common/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Complex/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Simple/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Two_Way/Makefile.am:
        * orbsvcs/tests/Event/Performance/Makefile.am:
        * orbsvcs/tests/Event/lib/Makefile.am:
        * orbsvcs/tests/FT_App/Makefile.am:
        * orbsvcs/tests/FaultTolerance/Makefile.am:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Makefile.am:
        * orbsvcs/tests/FaultTolerance/IOGR/Makefile.am:
        * orbsvcs/tests/FaultTolerance/IOGRManipulation/Makefile.am:
        * orbsvcs/tests/FtRtEvent/Makefile.am:
        * tao/Makefile.am:
        * utils/Makefile.am:
        * utils/catior/Makefile.am:
        * utils/nslist/Makefile.am:

          Regenerated.

        * docs/Makefile.am:
        * docs/tutorials/Makefile.am:
        * docs/tutorials/Quoter/AMI/Makefile.am:
        * docs/tutorials/Quoter/Event_Service/Makefile.am:
        * docs/tutorials/Quoter/Makefile.am:
        * docs/tutorials/Quoter/Naming_Service/Makefile.am:
        * docs/tutorials/Quoter/On_Demand_Activation/Makefile.am:
        * docs/tutorials/Quoter/RT_Event_Service/Makefile.am:
        * docs/tutorials/Quoter/Simple/Client/Makefile.am:
        * docs/tutorials/Quoter/Simple/Impl-Repo/Makefile.am:
        * docs/tutorials/Quoter/Simple/ImprovedServer/Makefile.am:
        * docs/tutorials/Quoter/Simple/Makefile.am:
        * docs/tutorials/Quoter/Simple/Persistent/Makefile.am:
        * docs/tutorials/Quoter/Simple/Server/Makefile.am:
        * docs/tutorials/Quoter/idl/Makefile.am:
        * examples/AMH/Makefile.am:
        * examples/AMH/Sink_Server/Makefile.am:
        * examples/AMI/FL_Callback/Makefile.am:
        * examples/AMI/Makefile.am:
        * examples/Advanced/Makefile.am:
        * examples/Advanced/ch_3/Makefile.am:
        * examples/Buffered_AMI/Makefile.am:
        * examples/Buffered_Oneways/Makefile.am:
        * examples/Callback_Quoter/Makefile.am:
        * examples/Content_Server/AMI_Iterator/Makefile.am:
        * examples/Content_Server/AMI_Observer/Makefile.am:
        * examples/Content_Server/Makefile.am:
        * examples/Content_Server/SMI_Iterator/Makefile.am:
        * examples/Event_Comm/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/fp_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/mif_example/Makefile.am:
        * examples/Kokyu_dsrt_schedulers/muf_example/Makefile.am:
        * examples/Load_Balancing/Makefile.am:
        * examples/Load_Balancing_persistent/Makefile.am:
        * examples/Logging/Makefile.am:
        * examples/Makefile.am:
        * examples/OBV/Makefile.am:
        * examples/OBV/Typed_Events/Makefile.am:
        * examples/POA/Adapter_Activator/Makefile.am:
        * examples/POA/DSI/Makefile.am:
        * examples/POA/Default_Servant/Makefile.am:
        * examples/POA/Explicit_Activation/Alt_Resources/Makefile.am:
        * examples/POA/Explicit_Activation/Makefile.am:
        * examples/POA/FindPOA/Makefile.am:
        * examples/POA/Forwarding/Makefile.am:
        * examples/POA/Generic_Servant/Makefile.am:
        * examples/POA/Loader/Makefile.am:
        * examples/POA/Makefile.am:
        * examples/POA/NewPOA/Makefile.am:
        * examples/POA/On_Demand_Activation/Makefile.am:
        * examples/POA/On_Demand_Loading/Makefile.am:
        * examples/POA/POA_BiDir/Makefile.am:
        * examples/POA/Reference_Counted_Servant/Makefile.am:
        * examples/POA/RootPOA/Makefile.am:
        * examples/POA/TIE/Makefile.am:
        * examples/Persistent_Grid/Makefile.am:
        * examples/PluggableUDP/Makefile.am:
        * examples/PluggableUDP/tests/Basic/Makefile.am:
        * examples/PluggableUDP/tests/Makefile.am:
        * examples/PluggableUDP/tests/Performance/Makefile.am:
        * examples/PluggableUDP/tests/SimplePerformance/Makefile.am:
        * examples/Quoter/Makefile.am:
        * examples/RTCORBA/Activity/Makefile.am:
        * examples/RTCORBA/Makefile.am:
        * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile.am:
        * examples/RTScheduling/MIF_Scheduler/Makefile.am:
        * examples/RTScheduling/Makefile.am:
        * examples/Simple/Makefile.am:
        * examples/Simple/bank/Makefile.am:
        * examples/Simple/chat/Makefile.am:
        * examples/Simple/echo/Makefile.am:
        * examples/Simple/grid/Makefile.am:
        * examples/Simple/time-date/Makefile.am:
        * examples/Simple/time/Makefile.am:
        * examples/Simulator/Event_Supplier/Makefile.am:
        * examples/Simulator/Makefile.am:
        * examples/TypeCode_Creation/Makefile.am:
        * examples/ior_corbaloc/Makefile.am:
        * examples/mfc/Makefile.am:
        * interop-tests/Makefile.am:
        * interop-tests/wchar/Makefile.am:
        * orbsvcs/examples/CosEC/Factory/Makefile.am:
        * orbsvcs/examples/CosEC/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Basic/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Makefile.am:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Makefile.am:
        * orbsvcs/examples/CosEC/Simple/Makefile.am:
        * orbsvcs/examples/CosEC/TypedSimple/Makefile.am:
        * orbsvcs/examples/FaultTolerance/Makefile.am:
        * orbsvcs/examples/FaultTolerance/RolyPoly/Makefile.am:
        * orbsvcs/examples/ImR/Advanced/Makefile.am:
        * orbsvcs/examples/ImR/Combined_Service/Makefile.am:
        * orbsvcs/examples/ImR/Makefile.am:
        * orbsvcs/examples/LoadBalancing/Makefile.am:
        * orbsvcs/examples/Log/Basic/Makefile.am:
        * orbsvcs/examples/Log/Event/Makefile.am:
        * orbsvcs/examples/Log/Makefile.am:
        * orbsvcs/examples/Log/Notify/Makefile.am:
        * orbsvcs/examples/Log/RTEvent/Makefile.am:
        * orbsvcs/examples/Makefile.am:
        * orbsvcs/examples/Notify/Federation/Agent/Makefile.am:
        * orbsvcs/examples/Notify/Federation/Gate/Makefile.am:
        * orbsvcs/examples/Notify/Federation/Makefile.am:
        * orbsvcs/examples/Notify/Federation/SpaceCraft/Makefile.am:
        * orbsvcs/examples/Notify/Filter/Makefile.am:
        * orbsvcs/examples/Notify/Lanes/Makefile.am:
        * orbsvcs/examples/Notify/Makefile.am:
        * orbsvcs/examples/Notify/Subscribe/Makefile.am:
        * orbsvcs/examples/Notify/ThreadPool/Makefile.am:
        * orbsvcs/examples/ORT/Makefile.am:
        * orbsvcs/examples/RtEC/IIOPGateway/Makefile.am:
        * orbsvcs/examples/RtEC/Kokyu/Makefile.am:
        * orbsvcs/examples/RtEC/MCast/Makefile.am:
        * orbsvcs/examples/RtEC/Makefile.am:
        * orbsvcs/examples/RtEC/Schedule/Makefile.am:
        * orbsvcs/examples/RtEC/Simple/Makefile.am:
        * orbsvcs/examples/Security/Makefile.am:
        * orbsvcs/examples/Security/Send_File/Makefile.am:
        * orbsvcs/tests/Bug_2137_Regression/Makefile.am:
        * orbsvcs/tests/HTIOP/AMI/Makefile.am:
        * orbsvcs/tests/HTIOP/BiDirectional/Makefile.am:
        * orbsvcs/tests/HTIOP/Hello/Makefile.am:
        * orbsvcs/tests/HTIOP/Makefile.am:
        * orbsvcs/tests/IOR_MCast/Makefile.am:
        * orbsvcs/tests/ImplRepo/Makefile.am:
        * orbsvcs/tests/ImplRepo/NameService/Makefile.am:
        * orbsvcs/tests/ImplRepo/scale/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Application_Test/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Makefile.am:
        * orbsvcs/tests/InterfaceRepo/Persistence_Test/Makefile.am:
        * orbsvcs/tests/Interoperable_Naming/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Makefile.am:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/Makefile.am:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/CPU/Makefile.am:
        * orbsvcs/tests/LoadBalancing/LoadMonitor/Makefile.am:
        * orbsvcs/tests/LoadBalancing/Makefile.am:
        * orbsvcs/tests/Log/Basic_Log_Test/Makefile.am:
        * orbsvcs/tests/Log/Makefile.am:
        * orbsvcs/tests/Miop/Makefile.am:
        * orbsvcs/tests/Miop/McastHello/Makefile.am:
        * orbsvcs/tests/Notify/Basic/Makefile.am:
        * orbsvcs/tests/Notify/Blocking/Makefile.am:
        * orbsvcs/tests/Notify/Destroy/Makefile.am:
        * orbsvcs/tests/Notify/Discarding/Makefile.am:
        * orbsvcs/tests/Notify/Driver/Makefile.am:
        * orbsvcs/tests/Notify/MT_Dispatching/Makefile.am:
        * orbsvcs/tests/Notify/Makefile.am:
        * orbsvcs/tests/Notify/Ordering/Makefile.am:
        * orbsvcs/tests/Notify/PluggableTopology/Makefile.am:
        * orbsvcs/tests/Notify/RT_lib/Makefile.am:
        * orbsvcs/tests/Notify/Reconnecting/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Makefile.am:
        * orbsvcs/tests/Notify/Test_Filter/Makefile.am:
        * orbsvcs/tests/Notify/XML_Persistence/Makefile.am:
        * orbsvcs/tests/Notify/lib/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/Makefile.am:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Makefile.am:
        * orbsvcs/tests/Property/Makefile.am:
        * orbsvcs/tests/Redundant_Naming/Makefile.am:
        * orbsvcs/tests/Sched/Makefile.am:
        * orbsvcs/tests/Sched_Conf/Makefile.am:
        * orbsvcs/tests/Security/BiDirectional/Makefile.am:
        * orbsvcs/tests/Security/Big_Request/Makefile.am:
        * orbsvcs/tests/Security/Callback/Makefile.am:
        * orbsvcs/tests/Security/Crash_Test/Makefile.am:
        * orbsvcs/tests/Security/MT_IIOP_SSL/Makefile.am:
        * orbsvcs/tests/Security/MT_SSLIOP/Makefile.am:
        * orbsvcs/tests/Security/Makefile.am:
        * orbsvcs/tests/Security/Secure_Invocation/Makefile.am:
        * orbsvcs/tests/Security/ssliop_corbaloc/Makefile.am:
        * orbsvcs/tests/Simple_Naming/Makefile.am:
        * orbsvcs/tests/Time/Makefile.am:
        * orbsvcs/tests/Trading/Makefile.am:
        * orbsvcs/tests/ior_corbaname/Makefile.am:
        * orbsvcs/tests/tests_svc_loader/Makefile.am:

          Added.

        * examples/AMI/FL_Callback/FL_Callback.mpc:
        * examples/Advanced/ch_3/Advanced_ch_3.mpc:
        * orbsvcs/examples/CosEC/Factory/CosEC_Factory.mpc:
        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly.mpc:
        * orbsvcs/examples/LoadBalancing/LoadBalancing.mpc:
        * orbsvcs/examples/ORT/ORT.mpc:
        * orbsvcs/tests/HTIOP/BiDirectional/HTIOP_BiDirectional.mpc:
        * orbsvcs/tests/Notify/Blocking/Blocking.mpc:
        * orbsvcs/tests/Notify/Discarding/Discarding.mpc:
        * orbsvcs/tests/Notify/MT_Dispatching/MT_Dispatching.mpc:
        * orbsvcs/tests/Notify/Ordering/Ordering.mpc:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Seq_Multi_ETCL_Filter.mpc:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Seq_Multi_Filter.mpc:
        * orbsvcs/tests/Notify/Structured_Filter/Struct_Filter.mpc:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Struct_Multi_Filter.mpc:
        * orbsvcs/tests/Notify/performance-tests/Filter/Filter.mpc:
        * orbsvcs/tests/Security/BiDirectional/Secure_BiDir.mpc:
        * orbsvcs/tests/Security/Big_Request/Big_Request.mpc:
        * orbsvcs/tests/Security/Callback/Callback.mpc:
        * orbsvcs/tests/Security/Crash_Test/Security_Crash_Test.mpc:
        * orbsvcs/tests/Security/MT_IIOP_SSL/MT_IIOP_SSL.mpc:
        * orbsvcs/tests/Security/Secure_Invocation/Secure_Invocation.mpc:
        * performance-tests/Sequence_Latency/DII/DII.mpc:
        * performance-tests/Sequence_Latency/DSI/DSI.mpc:
        * performance-tests/Sequence_Latency/Deferred/Deferred.mpc:

          Add "*idl" projects for compiling *.idl files. This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

Thu Sep 22 15:12:12 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/tests/InterfaceRepo/IDL3_Test/test.idl:

          Modified valuetype declartion used as a primary key to
          conform to the CCM spec section 61.7.2.1 listing
          constraints on primary key types.

Thu Sep 22 08:48:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/POA/Loader/Server_Manager.cpp:
        * examples/Quoter/Factory_Finder.cpp:
        * tao/ImR_Client/ImplRepoC.*:
        * tao/ImR_Client/ImplRepoS.*:
        * tao/ImR_Client/ServerObjectC.*:
        * tao/ImR_Client/ServerObjectS.*:
        * tao/PortableServer/POA_Policy_Set.cpp:
        * tao/PortableServer/Root_POA.inl:
        * tests/AMH_Oneway/client.cpp:
        * tests/POA/Default_Servant/Default_Servant.cpp:
        * tests/RTScheduling/Thread_Cancel/test.cpp:
        * utils/nslist/nsdel.cpp:
          Emulated exceptions fixes

        * tests/RTScheduling/Thread_Cancel/Thread_Cancel.mpc:
          Removed empty lines

        * tao/Codeset/Codeset_Manager_i.cpp:
        * tao/RTCORBA/RT_ORBInitializer.cpp:
          Wchar fixes

Thu Sep 22 08:21:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/POA/DSI/Server.cpp:
          Emulated exceptions fixes

        * tao/IIOP_Endpoint.cpp:
        * tao/MCAST_Parser.cpp:
        * tao/ORB_Core.cpp:
          Wchar fixes

Thu Sep 22 08:13:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * tests/CallbackTest/Service.cpp:
        * tests/CallbackTest/server.cpp:

          Fixed compile errors.

Wed Sep 21 08:06:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * tests/CallbackTest/Callback.{h,cpp}:

          Fixed compile errors.

Tue Sep 20 17:23:37 2005  Arvind S. Krishna  <arvindk@doc.dre.vanderbilt.edu>

        * tao/Connection_Handler.inl:
        * tao/GIOP_Message_Base.cpp:
        * tao/PortableServer/Servant_Base.cpp:

          Added hooks in the source file to enable aggressive
          specialization of request processing in certain conditions.

Tue Sep 20 21:18:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * tests/IPV6/run_test.pl:

          Added a test.

Tue Sep 20 15:13:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * tests/CallbackTest/CallbackTest.mpc:
        * tests/CallbackTest/Callback{.h .cpp}:
        * tests/CallbackTest/Test.idl:
        * tests/CallbackTest/Service{.h .cpp}:
        * tests/CallbackTest/client.cpp:
        * tests/CallbackTest/server.cpp:
        * tests/CallbackTest/run_test.pl:
        * tests/CallbackTest/run_test_ipv6.pl:
        * tests/CallbackTest/run_test_mixed_ip.pl:
        * tests/CallbackTest/README:

          Added new test.

Tue Sep 20 08:39:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * orbsvcs/tests/Notify/Basic/run_test_ipv6.pl:

          Added IPV6 specific testscript.

Tue Sep 20 08:32:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * orbsvcs/tests/IOR_MCast/ior_mcast_client_i.cpp:

          Added some traces to be able to see testresult.

        * orbsvcs/tests/IOR_MCast/run_test_ipv6.pl:

          Added IPV6 specific testscript.

Tue Sep 20 08:26:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * tests/BiDirectional/run_test_ipv6.pl:

          Added IPV6 specific testscript.

Tue Sep 20 08:23:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Endpoint.cpp:
        * tao/Invocation_Endpoint_Selectors.cpp:

          Improvements for IPv6 support.

Mon Sep 19 20:46:14 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:

          Removed run-time assertions.  They generally shouldn't be used
          in infrastructure code. Favor returning and checking error
          conditions and/or throwing exceptions instead.

Mon Sep 19 16:14:09 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.cpp: Fixed the
          initialization of the event_channel_ and typed_event_channel_
          data members.  Thanks to Lukas Gruetzmacher
          <gruetzmacher@ais-dresden.de> for reporting this and suggesting
          the fix.

Mon Sep 19 16:11:12 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_home.cpp:

          Added missing check for null before enqueueing a primary
          key valuetype into the queue to be checked after parsing.
          If there is no primary key specified, we don't want to
          enqueue a 0, since the queue will then be non-empty but
          have no usable value to dequeue.

Mon Sep 19 14:50:00 UTC 2005  Simon Massey  <sma@prismtech.com>

        * tests/Bug_2234_Regression/server.cpp:

        Eliminate unused exception macros.

Mon Sep 19 11:45:00 UTC 2005  Simon Massey  <sma@prismtech.com>

        * orbsvcs/examples/Notify/Federation/Agent/Agent.cpp:

        Corrected the correction due to non-standard MSVC name,
        Thanks to Martin J.N. Corino for the correct interpretation.

Mon Sep 19 10:15:00 UTC 2005  Simon Massey  <sma@prismtech.com>

        * orbsvcs/examples/Notify/Federation/Agent/Agent.cpp:

        Corrected typo at line 7 (#include "strstrea.h")

Mon Sep 19 08:50:00 UTC 2005  Simon Massey  <sma@prismtech.com>

        * tests/Bug_2234_Regression/run_test.pl:

        Forced commit for chmod permissions.

Mon Sep 19 08:00:00 UTC 2005  Simon Massey  <sma@prismtech.com>

        * tests/Bug_2234_Regression/server.cpp:

        Incorrect emulated exception call for init_orb.

Fri Sep 16 15:12:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * test/IPV6/Hello.mpc:

          Removed and replaced by:

        * test/IPV6/IPV6_Hello.mpc:

          Because MPC can't work with identically named .mpc files
          even in separate directories:-(

Fri Sep 16 12:45:00 UTC 2005  Simon Massey  <sma@prismtech.com>

        * tests/Bug_2234_Regression/server.cpp:

        Emulated exception incorrect macro used line 681.

Fri Sep 16 10:55:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * test/IPV6/Hello.mpc:
        * test/IPV6/Hello{.h .cpp}:
        * test/IPV6/client.cpp:
        * test/IPV6/server.cpp:
        * test/IPV6/Test.idl:
        * test/IPV6/run_test.pl:
        * test/IPV6/README:

          Added new IPV6 specific test.

Fri Sep 16 08:53:55 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_ccm_pre_proc.cpp(lookup_cookie):

          Changed creation of scoped name to use the member
          UTL_Identifier for the "Components" module name,
          instead of creating a new identifier.

        * TAO_IDL/include/utl_err.h:
        * TAO_IDL/util/utl_err.cpp:

          - Changed existing error enum value from EIDL_ILLEGAL_VALUETYPE
            to the more informative EIDL_ILLEGAL_BOXED_TYPE, which is
            what this enum value is used to express.

          - Added new error enum value EIDL_ILLEGAL_PRIMARY_KEY, to be
            used in the check for illegal primary key described below.

        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/y.tab.cpp:

          Changed usage of EIDL_ILLEGAL_VALUETYPE to
          EIDL_ILLEGAL_BOXED_TYPE.

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/ast/ast_home.cpp:
        * TAO_IDL/ast/ast_structure.cpp:
        * TAO_IDL/ast/ast_type.cpp:
        * TAO_IDL/ast/ast_union.cpp:
        * TAO_IDL/ast/ast_valuetype.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/include/ast_type.h:
        * TAO_IDL/include/ast_union.h:
        * TAO_IDL/include/ast_valuetype.h:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:

          Added check for illegal usage of a valuetype as a primary key.
          The CCM spec puts several constraints on valuetypes that are
          used as primary keys, and making sure these constaints are
          satisfied requires checking the valuetype's inheritance
          graph, as well as recursively checking its members. Valuetypes
          used as primary keys are place in a list, and the list is
          checked after all parsing has finished, so that we can be
          sure all forward declared structs and unions have been
          fully defined.

Thu Sep 15 15:54:24 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated.

        * tao/tao.mpc:

          Added WrongTransactionS.h to Header_Files.

Thu Sep 15 15:25:06 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * orbsvcs/orbsvcs/CosNaming_Serv.mpc:

          Added Naming/nsconf.h to Header_Files.

Thu Sep 15 14:04:28 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Request_Dispatcher.h
          (dispatch):
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Request_Dispatcher.cpp
          (dispatch):

          Removed unnecessary exception specification.  It prevented user
          exceptions from being propagated to the caller.  Thanks to David
          Carlton <david dot carlton at sun dot com> for reporting the
          problem and to Johnny Willemsen for suggesting a fix.

Thu Sep 15 12:42:34 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated.

Thu Sep 15 14:16:00 UTC 2005  Simon Massey  <sma@prismtech.com>

        * tests/Bug_2234_Regression/server.cpp:

        Emulated exception incorrect macro used line 118/156.

Wed Sep 14 10:34:00 UTC 2005  Simon Massey  <sma@prismtech.com>

        * tests/Bug_2234_Regression/server.cpp:

        Correct another minor fussy compiler gripe.

Wed Sep 14 09:45:00 UTC 2005  Simon Massey  <sma@prismtech.com>

        * tests/Bug_2234_Regression/client.cpp:
        * tests/Bug_2234_Regression/server.cpp:

        Correct minor fussy compiler gripes for some gcc platforms.

Wed Sep 14 08:41:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * orbsvcs/examples/Notify/Federation/Agent/Agent.cpp:

        Fixed compile error.

Tue Sep 13 11:43:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * examples/Advanced/ch_3/client.cpp:
        * examples/Advanced/ch_3/server.cpp:
        * orbsvcs/examples/Notify/Federation/Agent/Agent.cpp:
        * tests/Bug_1639_Regression/struct_client.cpp:

        Fixed for environments defining ACE_USES_OLD_IOSTREAMS
        (which unfortunately is the case for Windows x64 at the
        moment due to shortcomings in the Platform SDK).

Tue Sep 13 10:30:00 UTC 2005  Simon Massey  <sma@prismtech.com>

        * tao/AnyTypeCode/Any.cpp:

        * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/any_op_cs.cpp:

        * tests/Bug_2234_Regression/Bug_2234_Regression.mpc:
        * tests/Bug_2234_Regression/Test.idl:
        * tests/Bug_2234_Regression/client.cpp:
        * tests/Bug_2234_Regression/run_test.pl:
        * tests/Bug_2234_Regression/server.cpp:

        This fixes bug 2234.
        The Portiable Interception call to arguments() attempts to create
        a read-only copy of all arguments passed into the current method.
        Unfortunatly during the call to receive_request() the "out" args
        of variable length types have not yet been allocated by the server
        and so are NULL pointers. A deep copy was being attempted which
        de-referenced these NULLs causing a crash. Explicit NULL checks
        are now performed for these types and a NULL pointer to the type
        is placed into the arg list instead.

Tue Sep 13 10:18:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * tests/Portable_Interceptors/Bug_1559/run_test.pl:
        * tests/Portable_Interceptors/Dynamic/run_test.pl:
        * tests/Portable_Interceptors/Service_Context_Manipulation/run_test.pl:
        * tests/RTCORBA/Persistent_IOR/run_test.pl:

        Removed '-ORBObjRefStyle url' switch because it causes problems with IPv6
        builds and is not essential to the tests.

        * tests/Hang_Shutdown/server.cpp:
        * tests/Hang_Shutdown/client.cpp:

        Adjusted test timeouts because they were a little too tight for
        Windows/IPv6 environment.

Mon Sep 12 11:52:22 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerate.

Mon Sep 12 11:34:13 2005  Simon McQueen  <sm@prismtech.com>

        * tao/orb.idl:

          Had left fix commented out in Fri Sep  9 11:08:40 2005  Simon McQueen.

Fri Sep  9 22:00:24 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_array.cpp:
        * TAO_IDL/ast/ast_field.cpp:
        * TAO_IDL/ast/ast_interface.cpp:
        * TAO_IDL/ast/ast_sequence.cpp:
        * TAO_IDL/ast/ast_structure.cpp:
        * TAO_IDL/ast/ast_type.cpp:
        * TAO_IDL/ast/ast_typedef.cpp:
        * TAO_IDL/ast/ast_union.cpp:
        * TAO_IDL/ast/ast_valuetype.cpp:
        * TAO_IDL/include/ast_array.h:
        * TAO_IDL/include/ast_field.h:
        * TAO_IDL/include/ast_interface.h:
        * TAO_IDL/include/ast_sequence.h:
        * TAO_IDL/include/ast_structure.h:
        * TAO_IDL/include/ast_type.h:
        * TAO_IDL/include/ast_typedef.h:
        * TAO_IDL/include/ast_union.h:
        * TAO_IDL/include/ast_valuetype.h:

          - Added virtual legal_for_primary_key() method to AST_Type
            plus overrides for derived node classes AST_Sruct,
            AST_Union, AST_Array, AST_Sequence, AST_Typedef,
            AST_Interface, and AST_Valuetype. The override in
            AST_Valuetype is empty at this time, but when finished,
            the method will be called on a valuetype when it is used
            as a primary key of a component. The method will check
            the various constraints put on valuetypes used as
            primary keys by the CCM spec. It will, among other
            things, be called recursively on the valuetype's members.

          - Made some accessor methods, such as base_type() and
            field_type(), const.

Fri Sep  9 11:08:40 2005  Simon McQueen  <sm@prismtech.com>

        * tao/orb.idl:

          Add include of WrongTransaction.pidl.

        * tao/WrongTransaction.pidl:

          Update generation instructions.

        * tao/WrongTransactionS.h:
        * tao/WrongTransactionS.inl:

          Add these new 'handcrafted' files. These changes fix
          bug #1813.

        * tests/Bug_1813_Regression/Bug_1813_Regession.mpc:
        * tests/Bug_1813_Regression/Test.idl:
        * tests/Bug_1813_Regression/test.cpp:

          Regression test for the above.

Fri Sep  9 10:28:11 2005  Simon McQueen  <sm@prismtech.com>

        * tao/orb.idl:

          Add ValueFactory to CORBA module. Fixes bug #1812.

        * tests/Bug_1812_Regression/Bug_1812_Regession.mpc:
        * tests/Bug_1812_Regression/Test.idl:
        * tests/Bug_1812_Regression/test.cpp:

          Regression test for the above.

Thu Sep  8 16:39:10 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/tao.mpc:

          Added AnyTypeCode_Adapter.h and Any_Insert_Policy_T.h
          to list of Header_Files.

Wed Sep  7 15:54:08 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

Wed Sep  7 11:47:35 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * tao/IIOP_Acceptor.cpp:

          Marker modified for the specializations to work properly.

Tue Sep  6 15:54:57 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Bug_2222_Regression/test.cpp:

          Fixed unused argument warnings.

        * tests/DynAny_Test/test_dynany.cpp:
        * tests/DynAny_Test/test_dynunion.cpp:

          More include directive reordering to address g++ 3.4 order of
          parsing template related errors.

Tue Sep  6 15:40:17 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp (gen_stub_src_includes):

          Reordered include directives to address CORBA::AbstractBase
          order of parsing related template compile-time errors with g++
          3.4 or better and some HP compilers.

Tue Sep  6 17:26:39 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * tao/Endpoint.h

          Accidentally committed a file with the instrumented
          code. Reverted this and updated the markers.

Tue Sep  6 16:12:04 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * tao/Connection_Handler.cpp:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Connector.h:
        * tao/IIOP_Endpoint.h:
        * tao/IIOP_Endpoint.cpp:
        * tao/IIOP_Profile.h:
        * tao/Transport.h:
        * tao/Transport_Acceptor.h:

          The markers in these files accidentally includes the destructor
          which conflicts with the base class.

Tue Sep  6 13:29:04 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * tao/IIOP_Endpoint.h:
        * tao/IIOP_Profile.h:
        * tao/Transport_Acceptor.h:
        * tao/Profile.h:

          Updated marker names as there was a mismatch in the code based
          and the specialization files.

Tue Sep  6 10:33:09 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/examples/ORT/Gateway_i.h:

          Added "AnyTypeCode_methods.h" include directive as a temporary
          work around for g++ 3.4 or better and some HP compiler order of
          parsing template related issues.

Tue Sep  6 11:32:31 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * tao/Connection_Handler.h:
        * tao/Connection_Handler.cpp:
        * tao/IIOP_Connection_Handler.h:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/Transport.h:
        * tao/Transport.cpp:
        * tao/IIOP_Transport.h:
        * tao/IIOP_Transport.cpp:
        * tao/Endpoint.h:
        * tao/IIOP_Endpoint.cpp:
        * tao/IIOP_Endpoint.h:
        * tao/Profile.h:
        * tao/IIOP_Profile.h:
        * tao/Profile.cpp:
        * tao/IIOP_Profile.h:
        * tao/Transport_Acceptor.h:
        * tao/Traport_Acceptor.cpp:
        * tao/IIOP_Acceptor.h:
        * tao/IIOP_Connector.h:
        * tao/IIOP_Connector.cpp:
        * tao/Transport_Connector.h:
        * tao/Transport_Connector.cpp:

          Added markers within the Pluggable protocols frameworks for
          specializing the implementation with a concrete protocol
          implementation, e.g., iiop.

Mon Sep  5 12:11:28 2005  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/be/be_visitor_typedef/typedef_ci.cpp:

          Only omit generating the copy, dup, alloc & free operations
          if the typedef is imported. This fixes bugzilla #2222.

        * tests/Bug_2222_Regression/Bug_2222_Regression.mpc:
        * tests/Bug_2222_Regression/TestCase.idl:
        * tests/Bug_2222_Regression/TestType.idl:
        * tests/Bug_2222_Regression/test.cpp:

          Regression test for the above.

Fri Sep 02 13:21:30 2005  Gary Maxey  <gary.maxey@hp.com>

        * performance-tests/Callback/Callback_i.cpp:
        * performance-tests/Latency/DII/client.cpp:
        * performance-tests/Latency/Deferred/client.cpp:
        * performance-tests/Latency/Thread_Per_Connection/Client_Task.cpp:
        * performance-tests/Latency/Thread_Pool/Client_Task.cpp:
        * performance-tests/POA/Demux/demux_test_client.cpp:
        * performance-tests/Sequence_Latency/DII/client.cpp:
        * performance-tests/Sequence_Latency/Deferred/client.cpp:
        * performance-tests/Sequence_Latency/Thread_Pool/Client_Task.cpp:
          Used ACE_hrtime_t and ACE_HRTIME_TO_U64 macro for platform
          independence.

Fri Sep  2 12:51:23 2005  Ciju John  <john_c@ociweb.com>

        * tests/Big_Request_Muxing/Payload_Receiver.h:
        * tests/Big_Request_Muxing/Payload_Receiver.cpp
        * tests/Big_Request_Muxing/run_test.pl
        * tests/Big_Request_Muxing/Big_Request_Muxing.mpc
        * tests/Big_Request_Muxing/Client_Task.cpp

        Added AnyTypeCode includes. Removed msvc checks. VxWorks fixes.

Fri Sep  2 11:05:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * tao/MCAST_Parser.cpp:
          Small change concerning IPv6 multicast support.

Fri Sep  2 09:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Array_VarOut_T.inl:
          Reverted a C++ cast back to a c-style cast, vc6 can't handle
          the C++ cast. Added a remark that we can use a C++ cast when
          vc6 has been dropped

Thu Sep  1 16:56:12 2005  Ciju John  <john_c@ociweb.com>

        * tests/Big_Request_Muxing/*
          Brought in OCI modified tests.

        Wed Jul 13 09:57:17 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Big_Request_Muxing/run_test.pl:

          Added a separator between tests to aid in debugging.

        Tue Jul  5 07:31:33 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Big_Request_Muxing/server.cpp:

          Added includes for inline=0 builds.

        Wed Jun 29 14:35:36 2005  Justin Michel  <michel_j@ociweb.com>

        * tests/Big_Request_Muxing/client.cpp:
        * tests/Big_Request_Muxing/run_test.pl:
        * tests/Big_Request_Muxing/server.cpp:

          This test was destroying the orb before the orb was
          finished sending requests. The test still fails intermittently,
          because sometimes events are lost. I tried changing SYNC_NONE to
          SYNC_WITH_TRANSPORT, but this didn't help. This may be a real
          TAO bug. I changed the run_test.pl to run more iterations so
          that the bug should happen more often.

        Tue Jun 28 08:46:29 2005  Justin Michel  <michel_j@ociweb.com>

        * tests/Big_Request_Muxing/Client_Task.cpp:
        * tests/Big_Request_Muxing/Payload_Receiver.h:
        * tests/Big_Request_Muxing/Payload_Receiver.cpp:
        * tests/Big_Request_Muxing/client.cpp:
        * tests/Big_Request_Muxing/run_test.pl:
        * tests/Big_Request_Muxing/server.cpp:

          Changed the way the test works so that it prints an
          error if too many messages are received. Added a -e parameter
          when starting the server in the run_test.pl to expect the
          correct number of events when running multiple clients. Added
          additional debugging output. Changed the default number of
          events from 12000 to 1200 to make the test run faster.

        Mon Jun 27 12:15:31 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Big_Request_Muxing/client.cpp:

          This test was changed a while back to decrease the
          amount of time it takes to run.  However, a time value of 2
          miniutes was overlooked (and was causing problems during test
          shutdown).  I have changed it to be 10 seconds.

        Sat Jun 25 14:30:34 2005  Justin Michel  <michel_j@ociweb.com>

        * tests/Big_Request_Muxing/Client_Task.h:
        * tests/Big_Request_Muxing/Client_Task.cpp:
        * tests/Big_Request_Muxing/Payload_Receiver.h:
        * tests/Big_Request_Muxing/Payload_Receiver.cpp:
        * tests/Big_Request_Muxing/Test.idl:
        * tests/Big_Request_Muxing/client.cpp:
        * tests/Big_Request_Muxing/run_test.pl:
        * tests/Big_Request_Muxing/server.cpp:

          Changed the processes in this test to actually wait for
          the test to complete instead of simply running for two minutes.

Thu Sep  1 19:07:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Event_Service/Event_Service.{h,cpp}:
          Restored -n to the original behaviour, it is the name that will
          be used to register to the naming service. With the new option
          -x we can indicate that the event service shouldn't register
          with the naming service. This is just as the other orbsvcs,
          thanks to JT for indicating this.

        * docs/ec_options.html:
          Updated

Thu Sep  1 16:54:53 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_interface_strategy.cpp:

          Fixed typo in comment.

        * TAO_IDL/be/be_interface.cpp (gen_stub_ctor):

          Fixed order of generated base class stub constructor calls
          when the interface has both concrete and abstract parents.

        * TAO_IDL/be/be_visitor_amh_pre_proc.cpp (visit_interface):
        * TAO_IDL/be/be_visitor_interface/interface_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:

          Disabled all AMH-related code generation for interfaces that
          have an abstract ancestor. The AMH_-prefixed
          classes have an inheritance structure that reflects that of
          the corresponding IDL interfaces. This poses a problem
          when the interface has an abstract ancestor, since no skeleton
          code is generated for abstract interfaces.

        * tests/IDL_Test/fwd.idl:

          Just after an interface with a concrete and an abstract parent,
          added another interface with the same parents in reverse order.
          This change is to test the order of generated base class stub
          constructor calls in the stub inline file.

Thu Sep 01 08:30:31 2005  Gary Maxey  <gary.maxey@hp.com>

        * TAO_IDL/be/be_visitor_typecode/union_typecode.cpp:
          Add extra underscore in generated names to help reduce conflicts
          with user supplied names.

Thu Sep  1 14:54:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Event_Service/Event_Service.{h,cpp}:
          Made it possible to just pass -n to indicate that no service
          name should be used. At that moment the Event_Service will not
          register itself with the naming service. If also the default
          scheduling service option (none) is used, then the naming
          service is not used at all. This is usefull for systems where
          the Event_Service is with the option to write the IOR to file,
          then the user doesn't need the naming service.

        * docs/ec_options.html:
          Documentated the commandline options of the Event_Service executable

Thu Sep  1 10:15:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/MCAST_Parser.cpp:
        * tao/params.cpp:
        * tao/Transport_Connector.cpp:
          Fixed 64bit conversion warnings

Thu Sep  1 09:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.{h,cpp}:
          Fixed gcc4 compile errors

Thu Sep  1 08:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_interface.cpp:
          Fixed variable not used warning

Thu Sep  1 07:44:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/default_resource.cpp:
          Use the new ACE_REMOVE_SERVICE_DIRECTIVE macro to remove the
          TAO_CodeSet. Thanks to Lothar Werzinger <lothar at xcerla dot com>
          for reporting this. This fixes bugzilla bug 2227

Wed Aug 31 21:49:41 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/IDL_Test/fwd.idl:

          Added simple test case to reproduce the situation described
          below in

          Wed Aug 31 21:19:41 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>.

Wed Aug 31 21:19:41 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:

          Removed some unnecessary code.

        * TAO_IDL/be/be_interface.cpp (redefine):

          Changed the method to handle the use case where an interface
          with one or more abstract parents has been forward declared,
          then fully defined. The IDL compiler maintains an internal
          queue of interfaces with mixed (abstract and concrete)
          parentage, in order to generate overloads of CORBA::release()
          and CORBA::is_nil(). The process of full definition after
          forward declaration ends up deleting the node that has
          been put in the queue (just after redefine() returns), so
          we now update the queue inside the redefine() method. Thanks
          to Paul Friberg <p.friberg@isti.com> for providing the
          sample IDL that uncovered the bug.

Wed Aug 31 18:24:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * docs/Options.html:
          Corrected description of option ORBUseSharedProfiles which in
          reality is 'ORBUseSharedProfile' (without the 's') and by
          is *disabled* instead of enabled!

Wed Aug 31 11:53:51 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Any/Recursive/NonRecursive.idl:
        * tests/Any/Recursive/RecursiveHello.mpc:

          New IDL containing non-recursive structures that triggered the
          TAO_IDL recursive type false positive problem described in bug
          2225.  This IDL will be used to prevent such problems from being
          reintroduced.  Thanks to Bruce MacDonald
          <brucemac at netcomuk dot co dot uk> for supplying this IDL.

Wed Aug 31 10:53:06 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp:
        * TAO_IDL/be/be_visitor_typecode/union_typecode.cpp:
        * TAO_IDL/be/be_visitor_typecode/value_typecode.cpp:

          Fixed false positive recursion detection by using Jeff's existing
          type-specific in_recursion() method.  Thanks to Jeff for
          explaining how to use that method.  [Bug 2225]

Wed Aug 31 13:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/TypeCode.h:
          Export the unaliased_kind method

Wed Aug 31 13:12:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BooleanSeqC.{h,cpp}:
        * tao/CharSeqC.{h,cpp}:
        * tao/DoubleSeqC.{h,cpp}:
        * tao/FloatSeqC.{h,cpp}:
        * tao/AnyTypeCode/BooleanSeqA.{h,cpp}:
        * tao/AnyTypeCode/CharSeqA.{h,cpp}:
        * tao/AnyTypeCode/DoubleSeqA.{h,cpp}:
        * tao/AnyTypeCode/FloatSeqA.{h,cpp}:
          Regenerated

Wed Aug 31 12:33:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/TypeCode.{h,cpp,inl}:
          Moved unaliased_kind to the cpp file, it uses a TypeCode_var
          which requires again the TypeCode_methods which causes issues
          with GCC4

Wed Aug 31 12:09:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/corba.h:
          Removed include of AnyTypeCode/TypeCode.h

        * tao/Exception.h:
          Removed _tc_exception_type

        * tao/Exception_Data.h:
          Added forward declaration CORBA::TypeCode_ptr

        * tao/Profile.h:
          Removed not needed forward declarations

Wed Aug 31 11:56:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/IFR_Service/be_global.h:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Client_Request_Interceptor.h:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Request_Interceptor.h:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Server_Request_Interceptor.h:
          Fixed GCC4 error

        * tao/TypeCode.cpp:
          Removed this file, it shouldn't be in the archive anymore

        * tao/Environment.i (_nil):
          Use a static cast instead of a c-style cast

        * tao/Object.{cpp,i} (is_nil):
          Use true/false instead of 1/0

        * tao/AnyTypeCode/TC_Constants_Forward.h:
          Added forward declaration of TypeCode

Wed Aug 31 11:21:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/IFR_Service/IFR_Service.h:
          Fixed GCC4 error

        * tao/ULongSeq.pidl:
          Updated regeneration instructions

        * tao/ULongSeqC.{h,cpp}:
        * tao/AnyTypeCode/ULongSeqA.{h,cpp}:
          Regenerated without patching.

Wed Aug 31 10:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/WStringSeq.pidl:
        * tao/WCharSeq.pidl:
          Updated regeneration instructions

        * tao/WStringSeqC.{h,cpp}:
        * tao/WCharSeqC.{h,cpp}:
        * tao/AnyTypeCode/WStringSeqA.{h,cpp}:
        * tao/AnyTypeCode/WCharSeqA.{h,cpp}:
          Regenerated without patching.

Wed Aug 31 10:01:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Notify_Service/Notify_Server.cpp
        * orbsvcs/Notify_Service/Notify_Service.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedSupplierAdmin.cpp
        * orbsvcs/orbsvcs/IFRService/HomeDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils_T.cpp
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.cpp
        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp
        * orbsvcs/tests/Notify/Driver/main.cpp
        * orbsvcs/tests/Time/Client_i.cpp
        * tao/AnyTypeCode/append.cpp
        * tao/DynamicAny/DynStruct_i.cpp
        * tao/DynamicAny/DynUnion_i.cpp
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.cpp
        * tao/PortableServer/Default_Servant_Dispatcher.cpp
        * tao/PortableServer/LifespanStrategyPersistent.cpp
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp
        * tao/RTCORBA/RT_Endpoint_Utils.cpp
        * tao/RTCORBA/RT_Protocols_Hooks.cpp
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp
        * tests/Exposed_Policies/Policy_Verifier.cpp
        * tests/MProfile_Connection_Timeout/client.cpp
        * tests/NestedUpcall/MT_Client_Test/server.cpp
        * tests/NestedUpcall/Triangle_Test/server_B.cpp
        * tests/ORT/ServerRequestInterceptor.cpp
        * tests/Policies/Manipulation.cpp
        * tests/Portable_Interceptors/Benchmark/client.cpp
          Fixed emulated exception fuzz errors

Wed Aug 31 09:27:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_TPC_ProxySupplier.cpp:
          Replaced deprecated ACE cast macro

Wed Aug 31 09:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.h:
          Reordered includes to fix vc71 link warnings

Tue Aug 30 17:05:11 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

Tue Aug 30 16:30:30 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Notify_Service/Notify_Service.cpp (shutdown):

          Removed code that abuses ._retn() to release orb, poa,
          naming context, etc.  This may have been done because
          the driver class was previously a file-scope static,
          but now that it's allocated on the stack within main()
          we can let the destructor release these variables.

Tue Aug 30 16:09:53 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Notify_Service/Notify_Server.cpp:

          Removed extraneous ACE_DEBUG().

Tue Aug 30 15:56:49 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Notify_Service/Notify_Server.cpp:

          Changed to add support for clean shutdown with SIGINT/SIGTERM
          using the Service_Shutdown class from the Svc_Utils library.

Tue Aug 30 12:42:18 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_Factory.cpp:

          Removed inclusion of .i files to complete my earlier commit.

Tue Aug 30 11:22:51 2005  Steve Totten  <totten_s@ociweb.com>

        * tests/IDL_Test/IDL_Test.mpc:
        * tests/IDL_Test/array_only.idl:
          Added a test for the IDL compiler to make sure code generated for
          an IDL file that contains nothing but an array definition will
          compile correctly.  Thanks to Yevgen Galchenko for supplying the
          test case.

Tue Aug 30 10:03:24 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching_Task.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxyConsumer.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxySupplier.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxySupplier.cpp:

          Fixed errors in Fuzz build and use of deprecated ACE cast macros

        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.i:
        * orbsvcs/orbsvcs/Event/EC_TPC_Factory.i:

          Removed these b/c they're empty and fix a fuzz build.

Tue Aug 30 14:43:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * docs/Options.html:
          Added docu for new IPv6 specific options (ORBPreferIPV6Interfaces and
          ORBConnectIPV6Only).

Tue Aug 30 14:23:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Kokyu_dsrt_schedulers/EDF_Scheduler.cpp
        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.cpp
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduler.cpp
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduler.cpp
        * examples/RTCORBA/Activity/Activity.cpp
        * examples/RTCORBA/Activity/Task_Stats.cpp
        * orbsvcs/Concurrency_Service/Concurrency_Service.cpp
        * orbsvcs/Event_Service/Event_Service.cpp
        * orbsvcs/FTRT_Event_Service/Event_Service/FT_EventService.cpp
        * orbsvcs/FTRT_Event_Service/Factory_Service/FTRTEC_Factory_Service.cpp
        * orbsvcs/FTRT_Event_Service/Gateway_Service/FTRTEC_Gateway_Service.cpp
        * orbsvcs/LifeCycle_Service/LifeCycle_Service.cpp
        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.cpp
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.cpp
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.cpp
        * orbsvcs/Naming_Service/Naming_Server.cpp
        * orbsvcs/Naming_Service/Naming_Service.cpp
        * orbsvcs/Notify_Service/Notify_Server.cpp
        * orbsvcs/Notify_Service/Notify_Service.cpp
        * orbsvcs/Scheduling_Service/Scheduling_Service.cpp
        * orbsvcs/Time_Service/Clerk_i.cpp
        * orbsvcs/Time_Service/Server_i.cpp
        * orbsvcs/Trading_Service/Trading_Service.cpp
        * orbsvcs/examples/Notify/Lanes/Consumer_Client.cpp
        * orbsvcs/examples/Notify/Lanes/Supplier_Client.cpp
        * orbsvcs/examples/Notify/ThreadPool/Consumer_Client.cpp
        * orbsvcs/examples/Notify/ThreadPool/Supplier_Client.cpp
        * orbsvcs/orbsvcs/Scheduler_Factory.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.cpp
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.cpp
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.cpp
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Factory.cpp
        * orbsvcs/orbsvcs/Event/EC_Sched_Factory.cpp
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Loader.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_Loader.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Identification_Service.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Service.cpp
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor.cpp
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor_Impl.cpp
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Completion_Handler.cpp
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connection_Handler.cpp
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connector.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp
        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp
        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp
        * orbsvcs/orbsvcs/Sched/DynSched.cpp
        * orbsvcs/orbsvcs/Sched/Scheduler.cpp
        * orbsvcs/orbsvcs/Trader/Trader.cpp
        * orbsvcs/orbsvcs/Trader/Trading_Loader.cpp
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Receiver_Stats.cpp
        * orbsvcs/tests/FtRtEvent/consumer.cpp
        * orbsvcs/tests/FtRtEvent/supplier.cpp
        * orbsvcs/tests/Notify/Destroy/main.cpp
        * orbsvcs/tests/Notify/Driver/main.cpp
        * orbsvcs/tests/Notify/lib/Activation_Manager.cpp
        * orbsvcs/tests/Notify/lib/Command.cpp
        * orbsvcs/tests/Notify/lib/Driver.cpp
        * orbsvcs/tests/Redundant_Naming/client.cpp
        * tao/CORBALOC_Parser.cpp
        * tao/IIOP_Connection_Handler.cpp
        * tao/IIOP_Profile.cpp
        * tao/MCAST_Parser.cpp
        * tao/ORB_Core.cpp
        * tao/default_client.cpp
        * tests/MProfile_Connection_Timeout/client.cpp
          Replaced ACE_LIB_TEXT with ACE_TEXT. ACE_LIB_TEXT is only for in the
          ACE lib itself.

Tue Aug 30 14:04:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.h:
          Fixed export macro

Tue Aug 30 06:42:46 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Server.cpp:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Server.cpp:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Server.cpp:

          Fix emulated exception builds.

Tue Aug 30 13:32:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Param_Test/server.cpp:
        * tests/Param_Test/except.cpp:
        * tests/Faults/test_i.cpp:
        * tests/Faults/ping.cpp:
        * tests/AMI_Timeouts/timeout_client.cpp:
        * tests/InterOp-Naming/Server_i.cpp:
        * tests/Bug_1476_Regression/Client_Task.cpp:
        * tests/Bug_1482_Regression/Reply_Handler.cpp:
        * tests/Big_Oneways/Session.cpp:
          Fixed emulated exception fuzz errors

Tue Aug 30 13:22:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PolicyS.cpp:
          Regenerated this file and merged some of the changes caused by that,
          especially the include order

Tue Aug 30 12:35:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/util/utl_global.cpp:
          Fixed hasspace implementation, if an empty string was passed the
          function would loop forever. Also a space as second last character
          in the string wasn't detected

Tue Aug 30 10:09:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Time_Service/Server_i.cpp:
          Fixed compilation problem with emulated exceptions

Tue Aug 30 09:12:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * tao/CORBALOC_Parser.cpp:
        * IIOP_Acceptor.cpp:
        * IIOP_Connection_Handler.cpp:
        * IIOP_Connector.cpp:
        * IIOP_Endpoint{.h .cpp. i}:
        * IIOP_Profile.cpp:
        * IIOP_Transport.cpp:
        * Invocation_Endpoint_Selectors.cpp:
        * MCAST_Parser.cpp:
        * orbconf.h:
        * ORB_Core.cpp:
        * params{ .h .cpp}:
        * orbsvcs/orbsvcs/IOR_Multicast.cpp:

          Added IPv6 support for TAO.

Tue Aug 30 06:26:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.h:
          Fixed pragma once is obsolete warning

Tue Aug 30 01:20:32 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.cpp (queue_full_action):

          Fixed "'*/' found outside of comment" warning.

Mon Aug 29 18:39:29 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/AV/AV_Core.h:
        * orbsvcs/orbsvcs/AV/Policy.cpp::
        * orbsvcs/orbsvcs/AV/Protocol_Factory.h::
        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerControl.h::
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.h::
        * orbsvcs/orbsvcs/CosEvent/CEC_DynamicImplementation.h::
        * orbsvcs/orbsvcs/CosEvent/CEC_Factory.h::
        * orbsvcs/orbsvcs/CosEvent/CEC_Pulling_Strategy.h::
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.cpp::
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.h::
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_Pulling_Strategy.cpp::
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.cpp::
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierControl.h::
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.h::
        * orbsvcs/orbsvcs/Event/ECG_Reactive_ConsumerEC_Control.cpp::
        * orbsvcs/orbsvcs/Event/ECG_Reconnect_ConsumerEC_Control.cpp::
        * orbsvcs/orbsvcs/Event/EC_RTCORBA_Factory.cpp::
        * orbsvcs/orbsvcs/Event/EC_Reactive_ConsumerControl.cpp:
        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Replication_Strategy.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_Base.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_Base.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ForwardCtrlServerInterceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ForwardCtrlServerInterceptor.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ClientORBInitializer.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_MemberLocator.cpp:
        * orbsvcs/orbsvcs/Log/LogActivator.h:
        * orbsvcs/orbsvcs/Log/Log_Persistence_Strategy.h:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Initializer.h:
        * orbsvcs/orbsvcs/HTIOP/htiop_endpointsC.cpp:
        * orbsvcs/orbsvcs/Notify/Builder.h:
        * orbsvcs/orbsvcs/Notify/POA_Helper.h:
        * orbsvcs/orbsvcs/Notify/Properties.h:
        * orbsvcs/orbsvcs/Notify/Timer.h:
        * orbsvcs/orbsvcs/Notify/Timer_Reactor.cpp:
        * orbsvcs/orbsvcs/PortableGroup/GOA.cpp:
        * orbsvcs/orbsvcs/PortableGroup/GOA.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Manipulator.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Servant_Dispatcher.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Request_Dispatcher.cpp:
        * orbsvcs/orbsvcs/PortableGroup/Portable_Group_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:
        * orbsvcs/orbsvcs/SSLIOP/ssl_endpointsC.cpp:
        * orbsvcs/orbsvcs/Trader/Trading_Loader.h:

          Reordered include directives to make sure all necessary
          non-dependent names are parsed before the templates that use
          them.  Addresses g++ 3.4.x or better compile-time errors.

Mon Aug 29 18:45:49 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * tao/Wait_On_Read.cpp:
        * tao/Wait_Strategy.cpp:

          Added makers that aid in specializing the wait strategy
          implementation in TAO.

Mon Aug 29 14:08:42 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * tao/GIOP_Message_Base.h:
        * tao/Strategies/UIOP_Transport.cpp:
        * tao/Strategies/DIOP_Transport.cpp:
        * tao/Strategies/SHMIOP_Transport.cpp:

          Added markers that aid in specializing TAO's pluggable messaging
          implementation with either GIOP or GIOP_Lite when the type of
          messaging object is known a priori.

Mon Aug 29 12:08:16 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Server.cpp:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Server.cpp:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Server.cpp:

          Changed to clarify error message output when service
          initialization fails.

Mon Aug 29 09:03:55 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * tao/default_resource.cpp:
        * tao/Strategies/advanced_resource.cpp:

          Added markers within the code to specialize TAO components with
          concrete implementations. This commit relates to the commit on
          Sun Aug 28 14:25:07 2005 Arvind S. Krishna
          <arvindk@dre.vanderbilt.edu> on specializing middleware
          components. The motivation here is added for sake of clarity.

          As a part of the Feature Oriented Customizer (FOCUS) tool being
          developed in my research, we are trying to specialize framework
          implementation and strategies within middleware with concrete
          counterparts when their implementation/type is known a priori.
          FOCUS provides an XML based transformation engine, where the
          specialization transformations are captured in XML file and a
          weaver specializes the code.

          To help in this transformation process, this commit adds markers
          within the source code. These markers are added as special
          comments. For example, //@@
          REACTOR_SPL_INCLUDE_FORWARD_DECL_ADD_HOOK represents a hook
          where forward declarations and include files are added by the
          weaver. As these markers are comments therefore should not
          affect normal applications in *any* manner. Additionally,
          applications that use multiple reactor implementations not be
          affected/do not need any change. Currently, these
          specializations are targeted for TAO middleware, where
          applications know the target reactor a priori and want to
          leverage the specialization to improve performance.

Mon Aug 29 13:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Time_Service/Server_i.cpp:
          Fixed emulated exception fuzz errors

Mon Aug 29 13:37:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/LoadBalancer/LoadManager.cpp:
          Fixed emulated exception fuzz errors

Mon Aug 29 13:35:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/default_client.cpp:
          Corrected argument initialisation order to silence GNU warnings

Sun Aug 28 13:36:19 2005  Arvind S. Krishna  <arvindk@dre.vanderbilt.edu>

        * tao/orbconf.h:

          Updated the TAO_NULL_LOCK_REACTOR typedef to conform to the
          following Reactor change: Fri Aug 26 18:01:31 2005  Steve Huston
          <shuston@riverace.com>. In particular, updated
          ACE_Select_Reactor_Token_T to ACE_Reactor_Token_T in the typedef
          for ACE_Select_Reactor.

Sat Aug 27 13:32:55 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:

          Fixed the command line parsing to preserve the literal
          quotes if they are used in an include path that has a space,
          so the path is passed to the preprocessor with the literal
          quotes following '-I'. Since the string is also added to
          the IDL compiler's list of include paths this way, the
          literal quotes must also be stripped off when using the
          include path to form a full path for validation of
          included files. This fix closes [BUGID:2219]. Thanks to
          Dorian Hileaga <hdorianh@hotmail.com> for reporting the
          problem.

Sat Aug 27 11:56:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/ImplRepo_Service/Forwarder.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.cpp
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.cpp
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter_Builder.cpp
        * orbsvcs/orbsvcs/Event/EC_RTCORBA_Factory.cpp
          Fixed emulated exception errors

Sat Aug 27 10:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.cpp:
          Added missing semi colon

Fri Aug 26 23:48:25 2005  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        Fix for bug

        http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=2224

        * tao/Client_Strategy_Factory.cpp:
        * tao/Client_Strategy_Factory.h:
        * tao/default_client.cpp:
        * tao/default_client.h:

          New strategy ORBCOnnectionHandlerCleanup .

        * tao/Connection_Handler.cpp:

          Use the id for deregistration instead of the handle.

        * tao/Transport_Cache_Manager.cpp:
        * tao/Wait_On_Read.cpp:

          Do the registration and deregistration. One could possibly think
          of doing a suspend and resume instead of
          registration/deregistration. Our reactor interfaces do not
          provide a way to add a handler in a suspended mode. Doing a
          registration and then calling suspend () could provide a window
          of time where a thread could be dispatched. Hence the decision to
          use registration/deregistration combo.

Fri Aug 26 14:07:57 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.cpp:

          Fix the "export" class used in the ACE_FACTORY_DEFINE for the
          TAO_EC_Simple_Queue_Full_Action.  Hopefully this fixes the
          internal compiler error on mingw compilers.

        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxySupplier.cpp:

          Fix problems for no-exception builds.

Fri Aug 26 18:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/Server_Request.cpp:
          Fixed fuzz error

Fri Aug 26 18:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CORBALOC_Parser.cpp:
        * tao/ORB_Core.cpp:
        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/PortableServer/Root_POA.cpp:
          Fixed fuzz errors

Fri Aug 26 11:42:29 2005  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Codeset/Codeset_Manager_i.cpp:
          The codeset manager was doing the wrong thing when no codeset
          information was available. The "default" codeset should be used
          in that case, not the "fallback" codeset, which is only to be
          used when codeset information is available, but no other codeset
          will do.

        * tao/Codeset/UTF8_Latin1_Translator.cpp:
          This translator was not correctly appending the NUL to the end
          of outbound strings.

Fri Aug 26 11:33:07 2005  Justin Michel  <michel_j@ociweb.com>

        * tao/AnyTypeCode/Any_Unknown_IDL_Type.h:
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp:

        * tao/CDR.h:
        * tao/CDR.i:
        * tao/LocateRequest_Invocation.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/orbconf.h:

          Add a new compile-time setting to TAO that controls whether output
        CDRs are reset() after a request is sent. Enabling this feature greatly
        reduces memory usage in some situations such as event services that
        occasionally send large messages. However, it also currently exposes
        (or introduces) a multi-threading bug introducing deadlocks or infinite
        loops. One (of several) test that can show the problem is
        TAO/orbsvcs/tests/Notify/Basic/run_test.pl notify.mt.conf.

          Add a new constructor for input CDR that allows specifying a ACE_Lock* which
        will be used to protect the ACE_Data_Block used in the CDR. This will be
        used by the Any impl above. The current implementation uses a global mutex
        to protect all instances, because the internals of the Any impl will
        be copied around, and there's no way to give ownership of the lock to the
        actual ACE_Data_Block that uses it.

Fri Aug 26 06:33:04 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Logging_Service/Basic_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/Event_Logging_Service/Makefile.am:

          Regenerated.

        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.h:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.h:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.h:

          Changed to add support for the thread pool concurrency model.  A
          new "-t" command line parameter is used to specify the number of
          threads in the pool.

        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Server.cpp:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Server.cpp:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Server.cpp:

          Changed to add support for clean shutdown with SIGINT/SIGTERM
          using the Service_Shutdown class from the Svc_Utils library.

        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Server.cpp:
        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.h:

          Split main() out into new file Basic_Logging_Server.cpp.

        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Server.cpp:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.h:

          Split main() out into new file Event_Logging_Server.cpp.

Fri Aug 26 13:45:10 2005  Simon McQueen  <sm@prismtech.com>

        * tests/Portable_Interceptors/PolicyFactory/server.cpp:
        * tests/OBV/Supports/Supports_Test_impl.cpp:
        * tests/OBV/Supports/client.cpp:
        * tests/Big_Twoways/Session.cpp:
        * tests/NestedUpcall/Triangle_Test/server_B.cpp:
        * tests/NestedUpcall/MT_Client_Test/server.cpp:
        * tests/Bug_1551_Regression/Reply_Handler.cpp:
        * tests/InterOp-Naming/Server_i.cpp:

          Chipping away at the fuzz errors.

Fri Aug 26 13:17:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Acceptor_Registry.cpp:
        * tao/default_server.h:
        * tao/PortableServer/PortableServer_WFunctions.cpp:
        * tao/Strategies/DIOP_Acceptor.cpp:
          Fixed 64bit conversion warnings

Fri Aug 26 12:30:47 2005  Simon McQueen  <sm@prismtech.com>

        * tao/AnyTypeCode.mpc:

          Removed ServicesA.cpp from unconditional compilation list.
          ServicesC.cpp does not get built in min corba builds.

        * tao/extra_anytypecode.mpb:

          Create feature template to include ServicesA.cpp only if not
          a min corba build.

Fri Aug 26 10:18:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.cpp:
          Removed handling of ORBGlobalCollocation, it is deprecated for some
          time. Also removed handling of ORBCollocation==YES, this is now
          ORBCollocation==global.

Fri Aug 26 09:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp
        * TAO_IDL/be/be_visitor_exception/exception_ch.cpp
        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp
        * TAO_IDL/be/be_visitor_exception/exception_ctor.cpp
        * TAO_IDL/be/be_visitor_operation/ami_exception_holder_operation_cs.cpp
        * TAO_IDL/be/be_visitor_operation/exceptlist_cs.cpp
        * TAO_IDL/be/be_visitor_operation/exceptlist_ss.cpp
        * TAO_IDL/include/utl_err.h
        * TAO_IDL/util/utl_err.cpp
        * docs/compiler.html
          When the -St option is used to suppress typecodes, we now
          also suppress the type codes of user exceptions. There is no
          requirement for this from the orb, the only functionality the
          user looses is the ability to retrieve which exceptions an
          operation throws using interceptors.

        * tao/Adapter_Factory.cpp
        * tao/BiDir_Adapter.cpp
        * tao/CORBALOC_Parser.cpp
        * tao/Cleanup_Func_Registry.cpp
        * tao/DLL_Parser.cpp
        * tao/Endpoint_Selector_Factory.cpp
        * tao/Environment.cpp
        * tao/Exclusive_TMS.cpp
        * tao/FILE_Parser.cpp
        * tao/IFR_Client_Adapter.cpp
        * tao/IOR_Parser.cpp
        * tao/LF_Follower.cpp
        * tao/Leader_Follower.cpp
        * tao/MCAST_Parser.cpp
        * tao/Muxed_TMS.cpp
        * tao/ORB.cpp
        * tao/ORB_Core.cpp
        * tao/ORB_Table.cpp
        * tao/Resource_Factory.cpp
        * tao/Stub.cpp
        * tao/Stub_Factory.cpp
        * tao/TSS_Resources.cpp
        * tao/Transport_Cache_Manager.cpp
        * tao/default_resource.cpp
        * tao/Codeset/Codeset_Manager_i.cpp
        * tao/Codeset/UTF16_BOM_Factory.cpp
        * tao/Codeset/UTF8_Latin1_Factory.cpp
        * tao/DynamicAny/DynAnyFactory.cpp
        * tao/DynamicAny/DynUnion_i.cpp
        * tao/DynamicInterface/ExceptionList.cpp
        * tao/DynamicInterface/Request.cpp
        * tao/IORManipulation/IORManipulation.cpp
        * tao/Messaging/Asynch_Invocation.cpp
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.cpp
        * tao/PortableServer/Active_Object_Map.cpp
        * tao/PortableServer/ImR_Client_Adapter.cpp
        * tao/PortableServer/LifespanStrategyPersistent.cpp
        * tao/PortableServer/LifespanStrategyTransient.cpp
        * tao/PortableServer/Object_Adapter.cpp
        * tao/PortableServer/Operation_Table_Dynamic_Hash.cpp
        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp
        * tao/PortableServer/RequestProcessingStrategyServantLocator.cpp
        * tao/PortableServer/Root_POA.cpp
        * tao/PortableServer/Root_POA.inl
        * tao/RTCORBA/RT_Mutex.cpp
        * tao/RTCORBA/RT_ORB.cpp
        * tao/RTCORBA/RT_Protocols_Hooks.cpp
        * tao/RTCORBA/Thread_Pool.cpp
        * tao/RTScheduling/Current.cpp
        * tao/Strategies/DIOP_Connection_Handler.cpp
        * tao/Strategies/DIOP_Connector.cpp
        * tao/Strategies/SCIOP_Acceptor.cpp
        * tao/Strategies/SCIOP_Connection_Handler.cpp
        * tao/Strategies/SCIOP_Connector.cpp
        * tao/Strategies/SHMIOP_Acceptor.cpp
        * tao/Strategies/SHMIOP_Connection_Handler.cpp
        * tao/Strategies/SHMIOP_Connector.cpp
        * tao/Strategies/UIOP_Acceptor.cpp
        * tao/Strategies/UIOP_Connection_Handler.cpp
        * tao/Strategies/UIOP_Connector.cpp
        * tao/Strategies/advanced_resource.cpp
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp
        * tao/Valuetype/AbstractBase.cpp
        * tao/Valuetype/StringValueC.cpp
        * tao/Valuetype/ValueFactory_Map.cpp
          Fixed emulated exception fuzz errors and removed explicit
          template instantiations

Thu Aug 25 17:15:27 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

Thu Aug 25 16:43:15 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/AnyTypeCode/Any_Array_Impl_T.cpp:

          Added include of Any.h, similar to Any_Dual_Impl_T.cpp, needed
          when compiling code generated for arrays and not passing -Sa
          or -St to the IDL compiler.

Thu Aug 25 11:00:47 2005  Chris Cleeland  <cleeland_c@ociweb.com>

          This does two things in the Real Time Event Service:

          1. Added a new dispatching strategy--Thread Per Consumer.  This
          strategy is similar to the MT dispatching strategy in that it
          separates the thread that receives the push() from a supplier
          from the thread that does the eventual push() to the
          consumer(s), but it differs from MT in that MT has a pool of
          threads pulling from a single queue and ultimately potentially
          servicing every consumer, whereas TPC has a queue for *each*
          consumer and, thus, a single thread dedicated to pushing to that
          consumer.  This insures that a badly-behaved consumer CANNOT
          have an adverse effect on the channel or supplier.

          2. It adds a means by which an application can specify what the
          RTEC should do if the TAO_EC_Queue fills up.  This behavior is
          encapsulated in a derivation of an ACE_Service_Object, called
          TAO_EC_Queue_Full_Service_Object.  The RTEC looks for a service
          object of a particular name (default in macro
          TAO_EC_DEFAULT_QUEUE_FULL_SERVICE_OBJECT_NAME)

        * orbsvcs/orbsvcs/RTEvent_Serv.mpc:

          Updated to build new files that are part of the TPC strategy.

        * orbsvcs/orbsvcs/Event/EC_Default_Factory.h:

          Added new data member to hold the name of the service object
          used for queue full behavior.

        * orbsvcs/orbsvcs/Event/EC_Default_Factory.i:
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.cpp:

          Added new option, -ECQueueFullServiceObject, that can be used to
          specify the name/tag in the svc.conf file through which the RTEC
          should look for a queue full service object.

        * orbsvcs/orbsvcs/Event/EC_Defaults.h:

          Added default service object name/tag,
          TAO_EC_DEFAULT_QUEUE_FULL_SERVICE_OBJECT_NAME.

        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.h:
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.i:
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.cpp:

          Added the TAO_EC_Simple_Queue_Full_Action service object
          implementation into here, since only the TAO_EC_Dispatching_Task
          needs to know about it.  This default implementation has only
          two choices of behavior: "wait" for not-full condition (the default) or
          "discard" silently.  Specification of the desired behavior is by
          putting the word "wait" or "discard" as the first argument in this
          object's svc.conf arg vector.

        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.i:

          Created new macros, TAO_EC_QUEUE_LWM and TAO_EC_QUEUE_HWM, that
          can be used to specify the low-water and high-water marks for
          the TAO_EC_Queue.  Previously, these were hard-coded values.

        * orbsvcs/orbsvcs/Event/EC_MT_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_MT_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching_Task.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching_Task.cpp:

          Modifications to CTORs to allow passing of a service object
          pointer from the factory down through the dispatching strategy
          down to the dispatching task itself.

        * orbsvcs/orbsvcs/Event/EC_TPC_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_Factory.cpp:

          Minor modifications to pass the service object to the
          dispatching strategy.

        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.i:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching_Task.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_Dispatching_Task.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_Factory.i:
        * orbsvcs/orbsvcs/Event/EC_TPC_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxyConsumer.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxySupplier.h:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxySupplier.i:
        * orbsvcs/orbsvcs/Event/EC_TPC_ProxySupplier.cpp:

          Rather than cluttering the EC_Default_Factory with yet another
          dispatch strategy, this derives from the EC_Default_Factory and
          replaces certain behaviors with its own.  Thus, in order to use
          this new strategy you will have to replace the call in your code
          for TAO_EC_Default_Factory::init_svcs() with
          TAO_EC_TPC_Factory::init_svcs().

        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.h: Moved event_channel_,
          consumer_, and refcount_ into "protected" section so subclasses
          can have access.

        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.h: Moved event_channel_
          into "protected" section so subclasses can have access.

Thu Aug 25 07:11:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_operation/ami_exception_holder_operation_cs.cpp:
          Fixed small bug

Wed Aug 24 21:57:37 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac: Copied in updated copyright paragraph from COPYING.

Wed Aug 24 18:12:16 2005  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/util/utl_global.cpp:

          Avoid recording duplicate file names in ::add_to_included_idl_files.
          This fixes bug #2221.

Wed Aug 24 11:59:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.cpp:
          Reordered includes to fix gcc4 build problems

Wed Aug 24 10:20:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Dynamic/server_interceptor.cpp:
        * tests/Portable_Interceptors/Dynamic/client_interceptor.cpp:
        * tests/Portable_Interceptors/Collocated/Dynamic/interceptors.cpp:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Client_Request_Interceptor.cpp:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Server_Request_Interceptor.cpp:
          Explicitly include the AnyTypeCode_Adapter_Impl.h. These tests
          use the functionality to get the method arguments as Any and
          for this we now need the AnyTypeCode adapter. Fixes test failures
          in the static builds.

        * tao/PI/PI.cpp:
          Also do the process directive for the PICurrent Loader

        * tao/PI/PICurrent_Loader.{h,cpp}:
          No static initializer needed here, this is in the PI file

        * tests/Portable_Interceptors/PICurrent/server.cpp:
          Fixed static runtime error

Wed Aug 24 09:13:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        On the client side we passed the typecode of the user exceptions to the
        invocation adapter, but this is only needed when interceptors are being
        used.

        * TAO_IDL/be/be_visitor_operation/ami_exception_holder_operation_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/exceptlist_cs.cpp:
          Generate a TAO_HAS_INTERCEPTORS==1 around the passing of the typecode
          of the user exception

        * TAO_IDL/be/be_visitor_operation/operation.cpp:
          Removed generation of an environment variable in the client side
          code which was not needed

        * tao/Exception_Data.h
        * tao/PI/ClientRequestInfo.cpp
          Only store and use the typecode of an user exception when
          interceptors are enabled

        * tao/ImR_Client/ImplRepo.pidl:
        * tao/ImR_Client/ServerObject.pidl:
          Updated regeneration instructions to not use -GA

        * tao/ImR_Client/ImplRepoA.h
        * tao/ImR_Client/ImplRepoC.cpp
        * tao/ImR_Client/ImplRepoC.h
        * tao/ImR_Client/ImplRepoC.inl
        * tao/ImR_Client/ImplRepoS.cpp
        * tao/ImR_Client/ImplRepoS.h
        * tao/ImR_Client/ServerObjectA.h
        * tao/ImR_Client/ServerObjectC.cpp
        * tao/ImR_Client/ServerObjectC.h
        * tao/ImR_Client/ServerObjectC.inl
        * tao/ImR_Client/ServerObjectS.cpp
        * tao/ImR_Client/ServerObjectS.h
          Regenerated

        * tao/ImR_Client/ImplRepoA.cpp
        * tao/ImR_Client/ServerObjectA.cpp
          Removed

        * tao/Makefile.am:
          Updated

Tue Aug 23 18:09:07 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/Bug_1395_Regression/Makefile.am:
        * orbsvcs/tests/Bug_1630_Regression/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Common/Makefile.am:

          Regenerated.

        * orbsvcs/tests/Event/Mcast/Common/ECMcastTests_lib.mpc:

          Removed nonexistant ectest_export.h file from Header_Files
          section.

Tue Aug 23 15:54:52 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp (gen_stub_hdr_includes):

          Another round of generated include directive reording to address
          template related order of parsing issues in g++ 3.4.x or better.

        * tao/Any_Insert_Policy_T.h (any_insert):

          Made these methods non-virtual.  All binding is done at
          compile-time so there is no need make them virtual.  Also
          addresses "class with virtual funtions but no virtual
          destructor" g++ 4.0 warnings.

        * tao/IFR_Client/IFR_ComponentsC.h:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.h:

          More g++ 3.4.x or better order of parsing related template
          error fixes.

Tue Aug 23 10:43:07 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/IORInterceptor/IORInterceptor_Adapter_Factory_Impl.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Factory_Impl.h:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.h:
        * tao/IORManipulation/IORA.cpp:
        * tao/ImR_Client/ImplRepoA.cpp:
        * tao/ImR_Client/ImplRepoS.cpp:
        * tao/ImR_Client/ServerObjectA.cpp:
        * tao/ImR_Client/ServerObjectS.cpp:
        * tao/ObjRefTemplate/Default_ORTA.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplateA.cpp:
        * tao/RTCORBA/RTCORBAA.cpp:
        * tao/RTCORBA/RT_ORBInitializer.h:
        * tao/RTCORBA/rtcorba_export.h:
        * tao/RTCORBA/rtcorba_typedefs.h:
        * tao/RTPortableServer/RTPortableServerA.cpp:
        * tao/RTScheduling/RTSchedulerC.h:
        * tao/Strategies/sciop_endpointsC.cpp:
        * tao/Strategies/uiop_endpointsC.cpp:
        * tao/TypeCodeFactory/TypeCodeFactoryA.cpp:
        * tao/TypeCodeFactory/TypeCodeFactoryC.h:
        * tao/TypeCodeFactory/TypeCodeFactory_Adapter_Impl.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
        * tao/Utils/RIR_Narrow.h:

          Reordered include directives to make sure all necessary
          non-dependent names are parsed before the templates that use
          them.  In the case of the "*A.h" files, this is a temporary
          work-around until TAO_IDL is updated.  Addresses g++ 3.4.x or
          better compile-time errors.

Tue Aug 23 14:03:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/SHMIOP_Acceptor.cpp:
          Fixed possible unitialized warning

Tue Aug 23 13:37:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.cpp:
          Added include of Any.h

Tue Aug 23 13:13:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Abstract_Servant_Base.h:
        * tao/PortableServer/Servant_Base.{h,cpp}:
          Changed the type of the operation name length to size_t to fix
          64bit conversion warnings

Tue Aug 23 12:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_operation/exceptlist_ss.cpp:
        * tao/Abstract_Servant_Base.h:
        * tao/CORBA_String.cpp:
        * tao/Invocation_Adapter.{h,inl}:
        * tao/ORB.cpp:
        * tao/ServerRequestInterceptor_Adapter.h:
        * tao/operation_details.{h,i}:
        * tao/Domain/DomainS.cpp:
        * tao/DynamicInterface/DII_Invocation_Adapter.{h,cpp}:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
        * tao/ImR_Client/ImplRepoS.cpp:
        * tao/ImR_Client/ServerObjectS.cpp:
        * tao/Messaging/Asynch_Invocation_Adapter.{h,cpp}:
        * tao/Messaging/MessagingS.cpp:
        * tao/PI_Server/ServerInterceptorAdapter.{h,cpp}:
        * tao/PI_Server/ServerRequestInfo.{h,inl}:
        * tao/PortableServer/PolicyS.cpp:
        * tao/PortableServer/Upcall_Wrapper.{h,cpp}:
        * tao/Valuetype/AbstractBase_Invocation_Adapter.{h,cpp}:
          Fixed several 64bit conversion warnings. The size of the
          exception list is now a CORBA::ULong, the length of the operation
          name is size_t.

Tue Aug 23 10:26:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/Request.cpp:
          Fixed 64bit conversion warnings and removed some not needed
          const casts

Tue Aug 23 10:03:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Fixed_Array_SArgument_T.{h,cpp}:
          Fixed compilation issues with vc6

Tue Aug 23 07:29:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_1395_Regression/Bug_1395_Regression.mpc:
          Added anytypecode

Mon Aug 22 23:03:02 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.h:

          Changed the event_log_factory_ member variable from a
          TAO_EventLogFactory_i to a pointer to a TAO_EventLogFactory_i.
          This delays execution of the constructor, which avoids the ORB
          being constructed implicitly, which in turn allows any -ORB...
          command line arguments to be parsed and removed from the argc/
          argv vector in Event_Logging_Service::init_ORB().

Mon Aug 22 21:33:37 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:

          Another round of generated include directive reording to address
          template related order of parsing issues in g++ 3.4.x or better.

        * tao/Typecode_typesC.h:
        * tao/ParameterModeC.h

          Removed unnecessary include directives.  They were causing
          headers to be included that prematurely caused some templates to
          be parsed before all non-dependent names were parsed.  Addresses
          g++ 3.4.x or better compile-time errors.

        * tao/AnyTypeCode/BooleanSeqA.h:
        * tao/AnyTypeCode/BoundsA.h:
        * tao/AnyTypeCode/CONV_FRAMEA.h:
        * tao/AnyTypeCode/CharSeqA.h:
        * tao/AnyTypeCode/CurrentA.h:
        * tao/AnyTypeCode/DomainA.h:
        * tao/AnyTypeCode/DoubleSeqA.h:
        * tao/AnyTypeCode/DynamicC.h:
        * tao/AnyTypeCode/Dynamic_ParameterC.h:
        * tao/AnyTypeCode/FloatSeqA.h:
        * tao/AnyTypeCode/GIOPA.h:
        * tao/AnyTypeCode/IIOPA.h:
        * tao/AnyTypeCode/IIOP_EndpointsA.h:
        * tao/AnyTypeCode/IOPA.h:
        * tao/AnyTypeCode/IOP_IORA.h:
        * tao/AnyTypeCode/LongDoubleSeqA.h:
        * tao/AnyTypeCode/LongLongSeqA.h:
        * tao/AnyTypeCode/LongSeqA.h:
        * tao/AnyTypeCode/Messaging_PolicyValueA.h:
        * tao/AnyTypeCode/NVList.h:
        * tao/AnyTypeCode/ObjectIdListA.h:
        * tao/AnyTypeCode/OctetSeqA.h:
        * tao/AnyTypeCode/PI_ForwardA.h:
        * tao/AnyTypeCode/ParameterModeA.h:
        * tao/AnyTypeCode/PolicyA.h:
        * tao/AnyTypeCode/Policy_ForwardA.h:
        * tao/AnyTypeCode/PortableInterceptorA.h:
        * tao/AnyTypeCode/ServicesA.h:
        * tao/AnyTypeCode/ShortSeqA.h:
        * tao/AnyTypeCode/StringSeqA.h:
        * tao/AnyTypeCode/SystemExceptionA.h:
        * tao/AnyTypeCode/TAOA.h:
        * tao/AnyTypeCode/TimeBaseA.h:
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp:
        * tao/AnyTypeCode/ULongLongSeqA.h:
        * tao/AnyTypeCode/ULongSeqA.h:
        * tao/AnyTypeCode/UShortSeqA.h:
        * tao/AnyTypeCode/ValueModifierA.h:
        * tao/AnyTypeCode/VisibilityA.h:
        * tao/AnyTypeCode/WCharSeqA.h:
        * tao/AnyTypeCode/WStringSeqA.h:
        * tao/AnyTypeCode/WrongTransactionA.h:
        * tao/AnyTypeCode/orb_typesA.h
        * tao/BiDir_GIOP/BiDirGIOP.cpp:
        * tao/CodecFactory/CDR_Encaps_Codec.cpp:
        * tao/CodecFactory/CDR_Encaps_Codec.h:
        * tao/CodecFactory/CodecFactory.h:
        * tao/CodecFactory/CodecFactory_impl.cpp:
        * tao/CodecFactory/CodecFactory_impl.h:
        * tao/CodecFactory/IOP_CodecC.h:
        * tao/CodecFactory/IOP_Codec_includeC.h:
        * tao/Domain/DomainS.h:
        * tao/DynamicAny/DynamicAny.h:
        * tao/DynamicAny/DynamicAnyC.h:
        * tao/DynamicInterface/Context.h:
        * tao/DynamicInterface/DII_Arguments.cpp:
        * tao/DynamicInterface/DII_Invocation.cpp:
        * tao/DynamicInterface/ExceptionList.h:
        * tao/IFR_Client/IFR_BaseC.h:
        * tao/IFR_Client/IFR_BasicC.h:
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp:
        * tao/IFR_Client/IFR_ComponentsC.cpp:
        * tao/IFR_Client/IFR_ExtendedC.cpp:
        * tao/IFR_Client/IFR_ExtendedC.h:
        * tao/Messaging/MessagingA.cpp:
        * tao/Messaging/MessagingS.cpp:
        * tao/Messaging/Messaging_No_ImplA.cpp:
        * tao/Messaging/Messaging_RT_PolicyA.cpp:
        * tao/Messaging/Messaging_SyncScope_PolicyA.cpp:
        * tao/Messaging/PollableC.cpp:
        * tao/Messaging/TAO_ExtA.cpp:
        * tao/PI/ClientRequestInfo.h:
        * tao/PI/ClientRequestInfoC.h:
        * tao/PI/ClientRequestInterceptorA.cpp:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.h:
        * tao/PI/InterceptorA.cpp:
        * tao/PI/Interceptor_List_T.cpp:
        * tao/PI/InvalidSlotA.cpp:
        * tao/PI/ORBInitInfoC.h:
        * tao/PI/ORBInitializerA.cpp:
        * tao/PI/ORBInitializer_Registry_Impl.h:
        * tao/PI/PI.h:
        * tao/PI/PICurrent.h:
        * tao/PI/PICurrentA.cpp:
        * tao/PI/PICurrent_Impl.h:
        * tao/PI/PIForwardRequestA.cpp:
        * tao/PI/PolicyFactoryC.h:
        * tao/PI/RequestInfoC.h:
        * tao/PI_Server/ServerInterceptorAdapter.h:
        * tao/PI_Server/ServerRequestInfoC.h:
        * tao/PI_Server/ServerRequestInterceptorC.h:
        * tao/PortableServer/AdapterActivatorA.cpp:
        * tao/PortableServer/ForwardRequestA.cpp:
        * tao/PortableServer/IdAssignmentPolicyA.cpp:
        * tao/PortableServer/IdUniquenessPolicyA.cpp:
        * tao/PortableServer/ImplicitActivationPolicyA.cpp:
        * tao/PortableServer/LifespanPolicyA.cpp:
        * tao/PortableServer/POAManagerC.cpp:
        * tao/PortableServer/PS_CurrentA.cpp:
        * tao/PortableServer/PS_ForwardA.cpp:
        * tao/PortableServer/PolicyS.cpp:
        * tao/PortableServer/PortableServerA.cpp:
        * tao/PortableServer/RequestProcessingPolicyA.cpp:
        * tao/PortableServer/ServantActivatorA.cpp:
        * tao/PortableServer/ServantLocatorA.cpp:
        * tao/PortableServer/ServantManagerA.cpp:
        * tao/PortableServer/ServantRetentionPolicyA.cpp:
        * tao/PortableServer/ThreadPolicyA.cpp:
        * tao/Valuetype/StringValueC.cpp:
        * tao/Valuetype/ValueBase.cpp:

          Reordered include directives to make sure all necessary
          non-dependent names are parsed before the templates that use
          them.  In the case of the "*A.h" files, this is a temporary
          work-around until TAO_IDL is updated.  Addresses g++ 3.4.x or
          better compile-time errors.

Mon Aug 22 21:05:36 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp (gen_stub_hdr_includes):

          Reordered generated include directives so that Any/TypeCode
          include directives are placed before ones from the ORB core to
          make sure some things are parsed before some templates
          (e.g. TAO_Pseudo_{Var,Out}_T).  Addresses issues with compilers
          that require all necessary non-dependent names be parsed prior
          to parsing templates that may use them (e.g. GNU g++ 3.4.x or
          better).

          Removed duplicate "TypeCode.h" include directive generation.

        * tao/AnyTypeCode/AnySeqC.h:
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp:
        * tao/AnyTypeCode/BooleanSeqA.h:
        * tao/AnyTypeCode/TypeCode.h:
        * tao/AnyTypeCode/append.cpp:

          Reordered include directives to force non-dependent names used
          as template arguments to be parsed before the templates in
          question.  Addresses issues with compilers that require all
          necessary non-dependent names be parsed prior to parsing
          templates that may use them (e.g. GNU g++ 3.4.x or  better).

        * tao/AnyTypeCode/Any_Impl.h:

          Removed unnecessary "Any.h" include directive.

Mon Aug 22 15:46:29 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/ORB.h:

          Reordered include directives to work around g++ 4.0.x internal
          compiler error.

Mon Aug 22 12:58:11 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Concurrency_Service/Makefile.am:
        * orbsvcs/CosEvent_Service/Makefile.am:
        * orbsvcs/Dump_Schedule/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Event_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Factory_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Gateway_Service/Makefile.am:
        * orbsvcs/FT_ReplicationManager/Makefile.am:
        * orbsvcs/Fault_Detector/Makefile.am:
        * orbsvcs/Fault_Notifier/Makefile.am:
        * orbsvcs/IFR_Service/Makefile.am:
        * orbsvcs/ImplRepo_Service/Makefile.am:
        * orbsvcs/LifeCycle_Service/Makefile.am:
        * orbsvcs/LoadBalancer/Makefile.am:
        * orbsvcs/Logging_Service/Basic_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/Event_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/Makefile.am:
        * orbsvcs/Naming_Service/Makefile.am:
        * orbsvcs/Notify_Service/Makefile.am:
        * orbsvcs/Scheduling_Service/Makefile.am:
        * orbsvcs/Time_Service/Makefile.am:
        * orbsvcs/Trading_Service/Makefile.am:

          Regenerated.

Mon Aug 22 12:32:42 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/Makefile.am:
        * orbsvcs/tests/AVStreams/Component_Switching/Makefile.am:
        * orbsvcs/tests/AVStreams/Full_Profile/Makefile.am:
        * orbsvcs/tests/AVStreams/Latency/Makefile.am:
        * orbsvcs/tests/AVStreams/Modify_QoS/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast/Makefile.am:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/Makefile.am:
        * orbsvcs/tests/AVStreams/Multiple_Flows/Makefile.am:
        * orbsvcs/tests/AVStreams/Pluggable/Makefile.am:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Makefile.am:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/Makefile.am:
        * orbsvcs/tests/BiDir_CORBALOC/Makefile.am:
        * orbsvcs/tests/Bug_1334_Regression/Makefile.am:
        * orbsvcs/tests/Bug_1393_Regression/Makefile.am:
        * orbsvcs/tests/Bug_1395_Regression/Makefile.am:
        * orbsvcs/tests/Bug_1630_Regression/Makefile.am:
        * orbsvcs/tests/Concurrency/Makefile.am:
        * orbsvcs/tests/CosEvent/Basic/Makefile.am:
        * orbsvcs/tests/CosEvent/lib/Makefile.am:
        * orbsvcs/tests/EC_Custom_Marshal/Makefile.am:
        * orbsvcs/tests/EC_MT_Mcast/Makefile.am:
        * orbsvcs/tests/EC_Mcast/Makefile.am:
        * orbsvcs/tests/EC_Multiple/Makefile.am:
        * orbsvcs/tests/EC_Throughput/Makefile.am:
        * orbsvcs/tests/Event/Basic/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Common/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Complex/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Simple/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Two_Way/Makefile.am:
        * orbsvcs/tests/Event/Performance/Makefile.am:
        * orbsvcs/tests/Event/lib/Makefile.am:

          Regenerated.

        * orbsvcs/tests/EC_Custom_Marshal/EC_Custom_Marshal.mpc:

          Add *_IDL projects for compiling *.idl files.  This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

Mon Aug 22 18:15:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Pluggable/Pluggable.mpc:
        * performance-tests/Memory/Single_Threaded/Memory_Growth.mpc:
        * examples/Advanced/ch_3/Advanced_ch_3.mpc:
          Updated to resolve link errors

Mon Aug 22 18:12:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Array_VarOut_T.{h,inl}:
        * tao/PortableServer/Fixed_Array_SArgument_T.cpp:
        * tao/PortableServer/Var_Array_SArgument_T.{h,cpp}:
          Changes to make msvc6 happy

Mon Aug 22 10:43:11 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:
        * tao/Makefile.am:

          Regenerated.

        * tao/AnyTypeCode.mpc:

          Changed AnyTypecode to AnyTypeCode so generated project
          files work with case sensitive filesystems.

        * tao/tao.mpc:

          Removed a few more headers that have been moved to the
          AnyTypeCode library.

        * tao/BiDir_GIOP/TAO_BiDirGIOP.pc.in:
        * tao/CodecFactory/TAO_CodecFactory.pc.in:
        * tao/Domain/TAO_Domain.pc.in:
        * tao/DynamicAny/TAO_DynamicAny.pc.in:
        * tao/DynamicInterface/TAO_DynamicInterface.pc.in:
        * tao/IFR_Client/TAO_IFR_Client.pc.in:
        * tao/IORInterceptor/TAO_IORInterceptor.pc.in:
        * tao/IORManipulation/TAO_IORManip.pc.in:
        * tao/ImR_Client/TAO_ImR_Client.pc.in:
        * tao/Messaging/TAO_Messaging.pc.in:
        * tao/ObjRefTemplate/TAO_ObjRefTemplate.pc.in:
        * tao/PI/TAO_PI.pc.in:
        * tao/PI_Server/TAO_PI_Server.pc.in:
        * tao/PortableServer/TAO_PortableServer.pc.in:
        * tao/RTCORBA/TAO_RTCORBA.pc.in:
        * tao/RTPortableServer/TAO_RTPortableServer.pc.in:
        * tao/RTScheduling/TAO_RTScheduler.pc.in:
        * tao/Strategies/TAO_Strategies.pc.in:
        * tao/TypeCodeFactory/TAO_TypeCodeFactory.pc.in:
        * tao/Valuetype/TAO_Valuetype.pc.in:
        * tao/TAO_Utils.pc.in

          Update to add TAO_AnyTypeCode to "Requires:" as needed.

        * tao/AnyTypeCode/TAO_AnyTypeCode.pc.in:

          New file, pkg-config *.pc template for TAO_AnyTypeCode library.

Mon Aug 22 13:23:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*:
          Fixed minimum corba builds

Mon Aug 22 10:48:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/tao.mpc:
          Removed a lot of files that are zapped

        * tao/ORB.cpp
        * tao/ORB.h
        * tao/ORB_Core.cpp
        * tao/ORB_Core.h
        * tao/ORB_Core.i
        * tao/PI/PICurrent_Loader.h
        * tao/PI_Server/PI_Server.h
        * tao/PI_Server/PortableServer_ORBInitializer.cpp
        * tao/PI_Server/PortableServer_ORBInitializer.h
        * tao/PortableServer/PortableServer.cpp
        * tao/PortableServer/PortableServer.h
        * tao/PortableServer/POA_Current.{h,cpp,inl}:
        * tao/PortableServer/POA_Current_Factory.{h,cpp}:
        * tao/PortableServer/PS_Current.pidl
        * tao/PortableServer/PS_CurrentA.cpp
        * tao/PortableServer/PS_CurrentC.cpp
        * tao/PortableServer/PS_CurrentC.h
          Moved POACurrent back to the PortableServer libary and use an object
          loader to get it on demand instead of using an orbinitializer


        * tao/PI_Server/POA_Current.cpp
        * tao/PI_Server/POA_Current.h
        * tao/PI_Server/POA_Current.inl
        * tao/PI_Server/PS_Current.pidl
        * tao/PI_Server/PS_CurrentA.cpp
        * tao/PI_Server/PS_CurrentC.cpp
        * tao/PI_Server/PS_CurrentC.h
          Removed, back to PortableServer

        * examples/POA/DSI/Database_i.h
        * examples/POA/DSI/POA_DSI.mpc
        * examples/POA/Default_Servant/File_i.cpp
        * examples/POA/Default_Servant/POA_Default_Servant.mpc
        * orbsvcs/ImplRepo_Service/Forwarder.cpp
        * orbsvcs/ImplRepo_Service/Forwarder.h
        * orbsvcs/ImplRepo_Service/ImplRepo_Service.mpc
        * orbsvcs/examples/ORT/Gateway_i.h
        * orbsvcs/examples/ORT/ORT.mpc
        * orbsvcs/orbsvcs/IFRService.mpc
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/UpdateableHandler.cpp
        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.cpp
        * orbsvcs/orbsvcs/IFRService/Repository_i.h
        * orbsvcs/tests/FtRtEvent/PushConsumer.cpp
        * orbsvcs/tests/FtRtEvent/PushSupplier.cpp
        * orbsvcs/tests/ImplRepo/scale/scaletest.mpc
        * orbsvcs/tests/ImplRepo/scale/server_i.cpp
        * tests/Collocation_Opportunities/Collocation_Opportunities.cpp
        * tests/Collocation_Opportunities/Collocation_Opportunities.mpc
        * tests/File_IO/File_IO.mpc
        * tests/File_IO/File_i.cpp
        * tests/ORT/ServerORBInitializer.cpp
        * tests/POA/Current/Current.cpp
        * tests/POA/Current/Current.mpc
        * tests/POA/Persistent_ID/Persistent_ID.mpc
        * tests/POA/Persistent_ID/server.cpp
          Updated, no need to use PI_Server anymore now the POACurrent is
          back to the PortableServer lib.

        * orbsvcs/orbsvcs/Event/EC_Basic_Factory.cpp
        * orbsvcs/orbsvcs/Event/EC_ConsumerControl.cpp
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.cpp
          Removed explicit template instantiations

        * tao/Valuetype/ValueBase.cpp
          Use C++ cast instead of c-style cast

Mon Aug 22 09:09:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Any.h:
        * tao/AnyTypeCode/RefCount_Policy_Traits.h:
          Include AnyTypeCode_methods instead of CORBA_methods

        * tao/AnyTypeCode/AnyTypeCode_methods.h:
          Added missing includes

Mon Aug 22 08:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Muxed_GIOP_Versions/Muxed_GIOP_Versions.mpc:
        * tests/Multiple_Inheritance/Multiple_Inheritance.mpc:
          Updated to resolve link errors

Mon Aug 22 07:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp:
          Updated return type of operator >>

Sun Aug 21 12:44:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/TypeCode.inl:
          Include AnyTypeCode_methods instead of CORBA_methods

Sun Aug 21 11:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/TypeCode.{h,cpp}:
          Fixed compile errors with msvc6

Sun Aug 21 11:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport.cpp:
          Fixed warning in valgrind build

Sun Aug 21 11:23:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/ORB_Shutdown/PI_ORB_Shutdown.mpc:
        * tests/MT_Server/MT_Server.mpc:
        * tests/Hello/Hello.mpc:
        * tests/Hang_Shutdown/Hang.mpc:
        * tests/Connect_Strategy_Test/Connect_Strategy_Test.mpc:
        * tests/Bug_1330_Regression/Bug_1330_Regression.mpc:
          Updated to resolve link errors

Sun Aug 21 11:23:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/TAO_AnyTypeCode_Export.h:
          Fixed vc71 static compile warnings

Fri Aug 19 18:47:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Kokyu_dsrt_schedulers/EDF_Scheduling.idl:
          Added missing include

        * examples/Kokyu_dsrt_schedulers/Kokyu_DSRT_Schedulers.mpc:
          Added EDF_SchedulingC.cpp

Fri Aug 19 18:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Union_TypeCode.cpp:
          Fixed no return warning

Fri Aug 19 18:33:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Explicit_Event_Loop/Explicit_Event_Loop.mpc:
        * tests/Cache_Growth_Test/Cache_Growth_Test.mpc:
          Updated to resolve link errors

Fri Aug 19 18:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          Fixed deprecated conversion warning

Fri Aug 19 18:27:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/HTIOP/Hello/HTIOP_Hello.mpc:
        * performance-tests/POA/Implicit_Activation/Implicit_Activation.mpc:
        * tests/Crash_On_Write/Crash_On_Write.mpc:
        * tests/MT_Client/MT_Client.mpc:
        * tests/Server_Connection_Purging/Server_Connection_Purging.mpc:
        * tests/Single_Read/Single_Read.mpc:
          Updated to resolve link errors

Fri Aug 19 18:18:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/Messaging_PolicyFactory.{h,cpp}:
          Fixed compile error when no messaging is defined

Fri Aug 19 14:00:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ImR_Client/ImplRepoS.cpp:
          Fixed some handcrafted code, will regenerate this file next week

Fri Aug 19 13:43:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/NVList.h:
          Fixed HP aCC compile error

Fri Aug 19 12:45:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Profile.cpp:
          Fixed 64bit conversion warnings by using the correct type or
          using an explicit cast

Fri Aug 19 12:24:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/SystemException.h:
          Removed not needed trailing semi colon

Fri Aug 19 11:58:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode.mpc:
          Removed not existent file

Fri Aug 19 11:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/DomainA.h:
          Removed include of inline file.

        * tao/AnyTypeCode/TypeCode.{h,cpp,inl}:
          Moved operator << to cpp file

Fri Aug 19 11:29:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Any_Insert_Policy_T.h:
          Fix problem for HPUX, will move the special policies out of this
          file soon.

Fri Aug 19 10:15:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Log/LogMgr_i.cpp:
          Fixed implicit conversion warning

Fri Aug 19 09:17:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/PolicyA.h:
          Removed include of inline file.

Fri Aug 19 09:03:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Empty_Param_TypeCode.h:
        * tao/AnyTypeCode/NVList.h:
        * tao/AnyTypeCode/Objref_TypeCode_Static.h:
        * tao/AnyTypeCode/Union_TypeCode_Static.h:
        * tao/AnyTypeCode/Value_TypeCode_Static.h:
          Fixed include of inline file.

Fri Aug 19 08:48:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/TypeCode.h:
        * tao/AnyTypeCode/Alias_TypeCode_Static.h:
        * tao/AnyTypeCode/Any.h:
          Fixed include of inline file.

Fri Aug 19 08:35:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Log/LogMgr_i.cpp:
          Fixed compile error

Fri Aug 19 07:56:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        Merged AnyRefactor branch, a lot of files where moved to the
        AnyTypeCode directory. Regenerated all files in the repo, add
        AnyTypeCode as base project for a lot of MPC files, zapped
        explicit templates

        * TAO_IDL/be/be_codegen.cpp
        * TAO_IDL/be/be_global.cpp
        * TAO_IDL/be/be_produce.cpp
        * TAO_IDL/be/be_visitor_arg_traits.cpp
        * TAO_IDL/be/be_visitor_context.cpp
        * TAO_IDL/be/be_visitor_root.cpp
        * TAO_IDL/be/be_visitor_argument/invoke_cs.cpp
        * TAO_IDL/be/be_visitor_argument/marshal_ss.cpp
        * TAO_IDL/be/be_visitor_argument/paramlist.cpp
        * TAO_IDL/be/be_visitor_array/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_enum/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_exception/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp
        * TAO_IDL/be/be_visitor_field/cdr_op_cs.cpp
        * TAO_IDL/be/be_visitor_field/serializer_op_cs.cpp
        * TAO_IDL/be/be_visitor_interface/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp
        * TAO_IDL/be/be_visitor_interface_fwd/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_module/module_ch.cpp
        * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_cs.cpp
        * TAO_IDL/be/be_visitor_root/any_op.cpp
        * TAO_IDL/be/be_visitor_root/root.cpp
        * TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp
        * TAO_IDL/be/be_visitor_structure/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp
        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp
        * TAO_IDL/be/be_visitor_union/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_union/cdr_op_cs.cpp
        * TAO_IDL/be/be_visitor_union/serializer_op_cs.cpp
        * TAO_IDL/be/be_visitor_union_branch/cdr_op_cs.cpp
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp
        * TAO_IDL/be/be_visitor_valuebox/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ci.cpp
        * TAO_IDL/be/be_visitor_valuebox/valuebox_cs.cpp
        * TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_valuetype/field_cdr_cs.cpp
        * TAO_IDL/be/be_visitor_valuetype_fwd/any_op_ch.cpp
        * TAO_IDL/be_include/be_codegen.h
        * TAO_IDL/be_include/be_global.h
        * TAO_IDL/be_include/be_visitor_arg_traits.h
        * TAO_IDL/be_include/be_visitor_context.h
        * TAO_IDL/be_include/be_visitor_root/root.h
        * TAO_IDL/driver/drv_args.cpp
        * docs/compiler.html
        * docs/releasenotes/index.html
        * examples/Buffered_AMI/client.cpp
        * examples/Buffered_Oneways/client.cpp
        * examples/Kokyu_dsrt_schedulers/FP_Scheduling.idl
        * examples/Kokyu_dsrt_schedulers/Kokyu_qos.idl
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduling.idl
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduling.idl
        * examples/POA/DSI/Database_i.cpp
        * examples/POA/Default_Servant/POA_Default_Servant.mpc
        * examples/POA/Forwarding/POA_Forwarding.mpc
        * examples/POA/POA_BiDir/POA_BiDir.cpp
        * examples/POA/TIE/POA_TIE.mpc
        * examples/POA/TIE/client.cpp
        * examples/POA/TIE/server.cpp
        * examples/Simulator/NavWeap.idl
        * examples/Simulator/Event_Supplier/Event_Con.cpp
        * interop-tests/wchar/interop_wchar.mpc
        * orbsvcs/IFR_Service/ifr_adding_visitor_union.cpp
        * orbsvcs/PSS/PSDL_Code_Gen.cpp
        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.cpp
        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly.mpc
        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly_i.cpp
        * orbsvcs/examples/ORT/Gateway_i.cpp
        * orbsvcs/orbsvcs/PortableGroup.mpc
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEvent.h
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.h
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.cpp
        * orbsvcs/orbsvcs/HTIOP/htiop_endpointsC.cpp
        * orbsvcs/orbsvcs/IFRService/ConstantDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS.h
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS.inl
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS_T.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS_T.h
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS_T.inl
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS.h
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS.inl
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS_T.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS_T.h
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS_T.inl
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.h
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.inl
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.h
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.inl
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.h
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.inl
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS_T.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS_T.h
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS_T.inl
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp
        * orbsvcs/orbsvcs/IFRService/IRObject_i.cpp
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.h
        * orbsvcs/orbsvcs/Log/PersistStore.cpp
        * orbsvcs/orbsvcs/Log/PersistStore.h
        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.h
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.cpp
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.h
        * orbsvcs/orbsvcs/SSLIOP/ssl_endpointsC.cpp
        * orbsvcs/orbsvcs/Security/SL3_PolicyFactory.cpp
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp
        * orbsvcs/orbsvcs/Trader/Interpreter_Utils.h
        * orbsvcs/performance-tests/RTEvent/lib/SyncScope_Setup.cpp
        * orbsvcs/tests/BiDir_CORBALOC/BiDirCORBALOC.mpc
        * orbsvcs/tests/BiDir_CORBALOC/TimeServer.cpp
        * orbsvcs/tests/Bug_1630_Regression/test.mpc
        * orbsvcs/tests/Bug_1630_Regression/testclient.cpp
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/test.idl
        * orbsvcs/tests/HTIOP/BiDirectional/client.cpp
        * orbsvcs/tests/HTIOP/BiDirectional/server.cpp
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.cpp
        * orbsvcs/tests/Notify/Reconnecting/Consumer.cpp
        * orbsvcs/tests/Security/BiDirectional/client.cpp
        * orbsvcs/tests/Security/BiDirectional/server.cpp
        * orbsvcs/tests/Security/Big_Request/Big_Request.mpc
        * performance-tests/Anyop/Anyop.mpc
        * performance-tests/Anyop/anyop.cpp
        * performance-tests/Callback/client.cpp
        * performance-tests/Callback/server.cpp
        * performance-tests/Cubit/TAO/DII_Cubit/client.cpp
        * performance-tests/Latency/DII/client.cpp
        * performance-tests/Latency/DSI/Roundtrip.cpp
        * performance-tests/Latency/Deferred/client.cpp
        * performance-tests/RTCorba/Oneways/Reliable/client.cpp
        * performance-tests/Sequence_Latency/DII/client.cpp
        * performance-tests/Sequence_Latency/DSI/Roundtrip.cpp
        * performance-tests/Sequence_Latency/Deferred/client.cpp
        * tao/Arg_Traits_T.h
        * tao/Argument.cpp
        * tao/Argument.h
        * tao/Array_VarOut_T.h
        * tao/Array_VarOut_T.inl
        * tao/Asynch_Queued_Message.h
        * tao/BD_String_Argument_T.cpp
        * tao/BD_String_Argument_T.h
        * tao/BD_String_Argument_T.inl
        * tao/Basic_Argument_T.cpp
        * tao/Basic_Argument_T.h
        * tao/Basic_Argument_T.inl
        * tao/Basic_Arguments.h
        * tao/BiDir_GIOP.mpc
        * tao/Block_Flushing_Strategy.h
        * tao/BooleanSeqC.cpp
        * tao/BooleanSeqC.h
        * tao/BooleanSeqS.h
        * tao/Buffering_Constraint_Policy.cpp
        * tao/Buffering_Constraint_Policy.h
        * tao/CONV_FRAMEC.cpp
        * tao/CONV_FRAMEC.h
        * tao/CONV_FRAMES.h
        * tao/CORBANAME_Parser.cpp
        * tao/CORBA_methods.h
        * tao/Cache_Entries.h
        * tao/Cache_Entries.inl
        * tao/CharSeqC.h
        * tao/CodecFactory.mpc
        * tao/CurrentC.cpp
        * tao/CurrentC.h
        * tao/CurrentS.h
        * tao/Domain.mpc
        * tao/DomainC.cpp
        * tao/DomainC.h
        * tao/DoubleSeqC.h
        * tao/DynamicAny.mpc
        * tao/DynamicInterface.mpc
        * tao/Dynamic_Adapter.cpp
        * tao/Exception.cpp
        * tao/Exception.h
        * tao/Fixed_Array_Argument_T.cpp
        * tao/Fixed_Array_Argument_T.h
        * tao/Fixed_Array_Argument_T.inl
        * tao/Fixed_Size_Argument_T.cpp
        * tao/Fixed_Size_Argument_T.h
        * tao/Fixed_Size_Argument_T.inl
        * tao/FloatSeqC.cpp
        * tao/FloatSeqC.h
        * tao/FloatSeqS.h
        * tao/Flushing_Strategy.h
        * tao/GIOPC.cpp
        * tao/GIOPC.h
        * tao/GIOPS.h
        * tao/GIOP_Message_Generator_Parser_10.cpp
        * tao/GIOP_Message_Generator_Parser_12.cpp
        * tao/GIOP_Message_Lite.cpp
        * tao/IFR_Client.mpc
        * tao/IFR_Client_Adapter.h
        * tao/IIOP.pidl
        * tao/IIOPC.cpp
        * tao/IIOPC.h
        * tao/IIOP_Acceptor.cpp
        * tao/IIOP_EndpointsC.h
        * tao/IOPC.cpp
        * tao/IOPC.h
        * tao/IOPS.h
        * tao/IOP_IORC.cpp
        * tao/IOP_IORC.h
        * tao/IOP_IORS.h
        * tao/IORInterceptor.mpc
        * tao/IORManipulation.mpc
        * tao/IORTable.mpc
        * tao/ImR_Client.mpc
        * tao/Invocation_Adapter.h
        * tao/Invocation_Base.cpp
        * tao/Invocation_Base.h
        * tao/Invocation_Base.inl
        * tao/Leader_Follower_Flushing_Strategy.h
        * tao/LongDoubleSeqC.h
        * tao/LongLongSeqC.h
        * tao/LongSeqC.h
        * tao/Messaging.mpc
        * tao/Messaging_PolicyValue.pidl
        * tao/Messaging_PolicyValueC.h
        * tao/ORB.cpp
        * tao/ORB.h
        * tao/ORBInitializer_Registry_Adapter.h
        * tao/ORB_Core.cpp
        * tao/ORB_Core.h
        * tao/ORB_Core.i
        * tao/ORB_Core_Auto_Ptr.h
        * tao/ORB_Core_TSS_Resources.cpp
        * tao/ORB_Core_TSS_Resources.h
        * tao/ORB_Table.h
        * tao/ObjRefTemplate.mpc
        * tao/Object.cpp
        * tao/Object.h
        * tao/ObjectIdListC.h
        * tao/Object_Argument_T.cpp
        * tao/Object_Argument_T.h
        * tao/Object_Argument_T.inl
        * tao/Object_KeyC.cpp
        * tao/OctetSeq.pidl
        * tao/OctetSeqC.cpp
        * tao/OctetSeqC.h
        * tao/OctetSeqS.h
        * tao/PI.mpc
        * tao/PI_ForwardC.cpp
        * tao/PI_ForwardC.h
        * tao/PI_Server.mpc
        * tao/ParameterModeC.h
        * tao/PolicyC.cpp
        * tao/PolicyC.h
        * tao/Policy_Current.cpp
        * tao/Policy_ForwardC.cpp
        * tao/Policy_ForwardC.h
        * tao/Policy_ForwardS.h
        * tao/PortableInterceptor.pidl
        * tao/PortableInterceptorC.cpp
        * tao/PortableInterceptorC.h
        * tao/PortableInterceptorS.h
        * tao/PortableServer.mpc
        * tao/Profile.h
        * tao/Profile_Transport_Resolver.h
        * tao/Protocols_Hooks.h
        * tao/RTCORBA.mpc
        * tao/RTPortableServer.mpc
        * tao/RTScheduler.mpc
        * tao/Reactive_Flushing_Strategy.h
        * tao/Refcounted_ObjectKey.h
        * tao/Remote_Object_Proxy_Broker.cpp
        * tao/ServerRequestInterceptor_Adapter.h
        * tao/Services.pidl
        * tao/ServicesC.cpp
        * tao/ServicesC.h
        * tao/ServicesS.h
        * tao/ShortSeqC.cpp
        * tao/ShortSeqC.h
        * tao/ShortSeqS.h
        * tao/SmartProxies.mpc
        * tao/Special_Basic_Argument_T.cpp
        * tao/Special_Basic_Argument_T.h
        * tao/Special_Basic_Argument_T.inl
        * tao/Special_Basic_Arguments.h
        * tao/Strategies.mpc
        * tao/StringSeqC.cpp
        * tao/StringSeqC.h
        * tao/StringSeqS.h
        * tao/Synch_Invocation.cpp
        * tao/Synch_Invocation.h
        * tao/Synch_Queued_Message.h
        * tao/Synch_Reply_Dispatcher.h
        * tao/SystemException.cpp
        * tao/SystemException.h
        * tao/TAOC.cpp
        * tao/TAOC.h
        * tao/TAOS.h
        * tao/TAO_Server_Request.cpp
        * tao/TAO_Server_Request.h
        * tao/TAO_Server_Request.i
        * tao/TSS_Resources.h
        * tao/TimeBaseC.h
        * tao/Transport.cpp
        * tao/Transport.h
        * tao/TypeCodeFactory.mpc
        * tao/TypeCodeFactory_Adapter.cpp
        * tao/TypeCodeFactory_Adapter.h
        * tao/UB_String_Argument_T.cpp
        * tao/UB_String_Argument_T.h
        * tao/UB_String_Argument_T.inl
        * tao/UB_String_Arguments.h
        * tao/ULongLongSeqC.cpp
        * tao/ULongLongSeqC.h
        * tao/ULongLongSeqS.h
        * tao/ULongSeqC.cpp
        * tao/ULongSeqC.h
        * tao/ULongSeqS.h
        * tao/UShortSeqC.h
        * tao/UserException.cpp
        * tao/UserException.h
        * tao/UserException.inl
        * tao/Utils.mpc
        * tao/Valuetype.mpc
        * tao/Valuetype_Adapter.cpp
        * tao/Var_Array_Argument_T.cpp
        * tao/Var_Array_Argument_T.h
        * tao/Var_Array_Argument_T.inl
        * tao/Var_Size_Argument_T.cpp
        * tao/Var_Size_Argument_T.h
        * tao/Var_Size_Argument_T.inl
        * tao/WCharSeqC.cpp
        * tao/WCharSeqC.h
        * tao/WCharSeqS.h
        * tao/WStringSeqC.cpp
        * tao/WStringSeqC.h
        * tao/WStringSeqS.h
        * tao/Wait_On_LF_No_Upcall.h
        * tao/Wait_On_Leader_Follower.h
        * tao/Wait_On_Reactor.h
        * tao/Wait_On_Read.h
        * tao/Wait_Strategy.h
        * tao/WrongTransactionC.cpp
        * tao/WrongTransactionC.h
        * tao/corba.h
        * tao/corbafwd.h
        * tao/extra_core.mpb
        * tao/operation_details.cpp
        * tao/operation_details.h
        * tao/operation_details.i
        * tao/orb.idl
        * tao/orb_typesC.cpp
        * tao/orb_typesC.h
        * tao/orb_typesS.h
        * tao/params.h
        * tao/tao.mpc
        * tao/BiDir_GIOP/BiDir_PolicyFactory.cpp
        * tao/CodecFactory/CDR_Encaps_Codec.cpp
        * tao/CodecFactory/IOP_CodecA.cpp
        * tao/CodecFactory/IOP_CodecC.h
        * tao/Domain/DomainS.cpp
        * tao/DynamicAny/DynAny_i.cpp
        * tao/DynamicAny/DynArray_i.cpp
        * tao/DynamicAny/DynCommon.cpp
        * tao/DynamicAny/DynEnum_i.cpp
        * tao/DynamicAny/DynSequence_i.cpp
        * tao/DynamicAny/DynStruct_i.cpp
        * tao/DynamicAny/DynUnion_i.cpp
        * tao/DynamicAny/DynamicAnyC.h
        * tao/DynamicInterface/Context.cpp
        * tao/DynamicInterface/DII_Arguments.cpp
        * tao/DynamicInterface/DII_Arguments.h
        * tao/DynamicInterface/DII_Invocation.cpp
        * tao/DynamicInterface/Dynamic_Implementation.cpp
        * tao/DynamicInterface/Dynamic_Implementation.h
        * tao/DynamicInterface/ExceptionList.cpp
        * tao/DynamicInterface/Request.cpp
        * tao/DynamicInterface/Request.h
        * tao/DynamicInterface/Server_Request.cpp
        * tao/DynamicInterface/Unknown_User_Exception.cpp
        * tao/DynamicInterface/Unknown_User_Exception.h
        * tao/IFR_Client/IFR_Base.pidl
        * tao/IFR_Client/IFR_BaseC.cpp
        * tao/IFR_Client/IFR_BaseC.h
        * tao/IFR_Client/IFR_BaseC.inl
        * tao/IFR_Client/IFR_BaseS.h
        * tao/IFR_Client/IFR_Basic.pidl
        * tao/IFR_Client/IFR_BasicC.cpp
        * tao/IFR_Client/IFR_BasicC.h
        * tao/IFR_Client/IFR_BasicC.inl
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp
        * tao/IFR_Client/IFR_Client_Adapter_Impl.h
        * tao/IFR_Client/IFR_Components.pidl
        * tao/IFR_Client/IFR_ComponentsC.cpp
        * tao/IFR_Client/IFR_ComponentsC.h
        * tao/IFR_Client/IFR_ComponentsC.inl
        * tao/IFR_Client/IFR_Extended.pidl
        * tao/IFR_Client/IFR_ExtendedC.cpp
        * tao/IFR_Client/IFR_ExtendedC.h
        * tao/IFR_Client/IFR_ExtendedC.inl
        * tao/IORInterceptor/IORInfoC.cpp
        * tao/IORManipulation/IORA.cpp
        * tao/ImR_Client/ImplRepo.pidl
        * tao/ImR_Client/ImplRepoA.cpp
        * tao/ImR_Client/ImplRepoC.cpp
        * tao/ImR_Client/ImplRepoS.cpp
        * tao/ImR_Client/ServerObjectA.cpp
        * tao/ImR_Client/ServerObjectS.cpp
        * tao/Messaging/Connection_Timeout_Policy_i.cpp
        * tao/Messaging/Messaging.cpp
        * tao/Messaging/MessagingA.cpp
        * tao/Messaging/MessagingC.cpp
        * tao/Messaging/MessagingS.cpp
        * tao/Messaging/Messaging_No_ImplA.cpp
        * tao/Messaging/Messaging_PolicyFactory.cpp
        * tao/Messaging/Messaging_PolicyFactory.h
        * tao/Messaging/Messaging_Policy_i.cpp
        * tao/Messaging/Messaging_RT_PolicyA.cpp
        * tao/Messaging/Messaging_SyncScope_PolicyA.cpp
        * tao/Messaging/PollableC.cpp
        * tao/Messaging/TAO_ExtA.cpp
        * tao/ObjRefTemplate/Default_ORTA.cpp
        * tao/ObjRefTemplate/ObjectReferenceTemplateA.cpp
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.cpp
        * tao/PI/ClientRequestInfo.cpp
        * tao/PI/ClientRequestInfo.h
        * tao/PI/ClientRequestInfoA.cpp
        * tao/PI/ClientRequestInfoC.h
        * tao/PI/ClientRequestInterceptorA.cpp
        * tao/PI/InterceptorA.cpp
        * tao/PI/ORBInitInfo.cpp
        * tao/PI/ORBInitInfoA.cpp
        * tao/PI/ORBInitializerA.cpp
        * tao/PI/ORBInitializer_Registry_Impl.cpp
        * tao/PI/ORBInitializer_Registry_Impl.h
        * tao/PI/PI.h
        * tao/PI/PIForwardRequestA.cpp
        * tao/PI/PolicyFactoryA.cpp
        * tao/PI/PolicyFactoryC.h
        * tao/PI/RequestInfo.pidl
        * tao/PI/RequestInfoA.cpp
        * tao/PI/RequestInfoC.h
        * tao/PI_Server/POA_Current.cpp
        * tao/PI_Server/PS_CurrentA.cpp
        * tao/PI_Server/ServerInterceptorAdapter.cpp
        * tao/PI_Server/ServerInterceptorAdapter.h
        * tao/PI_Server/ServerRequestInfo.cpp
        * tao/PI_Server/ServerRequestInfoA.cpp
        * tao/PI_Server/ServerRequestInfoC.h
        * tao/PI_Server/ServerRequestInterceptorA.cpp
        * tao/PortableServer/AdapterActivatorA.cpp
        * tao/PortableServer/AdapterActivatorC.cpp
        * tao/PortableServer/AdapterActivatorC.h
        * tao/PortableServer/Any_SArg_Traits.h
        * tao/PortableServer/BD_String_SArgument_T.cpp
        * tao/PortableServer/BD_String_SArgument_T.h
        * tao/PortableServer/BD_String_SArgument_T.inl
        * tao/PortableServer/Basic_SArgument_T.cpp
        * tao/PortableServer/Basic_SArgument_T.h
        * tao/PortableServer/Basic_SArgument_T.inl
        * tao/PortableServer/Basic_SArguments.h
        * tao/PortableServer/Fixed_Array_SArgument_T.cpp
        * tao/PortableServer/Fixed_Array_SArgument_T.h
        * tao/PortableServer/Fixed_Array_SArgument_T.inl
        * tao/PortableServer/Fixed_Size_SArgument_T.cpp
        * tao/PortableServer/Fixed_Size_SArgument_T.h
        * tao/PortableServer/Fixed_Size_SArgument_T.inl
        * tao/PortableServer/ForwardRequestA.cpp
        * tao/PortableServer/ForwardRequestC.cpp
        * tao/PortableServer/ForwardRequestC.h
        * tao/PortableServer/IdAssignmentPolicyA.cpp
        * tao/PortableServer/IdAssignmentPolicyC.cpp
        * tao/PortableServer/IdAssignmentPolicyC.h
        * tao/PortableServer/IdUniquenessPolicyA.cpp
        * tao/PortableServer/IdUniquenessPolicyC.cpp
        * tao/PortableServer/IdUniquenessPolicyC.h
        * tao/PortableServer/ImplicitActivationPolicyA.cpp
        * tao/PortableServer/ImplicitActivationPolicyC.cpp
        * tao/PortableServer/ImplicitActivationPolicyC.h
        * tao/PortableServer/LifespanPolicyA.cpp
        * tao/PortableServer/LifespanPolicyC.cpp
        * tao/PortableServer/LifespanPolicyC.h
        * tao/PortableServer/Object_SArg_Traits.h
        * tao/PortableServer/Object_SArgument_T.cpp
        * tao/PortableServer/Object_SArgument_T.h
        * tao/PortableServer/Object_SArgument_T.inl
        * tao/PortableServer/POAManagerC.cpp
        * tao/PortableServer/POAManagerC.h
        * tao/PortableServer/POA_Current_Impl.cpp
        * tao/PortableServer/PS_ForwardA.cpp
        * tao/PortableServer/PS_ForwardC.cpp
        * tao/PortableServer/PS_ForwardC.h
        * tao/PortableServer/PolicyS.cpp
        * tao/PortableServer/PortableServer.h
        * tao/PortableServer/PortableServerA.cpp
        * tao/PortableServer/PortableServerC.cpp
        * tao/PortableServer/PortableServerC.h
        * tao/PortableServer/PortableServerS.h
        * tao/PortableServer/PortableServer_includeC.h
        * tao/PortableServer/PortableServer_includeS.h
        * tao/PortableServer/RequestProcessingPolicyA.cpp
        * tao/PortableServer/RequestProcessingPolicyC.cpp
        * tao/PortableServer/RequestProcessingPolicyC.h
        * tao/PortableServer/RequestProcessingStrategyDefaultServant.cpp
        * tao/PortableServer/Root_POA.cpp
        * tao/PortableServer/ServantActivatorA.cpp
        * tao/PortableServer/ServantActivatorC.cpp
        * tao/PortableServer/ServantActivatorC.h
        * tao/PortableServer/ServantLocatorA.cpp
        * tao/PortableServer/ServantLocatorC.cpp
        * tao/PortableServer/ServantLocatorC.h
        * tao/PortableServer/ServantManagerA.cpp
        * tao/PortableServer/ServantManagerC.cpp
        * tao/PortableServer/ServantManagerC.h
        * tao/PortableServer/ServantRetentionPolicyA.cpp
        * tao/PortableServer/ServantRetentionPolicyC.cpp
        * tao/PortableServer/ServantRetentionPolicyC.h
        * tao/PortableServer/Servant_Base.cpp
        * tao/PortableServer/Special_Basic_SArgument_T.cpp
        * tao/PortableServer/Special_Basic_SArgument_T.h
        * tao/PortableServer/Special_Basic_SArgument_T.inl
        * tao/PortableServer/Special_Basic_SArguments.h
        * tao/PortableServer/ThreadPolicyA.cpp
        * tao/PortableServer/ThreadPolicyC.cpp
        * tao/PortableServer/ThreadPolicyC.h
        * tao/PortableServer/TypeCode_SArg_Traits.h
        * tao/PortableServer/UB_String_SArgument_T.cpp
        * tao/PortableServer/UB_String_SArgument_T.h
        * tao/PortableServer/UB_String_SArguments.h
        * tao/PortableServer/Upcall_Wrapper.cpp
        * tao/PortableServer/Var_Array_SArgument_T.cpp
        * tao/PortableServer/Var_Array_SArgument_T.h
        * tao/PortableServer/Var_Array_SArgument_T.inl
        * tao/PortableServer/Var_Size_SArgument_T.cpp
        * tao/PortableServer/Var_Size_SArgument_T.h
        * tao/PortableServer/Var_Size_SArgument_T.inl
        * tao/RTCORBA/RTCORBAA.cpp
        * tao/RTCORBA/RT_Policy_i.cpp
        * tao/RTCORBA/RT_Thread_Lane_Resources_Manager.cpp
        * tao/RTPortableServer/RTPortableServerA.cpp
        * tao/RTScheduling/Current.cpp
        * tao/RTScheduling/RTSchedulerA.cpp
        * tao/RTScheduling/RTSchedulerC.cpp
        * tao/RTScheduling/Request_Interceptor.cpp
        * tao/Strategies/sciop_endpointsC.cpp
        * tao/Strategies/uiop_endpointsC.cpp
        * tao/TypeCodeFactory/Recursive_TypeCode.h
        * tao/TypeCodeFactory/TypeCodeFactoryA.cpp
        * tao/TypeCodeFactory/TypeCodeFactoryC.h
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp
        * tao/Valuetype/AbstractBase.h
        * tao/Valuetype/StringValueC.cpp
        * tao/Valuetype/ValueBase.cpp
        * tao/Valuetype/ValueBase.h
        * tests/AMI_Buffering/AMI_Buffering.mpc
        * tests/AMI_Buffering/client.cpp
        * tests/AMI_Timeouts/AMI_Timeouts.mpc
        * tests/AMI_Timeouts/timeout_client.cpp
        * tests/Any/Recursive/RecursiveHello.mpc
        * tests/BiDirectional/BiDirectional.mpc
        * tests/BiDirectional/client.cpp
        * tests/BiDirectional/server.cpp
        * tests/BiDirectional_MultipleORB/destroy.cpp
        * tests/BiDirectional_MultipleORB/destroy.mpc
        * tests/BiDirectional_NestedUpcall/client.cpp
        * tests/BiDirectional_NestedUpcall/server.cpp
        * tests/Big_Reply/Big_Reply.mpc
        * tests/Big_Request_Muxing/Client_Task.cpp
        * tests/Blocking_Sync_None/client.cpp
        * tests/Bug_1020_Basic_Regression/client.cpp
        * tests/Bug_1020_Regression/client.cpp
        * tests/Bug_1269_Regression/client.cpp
        * tests/Bug_1270_Regression/client.cpp
        * tests/Bug_1361_Regression/client.cpp
        * tests/Bug_1476_Regression/Client_Task.cpp
        * tests/Bug_1476_Regression/client.cpp
        * tests/Bug_1482_Regression/client.cpp
        * tests/Bug_1551_Regression/client.cpp
        * tests/Bug_1627_Regression/test.mpc
        * tests/Bug_2174_Regression/Bug_2174_Regression.mpc
        * tests/Bug_2183_Regression/Bug_2183_Regression.mpc
        * tests/CDR/CDR.mpc
        * tests/CDR/basic_types.cpp
        * tests/CDR/tc.cpp
        * tests/Client_Leaks/Client_Leaks.mpc
        * tests/CodeSets/simple/CodeSets_simple.mpc
        * tests/Collocation/Collocation.mpc
        * tests/Collocation_Oneway_Tests/Client_Task.cpp
        * tests/Connection_Timeout/client.cpp
        * tests/Crashed_Callback/client.cpp
        * tests/Crashed_Callback/server.cpp
        * tests/DLL_ORB/DLL_ORB.mpc
        * tests/DynAny_Test/data.cpp
        * tests/DynAny_Test/data.h
        * tests/File_IO/File_IO.mpc
        * tests/Forwarding/Forwarding.mpc
        * tests/Hello/Hello.mpc
        * tests/IDL_Test/IDL_Test.mpc
        * tests/IDL_Test/main.cpp
        * tests/InterOp-Naming/InterOp-Naming.mpc
        * tests/MProfile_Connection_Timeout/client.cpp
        * tests/MProfile_Forwarding/MProfile_Forwarding.mpc
        * tests/MT_BiDir/client.cpp
        * tests/MT_BiDir/server.cpp
        * tests/MT_Client/MT_Client.mpc
        * tests/MT_Server/MT_Server.mpc
        * tests/MT_Timeout/Client_Task.cpp
        * tests/Muxing/Muxing.mpc
        * tests/Native_Exceptions/Native_Exceptions.mpc
        * tests/Nested_Upcall_Crash/client.cpp
        * tests/Nested_Upcall_Crash/scavenger.cpp
        * tests/Nested_Upcall_Crash/server.cpp
        * tests/No_Server_MT_Connect_Test/No_Server_Connect_Test.mpc
        * tests/ORT/ORT.mpc
        * tests/Objref_Sequence_Test/Objref_Sequence_Test.mpc
        * tests/OctetSeq/OctetSeq.mpc
        * tests/Oneway_Buffering/client.cpp
        * tests/POA/Current/Current.mpc
        * tests/POA/MT_Servant_Locator/MT_Servant_Locator.cpp
        * tests/POA/Policies/Policies.cpp
        * tests/Param_Test/Param_Test.mpc
        * tests/Param_Test/param_test.idl
        * tests/Policies/Manipulation.cpp
        * tests/Portable_Interceptors/Benchmark/client_interceptors.cpp
        * tests/Portable_Interceptors/Benchmark/server_interceptors.cpp
        * tests/Portable_Interceptors/Collocated/Dynamic/interceptors.cpp
        * tests/Portable_Interceptors/Dynamic/client_interceptor.cpp
        * tests/Portable_Interceptors/Dynamic/server_interceptor.cpp
        * tests/Portable_Interceptors/ForwardRequest/test.idl
        * tests/Portable_Interceptors/IORInterceptor/FOO_ClientRequestInterceptor.cpp
        * tests/Portable_Interceptors/IORInterceptor/PI_IORInterceptor.mpc
        * tests/Portable_Interceptors/PICurrent/ServerRequestInterceptor.h
        * tests/Portable_Interceptors/PICurrent/client.cpp
        * tests/Portable_Interceptors/PICurrent/test_i.h
        * tests/Portable_Interceptors/PolicyFactory/PolicyFactory.cpp
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Client_Request_Interceptor.cpp
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Server_Request_Interceptor.cpp
        * tests/RTCORBA/Persistent_IOR/RTCORBA_Persistent_IOR.mpc
        * tests/RTCORBA/Policies/Policies.cpp
        * tests/Reliable_Oneways/client.cpp
        * tests/Server_Leaks/Server_Leaks.mpc
        * tests/Stack_Recursion/Stack_Recursion.mpc
        * tests/Timed_Buffered_Oneways/client.cpp
        * tests/Timeout/client.cpp
        * tests/Two_Objects/Two_Objects.mpc
        * tests/Typedef_String_Array/typedef_string_array.mpc
        * tests/UNKNOWN_Exception/UNKNOWN_Exception.mpc
        * utils/catior/catior.cpp
          Updated these files because of the AnyTypeCode refactoring

        * tao/AnyTypeCode/Alias_TypeCode.cpp
        * tao/AnyTypeCode/Alias_TypeCode.h
        * tao/AnyTypeCode/Alias_TypeCode.inl
        * tao/AnyTypeCode/Alias_TypeCode_Static.cpp
        * tao/AnyTypeCode/Alias_TypeCode_Static.h
        * tao/AnyTypeCode/Alias_TypeCode_Static.inl
        * tao/AnyTypeCode/Any.cpp
        * tao/AnyTypeCode/Any.h
        * tao/AnyTypeCode/Any.inl
        * tao/AnyTypeCode/AnySeq.pidl
        * tao/AnyTypeCode/AnySeqA.cpp
        * tao/AnyTypeCode/AnySeqA.h
        * tao/AnyTypeCode/AnySeqC.cpp
        * tao/AnyTypeCode/AnySeqC.h
        * tao/AnyTypeCode/AnySeqS.h
        * tao/AnyTypeCode/AnyTypeCode_Adapter_Impl.cpp
        * tao/AnyTypeCode/AnyTypeCode_Adapter_Impl.h
        * tao/AnyTypeCode/AnyTypeCode_methods.h
        * tao/AnyTypeCode/Any_Arg_Traits.h
        * tao/AnyTypeCode/Any_Array_Impl_T.cpp
        * tao/AnyTypeCode/Any_Array_Impl_T.h
        * tao/AnyTypeCode/Any_Array_Impl_T.inl
        * tao/AnyTypeCode/Any_Basic_Impl.cpp
        * tao/AnyTypeCode/Any_Basic_Impl.h
        * tao/AnyTypeCode/Any_Basic_Impl_T.cpp
        * tao/AnyTypeCode/Any_Basic_Impl_T.h
        * tao/AnyTypeCode/Any_Basic_Impl_T.inl
        * tao/AnyTypeCode/Any_Dual_Impl_T.cpp
        * tao/AnyTypeCode/Any_Dual_Impl_T.h
        * tao/AnyTypeCode/Any_Dual_Impl_T.inl
        * tao/AnyTypeCode/Any_Impl.cpp
        * tao/AnyTypeCode/Any_Impl.h
        * tao/AnyTypeCode/Any_Impl_T.cpp
        * tao/AnyTypeCode/Any_Impl_T.h
        * tao/AnyTypeCode/Any_Impl_T.inl
        * tao/AnyTypeCode/Any_Special_Impl_T.cpp
        * tao/AnyTypeCode/Any_Special_Impl_T.h
        * tao/AnyTypeCode/Any_Special_Impl_T.inl
        * tao/AnyTypeCode/Any_SystemException.cpp
        * tao/AnyTypeCode/Any_SystemException.h
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.h
        * tao/AnyTypeCode/BooleanSeqA.cpp
        * tao/AnyTypeCode/BooleanSeqA.h
        * tao/AnyTypeCode/Bounds.pidl
        * tao/AnyTypeCode/BoundsA.cpp
        * tao/AnyTypeCode/BoundsA.h
        * tao/AnyTypeCode/BoundsC.cpp
        * tao/AnyTypeCode/BoundsC.h
        * tao/AnyTypeCode/CONV_FRAMEA.cpp
        * tao/AnyTypeCode/CONV_FRAMEA.h
        * tao/AnyTypeCode/CharSeqA.cpp
        * tao/AnyTypeCode/CharSeqA.h
        * tao/AnyTypeCode/CurrentA.cpp
        * tao/AnyTypeCode/CurrentA.h
        * tao/AnyTypeCode/DomainA.cpp
        * tao/AnyTypeCode/DomainA.h
        * tao/AnyTypeCode/DoubleSeqA.cpp
        * tao/AnyTypeCode/DoubleSeqA.h
        * tao/AnyTypeCode/Dynamic.pidl
        * tao/AnyTypeCode/DynamicA.cpp
        * tao/AnyTypeCode/DynamicA.h
        * tao/AnyTypeCode/DynamicC.cpp
        * tao/AnyTypeCode/DynamicC.h
        * tao/AnyTypeCode/DynamicS.h
        * tao/AnyTypeCode/Dynamic_Parameter.pidl
        * tao/AnyTypeCode/Dynamic_ParameterA.cpp
        * tao/AnyTypeCode/Dynamic_ParameterA.h
        * tao/AnyTypeCode/Dynamic_ParameterC.cpp
        * tao/AnyTypeCode/Dynamic_ParameterC.h
        * tao/AnyTypeCode/Empty_Param_TypeCode.cpp
        * tao/AnyTypeCode/Empty_Param_TypeCode.h
        * tao/AnyTypeCode/Empty_Param_TypeCode.inl
        * tao/AnyTypeCode/Enum_TypeCode.cpp
        * tao/AnyTypeCode/Enum_TypeCode.h
        * tao/AnyTypeCode/Enum_TypeCode.inl
        * tao/AnyTypeCode/Enum_TypeCode_Static.cpp
        * tao/AnyTypeCode/Enum_TypeCode_Static.h
        * tao/AnyTypeCode/Enum_TypeCode_Static.inl
        * tao/AnyTypeCode/ExceptionA.cpp
        * tao/AnyTypeCode/ExceptionA.h
        * tao/AnyTypeCode/Fixed_TypeCode.cpp
        * tao/AnyTypeCode/Fixed_TypeCode.h
        * tao/AnyTypeCode/Fixed_TypeCode.inl
        * tao/AnyTypeCode/FloatSeqA.cpp
        * tao/AnyTypeCode/FloatSeqA.h
        * tao/AnyTypeCode/GIOPA.cpp
        * tao/AnyTypeCode/GIOPA.h
        * tao/AnyTypeCode/IIOPA.cpp
        * tao/AnyTypeCode/IIOPA.h
        * tao/AnyTypeCode/IIOP_EndpointsA.cpp
        * tao/AnyTypeCode/IIOP_EndpointsA.h
        * tao/AnyTypeCode/IOPA.cpp
        * tao/AnyTypeCode/IOPA.h
        * tao/AnyTypeCode/IOP_IORA.cpp
        * tao/AnyTypeCode/IOP_IORA.h
        * tao/AnyTypeCode/LongDoubleSeqA.cpp
        * tao/AnyTypeCode/LongDoubleSeqA.h
        * tao/AnyTypeCode/LongLongSeqA.cpp
        * tao/AnyTypeCode/LongLongSeqA.h
        * tao/AnyTypeCode/LongSeqA.cpp
        * tao/AnyTypeCode/LongSeqA.h
        * tao/AnyTypeCode/Marshal.cpp
        * tao/AnyTypeCode/Marshal.h
        * tao/AnyTypeCode/Marshal.inl
        * tao/AnyTypeCode/Messaging_PolicyValueA.cpp
        * tao/AnyTypeCode/Messaging_PolicyValueA.h
        * tao/AnyTypeCode/Messaging_SyncScopeA.h
        * tao/AnyTypeCode/NVList.cpp
        * tao/AnyTypeCode/NVList.h
        * tao/AnyTypeCode/NVList.inl
        * tao/AnyTypeCode/NVList_Adapter_Impl.cpp
        * tao/AnyTypeCode/NVList_Adapter_Impl.h
        * tao/AnyTypeCode/Null_RefCount_Policy.h
        * tao/AnyTypeCode/ObjectIdListA.cpp
        * tao/AnyTypeCode/ObjectIdListA.h
        * tao/AnyTypeCode/Objref_TypeCode.cpp
        * tao/AnyTypeCode/Objref_TypeCode.h
        * tao/AnyTypeCode/Objref_TypeCode.inl
        * tao/AnyTypeCode/Objref_TypeCode_Static.cpp
        * tao/AnyTypeCode/Objref_TypeCode_Static.h
        * tao/AnyTypeCode/Objref_TypeCode_Static.inl
        * tao/AnyTypeCode/OctetSeqA.cpp
        * tao/AnyTypeCode/OctetSeqA.h
        * tao/AnyTypeCode/PI_ForwardA.cpp
        * tao/AnyTypeCode/PI_ForwardA.h
        * tao/AnyTypeCode/ParameterModeA.cpp
        * tao/AnyTypeCode/ParameterModeA.h
        * tao/AnyTypeCode/PolicyA.cpp
        * tao/AnyTypeCode/PolicyA.h
        * tao/AnyTypeCode/Policy_ForwardA.cpp
        * tao/AnyTypeCode/Policy_ForwardA.h
        * tao/AnyTypeCode/PortableInterceptorA.cpp
        * tao/AnyTypeCode/PortableInterceptorA.h
        * tao/AnyTypeCode/Recursive_Type_TypeCode.cpp
        * tao/AnyTypeCode/Recursive_Type_TypeCode.h
        * tao/AnyTypeCode/Recursive_Type_TypeCode.inl
        * tao/AnyTypeCode/RefCount_Policy_Traits.h
        * tao/AnyTypeCode/Sequence_TypeCode.cpp
        * tao/AnyTypeCode/Sequence_TypeCode.h
        * tao/AnyTypeCode/Sequence_TypeCode.inl
        * tao/AnyTypeCode/Sequence_TypeCode_Static.cpp
        * tao/AnyTypeCode/Sequence_TypeCode_Static.h
        * tao/AnyTypeCode/Sequence_TypeCode_Static.inl
        * tao/AnyTypeCode/ServicesA.cpp
        * tao/AnyTypeCode/ServicesA.h
        * tao/AnyTypeCode/ShortSeqA.cpp
        * tao/AnyTypeCode/ShortSeqA.h
        * tao/AnyTypeCode/StringSeqA.cpp
        * tao/AnyTypeCode/StringSeqA.h
        * tao/AnyTypeCode/String_TypeCode.cpp
        * tao/AnyTypeCode/String_TypeCode.h
        * tao/AnyTypeCode/String_TypeCode.inl
        * tao/AnyTypeCode/String_TypeCode_Static.cpp
        * tao/AnyTypeCode/String_TypeCode_Static.h
        * tao/AnyTypeCode/String_TypeCode_Static.inl
        * tao/AnyTypeCode/String_TypeCode_Traits.h
        * tao/AnyTypeCode/Struct_TypeCode.cpp
        * tao/AnyTypeCode/Struct_TypeCode.h
        * tao/AnyTypeCode/Struct_TypeCode.inl
        * tao/AnyTypeCode/Struct_TypeCode_Static.cpp
        * tao/AnyTypeCode/Struct_TypeCode_Static.h
        * tao/AnyTypeCode/Struct_TypeCode_Static.inl
        * tao/AnyTypeCode/SystemExceptionA.cpp
        * tao/AnyTypeCode/SystemExceptionA.h
        * tao/AnyTypeCode/TAOA.cpp
        * tao/AnyTypeCode/TAOA.h
        * tao/AnyTypeCode/TAO_AnyTypeCode_Export.h
        * tao/AnyTypeCode/TC_Constants_Forward.h
        * tao/AnyTypeCode/TimeBaseA.cpp
        * tao/AnyTypeCode/TimeBaseA.h
        * tao/AnyTypeCode/True_RefCount_Policy.cpp
        * tao/AnyTypeCode/True_RefCount_Policy.h
        * tao/AnyTypeCode/True_RefCount_Policy.inl
        * tao/AnyTypeCode/TypeCode.cpp
        * tao/AnyTypeCode/TypeCode.h
        * tao/AnyTypeCode/TypeCode.inl
        * tao/AnyTypeCode/TypeCodeA.cpp
        * tao/AnyTypeCode/TypeCode_Base_Attributes.cpp
        * tao/AnyTypeCode/TypeCode_Base_Attributes.h
        * tao/AnyTypeCode/TypeCode_Base_Attributes.inl
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.h
        * tao/AnyTypeCode/TypeCode_Case_Base_T.cpp
        * tao/AnyTypeCode/TypeCode_Case_Base_T.h
        * tao/AnyTypeCode/TypeCode_Case_Base_T.inl
        * tao/AnyTypeCode/TypeCode_Case_T.cpp
        * tao/AnyTypeCode/TypeCode_Case_T.h
        * tao/AnyTypeCode/TypeCode_Case_T.inl
        * tao/AnyTypeCode/TypeCode_Constants.cpp
        * tao/AnyTypeCode/TypeCode_Constants.h
        * tao/AnyTypeCode/TypeCode_Struct_Field.h
        * tao/AnyTypeCode/TypeCode_Traits.h
        * tao/AnyTypeCode/TypeCode_Value_Field.h
        * tao/AnyTypeCode/Typecode_typesA.h
        * tao/AnyTypeCode/ULongLongSeqA.cpp
        * tao/AnyTypeCode/ULongLongSeqA.h
        * tao/AnyTypeCode/ULongSeqA.cpp
        * tao/AnyTypeCode/ULongSeqA.h
        * tao/AnyTypeCode/UShortSeqA.cpp
        * tao/AnyTypeCode/UShortSeqA.h
        * tao/AnyTypeCode/Union_TypeCode.cpp
        * tao/AnyTypeCode/Union_TypeCode.h
        * tao/AnyTypeCode/Union_TypeCode.inl
        * tao/AnyTypeCode/Union_TypeCode_Static.cpp
        * tao/AnyTypeCode/Union_TypeCode_Static.h
        * tao/AnyTypeCode/Union_TypeCode_Static.inl
        * tao/AnyTypeCode/ValueModifier.pidl
        * tao/AnyTypeCode/ValueModifierA.cpp
        * tao/AnyTypeCode/ValueModifierA.h
        * tao/AnyTypeCode/ValueModifierC.cpp
        * tao/AnyTypeCode/ValueModifierC.h
        * tao/AnyTypeCode/ValueModifierS.h
        * tao/AnyTypeCode/Value_TypeCode.cpp
        * tao/AnyTypeCode/Value_TypeCode.h
        * tao/AnyTypeCode/Value_TypeCode.inl
        * tao/AnyTypeCode/Value_TypeCode_Static.cpp
        * tao/AnyTypeCode/Value_TypeCode_Static.h
        * tao/AnyTypeCode/Value_TypeCode_Static.inl
        * tao/AnyTypeCode/Visibility.pidl
        * tao/AnyTypeCode/VisibilityA.cpp
        * tao/AnyTypeCode/VisibilityA.h
        * tao/AnyTypeCode/VisibilityC.cpp
        * tao/AnyTypeCode/VisibilityC.h
        * tao/AnyTypeCode/VisibilityS.h
        * tao/AnyTypeCode/WCharSeqA.cpp
        * tao/AnyTypeCode/WCharSeqA.h
        * tao/AnyTypeCode/WStringSeqA.cpp
        * tao/AnyTypeCode/WStringSeqA.h
        * tao/AnyTypeCode/WrongTransactionA.cpp
        * tao/AnyTypeCode/WrongTransactionA.h
        * tao/AnyTypeCode/append.cpp
        * tao/AnyTypeCode/orb_typesA.cpp
        * tao/AnyTypeCode/orb_typesA.h
        * tao/AnyTypeCode/skip.cpp
        * examples/Kokyu_dsrt_schedulers/EDF_Scheduling.idl
        * tao/AnyTypeCode.mpc
        * tao/AnyTypeCode_Adapter.cpp
        * tao/AnyTypeCode_Adapter.h
        * tao/Any_Insert_Policy_T.h
        * tao/NVList_Adapter.cpp
        * tao/NVList_Adapter.h
        * tao/IFR_Client/IFR_BaseA.h
        * tao/IFR_Client/IFR_BasicA.h
        * tao/IFR_Client/IFR_ComponentsA.h
        * tao/ObjRefTemplate/ObjectReferenceTemplate_includeA.h
        * tao/PI/InvalidSlot.pidl
        * tao/PI/InvalidSlotA.cpp
        * tao/PI/InvalidSlotA.h
        * tao/PI/InvalidSlotC.cpp
        * tao/PI/InvalidSlotC.h
        * tao/PI/InvalidSlotS.h
        * tao/PortableServer/PortableServer_includeA.h
        * tao/PortableServer/RequestProcessingPolicyA.h
        * tao/PortableServer/SArg_Traits_T.h
        * tao/PortableServer/ServantActivatorA.h
        * tao/PortableServer/ServantLocatorA.h
        * tao/PortableServer/ServantManagerA.h
        * tao/PortableServer/ServantRetentionPolicyA.h
        * tao/PortableServer/ThreadPolicyA.h
        * tao/PI/PICurrent.cpp
        * tao/PI/PICurrent.h
        * tao/PI/PICurrent.inl
        * tao/PI/PICurrent.pidl
        * tao/PI/PICurrentA.cpp
        * tao/PI/PICurrentA.h
        * tao/PI/PICurrentC.cpp
        * tao/PI/PICurrentC.h
        * tao/PI/PICurrentS.h
        * tao/PI/PICurrent_Copy_Callback.cpp
        * tao/PI/PICurrent_Copy_Callback.h
        * tao/PI/PICurrent_Impl.cpp
        * tao/PI/PICurrent_Impl.h
        * tao/PI/PICurrent_Impl.inl
        * tao/PI/PICurrent_Loader.cpp
        * tao/PI/PICurrent_Loader.h
        * tao/RTCORBA/RTCORBA_includeA.h
        * tao/ImR_Client/ImplRepoA.h
        * tao/IFR_Client/IFR_ExtendedA.h
        * tao/RTScheduling/RTScheduler_includeA.h
        * tao/PortableServer/ForwardRequestA.h
        * tao/PortableServer/IdAssignmentPolicyA.h
        * tao/PortableServer/IdUniquenessPolicyA.h
        * tao/ImR_Client/ServerObjectA.h
        * tao/PortableServer/ImplicitActivationPolicyA.h
        * tao/PortableServer/LifespanPolicyA.h
        * tao/PortableServer/AdapterActivatorA.h
        * tao/PortableServer/PS_ForwardA.h
        * tao/PI/RequestInfo_Util.cpp
        * tao/PI/RequestInfo_Util.h
        * tao/PI_Server/PICurrent_Guard.cpp
        * tao/PI_Server/PICurrent_Guard.h
        * tao/PI_Server/PI_Server_include.pidl
        * tao/PI_Server/PI_Server_includeA.h
        * tao/PI_Server/PI_Server_includeC.h
        * tao/PI_Server/PI_Server_includeS.h
          Added these files to the repo

        * tao/UShortSeqA.cpp
        * tao/Union_TypeCode.cpp
        * tao/Union_TypeCode.h
        * tao/Union_TypeCode.inl
        * tao/Union_TypeCode_Static.cpp
        * tao/Union_TypeCode_Static.h
        * tao/Union_TypeCode_Static.inl
        * tao/Dynamic.pidl
        * tao/DynamicA.cpp
        * tao/DynamicC.cpp
        * tao/DynamicC.h
        * tao/DynamicS.h
        * tao/Dynamic_Parameter.pidl
        * tao/Dynamic_ParameterA.cpp
        * tao/Dynamic_ParameterC.cpp
        * tao/Dynamic_ParameterC.h
        * tao/Empty_Param_TypeCode.cpp
        * tao/Empty_Param_TypeCode.h
        * tao/Empty_Param_TypeCode.inl
        * tao/Enum_TypeCode.cpp
        * tao/Enum_TypeCode.h
        * tao/Enum_TypeCode.inl
        * tao/Enum_TypeCode_Static.cpp
        * tao/Enum_TypeCode_Static.h
        * tao/Enum_TypeCode_Static.inl
        * tao/Valuetype/Seq_Tmplinst.cpp
        * TAO_IDL/be/be_visitor_tmplinst.cpp
        * TAO_IDL/be/be_visitor_tmplinst/arg_tmplinst.cpp
        * TAO_IDL/be/be_visitor_tmplinst/tmplinst.cpp
        * TAO_IDL/be/be_visitor_tmplinst/tmplinst_cs.cpp
        * TAO_IDL/be/be_visitor_tmplinst/tmplinst_ss.cpp
        * examples/Kokyu_dsrt_schedulers/EDF_Scheduling.pidl
        * examples/Kokyu_dsrt_schedulers/EDF_SchedulingC.cpp
        * examples/Kokyu_dsrt_schedulers/EDF_SchedulingC.h
        * examples/Kokyu_dsrt_schedulers/EDF_SchedulingC.h.diff
        * examples/Kokyu_dsrt_schedulers/EDF_SchedulingC.i
        * TAO_IDL/be_include/be_visitor_tmplinst.h
        * TAO_IDL/be_include/be_visitor_tmplinst/arg_tmplinst.h
        * TAO_IDL/be_include/be_visitor_tmplinst/tmplinst.h
        * TAO_IDL/be_include/be_visitor_tmplinst/tmplinst_cs.h
        * TAO_IDL/be_include/be_visitor_tmplinst/tmplinst_ss.h
        * tao/ULongSeqA.cpp
        * orbsvcs/orbsvcs/IFRService/tmplinst.cpp
        * tao/Alias_TypeCode.cpp
        * tao/Alias_TypeCode.h
        * tao/Alias_TypeCode.inl
        * tao/Alias_TypeCode_Static.cpp
        * tao/Alias_TypeCode_Static.h
        * tao/Alias_TypeCode_Static.inl
        * tao/Any.cpp
        * tao/Any.h
        * tao/Any.i
        * tao/AnySeq.pidl
        * tao/AnySeqA.cpp
        * tao/AnySeqC.cpp
        * tao/AnySeqC.h
        * tao/AnySeqS.h
        * tao/Any_Arg_Traits.h
        * tao/Any_Array_Impl_T.cpp
        * tao/Any_Array_Impl_T.h
        * tao/Any_Array_Impl_T.inl
        * tao/Any_Basic_Impl.cpp
        * tao/Any_Basic_Impl.h
        * tao/Any_Basic_Impl_T.cpp
        * tao/SystemExceptionA.cpp
        * tao/TAOA.cpp
        * tao/IFR_Client/IFR_ExtendedA.cpp
        * tao/Any_Basic_Impl_T.h
        * tao/Any_Basic_Impl_T.inl
        * tao/Any_Dual_Impl_T.cpp
        * tao/Any_Dual_Impl_T.h
        * tao/Any_Dual_Impl_T.inl
        * tao/Any_Impl.cpp
        * tao/Any_Impl.h
        * tao/Any_Impl_T.cpp
        * tao/Any_Impl_T.h
        * tao/Any_Impl_T.inl
        * tao/IFR_Client/IFR_ComponentsA.cpp
        * tao/IFR_Client/IFR_BaseA.cpp
        * tao/IFR_Client/IFR_BasicA.cpp
        * tao/ValueModifier.pidl
        * tao/ValueModifierC.cpp
        * tao/ValueModifierC.h
        * tao/ValueModifierS.h
        * tao/Value_TypeCode.cpp
        * tao/Value_TypeCode.h
        * tao/Value_TypeCode.inl
        * tao/Value_TypeCode_Static.cpp
        * tao/Value_TypeCode_Static.h
        * tao/Value_TypeCode_Static.inl
        * tao/Any_Special_Impl_T.cpp
        * tao/Any_Special_Impl_T.h
        * tao/Any_Special_Impl_T.inl
        * tao/Any_SystemException.cpp
        * tao/Any_SystemException.h
        * tao/Any_Unknown_IDL_Type.cpp
        * tao/Any_Unknown_IDL_Type.h
        * tao/BooleanSeqA.cpp
        * tao/Bounds.pidl
        * tao/BoundsA.cpp
        * tao/BoundsC.cpp
        * tao/BoundsC.h
        * tao/CONV_FRAMEA.cpp
        * tao/CurrentA.cpp
        * tao/DomainA.cpp
        * tao/DoubleSeqA.cpp
        * tao/PortableServer/PICurrent_Guard.cpp
        * tao/PortableServer/PICurrent_Guard.h
        * tao/PortableServer/POAManagerA.cpp
        * tao/TC_Constants_Forward.h
        * tao/TimeBaseA.cpp
        * tao/True_RefCount_Policy.cpp
        * tao/True_RefCount_Policy.h
        * tao/True_RefCount_Policy.inl
        * tao/TypeCode.h
        * tao/TypeCode.inl
        * tao/TypeCodeA.cpp
        * tao/TypeCode_Base_Attributes.cpp
        * tao/TypeCode_Base_Attributes.h
        * tao/TypeCode_Base_Attributes.inl
        * tao/TypeCode_CDR_Extraction.cpp
        * tao/Visibility.pidl
        * tao/VisibilityC.cpp
        * tao/VisibilityC.h
        * tao/VisibilityS.h
        * tao/WCharSeqA.cpp
        * tao/WStringSeqA.cpp
        * tao/WrongTransactionA.cpp
        * tao/append.cpp
        * tao/skip.cpp
        * tao/TypeCode_CDR_Extraction.h
        * tao/TypeCode_Case.cpp
        * tao/TypeCode_Case.h
        * tao/TypeCode_Case.inl
        * tao/TypeCode_Case_T.cpp
        * tao/TypeCode_Case_T.h
        * tao/TypeCode_Case_T.inl
        * tao/TypeCode_Constants.cpp
        * tao/TypeCode_Constants.h
        * tao/TypeCode_Struct_Field.h
        * tao/TypeCode_Traits.h
        * tao/TypeCode_Value_Field.h
        * tao/ULongLongSeqA.cpp
        * tao/CharSeqA.cpp
        * tao/Fixed_TypeCode.cpp
        * tao/Fixed_TypeCode.h
        * tao/Fixed_TypeCode.inl
        * tao/FloatSeqA.cpp
        * tao/GIOPA.cpp
        * tao/IIOPA.cpp
        * tao/IIOP_EndpointsA.cpp
        * tao/IOP_IORA.cpp
        * tao/InvalidSlot.pidl
        * tao/InvalidSlotA.cpp
        * tao/InvalidSlotC.cpp
        * tao/InvalidSlotC.h
        * tao/InvalidSlotS.h
        * tao/Marshal.cpp
        * tao/LongSeqA.cpp
        * tao/LongDoubleSeqA.cpp
        * tao/LongLongSeqA.cpp
        * tao/Marshal.h
        * tao/Marshal.i
        * tao/Messaging_PolicyValueA.cpp
        * tao/NVList.cpp
        * tao/NVList.h
        * tao/NVList.i
        * tao/Null_RefCount_Policy.h
        * tao/ObjectIdListA.cpp
        * tao/Objref_TypeCode.cpp
        * tao/Objref_TypeCode.h
        * tao/Objref_TypeCode.inl
        * tao/Objref_TypeCode_Static.cpp
        * tao/Objref_TypeCode_Static.h
        * tao/Objref_TypeCode_Static.inl
        * tao/OctetSeqA.cpp
        * tao/PICurrent.cpp
        * tao/PICurrent.h
        * tao/PICurrent.inl
        * tao/PICurrent.pidl
        * tao/PICurrentA.cpp
        * tao/PICurrentC.cpp
        * tao/PICurrentC.h
        * tao/PICurrentS.h
        * tao/PICurrent_Copy_Callback.cpp
        * tao/PICurrent_Copy_Callback.h
        * tao/PICurrent_Impl.cpp
        * tao/PICurrent_Impl.h
        * tao/PICurrent_Impl.inl
        * tao/PICurrent_Loader.cpp
        * tao/PICurrent_Loader.h
        * tao/ParameterModeA.cpp
        * tao/PolicyA.cpp
        * tao/Policy_ForwardA.cpp
        * tao/Recursive_Type_TypeCode.cpp
        * tao/Recursive_Type_TypeCode.h
        * tao/Recursive_Type_TypeCode.inl
        * tao/RefCount_Policy_Traits.h
        * tao/RequestInfo_Util.cpp
        * tao/RequestInfo_Util.h
        * tao/Sequence_TypeCode.cpp
        * tao/Sequence_TypeCode.h
        * tao/Sequence_TypeCode.inl
        * tao/Sequence_TypeCode_Static.cpp
        * tao/Sequence_TypeCode_Static.h
        * tao/Sequence_TypeCode_Static.inl
        * tao/ServicesA.cpp
        * tao/ShortSeqA.cpp
        * tao/StringSeqA.cpp
        * tao/String_TypeCode.cpp
        * tao/String_TypeCode.h
        * tao/String_TypeCode.inl
        * tao/String_TypeCode_Static.cpp
        * tao/String_TypeCode_Static.h
        * tao/String_TypeCode_Static.inl
        * tao/String_TypeCode_Traits.h
        * tao/Struct_TypeCode.cpp
        * tao/Struct_TypeCode.h
        * tao/Struct_TypeCode.inl
        * tao/Struct_TypeCode_Static.cpp
        * tao/Struct_TypeCode_Static.h
        * tao/Struct_TypeCode_Static.inl
          Removed these files from the repo

        Thu Aug 18 14:28:45 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/Simulator/Event_Supplier/Event_Con.cpp:

          Removed uses of Any::value() and replaced them with the
          generated extraction operator.

        Thu Aug 18 07:43:16 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_arg_traits.cpp:
        * TAO_IDL/be_include/be_visitor_arg_traits.h:
          When Any generation is not enabled, generate Any_Insert_Policy_Noop
          as insert policy for the any, that way we don't get dependent
          on the AnyTypeCode library

        Wed Aug 17 13:27:16 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:

          In generating the include of *C.h in *A.h, added generation
          of the prefix "tao/" if we are processing a .pidl file, since
          in that case, the *A.h file will not be in the same directory.

        Wed Aug 17 12:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_cs.cpp:
          Generate explicit casts to suppress warnings at level 4 with msvc7

        Wed Aug 17 10:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Upcall_Wrapper.cpp:
        * tao/ServerRequestInterceptor_Adapter.h:
        * tao/TAO_Server_Request.{h,cpp,i}:
        * tao/PI_Server/ServerInterceptorAdapter.{h,cpp}:
          Made PICurrent working again

        Wed Aug 17 08:34:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_arg_traits.cpp
        * tao/AnyTypeCode_Adapter.h
        * tao/BD_String_Argument_T.h
        * tao/AnyTypeCode/AnyTypeCode_Adapter_Impl.cpp
        * tao/AnyTypeCode/AnyTypeCode_Adapter_Impl.h
        * tao/PortableServer/BD_String_SArgument_T.h
          Removed the specialization for bound (w)string from the TAO
          lib and just generate the full Arg_Trait in the IDL compiler,
          this makes it not needed anymore to have an insertion
          method for the bound (w)string in the AnyTypeCode adapter

        Tue Aug 16 20:03:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_interface_fwd/any_op_ch.cpp:
          Generate the correct export macro

        Tue Aug 16 19:53:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*:
          Regenerated

        Tue Aug 16 18:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          Removed pragma push/pop for msvs, those warnings are already
          disabled in general

        * tao/Array_VarOut_T.{h,inl}:
          In the TAO_Array_Forany_T make the pointer in the constructor
          const to get things compiling with the new any insertion

        Mon Aug 15 19:56:10 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_nodule/module_ch.cpp:

          Where namespace openings and closings are generated, add
          generation of the same openings and closings in the *A.h
          file, if the -GA option is being used. This change ensures
          that typecode declarations for types nested in one or more
          modules will themselves appear in the same scope.

        Mon Aug 15 19:52:50 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/PI/PICurrent_Loader.cpp:
        * tao/PI/PICurrent_Loader.h:

          Change library name in ACE_FACTORY_DEFINE and ACE_FACTORY_DECLARE
          to TAO_PI (where the modified files are located) instad of TAO.

        Mon Aug 15 19:14:16 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/tests/BiDir_CORBALOC/TimeServer.cpp:

          Added #include of "tao/AnyTypeCode/Any.h".

        Mon Aug 15 19:10:43 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/PortableGroup.mpc:

          Removed the extra subgroup labeled OBRSVCS_COMPONENTS. This is
          not used on any platform and it creates an extra subdirectory
          in the MSVC 7.1 solution browser.

        Mon Aug 15 09:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          Generate the A.h includes in the header file instead of the cpp file.
          When A.idl includes B.pidl which includes C.pidl, when we generate
          the includes in the header file, then in AC.h we don't have the types
          from CC.h.

        Fri Aug 12 12:59:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/ORBInitializer_Registry_Impl.cpp:
        * tao/PI/PICurrent.{h,cpp,inl}:
          Made PICurrent on the client side working again. When PICurrent is
          requested and used, then we allocate a key in the orb tss resources
          and create the PICurrent_Impl at that moment. The server side of
          PICurrent is now the next todo.

        Fri Aug 12 09:54:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.cpp:
        * tao/ORBInitializer_Registry_Adapter.h:
        * tao/PI/ORBInitializer_Registry_Impl.{h,cpp}:
          Changed the way the number of allocated slots is passed to PICurrent.
          This is now completely handled in the PI library, it is not up
          to the ORB anymore. This makes the ORB unaware of PICurrent

        Thu Aug 11 15:56:51 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:

          Fixed the logic of generating a *A.h include associated
          with an included .pidl file to determine whether the
          .pidl file is located in $TAO_ROOT/tao or in a subdirectory,
          and thus whether to include the *A.h file from the
          AnyTypeCode library or not. Only .pidl files in the
          $TAO_ROOT/tao directory itself have their associated
          *A.* files moved to the AnyTypeCode library.

        Thu Aug 11 09:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/PI.h:
        * orbsvcs/IFR_Service/ifr_adding_visitor_union.cpp
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.cpp
        * orbsvcs/orbsvcs/IFRService/ConstantDef_i.cpp
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.cpp
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.cpp
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.h
        * orbsvcs/orbsvcs/Log/PersistStore.cpp
        * orbsvcs/orbsvcs/Log/PersistStore.h
        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.h
        * orbsvcs/orbsvcs/Security/SL3_PolicyFactory.cpp
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp
        * orbsvcs/orbsvcs/Trader/Interpreter_Utils.h
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.cpp
        * examples/POA/DSI/Database_i.cpp
        * examples/POA/POA_BiDir/POA_BiDir.cpp
        * examples/Simulator/Event_Supplier/Event_Con.cpp
        * orbsvcs/PSS/PSDL_Code_Gen.cpp
        * orbsvcs/examples/ORT/Gateway_i.cpp
        * orbsvcs/tests/Notify/Reconnecting/Consumer.cpp
        * tao/IFR_Client.mpc
        * tao/tao.mpc
        * tests/Nested_Upcall_Crash/client.cpp
        * tests/Nested_Upcall_Crash/scavenger.cpp
        * tests/Nested_Upcall_Crash/server.cpp
        * tests/Oneway_Buffering/client.cpp
        * tests/POA/Policies/Policies.cpp
        * tests/Portable_Interceptors/PICurrent/client.cpp

        Wed Aug 10 19:47:30 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_visitor_root.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/be_include/be_visitor_root/root.h:

          Removed calls to the visitor classes in the files
          below that have been removed, and removed the -GT
          command line option and the associated usage message.
          The IDL compiler now generates no explicit template
          instantiations, and has no command line option to
          do so.

        * TAO_IDL/be_include/be_visitor_tmplinst/arg_tmplinst.h:
        * TAO_IDL/be_include/be_visitor_tmplinst/tmplinst.h:
        * TAO_IDL/be_include/be_visitor_tmplinst/tmplinst_cs.h:
        * TAO_IDL/be_include/be_visitor_tmplinst/tmplinst_ss.h:
        * TAO_IDL/be/be_visitor_tmplinst/arg_tmplinst.cpp:
        * TAO_IDL/be/be_visitor_tmplinst/tmplinst.cpp:
        * TAO_IDL/be/be_visitor_tmplinst/tmplinst_cs.cpp:
        * TAO_IDL/be/be_visitor_tmplinst/tmplinst_ss.cpp:
        * TAO_IDL/be_include/be_visitor_tmplinst.h:
        * TAO_IDL/be/be_visitor_tmplinst.cpp:

          Unused visitor classes related to generation of
          explicit template instantiations, their files
          have been removed from CVS.

        * docs/compiler.html:

          Removed the -GT command line option from the table.

        * docs/releasenotes/index.html:

          Updated documentation of the IDL compiler to reflect
          the above changes.

        Wed Aug 10 13:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/PortableInterceptors/Benchmark/client_interceptors.cpp
        * tests/PortableInterceptors/Benchmark/server_interceptors.cpp
        * tests/PortableInterceptors/Collocated/Dynamic/interceptors.cpp
        * tests/PortableInterceptors/Dynamic/client_interceptor.cpp
        * tests/PortableInterceptors/Dynamic/server_interceptor.cpp
        * tests/PortableInterceptors/PolicyFactory/PolicyFactory.cpp

        Wed Aug 10 13:27:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Buffered_AMI/client.cpp
        * examples/Buffered_Oneways/client.cpp
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEvent.h
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.h
        * tests/MProfile_Connection_Timeout/client.cpp
        * tests/MProfile_Forwarding/MProfile_Forwarding.mpc
        * tests/MT_BiDir/client.cpp
        * tests/MT_BiDir/server.cpp
        * tests/MT_Client/MT_Client.mpc
        * tests/MT_Server/MT_Server.mpc
        * tests/MT_Timeout/Client_Task.cpp
        * performance_tests/Anyop/Anyop.mpc
        * performance_tests/Anyop/anyop.cpp
        * performance_tests/Callback/client.cpp
        * performance_tests/Callback/server.cpp
        * performance_tests/Cubit/TAO/DII_Cubit/client.cpp
        * performance_tests/Latency/DII/client.cpp
        * performance_tests/Latency/DSI/Roundtrip.cpp
        * performance_tests/Latency/Deferred/client.cpp
        * performance_tests/RTCorba/Oneways/Reliable/client.cpp
        * performance_tests/Sequence_Latency/DII/client.cpp
        * performance_tests/Sequence_Latency/DSI/Roundtrip.cpp
        * performance_tests/Sequence_Latency/Deferred/client.cpp
          Updated for moves.

        Wed Aug 10 12:59:06 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:

          Removed generation of Any operators for local interfaces.

        Wed Aug 10 11:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/MProfile_Forwarding/MProfile_Forwarding.mpc
        * tests/MT_Client/MT_Client.mpc
        * tests/MT_Server/MT_Server.mpc
        * tests/DLL_ORB/DLL_ORB.mpc
        * tests/CDR/CDR.mpc:
        * tests/AMI_Buffering/AMI_Buffering.mpc:
        * tests/AMI_Timeouts/AMI_Timeouts.mpc:
        * tests/BiDirectional/BiDirectional.mpc:
        * tests/BiDirectional_MultipleORB/destroy.mpc:
        * tests/Collocation/Collocation.mpc:
        * CDR/CDR.mpc
          Simplified this MPC file

        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEvent.h
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.h
        * orbsvcs/orbsvcs/Security/SL3_PolicyFactory.cpp
        * tests/MProfile_Connection_Timeout/client.cpp
        * tests/MT_BiDir/client.cpp
        * tests/MT_BiDir/server.cpp
        * tests/MT_Timeout/Client_Task.cpp
        * tests/CDR/tc.cpp:
        * tests/AMI_Buffering/client.cpp:
        * tests/AMI_Timeouts/timeout_client.cpp:
        * tests/BiDirectional/client.cpp:
        * tests/BiDirectional/server.cpp:
        * tests/BiDirectional_MultipleORB/destroy.cpp:
        * tests/BiDirectional_NestedUpcall/client.cpp:
        * tests/BiDirectional_NestedUpcall/server.cpp:
        * tests/Big_Request_Muxing/Client_Task.cpp:
        * Blocking_Sync_None/client.cpp
        * Bug_1020_Basic_Regression/client.cpp
        * Bug_1020_Regression/client.cpp
        * Bug_1269_Regression/client.cpp
        * Bug_1270_Regression/client.cpp
        * Bug_1361_Regression/client.cpp
        * Bug_1476_Regression/Client_Task.cpp
        * Bug_1476_Regression/client.cpp
        * Bug_1482_Regression/client.cpp
        * Bug_1551_Regression/client.cpp
        * CDR/basic_types.cpp
        * tests/Connection_Timeout/client.cpp
        * tests/Crashed_Callback/client.cpp
        * tests/Crashed_Callback/server.cpp
        * tests/DynAny_Test/data.cpp
        * tests/DynAny_Test/data.h
          Added missing includes that are needed because of file moves

        * tests/Any/Recursive/RecursiveHello.mpc:
          Don't use -GA, causes problems with the recursive structs

        * tao/corba.h:
          Removed AnySeqC, file moved to a seperate library

        * tao/BD_String_Argument_T.h:
        * tao/PortableServer/BD_String_SArgument_T.{h,inl}:
          Fixed some errors in these files

        * tao/Fixed_Size_Argument_T.cpp
        * tao/Fixed_Size_Argument_T.h
        * tao/Fixed_Size_Argument_T.inl
        * tao/PortableServer/Fixed_Size_SArgument_T.h
        * tao/PortableServer/Fixed_Size_SArgument_T.inl
          Updated

        * tao/orb.idl
          Removed moved files

        Wed Aug 10 08:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          Added AnyTypeCode to include path of Any_Arg_Traits.h

        Wed Aug 10 08:06:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IFR_Client/*:
          Removed -GA in the generation options and removed all *A.cpp
          files. The IFR_Client has a struct defined in an interface, then
          the generation of seperate *A.h file will not work.

        * tao/AnyTypeCode/ValueModifier*.*:
          Added A.{h,cpp} file.

        Tue Aug  9 13:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Any_SArg_Traits.h
        * tao/PortableServer/BD_String_SArgument_T.cpp
        * tao/PortableServer/BD_String_SArgument_T.h
        * tao/PortableServer/BD_String_SArgument_T.inl
        * tao/PortableServer/Basic_SArgument_T.cpp
        * tao/PortableServer/Basic_SArgument_T.h
        * tao/PortableServer/Basic_SArgument_T.inl
        * tao/PortableServer/Basic_SArguments.h
        * tao/PortableServer/Fixed_Array_SArgument_T.cpp
        * tao/PortableServer/Fixed_Array_SArgument_T.h
        * tao/PortableServer/Fixed_Array_SArgument_T.inl
        * tao/PortableServer/Fixed_Size_SArgument_T.cpp
        * tao/PortableServer/Fixed_Size_SArgument_T.h
        * tao/PortableServer/Fixed_Size_SArgument_T.inl
        * tao/PortableServer/Object_SArg_Traits.h
        * tao/PortableServer/Object_SArgument_T.cpp
        * tao/PortableServer/Object_SArgument_T.h
        * tao/PortableServer/Object_SArgument_T.inl
        * tao/PortableServer/PolicyS.cpp
        * tao/PortableServer/Special_Basic_SArgument_T.cpp
        * tao/PortableServer/Special_Basic_SArgument_T.h
        * tao/PortableServer/Special_Basic_SArgument_T.inl
        * tao/PortableServer/Special_Basic_SArguments.h
        * tao/PortableServer/TypeCode_SArg_Traits.h
          Updated also all SArg_Traits templates

        Tue Aug  9 12:37:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_arg_traits.cpp:
          Updated Arg traits generation

        Tue Aug  9 11:51:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * AnyTypeCode_Adapter.h
        * BD_String_Argument_T.cpp
        * BD_String_Argument_T.h
        * BD_String_Argument_T.inl
        * Basic_Argument_T.cpp
        * Basic_Argument_T.h
        * Basic_Argument_T.inl
        * Basic_Arguments.h
        * DomainC.cpp
        * Fixed_Array_Argument_T.cpp
        * Fixed_Array_Argument_T.h
        * Fixed_Array_Argument_T.inl
        * ORB_Core_TSS_Resources.cpp
        * ORB_Core_TSS_Resources.h
        * Object.cpp
        * Object.h
        * Object_Argument_T.cpp
        * Object_Argument_T.h
        * Object_Argument_T.inl
        * PolicyC.cpp
        * Special_Basic_Argument_T.cpp
        * Special_Basic_Argument_T.h
        * Special_Basic_Argument_T.inl
        * Special_Basic_Arguments.h
        * UB_String_Argument_T.cpp
        * UB_String_Argument_T.h
        * UB_String_Argument_T.inl
        * UB_String_Arguments.h
        * Var_Array_Argument_T.cpp
        * Var_Array_Argument_T.h
        * Var_Array_Argument_T.inl
        * Var_Size_Argument_T.cpp
        * Var_Size_Argument_T.h
        * Var_Size_Argument_T.inl
        * AnyTypeCode/AnyTypeCode_Adapter_Impl.h
        * AnyTypeCode/Any_Arg_Traits.h
        * AnyTypeCode/TypeCode.h
        * Domain/DomainS.cpp
        * IFR_Client/IFR_BaseC.cpp
        * IORInterceptor/IORInfoC.cpp
        * ImR_Client/ImplRepoC.cpp
        * ImR_Client/ImplRepoS.cpp
        * ObjRefTemplate/ObjectReferenceTemplateC.cpp
        * PortableServer/PolicyS.cpp
        * PortableServer/PortableServerC.cpp
        * RTScheduling/RTSchedulerC.cpp
        * Valuetype/AbstractBase.h
        * Valuetype/ValueBase.h
          Updated Argument classes to use new Any Insert Policy  template

        Mon Aug  8 09:13:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.cpp:
        * tao/ORB_Core.{h,cpp,i}:
        * tao/PI/ClientRequestInfo.cpp:
        * tao/PI_Server/POA_Current.cpp:
        * tao/PI_Server/ServerRequestInfo.cpp:
          Updated partly for PI changes. Idea is now to store PICurrent in the
          ORB Core as Object_ptr, a dynamic cast can then be done in the PI libs

        * tao/Argument.cpp
        * tao/Argument.h
        * tao/BD_String_Argument_T.cpp
        * tao/BD_String_Argument_T.h
        * tao/Basic_Argument_T.cpp
        * tao/Basic_Argument_T.h
        * tao/Basic_Arguments.h
        * tao/DomainC.cpp
        * tao/Fixed_Array_Argument_T.cpp
        * tao/Fixed_Array_Argument_T.h
        * tao/Fixed_Size_Argument_T.cpp
        * tao/Fixed_Size_Argument_T.h
        * tao/IFR_Client_Adapter.h
        * tao/Object.cpp
        * tao/Object.h
        * tao/Object_Argument_T.cpp
        * tao/Object_Argument_T.h
        * tao/PolicyC.cpp
        * tao/Special_Basic_Argument_T.cpp
        * tao/Special_Basic_Argument_T.h
        * tao/UB_String_Argument_T.cpp
        * tao/UB_String_Argument_T.h
        * tao/Var_Array_Argument_T.cpp
        * tao/Var_Array_Argument_T.h
        * tao/Var_Size_Argument_T.cpp
        * tao/Var_Size_Argument_T.h
        * tao/DynamicInterface/DII_Arguments.cpp
        * tao/DynamicInterface/DII_Arguments.h
        * tao/IFR_Client/IFR_BaseC.cpp
        * tao/IFR_Client/IFR_BasicC.cpp
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp
        * tao/IFR_Client/IFR_Client_Adapter_Impl.h
        * tao/IFR_Client/IFR_ComponentsC.cpp
        * tao/IFR_Client/IFR_ExtendedC.cpp
        * tao/ImR_Client/ImplRepoC.cpp
        * tao/ImR_Client/ServerObjectC.cpp
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.cpp
        * tao/PI/ClientRequestInfo.cpp
        * tao/PI_Server/ServerRequestInfo.cpp
        * tao/PortableServer/BD_String_SArgument_T.cpp
        * tao/PortableServer/BD_String_SArgument_T.h
        * tao/PortableServer/Basic_SArgument_T.cpp
        * tao/PortableServer/Basic_SArgument_T.h
        * tao/PortableServer/Basic_SArguments.h
        * tao/PortableServer/Fixed_Array_SArgument_T.cpp
        * tao/PortableServer/Fixed_Array_SArgument_T.h
        * tao/PortableServer/Fixed_Size_SArgument_T.cpp
        * tao/PortableServer/Fixed_Size_SArgument_T.h
        * tao/PortableServer/Object_SArgument_T.cpp
        * tao/PortableServer/Object_SArgument_T.h
        * tao/PortableServer/PolicyS.cpp
        * tao/PortableServer/Special_Basic_SArgument_T.cpp
        * tao/PortableServer/Special_Basic_SArgument_T.h
        * tao/PortableServer/UB_String_SArgument_T.cpp
        * tao/PortableServer/UB_String_SArgument_T.h
        * tao/PortableServer/Var_Array_SArgument_T.cpp
        * tao/PortableServer/Var_Array_SArgument_T.h
        * tao/PortableServer/Var_Size_SArgument_T.cpp
        * tao/PortableServer/Var_Size_SArgument_T.h
          Changed the interface of TAO::Argument. Instead of using
          Dynamic::Parameter as argument, use the method interceptor_
          value that gets an Any* argument and a separate mode argument
          to get the mode of the argument (in/out/inout). Instead of
          duplicating this mode method, added InArgument, InoutArgument,
          OutArgument and RetArgument class that implement this method.
          All templates are then derived from the correct base method.

        Mon Aug  8 20:26:22 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/AnyTypeCode/NVList_Adapter_Impl.h:

          Corrected the export macro.

        Mon Aug  8 19:55:07 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:

          Moved generation of the _tao_type() method for user exceptions
          to the *A.cpp file if we are using the -GA option.

        * TAO_IDL/be/be_codegen.cp:

          Added code generation of *A.h includes from the AnyTypeCode
          library corresponding to included .pidl files.

        Thu Aug  4 18:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Cache_Entries.{h,inl}:
          Removed non const index method

        * tao/PortableServer/SArg_Traits_T.h:
        * tao/PortableServer/Basic_SArguments.h:
        * tao/PortableServer/Special_Basic_SArguments.h:
        * tao/PortableServer/UB_String_SArguments.h:
        * tao/Arg_Traits_T.h:
          Moved SArg_Traits to its own file and updated includes

        * tao/PI_Server/ServerRequestInfo.cpp:
        * tao/PI_Server/ServerInterceptorAdapter.cpp:
          Updated for PICurrent changes

        * tao/PI/ClientRequestInfo.{h,cpp}:
          Implemented several methods here instead of using
          functionality that was in the TAO lib for interceptors

        * tao/DynamicInterface/DII_Invocation.cpp:
          Updated include of RequestInfo_Util.h

        * tao/Invocation_Base.{h,cpp}:
        * tao/operation_details.{h,cpp,i}:
          Removed several methods that are just there for the
          ClientRequestInfo. The functionality moved to the
          ClientRequestInfo class in the PI library where we just
          access the operation details.

        * tao/tao.mpc:
          Removed files

        * tao/RequestInfo_Util.{h,cpp}:
        * tao/PI/RequestInfo_Util.{h,cpp}:
          Moved to the PI lib

        * tao/Invocation_Adapter.h:
          Removed obsolete forward declaration of TAO_Exception_Data

        * tao/AnyTypeCode/TypeCode.cpp:
          Applied some patches Ossama did to the main branch also

        * tao/Argument.cpp:
          Use true instead of 1

        * tao/PI/InvalidSlotA.h:
        * tao/PI/InvalidSlotC.h:
          Corrected export macro

        * tao/DynamicInterface/Unknown_User_Exception.{h,cpp}:
          Removed _is_a method

        * tao/operation_details.{h,i}:
          Removed non const version of addressing_mode

        * tao/Invocation_Base.{h,inl}:
          Added accessor for operation details

        Tue Aug  2 13:13:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/TC_Constants_Forward.h:
        * tao/AnyTypeCode/TC_Constants_Forward.h:
          Moved to AnyTypeCode lib

        Tue Aug  2 12:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CORBA_methods.h:
          Removed not needed forward declarations

        * tao/Dynamic_Adapter.cpp:
          Removed not needed includes and explicit templates

        * tao/NVList_Adapter.{h,cpp}:
          New NVList adapter

        * tao/ORB.{h,cpp}:
          Use new NVList Adapter

        * tao/tao.mpc:
          Added NVList_Adapter files

        * tao/AnyTypeCode.mpc:
          Added new files

        * tao/NVList.h:
          Updated friends

        * tao/NVList_Adapter_Impl.{h,cpp}:
          Concrete NVList Adapter implementation

        Tue Aug  2 12:17:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/AnyTypeCode_Adapter_Impl.{h,cpp}:
          Adapter implementation. _tao_type for all systemexceptions
          is not available

        Tue Aug  2 12:02:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/ExceptionA.cpp:
          Reenabled CORBA::Exception Any operators now _tao_type is available
          again

        Mon Aug  1 19:18:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Exception.{h,cpp}:
          Removed class TAO_DONT_CATCH, it is not used at all. Also removed
          the emulated exception argument from create_system_exception, it
          is not needed

        Mon Aug  1 19:06:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode_Adapter.{h,cpp}:
        * tao/SystemException.cpp:
          Added first version of Adapter interface and implemented
          SystemException::_tao_type to call the adapter method.

        * tao/tao.mpc:
          Added new file

        Mon Aug  1 18:10:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Exception.{h,cpp}:
        * tao/SystemException.{h,cpp}:
        * tao/UserException.{h,cpp}:
          Removed _is_a, it is TAO specific to handle environments without
          RTTI but we require and use that, so zapped this method.
          Reimplemented SystemException::_tao_get_omg_exception_description
          to use dynamic_cast to check for the specific exception type

        Mon Aug  1 15:22:59 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/AnyTypeCode/DynamicA.h:
        * tao/AnyTypeCode/DynamicC.h:

          Fixed some export macros that were not changed when these
          files were moved to the AnyTypeCode library.

        Mon Aug  1 14:20:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Exception.h:
        * tao/SystemException.h:
        * tao/UserException.h:
          Documentation improvements

        Mon Aug  1 12:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Exception.{h,cpp}:
          Declared _tao_type as pure virtual. No need to have a default
          implementation here

        * tao/ORB.{h,cpp}:
          Optimized InvalidName::_downcast. Implemented _tao_type as
          return 0, we don't have a default implementatio anymore in the
          base

        * tao/PolicyC.{h,cpp}:
        * tao/WrongTransactionC.{h,cpp}:
          Made _tao_type active again, implement this as return 0 at this
          moment, have to call a new adapter later

        * tao/SystemException.{h,cpp}:
          Added _tao_type again, implemented it as return 0, have to add
          a call to an adapter later for all system exceptions

        * tao/UserException.{h,cpp}:
          Added _tao_type with return 0 as default implementation, coming
          from the base

        * tao/AnyTypeCode/BoundsC.{h,cpp}:
        * tao/PI/InvalidSlotC.{h,cpp}:
          Added _tao_type again.

        * tao/AnyTypeCode/TypeCode.{h,cpp}:
          Added _tao_type with return 0

        Mon Aug  1 11:19:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode.mpc:
          Updated for a lot of changes

        * tao/Basic_Argument_T.cpp:
          Added a temporarily specialization for unsigned int, will need to be
          removed soon

        * tao/Object_Argument_T.cpp
          Added a temporarily specialization for Policy, will need to be
          removed soon

        * tao/Special_Basic_Argument_T.cpp:
          Added a temporarily specialization for bool, will need to be
          removed soon

        * tao/UB_String_Argument_T.cpp:
          Added a temporarily specialization for string, will need to be
          removed soon

        * tao/BD_String_Argument_T.cpp:
        * tao/Fixed_Array_Argument_T.cpp:
        * tao/Fixed_Size_Argument_T.cpp:
          Removed include of Dynamic_ParameterC.h

        * tao/Block_Flushing_Strategy.h:
        * tao/Flushing_Strategy.h:
        * tao/Leader_Follower_Flushing_Strategy.h:
        * tao/Reactive_Flushing_Strategy.h:
        * tao/Wait_On_Leader_Follower.h:
        * tao/Wait_On_LF_No_Upcall.h:
        * tao/Wait_On_Reactor.h:
        * tao/Wait_On_Read.h:
        * tao/Wait_Strategy.h:
          No need to export the class in this file

        * tao/DomainC.cpp:
          Pass the Dynamic_Parameter to the IFR Adapter, this way we don't
          depend on Any

        * tao/IFR_Client_Adapter.h:
          Pass the Dynamic::Parameter to interfacedef_any_insert

        * tao/InvalidSlot*.*:
          Moved to the PI library

        * tao/Invocation_Base.cpp:
        * tao/operation_details.cpp:
          Commented out several methods which need to be reimplemented
          using a new adapter

        * tao/ORB.cpp:
        * tao/ORB_Core.{h,cpp,i}:
        * tao/ORB_Core_TSS_Resources.{h,cpp}:
          Commented out creation of PICurrent, will have to reimplement this
          now PICurrent moved to the PI lib

        * tao/PortableInterceptor.pidl:
        * tao/PortableInterceptorC.h:
          Removed the files that moved to the PI lib

        * tao/PICurrent.{h,cpp,inl,pidl}:
        * tao/PICurrent_Copy_Callback.{h,cpp}:
        * tao/PICurrent_Impl.{h,cpp,inl}:
        * tao/PICurrent_Loader.{h,cpp}:
        * tao/PICurrentC.{h,cpp}:
        * tao/PICurrentS.h:
          Moved to the PI lib

        * tao/Server_Request.{h,cpp,inl}:
          Use pointers for the PI stuff, will need to update this soon

        * tao/TypeCodeFactory_Adapter.h:
          Added forward declaration for ValueModifier

        * tao/ValueModifier.pidl:
        * tao/ValueModifierC.{h,cpp}:
        * tao/ValueModifierS.h:
          Moved to AnyTypeCode lib

        * tao/Visibility.pidl:
        * tao/VisibilityC.{h,cpp}:
        * tao/VisibilityS.h:
          Moved to AnyTypeCode lib

        * tao/AnyTypeCode/PICurrentA.{h,cpp}:
        * tao/AnyTypeCode/InvalidSlotA.{h,cpp}:
          Moved to the PI lib

        * tao/AnyTypeCode/PortableInterceptorA.h:
          Removed some includes

        * tao/AnyTypeCode/TypeCode.h:
        * tao/AnyTypeCode/Value_TypeCode:
        * tao/AnyTypeCode/Value_TypeCode_Static.h:
          Updated includes

        * tao/IFR_Client/*C.cpp:
          Added include of Dynamic_Parameter.h

        * tao/PI/ClientRequestInfo.{h,cpp}:
          Updated includes

        * tao/PI/PICurrent*.*:
          Moved here from the tao lib

        * tao/PoratbleServer/Basic_SArgument_T.cpp
        * tao/PoratbleServer/BD_String_SArgument_T.cpp
        * tao/PoratbleServer/Fixed_Array_SArgument_T.cpp
        * tao/PoratbleServer/Fixed_Size_SArgument_T.cpp
        * tao/PoratbleServer/Object_SArgument_T.cpp
        * tao/PoratbleServer/Special_Basic_SArgument_T.cpp
        * tao/PoratbleServer/UB_String_SArgument_T.cpp
        * tao/PoratbleServer/Var_Array_SArgument_T.cpp
        * tao/PoratbleServer/Var_Size_SArgument_T.cpp
          Update includes

        * tao/PortableServer/Upcall_Wrapper.cpp:
          Temporarily commented out PICurrent_Guard. Need to change this
          to a call to the PI adapter and an auto_ptr

        Fri Jul 29 19:23:17 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be_include/be_global.h:

          Added -oA <path> option to direct the output of generated
          *A.* files. The -oA option overrides path specified by
          -o, if any.

        * docs/compiler.html:

          Added above option to commandline option table.

        Fri Jul 29 18:32:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicAny.mpc
        * tao/IFR_Client.mpc
        * tao/IORManipulation.mpc
        * tao/Strategies.mpc
        * tao/Valuetype.mpc
        * tao/Var_Size_Argument_T.cpp
        * tao/corba.h
        * tao/AnyTypeCode/DynamicA.cpp
        * tao/AnyTypeCode/DynamicA.h
        * tao/AnyTypeCode/DynamicC.cpp
        * tao/AnyTypeCode/DynamicC.h
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp
        * tao/AnyTypeCode/orb_typesA.h
        * tao/DynamicInterface/DII_Arguments.cpp
        * tao/DynamicInterface/Request.cpp
        * tao/DynamicInterface/Request.h
        * tao/DynamicInterface/Server_Request.cpp
        * tao/IFR_Client/IFR_BaseA.cpp
        * tao/IFR_Client/IFR_BaseC.cpp
        * tao/IFR_Client/IFR_BasicA.cpp
        * tao/IFR_Client/IFR_BasicC.cpp
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp
        * tao/IFR_Client/IFR_ComponentsA.cpp
        * tao/IFR_Client/IFR_ExtendedA.cpp
        * tao/IORManipulation/IORA.cpp
        * tao/ImR_Client/ImplRepoA.cpp
        * tao/Messaging/Messaging_PolicyFactory.cpp
        * tao/Messaging/Messaging_Policy_i.cpp
        * tao/Messaging/Messaging_RT_PolicyA.cpp
        * tao/ObjRefTemplate/Default_ORTA.cpp
        * tao/ObjRefTemplate/ObjectReferenceTemplateA.cpp
        * tao/PI/ClientRequestInfoA.cpp
        * tao/PI/ClientRequestInterceptorA.cpp
        * tao/PI/InterceptorA.cpp
        * tao/PI/ORBInitInfoA.cpp
        * tao/PI/RequestInfo.pidl
        * tao/PI/RequestInfoA.cpp
        * tao/PI_Server/ServerRequestInfoA.cpp
        * tao/PI_Server/ServerRequestInterceptorA.cpp
        * tao/PortableServer/Var_Size_SArgument_T.cpp
        * tao/RTCORBA/RTCORBAA.cpp
        * tao/RTCORBA/RT_Policy_i.cpp
        * tao/RTPortableServer/RTPortableServerA.cpp
        * tao/RTScheduling/RTSchedulerA.cpp
        * tao/Strategies/sciop_endpointsC.cpp
        * tao/Strategies/uiop_endpointsC.cpp
        * tao/TypeCodeFactory/Recursive_TypeCode.h
        * tao/TypeCodeFactory/TypeCodeFactoryA.cpp
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp
        * tao/Valuetype/StringValueC.cpp
        * tao/Valuetype/ValueBase.cpp
          All kinds of changes to get things compiling again

        * AnyTypeCode/Union_TypeCode.{h,cpp,inl}:
        * AnyTypeCode/Union_TypeCode_T.{h,cpp,inl}:
          Renamed _T back to normal file

        Fri Jul 29 15:26:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/DynamicParameter*.{h,cpp}:
        * tao/AnyTypeCode/DynamicParameter*.{h,cpp}:
          Moved DynamicParameter to the AnyTypeCode lib. The PI lib uses this
          and having it in DynamicInterface will make PI dependent on
          DynamicInterface

        Fri Jul 29 11:02:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Exception.{h,cpp}:
        * tao/AnyTypeCode/Exception.{h,cpp}:
          Moved Any code from Exception to AnyTypeCode. Have to solve the
          _tao_type issue.

        Fri Jul 29 10:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/AnyTypeCode_methods.h:
        * tao/AnyTypeCode/TypeCode.h:
          Moved is_nil and release from TypeCode.h to AnyTypeCode_methods.h

        Fri Jul 29 04:19:55 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/CORBA_methods.h:

          Removed static CORBA is_nil() and release() methods for
          NamedValue and NVList.

        * tao/SystemException.cpp:

          Restored definition of static _tao_any_destructor()
          methods for system exceptions. They are used by Anys,
          but do not depend on them. This move eliminated
          'inconsistent dll linkage' warnings on MSVC.

        * tao/SystemException.h:

          Removed declarations of typecodes and Any operators
          for the system exceptions.

        * tao/AnyTypeCode/NVList.h:

          Added include of the new AnyTypeCode_methods.h file below.

        * tao/AnyTypeCode/SystemExceptionA.cpp:

          Removed definition of static _tao_any_destructor()
          methods for system exceptions.

        * tao/AnyTypeCode/SystemExceptionA.h:

          New file, contains typecode and Any operator declarations
          for system exceptions.

        * tao/AnyTypeCode/AnyTypeCode_methods.h:

          New file, contains declarations of static CORBA is_nil()
          and release() methods for NamedValue and NVList. This
          move eliminated 'inconsistent dll linkage' warnings on
          MSVC.

        Thu Jul 28 22:40:26 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_visitor_context.cpp:
        * TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:
        * TAO_IDL/be_include/be_visitor_context.h:

          Added logic to make the anyop export macro and export include
          default to the corresponding stub values, if any, when the
          former values have not been set on the command line, but -GA
          is used. This behavior will enable the *A.* files to be
          generated, but compiled into the same library as the stub
          files, if desired.

        Thu Jul 28 18:35:07 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Buffering_Constraint_Policy.{h,cpp}:
        * tao/Messaging/Messaging_PolicyFactory.{h,cpp}:
          Moved the create method to extract a BufferingConstraint out of
          an Any to the Messaging lib. It is used there and not needed at
          all in the core TAO lib. In the future we probably will move the
          complete Buffering_Constraint_Policy to the Messaging lib

        Thu Jul 28 16:43:07 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:

          Added code generation to include *A.h files (in the
          *A.cpp file) for each included IDL file. If possible,
          existence checks for these included files will be added
          at a future date.

        * TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:

          Switched generation of the typecode declaration to the
          *A.h file, if the -GA option is used.

        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:

          Updated comment.

        * TAO_IDL/be/be_global.cpp:

          Fixed typo in generated usage message.

        * TAO_IDL/driver/drv_args.cpp:

          Added usage messages for each individual recognized
          -W[p|b] option.

        * docs/compiler.html:

          Updated command line option table with the new -Wb options
          for export macro and export include in *A.h files.

        Thu Jul 28 12:41:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/AdapterActivatorA.cpp
        * tao/PortableServer/ForwardRequestA.cpp
        * tao/PortableServer/IdAssignmentPolicyA.cpp
        * tao/PortableServer/IdUniquenessPolicyA.cpp
        * tao/PortableServer/ImplicitActivationPolicyA.cpp
        * tao/PortableServer/LifespanPolicyA.cpp
        * tao/PortableServer/POAManagerA.cpp
        * tao/PortableServer/PolicyS.cpp
        * tao/PortableServer/PortableServerA.cpp
        * tao/PortableServer/PS_ForwardA.cpp
        * tao/PortableServer/RequestProcessingPolicyA.cpp
        * tao/PortableServer/ServantActivatorA.cpp
        * tao/PortableServer/ServantLocatorA.cpp
        * tao/PortableServer/ServantManagerA.cpp
        * tao/PortableServer/ServantRetentionPolicyA.cpp
        * tao/PortableServer/ThreadPolicyA.cpp
          Updated includes to the new AnyTypeCode library. Just a quick
          search and replace to get this lib compiling again. Only have
          an unresolved link error I have to investigate

        Thu Jul 28 11:31:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          Generate post include in A.h file, updated generated
          includes for moving of files

        * TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:
          Zapped starting spaces

        * tao/PortableServer/Basic_SArgument_T.cpp:
        * tao/PortableServer/Object_SArgument_T.cpp:
        * tao/PortableServer/Special_Basic_SArgument_T.cpp:
        * tao/PortableServer/UB_String_SArgument_T.cpp:
          Only include DynamicParameter.h when interceptors are enabled

        Thu Jul 28 11:18:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode.mpc:
          New MPC file

        * tao/Alias_TypeCode.cpp
        * tao/Alias_TypeCode.h
        * tao/Alias_TypeCode.inl
        * tao/Alias_TypeCode_Static.cpp
        * tao/Alias_TypeCode_Static.h
        * tao/Alias_TypeCode_Static.inl
        * tao/Any.cpp
        * tao/Any.h
        * tao/Any.i
        * tao/AnySeq.pidl
        * tao/AnySeqA.cpp
        * tao/AnySeqC.cpp
        * tao/AnySeqC.h
        * tao/AnySeqS.h
        * tao/Any_Arg_Traits.h
        * tao/Any_Array_Impl_T.cpp
        * tao/Any_Array_Impl_T.h
        * tao/Any_Array_Impl_T.inl
        * tao/Any_Basic_Impl.cpp
        * tao/Any_Basic_Impl.h
        * tao/Any_Basic_Impl_T.cpp
        * tao/Any_Basic_Impl_T.h
        * tao/Any_Basic_Impl_T.inl
        * tao/Any_Dual_Impl_T.cpp
        * tao/Any_Dual_Impl_T.h
        * tao/Any_Dual_Impl_T.inl
        * tao/Any_Impl.cpp
        * tao/Any_Impl.h
        * tao/Any_Impl_T.cpp
        * tao/Any_Impl_T.h
        * tao/Any_Impl_T.inl
        * tao/Any_Special_Impl_T.cpp
        * tao/Any_Special_Impl_T.h
        * tao/Any_Special_Impl_T.inl
        * tao/Any_SystemException.cpp
        * tao/Any_SystemException.h
        * tao/Any_Unknown_IDL_Type.cpp
        * tao/Any_Unknown_IDL_Type.h
        * tao/BooleanSeqA.cpp
        * tao/Bounds.pidl
        * tao/BoundsA.cpp
        * tao/BoundsC.cpp
        * tao/BoundsC.h
        * tao/CONV_FRAMEA.cpp
        * tao/CharSeqA.cpp
        * tao/CurrentA.cpp
        * tao/DomainA.cpp
        * tao/DoubleSeqA.cpp
        * tao/Dynamic.pidl
        * tao/DynamicA.cpp
        * tao/DynamicC.cpp
        * tao/DynamicC.h
        * tao/DynamicS.h
        * tao/Dynamic_Parameter.pidl
        * tao/Dynamic_ParameterA.cpp
        * tao/Dynamic_ParameterC.cpp
        * tao/Dynamic_ParameterC.h
        * tao/Empty_Param_TypeCode.cpp
        * tao/Empty_Param_TypeCode.h
        * tao/Empty_Param_TypeCode.inl
        * tao/Enum_TypeCode.cpp
        * tao/Enum_TypeCode.h
        * tao/Enum_TypeCode.inl
        * tao/Enum_TypeCode_Static.cpp
        * tao/Enum_TypeCode_Static.h
        * tao/Enum_TypeCode_Static.inl
        * tao/Fixed_TypeCode.cpp
        * tao/Fixed_TypeCode.h
        * tao/Fixed_TypeCode.inl
        * tao/FloatSeqA.cpp
        * tao/GIOPA.cpp
        * tao/IIOPA.cpp
        * tao/IIOP_EndpointsA.cpp
        * tao/IOP_IORA.cpp
        * tao/InvalidSlotA.cpp
        * tao/LongDoubleSeqA.cpp
        * tao/LongLongSeqA.cpp
        * tao/LongSeqA.cpp
        * tao/Marshal.cpp
        * tao/Marshal.h
        * tao/Marshal.i
        * tao/Messaging_PolicyValueA.cpp
        * tao/NVList.cpp
        * tao/NVList.h
        * tao/NVList.i
        * tao/Null_RefCount_Policy.h
        * tao/ObjectIdListA.cpp
        * tao/Objref_TypeCode.cpp
        * tao/Objref_TypeCode.h
        * tao/Objref_TypeCode.inl
        * tao/Objref_TypeCode_Static.cpp
        * tao/Objref_TypeCode_Static.h
        * tao/Objref_TypeCode_Static.inl
        * tao/OctetSeqA.cpp
        * tao/PICurrentA.cpp
        * tao/ParameterModeA.cpp
        * tao/PolicyA.cpp
        * tao/Policy_ForwardA.cpp
        * tao/Recursive_Type_TypeCode.cpp
        * tao/Recursive_Type_TypeCode.h
        * tao/Recursive_Type_TypeCode.inl
        * tao/RefCount_Policy_Traits.h
        * tao/Sequence_TypeCode.cpp
        * tao/Sequence_TypeCode.h
        * tao/Sequence_TypeCode.inl
        * tao/Sequence_TypeCode_Static.cpp
        * tao/Sequence_TypeCode_Static.h
        * tao/Sequence_TypeCode_Static.inl
        * tao/ShortSeqA.cpp
        * tao/StringSeqA.cpp
        * tao/String_TypeCode.cpp
        * tao/String_TypeCode.h
        * tao/String_TypeCode.inl
        * tao/String_TypeCode_Static.cpp
        * tao/String_TypeCode_Static.h
        * tao/String_TypeCode_Static.inl
        * tao/String_TypeCode_Traits.h
        * tao/Struct_TypeCode.cpp
        * tao/Struct_TypeCode.h
        * tao/Struct_TypeCode.inl
        * tao/Struct_TypeCode_Static.cpp
        * tao/Struct_TypeCode_Static.h
        * tao/Struct_TypeCode_Static.inl
        * tao/SystemExceptionA.cpp
        * tao/TAOA.cpp
        * tao/TimeBaseA.cpp
        * tao/True_RefCount_Policy.cpp
        * tao/True_RefCount_Policy.h
        * tao/True_RefCount_Policy.inl
        * tao/TypeCode.cpp
        * tao/TypeCode.h
        * tao/TypeCode.inl
        * tao/TypeCodeA.cpp
        * tao/TypeCode_Base_Attributes.cpp
        * tao/TypeCode_Base_Attributes.h
        * tao/TypeCode_Base_Attributes.inl
        * tao/TypeCode_CDR_Extraction.cpp
        * tao/TypeCode_CDR_Extraction.h
        * tao/TypeCode_Case.cpp
        * tao/TypeCode_Case.h
        * tao/TypeCode_Case.inl
        * tao/TypeCode_Case_T.cpp
        * tao/TypeCode_Case_T.h
        * tao/TypeCode_Case_T.inl
        * tao/TypeCode_Constants.cpp
        * tao/TypeCode_Constants.h
        * tao/TypeCode_Struct_Field.h
        * tao/TypeCode_Traits.h
        * tao/TypeCode_Value_Field.h
        * tao/ULongLongSeqA.cpp
        * tao/ULongSeqA.cpp
        * tao/UShortSeqA.cpp
        * tao/Union_TypeCode.cpp
        * tao/Union_TypeCode.h
        * tao/Union_TypeCode.inl
        * tao/Union_TypeCode_Static.cpp
        * tao/Union_TypeCode_Static.h
        * tao/Union_TypeCode_Static.inl
        * tao/Value_TypeCode.cpp
        * tao/Value_TypeCode.h
        * tao/Value_TypeCode.inl
        * tao/Value_TypeCode_Static.cpp
        * tao/Value_TypeCode_Static.h
        * tao/Value_TypeCode_Static.inl
        * tao/WCharSeqA.cpp
        * tao/WStringSeqA.cpp
        * tao/WrongTransactionA.cpp
        * tao/append.cpp
        * tao/skip.cpp
          All these files are moved to the AnyTypeCode directory

        * tao/UB_String_Argument_T.cpp:
        * tao/Special_Basic_Argument_T.cpp:
        * tao/Basic_Argument_T.cpp:
        * tao/Object_Argument_T.cpp:
        * tao/operation_details.cpp
        * tao/Invocation_Base.cpp
          Only include Dynamic_ParameterC.h when interceptors are enabled

        * tao/SystemException.{h,cpp}:
          Moved excp_factory to this file, we need it here, temporarily
          removed _tao_type, we need to work on this.

        * tao/RequestInfo_Util.{h,cpp}:
          Don't build these when interceptors are disabled

        * tao/ORB_Core.cpp
          Include ace/Message_Block.h to get ACE_Data_Block

        * tao/ORB_Core.h:
          Added forward declaration of ACE_Data_Block

        * tao/extra_core.mpb:
          Removed NVList

        * tao/corba.h:
          Removed BoundsC.h

        * tao/PortableInterceptorC.cpp
        * tao/VisibilityC.cpp
        * tao/orb_typesC.cpp
        * tao/ORB.cpp
        * tao/PI_ForwardC.cpp
        * tao/InvalidSlotC.cpp
        * tao/WrongTransactionC.cpp
        * tao/GIOPC.cpp

        * tao/Exception.{h,cpp}:
          Commented out the Any operators, they should go to another lib,
          will handle this later

        * tao/Buffering_Constraint_Policy.cpp:
          Commented out Any usage, needs to be addressed

        * tao/WrongTransactionC.{h,cpp}:
        * tao/PolicyC.cpp:
          Commented out _tao_type for exceptions, we have to solve this
          because exceptions now use TypeCode but we have subsetted that

        * tao/UShortSeqC.h
        * tao/ULongSeqC.h
        * tao/WCharSeqC.h
        * tao/Typecode_typesC.h
        * tao/ULongLongSeqC.h
        * tao/StringSeqC.h
        * tao/TAOC.h
        * tao/TimeBaseC.h
        * tao/Policy_ForwardC.h
        * tao/PortableInterceptorC.h
        * tao/ShortSeqC.h
        * tao/VisibilityC.h
        * tao/LongDoubleSeqC.h
        * tao/LongLongSeqC.h
        * tao/LongSeqC.h
        * tao/Messaging_PolicyValueC.h
        * tao/ObjectIdListC.h
        * tao/OctetSeqC.h
        * tao/PICurrentC.h
        * tao/PI_ForwardC.h
        * tao/ParameterModeC.h
        * tao/PolicyC.h
        * tao/GIOPC.h
        * tao/IIOPC.h
        * tao/IIOP_EndpointsC.h
        * tao/IOP_IORC.h
        * tao/InvalidSlotC.h
        * tao/DomainC.h
        * tao/CharSeqC.h
        * tao/CurrentC.h
        * tao/DoubleSeqC.h
        * tao/Exception.h
        * tao/FloatSeqC.h
        * tao/WStringSeqC.h
        * tao/WrongTransactionC.h
        * tao/orb_typesC.h
        * tao/BooleanSeqC.h
        * tao/CONV_FRAMEC.h
          Removed TypeCode and Any operators, these are now all
          in AnyTypeCode/*.h. This has been by hand, with the
          change of Jeff below we can automate this

        * tao.mpc
          Removed a lot of files

        Thu Jul 28 02:15:01 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_produce.cpp:
        * TAO_IDL/be/be_visitor_context.cpp:
        * TAO_IDL/be/be_visitor_array/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_enum/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_root/any_op.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuebox/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:
        * TAO_IDL/be_include/be_codegen.h:
        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/be_include/be_visitor_context.h:

          Modified -GA option to generate a *A.h file as well as
          a *A.cpp file, and added -Wb options 'anyop_export_macro'
          and 'anyop_export_include' to optionally compile the *A.*
          files into a separate library.

        Wed Jul 27 17:51:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_argument/invoke_cs.cpp:
        * TAO_IDL/be/be_visitor_argument/marshal_ss.cpp:
        * TAO_IDL/be/be_visitor_argument/paramlist.cpp:
        * TAO_IDL/be/be_visitor_field/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_field/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ci.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_cdr_cs.cpp:
          Use ACE_OutputCDR::from_octet and ACE_InputCDR:to_octet instead
          of CORBA::Any::from_octect and CORBA::Any::to_octet

        Wed Jul 27 14:56:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/GIOP_Message_Generator_Parser_12.cpp:
        * tao/GIOP_Message_Lite.cpp:
          Use ACE_OutputCDR::from_octet and ACE_InputCDR:to_octet

Thu Aug 18 13:59:52 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/LogActivator.cpp:

          Fixed emulated exception build failures.

Thu Aug 18 13:46:38 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/LogActivator.cpp:

          Changed to omit identifier name for unused parameters.

        * orbsvcs/orbsvcs/Log/LogMgr_i.cpp:

          Changed to use CORBA::RepositoryId_var for the return value of
          create_log_repositoryid() so results will be freed on exit.

        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:

          Changed create_log_repositoryid() to duplicate string rather
          than returning a string literal.

Thu Aug 18 15:19:40 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:
        * TAO_IDL/be/be_visitor_union_branch/private_ch.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_ch.cpp:

          Removed more instances of generating a leading '::'
          in front of ACE_NESTED_CLASS.

Wed Aug 17 11:30:37 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp (create_with_id):

          Fix bug where _nil() was returned instead of new object
          reference.

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * orbsvcs/orbsvcs/DsLogAdmin.mpc:

          Add LogActivator.cpp to Source_Files in the DsLogAdmin_Serv
          project.

        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:

          Changed create() and create_with_id() methods to invoke
          create_log_reference() instead of create_log_object().  This is
          not absolutely necessary, since a log is very likely to be used
          after it is created.  However, it helps to ensure the servant
          activator code path is exercised so it will work when a dynamic
          logging strategy that needs it is loaded.

        * orbsvcs/orbsvcs/Log/LogMgr_i.cpp

          Added USE_SERVANT_MANAGER request processing policy to the
          log POA.

        * orbsvcs/orbsvcs/Log/LogActivator.cpp:
        * orbsvcs/orbsvcs/Log/LogActivator.h:

          New files, servant activator class for creating new logs.  This
          is useful for persistent log strategies so that servants can be
          created when they are first accessed instead of at startup.

Wed Aug 17 14:31:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Event_Service/Event_Service.cpp:
          Removed explicit template instantiations

Tue Aug 16 18:19:13 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:

          Removed generation of the leading double colon for typedef'd
          basic type names in the exception constructor, since the
          ACE_NESTED_CLASS macro could be used, and the double colon
          will be incorrect for the VC6 expansion of the macro.

Mon Aug 15 20:28:14 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/LogMgr_i.cpp:
        * orbsvcs/orbsvcs/Log/LogMgr_i.h:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.h:

          Refactor separate create_log_reference() implementations from
          the derived factory classes into a single template method in the
          base class.

          Added new create_repositoryid() virtual method to return
          the repository id for the specific log type.

Mon Aug 15 16:41:57 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/DsEventLogAdmin.mpc:

          Add eventlog_serv_export.h to Header_Files section.

        * orbsvcs/orbsvcs/DsLogAdmin.mpc:

          Add log_serv_export.h to Header_Files section.

        * orbsvcs/orbsvcs/DsNotifyLogAdmin.mpc:

          Add notifylog_serv_export.h to Header_Files section.

        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/LogMgr_i.cpp:
        * orbsvcs/orbsvcs/Log/LogMgr_i.h:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.h:

          Combine identical create_log_objectid() implementations from the
          derived factory classes into a single one in the base class.

          Refactor separate create_log_object() implementations to
          a single template method in the base class.

Mon Aug 15 15:13:10 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/Concurrency/Makefile.am:

          Remove tmplinst.cpp from list of files.

        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/LogMgr_i.h:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.h:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.h:

          Create new virtual method create_log_servant() and factor out
          implementation from create_log_object().  This change enables
          making create_log_object() into a template method in the base
          class and using a Servant Activator to avoid creating the log
          servants until they're actually used.  I hope to make these
          changes soon.

Mon Aug 15 10:56:28 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Logging_Service/Basic_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/Event_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * orbsvcs/orbsvcs/DsLogAdmin.mpc:

          Changed to inherit from utils.

        * orbsvcs/orbsvcs/Log/LogMgr_i.cpp (init):

          Use TAO::Utils::PolicyList_Destroyer instead of plain
          CORBA::PolicyList and an explicit loop to destroy the policies.
          This ensures all policies will be destroyed if an exception is
          thrown.

Mon Aug 15 16:25:23 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_component/component_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/smart_proxy_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/tie_si.cpp:

          Removed incorrect generation of '::' before CORBA::is_nil()
          and CORBA::release().

Mon Aug 15 16:08:15 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_valuetype.cpp:

          Removed incorrect generation of '::' before generation of
          CORBA::add_ref() and CORBA::remove_ref() declarations.

Mon Aug 15 15:45:32 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_exception/exception_ch.cpp:

          Modified changes in

          Fri Aug 12 22:13:15 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

          slightly to omit the generation of the leading double colon
          if a field is a typedef of a basic type. In some of these
          cases, the ACE_NESTED_MACRO will be generated, and the
          leading double colon would be incorrect.

Mon Aug 15 10:15:40 CDT 2005  Steve Totten  <totten_s@ociweb.com>

        Committed the following change that came originally from
        Dave Giovannini of OCI in OCI's TAO 1.4a.

        Mon Jul 18 14:04:58 2005  David Giovannini  <giovannd@ociweb.com>

        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:

          Add forward invocation to DII adaptor.

Mon Aug 15 10:48:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Cubit/TAO/MT_Cubit/tmplinst.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/tmplinst.cpp:
        * orbsvcs/tests/Concurrency/tmplinst.cpp:
          Removed these files

        * performance-tests/Cubit/TAO/MT_Cubit/MT_Cubit.mpc:
        * performance-tests/Cubit/TAO/IDL_Cubit/IDL_Cubit.mpc:
          Removed the files above

Fri Aug 12 22:15:14 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/IDL_Test/nested_scope.idl:

          Added the IDL test file sent in by Nikolay Metchev
          <n.metchev@teamphone.com> to the test suite.

Fri Aug 12 22:13:15 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_predefined_type.cpp:
        * TAO_IDL/be/be_valuetype.cpp:
        * TAO_IDL/be/be_visitor_traits.cpp:
        * TAO_IDL/be/be_visitor_argument/arglist.cpp:
        * TAO_IDL/be/be_visitor_argument/invoke_cs.cpp:
        * TAO_IDL/be/be_visitor_argument/marshal_ss.cpp:
        * TAO_IDL/be/be_visitor_argument/paramlist.cpp:
        * TAO_IDL/be/be_visitor_argument/vardecl_ss.cpp:
        * TAO_IDL/be/be_visitor_array/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_array/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/array.cpp:
        * TAO_IDL/be/be_visitor_array/array_cs.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_component/component_ci.cpp:
        * TAO_IDL/be/be_visitor_component/component_cs.cpp:
        * TAO_IDL/be/be_visitor_component/component_sh.cpp:
        * TAO_IDL/be/be_visitor_enum/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_enum/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_enum/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_enum/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_enum/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_enum/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_exception/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/ctor_assign.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_ch.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:
        * TAO_IDL/be/be_visitor_field/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_field/field_ch.cpp:
        * TAO_IDL/be/be_visitor_field/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ci.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/remote_proxy_broker_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/smart_proxy_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/tie_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/tie_si.cpp:
        * TAO_IDL/be/be_visitor_interface_fwd/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_interface_fwd/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_sh.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_exception_holder_operation_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_ch.c
        * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_cs.c
        * TAO_IDL/be/be_visitor_operation/arglist.cpp:
        * TAO_IDL/be/be_visitor_operation/exceptlist_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/buffer_type.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_base.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp:
        * TAO_IDL/be/be_visitor_typecode/objref_typecode.cpp:
        * TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp:
        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:
        * TAO_IDL/be/be_visitor_typecode/union_typecode.cpp:
        * TAO_IDL/be/be_visitor_typecode/value_typecode.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:
        * TAO_IDL/be/be_visitor_union/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/discriminant_ch.cpp:
        * TAO_IDL/be/be_visitor_union/discriminant_ci.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/union_ch.cpp:
        * TAO_IDL/be/be_visitor_union/union_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/private_ch.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_assign_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_ch.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_reset_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuebox/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuebox/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuebox/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuebox/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuebox/field_ch.cpp:
        * TAO_IDL/be/be_visitor_valuebox/field_ci.cpp:
        * TAO_IDL/be/be_visitor_valuebox/union_member_ci.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ch.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ci.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/ami_exception_holder_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_cdr_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_arglist_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype_fwd/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype_fwd/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype_fwd/cdr_op_ci.cpp:

          Made sure the leading '::' appears before the 'CORBA'
          scope of all generated basic type names. If application
          IDL has a nested module named 'CORBA' there will be
          confusion otherwise. Thanks to Nikolay Metchev
          <n.metchev@teamphone.com> for sending in the example
          IDL file that uncovered the bug.

Fri Aug 12 14:17:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Miop/McastHello/McastHello.h:
          Removed not needed msvc pragma push/pop

        * orbsvcs/tests/Miop/McastHello/server.cpp:
          Added a line feed to the error message

Fri Aug 12 07:55:08 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_1551_Regression/Hello.cpp:

          Added a line feed to the aborting message.

        * tests/Collocation_Tests/Collocated_Test.cpp:
        * tests/Collocation_Tests/Server_Task.cpp:

          Destroy the server (and client) orb only after all threads have
          finished.

        * tests/Collocation_Tests/Hello.cpp:

          Added a sleep of 1 second before the orb shutdown to avoid
          BAD_INV_ORDER exceptions on fast dual processor machines.

        * tests/OBV/Collocated/Forward/Client_Task.cpp:
        * tests/OBV/Collocated/Forward/run_test.pl:

          Changed this test to use if statements instead of ACE_ASSERT so
          that the test runs the same on release builds as it does on debug
          builds.

        * tests/Portable_Interceptors/Collocated/Dynamic/run_test.pl:

          Check the correct variable to accurately display the test result.

        * tests/RTScheduling/Current/Thread_Task.cpp:

          Added a sleep of 1 second before the orb shutdown to avoid
          BAD_INV_ORDER exceptions on fast dual processor machines.

        * tests/Server_Connection_Purging/client.cpp:

          Remove event handlers after finishing with the reactor loop to
          avoid the possibility of using the handlers after they go out of
          scope.  Also, added a parameter to an ACE_ERROR_RETURN that
          expected one (by %p).


        Committing the following changes from OCI.

        Fri Sep 17 10:01:21 2004  Yan Dai   <dai_y@ociweb.com>

        * tests/Bug_1361_Regression/Echo.h:

          Make the abort_counter_ to be atomic. This would resolve the
          problem of client timeout causes test failure.

        Wed Sep  8 16:43:37 MST 2004  Yan Dai   <dai_y@ociweb.com>

        * tests/Bug_1361_Regression/run_test.pl:

          Made it wait longer for server shutdown since the server shutdown
          needs more time on some platforms and corrected one syntex error
          which uses undefined $client1.

        Mon Apr 28 17:19:32 2003  Steve Totten  <totten_s@ociweb.com>

        * tests/Stack_Recursion/run_test.pl:

          Fixed typo in variable name used to print client status.

        Wed Apr 23 13:05:48 2003  Steve Totten  <totten_s@ociweb.com>

        * tests/Smart_Proxies/client.cpp:
        * tests/Smart_Proxies/server.cpp:

          Cleaned up some poor usage of ACE exception macros in client
          and server.  Added a short sleep in client after it invokes
          shutdown on server to make sure the request is written (this was
          causing a problem on Windows XP).

        * tests/Smart_Proxies/Policy/run_test.pl:

          Fixed return-code checking.

        * tests/Strategies/run_test.pl:

          Fixed return-code checking.

Fri Aug 12 08:07:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Collocation_Oneway_Tests/Client_Task.{h,cpp}:
        * tests/Collocation_Oneway_Tests/Collocated_Test.cpp:
          Changed the Client_Task enum, NONE is a macro on VxWorks

Thu Aug 11 16:16:00 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/Notify_Service/Notify_Service.h:
        * orbsvcs/Notify_Service/Notify_Service.cpp:

          Reverted Mon Dec  6 23:08:12 2004  J.T. Conklin  <jtc@acorntoolworks.com>

        The code requires use of to_name() to support creation of CosNaming::Name with
        length > 1. For example :
               CosNaming::Name_var n = to_name("a/b");
          is basically equivalent to :
               CosNaming::Name n(2);
               n.length(2);
               n[0].id = "a";
               n[1].id = "b";

          Thanks to Mike Chartier <mikec at compgen dot com> for
        spotting this problem.
        Rather than reverting the code to support both styles, I just made
        the new code always use to_name().

Thu Aug 11 13:48:57 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tao/orbconf.h:

          Removed an unused and deprecated macro,
          TAO_CONNECTION_CACHING_STRATEGY.  The macro that is used is
          TAO_CONNECTION_PURGING_STRATEGY.

Thu Aug 11 08:02:32 2005  Gary Maxey <gary.maxey@hp.com>

        * tao/CORBANAME_Parser.cpp:
          Change variable type because of warnings by some compilers.

Wed Aug 10 08:46:55 2005  Gary Maxey <gary.maxey@hp.com>

        * tao/CORBANAME_Parser.cpp:
          Fixed problem where the following legal syntax was not allowed:
             "corbaname:rir"
          which should produce the object reference of the naming service.

Wed Aug 10 11:44:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Collocation_Exception_Test/Client_Task.cpp:
        * tests/Collocation_Exception_Test/Collocation_Excep_Test.mpc:
          No need to use messaging

Tue Aug  9 19:28:15 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        From J H Choi <jhchoi at sqisoft dot com>
        * tao/TypeCode.cpp (equivalent):

          Equivalence of two TypeCodes must be done between their
          unaliased counterparts.  The code was incorrectly leaving one of
          the TypeCodes aliased in the comparison.

Mon Aug  8 18:41:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/advanced_resource.cpp:
          Added include of tao/Protocol_Factory.h to not get compile errors
          when all protocols are disabled. Thanks to Arvind S. Krishna
          <arvindk at dre dot vanderbilt dot edu> for reporting this

Mon Aug  8 10:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Collocation_Oneway_Tests/Collocation_Oneway_Tests.mpc:
        * tests/Collocation_Exception_Test/Collocation_Excep_Test.mpc:
          Made projects unique

Mon Aug  8 08:55:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/ImplRepo/nestea_i.cpp:
          Fixed invalid delete

        * tao/PortableServer/Servant_Base.cpp:
          Fixed bug when invoking collocated oneways with SYNC_WITH_SERVER
          is set

        * tests/Collocation_Oneway_Tests/*:
          New test for collocated oneways. Thanks to Vito Bico
          <vbica at qualcomm dot com> for making this test to reproduce
          the bug in Servant_Base.

        * tests/Collocation_Exception_Test/*:
          New test for testing exceptions in collocated case

        * rules.tao.GNU:
          Removed TAO libraries, MPC now handles this.

        * tests/Hello/Hello.mpc:
          Added -St and -Sa as idl flags. This test doesn't need Any
          and TypeCode and this way we can get the footprint down more
          when AnyTypeCode refactoring is ready.

Fri Aug 05 07:49:26 2005  Simon Massey  <sma@prismtech.com>

        * TAO version 1.4.7 released.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
