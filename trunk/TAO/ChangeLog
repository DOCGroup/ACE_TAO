Wed Feb 23 01:59:20 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* tao/Exception.h:

	  Reverted change that made constructors protected.  MSVC++ 7.1
	  cannot catch CORBA::Exception subclasses through a pointer or
	  references to CORBA::Exception otherwise.

Wed Feb 23 01:03:30 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* tao/PortableServer/Fixed_Array_SArgument_T.h:
	* tao/PortableServer/Fixed_Array_SArgument_T.inl:
	* tao/PortableServer/Var_Array_SArgument_T.cpp:
	* tao/PortableServer/Var_Array_SArgument_T.h:
	* tao/PortableServer/Var_Array_SArgument_T.inl:
	* tao/PortableServer/Var_Size_SArgument_T.cpp:
	* tao/PortableServer/Var_Size_SArgument_T.h:
	* tao/PortableServer/Var_Size_SArgument_T.inl:

	  Fixed memory management / parameter passing issues.  Addresses
	  seg faults exhibited by TAO's Param_Test regression test.

Wed Feb 23 07:22:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Special_Basic_SArguments.h:
        * tao/PortableServer/UB_String_SArguments.h:
        * tao/PortableServer/Basic_SArgument_T.h:
        * tao/PortableServer/Special_Basic_SArgument_T.h:
        * tao/PortableServer/UB_String_SArgument_T.h:
        * tao/PortableServer/BD_String_SArgument_T.h:
          Removed trailing ; after namespace closure to fix warnings
          on Tru64

Tue Feb 22 21:58:24 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* tao/PortableServer/BD_String_SArgument_T.cpp:

	  Corrected inline source file name in #include directive.

	* tao/PortableServer/Var_Array_SArgument_T.cpp
	  (Out_Var_Array_SArgument_T::interceptor_param):

	  Initialize the temporary "_forany" instance being inserted into
	  the Any with underlying pointer of the "_var" attribute
	  representing "out" variable array argument.  Addresses build
	  errors and warnings in a number of builds.

Tue Feb 22 20:59:18 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* tao/PortableServer/Upcall_Wrapper.cpp:

	  Fixed compile-time errors in "no interceptor" configuration.

Tue Feb 22 20:17:45 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* TAO_IDL/be/be_visitor_operation/exceptlist_ss.cpp:

	  If no user exceptions are declared in the IDL, generate a
	  constant pointer to a constant CORBA::TypeCode_ptr initialized
	  to zero, instead of constant array of zero length.  MSVC++ 7.1
	  and Borland C++ cannot handle zero length arrays.

	* TAO_IDL/be/be_visitor_operation/interceptors_ss.cpp:

	  Removed this file.  It was left over from the old interceptor
	  visitors.

	* TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp (visit):

	  Removed generation of private copy constructor and assignment
	  operator.  They aren't needed in this case.  Addresses MSVC++
	  7.1 compile-time warnings regarding unimplemented local class
	  members.

	* tao/Domain/DomainS.cpp:
	* tao/ImR_Client/ImplRepoS.cpp:
	* tao/ImR_Client/ServerObjectS.cpp:
	* tao/Messaging/MessagingS.cpp:
	* tao/PortableServer/PolicyS.cpp:
	* orbsvcs/orbsvcs/IFRService/IFR_BaseS.cpp:
	* orbsvcs/orbsvcs/IFRService/IFR_BasicS.cpp:
	* orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.cpp:
	* orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.cpp:

	  Fixed compile time errors regarding zero length arrays.  MSVC++
	  7.1 and Borland C++ cannot handle them.

	  (Upcall_Command):

	  Removed copy constructor and assignment operator.  MSVC++ 7.1
	  warns of unimplemented local class members.  They aren't needed
	  in this case.

	* tao/PortableServer/ServerRequestInfo.h:
	* tao/PortableServer/ServerRequestInfo.inl:
	* tao/PortableServer/Upcall_Wrapper.cpp:
	* tao/PortableServer/Upcall_Wrapper.h:

	  Changed exception TypeCode array parameter to pointer form
	  instead of array form (e.g. "int foo *" instead of "int
	  foo[]").  Part of a workaround for C++ compilers that can't
	  handle zero length arrays.

Tue Feb 22 19:29:55 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* tao/PortableServer/Special_Basic_SArgument_T.cpp
	  (Ret_Special_Basic_SArgument_T::interceptor_result):

	  Corrected argument to Any insertion operator.  Must use the
	  "Any::from_*" helper type when inserting special types like
	  boolean, octet, etc.

Tue Feb 22 19:18:57 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_T.cpp:
	* orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.cpp:
	* tests/IDL_Test/main.cpp:

	  Removed non-portable use of ServantBase::_downcast() method.  It
	  no longer exists in TAO.

Tue Feb 22 18:53:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Upcall_Command.h:
          Added forward declaration CORBA::Environment

Tue Feb 22 18:50:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IFR_Client/IFR_BaseS.h:
          Removed includes which I should have removed after regenerating
          this file

Tue Feb 22 18:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/Portable_Group_Map.cpp:
          Fixed compile error due to TAO_Server_Request interface change

Tue Feb 22 07:57:53 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* tao/PortableServer/Upcall_Wrapper.h:

	  Added missing "tao/Environment.h" #include.

Tue Feb 22 07:31:33 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* TAO_IDL/be/be_visitor_root/root.cpp (visit_root):

	  Do not generate argument selection function templates if
	  unconstrained were not seen in the IDL.  Addresses build
	  problems for skeletons corresponding such IDL files.  Thanks to
	  Johnny for pointing out the problem.

Tue Feb 22 15:21:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Non_Servant_Upcall.{h,cpp,inl}:
        * tao/PortableServer/POA_Current_Impl.h:
          Added :: before TAO_Root_POA to fix compile errors with Sun Forte

Tue Feb 22 15:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Upcall.{h,cpp,inl}:
          Added :: before TAO_Root_POA to fix compile errors with Sun Forte

Tue Feb 22 15:00:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Current_Impl.{h,cpp,inl}:
          Added :: before TAO_Root_POA to fix compile errors with Sun Forte

Tue Feb 22 14:28:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_component/component_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
          Removed generation of ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION

        * tao/Messaging/*C.{h,cpp,inl}:
        * tao/Messaging/*A.cpp:
        * tao/Messaging/*S.{h,cpp,inl}:
          Regenerated

Tue Feb 22 13:35:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/*C.{h,cpp,inl}:
        * tao/*A.cpp:
        * tao/PortableServer/*C.{h,cpp,inl}:
        * tao/PortableServer/*A.cpp:
        * tao/ObjRefTemplate/*C.{h,cpp,inl}:
        * tao/ObjRefTemplate/*A.cpp:
        * tao/RTCORBA/RTCORBAC.{h,cpp,inl}:
        * tao/RTCORBA/RTCORBAA.cpp:
        * tao/BiDir_GIOP/BiDirPolicyC.{h,cpp,inl}:
        * orbsvcs/orbsvcs/IFRService/*S.{h,cpp,inl}:
        * orbsvcs/orbsvcs/IFRService/*S_T.{h,cpp,inl}:
          Regenerated

        * tao/PortableServer/Upcall_Wrapper.h:
          Added forward declaration of CORBA::Environment to fix compile
          problems in emulated exception builds

        * tao/ObjRefTemplate/diffs/ObjectReferenceTemplate.diff:
          New diff file

Tue Feb 22 12:45:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Domain/DomainS.{h,cpp,inl}:
        * tao/Domain/DomainS_T.{h,cpp,inl}:
          Regenerated

        * tao/Domain/diffs/Domain.diff:
          New diff file

Tue Feb 22 11:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ImR_Client/ServerObject{C,A,S}.{h,cpp,inl}:
        * tao/ImR_Client/ImplRepo{C,A,S}.{h,cpp,inl}:
          Regenerated

Tue Feb 22 11:01:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Operation_Table.h:
          Changed "char const * const opname" to "char const * opname" . BCB
          complains about the first case

Tue Feb 22 10:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Any_SArg_Traits.h:
          Fixed file tag

Tue Feb 22 10:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IORManipulation/IORManip_Loader.h:
          Doxygen improvements

Tue Feb 22 10:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ImR_Client/ImR_Client_Adapter_Impl.{h,cpp}:
          Removed empty virtual destructor

Tue Feb 22 10:36:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/AMI.mpc:
        * tests/AMI_Buffering/AMI_Buffering.mpc:
        * tests/AMI_Timeouts/AMI_Timeouts.mpc:
        * tests/BiDirectional/BiDirectional.mpc:
        * tests/BiDirectional_MultipleORB/destroy.mpc:
        * tests/BiDirectional_NestedUpcall/BiDirectional_NestedUpcall.mpc:
        * tests/Big_Twoways/Big_Twoways.mpc:
        * tests/Blocking_Sync_None/Blocking_Sync_None.mpc:
        * tests/Bug_1020_Basic_Regression/Bug_1020_Basic_Regression.mpc:
        * tests/Bug_1020_Regression/Bug_1020_Regression.mpc:
        * tests/Bug_1269_Regression/Bug_1269_Regression.mpc:
        * tests/Bug_1270_Regression/Bug_1270_Regression.mpc:
        * tests/Bug_1361_Regression/Bug_1361_Regression.mpc:
        * tests/Bug_1476_Regression/Bug_1476_Regression.mpc:
        * tests/Bug_1535_Regression/Bug_1535_Regression.mpc:
        * tests/Bug_1635_Regression/Bug_1635_Regression.mpc:
        * tests/Bug_1636_Regression/test.mpc:
        * tests/Bug_1693_Test/Bug_1693_Test.mpc:
        * tests/CodeSets/simple/CodeSets_simple.mpc:
        * tests/Codec/Codec.mpc:
        * tests/Collocation/Collocation.mpc:
        * tests/Connection_Timeout/Connection_Timeout.mpc:
        * tests/Crashed_Callback/Crashed_Callback.mpc:
        * tests/DSI_Gateway/DSI_Gateway.mpc:
        * tests/DynAny_Test/DynAny_Test.mpc:
        * tests/FL_Cube/FL_Cube.mpc:
        * tests/Faults/Faults.mpc:
        * tests/File_IO/File_IO.mpc:
        * tests/InterOp-Naming/InterOp-Naming.mpc:
        * tests/Leader_Followers/Leader_Followers.mpc:
        * tests/LongUpcalls/LongUpcalls.mpc:
        * tests/MProfile/MProfile.mpc:
        * tests/MProfile_Connection_Timeout/MProfile_Connection_Timeout.mpc:
        * tests/Native_Exceptions/Native_Exceptions.mpc:
        * tests/POA/Etherealization/Etherealization.mpc:
        * tests/POA/Identity/Identity.mpc:
        * tests/Server_Port_Zero/Server_Port_Zero.mpc:
        * tests/Smart_Proxies/On_Demand/SP_On_Demand.mpc:
        * tests/Stack_Recursion/Stack_Recursion.mpc:
        * tests/UNKNOWN_Exception/UNKNOWN_Exception.mpc:
          Use taoserver/taoclient as base projects and some cleanup

Tue Feb 22 02:28:58 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* tao/Messaging/MessagingA.cpp:
	* tao/Messaging/MessagingC.cpp:
	* tao/Messaging/MessagingC.h:
	* tao/Messaging/MessagingC.inl:
	* tao/Messaging/MessagingS.cpp:
	* tao/Messaging/MessagingS.h:
	* tao/Messaging/MessagingS.inl:
	* tao/Messaging/MessagingS_T.cpp:
	* tao/Messaging/MessagingS_T.h:
	* tao/Messaging/MessagingS_T.inl:

	  Regenerated these stubs and skeletons.

Tue Feb 22 02:03:20 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	The following changes were made in the course of refactoring the
	skeleton code generated by the TAO IDL compiler into the
	PortableServer library.  [Bug 1369]

	* tao/Abstract_Servant_Base.h (_downcast):

	  Removed this method.  The C++ mapping does not require a
	  "_downcast()" method for servants.

	* tao/Any_Arg_Traits.h:

	  Moved skeleton-specific traits to the PortableServer library.

	* tao/Argument.h:

	  Added some Doxygen documentation.

	* tao/BD_String_Argument_T.h:
	* tao/Basic_Argument_T.h:
	* tao/Fixed_Size_Argument_T.h:
	* tao/Object_Argument_T.h:

	  Removed unnecessary "mutable" keyword in class member
	  declaration.

	* tao/CDR.cpp (throw_skel_exception):
	* tao/Fixed_Array_Argument_T.h:
	* tao/Object_Argument_T.inl:
	* tao/UB_String_Argument_T.h:
	* tao/Var_Array_Argument_T.h:
	* tao/Var_Array_Argument_T.inl:
	* tao/Var_Size_Argument_T.h:
	* tao/PortableServer/Servant_Base.i:
	* TAO_IDL/be/be_visitor_operation/operation_sh.cpp:

	  Minor cosmetic improvments.

	* tao/Collocated_Invocation.cpp (invoke):

	  Invoke thru-POA collocated calls through the POA, not the no
	  longer existent thru-POA proxy brokers.

	* tao/GIOP_Message_Generator_Parser_10.cpp:
	* tao/GIOP_Message_Generator_Parser_12.cpp:
	* tao/GIOP_Message_Lite.cpp:
	* tao/DynamicInterface/Server_Request.cpp:
	* tao/DynamicInterface/Server_Request.inl:
	* TAO_IDL/be/be_visitor_operation/amh_ss.cpp:

	  The TAO_ServerRequest CDR stream accessors now return a pointer
	  to a CDR stream instead of a reference.  Updated accordingly.

	* tao/Invocation_Adapter.cpp:
	* tao/Invocation_Adapter.h:
	* tao/Special_Basic_Argument_T.h:
	* tao/Special_Basic_Argument_T.inl:
	* tao/operation_details.h:
	* tao/operation_details.i:

	  Const-correctness improvements.

	* tao/TAO_Server_Request.cpp:
	* tao/TAO_Server_Request.h:
	* tao/TAO_Server_Request.i:

	  Added support code for thru-POA collocated invocations.  Entails
	  introduction of a new constructor, operation details attribute,
	  CDR stream attribute type changes, etc.

	  Reordered class attributes to optimize padding alignment.

	* tao/BD_String_SArgument_T.cpp:
	* tao/BD_String_SArgument_T.h:
	* tao/BD_String_SArgument_T.inl:
	* tao/Basic_SArgument_T.cpp:
	* tao/Basic_SArgument_T.h:
	* tao/Basic_SArgument_T.inl:
	* tao/Basic_SArguments.cpp:
	* tao/Basic_SArguments.h:
	* tao/Fixed_Array_SArgument_T.cpp:
	* tao/Fixed_Array_SArgument_T.h:
	* tao/Fixed_Array_SArgument_T.inl:
	* tao/Fixed_Size_SArgument_T.cpp:
	* tao/Fixed_Size_SArgument_T.h:
	* tao/Fixed_Size_SArgument_T.inl:
	* tao/Object_SArgument_T.cpp:
	* tao/Object_SArgument_T.inl:
	* tao/Special_Basic_SArgument_T.cpp:
	* tao/Special_Basic_SArgument_T.h:
	* tao/Special_Basic_SArgument_T.inl:
	* tao/Special_Basic_SArguments.cpp:
	* tao/Special_Basic_SArguments.h:
	* tao/UB_String_SArgument_T.cpp:
	* tao/UB_String_SArgument_T.h:
	* tao/UB_String_SArgument_T.inl:
	* tao/UB_String_SArguments.cpp:
	* tao/UB_String_SArguments.h:
	* tao/Var_Array_SArgument_T.cpp:
	* tao/Var_Array_SArgument_T.h:
	* tao/Var_Array_SArgument_T.inl:
	* tao/Var_Size_SArgument_T.cpp:
	* tao/Var_Size_SArgument_T.inl:

	  Moved these server side argument class templates to the
	  PortableServer library.

	* tao/PortableServer/Any_SArg_Traits.h:
	* tao/PortableServer/BD_String_SArgument_T.cpp:
	* tao/PortableServer/BD_String_SArgument_T.h:
	* tao/PortableServer/BD_String_SArgument_T.inl:
	* tao/PortableServer/Basic_SArgument_T.cpp:
	* tao/PortableServer/Basic_SArgument_T.h:
	* tao/PortableServer/Basic_SArgument_T.inl:
	* tao/PortableServer/Basic_SArguments.cpp:
	* tao/PortableServer/Basic_SArguments.h:
	* tao/PortableServer/Fixed_Array_SArgument_T.cpp:
	* tao/PortableServer/Fixed_Array_SArgument_T.h:
	* tao/PortableServer/Fixed_Array_SArgument_T.inl:
	* tao/PortableServer/Fixed_Size_SArgument_T.cpp:
	* tao/PortableServer/Fixed_Size_SArgument_T.h:
	* tao/PortableServer/Fixed_Size_SArgument_T.inl:
	* tao/PortableServer/Object_SArg_Traits.h:
	* tao/PortableServer/Object_SArgument_T.cpp:
	* tao/PortableServer/Object_SArgument_T.h:
	* tao/PortableServer/Object_SArgument_T.inl:
	* tao/PortableServer/Special_Basic_SArgument_T.cpp:
	* tao/PortableServer/Special_Basic_SArgument_T.h:
	* tao/PortableServer/Special_Basic_SArgument_T.inl:
	* tao/PortableServer/Special_Basic_SArguments.cpp:
	* tao/PortableServer/Special_Basic_SArguments.h:
	* tao/PortableServer/UB_String_SArgument_T.cpp:
	* tao/PortableServer/UB_String_SArgument_T.h:
	* tao/PortableServer/UB_String_SArgument_T.inl:
	* tao/PortableServer/UB_String_SArguments.cpp:
	* tao/PortableServer/UB_String_SArguments.h:
	* tao/PortableServer/Var_Array_SArgument_T.cpp:
	* tao/PortableServer/Var_Array_SArgument_T.h:
	* tao/PortableServer/Var_Array_SArgument_T.inl:
	* tao/PortableServer/Var_Size_SArgument_T.cpp:
	* tao/PortableServer/Var_Size_SArgument_T.h:
	* tao/PortableServer/Var_Size_SArgument_T.inl:

	  New source files containing classes that represent server-side
	  operation arguments that were previously in the core TAO
	  library.  Since they are only used by TAO_IDL generated
	  skeletons, it is more appropriate for them to be in the
	  TAO_PortableServer library.

	  Fixed some minor problems (e.g. incorrect encapsulated argument
	  type) that didn't appear previously since these classes were
	  never used.

	  Improved Doxygen documentation.

	* tao/PortableServer/Object_Adapter.cpp (dispatch):

	  Updated to use new TAO::ServerRequestInfo and
	  TAO::ServerRequestInterceptor_Adapter constructor signatures.

	* tao/PortableServer/Operation_Table.cpp:
	* tao/PortableServer/Operation_Table.h:

	  Removed thru-POA skeleton function pointer operation table
	  structure field.  Thru-POA collocated invocations now actually
	  go through the POA, meaning that a thru-POA specific skeleton
	  function is no longer necessary.

	* tao/PolicyA.cpp:
	* tao/PolicyC.cpp:
	* tao/PolicyC.h:
	* tao/PolicyC.inl:
	* tao/PortableServer/PolicyS.cpp:
	* tao/PortableServer/PolicyS.h:
	* tao/PortableServer/PolicyS.inl:
	* tao/PortableServer/PolicyS_T.cpp:
	* tao/PortableServer/PolicyS_T.h:
	* tao/PortableServer/PolicyS_T.inl:

	  Regenerated these stub and skeleton files to pull in new
	  stub/skeleton changes (e.g. skeleton refactoring).

	* tao/PortableServer/Servant_Base.cpp (_is_a):

	  Declare the CORBA::Object repository ID string as a static
	  constant character array, not as a non-static pointer to
	  constant characters.  Gives the compiler additional
	  opportunities for optimization.

	* tao/PortableServer/Servant_Base.h (TAO_ServantBase):

	  Unprotected TAO-specific "_interface_repository_id()" method.
	  There is no reason for it to be protected since it is pure
	  virtual and since the Servants generated by the TAO_IDL compiler
	  declare it as public.  Allows TAO::ServerRequestInfo to call
	  this method polymorphically through the
	  PortableServer::ServantBase base class.

	  (_downcast):

	  Removed this method.  The C++ mapping does not require a
	  "_downcast()" method for servants.

	* tao/PortableServer/ServerRequestInfo.cpp:
	* tao/PortableServer/ServerRequestInfo.h:
	* tao/PortableServer/ServerRequestInfo.inl:

	  Added a number of attributes (e.g. arguments, exception list,
	  etc) that may be set through the constructor by the skeleton.
	  Allows us to remove the operation-specific ServerRequestInfo
	  subclasses from the skeletons, improving footprint for the
	  TAO_HAS_INTERCEPTORS case.

	  Made pointer to Servant_Upcall object const.  It's value should
	  never change.

	  (ServerRequestInfo):
	* tao/PortableServer/ServerInterceptorAdapter.h
	  (ServerRequestInterceptor_Adapter):

	  No longer any need to export this class from a DLL.

	* tao/PortableServer/ServerInterceptorAdapter.cpp:
	* tao/PortableServer/ServerInterceptorAdapter.inl:

	  Moved ServerRequestInterceptor_Adapter_Class into TAO
	  namespace.

	* tao/PortableServer/TypeCode_SArg_Traits.h:

	  New header containing server side TypeCode argument traits
	  template specialization.

	* tao/PortableServer/Upcall_Command.h:

	  The actual upcall into a servant is executed through a concrete
          Upcall_Command object.  This is necessary to simplify upcall
	  interactions in the presence of interceptors, such as when the
	  send_exception() interception point must be invoked when the
	  servant operation throws an exception.


	* tao/PortableServer/Upcall_Wrapper.h:

	  Rewrote the hitherto unused TAO_Upcall_Wrapper class draft.  It
	  is also now in the TAO namespace, i.e., TAO::Upcall_Wrapper.
	  The TAO::Upcall_Wrapper class wraps most of the
	  operation-specific upcall processing incurred by a TAO_IDL
	  generated skeleton.

	* tao/PortableServer/Upcall_Wrapper.cpp:

	  New source containing TAO::Upcall_Wrapper class implementation.

	* TAO_IDL/be/be_codegen.cpp (gen_skel_src_includes):

	  No longer any need to include server request interceptor related
	  headers.

	  Generate include directives for "TAO::SArg" related
	  headers.

	  Generate include directives for
	  "tao/PortableServer/Upcall_{Command,Wrapper}.h" headers to pull
	  in the corresponding class declarations.  The generated skeleton
	  creates instances of these classes.

	  (gen_skel_arg_file_includes)

	  Generate include directive for new "TypeCode_SArg_Traits.h"
	  header.  It is needed for the server side TypeCode argument
	  traits in skeletons.

	* TAO_IDL/be/be_interface.cpp:

	  Removed thru-POA skeleton function optable entry from generated
	  skeleton.  It no longer exists.  Thru-POA code now goes through
	  the POA, meaning the remote skeleton function can now be used
	  for thru-POA collocated calls.

	  Removed thru-POA proxy implementation code.  It is no longer
	  needed since thru-POA collocated now go through the POA.

	  Updated gperf command line options to reflect new operation
	  table entry structure.

	  (downcast_helper):
	* TAO_IDL/be_include/be_interface.h (downcast_helper):
	* TAO_IDL/be_include/be_visitor_interface/amh_ss.h
	  (generate_downcast_implementation):
	* TAO_IDL/be_include/be_visitor_interface/interface_ss.h
	  (generate_downcast_implementation):

	  Removed this method.  The C++ mapping does not require a
	  "_downcast()" method for servants.

	* TAO_IDL/be/be_visitor_arg_traits.cpp:

	  Fixed problem with server side valuetype argument trait usage,
	  i.e removed extraneous template argument from generated skeleton
	  code.

	  Replaced usage of "ACE_TEMPLATE_SPECIALIZATION" macro with
	  standard C++ "template<>".

	  Enabled and fixed support for generation of "SArg_Traits"
	  template specializations in generated skeleton sources.

	* TAO_IDL/be/be_visitor_argument.cpp:
	* TAO_IDL/be_include/be_visitor_argument.h:
	* TAO_IDL/be/be_visitor_interface/interface.cpp:
	* TAO_IDL/be_include/be_visitor_interface.h:

	  Removed remaining vestiges of the now non-existent interceptor
	  related visitors.

	* TAO_IDL/be/be_visitor_operation.cpp:
	* TAO_IDL/be/be_visitor_attribute/attribute.cpp:
	* TAO_IDL/be_include/be_visitor_operation.h:

	  Likewise.

	  Added support for new TAO::Upcall_Command concrete class
	  generation visitors.

	* TAO_IDL/be/be_visitor_interface.cpp:
	* TAO_IDL/be/be_visitor_module.cpp:
	* TAO_IDL/be/be_visitor_operation/operation.cpp:

	  Nuked trailing whitespace.

	* TAO_IDL/be/be_visitor_traits.cpp:

	  Replaced usage of "ACE_TEMPLATE_SPECIALIZATION" macro with
	  standard C++ "template<>".

	* TAO_IDL/be/be_visitor_argument/request_info_arglist.cpp:
	* TAO_IDL/be/be_visitor_argument/request_info_ch.cpp:
	* TAO_IDL/be/be_visitor_argument/request_info_cs.cpp:
	* TAO_IDL/be/be_visitor_argument/request_info_result.cpp:
	* TAO_IDL/be/be_visitor_argument/request_info_sh.cpp:
	* TAO_IDL/be/be_visitor_argument/request_info_ss.cpp:
	* TAO_IDL/be/be_visitor_operation/interceptors_arglist.cpp:
	* TAO_IDL/be/be_visitor_operation/interceptors_ch.cpp:
	* TAO_IDL/be/be_visitor_operation/interceptors_cs.cpp:
	* TAO_IDL/be/be_visitor_operation/interceptors_exceptlist.cpp:
	* TAO_IDL/be/be_visitor_operation/interceptors_info_rettype.cpp:
	* TAO_IDL/be/be_visitor_operation/interceptors_result.cpp:
	* TAO_IDL/be/be_visitor_operation/interceptors_sh.cpp:
	* TAO_IDL/be_include/be_visitor_argument/request_info_arglist.h:
	* TAO_IDL/be_include/be_visitor_argument/request_info_ch.h:
	* TAO_IDL/be_include/be_visitor_argument/request_info_cs.h:
	* TAO_IDL/be_include/be_visitor_argument/request_info_result.h:
	* TAO_IDL/be_include/be_visitor_argument/request_info_sh.h:
	* TAO_IDL/be_include/be_visitor_argument/request_info_ss.h:
	* TAO_IDL/be_include/be_visitor_interface/interceptors_cs.h:
	* TAO_IDL/be_include/be_visitor_interface/interceptors_ss.h:
	* TAO_IDL/be_include/be_visitor_operation/interceptors_arglist.h:
	* TAO_IDL/be_include/be_visitor_operation/interceptors_ch.h:
	* TAO_IDL/be_include/be_visitor_operation/interceptors_cs.h:
	* TAO_IDL/be_include/be_visitor_operation/interceptors_exceptlist.h:
	* TAO_IDL/be_include/be_visitor_operation/interceptors_info_rettype.h:
	* TAO_IDL/be_include/be_visitor_operation/interceptors_result.h:
	* TAO_IDL/be_include/be_visitor_operation/interceptors_sh.h:
	* TAO_IDL/be_include/be_visitor_operation/interceptors_ss.h:

	  Removed all remaining interceptor related visitors.  They are no
	  longer needed.  Sweet!

	* TAO_IDL/be/be_visitor_array/array_ci.cpp:
	* TAO_IDL/be/be_visitor_component/component_cs.cpp:

	  Removed usage of "ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION"
	  macro.  It is no longer need for any of the TAO supported C++
	  compilers.

	* TAO_IDL/be/be_visitor_interface/amh_sh.cpp:
	* TAO_IDL/be/be_visitor_interface/amh_ss.cpp:

	  Removed _downcast() method generation code.  The C++ mapping
	  doesn't appear to require it for servants, so it shouldn't be
	  necessary for TAO's AMH-ified servants.

	* TAO_IDL/be/be_visitor_interface/interface_sh.cpp:
	* TAO_IDL/be/be_visitor_interface/interface_si.cpp:
	* TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
	* TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_ss.cpp:

	  Removed generation of thru-POA proxy implementations.  They are
	  no longer needed.

	* TAO_IDL/be/be_visitor_interface/interface_ss.cpp:

	  Ported _is_a, _non_existent skeleton function generation to new
	  skeleton refactoring upcall command based scheme.

	* TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:

	  Use dynamic_cast<> instead of a combination of
	  reinterpret_cast<> and ServantBase::_downcast() when downcasting
	  a servant pointer.  dynamic_cast<> is all that is needed.
	  [Bug 1988]

	* TAO_IDL/be/be_visitor_operation/exceptlist_ss.cpp:
	* TAO_IDL/be_include/be_visitor_operation/exceptlist_ss.h:

	  New visitor that generates user exception TypeCode array for use
	  by skeleton.  The generated array is lighter weight than the one
	  generated for the stubs, and is meant for interceptor use.

	* TAO_IDL/be/be_visitor_operation/operation_ss.cpp:
	* TAO_IDL/be_include/be_visitor_operation/operation_ss.h:

	  Overhauled generated skeleton to use new lightweight
	  implementation (most of the code has been moved to the
	  TAO_PortableServer library!).

	  No longer any need to generate per-operation ServerRequestInfo
	  classes.

	* TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:
	* TAO_IDL/be_include/be_visitor_operation/upcall_command_ss.h:

	  New visitors that generate operation-specific concrete
	  TAO::Upcall_Command classes.

	* TAO_IDL/be/be_visitor_root/root.cpp:

	  Enabled and fixed support for generation of "SArg_Traits"
	  template specializations in generated skeleton sources

	* TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:
	* TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:

	  Declare generated TypeCode_ptr variables as "const".  Prevents
	  users from inadvertently changing generated TypeCode constants.
	  The new skeletons also expect const TypeCode_ptrs.

	* TAO_IDL/be_include/be_codegen.h:

	  Added new "gen_skel_arg_file_includes()" method that is
	  responsible for generated "TAO::SArgument" related header
	  include directives.

	  Removed remaining vestiges of the now non-existent interceptor
	  related visitors.

	  Added new enumerator to the CG_STATE enumeration corresponding
	  to the new Upcall_Command generation visitor.


	* TAO_IDL/be_include/be_visitor_operation/operation.h
	  (gen_stub_body_arglist):

	  Made this method public so that upcall command generation code
	  for _is_a, _non_existent, etc skeleton functions can take
	  advantage of it.

	From Carlos O'Ryan  <coryan@atdesk.com>
	* TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
	* TAO_IDL/be/be_visitor_interface/interface_cs.cpp:

          Add a _tao_release() static operation to all interfaces.  With
          this operation we can write sequences of object references as
          templates that only depend on the template parameter.  This
          greatly simplifies that lookup rules in the template code, and
          make it possible to write unit tests for the templates.
          Look in Pseudo_VarOut_T.h for a more detailed description of
          the problem.

Tue Feb 22 07:24:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ThreadStrategyORBControl.cpp:
          Removed ifdef TAO_HAS_MINIMUM_POA

Mon Feb 21 22:31:25 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* tao/UserException.cpp (_downcast):
	* tao/UserException.inl (_downcast):

	  Removed unnecessary/redundant repository ID check and inlined
	  these methods.  The standard C++ dynamic_cast<> already performs
	  the required downcasting checks.  Reduces footprint.

Mon Feb 21 22:13:13 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* tao/DynamicInterface/Unknown_User_Exception.h (_downcast):
	* tao/DynamicInterface/Unknown_User_Exception.cpp (_downcast):

	  Added missing const _downcast() static method.  Required by the
	  C++ mapping.

	  Removed unnecessary/redundant repository ID check.  The
	  standard C++ dynamic_cast<> already performs the required
	  downcasting checks.  Reduces footprint.

Mon Feb 21 13:09:43 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* tao/Exception.h:
	* tao/SystemException.h:

	  Made all constructors protected, as required by the C++
	  mapping.

	  Added missing const _downcast() static method declaration.
	  Required by the C++ mapping.

	* tao/Exception.i:

	  Added missing const _downcast() static method definition.
	  Required by the C++ mapping.

	* tao/SystemException.cpp (_downcast):
	* tao/SystemException.inl (_downcast):

	  Removed repository ID check.  It is redundant since the
	  dynamic_cast<> in this implementation already does its own
	  checking.  Since we're downcasting to a pointer to a
	  SystemException instead of a reference, we do not have to worry
	  about dynamic_cast<> throwing an exception.  Reduces footprint.

	  Inlined all _downcast() implementations.  Reduces footprint
	  since they are all now dynamic_cast<> one-liners.  This change
	  in combination with the above change reduces the size of
	  SystemException object file by about 6K.

Mon Feb 21 19:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServantRetentionStrategyFactoryImpl.cpp:
          Simplified this strategy to reduce footprint

Mon Feb 21 13:14:04 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/util/utl_identifier.cpp:

          Fixed bugs with

          - making sure path is added to find included .pidl files.
          - validating the above files for C++ include generation.

Mon Feb 21 19:06:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/IdUniquenessStrategyFactoryImpl.cpp:
          Fixed bug

Mon Feb 21 18:20:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ThreadStrategy.cpp:
          Removed ifdef TAO_HAS_MINIMUM_POA

Mon Feb 21 18:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*Strategy*.{h,cpp}:
          For the strategies we don't need virtual inheritance, normal
          inheritance is enough. Also removed all the not needed empty
          destructors and make the factory classes a little bit smaller.

        * tao/PortableServer/ServantRetentionStrategy.cpp:
        * tao/PortableServer/IdUniquenessStrategy.cpp:
          Removed these files, the destructors are now gone and these
          classes now have only pure virtual methods

        * tao/PortableServer/POA_Guard.{h,cpp}:
          Fixed compile errors with the Sun compiler

        * tao/Codeset_Manager.cpp:
        * tao/UTF16_BOM_Translator.cpp:
          Changed formatting of a debug statement so that it matches the
          normal way done in TAO

Mon Feb 21 09:23:32 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tests/GIOP_Fragments/PMB_With_Fragments/README:
        * tests/GIOP_Fragments/PMB_With_Fragments/Transport.patch:

          Added a README and patch to help ease the regeneration of the data
          files.

        * tests/GIOP_Fragments/PMB_With_Fragments/giop1.2_fragments.dat:
        * tests/GIOP_Fragments/PMB_With_Fragments/giop1.2_fragments.layout:
        * tests/GIOP_Fragments/PMB_With_Fragments/giop1.2_fragments_be.dat:
        * tests/GIOP_Fragments/PMB_With_Fragments/giop1.2_fragments_be.layout:
        * tests/GIOP_Fragments/PMB_With_Fragments/run_test.pl:

          Updated the data and layout files to work with the new default
          Root POA name.

Mon Feb 21 08:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/POA/FindPOA/POA_FindPOA.mpc:
        * examples/POA/NewPOA/POA_NewPOA.mpc:
        * examples/POA/POA_BiDir/POA_BiDir.mpc:
        * examples/POA/RootPOA/RootPOA.mpc:
          Added exename to explicitly state the exe to be generated

        * examples/POA/TIE/POA_TIE.mpc:
          Derive client/server from taoclient/taoserver, the client doesn't
          need portableserver

Sun Feb 20 19:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableServer.cpp:
          The default servant request processing factory is not available in
          the minimum poa configuration

Sun Feb 20 08:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Default_Servant/Default_Servant.cpp:
        * tests/POA/MT_Servant_Locator/MT_Servant_Locator.cpp:
          Another a few fixes for problems with emulated exceptions

Sat Feb 19 10:20:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/IdAssignmentStrategyFactoryImpl.cpp:
          Slightly different way to retrieve the real factories, just let us
          see what the impact is on our footprint

Fri Feb 18 18:56:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
          Fixed implicit conversion warnings by using .in()

Fri Feb 18 14:12:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Default_Servant/Default_Servant.cpp:
        * tests/POA/MT_Servant_Locator/MT_Servant_Locator.cpp:
          Fixed problem with emulated exceptions

        * orbsvcs/Trading_Service/Trading_Service.mpc:
          Changed location of utils, hopefully that fixes the static gnu
          builds

Fri Feb 18 13:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/GIOP_Fragments/PMB_With_Fragments/server.cpp:
          Initialise pointer with 0

        * tests/GIOP_Fragments/PMB_With_Fragments/PMB_With_Fragments.mpc:
          Use taoserver as base project

        * tests/GIOP_Fragments/PMB_With_Fragments/Payload_Receiver.h:
          Removed not neede _MSC_VER check

        * tests/GIOP_Fragments/PMB_With_Fragments/Payload_Receiver.cpp:
          Corrected rcsid

Fri Feb 18 12:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/RTCORBA/Banded_Connections/RTCORBA_Banded_Connections.mpc:
          Renamed to RTCORBA_Banded_Conn.mpc to fix fuzz error about long
          file name

Fri Feb 18 11:56:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO/tao/*C.{h,cpp,inl}:
        * TAO/tao/*A.cpp:
          Regenerated the pidl files in the archive with the latest version
          of the idl compiler. Disable fuzz checks in the pidl files for
          include and renamed some of the Factory implementation files of
          the request processing strategy to fix the fuzz errors

Fri Feb 18 05:32:41 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/fe_interface_header.cpp:

          Changed 'return' to 'exit (99)' in several places where lookups
          are checked and have failed. These cases are always due to
          incorrect IDL encounterred previously in the file (and for
          which appropriate error messages have already been output).
          Processing further from the point of lookup failure leads to
          a crash. Thanks to Steve Baker <steven_d_baker@raytheon.com>
          for reporting a crash with the incorrect IDL 'abstract component'.

Fri Feb 18 08:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        Merged the POArefactor3 branch to main. This branch is a refactoring
        of the PortableServer library. The POA is now using strategies to
        implement its functionality.

        A short overview of the changes, see below for details:
        - The POA is rewritten so that it uses strategies for its
        implementation
        - The ImR handling is moved to the new ImR_Client library.
        - The MIOP part of the POA is moved to the GOA. See the latest version
        of the MIOP specification. You have to link now with the PortableGroup
        library and retrieve a GOA instead of the RootPOA.
        - Implemented several missing parts of POA functionality as described
        by the latest corba specification. Missing functionality, incorrect
        exceptions, incorrect minor codes and much more
        - Splitted the huge PortableServer.pidl file in several smaller files
        and regenerated all the generated files in the repository
        - Move TAO_ORB_Manager from
        PortableServer to Utils library, this is a helper class.
        - The POA has
        been split in Root_POA and Regular_POA, on this we will more in the
        future so that the Root_POA just pulls in the minimal set of things
        needed.

        Almost all test work without problems, a few are failing at which I
        will look soon, we will work on this the next days. This checkin is
        done now so that Ossama can merge his refactoring based on this.

        Thu Feb 17 12:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Root_POA.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategy*.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrategy*.{h,cpp}:
          Reimplemented id_to_servant (). Previously this called the servant
          retention strategy which looked if there was a default servant. Now
          the POA calls the request processing strategy, the AOM version calls
          the servant retention where the retain looks in the AOM and the non
          retain throws a wrong policy. The default servant version just looks
          if there is a default servant, the servant manager version also
          calls the servant retention version. This way the get_servant_i on
          the POA can be protected again.

        Thu Feb 17 08:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * release.pl:
          Removed.

        * tao/mwc.pl:
          We have to list all cpp/h files by hand, when we let MPC pickup just
          all files it also get all resource factory files that shouldn't be
          in the tao lib

        Wed Feb 16 14:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/LifespanStrategyPersistent.cpp:
          Only try to load the ImR_Client library in the startup, in the
          shutdown, when it is not there, then don't try to load it again

        * tao/PortableServer/PolicyFactory*.*:
          Removed the usage of svc conf for the policies again, it costs much
          more then it delivers.

          Also fixed some compile warnings with vc6.

        Tue Feb 15 13:51:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Root_POA.cpp:
          Fixed handling of ort_adapter, made some errors when merging the
          changes Ossama made last month

        Tue Feb 15 09:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableServerC.{h,cpp}:
        * tao/PortableServer/PortableServer_Functions.{h,cpp}:
        * tao/PortableServer/PortableServer_WFunctions.{h,cpp}:
          Move the PortableServer functions out of the generated files and to
          the new files, one for the string version, one for the wstring
          versions. Reduces the number of patchin and when these methods are
          not used there are not linked into the application

        * tao/PortableServer/PortableServer.h:
          Include the new PortableServer_Functions files

        Mon Feb 14 12:41:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * all files:
          Resynced with main archive in new POArefactor3 branch

        * tao/Visibility.pid:
        * tao/ValueModifier.pid:
        * tao/VisibilityC.{h,cpp,inl}:
        * tao/ValueModifier.{h,cpp,inl}:
          New files with enums that come from orb.idl. Makes it possible to
          not include orb.idl in the sublibraries.

        Tue Feb  8 19:44:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/LifespanStrategy*.{h,cpp}:
        * tao/PortableServer/Root_POA.cpp:
          In the old POA there was a flag called use_imr_ that was set to
          false before the imr was notified and set to the old value again
          after the notify. Besided this flag it was checked whether
          persistent was set or not. Reimplemented this in another way, added
          use_imr() to the lifespan strategy, this returns always false for
          transient and a member for persistent. This member is set to false
          before we notify the imr and set back again after the notify.

        Fri Feb  4 12:20:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/LifespanStrategyTransientFactoryImpl.cpp:
          Fixed factory name.

        Thu Feb  3 14:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Lifespan*.*:
          Added last factories for creating this strategy

        Wed Feb  2 12:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/IdUniquenessStrategyUniqueFactoryImpl.{h,cpp}:
          New factory to create instances of the unique iduniqueness strategy

        * tao/PortableServer/IdUniqueness*.*:
          Updated for new strategy

        Mon Jan 31 11:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*:
          Added destroy method to all strategy factories, this will call
          strategy_cleanup on the strategy. When requiring a service object
          just get it using ACE_Dynamic_Service and when it return 0 we output
          an error. We assume that all strategies are put in the service
          repository in portableserver.cpp. This make all the code much
          easier.

        Fri Jan 28 13:12:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context_Activator.h:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/UpdateableHandler.cpp:
        * orbsvcs/orbsvcs/IFRService/Repository_i.h:
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.cpp:
        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:
        * orbsvcs/tests/FtRtEvent/PushConsumer.cpp:
        * orbsvcs/tests/FtRtEvent/PushSupplier.cpp:
        * orbsvcs/tests/ImplRepo/scale/server_i.cpp:
        * orbsvcs/examples/ORT/Gateway_i.h:
        * examples/POA/DSI/Database_i.h:
        * examples/POA/Default_Servant/File_i.cpp:
        * examples/POA/Forwarding/Servant_Activator.h:
        * examples/POA/Adapter_Activator/server.cpp:
        * examples/POA/Loader/Servant_Activator.h:
        * examples/POA/Loader/Servant_Locator.h:
        * examples/POA/On_Demand_Activation/Servant_Activator.h:
        * examples/POA/On_Demand_Activation/Servant_Locator.h:
        * examples/POA/On_Demand_Loading/Servant_Activator.h:
        * examples/POA/On_Demand_Loading/Servant_Locator.h:
        * docs/tutorials/Quoter/On_Demand_Activation/Stock_Factory_Locator_i.h:

        Thu Jan 27 17:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/File_IO/File_i.cpp:
        * tests/MProfile_Forwarding/Servant_Locator.h:
        * tests/POA/Current/Current.cpp:
        * tests/POA/Default_Servant/Default_Servant.cpp:
        * tests/POA/Etherealization/Etherealization.cpp:
        * tests/POA/MT_Servant_Locator/MT_Servant_Locator.cpp:
        * tests/POA/Nested_Non_Servant_Upcalls/Nested_Non_Servant_Upcalls.cpp:
        * tests/POA/Persistent_ID/server.cpp:
          Added missing includes

        Thu Jan 27 13:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          Generate an include of ForwardRequestC.h to get
          PortableServer::ForwardRequest because we don't give this for free
          anymore when including portableserver

        * tao/PortableServer/diffs/ForwardRequest.diff:
          New diff file

        * tao/PortableServer/ForwardRequest.pidl:
        * tao/PortableServer/ForwardRequestC.{h,cpp,inl}:
          Moved ForwardRequest to its own file

        * tao/PortableServer/*Policy*.*:
        * tao/PortableServer/PortableServer.cpp:
          Removed the classes for policy values, just store the enum
          The svc conf usage is too expensive

         * tao/PortableServer/PortableServer.h:
         Removed a lot of *C.h includes, only PortableServerC.h is now there.
         Do you need other specific interfaces from the PortableServer library
         you have to include the specific *C.h file.

         * tao/PortableServer/ServantLocator*.*:
         * tao/PortableServer/ServantManager*.*:
         Update because of ForwardRequest moval and regenerated

        Wed Jan 26 19:22:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Adapter_Activator.cpp:
          Reverted the change below, when the_activator() fails, we just call
          destroy and the _var will make sure the refcount goes to zero and
          the child poa gets deleted

        Wed Jan 26 19:15:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Adapter_Activator.cpp:
          When the_activator() call fails after calling destroy on the just
          created child POA, delete it to prevent a memory leak

        Wed Jan 26 18:22:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/IdAssignmentPolicyFactory.h
        * tao/PortableServer/IdAssignmentPolicyFactoryImpl.cpp
        * tao/PortableServer/IdAssignmentPolicyFactoryImpl.h
        * tao/PortableServer/IdUniquenessPolicyFactory.h
        * tao/PortableServer/IdUniquenessPolicyFactoryImpl.cpp
        * tao/PortableServer/IdUniquenessPolicyFactoryImpl.h
        * tao/PortableServer/ImplicitActivationPolicyFactory.h
        * tao/PortableServer/ImplicitActivationPolicyFactoryImpl.cpp
        * tao/PortableServer/ImplicitActivationPolicyFactoryImpl.h
        * tao/PortableServer/LifespanPolicy.cpp
        * tao/PortableServer/LifespanPolicy.h
        * tao/PortableServer/LifespanPolicyFactory.h
        * tao/PortableServer/LifespanPolicyFactoryImpl.cpp
        * tao/PortableServer/LifespanPolicyFactoryImpl.h
        * tao/PortableServer/RequestProcessingPolicyFactory.h
        * tao/PortableServer/RequestProcessingPolicyFactoryImpl.cpp
        * tao/PortableServer/RequestProcessingPolicyFactoryImpl.h
        * tao/PortableServer/ServantRetentionPolicyFactory.h
        * tao/PortableServer/ServantRetentionPolicyFactoryImpl.cpp
        * tao/PortableServer/ServantRetentionPolicyFactoryImpl.h
        * tao/PortableServer/ThreadPolicy.cpp
        * tao/PortableServer/ThreadPolicy.h
        * tao/PortableServer/ThreadPolicyFactory.h
        * tao/PortableServer/ThreadPolicyFactoryImpl.cpp
        * tao/PortableServer/ThreadPolicyFactoryImpl.h
          Use ACE_NEW_THROW_EX instead of ACE_RETURN to allocate the policies
          and updated exception variables and specification for this.

        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Policy_Creator_T.h:
        * tao/PortableServer/Object_Adapter.cpp:
          Updated to pass environment argument for change above

        Mon Jan 24 17:30:06 2005  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/PortableServer/Active_Policy_Strategies.cpp:
        * tao/PortableServer/IdUniquenessPolicyValue.cpp:
        * tao/PortableServer/IdUniquenessPolicyValueMultiple.cpp:
        * tao/PortableServer/IdUniquenessPolicyValueUnique.cpp:
        * tao/PortableServer/IdUniquenessStrategy.h:
        * tao/PortableServer/IdUniquenessStrategyFactoryImpl.cpp:
        * tao/PortableServer/IdUniquenessStrategyMultiple.cpp:
        * tao/PortableServer/IdUniquenessStrategyMultiple.h:
        * tao/PortableServer/IdUniquenessStrategyUnique.cpp:
        * tao/PortableServer/IdUniquenessStrategyUnique.h:
        * tao/PortableServer/ImplicitActivationPolicyFactory.h:
        * tao/PortableServer/ImplicitActivationPolicyFactoryImpl.cpp:
        * tao/PortableServer/ImplicitActivationPolicyValue.cpp:
        * tao/PortableServer/ImplicitActivationPolicyValueExplicit.cpp:
        * tao/PortableServer/ImplicitActivationPolicyValueImplicit.cpp:

          Cosmetic fixes and @@ comments for Johnny. Looks like there is a
          race condition that Johnny may have to address.

        Mon Jan 24 11:29:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/IdAssignmentPolicyValueSystem.h:
          Fixed include

        Sun Jan 23 01:22:45 2005  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/PortableServer/Adapter_Activator.cpp:
        * tao/PortableServer/Default_Policy_Validator.cpp:
        * tao/PortableServer/Default_Servant_Dispatcher.cpp:
        * tao/PortableServer/IdAssignmentPolicyValue.cpp:
        * tao/PortableServer/IdAssignmentPolicyValueSystem.cpp:
        * tao/PortableServer/IdAssignmentPolicyValueSystem.h:
        * tao/PortableServer/IdAssignmentPolicyValueUser.h:
        * tao/PortableServer/IdAssignmentStrategyFactoryImpl.cpp:

          Cosmetic fixes.

        Sat Jan 22 23:08:08 2005  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/PortableServer/PortableServer.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Root_POA.h:
        * tao/PortableServer/Servant_Upcall.cpp:
        * tao/PortableServer/ThreadPolicy.h:
        * tao/PortableServer/ThreadPolicyFactoryImpl.cpp:
        * tao/PortableServer/ThreadPolicyValue.cpp:
        * tao/PortableServer/ThreadPolicyValueORBControl.cpp:

          Mostly cosmetic fixes and changes.

        * tao/PortableServer/ThreadPolicy.pidl:

          Added a enum which is missing from the spec.

        Wed Jan 19 12:49:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Policy_Strategies.cpp:
          Fixed stupid copy/paste errors

        * tao/PortableServer/PortableServer.cpp:
          Added new Servant Retention factorys

        Mon Jan 17 11:04:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTPortableServer/RT_POA.{h,cpp}:
        * orbsvcs/orbsvcs/PortableGroup/GOA.{h,cpp}:
          Updated method specification of create_reference_with_id to match
          base class

        Mon Jan 10 12:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/RequestProcessing*.*:
          Added factories for Default Servant and AOMOnly so that we can
          create instances per POA.

        * tao/Active_Policy_Strategies.{h,cpp}:
          Store request processing strategy factory

        Mon Jan 10 10:12:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableServer.pidl:
          Removed raises (WrongPolicy) from create_reference_with_id, this
          exception specification is not there anymore in the latest corba
          spec. Addresses part of bugzilla bug [1917]

        * tao/PortableServer/PortableServerA.cpp:
        * tao/PortableServer/PortableServerC.{h,cpp,inl}:
          Regenerated because of change above

        * tao/PortableServer/Root_POA.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategy*.{h,cpp}:
          Updated method signature of create_reference_with_id because of
          change above

        Thu Dec 16 10:27:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ImR_Client/*:
          New client library for the implementation repository

        * tao/PortableServer/Impl*.*:
          Moved several files to the ImR_Client library and added new adapter
          for the ImR_Client

        * tao/ImR_Client.mpc:
          New mpc file for the new lib

        * tao/PortableServer/LifespanStrategyPersistent.{h,cpp}:
          Use the ImR Client adapter

        * tao/orbsvcs/ImplRepo_Service/Forwarder.cpp:
        * tao/orbsvcs/ImplRepo_Service/ImplRepo_Service.mpc:
        * tao/orbsvcs/ImplRepo_Service/ImR_Activator.idl:
        * tao/orbsvcs/ImplRepo_Service/Iterator.h:
        * tao/orbsvcs/ImplRepo_Service/Server_Info.h:
        * tao/orbsvcs/ImplRepo_Service/tao_imr_i.h:
        * tao/orbsvcs/ImplRepo_Service/utils.h:
          Updated for the move of the ImplRepo stuff

        Wed Dec 15 15:45:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/ImplRepo_Service/Adapter_Activator.h:
        * orbsvcs/ImplRepo_Service/Forwarder.h:
        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:
          Include PortableServer.h instead of PortableServerC.h

        Wed Dec 15 12:09:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/MakeProjectCreator/config/Attic/imr_client.mpb:
          New file for the new ImR_Client library

        Tue Dec 14 12:00:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServantRetention*.{h,cpp}:
          Added factories for retain and non retain so that each poa gets its
          own copy of this strategy. Also make sure that we cleanup things
          again at closure

        Fri Dec 10 15:20:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Profile.cpp:
        * tao/PortableServer/ServantRetentionStrategy.{h.cpp}:
        * tao/PortableServer/RequestProcessingStrategy.h:
        * tao/PortableServer/RequestProcessingStrategyAOMOnly.{h,cpp}:
        * tao/PortableServer/Root_POA.h:
        * tao/PortableServer/PortableServer.cpp:
        * tao/PortableServer/ThreadStrategy*.{h,cpp}:
        * tao/PortableServer/Adapter_Activator.h:
        * tao/PortableServer/ImplRepo_i.{h,cpp}:
        * tao/Environment.h:
        * tao/TypeCodeFactory_Adapter.h:
          Fixed compile problems for emulated exceptions and minimum corba.

        Fri Dec 10 13:27:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Root_POA.{h,cpp}:
          Added post_invoke_servant_cleanup that calls request processing

        * tao/PortableServer/Servant_Upcall.{h,cpp,inl}:
          Use RootPOA::post_invoke_servant_cleanup() to call the servant
          locator postinvoke. The servant locator has been removed as member,
          the Cookie is now a void*, this way we can reduce the number of
          includes needed for the servant upcall.

        * tao/PortableServer/RequestProcessingStrategy*.{h,cpp}:
          Added post_invoke_servant_cleanup. For servant locator it has an
          implementation to call postinvoke on the servant locator, for the
          other strategies it is a noop.

        Fri Dec 10 05:02:27 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/LF_CH_Event.h:
        * tao/PortableServer/PortableServer_Functions.h:
        * tao/PortableServer/ServerRequestInfo.h:

          Fixed some subtle compile errors.

        Thu Dec  9 14:24:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Object_Map.{cpp,h,i}:
        * tao/PortableServer/Active_Object_Map_Entry.{cpp,h}:
          Moved Active_Object_Map_Entry to its own file

        * tao/PortableServer/Servant_Upcall.cpp:
          Include Active_Object_Map_Entry, more is not needed.

        Wed Dec  8 13:57:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ThreadStrategy*.{h,cpp}:
          Added a type method to retrieve the type of strategy (single or orb
          control). This is then used in the destroy method, for orb control
          we just do nothing, for single threaded we delete the unique
          instance per poa. When Bala agrees with this setup, I have to update
          the other strategies with the same structure.

        Wed Dec  8 12:30:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*Policy.{h,cpp}:
          Removed environment argument and exception specification from the
          policy_type method, it doesn't throw an exception, just returns a
          value, so no need to throw an exception.

        Wed Dec  8 10:51:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableServer_Functions.{h,cpp}:
          Remove the string_to_objectid with string and length argument. It is
          not in the spec, it can't be used by any user, so zapped it.

        Wed Dec  8 10:36:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableServer_Functions.{h,cpp}:
          Moved the string_to_objectid and objectid_to_string methods to this
          file and into the TAO::Portable_Server namespace. They stand on
          their own and don't need to be in the RootPOA itself.

        * tao/PortableServer/Root_POA.{h,cpp}:
          Removed the methods that moved to the new file

        * tao/PortableServer/PortableServerC.cpp:
          No need to include RootPOA anymore, just include
          PortableServer_Functions.h

        Wed Dec  8 09:58:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Regular_POA.cpp:
        * tao/PortableServer/Root_POA.{h,cpp}:
          Fixed construction and parsing of object keys, the id of the poa is
          set in a helper method which is called from the constructor and then
          virtual functions don't work.

        Tue Dec  7 14:45:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Root_POA.{h,cpp,inl}:
        * tao/PortableServer/Regular_POA.{h,cpp,inl}:
          Removed the parent_ member from the Root POA, a root POA has no
          parent. Added parent_ as member to RegularPOA. Added root(),
          root_key_type() and remove_from_parent_i() as virtual to RootPOA and
          override them in RegularPOA. One thing to remember is that the RTPOA
          is derived from RegularPOA and then the RegularPOA is created in the
          role of RootPOA, so, in the new methods above, check if parent_ !=
          0, if it is 0, we are Regular POA in the role of root poa.

        Tue Dec  7 14:12:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orbconf.h:
          Changed TAO_DEFAULT_ROOTPOA_NAME to "RootPOA", according to the
          corba spec, the RootPOA must be named this way to be able to use
          portable interceptors.

        Tue Dec  7 11:14:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ThreadStrategySingleFactoryImpl.{h,cpp}:
          New factory for creating instances of the single thread strategy.
          Each POA must have a unique instance because of the data stored

        * tao/PortableServer/ThreadStrategyFactoryImpl.cpp:
          For single thread strategy, get the single factory and call there
          create, for the orb control we just get the singleton instance and
          return that.

        * tao/PortableServer/PortableServer.cpp:
          Added single thread strategy factory for static case

          Also added a destroy() method that must be implemented, but the
          problem is now that I get a ThreadStrategy pointer and don't know
          which factory to use for the destroy.

        Tue Dec  7 11:12:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:
        * orbsvcs/examples/ORT/Object_Factory_i.cpp:
        * examples/POA/FindPOA/FindPOA.cpp:
        * examples/POA/On_Demand_Loading/Servant_Manager.h:
        * examples/Quoter/Quoter_i.cpp:
        * tests/UNKNOWN_Exception/server.cpp:
        * orbsvcs/tests/Notify/Test_Filter/RT_Test_Filter.cpp:
          Fixed compile errors now TAO_POA is gone

        Mon Dec  6 16:13:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp,i}:
        * tao/PortableServer/Regular_POA.{h,cpp,inl}:
          Renamed TAO_POA to TAO_Regular_POA. This will cause now compile
          errors but this way wrong cast are found by the compiler

        * tao/PortableServer/*.cpp:
        * orbsvcs/orbsvcs/PortableGroup/GOA.{h,cpp}:
        * orbsvcs/orbsvcs/Notify/Notify_EventChannelFactory_i.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
        * orbsvcs/orbsvcs/IFRService/IRObject_i.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp
          Updated for TAO_Regular_POA

        * orbsvcs/Trading_Service/Trading_Service.mpc:
          Add utils as base project because TAO_ORB_Manager is now there

        Mon Dec  6 14:54:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ObjRefTemplate/ObjectReferenceTemplate_i.cpp:
          The RootPOA is now not a TAO_POA, so a dynamic cast of the root
          poa to TAO_POA will fail. This fixes the IORinterceptor test. As a
          result of this, it seems the safest to rename TAO_POA to
          TAO_Regular_POA, that way we know for sure that code that does a
          dynamic cast is identified by the compiler instead of having obscure
          runtime crashes

        Mon Dec  6 11:03:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/PG_Servant_Dispatcher.{h,cpp}:
          Updated for RootPOA change

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Replication_Strategy.h:
        * orbsvcs/LoadBalancer/Signal_Handler.h:
        * orbsvcs/IFR_Service/IFR_Service.h:
          Include PortableServer.h instead of PortableServerC.h

        Fri Dec  3 14:56:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Root_POA.cpp
        * tao/PortableServer/Root_POA.h
        * tao/PortableServer/Root_POA.inl
        * tao/PortableServer/POA.cpp
        * tao/PortableServer/POA.h
        * tao/PortableServer/POA.i
          The TAO_POA has been changed to TAO_Root_POA. TAO_POA is now derived
          from TAO_Root_POA. The RootPOA will be stripped the next week and
          the TAO_POA will be extended. The RootPOA doesn't have the ability
          to set user defined policies, so doesn't need the policy set, that
          is only needed in the TAO_POA. An application using only the RootPOA
          will use much less than a full blown POA.

        * tao/PortableServer/Active_Policy_Strategies.cpp
        * tao/PortableServer/Active_Policy_Strategies.h
        * tao/PortableServer/Default_Servant_Dispatcher.cpp
        * tao/PortableServer/Default_Servant_Dispatcher.h
        * tao/PortableServer/IdAssignmentStrategy.cpp
        * tao/PortableServer/IdAssignmentStrategy.h
        * tao/PortableServer/IdUniquenessStrategyMultiple.cpp
        * tao/PortableServer/IdUniquenessStrategyMultiple.h
        * tao/PortableServer/IdUniquenessStrategyUnique.cpp
        * tao/PortableServer/IdUniquenessStrategyUnique.h
        * tao/PortableServer/ImplicitActivationStrategy.cpp
        * tao/PortableServer/ImplicitActivationStrategy.h
        * tao/PortableServer/LifespanStrategy.cpp
        * tao/PortableServer/LifespanStrategy.h
        * tao/PortableServer/LifespanStrategyPersistent.cpp
        * tao/PortableServer/Non_Servant_Upcall.cpp
        * tao/PortableServer/Non_Servant_Upcall.h
        * tao/PortableServer/Non_Servant_Upcall.inl
        * tao/PortableServer/Object_Adapter.cpp
        * tao/PortableServer/Object_Adapter.h
        * tao/PortableServer/Object_Adapter.i
        * tao/PortableServer/POA_Current_Impl.cpp
        * tao/PortableServer/POA_Current_Impl.h
        * tao/PortableServer/POA_Current_Impl.inl
        * tao/PortableServer/POA_Guard.cpp
        * tao/PortableServer/POA_Guard.h
        * tao/PortableServer/POAManager.cpp
        * tao/PortableServer/POAManager.h
        * tao/PortableServer/POAManager.i
        * tao/PortableServer/Policy_Strategy.h
        * tao/PortableServer/PS_ForwardC.h
        * tao/PortableServer/RequestProcessingStrategy.cpp
        * tao/PortableServer/RequestProcessingStrategy.h
        * tao/PortableServer/RequestProcessingStrategyDefaultServant.h
        * tao/PortableServer/Servant_Dispatcher.h
        * tao/PortableServer/Servant_Upcall.cpp
        * tao/PortableServer/Servant_Upcall.h
        * tao/PortableServer/Servant_Upcall.inl
        * tao/PortableServer/ServantRetentionStrategy.h
        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp
        * tao/PortableServer/ServantRetentionStrategyNonRetain.h
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp
        * tao/PortableServer/ServantRetentionStrategyRetain.h
        * tao/PortableServer/ThreadStrategy.cpp
        * tao/PortableServer/ThreadStrategy.h
        * tao/IIOP_Acceptor.cpp
        * tao/IORInterceptor_Adapter.h
        * tao/Profile.cpp
        * tao/IORInterceptor/IORInfo.cpp
        * tao/IORInterceptor/IORInfo.h
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.h
        * tao/RTPortableServer/RT_Collocation_Resolver.cpp
        * tao/RTPortableServer/RT_POA.cpp
        * tao/RTPortableServer/RT_POA.h
        * tao/RTPortableServer/RT_Policy_Validator.cpp
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp
        * tao/RTPortableServer/RT_Servant_Dispatcher.h
          Use TAO_Root_POA instead of TAO_POA

        Fri Dec  3 14:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/GroupInfoPublisher.h:
          Include PortableServer.h instead of PortableServerC.h

        Fri Dec  3 10:48:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerControl.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierControl.h:
          Include PortableServer.h

        * tao/PortableServer/POAManager.h:
        * tao/PortableServer/LifespanStrategyTransient.cpp:
          Made get_state_i public, need it for the lifespan strategy. I used
          the get_state previously, but this tries to acquire a lock and this
          doesn't work on Linux where the locks are non-recursive

        Thu Dec  2 14:28:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerControl.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierControl.h:
          Don't include PortableServerC.h, just use a forward declaration

        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.h:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.h:
        * /tests/ORT/ServerRequestInterceptor.h:
          Include PortableServer.h instead of PortableServerC.h

        Thu Dec  2 12:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup.idl:
          Include PortableServer_include.pidl

        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.h:
          Include PortableServer.h instead of PortableServerC.h

        * tao/PortableServer/Servant_Dispatcher.h:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Default_Servant_Dispatcher.{h,cpp}:
        * tao/RTPortableServer/RT_Object_Adapter_Factory.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.{h,cpp}:
        * orbsvcs/orbsvcs/PortableGroup/PG_Servant_Dispatcher.{h,cpp}:
          Renamed create_POA to create_Root_POA, this method is just used to
          create the RootPOA. Also removed the parent argument, a Root POA has
          no parent, so no need to pass it.

        Thu Dec  2 11:31:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/LifespanStrategy.h:
        * tao/PortableServer/LifespanStrategyPersistent.{h,cpp}:
        * tao/PortableServer/LifespanStrategyTransient.{h,cpp}:
        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/Servant_Upcall.cpp:
          Implemented section 11.3.8.2 of the corba spec, when the transient
          lifespan policy is set, and the POAManager is inactive, a
          object_not_exist with minor code 4 must be thrown. The
          Servant_Upcall just calls now check_state on the POA, this calls the
          lifespan strategy, which uses the POAManager. The Servant_Upcall now
          just doesn't use the POAManager anymore, just the POA.

        Thu Dec  2 10:38:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServantRetentionStrategyRetain.cpp (find_servant):
          Fixed bug I introduced yesterday. poa_current must be always updated
          with the user id

        Thu Dec  2 09:14:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        Prevent that users can include PortableServerC.h, they must include
        PortableServer.h, thanks to Bala for giving the hint how to do this.

        * tao/PortableServer/PortableServer_include.pidl:
          New file, this file should be included by people using
          PortableServer.pidl

        * tao/PortableServer/PortableServer_includeC.h:
        * tao/PortableServer/PortableServer_includeS.h:
          New generated files

        * tao/PortableServer/PortableServerC.h:
          Added check that users can't include this file, they must include
          PortableServer.h.

        * orbsvcs/orbsvcs/RTCosScheduling.idl:
          Include PortableServer_include.pidl

        Wed Dec  1 14:35:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
          Changed locate_servant, etherealize is called much less than
          previously. See 11.3.6.1 of the corba spec

        Wed Dec  1 12:33:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Base.{h,cpp}:
          Renamed _ref_count to _refcount_value and made it return a
          CORBA::ULong. The method is now in the corba spec. This fixes
          bugzilla bug [1951].

        Wed Dec  1 12:17:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/SystemException.cpp:
          Fixed typo and added some missing messages

        * tao/PortableServer/RequestProcessingStrategyAOMOnly.cpp:
          Throw object not exist with the minor code described in the spec

        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_ORBInitializer.cpp:
          Removed obsolete code

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp:
          Changed some formatting of debug messages.

        Wed Dec  1 09:18:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        Fixed a few bugs introduced yesterday, not all strategies where added
        to the service repository. Furthermore made serveral ObjectId
        arguments const& so that we don't make a copy of it.

        Tue Nov 30 15:43:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp (create_POA_i(:
          Fixed possible leak of POAManager when create_POA_i fails.

        * tao/PortableServer/*.{h,cpp}:
          Updated all classnames for policy values so that things are
          consistent. Made the strategy implementations that don't contain
          data loadable with svc.conf in such a way that we only have one
          instance for all POA's.

        Mon Nov 29 18:58:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableServer.cpp:
        * tao/PortableServer/ThreadStrategy*.{h,cpp}:
          Made the different thread strategy implementations loadable with
          service config.

        Mon Nov 29 15:16:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ImplRepo.pidl:
        * tao/PortableServer/ServerObject.pidl:
          Moved the ServerObject interface to its own pidl file, we deliver a
          servant for this interface, the remaining of ImplRepo we just use as
          client. This way we only link ServerObjectS, not ImplRepoS

        * tao/PortableServer/ImplRepo{A,S,C}.{h,cpp,inl}:
          Regenerated

        * tao/PortableServer/ServerObject{A,S,C}.{h,cpp,inl}
          New files

        Mon Nov 29 11:08:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/RequestProcessingStrategy*.{h,cpp}:
          Renames reference_to_servant to system_id_to_servant, the reference
          argument was not used anywhere.

        Mon Nov 29 10:45:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.h:
          Made some methods public that are needed by the persistent lifespan
          strategy.

        * tao/PortableServer/LifespanStrategyPersistent.cpp:
          Enabled ImR code

        Mon Nov 29 09:34:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/AVStreams/Full_Profile/server.h:
        * performance-tests/Cubit/TAO/MT_Cubit/server.h:
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
        * orbsvcs/Trading_Service/Trading_Service.h:
        * performance-tests/POA/Demux/demux_test_server.h:
        * orbsvcs/Naming_Service/Naming_Service.h:
        * orbsvcs/tests/Redundant_Naming/client.cpp:
        * examples/Callback_Quoter/Consumer_Handler.h:
        * examples/Callback_Quoter/Notifier_i.h:
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
        * orbsvcs/tests/FT_App/StubFaultConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.cpp:
        * orbsvcs/tests/FT_App/StubBatchConsumer.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
          Removed include of ORB_Manager, was not used at all

        * orbsvcs/Time_Service/Clerk_i.h:
        * orbsvcs/Time_Service/Server_i.h:
        * orbsvcs/LifeCycle_Service/LifeCycle_Service.h:
        * orbsvcs/Concurrency_Service/Concurrency_Service.h:
        * orbsvcs/tests/Property/client.h:
        * orbsvcs/tests/Property/server.h:
        * orbsvcs/tests/Simple_Naming/client.h:
        * orbsvcs/tests/Trading/colocated_test.cpp:
        * orbsvcs/tests/Trading/export_test.cpp:
        * orbsvcs/tests/Trading/import_test.cpp:
        * examples/Callback_Quoter/Notifier_Input_Handler.h:
        * examples/Event_Comm/Notifier_Server.h:
        * examples/Load_Balancing/Identity_Server.h:
        * examples/Load_Balancing/Identity_Client.h:
        * examples/Load_Balancing/Load_Balancing_Service.h:
        * examples/Load_Balancing_persistent/Identity_Server.h:
        * examples/Load_Balancing_persistent/Identity_Client.h:
        * examples/Load_Balancing_persistent/Load_Balancing_Service.h:
        * examples/Logging/Logging_Service_i.h:
        * examples/Quoter/Generic_Factory.h:
        * examples/Simple/chat/Client_i.h:
        * examples/OBV/Simple_util.h:
        * examples/Persistent_Grid/Simple_util.h:
        * examples/Quoter/Factory_Finder.h:
        * performance-tests/Cubit/TAO/MT_Cubit/Cubit_Task.h:
        * examples/Simple/Simple_util.h:
        * examples/Simple/chat/Server_i.h:
        * orbsvcs/tests/Security/ssliop_corbaloc/client.h:
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Server.h:
        * examples/Simple/chat/Broadcaster_i.h:
        * examples/Simple/bank/AccountManager_i.{h,cpp}:
        * examples/Simulator/Event_Supplier/Event_Sup.cpp:
        * examples/Simulator/Event_Supplier/DualEC_Sup.cpp:
        * examples/Simulator/Event_Supplier/Logging_Sup.cpp:
        * tests/NestedUpcall/Triangle_Test/server_A.h:
        * tests/NestedUpcall/Triangle_Test/server_B.h:
        * tests/NestedUpcall/Triangle_Test/initiator.h:
        * tests/NestedUpcall/MT_Client_Test/local_server.{h,cpp}:
        * tests/NestedUpcall/MT_Client_Test/server.h:
        * tests/InterOp-Naming/Server_i.h:
        * performance-tests/Pluggable/PP_Test_Server.h:
        * tests/Multiple_Inheritance/server.cpp:
          Use TAO_ORB_Manager from tao/Utils now.

        * performance-tests/Pluggable/Pluggable.mpc:
        * tests/Multiple_Inheritance/Multiple_Inheritance.mpc:
        * tests/NestedUpcall/MT_Client_Test/MT_Client_Test.mpc:
        * tests/InterOp-Naming/InterOp-Naming.mpc:
        * tests/NestedUpcall/Triangle_Test/TT.mpc:
        * orbsvcs/Time_Service/Time_Service.mpc:
        * orbsvcs/tests/Security/ssliop_corbaloc/corbaloc_ssliop.mpc:
        * orbsvcs/LifeCycle_Service/LifeCycle_Service.mpc:
        * orbsvcs/Concurrency_Service/Concurrency_Service.mpc:
        * orbsvcs/tests/Property/Property.mpc:
        * orbsvcs/tests/Simple_Naming/Simple_Naming.mpc:
        * orbsvcs/tests/Trading/Trading.mpc:
        * examples/Callback_Quoter/Callback_Quoter.mpc:
        * examples/Event_Comm/Event_Comm.mpc:
        * performance-tests/Cubit/TAO/MT_Cubit/MT_Cubit.mpc:
        * performance-tests/Cubit/TAO/IDL_Cubit/IDL_Cubit.mpc:s
        * examples/Load_Balancing/Load_Balancing.mpc:
        * examples/OBV/Typed_Events/Typed_Events.mpc:
        * examples/Load_Balancing_persistent/Load_Balancing.mpc:
        * examples/Logging/Logging.mpc:
        * examples/Quoter/Quoter.mpc:
        * examples/Persistent_Grid/Persistent_Grid.mpc:
        * examples/Simple/bank/bank.mpc:
        * examples/Simple/chat/chat.mpc:
        * examples/Simple/echo/echo.mpc:
        * examples/Simulator/Event_Supplier/Event_Supplier.mpc:
        * examples/Simple/grid/grid.mpc:
        * examples/Simple/time/time.mpc:
          Add utils as base project because TAO_ORB_Manager is now there

        * orbsvcs/tests/AVStreams/Multicast/ftp.h:
          Removed TAO_ORB_Manager* members, they are not used at all

        Sun Nov 28 19:00:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/AV/AVStreams_i.h:
        * orbsvcs/orbsvcs/AV/Endpoint_Strategy.h:
        * orbsvcs/orbsvcs/AV/Policy.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
        * orbsvcs/orbsvcs/Time/TAO_TIO.h:
          Removed include of ORB_Manager, was not used at all

        * orbsvcs/orbsvcs/CosTrading.mpc:
        * orbsvcs/Scheduling_Service/Scheduling_Service.mpc
          Add utils as base project because TAO_ORB_Manager is now there

        * orbsvcs/orbsvcs/Trader/Trading_Loader.h:
        * orbsvcs/Scheduling_Service/Scheduling_Service.h:
          Use TAO_ORB_Manager from tao/Utils now.

        Sun Nov 28 11:27:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ORB_Manager.{h,cpp}:
        * tao/Utils/ORB_Manager.{h,cpp}:
          Moved from PortableServer to Utils library, just a helper class that
          doesn't need to be in PortableServer

        * tao/PortableServer/Object_Adapter.{h,i}:
          Added enabled_locking accessor method and made the member protected
          again.

        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
          Use the enabled_locking method

        Fri Nov 26 08:47:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/POA/On_Demand_Loading/Servant_Manager.h:
          Added include of Servant_Base.h

        * tests/POA/Default_Servant/Default_Servant.cpp:
          Fixed unused variable warning

        * tests/UNKNOWN_Exception/server.cpp:
          Replaced _tao_poa_downcast with a dynamic cast

        Thu Nov 25 18:02:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/RequestProcessingStrategyAOMOnly.h:
          Removed TAO_POA pointer, left by accident here, it is now in the
          base, but this caused all tests to crash in my branch.

        Thu Nov 25 17:52:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/RTCORBA.pidl:
          Added include of Policy.pidl

        Thu Nov 25 15:53:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/POA_Policy_Set.{h,i}:
          Added get_policy, to retrieve the policy for a given type

        * tao/PortableServer/ServerRequestInfo.cpp:
        * tao/IORInterceptor/IORInfo.cpp:
          Instead of getting the complete policy set, call get_policy on the
          POA

        Thu Nov 25 12:32:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*Strategy*.{h,cpp}:
          Added environment variable to strategy_init and added a
          strategy_cleanup that will be called to let all the strategies
          cleanup their stuff. Removed TAO::Portable_Server:: before
          Non_Servant_Upcall, this is not needed.

        * tao/PortableServer/Active_Policy_Strategies.{h,cpp}:
          Initialize and cleanup all strategies

        * tao/PortableServer/POA.cpp:
          Call cleanup on strategies

        Thu Nov 25 11:04:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Sequence.h:
        * tao/TypeCodeFactory_Adapter.h:
          Removed include of default_environment

        * tao/ORB.cpp:
          Added include of default_environment

        Wed Nov 24 19:47:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/RequestProcessingStrategyServantLocator.cpp:
          Fixed bug in locate_servant, first call find_servant on the POA,
          this will update the poa_current_impl with the needed info

        Wed Nov 24 15:10:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Environment.{h,i,cpp}:
          Removed default_environment, which was deprecated, with this gone,
          we can move the include of default_environment.h to the cpp file.

        * tao/default_environment.h:
          Fixed typo in comment

        * tao/Pseudo_VarOut_T.h:
          Removed commented out include

        Wed Nov 24 13:12:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Typecode_typesC.h:
        * tao/Typecode.h:
          Use the correct template for the template for TypeCode_var and
          TypeCode_out, and move it from the generated file to the normal
          file. This fixes the runtime problems with typecodes.

        Wed Nov 24 10:14:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/*C.*:
        * tao/diffs/*.diff:
          Regenerated several files, it is not easy work, but we have to do it
          sometimes. Also updated the diffs.

        Wed Nov 24 07:38:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ObjRefTemplate/ObjectReferenceTemplateC.cpp:
        * tao/IORInterceptor/IORInterceptorC.cpp:
          Added includes of the factory impl, so that in a static build these
          factories are linked within the executable, so that service
          configurator registry is correctly filled. This is also a problem in
          the main branch, after review of Bala, maybe this goes into the
          main, or I have to change the solution here.

        Wed Nov 24 07:38:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.cpp:
          Moved the error about the missing IORInterceptor Adapter Factory
          to the add_interceptor method, on the ior_interceptor_adapter() the
          error was given also when we don't use IORInterceptor

        Tue Nov 23 14:51:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ObjRefTemplate/*C.{h,cpp,inl}:
          Regenerated

        Tue Nov 23 12:52:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.cpp:
          Print an error if the IORInterceptor Adapter Factory can't be
          retrieved. Someway some tests can't get the IORInterceptor factory,
          no idea why yet, but now it is more clear what is the problem

        * tao/IORInterceptor/*C.{h,cpp,inl}:
          Regenerated

        Tue Nov 23 11:04:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*FactoryImpl.cpp:
          Corrected static service name

        * tao/PortableServer/PortableServer.cpp:
          Added process directives to fill service repository in a static
          build

        Tue Nov 23 10:09:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,i}:
          Added priority_model, to get the priority model of this POA

        * tao/RTPortableServer/RT_Collocation_Resolver.cpp:
        * tao/RTPortableServer/RT_POA.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
          Use priority_model, cached policies are not retrievable anymore

        Tue Nov 23 08:53:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,i}:
          Removed cached_policies(), not needed anymore

        Tue Nov 23 08:45:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.h:
          Removed active_policy_strategies(), only the POA can use the
          strategies. Added validate_lifespan that can be used by the object
          adapter.

        * tao/PortableServer/Object_Adapter.cpp:
          Use validate_lifespan.

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategy*.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrategy*.{h,cpp}:
          Changed servant_to_id on the servant retention policy to
          servant_to_user_id, added servant_to_id on the request processing
          policy, call this from the POA, the servant_to_id will then call
          servant_to_user_id again. This reduce the coupling.

        Mon Nov 22 16:55:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/Servant_Upcall.cpp:
          Added enter/exit to the POA, which calls the thread strategy. The
          Servant upcall now doesn't to get the thread strategy directly

        Mon Nov 22 15:56:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategy*.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrategy*.{h,cpp}:
          Instead of passing the etherealize_objects with the
          deactivate_all_objects call, call etherealize_objects on the request
          processing strategy, and then just call deactivate_all_objects on
          the servant_retention strategy. In case servants than need to be
          deactivated, this will be done by the request processing strategy
          which will have the correct value at that moment

        Mon Nov 22 14:27:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategy*.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrategy*.{h,cpp}:
        * tao/PortableServer/Active_Policy_Strategies.cpp:
        * tao/PortableServer/Servant_Upcall.cpp:
          Changed the cleanup_servant, this is now called on the request
          processing policy, which uses then unbind_using_user_id on the
          servant retention strategy. Now the servant retention strategy is
          not using the request processing strategy directly anymore. The only
          thing is that we only have to move the etherealize_objects_ member
          our of the retain servant retention strategy, it doesn't belong
          there.

        Mon Nov 22 13:39:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategy*.{h,cpp}:
          Added unbind_using_user_id, needed for cleanup

        Mon Nov 22 13:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategy*.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrategy*.{h,cpp}:
          Changed how the locate_servant is implemented that really uses the
          servant. The POA calls now request processing, which can call
          find_servant on the servant retention strategy.

        Mon Nov 22 12:33:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategy*.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrategy*.{h,cpp}:
          Changed how locate_servant is implemented. Now the POA calls the
          request processing strategy, which can call servant_present on the
          servant retention strategy. This makes the implementation much
          clearer.

        Fri Nov 19 14:39:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServantRetentionStrategyRetain.cpp (locate_servant):
          Just pass user_id with find_servant_using_system_id_and_user_id
          instead of calling poa_current_impl again

        Fri Nov 19 14:04:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategy*.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrategy*.{h,cpp}:
          Changed the implementation of reference_to_servant. Previously the
          POA called the servant retention, which called request processing.
          This has been turned around. POA calls now reference_to_servant on
          the request processing, which can call find_servant on the servant
          retention strategy. This make the splitting of behaviour much
          easier and cleaner. This will be done for another few methods, so
          that servant retention and request processing are not coupled so
          hard.

        Fri Nov 19 09:23:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ThreadStrategy.{h,cpp}:
        * tao/PortableServer/Active_Policy_Strategies.cpp:
        * tao/PortableServer/IdUniquenessStrategy.h:
        * tao/PortableServer/LifespanStrategy.h:
        * tao/PortableServer/Policy_Strategy.h:
        * tao/PortableServer/RequestProcessingStrategy.h:
        * tao/PortableServer/ServantRetentionStrategy.h:
        * tao/PortableServer/RequestProcessingStrategyServantActivator.{h,cpp}:
          Added strategy_init again to the policy_strategy, the strategies are
          getting independent of each other, making it only needed to pass the
          POA to this method, so we can declare it again pure virtual in the
          base.

        Wed Nov 17 11:50:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/IdAssignmentStrategySystem.cpp:
          Return true in has_system_id(), not false, stupid copy/paste error

        Wed Nov 17 11:01:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
          Call the get_servant_i() on the POA instead of on the request
          processing strategy. Also corrected some exceptions that we throw
          based on the latest corba spec

        Wed Nov 17 10:51:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
          Added get_servant_i()

        Wed Nov 17 07:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_traits.cpp:
        * TAO_IDL/be/be_visitor_exception/ctor_assign.cpp:
        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:
          Moved the POArefactor2 branch to the latest version of these files.
          Jeff fixes some issues

        * tao/*C.{h,cpp,inl}:
        * tao/PortableServer/*C.{h,cpp,inl}:
          Regenerated all files with the fixes above

        Tue Nov 16 14:23:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{cpp,h}:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
        * tao/PortableServer/IdAssignmentStrategy*.{h,cpp}:
          Added has_system_id() to the POA, this calls then the id_assignment
          strategy and in the places where the id_assignment policy value was
          checked, call the POA::has_system_id() method

        Tue Nov 16 13:01:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/tao.mpc:
          Added the new files, in the PortableServer directory I don't have to
          do this, but in tao.mpc all files are listed explicitly.

        * tao/PortableServer/PortableInterceptorC.h:
          Removed the Objref_Traits for ::PortableInterceptor::IORInterceptor,
          it was removed earlier.

        Tue Nov 16 12:05:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/IdUniquenessStrategyMultiple.cpp:
        * tao/PortableServer/LifespanStrategyPersistent.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/POA.{cpp,h}:
        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
          Added server_priority to the POA, which gets the server_priority
          from the cached_policies, use this in the strategies and shortened
          the documentation above the Non_Servant_Upcall usages.

        Tue Nov 16 10:27:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/LifespanStrategy*.{h,cpp}:
        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.h
          Renamed persistent to is_persistent on the lifespan strategy and
          implemented it in the cpp file. Added is_persistent to the POA and
          use this method instead of the lifespan strategy directly

        Tue Nov 16 10:10:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/LifespanStrategyPersistent.cpp:
        * tao/PortableServer/RequestProcessingStrategyAOMOnly.cpp:
        * tao/PortableServer/RequestProcessingStrategyDefaultServant.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantLocator.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
          Cosmetic changes

        Tue Nov 16 07:34:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/tao.mpc:
          Added Typecode_typesC.cpp

        Mon Nov 15 18:55:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/IdUniquenessStrategy*.{h,cpp}
        * tao/PortableServer/Active_Policy_Strategies.cpp:
          Added is_servant_active to the POA which calls the
          is_servant_in_map on the servant retention strategy. The id
          uniqueness strategy now calls the POA instead of the servant
          retention strategy directly, changed the strategy_init argument to
          a POA pointer.

        Mon Nov 15 18:45:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Policy_Strategies.cpp:
        * tao/PortableServer/ServantRetentionStrategy*.{h,cpp}:
          Removed the id_assignment strategy from the strategy_init call, it
          is not used here.

        Mon Nov 15 18:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategy*.{h,cpp}:
        * tao/PortableServer/Active_Policy_Strategies.cpp:
          Added allow_multiple_activations to the POA, use this in the servant
          retention strategy. The id uniqueness policy is now not needed
          directly anymore in the servant retention strategy, so zapped it
          there

        Mon Nov 15 18:32:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategy*.{h,cpp}:
          Added allow_implicit_activation to the POA which calls the implicit
          activation policy. In the servant retention strategy use this
          method, this way the servant retention strategy is not dependen on
          implicit activation policy directly.

        Mon Nov 15 18:21:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrateg*.{h,cpp}:
        * tao/PortableServer/Active_Policy_Strategies.cpp:
          Added servant_has_remaining_activations and
          rebind_using_user_id_and_system_id to the POA and use these in the
          servant activator request processing strategy instead of calling the
          servant retention strategy directly. Because of this, the request
          processing strategy doesn't need the servant retention strategy
          directly anymore, so removed the srs from the strategy_init call.

        * tao/PortableServer/ServantRetentionStrategy.h:
          Cosmetic changes

        Mon Nov 15 16:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*.h:
          Cosmetic changes

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
          Added is_servant_activation_allowed() to the POA and the POA
          delegates this to the id_uniqueness strategy. The retain servant
          retention strategy and the servant acivator request processing
          strategy just call now the POA instead directly using the
          id_uniqueness strategy. The strategies should be decoupled from
          other strategies, this is the first change for that approach, thanks
          to Bala and Carlos for coming with this approach.

        Mon Nov 15 10:01:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Typecode_types.pidl:
        * tao/Typecode_types.{h,cpp,inl}:
        * tao/Typecode.{h,cpp}:
        * tao/ORB.idl:
        * tao/diffs/Typecode.diff
          Moved the typecode interface forward declaration with the TCKind
          enum to a new file that can be compiled with the IDL compiler.
          Removed some stuff from the Typecode.{h,cpp} that is now generated
          by the IDL compiler. Some patches have to be done, these are in the
          diff file.

        * tao/Typecode_types.pidl:
          Added missing tk_event to the TCKind enum

        * tao/*.pidl:
        * tao/PortableServer/*.pidl:
          Regenerated dozens of pidl files with the idl compiler change below.

        * tao/diffs/IOP_Codec.diff:
        * tao/diffs/Pollable.diff:
        * tao/diffs/StringSeq.diff:
        * tao/diffs/TAO.diff:
          Zapped these not needed diffs

        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:
          Moved the branch POArefactor2 to the latest version of this file,
          this takes care that the typecodes for exceptions are generated in
          the C.cpp file instead of A.cpp, making it much easier to regenerate
          the pidl files in the repo.

        Sun Nov 14 21:06:17 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/PortableServer/IdUniquenessStrategy.h:
        * tao/PortableServer/IdUniquenessStrategyUnique.h:
        * tao/PortableServer/ServantRetentionStrategy.h:

          Cosmetic changes.

        Sun Nov 14 19:08:52 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/PortableServer/Local_Servant_Base.h:

          Changed .i to .inl

        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
        * tao/PortableServer/ThreadPolicyValueORBControl.cpp:

          Added a comment for Johnny.

        Fri Nov 12 13:27:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServerInterceptorAdapter.h:
          Removed some old todo's which are not valid anymore

        Fri Nov 12 13:25:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp (create_reference_with_id_i):
          Throw the exception with the correct minor code

        * tao/*C.{h,cpp,i}:
          Regenerated several files

        Fri Nov 12 08:50:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableInterceptor.pidl:
          Changed type of object_id attribute of ServerRequestInfo from
          CORBA::Octet to ObjectId to match the latest corba spec, this fixes
          bug 1961.

        * tao/PortableInterceptorC.{h,cpp,inl}:
        * tao/PortableInterceptorA.cpp:
        * tao/diffs/PortableInterceptor.diff:
          Regenerated these files and updated diff

        * tao/PortableServer/ServerRequestInfo.{h,cpp}:
          Updated for change above

        Thu Nov 11 15:52:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Current_Impl.cpp (orb_core):
          Use the orb_core() method from the POA instead of using the
          orb_core_ member

        * tao/PortableServer/POA.h:
          Because of the change above POA_Current_Impl doesn't need to be a
          friend of POA anymore

        Thu Nov 11 15:26:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PS_Current.pidl
        * tao/PortableServer/POA_Current.{h,cpp}:
        * tao/PortableSErver/POA_Current_Impl.{h,cpp}:
          Added get_servant

        Thu Nov 11 14:04:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*:
          Fixed problems when building without native exception support.

        * tao/PortableServer/RequestProcessingStrategy*:
          Added cleanup_servant, used by the servant retention strategy. The
          servant activator will then do the etherealize, other strategies to
          nothing. The servant retention strategy then just calls this method
          and doesn't know anything about servant activator anymore

        Thu Nov 11 11:58:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Upcall.cpp (servant_locator_cleanup):
          Added a todo that this method is not behaving according to the spec.
          I just stumbled on this, but will have to look more in detail how to
          update the code so that it matches the spec

        Thu Nov 11 11:23:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/RequestProcessingStrategyServantManager.{h,cpp}:
          Added validate_servant_manager

        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantLocator.cpp:
          Use the new validate_servant_manager to check for nil servant
          managers and throw the correct exception

        Thu Nov 11 09:04:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Object_Map.{cpp,h,i}:
        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp
        * tao/PortableServer/Object_Adapter.cpp
        * tao/PortableServer/POA.cpp
        * tao/PortableServer/Servant_Upcall.{cpp,h,inl}:
        * tao/PortableServer/ServantRetentionStrategy.h:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategyRetain.{h,cpp}:
          Moved the struct Map_Entry outside the TAO_Active_Object_Map and
          called it TAO_Active_Object_Map_Entry. This way we can just use a
          forward declaration in the strategy interfaces and don't need to
          include the Active Object Map on so many places. This reduces the
          number of includes and reduces compile time

        Thu Nov 11 08:27:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/IdUniquenessStrategy*.{h,cpp};
          Added allow_multiple_activations() that can be used from other
          places

        * tao/PortableServer/ServantRetentionStrategy*.{h,cpp}:
          Removed get_aom(), added servant_has_remaining_activations() which
          can then be used by the request processing strategy. With these
          changes no other strategies need to have the active object map

        * tao/PortableServer/RequesProcessingStrategy*.{h,cpp}:
          Removed the aom from the strategy_init call, use the servant
          retention strategy instead of the aom.

        Wed Nov 10 20:20:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/RequestProcessingStrategyServantActivator.{h,cpp}:
          Moved incarnate and etherealize of the servant to separate helper
          methods

        Wed Nov 10 19:09:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/IdUniquenessStrategy*.*:
          Renamed validate to is_servant_activation_allowed, this tells much
          better what this method does. Also, this method does just the check,
          it doesn't throw an exception anymore, so the corba environment
          macros are removed

        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
          Use the is_servant_activation_allowed method from the id uniqueness
          strategy instead of handling the check ourselves

        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
          Call is_servant_activation_allowed on the IdUniqueness policy and
          throw an error when it is not possible.

        Wed Nov 10 15:19:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServantRetentionStrategyNonRetain.h:
        * tao/PortableServer/ServantRetentionStrategyRetain.{h,cpp}:
          Derive the Retain strategy from the NonRetain case, this reduces the
          code duplication between these strategies a lot. Thanks to Carlos
          for the proposal to change this. In case the Retain strategy can't
          find the needed info in the aom, he will ask the NonRetain

        Wed Nov 10 14:34:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Upcall.h:
          Added increment_servant_refcount method to increment the refcount on
          the active object map entry

        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
          Use the new method above instead of getting the active object map
          entry here.

        Wed Nov 10 14:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServantRetentionStrategy*.*:
          Added rebind_using_user_id_and_system_id to make the request
          processing strategy much simpler, use this in the servant activator
          request processing strategy.

        * tao/PortableServer/IdUniquenessStrategy*.{h,cpp}:
        * tao/PortableServer/RequestProcessingStrategy*.{h,cpp}:
        * tao/PortableServer/Policy_Strategy.h:
        * tao/PortableServer/Active_Policy_Strategies.cpp:
          Removed the strategy_init from PolicyStrategy, pass besides the POA
          more specific things to the strategies, so that they get exactly
          what they need, making the strategy code much smaller. Each strategy
          gets the things it needs, if it needs nothing, it gets nothing, if
          its need a lot, it receives more.

        * tao/PortableServer/Servant_Base.{h,cpp,i}:
        * tao/PortableServer/Local_Servant_Base.{h,cpp,inl}:
          Moved TAO_Local_Servant_Base to its own file

        * tao/Adapter.{h,cpp}:
        * tao/Adapter_Factory.{h,cpp}:
        * tao/Adapter_Registry.{h,cpp}:
        * tao/tao.moc
          Moved Adapter Factory to its own file, corrected some errors

        Tue Nov  9 15:17:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BiDIR_GIOP/*:
          Regenerated IDL, updated diffs, removed msc_ver >= 1200 checks

        Tue Nov  9 14:28:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Default_Servant/Default_Servant.cpp:
          Extended this test to check if the correct exception is thrown when
          we try to retrieve the default servant when none is set and when we
          try to get/set the servant manager

        Tue Nov  9 14:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/MT_Servant_Locator/MT_Servant_Locator.cpp:
          Extended this test so that we test if the correct exception is
          thrown when we set a nil servant manager or try to overwrite the
          servant manager

        Tue Nov  9 11:13:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*Value.{h,cpp}:
          Splitted several PolicyValue files in multiple

        Tue Nov  9 08:45:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Policy_Strategies.cpp:
          Fixed wrong svc directive

        Mon Nov  8 12:58:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/ServantRetentionStrategy.h:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.{h,cpp}:
        * tao/PortableServer/ServantRetentionStrategyRetain.{h,cpp}:
          Changed the reference_to_servant to check in the POA whether this
          reference was created by this POA, don't do this in the strategy
          itself.

        Fri Nov  5 15:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*
          Splitted all strategy interfaces and implementation to separate
          files, added strategy factory interfaces and implementations. I have
          to cleanup a lot of includes/forward declarations and update class
          names, but the files/classes are now there and splitted making it
          easier to review things

        Fri Nov  5 07:39:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Activation_Strategy.{h,cpp}:
          Removed these files

        * tao/PortableServer/ImplicitActivation*.*:
          In these files everything for ImplicitActivation policy is now
          available.

        Thu Nov  4 14:08:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Activation_Strategy.{h,cpp}:
          Move implementation to the cpp file

        * tao/PortableServer/Servant_Retention_Strategy.cpp:
          Use the Activation_Strategy instead of the Cached_Policies

        * tao/PortableServer/POA.cpp (create_POA_i):
          Handle a system exception from the unknown_adapter call as described
          in 11.3.9.2 in the spec

        * tao/PortableServer/Servant_Location.h:
          Moved TAO_SERVANT_LOCATION enum to its own file to reduce the need
          to include Object_Adapter.h

        * tao/PortableServer/Object_Adapter.{h,cpp}:
        * tao/PortableServer/Servant_Retention_Strategy.h:
        * tao/PortableServer/ServantRetentionStrategy.h:
        * tao/PortableServer/Request_Processing_Strategy.h:
          Updated because of change above

        Thu Nov  4 12:49:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,i}:
          Removed thread_policy(), is not needed anymore

        Thu Nov  4 10:08:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp,i}:
        * tao/PortableServer/Lifespan_Strategy.{h,cpp}:
        * tao/PortableServer/Object_Adapter.cpp:
          Moved validating the lifespan part of an object key from the POA to
          the Lifespan strategy. This way the creation_time is not needed
          anymore in the POA and the also removed some helper methods that are
          now not needed anymore.

        Thu Nov  4 09:32:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/Lifespan_Strategy.{h,cpp}:
        * tao/PortableServer/Id_Assignment_Strategy.{h,cpp}:
          Moved some parts of the POA::set_id() method to the strategies and
          call the new create_key methods on the strategies

        Wed Nov  3 11:37:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.h:
          Removed declaration of default_poa_policies(), there is no
          implementation for this method

        Wed Nov  3 11:09:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orbsvcs/orbsvcs/PortableGroup/PG_Servant_Dispatcher.{h,cpp}:
          New servant dispatcher to create a GOA on demand

        * tao/orbsvcs/orbsvcs/PortableGroup/GOA.{h,cpp}:
        * tao/orbsvcs/orbsvcs/PortableGroup/MIOP.cpp:
        * tao/orbsvcs/orbsvcs/PortableGroup/PG_Object_Adapter_Factory.cpp:
        * tao/orbsvcs/orbsvcs/PortableGroup/PortableGroup_Loader.cpp:
        * tao/orbsvcs/orbsvcs/PortableGroup/PortableGroup_ORBInitializer.cpp:
          Several changes to be able to load and create the GOA when needed

        Tue Nov  2 15:22:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableServerC.h:
          Removed the guard to check this file is not included. This file is
          included by other idl generated files, have to solve that first
          before this guard can be in place.

        Tue Nov  2 14:12:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Lifespan_Strategy.cpp (notify_shutdown):
          Only deactive the server_object when it is available

        Tue Nov  2 14:12:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp:
          Fixed bug in parse_key

        Tue Nov  2 13:29:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*:
          Guard inclusion of PortableServerC.h, PortableServer.h must be
          included by the users, not the C.h

        Tue Nov  2 12:48:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PS_ForwardC.h:
        * tao/PortableServer/diffs/PS_Forward.diff:
          Added TAO_DynamicImplementation forward declaration

        * tao/orbsvcs/examples/ORT/Gateway_i.h:
          Include PortableServer.h, not PortableServerC.h

        Mon Nov  1 19:24:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Request_Processing_Strategy.{h,cpp}:
          Removed set_user_id and get_aom methods from the classes in this
          file, it are nice methods, but should be here, everything in these
          methods is already handled in the servant_retiontion strategy

        * tao/PortableServer/Servant_Retention_Strategy.cpp:
          Fixed unused argument warning

        Mon Nov  1 18:44:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Retention_Strategy.cpp:
          Changed the implementation of reference_to_servant, use a different
          method from the request_processing_strategy and implemented the
          non_retain case, this was previously not there in TAO, but the spec
          describes that certain functionality must be there

        * tao/PortableServer/Request_Processing_Strategy.{h,cpp}:
          Removed servant_to_reference, this is not needed, the
          servant_retention_strategy just calls get_servant(), for aom and
          servant manager it then gets wrong policy, else it gets the servant

        Mon Nov  1 11:39:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp,i}:
          Moved methods that use the POAManager to the cpp file, this way we
          don't need to include POAManager in the header file.

        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Servant_Upcall.cpp:
          Added include of POAManager.h because it is now not done in POA.h
          anymore

        * tao/PortableServer/POA.{h,cpp,i}:
        * tao/PortableServer/Request_Processing_Strategy.cpp:
        * tao/PortableServer/Servant_Retention_Strategy.cpp:
        * tao/PortableServer/ServantRetentionStrategy.h:
          Removed the active object map completely from the POA, it is now
          only available in the Retain Servant Retention Strategy. The Request
          Processing strategy still uses this map, just rewrote the code there
          to get the servant retention strategy instead of the POA, this will
          be rewritter later.

        * tao/PortableServer/POA.{cpp,i}:
        * tao/IORInterceptor/IORInfo.cpp:
          Removed get_manager_id from the POA, let the IORInfo just retrieve
          the POA Manager and call get_manager_id on that.

        * tao/PortableServer/POA.{cpp,i}:
          Moved all methods that acquire the POA lock to the cpp file, that
          also prevents us from including the poa_macros and POA_Guard.h files
          in this inline file

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/Servant_Retention_Strategy.{h,cpp}:
          Moved create_reference and create_reference_with_id to the servant
          retention strategy

        Mon Nov  1 09:03:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
          Removed is_servant_in_map

        * tao/PortableServer/Request_Processing_Strategy.cpp:
        * tao/PortableServer/Id_Uniqueness_Strategy.cpp:
          Use servantretentionstrategy::is_servant_in_map instead of POA
          version

        Mon Nov  1 09:03:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/Servant_Retention_Strategy.{h,cpp}:
          Implemented servant_to_reference in the servant retain strategy.
          Moved servant_to_system_id_i to the retan servant retain strategy,
          it is only needed for that strategy. Made temporarily some members
          in the POA public so that things keep compiling, will look how to
          make this consistent later.

        Mon Nov  1 08:48:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,i}:
          Removed servant_to_system_id, this method is protected, so not
          callable from the outside and not used. The servant_to_system_id_i
          is a helper method that is used, but there is no need for
          servant_to_system_id.

        Mon Nov  1 07:21:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServantRetentionStrategy.h:
        * tao/PortableServer/Servant_Retention_Strategy.{h,cpp}:
        * tao/PortableServer/POA.{h,cpp}:
          Moved activate_object_with_id to the servant retention strategy and
          implemented it there. Removed the is_user_id_in_map from the POA and
          the Non Retain strategy, it is a helper method only for the retain
          servant retention strategy.

        Fri Oct 29 13:03:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*.pidl:
        * tao/PortableServer/diffs/*:
        * tao/PortableServer/*C.{h,cpp,inl}:
        * tao/PortableServer/*A.cpp:
          Moved all Policy enums out of the PortableServer.pidl and to the
          belonging *Policy.pidl file, that way we only get the Any operations
          we use

        Fri Oct 29 12:26:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        Made the ServantRetentionStrategy loadable by service configurator

        * tao/PortableServer/StrategyFactory.{h,cpp}:
          Base for all factories creating strategies

        * tao/PortableServer/ServantRetentionStrategyFactory.h:
          Abstract factory

        * tao/PortableServer/ServantRetentionStrategyFactoryImpl.h:
          Concrete factory for servant retention strategies

        * tao/PortableServer/Active_Policy_Strategies.cpp:
          Use servant retention strategy strategy

        * tao/PortableServer/ServantRetentionStrategy.{h,cpp}:
        * tao/PortableServer/Servant_Retention_Strategy.{h,cpp}:
          Moved base class to a new file and use that base in all places

        Fri Oct 29 11:45:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{cpp,i}:
          Moved activate_object from i to cpp file

        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/Servant_Retention_Strategy.cpp:
          Implemented the activate_object in the Servant_Retention_Strategy
          and just call that strategy from the POA.

        * tao/PortableServer/POA.{cpp,h}:
          Removed default_servant, we don't need it anymore in the POA, it is
          in the Default_Servant_Request_Processing_Strategy.

        Fri Oct 29 11:06:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Retention_Strategy.cpp (servant_to_id):
          Implemented for the retain case.

        * tao/PortableServer/POA.cpp (servant_to_id_):
          Call the Servant_Retention_Strategy

        Fri Oct 29 10:19:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Request_Processing_Strategy.{h,cpp}:
          Removed the servant_to_id method, it doesn't belong here.
          Servant_to_id is in servant_retentium_strategy and this strategy
          just uses get_servant from the request processing strategy.

        Fri Oct 29 10:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/Request_Processing_Strategy.cpp:
          Changed the get_servant, don't throw an exception when no default
          servant is set with default servant request processing strategy in
          the strategy itself, let the POA do that, this makes the
          get_servant() method much more usable from the rest of the policies.
          The reason of this change is that when get_servant() is used on the
          POA and default servant policy is set, but no servant, then we
          should give the exception NoServant, but when other strategies use
          the default_servant, and it is not there they should give obj
          adapter exception

        * tao/PortableServer/Servant_Retention_Strategy.{h,cpp}:
          Implemented servant_to_id for the non retain case and changed the
          usage of thet get_servant call in the request processing strategy

        Fri Oct 29 09:34:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        All PolicyFactory are now loaded on demand with the correct
        service name

        Thu Oct 28 13:59:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        Changes ServantRetentionPolicyFactory and
        RequestProcessingPolicyFactory to use a base class as interface and a
        FactoryImpl for the implementation

        * tao/PortableServer/ThreadPolicyFactoryImpl.cpp:
          Changed service name

        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Policy_Creator_T.h:
          Changed loading of policy factories

        * tao/PortableServer/Lifespan_Strategy.{h,cpp}:
          Changed use_imr_ to bool

        Thu Oct 28 11:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Retention_Strategy.cpp:
          Changed the id_to_servant for the non retain case

        Thu Oct 28 10:55:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
          Added is_poa_generated to check whether object reference is
          generated by this POA. Use this method in reference_to_id()

        * tao/PortableServer/Servant_Retention_Strategy.cpp (reference_to_servant):
          Use POA::is_poa_generated to check whether the object reference is
          generated by the POA.

        Thu Oct 28 10:30:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Retention_Strategy.{cpp,h}:
          Added servant_to_reference as empty methods with just the text from
          the spec. The POA should call this strategy first, this then has to
          do some more, but all relationships are not clear yet.

        Thu Oct 28 10:04:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Retention_Strategy.{cpp,h}:
          Added servant_to_id as empty methods with just the text from the
          spec. The POA should call this strategy first, this then has to do
          some more, but all relationships are not clear yet.

        * tao/PortableServer/ThreadPolicyFactory.h
          Made this a pure virtual base class

        * tao/PortableServer/ThreadPolicyFactoryImpl.cpp
        * tao/PortableServer/ThreadPolicyFactoryImpl.h
          The real factory implementation

        * tao/PortableServer/ThreadPolicyFactory.cpp
          Zapped this file

        * tao/PortableServer/PolicyFactory.h
          Reduced needed includes

        * tao/PortableServer/Object_Adapter.cpp
        * tao/PortableServer/POA.cpp
        * tao/PortableServer/PortableServer_PolicyFactory.cpp
          Changed for ThreadPolicyFactory

        Wed Oct 27 14:20:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp:
          We seem to have several more mismatches with the spec, just added
          some todo's. When the methods in the POA are moved to the
          strategies, we should check all the methods related to servant
          activation, deactivation, retrieval with the spec to see if the
          correct exceptions with the correct minor codes are given

        Wed Oct 27 04:34:29 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/PortableServer/Activation_Strategy.h:
        * tao/PortableServer/Id_Assignment_Strategy.cpp:
        * tao/PortableServer/Id_Uniqueness_Strategy.cpp:
        * tao/PortableServer/Id_Uniqueness_Strategy.h:
        * tao/PortableServer/Lifespan_Strategy.h:
        * tao/PortableServer/Object_Adapter.h:

          Some warnings fixes and a few comments for Johnny. The most
          important commment is going to be over email.

        Wed Oct 27 12:02:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Adapter_Activator.h:
        * tao/PortableServer/Collocated_Object_Proxy_Broker.h:
        * tao/PortableServer/Default_Acceptor_Filter.h:
        * tao/PortableServer/Object_Adapter.h:
        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/POA.h:
        * tao/PortableServer/Request_Processing_Strategy.h:
          Reduced includes

        Wed Oct 27 08:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Policy_Creator_T.h:
          Return 0 in case no factory, not _nil, reduces header dependencies.
          Don't return a POLICYTYPE *, just let the caller use the _ptr type.

        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
        * tao/PortableServer/Object_Adapater.cpp:
          Updated because of Policy_Creator_T change

        * tao/PortableServer/POA.{h,cpp}:
          Added some comments to member that according to me have to moved out
          of the POA and some methods that have to be reworked to use the
          strategies.

        Wed Oct 27 07:01:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Lifespan_Strategy.h:
          Added some comments based on Bala's comments

        Wed Oct 27 06:55:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

          Changed made by Bala

        * tao/PortableServer/Activation_Strategy.h:
        * tao/PortableServer/Id_Uniqueness_Strategy.cpp
          Removed variable name

        * tao/PortableServer/Id_Assignment_Strategy.cpp:
          Layout changed

        * tao/PortableServer/Lifespan_Strategy.h:
          Bala added some comments to address

        * tao/PortableServer/Object_Adapter.h:
          Cleanup of includes

        Tue Oct 26 13:59:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Request_Processing_Strategy.cpp:
          Changed the implementation of set_servant_manager, the spec is more
          precise what should happen, first it is only allowed to set it once,
          in case already set a bad_inv_order exception is thrown, twice, when
          it is set to nil, or given an invalid interface a obj_adapter
          exception is given

        Tue Oct 26 13:40:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp.i}:
          Removed get_servant_i, set_servant_i, get_servant_manager_i and
          set_servant_manager_i, just moved the functionality to the method
          without _i. All methods just call the request processing strategy,
          no need to keep these methods anymore. Some missing ACE_CHECKS in
          the set methods are added.

        Tue Oct 26 11:30:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        Tue Oct 26 11:30:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
          Removed all ServantActivator stuff from the POA

        Tue Oct 26 10:39:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
          Removed all ServantLocator stuff from the POA

        * tao/PortableServer/Servant_Upcall.{h,inl,cpp}:
        * tao/PortableServer/Request_Processing_Strategy.cpp:
          Instead of storing a bool whether to call the servant locator, just
          store the servant locator itself in the Servant_Upcall. That way we
          also always use the same servant locator for the preinvoke and the
          postinvoke. This is easier to handle then the int, but probably we
          will move this later to the request processing strategy.

        Tue Oct 26 09:59:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/Lifespan_Strategy.{h,cpp}:
          Moved all ImR code to the Lifespan Strategy and just call from the
          POA notify_startup and notify_shutdown. The code itself to notify
          the ImR must be converted, but first move it out. Had to include the
          different PolicyC files in the POA, have to look why in detail.

        Tue Oct 26 09:18:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POAManager.{h,cpp}:
        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/Servant_Upcall.cpp:
          Moved check_poa_manager_state from the POA to the POAManager, the
          POAManager should check its state, the POA just calls this method.

        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/Sevant_Retention_Strategy.{h,cpp}:
         Moved several methods for the cleanup to the servant retention
         strategy. Some work has to be done for the servant locator.

        Mon Oct 25 17:16:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>


        * tao/PortableServer/Object_Adapter.h:
        * tao/PortableServer/POA.{h,cpp}:
        * tao/PortableServer/Request_Processing_Strategy.{h,cpp}:
        * tao/PortableServer/Servant_Base.h:
        * tao/PortableServer/Servant_Retention_Strategy.{cpp,h}:
        * tao/PortableServer/Servant_Upcall.{cpp,h}:
        * tao/PortableServer/Servant_Upcall.h:
          Started moving functionality out of the POA and to the
          Servant_Retention_Strategies, in some cases when this strategy can't
          find a servant it goes to the Request_Processing_Strategy to see if
          that can fulfill the requested task. Made on some places some
          methods temporarily public to keep going, later I will revisit
          those. The current state is just that things compile, this is just a
          checkin to show the current state, things are now completely broken,
          a lot of functionality is partly moved, making the code unusable at
          this moment, when all functionality related to servant_retention and
          request_processing is moved out, then we can test again.

        * tao/PortableServer/Active_Policy_Strategies.{h,cpp,inl}:
          Added servant_retention_strategy

        Fri Oct 22 14:40:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Current_Impl.{h,inl}:
          Added new replace_object_id(), this is needed for the Request
          Processing strategies to replace the object id in a smart way

        Fri Oct 22 13:44:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/portableserver_export.h:
          Removed include of ObjRef_VarOut_T.h, when neede somewhere include
          it there. With this include at this place everyone gets this include
          even when not needed.

        * tao/PortableServer/Active_Policy_Strategies:
        * tao/PortableServer/POA_Guard.h:
        * tao/PortableServer/POAManager.h:
        * tao/PortableServer/Policy_Strategy.h:
        * tao/PortableServer/Thread_Strategy.h:
          Added missing includes

        Thu Oct 14 07:21:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/Network_Priority_Mapping_Manager.h:
        * tao/RTCORBA/Priority_Mapping_Manager.h:
        * tao/RTCORBA/RT_Current.h:
        * tao/RTCORBA/RT_Mutex.h:
        * tao/RTCORBA/RT_ORB.h:
        * tao/RTCORBA/RT_ORBInitializer.h:
        * tao/RTCORBA/RT_Policy_i.h:
        * tao/RTCORBA/RT_PolicyFactory.h:
        * tao/RTCORBA/RTCORBA_includeC.h:
          Removed checks for _MSC_VER >= 1200

        Wed Oct 13 12:06:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp (reference_to_id):
          Use ACE_NEW_THROW_EX instead of plain new

        Wed Oct 13 11:58:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp (id):
          Use ACE_NEW_THROW_EX instead of plain new

        Wed Oct 13 10:01:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Activation_Strategy.{h,cpp,inl}:
          Moved accessor methods to the new inline file

        * tao/PortableServer/*Strategy.{h,cpp}:
          Removed the policy list parameter of the strategy_init method. Some
          policies need to have data from the POA, at this moment just pass
          the POA pointer, later we can reduce this even more

        * tao/PortableServer/Object_Adapter.cpp:
          Changed creation of implicit_activation_policy

        * tao/PortableServer/POA.cpp:
          Pass the this to the update method of the active_policy_strategies

        * tao/PortableServer/Upcall_Wrapper.h:
        * tao/PortableServer/ServerInterceptorAdapter.h:
          Reduced includes

        Wed Oct 13 08:55:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Activation_Strategy.h:
          Added allow_implicit_activation method and implemented this for both
          types.

        * tao/PortableServer/Active_Policy_Strategies.{h,cpp}:
          Added Activation_Strategy.

        * tao/PortableServer/POA.cpp:
          Fixed type in comment

        Wed Oct 13 08:08:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Key_Adapters.{h,cpp}:
          Moved include of Map_T.h to the cpp file, added forward declaration
          of ACE_Active_Map_Manager_Key to the header file

        * tao/PortableServer/Active_Object_Map:
          Added include of Map_T.h

        Wed Oct 13 07:59:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Creation_Time.{h,cpp,inl}:
          Moved TAO_Creation_Time and TAO_Temporary_Creation_Time to this
          file, removed the TAO_ prefix and moved them in the
          TAO::Portable_Server namespace

        * tao/PortableServer/Lifespan_Strategy.h:
        * tao/PortableServer/Object_Adatper.{h,cpp,i}:
        * tao/PortableServer/POA.{h,cpp,i}:
          Updated because of the move of the time classes

        Tue Oct 12 14:17:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Notify/Test_Filter/RT_Test_Filter.cpp:
          Use a dynamic_cast to get the TAO_POA, the _tao_downcast has been
          zapped with this rework

        Tue Oct 12 14:07:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Miop/McastHello/server.cpp:
          Use the new GOA interface instead of the MIOP specific part of the
          POA. The GOA support still has to be tested, but now we can compile

        Tue Oct 12 13:39:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp:
          Initialize the active strategies after the cached policies are
          completely updated.

        * tao/PortableServer/Lifespan_Strategy.h:
          Added a Server_Object_i pointer to the persistent strategy, it needs
          to be there. Other code will move there also so that all ImR stuff
          is in the persistent strategy

        * examples/POA/FindPOA/FindPOA.cpp:
          Updated because of TAO_Adapter_Activator change

        * tests/ORT/ServerRequestInterceptor.h:
          Added include of PS_CurrentC.h

        * tests/Portable_Interceptors/PolicyFactory/server.cpp:
          Include PortableServer.h instead of PortableServerC.h

        Tue Oct 12 12:35:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:
          Added include of ServantManagerC.h to get ForwardRequest exception

        Tue Oct 12 12:14:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp:
          Use a dynamic_cast to get the TAO_POA, the _tao_downcast has been
          zapped with this rework

        Tue Oct 12 12:17:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/IFRService/IRObject_i.cpp:
          Added include of POA_Current_Impl.h and used the correct namespace

        * tao/IFR_Client/*:
        * orbsvcs/orbsvcs/IFR_Service/*S.{h,cpp,i,inl}:
          Regenerated all the files, also all .i files are replaced with
          the new .inl files

        * orbsvcs/IFR_Server/diffs/*.diff:
          Removed all these files, they are outdated, on the wrong place and
          most of them are zero bytes.

        Tue Oct 12 11:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/create_persistent_poa.h:
          Include PortableServer.h instead of PortableServerC.h

        * orbsvcs/orbsvcs/LoadBalancing/LB_MemberLocator.h:
          Include ServantLocatorC.h instead of PortableServerC.h

        * orbsvcs/orbsvcs/Notify/Notify_EventChannelFactory_i.cpp:
          Use a dynamic_cast to get the TAO_POA, the _tao_downcast has been
          zapped with this rework

        Tue Oct 12 10:12:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Policy_Forward.*:
          Added Policy_Current as forward declared interface, it seems with my
          rework Policy_Current is not automatically included anymore, so
          added a forward declaration, this keeps the size much smaller than
          including the real file with Policy_Current

        Tue Oct 12 09:48:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Adapter_Factory.h:
          Corrected include because of move of TAO_Object_Adapter_Factory

        Tue Oct 12 09:39:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Lifespan_Strategy.{h,cpp}:
          Implemented this strategy a little bit more

        * tao/PortableServer/Id_Uniqueness_Strategy.{h,cpp}:
          Added validate method to check whether servant may be activated or
          not based on this policy

        * tao/PortableServer/Active_Policy_Strategies.{h,cpp}:
          Create some more specific strategies, this will use a factory later,
          but this is for testing now

        * tao/PortableServer/POA.{h,cpp}:
          Use Lifespan and Id_Uniqueness strategies so far as they now exist

        Tue Oct 12 07:59:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Key_Adapters.{h,cpp,i}:
          Removed the Key_Adapters.i file, it is empty

        Tue Oct 12 07:59:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp:
          Changed get_servant_i and set_servant_i methods to use the
          Request_Processing_Strategy

        * tao/PortableServer/Active_Policy_Strategies.{h,cpp}:
          Added Id_Assignment_Strategy

        Tue Oct 12 07:37:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Policy_Strategies.cpp:
          Create the correct ServantRetentionStrategy based on the set
          policies

        Tue Oct 12 07:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp,i}:
          Removed the single threaded lock functionality, this is handled now
          by the Single Thread_Strategy

        Mon Oct 11 15:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/DomainC.{h,cpp,inl}:
        * tao/PortableServer/Domain/DomainS.{h,cpp,inl}:
        * tao/Messaging/MessagingC.*:
        * tao/Messaging/MessagingS.*:
          Regenerated

        * tao/PortableServer/POA.{i,cpp}:
          Moved get/set_servant, get/set_servant_manager to cpp file

        * tao/DynamicInterface/Dynamic_Implementation.cpp:
          Added include of POA_Current_Impl.h

        * tao/RTPortableServer/RT_Collocation_Resolver.cpp:
          Servant_Upcall has moved to its own file and to the
          TAO::Portable_Server namespace

        Mon Oct 11 13:55:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{cpp,i}:
          Moved the_activator get/set methods from inline to cpp file, uses a
          lock and requires IDL generated code, not handy in the inline file

        Mon Oct 11 13:41:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Collocation_Opportunities/Collocation_Opportunities.cpp:
        * tests/DSI_Gateway/test_dsi.h:
          Added includes and changes usage of TAO_POA_Current to the new
          namespace

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/interceptors_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:
          Servant_Upcall has moved to its own file and to the
          TAO::Portable_Server namespace, changes generation in the TAO_IDL
          compiler to reflect the new name, and no need to include
          Object_Manager.h, Servant_Upcall.h is enough

               * tao/PortableServer/*C.{h,cpp,inl}:
         Regenerated with the latest version of the TAO_IDL compiler

               * tao/PortableServer/Default_Servant_Dispatcher.cpp:
               * tao/PortableServer/Object_Adapter.{h,i}:
               * tao/PortableServer/Request_Processing_Strategy.h:
               * tao/PortableServer/Servant_Upcall.inl:
               * tao/PortableServer/Servant_Base.cpp:
               * tao/PortableServer/POA.{h,cpp}:
         Corrected some small errors and reduced header dependencies

        Mon Oct 11 09:51:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        Everything has now been moved to the POArefactor2 branch that I
        created fresh this morning

        Mon Oct 11 08:07:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/IdAssignmentPolicyFactory.h
        * tao/PortableServer/IdUniquenessPolicyFactory.h
        * tao/PortableServer/ImplicitActivationPolicyFactory.h
        * tao/PortableServer/LifespanPolicyFactory.h
        * tao/PortableServer/POA_Current.h
        * tao/PortableServer/RequestProcessingPolicyFactory.h
        * tao/PortableServer/ServantRetentionPolicyFactory.h
        * tao/PortableServer/ThreadPolicyFactory.h
        * tao/PortableServer/Thread_Strategy.cpp
        * tao/PortableServer/Thread_Strategy.h:
          Updated by Bala

        Fri Oct  8 09:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Activation_Strategy.h:
        * tao/PortableServer/Active_Policy_Strategies.cpp:
        * tao/PortableServer/Active_Policy_Strategies.h:
        * tao/PortableServer/Id_Assignment_Strategy.cpp:
        * tao/PortableServer/Id_Assignment_Strategy.h:
        * tao/PortableServer/Id_Uniqueness_Strategy.cpp:
        * tao/PortableServer/Id_Uniqueness_Strategy.h:
        * tao/PortableServer/Lifespan_Strategy.h:
        * tao/PortableServer/Policy_Strategy.h:
        * tao/PortableServer/Servant_Retention_Strategy.h:
        * tao/PortableServer/Thread_Strategy.cpp:
        * tao/PortableServer/Thread_Strategy.h:
          Added a TAO_POA* to the strategy_init call, this can then be used by
          the strategies

        * tao/PortableServer/Request_Processing_Strategy.cpp:
        * tao/PortableServer/Request_Processing_Strategy.h:
          Besides adding TAO_POA* also now implemented several of the methods

        * tao/PortableServer/POA.cpp:
          Changed get_servant_i() and set_servant_i() to use the
          Request_Processing_Strategy to show how another strategy would work
          after the rework, this way Bala can better see the direction I want
          to go

        Fri Oct  8 08:36:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Current.{h,cpp,inl}:
        * tao/PortableServer/Object_Adapter.{h,cpp,inl}:
          Renamed TAO_POA_Current to TAO::Portable_Server::POA_Current and
          moved it to its own file

        * tao/PortableServer/PortableServer_ORBInitializer.cpp:
        * tao/RTPortableServer/RT_Object_Adapter_Factory.cpp:
          Updated because of change above

        Fri Oct  8 08:12:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Current_Impl.{h,cpp,inl}:
        * tao/PortableServer/Servant_Upcall.{h,cpp,inl}:
          Moved Servant_Upcall and POA_Current_Impl to its own files and to
          the TAO::Portable_Server namespace. I have to reduce includes and
          change to TAO_IDL compiler to generate Servant_Upcall in the new
          namepace

        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp:
        * tao/PortableServer/Default_Servant_Dispatcher.{h,cpp}:
        * tao/PortableServer/Object_Adapter.{cpp,h,i}:
        * tao/PortableServer/POA.{h,cpp}
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/Servant_Dispatcher.h:
        * tao/PortableServer/ServerRequestInfo.h:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
          Updated because of the change above

        Thu Oct  7 14:40:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Non_Servant_Upcall.{h,cpp,inl}:
        * tao/PortableServer/Object_Adapter.{h,cpp,i}:
        * tao/PortableServer/POA.{h,cpp}:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
          Moved Non_Servant_Upcall to its own file and to the
          TAO::Portable_Server namespace

        Thu Oct  7 14:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
          Replaced all ACE casts with their C++ versions

        * tao/RTPortableServer/RT_Collocation_Resolver.cpp:
        * tao/RTPortableServer/RT_Object_Adapter_Factory.h:
        * tao/RTPortableServer/RT_POA.cpp:
        * tao/RTPortableServer/RT_Policy_Validator.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
          Made changes to these files because of the changes in the
          PortableServer library

        Thu Oct  7 12:40:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Policy_Strategies.{h,cpp}:
        * tao/PortableServer/POA_Cached_Policies.{h,cpp}:
        * tao/PortableServer/POA.h:
          Moved Active_Policy_Strategies to its own file

        Thu Oct  7 12:08:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Id_Assignment_Strategy.{h,cpp}:
          Moved implementation to cpp file

        Thu Oct  7 11:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Request_Processing_Strategy.{h,cpp}:
          Moved implementation to header file and started with implementing
          this strategy

        Thu Oct  7 10:10:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
          Instead of checking the thread policy value, use the thread strategy
          to obtain and release the lock.

        * tao/PortableServer/Thread_Strategy.{h,cpp}:
          Implemented this class in cpp file, give enter/exit an int return
          value

        * tao/PortableServer/POA_Cached_Policies.{h,cpp}:
          Implemented Active_Policy_Strategies for thread strategy, just to
          show the idea, have to use a factory and svc conf in the future

        * tao/PortableServer/POA.{h,cpp,i}:
          Added Active_Policy_Strategies as member, update it on construction
          of the POA so that the strategies are created. When this is the
          correct way to go, the code belonging to the single thread lock and
          the lock itself can be zapped.

        Thu Oct  7 08:29:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
          Create the default policies using the new way

        * tao/PortableServer/Lifespan_Strategy.{h,cpp}:
        * tao/PortableServer/Servant_Retention_Strategy.{h,cpp}:
          Made these compiling so that I can test

        Thu Oct  7 08:22:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*Policy.{h,cpp}:
        * tao/PortableServer/*PolicyFactory.{h,cpp}:
          Moved _tao_cached_type and _tao_scope from the factory to the
          policy, these methods are called on the policy from within TAO and
          the default implementation within Policy itself must be overruled by
          our derived classes.

        Tue Oct  5 14:06:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Policy_Strategy.h:
        * tao/PortableServer/Thread_Strategy.h:
          Renamed init to strategy_init to fix warning from the Borland
          compiler about hiding the init from service_config

        * tao/PortableServer/Servant_Retention_Strategy.{h,cpp}:
          Added some more methods which belong to this strategy, just a copy,
          didn't got things compiling yet, more has to move

        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
          Implemented this using the policy_creator

        * tao/PortableServer/PortableServer.cpp:
          Removed not needed includes

        * tao/PortableServer/POA.cpp:
          Implemented the create policy methods

        * tao/PortableServer/Lifespan_Strategy.h:
          Moved more methods to this strategy

        Tue Oct  5 13:50:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Policy_Creator_T.h:
          Template to create policies more easier. Still working on the
          introduction, just a checkin to be sure

        Tue Oct  5 09:46:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Adapter_Activator.h:
          Removed comment of Bala, got the idea

        * tao/PortableServer/POAManager.h:
          Reduced needed includes

        * tao/PortableServer/Adapter_Activator.cpp:
        * tao/PortableServer/Adapter_Activator.h:
        * tao/PortableServer/Default_Servant_Dispatcher.h:
        * tao/PortableServer/IdAssignmentPolicyFactory.cpp:
        * tao/PortableServer/IdAssignmentPolicyValue.h:
        * tao/PortableServer/PolicyFactory.cpp:
        * tao/PortableServer/PolicyFactory.h:
          Bala has added some remarks to these files

        Thu Sep 30 13:50:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Cached_Policies.h:
          Added ThreadStrategy, just to show the idea

        Thu Sep 30 13:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/POA_Guard.{h,cpp}:
        * tao/PortableServer/poa_macros.h
          Moved POA_Guard to the TAO::Portable_Server namespace

        Thu Sep 30 13:31:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Retention_Strategy.h:
          Added is_servant_in_map

        * tao/PortableServer/Upcall_Wrapper.h:
          No need to add path

        * tao/PortableServer/POA_Cachec_Policies.{h,cpp,i}:
          Renamed TAO_POA_Cached_Policies to Cached_Policies in the
          TAO::Portable_Server namespace.
          Added empty class Active_Policy_Strategies class, the idea is that
          each POA gets an instance of this class and uses the policy
          strategies by retrieving them from this class

        * tao/POA.{h,i}:
          Updated because of Cached_Policies change above

        Thu Sep 30 13:17:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter_Factory.h:
          Removed msvc push/pop, no need for it in this file

        Thu Sep 30 13:09:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Cached_Policies.h:
          Removed msvc push/pop, no need for it in this file

        Thu Sep 30 12:49:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.{h,cpp}:
        * tao/PortableServer/Object_Adapter_Factory.{h,cpp}:
          Moved Object_Adapter_Factory to its own file

        * tao/PortableServer/PortableServer.cpp:
          Because the Object_Adapter_Factory is in its own file, include that
          file instead of Object_Adapter.h

        * tao/PortableServer/POA.cpp:
          Include the LifespanPolicyFactory.

        Thu Sep 30 12:28:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Id_Assignment_Strategy.h:
          Added id_assignment_key_type() and id_assignment_key_type_length()
          methods, for each of the derived classes, implemented this.

        * tao/PortableServer/Lifespan_Strategy.h:
          Added lifespan_key_type() and lifespan_key_type_length()
          methods, for each of the derived classes, implemented this.

        * tao/PortableServer/POA.cpp (create_lifespan_policy):
          Implemented this method, we have to refactor the creation of the
          policies, to much code duplication

        * tao/PortableServer/Request_Processing_Strategy.h:
          Added get_servant_manager, set_servant_manager, get_servant and
          set_servant and implemented these methods for each of the types.

        Wed Sep 29 11:57:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Request_Processing_Strategy.h:
          Just class definition for this strategy.

        Wed Sep 29 11:33:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Retention_Strategy.h:
          Just class definition for this strategy.

        Wed Sep 29 09:30:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Id_Uniqueness_Strategy.h:
          Just class definition for this strategy.

        Wed Sep 29 09:30:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Id_Assignment_Strategy.h:
          Just class definition for this strategy.

        Wed Sep 29 09:22:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Policy_Strategy.h:
        * tao/PortableServer/Thread_Strategy.h:
          Moved Policy_Strategy to its own file

        * tao/PortableServer/Lifespan_Strategy.h:
        * tao/PortableServer/Activation_Strategy.h:
          Just class definitions for these strategies

        Sun Sep 26 14:52:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*.{h,cpp}:
          Moved everything from TAO::PortableServer to TAO::Portable_Server to
          prevent any accidents that a wrong namespace is taken

        Fri Sep 24 14:27:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*.{h,cpp}:
          Moved all new Policy Value classes to the TAO::PortableServer
          namespace. Renamed everything to match filenames. Everything
          compiles again, no testing done yet.
          Removed checks for _MSC_VER >= 1200

        Fri Sep 24 14:16:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/*_Value.{h,cpp}:
          Renamed these files, zapped all underscores so that filenames match
          the IDL files they belong to. Classes will be renamed soon

        * tao/PortableServer/POA_*.{h,cpp}:
          Removed POA prefix and underscores to match IDL files

        * tao/PortableServer/Loadable_*.{h,cpp}:
          Renamed to *Factory.{h,cpp}, classes will be renamed soon

        * tao/PortableServer/POA_Policy.{h,cpp}:
          Renamed to PolicyFactory.{h,cpp}

        Wed Sep 22 14:16:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Thread_Strategy.{h,cpp}:
          New file, contains some classes for the idea to implement the
          policy behaviour in strategies. Just a checkin to share ideas.

        Wed Sep 22 13:50:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ORT_Adapter_Factory.h:
        * tao/ObjRefTemplate/ORT_Adapter_Factory_Impl.{h,cpp}:
          Removed environment macro's, no need for them

        Wed Sep 22 13:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
          Improved loading of thread policy, same code as in the POA and the
          Policy factory, I like to factor this out to prevent code
          duplication.

        Wed Sep 22 12:31:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTPortableServer/RT_Policy_Validator.cpp:
          Replaced include of PortableServerC.h with LifespanPolicyC.h

        Wed Sep 22 11:49:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/POA.i:
        * tao/PortableServer/POA_Guard.{h,cpp}:
        * tao/PortableServer/poa_macros.h:
          Changed TAO_POA_Guard, to POA_Guard in the TAO namespace

        Wed Sep 22 10:21:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Loadable_*_Policy.{h,cpp}:
          Minor updates for values

        * tao/PortableServer/*_Policy_Value.{h,cpp}:
          New policy value files

        * tao/PortableServer/POA_Policies.{h,cpp,i}:
          Zapped these files

        * tao/PortableServer/Default_Policy_Validator.cpp:
          Removed include of POA_Policies, but had to include all *PolicyC.h
          files

        * tao/PortableServer/POA.cpp:
          Commented out some code, have to get a cleaner to implement each
          create policy method

        * tao/PortableServer/POA_Cached_Policies.{h,cpp}:
          Removed include of POA_Policies, but had to include all *PolicyC.h
          files

        * tao/PortableServer/POA_Policy_Set.h:
          Removed include of POA_Policies

        Wed Sep 22 07:42:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Loadable_*_Policy.{h,cpp}:
          New Loadable Policy files, one set for each Policy we have

        * tao/PortableServer/POA_Policy.h:
          Removed msvc pragma disable, not needed here

        Tue Sep 21 11:34:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Loadable_Thread_Policy.{h,cpp}:
        * tao/PortableServer/POA_Policy.h:
        * tao/PortableServer/POA_ThreadPolicy.cpp:
        * tao/PortableServer/Thread_Policy_Value.cpp:
        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
          Fixed emulated exception usage and work on Bala's comments

        * tao/PortableServer/Loadable_Thread_Policy.h:
        * tao/PortableServer/POA_ThreadPolicy.h:
        * tao/PortableServer/PortableServer.h:
        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
          Changed handling of Loadable_Thread_Policy and the usage of svc conf

        Tue Sep 21 11:34:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Loadable_Thread_Policy.h:
        * tao/PortableServer/POA_Policy.h:
        * tao/PortableServer/POA_ThreadPolicy.{h,cpp}:
          Bala has added some comments to these files

        Mon Sep 20 11:01:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.cpp:
          Replaced all ACE cast macro's with their C++ versions

        Mon Sep 20 09:19:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.{h,cpp}:
          Zapped all code that was guarded with #ifdef 0, it is old, and
          makes it a little bit more readable

        Fri Sep 17 14:07:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Thread_Policy.{h,cpp}:
          Let the constructor do nothing, make an init method to intialize the
          object, the init method with an Any can throw an exception and that
          is something we don't want to do in a constructor

        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
          Don't get the ThreadPolicyValue out of the Any here, just pass it to
          the Loadable_Thread_Policy and get it out of the Any in the
          POA_ThreadPolicy.

        * tao/PortableServer/Loadable_Thread_Policy.{h,cpp}:
          Added create method with an Any, this can throw exceptions

        Fri Sep 17 10:20:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Base.h:
          Replaced include of PortableServerC.h with PS_ForwardC.h

        * tao/PortableServer/Active_Object_Map.cpp:
          Added include of tao/SystemException.h

        Fri Sep 17 09:58:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp:
        * tao/PortableServer/Default_Acceptor_Filter.cpp:
        * tao/PortableServer/Default_Servant_Dispatcher.cpp:
        * tao/PortableServer/Key_Adapters.cpp:
        * tao/PortableServer/ORB_Manager.cpp:
        * tao/PortableServer/POA_Cached_Policies.cpp:
        * tao/PortableServer/POA_Guard.cpp:
        * tao/PortableServer/POA_Policies.cpp:
        * tao/PortableServer/POA_Policy_Set.cpp:
        * tao/PortableServer/POAManager.cpp:
        * tao/PortableServer/Servant_Dispatcher.cpp:
        * tao/PortableServer/ServerRequestInfo.cpp:
          Added or corrected ACE_RSCID's

        Fri Sep 17 09:38:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Active_Object_Map.h:
        * tao/PortableServer/Collocated_Object_Proxy_Broker.h:
        * tao/PortableServer/ORB_Manager.h:
        * tao/PortableServer/ORT_Adapter.h:
        * tao/PortableServer/PICurrent_Guard.h:
        * tao/PortableServer/POA_Policy.h:
        * tao/PortableServer/POA_Policy_Set.h:
        * tao/PortableServer/POA_Manager.h:
        * tao/PortableServer/Servant_Base.h:
        * tao/PortableServer/Upcall_Wrapper.h:
          Documentation improvements

        * tao/PortableServer/Key_Adapters.cpp:
          Replaced all ACE cast macros with C++ versions

        * tao/PortableServer/Key_Adapters.h:
          Instead of including PortableServerC.h, just include PS_ForwardC.h,
          this is enough

        * tao/PortableServer/Loadable_Thread_Policy.h:
        * tao/PortableServer/Thread_Policy_Value.h:
          Don't export svc config stuff

        Wed Sep 15 12:36:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Policy_Set.cpp:
          Removed workaround for vc5, that compiler is not supported anymore.

        Wed Sep 15 12:01:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Thread_Policy_Value.{h,cpp}:
          New file with the thread policy value base and derived classes,
          moved out of Loadable_Thread_Policy

        * tao/PortableServer/PortableServer_PolicyFactory.cpp:
        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
          Changed the way we retrieve the thread policy

        * tao/PortableServer.h:
          Added new *C.h files, without this existing apps don't build

        * tao/PortableServer.cpp:
          Added svc conf directives to process the new classes

        * tao/POA_Thread_Policy.{h,cpp}:
          Added missing policy_type method

        * tao/POA_Policies.{h,cpp}:
          Commented out the TAO_Thread_Policy, we have a new implementation

        Wed Sep 15 09:34:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orbsvcs/orbsvcs/PortableGroup/GOA.{h,cpp}:
        * tao/orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
        * tao/orbsvcs/orbsvcs/PortableGroup/PortableGroup_Loader.{cpp,h}:
        * tao/orbsvcs/orbsvcs/PortableGroup/PortableGroup_ORBInitializer.cpp:
        * tao/orbsvcs/orbsvcs/PortableGroup/PortableGroup_Request_Dispatcher.h:
          Changes to make TAO_GOA loadable as POA and use that, at the moment
          I created the branch it seems CosNaming didn't build, so I can't
          test this right now, have to move my branch forward one time.

        * tao/orbsvcs/orbsvcs/PortableGroup/POA_Hooks.{cpp,h}:
          Removed, functionality is now in TAO_GOA

        * tao/orbsvcs/orbsvcs/PortableGroup/PG_Object_Adapter_Factory.{h,cpp}:
          New files

        Wed Sep 15 08:39:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup.idl:
          Fixed this idl file (GOA part)

        Wed Sep 15 08:26:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Adapter.{h,cpp}:
        * tao/Adapter_Registry.{h,cpp}:
          Moved the TAO_Adapter_Registry class to its own file

        * tao/Adapter.i:
          Zapped, was empty

        * tao/ORB_Core.{h,cpp}:
        * tao/TAO_Internal.cpp:
          Updated includes/forward declarations because of file split

        Wed Sep 15 07:37:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orb_typesS.h:
          New file

        Tue Sep 14 12:45:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_ThreadPolicy.{cpp,h}:
          Intermediate commit, not finished yet.

        Tue Sep 14 12:17:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ORT_Adapter_Factory.h:
        * tao/ObjRefTemplate/ORT_Adapter_Factory_Impl.{h,cpp}:
          Removed exception spec from create/destroy method, for the destroy
          it is not needed, for the create, we could just return 0 in case of
          out of memory

        Tue Sep 14 11:26:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_ThreadPolicy.h:
          Added empty Thread_Policy_Value, just getting the complete picture
          together.

        Tue Sep 14 08:30:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableGroup_Hooks.{h,cpp}:
          Zapped these files, not needed anymore now we have a GOA in the
          PortableServer library

        * tao/ORB_Core.{h,cpp,i}:
          Zapped all functionality related to PortableGroup hooks, we don't
          need this anymore.

        Tue Sep 14 08:06:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/GOA*:
          Zapped these files

        * tao/orbsvcs/orbsvcs/PortableGroup.idl:
          Added GOA interface here

        * tao/orbsvcs/orbsvcs/GOA.{h,cpp,inl}:
          Moved the GOA to this place, implementation has to be made correct,
          POA hook is not needed anymore, must be loadable by service
          configurator. By moving this now I can cleanup some more stuff in
          the ORB.

        Mon Sep 13 12:11:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_ThreadPolicy.h:
          Added methods required from the Policy interface

        Thu Sep  9 14:07:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Loadable_Thread_Policy.{h,cpp}:
          First version, also have to work on these

        Thu Sep  9 13:57:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_ThreadPolicy.h:
          Temporary checkin, have to work on this

        Thu Sep  9 13:32:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA_Policy.{h,cpp}:
          Base for the new loadable policies

        Thu Sep  9 13:25:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/GOA.{h,cpp}:
          First version, still here, move it later, just making sure the GOA
          stuff doesn't get lost.

        Thu Sep  9 10:28:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Endpoints.pid:
          No need to include orb.idl

        * tao/IIOP_EndpointsC.{h,cpp,i,inl}:
        * tao/IIOP_EndpointsA.cpp:
          Regenerated

        * tao/diffs/IIOP_Endpoints.diff:
          Zapped this file, no diffs needed anymore

        Thu Sep  9 10:28:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IOP_IOR.pid:
          No need to include orb.idl

        * tao/IOP_IORC.{h,cpp,i,inl}:
        * tao/IOP_IORA.cpp:
          Regenerated

        * tao/diffs/IOP_IOR.diff:
          Zapped this file, no diffs needed anymore

        Thu Sep  9 10:09:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTPortableServer/RTPortableServerC.{h,cpp,i,inl}:
        * tao/RTPortableServer/RTPortableServerA.cpp:
          Regenerated

        * tao/RTPortableServer/diffs/RTPortableServer.diff:
          Updated

        * tao/RTPortableServer/RT_POA.i:
          Include POA_Guard.h

        Thu Sep  9 10:00:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp}:
          Removed all GOA stuff, will put this in a new GOA class. Will follow
          later, first get everything building again

        * tao/PortableServer/PortableGroup_Hooks.cpp:
          Include GOAC.h

        Thu Sep  9 09:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orb.idl:
        * tao/orb_types.pidl:
          Moved ValueModifier and Visibility to orb.idl again, not really
          needed and causes problems with valuetype library

        * tao/orb_typesC.{h,cpp,inl}:
        * tao/orb_typesA.cpp:
          Regenerated

        * tao/OBV_Constants.h:
          Updated because of move

        * tao/ObjRefTemplate/Object_Reference_Template_i.cpp:
          Replaced tao_poa_downcast with dynamic cast

        Thu Sep  9 08:00:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orb.idl:
        * tao/orb_types.pidl:
          Moved the typedefs from orb.idl to orb_types.pidl. This makes it
          possiblet to just get the types without all other stuff that is
          included in orb.idl

        * tao/orb_typesC.{h,cpp,inl}:
        * tao/orb_typesA.cpp:
          New generated files

        * tao/OBV_Constants:
          Removed typedefs, include orb_typesC.h instead

        * tao/ORB.h:
          Removed typedefs that are now in orb_types. Also removed
          valuetype_factory_map_ members which was ifdefed out

        * tao/Typecode_Constants.cpp:
          Removed orb_id, this is now in orb_typesA.cpp

        * tao/Typecode.cpp:
          Added include of orb_typesC.h

        * tao/PortableServer/PortableServer.pidl:
        * tao/PortableServer/ServantLocator.pidl:
          No need to include orb.idl, only need orb_types.pidl

        * tao/PortableServer/*Policy.pidl:
          Because PortableServer.pidl doesn't include orb_types.pidl, we don't
          get Policy.pidl for free anymore, we have to explicit include it
          here

        * tao/PortableServer/*C.{h,cpp,inl}:
        * tao/PortableServer/*A.cpp:
        * tao/PortableServer/diffs/*:
          Regenerated all these files

        Wed Sep  8 14:15:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/POA.{h,cpp,i}:
        * tao/PortableServer/POA_Guard.{h,cpp}:
        * tao/PortableServer/Object_Adapter.cpp:
          Moved TAO_POA_Guard to its own file

        Wed Sep  8 14:02:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Adapter_Activator.{h,cpp}:
        * tao/PortableServer/POA.{h,cpp}:
          Moved the TAO_Adapter_Activator to its own file

        Wed Sep  8 12:52:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/diffs/*.diff:
          Serveral new diffs

        * tao/PortableServer/*C.{h,cpp,inl}:
          Several new generated files

        * tao/PortableServer/POA.{h,cpp}:
          Removed tao_poa_downcast, use dynamic cast
          Also inherit from GOA, this will be moved soon.

        * tao/PortableGroup_Hooks.h:
          Temporarily removed checks for minimum poa, this has to move
          together with the GOA to the PortableGroup library.

          Also used the minimum corba 1.0 spec to remove the parts we don't
          use with minimum corba.

        Wed Sep  8 10:07:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/diffs/PS_Forward.diff:
        * tao/PortableServer/diffs/ServantLocator.diff:
          New diffs to be applied after regeneration

        Wed Sep  8 08:59:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Connection_Handler.{h,cpp,i}:
          Zapped tss_resources, we don't need to store them

        * tao/ORB_Core.{h,cpp}:
          Zapped inherit_from_parent_thread

        Wed Sep  8 08:14:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableServer.pidl:
          Splitted this file into the new files below to be able to refactor
          things

        * tao/PortableServer/POAManager.pidl:
          PortableServer::POAManager

        * tao/PortableServer/PS_Current.pidl:
          PortableServer::Current

        * tao/PortableServer/PS_Forward.pidl:
          Some forward declarations and typedefs needed in several files

        * tao/PortableServer/AdapterActivator.pidl:
        * tao/PortableServer/IdAssignmentPolicy.pidl:
        * tao/PortableServer/IdUniquenessPolicy.pidl:
        * tao/PortableServer/ImplicitActivationPolicy.pidl:
        * tao/PortableServer/LifespanPolicy.pidl:
        * tao/PortableServer/RequestProcessingPolicy.pidl:
        * tao/PortableServer/ServantRetentionPolicy.pidl:
        * tao/PortableServer/ThreadPolicy.pidl:
          All available policies, each in its own file

        * tao/PortableServer/ServantActivator.pidl:
          PortableServer::ServantActivator

        * tao/PortableServer/ServantLocator.pidl:
          PortableServer::ServantLocator

        * tao/PortableServer/ServantManager.pidl:
          PortableServer::ServantManager

        * tao/PortableServer/GOA.pidl:
          The MIOP related methods, in the latest spec, these are in the GOA
          interface (Group Object Adapter), which is derived from the POA,
          this GOA will be moved later to PortableGroup.

Tue Feb 15 21:47:15 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be_include/be_interface.h:

          Removed the static method queryinterface_helper(), which is
          no longer used.

        * TAO_IDL/be/be_visitor_component/component_ch.cpp:

          Removed generation of the static in _tao_class_id. It is
          not used and was removed from interface code generation
          some time ago.

Tue Feb 15 18:09:46 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/Makefile.am:

          Regenerated.

Tue Feb 15 14:10:33 2005  Chad Elliott  <elliott_c@ociweb.com>

        * TAOACE.mwc:

          Changed ../protocols/ace/HTBP to ../protocols to get RMCast and
          TMCast too.

Tue Feb 15 14:04:51 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Notify/MT_Dispatching/run_test.pl:

          Corrected an error when resetting the consumer and supplier
          arguments.  The exe name was accidentally added to the arguments
          too.

Tue Feb 15 13:29:35 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/AV/AVStreams_i.h:

          Removed an unused #include of Trader.h.

        * orbsvcs/orbsvcs/Notify/XML_Loader.cpp:

          Changed messages to not use the word Error to avoid potential
          problems with the Scoreboard.

        * orbsvcs/orbsvcs/Notify/XML_Saver.cpp:

          Fixed a bug in the output code to include a missing space.

        * orbsvcs/tests/Notify/XML_Persistence/main.cpp:
        * orbsvcs/tests/Notify/XML_Persistence/run_test.pl:

          Added a persistent POA to help with IOR comparisons.  It's not
          100% perfect, but it's better than it was.

        * orbsvcs/tests/Notify/XML_Persistence/svc.conf:

          Changed the case of persistence to match the
          TAO_CosNotification_Persistence library.

Tue Feb 15 07:09:41 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:

          Added generation of forward declaration of the associated
          event consumer interface, if the valuetype node being
          processed happens to be an eventtype. Also added the _ptr
          typedef, so it can be seen by a component declaration
          that occurs later in the same scope.

        * TAO_IDL/be/be_visitor_component/component_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:

          Changed return values of some generated methods that
          return CORBA::Boolean to return 'true' or 'false'
          instead of '1' or '0'.

        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp (_tao_duplicate):

          Added code generation to initialize the declaration of the
          return value pointer to 0. Thanks to Johnny Willemsen
          <jwillemsen@remedy.nl> for making the suggestion.

Tue Feb 15 10:53:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/performance-tests/RTEvent/lib/Servant_var.h:
        * orbsvcs/performance-tests/RTEvent/lib/Auto_Disconnect.h:
          Replaced ACE_EXPLICIT with explicit

Tue Feb 15 08:31:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORBInitializer_Registry.cpp:
          Fixed problem in static template member instantiation, thanks to
          Werner Buchert <w dot buchert at medat dot de> for reporting
          this

Mon Feb 14 23:05:55 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_recursive.cpp:
        * TAO_IDL/be/be_eventtype.cpp:
        * TAO_IDL/be/be_visitor_arg_traits.cpp:
        * TAO_IDL/be/be_visitor_factory.cpp:
        * TAO_IDL/be/be_visitor_module.cpp:
        * TAO_IDL/be/be_visitor_root.cpp:
        * TAO_IDL/be/be_visitor_valuetype.cpp:
        * TAO_IDL/be/be_visitor_valuetype_fwd.cpp:
        * TAO_IDL/be/be_visitor_module/module.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/marshal_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_sh.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_si.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ss.cpp:
        * TAO_IDL/be/be_visitor_valuetype_fwd/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype_fwd/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype_fwd/valuetype_fwd_ch.cpp:
        * TAO_IDL/be_include/be_codegen.h:
        * TAO_IDL/be_include/be_visitor_valuetype/any_op_ch.h:
        * TAO_IDL/be_include/be_visitor_valuetype/any_op_cs.h:
        * TAO_IDL/be_include/be_visitor_valuetype/cdr_op_ch.h:
        * TAO_IDL/be_include/be_visitor_valuetype/cdr_op_cs.h:
        * TAO_IDL/be_include/be_visitor_valuetype/field_cdr_cs.h:
        * TAO_IDL/be_include/be_visitor_valuetype/field_ch.h:
        * TAO_IDL/be_include/be_visitor_valuetype/field_ci.h:
        * TAO_IDL/be_include/be_visitor_valuetype/field_cs.h:
        * TAO_IDL/be_include/be_visitor_valuetype/marshal_ch.h:
        * TAO_IDL/be_include/be_visitor_valuetype/marshal_cs.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_ch.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_ci.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_cs.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_init.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_init_ch.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_init_ci.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_init_cs.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_obv_ch.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_obv_ci.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_obv_cs.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_sh.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_si.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_ss.h:
        * TAO_IDL/be_include/be_visitor_valuetype_fwd/any_op_ch.h:
        * TAO_IDL/be_include/be_visitor_valuetype_fwd/cdr_op_ch.h:
        * TAO_IDL/be_include/be_visitor_valuetype_fwd/valuetype_fwd_ch.h:

          - Removed all eventtype visitors, they all just delegate to
            the corresponding valuetype visitor. Added visit_eventtype()
            methods to valuetype visitors where necessary so the delegation
            can be done within the valuetype visitor itself and still
            keep the polymorphism in be_eventtype::visit_eventtype(),
            since the arg traits and ccm-preproc visitors still need
            it.

          - Changed error checking to allow a struct/union/sequence/array
            defined inside an interface to contain that interface
            as a member or element type, that is, this is no longer
            regarded by the IDL compiler as illegal recursion. Thanks to
            Don Sharp <dws@prismtech.com> for bringing this up.

          - Fixed bug that aborted the IDL compiler when an eventtype
            contained a constant declaration. Thanks to Steven Baker
            <Steven_D_Baker@raytheon.com> for reporting the bug.

        * tests/IDL_Test/interface.idl:

          Expanded sample IDL file sent in by Don Sharp in the
          second list item above and added it to the test suite.

        * TAO_IDL/be/be_visitor_eventtype.cpp:
        * TAO_IDL/be/be_visitor_eventtype_fwd.cpp:
        * TAO_IDL/be/be_visitor_eventtype/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_eventtype/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_eventtype/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_eventtype/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_eventtype/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_eventtype/eventtype_ch.cpp:
        * TAO_IDL/be/be_visitor_eventtype/eventtype_ci.cpp:
        * TAO_IDL/be/be_visitor_eventtype/eventtype_cs.cpp:
        * TAO_IDL/be/be_visitor_eventtype/eventtype_obv_ch.cpp:
        * TAO_IDL/be/be_visitor_eventtype/eventtype_obv_ci.cpp:
        * TAO_IDL/be/be_visitor_eventtype/eventtype_obv_cs.cpp:
        * TAO_IDL/be/be_visitor_eventtype/eventtype_sh.cpp:
        * TAO_IDL/be/be_visitor_eventtype/eventtype_si.cpp:
        * TAO_IDL/be/be_visitor_eventtype/eventtype_ss.cpp:
        * TAO_IDL/be/be_visitor_eventtype_fwd/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_eventtype_fwd/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_eventtype_fwd/eventtype_fwd_ch.cpp:
        * TAO_IDL/be_include/be_visitor_eventtype.h:
        * TAO_IDL/be_include/be_visitor_eventtype_fwd.h:
        * TAO_IDL/be_include/be_visitor_eventtype/any_op_ch.h:
        * TAO_IDL/be_include/be_visitor_eventtype/any_op_cs.h:
        * TAO_IDL/be_include/be_visitor_eventtype/cdr_op_ch.h:
        * TAO_IDL/be_include/be_visitor_eventtype/cdr_op_ci.h:
        * TAO_IDL/be_include/be_visitor_eventtype/cdr_op_cs.h:
        * TAO_IDL/be_include/be_visitor_eventtype/eventtype_ch.h:
        * TAO_IDL/be_include/be_visitor_eventtype/eventtype_ci.h:
        * TAO_IDL/be_include/be_visitor_eventtype/eventtype_cs.h:
        * TAO_IDL/be_include/be_visitor_eventtype/eventtype_obv_ch.h:
        * TAO_IDL/be_include/be_visitor_eventtype/eventtype_obv_ci.h:
        * TAO_IDL/be_include/be_visitor_eventtype/eventtype_obv_cs.h:
        * TAO_IDL/be_include/be_visitor_eventtype/eventtype_sh.h:
        * TAO_IDL/be_include/be_visitor_eventtype/eventtype_si.h:
        * TAO_IDL/be_include/be_visitor_eventtype/eventtype_ss.h:
        * TAO_IDL/be_include/be_visitor_eventtype_fwd/any_op_ch.h:
        * TAO_IDL/be_include/be_visitor_eventtype_fwd/cdr_op_ch.h:
        * TAO_IDL/be_include/be_visitor_eventtype_fwd/eventtype_fwd_ch.h:

          Files removed as part of the fix in the first listed item
          above.

Mon Feb 14 09:25:27 2005  Ciju John  <john_c@ociweb.com>

        * orbsvcs/tests/Notify/MT_Dispatching/run_test.pl:
          Cleaned out consumer/supplier argument list on each test iteration.

Mon Feb 14 10:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/performance-tests/RTEvent/lib/Implicit_Deactivator.h:
          Replaced ACE_EXPLICIT with explicit

Sun Feb 13 13:32:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport.h:
        * tao/Wait_Strategy.h:
          Doxygen improvements

Fri Feb 11 11:12:56 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Valuetype/ValueBase.inl (is_end_tag):

          Removed comparison that is always true.  Addresses warning
          exhibited by g++ 3.3.4.

Fri Feb 11 08:42:25 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/TAO_Service/TAO_Service.cpp:
        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:
        * tao/CDR.cpp:
        * tao/Connector_Registry.cpp:
        * tao/ORB_Core.cpp:
        * tao/UTF16_BOM_Factory.cpp:
        * utils/NamingViewer/BindDialog.cpp:
        * utils/NamingViewer/BindNewContext.cpp:
        * utils/NamingViewer/NamingTreeCtrl.cpp:
        * utils/NamingViewer/NamingViewer.mpc:
        * utils/NamingViewer/NamingViewer.cpp:
        * utils/NamingViewer/NamingViewerDlg.h:
        * utils/NamingViewer/NamingViewerDlg.cpp:
        * utils/NamingViewer/SelectNSDialog.cpp:
        * utils/NamingViewer/ViewIORDialog.cpp:
        * utils/catior/catior.cpp:
        * utils/catior/catior.mpc:
        * utils/nslist/nsadd.cpp:
        * utils/nslist/nsdel.cpp:
        * utils/nslist/nslist.cpp:
        * utils/nslist/nslist.mpc:

          Added better support for EVC 4.  It is not complete, but now the
          CosNaming library (among other things) can be built.

Fri Feb 11 07:29:34 2005  Ciju John  <john_c@ociweb.com>

        * orbsvcs/tests/Notify/Reconnecting/run_test.pl:
        * orbsvcs/tests/Notify/Discarding/run_test.pl
        * orbsvcs/tests/Notify/MT_Dispatching/run_test.pl
        * orbsvcs/tests/Notify/Structured_Filter/run_test.pl
        * orbsvcs/tests/Notify/Structured_Multi_Filter/run_test.pl
        * orbsvcs/tests/Notify/performance-tests/Filter/run_test.pl
          Some Notification test scripts were timing out on the
          scoreboard. Increased the wait-time.

Fri Feb 11 07:08:12 2005  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/lex.yy.cpp.diff:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/y.tab.h:
        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/fe/y.tab.cpp.diff:
        * TAO_IDL/tao_idl.mpc:

          Brought the ll and yy files back into sync with the cpp files that
          had been modified independently.  I also added targets to the mpc
          file to regenerate lex.yy.cpp, y.tab.cpp and fe_lookup.cpp based
          on the original Makefile targets.  The generated code (aside from
          whitespace) is virtually the same as the previous version.

Fri Feb 11 10:08:39 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Services.pidl:
          Updated regeneration instructions

Fri Feb 11 09:41:39 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/POA/Forwarding/client.cpp:
          When an exception is caught print out that it is caught in the
          client.

        * examples/POA/Forwarding/server.cpp:
          When an exception is caught print out that it is caught in the
          server. Moved the parsing of the arguments after ORB::init so
          that without problems additional orb arguments can be passed

Fri Feb 11 09:19:39 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/run_test.pl:
        * orbsvcs/tests/AVStreams/Multicast/run_test.pl:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/run_test.pl:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/run_test.pl:
          When the spawn of the naming service fails exit directly from the
          test script instead of waiting on the timeout of the ior file

        * orbsvcs/tests/Notify/Basic/run_test.pl:
        * orbsvcs/tests/Notify/Blocking/run_test.pl:
        * orbsvcs/tests/Notify/Discarding/run_test.pl:
        * orbsvcs/tests/Notify/Lanes/run_test.pl:
        * orbsvcs/tests/Notify/Ordering/run_test.pl:
        * orbsvcs/tests/Notify/Reconnecting/run_test.pl:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/run_test.pl:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/run_test.pl:
        * orbsvcs/tests/Notify/Structured_Filter/run_test.pl:
        * orbsvcs/tests/Notify/ThreadPool/run_test.pl:
          When the naming service or notify service fails to spawn, kill the
          already started processes and exit instead of waiting for the timeout
          of the IOR file

Thu Feb 10 07:07:39 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO version 1.4.4 released.

Mon Feb  7 21:49:48 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/TAO_FTORB_Utils.pc.in:
        * orbsvcs/orbsvcs/TAO_FT_ClientORB.pc.in:
        * orbsvcs/orbsvcs/TAO_FT_ServerORB.pc.in:
        * orbsvcs/orbsvcs/TAO_FaultTolerance.pc.in:
        * orbsvcs/orbsvcs/TAO_PortableGroup.pc.in:

          New files, pkg-config *.pc templates.

Mon Feb  7 21:54:58 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicAny/DynStruct_i.cpp (to_any):

          Removed unused local variable.

Mon Feb  7 21:22:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicAny/DynStruct_i.cpp:
          Removed not used variable and replaced ACE cast macros with their
          C++ version

Mon Feb  7 13:24:23 2005  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Remote_Invocation.cpp:
        * tao/Transport.cpp:
        * tao/Transport.h:

          In order to ensure that request headers are not translated, I
          added a new transport method, clear_translators() that is called
          by TAO_Remote_Invocation::write_header. This is necesssary to
          avoid problems brought on by reusing CDR streams.

Mon Feb  7 08:49:46 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Log/LogRecordStore.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.cpp:
        * tao/Any_Array_Impl_T.cpp:
        * tao/Any_Basic_Impl_T.cpp:
        * tao/Any_Special_Impl_T.cpp:
        * tao/Any_Unknown_IDL_Type.cpp:
        * tao/DynamicAny/DynArray_i.cpp:
        * tao/DynamicAny/DynSequence_i.cpp:
        * tao/DynamicAny/DynStruct_i.cpp:
        * tao/DynamicAny/DynUnion_i.cpp:

          Fixed various minor problems overlooked in

          Sun Feb  6 19:46:23 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

Mon Feb  7 14:45:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Trading/run_test.pl:
          When we can't start the Trading_Service, directly exit instead of
          waiting another 20 seconds for a file that doesn't appear

Mon Feb  7 13:09:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/Connection_Timeout_Policy_i.h:
        * tao/Messaging/Messaging_ORBInitializer.h:
        * tao/Messaging/Messaging_Policy_i.h:
        * tao/Messaging/Messaging_PolicyFactory.h:
          Simplified msc_ver checks

        * tao/Messaging/Messaging.pidl:
        * tao/Messaging/Messaging_No_Impl.pidl:
        * tao/Messaging/Messaging_RT_Policy.pidl:
        * tao/Messaging/Messaging_SyncScope_Policy.pidl:
        * tao/Messaging/TAO_Ext.pidl:
          Updated regeneration instructions

        * tao/Messaging/diffs/Messaging.diff:
        * tao/Messaging/diffs/Messaging_No_Impl.diff:
          Updated

        * tao/Messaging/Messaging_No_Impl{A,C}.{h,cpp,i,inl}:
        * tao/Messaging/Messaging_RT_Policy{A,C}.{h,cpp,i,inl}:
        * tao/Messaging/Messaging_SyncScopy_Policy{A,C}.{h,cpp,i,inl}:
        * tao/Messaging/Messaging{A,C,S,S_T}.{h,cpp,i,inl}:
        * tao/Messaging/TAO_Ext{A,C}.{h,cpp,i,inl}:
          Regenerated all these files, added new A.cpp files and replaced .i
          with .inl files.

        * tao/Makefile.am:
          Updated for changes above

Mon Feb  7 10:43:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicAny/DynamicAnyC.cpp:
          Regenerated

Mon Feb  7 10:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CDR_Encaps_Codec.cpp:
          Removed not used variable

        * Release:
          Changed INSTALL to TAO-INSTALL so that this file is generated

Sun Feb  6 19:46:23 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/ifr_adding_visitor_union.cpp:
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.cpp:
        * orbsvcs/orbsvcs/IFRService/ConstantDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Log/PersistStore.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.cpp:
        * tao/Any.cpp:
        * tao/Any.h:
        * tao/Any_Array_Impl_T.cpp:
        * tao/Any_Basic_Impl.cpp:
        * tao/Any_Basic_Impl_T.cpp:
        * tao/Any_Dual_Impl_T.cpp:
        * tao/Any_Impl.cpp:
        * tao/Any_Impl.h:
        * tao/Any_Impl_T.cpp:
        * tao/Any_Special_Impl_T.cpp:
        * tao/Any_SystemException.cpp:
        * tao/Any_Unknown_IDL_Type.cpp:
        * tao/Any_Unknown_IDL_Type.h:
        * tao/CDR_Encaps_Codec.cpp:
        * tao/Typecode.cpp:
        * tao/append.cpp:
        * tao/skip.cpp:
        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynArray_i.cpp:
        * tao/DynamicAny/DynCommon.cpp:
        * tao/DynamicAny/DynEnum_i.cpp:
        * tao/DynamicAny/DynSequence_i.cpp:
        * tao/DynamicAny/DynStruct_i.cpp:
        * tao/DynamicAny/DynUnion_i.cpp:
        * tao/DynamicInterface/DII_Invocation.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
        * tests/DynAny_Test/analyzer.cpp:
        * tests/DynAny_Test/test_dynsequence.cpp:
        * tests/Param_Test/except.cpp:
        * tests/Param_Test/small_union.cpp:

          Changed implementation of class TAO::Any_Unknown_IDL_Type to
          have a TAO_InputCDR member instead of ACE_Message_Block*.
          This change not only makes usage of codeset translators
          easier during Any extraction (which was the original
          impetus for opening up this issue) but also cleans up
          some of the alignment and memory management code formerly
          needed when handling this subclass of TAO::Any_Impl.

Sat Feb  5 21:12:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/diffs/Messaging_RT_Policy.diff:
        * tao/Messaging/diffs/Messaging_SyncScope_Policy.diff:
        * tao/Messaging/diffs/TAO_ExtC.diff:
          Removed these empty files

Fri Feb  4 18:00:03 2005  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:

          Followed the same protocol as applied in "Thu Feb  3 19:27:58
          2005  Balachandran Natarajan  <bala@dre.vanderbilt.edu>".

Fri Feb  4 15:09:22 2005  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.i:

          In an effort to resolve multithreaded issues in the SSLIOP
          connector, the assignment of security attributes to the endpoint
          are now guarded by the same lock used to guard access to these
          parameters.

Fri Feb  4 11:17:32 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Profile.cpp (TAO_Profile):

          Updated order of attributes in constructor base member
          initializer lists to match new attribute declaration order.

Fri Feb  4 11:13:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/SystemException.cpp:
          Added several missing error texts.

        * tao/LocalObject.cpp:
          Changed _get_component, _get_interface, _get_policy,
          _set_policy_overrides, _get_policy_overrides, _validate_connection
          to throw a CORBA::NO_IMPLEMENT system exception with minor code 8
          as described by the latest corba spec.

Fri Feb  4 01:25:05 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/IIOP_Endpoint.h:
        * tao/Object.h:
        * tao/Profile.h:
        * tao/Profile_Transport_Resolver.h:
        * tao/params.h:

          Optimized class/struct attribute declaration order to reduce
          alignment padding, hence the overall size of the class/struct.

        * tao/IIOP_Endpoint.cpp:
        * tao/Object.cpp:
        * tao/Object.i:
        * tao/Profile.cpp:
        * tao/Profile_Transport_Resolver.inl:
        * tao/params.cpp:

          Updated order of attributes in constructor base member
          initializer lists accordingly.

Thu Feb  3 19:27:58 2005  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Messaging/Asynch_Reply_Dispatcher.cpp (reply_timed_out):

          A slightly modified fix for [BUGID2038]. Once Torsten confirms
          this works, I will close the bugzilla entry.

Thu Feb  3 19:14:17 2005  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:

          Reverted this patch "Thu Jan 27 20:01:21 2005  Balachandran
          Natarajan  <bala@dre.vanderbilt.edu>"

Wed Feb  2 22:17:49 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_arg_traits.cpp:
        * TAO_IDL/be/be_visitor_array/array_cs.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp:

          Changed C-style casts in generated code for arrays
          to c++-style casts. Thanks again to Johhny Willemsen
          <jwillemsen@remedy.nl> for digging these up.

Wed Feb  2 20:25:18 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_arg_traits.cpp:
        * TAO_IDL/be_include/be_visitor_arg_traits.h:

          Added visit_attribute() method, which tales action
          only if the attribute type is an unaliased bounded (w)string.
          Thanks to Gary Maxey <gary.maxey@hp.com> for sending in
          the example IDL file that showed that the arg_traits
          visitor was not handling this case.

        * tests/IDL_Test/interface.idl:

          Added Gary Maxey's example IDL file to the test.

Wed Feb  2 19:26:22 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_sequence.cpp:

          Added missing comma in template parameter list of bounded
          CORBA::Object sequence base class. Thanks to Gary Maxey
          <gary.maxey@hp.com> for tracking down the problem.

Wed Feb  2 06:45:59 2005  Chad Elliott  <elliott_c@ociweb.com>

        * NEWS:

          Updated with information about PMB and GIOP fragments.

Wed Feb  2 09:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Utilization_Monitor.cpp:
          Use ACE_OS::strtok instead of strtok directly and replaced usage
          of NULL with 0

        * orbsvcs/orbsvcs/PortableGroup/PG_PropertyManager.h:
          Include SString.h instead of SStringfwd.h to fix compile errors
          with vc71

Tue Feb  1 20:02:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IFR_Client/IFR_BaseC.cpp:
        * tao/IFR_Client/IFR_BasicC.cpp:
        * tao/IFR_Client/IFR_ComponentsC.cpp:
        * tao/IFR_Client/IFR_ExtendedC.cpp:
          Regenerated with the latest version of the TAO_IDL compiler

Tue Feb  1 19:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServerObjectC.cpp:
        * tao/PortableServer/ServerObjectA.cpp:
        * tao/PortableServer/ImplRepoC.cpp:
        * tao/PortableServer/ImplRepoA.cpp:
          Regenerated with the latest version of the TAO_IDL compiler

Tue Feb  1 18:35:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ObjRefTemplate/Default_ORTC.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.cpp:
          Regenerated

Tue Feb  1 11:17:10 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:

          - Converted more generated C-style casts to C++-style casts, in
            _is_a() (stub side), _non_existent_skel(), _is_a_skel(),
            _interface_skel(), and _component_skel().

          - Refactored generated code for _this() to eliminate an
            IF block.

          Thanks to Johnny Willemsen <jwillemsen@remedy.nl> for
          the above suggestions.

        * tao/Any_Array_Impl_T.cpp:

          Added #include of SystemException.h. The definition of
          _tao_decode() at the end of the file now seems to need it.

Tue Feb  1 13:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/FlResource.mpc:
        * tao/QtResource.mpc:
        * tao/tao.mpc:
        * tao/TkResource.mpc:
        * tao/XtResource.mpc:
          Removed taoversion as base project. This will be removed because it
          results in the fact that each generated GNU makefile will get the
          version number generated. We want that the GNU make rules get the
          version number from Version.h

Tue Feb  1 13:24:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/diffs/IOP.diff:
          Removed, not needed

        * tao/IOPC.{h,cpp,i,inl}:
          Regenerated and replace .i with .inl file

        * tao/Makefile.am:
          Updated because of change above

Tue Feb  1 13:04:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CurrentA.cpp:
        * tao/CurrentC.{h,cpp}:
        * tao/Policy_ForwardA.cpp:
          Regenerated

        * tao/Policy_ForwardC.{h,cpp,i,inl}:
          Regenerated and replace .i with .inl file

        * tao/Makefile.am:
          Updated because of change above

        * tao/diffs/Policy_Forward.diff:
          Updated

        * tao/IORTable/diffs/IORTable.diff:
          Removed this empty file

Tue Feb  1 12:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IORInterceptor/IORInfoC.{h,cpp,inl}:
        * tao/IORInterceptor/IORInterceptorC.{h,cpp,inl}:
          Regenerated

Tue Feb  1 11:07:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicAny/DynamicAnyC.{h,cpp,i,inl}:
          Regenerated and replace .i with .inl file

        * tao/Makefile.am:
          Updated because of change above

        * tao/DynamicAny/diffs/DynamicAny.diff:
          Updated

Tue Feb  1 10:58:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ObjRefTemplate/ObjectReferenceTemplateA.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.{h,cpp,inl}:
          Regenerated with the latest version of the TAO_IDL compiler

Tue Feb  1 10:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IFR_Service/*C.{h,cpp,inl}:
        * tao/IFR_Service/*A.{cpp}:
          Regenerated with the latest version of the TAO_IDL compiler

Tue Feb  1 10:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Object.h:
          Removed check for GNU 2.8 or newer, older versions aren't supported
          anymore

Tue Feb  1 10:06:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServerObject*.*:
        * tao/PortableServer/ImplRepo*.*:
          Regenerated with the latest version of the TAO_IDL compiler

Mon Jan 31 20:42:11 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Utilization_Monitor.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_PropertyManager.h:

          Added missing header include directives that are necessary due
          to inter-header dependency reductions in ACE.

Mon Jan 31 16:56:25 2005  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/SSLIOP_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP_Endpoint.cpp:
        * orbsvcs/orbsvcs/SSLIOP_Endpoint.h:
        * orbsvcs/orbsvcs/SSLIOP_Endpoint.i:

          Modified the order of execution in ssliop_connect. The change to
          SSLIOP_Endpoint was to add an explicit flag for determining that
          initialization was complete. The problem this addresses is that
          the SSLIOP_Endpoint is used to query the connection cache before
          all of its state is set. The qop, trust, and credentials members
          are all set after the query, but before a new connection is
          bound to the cache. This leads to redundant connections in the
          cache if two or more SSLIOP_endpoints happen to point to the
          same peer using the same security options.

        * orbsvcs/tests/Security/MT_SSLIOP/Client_Worker.cpp:
        * orbsvcs/tests/Security/MT_SSLIOP/Client_Worker.h:
        * orbsvcs/tests/Security/MT_SSLIOP/client.cpp:
        * orbsvcs/tests/Security/MT_SSLIOP/server.cpp:
        * orbsvcs/tests/Security/MT_SSLIOP/test.idl:
        * orbsvcs/tests/Security/MT_SSLIOP/test_i.cpp:
        * orbsvcs/tests/Security/MT_SSLIOP/test_i.h:
        * orbsvcs/tests/Security/MT_SSLIOP/test_i.i:

          Added a second interface to the test so that the behavior
          indicated above could be tested.

Mon Jan 31 16:06:28 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:

          - In the generated _nil() method for interfaces, changed
            the C-style cast of 0 to the *_ptr type to a C++-style
            static_cast<>.

          - In the generated _is_a() method for the skeleton, removed
            the unnecessary cast to char* on the first argument
            passed to ACE_OS::strcmp().

          - Also in the generated _is_a() method for the skeleton,
            changed the 'if (...) return 1 else return 0;' style
            to just 'return (...)' since the expression (..)
            already evaluates to the required boolean return type.

          Thanks to Johnny Willemsen <jwillemsen@rememedy.nl> for
          suggesting the first two of the above changes.

Mon Jan 31 15:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.h:
          Added missing header include directives that are necessary due
          to inter-header dependency reductions in ACE.

Mon Jan 31 15:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/LoadBalancing/LB_ObjectReferenceFactory.h:
          Added missing header include directives that are necessary due
          to inter-header dependency reductions in ACE.

Mon Jan 31 15:31:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/ImplRepo_Service/Activator_NT_Service.cpp:
          Added missing header include directives that are necessary due
          to inter-header dependency reductions in ACE.

Mon Jan 31 15:26:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/ImR/Combined_Service/combined.cpp:
          Added missing header include directives that are necessary due
          to inter-header dependency reductions in ACE.

Mon Jan 31 11:12:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/AV/QoS_UDP.h:
          Added missing header include directives that are necessary due
          to inter-header dependency reductions in ACE.

Mon Jan 31 07:55:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/NamingViewer/SelectNSDialog.cpp:
        * utils/NamingViewer/NamingViewer.cpp:
          Fixed part of the compile errors in the unicode builds

Sun Jan 30 20:47:11 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * examples/Simple/time-date/server.cpp:

          Fixed syntax error in ACE_RCSID macro argument.

Sun Jan 30 19:57:37 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * examples/Content_Server/AMI_Iterator/Iterator_Factory_i.cpp:
        * examples/Content_Server/AMI_Iterator/Iterator_Handler.cpp:
        * examples/Content_Server/AMI_Observer/Callback_i.cpp:
        * examples/Content_Server/AMI_Observer/Push_Iterator_Factory_i.cpp:
        * examples/Content_Server/SMI_Iterator/client.cpp:
        * examples/Simple/time-date/Time_Date.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/AMI_Replication_Strategy.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Replication_Service.cpp:
        * orbsvcs/orbsvcs/IFRService/ModuleDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/RecursDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/RecursDef_i.h:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.h:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.h:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.h:
        * orbsvcs/tests/FT_App/StubBatchConsumer.h:
        * orbsvcs/tests/FT_App/StubFaultAnalyzer.h:
        * orbsvcs/tests/FT_App/StubFaultConsumer.h:
        * orbsvcs/tests/FT_App/StubFaultNotifier.h:
        * orbsvcs/tests/FtRtEvent/consumer.cpp:
        * orbsvcs/tests/FtRtEvent/supplier.cpp:
        * performance-tests/RTCorba/Oneways/Reliable/client.cpp:
        * performance-tests/Sequence_Latency/AMI/client.cpp:
        * tests/Abstract_Interface/test_i.cpp:
        * tests/Bug_1482_Regression/Hello.cpp:
        * tests/DynAny_Test/test_dynenum.cpp:
        * tests/DynAny_Test/test_dynsequence.cpp:
        * tests/DynAny_Test/test_dynstruct.cpp:
        * tests/DynAny_Test/test_dynunion.cpp:

          Added missing header include directives that are necessary due
          to inter-header dependency reductions in ACE.

Sun Jan 30 12:51:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
          Fixed fuzz error

Sat Jan 29 23:58:18 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * examples/AMH/Sink_Server/AMH_Servant.cpp:
        * examples/Event_Comm/Consumer_Input_Handler.h:
        * examples/POA/POA_BiDir/POA_BiDir.cpp:
        * examples/RTCORBA/Activity/Activity.cpp:
        * examples/Simple/time-date/server.cpp:
        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.cpp:
        * orbsvcs/FTRT_Event_Service/Gateway_Service/FTRTEC_Gateway_Service.cpp:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.h:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.h:
        * orbsvcs/ImplRepo_Service/Activator_Info.h:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:
        * orbsvcs/LoadBalancer/LoadMonitor.cpp:
        * orbsvcs/TAO_Service/TAO_Service.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/GroupInfoPublisher.h:
        * orbsvcs/orbsvcs/IFRService/AliasDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ArrayDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/AttributeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ConstantDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Contained_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
        * orbsvcs/orbsvcs/IFRService/EnumDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/EventPortDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExceptionDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtAttributeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/HomeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils_T.cpp:
        * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.cpp:
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/NativeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/OperationDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ProvidesDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/RecursDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Repository_i.cpp:
        * orbsvcs/orbsvcs/IFRService/SequenceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/StringDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/StructDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/TypedefDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UsesDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueBoxDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueMemberDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/WstringDef_i.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LeastLoaded.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMinimum.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ObjectReferenceFactory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Utils.cpp:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/TimeStamp.h:
        * orbsvcs/tests/InterfaceRepo/Application_Test/test_i.cpp:
        * orbsvcs/tests/Notify/lib/Driver.h:
        * tao/CORBALOC_Parser.h:
        * tao/default_server.h:
        * tao/Messaging/Messaging.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
        * tests/MProfile_Forwarding/Manager.cpp:

          Added missing header include directives that are necessary due
          to inter-header dependency reductions in ACE.

Sat Jan 29 00:43:32 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Change --with-{acexml,qos,rmcast,ssl} to --enable-{acexml,qos,
          rmcast,ssl} to be consistant with standard autoconf conventions.

Sat Jan 29 02:31:21 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:

          Modified the handler-creating behavior to allow limited
          processing of imported nodes. This is so a base interface
          from another file will get a handler created and its
          operations added so that the child handler will have all
          the inherited operations in its operation table. The
          restriction is that exception holders cannot be created
          for imported nodes. Thanks to Don Sharp <dws@prismtech.com>
          for reporting the 'operation not found' error with his
          example IDL files.

Fri Jan 28 21:48:12 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_Loader.h:

          Include "ace/Auto_Ptr.h" to pull in auto_ptr<> class template
          declaration.

Fri Jan 28 21:39:09 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/AV/RTP.h:
        * orbsvcs/orbsvcs/AV/TCP.h:
        * orbsvcs/orbsvcs/AV/UDP.h:

          Include "ace/Service_Config.h" to pull in
          complete ACE_Static_Svc_Descriptor class declaration.
          Necessitated by interheader dependency reductions in ACE.

Fri Jan 28 21:07:07 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/CORBANAME_Parser.cpp:
        * tao/DynamicInterface/Request.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.cpp:

          Include "ace/SString.h" since to pull in complete ACE string
          class declarations.  Necessitated by include directive
          reductions in ACE.

        * tao/ORB_Core.cpp:

          Include "ace/Reactor.h" to pull in complete ACE_Reactor class
          declaration.  Necessitated by include directive reductions in
          ACE.

        * tao/default_resource.h:

          Forward declare ACE_Reactor_Impl class.  Necessitated by include
          directive reductions in ACE.

Fri Jan 28 13:32:47 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tests/OctetSeq/client.cpp:
        * tests/OctetSeq/test_i.cpp:

          Removed reinterpret_cast<const char*> for ACE_crc32's buffer
          parameter, as it was changed to take a const void* some time
          back.

Fri Jan 28 07:53:34 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Detector/Fault_Detector_i.cpp:
        * orbsvcs/LoadBalancer/LoadManager.cpp:
        * orbsvcs/LoadBalancer/LoadMonitor.cpp:
        * orbsvcs/Naming_Service/NT_Naming_Service.cpp:
        * orbsvcs/Notify_Service/NT_Notify_Service.cpp:
        * orbsvcs/PSS/PSDL_Datastore.cpp:
        * orbsvcs/PSS/PSDL_OctetSeq.cpp:
        * orbsvcs/examples/LoadBalancing/server.cpp:
        * orbsvcs/examples/ORT/Object_Factory_i.cpp:
        * orbsvcs/orbsvcs/IOR_Multicast.cpp:
        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:
        * orbsvcs/orbsvcs/Time_Utilities.i:
        * orbsvcs/orbsvcs/AV/Endpoint_Strategy.cpp:
        * orbsvcs/orbsvcs/AV/RTCP.cpp:
        * orbsvcs/orbsvcs/AV/sfp.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp:
        * orbsvcs/orbsvcs/Event/EC_Conjunction_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.cpp:
        * orbsvcs/orbsvcs/Event/EC_Sched_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Event/EC_Timeout_Generator.cpp:
        * orbsvcs/orbsvcs/Event/Timer_Module.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_T.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connector.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Endpoint.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Endpoint.i:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Profile.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Transport.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LeastLoaded.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMinimum.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Random.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Log/PersistStore.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.cpp:
        * orbsvcs/orbsvcs/Naming/Persistent_Context_Index.cpp:
        * orbsvcs/orbsvcs/Notify/AllocTracker.h:
        * orbsvcs/orbsvcs/Notify/EventTypeSeq.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/PropertySeq.cpp:
        * orbsvcs/orbsvcs/Notify/Routing_Slip_Persistence_Manager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Message_Block_Data_Iterator.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.cpp:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/DynSched.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:
        * orbsvcs/orbsvcs/Sched/SchedEntry.i:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Clerk.cpp:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Server.cpp:
        * orbsvcs/orbsvcs/Time/TAO_UTO.cpp:
        * orbsvcs/orbsvcs/Time/Timer_Helper.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators_T.cpp:
        * orbsvcs/orbsvcs/Trader/Service_Type_Repository.cpp:
        * orbsvcs/orbsvcs/Trader/Trader.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/server.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/server.cpp:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Receiver_Stats.cpp:
        * orbsvcs/tests/Concurrency/CC_test_utils.cpp:
        * orbsvcs/tests/Concurrency/CC_tests.cpp:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.i:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
        * orbsvcs/tests/Notify/Blocking/common.cpp:
        * orbsvcs/tests/Notify/Discarding/common.cpp:
        * orbsvcs/tests/Notify/Ordering/common.cpp:
        * orbsvcs/tests/Notify/Reconnecting/Consumer.cpp:
        * orbsvcs/tests/Notify/Reconnecting/Supplier.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/common.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/common.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Notify_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/lib/Task_Stats.inl:
        * orbsvcs/tests/Notify/performance-tests/Filter/common.cpp:
        * orbsvcs/tests/Sched_Conf/Sched_Conf.cpp:
        * orbsvcs/tests/Sched_Conf/Sched_Conf_Anomalies.cpp:
        * orbsvcs/tests/Sched_Conf/Sched_Conf_Runtime.h:
        * orbsvcs/tests/Security/MT_IIOP_SSL/test_i.cpp:
        * orbsvcs/tests/Trading/Offer_Importer.cpp:

          Converted ACE_{static,dynamic,reinterpret,const}_cast macros
          calls to their standard C++ counterparts.

Fri Jan 28 07:18:10 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * examples/AMH/Sink_Server/AMH_Servant.cpp:
        * examples/AMI/FL_Callback/Progress_i.cpp:
        * examples/Content_Server/AMI_Iterator/Content_Iterator_i.cpp:
        * examples/Content_Server/AMI_Iterator/Iterator_Factory_i.cpp:
        * examples/Content_Server/AMI_Observer/Push_Iterator_Factory_i.cpp:
        * examples/Content_Server/SMI_Iterator/Content_Iterator_i.cpp:
        * examples/Content_Server/SMI_Iterator/Iterator_Factory_i.cpp:
        * examples/Event_Comm/Event_Comm_i.cpp:
        * examples/Kokyu_dsrt_schedulers/EDF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/EDF_SchedulingC.cpp:
        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduler.cpp:
        * examples/Load_Balancing_persistent/Load_Balancer_i.cpp:
        * examples/Logging/Logger_i.cpp:
        * examples/Logging/Logging_Service_i.cpp:
        * examples/Logging/Logging_Test_i.cpp:
        * examples/OBV/Typed_Events/Client_i.cpp:
        * examples/OBV/Typed_Events/Event_Types_impl.cpp:
        * examples/OBV/Typed_Events/Server_i.cpp:
        * examples/POA/DSI/Database_i.cpp:
        * examples/POA/DSI/server.cpp:
        * examples/POA/Generic_Servant/client.cpp:
        * examples/POA/Loader/Servant_Activator.cpp:
        * examples/POA/Loader/Servant_Locator.cpp:
        * examples/POA/Loader/Server_Manager.cpp:
        * examples/POA/On_Demand_Activation/server.cpp:
        * examples/POA/On_Demand_Loading/Servant_Locator.cpp:
        * examples/POA/On_Demand_Loading/Servant_Manager.cpp:
        * examples/POA/On_Demand_Loading/Server_Manager.cpp:
        * examples/Persistent_Grid/Grid_i.cpp:
        * examples/PluggableUDP/tests/Basic/UDP_Client_i.cpp:
        * examples/PluggableUDP/tests/Performance/UDP_PerformanceClient.cpp:
        * examples/RTCORBA/Activity/Task_Stats.cpp:
        * examples/RTScheduling/FP_SchedulingC.cpp:
        * examples/RTScheduling/MIF_SchedulingC.cpp:
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.cpp:
        * examples/Simple/Simple_util.cpp:
        * examples/Simple/time/Time_Client_i.cpp:
        * examples/Simulator/Event_Supplier/DOVE_Supplier.cpp:
        * examples/Simulator/Event_Supplier/DualEC_Sup.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/collocation_test.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/Task_Client.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/server.cpp:
        * performance-tests/POA/Object_Creation_And_Registration/registration.cpp:
        * performance-tests/RTCorba/Thread_Pool/client.cpp:
        * tests/AMH_Exceptions/server.cpp:
        * tests/AMH_Oneway/server.cpp:
        * tests/CDR/allocator.cpp:
        * tests/CDR/growth.cpp:
        * tests/CDR/octet_sequence.cpp:
        * tests/CodeSets/libs/IBM1047_ISO8859/Char_IBM1047_ISO8859_Translator.cpp:
        * tests/CodeSets/libs/UCS4_UTF16/WUCS4_UTF16.cpp:
        * tests/CodeSets/simple/client.cpp:
        * tests/Codec/client.cpp:
        * tests/Collocation_Opportunities/Collocation_Opportunities.cpp:
        * tests/FL_Cube/client.cpp:
        * tests/NestedUpcall/MT_Client_Test/client.cpp:
        * tests/NestedUpcall/Simple/server.cpp:
        * tests/OctetSeq/OctetSeq.cpp:
        * tests/OctetSeq/client.cpp:
        * tests/OctetSeq/test_i.cpp:
        * tests/Policies/Manipulation.cpp:
        * tests/Portable_Interceptors/Benchmark/interceptors.cpp:
        * tests/Portable_Interceptors/Bug_1559/interceptors.cpp:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/interceptors.cpp:
        * tests/Portable_Interceptors/Service_Context_Manipulation/interceptors.cpp:
        * tests/RTCORBA/RTMutex/server.cpp:
        * tests/RTScheduling/DT_Spawn/test.cpp:
        * tests/Xt_Stopwatch/client.cpp:
        * tests/Xt_Stopwatch/timer.cpp:
        * utils/catior/catior.cpp:

          Converted ACE_{static,dynamic,reinterpret,const}_cast macros
          calls to their standard C++ counterparts.

Thu Jan 27 20:01:21 2005  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:

          Fix for [BUGID 2038]. Please see

          http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=2038

          for details and thanks to Torsten Kuepper
          <torsten.kuepper@nokia.com> for reporting the problem.

Thu Jan 27 11:39:00 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/.../*.{cpp,h,i,inl}:

          Ossama let me know that my ACE-style to C++ cast conversion
          script didn't add a space between the ">" and the "(", which
          violates the ACE/TAO conventions.  I wrote another script to
          fix the damage, which fixed up a lot of other cases as well.

Thu Jan 27 10:37:19 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/examples/ImR/Combined_Service/run_test.pl:

          Use the tao_imr to shutdown the server before ending the test.
          Since the ImR Activator probably started the server, $SERV no
          longer refers to the actual server process.

Thr Jan 27 07:35:05 2005  Huang-Ming Huang  <hh1@cse.wustul.edu>

        * orbsvcs/orbsvcs/FtRtEvent/EventChanel/GroupInfoPublisher.cpp
        Removed dependancy on log_obj_endpoints.h.

Wed Jan 26 17:20:05 2005  Huang-Ming Huang  <hh1@cse.wustul.edu>

        * orbsvcs/orbsvcs/FtRtEvent/EventChanel/FTEC_Group_Manager.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChanel/GroupInfoPublisher.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChanel/GroupInfoPublisher.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChanel/IOGR_Maker.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChanel/IOGR_Maker.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChanel/Replication_Service.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChanel/FtEventServiceInterceptor

          Fixed incorrect object_group_ref_version problem. Thanks to
          Thia Chang Chao <tchangch@dso.org.sg> for reporting the problem.

Tue Jan 25 14:15:05 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Update for this change:

          Tue Jan 26 10:01:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

Tue Jan 25 12:57:05 2005  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Codeset_Manager.cpp:
          Moved default selection of the UTF16_BOM codeset translator from
          get_char_trans() to get_wchar_trans() where it belongs. Thanks
          to Olivier Brunet <o.brunet@free.fr> for finding this.

Tue Jan 25 09:59:28 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Event_Service/Event_Service.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.cpp:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/Fault_Notifier/FT_Notifier_i.cpp:
        * orbsvcs/IFR_Service/be_init.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_exception.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_operation.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_structure.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_union.cpp:
        * orbsvcs/ImplRepo_Service/Forwarder.cpp:
        * orbsvcs/ImplRepo_Service/Locator_Repository.cpp:
        * orbsvcs/LoadBalancer/LoadManager.cpp:
        * orbsvcs/LoadBalancer/LoadMonitor.cpp:
        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.cpp:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.cpp:
        * orbsvcs/PSS/PSDL_Datastore.cpp:
        * orbsvcs/PSS/PSDL_Interface_Visitor.cpp:
        * orbsvcs/PSS/PSDL_Struct_Visitor.cpp:
        * orbsvcs/Scheduling_Service/Scheduling_Service.cpp:
        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.cpp:
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
        * orbsvcs/orbsvcs/AV/AV_Core.cpp:
        * orbsvcs/orbsvcs/AV/Endpoint_Strategy_T.cpp:
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.cpp:
        * orbsvcs/orbsvcs/AV/MCast.cpp:
        * orbsvcs/orbsvcs/AV/QoS_UDP.cpp:
        * orbsvcs/orbsvcs/AV/RTCP.cpp:
        * orbsvcs/orbsvcs/AV/RTCP_Channel.cpp:
        * orbsvcs/orbsvcs/AV/RTCP_Packet.cpp:
        * orbsvcs/orbsvcs/AV/RTP.cpp:
        * orbsvcs/orbsvcs/AV/SCTP_SEQ.cpp:
        * orbsvcs/orbsvcs/AV/TCP.cpp:
        * orbsvcs/orbsvcs/AV/UDP.cpp:
        * orbsvcs/orbsvcs/AV/sfp.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching_Task.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_EventChannel.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedEventChannel.i:
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Command.cpp:
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.i:
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.inl:
        * orbsvcs/orbsvcs/Event/Dispatching_Modules.cpp:
        * orbsvcs/orbsvcs/Event/Dispatching_Modules.i:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.cpp:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.i:
        * orbsvcs/orbsvcs/Event/EC_And_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Bitmask_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Conjunction_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Disjunction_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.cpp:
        * orbsvcs/orbsvcs/Event/EC_Group_Scheduling.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Scheduling.cpp:
        * orbsvcs/orbsvcs/Event/EC_Negation_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Null_Scheduling.cpp:
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.cpp:
        * orbsvcs/orbsvcs/Event/EC_Priority_Scheduling.cpp:
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.cpp:
        * orbsvcs/orbsvcs/Event/EC_Reactive_Timeout_Generator.cpp:
        * orbsvcs/orbsvcs/Event/EC_Timeout_Generator.cpp:
        * orbsvcs/orbsvcs/Event/Event_Channel.cpp:
        * orbsvcs/orbsvcs/Event/Timer_Module.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Invocation_Endpoint_Selectors.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Interceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel_Impl.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_Base.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FT_ProxyAdmin_T.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ForwardCtrlServerInterceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/IOGR_Maker.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/SCTP_Fault_Detector.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/activate_with_id.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor_Impl.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Endpoint.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Profile.cpp:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Transport.cpp:
        * orbsvcs/orbsvcs/IFRService/ArrayDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/AttributeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ConstantDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Contained_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExceptionDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/HomeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
        * orbsvcs/orbsvcs/IFRService/IRObject_i.cpp:
        * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.cpp:
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/OperationDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/PrimitiveDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Repository_i.cpp:
        * orbsvcs/orbsvcs/IFRService/SequenceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/StringDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/StructDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UsesDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueMemberDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/WstringDef_i.cpp:
        * orbsvcs/orbsvcs/IOR_Multicast.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Load_Average_Monitor.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Utilization_Monitor.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Random.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ServerRequestInterceptor.cpp:
        * orbsvcs/orbsvcs/Log/LogMgr_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLog_i.cpp:
        * orbsvcs/orbsvcs/Metrics/Metrics_Logger.cpp:
        * orbsvcs/orbsvcs/Naming/Hash_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp:
        * orbsvcs/orbsvcs/Naming/Persistent_Context_Index.cpp:
        * orbsvcs/orbsvcs/Naming/Persistent_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Transient_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Notify/Admin.cpp:
        * orbsvcs/orbsvcs/Notify/Any/PushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Any/PushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.cpp:
        * orbsvcs/orbsvcs/Notify/Consumer.cpp:
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.cpp:
        * orbsvcs/orbsvcs/Notify/EventChannel.cpp:
        * orbsvcs/orbsvcs/Notify/EventChannelFactory.cpp:
        * orbsvcs/orbsvcs/Notify/EventTypeSeq.cpp:
        * orbsvcs/orbsvcs/Notify/FilterAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request.inl:
        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.cpp:
        * orbsvcs/orbsvcs/Notify/Name_Value_Pair.cpp:
        * orbsvcs/orbsvcs/Notify/Persistent_File_Allocator.cpp:
        * orbsvcs/orbsvcs/Notify/Random_File.cpp:
        * orbsvcs/orbsvcs/Notify/Reconnection_Registry.cpp:
        * orbsvcs/orbsvcs/Notify/Routing_Slip.cpp:
        * orbsvcs/orbsvcs/Notify/Routing_Slip_Persistence_Manager.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/Batch_Buffering_Strategy.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/XML_Topology_Factory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_FactoryRegistry.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group_Manipulator.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Utils.cpp:
        * orbsvcs/orbsvcs/PortableGroup/POA_Hooks.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Acceptor_Registry.cpp:
        * orbsvcs/orbsvcs/PortableGroup/Portable_Group_Map.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connector.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Endpoint.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Message_Block_Data_Iterator.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.i:
        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/DynSched.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:
        * orbsvcs/orbsvcs/Sched/Scheduler_Generic.cpp:
        * orbsvcs/orbsvcs/Sched/Strategy_Scheduler.cpp:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Clerk.cpp:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Server.cpp:
        * orbsvcs/orbsvcs/Time/Timer_Helper.cpp:
        * orbsvcs/orbsvcs/Time_Utilities.i:
        * orbsvcs/orbsvcs/Trader/Constraint_Interpreter.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Database.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators_T.cpp:
        * orbsvcs/orbsvcs/Trader/Service_Type_Repository.cpp:
        * orbsvcs/orbsvcs/Trader/Trader.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.cpp:
        * orbsvcs/orbsvcs/Trader/Trading_Loader.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/client.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/client.cpp:
        * orbsvcs/tests/AVStreams/Latency/ping.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Consumer.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Supplier.cpp:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer_Driver.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier_Driver.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Throughput.cpp:
        * orbsvcs/tests/Event/lib/Driver.cpp:
        * orbsvcs/tests/FT_App/FT_Client.cpp:
        * orbsvcs/tests/FT_App/FT_Creator.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.cpp:
        * orbsvcs/tests/FT_App/StubFaultConsumer.cpp:
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Server_Request_Interceptor.cpp:
        * orbsvcs/tests/HTIOP/AMI/Test_Output.cpp:
        * orbsvcs/tests/HTIOP/BiDirectional/Test_Output.cpp:
        * orbsvcs/tests/HTIOP/Hello/Test_Output.cpp:
        * orbsvcs/tests/HTIOP/test_config.h:
        * orbsvcs/tests/ImplRepo/nestea_i.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.cpp:
        * orbsvcs/tests/Notify/Blocking/common.cpp:
        * orbsvcs/tests/Notify/Discarding/common.cpp:
        * orbsvcs/tests/Notify/Ordering/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/common.cpp:
        * orbsvcs/tests/Notify/Reconnecting/Consumer.cpp:
        * orbsvcs/tests/Notify/Reconnecting/Supplier.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/common.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/common.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Notify_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/common.cpp:
        * orbsvcs/tests/Sched_Conf/Sched_Conf.cpp:
        * orbsvcs/tests/Sched_Conf/Sched_Conf_Anomalies.cpp:
        * orbsvcs/tests/Sched_Conf/Sched_Conf_Runtime.cpp:
        * orbsvcs/tests/Trading/Offer_Exporter.cpp:
        * orbsvcs/tests/Trading/Offer_Importer.cpp:
        * orbsvcs/tests/Trading/Service_Type_Exporter.cpp:

          Converted ACE_{static,dynamic,reinterpret,const}_cast macros
          calls to their standard C++ counterparts using my "safe" but
          conservative perl script.  This takes the easy cases out off
          the table so it will be easier to review diffs from Ossama's
          ACE-cast-convert script on the next pass.

Tue Jan 26 10:01:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CONV_FRAMES.{h,cpp,inl}:
        * tao/CONV_FRAMES_T.{h,cpp,inl}:
        * tao/GIOPS.{h,cpp,inl}:
        * tao/GIOPS_T.{h,cpp,inl}:
        * tao/IOPS.{h,cpp,i}:
        * tao/IOPS_T.{h,cpp,i}:
        * tao/PollableS.{h,cpp,inl}:
        * tao/PollableS_T.{h,cpp,inl}:
        * tao/ServiceS.{h,cpp,inl}:
        * tao/ServiceS_T.{h,cpp,inl}:
        * tao/TAOS.{h,cpp,inl}:
        * tao/TAOS_T.{h,cpp,inl}:
        * tao/TimeBaseS.{h,cpp,inl}:
        * tao/TimeBaseS_T.{h,cpp,inl}:
          The generated S.cpp, S.inl, S_T.cpp and S_T.inl are empty and
          don't contain real code, so we removed these files from the repo
          and updated the correspondind S.h/S_T.h file. This is now done
          by hand but there is a feature request to the TAO_IDL compiler
          to be able to suppress the generation of these files

Tue Jan 25 00:00:51 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/PortableServer/POA.cpp (reference_to_id):
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp
          (handle_input):
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp
          (visit_component_assoc):
        * orbsvcs/orbsvcs/Naming/Hash_Naming_Context.cpp
          (bind_new_context):
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp
          (bind_new_context):
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp
          (visit_component_assoc):

          Fixed "control reaches end of non-void function" warnings
          exhibited by the latest GNU G++ 4.0 CVS snapshot.

        * orbsvcs/orbsvcs/Notify/Persistent_File_Allocator.cpp
          (allocate_nowrite):

          Explicitly cast "~0" to a "size_t".  Addresses a warning
          exhibited by the latest GNU G++ 4.0 CVS snapshot regarding
          passing a negative value as a "size_t" function argument.

Mon Jan 24 22:06:05 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/ORB_Core.h (TAO_ORB_Core):

          Removed obsolete "friend class TAO_ORB_Table" declaration.

Mon Jan 24 21:38:09 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/CosLoadBalancing.idl (CosLoadBalancing):

          Changed typeprefix for this module from "omg.org" to "tao.lb".
          The IDL in this file is not yet OMG standard, and is generally
          specific to TAO.

Mon Jan 24 16:59:22 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Fix thinko in pkgsrc *.pc file generation.

Mon Jan 24 16:15:31 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Update.

        * configure.ac:

          Changed to invoke ACE_ENABLE_{FL,QT,TK,XT}_REACTOR.

Mon Jan 24 13:22:04 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/FlResource.mpc:
        * tao/QtResource.mpc:
        * tao/TkResource.mpc:
        * tao/XtResource.mpc:

          Removed Default_Resources subsection from Source_Files.

          Added empty Inline_Files, Template_Files, Resource_Files, and
          PIDL_Files sections.

Mon Jan 24 09:38:08 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tests/GIOP_Fragments/PMB_With_Fragments/giop1.2_fragments_be.dat:
        * tests/GIOP_Fragments/PMB_With_Fragments/run_test.pl:

          Added a data file for big endien servers and conditionally
          determine which data file to use in the test script.

Mon Jan 24 06:23:04 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/FT_App/FT_App.mpc:

          Reverted my change from Fri Jan 21 10:11:29 2005.

Sun Jan 23 14:56:20 2005  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO-INSTALL.html (href):

          Added some notes about g++ on Solaris 10 downloaded from
          blastwave.

Sun Jan 23 19:04:31 2005  Marek Brudka  <mbrudka@aster.pl>

        * .cvsignore (Module):
          Removed unnecessary file.

Sun Jan 23 18:04:02 2005  Marek Brudka  <mbrudka@aster.pl>

        * examples/AMI/FL_Callback/Peer_i.cpp (Module):
          Fixed error related with sleep once again. I lost this fix
          during merge.

Sun Jan 23 15:50:25 2005  Marek Brudka  <mbrudka@aster.pl>

        * */.cvsignore (Module):

          Made cvs less annoyed.

Sun Jan 23 13:17:29 2005  Marek Brudka  <mbrudka@aster.pl>

        * tao/Strategies/advanced_resource.h (Module):

          Removed unnecessary commma.

Sun Jan 23 12:38:45 2005  Marek Brudka  <mbrudka@aster.pl>

        * tao/XtResource.mpc (Message):
        * tao/TkResource.mpc (Message):
        * tao/QtResource.mpc (Message):
        * tao/FlResource.mpc (Message):

          Added missing Id strings.

Sun Jan 23 11:56:27 2005  Marek Brudka  <mbrudka@aster.pl>

        * tao/ORB_Core.cpp (Message):

          Removed outdated remark.

Sun Jan 23 11:41:55 2005  Marek Brudka  <mbrudka@aster.pl>

        * tao/ORB_Core.cpp (Module):
          Added necessary include directive lost during merge.

Sun Jan 23 01:52:50 2005  Marek Brudka  <mbrudka@aster.pl>

        * tests/Xt_Stopwatch/timer.h:
        * tests/Xt_Stopwatch/timer.cpp:
        * tests/Xt_Stopwatch/test_i.h:
        * tests/Xt_Stopwatch/test_i.cpp:
        * tests/Xt_Stopwatch/svc.conf.xml:
        * tests/Xt_Stopwatch/svc.conf:
        * tests/Xt_Stopwatch/server.cpp:
        * tests/Xt_Stopwatch/client.cpp:
        * tests/Xt_Stopwatch/Xt_Stopwatch.mpc:
        * tests/Xt_Stopwatch/Stopwatch_display.h:
        * tests/Xt_Stopwatch/Stopwatch_display.cpp:
        * tests/Xt_Stopwatch/README:
        * tests/Xt_Stopwatch/Control.h:
        * tests/Xt_Stopwatch/Control.cpp:
        * tests/Xt_Stopwatch/Client.h:
        * tests/QtTests/test_i.h:
        * tests/QtTests/test_i.cpp:
        * tests/QtTests/svc.conf.xml:
        * tests/QtTests/svc.conf:
        * tests/QtTests/server.cpp:
        * tests/QtTests/client.h:
        * tests/QtTests/client.cpp:
        * tests/QtTests/README:
        * tests/QtTests/QtTests.mpc:
        * tests/FL_Cube/test_i.h:
        * tests/FL_Cube/test_i.cpp:
        * tests/FL_Cube/svc.conf.xml:
        * tests/FL_Cube/svc.conf:
        * tests/FL_Cube/server.cpp:
        * tests/FL_Cube/client.cpp:
        * tests/FL_Cube/FL_Cube.mpc:
        * tao/Strategies/advanced_resource.h (Module):
        * tao/Strategies/advanced_resource.cpp (Module):
        * tao/xt_resource.i (Module):
        * tao/xt_resource.h (Module):
        * tao/xt_resource.cpp (Module):
        * tao/tao.mpc (Module):
        * tao/qt_resource.i (Module):
        * tao/qt_resource.h (Module):
        * tao/qt_resource.cpp (Module):
        * tao/XtResource_Loader.h (Module):
        * tao/XtResource_Loader.cpp (Module):
        * tao/XtResource_Factory.h (Module):
        * tao/XtResource_Factory.cpp (Module):
        * tao/XtResource.mpc (Module):
        * tao/TkResource_Loader.h (Module):
        * tao/TkResource_Loader.cpp (Module):
        * tao/TkResource_Factory.h (Module):
        * tao/TkResource_Factory.cpp (Module):
        * tao/TkResource.mpc (Module):
        * tao/TSS_Resources.h (Module):
        * tao/TSS_Resources.cpp (Module):
        * tao/TAO_XtResource_Export.h (Module):
        * tao/TAO_TkResource_Export.h (Module):
        * tao/TAO_QtResource_Export.h (Module):
        * tao/TAO_FlResource_Export.h (Module):
        * tao/Strategies.mpc (Module):
        * tao/QtResource_Loader.h (Module):
        * tao/QtResource_Loader.cpp (Module):
        * tao/QtResource_Factory.h (Module):
        * tao/QtResource_Factory.cpp (Module):
        * tao/QtResource.mpc (Module):
        * tao/ORB_Core.h (Module):
        * tao/ORB_Core.cpp (Module):
        * tao/Leader_Follower.cpp (Module):
        * tao/GUIResource_Factory.h (Module):
        * tao/GUIResource_Factory.cpp (Module):
        * tao/FlResource_Loader.h (Module):
        * tao/FlResource_Loader.cpp (Module):
        * tao/FlResource_Factory.h (Module):
        * tao/FlResource_Factory.cpp (Module):
        * tao/FlResource.mpc (Module):
        * examples/AMI/FL_Callback/svc.conf.xml (Module):
        * examples/AMI/FL_Callback/svc.conf (Module):
        * examples/AMI/FL_Callback/progress.cpp (Module):
        * examples/AMI/FL_Callback/README (Module):
        * examples/AMI/FL_Callback/Progress_i.h (Module):
        * examples/AMI/FL_Callback/Progress_i.cpp (Module):
        * examples/AMI/FL_Callback/FL_Callback.mpc (Module):
        * docs/Options.html (Module):

          Changes related with separation of GUI reactors. The additional
          information is below.

        * .cvsignore:
          To make cvs silent.

        Sat Jan 22 19:57:16 2005  Marek Brudka  <mbrudka@aster.pl>

        * tao/XtResource_Loader.h (Module):
        * tao/XtResource_Loader.cpp (Module):
        * tao/XtResource_Factory.h (Module):
        * tao/XtResource_Factory.cpp (Module):
        * tao/TkResource_Loader.h (Module):
        * tao/TkResource_Loader.cpp (Module):
        * tao/TkResource_Factory.h (Module):
        * tao/TkResource_Factory.cpp (Module):
        * tao/QtResource_Loader.h (Module):
        * tao/QtResource_Loader.cpp (Module):
        * tao/QtResource_Factory.h (Module):
        * tao/QtResource_Factory.cpp (Module):
        * tao/GUIResource_Factory.h (Module):
        * tao/GUIResource_Factory.cpp (Module):
        * tao/FlResource_Loader.h (Module):
        * tao/FlResource_Loader.cpp (Module):
        * tao/FlResource_Factory.h (Module):
        * tao/FlResource_Factory.cpp (Module):

          Style changes, addedin internal locking in factory when creating
          reactor.

        Wed Jan 19 22:52:34 2005  Marek Brudka  <mbrudka@aster.pl>

        * tests/Xt_Stopwatch/server.cpp:
        * tests/Xt_Stopwatch/client.cpp:
        * tests/Xt_Stopwatch/Xt_Stopwatch.mpc:
        * tests/Xt_Stopwatch/Client.h:
        * tests/QtTests/test_i.h:
        * tests/QtTests/server.cpp:
        * tests/QtTests/client.h:
        * tests/QtTests/client.cpp:
        * tests/QtTests/QtTests.mpc:
        * tests/FL_Cube/server.cpp:
        * tests/FL_Cube/client.cpp:
        * tests/FL_Cube/FL_Cube.mpc:
        * tao/Strategies/advanced_resource.cpp:
        * tao/xt_resource_loader.h:
        * tao/xt_resource_loader.cpp:
        * tao/xt_resource.i:
        * tao/xt_resource.h:
        * tao/xt_resource.cpp:
        * tao/tk_resource_loader.h:
        * tao/tk_resource_loader.cpp:
        * tao/tk_resource.i:
        * tao/tk_resource.h:
        * tao/tk_resource.cpp:
        * tao/tao_xtreactor.mpc:
        * tao/tao_tkreactor.mpc:
        * tao/tao_qtreactor.mpc:
        * tao/tao_flreactor.mpc:
        * tao/tao.mpc:
        * tao/qt_resource_loader.h:
        * tao/qt_resource_loader.cpp:
        * tao/qt_resource.i:
        * tao/qt_resource.h:
        * tao/qt_resource.cpp:
        * tao/fl_resource_loader.h:
        * tao/fl_resource_loader.cpp:
        * tao/fl_resource.i:
        * tao/fl_resource.h:
        * tao/fl_resource.cpp:
        * tao/XtResource_Loader.h:
        * tao/XtResource_Loader.cpp:
        * tao/XtResource_Factory.h:
        * tao/XtResource_Factory.cpp:
        * tao/XtResource.mpc:
        * tao/TkResource_Loader.h:
        * tao/TkResource_Loader.cpp:
        * tao/TkResource_Factory.h:
        * tao/TkResource_Factory.cpp:
        * tao/TkResource.mpc:
        * tao/TSS_Resources.h:
        * tao/TSS_Resources.cpp:
        * tao/TAO_XtResource_Export.h:
        * tao/TAO_XtReactor_export.h:
        * tao/TAO_TkResource_Export.h:
        * tao/TAO_TkReactor_export.h:
        * tao/TAO_QtResource_Export.h:
        * tao/TAO_QtReactor_export.h:
        * tao/TAO_FlResource_Export.h:
        * tao/TAO_FlReactor_export.h:
        * tao/Qt_Resources_Export.h:
        * tao/Qt_Resource_Factory.h:
        * tao/Qt_Resource_Factory.cpp:
        * tao/QtResource_Loader.h:
        * tao/QtResource_Loader.cpp:
        * tao/QtResource_Factory.h:
        * tao/QtResource_Factory.cpp:
        * tao/QtResource.mpc:
        * tao/ORB_Core.h:
        * tao/ORB_Core.cpp:
        * tao/Leader_Follower.cpp:
        * tao/GUI_Resource_Factory.h:
        * tao/GUIResource_Factory.h:
        * tao/GUIResource_Factory.cpp:
        * tao/FlResource_Loader.h:
        * tao/FlResource_Loader.cpp:
        * tao/FlResource_Factory.h:
        * tao/FlResource_Factory.cpp:
        * tao/FlResource.mpc:
        * examples/AMI/FL_Callback/progress.cpp (Module):
        * examples/AMI/FL_Callback/FL_Callback.mpc (Module):

          Naming more constistent and new GUIResources loading schema.

        Sat Jan 15 00:19:04 2005  Marek Brudka  <mbrudka@aster.pl>

        * tao/tk_resource_loader.h (Module):
        * tao/tk_resource_loader.cpp (Module):
        * tao/fl_resource_loader.h (Module):
        * tao/fl_resource_loader.cpp (Module):
        * tao/tk_resource.h (Module):
        * tao/tk_resource.cpp (Module):
        * examples/AMI/FL_Callback/svc.conf.xml (Module):
        * examples/AMI/FL_Callback/svc.conf (Module):
        * tests/FL_Cube/server.cpp (Module):
        * tests/FL_Cube/client.cpp (Module):
        * tao/tao_flreactor.mpc (Module):
        * tao/fl_resource.h (Module):
        * tao/fl_resource.cpp (Module):
        * examples/AMI/FL_Callback/progress.cpp (Module):
        * examples/AMI/FL_Callback/README (Module):
        * tests/Xt_Stopwatch/svc.conf (Module):
        * tests/Xt_Stopwatch/svc.conf.xml (Module):
        * tests/Xt_Stopwatch/server.cpp (Module):
        * tests/Xt_Stopwatch/client.cpp (Module):
        * tests/Xt_Stopwatch/Client.h (Module):
        * tao/xt_resource_loader.h (Module):
        * tao/xt_resource_loader.cpp (Module):
        * tao/xt_resource.i (Module):
        * tao/xt_resource_loader.cpp (Module):
        * tao/xt_resource.h (Module):
        * tao/xt_resource.cpp (Module):
        * tao/tao_xtreactor.mpc (Module):

          Created TAO_*Resource_Loader, changed some names,updated doc and
          adapted tests to new way gui resources are loaded.

        * tests/QtTests/server.cpp (Module):
        * tests/QtTests/client.cpp (Module):
        * tao/Strategies/advanced_resource.h (Module):
        * tao/Strategies/advanced_resource.cpp (Module):
        * tao/qt_resource_loader.h (Module):
        * tao/qt_resource_loader.cpp (Module):
        * tao/qt_resource.cpp (Module):
        * tao/ORB_Core.h (Module):
        * tao/ORB_Core.cpp (Module):
        * tao/Leader_Follower.cpp (Module):

          Created reactor factory on ORB_Core level to create GUI
          reactors. Removed resouce_factory chain from
          Advanced_Resource_Factory. Adapted qt_resource_loader to new
          reactor creation schema. Some style changes.

        Tue Jan 11 23:39:37 2005  Marek Brudka  <mbrudka@aster.pl>

        * tao/Strategies/advanced_resource.h (Module):
        * tao/Strategies/advanced_resource.cpp (Module):

          Created a simple chain of resource_factories to allow creation
          of GUIReactors and using Advanced_Resource_Factory the same
          time.

        * tao/qt_resource_loader.cpp (Module):
        * tao/qt_resource.h (Module):
        * tao/qt_resource.cpp (Module):

          Corrected loading of TAO_QtResource_Factory. Protected against
          multiple calls of create_reactor_impl.

        Sun Jan  9 22:58:24 2005  Marek Brudka  <mbrudka@aster.pl>

        * tests/QtTests/svc.conf.xml (Module):
        * tests/QtTests/svc.conf (Module):
        * tests/QtTests/server.cpp (Module):
        * tests/QtTests/client.cpp (Module):

          Adapted the test to the current programming model for qt
          resource.

        * tao/tao_qtreactor.mpc (Module):
        * tao/qt_resource_loader.h (Module):
        * tao/qt_resource_loader.cpp (Module):

          Create preliminary version of QtReasourceLoader class for static
          use of Qt resources in TAO servers.

        Sun Jan  9 01:20:25 2005  Marek Brudka  <mbrudka@aster.pl>

        * docs/Options.html (Module):

          Updated documentation.

        * tao/Strategies/advanced_resource.h (Module):
        * tao/Strategies/advanced_resource.cpp (Module):

          Removed support for FlReactor and TkReactor from
          AdvancedFactory.

        * examples/AMI/FL_Callback/svc.conf.xml (Module):
        * examples/AMI/FL_Callback/svc.conf (Module):
        * examples/AMI/FL_Callback/FL_Callback.mpc (Module):
        * tests/FL_Cube/svc.conf.xml (Module):
        * tests/FL_Cube/svc.conf (Module):
        * tests/FL_Cube/server.cpp (Module):
        * tests/FL_Cube/client.cpp (Module):

          TAO_Advanced_Resource_Factory changed into
          TAO_FlResource_Factory.

        * tao/tao_xtreactor.mpc (Module):
        * tao/tao_tkreactor.mpc (Module):
        * tao/tao_qtreactor.mpc (Module):
        * tao/tao_flreactor.mpc (Module):

          Removed dependencies on features
          tao_qtreactor,tao_xtreactor,tao_flreactor,tao_tkreactor

        Mon Dec 13 19:17:29 2004  Marek Brudka  <mbrudka@aster.pl>

        * */.cvsignore (Module):

          Stopped cvs from complaining about unknown executables.

        Mon Dec 13 02:32:56 2004  Marek Brudka  <mbrudka@aster.pl>

        * tao/Strategies/advanced_resource.cpp (Message):

          Fix small bug related with missing plugin library.

        Mon Dec 13 02:28:06 2004  Marek Brudka  <mbrudka@aster.pl>

        * tests/FL_Cube/FL_Cube.mpc (Module):
        * examples/AMI/FL_Callback/FL_Callback.mpc (Module):

          Dependence on tao_flreactor changed into ace_fl.

        Mon Dec 13 00:38:28 2004  Marek Brudka  <mbrudka@aster.pl>

        * tao/Strategies/advanced_resource.h (Module):
        * tao/Strategies/advanced_resource.cpp (Module):

          Removed ACE_HAS_TK macros. Removed static linkage with
          ACE_TkReactor. Applied for dynamic loading of reactor framework
          to TkReactor.

        Mon Dec 13 00:37:45 2004  Marek Brudka  <mbrudka@aster.pl>

        * tao/tk_resource.i (Module):
        * tao/tk_resource.h (Module):
        * tao/tk_resource.cpp (Module):
        * tao/tao_tkreactor.mpc (Module):
        * tao/TAO_TkReactor_export.h (Module):

          Created TAO_TkReactor library with TAO_TkResourceFactory.

        * tao/fl_resource.h (Module):
        * tao/fl_resource.cpp (Module):

          Move #include "ace/FlReactor" from header to definition.

        * tao/Strategies.mpc (Module):

          Removed explicite dependencies of TAO_Strategies on
          TAO_TkReactor.

        Sun Dec 12 23:38:40 2004  Marek Brudka  <mbrudka@aster.pl>

        * docs/Options.html (Message):

          Updated documentation on Advanced_Resource_Factory.

        Sun Dec 12 23:01:58 2004  Marek Brudka  <mbrudka@aster.pl>

        * tao/tao_flreactor.mpc (Module):

          Created project for build TAO_FlReactor library.

        * tao/xt_resource.h (Module):
        * tao/xt_resource.cpp (Module):
        * tao/qt_resource.h (Module):
        * tao/qt_resource.cpp (Module):

          Removed bug related with incorrect service class (was TAO, is
          TAO_QtReactor or TAO_XtReactor) for exported Service_Objects and
          Factories.

        * tao/fl_resource.i (Module):
        * tao/fl_resource.h (Module):
        * tao/fl_resource.cpp (Module):
        * tao/TAO_FlReactor_export.h (Module):

          Create TAO_FlResourceFactory for ACE_FlReactor similar to
          QtResourceFactory.

        * tao/Strategies.mpc (Module):

          Removed explicite dependence on tao_flreactor.

        * tao/Strategies/advanced_resource.h (Module):
        * tao/Strategies/advanced_resource.cpp (Module):

          Removed ACE_HAS_FL macros. Removed static linkage with
          ACE_FlReactor. Created framework for dynamic loading of GUI
          reactors using ACE_DLL. Applied this framework for
          FlReactor. This framework is needed to preserve compatibility
          with previous TAO_AdvancedResourceFactory.

        * tests/FL_Cube/test_i.h (Module):
        * tests/FL_Cube/test_i.cpp (Module):
        * tests/FL_Cube/server.cpp (Module):
        * tests/FL_Cube/client.cpp (Module):
        * examples/AMI/FL_Callback/progress.cpp (Module):
        * examples/AMI/FL_Callback/Progress_i.h (Module):
        * examples/AMI/FL_Callback/Progress_i.cpp (Module):

          Removed ACE_HAS_FL macros.

        Sun Dec 12 15:12:41 2004  Marek Brudka  <mbrudka@aster.pl>

        * .cvsignore (Module):

          To stop cvs from complaining about unknown files.

        Sun Dec 12 14:44:53 2004  Marek Brudka  <mbrudka@aster.pl>

        * TAOACE.mwc (Module):

          Temporarily disabled some projects as MPC is now buggy.

        Sun Dec 12 01:14:03 2004  Marek Brudka  <mbrudka@aster.pl>

        * tao/tao_xtreactor.mpc (Module):
        * tao/tao_qtreactor.mpc (Module):

          Added header and inline files to project.

        * tao/Strategies.mpc (Module):

          Created dependence on tao_tkreactor and tao_flreactor. To be
          removed when tao_flresource and tao_tkresource will be
          avalaible.

        * tests/FL_Cube/FL_Cube.mpc (Module):
        * examples/AMI/FL_Callback/progress.cpp (Module):

          Fixed a bug related with undefined stdio functions.

        * examples/AMI/FL_Callback/Peer_i.cpp (Module):

          Fixed a bug related with undefined sleep function.

        * examples/AMI/FL_Callback/FL_Callback.mpc (Module):

          Created dependence on tao_flreactor. To be removed when
          tao_flresource will be available.

        Fri Dec 10 01:04:12 2004  Marek Brudka  <mbrudka@aster.pl>

        * tests/Xt_Stopwatch/.cvsignore (Module):

          Created few ignores to make cvs silent.

        Fri Dec 10 00:45:22 2004  Marek Brudka  <mbrudka@aster.pl>

        * tests/QtTests/.cvsignore (Module):
        * utils/catior/.cvsignore (Module):

          Created few ignores to make cvs silent.

        * tests/Xt_Stopwatch/svc.conf.xml (Module):
        * tests/Xt_Stopwatch/svc.conf (Module):

          Changed shared library wher XtResourceFactory is to be looked
          for.

        * tests/Xt_Stopwatch/timer.h (Module):
        * tests/Xt_Stopwatch/timer.cpp (Module):
        * tests/Xt_Stopwatch/test_i.h (Module):
        * tests/Xt_Stopwatch/test_i.cpp (Module):
        * tests/Xt_Stopwatch/server.cpp (Module):
        * tests/Xt_Stopwatch/client.cpp (Module):
        * tests/Xt_Stopwatch/Xt_Stopwatch.mpc (Module):
        * tests/Xt_Stopwatch/Stopwatch_display.h (Module):
        * tests/Xt_Stopwatch/Stopwatch_display.cpp (Module):
        * tests/Xt_Stopwatch/Control.h (Module):
        * tests/Xt_Stopwatch/Control.cpp (Module):
        * tests/Xt_Stopwatch/Client.h (Module):

          Removed ACE_HAS_XT macros.

        * tao/TAO_XtReactor_export.h (Module):

          Created export macros for TAO_XtRector library.

        * tao/xt_resource.h (Module):
        * tao/xt_resource.cpp (Module):

          Removed ACE_HAS_XT macros. Applied export macros for
          XtResourceFactory.

        * tao/tao_xtreactor.mpc (Module):

          Derived tao_xtreactor from all needed base projects.

        Fri Dec 10 00:40:11 2004  Marek Brudka  <mbrudka@aster.pl>

        * tests/QtTests/README (Module):

          Described a problem with ORB shutdown.

        * tests/QtTests/svc.conf.xml (Module):
        * tests/QtTests/svc.conf (Module):

          Change shared library where QtResource factory can be found from
          TAO to TAO_QtReactor.

        * tests/QtTests/server.cpp (Module):
        * tests/QtTests/client.cpp (Module):

          Removed silly mistake related with removing ACE_HAS_QT macros.

        Tue Dec  7 20:48:26 2004  Marek Brudka  <mbrudka@aster.pl>

        * tao/tao_qtreactor.mpc (Module):
        * tao/qt_resource.h (Module):
        * tao/TAO_QtReactor_export.h (Module):

          Created and applied export macros for TAO_QtReactor.

        Mon Dec  6 00:35:59 2004  Marek Brudka  <mbrudka@aster.pl>

        * TAO_IDL/.cvsignore (Module):

          To remove cvs warnings.

        Sun Dec  5 23:17:46 2004  Marek Brudka  <mbrudka@aster.pl>

        * tests/QtTests/test_i.h (Module):
        * tests/QtTests/test_i.cpp (Module):
        * tests/QtTests/server.cpp (Module):
        * tests/QtTests/server.cpp (Module):
        * tests/QtTests/client.h (Module):
        * tests/QtTests/client.cpp (Module):
        * tao/qt_resource.h (Module):
        * tao/qt_resource.cpp (Module):

          Removed dependencies on ACE_HAS_QT. Compilation is now managed
          by MPC.

        * tests/QtTests/QtTests.mpc (Module):

          Removed explicite dependencies on qt. They are managed now by qt
          based projects.

        Fri Dec  3 23:15:18 2004  Marek Brudka  <mbrudka@aster.pl>

        * tao/tao_xtreactor.mpc (Added):
        * tao/tao_qtreactor.mpc (Added):
        * tests/QtTests/QtTests.mpc (Modified):
        * tao/tao.mpc (Modified):

          Initial changes related with the separation of reactors into
          distinct libraries.  Many thanks to Raphael Bossek
          <raphael.bossek@gmx.de> for this patch.

Sat Jan 22 12:34:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Shutdown_Utilities.{h,cpp}:
          Moved implementation of Shutdown_Functor from header file
          to cpp file to fix link errors with Cygwin. Thanks to
          to Mike McGahan <mcgahan at sparta dot com> for reporting this.
          This fixes bugzilla id [2036].

Fri Jan 21 17:10:31 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/FTORB.mpc:
        * orbsvcs/orbsvcs/FaultTolerance.mpc:
        * orbsvcs/orbsvcs/Makefile.am:
        * orbsvcs/orbsvcs/PortableGroup.mpc:

          Added Pkgconfig_Files definitions.

Fri Jan 21 18:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_ss.cpp:

          Used VMCID while trying to propogate system exception with minor
          code.

Fri Jan 21 08:42:19 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/ORB.cpp (ORB_init):

          Reverted change that stored return value
          TAO_default_environment() in a reference to a
          CORBA::Environment.  MSVC++ 6 couldn't grok it.

Fri Jan 21 10:11:29 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/FT_App/FT_App.mpc:

          Corrected a typo in the 'after' setting.

Fri Jan 21 09:50:40 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/examples/ImR/Combined_Service/run_test.pl:

          Changed the final TerminateWaitKill()'s to Kill()'s as I should
          have done originally.

Fri Jan 21 13:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/RT_Task.cpp:
          Added needed include for Solaris 10 build

Fri Jan 21 13:19:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/SHMIOP_Acceptor.cpp:
          When ORBDottedDecimalAddresses is set to 1, then also respect
          this for SHMIOP. The endpoint created then also contains the
          ip address instead of the hostname. This is the same behaviour
          as for IIOP. On Windows we default to using ip addresses because
          DNS is often broken on Windows systems, SHMIOP didn't respected
          this behaviour which caused test failures on our Windows build
          systems at the moment our DNS server was crashed. This fixes
          bugzilla bug [2033].

Fri Jan 21 12:17:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/SHMIOP_Connector.cpp:
          Improved debug messages to make formatting consistent
          and give a little more info what the problem is.

Thu Jan 20 17:23:27 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/CosConcurrency.mpc:
        * orbsvcs/orbsvcs/CosEvent.mpc:
        * orbsvcs/orbsvcs/CosLifeCycle.mpc:
        * orbsvcs/orbsvcs/CosLoadBalancing.mpc:
        * orbsvcs/orbsvcs/CosNaming.mpc:
        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/CosProperty.mpc:
        * orbsvcs/orbsvcs/CosTime.mpc:
        * orbsvcs/orbsvcs/CosTrading.mpc:
        * orbsvcs/orbsvcs/DsEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsNotifyLogAdmin.mpc:
        * orbsvcs/orbsvcs/ETCL.mpc:
        * orbsvcs/orbsvcs/Svc_Utils.mpc:

          Added Pkgconfig_Files definitions.

Thu Jan 20 16:22:42 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_typedef.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:

          In code generation for a typedef of an IDL array, added
          a check for the case where the typedef is in the same
          scope as the array. In such a case, we now generate the
          local name for the declaration of the typedef's array
          memory management functions, if it is declared in a
          scope that is not global or a module (namespace). An
          array + array typedef inside an interface (C++ class)
          for example formerly generated static inline function
          declarations which, when declared with the fully scoped
          name inside the C++ class, caused a problem with some
          compilers.

Thu Jan 20 12:41:38 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Removed directory prefixes from pkgconfig_DATA definitions.

Thu Jan 20 18:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/SHMIOP_Endpoint.cpp (set):
          Added more debug messages just like in IIOP_Endpoint

        * tao/Strategies/SHMIOP_Endpoint.h:
          Doxygen improvements

Thu Jan 20 16:18:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Acceptor.cpp:
          Updated debug messages so that we use the same formatting throughtout
          TAO

Thu Jan 20 06:42:31 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerate.

        * tao/BiDir_GIOP.mpc:
        * tao/Domain.mpc:
        * tao/DynamicAny.mpc:
        * tao/DynamicInterface.mpc:
        * tao/IFR_Client.mpc:
        * tao/IORInterceptor.mpc:
        * tao/IORManipulation.mpc:
        * tao/IORTable.mpc:
        * tao/Messaging.mpc:
        * tao/ObjRefTemplate.mpc:
        * tao/PortableServer.mpc:
        * tao/RTCORBA.mpc:
        * tao/RTPortableServer.mpc:
        * tao/RTScheduler.mpc:
        * tao/SmartProxies.mpc:
        * tao/Strategies.mpc:
        * tao/TypeCodeFactory.mpc:
        * tao/Utils.mpc:
        * tao/Valuetype.mpc:
        * tao/tao.mpc:

          Added Pkgconfig_Files definitions.

Thu Jan 20 07:53:44 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/examples/ImR/Combined_Service/run_test.pl:

          Attempt to ensure that no processes are left running when the
          script completes.

Thu Jan 20 07:41:04 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tests/GIOP_Fragments/Java_Big_Request/Payload_Receiver.cpp:
        * tests/GIOP_Fragments/PMB_With_Fragments/Payload_Receiver.cpp:

          Supply the ACE_ENV_... to ORB::shutdown() to support non-native
          exception builds.

        * tests/GIOP_Fragments/Java_Big_Request/server.cpp:
        * tests/GIOP_Fragments/PMB_With_Fragments/server.cpp:

          Added #include "ace/OS_NS_stdio.h" to avoid build problems with
          inline=0.

Thu Jan 20 06:57:40 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Property/client.cpp:
        * performance-tests/Callback/client.cpp:
        * performance-tests/Latency/AMI/client.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/client.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/client.cpp:
        * tests/MT_BiDir/client.cpp:
        * tests/Portable_Interceptors/Benchmark/client.cpp:
        * tests/Smart_Proxies/Benchmark/client.cpp:

          Changed debug messages from printing "server" to "client".

Thu Jan 20 00:47:58 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Collocation_Tests/Hello.cpp (get_string):

          Fixed syntax error caused by renaming of TAO_ORB_Table class to
          TAO::ORB_Table (see below).  Note that TAO::ORB_Table is only
          meant to be used internally by TAO.

Wed Jan 19 11:44:48 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tests/GIOP_Fragments/Java_Big_Reply/Client_Task.h:
        * tests/GIOP_Fragments/Java_Big_Reply/Java_Big_Reply.mpc:
        * tests/GIOP_Fragments/Java_Big_Request/Java_Big_Request.mpc:
        * tests/GIOP_Fragments/Java_Big_Request/Payload_Receiver.h:
        * tests/GIOP_Fragments/PMB_With_Fragments/PMB_With_Fragments.mpc:
        * tests/GIOP_Fragments/PMB_With_Fragments/Payload_Receiver.h:

          Got rid of fuzz errors.

Wed Jan 19 09:31:05 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/ORB.cpp:
        * tao/ORB.h:
        * tao/ORBInitializer_Registry.cpp:
        * tao/ORBInitializer_Registry.h:
        * tao/ORB_Core.cpp:
        * tao/ORB_Table.cpp:
        * tao/ORB_Table.h:
        * tao/ORB_Table.inl:
        * tao/TAO_Internal.cpp:
        * tao/TAO_Internal.h:

          Fixed a deadlock that occurred when daemonizing an ORB process
          via "-ORBDaemon" by making locking finer grained and not abusing
          the ACE_Static_Object_Lock.  The problem only appears to occur
          on (NPTL-based?) Linux installations. Thanks to Ken Sedgwick
          <ken at bonsai dot com> for pointing out the problem.

          Moved some static functions into the TAO::ORB namespace and some
          global variables into an anonymous namespace since they are
          used internal to TAO.

Wed Jan 19 10:01:57 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_typedef.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:

          Fixed a bug in code generation when both an array (which
          is declared in generated code as a typedef) and a typedef
          of the array are declared inside another data type which
          is not a module. In such a case, the *_alloc(), *_dup(),
          *_copy() and *_free() functions must be static. Also,
          the empty struct *_tag (used as a template parameter)
          was not being declared for the typedef of the array, along
          with the *_slice, *_var, *_out, and *_forany typedefs.
          Thanks to Johnny Willemsen <jwillemsen@remedy.nl> and
          Thomas Groth <groth.th@nord-com.net> for reporting the bug
          and submitting the example IDL that demonstrated the problem.

        * tests/IDL_Test/array.idl:

          Added the submitted IDL mentioned above to the IDL test
          for arrays.

Wed Jan 19 15:22:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/SHMIOP_Endpoint.cpp:
          Fixed compile error

Wed Jan 19 08:24:36 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tao/GIOP_Message_Base.h:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Generator_Parser.h:
        * tao/GIOP_Message_Generator_Parser_10.h:
        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/GIOP_Message_Generator_Parser_12.h:
        * tao/GIOP_Message_Generator_Parser_12.cpp:
        * tao/GIOP_Message_Generator_Parser_Impl.inl:
        * tao/GIOP_Message_Lite.h:
        * tao/GIOP_Message_Lite.cpp:
        * tao/GIOP_Message_State.h:
        * tao/GIOP_Message_State.cpp:
        * tao/Incoming_Message_Queue.h:
        * tao/Incoming_Message_Queue.inl:
        * tao/Incoming_Message_Queue.cpp:
        * tao/Pluggable_Messaging.h:
        * tao/Transport.h:
        * tao/Transport.cpp:

          Adding an alternate implementation of PMB and an implementation of
          GIOP fragment handling that only consolidates fragments when the
          last one is received.

          Partial GIOP messages are accumulated in a message block within
          the TAO_Transport until a sufficient amount of data is collected.
          At that point, processing occurs as usual.

        * tests/GIOP_Fragments/Java_Big_Reply/Client_Task.h:
        * tests/GIOP_Fragments/Java_Big_Reply/Client_Task.cpp:
        * tests/GIOP_Fragments/Java_Big_Reply/Java_Big_Reply.mpc:
        * tests/GIOP_Fragments/Java_Big_Reply/Test.idl:
        * tests/GIOP_Fragments/Java_Big_Reply/client.cpp:
        * tests/GIOP_Fragments/Java_Big_Reply/run_test.pl:
        * tests/GIOP_Fragments/Java_Big_Reply/server.java:
        * tests/GIOP_Fragments/Java_Big_Request/Java_Big_Request.mpc:
        * tests/GIOP_Fragments/Java_Big_Request/Payload_Receiver.h:
        * tests/GIOP_Fragments/Java_Big_Request/Payload_Receiver.cpp:
        * tests/GIOP_Fragments/Java_Big_Request/Test.idl:
        * tests/GIOP_Fragments/Java_Big_Request/client.java:
        * tests/GIOP_Fragments/Java_Big_Request/run_test.pl:
        * tests/GIOP_Fragments/Java_Big_Request/server.cpp:

          When the Java client/server is run using the JDK ORB, it will
          fragment the GIOP messages to exercise the GIOP fragment handling
          code in TAO.

        * tests/GIOP_Fragments/PMB_With_Fragments/PMB_With_Fragments.mpc:
        * tests/GIOP_Fragments/PMB_With_Fragments/Payload_Receiver.h:
        * tests/GIOP_Fragments/PMB_With_Fragments/Payload_Receiver.cpp:
        * tests/GIOP_Fragments/PMB_With_Fragments/Test.idl:
        * tests/GIOP_Fragments/PMB_With_Fragments/dribble.pl:
        * tests/GIOP_Fragments/PMB_With_Fragments/giop1.2_fragments.dat:
        * tests/GIOP_Fragments/PMB_With_Fragments/giop1.2_fragments.layout:
        * tests/GIOP_Fragments/PMB_With_Fragments/run_test.pl:
        * tests/GIOP_Fragments/PMB_With_Fragments/server.cpp:

          This test uses canned GIOP 1.2 fragment data and exercises the PMB
          code as well as GIOP fragment handling code.

Wed Jan 19 12:26:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/SHMIOP_Endpoint.cpp:
        * tao/Strategies/SHMIOP_Profile.cpp:
          Replaced ACE casts with their C++ versions

Tue Jan 18 19:59:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/SHMIOP_Connector.cpp:
          Use ACE_ERROR/LM_ERROR to print out error messages instead of
          ACE_DEBUG/LM_DEBUG, makes it easier to search for messages
          in the log

Tue Jan 18 19:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/SHMIOP_Connector.cpp:
          Replaced ACE casts with their C++ versions

Thu Jan 13 13:50:26 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_array/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_enum/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_cdr_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:

          - Replaced calls to an interface's virtual marshal() method
            with calls to TAO::Objref_Traits<>::marshal(), which
            in turn calls the static methjod CORBA::Object::Marshal(),
            which does a check for null reference. Most of these
            replacements had been done some time ago, these were
            evidently overlooked. This fix closes [BUGID:2027].
            Thanks to Jiang Wei <jiangwei_1976@yahoo.com.cn> for
            reporting the marshaling failure of empty object
            references in a sequence.

          - Made generated CORBA::Boolean values more consistent about
            assigning or returniong 'true' or 'false' rather than
            '1' or '0'.

        * tao/Valuetype/AbstractBase.cpp:

          Added a check to the CDR stream output operator for null
          _ptr value. If a null is found, the operator marshals a
          discriminator value of 1 (corresponding to an object reference)
          and an empty type hint (this last is similar to the behavior
          of CORBA::Object::marshal()).

        * tao/Valuetype/AbstractBase.h:
        * tao/Valuetype/ValueBase.cpp:

          Made CORBA::Boolean values more consistent about assigning or
          returning 'true' or 'false' rather than '1' or '0'. Also
          changed evaluation of CDR stream operations to use '!' instead
          of '== 0'.

        * tests/IDL_Test/IDL_Test.mpc:

          Shortened file to use wildcards instead of listing file names.

Thu Jan 13 11:55:55 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.cpp:

          Include "ace/OS_NS_unistd.h" to pull in ACE_OS::getpid()
          declaration.

          Replaced ACE_static_cast macro usage with standard C++
          static_cast<>.

Thu Jan 13 11:52:55 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/tests/Concurrency/CC_command.cpp (execute):

          Use "fgetc (stdin)" instead of "getchar ()".  ACE doesn't wrap
          the latter.  Fixes a build error.

Thu Jan 13 01:07:11 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/PortableServer/POA.h (objectkey_prefix):
        * tao/PortableServer/POA.cpp (objectkey_prefix):

          Changed this static array is to be an array of constant
          CORBA::Octets of instead of an array of non-constant
          CORBA::Octets.  The former is what was intended.  Also provides
          compiler with additional optimization opportunities.

Wed Jan 12 23:01:24 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Portable_Interceptors/PolicyFactory/IORInterceptor.cpp:

          Fixed spelling typo.

        * tests/Portable_Interceptors/PolicyFactory/server.cpp:

          Cosmetic change.

Wed Jan 12 22:36:58 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/ObjRefTemplate/ORT_Adapter_Impl.h (tao_ort_template_):

          Removed this attribute.  A local variable within the activate()
          method is all that is needed.

          (ORT_Adapter_Impl):

          Removed default constructor declaration.  The compiler generated
          one will now suffice since all remaining class members define
          suitable default constructors.

        * tao/ObjRefTemplate/ORT_Adapter_Impl.cpp:

          Coding convention improvements.

          (ORT_Adapter_Impl):

          Removed default constructor implementation.  See default
          constructor declaration removal description above.

          (activate):

          Fixed invalid widening assignment from
          PortableInterceptor::ObjectReferenceTemplate_var to
          PortableInterceptor::ObjectReferenceFactory_var.

        * tao/PortableServer/ORT_Adapter.h (release):

          Added this new pure virtual method.  It allows the POA to
          explicitly release an ObjectReferenceTemplate instance without
          pulling in valuetype related code.

        * tao/PortableServer/POA.cpp (destroy_i):

          Fixed memory leak related to tricky ObjectReferenceTemplate
          memory management.

        * tao/PortableServer/POA.h:

          Cosmetic improvement.

        * tao/RTCORBA/Network_Priority_Mapping_Manager.h:
        * tao/RTCORBA/Priority_Mapping_Manager.h:
        * tao/RTScheduling/Current.h:
        * tao/RTScheduling/RTScheduler_Manager.h:

          Changed all TAO-specific "_var" classes to inherit privately,
          rather than publicly, from TAO_Base_var.  Public inheritance in
          this case is not correct since (1) the TAO-specific "_var"
          classes are not meant to satisfy an "IS-A" relationship with
          TAO_Base_var, and (2) since it allows some invalid widening
          assignments to occur.

        * tao/Valuetype/Value_VarOut_T.h (TAO_Value_Var_T):

          Inherit privately from TAO_Base_var and declare a private copy
          constructor and assignment operator that accept a reference to a
          constant TAO_Base_var.  Prevents invalid widening assignments.

        * tao/Valuetype/Value_VarOut_T.cpp (TAO_Value_Var_T):

          Explicitly initialize TAO_Base_var base class in base member
          initializer list of copy constructor.

        * orbsvcs/tests/Concurrency/CC_command.cpp (execute):

          Replaced use of insecure gets() function call with one to
          getchar().  The latter is all that is needed since only one
          character is needed from stdin.

Wed Jan 12 19:53:06 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.cpp:

          Changed to not crash if ior file can not be opened.

          Added '-p' command line option to write process id to file.

Wed Jan 12 15:57:30 2005 Huang-Ming Huang <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTRT_Group_Manager.cpp

          Fixed unused variable warning. Thanks to Johnny Willemsen
          <jwillemsen@remedy.nl> for pointing out.

Tue Jan 11 23:19:33 2005  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/GIOP_Message_Base.cpp:

          Fixed a debug output which was appearing without the debug level
          being set. Thanks to Lother Werzinger for reporting this.

Tue Jan 11 20:44:30 2005 Huang-Ming Huang <hh1@cse.wustl.edu>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTRT_Group_Manager.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/IOGRMaker.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/IOGRMaker.cpp

          Fixed problem with the scenario when the secondary event
          channel crashes and a new backup joins in the object group.
          Thanks to Thia Chang Chao <tchangch@dso.org.sg> for reporting
          the problem.

        * orbsvcs/FTRT_Event_Service/Event_Service/FT_EventService.cpp
        * orbsvcs/FTRT_Event_Service/ftec
        * orbsvcs/FTRT_Event_Service/supplier

          Added debug options.

Tue Jan 11 14:49:40 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_preproc.cpp:

          Added close of temporary file created only inside
          #ifndef ACE_LACKS_MKSTEMP guard. Thanks to
          M. C. Gahan <mcgahan@sparta.com> for reporting the
          problem of the dangling descriptor. This fix closes
          [BUGID:2026].

Tue Jan 11 12:17:26 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/CosNaming.mpc:

          List the naming_serv_export.h instead of Naming_Server.h.
          Naming_Server.h gets added automatically.

        * orbsvcs/orbsvcs/FaultTolerance.mpc:

          Removed a redundant listing of FT_CORBAC.cpp.

        * orbsvcs/orbsvcs/RTEvent.mpc:

          Moved two files listed in Source_Files into Template_Files as they
          are template cpp files.

        * orbsvcs/orbsvcs/RTOLDEvent.mpc:

          Removed the listing of RTOldEvent.rc.  MPC will now detect that it
          belongs to the RTOLDEvent project due to case insensitivity for
          resource files.

Mon Jan 10 18:26:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.cpp:
          When the IORInterceptor Adapter is requested but can't be
          retrieved we throw an internal error. Added an ACE_ERROR in
          front of it so that it is much easier to detect what went
          wrong and caused the internal error

Mon Jan 10 10:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Profile.h:
          Doxygen improvements

Sun Jan  9 19:52:09 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Naming/README:

          Updated to note that Naming_Utils.{cpp,h} was split into
          Naming_Client.{cpp,h} and Naming_Server.{cpp,h}.

Sun Jan  9 19:36:24 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Generate pkg-config *.pc files from templates.

        * orbsvcs/orbsvcs/TAO_CosConcurrency.pc.in:
        * orbsvcs/orbsvcs/TAO_CosLifeCycle.pc.in:
        * orbsvcs/orbsvcs/TAO_CosLoadBalancing.pc.in:
        * orbsvcs/orbsvcs/TAO_CosProperty.pc.in:
        * orbsvcs/orbsvcs/TAO_CosTime.pc.in:

          New files, pkg-config *.pc templates.

Sun Jan  9 12:00:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.h:
        * tao/PortableServer/Servant_Location:
          Moved the enum TAO_SERVANT_LOCATION to its own file.

        * tao/Makefile.am:
          Updated for change above

Sun Jan  9 11:06:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.{h,cpp}:
        * tao/PortableServer/Object_Adapter_Factory.{h,cpp}:
          Moved TAO_Object_Adapter_Factory to its own file

        * tao/PortableServer/PortableServer.cpp:
          Added include of Object_Adapter_Factory.h

        * tao/RTPortableServer/RT_Object_Adapter_Factory.h:
          Include Object_Adapter_Factory.h instead of Object_Adapter.h

        * tao/Makefile.am:
          Updated for change above

Sun Jan  9 10:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Default_Acceptor_Filter.cpp:
          Fixed incorrect ACE_RCSID

        * tao/PortableServer/Default_Acceptor_Filter.h:
          Removed not needed push/pop for msvc

Sun Jan  9 10:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Base.{h,cpp,i}:
        * tao/PortableServer/Local_Servant_Base.{h,cpp,inl}:
          Moved TAO_Local_ServantBase to its own file. Also changed
          TAO_RefCountServantBase::_ref_count to
          TAO_RefCountServantBase::_refcount_value, the first was TAO
          specific, the second is defined by the corba spec. This fixes
          bugzilla [1951]. Thanks to Frank Pilhofer <fp at mc dot com>
          for reporting this

        * tao/Makefile.am:
          Updated for change above

Sat Jan  8 14:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Sequence_Latency/Thread_Per_Connection/Thread_Per_Conn.mpc:
        * performance-tests/Sequence_Latency/Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Sequence_Latency/DSI/DSI.mpc:
        * performance-tests/Sequence_Latency/DII/DII.mpc:
        * performance-tests/Sequence_Latency/Deferred/Deferred.mpc:
        * performance-tests/Sequence_Latency/AMI/ami.mpc:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Sequence_Latency/Thread_Pool/Thread_Pool.mpc:
        * tests/Bug_1330_Regression/Bug_1330_Regression.mpc:
          Use taoserver instead of server as base project and use taoclient
          for the client

Fri Jan  7 22:46:31 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Generate pkg-config *.pc files from templates.

        * orbsvcs/orbsvcs/TAO_CosEvent.pc.in:
        * orbsvcs/orbsvcs/TAO_CosEvent_Serv.pc.in:
        * orbsvcs/orbsvcs/TAO_CosEvent_Skel.pc.in:
        * orbsvcs/orbsvcs/TAO_CosNaming.pc.in:
        * orbsvcs/orbsvcs/TAO_CosNaming_Serv.pc.in:
        * orbsvcs/orbsvcs/TAO_CosNaming_Skel.pc.in:
        * orbsvcs/orbsvcs/TAO_CosNotification.pc.in:
        * orbsvcs/orbsvcs/TAO_CosNotification_Serv.pc.in:
        * orbsvcs/orbsvcs/TAO_CosNotification_Skel.pc.in:
        * orbsvcs/orbsvcs/TAO_CosTrading.pc.in:
        * orbsvcs/orbsvcs/TAO_CosTrading_Serv.pc.in:
        * orbsvcs/orbsvcs/TAO_CosTrading_Skel.pc.in:
        * orbsvcs/orbsvcs/TAO_DsEventLogAdmin.pc.in:
        * orbsvcs/orbsvcs/TAO_DsEventLogAdmin_Serv.pc.in:
        * orbsvcs/orbsvcs/TAO_DsEventLogAdmin_Skel.pc.in:
        * orbsvcs/orbsvcs/TAO_DsLogAdmin.pc.in:
        * orbsvcs/orbsvcs/TAO_DsLogAdmin_Serv.pc.in:
        * orbsvcs/orbsvcs/TAO_DsLogAdmin_Skel.pc.in:
        * orbsvcs/orbsvcs/TAO_DsNotifyLogAdmin.pc.in:
        * orbsvcs/orbsvcs/TAO_DsNotifyLogAdmin_Serv.pc.in:
        * orbsvcs/orbsvcs/TAO_DsNotifyLogAdmin_Skel.pc.in:
        * orbsvcs/orbsvcs/TAO_ETCL.pc.in:
        * orbsvcs/orbsvcs/TAO_Svc_Utils.pc.in:

          New files, pkg-config *.pc templates.

Fri Jan  7 19:24:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Two_Objects/Two_Objects.mpc:
        * tests/Timeout/Timeout.mpc:
        * tests/Single_Read/Single_Read.mpc:
        * tests/Server_Connection_Purging/Server_Connection_Purging.mpc:
        * tests/Server_Leaks/Server_Leaks.mpc:
        * tests/ORB_shutdown/Foo_Bar.mpc:
        * tests/Oneways_Invoking_Twoways/Oneways_Invoking_Twoways.mpc:
        * tests/OctetSeq/OctetSeq.mpc:
        * tests/Objref_Sequence_Test/Objref_Sequence_Test.mpc:
        * tests/No_Server_MT_Connect_Test/No_Server_Connect_Test.mpc:
        * tests/Native_Exceptions/Native_Exceptions.mpc:
        * tests/Muxed_GIOP_Versions/Muxed_GIOP_Versions.mpc:
        * tests/Multiple_Inheritance/Multiple_Inheritance.mpc:
        * tests/Multiple/Multiple.mpc:
        * tests/MT_Timeout/MT_Timeout.mpc:
        * tests/Forwarding/Forwarding.mpc:
        * tests/Explicit_Event_Loop/Explicit_Event_Loop.mpc:
        * tests/Crash_On_Write/Crash_On_Write.mpc:
        * tests/Connection_Purging/Connection_Purging.mpc:
        * tests/Connection_Failure/Connection_Failure.mpc:
        * tests/Connect_Strategy_Test/Connect_Strategy_Test.mpc:
        * tests/Cache_Growth_Test/Cache_Growth_Test.mpc:
        * tests/Bug_1627_Regression/test.mpc:
        * tests/Abstract_Interface/Abstract_Interface.mpc:
          Changed above mpc files by using the correct base project, derive
          the server from taoserver, the client from taoclient. Some clients
          did link S.cpp files which where not needed. Seems more mpc files
          could be cleaned and simplified.

Fri Jan  7 18:58:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Client_Leaks/Client_Leaks.mpc:
          Simplified this mpc file by using taoserver and taoclient base
          projects

Fri Jan  7 18:56:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_Request_Muxing/Big_Request_Muxing.mpc:
          Simplified this mpc file by using taoserver and taoclient base
          projects

Fri Jan  7 18:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Hello/Hello.mpc:
          Use taoserver and taoclient as base projects to simplify this file

        * tests/Muxing/Muxing.mpc:
        * tests/Big_Reply/Big_Reply.mpc:
          Use taoserver and taoclient as base projects to simplify this file.
          Added TestC.cpp explicitly to the client, so that we don't get
          TestS.cpp and then we also don't need portableserver for the client

Fri Jan  7 17:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/Event_Channel.h:
          Include ace/Unbounded_Set.h, not Unbound_Set_Ex.h because that
          one has been removed

Fri Jan  7 14:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orb.idl:
        * tao/orb_types.pidl:
        * tao/orb_typesA.cpp:
        * tao/orb_typesC.h:
          Checked the CORBA spec, that ObjectId and ObjectIdList are not in the
          CORBA module but are in CORBA::ORB. Both where defined in orb.idl
          but shouldn't be there. So, removed ObjectId from orb_types and
          ObjectIdList from orb_types. This way there is also no conflict
          with the PortableServer::ObjectId

Fri Jan  7 12:23:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/Event/Event_Channel.{h,cpp}:
        * orbsvcs/orbsvcs/Notify/Default_Factory.cpp:
          Replaced ACE_Unbounded_Set_Ex with ACE_Unbounded_Set, the Ex version
          gives the wrong feeling about safety when using it. This belongs to
          the change below:
          Thu Jan  6 08:24:39 2005  Carlos O'Ryan  <coryan@atdesk.com>
          After a last check for ACE_Unbounded_Set_Ex this template will be
          removed from ACE

        * orbsvcs/orbsvcs/ESF/ESF_Proxy_List.h:
          Replaced ACE_Unbounded_Set_Ex with ACE_Unbounded_Set in comments

Fri Jan  7 08:34:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.h:
        * tao/orb_typesC.h:
        * tao/orb_typesA.cpp:
          Temporarily commented out the ObjectId typedefs in the orb_typesC.h,
          when someone uses using namespace CORBA and PortableServer we get
          ambiguity because ObjectId is in the CORBA and PortableServer
          namespace. Removed the typecode for ObjectId from ORB.h, it is not
          in orb_types. When the POA refactoring is merged next month, the
          ObjectId in the PortableServer namespace will move to the GOA
          namespace (see MIOP specification) and we can enable the typedefs
          again

Thu Jan  6 12:39:43 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Add Adapter_{Factory,Registry}.cpp to ORB_Core defn.

Thu Jan  6 18:27:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/tao.mpc:
          Fixed casing in orb_types filenames.

Thu Jan  6 15:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orb.idl:
        * tao/Typecode_types.pidl:
        * tao/orb_types.pidl:
          Moved typecode stuff to Typecode_types.pidl and simple typedefs to
          orb_types.pidl and include both new files again in orb.idl. Other
          idl/pidl files which just need the typedefs or typecode stuff just
          can then include the specific pidl file instead of orb.idl which
          pulls in a lot more then really needed

        * tao/ORB.h:
          Removed typedefs that now are in orb_types.pidl, added a needed
          forward declaration and removed some commented out code

        * tao/orb_typesA.cpp:
        * tao/orb_typesC.{h,cpp,inl}:
        * tao/orb_typesS.h:
        * tao/Typecode_typesC.{h,cpp,inl}:
        * tao/Typecode_typesS.h:
          Added new generated files

        * tao/tao.mpc:
          Added new fils

        * tao/Makefile.am:
          Added new files

        * tao/Typecode.{h,cpp}:
          Removed things that are now in Typecode.pidl and included
          the TypecodeC.h file instead.

        * tao/diffs/Typecode_types.diff:
          New diff file

        * tao/Typecode_Constants.cpp:
          Removed typecode for ORBid, it is now in orb_types

Thu Jan  6 08:24:39 2005  Carlos O'Ryan  <coryan@atdesk.com>

        * orbsvcs/orbsvcs/ESF/ESF_Proxy_List.h:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_List.i:
          Use ACE_Unbounded_Set instead of ACE_Unbounded_Set_Ex.  The
          latter is not thread-safe, and the bugs attributed to the former
          (see http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=1465)
          are actually a user-configuration mistake.

Thu Jan  6 12:02:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/Network_Priority_Mapping_Manager.h:
        * tao/RTCORBA/Priority_Mapping_Manager.h:
          Removed not needed pragma push/pop for msvc

Thu Jan  6 11:35:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Adapter.{h,cpp}:
        * tao/Adapter_Factory.{h,cpp}:
        * tao/Adapter_Registry.{h,cpp}:
          Moved TAO_Adapter_Registry and TAO_Adapter_Factory to its own file

        * tao/ORB_Core.{h,cpp}:
        * tao/Internal.cpp:
        * tao/IORTable/Table_Adapter.h:
        * tao/PortableServer/Object_Adapter.h:
          Updated includes because of change above

        * tao/Makefile.am:
        * tao/tao.mpc:
          Added new files above

Thu Jan  6 09:53:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

          Checkin of separate footprint issue. This has no influence at the
          other code, so committed this. When the POA refactoring is merged
          the ImplRepo code will move to another new library

        * tao/PortableServer/ImplRepo.pidl:
        * tao/PortableServer/ServerObject.pidl:
        * tao/PortableServer/ImplRepoA.cpp:
        * tao/PortableServer/ImplRepoC.{h,cpp,i,inl}:
        * tao/PortableServer/ImplRepoS.{h,cpp,i,inl}:
          Moved the ServerObject interface to its own idl file so
          that when someone just uses the ServerObject stub and
          the ImplRepo proxy, he doesn't link in the ImplRepo stub
          which is big.

        * tao/PortableServer/ServerObjectA.cpp:
        * tao/PortableServer/ServerObjectC.{h,cpp,inl}:
        * tao/PortableServer/ServerObjectS.{h,cpp,inl}:
          New generated files

        * tao/PortableSever/ImplRepo_i.h:
          Replaced include of ImplRepoS.h with ServerObjectS.h

        * tao/PortableServer/POA.cpp:
          Added include of ImplRepoC.h

        * tao/Makefile.am:
          Added new files above

Thu Jan  6 09:18:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/PortableServer_include.pidl:
        * tao/PortableServer/PortableServer_includeS.h:
        * tao/PortableServer/PortableServer_includeC.h:
          Added new files. These will be used soon, we will prevent
          the including of PortableServerC.h soon, users should include
          PortableServer.h to make sure the PortableServer library is
          loaded. Some users include PortableServer.pidl, they should
          include this new PortableServer_include.pidl instead else they
          get compile errors in the future

        * tao/Makefile.am:
          Added new files above

Wed Jan  5 22:06:14 2005  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/UTF16_BOM_Translator.cpp (write_wstring):

          When writing a nul wstring in a GIOP 1.2 message, the translator
          had been writing out a BOM. While this behavior was consistent
          with the CORBA specification, and handled just fine by some
          ORBs, others, specifically JDK's ORB, did not tolerate this. The
          solution is to simply not write out a BOM when writing a zero
          length wstring.

        * interop-tests/wchar/client.cpp:
        * interop-tests/wchar/Client.java:
        * interop-tests/wchar/wchar_reference.cpp:
        * interop-tests/wchar/WCharReference.java:
        * interop-tests/wchar/README:

          Added a new test case specifically for sending a nul wstring.
          Thanks to Deiter Schneiders <dschneiders@lhs-systems.com> for
          pointing this out.

Wed Jan  5 19:48:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/HTIOP/HTIOP_Acceptor_Impl.{h,cpp,i}:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Completion_Handler.{h,cpp,i}:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connection_Handler.{h,cpp,i}:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connector_Impl.{h,cpp,i}:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Profile.{h,cpp,i}:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Transport.{h,cpp,i}:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.{h,cpp,i}:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.{h,cpp,i}:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.{h,cpp,i}:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.{h,cpp,i}:
          Removed i/inl file, update h/cpp

        * orbsvcs/orbsvcs/Makefile.am
          Updated for change above

Wed Jan  5 19:33:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.{h,cpp,i,inl}:
          Removed i/inl file, update h/cpp

        * orbsvcs/orbsvcs/Makefile.am
          Updated for change above

Wed Jan  5 19:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Read.{h,cpp,i}:
        * orbsvcs/orbsvcs/ESF/ESF_Peer_Admin.{h,cpp,i}:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Collection.{h,cpp,i}:
        * orbsvcs/orbsvcs/ESF/ESF_Worker.{h,cpp,i}:
          Removed i file, update h/cpp

Wed Jan  5 19:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Key_Adapters.{h,cpp,i}:
        * tao/PortableServer/POA_Policies.{h,cpp,i}:
          Removed i file, update h/cpp

        * tao/Makefile.am:
          Updated for change above

Wed Jan  5 19:21:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Runtime_Scheduler.{h,cpp,i}:
          Removed i file, update h/cpp

        * orbsvcs/orbsvcs/Makefile.am
          Updated for change above

Wed Jan  5 19:17:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:
          Removed include of EC_ConsumerAdmin.i, this file is zapped and
          it was completely wrong to include that file here.

Wed Jan  5 09:33:54 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/extra_core.mpb:
        * tao/tao.mpc:

          Removed the extra nested braces related to TAO_COMPONENTS
          that create "subdirectories" in VC project files. In makefiles,
          these "components" might be separately compiled but they won't
          link, so the feature is not used on any platform. In VC projects,
          the extra level of folders makes source and header files
          much harder to locate in the GUI environment.

Wed Jan  5 14:22:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/AMI/FL_Callback/Progress_i.{h,cpp,i}:
        * examples/AMI/FL_Callback/Peer_i.{h,cpp,i}:
        * tests/FL_Cube/test_i/{h,cpp,i}:
        * tests/Object_Loader/Loader.{h,cpp,i}:
        * tests/Object_Loader/Test_i.{h,cpp,i}:
        * tests/QtTests/test_i.{h,cpp,i}:
        * tests/RTCORBA/Diffserv/Custom_Network_Priority_Mapping.i:
        * tests/Timeout/test_i.{h,cpp,i}:
        * tests/Xt_Stopwatch/test_i.{h,cpp,i}:
        * orbsvcs/tests/EC_Throughput/ECT_Driver.{h,cpp,i}:
        * orbsvcs/tests/Notify/lib/Supplier_T.{h,cpp,i}:
        * orbsvcs/tests/Notify/lib/Peer_T.{h,cpp,i}:
        * orbsvcs/tests/Notify/lib/Consumer_T.{h,cpp,i}:
          Removed i file and updated h/cpp file.

        * orbsvcs/tests/EC_Throughput/Makefile.am:
          Updated for changes above

Wed Jan  5 13:47:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype/ValueFactory.{h,cpp,inl}:
        * tao/Valuetype/ValueFactory_Map.{h,cpp,inl}:
        * tao/Valuetype/Value_VarOut_T.{h,cpp,inl}:
          Removed inl file and updated h/cpp file.

        * orbsvcs/orbsvcs/Makefile.am
          Updated for changes above

Wed Jan  5 13:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/default_client.{h,cpp,i}:
        * tao/default_server.{h,cpp,i}:
          Removed i file and updated h/cpp file.

        * orbsvcs/orbsvcs/Makefile.am
          Updated for changes above

Wed Jan  5 11:50:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/Builder.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Default_Factory.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/ETCL_FilterFactory.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/EventChannel.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/EventChannelFactory.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/EventTypeSeq.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Method_Request_Event.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Method_Request_Shutdown.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Name_Value_Pair.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer_T.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Proxy_T.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/RT_Builder.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/RT_Factory.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/RT_Notify_Service.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/RT_POA_Helper.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Reconnection_Registry.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Refcountable.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Timer_Queue.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Timer_Reactor.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Worker_Task.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Structured/RT_StructuredProxyPushSupplier.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredEvent.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushConsumer.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushSupplier.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushConsumer.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushSupplier.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Sequence/Batch_Buffering_Strategy.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushConsumer.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushSupplier.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushSupplier.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Any/AnyEvent.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushConsumer.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushSupplier.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushConsumer.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushSupplier.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Any/PushConsumer.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Notify/Any/PushSupplier.{h,cpp,inl}:
          Removed inl file and updated h/cpp file.

        * orbsvcs/orbsvcs/Makefile.am
          Updated for changes above

Wed Jan  5 11:29:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SchedConfig_Scheduler.{h,cpp,i}:
        * orbsvcs/orbsvcs/SchedReconfig_Sched_Utils.{h,cpp,i}:
        * orbsvcs/orbsvcs/SchedReconfig_Sched_Utils_T.{h,cpp,i}:
        * orbsvcs/orbsvcs/SchedReconfig_Scheduler.{h,cpp,i}:
        * orbsvcs/orbsvcs/SchedReconfig_Scheduler_T.{h,cpp,i}:
        * orbsvcs/orbsvcs/SchedScheduler.{h,cpp,i}:
        * orbsvcs/orbsvcs/SchedScheduler_Generic.{h,cpp,i}:
        * orbsvcs/orbsvcs/SchedStrategy_Scheduler.{h,cpp,i}:
          Removed i file and updated h/cpp file.

        * orbsvcs/orbsvcs/Makefile.am
          Updated for changes above

Wed Jan  5 11:21:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/CosEvent/CEC_ConsumerControl.{h,cpp,i}:
        * orbsvcs/orbsvcs/CosEvent/CEC_Dispatching.{h,cpp,i}:
        * orbsvcs/orbsvcs/CosEvent/CEC_Factory.{h,cpp,i}:
        * orbsvcs/orbsvcs/CosEvent/CEC_MT_Dispatching.{h,cpp,i}:
        * orbsvcs/orbsvcs/CosEvent/CEC_Pulling_Strategy.{h,cpp,i}:
        * orbsvcs/orbsvcs/CosEvent/CEC_SupplierControl.{h,cpp,i}:
          Removed i file and updated h/cpp file.

        * orbsvcs/orbsvcs/CosEvent/CEC_TypedProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_Pulling_Strategy.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.cpp:
          Removed empty explicit instantiation block

        * orbsvcs/orbsvcs/Makefile.am
          Updated for changes above

Wed Jan  5 11:07:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_Address_Server_Base.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/ECG_ConsumerEC_Control.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/ECG_Reactive_ConsumerEC_Control.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Mcast_EH.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_And_Filter.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Basic_Factory.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Bitmask_Filter.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Conjunction_Filter.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_ConsumerAdmin.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_ConsumerControl.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Default_ProxyConsumer.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Default_ProxySupplier.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Disjunction_Filter.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Dispatching.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Event_Channel.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Factory.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_MT_Dispatching.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Masked_Type_Filter.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Negation_Filter.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Null_Factory.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Priority_Dispatching.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_RTCORBA_Dispatching.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Event/EC_RTCORBA_Factory.{h,cpp,inl}:
        * orbsvcs/orbsvcs/Event/EC_Reactive_Dispatching.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Reactive_Timeout_Generator.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Sched_Filter.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Scheduling_Strategy.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_SupplierAdmin.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_SupplierControl.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter_Builder.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Trivial_Supplier_Filter.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/EC_Type_Filter.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/Local_ESTypes.{h,cpp,i}:
          Removed i file and updated h/cpp file.

        * orbsvcs/orbsvcs/Makefile.am
          Updated for changes above

Wed Jan  5 10:50:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTPortableServer/RT_Acceptor_Filters.{h,cpp,i}:
        * tao/RTPortableServer/RT_Collocation_Resolver.{h,cpp,i}:
          Removed i file and updated h/cpp file.

        * tao/Makefile.am
          Updated for changes above

Wed Jan  5 10:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/Asynch_Reply_Dispatcher.{h,cpp,i}:
          Removed i file and updated h/cpp file.

        * tao/Makefile.am
          Updated for changes above

Wed Jan  5 10:12:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/Continuous_Priority_Mapping.{h,cpp,i}:
        * tao/RTCORBA/Direct_Priority_Mapping.{h,cpp,i}:
        * tao/RTCORBA/Linear_Network_Priority_Mapping.{h,cpp,i}:
        * tao/RTCORBA/Linear_Priority_Mapping.{h,cpp,i}:
        * tao/RTCORBA/Multi_Priority_Mapping.{h,cpp,i}:
        * tao/RTCORBA/Network_Priority_Mapping.{h,cpp,i}:
        * tao/RTCORBA/Priority_Mapping.{h,cpp,i}:
        * tao/RTCORBA/RT_Current.{h,cpp,i}:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.{h,cpp,i}:
        * tao/RTCORBA/RT_Mutex.{h,cpp,i}:
        * tao/RTCORBA/RT_ORB.{h,cpp,i}:
        * tao/RTCORBA/RT_Policy_i.{h,cpp,i}:
        * tao/RTCORBA/RT_Protocols_Hooks.{h,cpp,i}:
        * tao/RTCORBA/RT_Thread_Lane_Resources_Manager.{h,cpp,i}:
        * tao/RTCORBA/Thread_Pool.{h,cpp,i}:
          All .i/.inl files above where empty, so removed them from the repo
          and updated the h/cpp files to not include the removed file. In case
          someone want to inline a method, must re-add the file at that moment
          with the .inl extension. Also updated some wrong ACE_RCSID tags

        * tao/Makefile.am
          Updated for changes above

Tue Jan  4 17:55:15 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * Makefile.am:
        * Release:
        * configure.ac:

          Updated for removal of tao-config.in and tao-config.1.in.

        * tao-config.in:
        * tao-config.1.in:

          Removed.

Tue Jan  4 20:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/DIOP_Connection_Handler.{h,cpp,i}:
        * tao/Strategies/DIOP_Profile.{h,cpp,i}:
        * tao/Strategies/DIOP_Transport.{h,cpp,i}:
        * tao/Strategies/SCIOP_Connection_Handler.{h,cpp,i}:
        * tao/Strategies/SCIOP_Profile.{h,cpp,i}:
        * tao/Strategies/SCIOP_Transport.{h,cpp,i}:
        * tao/Strategies/SHMIOP_Acceptor.{h,cpp,i}:
        * tao/Strategies/SHMIOP_Connection_Handler.{h,cpp,inl}:
        * tao/Strategies/SHMIOP_Profile.{h,cpp,i}:
        * tao/Strategies/SHMIOP_Transport.{h,cpp,i}:
        * tao/Strategies/UIOP_Connection_Handler.{h,cpp,inl}:
        * tao/Strategies/UIOP_Endpoint.cpp
        * tao/Strategies/UIOP_Endpoint.h
        * tao/Strategies/UIOP_Profile.{h,cpp,i}:
        * tao/Strategies/UIOP_Transport.{h,cpp,i}:
        * tao/Strategies/advanced_resource.{h,cpp,i}:
          All .i/.inl files above where empty, so removed them from the repo
          and updated the h/cpp files to not include the removed file. In case
          someone want to inline a method, must re-add the file at that moment
          with the .inl extension

        * tao/Makefile.am
          Updated for changes above

Tue Jan  4 19:53:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BiDir_GIOP/BiDirPolicyC.{h,cpp,i,inl}:
          Regenerated and replace .i with .inl files

        * tao/BiDir_GIOP/diffs/BiDirPolicy.diff:
          Updated

        * tao/Makefile.am
          Updated for change above

Tue Jan  4 19:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BiDir_GIOP/BiDir_Policy_i.{h,cpp,inl}:
          Removed empty .inl file and updated cpp/h file for this

        * tao/Makefile.am
          Updated for change above

Tue Jan  4 16:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Acceptor_Filter.{h,cpp,i}:
        * tao/Acceptor_Impl.{h,cpp,i}:
        * tao/Adapter.{h,cpp,i}:
        * tao/Collocation_Resolver.{h,cpp,i}:
        * tao/Connector_Impl.{h,cpp,inl}:
        * tao/Default_Collocation_Resolver.{h,cpp,i}:
        * tao/Default_Protocols_Hooks.{h,cpp,i}:
        * tao/Default_Thread_Lane_Resources_Manager.{h,cpp,i}:
        * tao/GIOP_Message_Base.{h,cpp,i}:
        * tao/GIOP_Message_Generator_Parser.{h,cpp,inl}:
        * tao/GIOP_Message_Generator_Parser_10.{h,cpp,inl}:
        * tao/GIOP_Message_Generator_Parser_11.{h,inl}:
        * tao/GIOP_Message_Generator_Parser_12.{h,cpp,inl}:
        * tao/GIOP_Message_Lite.{h,cpp,i}:
        * tao/GIOP_Utils.{h,cpp,i}:
        * tao/IIOP_Connection_Handler.{h,cpp,i}:
        * tao/IIOP_Profile.{h,cpp,i}:
        * tao/IOR_Parser.{h,cpp,i}:
        * tao/Objref_VarOut_T.{h,cpp,inl}:
        * tao/Service_Callbacks.{h,cpp,i}:
        * tao/corbafwd.{h,cpp,i}:
        * tao/default_resource.{h,cpp,i}:
          All .i/.inl files above where empty, so removed them from the repo
          and updated the h/cpp files to not include the removed file. In case
          someone want to inline a method, must re-add the file at that moment
          with the .inl extension

        * tao/Makefile.am
          Updated for changes above

Tue Jan  4 13:03:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableInterceptorS.h:
          Regenerated

Tue Jan  4 12:54:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ShortSeqA.cpp:
        * tao/ShortSeqS.h:
          Regenerated

        * tao/ShortSeqC.{h,cpp,inl,i}:
          Regenerated and replace .i with .inl files

        * tao/Makefile.am:
          Updated because of change above

Tue Jan  4 12:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/TAOA.cpp:
        * tao/TAOC.{h,cpp,inl}:
        * tao/TAOS.{h,cpp,i,inl}:
        * tao/TAOS_T.{h,cpp,i,inl}:
          Regenerated and replace .i with .inl files

        * tao/Makefile.am:
          Updated because of change above

Tue Jan  4 12:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/LongDoubleSeqS.h:
        * tao/LongLongSeqS.h:
        * tao/LongSeqS.h:
        * tao/OctectSeqC.{h,cpp,inl}:
        * tao/OctectSeqS.h:
        * tao/OctectSeqA.cpp:
          Regenerated with the latest version of the TAO_IDL compiler

        * tao/OctetSeq.pidl:
          Updated regeneration instructions

        * tao/diffs/OctetSeq.diff:
          Updated this diff

Tue Jan  4 12:09:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOPC.{h,cpp,i,inl}:
          Regenerated and replaced .i with .inl file

        * tao/IIOPA.cpp:
          Regenerated

        * tao/Makefile.am:
          Updated because of change above

        * tao/diffs/IIOP.diff
          Removed this file, not needed anymore

Tue Jan  4 12:05:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Transport.{h,cpp,i}:
          Removed the empty .i file and updated the cpp and h file to not
          include it anymore

        * tao/Makefile.am:
          Updated because of change above

Tue Jan  4 12:01:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_EndpointsC.{h,cpp,i,inl}:
          Regenerated and replaced .i with .inl file

        * tao/IIOP_EndpointA.cpp:
          Regenerated

        * tao/IIOP_Endpoint.pidl:
          Updated regeneration instructions

        * tao/diffs/IIOP_Endpoints.diff:
          Removed this file, not needed anymore

        * tao/Makefile.am:
          Updated because of change above

Tue Jan  4 11:33:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/BooleanSeqS.h:
        * tao/DoubleSeqS.h:
          Regenerated with the latest version of the TAO_IDL compiler

        * tao/Bounds.pidl:
        * tao/CharSeq.pid:
          Updated regeneration instructions

Tue Jan  4 11:23:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ULongLongSeqC.{h,cpp,inl}:
        * tao/ULongLongSeqS.h:
        * tao/StringSeqS.h:
        * tao/AnySeqS.h:
          Regenerated with the latest version of the TAO_IDL compiler

        * tao/StringSeq.pidl:
          No need to apply patches anymore

        * tao/diffs/StringSeq.diff:
          Removed this file, not needed anymore

Tue Jan  4 11:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/WrongTransaction.pidl:
          Updated regeneration instructions, no need to apply diffs

        * tao/diffs/UShortSeq.diff:
          New diff file corresponding pidl file

        * tao/WCharSeqC.{h,cpp,inl}:
        * tao/WCharSeqS.h:
        * tao/UShortSeqS.h:
        * tao/ULongSeqS.h:
          Regenerated with the latest version of the TAO_IDL compiler

        * tao/UShortSeqC.{h,cpp,i,inl}:
        * tao/ULongSeqC.{h,cpp,i,inl}:
          Regenerated and replaced .i with .inl file

        * tao/Makefile.am:
          Updated because of changes above

Tue Jan  4 10:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/WStringSeqC.{h,cpp,inl}:
        * tao/WStringSeqS.h:
          Regenerated with the latest version of the TAO_IDL compiler

Tue Jan  4 10:15:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/FloatSeq.pidl:
          Updated regeneration instructions

        * tao/IIOP_Acceptor.cpp:
          Updated debug message to get the same format as used on other
          places

        * tao/Invocation_Endpoint_Selectors.{h,cpp,i}:
        * tao/LF_Invocation_Event.{h,cpp,inl}:
        * tao/LF_Strategy.{h,cpp,inl}:
        * tao/Object_Loader.{h,cpp,i}:
        * tao/Pluggable_Messaging.{h,cpp,i}:
        * tao/Sync_Strategies.{h,cpp,i}:
        * tao/Thread_Lane_Resources_Manager.{h,cpp,i}:
          Removed the empty .i/.inl file and updated the cpp and h file to not
          include it anymore

        * tao/LF_CH_Event.h:
          This file included LF_Invocation_Event.inl which is totally wrong, so
          zapped the include

        * tao/Managed_Types.h:
          Fixed typo in documentation

        * tao/Pluggable_Messaging_Utils.h:
          Converted documentation to doxygen style

        * tao/Policy_Set.h:
        * tao/Pseudo_VarOut_T.h:
          Removed commented out code

        * tao/PolicyFactory_Registry.h:
          Small doxygen improvement

        * tao/Profile.cpp:
          Replaced ACE cast macros with their C++ versions

        * tao/TSS_Resources.h:
          Added include to TAO_Export.h, the export macro is used, so we need
          to do this include

        * tao/Makefile.am:
          Updated for changes above

        * tao/BiDir_GIOP/BiDir_ORBInitializer.h:
        * tao/BiDir_GIOP/BiDir_Policy_i.h:
        * tao/BiDir_GIOP/BiDir_PolicyFactory.h:
        * tao/RTCORBA/RT_ORB.h:
        * tao/RTCORBA/RT_Mutex.h:
        * tao/RTCORBA/RT_Current.h:
        * tao/RTCORBA/RT_PolicyFactory.h:
        * tao/RTCORBA/RT_ORBInitializer.h:
        * tao/RTCORBA/RT_Policy_i.h:
          Removed checks for _MSC_VER >= 1200, just check for _MSC_VER

Tue Jan  4 09:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FaultTolerance/FT_Invocation_Endpoint_Selectors.{h,cpp,inl}:
          The cpp file was including the wrong inline file, the inline file was empty,
          so just zapped it

        * orbsvcs/orbsvcs/Makefile.am:
          Removed FaultTolerance/FT_Invocation_Endpoint_Selectors.inl

Mon Jan  3 17:04:26 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Generate pkg-config *.pc files from templates.

        * tao/BiDir_GIOP/TAO_BiDirGIOP.pc.in:
        * tao/Domain/TAO_Domain.pc.in:
        * tao/DynamicAny/TAO_DynamicAny.pc.in:
        * tao/DynamicInterface/TAO_DynamicInterface.pc.in:
        * tao/IFR_Client/TAO_IFR_Client.pc.in:
        * tao/IORInterceptor/TAO_IORInterceptor.pc.in:
        * tao/IORManipulation/TAO_IORManip.pc.in:
        * tao/IORTable/TAO_IORTable.pc.in:
        * tao/Messaging/TAO_Messaging.pc.in:
        * tao/ObjRefTemplate/TAO_ObjRefTemplate.pc.in:
        * tao/PortableServer/TAO_PortableServer.pc.in:
        * tao/RTCORBA/TAO_RTCORBA.pc.in:
        * tao/RTPortableServer/TAO_RTPortableServer.pc.in:
        * tao/RTScheduling/TAO_RTScheduler.pc.in:
        * tao/SmartProxies/TAO_SmartProxies.pc.in:
        * tao/Strategies/TAO_Strategies.pc.in:
        * tao/TAO.pc.in:
        * tao/TAO_Utils.pc.in:
        * tao/TypeCodeFactory/TAO_TypeCodeFactory.pc.in:
        * tao/Valuetype/TAO_Valuetype.pc.in:

          New files, pkg-config *.pc templates.

Mon Jan  3 11:31:35 2005  Dale Wilson  <wilson_d@ociweb.com>

        * NEWS:
          Additional info on Notification Service changes.

Mon Jan  3 14:56:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Connection_Handler.cpp (open):
          Added missing space in debug statement to get the same format as
          used in the other debug messages

Mon Jan  3 08:02:33 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * orbsvcs/examples/FaultTolerance/RolyPoly: Changed the use of
          TMCast to ACE_TMCast.  Thanks to J.T. Conklin for pointing out
          the inconsistency.

Sun Jan  2 21:26:58 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_preproc.cpp (DRV_cpp_init):

          Moved the location of the check for the preprocessor
          definition of TAO_IDL_INCLUDE_DIR to come after the
          checks for TAO_ROOT and ACE_ROOT. This move changes
          the logic so the environment variable is used if it is
          set and TAO_IDL_INCLUDE_DIR is used otherwise, enabling
          the path to orb.idl to be found both during and after
          installation. Thanks to Ken Sedgwick <ken@bonsai.com>
          for supplying the patch.

Sun Jan  2 14:21:21 2005  Carlos O'Ryan  <coryan@atdesk.com>

        * tests/Sequence_Unit_Tests/unbounded_object_reference_sequence.hpp:
          Implement unbounded sequences of object references.

        * tests/Sequence_Unit_Tests/Sequence_Unit_Tests.mpc:
        * tests/Sequence_Unit_Tests/run_test.pl:
        * tests/Sequence_Unit_Tests/unbounded_object_reference_sequence_ut.cpp:
          Add a new unit test (still in progress) to test the object
          reference sequences.

        * tests/Sequence_Unit_Tests/generic_sequence.hpp:
          Fixed a performance bug in length(...), the sequence was
          reallocated and grown when not strictly needed.
          Document in more detail why some code is not exception-safe, and
          why it may not matter (applications that could depend on it are
          non-conforming.)

        * tests/Sequence_Unit_Tests/string_sequence_element.hpp:
          Add missing #include.

Sun Jan  2 12:44:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/PSS/PSDL_Interface_Visitor.cpp:
        * orbsvcs/PSS/PSDL_Struct_Visitor.cpp:
        * orbsvcs/PSS/PSDL_Type_Dcl_Visitor.cpp:
          Removed generation of check for ACE_HAS_GNUG_PRE_2_8, this is not
          set anywhere anymore

Sat Jan  1 13:56:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/Network_Priority_Mapping_Manager.h:
        * tao/RTCORBA/Priority_Mapping_Manager.h:
        * tao/RTScheduling/Current.h:
        * tao/RTScheduling/RTScheduler_Manager.h:
        * tao/Strategies/sciop_endpoints.h:
        * tao/Strategies/uiop_endpoints.h:
          Removed check for ACE_HAS_GNUG_PRE_2_8, this is not set anywhere
          anymore

Sat Jan  1 13:41:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Endpoint.cpp:
          Updated formatting of some debug messages to match the other
          messages in TAO

        * tao/ORBInitInfo.h:
          Removed check for _MSC_VER >= 1200, this is always true, removed
          check for ACE_HAS_GNUG_PRE_2_8, this define is nowhere set and
          such old versions of GCC aren't usable anymore

        * tao/UTF16_BOM_Factory.cpp:
          Check argc before using argv[0], this can be unitialized memory
          under VxWorks.

        * TAO-INSTALL.html:
          Corrected e-mail address of the TAO mailing list

Fri Dec 31 22:10:51 2004  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.h:
        * orbsvcs/orbsvcs/Time_Utilities.cpp:
        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.h:

          Changed #include "orbsvcs/orbsvcs/..." to #include "orbsvcs/..."
          in files where it was missed or was inadvertantly reintroduced.

Thu Dec 30 13:22:25 2004  Chris Cleeland  <cleeland@ociweb.com>

        * TAO version 1.4.3 released.

Local Variables:
add-log-time-format: current-time-string
End:
