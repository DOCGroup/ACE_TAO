Mon Aug 23 09:31:41 UTC 2010  Martin Corino  <mcorino@remedy.nl>

        * tao/Transport_Cache_Manager_T.inl:
          Fuzz fix.

Fri Aug 20 20:06:05 UTC 2010  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/notifytest.mpb:

          Changed the libpaths and includes back to paths starting with
          $(TAO_ROOT) as they were before
          Tue May 18 21:42:49 UTC 2010  Adam Mitz  <mitza@ociweb.com>

Fri Aug 20 14:44:41 UTC 2010  Martin Corino  <mcorino@remedy.nl>

        * tao/Transport_Cache_Manager_T.inl:
        * tao/Transport_Cache_Manager_T.cpp:
          Moved check for null entry outside lock.
          Optimization. Resolves Bugzilla #3659.

Thu Aug 19 10:11:41 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/idltocpp0x/IDLC++0xRFP.odt:
          Updated draft

        * tao/LocalObject.h:
        * tao/LocalObject.inl:
          Removed TAO_Local_Refcounted_Object, it is deprecated for years now

        * tao/Objref_VarOut_T.h:
          Doxygen changes

Wed Aug 18 18:10:21 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_component/context_svh.cpp:
        * TAO_IDL/be/be_visitor_component/context_svs.cpp:

          Removed generation of the context servants's _narrow()
          method, it doesn't appear to be needed any more.

Wed Aug 18 17:14:05 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_component/context_svh.cpp:

          Cosmetic changes.

        * TAO_IDL/be/be_visitor_component/context_svs.cpp:

          Modified generated _narrow() method for contexts, to
          increment the refcount, as with all other _narrow()
          methods.

Wed Aug 18 15:04:49 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_root.cpp(destroy):

          Removed unused local variable.

Wed Aug 18 14:05:20 UTC 2010  Marijke Hengstmengel  <mhengstmengel@remedy.nl>

        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Root_POA.h:
        * tao/PortableServer/ServantRetentionStrategy.h:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.h:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
        * tao/PortableServer/ServantRetentionStrategyRetain.h:
        Fix bugzilla 3654: Add Active Object Map accessor patches

Tue Aug 17 18:47:23 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_root.cpp:

          Fixed bug in cleanup of root scope when TAO_IDL processes
          multiple files in one execution. Thanks to Olli Savia
          <ops@iki.fi> for reporting the problem.

Tue Aug 17 18:33:20 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_connector/executor_ami_exs.cpp:
          Instead of calling delete on the ami4ccm facet, release it

Tue Aug 17 10:56:02 UTC 2010  Olli Savia  <ops@iki.fi>

        * tao/AnyTypeCode/TypeCode.inl:
        * tao/Object.h:
        * tao/Object.inl:
          Modified template specializations to work with older GCCs.

Tue Aug 17 08:49:29 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/idltocpp0x/IDLC++0xRFP.odt:
          First initial commit, much more has to be done to get this draft RFP
          ready

        * tao/IIOP_Connector.cpp:
        * tests/TransportCurrent/IIOP/IIOP_Tester.cpp:
          Layout changes

        * tests/POA/On_Demand_Activation/Servant_Activator.cpp:
          Boolean now maps to bool

        * tests/TransportCurrent/IIOP/run_test.pl:
          Removed obsolete helper method

Mon Aug 16 09:09:51 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_connector/executor_ami_exs.cpp:
          Generate missing _duplicate call

Fri Aug 13 13:48:03 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/makefile.am:

          Updated with new file in TAO_IFR_BE.

Wed Aug 11 20:49:43 UTC 2010  Adam Mitz  <mitza@ociweb.com>

        * tao/tao.mpc:

          install orb.idl.

Tue Aug 10 17:46:16 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/fe_init.cpp(fe_populate_global_scope):

          Put "omg.org" on the pragma prefix stack temporarily
          so it will be applied when creating CORBA module
          and its contents.

Tue Aug 10 12:24:31 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/IDL_Test/included.idl:

          Cosmetic changes.

Mon Aug  9 17:06:41 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_redef.cpp:
        * TAO_IDL/Makefile.am:

          Removed the source file, since its only
          method has been moved rewritten in
          class FE_Utils, and updated the automake
          file.

        * TAO_IDL/include/fe_utils.h:
        * TAO_IDL/include/utl_scope_T.cpp:
        * TAO_IDL/include/global_extern.h:
        * TAO_IDL/ast/ast_module.cpp:
        * TAO_IDL/ast/ast_enum.cpp:
        * TAO_IDL/fe/fe_utils.cpp:
        * TAO_IDL/util/utl_scope.cpp:

          Rewrote the formerly global method
          can_be_redefined() in class FE_Utils,
          and rerouted all calls to the new version.
          This change fixes some redefinition bugs
          that were introduced in x.8.1, thanks to
          Robert Shectman <shectman at llnl dot gov> for
          reporting the problem.

        * tests/IDL_Test/interface.idl:

          Added test cases for the above change.

Mon Aug  9 13:13:21 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/tests/InterfaceRepo/Bug_3883_Regression/test.idl:

          Added id string.

Sun Aug  8 21:10:30 UTC 2010  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_visitor_enum.cpp:
        * TAO_IDL/be/be_visitor_enum/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_enum/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure.cpp:
        * TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union.cpp:
        * TAO_IDL/be/be_visitor_union/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union/any_op_cs.cpp:
        * tao/AnyTypeCode/Any.h:
        * tao/AnyTypeCode/Any.inl:
        * tao/AnyTypeCode/Any.cpp:
        * tao/AnyTypeCode/ExceptionA.h:
        * tao/AnyTypeCode/ExceptionA.cpp:
        * tao/AnyTypeCode/PolicyA.h:
        * tao/AnyTypeCode/PolicyA.cpp:
        * tao/AnyTypeCode/WrongTransactionA.h:
        * tao/AnyTypeCode/WrongTransactionA.cpp:

          Expanded use of the ACE_ANY_OPS_USE_NAMESPACE macro for compilers that
          implement strict argument dependent lookup, especially for overloaded
          operators.

        * tao/DynamicAny/DynCommon.cpp:
        * tao/Messaging/Buffering_Constraint_Policy.cpp:
        * tao/RTCORBA/RT_ProtocolPropertiesA.cpp:
        * tao/orbconf.h:

          Various compile fixes for the Clang LLVM compiler.

Fri Aug  6 20:24:47 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_component.cpp:
        * TAO_IDL/be/be_visitor_home.cpp:
        * TAO_IDL/be_include/be_visitor_home.h:

          Removed unnecessary includes.

Fri Aug  6 20:18:12 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_home/home_ch.cpp:
        * TAO_IDL/be/be_visitor_home/home_cs.cpp:
        * TAO_IDL/be_include/be_visitor_home/home_cs.h:
        * TAO_IDL/be_include/be_visitor_home/home_ch.h:

          Removed these visitors, their functionality has
          been subsumed by the corresponding interface
          visitors.

        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_home.cpp:
        * TAO_IDL/be/be_visitor_module/module.cpp:
        * TAO_IDL/be_include/be_visitor_home.h:

          Changes related to the visitor removal described
          above.

Fri Aug  6 18:57:50 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_component/component_ss.cpp:
        * TAO_IDL/be/be_visitor_component/component_sh.cpp:
        * TAO_IDL/be/be_visitor_component/component_si.cpp:
        * TAO_IDL/be_include/be_visitor_component/component_sh.h:
        * TAO_IDL/be_include/be_visitor_component/component_si.h:
        * TAO_IDL/be_include/be_visitor_component/component_ss.h:

          Removed these visitors, their functions are now taken
          over by the corresponding interface visitors.

        * TAO_IDL/be/be_visitor_component.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_si.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_component.cpp:
        * TAO_IDL/be/be_visitor_component/component.cpp:
        * TAO_IDL/be/be_visitor_module/module.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be_include/be_interface.h:
        * TAO_IDL/be_include/be_component.h:
        * TAO_IDL/be_include/be_visitor_interface/interface_sh.h:
        * TAO_IDL/be_include/be_visitor_interface/interface_si.h:
        * TAO_IDL/be_include/be_visitor_interface/interface_ss.h:
        * TAO_IDL/be_include/be_visitor_component.h:

          - Refactored code from component and interface skeleton
            visitors, to facilitate the removal of the former,
            as described above.

          - Formatted ACE_ERROR macros to use ACE_TEXT.

          - Cosmetic changes.

Fri Aug  6 14:43:26 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * bin/tao_other_tests.lst:

          Added new test below.

Fri Aug  6 14:35:45 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/tests/InterfaceRepo/Bug_3881_Regression/*.*:

          New test, consisiting of IDL file and perl script, to
          check for reintroduction of [BUGID:3881].

Fri Aug  6 13:42:39 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp(valid_creation):

          Skipped call to pre_exist() check if the new entry represents
          an IDL module, since modules may be reopened. This bug (reported
          by Bogdan Jeram <bjeram at eso dot org>) was somehow
          reintroduced since 1.7.8. This fix handles any reopened
          module, and closes [BUGID:3881].

Thu Aug  5 13:25:00 UTC 2010  Build CZar  <buildczar at prismtech dot com>

        * tao/Valuetype/AbstractBase.h:

          Removed hard-coded 'inline' from declaration of _decr_refcount().

Wed Aug  4 20:52:39 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_util.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be_include/be_global.h:

          New IDL compiler option -Sg, which disables the generation of
          unique extensions on header file preprocessor guards. These
          changes are from a patch supplied by Bogdan Jeram
          <bjeram at eso dot org>, and close [BUGID:3867].

        * docs/compiler.html:

          Updated IDL compiler options table.

Wed Aug  4 19:24:15 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * MPC/config/rtcosscheduling.mpb:
        * orbsvcs/orbsvcs/RTCosScheduling:
        * orbsvcs/orbsvcs/RTCosScheduling.idl:
        * orbsvcs/orbsvcs/RTCosScheduling.mpc:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.inl:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_PCP_Manager.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.inl:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_export.h:
        * orbsvcs/tests/RTCosScheduling:
        * orbsvcs/tests/RTCosScheduling/Object1_i.h:
        * orbsvcs/tests/RTCosScheduling/Object1_i.cpp:
        * orbsvcs/tests/RTCosScheduling/README:
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling.mpc:
        * orbsvcs/tests/RTCosScheduling/client.cpp:
        * orbsvcs/tests/RTCosScheduling/run_test.pl:
        * orbsvcs/tests/RTCosScheduling/schedule.cfg:
        * orbsvcs/tests/RTCosScheduling/server.ior:
        * orbsvcs/tests/RTCosScheduling/server.cpp:
        * orbsvcs/tests/RTCosScheduling/svc.conf:
        * orbsvcs/tests/RTCosScheduling/testSched.idl:
        * orbsvcs/tests/RTCosScheduling/testSched_export.h:
          Removed these files, RTCosScheduling got disabled with a dummy label
          5 years ago because it used a non portable way to register
          interceptors and in those 5 years nobody complained about this

Wed Aug  4 17:54:39 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * test//Bug_3672_Regression/client.cpp:

          Changed call orb->_decr_refcnt() to new name _decr_refcount().

        * TAO_IDL/be/be_visitor_argument/invoke_cs.cpp:
        * TAO_IDL/be/be_visitor_argument/marshal_ss.cpp:

          Removed unused local variable and commented out code.

        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:

          In the generated marshal() operation, added generation of
          /*. . .*/ guards around the 'cdr' parameter if the
          interface is local and parameter is not used.

        * tao/Object.h:

          Removed hard-coded 'inline' from declaration of _decr_refcount().

Wed Aug  4 14:48:11 UTC 2010  Adam Mitz  <mitza@ociweb.com>

        * tao/tao.mpc:

          orb.idl is not a Template_File.  Adding it to that list causes
          uninteded side-effects that produce an unusable project with vc10.
          Moved it to the PIDL_Files so that it will continue to not be
          compiled by tao_idl.

Wed Aug  4 14:43:14 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/XML_Loader.h:
        * orbsvcs/orbsvcs/Notify/XML_Loader.cpp:
          Fixed compile errors

Wed Aug  4 13:10:21 UTC 2010  Marcel Smit  <msmit@remedy.nl>

        * tao/SystemException.cpp:
          Renamed TAO_SKIP_NEW_LINE_IN_EXCEPTION_LOGGING to
          TAO_SUPPRESS_NEW_LINE_IN_EXCEPTION_LOGGING.

Wed Aug  4 12:21:58 UTC 2010  Marcel Smit  <msmit@remedy.nl>

        * tao/SystemException.cpp:
          Added TAO_SKIP_NEW_LINE_IN_EXCEPTION_LOGGING define. When set,
          no newline character will occur in the exception logging and therefor
          all logging will appear on one line.

Wed Aug  4 08:41:54 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/ImplRepo_Service/Locator_Repository.cpp:
          Fixed compile errors

Tue Aug  3 14:48:42 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Environment.cpp:

          Added Id string.

        * tao/Object.inl:
        * tao/Valuetype/AbstractBase.inl:

          Replace 'inline' with 'ACE_INLINE'.

        * TAO_IDL/be/be_visitor_argument/argument.cpp:

          Added missing final newline.

Tue Aug  3 14:17:23 UTC 2010  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tests/Exposed_Policies/Policy_Verifier.cpp:
          Fixed memory leaks.

Tue Aug  3 13:59:58 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_component/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_component/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_component/component_ci.cpp:
        * TAO_IDL/be/be_visitor_component/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_component/component_cs.cpp:
        * TAO_IDL/be/be_visitor_component/cdr_op_cs.cpp:
        * TAO_IDL/be_include/be_visitor_component/cdr_op_cs.h:
        * TAO_IDL/be_include/be_visitor_component/any_op_ch.h:
        * TAO_IDL/be_include/be_visitor_component/any_op_cs.h:
        * TAO_IDL/be_include/be_visitor_component/component_ch.h:
        * TAO_IDL/be_include/be_visitor_component/component_ci.h:
        * TAO_IDL/be_include/be_visitor_component/cdr_op_ch.h:
        * TAO_IDL/be_include/be_visitor_component/component_cs.h:

          Removed these files, the contained visitors are now
          replaced in the traversal by the corresponding interface
          visitor.

        * TAO_IDL/be/be_visitor_exception/exception_ch.cpp:
        * TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:
        * TAO_IDL/be/be_visitor_argument/invoke_cs.cpp:
        * TAO_IDL/be/be_visitor_argument/argument.cpp:
        * TAO_IDL/be/be_visitor_argument/upcall_ss.cpp:
        * TAO_IDL/be/be_visitor_argument/vardecl_ss.cpp:
        * TAO_IDL/be/be_visitor_argument/marshal_ss.cpp:
        * TAO_IDL/be/be_visitor_component.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ci.cpp:
        * TAO_IDL/be/be_visitor_interface/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
        * TAO_IDL/be/be_component.cpp:
        * TAO_IDL/be/be_visitor_interface.cpp:
        * TAO_IDL/be/be_visitor_module/module.cpp:
        * TAO_IDL/be/be_visitor_union/union_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/structure_ch.cpp:
        * TAO_IDL/be/be_extended_port.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be_include/be_interface.h:
        * TAO_IDL/be_include/be_component.h:
        * TAO_IDL/be_include/be_visitor_typecode/typecode_decl.h:
        * TAO_IDL/be_include/be_visitor_argument/argument.h:
        * TAO_IDL/be_include/be_type.h:
        * TAO_IDL/be_include/be_visitor_interface/cdr_op_cs.h:
        * TAO_IDL/be_include/be_visitor_interface/any_op_ch.h:
        * TAO_IDL/be_include/be_visitor_interface/interface.h:
        * TAO_IDL/be_include/be_visitor_interface/any_op_cs.h:
        * TAO_IDL/be_include/be_visitor_interface/interface_ch.h:
        * TAO_IDL/be_include/be_visitor_interface/interface_ci.h:
        * TAO_IDL/be_include/be_visitor_interface/cdr_op_ch.h:
        * TAO_IDL/be_include/be_visitor_interface/interface_cs.h:
        * TAO_IDL/be_include/be_visitor_component_scope.h:
        * TAO_IDL/be_include/be_visitor_interface.h:
        * TAO_IDL/be_include/be_visitor_component.h:

          - Factored common stub header file code generation into
            a method in class be_type.

          - Abstracted differences in stub code generation between
            interfaces and components into methods on the
            corresponding node classes.

          - Replaced calls to component visitors for stub, cdr op
            and any op generation with the corresponding interface
            visitors.

        * tao/Object.inl:
        * tao/AnyTypeCode/TypeCode.cpp:
        * tao/AnyTypeCode/AnyTypeCode_methods.h:
        * tao/AnyTypeCode/TypeCode.inl:
        * tao/AnyTypeCode/NVList.h:
        * tao/AnyTypeCode/NVList.cpp:
        * tao/AnyTypeCode/NVList.inl:
        * tao/Adapter.h:
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp:
        * tao/ZIOP_Adapter.cpp:
        * tao/Unbounded_Sequence_CDR_T.h:
        * tao/DynamicInterface/ExceptionList.h:
        * tao/DynamicInterface/Server_Request.h:
        * tao/DynamicInterface/Context.h:
        * tao/DynamicInterface/ExceptionList.cpp:
        * tao/DynamicInterface/ExceptionList.inl:
        * tao/DynamicInterface/Request.h:
        * tao/DynamicInterface/DII_CORBA_methods.h:
        * tao/DynamicInterface/Dynamic_Adapter_Impl.cpp:
        * tao/DynamicInterface/Server_Request.inl:
        * tao/DynamicInterface/Server_Request.cpp:
        * tao/DynamicInterface/Context.cpp:
        * tao/DynamicInterface/Context.inl:
        * tao/DynamicInterface/Request.inl:
        * tao/DynamicInterface/Request.cpp:
        * tao/CORBA_methods.h:
        * tao/Environment.h:
        * tao/ORB.h:
        * tao/Environment.cpp:
        * tao/Object.h:
        * tao/IORManipulation/IORManip_Filter.h:
        * tao/Principal.cpp:
        * tao/Principal.h:
        * tao/Valuetype/AbstractBase.h:
        * tao/Valuetype/AbstractBase.inl:
        * tao/Valuetype/AbstractBase.cpp:
        * tao/Valuetype/Value_CORBA_methods.h:
        * tao/Object.cpp::
        * tao/ORB.inl
        * tao/Environment.inl:
        * tao/Principal.inl:

          Made CORBA::is_nil() and CORBA::release() into
          template functions, and removed all the overloads.
          This fix closes [BUGID:3854].

Tue Aug  3 12:07:11 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * MPC/config/taodefaults.mpb:
          Removed exceptions as base, we are removing non exception support

        * tao/Acceptor_Registry.cpp:
          Removed not needed include

        * tao/CORBALOC_Parser.h:
          Updated include base ace/Array.h will be removed soon

Sun Aug  1 18:16:59 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * NEWS:
          Updated for next release

Sun Aug 01 11:30:54 CEST 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO version 1.8.1 released.

Wed Jul 28 13:34:11 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * NEWS:

          Updated with IDL compiler changes.

Tue Jul 27 20:00:14 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/util/utl_err.cpp:
        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/include/idl_global.h:

          Modified IDL compiler handling of anonymous types.
          Default is now silence, or no output. IDL_ANON_ERROR,
          IDL_ANON_WARNING, or IDL_ANON_SILENT may be defined
          in config.h to select global behavior of outputting
          error, warning or nothing respectively. The command
          line options -ae (error), -aw (warning) or -as
          (silent) may be used to override this behavior
          locally.

        * MPC/config/idl_anon_error.mpb:
        * MPC/config/idl_anon_warning.mpb:
        * MPC/config/idl_anon_silent.mpb:

          New base project files, which simply add -ae, -aw
          or -as, respectively, to the IDL compiler command
          line.

        * docs/compiler.html:

          Updated IDL compiler documentation.

        * tests/IDL_Test/IDL_Test.mpc:

          Removed -as option from project, it is now the default
          behavior.

Tue Jul 27 11:51:25 UTC 2010  Marcel Smit  <msmit@remedy.nl>

        * examples/CSD_Strategy/ThreadPool5/Foo.idl:
        * examples/Logging/Logger.idl:
        * tests/DII_Collocation_Tests/oneway/Test.idl:

          Removed anonymous constructs from test IDL and modified
          test code accordingly.

Sat Jul 24 20:41:24 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/util/utl_global.cpp:
          For the moment make -as the default, that should resolve a lot of
          issues on the scoreboard and makes it possible to resolve the fallout
          seperately and get a feeling on the current repo status

Sat Jul 24 07:35:12 UTC 2010  Marcel Smit  <msmit@remedy.nl>

        * tests/OBV/ValueBox/vb_struct.idl:

          Removed anonymous constructs from test IDL and modified
          test code accordingly.

Sat Jul 24 07:28:04 UTC 2010  Marcel Smit  <msmit@remedy.nl>

        * tests/CSD_Strategy_Tests/TP_Foo_B/Foo_B.idl:
        * tests/DSI_AMI_Gateway/test.idl:
        * tests/DSI_Gateway/test.idl:

          Removed anonymous constructs from test IDL and modified
          test code accordingly.

Sat Jul 24 07:15:15 UTC 2010  Marcel Smit  <msmit@remedy.nl>

        * tests/Bug_3506_Regression/IF_EXE_M_R_Structs.idl:
        * tests/Bug_3524_Regression/test.idl:

          Removed anonymous constructs from test IDL and modified
          test code accordingly.

Fri Jul 23 20:59:59 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/util/utl_global.cpp:

          Added -as option to completely silence any diagnostic
          for anonymous IDL constructs.

        * docs/compiler.html:

          Updated IDL compiler options documentation.

        * tests/IDL_Test/IDL_Test.mpc:

          Replace -aw option with the new -as option.

Fri Jul 23 19:56:53 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Param_Test/big_union.cpp:
        * tests/Param_Test/param_test.idl:
        * tests/Param_Test/recursive_union.cpp:

          Removed anonymous constructs from test IDL and modified
          test code accordingly.

Thu Jul 22 19:21:28 UTC 2010  Phil Mesnier  <mesnier_p@ociweb.com>

        * examples/CSD_Strategy/ThreadPool4/Foo.idl:
        * orbsvcs/orbsvcs/miop.idl:
        * orbsvcs/tests/InterfaceRepo/IFR_Self_Recursive_IDL_Test/Test.idl:
        * performance-tests/Anyop/test.idl:
        * tests/Bug_2119_Regression/test.idl:

          Fix anonymous type errors.

Thu Jul 22 03:57:34 UTC 2010  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO_IDL/util/utl_err.cpp:
        * TAO_IDL/util/utl_global.cpp:

          Fuzz.

Wed Jul 21 21:38:11 UTC 2010  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/RtecUDPAdmin.idl:
        * orbsvcs/orbsvcs/miop.idl:

          Fix anonymous arrays that the IDL compiler now complains about.

Wed Jul 21 16:22:38 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/y.tab.cpp:

          Overlooked change in error message call signature.

        * tests/IDL_Test/IDL_Test.mpc:

          Added new option -aw from

          Wed Jul 21 15:02:16 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

          to necessary IDL files.

Wed Jul 21 15:54:27 UTC 2010  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/TAO_Internal.cpp:

          reverted for_TAO specific call to service gestalt open.

Wed Jul 21 15:43:39 UTC 2010  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tests/Sequence_Unit_Tests/value_sequence_tester.hpp:
          Fixed a valgrind complain about uninitialized value.

Wed Jul 21 15:02:16 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_array.cpp:

          Cosmetic changes.

        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/include/utl_err.h:
        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/util/utl_err.cpp:
        * TAO_IDL/util/utl_global.cpp:

          An error is now output when an anonymous
          type is seen. For legacy IDL files, a
          command line option -aw has been added,
          which will cause a warning to be output
          instead.

        * docs/compiler.html:

          Updated documentation with the new option above.

Wed Jul 21 09:57:34 UTC 2010  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tao/ORB_Core_TSS_Resources.cpp:
        * tao/ORB_Core.cpp:
        * tao/ORB_Core.inl:
        * tao/ORB_Core_TSS_Resources.h:
        * tao/ORB_Core.h:
          Fixed bug 2533. Now ORB_Core's TSS resources are cleaned during
          orb destroy.

        * tests/Portable_Interceptors/Slot/driver.cpp:
          Explicitely destroy orb since doing this implicitely when main()
          returns is too late.

Wed Jul 21 03:09:21 UTC 2010  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/TAO_Internal.cpp:

          Fix for premature committal error.

Wed Jul 21 02:34:25 UTC 2010  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/TAO_Internal.cpp:

          Use the modified open method in the ACE_Service_Gestalt to get
          the behavior that has been assumed since the introduction of
          multiple service contexts.

Tue Jul 20 12:28:24 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_attribute/attribute.cpp:

          Fixed typo in facet impl attribute operation generation,
          similar to the fix in

          Mon Jul 19 17:14:48 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

Mon Jul 19 18:25:04 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_connector/connector_ami_rh_exs.cpp:

          Fixed fuzz error.

Mon Jul 19 18:19:22 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_preproc.cpp:

          Fixed typo in OpenVMS-spcific code.

Mon Jul 19 17:14:48 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_operation/operation_exs.cpp:

          Fixed typo in facet impl operation generation.

Sat Jul 17 14:13:33 UTC 2010  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/TAO_Internal.cpp (ORB::open_services):

          Silence compiler warnings

Fri Jul 16 22:13:14 UTC 2010  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/TAO_Internal.cpp:

          Detect and allow an ENOENT error returned from opening a service
          configuration context. That is alright because any explicitly named
          service config files are checked for existence when the -ORBSvcConf
          argument is processed, so the only file that could raise ENOENT is
          a defaulted svc.conf.

Thu Jul 15 13:37:06 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp(end_server_header):

          Changes to avoid a mismatched versioned namespace macro
          pair in *S.h when the -SS option is used.

Thu Jul 15 12:55:54 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_connector/executor_ami_exs.cpp:
        * TAO_IDL/be/be_visitor_connector/facet_ami_exs.cpp:
        * TAO_IDL/be/be_visitor_connector/facet_ami_exh.cpp:

          Added code generation for _get_component() and
          _set_component) in the AMI4CCM connector's facet executor,
          as well as code to initialize and reset this value in
          the corresponding connector executor.

Thu Jul 15 09:44:25 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_connector/connector_ami_rh_exs.cpp:
        * TAO_IDL/be/be_visitor_connector/connector_ami_rh_exh.cpp:
        * TAO_IDL/be_include/be_visitor_connector/connector_ami_rh_exs.h:
        * TAO_IDL/be_include/be_visitor_connector/connector_ami_rh_exh.h:

          New visitors, generating the AMI4CCM reply handler
          implementation, with empty method bodies, and triggered by
          -Gex used on the generated *A.idl file. The option -Gcn
          used on this file will generate a *A_conn.{h,cpp} set
          of files. The addition of -Gex to this command line
          will trigger the generation of a *A_conn_i.{h,cpp}
          set of files, containing the corresponding empty
          implementations of the reply handler methods.

        * TAO_IDL/be/be_visitor_home/home_exs.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_exs.cpp:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_visitor_root/root_cnh.cpp:
        * TAO_IDL/be/be_visitor_root/root_cns.cpp:
        * TAO_IDL/be/be_visitor_connector.cpp:
        * TAO_IDL/be/be_visitor_component/servant_svs.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_visitor_attribute/attribute.cpp:
        * TAO_IDL/be/be_visitor_connector/connector_ami_exs.cpp:
        * TAO_IDL/be/be_visitor_connector/connector_ami_exh.cpp:
        * TAO_IDL/be/be_visitor_connector/facet_ami_exs.cpp:
        * TAO_IDL/be/be_visitor_connector/facet_ami_exh.cpp:
        * TAO_IDL/be/be_visitor.cpp:
        * TAO_IDL/be_include/be_visitor_operation/operation_exs.h:
        * TAO_IDL/be_include/be_visitor_context.h:
        * TAO_IDL/be_include/be_visitor_connector.h:
        * TAO_IDL/be_include/be_visitor.h:
        * TAO_IDL/be_include/be_codegen.h:
        * TAO_IDL/be_include/be_helper.h:
        * TAO_IDL/be_include/be_visitor_attribute/attribute.h:
        * TAO_IDL/be_include/be_visitor_connector/facet_ami_exh.h:
        * TAO_IDL/be_include/be_visitor_connector/connector_ami_exh.h:
        * TAO_IDL/be_include/be_global.h:

          Changes to existing files necessary to complete the
          support of AMI4CCM reply handler implementation
          generation. Also some minor cosmetic and comment changes.

Thu Jul 15 09:23:20 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Trader/Constraint_Visitors.h:
        * orbsvcs/orbsvcs/Trader/Offer_Database.h:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators.h:
        * tao/Bounded_Basic_String_Sequence_T.h:
        * tao/Bounded_Object_Reference_Sequence_T.h:
        * tao/Bounded_Value_Sequence_T.h:
        * tao/Endpoint.h:
        * tao/Unbounded_Basic_String_Sequence_T.h:
        * tao/Unbounded_Object_Reference_Sequence_T.h:
        * tao/Unbounded_Octet_Sequence_T.h:
          Doxygen improvements

Tue Jul 13 11:29:59 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/fe/fe_utils.cpp:
        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/fe/idl.yy:

          Fixes for various code generation errors stemming from

          Mon Jul 12 08:19:49 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

Tue Jul 13 11:22:49 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Alt_Mapping/ub_struct_seq.cpp:

          Changes corresponding to changes in generated code for
          sequences (in this test represented by std::vector<>).

Mon Jul 12 12:55:55 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/PortableServer/PS_ForwardS.h:

          New file, an empty placeholder that is now generated as
          an include by the IDL compiler. The corresponding IDL
          file is not automatically processed, but it is included
          in other IDL files.

Mon Jul 12 11:32:30 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/fe/fe_init.cpp:
        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/util/utl_scope.cpp:

          Changes in handling of pseudo object creation and lookup.

Mon Jul 12 08:26:24 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tools/IDL3_to_IDL2/be_util.cpp:
        * tools/IDL3_to_IDL2/be_util.h:

          New files containing a utility class
          of static methods.


        * tools/IDL3_to_IDL2/IDL3_to_IDL2.mpc:

          Added new files to project.

        * tools/IDL3_to_IDL2/be_global.cpp:
        * tools/IDL3_to_IDL2/be_global.h:

          Factored out methods that have nothing
          to do with global data storage and
          moved them to the new utility class.

Mon Jul 12 08:19:49 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/fe_utils.h:
        * TAO_IDL/include/ast_decl.h:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/include/utl_scope.h:
        * TAO_IDL/include/ast_interface.h:
        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_root/root_sh.cpp:
        * TAO_IDL/be/be_visitor_valuebox/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuebox/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:
        * TAO_IDL/be/be_util.cpp:
        * TAO_IDL/be/be_visitor_typecode.cpp:
        * TAO_IDL/be/be_visitor_operation.cpp:
        * TAO_IDL/be/be_visitor_xplicit_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_constant/constant_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence.cpp:
        * TAO_IDL/be/be_visitor_interface_fwd/any_op_ch.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_connector/facet_ami_exs.cpp:
        * TAO_IDL/be/be_visitor_connector/facet_ami_exh.cpp:
        * TAO_IDL/be/be_visitor_ccm_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_valuetype_fwd/any_op_ch.cpp:
        * TAO_IDL/be/be_generator.cpp:
        * TAO_IDL/ast/ast_visitor_reifying.cpp:
        * TAO_IDL/ast/ast_decl.cpp:
        * TAO_IDL/be_include/be_visitor_typecode/typecode_defn.h:
        * TAO_IDL/be_include/be_visitor_operation/upcall_command_ss.h:
        * TAO_IDL/be_include/be_util.h:
        * TAO_IDL/be_include/be_visitor_constant/constant_cs.h:
        * TAO_IDL/be_include/be_constant.h:
        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/fe/fe_utils.cpp:
        * TAO_IDL/fe/fe_init.cpp:
        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/util/utl_scope.cpp:


          - Changed generation of alternate mapping sequences to be a
            typedef of std::vector.

          - Refactored non-data code in FE and BE global data classes
            to corresponding utils classes.

          - Changed code generation triggered by �SS to generate the
            *S.h and *C.h includes, so they can be propagated to
            including IDL files.

Tue Jul  6 11:11:49 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/tao.doxygen:
        * etc/tao_anytypecode.doxygen:
        * etc/tao_av.doxygen:
        * etc/tao_compression.doxygen:
        * etc/tao_cosevent.doxygen:
        * etc/tao_cosnaming.doxygen:
        * etc/tao_cosnotification.doxygen:
        * etc/tao_costime.doxygen:
        * etc/tao_costrader.doxygen:
        * etc/tao_dynamicany.doxygen:
        * etc/tao_dynamicinterface.doxygen:
        * etc/tao_esf.doxygen:
        * etc/tao_ifr.doxygen:
        * etc/tao_implrepo.doxygen:
        * etc/tao_iormanip.doxygen:
        * etc/tao_iortable.doxygen:
        * etc/tao_pi.doxygen:
        * etc/tao_pi_server.doxygen:
        * etc/tao_portablegroup.doxygen:
        * etc/tao_portableserver.doxygen:
        * etc/tao_pss.doxygen:
        * etc/tao_rtcorba.doxygen:
        * etc/tao_rtevent.doxygen:
        * etc/tao_rtportableserver.doxygen:
        * etc/tao_security.doxygen:
        * etc/tao_smartproxies.doxygen:
        * etc/tao_ssliop.doxygen:
        * etc/tao_strategies.doxygen:
        * etc/tao_transportcurrent.doxygen:
        * etc/tao_ziop.doxygen:
          Reduced the size of the colloboration graphs

Mon Jul  5 14:00:57 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * etc/tao.doxygen:
        * etc/tao_anytypecode.doxygen:
        * etc/tao_av.doxygen:
        * etc/tao_compression.doxygen:
        * etc/tao_cosevent.doxygen:
        * etc/tao_cosnaming.doxygen:
        * etc/tao_cosnotification.doxygen:
        * etc/tao_costime.doxygen:
        * etc/tao_costrader.doxygen:
        * etc/tao_dynamicany.doxygen:
        * etc/tao_dynamicinterface.doxygen:
        * etc/tao_esf.doxygen:
        * etc/tao_ifr.doxygen:
        * etc/tao_implrepo.doxygen:
        * etc/tao_iormanip.doxygen:
        * etc/tao_iortable.doxygen:
        * etc/tao_pi.doxygen:
        * etc/tao_pi_server.doxygen:
        * etc/tao_portablegroup.doxygen:
        * etc/tao_portableserver.doxygen:
        * etc/tao_pss.doxygen:
        * etc/tao_rtcorba.doxygen:
        * etc/tao_rtevent.doxygen:
        * etc/tao_rtportableserver.doxygen:
        * etc/tao_security.doxygen:
        * etc/tao_smartproxies.doxygen:
        * etc/tao_ssliop.doxygen:
        * etc/tao_strategies.doxygen:
        * etc/tao_transportcurrent.doxygen:
        * etc/tao_ziop.doxygen:
          Disable include and included graphs, this should reduce the size
          of the documentation a lot

Mon Jul  5 11:43:01 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2777_Regression/run_test.pl:
          Added another path

        * tao/Leader_Follower.h:
          Doxygen fix

Sun Jul 04 18:57:33 CEST 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO version 1.8 released.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
