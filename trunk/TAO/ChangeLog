Tue Nov 28 19:32:46 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/AnyTypeCode/BasicTypeTraits.cpp:
        * tao/AnyTypeCode/BasicTypeTraits.h:
        * tao/AnyTypeCode/BasicTypeTraits_T.h:

          New files, defining and specializing template
          utiities for using Anys and typecodes with
          IDL basic types.

        * tao/AnyTypeCode.mpc:

          Added new files described above.

        * tao/DynamicAny/DynAnyUtils_T.h:

          New file containing templatized code factored
          out from the insert_* and get_* methods, and
          using the AnyTypeCode utilities described above.
          Also contains code factored out from 
          DynAnyFactory methods.

        * tao/DynamicAny/DynValue_i.cpp:
        * tao/DynamicAny/DynAnyFactory.h:
        * tao/DynamicAny/DynArray_i.cpp:
        * tao/DynamicAny/DynCommon.cpp:
        * tao/DynamicAny/DynStruct_i.cpp:
        * tao/DynamicAny/DynCommon.h:
        * tao/DynamicAny/DynValueBox_i.cpp:
        * tao/DynamicAny/DynValueCommon_i.cpp:
        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynUnion_i.cpp:
        * tao/DynamicAny/DynUnion_i.h:
        * tao/DynamicAny/DynAnyFactory.cpp:
        * tao/DynamicAny/DynSequence_i.cpp:

          - Added implementations of get_*_seq()
            and insert_*_seq(), spec-defined
            methods for each IDL basic type.

          - Added implementation of insert_abstract()
            and get_abstract().

          - Factored out code from existing insert_*
            and get_* methods to templatized
            utility code described above.

          - Factored out code from DynAnyFactory
            methods similarly.

          - Fixed bug in get_reference() and get_val()
            that (incorrectly) took ownership of the
            dynamic any's contents. Thanks to Phil
            Mesnier <mesnier_p@ociweb.com> for
            reporting the bug.
          
        * tao/Valuetype/AbstractBase.h:
        * tao/Valuetype/AbstractBase.cpp:

          Added declaration and definition of typecode
          for AbstractBase.

        * tao/Valuetype/ValueBase.h:
        * tao/Valuetype/ValueBase.cpp:

          Added virtual _tao_type() method that returns
          the associated typecode polymorphically. This
          method is a TAO extension, and is for internal
          use only (currently used in Any insertion
          operators for valuetypes - see below). It
          does not make a copy.

        * docs/dynany/index.html:

          Updated documentation to include the changes
          described above.

        * tests/DynAny_Test/test_dynstruct.cpp:
        * tests/DynAny_Test/test_dynany.cpp:
        * tests/DynAny_Test/test_dynunion.cpp:
        * tests/DynAny_Test/data.cpp:
        * tests/DynAny_Test/data.h:
        * tests/DynAny_Test/test_dynenum.cpp:
        * tests/DynAny_Test/test_dynsequence.cpp:
        * tests/DynAny_Test/analyzer.cpp:
        * tests/DynAny_Test/test_dynarray.cpp:
        * tests/DynAny_Test/analyzer.h:
        * tests/DynAny_Test/driver.cpp:
        * tests/DynAny_Test/da_tests.idl:

          Updated tests to cover some of the new Dynamic Any
          methods described above.

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:

          Changed code that uses DynamicAnyFactory method,
          a consequence of the refactoring in Dynamic Any
          described above.

        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:
        * TAO_IDL/be/be_visitor_arg_traits.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ch.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
        * TAO_IDL/be/be_visitor_field/field_ch.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/ast/ast_interface.cpp:
        * TAO_IDL/ast/ast_interface_fwd.cpp:
        * TAO_IDL/ast/ast_decl.cpp:
        * TAO_IDL/fe/lex.yy.cpp:.diff:
        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/idl.ll:

          - Fixed bugs in code generation for eventtypes. Thanks
            to Ming Xiong <mxiong@dre.vanderbilt.edu> for 
            reporting a problem with anonymous sequence eventtype
            members that led to the discovery of the other
            inconsistencies.

          - Added patches to the lex file and to the corresponding
            generated C++ file that (1) corrects inconsistencies
            between these two files and (2) fixes problems with
            the SunCC preprocessor. Also patched the corresponding
            lex.yy.cpp.diff file. Thanks to Chad Elliott
            <elliott_c@ociweb.com> for supplying the patches.

          - Added generation of virtual _tao_type() method for
            valuetypes (and eventtypes), as well as use of this
            method in the corresponding Any insertion operators.
            These changes make Any insertion completely polymorphic
            for valuetypes and eventtypes. These changes include
            boxed valuetypes.

          - Fixed a bug in the handling of #pragma prefix directives
            when they occur before included IDL files. Thanks to
            Viola Wang <vwang@eso.org> for reporting the problem.
            This change closes [BUGID:2714].
          
        * NEWS:

          Added items listing the new Dynamic Any methods.

Tue Nov 28 17:01:44 UTC 2006  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/TAO_Internal.cpp:
          Fix to restore processing of the -ORBNegotiateCodesets 1
          option.

        * tests/Oneway_Timeouts/client.cpp:
          Reimplement the timeout evaluation to avoid the use of
          std::abs() as that function is not available on 64-bit windows
          builds using the intel c++ compiler with VC 7.1 IDE.

Tue Nov 28 16:54:36 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/utl_err.h (version_syntax_error):
        * TAO_IDL/fe/lex.yy.cpp (idl_store_pragma):
        * TAO_IDL/fe/idl.ll (idl_store_pragma):
        * TAO_IDL/util/utl_err.cpp (version_syntax_error):

          Qualified the char* parameter in the signature of the
          recently-added version_syntax_error() with 'const'. Also
          qualified the char* arg passed to it in idl_store_pragma()
          similarly, since the rhs of this arg initialization is
          a string literal, and thus causes a warning on some
          compilers.

Tue Nov 28 13:46:55 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Configure Makefiles for new unit test subdirectories.

        * orbsvcs/tests/Event/Makefile.am:
        * orbsvcs/tests/ImplRepo/Makefile.am:

          Regenerate to descend into new test subdirectories.

        * orbsvcs/tests/Event/UDP/Makefile.am:
  * orbsvcs/tests/ImplRepo/Bug_2604_Regression/Makefile.am:

          New files, Makefile.am's for newly supported unit tests.

        * orbsvcs/tests/Event/UDP/RtEC_UDP.mpc:
  * orbsvcs/tests/ImplRepo/Bug_2604_Regression/Bug_2604.mpc:

          Split out IDL generation into separate MPC project.

Tue Nov 28 09:32:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bounded_Basic_String_Sequence_T.h:
          Fixed doxygen errors

        * tao/Unbounded_Basic_String_Sequence_T.h:
          Improved doxygen documentation

Mon Nov 27 21:03:53 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp:

          - Cosmetic changes to source code, mostly addition of
            braces around single-line IF bodies.

          - Cosmetic changes to generated code, to keep line
            lengths less than 80 characters.

        * TAO_IDLbe/be_visitor_typecode/typecode_defn.cpp:

          Changed check to tell if interface or valuetype members
          are defined, and thus if they need a forward declared
          typecode generated. This need for this change is a
          consequence of recent changes in the way forward
          declared interfaces and valuetypes are handled.

        * TAO_IDLast/ast_interface_fwd.cpp:

          Removed an unnecessary line of source code.

Mon Nov 27 17:34:21 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/utl_err.h:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/util/utl_err.cpp:

          Added error check in #pragma version parsing, and a new
          error message to output if an error is found with this
          check. Since the only related error that was checked
          for and reported before was an invalid version number,
          an additional case was needed for a more general syntax
          error. Thanks to Johnny Willemsen <jwillemsen@remedy.nl>
          for supplying the example IDL that caused a crash due
          to the lack of this error checking. This fix closes
          [BUGID:2728].

Mon Nov 27 14:46:18 UTC 2006  Vadym Ridosh <vridosh@prismtech.com>

        * tests/Bug_2709_Regression/Bug_2709_Regression.mpc
        * tests/Bug_2709_Regression/client.cpp
        * tests/Bug_2709_Regression/Client_Task.cpp
        * tests/Bug_2709_Regression/Client_Task.h
        * tests/Bug_2709_Regression/README
        * tests/Bug_2709_Regression/run_test.pl
        * tests/Bug_2709_Regression/server.cpp
        * tests/Bug_2709_Regression/Server_Task.cpp
        * tests/Bug_2709_Regression/Server_Task.h
        * tests/Bug_2709_Regression/Test.idl
        * tests/Bug_2709_Regression/TestImpl.cpp
        * tests/Bug_2709_Regression/TestImpl.h
          Added a regression for bug 2709.

Mon Nov 27 14:29:38 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/tao.mpc:
        * tao/AnyTypeCode.mpc:

          Move list generated typecode (*A.h) header files from tao.mpc
          to AnyTypeCode.mpc.  Even though the files are generated from
          rules in tao.mpc, they belong in AnyTypeCode.mpc (the sources
          are compiled there, etc.).  This also helps with a latent MPC
          bug that expressed itself in the borland builds, where the
          directory separator was not changed from '/' to '\'.

Mon Nov 27 12:50:48 UTC 2006  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Object.h:
        * tao/Object.cpp:

          Provide hooks to enable custom Object to IOR conversion or
          allowing local objects (such as Smart Proxies) to be converted to
          an IOR string.

        * tao/ORB.cpp:

          Utilize the new hooks when performing the Object to IOR string
          conversion.

        * tests/Smart_Proxies/Smart_Proxy_Impl.h:
        * tests/Smart_Proxies/Smart_Proxy_Impl.cpp:
        * tests/Smart_Proxies/client.cpp:
        * tests/Smart_Proxies/run_test.pl:

          This test has been modified to implement both aforementioned
          hooks and perform comparisons to ensure that the right thing has
          been done.

Mon Nov 27 09:31:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/HTTP_Client.h:
        * tao/HTTP_Handler.h:
          Export these classes from the TAO lib. These can be reused then
          by several parts in CIAO and that way we don't have code
          duplication and smaller footprint

Mon Nov 27 08:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * *.mpc:
          Removed exceptions as base project because TAO already requires
          exceptions and renamed minimum_corba to avoids_minimum_corba

Mon Nov 27 08:04:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        Document the changes I have done last weekend to resolve link
        problems with vc8. With vc8 we now explicitly export the base
        templates for the basic sequences. This also requires that
        applications do import these base templates which in practice
        means that when you use any of the sequences of basic types
        you must include (in)directly the ones in the corba library.
        If you don't do that you get compile/link errors related
        to the basic sequences

        * tao/tao.mpc:
          Enabed -Gse for ULongLongSeq

        * orbsvcs/performance-tests/RTEvent/lib/Federated_Test.idl:
          Use the CORBA::ULongLongSeq predefined typedef

        * orbsvcs/orbsvcs/CosTrading.idl:
        * orbsvcs/orbsvcs/SecurityLevel3.idl:
          Include a pidl file from core to get the import of the
          base template

        * tests/Portable_Interceptors/PICurrent/client.cpp:
          Check also the length of the returned sequence

Sun Nov 26 02:41:57 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/Event/Makefile.am:
        * orbsvcs/tests/ImplRepo/Makefile.am:

          Hand tweak to avoid subdirectories that aren't yet supported.

Sat Nov 25 13:56:43 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * orbsvcs/orbsvcs/ec_typed_events_idl.mpb:

          Add -GT to idlflags.  We generate tie classes for the untyped
          CosEvent interfaces, we should do the same for the typed ones
          for symmetry.

Fri Nov 24 14:04:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Sequence_Unit_Tests/Bounded_String.cpp:
          Updated because of string sequence changes earlier today

Fri Nov 24 13:45:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/PICurrent/client.cpp:
          Added a test for bugzilla 2656

        * tao/Stub.cpp (get_policy_overrides):
          When policies is zero, return an empty sequence instead of
          a nill pointer. This fixes bugzilla 2656. Thanks to
          Richard Ridgway <Richard_Ridgway at ml dot com> for
          delevering the test extension and the patch for this file.

Fri Nov 24 13:43:44 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Configure Bug_2615_Regression unit test.

        * orbsvcs/tests/Makefile.am:

          Regenerated to include Bug_2615_Regression subdirectory.

        * orbsvcs/tests/Bug_2615_Regression/Makefile.am:

          New file, Makefile.am for new-ish unit test.

Fri Nov 24 13:39:13 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Configure RTCORBA Quoter tutorial.

        * docs/tutorials/Quoter/Makefile.am

          Regenerated to include RTCORBA subdirectory.

        * docs/tutorials/Quoter/RTCORBA/Makefile.am

          New file, Makefile.am for new-ish tutorial.

Fri Nov 24 13:24:56 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * performance-tests/Cubit/TAO/DII_Cubit/Makefile.am:
        * performance-tests/Cubit/TAO/IDL_Cubit/Makefile.am:

          Regenerated.

Fri Nov 24 13:21:52 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * configure.ac:

          Added AM_CONDITIONAL for BUILD_STL and BUILD_BOOST, so we can
          generate Makefile.am's with these options.  Default to false,
          until we can write feature tests for these options.

Fri Nov 24 13:21:00 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * orbsvcs/orbsvcs/ec_typed_events_skel.mpb:

          Removed *S_T.inl files from the Inline_Files section.

Fri Nov 24 13:19:24 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated.

        * tao/Strategies.mpc:

          Clear PIDL_Files section as the Strategies *.pidl files are
          processed within the IDL_Files section, and this results in
          duplicate entries.

Fri Nov 24 09:32:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bounded_Basic_String_Sequence_T.h:
        * tao/Unbounded_Basic_String_Sequence_T.h:
          Moved these templates from TAO::details to TAO namespace because
          we are going to move these templates directly

        * tao/Bounded_String_Sequence_T.h:
        * tao/Bounded_Wstring_Sequence_T.h:
        * tao/Unbounded_String_Sequence_T.h:
        * tao/Unbounded_Wstring_Sequence_T.h:
          Removed, not used anymore, the IDL compiler uses the basic string
          sequence directly.

        * TAO_IDL/be/be_visitor_template_export.cpp:
          Removed special handling for (w)string sequences

        * TAO_IDL/be/be_sequence.cpp:
          Changed generation to use basic string sequence template directly

        * tao/Sequence_T.h:
        * tao/tao.mpc:
          Removed the files that got removed

        * tao/Unbounded_Sequence_CDR_T.h:
        * tao/Bounded_Sequence_CDR_T.h:
          Updated because of the move of the basic string sequence files
          from TAO::details to TAO

Fri Nov 24 06:28:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/tao.mpc:
          Don't use -Gse for ULongLongSeq at this moment, vc8 seems to
          have a problem with this file

Thu Nov 23 14:51:05 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated.

Thu Nov 23 14:20:33 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Loader.cpp:

          (Hopefully) fix Borland warning.

Thu Nov 23 14:15:47 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * orbsvcs/orbsvcs/CosEvent.mpc:

          Removed *S_T.inl files from the Inline_Files section.

Thu Nov 23 13:08:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/tao.mpc:
          Readded -Gse again

        * TAO_IDL/be/be_codegen.cpp:
          Fixed wrong comment in A.h generation

        * TAO_IDL/be/be_interface.cpp:
          Const improvement

        * TAO_IDL/be/be_visitor_component/component_cs.cpp:
          Removed some unneeded c-style casts

        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
          Small code change to define the local variable and assign
          it on the same line.

        * TAO_IDL/be/be_visitor_template_export.cpp:
          Added special handling for octet/wstring and string sequences.
          Removed generation of long comment why we explicitly
          export the base templates, not usefull in generated code

        * TAO_IDL/util/utl_global.cpp:
          Removed spaces.

        * tao/PolicyC.cpp:
          Removed not needed Borland pragma option

Thu Nov 23 12:01:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/tao.mpc:
          Removed -Gse for the sequence files, causes some problems
          on the scoreboard.

Thu Nov 23 11:11:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * Release:
          Changed TAO_ACE* to TAO_*mwc. That prevents that the TAO_ACE*.sln
          files are added twice to the tar archive. This fixes bug 2680

Thu Nov 23 10:57:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2669_Regression/Child.idl:
        * tests/Bug_2669_Regression/client.cpp:
          Added a regression for bug 2714 which hasn't been fixed yet.

Thu Nov 23 07:41:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/tao.mpc:
          Simplified the idlflags to put the common flags for all pidl files
          at the top of this file. Added regeneration of OctetSeq.pidl
          and UShortSeq.pidl, these can now be regenerated using the new
          -Gse option which is enabled for all sequence files

        * tao/OctetSeqC.{h,cpp}:
        * tao/UShortSeqC.{h,cpp}:
        * tao/OctetSeqS.h:
        * tao/UShortSeqS.h:
        * tao/AnyTypeCode/OctetSeqA.{h,cpp}:
        * tao/AnyTypeCode/UShortSeqA.{h,cpp}:
        * tao/diffs/OctetSeq.diff:
        * tao/diffs/UShortSeq.diff:
          Removed all these files, they are not regenerated as part of the
          build.

        * tao/OctetSeq.pidl:
        * tao/UShortSeq.pidl:
          Removed remark about applying a diff

Thu Nov 23 06:47:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Cubit/TAO/IDL_Cubit/IDL_Cubit.mpc:
          Also don't build the server when ace_for_tao is enabled

        * performance-tests/Cubit/TAO/DII_Cubit/DII_Cubit.mpc:
          Don't build in ace_for_tao

Thu Nov 23 03:20:04 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * orbsvcs/orbsvcs/CosTrading.mpc:
        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/DsNotifyLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsLogAdmin.mpc:
        * orbsvcs/orbsvcs/CosNaming_Skel.mpc:
        * orbsvcs/orbsvcs/DsEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/CosProperty.mpc:

          Removed *S_T.* files from the Header_Files, Inline_Files, and
          Template_Files sections, cooresponding to the recent change to
          orbsvcslib.mpb which removed -GT from the command line options
          passed to tao_idl.

Thu Nov 23 01:05:04 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.cpp:
          Fix typo in ACE_Get_Opt option specification which made it
          impossible to specify the number of threads.

Wed Nov 22 22:20:12 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/Makefile.am:

          Regenerated.

Wed Nov 22 20:29:03 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

Wed Nov 22 20:18:50 UTC 2006  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_template_export.cpp:
        * TAO_IDL/be_include/be_visitor_template_export.h:

          New files, defining a new visitor that optionally
          generates an explicit export of the template base class
          of the C++ class generated for an IDL sequence. This
          visitor is triggered by the new command line option
          described below, and is intended as a workaround for a
          bug in Visual Studio. This fixes bugzilla 2703.

        * TAO_IDL/be/be_visitor_root.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be_include/be_global.h:

          - Added new command line option -Gse that will trigger the
            generation of an explicit export described above.

          - Fixed call to lookup_by_name() when it is used to locate
            CCMObject in the AST and store it for future access in
            the backend global data class. An additional argument
            was recently added to lookup_by_name() and should have
            been used in this call but wasn't. Thanks to Johnny
            Willemsen <jwillemsen@remedy.nl> for reporting the
            resulting incorrect code generation in the copy
            constructor for components. This fixes bugzilla 2724.

        * TAO_IDL/be/be_interface.cpp:

          Cosmetic changes.

        * docs/releasenotes/index.html:
        * docs/compiler.html:

          Updated IDL compiler documentation with the new command line
          option.

Wed Nov 22 19:17:12 UTC 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/CosEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent.mpc:
          Add -GT to the idlflags because we have some examples that use
          the TIE files from these services

Wed Nov 22 18:50:59 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:

          Now the infinate recursion problem has been resolved, we invoke
          TAO_LogMgr_i::create_log_reference() from TAO_Log_i::init() and
          stash it away in a member variable.  This allows us to remove
          the code that lazily obtained the object reference within the
          active data path of the server.

        * orbsvcs/orbsvcs/Log/LogMgr_i.cpp:

          Changed TAO_LogMgr_i::create_log_reference() to use
          _unchecked_narrow() while narrowing the object reference.  This
          avoids the infinite recursion which occured with _narrow() when
          this was called by the servant activator's incarnate() method.


Wed Nov 22 18:48:02 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:

          Remove extraneous ACE_DEBUG's in destructor.

Wed Nov 22 18:42:53 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/examples/Log/Event/run_test.pl:
        * orbsvcs/examples/Log/RTEvent/run_test.pl:
        * orbsvcs/examples/Log/Notify/run_test.pl:

          Increase timeout so that test passes on slower systems.

Wed Nov 22 15:38:40 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Version.h:

          Remove extraneous whitespace from TAO_VERSION macro definition.

Wed Nov 22 15:14:51 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:
  * orbsvcs/performance-tests/RTEvent/lib/Makefile.am:
  * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Makefile.am:
  * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Makefile.am:
  * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Makefile.am:
  * orbsvcs/tests/Event/Makefile.am:
  * orbsvcs/tests/Simple_Naming/Makefile.am:
  * orbsvcs/tests/ImplRepo/Makefile.am:
  * orbsvcs/tests/EC_Custom_Marshal/Makefile.am:
  * orbsvcs/tests/Trading/Makefile.am:
  * orbsvcs/tests/BiDir_CORBALOC/Makefile.am:
  * orbsvcs/tests/Bug_2377_Regression/Makefile.am:
  * orbsvcs/tests/Security/ssliop_corbaloc/Makefile.am:
  * orbsvcs/tests/Redundant_Naming/Makefile.am:
  * orbsvcs/tests/Interoperable_Naming/Makefile.am:
  * orbsvcs/tests/Notify/performance-tests/Throughput/Makefile.am:
  * orbsvcs/tests/Notify/lib/Makefile.am:
  * orbsvcs/tests/FT_App/Makefile.am:
  * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/Makefile.am:
  * orbsvcs/ImplRepo_Service/Makefile.am:
  * orbsvcs/examples/CosEC/TypedSimple/Makefile.am:
  * orbsvcs/examples/CosEC/Factory/Makefile.am:
  * orbsvcs/examples/LoadBalancing/Makefile.am:
  * tao/Makefile.am:
  * docs/tutorials/Quoter/idl/Makefile.am:
  * performance-tests/Sequence_Latency/DSI/Makefile.am:
  * performance-tests/Sequence_Latency/Deferred/Makefile.am:
  * performance-tests/Sequence_Latency/Thread_Pool/Makefile.am:
  * performance-tests/Sequence_Latency/Single_Threaded/Makefile.am:
  * performance-tests/Sequence_Latency/DII/Makefile.am:
  * performance-tests/Sequence_Latency/AMH_Single_Threaded/Makefile.am:
  * performance-tests/Sequence_Latency/AMI/Makefile.am:
  * performance-tests/Sequence_Latency/Thread_Per_Connection/Makefile.am:
  * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/Makefile.am:
  * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/Makefile.am:
  * performance-tests/Callback/Makefile.am:
  * performance-tests/Latency/DSI/Makefile.am:
  * performance-tests/Latency/Deferred/Makefile.am:
  * performance-tests/Latency/Thread_Pool/Makefile.am:
  * performance-tests/Latency/Single_Threaded/Makefile.am:
  * performance-tests/Latency/DII/Makefile.am:
  * performance-tests/Latency/AMH_Single_Threaded/Makefile.am:
  * performance-tests/Latency/AMI/Makefile.am:
  * performance-tests/Latency/Thread_Per_Connection/Makefile.am:
  * performance-tests/Cubit/TAO/MT_Cubit/Makefile.am:
  * performance-tests/Cubit/TAO/DII_Cubit/Makefile.am:
  * performance-tests/Cubit/TAO/IDL_Cubit/Makefile.am:
  * performance-tests/Throughput/Makefile.am:
  * examples/POA/TIE/Makefile.am:
  * examples/Kokyu_dsrt_schedulers/Makefile.am:
  * examples/RTScheduling/Fixed_Priority_Scheduler/Makefile.am:
  * examples/RTScheduling/MIF_Scheduler/Makefile.am:
  * examples/CSD_Strategy/ThreadPool6/Makefile.am:
  * examples/RTCORBA/Activity/Makefile.am:
  * examples/AMH/Sink_Server/Makefile.am:
  * examples/mfc/Makefile.am:
  * examples/AMI/FL_Callback/Makefile.am:
  * examples/PluggableUDP/tests/Basic/Makefile.am:
  * examples/PluggableUDP/tests/Performance/Makefile.am:
  * examples/PluggableUDP/tests/SimplePerformance/Makefile.am:

          Regenerated.

Wed Nov 22 12:34:29 UTC 2006  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.inl:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerService_Activate.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerORBInitializer.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicyFactory.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientService_Activate.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicyFactory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientORBInitializer.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.inl:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerService_Activate.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicyFactory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientService_Activate.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerORBInitializer.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicyFactory.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManagerFaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultEventDescriptor.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.cpp:
        * orbsvcs/FT_ReplicationManager/FT_DefaultFaultAnalyzer.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.h:
        * orbsvcs/tests/Bug_2137_Regression/README:
        * orbsvcs/tests/Bug_2137_Regression/client.cpp:
        * orbsvcs/tests/Bug_2137_Regression/Bug_2137_Regression.mpc:
        * orbsvcs/tests/Bug_2248_Regression/Server_Request_Interceptor.h:
        * orbsvcs/tests/Bug_2248_Regression/test.idl:
        * orbsvcs/tests/Bug_2248_Regression/server.cpp:
        * orbsvcs/tests/Bug_2248_Regression/Server_ORBInitializer.cpp:
        * orbsvcs/tests/Bug_2248_Regression/README:
        * orbsvcs/tests/Bug_2248_Regression/client.cpp:
        * orbsvcs/tests/Bug_2248_Regression/Server_ORBInitializer.h:
        * orbsvcs/tests/Bug_2248_Regression/client.h:
        * orbsvcs/tests/Bug_2248_Regression/test_i.cpp:
        * orbsvcs/tests/Bug_2248_Regression/tests.idl:
        * orbsvcs/tests/Bug_2248_Regression/Bug_2248_Regression.mpc:
        * orbsvcs/tests/Bug_2248_Regression/Client_i.h:
        * orbsvcs/tests/Bug_2248_Regression/test_i.h:
        * orbsvcs/tests/Bug_2248_Regression/Server_Request_Interceptor.cpp:
        * orbsvcs/tests/Bug_2247_Regression/Manager.h:
        * orbsvcs/tests/Bug_2247_Regression/test.idl:
        * orbsvcs/tests/Bug_2247_Regression/server.cpp:
        * orbsvcs/tests/Bug_2247_Regression/test_i.cpp:
        * orbsvcs/tests/Bug_2247_Regression/Bug_2247_Regression.mpc:
        * orbsvcs/tests/Bug_2247_Regression/Manager.cpp:
        * orbsvcs/tests/Bug_2247_Regression/Client_i.h:
        * orbsvcs/tests/Bug_2247_Regression/README:
        * orbsvcs/tests/Bug_2247_Regression/test_i.h:
        * orbsvcs/tests/FT_App/FT_ReplicationManagerController.cpp:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.cpp:
        * orbsvcs/tests/FT_App/ReplicationManagerFaultConsumerAdapter.h:
        * orbsvcs/Logging_Service/Event_Logging_Service/README:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/README:
        * orbsvcs/Logging_Service/Notify_Logging_Service/README:
        * tao/PortableServer/Servant_var.inl:
        * tao/PortableServer/Servant_var.cpp:
        * tao/PortableServer/Servant_var.h:
        * tao/Incoming_Message_Stack.inl:
        * tao/Incoming_Message_Stack.h:
        * tests/Bug_2222_Regression/test.cpp:
        * tests/Bug_2222_Regression/Bug_2222_Regression.mpc:
        * tests/Bug_2222_Regression/TestCase.idl:
        * tests/Bug_2222_Regression/TestType.idl:
        * tests/Bug_2144_Regression/test.cpp:
        * tests/Bug_2144_Regression/Bug_2144_Regression.mpc:
        * tests/Bug_2144_Regression/test.idl:
        * tests/Bug_2144_Regression/README:
        * tests/QtTests/client.cpp:
        * tests/QtTests/client.h:
        * tests/QtTests/test.idl:
        * tests/QtTests/server.cpp:
        * tests/QtTests/test_i.cpp:
        * tests/QtTests/test_i.h:
        * tests/Bug_2375_Regression/test.cpp:
        * tests/Bug_2375_Regression/test.idl:
        * tests/Bug_2375_Regression/Bug_2375_Regression.mpc:
        * tests/Bug_2375_Regression/README:
        * tests/Bug_1812_Regression/test.cpp:
        * tests/Bug_1812_Regression/Bug_1812_Regession.mpc:
        * tests/Bug_1812_Regression/Test.idl:
        * tests/MProfile_Forwarding/Servant_Locator.cpp:
        * tests/MProfile_Forwarding/test.idl:
        * tests/MProfile_Forwarding/server.cpp:
        * tests/MProfile_Forwarding/test_i.inl:
        * tests/MProfile_Forwarding/Servant_Locator.h:
        * tests/Permanent_Forward/Permanent_Forward.mpc:
        * tests/Permanent_Forward/README:
        * tests/Permanent_Forward/StubTest.cpp:
        * tests/ICMG_Any_Bug/client.cpp:
        * tests/ICMG_Any_Bug/HelloWorld.h:
        * tests/ICMG_Any_Bug/Hello.cpp:
        * tests/ICMG_Any_Bug/server.cpp:
        * tests/ICMG_Any_Bug/Hello.h:
        * tests/Bug_2183_Regression/client.cpp:
        * tests/Bug_2183_Regression/Hello.cpp:
        * tests/Bug_2183_Regression/Test.idl:
        * tests/Bug_2183_Regression/server.cpp:
        * tests/Bug_2183_Regression/Bug_2183_Regression.mpc:
        * tests/Bug_2183_Regression/Hello.h:
        * tests/Bug_2183_Regression/README:
        * tests/IDL_Test/array_only.idl:
        * tests/Bug_1813_Regression/test.cpp:
        * tests/Bug_1813_Regression/Bug_1813_Regession.mpc:
        * tests/Bug_1813_Regression/Test.idl:
        * examples/RTCORBA/Activity/Job.idl:
        * examples/RTCORBA/Activity/README:
        * examples/Load_Balancing_persistent/Identity_i.cpp:
        * examples/Load_Balancing_persistent/Load_Balancing_Service.h:
        * examples/Load_Balancing_persistent/Identity_i.h:
        * examples/Load_Balancing_persistent/README:
        * examples/Load_Balancing_persistent/Load_Balancer_i.cpp:
        * examples/Load_Balancing_persistent/Identity.idl:
        * examples/Load_Balancing_persistent/Identity_Server.cpp:
        * examples/Load_Balancing_persistent/Load_Balancer_i.h:
        * examples/Load_Balancing_persistent/Identity_Server.h:
        * examples/Load_Balancing_persistent/Identity_Client.cpp:
        * examples/Load_Balancing_persistent/Identity_Client.h:
        * examples/Load_Balancing_persistent/Load_Balancer.idl:
        * examples/Load_Balancing_persistent/Load_Balancing_Service.cpp:

          Removed svn:executable property.

Wed Nov 22 11:51:49 UTC 2006  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/IFR_Service/IFR_Server.cpp:
        * orbsvcs/IFR_Service/IFR_Service.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Loader.cpp:
        * orbsvcs/orbsvcs/IFRService/Options.cpp:

          Make IFR exit when it receives an invalid startup option and improve
          usage message. Fixes bugzilla #2720.

Wed Nov 22 11:39:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/FlResource/FlResource_Factory.cpp:
        * tao/FlResource/FlResource_Factory.h:
        * tao/QtResource/QtResource_Factory.cpp:
        * tao/QtResource/QtResource_Factory.h:
        * tao/TkResource/TkResource_Factory.cpp:
        * tao/TkResource/TkResource_Factory.h:
        * tao/XtResource/XtResource_Factory.cpp:
        * tao/XtResource/XtResource_Factory.h:
          Updated these files because the reactors they use are moved
          to their own directories in ACE.

Wed Nov 22 10:54:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies.mpc:
          Now build with ace_for_tao but derive from core_strategies

        * tao/tao.mpc:
          Added new HTTP files and moved all sequence.pidl files to one
          group because soon they all will get a special tao_idl argument
          to be used.

        * tao/TAO_Internal.cpp:
        * tao/default_resource.cpp:
          Added HTTP

        * tao/GUIResource_Factory.{h,cpp}:
          Changed dynamically_allocated_reactor to bool

        * tao/ORB_Core.{h,cpp,inl}:
          Changed has_shutdown to a real bool

        * tao/Valuetype/ValueBase.h:
          Doxygen improvement

Wed Nov 22 10:23:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Callback/Callback.mpc:
        * performance-tests/Cubit/TAO/IDL_Cubit/IDL_Cubit.mpc:
        * performance-tests/Cubit/TAO/MT_Cubit/MT_Cubit.mpc:
        * performance-tests/Latency/AMH_Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Latency/Collocation/Collocation.mpc:
        * performance-tests/Latency/Deferred/Deferred.mpc:
        * performance-tests/Latency/DII/DII.mpc:
        * performance-tests/Latency/DSI/DSI.mpc:
        * performance-tests/Latency/Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Sequence_Latency/Deferred/Deferred.mpc:
        * performance-tests/Sequence_Latency/DII/DII.mpc:
        * performance-tests/Sequence_Latency/DSI/DSI.mpc:
        * performance-tests/Sequence_Latency/Single_Threaded/Single_Threaded.mpc:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/LoadBalancing.mpc:
          Explicitly add avoids += ace_for_tao to these projects. At this
          moment they are not build because the strategies library is not
          available with ace_for_tao, but this is something I will change
          but besides strategies these projects do use some ACE classes
          which are not available in the ace_for_tao configuration

        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp:
          Const improvement

        * orbsvcs/tests/Event/UDP/Consumer.cpp:
        * orbsvcs/tests/Event/UDP/receiver.cpp:
        * orbsvcs/tests/Event/UDP/Supplier.cpp:
        * orbsvcs/tests/Event/UDP/Supplier.h:
        * orbsvcs/tests/Event/UDP/Test.idl:
          Extended this test and reproduced the bug we had in CIAO. This
          test now will fail until Jeff Parsons commits some related
          valuetype changes.

Wed Nov 22 10:17:12 2006  Johnny Willemsen  <jwillemsen@remedy.nl>

        * Release:
          Removed dsw files

        * docs/ORBEndpoint.html:
          Added reuse_addr to the list of options, request has been made
          to OCI to check and extend the documentation of this option
          which has been available starting TAO 1.4.8

        * TAO_IDL/be/be_codegen.cpp:
          Removed check for IFR_Client, we do have an empty A.h file for
          the IFR_Client files now

        * TAO_IDL/be/be_global.cpp:
          Updated help of -GA

        * tao/AnyTypeCode/NVList.cpp:
          Use true/false

        * tao/HTTP_Client.{h,cpp}:
        * tao/HTTP_Handler.{h,cpp}:
        * tao/HTTP_Parser.{h,cpp}:
          New files to support http:/ as IOR format. Fixes bugzilla bugs
          2670 and 372

        * tao/IIOP_Acceptor.cpp:
          Removed check for priority, that is gone already a long time and
          this takes footprint.

        * tao/Stub.cpp:
          Const changes and removed TAO_Synchronous_Cancellation_Required which
          doesn't seem used at all.

Mon Nov 20 08:16:34 2006  Simon McQueen  <sm@prismtech.com>

        * TAO version 1.5.4 released.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
