Tue May 20 13:56:43 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tests/Bug_1482_Regression/Makefile:
	* orbsvcs/examples/ORT/Makefile: Fixed a problem with parallel
	  builds by not allowing the builds to run in parallel. Not sure
	  why the dependencies are getting screwed. We now prevent
	  parallel builds in these to directories.

Tue May 20 12:43:58 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Codeset_Manager.cpp: Use the old codeset default macros from
          corbafwd.h to initialize the default codeset values in the
          codeset manager. These may still be overridden via the resource
          manager if desired.

        * tao/Any.cpp:
        * tao/Any.h: Cleaned up unneeded references to codeset translator
          factory class and header.

        * tao/Exception.cpp: Removed old ACE_MVS code for alternative
          codeset translator. This code would not compile if enabled.


Tue May 20 11:11:55 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tests/Smart_Proxies/Makefile: Added -lTAO_SmartProxies to the
	  link line.

Mon May 19 15:41:10 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tests/Smart_Proxies/Makefile:
	* utils/catior/makefile: Makefile fixes for the static builds.

Mon May 19 13:02:16 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/server.cpp (main):

	  Destroy the POA prior to exiting on failure the scope containing
	  the stack instantiated servants used by this test.  Fixes a
	  segmenation fault caused by the POA being destroyed after the
	  stack instantiated servants were destroyed.  The POA was
	  attempting to deactivate servants that no longer existed.

Mon May 19 11:05:26 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

	From Knut-Håvard Aksnes <knut@orion.no>
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.cpp (parse_options):

	  Fixed support for "hostname_in_ior" endpoint option.  [Bug 1370]

	From David Kinder <david.kinder@sophos.com>
	* orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp (ssliop_connect):

	  The base_connector_.connect() call will increment the handler's
	  reference count once more.  This is not needed as we already
	  hold a reference to the handler.  Therefore we discard this
	  second reference.  Fixes a memory leak.  [Bug 1506]

	  (retrieve_credentials):

	  For the default certificate and private key case, assign the
	  return value of the TAO_SSLIOP_Credentials_var::out() call to a
	  reference to a TAO_SSLIOP_Credentials_ptr.  Previously, the
	  return value was assigned to a local TAO_SSLIOP_Credentials_ptr
	  variable that was lost when leaving the scope of this method.
	  Fixes a memory leak.  [Bug 1508]

Mon May 19 15:51:20 2003  Simon McQueen  <sm@prismtechnologies.com>

        * orbsvcs/tests/Notify/Basic/Makefile:
        * orbsvcs/tests/Notify/Blocking/Makefile:
        * orbsvcs/tests/Notify/Discarding/Makefile:
        * orbsvcs/tests/Notify/MT_Dispatching/Makefile:
        * orbsvcs/tests/Notify/Ordering/Makefile:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/Makefile:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile:
        * orbsvcs/tests/Notify/Structured_Filter/Makefile:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Makefile:

          Fixed link errors on builds.

Sun May 18 05:47:10 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tao/PortableServer/POA.cpp: Fixed a warning in minimum builds.

Sun May 18 05:42:21 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tao/Sequence_T.i: TAO_Unbounded_Array_Sequence and
	  TAO_Bounded_Array_Sequence  were parametrized by T and
	  T_var. But the template parameters in the .i file read T
	  and T_life. Borland 6 compiler doesnt seem to like this
	  throwing up a bunch of link errors.

	  Thanks to Johnny Willemsen for providing this patch.

Sat May 17 09:44:42 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* docs/Options.html: Revamped the original documentation to be
	  more usefule for the users. Thanks to Tao Lu, Andy and
	  Dr. Schmidt for working on this and donating it to TAO.

	* doc/Options_new.html: Removed from the repository.

Fri May 16 18:40:08 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tao/Any.cpp:
	* tao/CDR_Encaps_Codec.cpp:
	* tao/NVList.cpp: Few hours of nonstop debugging opened up a
	  problem with a way ptrdiff_t was used. ptrdiff_t is signed
	  whereas ptr_arith_t was unsigned. This lead to cases where
	  alignments got a negative value on Linux and memcpy data into
	  and from CDR streams were totally busted. This lead to crashes
	  in Any tests in our daily builds. The problem was fixed by
	  adding the MAX_ALIGNMENT to the aligned value.

	  This will not fix all the problems with Any's. There are some
	  more fixes which would be checked in in the next few days.

Thu May 15 14:54:31 2003  Simon McQueen  <sm@prismtechnologies.com>

        * tests/Smart_Proxies/Makefile:

          Missing -L flag value supplied.

Thu May 15 14:07:33 2003  Simon McQueen  <sm@prismtechnologies.com>

        * CIAO/tools/Simple_Component_Server/Makefile:
        * docs/tutorials/Quoter/AMI/Makefile:
        * docs/tutorials/Quoter/Event_Service/Makefile:
        * docs/tutorials/Quoter/idl/Makefile:
        * docs/tutorials/Quoter/Naming_Service/Makefile:
        * docs/tutorials/Quoter/On_Demand_Activation/Makefile:
        * docs/tutorials/Quoter/RT_Event_Service/Makefile:
        * docs/tutorials/Quoter/Simple/Client/Makefile:
        * docs/tutorials/Quoter/Simple/Impl-Repo/Makefile:
        * docs/tutorials/Quoter/Simple/ImprovedServer/Makefile:
        * docs/tutorials/Quoter/Simple/Persistent/Makefile:
        * docs/tutorials/Quoter/Simple/Server/Makefile:
        * examples/Advanced/ch_18/Makefile:
        * examples/Advanced/ch_21/Makefile:
        * examples/Advanced/ch_3/Makefile:
        * examples/Advanced/ch_8_and_10/Makefile:
        * examples/AMI/FL_Callback/Makefile:
        * examples/Buffered_AMI/Makefile:
        * examples/Content_Server/AMI_Iterator/Makefile:
        * examples/Content_Server/AMI_Observer/Makefile:
        * examples/Content_Server/SMI_Iterator/Makefile:
        * examples/Event_Comm/Makefile:
        * examples/ior_corbaloc/Makefile:
        * examples/Load_Balancing/Makefile:
        * examples/Load_Balancing_persistent/Makefile:
        * examples/Logging/Makefile:
        * examples/OBV/Typed_Events/Makefile:
        * examples/Persistent_Grid/Makefile:
        * examples/PluggableUDP/tests/Basic/Makefile:
        * examples/PluggableUDP/tests/Performance/Makefile:
        * examples/PluggableUDP/tests/SimplePerformance/Makefile:
        * examples/POA/Adapter_Activator/Makefile:
        * examples/POA/Explicit_Activation/Makefile:
        * examples/POA/FindPOA/Makefile:
        * examples/POA/Loader/Makefile:
        * examples/POA/NewPOA/Makefile:
        * examples/POA/On_Demand_Activation/Makefile:
        * examples/POA/On_Demand_Loading/Makefile:
        * examples/POA/POA_BiDir/Makefile:
        * examples/POA/RootPOA/Makefile:
        * examples/Quoter/Makefile:
        * examples/Simple/bank/Makefile:
        * examples/Simple/echo/Makefile:
        * examples/Simple/grid/Makefile:
        * examples/Simple/time/Makefile:
        * examples/Simple/time-date/Makefile:
        * examples/Simulator/Event_Supplier/Makefile:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/Makefile:
        * orbsvcs/examples/Log/Basic/Makefile:
        * orbsvcs/examples/PSS/Makefile:
        * orbsvcs/examples/Security/SecurityLevel1/Makefile:
        * orbsvcs/examples/Security/Send_File/Makefile:
        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/Makefile:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/Makefile:
        * orbsvcs/performance-tests/RTEvent/lib/Makefile:
        * orbsvcs/performance-tests/RTEvent/Roundtrip/Makefile:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Makefile:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Makefile:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/Makefile:
        * orbsvcs/PSS/Makefile:
        * orbsvcs/tests/AVStreams/Modify_QoS/Makefile:
        * orbsvcs/tests/AVStreams/Multiple_Flows/Makefile:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/Makefile:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage_With_QoS/Makefile:
        * orbsvcs/tests/CosEvent/lib/Makefile:
        * orbsvcs/tests/Event/lib/Makefile:
        * orbsvcs/tests/FaultTolerance/IOGRManipulation/Makefile:
        * orbsvcs/tests/IOR_MCast/Makefile:
        * orbsvcs/tests/Log/Basic_Log_Test/Makefile:
        * orbsvcs/tests/Notify/lib/Makefile:
        * orbsvcs/tests/Sched/Makefile:
        * orbsvcs/tests/Security/Crash_Test/Makefile:
        * orbsvcs/tests/Security/SecurityLevel1/Makefile:
        * performance-tests/Cubit/TAO/IDL_Cubit/Makefile:
        * performance-tests/Cubit/TAO/MT_Cubit/Makefile:
        * performance-tests/POA/Demux/Makefile:
        * performance-tests/POA/Object_Creation_And_Registration/Makefile:
        * performance-tests/RTCorba/Multiple_Endpoints/Common/Makefile:
        * tao/Domain/Makefile:
        * tao/DynamicInterface/Makefile:
        * tao/Messaging/Makefile:
        * tao/RTPortableServer/Makefile:
        * tao/Utils/Makefile:
        * tests/Client_Leaks/Makefile:
        * tests/Crashed_Callback/Makefile:
        * tests/IDL_Test/Makefile:
        * tests/Object_Loader/Makefile:
        * tests/Smart_Proxies/Makefile:
        * tests/Smart_Proxies/On_Demand/Makefile:
        * utils/nslist/Makefile:
        * utils/wxNamingViewer/Makefile:

          Replaced "-lTAO_PortableServer" with "-lTAO_PortableServer
          -lTAO_Valuetype -lTAO_ObjRefTemplate -lTAO_IORInterceptor" wherever
          it occured. Should just about clear up the last of the static build
          errors caused by the TAO sub setting.

Wed May 14 12:46:34 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tao/ObjectKey_Table.cpp (destroy): Iterating conditions while
	  destroying was wrong which lead to crashes.

Tue May 13 15:38:29 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* tao/ORB_Core.cpp (destroy_interceptors):

	  Corrected emulated exception macro within ACE_TRY block.
	  ACE_TRY_THROW, not ACE_THROW.

Tue May 13 10:57:22 2003  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Typecode.cpp:

          The length_ data member is of size_t, on some 64-bit platforms
          (Solaris, HP-UX, ...) this is 64-bits.  Doing a memcpy of that
          value into character buffer will not give the right value.  We
          first cast length_ to a CORBA::ULong and then memcpy that into the
          character buffer.

Tue May 13 09:48:26 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * docs/Options_new.html: A new file whose contents will replace
          the contents in our canonical Options.html page after some
          editing.

Tue May 13 09:48:42 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:

          Made change to be in synch with change made in

          Mon May 12 18:42:58 2003  Jeff Parsons <j.parsons@vanderbilt.edu>.

Tue May 13 07:44:46 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/IFR_Service/Makefile.IFR_Service:
        * orbsvcs/examples/Log/Event/Makefile:
        * orbsvcs/examples/Log/Notify/Makefile:
        * orbsvcs/examples/Log/RTEvent/Makefile:
        * orbsvcs/examples/Notify/Filter/Makefile:
        * orbsvcs/examples/Notify/Subscribe/Makefile:
        * orbsvcs/examples/ORT/Makefile:
        * orbsvcs/examples/RtEC/MCast/Makefile:
        * orbsvcs/examples/RtEC/Schedule/Makefile:
        * orbsvcs/examples/RtEC/Simple/Makefile:
        * examples/Callback_Quoter/Makefile:
        * examples/POA/Reference_Counted_Servant/Makefile: Fixes to get
          the above compiling in static builds.

Tue May 13 07:35:53 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs//examples/CosEC/Factory/Makefile:
        * orbsvcs//examples/CosEC/RtEC_Based/bin/Makefile:
        * orbsvcs//examples/CosEC/RtEC_Based/tests/Basic/Makefile:
        * orbsvcs//examples/CosEC/RtEC_Based/tests/Multiple/Makefile:
        * orbsvcs//examples/CosEC/Simple/Makefile:
        * tests/Smart_Proxies/Makefile: Next set of fixes to get it going
          in the static builds.

Tue May 13 12:58:18 2003  Simon McQueen  <sm@prismtechnologies.com>

        * examples/Content_Server/SMI_Iterator/client.bor:
        * examples/Content_Server/SMI_Iterator/server.bor:
        * examples/ior_corbaloc/client.bor:
        * examples/ior_corbaloc/corbaname_client.bor:
        * examples/ior_corbaloc/server.bor:
        * examples/OBV/Typed_Events/client.bor:
        * examples/OBV/Typed_Events/server.bor:
        * examples/PluggableUDP/tests/Basic/client.bor:
        * examples/PluggableUDP/tests/Basic/server.bor:
        * examples/PluggableUDP/tests/Performance/client.bor:
        * examples/PluggableUDP/tests/Performance/server.bor:
        * examples/PluggableUDP/tests/SimplePerformance/client.bor:
        * examples/PluggableUDP/tests/SimplePerformance/server.bor:
        * examples/POA/Adapter_Activator/Makefile.bor:
        * examples/POA/DSI/client.bor:
        * examples/POA/DSI/server.bor:
        * examples/POA/Explicit_Activation/Makefile.bor:
        * examples/POA/Forwarding/client.bor:
        * examples/POA/Forwarding/server.bor:
        * examples/POA/Generic_Servant/client.bor:
        * examples/POA/Loader/Makefile.bor:
        * examples/POA/On_Demand_Activation/Makefile.bor:
        * examples/POA/On_Demand_Loading/Makefile.bor:
        * examples/POA/POA_BiDir/Makefile.bor:
        * examples/POA/Reference_Counted_Servant/Makefile.bor:
        * examples/POA/TIE/client.bor:
        * examples/POA/TIE/server.bor:
        * examples/Quoter/Client.bor:
        * examples/Quoter/Factory_finder.bor:
        * examples/Quoter/Generic_factory.bor:
        * examples/Quoter/Server.bor:
        * examples/RTCORBA/Activity/Makefile.bor:
        * orbsvcs/ImplRepo_Service/ImR_Activator.bor:
        * orbsvcs/ImplRepo_Service/tao_imr.bor:
        * tests/AMH_Exceptions/server.bor:
        * tests/AMH_Oneway/client.bor:
        * tests/AMH_Oneway/server.bor:
        * tests/AMI/client.bor:
        * tests/AMI/server.bor:
        * tests/AMI/simple_client.bor:
        * tests/AMI_Buffering/admin.bor:
        * tests/AMI_Buffering/client.bor:
        * tests/AMI_Buffering/server.bor:
        * tests/AMI_Timeouts/client.bor:
        * tests/AMI_Timeouts/server.bor:
        * tests/BiDirectional/client.bor:
        * tests/BiDirectional/server.bor:
        * tests/BiDirectional_NestedUpcall/client.bor:
        * tests/BiDirectional_NestedUpcall/server.bor:
        * tests/Big_Oneways/client.bor:
        * tests/Big_Oneways/server.bor:
        * tests/Big_Reply/server.bor:
        * tests/Big_Request_Muxing/client.bor:
        * tests/Big_Request_Muxing/server.bor:
        * tests/Big_Twoways/client.bor:
        * tests/Big_Twoways/server.bor:
        * tests/Blocking_Sync_None/client.bor:

          Fixed more static link errors from TAO sub setting.

Mon May 12 18:42:58 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_expression.cpp:
        * TAO_IDL/be/be_visitor_constant/constant_ch.cpp:
        * TAO_IDL/include/ast_expression.h:

          Moved storage of an expression's typedef node out of
          AST_Expression::AST_ExprValue and into AST_Expression itself.
          If the rhs of a constant literal is an arithmetic or logical
          expression, the AST_ExprValue's creation is deferred, and the
          typedef cannot be assigned at the point where it is looked up.
          Thanks to Ossama Othman <ossama@doc.ece.uci.edu> for reporting
          the bug and sending an example IDL file.

Mon May 12 10:24:18 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/IIOP_Profile.cpp  (parse_string_i):
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Strategies/SHMIOP_Profile.cpp:
        * tao/Strategies/UIOP_Profile.cpp: Fixed a memory management
          problem with parse_string_i () method that lead to crashes in
          our daily builds.

Mon May 12 16:15:27 2003  Simon McQueen  <sm@prismtechnologies.com>

        * examples/AMH/Sink_Server/client.bor:
        * examples/AMH/Sink_Server/mt_server.bor:
        * examples/AMH/Sink_Server/st_server.bor:
        * examples/Buffered_AMI/client.bor:
        * examples/Buffered_AMI/server.bor:
        * examples/Buffered_Oneways/Buffered_Oneways_client.bor:
        * examples/Buffered_Oneways/Buffered_Oneways_server.bor:
        * orbsvcs/CosEvent_Service/Makefile.bor:
        * orbsvcs/Event_Service/Makefile.bor:
        * orbsvcs/IFR_Service/IFR_Service.bor:
        * orbsvcs/ImplRepo_Service/ImplRepo.bor:
        * orbsvcs/LifeCycle_Service/LifeCycle_Service.bor:
        * orbsvcs/LoadBalancer/LoadManager.bor:
        * orbsvcs/LoadBalancer/LoadMonitor.bor:
        * orbsvcs/Naming_Service/Naming_Service.bor:
        * orbsvcs/Naming_Service/NT_Naming_Service.bor:
        * orbsvcs/Notify_Service/Notify_Service.bor:
        * orbsvcs/Notify_Service/NT_Notify_Service.bor:
        * orbsvcs/Time_Service/Time_Service_Server.bor:
        * orbsvcs/Time_Service/Time_Service_Clerk.bor:
        * orbsvcs/Trading_Service/Makefile.bor:

          And yet more fixes for static builds linking. More to come.

Sun May 11 22:48:13 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/LoadBalancer/Makefile.LoadManager:
        * orbsvcs/LoadBalancer/Makefile.LoadMonitor:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Makefile:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/Makefile:
        * orbsvcs/tests/AVStreams/Component_Switching/Makefile:
        * orbsvcs/tests/AVStreams/Full_Profile/Makefile:
        * orbsvcs/tests/AVStreams/Latency/Makefile:
        * orbsvcs/tests/AVStreams/Multicast/Makefile:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/Makefile:
        * orbsvcs/tests/AVStreams/Pluggable/Makefile:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/Makefile:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Makefile:
        * orbsvcs/tests/Event/Performance/Makefile:
        * orbsvcs/tests/ImplRepo/Makefile:
        * orbsvcs/tests/ImplRepo/NameService/Makefile:
        * orbsvcs/tests/Interoperable_Naming/Makefile:
        * orbsvcs/tests/Notify/Basic/Makefile:
        * orbsvcs/tests/Notify/Blocking/Makefile:
        * orbsvcs/tests/Notify/Destroy/Makefile:
        * orbsvcs/tests/Notify/Discarding/Makefile:
        * orbsvcs/tests/Notify/Driver/Makefile:
        * orbsvcs/tests/Notify/MT_Dispatching/Makefile:
        * orbsvcs/tests/Notify/Ordering/Makefile:
        * orbsvcs/tests/Notify/RT_lib/Makefile:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile:
        * orbsvcs/tests/Notify/Structured_Filter/Makefile:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Makefile:
        * orbsvcs/tests/Notify/Test_Filter/Makefile:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/Makefile:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Makefile:
        * orbsvcs/tests/Trading/Makefile:
        * orbsvcs/tests/ior_corbaname/Makefile:

          Yet another setof fixes to get the static builds linking fine.

        * orbsvcs/tests/Notify/notify_tests.GNU: Removed all the common
          libraries to a GNU file. Probably this idea needs to be done for
          all the tests.

Sun May 11 11:44:56 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/TAO.dsp:
        * tao/TAO_Static.dsp: Added new files into the following projects
          for the MSVC builds.

Sun May 11 11:37:17 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Makefile.bor: Added new files for the borland builds.

Sun May 11 11:02:18 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * docs/Options.html: Added documentation for the new ORB option.

Sun May 11 10:44:56 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        The aim of this checkin is to reduce the runtime memory consumed
        by the IORs. Every profile held by the ORB had a copy of the
        ObjectKey which added to the memory consumed by the IORs. This
        checkin builds a map to store and access the object key
        efficiently.

        * tao/ObjectKey_Table.cpp:
        * tao/ObjectKey_Table.h: Class that builds a map to store the
          object key.

        * tao/Refcounted_ObjectKey.cpp:
        * tao/Refcounted_ObjectKey.h:
        * tao/Refcounted_ObjectKey.inl: A wrapper class for the object key
          that provides reference counting and automatic lifetime
          management to the object keys.

        * tao/Profile.cpp:
        * tao/Profile.h:
        * tao/Profile.i: Have a pointer to the refcounted object key
          instead of the actual object key. After unmarshalling the
          object key from the profile we now bind it with the ObjectKey
          table which returns a pointer to the refcounted object key
          which is cached and  used during invocation.

        * tao/IIOP_Profile.cpp:
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Strategies/SHMIOP_Profile.cpp:
        * tao/Strategies/UIOP_Profile.cpp: Use the refcounted object key
          pointer instead of object keys.

        * tao/IIOP_Transport.cpp: Removed gratuitious inclusion of the
          Stub.h.

        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/ORB_Core.i: ObjectKey_Table would now be a member of the
          ORB_Core class, initialized during the init () call and
          destroyed during TAO_ORB_Core::fini (). This class also provides
          an accessor for accessing the ObjectKey_Table.

        * tao/Resource_Factory.cpp:
        * tao/Resource_Factory.h: Added a virtual method
          create_object_key_table_lock () that helps in creating the right
          type of lock for the ObjectKey_Table.

        * tao/default_resource.cpp:
        * tao/default_resource.h: Implementation for
          create_object_key_table_lock ().

          Added an option -ORBObjectKeyTableLock that helps the user to
          configure the type of lock used.

        * tao/Makefile.tao: Added the new files into the Makefile.

Sun May 11 10:37:56 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

          Checked in updates that sat in my workspace for a long time.

        * orbsvcs/ImplRepo_Service/README.txt: The ORBInitRef for ImplRepo
          should refer to ImplRepoService, not ImplRepo_Service.

        * docs/rtcorba/features.html: Added contineous priority mapping,
          which went amiss in the document.

Sun May 11 09:28:39 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/LoadBalancer/Makefile.LoadManager:
        * orbsvcs/LoadBalancer/Makefile.LoadMonitor:
        * orbsvcs/Logging_Service/Event_Logging_Service/Makefile:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Makefile:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/Makefile:
        * orbsvcs/Trading_Service/Makefile:
        * orbsvcs/tests/Concurrency/Makefile:
        * orbsvcs/tests/CosEvent/Basic/Makefile:
        * orbsvcs/tests/EC_Custom_Marshal/Makefile:
        * orbsvcs/tests/EC_MT_Mcast/Makefile:
        * orbsvcs/tests/EC_Mcast/Makefile:
        * orbsvcs/tests/EC_Multiple/Makefile:
        * orbsvcs/tests/EC_Throughput/Makefile:
        * orbsvcs/tests/Event/Basic/Makefile:
        * orbsvcs/tests/Event/Performance/Makefile:
        * orbsvcs/tests/Property/Makefile:
        * orbsvcs/tests/Sched_Conf/Makefile:
        * orbsvcs/tests/Simple_Naming/Makefile:
        * orbsvcs/tests/Time/Makefile: Another set fixes to get static
          builds linking fine.

Sun May 11 09:26:29 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Bug_1482_Regression/Makefile: Updated dependencies once
          again.

Sun May 11 09:12:28 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * utils/*/Makefile: Updated dependencies.

Sun May 11 08:50:15 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * rules.tao.GNU: Added the list of new libraries to
          RT_TAO_SRVR_LIBS. This shoudl prevent link errors in static
          builds.

Sun May 11 12:22:10 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * docs/tutorials/Quoter/*/Makefile: Updated dependencies.
        * examples/POA/Generic_Servant/Makefile*: Updated dependencies.

Sat May 10 15:21:10 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Client_Leaks/Makefile:
        * tests/Crashed_Callback/Makefile:
        * tests/IDL_Test/Makefile:
        * tests/ORB_destroy/Makefile:
        * tests/Object_Loader/Makefile:
        * tests/Smart_Proxies/On_Demand/Makefile:
        * orbsvcs/Concurrency_Service/Makefile:
        * orbsvcs/CosEvent_Service/Makefile:
        * orbsvcs/Dump_Schedule/Makefile:
        * orbsvcs/Event_Service/Makefile:
        * orbsvcs/ImplRepo_Service/Makefile:
        * orbsvcs/LifeCycle_Service/Makefile:
        * orbsvcs/Logging_Service/Basic_Logging_Service/Makefile:
        * orbsvcs/Naming_Service/Makefile:
        * orbsvcs/Notify_Service/Makefile:
        * orbsvcs/Scheduling_Service/Makefile:
        * orbsvcs/Time_Service/Makefile:
        * orbsvcs/tests/Notify/lib/Makefile: A set fixes to get static
          builds linking fine.

Sat May 10 12:24:32 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Collocation/Makefile.test: Fixes to get it linking
          properly in static builds.

Sat May 10 10:15:45 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/*/Makefile*: More updates.

Sat May 10 10:06:04 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/POA/*/Makefile*: Updated dependencies. This has been a
          problem in our daily builds for almost a week now.

Fri May  9 16:43:51 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Invocation.i: Removed TAO_GIOP_Invocation::profile () from
          the inlined file to the cpp file.

        * tao/Invocation.cpp: In TAO_GIOP_Invocation::profile () increment
          the refcount of the profile that is being stored in the
          class. Decerement the refcount of the profile, if one exists
          in the destructor. Thanks to Bertin Colpron
          <BColpron@interstarinc.com> for providing this patch and Thomas
          Wiegert <wiegert@schlund.de> for reporting the problem.

          The above checkin is just a workaorund for a more serious
          problem with profile managements especially during location
          forwards.

Fri May  9 16:21:48 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/SArgument.h:
        * tao/SArgument_T.h: Removed these files from the main
          trunk. Shouldnt have been there in the first place.

Fri May  9 16:19:32 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/corba.h: Actually doing what is supposed to be done by "Fri
          May  9 12:24:42 2003  Jeff Parsons <j.parsons@vanderbilt.edu>"

Fri May  9 12:24:42 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/corba.h:

          Removed an include that was meant for a branch.

Fri May  9 11:05:24 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/corba.h:

          Added "Pseudo_VarOut_T.h" to the #includes.

Fri May 09 16:53:10 2003  Simon McQueen  <sm@prismtechnologies.com>

        * examples/PluggableUDP/tests/Basic/client.dsp:
        * examples/PluggableUDP/tests/Basic/server.dsp:
        * examples/PluggableUDP/tests/Performance/client.dsp:
        * examples/PluggableUDP/tests/Performance/server.dsp:
        * examples/PluggableUDP/tests/SimplePerformance/client.dsp:
        * examples/PluggableUDP/tests/SimplePerformance/server.dsp:
        * examples/Simple/time/client_static.dsp:
        * examples/Simple/time/server_static.dsp:
        * orbsvcs/Event_Service/Event_Service_static.dsp:
        * orbsvcs/LoadBalancer/LoadManager_Static.dsp:
        * orbsvcs/LoadBalancer/LoadMonitor_Static.dsp:
        * orbsvcs/Naming_Service/Naming_Server_static.dsp:
        * orbsvcs/tests/Notify/Driver/Driver_Static.dsp:
        * performance-tests/Cubit/TAO/DII_Cubit/client.dsp:
        * performance-tests/Cubit/TAO/IDL_Cubit/server.dsp:

          Fixed static build errors from TAO subsetting.

Fri May  9 10:42:37 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:
        * tao/Any.i:

          In Any_var assignment operator from Any_var, and in the
          Any_var copy constructor from Any_var, added a
          check for a null rhs ptr_ member. Thanks to
          Huang-Ming Huang <hh1@cs.wustl.edu> for discovering
          the problem. Also un-inlined the above copy constructor.

Fri May  9 08:32:16 2003  Chad Elliott  <elliott_c@ociweb.com>

        * tests/ORT/ORT.mpc:

          Added missing files and idlflags.

Fri May  9 12:41:33 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/AMH/Sink_Server/mt_server.bor:
        * examples/AMH/Sink_Server/client.bor:
          Fixed these BCB makefiles

Fri May 09 10:17:47 2003  Simon McQueen  <sm@prismtechnologies.com>

        * docs/tutorials/Quoter/AMI/client.dsp:
        * docs/tutorials/Quoter/AMI/server.dsp:

          Added missing libpath for TAO_Valuetype to release config.

Fri May  9 09:00:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/AMH/Sink_Server/st_server.bor:
          Fixed this BCB makefile

Fri May  9 00:27:21 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_argument/request_info_sh.cpp:
        * TAO_IDL/be/be_visitor_operation/interceptors_ss.cpp:

          Fixed code generation formatting for TAO_ServerRequestInfo_*
          return value member.

Thu May  8 14:19:34 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/examples/ORT/Makefile:

          Removed the -Gv option from the IDL compiler command line.

        * Server_IORInterceptor.h:

          Added #include of the file in the TAO_IORInterceptor library
          containing the base class PortableServer::IORInterceptor.

Thu May  8 10:48:54 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * examples/AMH/Sink_Server/Base_Server.cpp:
        * examples/AMH/Sink_Server/Client_Task.cpp:
        * examples/AMH/Sink_Server/MT_AMH_Server.cpp:
        * examples/AMH/Sink_Server/client.dsp:
        * examples/AMH/Sink_Server/mt_server.dsp:
        * examples/AMH/Sink_Server/st_server.dsp:

          Reverted some changes I mistakenly made to these files and
          projects.

Wed May  7 22:49:05 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Faults/run_test.pl: Added thread-per-connection config to
          be tested in our daily builds.

        * tests/Faults/server.conf: A conf file to be used in
          thread-per-connection configuration.

Wed May 07 22:32:49 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Connection_Handler.cpp (svc_i): Incremented the refcount of
          the connection handler before calling the handle_input_i () on
          the transport. The pattern should be the same as that in
          TAO_Connection_Handler::handle_input_eh (), where the transport
          is updated and the refcount on the handler is incremented. This
          change should fix problems with servers crashing if remote peers
          dissappears under thread-per-connection strategy.

          Thanks to Ira Burton <imburton@micron.com> for reporting this
          problem.

Wed May  7 17:56:08 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Messaging/Messaging.mpc:
        * tao/ObjRefTemplate/ObjRefTemplate.mpc:
        * tao/PortableServer/PortableServer.mpc:

          Updated dependencies with the new base project files
          created in ACE_wrappers/bin/MakeProjectCreator/config.

Wed May  7 08:43:14 2003  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:

          Added a missing semicolon.

Wed May 07 11:36:43 2003  Simon McQueen  <sm@prismtechnologies.com>

        * orbsvcs/LoadBalancer/LoadManager.bor:
        * orbsvcs/LoadBalancer/LoadMonitor.bor:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/server.bor:
        * tests/Bug_1020_Regression/client.bor:
        * tests/Bug_1020_Regression/server.bor:

          Borland TAO_Valuetype build errors.

Wed May 07 10:34:43 2003  Simon McQueen  <sm@prismtechnologies.com>

        * docs/tutorials/Quoter/AMI/client.dsp:
        * docs/tutorials/Quoter/AMI/server.dsp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/server.dsp:
        * performance-tests/Latency/AMH/Single_Threaded/client.dsp:
        * performance-tests/Latency/AMH/Single_Threaded/server.dsp:
        * performance-tests/Latency/DII/client.dsp:
        * performance-tests/Latency/DII/server.dsp:
        * performance-tests/Latency/DSI/client.dsp:
        * performance-tests/Latency/DSI/server.dsp:
        * performance-tests/Latency/Thread_Pool/client.dsp:
        * performance-tests/Latency/Thread_Pool/server.dsp:
        * performance-tests/Throughput/client.dsp:
        * performance-tests/Throughput/server.dsp:

          Fixed various errors related to the TAO_Valuetype check in.

Wed May  7 08:08:51 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/OBV/Typed_Events/client.bor:
        * examples/OBV/Typed_Events/server.bor:
          Fixed these BCB makefiles

        * examples/OBV/Typed_Events/Typed_Events.mpc:
          Removed obsolote TAO_IDL cflag -Gv

Wed May  7 07:22:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.cpp:
          Fixed incorrect $Id

          Following changes are from Mark Drijver <mdrijver@remedy.nl>
        * orbsvcs/orbsvcs/Event/EC_Basic_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.i:
        * orbsvcs/orbsvcs/Event/EC_Defaults.h:
        * orbsvcs/orbsvcs/Event/EC_Null_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.cpp:
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.h:
        * docs/ec_options.html:
          Added Rtec option ECConsumerValidateConnection. With this option
          set the connection from Rtec to consumer is created on connect and
          not on the first event push. See ec_options.html for the usage
          and detailed reason of this option.

Tue May  6 17:52:53 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Faults/middle.cpp:
        * tests/Faults/ping.cpp:
        * tests/Faults/ping_i.h:
        * tests/Faults/test_i.h: Fixed servant memory management
          problems. Thanks to Ira Burton <imburton@micron.com> for motivating to
          take a look.

Tue May  6 15:52:42 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Makefile.CosLoadBalancing (ACE_SHLIBS):
        * orbsvcs/orbsvcs/Makefile.PortableGroup (ACE_SHLIBS):

          Corrected library link order.

Tue May  6 16:04:33 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * ChangeLog_ref:

          Removed this file, which somehow got added and committed
          by accident.

Tue May  6 13:19:02 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.h
          (process_criteria):

          Pass PortableGroup::FactoriesValue parameter by reference
          instead of by reference to pointer.  Part of a fix that corrects
          some infrastructure controlled membership problems.

        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp
          (create_object):

          Declare the PortableGroup::FactoriesValue variable on the
          stack.  Addresses some memory management/ownership issues for
          the infrastructure controlled membership case.

          (process_criteria):

          Deep copy the FactoryInfos property to the
          PortableGroup::FactoriesValue parameter passed by reference
          instead of shallow copying it.  Fixes a segmentation fault
          caused by attempting to access memory owned by an Any that is
          destroyed when leaving the scope of this method.

Tue May  6 13:02:07 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Object.h:

          Fixed "fuzz" error in Doxygen documentation for this file.

Tue May  6 12:56:27 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/PSS/PSDL_Interface_Visitor.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Utils.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
        * orbsvcs/orbsvcs/Sched/DynSched.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:

          More ptr_arith_t -> ptrdiff_t changes.

Tue May  6 10:42:50 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAOACE.dsw:

          Put back some project dependencies that inadvertently got lost as
          the result of a conflict update.

Tue May  6 08:54:06 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/PortableServer/Default_ORTC.h: Removed an extra include of
          pre.h.

Tue May 06 14:46:20 2003  Simon McQueen  <sm@prismtechnologies.com>

        * orbsvcs/LoadBalancer/LoadManager_Static.dsp:
        * orbsvcs/LoadBalancer/LoadManager.dsp:
        * orbsvcs/LoadBalancer/LoadMonitor.dsp:
        * orbsvcs/LoadBalancer/LoadMonitor_Static.dsp:

          Added TAO_Valuetype library to fix build errors.

Tue May  6 07:41:40 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Param_Test/Makefile: Updated dependencies.

Tue May  6 07:35:04 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * examples/Content_Server/AMI_Observer/Makefile:
        * examples/Content_Server/AMI_Iterator/Makefile: Updated
          dependecies.

Tue May 06 11:46:17 2003  Simon McQueen  <sm@prismtechnologies.com>

        * examples/Content_Server/AMI_Observer/Makefile:
        * examples/Content_Server/AMI_Iterator/Makefile:

          Fixed build errors.

Tue May 06 11:31:55 2003  Simon McQueen  <sm@prismtechnologies.com>

        * orbsvcs/tests/Notify/lib/TAO_NotifyTests_Static.dsp:

          Reset OutDir to '.'.

Mon May  5 21:24:36 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_union_branch/public_ch.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:

          Added 'const' qualifier to the argument of the member
          mutator for CORBA::Object and CORBA::Any members. Thanks
          to Eric Malenfant <EMalenfant@interstarinc.com> for
          pointing out that the non-const reference parameter is
          non-compliant.

Mon May  5 17:45:36 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/default_resource.cpp (TAO_Default_Resource_Factory):

          Initialize the "corba_object_lock_type_" member with
          "TAO_THREAD_LOCK" in the base member initializer list.  Fixes a
          problem where the create_corba_object_lock() method had
          undefined behavior for the default case, i.e. when the user did
          not explicitly use the "-ORBCorbaObjectLock" resource factory
          option.

Mon May  5 17:25:50 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/CDR_Encaps_Codec.cpp (encode_value):

          Fixed problem where encoding a value failed due to
          incompatibilities between the old Any implementation and the new
          one.  An ACE_Message_Block must be explicitly allocated and
          populated if the Any doesn't contain one.  Thanks to Jeff for
          suggesting the fix.

        * tests/Portable_Interceptors/IORInterceptor/FOO_IORInterceptor.cpp
          (establish_components):

          Added some sanity checks.

Mon May  5 18:55:44 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * docs/tutorials/Quoter/AMI/Makefile:
        * docs/tutorials/Quoter/On_Demand_Activation/Makefile:
        * docs/tutorials/Quoter/On_Demand_Activation/server.dsp:
        * examples/Content_Server/AMI_Iterator/Makefile:
        * examples/Content_Server/AMI_Iterator/client.dsp:
        * examples/Content_Server/AMI_Iterator/server.dsp:
        * examples/Content_Server/AMI_Observer/Makefile:
        * examples/Content_Server/AMI_Observer/client.dsp:
        * examples/Content_Server/AMI_Observer/server.dsp:
        * orbsvcs/orbsvcs/CosLoadBalancing.bor:
        * orbsvcs/orbsvcs/CosLoadBalancing.dsp:
        * orbsvcs/orbsvcs/Makefile.CosLoadBalancing:
        * orbsvcs/orbsvcs/PortableGroup.bor:

          Added links and include paths to eliminate build errors
          in these directories.

Mon May  5 17:50:42 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * performance-tests/Latency/AMH/Single_Threaded/Makefile:
        * performance-tests/Latency/AMH/Single_Threaded/client.bor:
        * performance-tests/Latency/AMH/Single_Threaded/client.dsp:
        * performance-tests/Latency/AMH/Single_Threaded/server.bor:
        * performance-tests/Latency/AMH/Single_Threaded/server.dsp:
        * performance-tests/Latency/AMI/client.bor:
        * performance-tests/Latency/AMI/client.dsp:
        * performance-tests/Latency/AMI/server.bor:
        * performance-tests/Latency/AMI/server.dsp:
        * performance-tests/Latency/DII/client.dsp:
        * performance-tests/Latency/DII/server.dsp:
        * performance-tests/Latency/DSI/Makefile:
        * performance-tests/Latency/DSI/client.bor:
        * performance-tests/Latency/DSI/client.dsp:
        * performance-tests/Latency/DSI/server.bor:
        * performance-tests/Latency/DSI/server.dsp:
        * performance-tests/Latency/Deferred/client.bor:
        * performance-tests/Latency/Deferred/client.dsp:
        * performance-tests/Latency/Deferred/server.bor:
        * performance-tests/Latency/Deferred/server.dsp:
        * performance-tests/Latency/Single_Threaded/Makefile:
        * performance-tests/Latency/Single_Threaded/client.bor:
        * performance-tests/Latency/Single_Threaded/client.dsp:
        * performance-tests/Latency/Single_Threaded/server.bor:
        * performance-tests/Latency/Single_Threaded/server.dsp:
        * performance-tests/Latency/Thread_Per_Connection/Makefile:
        * performance-tests/Latency/Thread_Per_Connection/client.bor:
        * performance-tests/Latency/Thread_Per_Connection/client.dsp:
        * performance-tests/Latency/Thread_Per_Connection/server.bor:
        * performance-tests/Latency/Thread_Per_Connection/server.dsp:
        * performance-tests/Latency/Thread_Pool/Makefile:
        * performance-tests/Latency/Thread_Pool/client.bor:
        * performance-tests/Latency/Thread_Pool/client.dsp:
        * performance-tests/Latency/Thread_Pool/server.bor:
        * performance-tests/Latency/Thread_Pool/server.dsp:
        * performance-tests/Throughput/client.bor:
        * performance-tests/Throughput/client.dsp:
        * performance-tests/Throughput/server.bor:
        * performance-tests/Throughput/server.dsp:
        * tests/Bug_1482_Regression/client.bor:
        * tests/Bug_1482_Regression/client.dsp:
        * tests/Bug_1482_Regression/server.bor:
        * tests/Bug_1482_Regression/server.dsp:
        * tests/LongUpcalls/ami_client.bor:
        * tests/LongUpcalls/ami_client.dsp:
        * tests/LongUpcalls/ami_server.bor:
        * tests/LongUpcalls/ami_server.dsp:
        * tests/LongUpcalls/blocking_client.bor:
        * tests/LongUpcalls/blocking_client.dsp:
        * tests/LongUpcalls/blocking_server.bor:
        * tests/LongUpcalls/blocking_server.dsp:

          Added link and dependency of TAO_Valuetype library
          for these projects and makefiles.

Mon May  5 17:03:44 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/OctetSeq/server.cpp:

          Set the default output filename for the IOR to be
          consistent with that for the client.

        * tests/Portable_Interceptors/AMI/client.bor:
        * tests/Portable_Interceptors/AMI/client.dsp:
        * tests/Portable_Interceptors/AMI/server.bor:
        * tests/Portable_Interceptors/AMI/server.dsp:

          Fixed project and BCB makefile settings to link the
          TAO_Valuetype library.

Mon May  5 16:37:26 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAOACE_Static.dsw:
        * tao/TAO_Static.dsp:

          Added the new projects below and updated dependencies.

        * tao/TAO_IORInterceptor_Static.dsp:
        * tao/TAO_ObjRefTemplate_Static.dsp:
        * tao/TAO_Valuetype_Static.dsp:

          New project building the corresponding static libraries.

Mon May  5 16:17:49 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/RTPortableServer/Makefile:

          Fixed typo.

Mon May  5 14:13:13 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/PortableGroup.dsp:
        * orbsvcs/orbsvcs/PortableGroup.mpc:
        * orbsvcs/orbsvcs/Makefile.PortableGroup:
        * orbsvcs/orbsvcs/PortableGroup.bor:

          Added links and dependencies to TAO_Valuetype library.

Mon May  5 18:55:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMH_Oneway/client.bor:
        * tests/AMI/simple_client.bor:
        * tests/AMI_Buffering/admin.bor:
          Fixed these BCB makefiles.

Mon May  5 13:35:00 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Messaging/TAO_Messaging.dsp:

          Fixed settings in the release version.

Mon May  5 13:20:10 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * performance-tests/*/Makefile: Updated dependencies.

        * performance-tests/Latency/AMH/Single_Threaded/Makefile: Added
          TAO_Valuetype library to the command line.

Mon May  5 13:09:45 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/RTPortableServer/Makefile.bor:
        * tao/RTPortableServer/Makefile:
        * tao/RTPortableServer/RTPortableServer.mpc:

          Added links and dependencies for TAO_Valuetype and TAO_ObjRefTemplate.

Mon May  5 17:34:01 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/ForwardRequest/Portable_Interceptors_ForwardRequest.mpc:
        * tests/OBV/Forward/OBV_Forward.mpc:
        * tests/OBV/Factory/OBV_Factory.mpc:
        * tests/OBV/Any/OBV_Any.mpc:
          Removed obsolete TAO_IDL -Gv option.

Mon May  5 16:53:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/tao.mpc:
          Replaced Services.cpp with ServicesC.spp

Mon May  5 10:54:59 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/Makefile.BE:
        * TAO_IDL/Makefile.EXE:
        * TAO_IDL/Makefile.FE:

          Updated dependencies.

Mon May  5 08:52:15 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/LoadBalancing/LB_IORInterceptor.h: #included
          IORInterceptorC.h.

        * orbsvcs/examples/ORT/ObjectReferenceFactory.idl: Fixed a path to
          included idl file.

        * orbsvcs/*/Makefile*: Updated dependencies.

Mon May  5 08:37:33 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbvcs/orbsvcs/*Makefile.*: Updated dependencies.

        * orbsvcs/orbsvcs/LB_ORT.idl: Fixed the path to the included pidl
          file.

Mon May  5 08:32:46 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAOACE.dsw:

          Updated dependencies.

Mon May  5 10:30:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Content_Server/SMI_Iterator/server.bor:
        * examples/Content_Server/SMI_Iterator/client.bor:
        * examples/Buffered_Oneways/Buffered_Oneways_server.bor:
        * examples/Buffered_Oneways/Buffered_Oneways_client.bor:
          Removed -GC from tao_idl options, this is not set in the other
          makefiles

Mon May  5 02:20:52 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/*/Makefile: Updated dependencies.

Mon May  5 01:55:05 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/Makefile*: Updated dependencies.

Mon May  5 06:40:21 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Makefile.bor:
        * tao/Messaging/Makefile.bor:
          Added TAO_ValueType library to fix BCB link errors.

Mon May  5 01:10:48 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/*/Makefile: Updated dependencies.
        * tao/Policy_ForwardC.cpp: Fixed a typo in #include.

Mon May  5 06:02:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Makefile.bor:
          Corrected build order TAO libraries

        * tao/ObjRefTemplate/TAO_ObjRefTemplate.rc:
        * tao/Valuetype/TAO_Valuetype.rc:
          Added missing rc files to fix Borland build errors

        * tao/IORInterceptor/TAO_IORInterceptor.rc:
          Removed MSVC specific part, else Borland has problems handling this
          file.

        * tao/ObjRefTemplate/Makefile.bor:
          Removed not needed line

Sun May  4 19:01:43 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:

          Fixed C++ keyword lookup to prepend '_cxx' if the string
          in question is escaped and the unescaped version matches a
          C++ keyword. If there is no match, the escaped version is
          passed along to the IDL keyword check, which strips
          the leading underscore as required for compliance if there
          is a match with an IDL keyword. Thanks to Nick Lewycky
          <nicholas@fresco.org> for reporting the problem. This closes
          [BUGID:1503].

Sun May  4 18:06:59 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * Merge of a branch in which 3 new libraries are split off from TAO.

        - TAO_Valuetype, which contains all files relating to
          valuetypes and abstract interfaces.

        - TAO_IORInterceptor, which contains files for IOR interceptors.
          Depends on TAO_Valuetype.

        - TAO_ObjRefTemplate, which contains the generated code from
          ObjectReferenceTemplate.pidl. Also depends on TAO_Valuetype.

        Also, the Any template files were split so that we now have
        one file set per template class. This will reduce runtime
        footprint since only those template classes actually instantiated
        will get pulled in now.

        * TAO_IDL/be/be_visitor_sequence/gen_bounded_obj_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_obj_sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_obj_sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_str_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_str_sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_str_sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_wstr_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_wstr_sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_wstr_sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_obj_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_obj_sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_obj_sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_sequence_cs.cpp:

          Unused files removed from the TAO IDL compiler.

        * tao/AbstractBase.cpp:
        * tao/AbstractBase.h:
        * tao/AbstractBase.inl:
        * tao/ValueBase.cpp:
        * tao/ValueBase.h:
        * tao/ValueBase.i:
        * tao/ValueFactory.cpp:
        * tao/ValueFactory.h:
        * tao/ValueFactory.i:
        * tao/ValueFactory_Map.cpp:
        * tao/ValueFactory_Map.h:
        * tao/ValueFactory_Map.i:
        * tao/Value_VarOut_T.cpp:
        * tao/Value_VarOut_T.h:
        * tao/Value_VarOut_T.inl:

          TAO files moved to the TAO_Valuetype library.

        * tao/ObjectReferenceTemplate.pidl
        * tao/ObjectReferenceTemplateC.cpp:
        * tao/ObjectReferenceTemplateC.h:
        * tao/ObjectReferenceTemplateC.i:

          TAO file moved to the TAO_ObjRefTemplate library.

        * tao/Pseudo_Value_VarOut_T.cpp:
        * tao/Pseudo_Value_VarOut_T.h:
        * tao/Pseudo_Value_VarOut_T.inl:

          Unused files removed from TAO.

        * tao/Any_T.cpp:
        * tao/Any_T.h:
        * tao/Any_T.inl:

          TAO files that were split into the group of files below.

        * tao/Any_Array_Impl_T.cpp:
        * tao/Any_Array_Impl_T.h:
        * tao/Any_Array_Impl_T.inl:
        * tao/Any_Basic_Impl_T.cpp:
        * tao/Any_Basic_Impl_T.h:
        * tao/Any_Basic_Impl_T.inl:
        * tao/Any_Dual_Impl_T.cpp:
        * tao/Any_Dual_Impl_T.h:
        * tao/Any_Dual_Impl_T.inl:
        * tao/Any_Impl_T.cpp:
        * tao/Any_Impl_T.h:
        * tao/Any_Impl_T.inl:
        * tao/Any_Special_Basic_Impl_T.cpp:
        * tao/Any_Special_Basic_Impl_T.h:
        * tao/Any_Special_Basic_Impl_T.inl:
        * tao/Any_Special_Impl_T.cpp:
        * tao/Any_Special_Impl_T.h:
        * tao/Any_Special_Impl_T.inl:

          New files containing the Any template implementation classes.

        * tao/Valuetype_Adapter.cpp:
        * tao/Valuetype_Adapter.h:
        * tao/IORInterceptor_Adapter.cpp:
        * tao/IORInterceptor_Adapter.h:

          Adapter classes for TAO_IORInterceptor and TAO_Valuetype.

        * tao/PI_Forward.pidl
        * tao/PI_ForwardC.cpp:
        * tao/PI_ForwardC.h:
        * tao/PI_ForwardC.i:

          New files that aid in breaking dependencies between IOR
          interceptors and the rest of the ORB.

        * tao/IORInterceptor/IORInterceptor.mpc:
        * tao/IORInterceptor/IORInterceptor.pidl:
        * tao/IORInterceptor/IORInterceptorC.cpp:
        * tao/IORInterceptor/IORInterceptorC.h:
        * tao/IORInterceptor/IORInterceptorC.i:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.h:
        * tao/IORInterceptor/Makefile:
        * tao/IORInterceptor/Makefile.bor:
        * tao/IORInterceptor/TAO_IORInterceptor.dsp:
        * tao/IORInterceptor/TAO_IORInterceptor.rc:
        * tao/IORInterceptor/iorinterceptor_export.h:

          New files making up the TAO_IORInterceptor library.

        * tao/ObjRefTemplate/Makefile:
        * tao/ObjRefTemplate/Makefile.bor:
        * tao/ObjRefTemplate/ObjRefTemplate.mpc:
        * tao/ObjRefTemplate/ObjectReferenceTemplate.pidl
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.h:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.i
        * tao/ObjRefTemplate/TAO_ObjRefTemplate.dsp:
        * tao/ObjRefTemplate/ort_export.h:

          New files making up the TAO_ObjRefTemplate library.

        * tao/Valuetype/AbstractBase.cpp:
        * tao/Valuetype/AbstractBase.h:
        * tao/Valuetype/AbstractBase.inl:
        * tao/Valuetype/Makefile:
        * tao/Valuetype/Makefile.bor:
        * tao/Valuetype/Seq_Tmplinst.cpp:
        * tao/Valuetype/Sequence_T.cpp:
        * tao/Valuetype/Sequence_T.h:
        * tao/Valuetype/Sequence_T.inl:
        * tao/Valuetype/TAO_Valuetype.dsp:
        * tao/Valuetype/ValueBase.cpp:
        * tao/Valuetype/ValueBase.h:
        * tao/Valuetype/ValueBase.inl:
        * tao/Valuetype/ValueFactory.cpp:
        * tao/Valuetype/ValueFactory.h:
        * tao/Valuetype/ValueFactory.inl:
        * tao/Valuetype/ValueFactory_Map.cpp:
        * tao/Valuetype/ValueFactory_Map.h:
        * tao/Valuetype/ValueFactory_Map.inl:
        * tao/Valuetype/Value_VarOut_T.cpp:
        * tao/Valuetype/Value_VarOut_T.h:
        * tao/Valuetype/Value_VarOut_T.inl:
        * tao/Valuetype/Valuetype.mpc:
        * tao/Valuetype/Valuetype_Adapter_Impl.cpp:
        * tao/Valuetype/Valuetype_Adapter_Impl.h:
        * tao/Valuetype/valuetype_export.h:

          New file making up the TAO_Valuetype library.

        * rules.tao.GNU:

          Added the new libraries to the TAO_SRVR_LIBS variable,
          since the TAO_PortableServer library depends on them.

        * TAOACE.dsw:
        * TAO_IDL/ast/ast_interface.cpp:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_decl.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_valuetype.cpp:
        * TAO_IDL/be/be_visitor_operation.cpp:
        * TAO_IDL/be/be_visitor_sequence.cpp:
        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_component/component_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/be_include/be_helper.h:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:
        * examples/AMH/Sink_Server/AMH_Servant.h:
        * examples/AMH/Sink_Server/Base_Server.cpp:
        * examples/AMH/Sink_Server/Client_Task.cpp:
        * examples/AMH/Sink_Server/MT_AMH_Server.cpp:
        * examples/AMH/Sink_Server/Makefile:
        * examples/AMH/Sink_Server/client.bor:
        * examples/AMH/Sink_Server/client.dsp:
        * examples/AMH/Sink_Server/mt_server.bor:
        * examples/AMH/Sink_Server/mt_server.dsp:
        * examples/AMH/Sink_Server/st_server.bor:
        * examples/AMH/Sink_Server/st_server.dsp:
        * examples/AMI/FL_Callback/AMI_Peer.dsp:
        * examples/AMI/FL_Callback/AMI_Progress.dsp:
        * examples/AMI/FL_Callback/Makefile:
        * examples/AMI/FL_Callback/Progress_i.cpp:
        * examples/AMI/FL_Callback/peer.cpp:
        * examples/AMI/FL_Callback/progress.cpp:
        * examples/Buffered_AMI/Makefile:
        * examples/Buffered_AMI/client.bor:
        * examples/Buffered_AMI/client.cpp:
        * examples/Buffered_AMI/client.dsp:
        * examples/Buffered_AMI/server.bor:
        * examples/Buffered_AMI/server.cpp:
        * examples/Buffered_AMI/server.dsp:
        * examples/OBV/Typed_Events/client.dsp:
        * examples/OBV/Typed_Events/server.dsp:
        * tao/Any.cpp:
        * tao/Any.h:
        * tao/CONV_FRAMEC.cpp:
        * tao/CORBA_String.cpp:
        * tao/CORBA_String.h:
        * tao/ClientRequestInfo_i.cpp:
        * tao/CurrentC.h:
        * tao/DynamicC.h:
        * tao/GIOPC.cpp:
        * tao/GIOPC.h:
        * tao/IFR_Client_Adapter.cpp:
        * tao/IIOPC.cpp:
        * tao/IOPC.h:
        * tao/IOP_CodecC.h:
        * tao/IOP_IORC.cpp:
        * tao/Interceptor_List.cpp:
        * tao/Interceptor_List.h:
        * tao/Interceptor_List.inl:
        * tao/Makefile.bor:
        * tao/Makefile.dirs:
        * tao/Makefile.tao:
        * tao/ORB.cpp:
        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/Object.h:
        * tao/OctetSeqC.cpp:
        * tao/PolicyC.h:
        * tao/Policy_ForwardC.cpp:
        * tao/Policy_ForwardC.h:
        * tao/PortableInterceptor.pidl:
        * tao/PortableInterceptorC.cpp:
        * tao/PortableInterceptorC.h:
        * tao/PortableInterceptorC.i
        * tao/PredefinedType_Seq_Tmplinst.cpp:
        * tao/Queued_Message.h:
        * tao/Sequence_T.cpp:
        * tao/Sequence_T.h:
        * tao/Sequence_T.i:
        * tao/ServicesC.cpp:
        * tao/StringSeqC.cpp:
        * tao/TAO.dsp:
        * tao/TAO.dsw:
        * tao/TAOC.cpp:
        * tao/TimeBaseC.cpp:
        * tao/TimeBaseC.h:
        * tao/Transport_Connector.h:
        * tao/Wait_Strategy.h:
        * tao/append.cpp:
        * tao/corba.h:
        * tao/corbafwd.cpp:
        * tao/corbafwd.h:
        * tao/skip.cpp:
        * tao/BiDir_GIOP/Makefile:
        * tao/Domain/Makefile:
        * tao/DynamicAny/DynAny_i.h:
        * tao/DynamicAny/Makefile:
        * tao/DynamicInterface/Makefile:
        * tao/IFR_Client/IFR_BaseC.h:
        * tao/IFR_Client/Makefile:
        * tao/IORManipulation/IORC.h:
        * tao/IORManipulation/Makefile:
        * tao/IORTable/Makefile:
        * tao/Messaging/Makefile:
        * tao/Messaging/MessagingC.cpp:
        * tao/Messaging/MessagingC.h:
        * tao/Messaging/Messaging_No_ImplC.cpp:
        * tao/Messaging/Messaging_No_ImplC.h:
        * tao/Messaging/Messaging_RT_PolicyC.cpp:
        * tao/Messaging/Messaging_RT_PolicyC.h:
        * tao/Messaging/Messaging_SyncScope_PolicyC.cpp:
        * tao/Messaging/Messaging_SyncScope_PolicyC.h:
        * tao/Messaging/TAO_ExtC.cpp:
        * tao/Messaging/TAO_ExtC.h:
        * tao/Messaging/TAO_Messaging.dsp:
        * tao/PortableServer/Default_ORTC.cpp:
        * tao/PortableServer/Default_ORTC.h:
        * tao/PortableServer/IORInfo.h:
        * tao/PortableServer/ImplRepoC.h:
        * tao/PortableServer/Makefile:
        * tao/PortableServer/Makefile.bor:
        * tao/PortableServer/POA.h:
        * tao/PortableServer/POAManager.cpp:
        * tao/PortableServer/POAManager.h:
        * tao/PortableServer/PortableServer.mpc:
        * tao/PortableServer/PortableServerC.h:
        * tao/PortableServer/TAO_PortableServer.dsp:
        * tao/RTCORBA/Makefile:
        * tao/RTCORBA/RTCORBAC.h:
        * tao/RTPortableServer/Makefile:
        * tao/SmartProxies/Makefile:
        * tao/Strategies/Makefile:
        * tao/TypeCodeFactory/Makefile:
        * tao/Utils/Makefile:
        * tests/AMH_Exceptions/Makefile:
        * tests/AMH_Exceptions/Test.idl:
        * tests/AMH_Exceptions/client.bor
        * tests/AMH_Exceptions/client.dsp:
        * tests/AMH_Exceptions/server.bor
        * tests/AMH_Exceptions/server.cpp:
        * tests/AMH_Exceptions/server.dsp:
        * tests/AMH_Oneway/Makefile:
        * tests/AMH_Oneway/client.bor:
        * tests/AMH_Oneway/client.dsp:
        * tests/AMH_Oneway/server.bor:
        * tests/AMH_Oneway/server.cpp:
        * tests/AMH_Oneway/server.dsp:
        * tests/AMI/AMI_Test_Client.dsp:
        * tests/AMI/AMI_Test_Server.dsp:
        * tests/AMI/AMI_Test_Simple_Client.dsp:
        * tests/AMI/Makefile:
        * tests/AMI/client.bor:
        * tests/AMI/client.cpp:
        * tests/AMI/server.bor:
        * tests/AMI/simple_client.cpp:
        * tests/AMI_Buffering/Makefile:
        * tests/AMI_Buffering/admin.dsp:
        * tests/AMI_Buffering/client.bor
        * tests/AMI_Buffering/client.dsp:
        * tests/AMI_Buffering/server.bor
        * tests/AMI_Buffering/server.dsp:
        * tests/AMI_Timeouts/Makefile:
        * tests/AMI_Timeouts/client.bor
        * tests/AMI_Timeouts/client.cpp:
        * tests/AMI_Timeouts/client.dsp:
        * tests/AMI_Timeouts/server.bor
        * tests/AMI_Timeouts/server.cpp:
        * tests/AMI_Timeouts/server.dsp:
        * tests/AMI_Timeouts/timeout_client.h:
        * tests/Abstract_Interface/Abstract_Interface_Client.dsp:
        * tests/Abstract_Interface/Abstract_Interface_Server.dsp:
        * tests/Abstract_Interface/Makefile:
        * tests/Abstract_Interface/client.bor:
        * tests/Abstract_Interface/server.bor:
        * tests/OBV/Any/Makefile:
        * tests/OBV/Any/client.bor:
        * tests/OBV/Any/client.dsp:
        * tests/OBV/Any/server.bor:
        * tests/OBV/Any/server.dsp:
        * tests/OBV/Factory/Makefile:
        * tests/OBV/Factory/client.bor:
        * tests/OBV/Factory/client.dsp:
        * tests/OBV/Factory/server.bor:
        * tests/OBV/Factory/server.dsp:
        * tests/OBV/Forward/Makefile:
        * tests/OBV/Forward/client.bor:
        * tests/OBV/Forward/client.dsp:
        * tests/OBV/Forward/server.bor:
        * tests/OBV/Forward/server.dsp:
        * tests/OBV/TC_Alignment/Makefile:
        * tests/OBV/TC_Alignment/client.bor:
        * tests/OBV/TC_Alignment/client.dsp:
        * tests/OBV/TC_Alignment/server.bor:
        * tests/OBV/TC_Alignment/server.dsp:
        * tests/ORT/Makefile:
        * tests/ORT/ORT_test_IORInterceptor.h:
        * tests/ORT/ObjectReferenceFactory.idl:
        * tests/ORT/client.bor:
        * tests/ORT/server.bor:
        * tests/ORT/server.dsp:
        * tests/Portable_Interceptors/IORInterceptor/FOO_IORInterceptor.h:
        * tests/Portable_Interceptors/IORInterceptor/Makefile:
        * tests/Portable_Interceptors/IORInterceptor/client.dsp:
        * tests/Portable_Interceptors/IORInterceptor/server.bor:
        * tests/Portable_Interceptors/IORInterceptor/server.dsp:

          Changes to the ORB, IDL compiler, TAO tests and examples
          corresponding to the new libraries and Any files created
          above. Following is the branch ChangeLog.

          Sat May  3 14:00:48 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * tao/Any_T.cpp:
                  * tao/Any_T.h:
                  * tao/Any_T.inl:

                    Removed these files and replaced them with those below.

                  * tao/Any_Array_Impl_T.cpp:
                  * tao/Any_Array_Impl_T.h:
                  * tao/Any_Array_Impl_T.inl:
                  * tao/Any_Basic_Impl_T.cpp:
                  * tao/Any_Basic_Impl_T.h:
                  * tao/Any_Basic_Impl_T.inl:
                  * tao/Any_Dual_Impl_T.cpp:
                  * tao/Any_Dual_Impl_T.h:
                  * tao/Any_Dual_Impl_T.inl:
                  * tao/Any_Impl_T.cpp:
                  * tao/Any_Impl_T.h:
                  * tao/Any_Impl_T.inl:
                  * tao/Any_Special_Basic_Impl_T.cpp:
                  * tao/Any_Special_Basic_Impl_T.h:
                  * tao/Any_Special_Basic_Impl_T.inl:
                  * tao/Any_Special_Impl_T.cpp:
                  * tao/Any_Special_Impl_T.h:
                  * tao/Any_Special_Impl_T.inl:

                    New files, each set containing one template class,
                    allowing more fine-grained includes.

                  * tao/Any.cpp:
                  * tao/Any.h:
                  * tao/CONV_FRAMEC.cpp:
                  * tao/CurrentC.h:
                  * tao/DynamicC.h:
                  * tao/GIOPC.cpp:
                  * tao/IIOPC.cpp:
                  * tao/IOP_CodecC.h:
                  * tao/OctetSeqC.cpp:
                  * tao/PolicyC.h:
                  * tao/Policy_ForwardC.cpp:
                  * tao/Policy_ForwardC.h:
                  * tao/ServicesC.cpp:
                  * tao/StringSeqC.cpp:
                  * tao/TAO.dsp:
                  * tao/TAOC.cpp:
                  * tao/TimeBaseC.cpp:
                  * tao/TimeBaseC.h:
                  * tao/corba.h:
                  * tao/corbafwd.h:
                  * tao/DynamicAny/DynAny_i.h:
                  * tao/IFR_Client/IFR_BaseC.h:
                  * tao/IORManipulation/IORC.h:
                  * tao/ObjRefTemplate/ObjectReferenceTemplateC.h:
                  * tao/PortableServer/Default_ORTC.cpp:
                  * tao/PortableServer/ImplRepoC.h:
                  * tao/PortableServer/PortableServerC.h:
                  * tao/RTCORBA/RTCORBAC.h:

                    Changes resulting from the new files above.

                  * tao/IORInterceptor/TAO_IORInterceptor.dsp:
                  * tao/ObjRefTemplate/TAO_ObjRefTemplate.dsp:

                    Fixed settings in the release version.

                  * tao/Makefile.tao:
                  * tao/BiDir_GIOP/Makefile:
                  * tao/RTCORBA/Makefile:
                  * tao/RTPortableServer/Makefile:
                  * tao/Strategies/Makefile:
                  * tao/TypeCodeFactory/Makefile:
                  * tao/Utils/Makefile:
                  * tao/IORManipulation/Makefile:
                  * tao/IORTable/Makefile:
                  * tao/Messaging/Makefile:
                  * tao/Valuetype/Makefile:
                  * tao/ObjRefTemplate/Makefile:
                  * tao/PortableServer/Makefile:
                  * tao/IORInterceptor/Makefile:
                  * tao/IFR_Client/Makefile:
                  * tao/Domain/Makefile:
                  * tao/DynamicAny/Makefile:
                  * tao/DynamicInterface/Makefile:

                    Updated dependencies.

          Fri May  2 16:28:36 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * TAO_IDL/be/be_codegen.cpp:
                  * TAO_IDL/be/be_global.cpp:
                  * TAO_IDL/be/be_interface.cpp:
                  * TAO_IDL/be/be_valuetype.cpp:
                  * TAO_IDL/be_include/be_global.h:
                  * TAO_IDL/include/idl_global.h:
                  * TAO_IDL/util/utl_global.cpp:

                    Added detection and storage of info about
                    declarations of valuetypes and abstract interfaces,
                    checked to conditionally generate file includes
                    for these types from the Valuetype library.

                  * examples/AMH/Sink_Server/AMH_Servant.h:
                  * examples/AMH/Sink_Server/Base_Server.cpp:
                  * examples/AMH/Sink_Server/Client_Task.cpp:
                  * examples/AMH/Sink_Server/MT_AMH_Server.cpp:
                  * examples/AMH/Sink_Server/Makefile:
                  * examples/AMH/Sink_Server/client.bor:
                  * examples/AMH/Sink_Server/client.dsp:
                  * examples/AMH/Sink_Server/mt_server.bor:
                  * examples/AMH/Sink_Server/mt_server.dsp:
                  * examples/AMH/Sink_Server/st_server.bor:
                  * examples/AMH/Sink_Server/st_server.dsp:
                  * examples/AMI/FL_Callback/AMI_Peer.dsp:
                  * examples/AMI/FL_Callback/AMI_Progress.dsp:
                  * examples/AMI/FL_Callback/Makefile:
                  * examples/AMI/FL_Callback/Progress_i.cpp:
                  * examples/AMI/FL_Callback/peer.cpp:
                  * examples/AMI/FL_Callback/progress.cpp:
                  * examples/Buffered_AMI/Makefile:
                  * examples/Buffered_AMI/client.bor:
                  * examples/Buffered_AMI/client.cpp:
                  * examples/Buffered_AMI/client.dsp:
                  * examples/Buffered_AMI/server.bor:
                  * examples/Buffered_AMI/server.cpp:
                  * examples/Buffered_AMI/server.dsp:
                  * tests/AMH_Exceptions/Makefile:
                  * tests/AMH_Exceptions/Test.idl:
                  * tests/AMH_Exceptions/client.bor:
                  * tests/AMH_Exceptions/client.dsp:
                  * tests/AMH_Exceptions/server.bor:
                  * tests/AMH_Exceptions/server.cpp:
                  * tests/AMH_Exceptions/server.dsp:
                  * tests/AMH_Oneway/Makefile:
                  * tests/AMH_Oneway/client.bor:
                  * tests/AMH_Oneway/client.dsp:
                  * tests/AMH_Oneway/server.bor:
                  * tests/AMH_Oneway/server.cpp:
                  * tests/AMH_Oneway/server.dsp:
                  * tests/AMI/AMI_Test_Client.dsp:
                  * tests/AMI/AMI_Test_Server.dsp:
                  * tests/AMI/AMI_Test_Simple_Client.dsp:
                  * tests/AMI/Makefile:
                  * tests/AMI/client.bor:
                  * tests/AMI/client.cpp:
                  * tests/AMI/server.bor:
                  * tests/AMI/simple_client.cpp:
                  * tests/AMI_Buffering/Makefile:
                  * tests/AMI_Buffering/admin.dsp:
                  * tests/AMI_Buffering/client.bor:
                  * tests/AMI_Buffering/client.dsp:
                  * tests/AMI_Buffering/server.bor:
                  * tests/AMI_Buffering/server.dsp:
                  * tests/AMI_Timeouts/Makefile:
                  * tests/AMI_Timeouts/client.bor:
                  * tests/AMI_Timeouts/client.cpp:
                  * tests/AMI_Timeouts/client.dsp:
                  * tests/AMI_Timeouts/server.bor:
                  * tests/AMI_Timeouts/server.cpp:
                  * tests/AMI_Timeouts/server.dsp:
                  * tests/AMI_Timeouts/timeout_client.h:
                  * tests/Abstract_Interface/Abstract_Interface_Client.dsp:
                  * tests/Abstract_Interface/Abstract_Interface_Server.dsp:
                  * tests/Abstract_Interface/Makefile:
                  * tests/Abstract_Interface/client.bor:
                  * tests/Abstract_Interface/server.bor:
                  * tests/ORT/Makefile:
                  * tests/ORT/ORT_test_IORInterceptor.h:
                  * tests/ORT/ObjectReferenceFactory.idl:
                  * tests/ORT/client.bor:
                  * tests/ORT/server.bor:
                  * tests/ORT/server.dsp:
                  * tests/Portable_Interceptors/IORInterceptor/FOO_IORInterceptor.h:
                  * tests/Portable_Interceptors/IORInterceptor/Makefile:
                  * tests/Portable_Interceptors/IORInterceptor/client.dsp:
                  * tests/Portable_Interceptors/IORInterceptor/server.bor:
                  * tests/Portable_Interceptors/IORInterceptor/server.dsp:

                    Updated makefiles and project files for the TAO tests
                    and examples that use valuetypes, abstract interfaces,
                    IOR interceptors or object reference templates. Also
                    removed many unnecessary links, includes
                    and IDL compiler command line options.

          Fri May  2 000:42:11 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * rules.tao.GNU:
                  * TAO_IDL/be/be_codegen.cpp:
                  * TAO_IDL/be/be_global.cpp:
                  * TAO_IDL/be/be_interface.cpp:
                  * TAO_IDL/be/be_valuetype.cpp:
                  * TAO_IDL/be/be_visitor_component/component_ch.cpp:
                  * TAO_IDL/be/be_visitor_component/component_cs.cpp:
                  * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
                  * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
                  * TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:
                  * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
                  * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
                  * TAO_IDL/be_include/be_global.h
                  * tests/OBV/Any/Makefile:
                  * tests/OBV/Any/client.bor:
                  * tests/OBV/Any/client.dsp:
                  * tests/OBV/Any/server.bor:
                  * tests/OBV/Any/server.dsp:
                  * tests/OBV/Factory/Makefile:
                  * tests/OBV/Factory/client.bor:
                  * tests/OBV/Factory/client.dsp:
                  * tests/OBV/Factory/server.bor:
                  * tests/OBV/Factory/server.dsp:
                  * tests/OBV/Forward/Makefile:
                  * tests/OBV/Forward/client.bor:
                  * tests/OBV/Forward/client.dsp:
                  * tests/OBV/Forward/server.bor:
                  * tests/OBV/Forward/server.dsp:
                  * tests/OBV/TC_Alignment/Makefile:
                  * tests/OBV/TC_Alignment/client.bor:
                  * tests/OBV/TC_Alignment/client.dsp:
                  * tests/OBV/TC_Alignment/server.bor:
                  * tests/OBV/TC_Alignment/server.dsp:

                    Updated rules.tao.GNU and the tests in the
                    TAO/tests/OBV directory to work with the
                    new Valuetype library. Also substituted ptrdiff_t
                    for ptr_arith_t in TAO_IDL.

          Thu May  1 20:24:13 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * TAO_IDL/be_include/be_helper.h:
                  * tao/ORB.cpp:
                  * tao/IORInterceptor/IORInterceptorC.cpp:
                  * tao/IORInterceptor/IORInterceptorC.h:
                  * tao/Messaging/MessagingC.cpp:
                  * tao/Messaging/MessagingC.h:
                  * tao/Messaging/Messaging_No_ImplC.cpp:
                  * tao/Messaging/Messaging_No_ImplC.h:
                  * tao/Messaging/Messaging_RT_PolicyC.cpp:
                  * tao/Messaging/Messaging_RT_PolicyC.h:
                  * tao/Messaging/Messaging_SyncScope_PolicyC.cpp:
                  * tao/Messaging/Messaging_SyncScope_PolicyC.h:
                  * tao/Messaging/TAO_ExtC.cpp:
                  * tao/Messaging/TAO_ExtC.h:
                  * tao/ObjRefTemplate/ObjectReferenceTemplateC.cpp:
                  * tao/ObjRefTemplate/ObjectReferenceTemplateC.h:
                  * tao/PortableServer/Default_ORTC.cpp:
                  * tao/PortableServer/Default_ORTC.h:
                  * tao/Valuetype/AbstractBase.cpp:
                  * tao/Valuetype/AbstractBase.h:
                  * tao/Valuetype/AbstractBase.inl:
                  * tao/Valuetype/ValueBase.cpp:

                    Finished subsetting the Valuetype library. Also changed some
                    ptr_arith_t to ptrdiff_t, to be compatible with recent
                    changes in ACE.

                  * TAOACE.dsw:
                  * rules.tao.GNU:
                  * tao/BiDir_GIOP/Makefile:
                  * tao/Domain/Makefile:
                  * tao/DynamicAny/Makefile:
                  * tao/DynamicInterface/Makefile:
                  * tao/IFR_Client/Makefile:
                  * tao/Valuetype/ValueBase.h:
                  * tao/IORInterceptor/Makefile:
                  * tao/IORManipulation/Makefile:
                  * tao/IORTable/Makefile:
                  * tao/Makefile.bor:
                  * tao/Makefile.dirs
                  * tao/Makefile.tao:
                  * tao/ObjRefTemplate/Makefile:
                  * tao/ObjRefTemplate/Makefile.bor:
                  * tao/Messaging/Makefile:
                  * tao/RTCORBA/Makefile:
                  * tao/RTPortableServer/Makefile:
                  * tao/SmartProxies/Makefile:
                  * tao/Strategies/Makefile:
                  * tao/TypeCodeFactory/Makefile:
                  * tao/PortableServer/Makefile:
                  * tao/PortableServer/TAO_PortableServer.dsp:
                  * tao/Utils/Makefile:
                  * tao/Messaging/TAO_Messaging.dsp:
                  * tao/ObjRefTemplate/TAO_ObjRefTemplate.dsp:

                    Modified and/or updated dependencies.

                  * tao/Valuetype/Valuetype.mpc:
                  * tao/Valuetype/Makefile:
                  * tao/Valuetype/Makefile.bor:
                  * tao/ObjRefTemplate/ObjRefTemplate.mpc:

                    New files.

          Thu May  1 15:48:19 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * tao/ObjectReferencTemplate/ObjectReferenceTemplateC.h:
                  * tao/Valuetype/ValueFactory_Map.h:

                    Minor changes to get the ORT and Valuetype libraries to
                    compile.

          Wed Apr 30 21:33:08 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * tao/ORB.cpp:
                  * tao/TAO.dsp:
                  * tao/Valuetype_Adapter.h:
                  * tao/append.cpp:
                  * tao/corba.h:
                  * tao/skip.cpp:
                  * tao/Valuetype/AbstractBase.cpp:
                  * tao/Valuetype/TAO_Valuetype.dsp
                  * tao/Valuetype/Valuetype_Adapter_Impl.cpp:
                  * tao/Valuetype/Valuetype_Adapter_Impl.h:

                    Exisiting files modified toward separating
                    valuetype-related files into a library.

                  * tao/Valuetype/ValueBase.cpp:
                  * tao/Valuetype/ValueBase.h:
                  * tao/Valuetype/ValueBase.inl:
                  * tao/Valuetype/ValueFactory.cpp:
                  * tao/Valuetype/ValueFactory.h:
                  * tao/Valuetype/ValueFactory.inl:
                  * tao/Valuetype/ValueFactory_Map.cpp:
                  * tao/Valuetype/ValueFactory_Map.h:
                  * tao/Valuetype/ValueFactory_Map.inl:

                    Files moved from TAO/tao and/or renamed.

                  * tao/ValueBase.cpp:
                  * tao/ValueBase.h:
                  * tao/ValueBase.i:
                  * tao/ValueFactory.cpp:
                  * tao/ValueFactory.h:
                  * tao/ValueFactory.i:
                  * tao/ValueFactory_Map.cpp:
                  * tao/ValueFactory_Map.h:
                  * tao/ValueFactory_Map.i:

                    Files removed from TAO and transferred to
                    the TAO_Valuetype library.

          Wed Apr 30 18:11:05 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * TAO_IDL/ast/ast_interface.cpp:
                  * TAO_IDL/be/be_decl.cpp:
                  * TAO_IDL/be/be_visitor_operation.cpp:

                    Changes to keep in sync with changes in ACE.

                  * tao/ClientRequestInfo_i.cpp:
                  * tao/IORInterceptor_Adapter.h:
                  * tao/ORB_Core.cpp:
                  * tao/ORB_Core.h:
                  * tao/TAO.dsp:
                  * tao/TAO.dsw:
                  * TAOACE.dsw:
                  * tao/ValueBase.h:
                  * tao/corbafwd.h:

                    Progress in constructing the Valuetype library.

                  * tao/Valuetype_Adapter.cpp:
                  * tao/Valuetype_Adapter.h:
                  * tao/ObjRefTemplate/Makefile:
                  * tao/ObjRefTemplate/Makefile.bor:
                  * tao/Valuetype/AbstractBase.cpp:
                  * tao/Valuetype/AbstractBase.h:
                  * tao/Valuetype/AbstractBase.inl:
                  * tao/Valuetype/TAO_Valuetype.dsp:
                  * tao/Valuetype/Valuetype_Adapter_Impl.cpp:
                  * tao/Valuetype/Valuetype_Adapter_Impl.h:
                  * tao/Valuetype/valuetype_export.h:

                    New files.

                  * tao/AbstractBase.cpp:
                  * tao/AbstractBase.h:
                  * tao/AbstractBase.inl:

                    Moved these files to the Valuetype library.

          Tue Apr 29 17:21:13 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * tao/Any_T.h:
                  * tao/CORBA_String.cpp:
                  * tao/CORBA_String.h:
                  * tao/ClientRequestInfo_i.cpp:
                  * tao/Queued_Message.h:
                  * tao/Transport_Connector.h:
                  * tao/Wait_Strategy.h:
                  * tao/corba.h:
                  * tao/corbafwd.cpp:

                    Added some forward declarations and some includes to eliminate
                    build errors, and other changes in preparation for moving
                    out valuetype- and abstract interface-related files.

          Fri Apr 11 17:18:16 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * TAOACE.dsw:
                  * tao/AbstractBase.cpp:
                  * tao/Makefile.bor:
                  * tao/Makefile.dirs:
                  * tao/Makefile.tao:
                  * tao/PortableInterceptorC.h:
                  * tao/TAO.dsp:
                  * tao/DynamicInterface/Makefile:
                  * tao/IORInterceptor/IORInterceptor.pidl
                  * tao/IORInterceptor/IORInterceptorC.h:
                  * tao/IORInterceptor/Makefile:
                  * tao/IORInterceptor/TAO_IORInterceptor.dsp
                  * tao/PortableServer/Default_ORTC.h:
                  * tao/PortableServer/Makefile:
                  * tao/PortableServer/Makefile.bor:
                  * tao/PortableServer/POAManager.h:
                  * tao/PortableServer/TAO_PortableServer.dsp:

                    More subsetting-related changes.

                  * tao/ObjRefTemplate/ObjectReferenceTemplate.pidl:
                  * tao/ObjRefTemplate/ObjectReferenceTemplateC.cpp:
                  * tao/ObjRefTemplate/ObjectReferenceTemplateC.h:
                  * tao/ObjRefTemplate/ObjectReferenceTemplateC.i:
                  * tao/ObjRefTemplate/TAO_ObjRefTemplate.dsp:
                  * tao/ObjRefTemplate/ort_export.h:

                    Library created from ObjectReferenceTemplate*
                    files moved from TAO.

                  * tao/ObjectReferenceTemplate.pidl:
                  * tao/ObjectReferenceTemplateC.cpp:
                  * tao/ObjectReferenceTemplateC.h:
                  * tao/ObjectReferenceTemplateC.i:

                    Corresponding files removed from TAO.

          Fri Apr 11 13:01:04 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * TAOACE.dsw:
                  * tao/Interceptor_List.cpp:
                  * tao/Makefile.bor:
                  * tao/Makefile.dirs:
                  * tao/Makefile.tao:
                  * tao/IORInterceptor/TAO_IORInterceptor.dsp:
                  * tao/PortableServer/IORInfo.h:
                  * tao/PortableServer/Makefile:
                  * tao/PortableServer/Makefile.bor:
                  * tao/PortableServer/POA.h:
                  * tao/PortableServer/POAManager.cpp:
                  * tao/PortableServer/PortableServer.mpc:
                  * tao/PortableServer/TAO_PortableServer.dsp:

                    Changes to integrate the new IORInterceptor
                    library into existing TAO builds.

                  * tao/IORInterceptor/IORInterceptor.mpc:
                  * tao/IORInterceptor/Makefile:
                  * tao/IORInterceptor/Makefile.bor:
                  * tao/IORInterceptor/TAO_IORInterceptor.rc:

                    New files to complete the build framework of
                    TAO_IORInterceptors.

          Fri Apr 11 02:58:32 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * IFR_Client_Adapter.cpp:

                    Cosmetic changes.

                  * Interceptor_List.cpp:
                  * Interceptor_List.h:
                  * Interceptor_List.inl:
                  * ORB_Core.cpp:
                  * ORB_Core.h:
                  * ObjectReferenceTemplate.pidl:
                  * ObjectReferenceTemplateC.cpp:
                  * ObjectReferenceTemplateC.h:
                  * PortableInterceptor.pidl:
                  * PortableInterceptorC.cpp:
                  * PortableInterceptorC.h:
                  * TAO.dsp:
                  * IORInterceptor/TAO_IORInterceptor.dsp:

                    Modified files toward finishing the TAO_IORInterceptor
                    library.

                  * PI_Forward.pidl:
                  * PI_ForwardC.cpp:
                  * PI_ForwardC.h:
                  * PI_ForwardC.i:

                    New files, collecting typedefs used by both
                    PortableInterceptor.pidl and ObjectReferenceTemplate.pidl.

                  * IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
                  * IORInterceptor/IORInterceptor_Adapter_Impl.h:
                  * IORInterceptor_Adapter.cpp:
                  * IORInterceptor_Adapter.h:

                    Abstract and concrete adapter classes whose methods
                    wrap the few remaining dependencies in TAO on
                    PortableInterceptor::IORInterceptor.

          Thu Apr 10 22:44:04 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                  * tao/PortableInterceptor.pidl:
                  * tao/PortableInterceptorC.h:
                  * tao/PortableInterceptorC.i:
                  * tao/PortableInterceptorC.cpp:

                    Removed IORInterceptor and IORInfo from these files.

                  * tao/IORInterceptor/IORInterceptor.pidl:
                  * tao/IORInterceptor/IORInterceptorC.cpp:
                  * tao/IORInterceptor/IORInterceptorC.h:
                  * tao/IORInterceptor/IORInterceptorC.i:
                  * tao/IORInterceptor/TAO_IORInterceptor.dsp:
                  * tao/IORInterceptor/iorinterceptor_export.h:

                    Started a new library with the interfaces removed from
                    PortableInterceptor.pidl.

Sun May  4 16:45:46 UTC 2003  Don Hinton  <dhinton@dresystems.com>

        * orbsvcs/Naming_Service/Naming_Service.{h,cpp} (parse_args):
          Made argc a reference so that parse_args() can properly remove
          the -t option and argument from the commandline args if found.
          Also, make sure we process the arguments in order, by using the
          "-" prefix, RETURN_IN_ORDER, so as not to disturbe the rest of
          the arguments.  Thanks to Scott Gammil <srgammill@sbcglobal.net>
          for reporting the problem and supplying a fix.

        * orbsvcs/tests/Simple_Naming/run_test.pl:
          Added the "-t" option to first test.

Sat May 03 15:55:07 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Object.cpp (operator<<): If the object reference is not
          completely evaluated just marshall the stream of octets into the
          incoming CDR. Thanks to Andras Lang
          <lang@isis-server.isis.vanderbilt.edu> for reporting the
          problem.

Sat May  3 09:35:26 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/orbconf.h:
        * tao/default_resource.cpp: Added a #if option to select lazy
          resource strategy at compile time.

Fri May  2 12:01:45 2003  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:

          Check to make sure that the server is running before removing it.
          If it is running, reset the running information.

        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:

          Get the server information after reregistering the server before
          displaying it.

Fri May 02 17:03:49 2003  Simon McQueen  <sm@prismtechnologies.com>

        * orbsvcs/orbsvcs/CosNotification_Static.dsp:

          Added missing two missing IDL files and their resulting
          generated source to project and removed two others to make
          this project consistent with CosNotification.dsp.

        * TAOACE.dsw:
        * TAOACE_Static.dsw:

          Added a couple of missing dependencies.

Fri May 02 14:10:01 2003  Simon McQueen  <sm@prismtechnologies.com>

        * tao/DynamicInterface/Request.cpp: Trimmed trailing spaces.

Fri May 02 05:51:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Quoter/Server.bor:
        * examples/Quoter/Factory_finder.bor:
        * examples/Quoter/Generic_factory.bor:
          Added IORTable to fix BCB6 Static link errors.

Thu May 01 21:55:00 UTC 2003  Gautam Thaker  <gthaker@atl.lmco.com>

        Please address all concerns regarding this commit
        to Jason Cohen <jcohen@atl.lmco.com>.  Thank you.

        * tao/corbafwd.h:

        Added profile tag for SCIOP = 0x54414f0EU
        Note that this is not an official tag , but has been permitted
        for the time being.  It may change in the future.

        * tao/orbconf.h:

        To enable SCIOP building, ACE_HAS_SCTP must be enabled by
        added sctp=openss7 to the gmake command line.
        See $ACE_ROOT/performance-tests/SCTP/README for more info.
        Added code to set the major/minor types and enable
        sctp via TAO_HAS_SCIOP #define.

        * tao/Strategies/Makefile:
        * tao/Strategies/advanced_resource.cpp:

        Modified these two files to enable inclusion of the following
        new files.  Added SCIOP_* and sciop_* files to the Makefile
        and added SCIOP tag checking to advanced_resource.cpp to
        enable the Acceptor_Registry to know of SCIOP_Factory.

        * tao/Strategies/SCIOP_Acceptor.cpp:
        * tao/Strategies/SCIOP_Acceptor.h:
        * tao/Strategies/SCIOP_Acceptor.i:
        * tao/Strategies/SCIOP_Connection_Handler.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.h:
        * tao/Strategies/SCIOP_Connection_Handler.i:
        * tao/Strategies/SCIOP_Connector.cpp:
        * tao/Strategies/SCIOP_Connector.h:
        * tao/Strategies/SCIOP_Endpoint.cpp:
        * tao/Strategies/SCIOP_Endpoint.h:
        * tao/Strategies/SCIOP_Endpoint.i:
        * tao/Strategies/SCIOP_Factory.cpp:
        * tao/Strategies/SCIOP_Factory.h:
        * tao/Strategies/SCIOP_Lite_Factory.cpp:
        * tao/Strategies/SCIOP_Lite_Factory.h:
        * tao/Strategies/SCIOP_Profile.cpp:
        * tao/Strategies/SCIOP_Profile.h:
        * tao/Strategies/SCIOP_Profile.i:
        * tao/Strategies/SCIOP_Transport.cpp:
        * tao/Strategies/SCIOP_Transport.h:
        * tao/Strategies/SCIOP_Transport.i:
        * tao/Strategies/sciop_endpoints.cpp:
        * tao/Strategies/sciop_endpoints.h:
        * tao/Strategies/sciop_endpoints.i:
        * tao/Strategies/sciop_endpoints.pidl:

        Files added for SCIOP pluggable protocol.
        These files mirror the functionality of IIOP but do not
        inherit from IIOP.  SCIOP, while currently unsupported in
        this implementation, has a unique set of protocol properties.
        In the future, we may find a way to use inheritence from
        IIOP, but this is not currently trivial.

        * utils/catior/catior.cpp:

        Enabled SCIOP IOR recognition fulltime by removing
        #if 0 statements.  This *should* be okay, now that the SCIOP
        tag is available on all platforms, even if SCTP is not
        supported.

Thu May 01 16:15:29 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/PortableServer/POA:

          Object_Reactivation test pointed out the following bug: When
          waiting for the <servant_deactivation_condition>, the waiting
          thread gives up the POA lock.  This can potentially allow other
          threads to come in and make changes to the state of the POA.
          This includes, as in the case of the Object_Reactivation test,
          non-servant upcalls being in progress.  The waiting thread must
          reevaluate all conditions again from scratch after coming back
          from the wait() call.

          Therefore, I moved the while(1) loop from is_servant_in_map()
          and is_user_id_in_map() to activate_object() and
          activate_object_with_id().  This way all conditions are
          reevaluated after the wait completes, including the condition
          that no non-servant upcalls are in progress.

          Also in locate_servant_i(), similar changes were made.  In
          addition, if error occurred or a restart is required,
          etherealize the incarnated servant.

          In imr_notify_startup(), we can ignore the wait flag since this
          method is called from the POA constructor, there shouldn't be
          any waiting required.

          Thanks to Simon McQueen <sm@prismtechnologies.com> for pointing
          out that Object_Reactivation was failing. In fact,
          Object_Reactivation was always doing the incorrect thing; it was
          the new assert statements in Object_Adapter.cpp that pointed
          them out.

        * tao/PortableServer/Object_Adapter.cpp:

          Renamed the existing prepare_for_upcall() to
          prepare_for_upcall_i().  The new prepare_for_upcall() calls
          prepare_for_upcall_i() and watches out for potential restarts.
          If we end up waiting on a condition variable, the POA state may
          have changed while we are waiting.  Therefore, we need to call
          prepare_for_upcall_i() again.  We also need to cleanup the state
          of the upcall object.  Therefore, invoke the upcall destructor
          before continuing.

        * tao/RTPortableServer/RT_POA.i:

          Changes similar to the POA class were required for
          RT_POA::activate_object_with_priority() and
          RT_POA::activate_object_with_id_and_priority().

        * tao/RTPortableServer/RT_Collocation_Resolver.cpp:

          is_collocated() calls POA::locate_servant_i().  However, it can
          ignore the <wait_occurred_restart_call> flag since there is no
          implicit activation, there is no chance of waiting on a
          condition variable.

        * tests/POA/Single_Threaded_POA/Single_Threaded_POA.cpp:
        * tests/POA/Object_Reactivation/Object_Reactivation.cpp:

          Removed unnecessary parameters to Task::activate() call.

        * tests/POA/Object_Reactivation/Object_Reactivation.cpp:

          Made debugging statements optional.

        * examples/POA/DSI/server.dsp:
        * examples/POA/DSI/client.dsp:
        * examples/POA/DSI/Makefile:

          No need to link with the messaging library.

        * examples/TAO_Examples.dsw:

          Added POA BiDir test.

Thu May  1 15:03:48 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao_IFR_Client/IFR_BaseC.cpp:
        * tao_IFR_Client/IFR_BaseC.h:
        * tao_IFR_Client/IFR_BaseC.i:
        * tao_IFR_Client/IFR_BasicC.cpp:
        * tao_IFR_Client/IFR_BasicC.h:
        * tao_IFR_Client/IFR_BasicC.i:
        * tao_IFR_Client/IFR_ComponentsC.cpp:
        * tao_IFR_Client/IFR_ComponentsC.h:
        * tao_IFR_Client/IFR_ComponentsC.i:
        * tao_IFR_Client/IFR_ExtendedC.cpp:
        * tao_IFR_Client/IFR_ExtendedC.h:
        * tao_IFR_Client/IFR_ExtendedC.i:

          Regenerated these files.

Thu May  1 14:16:58 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/RTCORBA/RTCORBAC.cpp:
        * tao/RTCORBA/RTCORBAC.h:
        * tao/RTCORBA/RTCORBAC.i:

          Regenerated these files.

Thu May  1 11:25:42 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_component/component_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ReceivedCredentials.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ReceivedCredentials.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_TargetCredentials.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_TargetCredentials.h:
        * orbsvcs/orbsvcs/Security/PrincipalAuthenticator.cpp:
        * orbsvcs/orbsvcs/Security/PrincipalAuthenticator.h:
        * tao/AbstractBase.cpp:
        * tao/AbstractBase.h:
        * tao/AbstractBase.inl:
        * tao/Any.cpp:
        * tao/ClientRequestInfo_i.cpp:
        * tao/CurrentC.cpp:
        * tao/CurrentC.h:
        * tao/DomainC.cpp:
        * tao/DomainC.h:
        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/IOP_CodecC.cpp:
        * tao/IOP_CodecC.h:
        * tao/LocalObject.cpp:
        * tao/LocalObject.i:
        * tao/NVList.cpp:
        * tao/NVList.h:
        * tao/ORBInitInfo.cpp:
        * tao/ORBInitInfo.h:
        * tao/Object.cpp:
        * tao/Object.h:
        * tao/ObjectReferenceTemplateC.cpp:
        * tao/ObjectReferenceTemplateC.h:
        * tao/Pluggable_Messaging_Utils.h:
        * tao/PolicyC.cpp:
        * tao/PolicyC.h:
        * tao/PollableC.cpp:
        * tao/PollableC.h:
        * tao/PortableInterceptorC.cpp:
        * tao/PortableInterceptorC.h:
        * tao/TAOC.cpp:
        * tao/TAOC.h:
        * tao/TAO_Server_Request.h:
        * tao/TAO_Server_Request.i:
        * tao/ValueBase.cpp:
        * tao/ValueBase.h:
        * tao/BiDir_GIOP/BiDirPolicyC.cpp:
        * tao/BiDir_GIOP/BiDirPolicyC.h:
        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynAny_i.h:
        * tao/DynamicAny/DynArray_i.cpp:
        * tao/DynamicAny/DynArray_i.h:
        * tao/DynamicAny/DynEnum_i.cpp:
        * tao/DynamicAny/DynEnum_i.h:
        * tao/DynamicAny/DynSequence_i.cpp:
        * tao/DynamicAny/DynSequence_i.h:
        * tao/DynamicAny/DynStruct_i.cpp:
        * tao/DynamicAny/DynStruct_i.h:
        * tao/DynamicAny/DynUnion_i.cpp:
        * tao/DynamicAny/DynUnion_i.h:
        * tao/DynamicAny/DynamicAnyC.cpp:
        * tao/DynamicAny/DynamicAnyC.h:
        * tao/IFR_Client/IFR_BaseC.cpp:
        * tao/IFR_Client/IFR_BaseC.h:
        * tao/IFR_Client/IFR_BasicC.cpp:
        * tao/IFR_Client/IFR_BasicC.h:
        * tao/IFR_Client/IFR_ComponentsC.cpp:
        * tao/IFR_Client/IFR_ComponentsC.h:
        * tao/IFR_Client/IFR_ExtendedC.cpp:
        * tao/IFR_Client/IFR_ExtendedC.h:
        * tao/IORManipulation/IORC.cpp:
        * tao/IORManipulation/IORC.h:
        * tao/IORTable/IORTableC.cpp:
        * tao/IORTable/IORTableC.h:
        * tao/Messaging/MessagingC.cpp:
        * tao/Messaging/MessagingC.h:
        * tao/Messaging/Messaging_No_ImplC.cpp:
        * tao/Messaging/Messaging_No_ImplC.h:
        * tao/Messaging/Messaging_RT_PolicyC.cpp:
        * tao/Messaging/Messaging_RT_PolicyC.h:
        * tao/Messaging/Messaging_SyncScope_PolicyC.cpp:
        * tao/Messaging/Messaging_SyncScope_PolicyC.h:
        * tao/Messaging/TAO_ExtC.cpp:
        * tao/Messaging/TAO_ExtC.h:
        * tao/PortableServer/Collocated_Object.cpp:
        * tao/PortableServer/Collocated_Object.h:
        * tao/PortableServer/Default_ORTC.cpp:
        * tao/PortableServer/Default_ORTC.h:
        * tao/PortableServer/ImR_LocatorC.cpp:
        * tao/PortableServer/ImR_LocatorC.h:
        * tao/PortableServer/ImplRepoC.cpp:
        * tao/PortableServer/ImplRepoC.h:
        * tao/PortableServer/POAManager.i:
        * tao/PortableServer/PortableServerC.cpp:
        * tao/PortableServer/PortableServerC.h:
        * tao/PortableServer/Servant_Base.i:
        * tao/PortableServer/ServerRequestInfo.cpp:
        * tao/RTCORBA/Network_Priority_Mapping_Manager.cpp:
        * tao/RTCORBA/Network_Priority_Mapping_Manager.h:
        * tao/RTCORBA/Priority_Mapping_Manager.cpp:
        * tao/RTCORBA/Priority_Mapping_Manager.h:
        * tao/RTCORBA/RTCORBAC.cpp:
        * tao/RTCORBA/RTCORBAC.h:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tao/RTPortableServer/RTPortableServerC.cpp:
        * tao/RTPortableServer/RTPortableServerC.h:
        * tao/TypeCodeFactory/TypeCodeFactoryC.cpp:
        * tao/TypeCodeFactory/TypeCodeFactoryC.h:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.h:

          Changed all uses of ptr_arith_t to ptrdiff_t.  Addresses 64 bit
          platform issues.  Thanks to Steve Huston <shuston@riverace.com>
          for suggesting this change.

        * tao/Exception.h:

          Updated author information.

        * tao/Pseudo_VarOut_T.h:

          Nuked trailing whitespace.

Thu May 01 10:35:03 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.cpp (encode_endpoints):

          Use the ssl_component() accessor method instead of directly
          accessing the class member variable.  TAO_SSLIOP_Profile is
          currently a friend of TAO_SSLIOP_Endpoint.  This change is a
          step in the direction of removing that friend declaration.

Thu May  1 11:29:27 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicAny/DynamicAnyC.cpp:
        * tao/DynamicAny/DynamicAnyC.h:
        * tao/DynamicAny/DynamicAnyC.i:

          Regenerated these files.

Thu May  1 11:08:51 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Param_Test/Makefile:
        * tests/Param_Test/Param_Test.mpc:
        * tests/Param_Test/client.bor:
        * tests/Param_Test/client.dsp:
        * tests/Param_Test/server.bor:
        * tests/Param_Test/server.dsp:

          Modified these files to reflect the removal of the file below.

        * tests/Param_Test/tmplinst.cpp:

          Removed this file. All the necessary explicit template
          instantiations are generated now.

Thu May  1 10:46:37 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicInterface/Request.cpp:

          Added explicit instantiations of the base template class
          for CORBA::ORB::RequestSeq_var.

Thu May  1 10:27:40 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Param_Test/tmplinst.cpp:

          Updated parameter list in several of the explicit instantiations.

Thu May  1 09:51:03 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:

          My recent additions to typedef code generation were generating
          a scoped name for both the type and the alias. This was
          incorrect, changed the alias generation to use the local name.
          Thanks to Simon McQueen <sm@prismtechnologies.com> for
          pointing out the problems the error was causing in
          CosLoadBalancing and the logging service libraries.

Thu May  1 08:37:49 2003  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/IFR_Service/IFR_Service.mpc:

          Added the NT_Service.cpp.

        * orbsvcs/IFR_Service/drv_preproc_ifr.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:
        * orbsvcs/IFR_Service/tao_ifr.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:
        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:

          Removed build warnings for Windows XP 64-bit.

        * orbsvcs/ImplRepo_Service/ImplRepo_Service.mpc:

          Added $(TAO_ROOT)/TAO_IDL to the libpaths.

Wed Apr 30 20:18:51 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/IORManipulation/IORC.cpp: Added explicit template
          instantiations.

Wed Apr 30 17:13:43 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be_include/be_visitor_sequence/sequence_cs.h:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:

          Removed unused parameter in gen_base_class_tmplinst().

Wed Apr 30 16:31:43 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_array/array_ch.cpp:
        * TAO_IDL/be/be_visitor_array/array_cs.cpp:
        * TAO_IDL/be_include/be_visitor_array/array_cs.h:

          Fixed explicit template instatiation for arrays.

Wed Apr 30 14:59:07 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:

          Changed internal checks and generated guards to handle
          use case of generating explicit template instantiation
          for bounded sequence base classes, and to avoid duplication
          if the same element type appears in a sequence with the
          same bound but in a different scope.

        * TAO_IDL/be/be_visitor_typedef.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:
        * TAO_IDL/be_include/be_visitor_typedef/typedef_ch.h:

          Fixed code generation for interface and valuetype typdefs
          to be consistent with recent changes to code generation
          for the corresponding base types.

Wed Apr 30 13:19:21 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:

          Changed generated code so that an octet sequence in an IDL
          file inherits from TAO_Unbounded_Sequence<CORBA::Octet>,
          rather than from the TAO_specific CORBA::OctetSeq, as it
          was recently changed to do. This change caused a host of
          problems, and since CORBA::OctetSeq is a spec extension,
          it now seems best to use it only in the TAO hand-crafted
          files.

Wed Apr 30 10:45:44 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:

          Fixed logic mistake that was skipping generation of explicit
          template instantiations for the base classes of bounded
          sequences whose elements are a basic IDL type.

Wed Apr 30 16:44:12 2003  Simon McQueen  <sm@prismtechnologies.com>

        * orbsvcs/orbsvcs/CosNotification_Static.dsp:

          Removed attic'ed files.

Wed Apr 30 10:40:31 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.cpp:
          Fixed compile errors for no exception builds on MSVC++.

Wed Apr 30 16:21:21 2003  Simon McQueen  <sm@prismtechnologies.com>

        * orbsvcs/orbsvcs/CosNotification_Static.dsp:

          Fixed output dir so stubs end up in the right place.

Wed Apr 30 15:25:35 2003  Simon McQueen  <sm@prismtechnologies.com>

        * tao/TAO_Static.dsp:
          Added IOP_IORC.* and IOP_CodecC.* to project to fix errors
          in static builds.

Wed Apr 30 07:26:37 2003  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/ast/ast_decl.cpp:
        * TAO_IDL/ast/ast_type.cpp:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_helper.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_interface_strategy.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:
        * TAO_IDL/be_include/be_helper.h:
        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/include/idl_narrow.h:
        * TAO_IDL/include/utl_string.h:
        * TAO_IDL/util/utl_string.cpp:
        * orbsvcs/Naming_Service/Naming_Service.h:
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
        * orbsvcs/orbsvcs/AV/AV_Core.cpp:
        * orbsvcs/orbsvcs/AV/MCast.cpp:
        * orbsvcs/orbsvcs/AV/QoS_UDP.cpp:
        * orbsvcs/orbsvcs/AV/RTCP.cpp:
        * orbsvcs/orbsvcs/AV/RTCP_Channel.cpp:
        * orbsvcs/orbsvcs/AV/RTCP_Packet.cpp:
        * orbsvcs/orbsvcs/AV/RTP.cpp:
        * orbsvcs/orbsvcs/AV/TCP.cpp:
        * orbsvcs/orbsvcs/AV/UDP.cpp:
        * orbsvcs/orbsvcs/AV/sfp.cpp:
        * orbsvcs/orbsvcs/Event/Dispatching_Modules.i:
        * orbsvcs/orbsvcs/Event/Dispatching_Modules.cpp:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.cpp:
        * orbsvcs/orbsvcs/Event/EC_And_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Conjunction_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Disjunction_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.cpp:
        * orbsvcs/orbsvcs/Event/Event_Channel.i:
        * orbsvcs/orbsvcs/Event/Event_Channel.cpp:
        * orbsvcs/orbsvcs/Event/RT_Task.cpp:
        * orbsvcs/orbsvcs/Event_Utilities.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.cpp:
        * orbsvcs/orbsvcs/IFRService/AttributeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExceptionDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.cpp:
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/OperationDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/StructDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp:
        * orbsvcs/orbsvcs/IOR_Multicast.cpp:
        * orbsvcs/orbsvcs/Log/LogMgr_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Utils.cpp:
        * orbsvcs/orbsvcs/Naming/Persistent_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Transient_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.cpp:
        * orbsvcs/orbsvcs/Notify/EventTypeSeq.cpp:
        * orbsvcs/orbsvcs/Notify/FilterAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/PropertySeq.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Transport.cpp:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/DynSched.cpp:
        * orbsvcs/orbsvcs/Sched/SchedEntry.i:
        * orbsvcs/orbsvcs/Sched/Scheduler_Generic.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_Interpreter.h:
        * orbsvcs/orbsvcs/Trader/Constraint_Interpreter.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Database.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators_T.cpp:
        * orbsvcs/orbsvcs/Trader/Service_Type_Repository.cpp:
        * orbsvcs/orbsvcs/Trader/Trader.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.cpp:
        * tao/Asynch_Queued_Message.cpp:
        * tao/CDR_Encaps_Codec.cpp:
        * tao/CORBALOC_Parser.cpp:
        * tao/ClientRequestInfo_i.cpp:
        * tao/Codeset_Manager.cpp:
        * tao/Connection_Handler.cpp:
        * tao/Domain/DomainS.cpp:
        * tao/DynamicAny/DynArray_i.cpp:
        * tao/DynamicAny/DynSequence_i.cpp:
        * tao/DynamicAny/DynStruct_i.cpp:
        * tao/DynamicInterface/DII_Invocation.inl:
        * tao/DynamicInterface/Request.cpp:
        * tao/DynamicInterface/Server_Request.cpp:
        * tao/Exception.cpp:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Lite.cpp:
        * tao/IIOP_Acceptor.h:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/IIOP_Profile.h:
        * tao/IIOP_Profile.cpp:
        * tao/Leader_Follower.cpp:
        * tao/LocalObject.cpp:
        * tao/MCAST_Parser.cpp:
        * tao/Messaging/MessagingS.cpp:
        * tao/ORB.cpp:
        * tao/ORB_Core.cpp:
        * tao/Object.cpp:
        * tao/PortableServer/ImR_LocatorS.cpp:
        * tao/PortableServer/ImplRepoS.cpp:
        * tao/PortableServer/Key_Adapters.cpp:
        * tao/PortableServer/Object_Adapter.h:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/POAManager.i:
        * tao/PortableServer/PolicyS.cpp:
        * tao/PortableServer/Servant_Base.i:
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/ServerRequestInfo.cpp:
        * tao/PortableServer/Strategized_Object_Proxy_Broker.cpp:
        * tao/Profile.h:
        * tao/Profile.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTPortableServer/RT_POA.cpp:
        * tao/Service_Context.cpp:
        * tao/Strategies/DIOP_Acceptor.h:
        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/DIOP_Profile.h:
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
        * tao/Strategies/SHMIOP_Profile.h:
        * tao/Strategies/SHMIOP_Profile.cpp:
        * tao/Strategies/UIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Profile.h:
        * tao/Strategies/UIOP_Profile.cpp:
        * tao/Synch_Queued_Message.cpp:
        * tao/TAO_Server_Request.h:
        * tao/TAO_Server_Request.i:
        * tao/Tagged_Components.cpp:
        * tao/Transport.h:
        * tao/Transport.inl:
        * tao/Transport.cpp:
        * tao/Transport_Cache_Manager.cpp:
        * tao/Typecode.cpp:
        * tao/corbafwd.cpp:
        * tao/default_resource.h:
        * tao/default_resource.cpp:
        * tao/params.cpp:

          Remove build warnings on Windows XP 64-bit.

Wed Apr 30 12:52:50 2003  Simon McQueen  <sm@prismtechnologies.com>

        * examples/Simple/time/client_static.dsp:
        * orbsvcs/orbsvcs/AV_Static.dsp:
        * orbsvcs/orbsvcs/CosConcurrency_Static.dsp:
        * orbsvcs/orbsvcs/CosEvent_Static.dsp:
        * orbsvcs/orbsvcs/CosLifeCycle_Static.dsp:
        * orbsvcs/orbsvcs/CosLoadBalancing_Static.dsp:
        * orbsvcs/orbsvcs/CosNaming_Static.dsp:
        * orbsvcs/orbsvcs/CosNotification_Static.dsp:
        * orbsvcs/orbsvcs/CosProperty_Static.dsp:
        * orbsvcs/orbsvcs/CosTime_Static.dsp:
        * orbsvcs/orbsvcs/CosTrading_Static.dsp:
        * orbsvcs/orbsvcs/DsLogAdmin_Static.dsp:
        * orbsvcs/orbsvcs/PortableGroup_Static.dsp:
        * orbsvcs/orbsvcs/RTEvent_Static.dsp:
        * orbsvcs/orbsvcs/RTSched_Static.dsp:
        * orbsvcs/orbsvcs/Security_Static.dsp:
        * orbsvcs/orbsvcs/SSLIOP_Static.dsp:
        * orbsvcs/orbsvcs/Svc_Utils_Static.dsp:
        * orbsvcs/tests/Notify/lib/TAO_NotifyTests_Static.dsp:
        * tao/IFR_Client/TAO_IFR_Client_Static.dsp:
        * tao/IORManipulation/TAO_IORManip_Static.dsp:
        * tao/Messaging/TAO_Messaging_Static.dsp:
        * tao/PortableServer/TAO_PortableServer_Static.dsp:
        * tao/RTCORBA/TAO_RTCORBA_Static.dsp:
        * tao/RTPortableServer/TAO_RTPortableServer_Static.dsp:
        * tao/TypeCodeFactory/TypeCodeFactory_Static.dsp:

          Fixed some build errors and warnings.

Wed Apr 30 11:30:18 2003  Edward Scott  <eas@prismtechnologies.com>

        * examples/POA/Generic_Servant/Makefile.generic_servant:
        * examples/POA/Generic_Servant/Makefile.client:

          Small fix to Makefile.client. Updated dependencies.

Tue Apr 29 14:10:53 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:

          Added guard for explicit template instantiation of anonymous
          sequences, extending the fix in

          Tue Apr 29 10:58:45 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

          to work even if an anonymous nested sequences is declared more
          than once, possibly in different scopes.

Tue Apr 29 12:56:41 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/PredefinedType_Seq_Tmplinst.cpp:

          New file containing explicit instantiations of the template
          unbounded sequence classes whose element types are the CORBA
          predefined types, i.e., the basic IDL types plus Object,
          ValueBase, AbstractBase, Any, and TypeCode. This eliminates
          the need for the IDL compiler to generate explicit instantiations
          each time one of these sequences is used as a base class
          in generated code.

        * tao/ValueBase.cpp:
        * tao/ValueBase.h:

          Added the tao_ValueBase_life struct similar to what is generated
          for derived value types, so that ValueBase can be used in the
          TAO_Unbounded_Valuetype_Sequence template class.

        * tao/TAO.dsp:
        * tao/Makefile.tao:
        * tao/Makefile.bor:
        * tao/Makefile.am:

          Added new file to project and makefiles.

Tue Apr 29 10:58:45 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:

          Removed unused argument and moved the setting of a flag to the
          end of the method in which it appears more than once, so that
          the second check will not return a bogus value. Also changed
          the logic so nested anonymous sequences (such as
          sequence<sequence<short> >) will get one and only one explicit
          instantiation, even if it is used more than once in a translation
          unit.

Tue Apr 29 16:13:46 2003  Simon McQueen  <sm@prismtechnologies.com>

        * tests/Abstract_Interface/client.cpp: Fixed build error.

Tue Apr 29 14:47:40 2003  Dave Smith  <dts@prismtechnologies.com>

        * tao/IOP_IORC.h:
        * tao/diffs/IOP_IOR.diff:

          Removed clash with symbol "IOR" defined in
          /usr/include/machine/inline.h on HPUX.

Mon Apr 28 18:09:43 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_home.cpp:
        * TAO_IDL/be/be_visitor_ccm_pre_proc.cpp:

          Fixed code generation for home-related interfaces.

Mon Apr 28 17:35:22 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:

          Changed generated code in several places to be "CORBA::OctetSeq"
          instead of "TAO_Unbounded_Sequence<CORBA::Octet>".

Mon Apr 28 18:59:01 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/POA/Generic_Servant/Makefile:
        * examples/POA/Generic_Servant/Makefile.client:
        * examples/POA/Generic_Servant/Makefile.generic_servant:
          Splitted original makefile into three, to resolve link problems with
          MinGW and Cygwin.

Mon Apr 28 12:24:39 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/Strategies/advanced_resource.cpp:

          load_default_protocols(): Reset
          <TAO_Default_Resource_Factory::protocol_factories_> after
          copying the protocols from it to avoid double deletes.

          ~TAO_Advanced_Resource_Factory(): delete all protocols in
          protocol factory to avoid memory leak.

        * tao/RTPortableServer/RT_POA.cpp (server_protocol):

          Fixed code formatting.

        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:

          Avoid a memory leak in pre_invoke_remote_request() by assigning
          the result from POA::server_protocol() to a CORBA::Policy_var
          instead of a CORBA::Policy_ptr.

        * tao/orbconf.h:

          Only set TAO_DEFAULT_ROOTPOA_NAME if not already set by the
          user.

Mon Apr 28 09:13:17 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/RTKokyuEvent.dsp: Added the xxx_BUILD_DLL
          preprocessor definition to get rid of compile warnings on MSVC.

Mon Apr 28 07:05:55 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/PortableServer/PortableServerC.i (demarshal_value): Added
          ACE_INLINE to marshal_value and demarshal_value. This should fix
          link errors in MSVC6. Thanks to Simon McQueen for reporting this.

Mon Apr 28 06:52:40 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/IOP_IORC.cpp: Removed duplicate explicit template
          instantiations.

        * tao/Array_VarOut_T.inl: Fixed a compilation error in BCB6.

Mon Apr 28 06:43:50 2003  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:

          Added a dependency on RTSched.

Sun Apr 27 20:42:06 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Transport_Acceptor.h: Fixed a forward declaration that
          caused compile errors in VC++.

Sun Apr 27 20:08:27 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp: Fixed a typo that blasted
          the builds.

Sun Apr 27 17:50:16 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Bug_1482_Regression/Makefile: Updated dependencies.

Sun Apr 27 17:45:05 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/IOP_IORC.h:
        * tao/IOP_CodeC.h: Generated code to include "ace/post.h". This
          should fix warnings in BCB6 builds. Thanks to Johnny for
          alerting me on this.

Sun Apr 27 17:34:50 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/PortableServer/PortableServerC.cpp:
        * tao/PortableServer/PortableServerC.i: Moved marshal_value ()
          method from the cpp file to the inlined file. This shodl fix
          BCB5 build problems. Thanks to Johnny for helping me with this.

Sun Apr 27 11:31:42 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/GIOPC.{h,cpp,i}: Regenerated code
        * tao/diffs/GIOP.diff: Updated diffs

        * tao/IOP_IORC.cpp: Removed unwanted headers
        * tao/diffs/IOP_IOR.diff: Updated diffs.

Sun Apr 27 11:01:15 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/GIOPC.h:
        * tao/GIOP_Utils.h:
        * tao/Messaging_PolicyValueC.h:
        * tao/Pluggable_Messaging_Utils.h:
        * tao/Reply_Dispatcher.h:
        * tao/Synch_Reply_Dispatcher.h:
        * tao/Transport.h:
        * tao/Transport_Acceptor.cpp:
        * tao/Transport_Acceptor.h: Removed totally unwanted
          includes. This was setting up totally screwed dependencies and
          increased footprint.

        * tao/IOP_CodecC.cpp:
        * tao/IOP_CodecC.h:
        * tao/IOP_CodecC.i:
        * tao/diffs/IOP_Codec.diff: Regenerated code and updated
          the diffs.

Sun Apr 27 09:37:06 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/IOP_IORC.h:
        * tao/IOP_IORC.cpp:
        * tao/IOP_IORC.i: Regenerated the code. Somehow the regenarted
          code never got merged back from the branch.

        * tao/diffs/IOP_IOR.diff: Updated diff file.

Sat Apr 26 16:08:15 2003  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * tao/PortableServer/Servant_Base.{h,cpp} Added an accessor method
          that returns the current reference count.  Thanks to
          Zsolt Zsoldos <zsolt.zsoldos@rogers.com> for suggesting this.

        * utils/IOR-parser/ior-handler.cpp (interpretIor): Fixed this utility
          so that it correctly handles GIOP 1.2!  Thanks to Dave Ryan
          <djryan7@pacbell.net> for this fix.

Sat Apr 26 11:12:53 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp: Fixed a compile error in
          builds where exceptions are turned off.

Sat Apr 26 11:08:10 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Messaging/Messaging_No_ImplC.cpp: Missing template
          instantiations.

Sat Apr 26 10:58:31 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/PolicyC.cpp: Removed duplicate template instantiations.

Sat Apr 26 10:52:46 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/PortableServer/ImR_LocatorC.i: Fixed a warning in VC++ builds.

Sat Apr 26 08:42:46 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Environment.cpp: Removed operator= for
          CORBA::Environment_var since they shoudl be taken care by the
          template classes.

Fri Apr 25 22:29:08 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp: Added explicit
          template instations for the base class sequences.

Fri Apr 25 22:26:21 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/DynamicC.cpp:
        * tao/DynamicC.h:
        * tao/DynamicC.i:
        * tao/OctetSeqC.cpp:
        * tao/OctetSeqC.h:
        * tao/OctetSeqC.i:
        * tao/PortableServer/Default_ORTC.cpp:
        * tao/PortableServer/Default_ORTC.h:
        * tao/PortableServer/Default_ORTC.i:
        * tao/PortableServer/ImR_ActivatorC.h:
        * tao/PortableServer/ImR_LocatorC.cpp:
        * tao/PortableServer/ImR_LocatorC.h:
        * tao/PortableServer/ImR_LocatorC.i:
        * tao/PortableServer/ImplRepoC.cpp:
        * tao/PortableServer/ImplRepoC.h:
        * tao/PortableServer/PortableServerC.cpp
        * tao/PortableServer/ImplRepoC.i: Regenerated ode and patched them.

        * tao/PortableServer/diffs/Default_ORT.diff:
        * tao/PortableServer/diffs/ImplRepo.diff:
        * tao/diffs/Dynamic.diff:
        * tao/diffs/OctetSeq.diff: Updated the diff files.

          With the above checkin a simple server and client should build
          without link errors when explicit template instantiations have
          been turned on.

Fri Apr 25 17:04:34 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/be_include/be_visitor_sequence/sequence_cs.h: Added code
          to generate explicit template instantiations.

Fri Apr 25 15:21:58 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/RTCORBA/Thread_Pool.cpp:

          In create_threadpool_helper(), finalize thread pool resource in
          case of thread creation errors.  This will fix a memory leak.

        * tests/RTCORBA/Banded_Connections/client.cpp:
        * tests/RTCORBA/Banded_Connections/server.cpp:

          Report meaningful message in case of thread creation errors.

Fri Apr 25 08:59:12 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/IFR_Client/IFR_BaseC.cpp:
        * tao/IFR_Client/IFR_BaseC.h:
        * tao/IFR_Client/IFR_BaseC.i:
        * tao/IFR_Client/IFR_BasicC.cpp:
        * tao/IFR_Client/IFR_BasicC.h:
        * tao/IFR_Client/IFR_BasicC.i:
        * tao/IFR_Client/IFR_ComponentsC.cpp:
        * tao/IFR_Client/IFR_ComponentsC.h:
        * tao/IFR_Client/IFR_ComponentsC.i:
        * tao/IFR_Client/IFR_ExtendedC.cpp:
        * tao/IFR_Client/IFR_ExtendedC.h:
        * tao/IFR_Client/IFR_ExtendedC.i: Generated code for the IFR. This
          should compile fine if explicit template instantiations are
          used.

          We still have a lots of link errors that needs fixing in TAO.

Fri Apr 25 07:06:21 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/PortableServer/PortableServerC.i: Added #if
          (TAO_HAS_MINIMUM_POA == 0) guards in a few places to get the
          file compiling cleanly in minimum builds.

Fri Apr 25 06:27:06 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/PortableServer/ObjectReferenceTemplate.cpp: Fixed a compile
          error in builds with no exceptions.

Thu Apr 24 22:01:42 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/CONV_FRAMEC.cpp:
        * tao/CurrentC.cpp:
        * tao/DomainC.cpp:
        * tao/DynamicC.cpp:
        * tao/Dynamic_Adapter.cpp:
        * tao/Dynamic_Adapter.h:
        * tao/GIOPC.cpp:
        * tao/IIOPC.cpp:
        * tao/IOP_CodecC.cpp:
        * tao/Messaging_PolicyValueC.cpp:
        * tao/ORB.cpp:
        * tao/Object.cpp:
        * tao/ObjectIdListC.cpp:
        * tao/ObjectReferenceTemplateC.cpp:
        * tao/Object_KeyC.cpp:
        * tao/Objref_VarOut_T.cpp:
        * tao/OctetSeqC.cpp:
        * tao/PolicyC.cpp:
        * tao/Policy_ForwardC.cpp:
        * tao/PortableInterceptorC.cpp:
        * tao/Pseudo_Value_VarOut_T.inl:
        * tao/Pseudo_VarOut_T.inl:
        * tao/ServicesC.cpp:
        * tao/StringSeqC.cpp:
        * tao/TAOC.cpp:
        * tao/TimeBaseC.cpp:
        * tao/ValueBase.cpp:
        * tao/ValueBase.h:
        * tao/ValueFactory.cpp:
        * tao/ValueFactory.h:
        * tao/VarOut_T.cpp:
        * tao/DynamicAny/DynamicAnyC.cpp:
        * tao/DynamicInterface/Request.cpp:
        * tao/IFR_Client/IFR_BaseC.cpp:
        * tao/IORManipulation/IORC.cpp:
        * tao/Messaging/MessagingC.cpp:
        * tao/Messaging/Messaging_No_ImplC.cpp:
        * tao/Messaging/Messaging_RT_PolicyC.cpp:
        * tao/Messaging/Messaging_SyncScope_PolicyC.cpp:
        * tao/Messaging/TAO_ExtC.cpp:
        * tao/PortableServer/Default_ORTC.cpp:
        * tao/PortableServer/ImR_LocatorC.cpp:
        * tao/PortableServer/ImplRepoC.cpp:
        * tao/PortableServer/PortableServerC.cpp:
        * tao/RTCORBA/RTCORBAC.cpp:
        * tao/RTCORBA/RTCORBAC.h:
        * tao/RTCORBA/RTCORBAC.i:
        * tao/RTPortableServer/RTPortableServerC.cpp:
        * tao/TypeCodeFactory/TypeCodeFactoryC.cpp: First set of fixes for
          explicit template  instantiation problems. The fixes are not
          complete since the instantiations generated by the IDL compiler
          for the generated code is busted. Fixes to the IDL compiler over
          the past couple of days havent helped the situation. This set of
          fixes addresses

          - compilation issues arising in TAO and associated libraries
            from the explicit template instantiations section.
          - link errors while trying to link with TAO library.

          Applications linking to libraries other than TAO would still
          experience linking errors. They will be fixed along with the IDL
          compiler in the next couple of days.

Thu Apr 24 19:39:36 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/PortableServer/POA:

          The following changes are primarily to fix the problems caused
          by:

          Mon Jan 14 14:41:17 2002  Priyanka Gontla  <pgontla@ece.uci.edu>

          These problems include ignoring the <priority> value, running
          extra (and potentially incorrect) code, and memory leaks.

          - create_reference_i() and create_reference_with_id_i():
          Re-added <priority> parameter and restored function to the way
          it was.  However, now we find user id from system id (if
          needed), remember params for potentially invoking
          key_to_object() later, and ask the ORT to create the object.

          - servant_to_reference(): Get priority from
          cached_policies_.server_priority() rather than fixing it to
          TAO_INVALID_PRIORITY.  Also remember params for potentially
          invoking key_to_object() later, and ask the ORT to create the
          object.

          - id_to_reference_i(): Added code so that the ORT is also
          invoked from this method.  Not sure why this method was left
          out.  [Bug 1418]

          - invoke_key_to_object(): Super simplified this method.  All
          params required to call create_object_key() and key_to_object()
          are stored away in <key_to_object_params_>.

        * tao/PortableServer/ObjectReferenceTemplate.cpp:

          In make_object(), invoke_key_to_object() no longer requires any
          parameters to be passed to it.

        * tao/RTPortableServer/RT_POA.i:

          Fixed create_reference_with_priority() and
          create_reference_with_id_and_priority() to pass the priority
          value down to the POA.

Thu Apr 24 13:52:44 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_field/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_structure/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:

          Reinstated code generation of CDR operators for structs that
          contain a local interface. The operators are needed by the
          Any operator template instantiation. The marshaling error
          required for local interfaces is still output.

Thu Apr 24 13:01:12 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_type.cpp (gen_common_tmplinst):

          Substituted full name for local name in generation of
          parameters for explicit template instantiation.

        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:

          Removed generation of explicit template instantiation for
          TAO_Object_Manager and TAO_Valuetype_Manager. It is now
          handled elsewhere.

Thu Apr 24 11:48:16 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicInterface/Request.cpp:

          Removed duplicate defintion of CORBA::Request::_duplicate.

Thu Apr 24 10:33:57 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/field_cs.cpp:

          Added '.in ()' to generated code for field accessor when the
          type of the field is a pseudo object. Thanks to Andrey
          Nechypurenko <andrey.nechypurenko@siemens.com> and Nanbor Wang
          <nanbor@cse.wustl.edu> for reporting the problem.

Thu Apr 24 10:03:48 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:

          Fixed warnings on unused variable. Thanks to Bala for pointing this out.

Thu Apr 24 08:11:04 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/DynamicInterface/Context.h:
        * tao/DynamicInterface/ExceptionList.h: Added a undef for
          TAO_EXPORT_MACRO and redefined TAO_EXPORT_MACRO. This should fix
          problems with MSVC builds.

Wed Apr 23 22:12:37 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/CDR_Encaps_Codec.cpp (encode_value):

          If the internal ACE_Message_Block in the supplied Any is null,
          explicitly create an ACE_Message_Block and populate with the
          marshalled data.  Fixes run-time errors in the Codec and
          IORInterceptor tests.  Thanks to Jeff for providing a fix.

        * tao/PortableServer/POA.cpp (TAO_POA, create_POA_i):

          Reverted one more change from fix described in "Wed Apr 23
          18:06:48 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>".
          Fixes a remaining problem in the IORInterceptor test.

Wed Apr 23 18:27:53 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:

          Fixed indentation in code generation.

Wed Apr 23 18:12:16 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicInterface/Context.h:
        * tao/DynamicInterface/ExceptionList.h:

          Changed the declaration of CORBA::is_nil and CORBA::release
          for ContextList and ExceptionList to use
          TAO_NAMESPACE_INLINE_FUNCTION instead of
          TAO_DynamicInterface_Export, which was causing multiple definitions
          in builds with __ACE_INLINE__ defined.

Wed Apr 23 18:06:48 2003  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/PortableServer/POA.cpp (id_to_reference_i):
          (establish_components):
        * tao/PortableServer/Object_Adapter.cpp (open):

          Reverted Carlos' changes that attempted to fix Bug 1414
          (IORInterceptor deadlock).  It introduced other problems.
          Thanks to Irfan for detecting this problem.

Wed Apr 23 17:13:27 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:

          Fixed errors in code generation for explicit template
          instantiation.

Wed Apr 23 16:37:35 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/TAO.dsp:

          Turned on RTTI in IOP_CodecC.cpp.

Wed Apr 23 17:05:10 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tests/Bug_1020_Basic_Regression/Bug_1020_Basic_Regression.dsw:
        * tests/Bug_1020_Basic_Regression/client.dsp:
        * tests/Bug_1020_Basic_Regression/server.dsp:
        * tests/Bug_1020_Regression/Bug_1020_Regression.dsw:
        * tests/Bug_1020_Regression/client.dsp:
        * tests/Bug_1020_Regression/server.dsp:

          Reinstated these files.  These two tests should compile on VC6
          now that config-win32-msvc-6.h file has been updated and the -GR
          flag has been added to the project files.

        * tests/RTCORBA/RTCORBA-test-configurations.xls:

          Updated test configuration details.

Wed Apr 23 15:51:47 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Sequence_T.h:

          Removed unimplemented declarations of _tao_any_destructor.
          Thanks to Andrey Nechypurenko <andrey.nechypurenko@siemens.com>
          for reporting the problem.

Wed Apr 23 15:03:48 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>1

        * docs/tutorial/Quoter/AMI/Handler_i.h:
        * docs/tutorial/Quoter/AMI/Handler_i.cpp: Fixed the code to be
          portable by removing _ptr's for non-object references.

Wed Apr 23 09:53:27 2003  Chad Elliott  <elliott_c@ociweb.com>

        * tests/AMI/AMI.mpc:
        * tests/AMI_Buffering/AMI_Buffering.mpc:
        * tests/AMI_Timeouts/AMI_Timeouts.mpc:
        * tests/BiDirectional/BiDirectional.mpc:
        * tests/BiDirectional_NestedUpcall/BiDirectional_NestedUpcall.mpc:
        * tests/Big_Oneways/Big_Oneways.mpc:
        * tests/Big_Reply/Big_Reply.mpc:
        * tests/Big_Request_Muxing/Big_Request_Muxing.mpc:
        * tests/Big_Twoways/Big_Twoways.mpc:
        * tests/Blocking_Sync_None/Blocking_Sync_None.mpc:
        * tests/CDR/CDR.mpc:
        * tests/Cache_Growth_Test/Cache_Growth_Test.mpc:
        * tests/Client_Leaks/Client_Leaks.mpc:
        * tests/Codec/Codec.mpc:
        * tests/Collocation/Collocation.mpc:
        * tests/Connect_Strategy_Test/Connect_Strategy_Test.mpc:
        * tests/Connection_Purging/Connection_Purging.mpc:
        * tests/Crash_On_Write/Crash_On_Write.mpc:
        * tests/Crashed_Callback/Crashed_Callback.mpc:
        * tests/DLL_ORB/DLL_ORB.mpc:
        * tests/DSI_Gateway/DSI_Gateway.mpc:
        * tests/DynAny_Test/DynAny_Test.mpc:
        * tests/Explicit_Event_Loop/Explicit_Event_Loop.mpc:
        * tests/Exposed_Policies/Exposed_Policies.mpc:
        * tests/Faults/Faults.mpc:
        * tests/File_IO/File_IO.mpc:
        * tests/Forwarding/Forwarding.mpc:
        * tests/Hello/Hello.mpc:
        * tests/IDL_Test/IDL_Test.mpc:
        * tests/IORManipulation/IORManipulation.mpc:
        * tests/InterOp-Naming/InterOp-Naming.mpc:
        * tests/Leader_Followers/Leader_Followers.mpc:
        * tests/LongUpcalls/LongUpcalls.mpc:
        * tests/MProfile/MProfile.mpc:
        * tests/MProfile_Connection_Timeout/MProfile_Connection_Timeout.mpc:
        * tests/MProfile_Forwarding/MProfile_Forwarding.mpc:
        * tests/MT_BiDir/MT_BiDir.mpc:
        * tests/MT_Client/MT_Client.mpc:
        * tests/MT_Server/MT_Server.mpc:
        * tests/MT_Timeout/MT_Timeout.mpc:
        * tests/Multiple/Multiple.mpc:
        * tests/Multiple_Inheritance/Multiple_Inheritance.mpc:
        * tests/Muxed_GIOP_Versions/Muxed_GIOP_Versions.mpc:
        * tests/Muxing/Muxing.mpc:
        * tests/Native_Exceptions/Native_Exceptions.mpc:
        * tests/NestedUpcall/MT_Client_Test/MT_Client_Test.mpc:
        * tests/NestedUpcall/Simple/Simple.mpc:
        * tests/NestedUpcall/Triangle_Test/Triangle_Test.mpc:
        * tests/Nested_Event_Loop/Nested_Event_Loop.mpc:
        * tests/Nested_Upcall_Crash/Nested_Upcall_Crash.mpc:
        * tests/No_Server_MT_Connect_Test/No_Server_Connect_Test.mpc:
        * tests/OBV/Any/OBV_Any.mpc:
        * tests/OBV/Factory/OBV_Factory.mpc:
        * tests/OBV/Forward/OBV_Forward.mpc:
        * tests/OBV/TC_Alignment/OBV_TC_Alignment.mpc:
        * tests/ORB_destroy/ORB_destroy.mpc:
        * tests/ORB_init/ORB_init.mpc:
        * tests/ORB_init/Portspan/ORB_Init_Portspan.mpc:
        * tests/ORB_shutdown/Foo_Bar.mpc:
        * tests/ORT/ORT.mpc:
        * tests/Object_Loader/Object_Loader.mpc:
        * tests/Objref_Sequence_Test/Objref_Sequence_Test.mpc:
        * tests/OctetSeq/OctetSeq.mpc:
        * tests/Oneway_Buffering/Oneway_Buffering.mpc:
        * tests/Oneways_Invoking_Twoways/Oneways_Invoking_Twoways.mpc:
        * tests/POA/Current/Current.mpc:
        * tests/POA/Default_Servant/Default_Servant.mpc:
        * tests/POA/Etherealization/Etherealization.mpc:
        * tests/POA/Excessive_Object_Deactivations/Excessive_Object_Deactivations.mpc:
        * tests/POA/Identity/Identity.mpc:
        * tests/POA/MT_Servant_Locator/MT_Servant_Locator.mpc:
        * tests/POA/Non_Servant_Upcalls/Non_Servant_Upcalls.mpc:
        * tests/POA/Object_Reactivation/Object_Reactivation.mpc:
        * tests/POA/Policies/Policies.mpc:
        * tests/POA/Single_Threaded_POA/Single_Threaded_POA.mpc:
        * tests/POA/wait_for_completion/wait_for_completion.mpc:
        * tests/Param_Test/Param_Test.mpc:
        * tests/Policies/Policies.mpc:
        * tests/Portable_Interceptors/Benchmark/Portable_Interceptors_Benchmark.mpc:
        * tests/Portable_Interceptors/Dynamic/Portable_Interceptors_Dynamic.mpc:
        * tests/Portable_Interceptors/ForwardRequest/Portable_Interceptors_ForwardRequest.mpc:
        * tests/Portable_Interceptors/IORInterceptor/Portable_Interceptors_IORInterceptor.mpc:
        * tests/Portable_Interceptors/PICurrent/Portable_Interceptors_PICurrent.mpc:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Portable_Interceptors_Request_Interceptor_Flow.mpc:
        * tests/Portable_Interceptors/Service_Context_Manipulation/Portable_Interceptors_Service_Context_Manipulation.mpc:
        * tests/RTCORBA/Banded_Connections/RTCORBA_Banded_Connections.mpc:
        * tests/RTCORBA/Client_Propagated/RTCORBA_Client_Propagated.mpc:
        * tests/RTCORBA/Client_Protocol/RTCORBA_Client_Protocol.mpc:
        * tests/RTCORBA/Collocation/RTCORBA_Collocation.mpc:
        * tests/RTCORBA/Destroy_Thread_Pool/RTCORBA_Destroy_Thread_Pool.mpc:
        * tests/RTCORBA/Explicit_Binding/RTCORBA_Explicit_Binding.mpc:
        * tests/RTCORBA/Linear_Priority/RTCORBA_Linear_Priority.mpc:
        * tests/RTCORBA/MT_Client_Protocol_Priority/RTCORBA_MT_Client_Protocol_Priority.mpc:
        * tests/RTCORBA/ORB_init/RTCORBA_ORB_init.mpc:
        * tests/RTCORBA/Persistent_IOR/RTCORBA_Persistent_IOR.mpc:
        * tests/RTCORBA/Policies/Policies.mpc:
        * tests/RTCORBA/Policy_Combinations/RTCORBA_Policy_Combinations.mpc:
        * tests/RTCORBA/Private_Connection/RTCORBA_Private_Connection.mpc:
        * tests/RTCORBA/RTMutex/RTCORBA_RTMutex.mpc:
        * tests/RTCORBA/Server_Declared/RTCORBA_Server_Declared.mpc:
        * tests/RTCORBA/Server_Protocol/RTCORBA_Server_Protocol.mpc:
        * tests/RTCORBA/Thread_Pool/RTCORBA_Thread_Pool.mpc:
        * tests/Reliable_Oneways/Reliable_Oneways.mpc:
        * tests/Server_Leaks/Server_Leaks.mpc:
        * tests/Single_Read/Single_Read.mpc:
        * tests/Smart_Proxies/Smart_Proxies.mpc:
        * tests/Strategies/Strategies.mpc:
        * tests/Timed_Buffered_Oneways/Timed_Buffered_Oneways.mpc:
        * tests/Timeout/Timeout.mpc:
        * tests/Two_Objects/Two_Objects.mpc:
        * tests/Xt_Stopwatch/Xt_Stopwatch.mpc:

          Changed the name of these projects to avoid duplicates when
          generating a vc6 workspace.

Wed Apr 23 12:59:53 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/OBV/Typed_Events/client.bor:
        * examples/OBV/Typed_Events/server.bor:
        * orbsvcs/orbsvcs/CosLoadBalancing.bor:
        * tests/AMH_Exceptions/client.bor:
        * tests/AMH_Exceptions/server.bor:
        * tests/AMH_Oneway/client.bor:
        * tests/AMH_Oneway/server.bor:
        * tests/AMI_Timeouts/client.bor:
        * tests/AMI_Timeouts/server.bor:
        * tests/OBV/Any/client.bor:
        * tests/OBV/Any/server.bor:
        * tests/OBV/Factory/client.bor:
        * tests/OBV/Factory/server.bor:
        * tests/OBV/Forward/client.bor:
        * tests/OBV/Forward/server.bor:
        * tests/ORT/server.bor:
        * tests/Portable_Interceptors/ForwardRequest/client.bor:
        * tests/Portable_Interceptors/ForwardRequest/server.bor:
          Removed obsolete -Gv option from IDL compiler command lines for
          the above tests.

Wed Apr 23 07:40:48 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>1

        * orbsvcs/orbsvcs/LoadBalancing/LB_ObjectReferenceFactory.cpp: Use
          .out () instead of a .in (), which seems more meaningful.

Wed Apr 23 07:23:12 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/RTCORBA/Activity/Makefile:
          Added ACTIVITY_BUILD_DLL to the list of compiler flags to fix Cygwin
          compiler crash.

Tue Apr 22 21:49:40 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * docs/tutorials/Quoter/On_Demand_Activation/Handler_i.h:
        * docs/tutorials/Quoter/On_Demand_Activation/Handler_i.cpp: Fixed
          non-portable code.
        * docs/tutorials/Quoter/On_Demand_Activation/Makefile: Updated
          dependencies. This should fix errors in a few builds.

Tue Apr 22 21:43:49 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/AMH_Exceptions/Makefile:
        * tests/Bug_1482_Regression/Makefile: Fixed dependencies.

Tue Apr 22 21:39:32 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_interface.cpp: Fixed warnings in g++ builds.

        * orbsvcs/orbsvcs/LoadBalancing/LB_ObjectReferenceFactory.cpp:
          Added a .in () operator to the _var variable. Assigning a _var
          to a _out is a no-no.

Tue Apr 22 19:33:31 2003  Venkita Subramonian  <venkita@cs.wustl.edu>

        * orbsvcs/orbsvcs/RTKokyuEvent.dsp:
        * orbsvcs/orbsvcs/RTKokyuEvent.dsw:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Dispatching.i:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Factory.i:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter.i:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter_Builder.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Filter_Builder.i:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Scheduling.cpp:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Scheduling.h:
        * orbsvcs/orbsvcs/Event/EC_Kokyu_Scheduling.i:
        * orbsvcs/orbsvcs/Event/rtkokyu_event_export.h:
        * orbsvcs/orbsvcs/Makefile.RTKokyuEvent:

          Added files to integrate the new Event Channel with Kokyu
          dispatching.  Bryan Thrall (thrall@cs.wustl.edu) already
          committed these files. Just adding the changelog entries now.

        * orbsvcs/examples/RtEC/Kokyu/Consumer.cpp:
        * orbsvcs/examples/RtEC/Kokyu/Consumer.h:
        * orbsvcs/examples/RtEC/Kokyu/EC_Schedule_Service.dsp:
        * orbsvcs/examples/RtEC/Kokyu/Makefile:
        * orbsvcs/examples/RtEC/Kokyu/README:
        * orbsvcs/examples/RtEC/Kokyu/Schedule.dsw:
        * orbsvcs/examples/RtEC/Kokyu/Service.cpp:
        * orbsvcs/examples/RtEC/Kokyu/Supplier.cpp:
        * orbsvcs/examples/RtEC/Kokyu/Supplier.h:
        * orbsvcs/examples/RtEC/Kokyu/svc.conf:
        * orbsvcs/examples/RtEC/Kokyu/svc.conf.xml:

          Added example to test new Event Channel with Kokyu dispatching.
          Bryan Thrall (thrall@cs.wustl.edu) already committed these
          files. Just adding the changelog entries now.

        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:

          Fixed warnings regarding unused args. Thanks to Simon McQueen
          for pointing this out.

Tue Apr 22 20:15:52 2003  Irfan Pyarali  <irfan@oomworks.com>

        * performance-tests/RTCorba/Thread_Pool/server.cpp:

          - Run the orb in a RT thread rather than in the main thread.
          Otherwise, the value returned from the_priority() can be
          potentially incorrect.

          - Call to fudge_priorities() no longer necessary.

          - Added call to check_supported_priorities().

        * $ACE_ROOT/bin/tao_orb_tests.lst:

          tests/RTCORBA/Persistent_IOR creates multiple threads - don't
          run in single-threaded configurations.

Tue Apr 22 17:20:39 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/TAO.dsp: Fixed warnings that creeped up.

Tue Apr 22 16:28:36 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Seq_Out_T.h: Fixed fuzz errors.

Tue Apr 22 14:58:33 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        Merging code from the branch refactor_stage_1. The highlight of
        this change is the creation and usage of parametric classes for
        _var's, _out's and the complete removal of generated code if
        TAO_HAS_SEQUENCE_TEMPLATES is not defined. The generated code
        within the ORB ie. $TAO_ROOT/tao still has references to
        TAO_HAS_SEQUENCE_TEMPLATES which needs to be cleaned up in the
        next round.

        For more gory details please see below

        Tue Apr 22 10:37:40 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:

          Turned on CDR operator generation for sequences that have an
          element type easily detectable as local by the IDL compiler.
          For the insertion operator, the error will be detected at
          a lower level, via the generated virtual marshal() method
          for interfaces. For the extraction operator, 0 is returned.

        Tue Apr 22 09:28:36 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:

          Made a fix for strings and wstrings similar to

          Mon Apr 21 14:09:21 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        Tue Apr 22 09:10:23 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Seq_Var_T.cpp: Fixed a wroong inclusion of inlined file.

        Tue Apr 22 06:30:52 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * be/be_visitor_sequence/sequence_ch.cpp:
        * be/be_visitor_sequence/sequence_cs.cpp: Use the new managed type
          out classes when the IDL compiler comes across managed types.

        Tue Apr 22 06:22:47 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Seq_Out_T.cpp:
        * tao/Seq_Out_T.h:
        * tao/Seq_Out_T.inl:
        * tao/Seq_Var_T.cpp:
        * tao/Seq_Var_T.h:
        * tao/Seq_Var_T.inl: The Var and Out classes for sequences have
          been split across two files. The motivation for this change came
          around when we had to have a seperate out class for managed
          types. This was needed since the operator[] for managed types
          had a return type a bit different from regular sequences. Even
          with this change, not all of orbsvcs compile.

        * tao/Array_VarOut_T.h:
        * tao/DomainC.h:
        * tao/DynamicC.h:
        * tao/IIOPC.h:
        * tao/IOPC.h:
        * tao/ObjectIdListC.h:
        * tao/ObjectReferenceTemplateC.h:
        * tao/Object_KeyC.h:
        * tao/OctetSeqC.h:
        * tao/Policy_ForwardC.h:
        * tao/Sequence_T.h:
        * tao/StringSeqC.h:
        * tao/VarOut_T.h:
        * tao/corba.h:
        * tao/DynamicAny/DynamicAnyC.h:
        * tao/IFR_Client/IFR_BaseC.h:
        * tao/IFR_Client/IFR_BasicC.h:
        * tao/IORManipulation/IORC.h:
        * tao/PortableServer/PortableServerC.h: Replaced existing
          inclusions of tao/Seq_varOut_T.h with two inclusions,
          viz. tao/Seq_Out_T.h and tao/Seq_Var_T.h.

        * tao/Seq_VarOut_T.h:
        * tao/Seq_VarOut_T.cpp:
        * tao/Seq_VarOut_T.inl: Removed from the repo.

        Mon Apr 21 14:09:21 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:

          Fixed CDR operator generation for sequence of Object. Thanks to
          Bala <bala@dre.vanderbilt.edu> for pointing out the problem in
          code generation for PortableGroup.

        Mon Apr 21 13:11:07 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/AMH_Exceptions/Makefile:
        * tests/Bug_1482_Regression/Makefile: Updated dependencies.

        * tests/OBV/Forward/Test_impl.cpp: Fixed compilation errors with
          g++.

        Mon Apr 21 13:07:41 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp: Dont use _slice*
          as template parameters for code generation of the _var and
          _out.

        * tao/Seq_VarOut_T.h:
        * tao/Seq_VarOut_T.inl: Made the declarations of the operations to
          be compliant with the spec.

        Wed Apr 16 15:28:51 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Seq_VarOut_T.h:
        * tao/Seq_VarOut_T.inl: Removed the const version of [] for
          Seq_var since the spec doesnt mandate them.

        * tao/DomainC.i: Removed a bunch of code that shoudlnt have been
          there in the first place.

        Wed Apr 16 000:14:10 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be_include/be_sequence.h:
        * TAO_IDL/be_include/be_type.h:
        * tao/Array_VarOut_T.inl:
        * tao/Seq_VarOut_T.inl:

          Changes to remove compile errors in Param_Test and IDL_Test.

        * tests/Param_Test/recursive_union.cpp:

          Changed use of TAO-specific recursive member names to
          spec-defined and generated recursive member names.

        Mon Apr 14 17:10:59 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/TAO.dsp:

          Added IOP_IORC.* and IOP_CodecC.* to the project.

        Mon Apr 14 16:10:50 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_interface_fwd/interface_fwd_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype_fwd/valuetype_fwd_ch.cpp:
        * TAO_IDL/be_include/be_type.h:

          Fixed code generation for sequence of forward declared interface
          from a previous opening of the enclosing module, and for
          utility functions when nested scoped names repeat after skipping
          a level.

        Mon Apr 14 14:33:48 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:

          Fixed code generation to work with deeply nested and/or
          anonymous sequence members.

        * tests/IDL_Test/sequence.idl:

          Modified test to check above use cases more thoroughly.

        Mon Apr 14 09:16:35 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/PortableServer/PortableServerC.cpp:
        * tao/PortableServer/PortableServerC.h:

          Removed declaration and definition of Any operators for ObjectId.

        Mon Apr 14 09:06:22 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_field/field_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/be_include/be_sequence.h:

          Fixed problem with multiple members of the same anonymous
          sequence type.

        Sat Apr 12 02:52:03 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/be/be_valuetype.cpp:
        * TAO_IDL/be/be_visitor_amh_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
        * TAO_IDL/be_include/be_type.h:
        * TAO_IDL/be_include/be_valuetype.h:

          Fixed errors in generated code for exception holders
          and reply/response handlers.

        * tests/AMH_Exceptions/client.dsp:
        * tests/AMH_Exceptions/server.dsp:
        * tests/AMH_Oneway/client.dsp:
        * tests/AMH_Oneway/server.dsp:
        * tests/AMI/AMI_Test_Client.dsp:
        * tests/AMI/AMI_Test_Server.dsp:
        * tests/AMI_Timeouts/client.dsp:
        * tests/AMI_Timeouts/server.dsp:
        * tests/OBV/Factory/client.dsp:
        * tests/OBV/Factory/server.dsp:
        * tests/OBV/Forward/client.dsp:
        * tests/OBV/Forward/server.dsp:

          Removed obsolete -Gv option from IDL compiler
          command lines for the above tests.

        * tests/OBV/Forward/client.cpp:

          Changed instances of <valuetype>_ptr to
          <valuetype> *.

        Fri Apr 11 21:50:43 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_array/array_ch.cpp:
        * TAO_IDL/be/be_visitor_array/array_ci.cpp:

          Added generated code to make the array's *_alloc function
          generically callable outside the IDL compiler, where its full
          name is not known.

        * tao/Array_VarOut_T.h:
        * tao/Array_VarOut_T.inl:

          Added a static method to TAO_Array_Forany_T<> to make the
          *_alloc method (which was made visible to TAO_Array_Forany_T<>
          by the changes above) visible to the Any impl class
          TAO_Any_Array_Impl_T<>, where it is used in extraction.

        * tao/TAO.dsp:

          Added new generated files IOP_IORC.* and IOP_CodecC.* to the
          project.

        Fri Apr 11 14:41:11 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * Merged with the main trunk and compiled the core ORB and the IDL
          compiler on Linux GCC32. Moved the stuff to a new branch by name
          refactor_statge_1.  Added the following files from the branch
          into the new branch.

        * tao/Pseudo_Value_VarOut_T.cpp:
        * tao/Pseudo_Value_VarOut_T.h:
        * tao/Pseudo_Value_VarOut_T.inl:
        * tao/Array_VarOut_T.cpp:
        * tao/Array_VarOut_T.h:
        * tao/Array_VarOut_T.inl:
        * tao/Objref_VarOut_T.cpp:
        * tao/Objref_VarOut_T.h:
        * tao/Objref_VarOut_T.inl:
        * tao/Pseudo_Value_Varout_T.cpp:
        * tao/Pseudo_Value_Varout_T.h:
        * tao/Pseudo_Value_Varout_T.inl:
        * tao/Pseudo_VarOut_T.cpp:
        * tao/Pseudo_VarOut_T.h:
        * tao/Pseudo_VarOut_T.inl:
        * tao/Seq_VarOut_T.cpp:
        * tao/Seq_VarOut_T.h:
        * tao/Seq_VarOut_T.inl:
        * tao/Value_VarOut_T.cpp:
        * tao/Value_VarOut_T.h:
        * tao/Value_VarOut_T.inl:
        * tao/VarOut_T.cpp:
        * tao/VarOut_T.h:
        * tao/VarOut_T.inl:

          New files in to this new branch.

        Tue Apr  1 000:37:21 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/interceptors_exceptlist.cpp:
        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/be_include/be_type.h:

          Moved managed type template class generation from the Any
          operator pass (which might be skipped if Any operator generation
          is suppressed, or generated needlessly if the type is not used
          in a sequence) to the sequence visitor.

        * tao/Sequence_T.cpp:

          Fixed code in TAO_Abstract_Manager that doesn't work with
          forward declared abstract interfaces.

        * tao/DynamicAny/DynamicAny.pidl:
        * tao/DynamicAny/DynamicAnyC.cpp:

          Regenerated hand-crafted DynamicAny.pidl files and changed comment
          at the top of the .pidl file to show added options to the IDL
          compiler command line to suppress Any operator and Typecode
          generation. Although these types contain a Typecode, they do
          not need Typecodes or Any operators of their own.

        Mon Mar 31 22:31:47 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/be_include/be_visitor_sequence/sequence_cs.h:
        * tao/Sequence_T.cpp:

          Fixed some bugs with sequence template code generation.

        Mon Mar 31 18:05:28 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Services.cpp:
        * tao/Services.h:
        * tao/Services.i:

          Removed these files. They were supposed to be removed from the
          main trunk but there was a glitch during a branch merge and
          ther were still around, and obviously got carried over to
          this branch.

        * tao/IFR_Client/TAO_IFR_Client.dsp:

          Turned on RTTI for the hand-crafted files.

        Sun Mar 30 21:13:08 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_interface.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_valuetype.cpp:
        * TAO_IDL/be/be_visitor_sequence.cpp:
        * TAO_IDL/be/be_visitor_argument/arglist.cpp:
        * TAO_IDL/be/be_visitor_array/array_ch.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/be_include/be_sequence.h:
        * tao/CurrentC.h:
        * tao/DomainC.h:
        * tao/IOPC.h:
        * tao/ObjectReferenceTemplateC.h:
        * tao/Objref_VarOut_T.cpp:
        * tao/PolicyC.h:
        * tao/Policy_ForwardC.h:
        * tao/PollableC.h:
        * tao/PortableInterceptorC.h:
        * tao/TAOC.h:
        * tao/corbafwd.h:
        * tao/BiDir_GIOP/BiDirPolicyC.cpp:
        * tao/BiDir_GIOP/BiDirPolicyC.h:
        * tao/BiDir_GIOP/BiDirPolicyC.i:
        * tao/DynamicAny/DynCommon.cpp:
        * tao/DynamicAny/DynCommon.h:
        * tao/DynamicAny/DynamicAnyC.cpp:
        * tao/DynamicAny/DynamicAnyC.h:
        * tao/DynamicAny/DynamicAnyC.i:
        * tao/IFR_Client/IFR_BaseC.cpp:
        * tao/IFR_Client/IFR_BaseC.h:
        * tao/IFR_Client/IFR_BaseC.i:
        * tao/IFR_Client/IFR_Basic.pidl:
        * tao/IFR_Client/IFR_BasicC.cpp:
        * tao/IFR_Client/IFR_BasicC.h:
        * tao/IFR_Client/IFR_BasicC.i:
        * tao/IFR_Client/IFR_ComponentsC.cpp:
        * tao/IFR_Client/IFR_ComponentsC.h:
        * tao/IFR_Client/IFR_ComponentsC.i:
        * tao/IFR_Client/IFR_Extended.pidl:
        * tao/IFR_Client/IFR_ExtendedC.cpp:
        * tao/IFR_Client/IFR_ExtendedC.h:
        * tao/IFR_Client/IFR_ExtendedC.i:
        * tao/IORManipulation/IORC.cpp:
        * tao/IORManipulation/IORC.h:
        * tao/IORManipulation/IORC.i:
        * tao/IORTable/IORTableC.cpp:
        * tao/IORTable/IORTableC.h:
        * tao/IORTable/IORTableC.i:
        * tao/Messaging/MessagingC.cpp:
        * tao/Messaging/MessagingC.h:
        * tao/Messaging/MessagingC.i:
        * tao/Messaging/Messaging_No_ImplC.cpp:
        * tao/Messaging/Messaging_No_ImplC.h:
        * tao/Messaging/Messaging_No_ImplC.i:
        * tao/Messaging/Messaging_RT_PolicyC.cpp:
        * tao/Messaging/Messaging_RT_PolicyC.h:
        * tao/Messaging/Messaging_RT_PolicyC.i:
        * tao/Messaging/Messaging_SyncScope_PolicyC.cpp:
        * tao/Messaging/Messaging_SyncScope_PolicyC.h:
        * tao/Messaging/Messaging_SyncScope_PolicyC.i:
        * tao/Messaging/TAO_ExtC.cpp:
        * tao/Messaging/TAO_ExtC.h:
        * tao/Messaging/TAO_ExtC.i:
        * tao/PortableServer/Default_ORTC.cpp:
        * tao/PortableServer/Default_ORTC.h:
        * tao/PortableServer/Default_ORTC.i:
        * tao/PortableServer/ImR_ActivatorC.cpp:
        * tao/PortableServer/ImR_ActivatorC.h:
        * tao/PortableServer/ImR_ActivatorC.i:
        * tao/PortableServer/ImplRepoC.cpp:
        * tao/PortableServer/ImplRepoC.h:
        * tao/PortableServer/ImplRepoC.i:
        * tao/PortableServer/PortableServer.pidl:
        * tao/PortableServer/PortableServerC.cpp:
        * tao/PortableServer/PortableServerC.h:
        * tao/PortableServer/PortableServerC.i:
        * tao/RTCORBA/RTCORBAC.cpp:
        * tao/RTCORBA/RTCORBAC.h:
        * tao/RTCORBA/RTCORBAC.i:
        * tao/RTPortableServer/RTPortableServerC.cpp:
        * tao/RTPortableServer/RTPortableServerC.h:
        * tao/RTPortableServer/RTPortableServerC.i:
        * tao/TypeCodeFactory/TypeCodeFactoryC.cpp:
        * tao/TypeCodeFactory/TypeCodeFactoryC.h:
        * tao/TypeCodeFactory/TypeCodeFactoryC.inl:

          Regenerated all hand-crafted files and made fixes to
          code generation.

        Sun Mar 30 12:32:33 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_type.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * tao/Array_VarOut_T.cpp:
        * tao/Array_VarOut_T.inl:
        * tao/ORB.cpp:
        * tao/Sequence_T.cpp:
        * tao/Sequence_T.h:

          Fixed typos and cut and paste errors.

        Sun Mar 30 02:50:01 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_type.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_sequence/buffer_type.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/be_include/be_sequence.h:
        * TAO_IDL/be_include/be_visitor_sequence/sequence_ch.h:
        * TAO_IDL/be_include/be_visitor_sequence/sequence_cs.h:
        * TAO_IDL/include/ast_type.h:
        * tao/CONV_FRAMEC.cpp:
        * tao/CONV_FRAMEC.h:
        * tao/CONV_FRAMEC.i:
        * tao/ClientRequestInfo.cpp:
        * tao/CurrentC.h:
        * tao/DomainC.cpp:
        * tao/DomainC.h:
        * tao/DomainC.i:
        * tao/DynamicC.cpp:
        * tao/DynamicC.h:
        * tao/DynamicC.i:
        * tao/IIOPC.cpp:
        * tao/IIOPC.h:
        * tao/IIOPC.i:
        * tao/IOPC.cpp:
        * tao/IOPC.h:
        * tao/IOPC.i:
        * tao/Messaging_PolicyValueC.cpp:
        * tao/Messaging_PolicyValueC.h:
        * tao/Messaging_PolicyValueC.i:
        * tao/Messaging_SyncScopeC.cpp:
        * tao/Messaging_SyncScopeC.h:
        * tao/Messaging_SyncScopeC.i:
        * tao/ORB.h:
        * tao/ObjectIdListC.cpp:
        * tao/ObjectIdListC.h:
        * tao/ObjectIdListC.i:
        * tao/ObjectReferenceTemplateC.cpp:
        * tao/ObjectReferenceTemplateC.h:
        * tao/ObjectReferenceTemplateC.i:
        * tao/Object_KeyC.cpp:
        * tao/Object_KeyC.h:
        * tao/Object_KeyC.i:
        * tao/OctetSeqC.cpp:
        * tao/OctetSeqC.h:
        * tao/OctetSeqC.i:
        * tao/PolicyC.cpp:
        * tao/PolicyC.h:
        * tao/PolicyC.i:
        * tao/Policy_ForwardC.cpp:
        * tao/Policy_ForwardC.h:
        * tao/Policy_ForwardC.i:
        * tao/PollableC.cpp:
        * tao/PollableC.h:
        * tao/PollableC.i:
        * tao/PortableInterceptorC.cpp:
        * tao/PortableInterceptorC.h:
        * tao/PortableInterceptorC.i:
        * tao/Seq_VarOut_T.cpp:
        * tao/Seq_VarOut_T.h:
        * tao/Seq_VarOut_T.inl:
        * tao/Sequence_T.cpp:
        * tao/Sequence_T.h:
        * tao/ServicesC.cpp:
        * tao/ServicesC.h:
        * tao/ServicesC.i:
        * tao/StringSeqC.cpp:
        * tao/StringSeqC.h:
        * tao/StringSeqC.i:
        * tao/TAOC.cpp:
        * tao/TAOC.h:
        * tao/TAOC.i:
        * tao/TimeBaseC.cpp:
        * tao/TimeBaseC.h:
        * tao/TimeBaseC.i:
        * tao/corbafwd.h:

          Changed sequence generation to create a class that inherits
          from the template class instead of just a typedef. Also
          regenerated hand-crafted files in the TAO library.

        Fri Mar 28 19:12:40 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/CONV_FRAMEC.cpp:
        * tao/CONV_FRAMEC.h:
        * tao/CONV_FRAMEC.i:
        * tao/CurrentC.cpp:
        * tao/CurrentC.h:
        * tao/CurrentC.i:
        * tao/DomainC.cpp:
        * tao/DomainC.h:
        * tao/DomainC.i:
        * tao/DynamicC.cpp:
        * tao/DynamicC.h:
        * tao/DynamicC.i:
        * tao/GIOPC.cpp:
        * tao/GIOPC.h:
        * tao/GIOPC.i:
        * tao/IIOPC.cpp:
        * tao/IIOPC.h:
        * tao/IIOPC.i:

          Regenerated some hand-crafted files.

        * tao/corbafwd.h:

          Removed some forward _var and _out declarations.
          Since these are now typedefs, they can't be forward
          declared.

        * tao/Seq_VarOut_T.inl:

          Fixed a typo.

        * tao/GIOP.pidl:
        * tao/IOP.pidl:

          Modified these to use CORBA::OctetSeq instead of
          regenerating each time.

        Fri Mar 28 17:09:30 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/AbstractBase.cpp:
        * tao/Environment.cpp:
        * tao/LocalObject.cpp:
        * tao/NVList.cpp:
        * tao/ORB.cpp:
        * tao/ORB.h:
        * tao/ORB.i:
        * tao/Object.cpp:
        * tao/Principal.cpp:
        * tao/Pseudo_VarOut_T.h:
        * tao/TAO.dsp:
        * tao/Typecode.cpp:
        * tao/ValueBase.cpp:
        * tao/ValueFactory.cpp:
        * tao/corbafwd.h:
        * tao/DynamicInterface/Context.cpp:
        * tao/DynamicInterface/Context.h:
        * tao/DynamicInterface/Context.inl:
        * tao/DynamicInterface/ExceptionList.h:
        * tao/DynamicInterface/ExceptionList.inl:
        * tao/DynamicInterface/Request.cpp:
        * tao/DynamicInterface/Request.h:
        * tao/DynamicInterface/Request.inl:
        * tao/DynamicInterface/Server_Request.cpp:
        * tao/DynamicInterface/Server_Request.h:

          Templatized _var and _out classes in
          DynamicInterface, added conditional explicit
          template instantiations, and updated project
          settings.

        Fri Mar 28 000:58:31 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/AbstractBase.h:
        * tao/AbstractBase.inl:
        * tao/Environment.h:
        * tao/Environment.i:
        * tao/LocalObject.h:
        * tao/LocalObject.i:
        * tao/NVList.h:
        * tao/NVList.i:
        * tao/Principal.cpp:
        * tao/Principal.h:
        * tao/Principal.i:
        * tao/Pseudo_VarOut_T.h:
        * tao/ValueBase.h:
        * tao/ValueBase.i:
        * tao/ValueFactory.h:
        * tao/ValueFactory.i:
        * tao/corbafwd.h:

          Converted the _var and _out classes of most of
          the CORBA pseudo objects to the new template
          format.

        * tao/Pseudo_Value_Varout_T.cpp:
        * tao/Pseudo_Value_Varout_T.h:
        * tao/Pseudo_Value_Varout_T.inl:

          New template classes to typedef _var and _out
          implementations for ValueBase and ValueFactoryBase.

        Thu Mar 27 18:55:41 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Sequence.cpp:
        * tao/Sequence.h:

          Cosmetic changes.

        * tao/TAO.dsp:

          Added newly created inline files to the project.

        Thu Mar 27 03:00:53 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_predefined_type.cpp:
        * TAO_IDL/be/be_predefined_type.cpp:
        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/fe/fe_init.cpp:
        * TAO_IDL/include/ast_predefined_type.h:
        * tao/Adapter.cpp:
        * tao/Adapter.h:
        * tao/Object.cpp:
        * tao/Object.h:
        * tao/Object.i:
        * tao/Objref_VarOut_T.h:
        * tao/Sequence.cpp:
        * tao/Sequence.h:
        * tao/Sequence_T.cpp:
        * tao/Sequence_T.h:
        * tao/Sequence_T.i:
        * tao/TAO.dsp:
        * tao/Typecode.h:
        * tao/Typecode.i:
        * tao/ValueBase.cpp:
        * tao/ValueBase.h:
        * tao/ValueBase.i:
        * tao/Value_VarOut_T.h:
        * tao/corba.h:
        * tao/corbafwd.h:

          Finished templatizing of _var, _out and sequence
          classes, in TAO and in code generation.

        * tao/Pseudo_VarOut_T.cpp:
        * tao/Pseudo_VarOut_T.h:
        * tao/Pseudo_VarOut_T.inl:

          New files for the _var and _out classes for
          CORBA::Object and CORBA::TypeCode.

        * tao/Objref_VarOut_T.inl:
        * tao/Value_VarOut_T.inl:

          New files, empty so far.

        Wed Mar 26 18:23:46 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_component.cpp:
        * TAO_IDL/be/be_helper.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_structure.cpp:
        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/be/be_union.cpp:
        * TAO_IDL/be/be_valuetype.cpp:
        * TAO_IDL/be/be_visitor_structure_fwd.cpp:
        * TAO_IDL/be/be_visitor_union_fwd.cpp:
        * TAO_IDL/be/be_visitor_array/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/array_ch.cpp:
        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_enum/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface_fwd/interface_fwd_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/structure_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/structure_ci.cpp:
        * TAO_IDL/be/be_visitor_structure/structure_cs.cpp:
        * TAO_IDL/be/be_visitor_structure_fwd/structure_fwd_ch.cpp:
        * TAO_IDL/be/be_visitor_union/union_ch.cpp:
        * TAO_IDL/be/be_visitor_union/union_ci.cpp:
        * TAO_IDL/be/be_visitor_union/union_cs.cpp:
        * TAO_IDL/be/be_visitor_union_fwd/union_fwd_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype_fwd/valuetype_fwd_ch.cpp:
        * TAO_IDL/be_include/be_component.h:
        * TAO_IDL/be_include/be_helper.h:
        * TAO_IDL/be_include/be_interface.h:
        * TAO_IDL/be_include/be_structure.h:
        * TAO_IDL/be_include/be_type.h:
        * TAO_IDL/be_include/be_union.h:
        * TAO_IDL/be_include/be_valuetype.h:
        * tao/Sequence_T.cpp:
        * tao/Sequence_T.h:
        * tao/VarOut_T.h:
        * tao/VarOut_T.inl:

          More changes toward code generation for _var, _out and sequence
          template typedef, and conditional explicit template instantiation.

        Wed Mar 26 01:06:24 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:

          Added code generation for sequences of abstract
          interfaces.

        * tao/Sequence_T.cpp:
        * tao/Sequence_T.i:

          Uninlined a few methods that were too long.

        * tao/Transport.cpp:

          Cut out an ELSE block to get this to work with
          changes Phil Mesnier <mesnier_p@ociweb.com> has
          made to ACE - his corresponding TAO changes are
          blocked by the branch. This file will get in
          sync again when the branch is merged.

        Tue Mar 25 21:44:34 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Sequence_T.cpp:
        * tao/Sequence_T.i:
        * tao/Sequence_T.h:

          Finished re-parametrizing the template sequence classes.

        Mon Mar 24 20:27:09 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_ci.cpp:

          Changed call to AbstractBase constructor in initialization
          list of abstract interfafce to use ACE_NESTED_CLASS,
          similarly to non-abstract interfaces.

        Sun Mar 23 23:42:37 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Array_VarOut_T.cpp:
        * tao/Array_VarOut_T.h:
        * tao/Array_VarOut_T.inl:
        * tao/VarOut_T.cpp:
        * tao/VarOut_T.h:
        * tao/VarOut_T.inl:

          New files adding to the support of template-based
          _var and _out classes.

        * tao/Sequence_T.cpp:
        * tao/Sequence_T.h:
        * tao/Sequence_T.i:
        * tao/TAO.dsp:
        * tao/corba.h:
        * TAO_IDLast/ast_type.cpp:
        * TAO_IDLbe/be_interface.cpp:
        * TAO_IDLbe/be_type.cpp:
        * TAO_IDLbe/be_visitor_array/array_ch.cpp:
        * TAO_IDLbe/be_visitor_array/array_ci.cpp:
        * TAO_IDLbe/be_visitor_array/array_cs.cpp:
        * TAO_IDLbe/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDLbe/be_visitor_sequence/cdr_op_ch.cpp:
        * TAO_IDLbe/be_visitor_sequence/cdr_op_cs.cpp:
        * TAO_IDLbe/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDLbe_include/be_interface.h:
        * TAO_IDLbe_include/be_type.h:
        * TAO_IDLbe_include/be_visitor_array/array_ch.h:
        * TAO_IDLbe_include/be_visitor_array/array_ci.h:
        * TAO_IDLinclude/ast_type.h:

          Other changes to support template _var and _out
          classes.

        Sat Mar 22 18:34:48 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/ObjectReferenceTemplateC.cpp:
        * tao/ObjectReferenceTemplateC.h:
        * tao/ObjectReferenceTemplateC.i:
        * tao/Sequence_T.cpp:
        * tao/Sequence_T.h:
        * tao/Sequence_T.i:

          Changes to switch to template instantiation for valuetypes
          and sequences of valuetypes.

        Fri Mar 21 02:33:00 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_valuetype.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype_fwd/valuetype_fwd_ch.cpp:
        * TAO_IDL/be_include/be_interface.h:
        * TAO_IDL/be_include/be_valuetype.h:
        * tao/Objref_VarOut_T.cpp:
        * tao/Objref_VarOut_T.h:
        * tao/Sequence_T.cpp:
        * tao/Sequence_T.h:
        * tao/TAO.dsp:
        * tao/corba.h:

          Modified code generation for sequences of object references,
          added conditional explicit template instantiation, template
          valuetype _var and _out class generation.

        * tao/Value_VarOut_T.cpp:
        * tao/Value_VarOut_T.h:

          New files for the valuetype _var and _out classes.

        Wed Mar 19 18:40:03 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_visitor_argument.cpp:
        * TAO_IDL/be/be_visitor_array.cpp:
        * TAO_IDL/be/be_visitor_component.cpp:
        * TAO_IDL/be/be_visitor_interface.cpp:
        * TAO_IDL/be/be_visitor_union_branch.cpp:
        * TAO_IDL/be/be_visitor_argument/post_invoke_cs.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_component/component_cs.cpp:
        * TAO_IDL/be/be_visitor_field/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_interface_fwd/interface_fwd_ch.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype_vardecl_cs.cpp:
        * TAO_IDL/be/be_visitor_root/cdr_op.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_obj_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_obj_sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_obj_sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_str_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_str_sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_str_sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_wstr_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_wstr_sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_wstr_sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_obj_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_obj_sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_obj_sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_assign_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:
        * TAO_IDL/be_include/be_visitor_sequence/sequence_ch.h:
        * TAO_IDL/be_include/be_visitor_sequence/sequence_ci.h:
        * TAO_IDL/be_include/be_visitor_sequence/sequence_cs.h:

          Changed code generation to use the generated struct helpers
          for interfaces, and removed much of the code generation for
          sequences, since they will eventually all be typedefs.

        Wed Mar 19 09:38:00 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_component/component_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_interface_fwd/interface_fwd_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/be_include/be_interface.h:
        * TAO_IDL/be_include/be_type.h:

          Changes to code generation for sequences, _var and _out classes.
          This is just a start, lots more to come.

        Tue Mar 18 21:42:03 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DomainC.cpp:
        * tao/DomainC.h:
        * tao/DomainC.i:
        * tao/PolicyC.cpp:
        * tao/PolicyC.h:
        * tao/Policy_ForwardC.cpp:
        * tao/Policy_ForwardC.h:
        * tao/Policy_ForwardC.i:
        * tao/Sequence_T.cpp:
        * tao/Sequence_T.h:
        * tao/Sequence_T.i:
        * tao/corba.h:

          Interim hacks to avoid build errors. All the
          hand-crafted files will eventually be regenerated.

        * tao/Objref_VarOut_T.cpp:
        * tao/Objref_VarOut_T.h:
        * tao/Seq_VarOut_T.cpp:
        * tao/Seq_VarOut_T.h:
        * tao/Seq_VarOut_T.inl:

          New files, a start on templatizing all the
          _var and _out classes.

Tue Apr 22 13:51:45 2003  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Monitor.cpp:

          Only #include <sys/loadavg.h> if ACE_HAS_SYS_LOADAVG_H is defined.
          It only exists with SunOS 5.7 and later.

Tue Apr 22 14:26:31 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:

          In pre_invoke_remote_request(),
          get_thread_CORBA_and_native_priority() was getting called
          unconditionally, even for single-threaded configurations.
          Unfortunately, ACE_OS::thr_getprio() is not supported for
          single-threaded configurations.  Therefore, I had to restructure
          the code so that get_thread_CORBA_and_native_priority() was only
          called when needed.

Tue Apr 22 12:39:23 2003  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Messaging/Messaging_No_ImplC.h:

          Moved the #undef of TRANSPARENT after the #include's to ensure
          that it doesn't get defined again after it's already been
          #undef'ed.

Tue Apr 22 12:35:44 2003  Simon McQueen  <sm@prismtechnologies.com>

        * tests/Collocation_Tests/Collocation_Test.dsp:
          Fixed test run errors.

Mon Apr 21 14:20:00 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tests/RTCORBA/Profile_And_Endpoint_Selection/client.cpp:

          Removed extra ACE_CHECK_RETURN.

        * tests/RTCORBA/check_supported_priorities.cpp:

          Initialized <name> in sched_policy_name().

        * tests/POA/Nested_Non_Servant_Upcalls/Nested_Non_Servant_Upcalls.cpp:

          - Removed unused <servant_activation_succeeded>.

          - Changed a couple of ACE_CHECKs to ACE_CHECK_RETURNs.

Sun Apr 20 07:55:31 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Bug_1020_Basic_Regression/Bug_1020_Basic_Regression.dsw:
        * tests/Bug_1020_Basic_Regression/client.dsp:
        * tests/Bug_1020_Basic_Regression/server.dsp: Removed them from
          the repo. They dont compile with VC6.0 and spoils our daily
          builds.

Sun Apr 20 07:50:47 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Bug_1020_Regression/Bug_1020_Regression.dsw:
        * tests/Bug_1020_Regression/client.dsp:
        * tests/Bug_1020_Regression/server.dsp: Removed them from the
          repo. They dont compile with VC6.0 and spoils our daily builds.

Fri Apr 18 18:13:20 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/fe/idl.yy:

          Modified the error checking for local interface used as
          operation parameter to disable the diagnostic if the
          operation is defined in a valuetype. Since operations
          in valuetypes are executed locally, the arguments are
          not marshaled and there is no problem with a local
          interface parameter. Thanks to Proum Chauk-Mean
          <Chauk-Mean.Proum@fr.thalesgroup.com> and Nanbor Wang
          <nanbor@cse.wustl.edu> for reporting the problem.

Fri Apr 18 17:17:35 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:

          Fixed bug in assignment operator. Thanks to Ossama Othman
          <ossama@uci.edu> for reporting the problem in the
          PICurrent test.

Fri Apr 18 18:04:44 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tests/Bug_1020_Basic_Regression/Bug_1020_Basic_Regression.dsw
        * tests/Bug_1020_Basic_Regression/client.dsp
        * tests/Bug_1020_Basic_Regression/server.dsp
        * tests/Bug_1020_Regression/Bug_1020_Regression.dsw
        * tests/Bug_1020_Regression/client.dsp
        * tests/Bug_1020_Regression/server.dsp

          Added VC project files for Bug_1020_Regression and
          Bug_1020_Basic_Regression tests.

        * tests/TAO_Tests.dsw:

          Updated to include project files for Bug_1020_Regression and
          Bug_1020_Basic_Regression tests.

Fri Apr 18 12:18:46 2003  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/AV.mpc:
        * orbsvcs/orbsvcs/CosEvent.mpc:
        * orbsvcs/orbsvcs/DsEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsNotifyLogAdmin.mpc:
        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:

          Added missing libraries.

Wed Apr 16 12:49:59 2003  Ossama Othman  <ossama@uci.edu>

        * TAO_IDL/be_include/be_helper.h:

          Include <stdio.h> to pull in "FILE" typedef.

Wed Apr 16 13:44:47 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/params:

          - thread_creation_flags: Added a new function that OR's together
          the scheduling scope and scheduling policy thread creation
          flags.

          - ace_sched_policy: Added a new function to return the
          ACE_SCHED_* flag.  The sched_policy() returns the THR_SCHED_*
          thread creation flag, the scope_policy() returns the THR_SCOPE_*
          thread creation flag, and the ace_sched_policy() returns the
          ACE_SCHED_* flag.

        * tao/RTCORBA/RT_ORB.cpp (modify_thread_scheduling_policy): Added
          new static method that changes the scheduling policy of the
          calling thread to match the scheduling policy specified in the
          svc.conf file.  The priority of the calling thread will be set
          to the minimum priority supported by that scheduling policy.

          This method make sense on those platform (e.g., Linux) where
          PTHREAD_SCOPE_SYSTE* is the only scheduling scope supported.  On
          other platforms, this method is a no-op since the only way to
          get the real-time threading behavior is to setup the
          PTHREAD_SCOPE_SYSTEM scheduling scope when a thread is being
          created.  On such platforms, one can set the correct scheduling
          scope and policy when creating the thread, thus not needing to
          use this method.

        * tao/RTCORBA/RT_ORBInitializer.cpp (TAO_RT_ORBInitializer): Undid
          changes from:

          Wed Feb 12 00:19:58 UTC 2003  Craig Rodrigues <crodrigu@bbn.com>

          - Since there is a new variable <ace_sched_policy_>, no
          conversions between is required between THR_SCHED_* and
          ACE_SCHED_*.

          - There is no longer a need to "automagically" change the
          scheduling policy of the thread calling
          TAO_RT_ORBInitializer::pre_init(), specially given the fact that
          the scheduling scope of a thread cannot be changed after it has
          been created, and without the scheduling scope being set
          appropriately, real-time threading behavior is not possible.

          To achieve the similar behavior as before on platforms like
          Linux that only support the PTHREAD_SCOPE_SYSTEM scheduling
          scope, please call the
          TAO_RT_ORB::modify_thread_scheduling_policy() static method.

        * tao/RTCORBA/Thread_Pool.cpp (create_dynamic_threads):

          Changed code to use the new canonical thread_creation_flags()
          routine.

        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/Exception.cpp:
        * tao/corbafwd.h:

          Added TAO_RTCORBA_THREAD_CREATION_LOCATION_CODE so that failures
          in thread creation for RTCORBA thread pools can be easily
          identified.

Wed Apr 16 12:15:04 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tests/RTCORBA/Destroy_Thread_Pool/Destroy_Thread_Pool.cpp:
        * tests/RTCORBA/Explicit_Binding/client.cpp:
        * tests/RTCORBA/Explicit_Binding/server.cpp:
        * tests/RTCORBA/ORB_init/ORB_init.cpp:
        * tests/RTCORBA/Persistent_IOR/client.cpp:
        * tests/RTCORBA/Persistent_IOR/server.cpp:
        * tests/RTCORBA/Private_Connection/client.cpp:
        * tests/RTCORBA/Private_Connection/server.cpp:
        * tests/RTCORBA/RTMutex/server.cpp:
        * tests/RTCORBA/Server_Declared/client.cpp:
        * tests/RTCORBA/Server_Declared/server.cpp:
        * tests/RTCORBA/Server_Protocol/client.cpp:
        * tests/RTCORBA/Server_Protocol/server.cpp:
        * tests/RTCORBA/Thread_Pool/client.cpp:

          Check for multiple priorities is not needed for this test since
          multiple priorities are not used in this test.

        * tests/RTCORBA/Banded_Connections/client.cpp:
        * tests/RTCORBA/Client_Protocol/client.cpp:
        * tests/RTCORBA/Collocation/Collocation.cpp:
        * tests/RTCORBA/Linear_Priority/client.cpp:
        * tests/RTCORBA/MT_Client_Protocol_Priority/client.cpp:
        * tests/RTCORBA/Policy_Combinations/client.cpp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/client.cpp:
        * tests/RTCORBA/Thread_Pool/client.cpp:
        * performance-tests/RTCorba/Thread_Pool/client.cpp:

          Make all real-time invocations and priority changes from a
          real-time thread rather than the main thread.  This will allow
          the test to work on platforms like Linux with root as the user
          (and the appropriate svc.conf settings).

        * tests/RTCORBA/Client_Propagated/server.cpp:
        * tests/RTCORBA/Linear_Priority/server.cpp:
        * tests/RTCORBA/MT_Client_Protocol_Priority/server.cpp:
        * tests/RTCORBA/Policy_Combinations/server.cpp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/server.cpp:
        * tests/RTCORBA/Server_Declared/server.cpp:
        * tests/RTCORBA/Thread_Pool/server.cpp:

          Handle all real-time upcall in a real-time thread rather than
          the main thread.  This will allow the test to work on platforms
          like Linux with root as the user (and the appropriate svc.conf
          settings).

        * tests/RTCORBA/Banded_Connections/svc.conf:
        * tests/RTCORBA/Client_Propagated/svc.conf:
        * tests/RTCORBA/Client_Protocol/svc.conf:
        * tests/RTCORBA/Explicit_Binding/svc.conf:
        * tests/RTCORBA/Linear_Priority/svc.conf:
        * tests/RTCORBA/MT_Client_Protocol_Priority/server.conf:
        * tests/RTCORBA/MT_Client_Protocol_Priority/client.conf:
        * tests/RTCORBA/Policy_Combinations/svc.conf:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/svc.conf:
        * tests/RTCORBA/Server_Declared/svc.conf:
        * tests/RTCORBA/Server_Protocol/server_iiop.conf:
        * tests/RTCORBA/Server_Protocol/server_reverse.conf:
        * tests/RTCORBA/Server_Protocol/server_reverse_nt.conf:
        * tests/RTCORBA/Server_Protocol/server_shmiop.conf:
        * tests/RTCORBA/Server_Protocol/server_uiop.conf:
        * tests/RTCORBA/Thread_Pool/svc.conf:

          Updated config file to remove SCHED_FIFO as the scheduling
          policy for normal, non-RT testing.

        * tests/RTCORBA/Banded_Connections/svc.conf.xml:
        * tests/RTCORBA/Client_Propagated/svc.conf.xml:
        * tests/RTCORBA/Collocation/svc.conf.xml:
        * tests/RTCORBA/MT_Client_Protocol_Priority/svc.conf.xml:
        * tests/RTCORBA/Server_Declared/svc.conf.xml:
        * tests/RTCORBA/Thread_Pool/svc.conf.xml:

          Added missing file.

        * tests/RTCORBA/Banded_Connections/server.conf:
        * tests/RTCORBA/Banded_Connections/server.conf.xml:
        * tests/RTCORBA/Destroy_Thread_Pool/svc.conf:
        * tests/RTCORBA/MT_Client_Protocol_Priority/server.conf:
        * tests/RTCORBA/MT_Client_Protocol_Priority/client.conf:
        * tests/RTCORBA/ORB_init/svc.conf:
        * tests/RTCORBA/Persistent_IOR/svc.conf:
        * tests/RTCORBA/Policies/svc.conf:
        * tests/RTCORBA/Private_Connection/svc.conf:
        * tests/RTCORBA/RTMutex/svc.conf:
        * tests/RTCORBA/Server_Declared/server.conf:
        * tests/RTCORBA/Server_Declared/server.conf.xml:
        * tests/RTCORBA/Server_Protocol/svc.conf:
        * performance-tests/RTCorba/Thread_Pool/fudge_priorities.cpp:

          These files are no longer used.

        * tests/RTCORBA/Banded_Connections/server.cpp:
        * tests/RTCORBA/Client_Propagated/client.cpp:
        * tests/RTCORBA/Client_Propagated/server.cpp:
        * tests/RTCORBA/Client_Protocol/client.cpp:
        * tests/RTCORBA/Client_Protocol/server.cpp:
        * tests/RTCORBA/Destroy_Thread_Pool/Destroy_Thread_Pool.cpp:
        * tests/RTCORBA/Diffserv/server.cpp:
        * tests/RTCORBA/Diffserv/client.cpp:
        * tests/RTCORBA/Explicit_Binding/client.cpp:
        * tests/RTCORBA/Explicit_Binding/server.cpp:
        * tests/RTCORBA/MT_Client_Protocol_Priority/client.cpp:
        * tests/RTCORBA/MT_Client_Protocol_Priority/server.cpp:
        * tests/RTCORBA/Private_Connection/client.cpp:
        * tests/RTCORBA/Private_Connection/server.cpp:
        * tests/RTCORBA/RTMutex/server.cpp:
        * tests/RTCORBA/Server_Declared/client.cpp:
        * tests/RTCORBA/Server_Declared/server.cpp:
        * tests/RTCORBA/Server_Protocol/client.cpp:
        * tests/RTCORBA/Server_Protocol/server.cpp:
        * tests/RTCORBA/Thread_Pool/client.cpp:
        * tests/RTCORBA/Thread_Pool/server.cpp:

          Errors should be indicated with a return value -1 and not 1.

        * tests/RTCORBA/Banded_Connections/run_test.pl:
        * tests/RTCORBA/Client_Propagated/run_test.pl:
        * tests/RTCORBA/Collocation/run_test.pl:
        * tests/RTCORBA/Linear_Priority/run_test.pl:
        * tests/RTCORBA/MT_Client_Protocol_Priority/run_test.pl:
        * tests/RTCORBA/Policy_Combinations/run_test.pl:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/run_test.pl:
        * tests/RTCORBA/Server_Declared/run_test.pl:
        * tests/RTCORBA/Thread_Pool/run_test.pl:

          Removed incorrect error message.

        * tests/RTCORBA/MT_Client_Protocol_Priority/client.cpp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/client.cpp:
        * examples/RTCORBA/Activity/Activity.cpp:
        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.cpp:

          Use thread_creation_flags() to create invocation threads.

        * tests/RTCORBA/Policy_Combinations/server.cpp:

          Fixed the use of calling sched_policy() to calling
          ace_sched_policy().

        * tests/RTCORBA/MT_Client_Protocol_Priority/svc.conf:
        * tests/RTCORBA/MT_Client_Protocol_Priority/run_test.pl:

          No need for separate client.conf and server.conf files.  Options
          can be combined into one svc.conf file.

        * tests/RTCORBA/Linear_Priority/client.cpp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/client.cpp:

          Gave the Worker_Threads a stack based instance of the
          Thread_Manager rather than using the singleton instance.

        * tests/RTCORBA/Client_Propagated/client.cpp:

          Don't fix the scheduling policy value - use ace_sched_policy()
          to get the scheduling policy in use.

        * tests/RTCORBA/check_supported_priorities.cpp:

          - check_supported_priorities(): No need for conversions - simply
          use the new ace_sched_policy().

          - sched_policy_name(): Added a helper routine to help convert
          scheduling policy constants into strings.

        * tests/RTCORBA/Server_Declared/run_test.pl:
        * tests/RTCORBA/MT_Client_Protocol_Priority/run_test.pl:

          Fixed the priority values for Solaris since they were not in the
          SCHED_FIFO range for Solaris 5.7.

        * performance-tests/RTCorba/Thread_Pool/client.cpp:

          - Removed the <continuous_workers_are_rt> options since all
          threads have to be of the same scope to get the mapping correct.

          - No need to call fudge_priorities() since the main thread no
          longer makes real-time invocations.

        * examples/RTCORBA/Activity/Activity.cpp:

          - No need to store <scope_policy> since it is available from ORB
          params.

          - init_sched() is not needed and was removed.

          - Simplified call to activate().

        * orbsvcs/orbsvcs/Notify/CosNotify_Service:
        * orbsvcs/orbsvcs/Notify/Properties:

          - init_main_thread() was removed since it was not needed or
          used.

          - Removed <scope_policy> and <sched_policy> since these are
          available from ORB params.

        * $ACE_ROOT/bin/tao_orb_tests.lst:

          - All RTCORBA tests should now run on Linux.  If there are
          insuffient number of priorities in the scheduling policy
          selected, the test should exit gracefully.

          - Fixed the !ST settings.  Server_Protocol, Private_Connection,
          ORB_init, Explicit_Binding, and Client_Protocol should work with
          the single threaded configuration.

Wed Apr 16 13:44:47 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/PortableServer/Object_Adapter (Non_Servant_Upcall):

          Nested non-servant upcalls were not being handling correctly.
          Added <non_servant_upcall_nesting_level_> that counts the current
          nesting level.  Also added a <previous_> pointer so that
          Non_Servant_Upcall instances can be chained.

          Thanks to Weston Markham <wmarkham@tissueinformatics.com> for
          pointing this out.  This fixes bug #1432.

Wed Apr 16 12:15:04 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tests/POA/Nested_Non_Servant_Upcalls:

          New test to ensure that nested non-servant upcalls are handled
          correctly.

          The following files were added:

          - Makefile
          - Nested_Non_Servant_Upcalls.cpp
          - Nested_Non_Servant_Upcalls.dsp
          - Nested_Non_Servant_Upcalls.dsw
          - Nested_Non_Servant_Upcalls.mpc
          - makefile.bor
          - run_test.pl
          - test.idl

          The following files were modified:

          - $ACE_ROOT/THANKS
          - $ACE_ROOT/bin/tao_orb_tests.lst
          - tests/TAO_Tests.dsw
          - tests/POA/Makefile
          - tests/POA/Makefile.bor
          - tests/POA/README

Wed Apr 16 12:15:04 2003  Irfan Pyarali  <irfan@oomworks.com>

        * tao/PortableServer/POA.h (server_protocol):

          Made this method virtual so that the correct derived real-time
          method gets invoked.  Thanks to Craig Rodrigues
          <crodrigu@bbn.com> for pointing this out.  This fixes bug 1466.

Wed Apr 16 08:27:21 2003  Ossama Othman  <ossama@uci.edu>

        * tao/CORBA_String.cpp:

          Include "ace/streams.h" to pull in iostream class declarations.

        * tao/Exception.h:

          Include <stdio.h> to pull in "FILE" typedef.

Wed Apr 16 13:57:43 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.cpp:
          Reverted accidently committed test change.

Wed Apr 16 01:41:20 2003  Ossama Othman  <ossama@uci.edu>

        * orbsvcs/orbsvcs/CosLoadBalancing.idl (register_load_monitor):

          Improved documentation for this method.

        * orbsvcs/orbsvcs/IOR_Multicast.cpp:
        * orbsvcs/orbsvcs/Naming/Hash_Naming_Context.h:
        * orbsvcs/orbsvcs/Naming/Storable.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.h:

          Include "ace/SString.h" to pull in complete ACE_CString type.

        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.cpp:

          Include "ace/ACE.h" to pull in ACE::nibble2hex() function
          declaration.

        * orbsvcs/orbsvcs/PortableGroup/PG_Location_Hash.h:

          Include "ace/ACE.h" to pull in ACE::hash_pjw() function
          declaration.

Wed Apr 16 00:47:50 2003  Ossama Othman  <ossama@uci.edu>

        * tao/Acceptor_Registry.h:
        * tao/Protocol_Factory.h:

          Include "ace/SStringfwd.h" instead of "ace/SString.h".  Forward
          declarations of ACE_CString are enough.

Wed Apr 16 00:18:08 2003  Ossama Othman  <ossama@uci.edu>

        * TAO_IDL/be/be_decl.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_ss.cpp:

          Include "ace/SString.h".  Necessitated by header inclusion
          reductions in ACE.

        * tao/AbstractBase.inl (_is_a):
        * tao/AbstractBase.cpp (_is_a):

          Uninlined this method.  There wasn't much point in inlining it
          since it is a virtual method.

        * tao/Any.cpp (create_empty):

          Marked constant initializer variables as "const".

        * tao/Any_T.cpp:

          Nuked trailing whitespace.

        * tao/CORBA_String.h:

          Include "ace/iosfwd.h" instead of "ace/streams.h" to reduce
          compile times.  Forward declarations are enough.

        * tao/CORBA_String.cpp:
        * tao/Messaging_SyncScopeC.cpp:
        * tao/corbafwd.cpp:

          Include "ace/OS.h".  Necessitated by above change.

        * tao/Exception.h:

          Include "ace/SStringfwd.h" and "ace/iosfwd.h" instead of
          "ace/SString.h".  The latter is more expensive than the former
          two.

          Forward declare "ACE_Allocator" class.  Necessitated by above
          change.

          Uninlined another CORBA::SystemException constructor.  This
          should help reduce TAO's footprint.

        * tao/GIOP_Message_Generator_Parser.h:
        * tao/Utils/Auto_Functor.h:

          Include "ace/Global_Macros.h".  Necessitated by header inclusion
          reductions.

        * tao/IIOP_Connection_Handler.cpp:
        * tao/Object.h:
        * tao/Parser_Registry.h:
        * tao/Queued_Message.h:
        * tao/corbafwd.i:
        * tao/PortableServer/Object_Adapter.h:
        * tao/PortableServer/POA.h:

          Cosmetic improvements.

        * tao/NVList.h:
        * tao/Object.cpp:
        * tao/Profile.h:

          Include "ace/Synch.h".  Necessitated by header inclusion
          reductions.

        * tao/Object_KeyC.cpp:

          Include "ace/ACE.h".  Necessitated by header inclusion
          reductions.

        * tao/Transport_Connector.h:
        * tao/Wait_Strategy.h:

          Forward declare ACE_Time_Value class.  Necessitated by header
          inclusion reductions.

        * tao/append.cpp (append):

          Added missing line feed in debugging output.

        * tao/RTCORBA/Private_Transport_Descriptor.h:

          Don't bother using the ACE_UNIMPLEMENTED_FUNC macro when
          declaring private unimplemented copy constructors and assignment
          operators.  Reduces need to include other headers.  All
          compilers supported by TAO no longer need this macro.

        * orbsvcs/orbsvcs/PortableGroup/PG_Default_Property_Validator.cpp
          (validate_property):

          Do not use the deprecated Any extraction operator when checking
          the validity of the "Factories" property, i.e. use the operator
          that expects a pointer to a "const" object.

        From Carlos O'Ryan <coryan@atdesk.com>
        * tao/PortableServer/Object_Adapter.cpp (open):

          Iterate over the registered IOR interceptors so that they may be
          given the opportunity to add tagged components to the profiles
          for servants managed by the Root POA.  [Bug 1414]

        * tao/PortableServer/POA.cpp (id_to_reference_i):

          Use the POA's default ObjectReferenceTemplate to create object
          references.  [Bug 1414]

          (establish_components):

          Do not create a PortableInterceptor::IORInfo object if no IOR
          interceptors are registered.  Optimizes POA creation times for
          the common case, i.e. no registered IOR interceptors.
          [Bug 1414]

          Turned PortableInterceptor::establish_components() and
          PortableInterceptor::components_established() calls into
          non-servant upcalls.  Removes some locks that were held during
          IOR interceptor calls.  Fixes a deadlock.  [Bug 1414]

Mon Apr 14 13:19:44 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.h: Renamed the method
          decode_endpoints () to decode_tagged_endpoints (). The method
          decode_endpoints () is virtual in the TAO_Profile hierarchy and
          seems to have a specific semantics in all protocols. The SSL
          specifics have to be wrapped up in a seperate method which is
          private and not mixed with other protcols!

Mon Apr 14 14:16:35 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/orbsvcs/Notify/RT_Factory.cpp:
          Defined virtual base class methods to stop Suncc/HPUX ACC339
          compiler warnings.Thanks to David Smith <dts@prismtechnologies.com>
          for bringing this to attention.

Mon Apr 14 11:24:53 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/IIOP_Profile.cpp:
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Strategies/SHMIOP_Profile.cpp:
        * tao/Strategies/UIOP_Profile.cpp: A blunder cause by moving the
          pointer 4 bytes ahead in parse_string_i () caused lots of tests
          to fail in TAO. The pointer shift is not required, since
          TAO_Profile::parse_string () itself moves the pointer ahead at
          the right place before calling parse_string_i () on the concrete
          profile implementations.

Mon Apr 14 15:02:25 2003  Simon McQueen  <sm@prismtechnologies.com>

        * tests/OBV/TC_Alignment/client.dsp:
        * tests/OBV/TC_Alignment/client.dsp:
          Fixed custom build dependencies in release configuration.

Mon Apr 14 14:07:18 2003  Simon McQueen  <sm@prismtechnologies.com>

        * orbsvcs/tests/Bug_1395_Regression/client.dsp:
        * orbsvcs/tests/Bug_1395_Regression/server.dsp:
          Fixed mpc generated incorrect output file entry in release
          configuration.

Mon Apr 14 06:56:12 2003  Chad Elliott  <elliott_c@ociweb.com>

        * examples/mfc/client.mpc:
        * examples/mfc/mfc.mwc:
        * examples/mfc/server.mpc:
        * orbsvcs/performance-tests/RTEvent/lib/RTEC_Perf.mpc:

          Added mpc files for these projects.

        * orbsvcs/orbsvcs/DsLogAdmin.mpc:

          Fixed the library list for this mpc file.

Mon Apr 14 11:52:30 2003  Dave Smith  <dts@prismtechnologies.com>

        * orbsvcs/PSS/PSDL_Datastore.cpp:
          For HPUX11, replaced the call to the ACE_NEW_RETURN macro with
          its expansion, as the call seems to confuse the compiler

Mon Apr 14 00:01:00 2003  <dts@axwell>

        * orbsvcs/tests/Notify/RT_lib/RT_POA_Command.h
          Removed clash with symbol defined in
          /usr/include/machine/cpu.h on HPUX.

Sun Apr 13 13:25:11 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/IIOP_Profile.h:
        * tao/IIOP_Profile.i:
        * tao/Profile.cpp:
        * tao/Profile.h:
        * tao/Profile.i:
        * tao/Strategies/DIOP_Profile.h:
        * tao/Strategies/DIOP_Profile.i:
        * tao/Strategies/SHMIOP_Profile.h:
        * tao/Strategies/SHMIOP_Profile.i:
        * tao/Strategies/UIOP_Profile.h:
        * tao/Strategies/UIOP_Profile.i:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.i: No idea why
          virtual functions, accessors for object_key (), were inlined,
          declared and defined in every protocol. Moved the accessor to
          the base class and non-virtualized them.

Sun Apr 13 08:07:48 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/tmplinst.cpp: Fixed a compile error
          in explicit template instantiation builds.

Sun Apr 13 08:03:36 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/Notify/Destroy/main.cpp: Fixed a warning in our
          daily builds.

Sun Apr 13 07:59:43 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp: Missed a
          definition of a function.

Sat Apr 12 22:54:38 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Bug_1482_Regression/Makefile:
        * orbsvcs/tests/Security/SecurityLevel1/Makefile:
        * docs/tutorials/Quoter/RT_Event_Service/Makefile: Updated
          dependencies.

Sat Apr 12 22:50:25 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/examples/ORT/Makefile: Updated dependencies.

Sat Apr 12 22:42:15 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Profile.cpp:
        * tao/Profile.h:
        * tao/IIOP_Profile.cpp:
        * tao/IIOP_Profile.h:
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Strategies/DIOP_Profile.h:
        * tao/Strategies/SHMIOP_Profile.cpp:
        * tao/Strategies/SHMIOP_Profile.h:
        * tao/Strategies/UIOP_Profile.cpp:
        * tao/Strategies/UIOP_Profile.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.h: Removed a bunch
          of duplicated code in encode (), decode (), parse_string ().
          New methods by name encode_profiles (), decode_profiles (),
          parse_string_i () have been added to do protocol specific
          stuff.

          Rearranged the documentation for the Profiles classes. We had
          the same documentation repeated, and that too inconsistently
          across all the profiles. Fixed them across the board.

          Looks like we have atleast 2 other protocols based on
          TCP/IP. The next step is going to change the inheritance
          hierarchy so that they could share all their code.

Sat Apr 12 22:33:22 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * orbsvcs/tests/Notify/Test_Filter/Makefile:
        * orbsvcs/tests/Notify/RT_lib/Makefile: Added guards for builds in
          which RTCORBA is turned off.

Fri Apr 11 17:00:00 2003  Roy Pollock <rpollock@ghs.com>

        * orbsvcs/orbsvcs/AV/global.h: INTEGRITY already has typedefs of
          UINT2 and UINT4, so protect the declarations with !defined(INTEGRITY)

Fri Apr 11 15:12:54 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/IFR_Client/IFR_BaseS.h: Added this dummy header file so that
          it is easier to include "IFR_Base.idl" in other idl files.

Fri Apr 11 09:33:41 2003  Dave Smith  <dts@prismtechnologies.com>

        * orbsvcs/test/Notify/lib/Application_Commnad.h
        * orbsvcs/test/Notify/lib/Command_Factory_T.h
        * orbsvcs/test/Notify/lib/ConsumerAdmin_Command.h
        * orbsvcs/test/Notify/lib/EventChannel_Command.h
        * orbsvcs/test/Notify/lib/Filter_Command.h
        * orbsvcs/test/Notify/lib/Periodic_Consumer_Command.h
        * orbsvcs/test/Notify/lib/Periodic_Supplier_Command.h
        * orbsvcs/test/Notify/lib/SupplierAdmin_Command.h
          Removed clash with symbol defined in
          /usr/include/machine/cpu.h on HPUX.

Thu Apr 10 07:06:07 2003 Pradeep Gore <pradeep@oomworks.com>

        * orbsvcs/tests/Notify/RT_lib/Makefile:
        * orbsvcs/tests/Notify/Test_Filter/Makefile:
          Added missing linkage to RTCORBA.

        * orbsvcs/tests/Notify/ThreadPool/supplier.conf:
          Corrected the names of the library loaded.

        * orbsvcs/orbsvcs/.depend.Makefile.RT_Notification:
        * orbsvcs/orbsvcs/Makefile.RT_Notification:
          Added missing Structured/RT_StructuredProxyPushSupplier.cpp

        * orbsvcs/orbsvcs/Notify/Structured/RT_StructuredProxyPushSupplier.cpp
          Corrected ENV usage.

Thu Apr 10 15:01:18 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * docs/Options.html:

          Add description of the new codeset related resource factory
          options. These are -ORBNative[W]CharCodeset,
          -ORB[W]CharCodesetTranslator.

Thu Apr 10 01:39:23 2003 Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/tests/Notify/Destroy/Makefile:
        * orbsvcs/tests/Notify/Destroy/.depend.Makefile:
          Corrected the Makefile.

Thu Apr 10 10:39:02 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.h:

          Moved template specializations to the top of the source file
          and removed the declarations in the header file. Thanks to
          Johnny Willemsen <jwillemsen@remedy.nl> for his help with
          fixing this BCB problem.

Thu Apr 10 10:30:33 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/default_client.cpp:
        * tao/default_client.h:
        * tao/Client_Strategy_Factory.cpp:
        * tao/Client_Strategy_Factory.h: Added a new -ORB option,
          -ORBTransporMuxStrategyLock, and a accessor
          create_transport_mux_strategy_lock () that  returns the lock
          created by the strategy factory. The options and the accessor
          helps the user to use either a locked or a lock free transport
          muxed strategy. Please see the documentation in
          docs/Options.html for details on how to use this.

        * tao/Transport_Mux_Strategy.cpp:
        * tao/Transport_Mux_Strategy.h: Added a lock to the muxed strategy
          class. The lock will actually be created, and used by the
          concrete strategies. Looks like the all the concrete strategies
          may require some type of strategized locking. Hence this has
          been moved here with a purpose.

        * tao/Muxed_TMS.cpp:
        * tao/Muxed_TMS.h: Removed the hard coded recursive mutex, and used
          the strategized lock created by the client strategy factory
          instead.

          This fixes BUG 1491 and thanks again to Carlos for motivating
          this change.

        * docs/Options.html: Added documentation for the new options.

Thu Apr 10 13:40:02 CEST 2003  Oliver Kellogg  <oliver.kellogg@sysde.eads.net>

        * orbsvcs/orbsvcs/Event/EC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/Event/Event_Channel.{h,cpp}:

          Use ACE_Unbounded_Set_Ex instead of ACE_Unbounded_Set.
          This fixes bug 1465 for RTEC.

Thu Apr 10 06:27:14 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/orbconf.h:
        * tao/params.cpp: Added a compile time option to configure the
          DefaultInitRef. It was hardcoded to mcast://:::

          Thanks to Carlos O'Ryan for the patch. This shold fix BUG 1488.

Thu Apr 10 000:08:15 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/TAO_Static.dsp:

          Updated project settings.

Wed Apr  9 23:23:17 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Param_Test/server.cpp:

          Added 'const' to a static char& definition which has a string
          literal on the rhs. SunOS FORTE complained about it.

Wed Apr  9 23:09:09 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/tmplinst.cp:

          Fixed typos.

Wed Apr  9 22:50:12 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:

          Fixed formatting in generated code for _unchecked_narrow().

        * TAO_IDL/be/be_visitor_component/component_cs.cpp:

          Fixed logic in code generation of _unchecked_narrow(). Thanks
          to Nanbor Wang <nanbor@cse.wustl.edu> for reporting the problem.

Wed Apr  9 15:28:47 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Stub.h (object_key):
        * tao/Stub.cpp: Added a new method object_key (). The methodology
          adopted by the skeletons in the collocated cases could lead to
          crashes if TAO_Stub::profile_in_use_ wasnt set. The method that
          has been added should get around that problem, by always
          returning a usable object key.

        * tao/Domain/DomainS.cpp:
        * tao/PortableServer/ImR_LocatorS.cpp:
        * tao/PortableServer/ImplRepoS.cpp:
        * tao/PortableServer/PolicyS.cpp:
        * tao/PortableServer/ThruPOA_Object_Proxy_Impl.cpp:
        * tao/RTPortableServer/RT_Collocation_Resolver.cpp:
        * orbsvcs/orbsvcs//IFRService/IFR_BaseS.cpp:
        * orbsvcs/orbsvcs//IFRService/IFR_BasicS.cpp:
        * orbsvcs/orbsvcs//IFRService/IFR_ComponentsS.cpp:
        * orbsvcs/orbsvcs//IFRService/IFR_ExtendedS.cpp:
        * orbsvcs/orbsvcs//IFRService/IFR_Service_Utils.cpp: Edited the
          collocated portion of the generated code to use the above method.

        * TAO_IDL/be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:
          Use the above method in TAO_Stub to access the object_key.  This
          should fix [BUG 1483].

Wed Apr 09 14:54:03 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/tests/Notify/Destroy/main.cpp:
          Invokes the NotifyExt::EventChannelFactory::destroy method.

        * orbsvcs/tests/Notify/Destroy/Destroy.mpc:
        * orbsvcs/tests/Notify/Destroy/Makefile:
        * orbsvcs/tests/Notify/Destroy/Notify_Test_Destroy.dsp:
          Makefiles.

        * orbsvcs/tests/Notify/Makefile:
        * orbsvcs/tests/Notify/Notify_Tests.dsw:
          Added the <Destroy> test.

        * orbsvcs/tests/Notify/lib/Makefile.bor:
          Move the Activation_ManagerC to the top of the Makefile to fix
          compile errors. Thanks to Johnny Willemsen
          <jwillemsen@remedy.nl> for this suggestion.

Wed Apr  9 13:47:26 2003  Stuart Jones  <jones_s@ociweb.com>

        * tao/Messaging/Messaging.cpp

          Added code to register exception pointer with ACE_Auto_Basic_Ptr
          when TAO is compiled with exceptions. When using AMI, a leak
          appeared if an exception was raised.  The exception was created
          on the heap, but the "raise" made a copy of this on the stack.
          See DOC bug# 1487.

Wed Apr  9 17:12:23 UTC 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        List of changed gathered the last weeks by me and Mark Drijver
        <mdrijver@remedy.nl>.

        * Makefile.bor:
          Removed nightlybuild because it is not needed anymore. Added
          orbsvcs/examples to the list of directories to build with a full
          build.

        * orbsvcs/examples/Makefile.bor:
        * orbsvcs/examples/RtEC/Makefile.bor:
        * orbsvcs/examples/RtEC/Simple/EC_Simple_Consumer.bor:
        * orbsvcs/examples/RtEC/Simple/EC_Simple_Service.bor:
        * orbsvcs/examples/RtEC/Simple/EC_Simple_Supplier.bor:
        * orbsvcs/examples/RtEC/Simple/Makefile.bor:
        * orbsvcs/examples/Security/Makefile.bor:
        * orbsvcs/examples/Security/Send_File/Makefile.bor:
        * orbsvcs/examples/Security/Send_File/client.bor:
        * orbsvcs/examples/Security/Send_File/server.bor:
          Added these new BCB makefiles to build these examples with BCB.

        * orbsvcs/examples/RtEC/Simple/Consumer.cpp:
        * orbsvcs/examples/RtEC/Simple/Service.cpp:
        * orbsvcs/examples/RtEC/Simple/Supplier.cpp:
        * orbsvcs/examples/RtEC/Simple/run_test.pl:
        * orbsvcs/examples/RtEC/Simple/README:
          Extended this example so that the Naming Service is used to locate
          the Event Service. This makes it a lot easier to use this test
          because we don't have to copy the IOR of the Event Service to the
          commandline options of the consumer and supplier.

        * docs/cec_options.html:
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.i:
        * orbsvcs/orbsvcs/CosEvent/CEC_Defaults.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_ConsumerControl.h:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_Reactive_SupplierControl.h:
          When CECConsumerControl or CECSupplierControl is set to reactive the
          consumer/supplier was called and when the call took more than 10ms
          the consumer/supplier was assumed to be died. These 10ms was
          hardcoded and couldn't be configured. This is a problem on a WAN
          where just the method call can take 100ms. The CosEvent is extended
          with CECConsumerControlTimeout and CECSupplierControlTimeout with
          which this timeout can be specified.

        * docs/ec_options.html:
        * orbsvcs/orbsvcs/Event/EC_Basic_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.i:
        * orbsvcs/orbsvcs/Event/EC_Defaults.h:
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.cpp:
        * orbsvcs/orbsvcs/Event/EC_Reactive_ConsumerControl.cpp:
        * orbsvcs/orbsvcs/Event/EC_Reactive_ConsumerControl.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.cpp:
        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.h:
          When ECConsumerControl or ECSupplierControl is set to reactive the
          consumer/supplier was called and when the call took more than 10ms
          the consumer/supplier was assumed to be died. These 10ms was
          hardcoded and couldn't be configured. This is a problem on a WAN
          where just the method call can take 100ms. The RTEvent is extended
          with ECConsumerControlTimeout and ECSupplierControlTimeout with
          which this timeout can be specified.

        * orbsvcs/tests/Makefile.bor:
          Added Bug_1393_Regression to the list of directories to build.

        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile:
          Only build this test when the Notify and Naming service are build.

        * tao/Connection_Handler.cpp:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/IIOP_Transport.cpp:
        * tao/Invocation.cpp:
        * tao/Transport.cpp:
        * tao/Transport_Cache_Manager.cpp:
        * tao/Messaging/Connection_Timeout_Policy_i.cpp:
        * tao/Messaging/Messaging_Policy_i.cpp:
          Improved debugging lines to make the logs more readable, some lines
          where incompletely printed.

        * tao/ORBInitializer_Registry.cpp:
        * tao/ORB_Core.cpp:
        * tao/ORB_Table.cpp:
        * tao/ValueFactory_Map.cpp:
          For VxWorks, AIX and HPUX explicit instantiate static template
          member. Fixes problems when using implicit template instantiations.

        * tao/Server_Strategy_Factory.h:
          Converted documentation to doxygen style.

        * tao/RTCORBA/RT_Mutex.h:
        * tao/RTCORBA/RT_ORBInitializer.h:
        * tao/RTCORBA/RT_Protocols_Hooks.h:
        * tao/RTCORBA/RT_Stub.h:
        * tao/RTCORBA/RT_Thread_Lane_Resources_Manager.h:
        * tao/RTCORBA/Thread_Pool.h:
        * tao/TypeCodeFactory/TypeCodeFactory_i.h:
          Improved doxygen documentation.

        * tests/CodeSets/libs/IBM1047_ISO8859/Makefile:
        * tests/DLL_ORB/Makefile.Test_Client_Module:
        * tests/DLL_ORB/Makefile.Test_Server_Module:
          Set correct BUILD_DLL defines for Cygwin/MingW/Kylix.

        * tests/TestUtils/TestCombinedThreads.h:
          Don't forward declare ACE_CString but include correct file. Fixes a
          VxWorks error.

Wed Apr 09 17:54:59 2003  Simon McQueen  <sm@prismtechnologies.com>

        * tests/AMI_Buffering/admin.dsp:
        * tests/OBV/Any/client.dsp: Couple of RTTI settings that got missed.

Wed Apr  9 11:19:42 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Bug_1482_Regression/Client_Task.h:
        * tests/Bug_1482_Regression/Client_Task.cpp: Minor memory
          management tweaks to prevent the test from dumping a core during
          exit.

Wed Apr 09 16:41:18 2003  Simon McQueen  <sm@prismtechnologies.com>

        * orbsvcs/tests/Notify/lib/TAO_NotifyTests.dsp: Fixed path to
          tao_idl in release configuration.

Wed Apr  9 16:00:23 2003  Dave Smith  <dts@prismtechnologies.com>

        * tao/Any_T.cpp:
        * orbsvcs/orbsvcs/AV/Endpoint_Strategy_T.cpp:

          Fixed compile problems with HPUX and Windows.

Wed Apr  9 09:40:43 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Param_Test.server.cpp:
        * tests/Portable_Interceptors/AMI/client.cpp:

          Fixed warnings.

Wed Apr  9 08:23:28 2003  Chad Elliott  <elliott_c@ociweb.com>

        * tao/tao.mpc:

          Remove the 'tao' assignment.  It is now dynamically determined.

Wed Apr 09 07:47:52 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Bug_1482_Regression/server.dsp: Added -GC to the release
          configuration.

Wed Apr  9 14:34:52 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1482_Regression/client.bor:
        * tests/Bug_1482_Regression/server.bor:
          Added -GC to the IDL compiler options, added Messaging to the
          server makefile.

Wed Apr  9 11:01:12 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1482_Regression/client.bor:
          Fixed error in this BCB makefile.

Tue Apr  8 23:52:35 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:

          Added 'using namespace TAO' and removed 'TAO::' from template
          specializations at the top of the file, which were confusing
          Sun Forte. Thanks to Bala <bala@isis-server.isis.vanderbilt.edu>
          for coming up with the fix and to Irfan Pyarali <ifran@oomworks.com>
          for reporting the problem.

Tue Apr  8 18:46:17 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_component/component_cs.cpp:

          Added generation of virtual marshal() method to correspond to
          the recent addition of this method to interface code generation.

Tue Apr 08 17:45:50 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * TAO_IDL/be/be_visitor_component/component_ch.cpp
          (visit_component): Removed a redundant closing paren.

Tue  Apr 8 13:20:02 2003 Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/orbsvcs/Notify/EventChannelFactory.cpp:
          Method <destroy>: Removed extraneous call to shutdown ec_container_.

        * orbsvcs/orbsvcs/Notify/Object.cpp:
          Eat exceptions in the <deactivate> method.
          Shutdown the proxy_poa_ and object_poa_ in the destructor.

        * orbsvcs/orbsvcs/Notify/Property_T.cpp:
          Method <set>: Check to see if the >>= operator returned success.

        * orbsvcs/orbsvcs/Notify/QoSProperties.cpp:
          Method <init>: Try to set the individual QoS properties only if some properties are available.

        * orbsvcs/tests/Notify/ThreadPool/consumer.conf:
          Corrected formatting of the conf. file.

        * orbsvcs/tests/Notify/lib/TAO_NotifyTests.dsp:
        * orbsvcs/tests/Notify/Notify_Tests.dsw:
          Corrected  to fix compile errors.

Tue Apr  8 16:38:00 2003  Dave Smith  <dts@prismtechnologies.com>

        * tao/Any_T.cpp:

        Fixed compile errors in tests/IDL_Test for HPUX build.

Tue Apr 08 10:39:22 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/AMI_Buffering/client.dsp:
        * tests/AMI_Buffering/server.dsp:
        * tests/AMI_Buffering/admin.dsp: Turned on RTTI to prevent
          warnings in release builds.

Tue Apr 08 10:31:48 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Bug_1482_Regression/server.dsp:
        * tests/Bug_1482_Regression/client.dsp: Fixed the release build
          configuration.

Tue Apr  8 17:01:55 CEST 2003  Oliver Kellogg  <oliver.kellogg@sysde.eads.net>

        * orbsvcs/orbsvcs/CosEvent/CEC_Default_Factory.cpp:

          Adjusted explicit template instantiations to ACE_Unbounded_Set_Ex.

Tue Apr  8 000:00:06 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicInterface/DII_Invocation.cpp:

          Fixed exception handling.

        * tests/Param_Test/except.cpp:

          Cosmetic changes.

        * tests/Param_Test/client.cpp:
        * tests/Param_Test/options.cpp:
        * tests/Param_Test/server.cpp:

          Changes to allow a default filename for the server's IOR.

Mon Apr  7 19:20:55 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/obv_module.cpp (visit_eventtype):

          Fixed resetting of context states in this method.

Mon Apr  7 16:53:24 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicAny/DynCommon.cpp (get_any):

          Another stab at making all our compilers happy with
          temporary variations in constness.

Mon Apr 07 14:11:02 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Supplier:
          Corrected the code to populate the Any data with a payload.

Mon Apr  7 11:56:59 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_root/root.cpp (visit_root):

          Added a check at this higher level before creating and
          launching a visitor for OBV_* module code. This visitor
          should not be created unless we are generating code in
          stub files. Formerly the check of context state that catches
          this was done at a lower level, in visit_* methods of
          subclassed visitors. One case for eventtypes was missed,
          which was the cause of the invesitgation.

        * TAO_IDL/be/be_visitor_valuetype/obv_module.cpp (visit_eventtype):

          Removed error message for case which is now caught at a
          higher level as described above, and made other cosmetic
          changes to the source code. Thanks to Nanbor Wang
          <nanbor@cse.wustl.edu> for reporting the problem.

Mon Apr  7 10:39:23 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicAny/DynCommon.cpp (get_any):

          Removed const cast from rhs of Any extraction.

Sun Apr  6 23:34:23 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/OBV/Any/server.dsp:
        * tests/OBV/Factory/client.dsp:
        * tests/OBV/Factory/server.dsp:
        * tests/OBV/Forward/client.dsp:
        * tests/OBV/Forward/server.dsp:
        * tests/OBV/TC_Alignment/client.dsp:
        * tests/OBV/TC_Alignment/server.dsp:
        * tests/Param_Test/anyop.dsp:

          Turned on RTTI for some configurations of these projects.

Sun Apr  6 23:18:35 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.h:

          Changed declaration of exported insertion and extraction
          operators for Any_var to be predicated on __ACE_INLINE__
          not being defined.

Sun Apr  6 22:40:01 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/RTCORBA/RTCORBAC.cpp:

          Fixed and cut and paste error.

Sun Apr  6 21:26:24 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Suppler.cpp:

          Changed use of Any extraction operator to use spec-preferred
          const Any*.

Sun Apr  6 18:03:45 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_helper.cpp:

          Added ISIS info to Wash U and Irvine info displayed at the top
          of each generated IDL file.

Sun Apr  6 17:37:24 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/Portable_Interceptors/AMI/client.cpp:

          Modified code to make it possible to change the number of iterations
          in 3 separate loops and in correctness checks by changing one
          constant at the top of the file.

        * tests/Portable_Interceptors/Benchmark/server.cpp:
        * tests/Portable_Interceptors/Dynamic/server.cpp:
        * tests/Portable_Interceptors/IORInterceptor/server.cpp:
        * tests/Portable_Interceptors/PICurrent/server.cpp:
        * tests/Portable_Interceptors/Service_Context_Manipulation/server.cpp:

          Added default IOR filename.

Sun Apr  6 15:04:35 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any_T.cpp:
        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynArray_i.cpp:
        * tao/DynamicAny/DynEnum_i.cpp:
        * tao/DynamicAny/DynSequence_i.cpp:
        * tao/DynamicAny/DynStruct_i.cpp:
        * tao/DynamicAny/DynUnion_i.cpp:
        * tests/DynAny_Test/test_dynarray.cpp:
        * tests/DynAny_Test/test_dynstruct.cpp:
        * tests/DynAny_Test/test_dynunion.cpp:

          Changes necessary to get the DynAny tests to build and run
          successfully.

        * tao/Any.cpp:
        * tao/Any.h:
        * tests/Param_Test/typecode.cpp:

          Modified CORBA::TypeCode Any insertion operator to have copying
          and non-copying versions, as do CORBA::Any and CORBA::Object.
          Also modified Param Test file to use the copying version.

        * tests/DynAny_Test/Makefile:
        * tests/DynAny_Test/Makefile.bor:
        * tests/DynAny_Test/basic_test.dsp:

          Removed generated skeleton files from project and makefile.
          Although it is necessary to link to PortableServer in
          order to generate object references for testing, these
          are of type CORBA::Object and the skeleton files are
          not needed.

Sun Apr  6 09:26:18 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/orbsvcs/.depend.Makefile.RT_Notification

Sat Apr  5 15:11:45 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicAny/DynCommon.cpp:

          Changed the type of a cast to const Any *& to eliminate
          a build error that somehow didn't show up before the
          last checkin.

Sat Apr  5 09:58:37 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/tests/Notify/RT_lib/TAO_RT_NotifyTests.dsp:
          Added missing path to ../lib

Fri Apr  4 19:46:27 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:
        * tao/Any.h:
        * tao/Any.i:
        * tao/Any_T.h:

          Changes to fix errors in Param_Test. Removed
          the special class and demarshaling code for the case
          where an Any contains an Any, it is now handled by
          Any_Dual_Impl_T. Also removed the non-spec extraction
          operator to CORBA::Any&.

        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynCommon.cpp:

          Changes to use the compliant Any extraction operator
          to const Any*, instead of the removed signature above.

        * tests/Param_Test/bd_short_seq.cpp:
        * tests/Param_Test/complex_any.cpp:
        * tests/Param_Test/nested_struct.cpp:
        * tests/Param_Test/objref_struct.cpp:

          Fixed errors in debugging code.

        * tests/Param_Test/typecode.cpp:

          Added duplication to Any insertion in DII version of
          the test, since there is no copying Any insertion for
          CORBA::TypeCode_ptr, as there is for CORBA::Object and
          other interfaces.

Fri Apr  4 12:06:34 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_array/array_ch.cpp:
        * TAO_IDL/be/be_visitor_array/array_ci.cpp:
        * tao/Any_T.cpp:
        * tao/Any_T.h:
        * tao/Any_T.inl:
        * tao/skip.cpp:

          Fixed problems with demarshaling Anys that contain arrays
          or unions with an enum discriminator type. Thanks to
          Phil Mesnier <mesnier_p@ociweb.com> for reporting the
          problem with arrays. Also changed the name of the first
          template parameter in Any_Array_Impl_T to T_slice, since
          it is the array slice pointer that is used for this
          parameter when instantiating the template class.

Fri Apr 04 10:43:55 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/orbsvcs/Notify/SupplierAdmin.h:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.h:
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.cpp:
          Removed default from ENV parameter.

        * orbsvcs/tests/Notify/lib/Makefile.bor:
        * orbsvcs/tests/Notify/Test_Filter/Makefile.bor:
          Updated.

Fri Apr 04 07:06:33 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/tests/Notify/lib/Activation_Manager.h:
          Use TAO_SYNCH_MUTEX instead of ACE_Condition_Thread_Mutex

Fri Apr 04 07:06:33 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/tests/Notify/lib/Periodic_Consumer_Command.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Supplier_Command.cpp:
          Added check for TAO_HAS_MINIMUM_CORBA in <handle_status>.

Fri Apr  4 07:05:29 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Bug_1482_Regression/srver.bor: Fixed a typo. Thanks to
          Johnny for reporting the problem.

Thu Apr 03 13:31:17 2003  Pradeep Gore  <pradeep@oomworks.com>

        Added RT_Notification service and tests implementation -

        * orbsvcs/orbsvcs/Notify/RT_Builder.cpp:
        * orbsvcs/orbsvcs/Notify/RT_Builder.h:
        * orbsvcs/orbsvcs/Notify/RT_Builder.inl:
          Builder object for RT_Notification.

        * orbsvcs/orbsvcs/Notify/RT_Factory.cpp:
        * orbsvcs/orbsvcs/Notify/RT_Factory.h:
        * orbsvcs/orbsvcs/Notify/RT_Factory.inl:
          Factory object for RT_Notification.

        * orbsvcs/orbsvcs/Notify/RT_Notify_Service.cpp:
        * orbsvcs/orbsvcs/Notify/RT_Notify_Service.h:
        * orbsvcs/orbsvcs/Notify/RT_Notify_Service.inl:
          Service object for RT_Notification.

        * orbsvcs/orbsvcs/Notify/RT_POA_Helper.cpp:
        * orbsvcs/orbsvcs/Notify/RT_POA_Helper.h:
        * orbsvcs/orbsvcs/Notify/RT_POA_Helper.inl:
          RTPortableServer wrapper for RT_Notification

        * orbsvcs/orbsvcs/Notify/RT_Properties.cpp:
        * orbsvcs/orbsvcs/Notify/RT_Properties.h:
          RT_Notification specific properties.

        * orbsvcs/orbsvcs/Notify/rt_notify_export.h:
          RT_Notification export file.

        * orbsvcs/orbsvcs/Notify/Structured/RT_StructuredProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/RT_StructuredProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Structured/RT_StructuredProxyPushSupplier.inl:
          A Structured ProxySupplier for RT_Notification.

        * orbsvcs/orbsvcs/Makefile
        * orbsvcs/orbsvcs/Makefile.RT_Notification
        * orbsvcs/orbsvcs/orbsvcs.dsw:
        * orbsvcs/orbsvcs/orbsvcs_static.dsw:
          Included the RT_Notification project.

        * orbsvcs/orbsvcs/.depend.RT_Notification:
          Added dependency file.
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.cpp:
          In <init> method, call TAO_NS_Object::init instead of
          TAO_NS_Proxy::init

        * orbsvcs/tests/Notify/lib/Periodic_Consumer.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Consumer.h:
          Added an option to check if the thread priority matches the
          priority specified in the event received.

        * orbsvcs/tests/Notify/ThreadPool/consumer.conf:
        * orbsvcs/tests/Notify/Lanes/consumer.conf:
          Added the "-Check_Priority" option to the Periodic Consumers.

        * orbsvcs/orbsvcs/Notify/Default_Factory.cpp:
        * orbsvcs/orbsvcs/Notify/RT_Factory.cpp:
          Corrected to ACE_FACTORY_DEFINE macro.

        * orbsvcs/orbsvcs/NotifyExt.idl:
          Extended the ConsumerAdmin and SupplierAdmin interfaces with
          create methods for Proxys with initial QoS parameters.

        * orbsvcs/orbsvcs/Notify/Builder.h:
        * orbsvcs/orbsvcs/Notify/Builder.cpp:
          Revised the <build_proxy> to accept an inital QoS value.

        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.h:
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.h:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.cpp:
          Implemented the method to create Proxys with initial QoS
          parameters.

        * orbsvcs/orbsvcs/Notify/Proxy.h:
        * orbsvcs/orbsvcs/Notify/Proxy.cpp:
          Overload the <activate> and <deactivate> methods to use the <proxy_poa_>.

        * orbsvcs/orbsvcs/RT_Notification.dsp:
        * orbsvcs/orbsvcs/RT_Notification_Static.dsp:
        * orbsvcs/orbsvcs/RT_Notification.rc:
        * orbsvcs/orbsvcs/RT_Notification.bor:
        * orbsvcs/orbsvcs/Makefile.RT_Notification:
          Added RT_Notification specific files.

        * orbsvcs/tests/Notify/lib/Activation_Manager.cpp:
        * orbsvcs/tests/Notify/lib/Activation_Manager.h:
        * orbsvcs/tests/Notify/lib/Activation_Manager.idl:
          Manages start and shutdown of Periodic Supplier and consumers.

        * orbsvcs/tests/Notify/lib/Command.cpp:
        * orbsvcs/tests/Notify/lib/Command.h:
          Base class of Command objects in the test lib.

        * orbsvcs/tests/Notify/lib/Command_Builder.cpp:
        * orbsvcs/tests/Notify/lib/Command_Builder.h:
          A builder for creating command objects.

        * orbsvcs/tests/Notify/lib/Command_Factory.cpp:
        * orbsvcs/tests/Notify/lib/Command_Factory.h:
        * orbsvcs/tests/Notify/lib/Command_Factory_T.cpp:
        * orbsvcs/tests/Notify/lib/Command_Factory_T.h:
          Base classes for specifying Factory objects for command objects.

        * orbsvcs/tests/Notify/lib/Application_Command.cpp:
        * orbsvcs/tests/Notify/lib/Application_Command.h:
          Command object for specify Application specific commands.

        * orbsvcs/tests/Notify/lib/ConsumerAdmin_Command.cpp:
        * orbsvcs/tests/Notify/lib/ConsumerAdmin_Command.h:
          Command object for specify ConsumerAdmin specific commands.

        * orbsvcs/tests/Notify/lib/Driver_Base.h:
          A base interface for the driver that runs the owns the <main>
          entry point.

        * orbsvcs/tests/Notify/lib/Driver.cpp:
        * orbsvcs/tests/Notify/lib/Driver.h:
          A generic Driver implementation useful for most applications.

        * orbsvcs/tests/Notify/lib/EventChannel_Command.cpp:
        * orbsvcs/tests/Notify/lib/EventChannel_Command.h:
          Command object for specify ConsumerAdmin specific commands.

        * orbsvcs/tests/Notify/lib/Factories_Define.cpp:
        * orbsvcs/tests/Notify/lib/Factories_Define.h:
          Factory definitions are listed here.

        * orbsvcs/tests/Notify/lib/Filter_Command.cpp:
        * orbsvcs/tests/Notify/lib/Filter_Command.h:
          Command object for specify Filter specific commands.

        * orbsvcs/tests/Notify/lib/LookupManager.cpp:
        * orbsvcs/tests/Notify/lib/LookupManager.h:
          Objects of interest to command objects can be registered and
          resolved here.

        * orbsvcs/tests/Notify/lib/Makefile
        * orbsvcs/tests/Notify/RT_lib/Makefile
        * orbsvcs/tests/Notify/Test_Filter/Makefile
          Makefiles.

        * orbsvcs/tests/Notify/lib/Name.cpp:
        * orbsvcs/tests/Notify/lib/Name.h:
          Command names are listed here.

        * orbsvcs/tests/Notify/lib/Notify_StructuredPushConsumer.cpp:
        * orbsvcs/tests/Notify/lib/Notify_StructuredPushConsumer.h:
        * orbsvcs/tests/Notify/lib/Notify_StructuredPushSupplier.cpp:
        * orbsvcs/tests/Notify/lib/Notify_StructuredPushSupplier.h:
          Added a <connect> method that accepts a Proxy reference and its ID.

        * orbsvcs/tests/Notify/lib/Notify_Test_Client.cpp:
          Corrected return of nil interface pointers.

        * orbsvcs/tests/Notify/lib/Notify_lib.mpc:

        * orbsvcs/tests/Notify/lib/Options_Parser.cpp:
        * orbsvcs/tests/Notify/lib/Options_Parser.h:
          A Parser for parsing subscription and QoS options used by
          several command objects.

        * orbsvcs/tests/Notify/lib/Periodic_Consumer.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Consumer.h:
          A periodic consumer.

        * orbsvcs/tests/Notify/lib/Periodic_Consumer_Command.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Consumer_Command.h:
          Command object to specify Periodic Consumer specific commands.

        * orbsvcs/tests/Notify/lib/Periodic_Supplier.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Supplier.h:
          A periodic supplier.

        * orbsvcs/tests/Notify/lib/Periodic_Supplier_Command.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Supplier_Command.h:
          Command object to specify Periodic Supplier specific commands.

        * orbsvcs/tests/Notify/lib/Priority_Mapping.cpp:
        * orbsvcs/tests/Notify/lib/Priority_Mapping.h:
          Priority mapping that returns the same number.

        * orbsvcs/tests/Notify/lib/RT_Application_Command.cpp:
        * orbsvcs/tests/Notify/lib/RT_Application_Command.h:
          Command object to specify RT Application specific
          commands.

        * orbsvcs/tests/Notify/lib/RT_Factories_Define.cpp:
          List of RT specific command objects.

        * orbsvcs/tests/Notify/lib/RT_POA_Command.cpp:
        * orbsvcs/tests/Notify/lib/RT_POA_Command.h:
          Command object to specify RT POA specific commands.

        * orbsvcs/tests/Notify/lib/RT_Priority_Mapping.cpp:
        * orbsvcs/tests/Notify/lib/RT_Priority_Mapping.h:
          A priority mapper that delegates to RTCORBA.

        * orbsvcs/tests/Notify/lib/RT_Test_Filter.cpp:
        * orbsvcs/tests/Notify/lib/RT_Test_Filter.h:
          An implementation of Filter for verifying ThreadPools and lanes.

        * orbsvcs/tests/Notify/lib/RT_Test_FilterFactory.cpp:
        * orbsvcs/tests/Notify/lib/RT_Test_FilterFactory.h:
          An implementation of FilterFactory.

        * orbsvcs/tests/Notify/lib/StructuredEvent.cpp:
        * orbsvcs/tests/Notify/lib/StructuredEvent.h:
          A helper class for populating a Structured Event.

        * orbsvcs/tests/Notify/lib/SupplierAdmin_Command.cpp:
        * orbsvcs/tests/Notify/lib/SupplierAdmin_Command.h:
          A command object for SupplierAdmin specific commands.

        * orbsvcs/tests/Notify/lib/TAO_NotifyTests.dsp:
        * orbsvcs/tests/Notify/lib/TAO_NotifyTests_Static.dsp:
        * orbsvcs/tests/Notify/lib/TAO_RT_NotifyTests.dsp:
        * orbsvcs/tests/Notify/lib/TAO_RT_NotifyTests_Filter.dsp:
        * orbsvcs/tests/Notify/lib/TAO_RT_NotifyTests_Filter_Static.dsp:
        * orbsvcs/tests/Notify/lib/TAO_RT_NotifyTests_Static.dsp:
          VC6 projects.

        * orbsvcs/tests/Notify/lib/Task_Callback.h:
          A callback that is invoked when a periodic supplier/consumer
          ends.

        * orbsvcs/tests/Notify/lib/Task_Stats.cpp:
        * orbsvcs/tests/Notify/lib/Task_Stats.h:
        * orbsvcs/tests/Notify/lib/Task_Stats.inl:
          A class for collecting performance numbers.

        * orbsvcs/tests/Notify/lib/rt_notify_test_export.h:
        * orbsvcs/tests/Notify/lib/rt_test_filter_export.h:
          Export files.

        * orbsvcs/tests/Notify/Driver/main.cpp:
        * orbsvcs/tests/Notify/Driver/Driver.mpc:
        * orbsvcs/tests/Notify/Driver/Driver.dsp:
        * orbsvcs/tests/Notify/Driver/Driver_Static.dsp:
          Driver program for the scripting based tests.

        * orbsvcs/tests/Notify/Driver/ThreadPool/README:
          README
        * orbsvcs/tests/Notify/Driver/ThreadPool/supplier.conf:
          Supplier configuration.
        * orbsvcs/tests/Notify/Driver/ThreadPool/consumer.conf:
          Consumer configuration.
        * orbsvcs/tests/Notify/Driver/ThreadPool/notify.conf:
          RT Notification conf.
        * orbsvcs/tests/Notify/Driver/ThreadPool/run_test.pl:
          perl script to run the test.

        * orbsvcs/tests/Notify/Driver/Lanes/README:
          README
        * orbsvcs/tests/Notify/Driver/Lanes/supplier.conf:
          Supplier configuration.
        * orbsvcs/tests/Notify/Driver/Lanes/consumer.conf:
          Consumer configuration.
        * orbsvcs/tests/Notify/Driver/Lanes/notify.conf:
          RT Notification conf.
        * orbsvcs/tests/Notify/Driver/Lanes/run_test.pl:
          perl script to run the test.

Thu Apr  3 13:32:10 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Bug_1482_Regression/Reply_Handler.cpp: Cosmetic fix.

Thu Apr  3 13:13:24 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Muxed_TMS.cpp (connection_closed): Fix for bug 1482. Please
          refer to

          http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=1482

          for details. The patch does the following

          - Picks up the first element from the hash map and calls
            close_connection () on it.
          - Fetches the first node again to compare whether the one that
            was used to call closed_connection () is the same as the
            present begin node. If so, it is unbounded from the map and
            the process continues. If not, there is no need for unbinding
            and the iteration continues.

          Thanks to Carlos O'Ryan for this patch.

Thu Apr 03 12:41:20 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Bug_1482_Regression/Bug_1482_regression.dsw:
        * tests/Bug_1482_Regression/server.dsp:
        * tests/Bug_1482_Regression/client.dsp: Win32 project files for the
          test.

Thu Apr  3 11:20:03 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Bug_1482_Regression/Makefile.bor:
        * tests/Bug_1482_Regression/client.bor:
        * tests/Bug_1482_Regression/server.bor: Borland Makefiles for the
          new test.

        * tests/Makefile.bor:
        * tests/Makefile: Added the new file to our daily build.

Thu Apr  3 10:57:23 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Bug_1482_Regression: A regression test for bug

          http://deuce.doc.wustl.edu/bugzilla/show_bug.cgi?id=1482

          Please see the bugzilla entry for details.

Thu Apr 03 08:13:32 2003  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Collocation_Tests/Collocation.dsw:
        * tests/Collocation_Tests/Collocation_Test.dsp: Win32 project files
          for this test.

Wed Apr  2 23:05:26 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:
        * tao/Any_T.cpp:

          Fixed a build problem with Debian Linux.

Wed Apr  2 18:28:08 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:
        * tao/Any.h:
        * tao/Any_T.cpp:
        * tao/Any_T.h:
        * tao/Any_T.inl:
        * tao/NVList.cpp:
        * tao/Typecode.cpp:
        * tao/Typecode.h:
        * tao/DynamicInterface/Request.inl:

          Changes to fix runtime errors in the DII version of Param_Test.

        * tests/Param_Test/bd_string.cpp:

          Cosmetic changes.

Wed Apr  2 11:53:14 2003  Ossama Othman  <ossama@uci.edu>

        * orbsvcs/orbsvcs/Security.mpc:

          TAO's Security library does not depend on SSL.  Removed that
          requirement.

Wed Apr  2 08:47:57 2003  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/SSLIOP.mpc:
        * orbsvcs/orbsvcs/Security.mpc:

          Added requirements upon ssl, corba_messaging and interceptors for
          these projects.

Tue Apr  1 21:44:47 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Param_Test/helper.cpp (gen_wstring): Fix the evaluation of
          the upper bound for wchar value assignment so that ending up
          with a limit of 0 isn't possible.

Tue Apr  1 07:20:15 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/CodeSets/simple/client.cpp (main): Put ACE_HAS_WCHAR guard
          around wide character test.

Tue Apr  1 13:55:04 CEST 2003  Oliver Kellogg  <oliver.kellogg@sysde.eads.net>

        * orbsvcs/orbsvcs/ESF/ESF_Proxy_List.{h,i}:

          Use ACE_Unbounded_Set_Ex instead of ACE_Unbounded_Set.
          This fixes Bugzilla entries 1460, 1465.

Tue Apr 01 12:13:33 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CodeSets/libs/IBM1047_ISO8859/Makefile.bor: Added this
          missing BCB makefile to fix error on the scoreboard.

Tue Apr 01 08:03:03 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IOP_Codec.pidl:
        * tao/IOP_IOR.pidl:
          Fixed fuzz doxygen errors.

Mon Mar 31 19:27:19 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/RTCORBA/RTCORBAC.cpp:
        * tao/DynamicAny/DynamicAnyC.cpp:

          Added missing conditional explicit template instantiations.
          Thanks to Phil Mesnier <mesnier_p@ociweb.com> for pointing
          out the problem.

Mon Mar 31 17:11:23 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * ChangeLog:
        * tao/Codeset_Manager.cpp:
        * tao/Codeset_Manager.h:
        * tao/Invocation.cpp:
        * tao/default_resource.cpp:
        * tests/CodeSets/simple/client.cpp:
        * tests/CodeSets/simple/server.cpp: Errant TAB elimination.

Mon Mar 31 15:09:32 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Codeset_Manager.cpp:
        * tao/Codeset_Manager.h:
        * tao/Codeset_Translator_Factory.h:
        * tao/Codeset_Translator_Factory_T.h:
        * tao/Invocation.cpp:
        * tao/Transport.h:
        * tao/default_resource.cpp: Address the conserns raised by
          Bala. These include adding Doxygen documentation and making some
          calls more efficient by using inline code to check conditions
          before making calls.

        * tests/CodeSets/simple/client.cpp:
        * tests/CodeSets/simple/cs_test.conf:
        * tests/CodeSets/simple/svc.conf:
        * tests/CodeSets/simple/server.cpp:
        * tests/CodeSets/simple/simple.idl: Add a wstring test to the
          simple interface.

        * tests/Param_Test/helper.cpp: Limit the generation of random
          wchar values to only those values that fit in the output cdr's
          wchar_maxbytes number of bytes.

        * tests/Param_Test/svc.conf: Use a 2 byte codeset for the native
          wchar type.

Mon Mar 31 14:05:12 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils_T.cpp (get_is_multiple):

          Added ACE_UNUSED_ARG macros for the arguments in a second template
          method, overlooked in

          Mon Mar 31 10:01:13 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

Mon Mar 31 13:20:41 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/smart_proxy_cs.cpp: Fixed a
          typo. Thanks to Johnny for catching this.

Mon Mar 31 13:05:41 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_ci.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_cs.cpp:

          Fixed clashes between newly added generated code and existing
          code in AbstractBase, for interfaces that are abstract or
          inherit from both Object and AbstractBase.

Mon Mar 31 12:29:32 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tests/Makefile (DIRS): Updated  to include the new test.

        * tests/Collocation_Tests/Makefile.bor:
        * tests/Collocation_Tests/Collocated_Test.bor: Borland files.

Mon Mar 31 12:20:31 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tests/Collocation_Tests/Client_Task.cpp:
        * tests/Collocation_Tests/Client_Task.h:
        * tests/Collocation_Tests/Collocated_Test.cpp:
        * tests/Collocation_Tests/Hello.cpp:
        * tests/Collocation_Tests/Hello.h:
        * tests/Collocation_Tests/Makefile:
        * tests/Collocation_Tests/Server_Task.cpp:
        * tests/Collocation_Tests/Server_Task.h:
        * tests/Collocation_Tests/run_test.pl: Restructured the test to
          work under different values of -ORBCollocation and multiple
          ORB's. Thanks to Priyanka for helping me to trace the problem
          with the first version of this test.

        * tao/ORB_Core.cpp: Cosmetic fixes.


Mon Mar 31 12:03:51 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/IOP_IORC.{h,cpp,i}: Regenerated the files
        * tao/diffs/IOP_IOR.diff:
        * tao/diffs/IOP_Codec.diff: Added the diffs for future use.

Mon Mar 31 11:52:26 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/IOP_Codec.pidl: Fixed some comments
        * tao/IOP_CodecC.{h,cpp,i}: Regenerated the files since the one
          merged form the branch was apparently created from the IDL
          compiler when its internal state was busted.

Mon Mar 31 10:01:13 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils_T.cpp (set_is_multiple):

          Added ACE_UNUSED_ARG macros for the arguments, which are not used
          except in a specialization. BCB gives a warning if the arg names in
          the unspecialized version are just left out.

Mon Mar 31 14:18:23 2003  Simon McQueen  <sm@prismtechnologies.com>

        * orbsvcs/tests/Bug_1393_Regression/Bug_1393_Regression.mpc:
        * orbsvcs/tests/Bug_1395_Regression/Bug_1395_Regression.mpc:
          Added MPC files that should have been checked in originally.

        * orbsvcs/tests/Bug_1395_Regression/Bug_1395_Client.dsp:
        * orbsvcs/tests/Bug_1395_Regression/Bug_1395_Server.dsp:
          Hand patch correct path for release tao_idl.exe.

        * orbsvcs/tests/Security/MT_IIOP_SSL/server.dsp:
          Wrong release link library corrected.

        * performance-tests/Anyop/Anyop.dsp:
          Missing release custom build step added.

        * tests/CodeSets/simple/server.dsp:
        * tests/ORB_init/Portspan/portspan.dsp:
          Path in custom build depndecies fixed.

Mon Mar 31 06:57:16 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/smart_proxy_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/smart_proxy_cs.cpp: Fixed
          warning in BCB builds by generating the other version of
          CORBA::_stubobj (). Thanks to Johnny for reporting this.

Mon Mar 31 06:43:20 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/default_resource.h: Fixed a warning in our daily builds.

Sun Mar 30 21:44:17 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * performance-tests/Memory/IOR_Size/server.conf: Added the lazy
          strategy to the conf file.

Sun Mar 30 15:25:05 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * docs/tutorials/Quoter/Simple/Persistent/server.dsp: Added RTTI to
          some of he files in the above projects.

Sun Mar 30 15:21:18 2003  Balachandran Natarajan <bala@isis-server.isis.vanderbilt.edu>

        * examples/ior_corbaloc/ior_corbaloc_client.dsp:
        * examples/ior_corbaloc/ior_corbaloc_server.dsp:
        * examples/ior_corbaloc/ior_corbaname_client.dsp: Added RTTI to
          some of he files in the above projects.

Sun Mar 30 15:12:20 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * orbsvcs/tests/Bug_1395_Regression/Bug_1395_Client.dsp:
        * orbsvcs/tests/Bug_1395_Regression/Bug_1395_Server.dsp: Fixed the
          link path in the project files.

Sun Mar 30 15:03:47 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tests/Param_Test/server.dsp: Enabled RTTI on a few files to
          prevent warnings.

Sun Mar 30 20:30:04 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Makefile.bor: Added new IOP_CodecC and IOP_IORC files.

Sun Mar 30 11:38:20 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/IFR_BaseS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp: Fixed compile
          errors that came up from the removal of _objectkey () from
          CORBA::Object.

Sun Mar 30 11:29:13 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/TAO.dsp: Enabled RTTI in a couple of files.

Sun Mar 30 10:39:24 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * orbsvcs/orbsvcs/PortableGroup/POA_Hooks.cpp: Fixed a compile
          error.

Sun Mar 30 09:57:49 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/TAO.dsp: Fixed the dsp file which got messed up from the
          merge.

Sun Mar 30 09:17:09 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * Merged from the branch. This has the following

          - A new strategy for lazily evaluating IOR's
          - Some removal of code duplication.

        Wed Mar 26 14:32:40 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/ORB_Core.h:
        * tao/ORB_Core.cpp: Removed methods initialize_collocated_object
          () and create_collocated_object (). Added a new method
          is_collocation_enabled () which abstracts the common code in the
          above two methods.

        * tao/Object.cpp: Cosmetic fixes!

        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Object_Adapter.h: Added a new method
          get_collocated_servant (), which houses the common code in
          create_collocated_object () and initialize_collocated_object
          ().

        Tue Mar 25 18:16:05 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Profile.cpp: Missed a definition of a constructor during the
          merge.

        Tue Mar 25 17:14:22 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Domain/DomainS.cpp: Fixed compile errors.

        Tue Mar 25 16:11:39 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        Merged with main trunk!

        Mon Mar 24 13:57:09 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Object.h:
        * tao/Object.cpp (_is_local):
        * tao/Object.i: Cosmetic fixes like improved documentation, making
          most of the member variables private instead of protected
          etc. Changed the member initializations to suit the above
          cosmetic fix.

        * tao/PortableServer/Collocated_Object.cpp: Cosmetic fixes.

        Mon Mar 24 09:16:11 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Object.cpp: The return value from the call to
          initialize_object () is voided since not much can be done at
          that point if failures occur. We will do error checking later to
          throw the right exceptions.

        Fri Mar 21 17:07:11 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Adapter.h:
        * tao/Adapter.cpp: Added a method initialize_collocated_object ()
          in the TAO_Adapter_Factory and TAO_Adapter.

        * tao/ORB_Core.pp: Implemented the initialize_collocated_object ()
          which basically calls the
          TAO_Adapter_Registry::initialize_collocated_object ().

        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Object_Adapter.h: Added a new method
          initialize_collocated_object (). The implementation is pretty
          much similar to the create_collocated_object (), but instead of
          creating a new object, initializes an existing object.

        * tao/Object.h:
        * tao/Object.cpp:
        * tao/Object.i:

          Added the following methods

          - set_collocated_servant () which helps to initialize the
            CORBA::Object with TAO_Abstract_ServantBase

          - Accessors for orb_core () and IOP::IOR

          Added initialization of collocated objects in
          tao_initialize_object ().

          The above checkin has lots of duplicated code. Need to refactor
          them in the next round.

        Fri Mar 21 16:37:12 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * TAO_IDL/be/be_interface.cpp: Added a new argument to the
          constructor of stub objects. This change is made to make sure
          that stub objects have constructors similar to the
          CORBA::Object.

        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp: Added a new
          constructor as required by the latest changes to the
          CORBA::Object.

        * TAO_IDL/be/be_visitor_interface/interface_ci.cpp: Definition of
          the above constructor.

        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp: In
          _unchecked_narrow () we create a interface pointer object if the
          IOR is lazily evaluated by giving it the IOP::IOR and the
          ORB_Core.

        * TAO_IDL/be/be_visitor_operation/operation_cs.cpp: In the
          code generation for operation, initialize the object completely
          ie. evaluate the IOR completely and setup collocation if they
          have not been setup before (which is possible if the IOR's are
          evaluated lazily) proceeding with the operation.

        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_component/component_ci.cpp:
        * TAO_IDL/be/be_visitor_component/component_cs.cpp: Retrofit the
          above changes for components too.

        Wed Mar 19 16:05:11 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_component/component_cs.cpp:Added a check
          for is_evaluated () before creating a new CORBA::Object () in
          _unchecked_narrow (). If the call is_evaluated fails, we just
          reinterpret cat the CORBA::Object to the right type of object.

        Wed Mar 19 15:35:16 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp: Added a check
          for is_evaluated () along with _is_local () before creating a
          new CORBA::Object () in _unchecked_narrow ().

        Wed Mar 19 14:30:43 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Connector_Registry.cpp: Removed preconnect () completely
          from the code.

        * tao/ORB_Core.cpp: Implemented the initialize_object () for
          non-local and non-collocated cases.

        * tao/Object.h:
        * tao/Object.cpp (Object):
        * tao/Object.i: Made the following changes

          - Changed the constructor that took a const IOP::IOR_var to take
            a pointer to IOP::IOR. The pointer would be owned by
            CORBA::Object class and released at the end of its
            lifetime. It may be possible for us to release the memory
            owned by IOR_var if needed after the complete evaluation is
            done. At this point of time it is future work.

          - Added a new method is_evaluated () which returns the status of
            the evaluation done on the IOR.

          - Added a non-const version of _stubobj ().

          - In the main constructor we set the ORB_Core if it is null
            before calling the resource factory to create the refcount
            lock.

          - In the method is_nil_i () we now use the ORB_Core to access
            new definitions instead of going through the stub object. This
            would prevent accidental evaluation of IOR while calling
            is_nil () from the stubs or skeletons.

          - Completed implementation of tao_object_initialize () for
            non-local and non-collocated objects.

          With this checkin the Hello test and IORsize test work fine.


        Fri Mar  7 13:29:43 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Object.cpp:
        * tao/IOP_CodecC.h:
        * tao/IOP_IORC.h:
        * tao/Makefile.tao:
        * tao/IOPC.h: Fixed compile errors with g++.

        Fri Mar 07 09:49:35 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be_visitor_operation/thru_poa_proxy_impl_ss.cpp: Changed
          the generated code to call object_key () on the stub object
          within the CORBA::Object instead of calling _object_key ().

        Mon Mar 03 14:07:10 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        This is just a temporary checkin to test it on another box.

        * tao/IOP_Codec.pidl:
        * tao/IOP_IOR.pidl: New files.

        * tao/IOP.pidl: Split the IOP.pidl into two pidl files.

        * tao/IOPC.cpp
        * tao/IOPC.h:
        * tao/IOPC.i: New generated files.

        * tao/Buffering_Constraint_Policy.cpp: Initialized the base
          classes properly.

        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h: Incomplete changes to initialize the CORBA
          object.

        * tao/Object.cpp:
        * tao/Object.h:
        * tao/Object.i: Added partial support for delayed creation of
          CORBA::Objects. This included adding a new static method
          tao_object_initialize (). The extraction operator will extract
          out to a IOP::IOR if lazy evaluation is used. Removing
          _object_key () since it serves very less purpose in this object
          but for just accessing the Stub to get the key. The lazy
          evaulation would be happy with this scenario!

        * tao/Resource_Factory.cpp:
        * tao/Resource_Factory.h: Added the follwoing virtual methods
          - create_corba_object_lock (), which creates a SYNCH_MUTEX or a
            NULL_MUTEX as the case may be for CORBA::Object.
          - resource_usage_strategy (), a strategy for advising whether
            the resources are used actively or lazily within the ORB. This
            strategy is not useful through out the ORB right away. There
            is atleast one place where this might be used now and it is in
            CORBA::Object. The >> of a CORBA::Object from a TAO_InputCDR
            will use this strategy.

        * tao/default_resource.cpp:
        * tao/default_resource.h: Concrete implementations for the above
          pure virtual methods within the default factory.

        * tao/TAO.dsp: Added new files in to the project files.

        * tao/PortableServer/Collocated_Object.cpp:
        * tao/PortableServer/ImR_LocatorS.cpp:
        * tao/PortableServer/ImplRepoS.cpp:
        * tao/PortableServer/PolicyS.cpp:
        * tao/PortableServer/ThruPOA_Object_Proxy_Impl.cpp: Use the stub
          object on the CORBA::Object to access the ObjectKey instead of
          calling _object_key (). The  method _object_key () is going to
          be removed.

        Sat Feb 22 22:30:25 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * Merged with the main trunk.

        Thu Feb 20 12:48:16 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * ace/Connector.cpp: Added a const to regulate the size of the map
          that is being used inside this class. A size of 1024 seems too
          excessive for runtime memory.

        Thu Feb 20 12:29:17 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Profile.h:
        * tao/Profile.cpp:
        * tao/Profile.i: Moved the ObjectKey from the inherited classes
          to the base class. Added a new protected constructor which can
          be used by the inherited classes to initialize the ObjectKey
          properly. Also added a new method set_tagged_components () which
          is a helper method useful for creating Tagged_Components of an
          IOR from a CDR stream. Uninlined the constructor, destructor and
          the methods for refcounted memory management.

        * tao/IIOP_Profile.h:
        * tao/IIOP_Profile.cpp:
        * tao/Strategies/DIOP_Profile.h:
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Strategies/UIOP_Profile.h:
        * tao/Strategies/UIOP_Profile.cpp:
        * tao/Strategies/SHMIOP_Profile.h:
        * tao/Strategies/SHMIOP_Profile.cpp: Removed the ObjectKey from
          the following classes since it has now been moved to the base
          class.

          Used the protected constructor in the base class while base
          member initializations.

          Call the set_tagged_componets () to place a list of
          IIOPEndpoints in the Tagged_Components contained in the profile.

        Thu Feb 20 12:10:13 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Tagged_Components.h:
        * tao/Tagged_Components.cpp:
        * tao/Tagged_Components.i (TAO_Tagged_Components): Reverted the
          change "Wed Feb 12 15:40:46 2003  Balachandran Natarajan
          <bala@isis-server.isis.vanderbilt.edu>" since it was counter
          productive.

        * tao/ClientRequestInfo_i.cpp: Reverted the changes made to
          accomodatethe above change.

        Thu Feb 13 17:53:44 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/IIOP_Endpoint.h (TAO_IIOP_Endpoint):
        * tao/IIOP_Profile.h:
        * tao/Strategies/DIOP_Endpoint.h:
        * tao/Strategies/SHMIOP_Endpoint.h: Cosmetic changes like removing
          ORB.h  inclusion etc.

        Wed Feb 12 18:15:24 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * Merged in changes from the main trunk.

        Wed Feb 12 15:40:46 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Tagged_Components.h:
        * tao/Tagged_Components.cpp:
        * tao/Tagged_Components.i (TAO_Tagged_Components): Create
          IOP::MultipleComponentProfile lazily, instead of creating
          actively on the stack and increase the runtime footprint. If we
          do this we only pay when TAO gets something that TAO doesnt
          understand. This changed forced us to change the signature of
          the components (). Instead of returning a reference we now
          return a pointer to the underlying
          IOP::MultipleComponentProfile.

        Thu Feb  6 17:51:06 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Tagged_Components.cpp: Removed some vague print statements.
        * tao/Strategies/SHMIOP_Connector.cpp: Fixed some debug
          statements.

        Thu Feb  6 16:37:32 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Stub.cpp (ior_info_):
        * tao/Invocation.cpp:
        * tao/ClientRequestInfo_i.cpp: Added error checks to the last
          checkins.

        Sun Jan 26 23:50:17 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Profile.cpp:
        * tao/Profile.h:
        * tao/Profile.i: Added a new method create_tagged_profile
          (). Infact, this method existed in the derived classes returning
          a reference to the underlying IOP::TaggedProfile. Since the
          method existed in all the derived classes and was doing similar
          things it has now been moved to the base class with a slight
          signature change. This now returns a pointer to the underlying
          IOP:TaggedProfile. The signatuer change has been needed because
          of the change mentioned below.

          We will henceforth hold a pointer to the IOP::TaggedProfile
          instead of an instance in the Profile classes. We will create an
          instance when needed, (heard of lazy evaluation?). This change
          is forced on us due to the runtime memory consumed by
          IOR's. Holding a pointer instead of the actual object instance
          gets us approximately 24 bytes per IOR on Linux on a 32 bit
          processor.

        * tao/IIOP_Profile.h:
        * tao/IIOP_Profile.cpp:
        * tao/Strategies/UIOP_Profile.cpp:
        * tao/Strategies/UIOP_Profile.h:
        * tao/Strategies/SHMIOP_Profile.cpp:
        * tao/Strategies/SHMIOP_Profile.h:
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Strategies/DIOP_Profile.h: Removed create_tagged_profile ()
          and the instance of IOP::TaggedProfile.

        * tao/Invocation.cpp:
        * tao/Stub.cpp:
        * tao/ClientRequestInfo_i.cpp: Changes forced on us due to the
          signature change above.

        Sun Jan 26 21:41:26 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * Mering with the main trunk and moving to a new branch.

        Sun Jan 26 21:16:14 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * docs/Options.html: documented the new option.

        Mon Jan 20 09:00:55 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        The aim of this checkin is to provide an option to configure the
        size of the dispatcher table in the Muxed_Transport_Strategy.

        * tao/Client_Strategy_Factory.cpp:
        * tao/Client_Strategy_Factory.h: Added a new virtual method to
          fetch the dispatcher table size

        * tao/default_client.cpp:
        * tao/default_client.h: Concrete implementation for the new
          virtual method. The default value for the dispatcher table size
          is set to TAO_RD_TABLE_SIZE which is defined in orbconf.h. The
          table size can also be changed at runtime using a -ORB option
          which is explained below.

          We now have an option called -ORBReplyDispatcherTableSize which
          will parse and set a user provided value as the dispatcher table
          size. This gives extra flexibility to the user.

        * tao/orbconf.h: Added TAO_RD_TABLE_SIZE and set the value to be
          16.

        * tao/Muxed_TMS.cpp:
        * tao/Muxed_TMS.h: All the above changes were motivated to reduce
          the size of the hash table that this class creates increasing
          the run-time footprint. The default value of 1024 was probably
          an over kill for this class.


Sun Mar 30 07:39:25 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * performance-tests/Cubit/TAO/IDL-Cubit/Makefile: Updated
          dependencies.

Sat Mar 29 21:59:06 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/orbconf.h: Commented out portions that were connected to
          TAO_HAS_AMI_POLLER == 1. The reason for this are multi-fold. For
          one, we dont support the polling model and this #define only
          helped to confuse things. Secondly, no one knows how to use it
          properly and if not used the right way created
          problems. Finally, we want to be moving away from guarding code
          using #define stuff.

        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.h:
        * tao/Messaging/Asynch_Timeout_Handler.cpp:
        * tao/Messaging/Asynch_Timeout_Handler.h:
        * tao/Messaging/Twoway_Asynch_Invocation.cpp:
        * tao/Messaging/Twoway_Asynch_Invocation.h:
        * tao/Messaging/Twoway_Asynch_Invocation.i: Removed the usage of
          TAO_HAS_AMI_POLLER == 1 from all these files. I dont think we
          understand well how the poller model works and whether it is
          possible to reuse these classes or not. Time for these to go
          away.

Sat Mar 29 20:04:20 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * orbsvcs/tests/Bug_1395_Regression/Bug_1395_Client.dsp:
        * orbsvcs/tests/Bug_1395_Regression/Bug_1395_Server.dsp:
        * orbsvcs/tests/Bug_1395_Regression/Bug_1395_Regression.dsp: Fixed
          the release and debug configuratoins.

Sat Mar 29 17:24:13 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * orbsvcs/tests/Security/Big_Request/Makefile: Updated
          dependencies.

Sat Mar 29 17:16:48 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * utils/*/Makefile: Updated dependencies.

Sat Mar 29 17:10:44 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * docs/tutorials/Quoter/*/Makefile: Updated dependencies.

Sat Mar 29 16:48:45 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * orbsvcs/examples/*/Makefile:
        * orbsvcs/IFR_Service/Makefile: Updated dependencies.

Sat Mar 29 16:30:29 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Leader_Follower.cpp:
        * tao/Wait_On_Reactor.cpp:
        * tao/Wait_On_Read.cpp: Account for the time spent in the wait ()
          calls by placing the ACE_Countdown_Time at the right
          places. These changes were influenced by the bug report sent by
          Bertin Colpron <BColpron@interstarinc.com>.

Fri Mar 28 13:31:41 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Transport.h (TAO_Transport):
        * tao/Codeset_Manager.cpp:
        * tao/Codeset_Manager.h:
        * tao/Codeset_Translator_Factory.h:
        * tao/Codeset_Translator_Factory_T.h:
        * tao/Invocation.cpp:
        * tao/ORB_Core.cpp: Left //@@Phil comments for Phil Mesnier. The
          objective is to discuss and provide feedback on the translator
          stuff.

Fri Mar 28 12:16:01 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * docs/tutorials/Quoter/AMI/client.dsp:
        * docs/tutorials/Quoter/AMI/server.dsp:
        * docs/tutorials/Quoter/Event_Service/client.dsp:
        * docs/tutorials/Quoter/Event_Service/server.dsp:
        * docs/tutorials/Quoter/Naming_Service/client.dsp:
        * docs/tutorials/Quoter/Naming_Service/server.dsp:
        * docs/tutorials/Quoter/On_Demand_Activation/server.dsp:
        * docs/tutorials/Quoter/RT_Event_Service/client.dsp:
        * docs/tutorials/Quoter/RT_Event_Service/server.dsp:
        * docs/tutorials/Quoter/Simple/Client/client.dsp:
        * docs/tutorials/Quoter/Simple/Impl-Repo/server.dsp:
        * docs/tutorials/Quoter/Simple/ImprovedServer/improvedserver.dsp:
        * docs/tutorials/Quoter/Simple/Server/server.dsp:
        * examples/AMH/Sink_Server/client.dsp:
        * examples/AMH/Sink_Server/mt_server.dsp:
        * examples/AMH/Sink_Server/st_server.dsp:
        * examples/Buffered_AMI/client.dsp:
        * examples/Buffered_AMI/server.dsp:
        * examples/Logging/Logging_Service.dsp:
        * examples/Logging/Logging_Test.dsp:
        * examples/PluggableUDP/tests/Basic/client.dsp:
        * examples/PluggableUDP/tests/Basic/server.dsp:
        * examples/PluggableUDP/tests/Performance/client.dsp:
        * examples/PluggableUDP/tests/Performance/server.dsp:
        * examples/PluggableUDP/tests/SimplePerformance/client.dsp:
        * examples/PluggableUDP/tests/SimplePerformance/server.dsp:
        * examples/RTCORBA/Activity/activity.dsp:
        * orbsvcs/tests/InterfaceRepo/InterfaceRepo.dsw:
        * orbsvcs/tests/InterfaceRepo/Application_Test/Application_Test_server.dsp:
        * orbsvcs/tests/Security/Callback/client.dsp:
        * orbsvcs/tests/Security/Callback/server.dsp:
        * orbsvcs/tests/Security/Crash_Test/Crash_Test.dsw:
        * orbsvcs/tests/Security/Crash_Test/Crash_Test_Client.dsp:
        * orbsvcs/tests/Security/Crash_Test/Crash_Test_Server.dsp:
        * orbsvcs/tests/Security/MT_IIOP_SSL/client.dsp:
        * orbsvcs/tests/Security/MT_IIOP_SSL/server.dsp:
        * tests/AMH_Exceptions/client.dsp:
        * tests/AMH_Exceptions/server.dsp:
        * tests/AMH_Oneway/client.dsp:
        * tests/AMH_Oneway/server.dsp:
        * tests/Connect_Strategy_Test/client.dsp:
        * tests/Connect_Strategy_Test/server.dsp:
        * tests/Connection_Timeout/client.dsp:
        * tests/InterOp-Naming/client.dsp:
        * tests/MProfile_Connection_Timeout/client.dsp:
        * tests/MProfile_Connection_Timeout/server.dsp:
        * tests/MT_BiDir/client.dsp:
        * tests/MT_BiDir/server.dsp:
        * tests/Muxed_GIOP_Versions/client.dsp:
        * tests/Muxed_GIOP_Versions/server.dsp:
        * tests/Nested_Upcall_Crash/client.dsp:
        * tests/Nested_Upcall_Crash/scavenger.dsp:
        * tests/Nested_Upcall_Crash/server.dsp:
        * tests/No_Server_MT_Connect_Test/client.dsp:
        * tests/No_Server_MT_Connect_Test/server.dsp:
        * tests/ORB_shutdown/server.dsp:
        * tests/Objref_Sequence_Test/client.dsp:
        * tests/Objref_Sequence_Test/server.dsp:
        * tests/Oneway_Buffering/admin.dsp:
        * tests/Oneway_Buffering/client.dsp:
        * tests/Oneway_Buffering/server.dsp:
        * tests/Policies/Manipulation.dsp:
        * tests/Portable_Interceptors/AMI/client.dsp:
        * tests/Portable_Interceptors/AMI/server.dsp:
        * tests/Portable_Interceptors/Benchmark/client.dsp:
        * tests/Portable_Interceptors/Benchmark/server.dsp:
        * tests/Portable_Interceptors/Dynamic/client.dsp:
        * tests/Portable_Interceptors/Dynamic/server.dsp:
        * tests/Portable_Interceptors/ForwardRequest/client.dsp:
        * tests/Portable_Interceptors/ForwardRequest/server.dsp:
        * tests/Portable_Interceptors/IORInterceptor/client.dsp:
        * tests/Portable_Interceptors/IORInterceptor/server.dsp:
        * tests/Portable_Interceptors/PICurrent/client.dsp:
        * tests/Portable_Interceptors/PICurrent/server.dsp:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/client.dsp:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/server.dsp:
        * tests/Portable_Interceptors/Service_Context_Manipulation/client.dsp:
        * tests/Portable_Interceptors/Service_Context_Manipulation/server.dsp:
        * tests/RTCORBA/Banded_Connections/client.dsp:
        * tests/RTCORBA/Banded_Connections/server.dsp:
        * tests/RTCORBA/Client_Propagated/client.dsp:
        * tests/RTCORBA/Client_Propagated/server.dsp:
        * tests/RTCORBA/Client_Protocol/client.dsp:
        * tests/RTCORBA/Client_Protocol/server.dsp:
        * tests/RTCORBA/Collocation/Collocation.dsp:
        * tests/RTCORBA/Explicit_Binding/client.dsp:
        * tests/RTCORBA/Explicit_Binding/server.dsp:
        * tests/RTCORBA/Linear_Priority/client.dsp:
        * tests/RTCORBA/Linear_Priority/server.dsp:
        * tests/RTCORBA/MT_Client_Protocol_Priority/client.dsp:
        * tests/RTCORBA/MT_Client_Protocol_Priority/server.dsp:
        * tests/RTCORBA/Persistent_IOR/client.dsp:
        * tests/RTCORBA/Persistent_IOR/server.dsp:
        * tests/RTCORBA/Policy_Combinations/client.dsp:
        * tests/RTCORBA/Policy_Combinations/server.dsp:
        * tests/RTCORBA/Private_Connection/client.dsp:
        * tests/RTCORBA/Private_Connection/server.dsp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/client.dsp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/server.dsp:
        * tests/RTCORBA/Server_Declared/client.dsp:
        * tests/RTCORBA/Server_Declared/server.dsp:
        * tests/RTCORBA/Server_Protocol/client.dsp:
        * tests/RTCORBA/Server_Protocol/server.dsp:
        * tests/RTCORBA/Thread_Pool/client.dsp:
        * tests/RTCORBA/Thread_Pool/server.dsp:
        * tests/Smart_Proxies/client.dsp:
        * tests/Smart_Proxies/server.dsp:
        * tests/Smart_Proxies/Benchmark/client.dsp:
        * tests/Smart_Proxies/Benchmark/server.dsp:
        * tests/Stack_Recursion/client.dsp:
        * tests/Stack_Recursion/server.dsp:
        * tests/Strategies/client.dsp:
        * tests/Strategies/server.dsp:
        * tests/Two_Objects/client.dsp:
        * tests/Two_Objects/server.dsp:

          Turned on RTTI for the stub source files in the above
          projects, and updated the settings in a couple of
          workspaces.

Fri Mar 28 11:34:31 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Object.h:
        * tao/Object.cpp: Added a new static call marshal () that takes in
          a object reference, and a CDR stream into which the reference
          should be marshalled. This call checks for null object
          references and then calls the virtual marshal () call on the
          Object.

        * TAO_IDL/ be/be_visitor_field/cdr_op_ci.cpp: The code for
          marshalling in object references is busted. We used to call
          CORBA::Object::marshal () (the virtual call) on the object
          reference. But if the reference passed in is null we
          crash. Please see the daily builds (esp. the Param_Test) for
          what I am talking about. The code has now been changed to call
          the static method on CORBA::Object ().

Fri Mar 28 10:04:22 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ci.cpp:

          Used ACE_NESTED_CLASS macro for base class constructor
          initialization for abstract interfaces. Also removed generation
          of 'to_object' template specialization helper for abstract
          interfaces. For these cases, we want to return failure (boolean
          0), which is what the unspecialized version does.

        * tests/Abstract_Interface/Abstract_Interface_Client.dsp:
        * tests/Abstract_Interface/Abstract_Interface_Server.dsp:

          Turned on RTTI for these projects.

Fri Mar 28 09:23:43 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService.bor:

          Fixed typo from previous checkin.

        * orbsvcs/orbsvcs/IFRService.dsp:

          Removed a resource .asp file that was added by mistake.

Fri Mar 28 14:24:11 2003  Simon McQueen  <sm@prismtechnologies.com>

        * orbsvcs/tests/InterfaceRepo/Latency_Test/Latency Test.dsp:
          Renamed to Latency_Test.dsp. Autobuild doesn't seem to like
          spaces.

Fri Mar 28 12:35:51 2003  Simon McQueen  <sm@prismtechnologies.com>

        * tests/ORB_init/Portspan/portspan.dsp:
          Fixed duff relative path to tao_idl (release and debug).

        * tests/CodeSets/simple/client.dsp:
        * tests/CodeSets/simple/server.dsp: Fixed dependencies to prevent
          warnings. Added custom build step for Release configurations.

Fri Mar 28 11:27:12 2003  Simon McQueen  <sm@prismtechnologies.com>

        * orbsvcs/performance-tests/RTEvent/lib/Auto_Disconnect.h:
        * orbsvcs/performance-tests/RTEvent/lib/Servant_var.h:
          Fix for compilation with MS Visual C++ 6.

Thu Mar 27 18:30:41 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.h:

          Added declarations in the header file for template specializations
          in the source file, and moved the necessary file include to the
          header file so the declarations will be recognized.

        * orbsvcs/orbsvcs/IFRService/PrimaryKeyDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/PrimaryKeyDef_i.h:

          Removed these files that didn't get removed somehow when the
          dyn_corba branch was merged.

        * orbsvcs/orbsvcs/IFRService.bor:

          Updated the makefile, another thing that was overlooked when the
          branch was merged.


Thu Mar 27 14:25:31 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:

          Added explicit cast of a literal 0xffffffff to CORBA::Long, to prevent
          BCB from trying to promote it to a float or double. Thanks to
          Johnny Willemsen <jwillemsen@rememdy.nl> for reporting the problem.

Thu Mar 27 09:28:09 2003  Douglas C. Schmidt  <schmidt@macarena.cs.wustl.edu>

        * orbsvcs/orbsvcs/CosEvent/CEC_Event_Loader.cpp (create_object): Removed
          the stray ':' after the 'r' option.  Thanks to Sean Ogle
          <sean.ogle@syslog.at> for reporting this.

Thu Mar 27 12:13:21 2003  Edward Scott  <eas@prismtechnologies.com>

        * orbsvcs/tests/ior_corbaname/Makefile:
        * orbsvcs/tests/Trading/Makefile:
        * orbsvcs/tests/Simple_Naming/Makefile:
        * orbsvcs/tests/Security/SecurityLevel1/Makefile:
        * orbsvcs/tests/Security/Secure_Invocation/Makefile:
        * orbsvcs/tests/Security/MT_SSLIOP/Makefile:
        * orbsvcs/tests/Security/MT_IIOP_SSL/Makefile:
        * orbsvcs/tests/Security/Crash_Test/Makefile:
        * orbsvcs/tests/AVStreams/Latency/Makefile:
        * orbsvcs/tests/AVStreams/Full_Profile/Makefile:
        * orbsvcs/tests/AVStreams/Component_Switching/Makefile:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/Makefile:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Makefile:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/Makefile:

          Updated dependencies.

Wed Mar 26 16:40:58 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/IORManipulation/IORManipulation.cpp: Fixed a leak that
          arose when we tried to use CORBA::String_var::_retn () to
          ORB_Core::create_stub () call. Thanks to Sebastien Lalonde
          <SLalonde@interstarinc.com> for reporting this.

Wed Mar 26 18:14:21 2003  Edward Scott  <eas@prismtechnologies.com>

        * orbsvcs/PSS/Makefile.parser:
        * orbsvcs/PSS/Makefile.datastore:
        * orbsvcs/PSS/Makefile:
        * orbsvcs/tests/tests_svc_loader/Makefile:
        * orbsvcs/tests/Time/Makefile:
        * orbsvcs/tests/Security/Callback/Makefile:
        * orbsvcs/tests/Security/Big_Request/Makefile:
        * orbsvcs/tests/Sched_Conf/Makefile:
        * orbsvcs/tests/Sched/Makefile:
        * orbsvcs/tests/Property/Makefile:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/Makefile:
        * orbsvcs/tests/Notify/performance-tests/Filter/Makefile:
        * orbsvcs/tests/Notify/lib/Makefile:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Makefile:
        * orbsvcs/tests/Notify/Structured_Filter/Makefile:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Makefile:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Makefile:
        * orbsvcs/tests/Notify/Ordering/Makefile:
        * orbsvcs/tests/Notify/MT_Dispatching/Makefile:
        * orbsvcs/tests/Notify/Discarding/Makefile:
        * orbsvcs/tests/Notify/Blocking/Makefile:
        * orbsvcs/tests/Notify/Basic/Makefile:
        * orbsvcs/tests/Miop/McastHello/Makefile:
        * orbsvcs/tests/Log/Basic_Log_Test/Makefile:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Makefile:
        * orbsvcs/tests/Interoperable_Naming/Makefile:
        * orbsvcs/tests/InterfaceRepo/Persistence_Test/Makefile:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/Makefile:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Makefile:
        * orbsvcs/tests/InterfaceRepo/Application_Test/Makefile:
        * orbsvcs/tests/ImplRepo/NameService/Makefile:
        * orbsvcs/tests/ImplRepo/Makefile:
        * orbsvcs/tests/FaultTolerance/IOGRManipulation/Makefile:
        * orbsvcs/tests/FaultTolerance/IOGR/Makefile:
        * orbsvcs/tests/Event/lib/Makefile:
        * orbsvcs/tests/Event/Performance/Makefile:
        * orbsvcs/tests/Event/Basic/Makefile:
        * orbsvcs/tests/EC_Throughput/Makefile:
        * orbsvcs/tests/EC_Multiple/Makefile:
        * orbsvcs/tests/EC_Mcast/Makefile:
        * orbsvcs/tests/EC_MT_Mcast/Makefile:
        * orbsvcs/tests/EC_Custom_Marshal/Makefile:
        * orbsvcs/tests/CosEvent/lib/Makefile:
        * orbsvcs/tests/CosEvent/Basic/Makefile:
        * orbsvcs/tests/Concurrency/Makefile:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Makefile:
        * orbsvcs/tests/AVStreams/Simple_Two_Stage/Makefile:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/Makefile:
        * orbsvcs/tests/AVStreams/Pluggable/Makefile:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/Makefile:
        * orbsvcs/tests/AVStreams/Multicast/Makefile:

          Updated dependencies.

Wed Mar 26 14:40:55 2003  Simon McQueen  <sm@prismtechnologies.com>

        * utils/catior/catior.cpp (cat_codeset_info): Workaround for MS
          VC++ for loop scoping problem.

Tue Mar 25 20:55:15 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Codeset_Manager.cpp:
        * tao/Codeset_Manager.h:
        * tao/Resource_Factory.cpp:
        * tao/Resource_Factory.h:
        * tao/Transport.cpp:
        * tao/Transport.h:
        * tao/Transport.inl:
        * tao/default_resource.cpp:
        * tao/default_resource.h:

          Moved ownership of the Codeset Translator Factories from the
          resource factory to the Codeset Manager. This eliminates a
          dependancy on the ORB Core from the critical path.

          Fixed the encoding of codeset service contexts so the byte order
          is included in the encapsulation.

          Modified the interaction with the CDR classes to enable the
          configuration of the maximum number of bytes to use when
          encoding wchar data. Thanks to Chen Jian <jchen@huawei.com> for
          identifying this need.

Tue Mar 25 16:28:17 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_array/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/array_ci.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_ci.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/structure_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ci.cpp:

          Moved generation of Any template specializations
          to the inline file.

        * tao/Messaging/MessagingC.cpp:
        * tao/Messaging/MessagingC.i:
        * tao/Messaging/Messaging_No_ImplC.cpp:
        * tao/Messaging/Messaging_No_ImplC.i:
        * tao/Messaging/Messaging_RT_PolicyC.cpp:
        * tao/Messaging/Messaging_RT_PolicyC.i:
        * tao/Messaging/Messaging_SyncScope_PolicyC.cpp:
        * tao/Messaging/Messaging_SyncScope_PolicyC.i:
        * tao/PortableServer/PortableServerC.cpp:
        * tao/PortableServer/PortableServerC.h
        * tao/PortableServer/PortableServerC.i:
        * tao/RTCORBA/RTCORBAC.cpp:
        * tao/RTCORBA/RTCORBAC.i:

          Fixed hand-crafted files corresponding to the changes
          to the IDL compiler above.

        * tao/PortableServer/TAO_PortableServer.dsp:

          Added missing files to project.

Tue Mar 25 14:06:58 2003  Ossama Othman  <ossama@uci.edu>

        * tao/ClientRequestInfo.h (sync_scope):
        * tao/ClientRequestInfo.cpp (sync_scope):
        * tao/ClientRequestInfo_i.h (sync_scope):
        * tao/ClientRequestInfo_i.cpp (sync_scope):
        * tao/PortableServer/ServerRequestInfo.h (sync_scope):
        * tao/PortableServer/ServerRequestInfo.cpp (sync_scope):

          Do not protect this method with a "TAO_HAS_CORBA_MESSAGING"
          preprocessor block.  Doing so is no longer necessary since it is
          always possible to retrieve the SyncScope oneway setting.  This
          problem only occurred recently, i.e. after the
          PortableInterceptorC.* stub was regenerated.  Fixes builds where
          CORBA messaging support is disabled.

Tue Mar 25 10:54:57 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/IORManipulation/IORC.h:

          Added include of Any_T.h needed for builds with inlining
          enabled.

Mon Mar 24 18:15:51 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
        * tao/PortableServer/PortableServerC.cpp:

          Fixed code for generating CDR operator for a typedef'd
          sequence whose element is itself a typedef'd sequence.
          The IDL compiler source code that handles this case was
          inadvertently removed in an earlier checkin. Also fixed
          the CDR operator in PortableServer where the problem
          was noticed.

Mon Mar 24 17:36:44 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ci.cpp:

        * tao/IFR_Client/IFR_BaseC.cpp:
        * tao/IFR_Client/IFR_BaseC.i:
        * tao/IFR_Client/IFR_BasicC.cpp:
        * tao/IFR_Client/IFR_BasicC.i:
        * tao/IFR_Client/IFR_ComponentsC.cpp:
        * tao/IFR_Client/IFR_ComponentsC.i:
        * tao/IFR_Client/IFR_ExtendedC.cpp:
        * tao/IFR_Client/IFR_ExtendedC.i:
        * tao/IORManipulation/IORC.cpp:
        * tao/IORManipulation/IORC.i:
        * tao/Messaging/TAO_ExtC.cpp:
        * tao/Messaging/TAO_ExtC.i:
        * tao/PortableServer/Default_ORTC.i:
        * tao/PortableServer/ImR_LocatorC.cpp:
        * tao/PortableServer/ImR_LocatorC.i:
        * tao/PortableServer/ImplRepoC.i:
        * tao/RTCORBA/RTCORBAC.cpp:
        * tao/RTCORBA/RTCORBAC.i:
        * tao/RTPortableServer/RTPortableServerC.cpp:
        * tao/RTPortableServer/RTPortableServerC.i:
        * tao/TypeCodeFactory/TypeCodeFactoryC.cpp:
        * tao/TypeCodeFactory/TypeCodeFactoryC.inl:

          Moved generation of Any template specializations for
          to_object, to_value, to_abstract_base, marshal_value,
          and demarshal_value to the inline file, to enable
          BCB to pick them up before they're used in the .cpp file.

        * tao/IFR_Client/IFR_BaseC.h:
        * tao/PortableServer/ImplRepoC.h:

          Added Any_T.h to the included files so the above
          changes can be recognized when aggressively inlining.

        * tao/PortableServer/POA.cpp:

          Added missing .in() to an ObjectReferenceTemplate_var
          argument. Thanks to Johnny Willemsen
          <jwillemsen@remedy.nl> for tracking this down.

        * tests/Smart_Proxies/Collocation/Coll_Test_Stubs.dsp:

          Turned on RTTI for the generated stub file.

Mon Mar 24 13:12:16 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/Connection_Handler.cpp (close_connection_eh): Call the
          state_changed () on the LF_CH_Event with the lock held. If not,
          we could potentially run into a race between two threads trying
          to change states from
          TAO_Connection_Handler::close_connection_eh () and
          TAO_Transport::close_connection_shared (). The lock within
          state_changed () is not sufficient to prevent the race. Thanks
          to Jia Wan <jiawan@huawei.com> for pointing this out.

Mon Mar 24 13:07:44 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any_T.cpp:

          Added ace/CORBA_macros.h to the list of included files, for
          the benfit of BCB.

Sun Mar 23 12:30:36 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Services.cpp:
        * tao/Services.h:
        * tao/Services.i:

          Removed these files from the respository, since they are
          replaced by the corresponding ServicesC.* file. Apparently
          during a recent branch merge the removal of the above files was
          overlooked or otherwise derailed.

        * tao/Makefile.bor:

          Updated the Borland makefile to reflect the change above. Thanks
          to Johnny Willemsen <jwillemsen@remedy.nl> for reporting the
          problem.

Sat Mar 22 19:52:58 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tests/Collocation_Tests: New test for Collocation. This test has
          the capability to test collocation in all possible
          collocation configurations. This checkin is just a dummy checkin
          since the test actually fails badly with TAO.

Sat Mar 22 16:47:39 2003  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/ORBEndpoint.html: Updated obsolete SHMIOP endpoint
          information, and added more information when using shmiop with
          interoperable naming service.  Thanks to Andreas Koehler
          <Andreas.Koehler@sysde.eads.net> for reporting the problem.

Sat Mar 22 15:51:14 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/CurrentC.cpp:
        * tao/CurrentC.h:
        * tao/CurrentC.i:
        * tao/DomainC.cpp:
        * tao/DomainC.i:
        * tao/IOPC.cpp:
        * tao/IOPC.i:
        * tao/ObjectReferenceTemplateC.cpp:
        * tao/ObjectReferenceTemplateC.h:
        * tao/ObjectReferenceTemplateC.i:
        * tao/PolicyC.cpp:
        * tao/PolicyC.i:
        * tao/PortableInterceptorC.cpp:
        * tao/PortableInterceptorC.i:
        * tao/TAOC.cpp:
        * tao/TAOC.i:

          Moved Any template method specializations to
          the corresponding inline files, to avoid a
          compile problem with BCB.

Sat Mar 22 12:55:16 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:

          Changed loading of constant into the repository to be aware
          if the constant's type is a typedef.

Sat Mar 22 07:41:59 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * performance-tests/Cubit/TAO/Makefile: Add .NOTPARALLEL to the
          makefile to give the IDL build a chance to complete before its
          dependants try and fail to compile.

Fri Mar 21 15:43:32 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Collocation/Makefile: Add .NOTPARALLEL to the makefile to
          prevent the IDL compiler from being run simultaneously and
          errantly trashing the DiamondS.cpp file.

Fri Mar 21 15:27:51 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/PortableServer/ImplRepoC.cpp:

          Added another missing explicit template instantiation.

Fri Mar 21 13:22:06 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:

          Moved the template specializations to the top of the file. This
          eliminates a problem with BCB seeing the specializations whe
          compiling the Any operators later in the file. Thanks to
          Johnny Willemsen <jwillemsen@rememdy.nl> for suggesting the fix.

Fri Mar 21 11:41:10 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Policy_ForwardC.cpp:

          Added another missing explicit template instantiation.

        * tests/AMH_Exceptions/client.dsp:

          Added generated file to the project.

        * tests/Param_Test/anyop.cpp:

          Added missing .inout() to a _var reference.

Thu Mar 20 18:29:10 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/PortableServer/ImplRepoC.cpp:
        * tao/PortableServer/PortableServerC.cpp:

          Added more missing explicit template instantiations associated
          with Any operators for sequences. Thanks to Phil Mesnier
          <mesnier_p@ociweb.com> for pointing out the ones I missed.

Thu Mar 20 12:28:44 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:

          Removed an unused specialization and explicti instantiation.

Thu Mar 20 10:28:06 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:
        * tao/DomainC.cpp:
        * tao/DynamicC.cpp:
        * tao/IIOPC.cpp:
        * tao/IOPC.cpp:
        * tao/Makefile.tao
        * tao/Messaging_PolicyValueC.cpp:
        * tao/ObjectReferenceTemplateC.cpp:
        * tao/OctetSeqC.cpp:
        * tao/Policy_ForwardC.cpp:
        * tao/StringSeqC.cpp:

          Added missing explicit instantiations associated
          with Any operators for sequences.

Wed Mar 19 21:19:27 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:

          Fixed cut and paste error in the checkin below.

Wed Mar 19 18:04:26 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:

          Added no-op specialization for
          Any_Dual_Impl_T<CORBA::Exception>::extract(). A working version is
          not needed, since the spec requires only insertion operators for
          CORBA::Exception, but the no-op specialization prevents an error
          in compilers that require explicit template instantiationm, since
          the unspecialized version calls the constructor, and
          CORBA::Exception is (and is required to be) an abstract class.

Wed Mar 19 12:52:22 2003  Ossama Othman  <ossama@uci.edu>

        * tao/Exception.cpp (operator<<=, operator>>=):

          Once again placed the definitions of these Any insertion and
          extraction operators in the CORBA namespace.  The fix was
          reverted in the latest Any implementation changes.  Fixes
          "unresolved symbol" link-time errors when using these
          operators.

Wed Mar 19 13:27:09 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/CodeSets/simple/Makefile: Fix the dependancies so that the
          idl compiler isn't run twice in parallel jobs, thus corrupting
          the generated Skeleton file.

Tue Mar 18 18:00:47 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/fe_declarator.cpp:

          Added a check for 0 prefix before doing a string compare.

Tue Mar 18 17:48:15 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * performace-tests/Latency/DSI/Roundtrip.cpp:

          Changed the signature of calls to the Any constructor.

Tue Mar 18 17:40:40 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.h:

          Removed declarations of two unused, unimplemented methods.

        * tao/Any_T.cpp:

          Added calls to assign_translator() in the extract() method,
          after the attempt at typed extraction fails, for some
          additional Any_*_Impl template types - types which could
          contain a (w)string or (w)char nested at some level.

Tue Mar 18 15:31:06 2003  Ossama Othman  <ossama@uci.edu>

        * orbsvcs/examples/ORT/ObjectReferenceFactory.idl:

          New file containing this example's concrete
          ObjectReferenceFactory valuetype.  The example incorrectly
          attempted to use an abstract valuetype.

        * orbsvcs/examples/ORT/Gateway_ObjRef_Factory.h:

          Inherit from the new concrete ObjectReferenceFactory valuetype
          instead of the PortableInterceptor::ObjectReferenceFactory
          abstract valuetype.  Fixes compile-time errors related to
          instantiation of an abstract class.

          Removed all useless includes.

        * orbsvcs/examples/ORT/Server_IORInterceptor.cpp
          (establish_components):

          Removed code that needlessly added a tagged component object
          references.

          (components_established):

          Added missing emulated exception macro parameters.

        * orbsvcs/examples/ORT/Server_IORInterceptor.h:

          Made destructor protected since the class is reference counted.

        * orbsvcs/examples/ORT/Server_IORInterceptor_ORBInitializer.cpp:
        * orbsvcs/examples/ORT/server.cpp:

          Removed useless includes.

        * orbsvcs/examples/ORT/Makefile (IDL_FILES):

          Added new ObjectReferenceFactory IDL source to this Makefile.

          (TAO_IDLFLAGS):

          Added "-Gv" TAO_IDL compiler option to enable support for
          valuetypes.

Tue Mar 18 16:54:50 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/TAOC.cpp:
        * tao/PortableServer/PortableServerC.cpp:

          Added 'template<>' to specializations in hand-crafted code
          that were overlooked in a previous checkin.

Tue Mar 18 15:45:19 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:
        * tao/Any.h:

          Added patches from Phil Mesnier <mesnier_p@ociweb.com>
          to treat the codeset translators in TAO::Unknown_IDL_Type
          as singletons attached to a CDR stream instead of being
          produced by a facory in the ORB core. This removeds the
          dependency of Anys on the ORB core and closes [BUGID 446].

Mon Mar 17 09:51:36 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_module.cpp (fe_add_module):

          Added a check for a 0 prefix (as opposed to one that is
          an empty string) before doing a string compare. As a result
          of the change in the entry below, it became possible for
          this to happen when checking for previous openings of a
          module, in order to pass along any prefix that may have
          been applied to the previous opening. If a prefix of 0
          is found, this now indicates that we are looking at the
          global scope, and can break out of the checking loop
          immediately.

Fri Mar 14 21:50:10 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/util/utl_global.cpp:

          Fixed improper clearing of a #pragma prefix directive,
          thanks to Gary Duzan <gduzan@bbn.com> and Craig Rodrigues
          <crodrigu@bbn.com> for sending in the example of included
          IDL files that uncovered the bug.

        * TAO_IDL/driver/drv_init.cpp:

          Removed an unused file that was overlooked in a previous
          checkin.

Fri Mar 14 16:55:00 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/PortableServer/PortableServerC.h:
        * tao/PortableServer/PortableServerC.i:

          Added some missing TAO_HAS_MINIMUM_POA guards.

Fri Mar 14 14:48:53 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/examples/ORT/Gateway_i.cpp:

          Fixed Any constructor to have a CORBA compliant signature.

Fri Mar 14 14:08:08 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_array/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/cdr_op_ci.cpp:

          Moved generation of TAO::Any_*_Impl_T<>::(de)marshal_value()
          for local IDL declarations so the methods will appear before the
          guarded explicit template instantiation. ANSI requires
          that template specializations appear before an explicit
          instantiation, so compilers that require the explicit
          instantiation were reporting errors. Thanks to Phil
          Mesnier <mesnier_p@ociweb.com> for reporting the bug.

        * tao/CurrentC.cpp:
        * tao/IOPC.cpp:
        * tao/PolicyC.cpp:
        * tao/PortableInterceptorC.cpp:
        * tao/TAOC.cpp:
        * tao/IORManipulation/IORC.cpp:
        * tao/Messaging/Messaging_No_ImplC.cpp:
        * tao/Messaging/Messaging_RT_PolicyC.cpp:
        * tao/Messaging/Messaging_SyncScope_PolicyC.cpp:
        * tao/Messaging/TAO_ExtC.cpp:
        * tao/PortableServer/PortableServerC.cpp:
        * tao/RTCORBA/RTCORBAC.cpp:
        * tao/RTCORBA/RTCORBAC.i:
        * tao/RTPortableServer/RTPortableServerC.cpp:
        * tao/TypeCodeFactory/TypeCodeFactoryC.cpp:

          Edited hand-crafted files to conform to the changes above.

Fri Mar 14 08:46:46 2003  Ossama Othman  <ossama@uci.edu>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.cpp (create_profile)
          (create_new_profile, create_shared_profile):

          Corrected ObjectKey parameter in these methods.  The
          "TAO_ObjectKey" type has been replaced by the "TAO::ObjectKey"
          type.

Thu Mar 13 19:20:30 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.cpp:

          Commented out unused args.

Thu Mar 13 17:12:21 2003  Ossama Othman  <ossama@uci.edu>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.h (TAO_SSLIOP_Profile):
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.cpp (TAO_SSLIOP_Profile):

          Corrected ObjectKey parameter in these constructors.  The
          "TAO_ObjectKey" type has been replaced by the "TAO::ObjectKey"
          type.

          (parse_string):

          Added missing ACE_CHECK.  Fixes potentially missed run-time
          errors in emulated exception builds.

Thu Mar 13 14:13:08 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:

          Adjusted another throw spec to match the declared one,
          overlooked in

          Thu Mar 13 09:05:20 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

Thu Mar 13 11:49:25 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:

          Removed a duplicate explicit instantiation and added
          'template<>' before some specializations.

Thu Mar 13 10:45:05 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/RTCORBA/Linear_Priority_Mapping.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/RTPortableServer/RT_POA.cpp:
        * tao/RTPortableServer/RT_Policy_Validator.cpp:

          Removed 'greater than' comparisons between a native policy value
          and RTCORBA::maxPriority. Since these quantities are both typed
          as CORBA::Short and RTCORBA::maxPriority is given the value
          32767 in RTCORBA.pidl, the comparison will always be false. This
          error started appearing because code generation was changed to
          assign constant values in the stub header file instead of in
          the stub source file as formerly, so now the compiler knows the
          value of the constant from just an include of the header file.

Thu Mar 13 10:14:42 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/TAO.dsp:

          Set the template source files to be excluded from the build.

Thu Mar 13 10:09:22 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any.cpp:

          Removed unused arguments.

        * tao/DynamicAny/DynUnion_i.cpp:

          Commented out unused argument.

Thu Mar 13 09:05:20 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.h:

          Fixed the throw specs of several functions so the
          declaration matches the definition.

Thu Mar 13 000:14:10 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Log/PersistStore.cpp (retrieve):

          Changed creation of Any to be compatible with the new
          implementation.

Wed Mar 12 22:25:46 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_array/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_exception/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:

          Added 'template<>' declaration for generated
          template specializations. This is required by
          ANSI, but still optional with many compilers.

        * tao/CurrentC.cpp:
        * tao/DomainC.cpp:
        * tao/Exception.cpp:
        * tao/ObjectReferenceTemplateC.cpp:
        * tao/PolicyC.cpp:
        * tao/PortableInterceptorC.cpp:
        * tao/tao/dsp
        * tao/TAOC.cpp:
        * tao/IFR_Client/IFR_BaseC.cpp:
        * tao/IFR_Client/IFR_BasicC.cpp:
        * tao/IFR_Client/IFR_ComponentsC.cpp:
        * tao/IFR_Client/IFR_ExtendedC.cpp:
        * tao/IORManipulation/IORC.cpp:
        * tao/Messaging/MessagingC.cpp:
        * tao/Messaging/Messaging_No_ImplC.cpp:
        * tao/Messaging/Messaging_RT_PolicyC.cpp:
        * tao/Messaging/Messaging_SyncScope_PolicyC.cpp:
        * tao/Messaging/TAO_ExtC.cpp:
        * tao/PortableServer/ImR_LocatorC.cpp:
        * tao/PortableServer/PortableServerC.cpp:
        * tao/RTCORBA/RTCORBAC.cpp:
        * tao/RTPortableServer/RTPortableServerC.cpp:
        * tao/TypeCodeFactory/TypeCodeFactoryC.cpp:

          Similar additions to hand-crafted files.

Wed Mar 12 17:19:45 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Any_T.cpp:

          Fixed constructor Any_Dual_Impl_T<T> from T& to pass
          the Any destructor to the base class constructor.

Wed Mar 12 17:03:14 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * performance-tests/Cubit/TAO/IDL_Cubit/Makefile:
        * performance-tests/Cubit/TAO/MT_Cubit/Makefile:

          Added separators '/' that are somehow left out in just
          a few places by make depend.

Wed Mar 12 13:35:47 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * */Makefile*:

          Updated dependencies again.

Wed Mar 12 11:10:20 2003  Ossama Othman  <ossama@uci.edu>

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils_T.h:

          Added missing "ace/post.h" include.

Wed Mar 12 12:19:58 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/ObjectIDListC.*:

          Removed these misspelled filenames from the repository.

Wed Mar 12 10:09:57 2003  Ossama Othman  <ossama@uci.edu>

        * tao/Makefile.am:
        * tao/Makefile.bor:

          "ObjectIDList.*" -> "ObjectIdListC.*".  The former set of files
          have been replaced with the latter set of files.

Wed Mar 12 10:02:55 2003  Ossama Othman  <ossama@uci.edu>

        * tao/corba.h:
        * tao/ORB_Core.cpp:

          Corrected typo.  "ObjectIdListC.h" instead of "ObjectIDListC.h"

Wed Mar 12 11:43:50 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Makefile.tao:

          Fixed typo in a newly added file.

Wed Mar 12 09:25:34 2003  Ossama Othman  <ossama@uci.edu>

        * TAO_IDL/be_include/be_codegen.h:

          Fixed a "comma at end of enumerator list" warning.

Wed Mar 12 09:11:48 2003  Ossama Othman  <ossama@uci.edu>

        * tao/RTCORBA/RT_ORBInitializer.cpp:

          Include "tao/debug.h" to pull in TAO_debug_level global
          variable declaration.

Wed Mar 12 09:49:00 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * Merge of the dyn_corba CVS branch. The new features included
        in this merge are:

        - Updates, including new files, to the Interface Repository
          to make it compliant with CORBA 3.0. Note that implementation
          class method bodies for most of the valuetype and CCM-related
          types are not yet filled in.

        - Change of operation dispatch in the IFR from Servant Locator
          to Default Servant.

        - Optimizations to the IFR to eliminate data copies and
          new/delete pairs.

        - A new latency/throughput test for the IFR.

        - A new template-based implementation of CORBA::Any. Thanks to
          Carlos O'Ryan <coryan@atdesk.com> for his inspiration with
          the design.

        - A new performance test for Any insertion and extraction.

        - An expanded anyop test in TAO/tests/Param_Test.

        - Removal of most of the context state enum values in the IDL
          compiler.

        - Extension of TypeCodeFactory to support valuetypes and CORBA
          component related types.

        - Support in TypeCodeFactory for recursive types. Thanks to
          Boris Kolpackov <boris@isis-server.isis.vanderbilt.edu> for
          his suggestions on the design of this feature.

        - Addition of support files (makefiles, MSVC project files, and
          Perl scripts) for the new codeset translator test added by
          Phil Mesnier <mesnier_p@ociweb.com>.

        * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.h:
        * orbsvcs/orbsvcs/IFRService/ComponentModuleDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentModuleDef_i.h:
        * orbsvcs/orbsvcs/IFRService/EventPortDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/EventPortDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtAbstractInterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtAbstractInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtAttributeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtAttributeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtInterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtLocalInterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtLocalInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.h:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils_T.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils_T.h:
        * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.cpp:
        * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.h:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/Latency Test.dsp:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/Latency_Query_Client.cpp:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/Latency_Query_Client.h:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/Makefile:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/client.cpp:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/run_test.pl:
        * performance-tests/Anyop/Anyop.dsp:
        * performance-tests/Anyop/Makefile:
        * performance-tests/Anyop/Makefile.bor:
        * performance-tests/Anyop/anyop.cpp:
        * performance-tests/Anyop/test.idl:
        * tao/Any_T.cpp:
        * tao/Any_T.h:
        * tao/Any_T.inl:
        * ObjectIdList.pidl:
        * tao/ObjectIdListC.cpp:
        * tao/ObjectIdListC.h:
        * tao/ObjectIdListC.i:
        * tao/Services.pidl:
        * tao/ServicesC.cpp:
        * tao/ServicesC.h:
        * tao/ServicesC.i:
        * tests/CodeSets/CodeSets.dsw:
        * tests/CodeSets/Makefile:
        * tests/CodeSets/Makefile.bor:
        * tests/CodeSets/libs/Makefile:
        * tests/CodeSets/libs/Makefile.bor:
        * tests/CodeSets/libs/IBM1047_ISO8859/IBM1047_ISO8859.bor:
        * tests/CodeSets/simple/Makefile.bor:
        * tests/CodeSets/simple/client.bor:
        * tests/CodeSets/simple/client.dsp:
        * tests/CodeSets/simple/run_test.pl:
        * tests/CodeSets/simple/server.bor:
        * tests/CodeSets/simple/server.dsp:

          New files.

        * orbsvcs/orbsvcs/IFRService/Servant_Factory.cpp:
        * orbsvcs/orbsvcs/IFRService/Servant_Factory.h:
        * orbsvcs/orbsvcs/IFRService/Servant_Locator.cpp:
        * orbsvcs/orbsvcs/IFRService/Servant_Locator.h:
        * IFR_TypeCodes.cpp:
        * ObjectIDList.h:
        * ObjectIDList.i:
        * ObjectIDList.cpp:
        * Services.h:
        * Services.i:
        * Services.cpp:

          Removed files.

        * TAOACE.dsw:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_interface_strategy.cpp:
        * TAO_IDL/be/be_visitor_context.cpp:
        * TAO_IDL/be/be_visitor_decl.cpp:
        * TAO_IDL/be/be_visitor_array/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/array_ch.cpp:
        * TAO_IDL/be/be_visitor_array/array_ci.cpp:
        * TAO_IDL/be/be_visitor_array/array_cs.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_attribute/attribute.cpp:
        * TAO_IDL/be/be_visitor_component/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_component/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_component/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_component/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_component/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_component/component.cpp:
        * TAO_IDL/be/be_visitor_component/component_ch.cpp:
        * TAO_IDL/be/be_visitor_component/component_cs.cpp:
        * TAO_IDL/be/be_visitor_component/component_ih.cpp:
        * TAO_IDL/be/be_visitor_component/component_is.cpp:
        * TAO_IDL/be/be_visitor_component/component_sh.cpp:
        * TAO_IDL/be/be_visitor_component/component_si.cpp:
        * TAO_IDL/be/be_visitor_component/component_ss.cpp:
        * TAO_IDL/be/be_visitor_component_fwd/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_component_fwd/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_component_fwd/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_component_fwd/component_fwd_ch.cpp:
        * TAO_IDL/be/be_visitor_enum/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_enum/enum_ch.cpp:
        * TAO_IDL/be/be_visitor_enum/enum_cs.cpp:
        * TAO_IDL/be/be_visitor_eventtype/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_eventtype/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_eventtype/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_eventtype/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_eventtype/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_eventtype/eventtype_ch.cpp:
        * TAO_IDL/be/be_visitor_eventtype/eventtype_ci.cpp:
        * TAO_IDL/be/be_visitor_eventtype/eventtype_cs.cpp:
        * TAO_IDL/be/be_visitor_eventtype/eventtype_obv_ch.cpp:
        * TAO_IDL/be/be_visitor_eventtype/eventtype_obv_ci.cpp:
        * TAO_IDL/be/be_visitor_eventtype/eventtype_obv_cs.cpp:
        * TAO_IDL/be/be_visitor_eventtype/eventtype_sh.cpp:
        * TAO_IDL/be/be_visitor_eventtype/eventtype_si.cpp:
        * TAO_IDL/be/be_visitor_eventtype/eventtype_ss.cpp:
        * TAO_IDL/be/be_visitor_eventtype_fwd/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_eventtype_fwd/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_eventtype_fwd/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_eventtype_fwd/eventtype_fwd_ch.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_exception/exception.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_ch.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:
        * TAO_IDL/be/be_visitor_field/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_field/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_field/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_field/field_ch.cpp:
        * TAO_IDL/be/be_visitor_field/field_ci.cpp:
        * TAO_IDL/be/be_visitor_field/field_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/base_proxy_impl_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/direct_proxy_impl_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/interceptors_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interceptors_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/interface.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ih.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_is.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_si.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/proxy_brokers_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/remote_proxy_impl_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/remote_proxy_impl_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/thru_poa_proxy_impl_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/thru_poa_proxy_impl_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/tie_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/tie_si.cpp:
        * TAO_IDL/be/be_visitor_module/module.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_sh.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/arglist.cpp:
        * TAO_IDL/be/be_visitor_operation/argument.cpp:
        * TAO_IDL/be/be_visitor_operation/base_proxy_impl_ch.cpp:
        * TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/interceptors_arglist.cpp:
        * TAO_IDL/be/be_visitor_operation/interceptors_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/interceptors_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_ch.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_ih.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_is.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_sh.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:
        * TAO_IDL/be/be_visitor_operation/remote_proxy_impl_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/smart_proxy_ch.cpp:
        * TAO_IDL/be/be_visitor_operation/smart_proxy_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/tie_sh.cpp:
        * TAO_IDL/be/be_visitor_operation/tie_si.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_root/root_sth.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_obj_sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_obj_sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_obj_sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_obj_sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_base.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/structure.cpp:
        * TAO_IDL/be/be_visitor_structure/structure_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/structure_cs.cpp:
        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_cs.cpp:
        * TAO_IDL/be/be_visitor_union/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_union/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/discriminant_ch.cpp:
        * TAO_IDL/be/be_visitor_union/discriminant_cs.cpp:
        * TAO_IDL/be/be_visitor_union/union.cpp:
        * TAO_IDL/be/be_visitor_union/union_ch.cpp:
        * TAO_IDL/be/be_visitor_union/union_ci.cpp:
        * TAO_IDL/be/be_visitor_union/union_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/cdr_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union_branch/cdr_op_ci.cpp:
        * TAO_IDL/be/be_visitor_union_branch/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_ch.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/ami_exception_holder_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/arglist.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_cdr_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_cdr_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/field_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_arglist_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:
        * TAO_IDL/be_include/be_codegen.h:
        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:
        * examples/AMI/FL_Callback/AMI_Peer.dsp:
        * examples/AMI/FL_Callback/AMI_Progress.dsp:
        * examples/Buffered_Oneways/client.dsp:
        * examples/Buffered_Oneways/server.dsp:
        * examples/Callback_Quoter/Consumer.dsp:
        * examples/Callback_Quoter/Notifier.dsp:
        * examples/Callback_Quoter/Supplier.dsp:
        * examples/Content_Server/AMI_Iterator/client.dsp:
        * examples/Content_Server/AMI_Iterator/server.dsp:
        * examples/Content_Server/AMI_Observer/client.dsp:
        * examples/Content_Server/AMI_Observer/server.dsp:
        * examples/Content_Server/SMI_Iterator/client.dsp:
        * examples/Content_Server/SMI_Iterator/server.dsp:
        * examples/Event_Comm/Consumer.dsp:
        * examples/Event_Comm/Notifier.dsp:
        * examples/Event_Comm/Supplier.dsp:
        * examples/Load_Balancing/client.dsp:
        * examples/Load_Balancing/server.dsp:
        * examples/Load_Balancing/service.dsp:
        * examples/Load_Balancing_persistent/client.dsp:
        * examples/Load_Balancing_persistent/server.dsp:
        * examples/Load_Balancing_persistent/service.dsp:
        * examples/OBV/Typed_Events/client.dsp:
        * examples/OBV/Typed_Events/server.dsp:
        * examples/POA/DSI/Database_i.cpp:
        * examples/POA/DSI/client.dsp:
        * examples/POA/DSI/server.dsp:
        * examples/POA/Default_Servant/client.dsp:
        * examples/POA/Default_Servant/server.dsp:
        * examples/POA/Forwarding/client.dsp:
        * examples/POA/Forwarding/server.dsp:
        * examples/POA/Generic_Servant/client.dsp:
        * examples/POA/Generic_Servant/server.dsp:
        * examples/POA/TIE/client.dsp:
        * examples/POA/TIE/server.dsp:
        * examples/Persistent_Grid/Persistent_Grid_Client_Files.dsp:
        * examples/Persistent_Grid/Persistent_Grid_Second_Client_Files.dsp:
        * examples/Persistent_Grid/Persistent_Grid_Server_Files.dsp:
        * examples/Quoter/Factory_Finder.dsp:
        * examples/Quoter/Generic_Factory.dsp:
        * examples/Quoter/client.dsp:
        * examples/Quoter/server.dsp:
        * examples/Simple/bank/client.dsp:
        * examples/Simple/bank/server.dsp:
        * examples/Simple/chat/client.dsp:
        * examples/Simple/chat/server.dsp:
        * examples/Simple/echo/client.dsp:
        * examples/Simple/echo/server.dsp:
        * examples/Simple/grid/client.dsp:
        * examples/Simple/grid/server.dsp:
        * examples/Simple/time/client.dsp:
        * examples/Simple/time/server.dsp:
        * examples/Simple/time-date/Time_Date.dsp:
        * examples/Simple/time-date/client.dsp:
        * examples/Simulator/Event_Supplier/DualEC_Sup.dsp:
        * examples/Simulator/Event_Supplier/Event_Sup.dsp:
        * examples/Simulator/Event_Supplier/Logging_Sup.dsp:
        * examples/TypeCode_Creation/TypeCode_Creation.dsp:
        * orbsvcs/IFR_Service/IFR_Service.cpp:
        * orbsvcs/IFR_Service/be_produce.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_exception.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_union.cpp:
        * orbsvcs/ImplRepo_Service/Forwarder.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:
        * orbsvcs/examples/CosEC/Factory/FactoryClient.dsp:
        * orbsvcs/examples/CosEC/Factory/FactoryServer.dsp:
        * orbsvcs/examples/Security/Send_File/Send_File_Client.dsp:
        * orbsvcs/examples/Security/Send_File/Send_File_Server.dsp:
        * orbsvcs/orbsvcs/AV.dsp:
        * orbsvcs/orbsvcs/CosConcurrency.dsp:
        * orbsvcs/orbsvcs/CosEvent.dsp:
        * orbsvcs/orbsvcs/CosLifeCycle.dsp:
        * orbsvcs/orbsvcs/CosLoadBalancing.dsp:
        * orbsvcs/orbsvcs/CosNaming.dsp:
        * orbsvcs/orbsvcs/CosNotification.dsp:
        * orbsvcs/orbsvcs/CosProperty.dsp:
        * orbsvcs/orbsvcs/CosTime.dsp:
        * orbsvcs/orbsvcs/CosTrading.dsp:
        * orbsvcs/orbsvcs/DsEventLogAdmin.dsp:
        * orbsvcs/orbsvcs/DsLogAdmin.dsp:
        * orbsvcs/orbsvcs/DsNotifyLogAdmin.dsp:
        * orbsvcs/orbsvcs/FT_ORB.dsp:
        * orbsvcs/orbsvcs/Fault_Tolerance.dsp:
        * orbsvcs/orbsvcs/IFRService.dsp:
        * orbsvcs/orbsvcs/Makefile.iFRService:
        * orbsvcs/orbsvcs/PortableGroup.dsp:
        * orbsvcs/orbsvcs/RTEvent.dsp:
        * orbsvcs/orbsvcs/RTEventLog.dsp:
        * orbsvcs/orbsvcs/RTSched.dsp:
        * orbsvcs/orbsvcs/SSLIOP.dsp:
        * orbsvcs/orbsvcs/Security.dsp:
        * orbsvcs/orbsvcs/Svc_Utils.dsp:
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.cpp:
        * orbsvcs/orbsvcs/IFRService/AbstractInterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/AbstractInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/AliasDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/AliasDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ArrayDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ArrayDef_i.h:
        * orbsvcs/orbsvcs/IFRService/AttributeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/AttributeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ComponentRepository_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentRepository_i.h:
        * orbsvcs/orbsvcs/IFRService/ConstantDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ConstantDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ConsumesDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ConsumesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/Contained_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Contained_i.h:
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Container_i.h:
        * orbsvcs/orbsvcs/IFRService/EmitsDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/EmitsDef_i.h:
        * orbsvcs/orbsvcs/IFRService/EnumDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/EnumDef_i.h:
        * orbsvcs/orbsvcs/IFRService/EventDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/EventDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExceptionDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExceptionDef_i.h:
        * orbsvcs/orbsvcs/IFRService/FactoryDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/FactoryDef_i.h:
        * orbsvcs/orbsvcs/IFRService/FinderDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/FinderDef_i.h:
        * orbsvcs/orbsvcs/IFRService/FixedDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/FixedDef_i.h:
        * orbsvcs/orbsvcs/IFRService/HomeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/HomeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/IDLType_i.cpp:
        * orbsvcs/orbsvcs/IFRService/IDLType_i.h:
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS.h:
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS.i:
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS_T.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS_T.h:
        * orbsvcs/orbsvcs/IFRService/IFR_BaseS_T.i:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS.h:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS.i:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS_T.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS_T.h:
        * orbsvcs/orbsvcs/IFRService/IFR_BasicS_T.i:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.h:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.i:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.h:
        * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.i:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.h:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.i:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS_T.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS_T.h:
        * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS_T.i:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Loader.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.h:
        * orbsvcs/orbsvcs/IFRService/IRObject_i.cpp:
        * orbsvcs/orbsvcs/IFRService/IRObject_i.h:
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/LocalInterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/LocalInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ModuleDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ModuleDef_i.h:
        * orbsvcs/orbsvcs/IFRService/NativeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/NativeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/OperationDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/OperationDef_i.h:
        * orbsvcs/orbsvcs/IFRService/PrimitiveDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/PrimitiveDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ProvidesDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ProvidesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/PublishesDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/PublishesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/Repository_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Repository_i.h:
        * orbsvcs/orbsvcs/IFRService/SequenceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/SequenceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/StringDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/StringDef_i.h:
        * orbsvcs/orbsvcs/IFRService/StructDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/StructDef_i.h:
        * orbsvcs/orbsvcs/IFRService/TypedefDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/TypedefDef_i.h:
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.h:
        * orbsvcs/orbsvcs/IFRService/UsesDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UsesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ValueBoxDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueBoxDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ValueMemberDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueMemberDef_i.h:
        * orbsvcs/orbsvcs/IFRService/WstringDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/WstringDef_i.h:
        * orbsvcs/orbsvcs/IFRService/concrete_classes.h:
        * orbsvcs/orbsvcs/IFRService/tmplinst.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/Service.h:
        * orbsvcs/orbsvcs/PortableGroup/POA_Hooks.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Loader.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Loader.h:
        * orbsvcs/orbsvcs/PortableGroup/Portable_Group_Map.cpp:
        * orbsvcs/orbsvcs/PortableGroup/Portable_Group_Map.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.h:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.i:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/client.dsp:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/server.dsp:
        * orbsvcs/performance-tests/RTEvent/lib/TAO_RTEC_Perf.dsp:
        * orbsvcs/tests/tests.dsw:
        * orbsvcs/tests/EC_Custom_Marshal/ECCM_Consumer.dsp:
        * orbsvcs/tests/EC_Custom_Marshal/ECCM_Supplier.dsp:
        * orbsvcs/tests/FaultTolerance/IOGR/Manager.dsp:
        * orbsvcs/tests/FaultTolerance/IOGR/server.dsp:
        * orbsvcs/tests/ImplRepo/airplane_client.dsp:
        * orbsvcs/tests/ImplRepo/airplane_server.dsp:
        * orbsvcs/tests/ImplRepo/nestea_client.dsp:
        * orbsvcs/tests/ImplRepo/nestea_server.dsp:
        * orbsvcs/tests/InterfaceRepo/InterfaceRepo.dsw:
        * orbsvcs/tests/InterfaceRepo/Makefile:
        * orbsvcs/tests/InterfaceRepo/Application_Test/ifr_dii_client.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.cpp:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/IFR_Test.dsp:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/run_test.pl:
        * orbsvcs/tests/Interoperable_Naming/client.dsp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/client.dsp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/server.dsp:
        * orbsvcs/tests/Miop/McastHello/client.dsp:
        * orbsvcs/tests/Miop/McastHello/server.dsp:
        * orbsvcs/tests/Notify/Blocking/Structured_Consumer.dsp:
        * orbsvcs/tests/Notify/Blocking/Structured_Supplier.dsp:
        * orbsvcs/tests/Notify/Discarding/Sequence_Consumer.dsp:
        * orbsvcs/tests/Notify/Discarding/Sequence_Supplier.dsp:
        * orbsvcs/tests/Notify/Discarding/Structured_Consumer.dsp:
        * orbsvcs/tests/Notify/Discarding/Structured_Supplier.dsp:
        * orbsvcs/tests/Notify/MT_Dispatching/Structured_Consumer.dsp:
        * orbsvcs/tests/Notify/MT_Dispatching/Structured_Supplier.dsp:
        * orbsvcs/tests/Notify/Ordering/Sequence_Consumer.dsp:
        * orbsvcs/tests/Notify/Ordering/Sequence_Supplier.dsp:
        * orbsvcs/tests/Notify/Ordering/Structured_Consumer.dsp:
        * orbsvcs/tests/Notify/Ordering/Structured_Supplier.dsp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Consumer.dsp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Supplier.dsp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Consumer.dsp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Supplier.dsp:
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Filter_Consumer.dsp:
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Filter_Supplier.dsp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Multi_Filter_Consumer.dsp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Multi_Filter_Supplier.dsp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Consumer.dsp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Supplier.dsp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Structured_Consumer.dsp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Structured_Supplier.dsp:
        * orbsvcs/tests/Security/Big_Request/client.dsp:
        * orbsvcs/tests/Security/Big_Request/server.dsp:
        * orbsvcs/tests/Security/Callback/client.dsp:
        * orbsvcs/tests/Security/Callback/server.dsp:
        * orbsvcs/tests/Security/MT_SSLIOP/client.dsp:
        * orbsvcs/tests/Security/MT_SSLIOP/server.dsp:
        * orbsvcs/tests/Security/Secure_Invocation/client.dsp:
        * orbsvcs/tests/Security/Secure_Invocation/server.dsp:
        * orbsvcs/tests/Security/SecurityLevel1/client.dsp:
        * orbsvcs/tests/Security/SecurityLevel1/server.dsp:
        * orbsvcs/tests/Simple_Naming/client.dsp:
        * orbsvcs/tests/Trading/TradingLib.dsp:
        * performance-tests/Makefile:
        * performance-tests/Makefile.bor:
        * performance-tests/TAO_Perf_Tests.dsw:
        * performance-tests/Callback/client.dsp:
        * performance-tests/Callback/server.dsp:
        * performance-tests/Cubit/TAO/DII_Cubit/client.dsp:
        * performance-tests/Cubit/TAO/IDL_Cubit/client.dsp:
        * performance-tests/Cubit/TAO/IDL_Cubit/collocation_test.dsp:
        * performance-tests/Cubit/TAO/IDL_Cubit/server.dsp:
        * performance-tests/Cubit/TAO/MT_Cubit/client.dsp:
        * performance-tests/Cubit/TAO/MT_Cubit/server.dsp:
        * performance-tests/Latency/AMH/Single_Threaded/client.dsp:
        * performance-tests/Latency/AMH/Single_Threaded/server.dsp:
        * performance-tests/Latency/AMI/client.dsp:
        * performance-tests/Latency/AMI/server.dsp:
        * performance-tests/Latency/DII/client.dsp:
        * performance-tests/Latency/DII/server.dsp:
        * performance-tests/Latency/DSI/client.dsp:
        * performance-tests/Latency/DSI/server.dsp:
        * performance-tests/Latency/Deferred/client.dsp:
        * performance-tests/Latency/Deferred/server.dsp:
        * performance-tests/Latency/Single_Threaded/client.dsp:
        * performance-tests/Latency/Single_Threaded/server.dsp:
        * performance-tests/Latency/Thread_Per_Connection/client.dsp:
        * performance-tests/Latency/Thread_Per_Connection/server.dsp:
        * performance-tests/Latency/Thread_Pool/client.dsp:
        * performance-tests/Latency/Thread_Pool/server.dsp:
        * performance-tests/POA/Implicit_Activation/client.dsp:
        * performance-tests/POA/Implicit_Activation/collocated.dsp:
        * performance-tests/POA/Implicit_Activation/server.dsp:
        * performance-tests/POA/Object_Creation_And_Registration/registration.dsp:
        * performance-tests/Pluggable/client.dsp:
        * performance-tests/Pluggable/server.dsp:
        * performance-tests/RTCorba/Multiple_Endpoints/Common/RTCORBA_Common.dsp:
        * performance-tests/RTCorba/Oneways/Reliable/client.dsp:
        * performance-tests/RTCorba/Oneways/Reliable/server.dsp:
        * performance-tests/RTCorba/Thread_Pool/client.dsp:
        * performance-tests/RTCorba/Thread_Pool/server.dsp:
        * performance-tests/Throughput/client.dsp:
        * performance-tests/Throughput/server.dsp:
        * tao/AbstractBase.cpp:
        * tao/AbstractBase.h:
        * tao/Abstract_Servant_Base.cpp:
        * tao/Abstract_Servant_Base.h:
        * tao/Acceptor_Filter.h:
        * tao/Adapter.cpp:
        * tao/Adapter.h:
        * tao/Any.cpp:
        * tao/Any.h:
        * tao/Any.i:
        * tao/Bounds.pidl:
        * tao/BoundsC.cpp:
        * tao/BoundsC.h:
        * tao/BoundsC.i:
        * tao/CDR_Encaps_Codec.cpp:
        * tao/CONV_FRAME.pidl:
        * tao/CONV_FRAMEC.cpp:
        * tao/CONV_FRAMEC.h:
        * tao/CONV_FRAMEC.i:
        * tao/Current.pidl:
        * tao/CurrentC.cpp:
        * tao/CurrentC.h:
        * tao/CurrentC.i:
        * tao/Domain.pidl:
        * tao/DomainC.cpp:
        * tao/DomainC.h:
        * tao/DomainC.i:
        * tao/Dynamic.pidl:
        * tao/DynamicC.cpp:
        * tao/DynamicC.h:
        * DynamicC.i:
        * tao/Exception.cpp:
        * tao/GIOP.pidl:
        * tao/GIOPC.cpp:
        * tao/GIOPC.h:
        * tao/GIOPC.i:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/GIOP_Message_Generator_Parser_12.cpp:
        * tao/GIOP_Message_Lite.cpp:
        * tao/GIOP_Message_Locate_Header.h:
        * tao/GIOP_Message_Locate_Header.i:
        * tao/IFR_Client_Adapter.h:
        * tao/IIOP.pidl:
        * tao/IIOPC.cpp:
        * tao/IIOPC.h:
        * tao/IIOPC.i:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Acceptor.h:
        * tao/IIOP_Profile.cpp:
        * tao/IIOP_Profile.h:
        * tao/IIOP_Profile.i:
        * tao/IOP.pidl:
        * tao/IOPC.cpp:
        * tao/IOPC.h:
        * tao/IOPC.i:
        * tao/LocalObject.cpp:
        * tao/LocalObject.h:
        * tao/Makefile.am
        * tao/Makefile.bor:
        * tao/Makefile.tao
        * tao/Messaging_PolicyValue.pidl:
        * tao/Messaging_PolicyValueC.cpp:
        * tao/Messaging_PolicyValueC.h:
        * tao/Messaging_PolicyValueC.i:
        * tao/Messaging_SyncScope.pidl:
        * tao/Messaging_SyncScopeC.cpp:
        * tao/Messaging_SyncScopeC.h:
        * tao/Messaging_SyncScopeC.i:
        * tao/NVList.cpp:
        * tao/ORB.cpp:
        * tao/ORB.h:
        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/Object.cpp:
        * tao/Object.h:
        * tao/Object.i:
        * tao/ObjectReferenceTemplate.pidl:
        * tao/ObjectReferenceTemplateC.cpp:
        * tao/ObjectReferenceTemplateC.h:
        * tao/ObjectReferenceTemplateC.i:
        * tao/Object_KeyC.cpp:
        * tao/Object_KeyC.h:
        * tao/Object_KeyC.i:
        * tao/Object_Proxy_Impl.cpp:
        * tao/Object_Proxy_Impl.h:
        * tao/OctetSeq.pidl:
        * tao/OctetSeqC.cpp:
        * tao/OctetSeqC.h:
        * tao/OctetSeqC.i:
        * tao/Policy.pidl:
        * tao/PolicyC.cpp:
        * tao/PolicyC.h:
        * tao/PolicyC.i:
        * tao/Policy_Forward.pidl:
        * tao/Policy_ForwardC.cpp:
        * tao/Policy_ForwardC.h:
        * tao/Policy_ForwardC.i:
        * tao/Pollable.pidl:
        * tao/PollableC.cpp:
        * tao/PollableC.h:
        * tao/PollableC.i:
        * tao/PortableInterceptor.pidl:
        * tao/PortableInterceptorC.cpp:
        * tao/PortableInterceptorC.h:
        * tao/PortableInterceptorC.i:
        * tao/Profile.cpp:
        * tao/Profile.h:
        * tao/Remote_Object_Proxy_Impl.cpp:
        * tao/RequestInfo_Util.cpp:
        * tao/Sequence_T.cpp:
        * tao/StringSeq.pidl:
        * tao/StringSeqC.cpp:
        * tao/StringSeqC.h:
        * tao/StringSeqC.i:
        * tao/Synch_Queued_Message.cpp:
        * tao/TAO.dsp:
        * tao/TAO.pidl:
        * tao/TAOC.cpp:
        * tao/TAOC.h:
        * tao/TAOC.i:
        * tao/TAO_Server_Request.cpp:
        * tao/TAO_Server_Request.h:
        * tao/TAO_Server_Request.i:
        * tao/Tagged_Profile.h:
        * tao/Tagged_Profile.i:
        * tao/Thread_Lane_Resources.h:
        * tao/TimeBase.pidl:
        * tao/TimeBaseC.cpp:
        * tao/TimeBaseC.h:
        * tao/TimeBaseC.i:
        * tao/Transport_Acceptor.h:
        * tao/TypeCodeFactory_Adapter.h:
        * tao/Typecode.cpp:
        * tao/Typecode.h:
        * tao/Typecode.i:
        * tao/Typecode_Constants.cpp:
        * tao/ValueBase.cpp:
        * tao/ValueBase.h:
        * tao/ValueBase.i:
        * tao/WrongTransaction.pidl:
        * tao/WrongTransactionC.cpp:
        * tao/WrongTransactionC.h:
        * tao/WrongTransactionC.i:
        * tao/append.cpp:
        * tao/corba.h:
        * tao/corbafwd.cpp:
        * tao/corbafwd.h:
        * tao/orb.idl:
        * tao/skip.cpp:
        * tao/target_specification.h:
        * tao/target_specification.i:
        * BiDir_GIOP/BiDirPolicy.pidl:
        * BiDir_GIOP/BiDirPolicyC.cpp:
        * BiDir_GIOP/BiDirPolicyC.h:
        * BiDir_GIOP/BiDirPolicyC.i:
        * BiDir_GIOP/TAO_BiDir_GIOP.dsp:
        * Domain/DomainS.cpp:
        * Domain/DomainS.h:
        * Domain/DomainS.i:
        * Domain/DomainS_T.cpp:
        * Domain/DomainS_T.h:
        * Domain/DomainS_T.i:
        * DynamicAny/DynAnyFactory.cpp:
        * DynamicAny/DynAny_i.cpp:
        * DynamicAny/DynAny_i.h:
        * DynamicAny/DynArray_i.cpp:
        * DynamicAny/DynCommon.cpp:
        * DynamicAny/DynEnum_i.cpp:
        * DynamicAny/DynSequence_i.cpp:
        * DynamicAny/DynStruct_i.cpp:
        * DynamicAny/DynUnion_i.cpp:
        * DynamicAny/DynUnion_i.h:
        * DynamicAny/DynamicAny.pidl:
        * DynamicAny/DynamicAnyC.cpp:
        * DynamicAny/DynamicAnyC.h:
        * DynamicAny/DynamicAnyC.i:
        * DynamicAny/TAO_DynamicAny.dsp:
        * DynamicInterface/Context.cpp:
        * DynamicInterface/Context.h:
        * DynamicInterface/DII_Invocation.cpp:
        * DynamicInterface/Dynamic_Implementation.cpp:
        * DynamicInterface/Dynamic_Implementation.h:
        * DynamicInterface/Request.cpp:
        * DynamicInterface/Request.inl:
        * DynamicInterface/Server_Request.cpp:
        * DynamicInterface/Unknown_User_Exception.cpp:
        * DynamicInterface/Unknown_User_Exception.h:
        * IFR_Client/IFR_Base.pidl:
        * IFR_Client/IFR_BaseC.cpp:
        * IFR_Client/IFR_BaseC.h:
        * IFR_Client/IFR_BaseC.i:
        * IFR_Client/IFR_Basic.pidl:
        * IFR_Client/IFR_BasicC.cpp:
        * IFR_Client/IFR_BasicC.h:
        * IFR_Client/IFR_BasicC.i:
        * IFR_Client/IFR_Client_Adapter_Impl.cpp:
        * IFR_Client/IFR_Components.pidl:
        * IFR_Client/IFR_ComponentsC.cpp:
        * IFR_Client/IFR_ComponentsC.h:
        * IFR_Client/IFR_ComponentsC.i:
        * IFR_Client/IFR_Extended.pidl:
        * IFR_Client/IFR_ExtendedC.cpp:
        * IFR_Client/IFR_ExtendedC.h:
        * IFR_Client/IFR_ExtendedC.i:
        * IFR_Client/TAO_IFR_Client.dsp:
        * IORManipulation/IOR.pidl:
        * IORManipulation/IORC.cpp:
        * IORManipulation/IORC.h:
        * IORManipulation/IORC.i:
        * IORManipulation/TAO_IORManip.dsp:
        * IORTable/IORTable.pidl:
        * IORTable/IORTableC.cpp:
        * IORTable/IORTableC.h:
        * IORTable/IORTableC.i:
        * IORTable/TAO_IORTable.dsp:
        * IORTable/Table_Adapter.cpp:
        * IORTable/Table_Adapter.h:
        * Messaging/Messaging.pidl:
        * Messaging/MessagingC.cpp:
        * Messaging/MessagingC.h:
        * Messaging/MessagingC.i:
        * Messaging/MessagingS.cpp:
        * Messaging/MessagingS.h:
        * Messaging/MessagingS.i:
        * Messaging/MessagingS_T.cpp:
        * Messaging/MessagingS_T.h:
        * Messaging/MessagingS_T.i:
        * Messaging/Messaging_No_Impl.pidl:
        * Messaging/Messaging_No_ImplC.cpp:
        * Messaging/Messaging_No_ImplC.h:
        * Messaging/Messaging_No_ImplC.i:
        * Messaging/Messaging_RT_Policy.pidl:
        * Messaging/Messaging_RT_PolicyC.cpp:
        * Messaging/Messaging_RT_PolicyC.h:
        * Messaging/Messaging_RT_PolicyC.i:
        * Messaging/Messaging_SyncScope_Policy.pidl:
        * Messaging/Messaging_SyncScope_PolicyC.cpp:
        * Messaging/Messaging_SyncScope_PolicyC.h:
        * Messaging/Messaging_SyncScope_PolicyC.i:
        * Messaging/TAO_Ext.pidl:
        * Messaging/TAO_ExtC.cpp:
        * Messaging/TAO_ExtC.h:
        * Messaging/TAO_ExtC.i:
        * Messaging/TAO_Messaging.dsp:
        * PortableServer/Default_Acceptor_Filter.cpp:
        * PortableServer/Default_Acceptor_Filter.h:
        * PortableServer/Default_ORT.pidl:
        * PortableServer/Default_ORTC.cpp:
        * PortableServer/Default_ORTC.h:
        * PortableServer/Default_ORTC.i:
        * PortableServer/Direct_Object_Proxy_Impl.cpp:
        * PortableServer/ImR_Locator.pidl:
        * PortableServer/ImR_LocatorC.cpp:
        * PortableServer/ImR_LocatorC.h:
        * PortableServer/ImR_LocatorC.i:
        * PortableServer/ImR_LocatorS.cpp:
        * PortableServer/ImR_LocatorS.h:
        * PortableServer/ImR_LocatorS.i:
        * PortableServer/ImR_LocatorS_T.cpp:
        * PortableServer/ImR_LocatorS_T.h:
        * PortableServer/ImR_LocatorS_T.i:
        * PortableServer/ImplRepoC.cpp:
        * PortableServer/ImplRepoC.h:
        * PortableServer/ImplRepoC.i:
        * PortableServer/ImplRepoS.cpp:
        * PortableServer/ImplRepoS.h:
        * PortableServer/ImplRepoS_T.cpp:
        * PortableServer/ImplRepoS_T.h:
        * PortableServer/ImplRepoS_T.i:
        * PortableServer/Object_Adapter.cpp:
        * PortableServer/Object_Adapter.h:
        * PortableServer/Object_Adapter.i:
        * PortableServer/POA.cpp:
        * PortableServer/POA.h:
        * PortableServer/PolicyS.cpp:
        * PortableServer/PolicyS.h:
        * PortableServer/PolicyS.i:
        * PortableServer/PolicyS_T.cpp:
        * PortableServer/PolicyS_T.h:
        * PortableServer/PolicyS_T.i:
        * PortableServer/PortableServer.pidl:
        * PortableServer/PortableServerC.cpp:
        * PortableServer/PortableServerC.h:
        * PortableServer/PortableServerC.i:
        * PortableServer/Servant_Base.cpp:
        * PortableServer/Servant_Base.h:
        * PortableServer/Servant_Base.i:
        * PortableServer/TAO_PortableServer.dsp:
        * PortableServer/ThruPOA_Object_Proxy_Impl.cpp:
        * RTCORBA/RTCORBA.pidl:
        * RTCORBA/RTCORBAC.cpp:
        * RTCORBA/RTCORBAC.h:
        * RTCORBA/RTCORBAC.i:
        * RTCORBA/TAO_RTCORBA.dsp:
        * RTPortableServer/RTPortableServer.pidl:
        * RTPortableServer/RTPortableServerC.cpp:
        * RTPortableServer/RTPortableServerC.h:
        * RTPortableServer/RTPortableServerC.i:
        * RTPortableServer/RT_Acceptor_Filters.cpp:
        * RTPortableServer/RT_Acceptor_Filters.h:
        * RTPortableServer/RT_POA.cpp:
        * RTPortableServer/RT_POA.h:
        * RTPortableServer/TAO_RTPortableServer.dsp:
        * Strategies/DIOP_Acceptor.cpp:
        * Strategies/DIOP_Acceptor.h:
        * Strategies/DIOP_Profile.cpp:
        * Strategies/DIOP_Profile.h:
        * Strategies/DIOP_Profile.i:
        * Strategies/SHMIOP_Acceptor.cpp:
        * Strategies/SHMIOP_Acceptor.h:
        * Strategies/SHMIOP_Profile.cpp:
        * Strategies/SHMIOP_Profile.h:
        * Strategies/SHMIOP_Profile.i:
        * Strategies/UIOP_Acceptor.cpp:
        * Strategies/UIOP_Acceptor.h:
        * Strategies/UIOP_Profile.cpp:
        * Strategies/UIOP_Profile.h:
        * Strategies/UIOP_Profile.i:
        * TypeCodeFactory/TypeCodeFactory.dsp:
        * TypeCodeFactory/TypeCodeFactory.pidl:
        * TypeCodeFactory/TypeCodeFactoryC.cpp:
        * TypeCodeFactory/TypeCodeFactoryC.h:
        * TypeCodeFactory/TypeCodeFactoryC.inl:
        * TypeCodeFactory/TypeCodeFactory_Adapter_Impl.cpp:
        * TypeCodeFactory/TypeCodeFactory_Loader.h:
        * TypeCodeFactory/TypeCodeFactory_i.cpp:
        * TypeCodeFactory/TypeCodeFactory_i.h:
        * tests/Makefile:
        * tests/Makefile.bor:
        * tests/TAO_Tests.dsw:
        * tests/AMI/AMI_Test_Client.dsp:
        * tests/AMI/AMI_Test_Server.dsp:
        * tests/AMI/AMI_Test_Simple_Client.dsp:
        * tests/AMI_Buffering/admin.dsp:
        * tests/AMI_Buffering/client.dsp:
        * tests/AMI_Buffering/server.dsp:
        * tests/AMI_Timeouts/client.dsp:
        * tests/AMI_Timeouts/server.dsp:
        * tests/BiDirectional/client.dsp:
        * tests/BiDirectional/server.dsp:
        * tests/BiDirectional_NestedUpcall/client.dsp:
        * tests/BiDirectional_NestedUpcall/server.dsp:
        * tests/Big_Oneways/client.dsp:
        * tests/Big_Oneways/server.dsp:
        * tests/Big_Reply/client.dsp:
        * tests/Big_Reply/server.dsp:
        * tests/Big_Request_Muxing/client.dsp:
        * tests/Big_Request_Muxing/server.dsp:
        * tests/Big_Twoways/client.dsp:
        * tests/Big_Twoways/server.dsp:
        * tests/Blocking_Sync_None/client.dsp:
        * tests/Blocking_Sync_None/server.dsp:
        * tests/Cache_Growth_Test/client.dsp:
        * tests/Cache_Growth_Test/server.dsp:
        * tests/Client_Leaks/child.dsp:
        * tests/Client_Leaks/client.dsp:
        * tests/Client_Leaks/server.dsp:
        * tests/CodeSets/libs/IBM1047_ISO8859/Char_IBM1047_ISO8859_Translator.cpp:
        * tests/CodeSets/libs/IBM1047_ISO8859/IBM1047_ISO8859.dsp:
        * tests/CodeSets/simple/README
        * tests/CodeSets/simple/client.cpp:
        * tests/CodeSets/simple/server.cpp:
        * tests/CodeSets/simple/simple.idl:
        * tests/Codec/client.dsp:
        * tests/Collocation/Collocation_Test_Stubs.dsp:
        * tests/Connection_Purging/client.dsp:
        * tests/Connection_Purging/server.dsp:
        * tests/Crash_On_Write/client.dsp:
        * tests/Crash_On_Write/server.dsp:
        * tests/Crashed_Callback/client.dsp:
        * tests/Crashed_Callback/server.dsp:
        * tests/DLL_ORB/Test_Client_Module.dsp:
        * tests/DLL_ORB/Test_Server_Module.dsp:
        * tests/DSI_Gateway/DSI_Gateway_Client.dsp:
        * tests/DSI_Gateway/DSI_Gateway_Server.dsp:
        * tests/DynAny_Test/basic_test.dsp:
        * tests/DynAny_Test/data.cpp:
        * tests/DynAny_Test/test_dynany.cpp:
        * tests/DynAny_Test/test_dynstruct.cpp:
        * tests/DynAny_Test/test_dynunion.cpp:
        * tests/Explicit_Event_Loop/client.dsp:
        * tests/Explicit_Event_Loop/server.dsp:
        * tests/Exposed_Policies/Client.dsp:
        * tests/Exposed_Policies/Server.dsp:
        * tests/Faults/client.dsp:
        * tests/Faults/middle.dsp:
        * tests/Faults/ping.dsp:
        * tests/Faults/pong.dsp:
        * tests/Faults/server.dsp:
        * tests/Forwarding/client.dsp:
        * tests/Forwarding/server.dsp:
        * tests/Hello/client.dsp:
        * tests/Hello/server.dsp:
        * tests/IDL_Test/idl_test.dsp:
        * tests/InterOp-Naming/server.dsp:
        * tests/Leader_Followers/client.dsp:
        * tests/Leader_Followers/server.dsp:
        * tests/LongUpcalls/ami_client.dsp:
        * tests/LongUpcalls/ami_server.dsp:
        * tests/LongUpcalls/blocking_client.dsp:
        * tests/LongUpcalls/blocking_server.dsp:
        * tests/MProfile/client.dsp:
        * tests/MProfile/server.dsp:
        * tests/MT_Client/client.dsp:
        * tests/MT_Client/orb_creation.dsp:
        * tests/MT_Client/server.dsp:
        * tests/MT_Server/client.dsp:
        * tests/MT_Server/server.dsp:
        * tests/MT_Timeout/MT_Timeout_Client.dsp:
        * tests/MT_Timeout/MT_Timeout_Server.dsp:
        * tests/Multiple/Client.dsp:
        * tests/Multiple/Server.dsp:
        * tests/Multiple_Inheritance/client.dsp:
        * tests/Multiple_Inheritance/server.dsp:
        * tests/Muxing/client.dsp:
        * tests/Muxing/server.dsp:
        * tests/Native_Exceptions/client.dsp:
        * tests/Native_Exceptions/server.dsp:
        * tests/NestedUpcall/MT_Client_Test/client.dsp:
        * tests/NestedUpcall/MT_Client_Test/server.dsp:
        * tests/NestedUpcall/Simple/client.dsp:
        * tests/NestedUpcall/Simple/server.dsp:
        * tests/NestedUpcall/Triangle_Test/initiator.dsp:
        * tests/NestedUpcall/Triangle_Test/server_A.dsp:
        * tests/NestedUpcall/Triangle_Test/server_B.dsp:
        * tests/Nested_Event_Loop/client.dsp:
        * tests/Nested_Event_Loop/server.dsp:
        * tests/OBV/Any/client.dsp:
        * tests/OBV/Any/server.dsp:
        * tests/OBV/Factory/client.dsp:
        * tests/OBV/Factory/server.dsp:
        * tests/OBV/Forward/client.dsp:
        * tests/OBV/Forward/server.dsp:
        * tests/OBV/TC_Alignment/client.dsp:
        * tests/OBV/TC_Alignment/server.dsp:
        * tests/ORB_init/Portspan/portspan.dsp:
        * tests/ORT/client.dsp:
        * tests/ORT/server.dsp:
        * tests/Object_Loader/Test_DLL.dsp:
        * tests/Object_Loader/driver.dsp:
        * tests/OctetSeq/OctetSeq.dsp:
        * tests/OctetSeq/client.dsp:
        * tests/OctetSeq/server.dsp:
        * tests/Oneways_Invoking_Twoways/client.dsp:
        * tests/Oneways_Invoking_Twoways/server.dsp:
        * tests/POA/Default_Servant/Default_Servant.dsp:
        * tests/POA/Etherealization/Etherealization.dsp:
        * tests/POA/Excessive_Object_Deactivations/Excessive_Object_Deactivations.dsp:
        * tests/POA/Identity/Identity.dsp:
        * tests/POA/MT_Servant_Locator/MT_Servant_Locator.dsp:
        * tests/POA/Non_Servant_Upcalls/Non_Servant_Upcalls.dsp:
        * tests/POA/Object_Reactivation/Object_Reactivation.dsp:
        * tests/POA/POA_Destruction/POA_Destruction.dsp:
        * tests/POA/Persistent_ID/client.dsp:
        * tests/POA/Persistent_ID/server.dsp:
        * tests/POA/Single_Threaded_POA/Single_Threaded_POA.dsp:
        * tests/POA/wait_for_completion/wait_for_completion.dsp:
        * tests/Param_Test/any.cpp:
        * tests/Param_Test/anyop.cpp:
        * tests/Param_Test/anyop.dsp:
        * tests/Param_Test/client.dsp:
        * tests/Param_Test/complex_any.cpp:
        * tests/Param_Test/recursive_union.cpp:
        * tests/Param_Test/server.dsp:
        * tests/Queued_Message_Test/Queued_Message_Test.cpp:
        * tests/Reliable_Oneways/client.dsp:
        * tests/Reliable_Oneways/server.dsp:
        * tests/Server_Leaks/client.dsp:
        * tests/Server_Leaks/server.dsp:
        * tests/Single_Read/client.dsp:
        * tests/Single_Read/server.dsp:
        * tests/Timed_Buffered_Oneways/client.dsp:
        * tests/Timed_Buffered_Oneways/server.dsp:
        * tests/Timeout/client.dsp:
        * tests/Timeout/server.dsp:

          Modified files.

        * */Makefile.*:

          Updated dependencies on most makefiles in ACE_wrappers/TAO.

        Branch ChangeLog entries:

        Tue Mar  4 09:42:18 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tests/Param_Test/client.dsp:

                  Turned on RTTI for param_testC.cpp.

                * tests/Param_Test/anyop.dsp:

                  Same as above and removed link to Messaging library.

                * tests/Param_Test/anyop.cpp:

                  Re-added the var_array test, which now works, and added
                  tests of several other IDL types, testing for both
                  copying and non-copying insertion where applicable.

        Mon Mar  3 22:01:48 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/Any.cpp:
                * tao/Any.h:
                * tao/Any.i:
                * tao/Any_T.cpp:
                * tao/Any_T.h:
                * tao/Any_T.inl:
                * tao/CurrentC.cpp:
                * tao/DomainC.cpp:
                * tao/IOPC.cpp:
                * tao/ObjectReferenceTemplateC.cpp:
                * tao/PolicyC.cpp:
                * tao/PortableInterceptorC.cpp:
                * tao/TAOC.cpp:
                * tao/IFR_Client/IFR_BaseC.cpp:
                * tao/IFR_Client/IFR_BasicC.cpp:
                * tao/IFR_Client/IFR_ComponentsC.cpp:
                * tao/IFR_Client/IFR_ExtendedC.cpp:
                * tao/IORManipulation/IORC.cpp:
                * tao/Messaging/MessagingC.cpp:
                * tao/Messaging/Messaging_No_ImplC.cpp:
                * tao/Messaging/Messaging_SyncScope_PolicyC.cpp:
                * tao/Messaging/TAO_ExtC.cpp:
                * tao/PortableServer/Default_ORTC.cpp:
                * tao/PortableServer/ImR_LocatorC.cpp:
                * tao/PortableServer/ImplRepoC.cpp:
                * tao/PortableServer/PortableServerC.cpp:
                * tao/RTCORBA/RTCORBAC.cpp:
                * tao/RTPortableServer/RTPortableServerC.cpp:
                * tao/TypeCodeFactory/TypeCodeFactoryC.cpp:

                * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:

                  Changed implementation of extraction operators
                  using to_object, to_value and to_abstract_base
                  New design includes a method in generated code.

                * TAO_IDL/be/be_codegen.cpp:
                * TAO_IDL/be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:

                  Added a patch from Bala that changes the fetching of
                  the object key to call the stub object, instead
                  of the CORBA::Object method, which will soon be
                  eliminated.

                * tao/ValueBase.h:
                * tao/ValueBase.i:

                  Added the _ptr_type and _var_type typedefs to
                  to ValueBase_var, as well as the static methods
                  that are generated for other interface and
                  valuetype _var classes in TAO.

        Thu Feb 27 09:36:05 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * performance-tests/Anyop/Anyop.dsp:
                * performance-tests/Anyop/Makefile:
                * performance-tests/Anyop/Makefile.bor:
                * performance-tests/Anyop/anyop.cpp:
                * performance-tests/Anyop/test.idl:

                  New test for benchmarking Any insertion and extraction
                  operators.

                * performance-tests/Makefile:
                * performance-tests/Makefile.bor:
                * performance-tests/TAO_Perf_Tests.dsw:

                  Added new test to makefiles and MSVC workspace.

        Mon Feb 24 16:49:34 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.h:

                  New files for template classes containing utility methods
                  used by several IFR implementation classes.

                * orbsvcs/orbsvcs/IFRService/tmplinst.cpp:

                  Added additional explicit template instantiations corresponding
                  to actual uses of the template classes in the above files.


        Mon Feb 24 000:27:32 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
                * orbsvcs/orbsvcs/IFRService/Container_i.h:
                * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp:

                  Changed template functions in a non-template utility
                  class to non-template functions in a template class,
                  to avoid internal compiler errors with VC6.

                * tests/Param_Test/any.cpp:
                * orbsvcs/ImplRepo_Service/Forwarder.cpp:
                * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:
                * orbsvcs/orbsvcs/Notify/Service.h:
                * orbsvcs/orbsvcs/PortableGroup/POA_Hooks.cpp:
                * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Loader.h:
                * orbsvcs/orbsvcs/PortableGroup/Portable_Group_Map.cpp:
                * orbsvcs/orbsvcs/PortableGroup/Portable_Group_Map.h:
                * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
                * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.h:
                * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.h:
                * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.i:
                * orbsvcs/orbsvcs/Property/CosPropertyService_i.cpp:
                * orbsvcs/tests/InterfaceRepo/Application_Test/ifr_dii_client.cpp:
                * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.cpp:
                * examples/POA/DSI/Database_i.cpp:
                * tests/DynAny_Test/data.cpp:
                * tests/DynAny_Test/test_dynany.cpp:
                * tests/DynAny_Test/test_dynarray.cpp:
                * tests/DynAny_Test/test_dynenum.cpp:
                * tests/DynAny_Test/test_dynsequence.cpp:
                * tests/DynAny_Test/test_dynstruct.cpp:
                * tests/DynAny_Test/test_dynunion.cpp:
                * tests/Param_Test/complex_any.cpp:
                * tests/Param_Test/recursive_union.cpp:
                * tests/Queued_Message_Test/Queued_Message_Test.cpp:

                  Replaced instances of TAO_Object_Key with TAO::Object_Key.

                * tao/Any_T.cpp:

                  In cases where typed extraction fails and interpretive
                  extraction must be performed, the constructor of the
                  temporary CDR stream was changed to one that does not
                  own the underlying message block, thus eliminating a
                ` duplicate/release pair.

                * orbsvcs/tests/tests.dsw:

                  Removed some projects that no longer exist.

                * examples/AMI/FL_Callback/AMI_Peer.dsp:
                * examples/AMI/FL_Callback/AMI_Progress.dsp:
                * examples/Buffered_Oneways/client.dsp:
                * examples/Buffered_Oneways/server.dsp:
                * examples/Callback_Quoter/Consumer.dsp:
                * examples/Callback_Quoter/Notifier.dsp:
                * examples/Callback_Quoter/Supplier.dsp:
                * examples/Content_Server/AMI_Iterator/client.dsp:
                * examples/Content_Server/AMI_Iterator/server.dsp:
                * examples/Content_Server/AMI_Observer/client.dsp:
                * examples/Content_Server/AMI_Observer/server.dsp:
                * examples/Content_Server/SMI_Iterator/client.dsp:
                * examples/Content_Server/SMI_Iterator/server.dsp:
                * examples/Event_Comm/Consumer.dsp:
                * examples/Event_Comm/Notifier.dsp:
                * examples/Event_Comm/Supplier.dsp:
                * examples/Load_Balancing/client.dsp:
                * examples/Load_Balancing/server.dsp:
                * examples/Load_Balancing/service.dsp:
                * examples/Load_Balancing_persistent/client.dsp:
                * examples/Load_Balancing_persistent/server.dsp:
                * examples/Load_Balancing_persistent/service.dsp:
                * examples/OBV/Typed_Events/client.dsp:
                * examples/OBV/Typed_Events/server.dsp:
                * examples/POA/DSI/client.dsp:
                * examples/POA/DSI/server.dsp:
                * examples/POA/Default_Servant/client.dsp:
                * examples/POA/Default_Servant/server.dsp:
                * examples/POA/Forwarding/client.dsp:
                * examples/POA/Forwarding/server.dsp:
                * examples/POA/Generic_Servant/client.dsp:
                * examples/POA/Generic_Servant/server.dsp:
                * examples/POA/TIE/client.dsp:
                * examples/POA/TIE/server.dsp:
                * examples/Persistent_Grid/Persistent_Grid_Client_Files.dsp:
                * examples/Persistent_Grid/Persistent_Grid_Second_Client_Files.dsp:
                * examples/Persistent_Grid/Persistent_Grid_Server_Files.dsp:
                * examples/Quoter/Factory_Finder.dsp:
                * examples/Quoter/Generic_Factory.dsp:
                * examples/Quoter/client.dsp:
                * examples/Quoter/server.dsp:
                * examples/Simple/bank/client.dsp:
                * examples/Simple/bank/server.dsp:
                * examples/Simple/chat/client.dsp:
                * examples/Simple/chat/server.dsp:
                * examples/Simple/echo/client.dsp:
                * examples/Simple/echo/server.dsp:
                * examples/Simple/grid/client.dsp:
                * examples/Simple/grid/server.dsp:
                * examples/Simple/time/client.dsp:
                * examples/Simple/time/server.dsp:
                * examples/Simple/time-date/Time_Date.dsp:
                * examples/Simple/time-date/client.dsp:
                * examples/Simulator/Event_Supplier/DualEC_Sup.dsp:
                * examples/Simulator/Event_Supplier/Event_Sup.dsp:
                * examples/Simulator/Event_Supplier/Logging_Sup.dsp:
                * examples/TypeCode_Creation/TypeCode_Creation.dsp:
                * orbsvcs/examples/CosEC/Factory/FactoryClient.dsp:
                * orbsvcs/examples/CosEC/Factory/FactoryServer.dsp:
                * orbsvcs/examples/Security/Send_File/Send_File_Client.dsp:
                * orbsvcs/examples/Security/Send_File/Send_File_Server.dsp:
                * orbsvcs/orbsvcs/AV.dsp:
                * orbsvcs/orbsvcs/CosConcurrency.dsp:
                * orbsvcs/orbsvcs/CosEvent.dsp:
                * orbsvcs/orbsvcs/CosLifeCycle.dsp:
                * orbsvcs/orbsvcs/CosLoadBalancing.dsp:
                * orbsvcs/orbsvcs/CosNaming.dsp:
                * orbsvcs/orbsvcs/CosNotification.dsp:
                * orbsvcs/orbsvcs/CosProperty.dsp:
                * orbsvcs/orbsvcs/CosTime.dsp:
                * orbsvcs/orbsvcs/CosTrading.dsp:
                * orbsvcs/orbsvcs/DsEventLogAdmin.dsp:
                * orbsvcs/orbsvcs/DsLogAdmin.dsp:
                * orbsvcs/orbsvcs/DsNotifyLogAdmin.dsp:
                * orbsvcs/orbsvcs/FT_ORB.dsp:
                * orbsvcs/orbsvcs/Fault_Tolerance.dsp:
                * orbsvcs/orbsvcs/PortableGroup.dsp:
                * orbsvcs/orbsvcs/RTEvent.dsp:
                * orbsvcs/orbsvcs/RTEventLog.dsp:
                * orbsvcs/orbsvcs/RTSched.dsp:
                * orbsvcs/orbsvcs/SSLIOP.dsp:
                * orbsvcs/orbsvcs/Security.dsp:
                * orbsvcs/orbsvcs/Svc_Utils.dsp:
                * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/client.dsp:
                * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/server.dsp:
                * orbsvcs/performance-tests/RTEvent/lib/TAO_RTEC_Perf.dsp:
                * orbsvcs/tests/EC_Custom_Marshal/ECCM_Consumer.dsp:
                * orbsvcs/tests/EC_Custom_Marshal/ECCM_Supplier.dsp:
                * orbsvcs/tests/FaultTolerance/IOGR/Manager.dsp:
                * orbsvcs/tests/FaultTolerance/IOGR/server.dsp:
                * orbsvcs/tests/ImplRepo/airplane_client.dsp:
                * orbsvcs/tests/ImplRepo/airplane_server.dsp:
                * orbsvcs/tests/ImplRepo/nestea_client.dsp:
                * orbsvcs/tests/ImplRepo/nestea_server.dsp:
                * orbsvcs/tests/InterfaceRepo/IFR_Test/IFR_Test.dsp:
                * orbsvcs/tests/Interoperable_Naming/client.dsp:
                * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/client.dsp:
                * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/server.dsp:
                * orbsvcs/tests/Miop/McastHello/client.dsp:
                * orbsvcs/tests/Miop/McastHello/server.dsp:
                * orbsvcs/tests/Notify/Blocking/Structured_Consumer.dsp:
                * orbsvcs/tests/Notify/Blocking/Structured_Supplier.dsp:
                * orbsvcs/tests/Notify/Discarding/Sequence_Consumer.dsp:
                * orbsvcs/tests/Notify/Discarding/Sequence_Supplier.dsp:
                * orbsvcs/tests/Notify/Discarding/Structured_Consumer.dsp:
                * orbsvcs/tests/Notify/Discarding/Structured_Supplier.dsp:
                * orbsvcs/tests/Notify/MT_Dispatching/Structured_Consumer.dsp:
                * orbsvcs/tests/Notify/MT_Dispatching/Structured_Supplier.dsp:
                * orbsvcs/tests/Notify/Ordering/Sequence_Consumer.dsp:
                * orbsvcs/tests/Notify/Ordering/Sequence_Supplier.dsp:
                * orbsvcs/tests/Notify/Ordering/Structured_Consumer.dsp:
                * orbsvcs/tests/Notify/Ordering/Structured_Supplier.dsp:
                * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Consumer.dsp:
                * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Supplier.dsp:
                * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Consumer.dsp:
                * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Supplier.dsp:
                * orbsvcs/tests/Notify/Structured_Filter/Structured_Filter_Consumer.dsp:
                * orbsvcs/tests/Notify/Structured_Filter/Structured_Filter_Supplier.dsp:
                * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Multi_Filter_Consumer.dsp:
                * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Multi_Filter_Supplier.dsp:
                * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Consumer.dsp:
                * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Supplier.dsp:
                * orbsvcs/tests/Notify/performance-tests/Filter/Structured_Consumer.dsp:
                * orbsvcs/tests/Notify/performance-tests/Filter/Structured_Supplier.dsp:
                * orbsvcs/tests/Security/Big_Request/client.dsp:
                * orbsvcs/tests/Security/Big_Request/server.dsp:
                * orbsvcs/tests/Security/Callback/client.dsp:
                * orbsvcs/tests/Security/Callback/server.dsp:
                * orbsvcs/tests/Security/MT_SSLIOP/client.dsp:
                * orbsvcs/tests/Security/MT_SSLIOP/server.dsp:
                * orbsvcs/tests/Security/Secure_Invocation/client.dsp:
                * orbsvcs/tests/Security/Secure_Invocation/server.dsp:
                * orbsvcs/tests/Security/SecurityLevel1/client.dsp:
                * orbsvcs/tests/Security/SecurityLevel1/server.dsp:
                * orbsvcs/tests/Simple_Naming/client.dsp:
                * orbsvcs/tests/Trading/TradingLib.dsp:
                * performance-tests/Callback/client.dsp:
                * performance-tests/Callback/server.dsp:
                * performance-tests/Cubit/TAO/DII_Cubit/client.dsp:
                * performance-tests/Cubit/TAO/IDL_Cubit/client.dsp:
                * performance-tests/Cubit/TAO/IDL_Cubit/collocation_test.dsp:
                * performance-tests/Cubit/TAO/IDL_Cubit/server.dsp:
                * performance-tests/Cubit/TAO/MT_Cubit/client.dsp:
                * performance-tests/Cubit/TAO/MT_Cubit/server.dsp:
                * performance-tests/Latency/AMH/Single_Threaded/client.dsp:
                * performance-tests/Latency/AMH/Single_Threaded/server.dsp:
                * performance-tests/Latency/AMI/client.dsp:
                * performance-tests/Latency/AMI/server.dsp:
                * performance-tests/Latency/DII/client.dsp:
                * performance-tests/Latency/DII/server.dsp:
                * performance-tests/Latency/DSI/client.dsp:
                * performance-tests/Latency/DSI/server.dsp:
                * performance-tests/Latency/Deferred/client.dsp:
                * performance-tests/Latency/Deferred/server.dsp:
                * performance-tests/Latency/Single_Threaded/client.dsp:
                * performance-tests/Latency/Single_Threaded/server.dsp:
                * performance-tests/Latency/Thread_Per_Connection/client.dsp:
                * performance-tests/Latency/Thread_Per_Connection/server.dsp:
                * performance-tests/Latency/Thread_Pool/client.dsp:
                * performance-tests/Latency/Thread_Pool/server.dsp:
                * performance-tests/POA/Implicit_Activation/client.dsp:
                * performance-tests/POA/Implicit_Activation/collocated.dsp:
                * performance-tests/POA/Implicit_Activation/server.dsp:
                * performance-tests/POA/Object_Creation_And_Registration/registration.dsp:
                * performance-tests/Pluggable/client.dsp:
                * performance-tests/Pluggable/server.dsp:
                * performance-tests/RTCorba/Multiple_Endpoints/Common/RTCORBA_Common.dsp:
                * performance-tests/RTCorba/Oneways/Reliable/client.dsp:
                * performance-tests/RTCorba/Oneways/Reliable/server.dsp:
                * performance-tests/RTCorba/Thread_Pool/client.dsp:
                * performance-tests/RTCorba/Thread_Pool/server.dsp:
                * performance-tests/Throughput/client.dsp:
                * performance-tests/Throughput/server.dsp:
                * tao/TAO.dsp:
                * tao/BiDir_GIOP/TAO_BiDir_GIOP.dsp:
                * tao/DynamicAny/TAO_DynamicAny.dsp:
                * tao/IFR_Client/TAO_IFR_Client.dsp:
                * tao/IORManipulation/TAO_IORManip.dsp:
                * tao/IORTable/TAO_IORTable.dsp:
                * tao/Messaging/TAO_Messaging.dsp:
                * tao/PortableServer/TAO_PortableServer.dsp:
                * tao/RTCORBA/TAO_RTCORBA.dsp:
                * tao/RTPortableServer/TAO_RTPortableServer.dsp:
                * tao/Strategies/SHMIOP_Profile.i:
                * tao/TypeCodeFactory/TypeCodeFactory.dsp:
                * tests/AMI/AMI_Test_Client.dsp:
                * tests/AMI/AMI_Test_Simple_Client.dsp:
                * tests/AMI_Buffering/admin.dsp:
                * tests/AMI_Buffering/client.dsp:
                * tests/AMI_Buffering/server.dsp:
                * tests/AMI_Timeouts/client.dsp:
                * tests/AMI_Timeouts/server.dsp:
                * tests/BiDirectional/client.dsp:
                * tests/BiDirectional/server.dsp:
                * tests/BiDirectional_NestedUpcall/client.dsp:
                * tests/BiDirectional_NestedUpcall/server.dsp:
                * tests/Big_Oneways/client.dsp:
                * tests/Big_Oneways/server.dsp:
                * tests/Big_Reply/client.dsp:
                * tests/Big_Reply/server.dsp:
                * tests/Big_Request_Muxing/client.dsp:
                * tests/Big_Request_Muxing/server.dsp:
                * tests/Big_Twoways/client.dsp:
                * tests/Big_Twoways/server.dsp:
                * tests/Blocking_Sync_None/client.dsp:
                * tests/Blocking_Sync_None/server.dsp:
                * tests/Cache_Growth_Test/client.dsp:
                * tests/Cache_Growth_Test/server.dsp:
                * tests/Client_Leaks/child.dsp:
                * tests/Client_Leaks/client.dsp:
                * tests/Client_Leaks/server.dsp:
                * tests/Codec/client.dsp:
                * tests/Collocation/Collocation_Test_Stubs.dsp:
                * tests/Connection_Purging/client.dsp:
                * tests/Connection_Purging/server.dsp:
                * tests/Crash_On_Write/client.dsp:
                * tests/Crash_On_Write/server.dsp:
                * tests/Crashed_Callback/client.dsp:
                * tests/Crashed_Callback/server.dsp:
                * tests/DLL_ORB/Test_Client_Module.dsp:
                * tests/DLL_ORB/Test_Server_Module.dsp:
                * tests/DSI_Gateway/DSI_Gateway_Client.dsp:
                * tests/DSI_Gateway/DSI_Gateway_Server.dsp:
                * tests/DynAny_Test/basic_test.dsp:
                * tests/Explicit_Event_Loop/client.dsp:
                * tests/Explicit_Event_Loop/server.dsp:
                * tests/Exposed_Policies/Client.dsp:
                * tests/Exposed_Policies/Server.dsp:
                * tests/Faults/client.dsp:
                * tests/Faults/middle.dsp:
                * tests/Faults/ping.dsp:
                * tests/Faults/pong.dsp:
                * tests/Faults/server.dsp:
                * tests/Forwarding/client.dsp:
                * tests/Forwarding/server.dsp:
                * tests/Hello/client.dsp:
                * tests/Hello/server.dsp:
                * tests/IDL_Test/idl_test.dsp:
                * tests/InterOp-Naming/server.dsp:
                * tests/Leader_Followers/client.dsp:
                * tests/Leader_Followers/server.dsp:
                * tests/LongUpcalls/ami_client.dsp:
                * tests/LongUpcalls/ami_server.dsp:
                * tests/LongUpcalls/blocking_client.dsp:
                * tests/LongUpcalls/blocking_server.dsp:
                * tests/MProfile/client.dsp:
                * tests/MProfile/server.dsp:
                * tests/MT_Client/client.dsp:
                * tests/MT_Client/orb_creation.dsp:
                * tests/MT_Client/server.dsp:
                * tests/MT_Server/client.dsp:
                * tests/MT_Server/server.dsp:
                * tests/MT_Timeout/MT_Timeout_Client.dsp:
                * tests/MT_Timeout/MT_Timeout_Server.dsp:
                * tests/Multiple/Client.dsp:
                * tests/Multiple/Server.dsp:
                * tests/Multiple_Inheritance/client.dsp:
                * tests/Multiple_Inheritance/server.dsp:
                * tests/Muxing/client.dsp:
                * tests/Muxing/server.dsp:
                * tests/Native_Exceptions/client.dsp:
                * tests/Native_Exceptions/server.dsp:
                * tests/NestedUpcall/MT_Client_Test/client.dsp:
                * tests/NestedUpcall/MT_Client_Test/server.dsp:
                * tests/NestedUpcall/Simple/client.dsp:
                * tests/NestedUpcall/Simple/server.dsp:
                * tests/NestedUpcall/Triangle_Test/initiator.dsp:
                * tests/NestedUpcall/Triangle_Test/server_A.dsp:
                * tests/NestedUpcall/Triangle_Test/server_B.dsp:
                * tests/Nested_Event_Loop/client.dsp:
                * tests/Nested_Event_Loop/server.dsp:
                * tests/ORB_init/Portspan/portspan.dsp:
                * tests/ORT/client.dsp:
                * tests/ORT/server.dsp:
                * tests/Object_Loader/Test_DLL.dsp:
                * tests/Object_Loader/driver.dsp:
                * tests/OctetSeq/OctetSeq.dsp:
                * tests/OctetSeq/client.dsp:
                * tests/OctetSeq/server.dsp:
                * tests/Oneways_Invoking_Twoways/client.dsp:
                * tests/Oneways_Invoking_Twoways/server.dsp:
                * tests/POA/Default_Servant/Default_Servant.dsp:
                * tests/POA/Etherealization/Etherealization.dsp:
                * tests/POA/Excessive_Object_Deactivations/Excessive_Object_Deactivations.dsp:
                * tests/POA/Identity/Identity.dsp:
                * tests/POA/MT_Servant_Locator/MT_Servant_Locator.dsp:
                * tests/POA/Non_Servant_Upcalls/Non_Servant_Upcalls.dsp:
                * tests/POA/Object_Reactivation/Object_Reactivation.dsp:
                * tests/POA/POA_Destruction/POA_Destruction.dsp:
                * tests/POA/Persistent_ID/client.dsp:
                * tests/POA/Persistent_ID/server.dsp:
                * tests/POA/Single_Threaded_POA/Single_Threaded_POA.dsp:
                * tests/POA/wait_for_completion/wait_for_completion.dsp:
                * tests/Param_Test/client.dsp:
                * tests/Param_Test/server.dsp:
                * tests/Reliable_Oneways/client.dsp:
                * tests/Reliable_Oneways/server.dsp:
                * tests/Server_Leaks/client.dsp:
                * tests/Server_Leaks/server.dsp:
                * tests/Single_Read/client.dsp:
                * tests/Single_Read/server.dsp:
                * tests/Timed_Buffered_Oneways/client.dsp:
                * tests/Timed_Buffered_Oneways/server.dsp:
                * tests/Timeout/client.dsp:
                * tests/Timeout/server.dsp:
                * tests/ior_corbaloc/ior_corbaloc_client.dsp:
                * tests/ior_corbaloc/ior_corbaloc_server.dsp:
                * tests/ior_corbaloc/ior_corbaname_client.dsp:

                  Turned on RTTI for all generated stub source files (since Any_T.cpp
                  is included through Any_T.h via corba.h) and also for a few
                  other files that use Anys.

        Fri Feb 21 19:38:19 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.cpp:
                * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
                * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/OperationDef_i.cpp:
                * tao/Any_T.cpp:
                * tao/Any.cpp:

                  Fixed bugs turned up from running IFR_Test.

                * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.cpp:

                  Changed test checks because AttributeDef creation no longer
                  automatically creates corresponding OperationDef(s).

                * tao/Asynch_Queued_Message.cpp:
                * tao/Sequence.h:
                * tao/Synch_Queued_Message.cpp:
                * tao/Thread_Lane_Resources.h:

                  Added an include file to each of these to get rid of
                  build errors.

        Thu Feb 20 15:48:19 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * orbsvcs/orbsvcs/IFRService.dsp:
                * orbsvcs/orbsvcs/Makefile.IFRService
                * orbsvcs/orbsvcs/IFRService/AliasDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ArrayDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/AttributeDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/AttributeDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.h:
                * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ComponentDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ConstantDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ConsumesDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ConsumesDef_i.h:
                * orbsvcs/orbsvcs/IFRService/Contained_i.cpp:
                * orbsvcs/orbsvcs/IFRService/Contained_i.h:
                * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
                * orbsvcs/orbsvcs/IFRService/Container_i.h:
                * orbsvcs/orbsvcs/IFRService/EmitsDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/EmitsDef_i.h:
                * orbsvcs/orbsvcs/IFRService/EnumDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/EventPortDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/EventPortDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ExceptionDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ExtAbstractInterfaceDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ExtAbstractInterfaceDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ExtAttributeDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ExtAttributeDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ExtInterfaceDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ExtInterfaceDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ExtLocalInterfaceDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ExtLocalInterfaceDef_i.h:
                * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.h:
                * orbsvcs/orbsvcs/IFRService/IRObject_i.cpp:
                * orbsvcs/orbsvcs/IFRService/IRObject_i.h:
                * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.cpp:
                * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.h:
                * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.h:
                * orbsvcs/orbsvcs/IFRService/OperationDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/PublishesDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/PublishesDef_i.h:
                * orbsvcs/orbsvcs/IFRService/Repository_i.cpp:
                * orbsvcs/orbsvcs/IFRService/SequenceDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/StructDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ValueBoxDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ValueDef_i.h:

                  A start on completing the implementation of the CCM-related
                  additions to the IFR spec.

                * tests/AMI/AMI_Test_Server.dsp:
                * tests/AMI_Buffering/admin.dsp:
                * tests/AMI_Buffering/client.dsp:
                * tests/AMI_Buffering/server.dsp:
                * tests/AMI_Timeouts/client.dsp:
                * tests/AMI_Timeouts/server.dsp:
                * tests/IDL_Test/idl_test.dsp:
                * tests/OBV/Any/client.dsp:
                * tests/OBV/Any/server.dsp:
                * tests/OBV/Factory/client.dsp:
                * tests/OBV/Factory/server.dsp:
                * tests/OBV/Forward/client.dsp:
                * tests/OBV/Forward/server.dsp:
                * tests/OBV/TC_Alignment/client.dsp:
                * tests/OBV/TC_Alignment/server.dsp:
                * tests/Param_Test/anyop.cpp:
                * tests/Param_Test/anyop.dsp:
                * tests/Param_Test/client.dsp:
                * tests/Param_Test/server.dsp:

                  Tests in which RTTI had to be turned on in the MSVC
                  project to build without warnings, due to the new
                  Any implementation. This is not a complete list, just
                  the ones I have had occasion to run so far.

        Sun Feb  9 21:53:11 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.h:
                * orbsvcs/orbsvcs/IFRService/ComponentModuleDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ComponentModuleDef_i.h:
                * orbsvcs/orbsvcs/IFRService/EventPortDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/EventPortDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ExtAbstractInterfaceDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ExtAbstractInterfaceDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ExtAttributeDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ExtAttributeDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ExtInterfaceDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ExtInterfaceDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ExtLocalInterfaceDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ExtLocalInterfaceDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.h:
                * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.cpp:
                * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.h:

                  New files add to Interface Repository implementing the
                  changes to the ONG specification that allows a
                  component-aware IFR to interoperate with one implemented
                  before the CCM-related IDL changes.

                * orbsvcs/orbsvcs/IFRService/PrimaryKeyDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/PrimaryKeyDef_i.h:

                  Files removed because the class they implement has been
                  removed from the specification.

                * orbsvcs/orbsvcs/IFRService/AttributeDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/AttributeDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ComponentDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ComponentRepository_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ComponentRepository_i.h:
                * orbsvcs/orbsvcs/IFRService/ConsumesDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ConsumesDef_i.h:
                * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
                * orbsvcs/orbsvcs/IFRService/Container_i.h:
                * orbsvcs/orbsvcs/IFRService/EmitsDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/EmitsDef_i.h:
                * orbsvcs/orbsvcs/IFRService/EventDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/EventDef_i.h:
                * orbsvcs/orbsvcs/IFRService/FactoryDef_i.h:
                * orbsvcs/orbsvcs/IFRService/FinderDef_i.h:
                * orbsvcs/orbsvcs/IFRService/HomeDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/HomeDef_i.h:
                * orbsvcs/orbsvcs/IFRService/IFR_BaseS.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_BaseS.h:
                * orbsvcs/orbsvcs/IFRService/IFR_BaseS.i:
                * orbsvcs/orbsvcs/IFRService/IFR_BaseS_T.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_BaseS_T.h:
                * orbsvcs/orbsvcs/IFRService/IFR_BaseS_T.i:
                * orbsvcs/orbsvcs/IFRService/IFR_BasicS.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_BasicS.h:
                * orbsvcs/orbsvcs/IFRService/IFR_BasicS.i:
                * orbsvcs/orbsvcs/IFRService/IFR_BasicS_T.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_BasicS_T.h:
                * orbsvcs/orbsvcs/IFRService/IFR_BasicS_T.i:
                * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.h:
                * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.i:
                * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.h:
                * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.i:
                * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.h:
                * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.i:
                * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS_T.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS_T.h:
                * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS_T.i:
                * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
                * orbsvcs/orbsvcs/IFRService/IRObject_i.cpp:
                * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.h:
                * orbsvcs/orbsvcs/IFRService/LocalInterfaceDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/LocalInterfaceDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ProvidesDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ProvidesDef_i.h:
                * orbsvcs/orbsvcs/IFRService/PublishesDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/PublishesDef_i.h:
                * orbsvcs/orbsvcs/IFRService/UsesDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/UsesDef_i.h:
                * orbsvcs/orbsvcs/IFRService/concrete_classes.h:
                * orbsvcs/orbsvcs/IFRService/tmplinst.cpp:

                  Interface Repository Service implementation files
                  modified to comply with the latest OMG
                  specification (CORBA 3.0). All skeleton files have
                  been regenerated.

                * tao/IFR_Client/IFR_Base.pidl:
                * tao/IFR_Client/IFR_BaseC.cpp:
                * tao/IFR_Client/IFR_BaseC.h:
                * tao/IFR_Client/IFR_BaseC.i:
                * tao/IFR_Client/IFR_Basic.pidl:
                * tao/IFR_Client/IFR_BasicC.cpp:
                * tao/IFR_Client/IFR_BasicC.h:
                * tao/IFR_Client/IFR_BasicC.i:
                * tao/IFR_Client/IFR_Components.pidl:
                * tao/IFR_Client/IFR_ComponentsC.cpp:
                * tao/IFR_Client/IFR_ComponentsC.h:
                * tao/IFR_Client/IFR_ComponentsC.i:
                * tao/IFR_Client/IFR_Extended.pidl:
                * tao/IFR_Client/IFR_ExtendedC.cpp:
                * tao/IFR_Client/IFR_ExtendedC.h:
                * tao/IFR_Client/IFR_ExtendedC.i:

                  Interface Repository Client files modified for the same
                  reason as above. All .pidl files have been mdofied and
                  stub files regenerated.

        Sat Feb  8 17:13:54 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * TAO_IDL/be/be_visitor_union/cdr_op_ci.cpp:

                  Changed some generated CORBA_Anys to CORBA::Any.

                * TAO_IDL/be/be_visitor_union_branch/cdr_op_ci.cpp:

                  When marshaling an interface union member, replaced a
                  generated call to the virtual marshal() method with a
                  call to the global <flat_name>_marshal() method, if
                  the interface is not yet defined when it is referenced.

        Sat Feb  8 13:15:10 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * TAO_IDL/be/be_visitor_structure/structure.cpp:

                  Added some switch cases that are now necessary because of
                  the recent removal of context states.. Error was discovered
                  generating code for TAO/tests/IDL_Test/union.idl.

        Wed Feb  5 13:11:42 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/TypeCodeFactory/TypeCodeFactory_i.cpp (valid_content_type):

                  Fixed a bug in the unaliasing loop.

        Mon Feb  3 16:14:27 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:

                  Added comments and cosmetic changes to create_recursive_tc().
                  Also changed update_map() to use the CDR stream's total
                  length to get the unaligned offset. Thanks to Matej
                  Sekoranja <matej.sekoranza@ijs.si> for suggesting this
                  last change.

        Mon Feb  3 11:30:31 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/TypeCodeFactory/TypeCodeFactory_i.cpp (create_recursive_tc):

                  Changed ACE_ENV_ARG_DECL_NOT_USED to ACE_ENV_ARG_DECL.

        Wed Jan 29 20:47:39 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * TAO_IDL/be/be_visitor_context.cpp:
                * TAO_IDL/be/be_visitor_attribute/attribute.cpp:
                * TAO_IDL/be/be_visitor_component/component_ch.cpp:
                * TAO_IDL/be/be_visitor_component/component_cs.cpp:
                * TAO_IDL/be/be_visitor_component/component_sh.cpp:
                * TAO_IDL/be/be_visitor_enum/enum_ch.cpp:
                * TAO_IDL/be/be_visitor_enum/enum_cs.cpp:
                * TAO_IDL/be/be_visitor_exception/exception_ch.cpp:
                * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:
                * TAO_IDL/be/be_visitor_interface/base_proxy_impl_ch.cpp:
                * TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:
                * TAO_IDL/be/be_visitor_interface/direct_proxy_impl_ss.cpp:
                * TAO_IDL/be/be_visitor_interface/interceptors_cs.cpp:
                * TAO_IDL/be/be_visitor_interface/interceptors_ss.cpp:
                * TAO_IDL/be/be_visitor_interface/interface.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_sh.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
                * TAO_IDL/be/be_visitor_interface/proxy_brokers_ch.cpp:
                * TAO_IDL/be/be_visitor_interface/remote_proxy_impl_ch.cpp:
                * TAO_IDL/be/be_visitor_interface/remote_proxy_impl_cs.cpp:
                * TAO_IDL/be/be_visitor_interface/thru_poa_proxy_impl_sh.cpp:
                * TAO_IDL/be/be_visitor_interface/thru_poa_proxy_impl_ss.cpp:
                * TAO_IDL/be/be_visitor_operation/amh_rh_sh.cpp:
                * TAO_IDL/be/be_visitor_operation/amh_rh_ss.cpp:
                * TAO_IDL/be/be_visitor_operation/amh_sh.cpp:
                * TAO_IDL/be/be_visitor_operation/ami_cs.cpp:
                * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_cs.cpp:
                * TAO_IDL/be/be_visitor_operation/arglist.cpp:
                * TAO_IDL/be/be_visitor_operation/argument.cpp:
                * TAO_IDL/be/be_visitor_operation/base_proxy_impl_ch.cpp:
                * TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:
                * TAO_IDL/be/be_visitor_operation/interceptors_arglist.cpp:
                * TAO_IDL/be/be_visitor_operation/interceptors_cs.cpp:
                * TAO_IDL/be/be_visitor_operation/interceptors_ss.cpp:
                * TAO_IDL/be/be_visitor_operation/operation.cpp:
                * TAO_IDL/be/be_visitor_operation/operation_ch.cpp:
                * TAO_IDL/be/be_visitor_operation/operation_cs.cpp:
                * TAO_IDL/be/be_visitor_operation/operation_ih.cpp:
                * TAO_IDL/be/be_visitor_operation/operation_is.cpp:
                * TAO_IDL/be/be_visitor_operation/operation_sh.cpp:
                * TAO_IDL/be/be_visitor_operation/operation_ss.cpp:
                * TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:
                * TAO_IDL/be/be_visitor_operation/remote_proxy_impl_cs.cpp:
                * TAO_IDL/be/be_visitor_operation/smart_proxy_ch.cpp:
                * TAO_IDL/be/be_visitor_operation/smart_proxy_cs.cpp:
                * TAO_IDL/be/be_visitor_operation/thru_poa_proxy_impl_ss.cpp:
                * TAO_IDL/be/be_visitor_operation/tie_sh.cpp:
                * TAO_IDL/be/be_visitor_operation/tie_si.cpp:
                * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
                * TAO_IDL/be/be_visitor_sequence/gen_bounded_obj_sequence_ci.cpp:
                * TAO_IDL/be/be_visitor_sequence/gen_bounded_obj_sequence_cs.cpp:
                * TAO_IDL/be/be_visitor_sequence/gen_bounded_sequence_ci.cpp:
                * TAO_IDL/be/be_visitor_sequence/gen_bounded_sequence_cs.cpp:
                * TAO_IDL/be/be_visitor_sequence/gen_unbounded_obj_sequence_ci.cpp:
                * TAO_IDL/be/be_visitor_sequence/gen_unbounded_obj_sequence_cs.cpp:
                * TAO_IDL/be/be_visitor_sequence/gen_unbounded_sequence_ci.cpp:
                * TAO_IDL/be/be_visitor_sequence/gen_unbounded_sequence_cs.cpp:
                * TAO_IDL/be/be_visitor_sequence/sequence_base.cpp:
                * TAO_IDL/be/be_visitor_sequence/sequence_ci.cpp:
                * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
                * TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:
                * TAO_IDL/be/be_visitor_structure/structure_ch.cpp:
                * TAO_IDL/be/be_visitor_structure/structure_cs.cpp:
                * TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:
                * TAO_IDL/be/be_visitor_typedef/typedef_cs.cpp:
                * TAO_IDL/be/be_visitor_union/cdr_op_ch.cpp:
                * TAO_IDL/be/be_visitor_union/cdr_op_ci.cpp:
                * TAO_IDL/be/be_visitor_union/cdr_op_cs.cpp:
                * TAO_IDL/be/be_visitor_union/union.cpp:
                * TAO_IDL/be/be_visitor_union/union_ch.cpp:
                * TAO_IDL/be/be_visitor_union/union_ci.cpp:
                * TAO_IDL/be/be_visitor_union/union_cs.cpp:
                * TAO_IDL/be/be_visitor_valuetype/arglist.cpp:
                * TAO_IDL/be/be_visitor_valuetype/valuetype.cpp:
                * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
                * TAO_IDL/be/be_visitor_valuetype/valuetype_ci.cpp:
                * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:
                * TAO_IDL/be/be_visitor_valuetype/valuetype_init_arglist_ch.cpp:
                * TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:
                * TAO_IDL/be_include/be_codegen.h:

                  More removal of context state enum values.

                * TAO_IDL/fe/idl.ll:
                * TAO_IDL/fe/lex.yy.cpp:

                  Cosmetic changes.

        Wed Jan 29 01:04:07 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * TAO_IDL/be/be_visitor_decl.cpp:
                * TAO_IDL/be/be_visitor_array/array_ch.cpp:
                * TAO_IDL/be/be_visitor_array/array_ci.cpp:
                * TAO_IDL/be/be_visitor_array/array_cs.cpp:
                * TAO_IDL/be/be_visitor_array/cdr_op_ch.cpp:
                * TAO_IDL/be/be_visitor_array/cdr_op_ci.cpp:
                * TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp:
                * TAO_IDL/be/be_visitor_attribute/attribute.cpp:
                * TAO_IDL/be/be_visitor_component/any_op_ch.cpp:
                * TAO_IDL/be/be_visitor_component/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_component/cdr_op_ch.cpp:
                * TAO_IDL/be/be_visitor_component/cdr_op_ci.cpp:
                * TAO_IDL/be/be_visitor_component/cdr_op_cs.cpp:
                * TAO_IDL/be/be_visitor_component/component.cpp:
                * TAO_IDL/be/be_visitor_component/component_ih.cpp:
                * TAO_IDL/be/be_visitor_component/component_is.cpp:
                * TAO_IDL/be/be_visitor_component/component_si.cpp:
                * TAO_IDL/be/be_visitor_component/component_ss.cpp:
                * TAO_IDL/be/be_visitor_component_fwd/any_op_ch.cpp:
                * TAO_IDL/be/be_visitor_component_fwd/cdr_op_ch.cpp:
                * TAO_IDL/be/be_visitor_component_fwd/cdr_op_ci.cpp:
                * TAO_IDL/be/be_visitor_component_fwd/component_fwd_ch.cpp:
                * TAO_IDL/be/be_visitor_exception/exception.cpp:
                * TAO_IDL/be/be_visitor_field/cdr_op_ch.cpp:
                * TAO_IDL/be/be_visitor_field/cdr_op_ci.cpp:
                * TAO_IDL/be/be_visitor_field/cdr_op_cs.cpp:
                * TAO_IDL/be/be_visitor_field/field_ch.cpp:
                * TAO_IDL/be/be_visitor_field/field_ci.cpp:
                * TAO_IDL/be/be_visitor_field/field_cs.cpp:
                * TAO_IDL/be/be_visitor_interface/interface.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_ih.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_is.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_sh.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_si.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
                * TAO_IDL/be/be_visitor_interface/tie_sh.cpp:
                * TAO_IDL/be/be_visitor_interface/tie_si.cpp:
                * TAO_IDL/be/be_visitor_module/module.cpp:
                * TAO_IDL/be/be_visitor_root/root.cpp:
                * TAO_IDL/be/be_visitor_root/root_sth.cpp:
                * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
                * TAO_IDL/be/be_visitor_sequence/gen_bounded_sequence_ch.cpp:
                * TAO_IDL/be/be_visitor_sequence/gen_bounded_sequence_ci.cpp:
                * TAO_IDL/be/be_visitor_sequence/gen_bounded_sequence_cs.cpp:
                * TAO_IDL/be/be_visitor_sequence/gen_unbounded_sequence_ch.cpp:
                * TAO_IDL/be/be_visitor_sequence/gen_unbounded_sequence_ci.cpp:
                * TAO_IDL/be/be_visitor_sequence/gen_unbounded_sequence_cs.cpp:
                * TAO_IDL/be/be_visitor_structure/structure.cpp:
                * TAO_IDL/be/be_visitor_typedef/typedef.cpp:
                * TAO_IDL/be/be_visitor_union/union.cpp:
                * TAO_IDL/be/be_visitor_union_branch/cdr_op_ch.cpp:
                * TAO_IDL/be/be_visitor_union_branch/cdr_op_ci.cpp:
                * TAO_IDL/be/be_visitor_union_branch/cdr_op_cs.cpp:
                * TAO_IDL/be/be_visitor_union_branch/public_ch.cpp:
                * TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:
                * TAO_IDL/be/be_visitor_union_branch/public_cs.cpp:
                * TAO_IDL/be/be_visitor_valuetype/ami_exception_holder_ch.cpp:
                * TAO_IDL/be/be_visitor_valuetype/field_cdr_ch.cpp:
                * TAO_IDL/be/be_visitor_valuetype/field_cdr_ci.cpp:
                * TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:
                * TAO_IDL/be/be_visitor_valuetype/field_ci.cpp:
                * TAO_IDL/be/be_visitor_valuetype/field_cs.cpp:
                * TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:
                * TAO_IDL/be/be_visitor_valuetype/valuetype.cpp:
                * TAO_IDL/be_include/be_codegen.h:

                  Removed more of the context state enum values.

                * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_cs.cpp:

                  Changed generated code to use CORBA::OctetSeq in TAO
                  instead of Messaging::ExceptionHolder::_tao_octet_seq,
                  which no longer exists.

        Mon Jan 27 000:31:33 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * TAO_IDL/be/be_interface_strategy.cpp:
                * TAO_IDL/be/be_visitor_array/array_ch.cpp:
                * TAO_IDL/be/be_visitor_array/array_cs.cpp:
                * TAO_IDL/be/be_visitor_array/cdr_op_ch.cpp:
                * TAO_IDL/be/be_visitor_array/cdr_op_ci.cpp:
                * TAO_IDL/be/be_visitor_component/component.cpp:
                * TAO_IDL/be/be_visitor_eventtype/any_op_ch.cpp:
                * TAO_IDL/be/be_visitor_eventtype/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_eventtype/cdr_op_ch.cpp:
                * TAO_IDL/be/be_visitor_eventtype/cdr_op_ci.cpp:
                * TAO_IDL/be/be_visitor_eventtype/cdr_op_cs.cpp:
                * TAO_IDL/be/be_visitor_eventtype/eventtype_ch.cpp:
                * TAO_IDL/be/be_visitor_eventtype/eventtype_ci.cpp:
                * TAO_IDL/be/be_visitor_eventtype/eventtype_cs.cpp:
                * TAO_IDL/be/be_visitor_eventtype/eventtype_obv_ch.cpp:
                * TAO_IDL/be/be_visitor_eventtype/eventtype_obv_ci.cpp:
                * TAO_IDL/be/be_visitor_eventtype/eventtype_obv_cs.cpp:
                * TAO_IDL/be/be_visitor_eventtype/eventtype_sh.cpp:
                * TAO_IDL/be/be_visitor_eventtype/eventtype_si.cpp:
                * TAO_IDL/be/be_visitor_eventtype/eventtype_ss.cpp:
                * TAO_IDL/be/be_visitor_eventtype_fwd/any_op_ch.cpp:
                * TAO_IDL/be/be_visitor_eventtype_fwd/cdr_op_ch.cpp:
                * TAO_IDL/be/be_visitor_eventtype_fwd/cdr_op_ci.cpp:
                * TAO_IDL/be/be_visitor_eventtype_fwd/eventtype_fwd_ch.cpp:
                * TAO_IDL/be/be_visitor_exception/exception.cpp:
                * TAO_IDL/be/be_visitor_field/cdr_op_ch.cpp:
                * TAO_IDL/be/be_visitor_field/cdr_op_ci.cpp:
                * TAO_IDL/be/be_visitor_field/cdr_op_cs.cpp:
                * TAO_IDL/be/be_visitor_field/field_ch.cpp:
                * TAO_IDL/be/be_visitor_field/field_ci.cpp:
                * TAO_IDL/be/be_visitor_field/field_cs.cpp:
                * TAO_IDL/be/be_visitor_interface/interface.cpp:
                * TAO_IDL/be/be_visitor_module/module.cpp:
                * TAO_IDL/be/be_visitor_root/root.cpp:
                * TAO_IDL/be/be_visitor_structure/structure.cpp:
                * TAO_IDL/be/be_visitor_typedef/typedef.cpp:
                * TAO_IDL/be/be_visitor_union/discriminant_ch.cpp:
                * TAO_IDL/be/be_visitor_union/discriminant_cs.cpp:
                * TAO_IDL/be/be_visitor_union_branch/cdr_op_ch.cpp:
                * TAO_IDL/be/be_visitor_union_branch/cdr_op_ci.cpp:
                * TAO_IDL/be/be_visitor_union_branch/cdr_op_cs.cpp:
                * TAO_IDL/be/be_visitor_union_branch/public_ch.cpp:
                * TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:
                * TAO_IDL/be/be_visitor_union_branch/public_cs.cpp:
                * TAO_IDL/be/be_visitor_valuetype/field_cdr_ch.cpp:
                * TAO_IDL/be/be_visitor_valuetype/field_cdr_ci.cpp:
                * TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:
                * TAO_IDL/be/be_visitor_valuetype/field_ci.cpp:
                * TAO_IDL/be/be_visitor_valuetype/field_cs.cpp:
                * TAO_IDL/be/be_visitor_valuetype/obv_module.cpp:
                * TAO_IDL/be/be_visitor_valuetype/valuetype.cpp:
                * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
                * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:
                * TAO_IDL/be_include/be_codegen.h:

                  Removed some of the context state enum values. This is
                  just a start - most of these can be removed and replaced
                  with the corresponding TAO_ROOT_* value. Also a change
                  to the creation of union typecodes (specifically the
                  insertion of label values into the typecode) required
                  by the new Any implementation.

                * orbsvcs/IFR_Service/ifr_adding_visitor_union.cpp:
                * orbsvcs/orbsvcs/IFRService/IRObject_i.cpp:

                  Minor changes related to the new Any implementation.

                * tao/Typecode.cpp:
                * tao/Typecode.h:
                * tao/Typecode.i:
                * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
                * tao/TypeCodeFactory/TypeCodeFactory_i.h:

                  Added recursive typecode support to TypeCodeFactory.
                  This involved fixing the TAO Typecode class to
                  handle recursive valuetype typecodes.

        Sun Jan 12 02:08:58 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * orbsvcs/orbsvcs/CosEvent.dsp:
                * orbsvcs/orbsvcs/CosNaming.dsp:
                * orbsvcs/orbsvcs/CosNotification.dsp:
                * orbsvcs/orbsvcs/CosTrading.dsp:
                * orbsvcs/orbsvcs/DsEventLogAdmin.dsp:
                * orbsvcs/orbsvcs/DsLogAdmin.dsp:
                * orbsvcs/orbsvcs/DsNotifyLogAdmin.dsp:

                  Turned on RTTI in these projects, since they use the new
                  Any operators.

                * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.cpp:
                * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
                * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:
                * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp:

                  Fixed old-style Any internal calls in these files.

        Sun Jan 12 02:01:05 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/NVList.cpp:
                * tao/BiDir_GIOP/BiDirPolicy.pidl:
                * tao/BiDir_GIOP/BiDirPolicyC.cpp:
                * tao/BiDir_GIOP/BiDirPolicyC.h:
                * tao/BiDir_GIOP/BiDirPolicyC.i:
                * tao/Domain/DomainS.cpp:
                * tao/Domain/DomainS.h:
                * tao/Domain/DomainS.i:
                * tao/Domain/DomainS_T.cpp:
                * tao/Domain/DomainS_T.h:
                * tao/Domain/DomainS_T.i:
                * tao/DynamicAny/DynAnyFactory.cpp:
                * tao/DynamicAny/DynAnyFactory.h:
                * tao/DynamicAny/DynAny_i.cpp:
                * tao/DynamicAny/DynAny_i.h:
                * tao/DynamicAny/DynArray_i.cpp:
                * tao/DynamicAny/DynArray_i.h:
                * tao/DynamicAny/DynCommon.cpp:
                * tao/DynamicAny/DynCommon.h:
                * tao/DynamicAny/DynEnum_i.cpp:
                * tao/DynamicAny/DynEnum_i.h:
                * tao/DynamicAny/DynSequence_i.cpp:
                * tao/DynamicAny/DynSequence_i.h:
                * tao/DynamicAny/DynStruct_i.cpp:
                * tao/DynamicAny/DynStruct_i.h:
                * tao/DynamicAny/DynUnion_i.cpp:
                * tao/DynamicAny/DynUnion_i.h:
                * tao/DynamicAny/DynamicAny.pidl:
                * tao/DynamicAny/DynamicAnyC.cpp:
                * tao/DynamicAny/DynamicAnyC.h:
                * tao/DynamicAny/DynamicAnyC.i:
                * tao/DynamicInterface/Context.cpp:
                * tao/DynamicInterface/Context.h:
                * tao/DynamicInterface/DII_Invocation.cpp:
                * tao/DynamicInterface/Dynamic_Implementation.cpp:
                * tao/DynamicInterface/Dynamic_Implementation.h:
                * tao/DynamicInterface/Request.cpp:
                * tao/DynamicInterface/Request.h:
                * tao/DynamicInterface/Request.i:nl
                * tao/DynamicInterface/Server_Request.cpp:
                * tao/DynamicInterface/Unknown_User_Exception.cpp:
                * tao/DynamicInterface/Unknown_User_Exception.h:
                * tao/IORManipulation/IOR.pidl:
                * tao/IORManipulation/IORC.cpp:
                * tao/IORManipulation/IORC.h:
                * tao/IORManipulation/IORC.i:
                * tao/IORManipulation/TAO_IORManip.dsp:
                * tao/IORTable/IORTable.pidl:
                * tao/IORTable/IORTableC.cpp:
                * tao/IORTable/IORTableC.h:
                * tao/IORTable/IORTableC.i:
                * tao/Messaging/Messaging.pidl:
                * tao/Messaging/MessagingC.cpp:
                * tao/Messaging/MessagingC.h:
                * tao/Messaging/MessagingC.i:
                * tao/Messaging/MessagingS.cpp:
                * tao/Messaging/MessagingS.h:
                * tao/Messaging/MessagingS.i:
                * tao/Messaging/MessagingS_T.cpp:
                * tao/Messaging/MessagingS_T.h:
                * tao/Messaging/MessagingS_T.i:
                * tao/Messaging/Messaging_No_Impl.pidl:
                * tao/Messaging/Messaging_No_ImplC.cpp:
                * tao/Messaging/Messaging_No_ImplC.h:
                * tao/Messaging/Messaging_No_ImplC.i:
                * tao/Messaging/Messaging_RT_Policy.pidl:
                * tao/Messaging/Messaging_RT_PolicyC.cpp:
                * tao/Messaging/Messaging_RT_PolicyC.h:
                * tao/Messaging/Messaging_RT_PolicyC.i:
                * tao/Messaging/Messaging_SyncScope_Policy.pidl:
                * tao/Messaging/Messaging_SyncScope_PolicyC.cpp:
                * tao/Messaging/Messaging_SyncScope_PolicyC.h:
                * tao/Messaging/Messaging_SyncScope_PolicyC.i:
                * tao/Messaging/TAO_Ext.pidl:
                * tao/Messaging/TAO_ExtC.cpp:
                * tao/Messaging/TAO_ExtC.h:
                * tao/Messaging/TAO_ExtC.i:
                * tao/Messaging/TAO_Messaging.dsp:
                * tao/RTCORBA/RTCORBA.pidl:
                * tao/RTCORBA/RTCORBAC.cpp:
                * tao/RTCORBA/RTCORBAC.h:
                * tao/RTCORBA/RTCORBAC.i:
                * tao/RTCORBA/TAO_RTCORBA.dsp:
                * tao/RTPortableServer/RTPortableServer.pidl:
                * tao/RTPortableServer/RTPortableServerC.cpp:
                * tao/RTPortableServer/RTPortableServerC.h:
                * tao/RTPortableServer/RTPortableServerC.i:
                * tao/RTPortableServer/TAO_RTPortableServer.dsp:

                  Regenerated hand-crafted files in all TAO satellite libraries,
                  modified PIDL files and MSVC project files as needed, and
                  fixed a few mistakes in TAO, all relating to the new Any
                  implementation.

        Sat Jan 11 14:58:39 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/PortableServer/Default_ORT.pidl:
                * tao/PortableServer/Default_ORTC.cpp:
                * tao/PortableServer/Default_ORTC.h:
                * tao/PortableServer/Default_ORTC.i:
                * tao/PortableServer/ImR_Locator.pidl:
                * tao/PortableServer/ImR_LocatorC.cpp:
                * tao/PortableServer/ImR_LocatorC.h:
                * tao/PortableServer/ImR_LocatorC.i:
                * tao/PortableServer/ImR_LocatorS.cpp:
                * tao/PortableServer/ImR_LocatorS.h:
                * tao/PortableServer/ImR_LocatorS.i:
                * tao/PortableServer/ImR_LocatorS_T.cpp:
                * tao/PortableServer/ImR_LocatorS_T.h:
                * tao/PortableServer/ImR_LocatorS_T.i:
                * tao/PortableServer/ImplRepoC.cpp:
                * tao/PortableServer/ImplRepoC.h:
                * tao/PortableServer/ImplRepoC.i:
                * tao/PortableServer/ImplRepoS.cpp:
                * tao/PortableServer/ImplRepoS.h:
                * tao/PortableServer/ImplRepoS.i:
                * tao/PortableServer/ImplRepoS_T.cpp:
                * tao/PortableServer/ImplRepoS_T.h:
                * tao/PortableServer/ImplRepoS_T.i:
                * tao/PortableServer/Object_Adapter.cpp:
                * tao/PortableServer/Object_Adapter.i:
                * tao/PortableServer/POA.cpp:
                * tao/PortableServer/POA.h:
                * tao/PortableServer/PolicyS.cpp:
                * tao/PortableServer/PolicyS.h:
                * tao/PortableServer/PolicyS.i:
                * tao/PortableServer/PolicyS_T.cpp:
                * tao/PortableServer/PolicyS_T.h:
                * tao/PortableServer/PolicyS_T.i:
                * tao/PortableServer/PortableServer.pidl:
                * tao/PortableServer/PortableServerC.cpp:
                * tao/PortableServer/PortableServerC.h:
                * tao/PortableServer/PortableServerC.i:
                * tao/PortableServer/TAO_PortableServer.dsp:

                  Regeneration of .pidl files and other changes in the
                  PortableServer library.

        Sat Jan 11 000:18:33 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/Any.cpp:
                * tao/Any.h:
                * tao/Any_T.h:
                * tao/NVList.cpp:
                * tao/Typecode_Constants.cpp:
                * tao/append.cpp:

                  More cleanup of internal incompatibilities with the new
                  Any implementation.

        Fri Jan 10 18:57:58 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/Any.cpp:
                * tao/Any.h:
                * tao/CDR_Encaps_Codec.cpp:
                * tao/NVList.cpp:
                * tao/RequestInfo_Util.cpp:
                * tao/append.cpp:
                * tao/skip.cpp:

                  Some cleanup of internal incompatibilities with the new
                  Any implementation.

        Fri Jan 10 11:30:08 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/Any_T.inl:

                  Removed unnecessary forward declaration.

                * tao/Exception.cpp:
                * tao/Exception.h:

                  Added missing stuff related to new Any implementation.

                * tao/GIOPC.cpp:

                  Removed bodies of TAO::ObjectKey CDR operators. They are
                  now in Object_KeyC.cpp.

                * tao/Object_KeyC.cpp:
                * tao/Object_KeyC.i:
                * tao/PortableInterceptorC.cpp:
                * tao/PortableInterceptorC.h:

                  Fixed hand-crafting oversights.

                * tao/Typecode_Constants.cpp:

                  Removed ObjectId typecode, since it is now in ObjectIdListC.cpp.

        Fri Jan 10 09:53:45 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/ORB.cpp:
                * tao/ORB.h:
                * tao/ORB_Core.cpp:
                * tao/ORB_Core.h:
                * tao/corbafwd.h:

                  Removed typedef of ObjectIdList * to ObjectIdList_ptr.
                  Only interfaces and some well-known pseudo-objects
                  should have the _ptr typedef.

        Fri Jan 10 09:30:51 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/ObjectIDList.cpp:
                * tao/ObjectIDList.h:
                * tao/ObjectIDList.i:
                * tao/Services.cpp:
                * tao/Services.h:
                * tao/Services.i:

                  Removed these files containing hand-crafted generated
                  code.

                * tao/ObjectIdListC.cpp:
                * tao/ObjectIdListC.h:
                * tao/ObjectIdListC.i:
                * tao/Services.pidl:
                * tao/ServicesC.cpp:
                * tao/ServicesC.h:
                * tao/ServicesC.i:

                  Replaced the removed files with those above, and added
                  a .pidl file to generate the ServicesC.* files.

                * tao/ORB.h:
                * tao/ORB_Core.cpp:
                * tao/StringSeq.pidl:
                * tao/TAO.dsp:
                * tao/TAO_Server_Request.h:
                * tao/Typecode_Constants.cpp:
                * tao/corba.h:
                * tao/corbafwd.cpp:
                * tao/corbafwd.h:
                * tao/orb.idl:

                  Changes related to the new files listed above.

        Thu Jan  9 18:51:43 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/Acceptor_Filter.h:
                * tao/Adapter.cpp:
                * tao/Adapter.h:
                * tao/Any.h:
                * tao/Bounds.pidl:
                * tao/BoundsC.cpp:
                * tao/BoundsC.h:
                * tao/BoundsC.i:
                * tao/CONV_FRAME.pidl:
                * tao/CONV_FRAMEC.cpp:
                * tao/CONV_FRAMEC.h:
                * tao/CONV_FRAMEC.i:
                * tao/Current.pidl:
                * tao/CurrentC.cpp:
                * tao/CurrentC.h:
                * tao/CurrentC.i:
                * tao/Domain.pidl:
                * tao/DomainC.cpp:
                * tao/DomainC.h:
                * tao/DomainC.i:
                * tao/Dynamic.pidl:
                * tao/DynamicC.cpp:
                * tao/DynamicC.h:
                * tao/DynamicC.i:
                * tao/Exception.cpp:
                * tao/GIOP.pidl:
                * tao/GIOPC.cpp:
                * tao/GIOPC.h:
                * tao/GIOPC.i:
                * tao/GIOP_Message_Base.cpp:
                * tao/GIOP_Message_Generator_Parser_10.cpp:
                * tao/GIOP_Message_Generator_Parser_12.cpp:
                * tao/GIOP_Message_Lite.cpp:
                * tao/GIOP_Message_Locate_Header.h:
                * tao/GIOP_Message_Locate_Header.i:
                * tao/IIOP.pidl:
                * tao/IIOPC.cpp:
                * tao/IIOPC.h:
                * tao/IIOPC.i:
                * tao/IIOP_Acceptor.cpp:
                * tao/IIOP_Acceptor.h:
                * tao/IIOP_Profile.cpp:
                * tao/IIOP_Profile.h:
                * tao/IIOP_Profile.i:
                * tao/IOP.pidl:
                * tao/IOPS.cpp:
                * tao/IOPS.h:
                * tao/IOPS.i:
                * tao/IOPS_T.cpp:
                * tao/IOPS_T.h:
                * tao/IOPS_T.i:
                * tao/LocalObject.cpp:
                * tao/LocalObject.h:
                * tao/Messaging_PolicyValue.pidl:
                * tao/Messaging_PolicyValueC.cpp:
                * tao/Messaging_PolicyValueC.h:
                * tao/Messaging_PolicyValueC.i:
                * tao/Messaging_SyncScope.pidl:
                * tao/Messaging_SyncScopeC.cpp:
                * tao/Messaging_SyncScopeC.h:
                * tao/Messaging_SyncScopeC.i:
                * tao/Object.cpp:
                * tao/Object.h:
                * tao/ObjectReferenceTemplate.pidl:
                * tao/ObjectReferenceTemplateC.cpp:
                * tao/ObjectReferenceTemplateC.h:
                * tao/ObjectReferenceTemplateC.i:
                * tao/Object_KeyC.cpp:
                * tao/Object_KeyC.h:
                * tao/Object_KeyC.i:
                * tao/OctetSeq.pidl:
                * tao/OctetSeqC.cpp:
                * tao/OctetSeqC.h:
                * tao/OctetSeqC.i:
                * tao/Policy.pidl:
                * tao/Policy_Forward.pidl:
                * tao/Policy_ForwardC.cpp:
                * tao/Policy_ForwardC.h:
                * tao/Policy_ForwardC.i:
                * tao/Pollable.pidl:
                * tao/PollableC.cpp:
                * tao/PollableC.h:
                * tao/PollableC.i:
                * tao/PortableInterceptor.pidl:
                * tao/PortableInterceptorC.cpp:
                * tao/PortableInterceptorC.h:
                * tao/PortableInterceptorC.i:
                * tao/Profile.cpp:
                * tao/Profile.h:
                * tao/StringSeq.pidl:
                * tao/StringSeqC.cpp:
                * tao/StringSeqC.h:
                * tao/StringSeqC.i:
                * tao/TAO.pidl:
                * tao/TAO_Server_Request.cpp:
                * tao/TAO_Server_Request.h:
                * tao/TAO_Server_Request.i:
                * tao/Tagged_Profile.h:
                * tao/Tagged_Profile.i:
                * tao/TimeBase.pidl:
                * tao/TimeBaseC.cpp:
                * tao/TimeBaseC.h:
                * tao/TimeBaseC.i:
                * tao/Transport_Acceptor.h:
                * tao/WrongTransaction.pidl:
                * tao/WrongTransactionC.cpp:
                * tao/WrongTransactionC.h:
                * tao/WrongTransactionC.i:
                * tao/corbafwd.h:
                * tao/target_specification.h:
                * tao/target_specification.i:
                * tao/IORTable/Table_Adapter.cpp:
                * tao/IORTable/Table_Adapter.h:
                * tao/PortableServer/Default_Acceptor_Filter.cpp:
                * tao/PortableServer/Default_Acceptor_Filter.h:
                * tao/PortableServer/Object_Adapter.cpp:
                * tao/PortableServer/Object_Adapter.h:
                * tao/PortableServer/POA.cpp:
                * tao/PortableServer/Servant_Base.i:
                * tao/RTPortableServer/RT_Acceptor_Filters.cpp:
                * tao/RTPortableServer/RT_Acceptor_Filters.h:
                * tao/RTPortableServer/RT_POA.cpp:
                * tao/RTPortableServer/RT_POA.h:
                * tao/Strategies/DIOP_Acceptor.cpp:
                * tao/Strategies/DIOP_Acceptor.h:
                * tao/Strategies/DIOP_Profile.cpp:
                * tao/Strategies/DIOP_Profile.h:
                * tao/Strategies/DIOP_Profile.i:
                * tao/Strategies/SHMIOP_Acceptor.cpp:
                * tao/Strategies/SHMIOP_Acceptor.h:
                * tao/Strategies/SHMIOP_Profile.cpp:
                * tao/Strategies/SHMIOP_Profile.h:
                * tao/Strategies/SHMIOP_Profile.i:
                * tao/Strategies/UIOP_Acceptor.cpp:
                * tao/Strategies/UIOP_Acceptor.h:
                * tao/Strategies/UIOP_Profile.cpp:
                * tao/Strategies/UIOP_Profile.h:
                * tao/Strategies/UIOP_Profile.i:

                  Regenerated hand-crafted files, and replaced flat
                  names with scoped names for some identifiers.

                * ObjectIdList.pidl:

                  New file, empty as of now, which will contain
                  typedefs for CORBA::ORB::ObjectId and
                  CORBA::ORB::ObjectIdList. The file will be
                  included in orb.idl.

        Wed Jan  8 22:43:39 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/Any.h:
                * tao/IOPC.cpp:
                * tao/IOPC.h:
                * tao/IOPC.i:
                * tao/PolicyC.cpp:
                * tao/PolicyC.h:
                * tao/PolicyC.i:
                * tao/TAOC.cpp:
                * tao/TAOC.h:
                * tao/TAOC.i:

                  Regenerated files from IOP.pidl, Policy.pidl and TAO.pidl,
                  and removed items from Any.h that the old versions of these
                  generated files depended on.

        Wed Jan  8 17:44:48 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/Typecode.h:
                * tao/Typecode.cpp:

                  Completed addition of eventtype typecode support,
                  also cosmetic changes.

                * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
                * tao/TypeCodeFactory/TypeCodeFactory_i.h:

                  Additional factoring out of common code.

        Wed Jan  8 11:40:58 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
                * tao/TypeCodeFactory/TypeCodeFactory_i.h:

                  Fixed typos.

        Wed Jan  8 11:03:23 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/Any.cpp:

                  Added explicit template instantiations used in the
                  insertion/extraction operators.

                * TAO_IDL/be/be_visitor_array/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_enum/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_union/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:

                  Added code generation for explicit template instantiation
                  of template classes used in the Any operators.

        Wed Jan  8 10:53:44 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/Typecode.cpp:
                * tao/Typecode.h:

                  Added valuetype case to private_member_name, added
                  eventtype, component and home cases to other methods,
                  and updated comments in the header file.

                * tao/TypeCodeFactory/TypeCodeFactory.pidl:
                * tao/TypeCodeFactory/TypeCodeFactoryC.cpp:
                * tao/TypeCodeFactory/TypeCodeFactoryC.h:
                * tao/TypeCodeFactory/TypeCodeFactoryC.inl:

                  Added 'create_event_tc' to the TypeCodeFactory interface and
                  regenerated the code.

                * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
                * tao/TypeCodeFactory/TypeCodeFactory_i.h:

                  Filled in 'create_value_tc' method, added 'create_event_tc'
                  method, and factored out some common code.

        Tue Dec 17 15:36:19 2002  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/Any_T.inl(demarshal_value):

                  Replaced forany temporary with a local variable instantiation.
                  Many compilers don't like the temporary.

                * tao/Messaging/MessagingS.cpp:

                  Replaced an occurrence of CORBA_InterfaceDef with
                  CORBA::InterfaceDef.

        Tue Dec 17 13:06:06 2002  Jeff Parsons <j.parsons@vanderbilt.edu>

                * TAO_IDL/be/be_visitor_array/cdr_op_ci.cpp:

                  Fixed an error in the logic that caused a problem with
                  an array of array.

        Sat Dec 14 22:30:22 2002  Jeff Parsons <j.parsons@vanderbilt.edu>

                * orbsvcs/orbsvcs/IFRService/IRObject_i.cpp (update_key):

                  A few more tweaks for hopefully better performance.

        Sat Dec 14 19:56:13 2002  Jeff Parsons <j.parsons@vanderbilt.edu>

                * TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
                * TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_union/any_op_cs.cpp:
                * orbsvcs/orbsvcs/IFRService/AliasDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ArrayDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/AttributeDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ConstantDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/Contained_i.cpp:
                * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
                * orbsvcs/orbsvcs/IFRService/EnumDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ExceptionDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/IRObject_i.cpp:
                * orbsvcs/orbsvcs/IFRService/IRObject_i.h:
                * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/OperationDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/Repository_i.cpp:
                * orbsvcs/orbsvcs/IFRService/SequenceDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/StructDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ValueBoxDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp:
                * orbsvcs/tests/InterfaceRepo/IFR_Test/Admin_Client.cpp:
                * orbsvcs/tests/InterfaceRepo/IFR_Test/run_test.pl:
                * orbsvcs/tests/InterfaceRepo/Latency_Test/Latency_Query_Client.cpp:
                * orbsvcs/tests/InterfaceRepo/Latency_Test/Latency_Query_Client.h:
                * tao/Any.cpp:
                * tao/Any.h:
                * tao/Any_T.cpp:
                * tao/Any_T.h:
                * tao/Any_T.inl:
                * tao/Typecode.cpp:
                * tao/Typecode.i:
                * tao/IFR_Client/IFR_BaseC.cpp:
                * tao/IFR_Client/IFR_BasicC.cpp:
                * tao/IFR_Client/IFR_ComponentsC.cpp:
                * tao/IFR_Client/IFR_ExtendedC.cpp:
                * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
                * tao/TypeCodeFactory/TypeCodeFactory_i.h:

                  Debugging the interaction of the optimized IFR and the new
                  Any implementation.

        Fri Dec 13 14:30:19 2002  Jeff Parsons <j.parsons@vanderbilt.edu>

                * orbsvcs/tests/InterfaceRepo/InterfaceRepo.dsw:
                * orbsvcs/tests/InterfaceRepo/Makefile:

                  Added project below to workspace, and directory to Makefile.

                * orbsvcs/tests/InterfaceRepo/Latency_Test/Latency Test.dsp:
                * orbsvcs/tests/InterfaceRepo/Latency_Test/Latency_Query_Client.cpp:
                * orbsvcs/tests/InterfaceRepo/Latency_Test/Latency_Query_Client.h:
                * orbsvcs/tests/InterfaceRepo/Latency_Test/Makefile:
                * orbsvcs/tests/InterfaceRepo/Latency_Test/client.cpp:
                * orbsvcs/tests/InterfaceRepo/Latency_Test/run_test.pl:

                  New files for a simple latency/throughput test on the Interface
                  Repository.

        Fri Dec 13 13:14:19 2002  Jeff Parsons <j.parsons@vanderbilt.edu>

                * orbsvcs/IFR_Service/Makefile.BE:
                * orbsvcs/IFR_Service/Makefile.EX:
                * orbsvcs/IFR_Service/Makefile.IFR_Service:
                * orbsvcs/orbsvcs/Makefile.IFRService:

                  Updated dependencies.

        Fri Dec 13 11:48:24 2002  Jeff Parsons <j.parsons@vanderbilt.edu>

                * orbsvcs/orbsvcs/IFRService/AliasDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ComponentRepository_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ComponentRepository_i.h:
                * orbsvcs/orbsvcs/IFRService/IRObject_i.cpp:
                * orbsvcs/orbsvcs/IFRService/OperationDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/Repository_i.cpp:
                * orbsvcs/orbsvcs/IFRService/Repository_i.h:
                * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp:

                  Fixed various minor errors - preprocessor directive syntax,
                  throw spec agreement, and unused variables.

        Thu Dec 12 23:45:14 2002  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/Any.cpp:
                * tao/Any_T.cpp:
                * tao/Any_T.h:

                  More changes related to the 'const' qualifier, to get more
                  compilers happy with the template code.

                * tao/TypeCodeFactory/TypeCodeFactory.dsp:

                  Turned on RTTI in this project.

        Thu Dec 12 17:24:41 2002  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/Typecode.h:

                  Fixed wrong signature of _tao_any_destructor typedef.

        Thu Dec 12 16:22:17 2002  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/Any.h:
                * tao/Any_T.cpp:
                * tao/Any_T.h:

                  Minor fixes for things caught by gcc 3.2.

        Wed Dec 11 22:26:56 2002  Jeff Parsons <j.parsons@vanderbilt.edu>

                * tao/Any_T.cpp:
                * tao/Any_T.h:
                * tao/Any_T.inl:

                  New files added to TAO for the template classes of the
                  revamped Any implementation. The original Any class contains
                  few spec-required methods but is mostly a container for
                  these template classes. Thanks to Carlos O'Ryan
                  <coryan@atdesk.com> for guidance with the design.

                * orbsvcs/orbsvcs/IFRService/Servant_Factory.cpp:
                * orbsvcs/orbsvcs/IFRService/Servant_Factory.h:
                * orbsvcs/orbsvcs/IFRService/Servant_Locator.cpp:
                * orbsvcs/orbsvcs/IFRService/Servant_Locator.h:
                * tao/IFR_TypeCodes.cpp:

                  Files removed from TAO and the Interface Repository.

                * TAO_IDL/be/be_visitor_array/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_array/cdr_op_ci.cpp:
                * TAO_IDL/be/be_visitor_enum/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_exception/cdr_op_ci.cpp:
                * TAO_IDL/be/be_visitor_field/cdr_op_ci.cpp:
                * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_ci.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
                * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
                * TAO_IDL/be/be_visitor_root/root.cpp:
                * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
                * TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:
                * TAO_IDL/be/be_visitor_union/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_union/cdr_op_ci.cpp:
                * TAO_IDL/be/be_visitor_union_branch/cdr_op_ci.cpp:
                * TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp:
                * TAO_IDL/be/be_visitor_valuetype/field_cdr_ci.cpp:

                  Changes to the IDL compiler to support the changes to
                  the TAO Any implementation. Also changes to support the
                  runtime detection of an attempt to marshal an IDL type
                  which contains (at any nested level) a local interface.
                  Now the cases where a local interface is passed as a
                  non-local base class, and where a union may have a
                  local interface as its active member (or may not) are
                  discovered at runtime. Zero is returned from the
                  attempt to marshal at some level, and the stub operation
                  will therefore throw CORBA::MARSHAL, as required.

                * orbsvcs/IFR_Service/be_global.cpp:
                * orbsvcs/IFR_Service/be_global.h:
                * orbsvcs/IFR_Service/be_produce.cpp:
                * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:
                * orbsvcs/IFR_Service/ifr_adding_visitor.h:
                * orbsvcs/IFR_Service/ifr_adding_visitor_exception.cpp:
                * orbsvcs/IFR_Service/ifr_adding_visitor_exception.h:
                * orbsvcs/IFR_Service/ifr_adding_visitor_operation.cpp:
                * orbsvcs/IFR_Service/ifr_adding_visitor_operation.h:
                * orbsvcs/IFR_Service/ifr_adding_visitor_structure.cpp:
                * orbsvcs/IFR_Service/ifr_adding_visitor_structure.h:
                * orbsvcs/IFR_Service/ifr_adding_visitor_union.cpp:
                * orbsvcs/IFR_Service/ifr_adding_visitor_union.h:
                * orbsvcs/IFR_Service/ifr_removing_visitor.cpp:

                  Changes to tao_ifr to reflect the removal of all
                  CORBA_* global classes for Interface Repository objects.
                  All references to these classes must now use the scoped
                  name.

                * orbsvcs/IFR_Service/IFR_Service.cpp:
                * orbsvcs/orbsvcs/IFRService/AbstractInterfaceDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/AbstractInterfaceDef_i.h:
                * orbsvcs/orbsvcs/IFRService/AliasDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/AliasDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ArrayDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ArrayDef_i.h:
                * orbsvcs/orbsvcs/IFRService/AttributeDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/AttributeDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ComponentDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ComponentRepository_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ComponentRepository_i.h:
                * orbsvcs/orbsvcs/IFRService/ConstantDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ConstantDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ConsumesDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ConsumesDef_i.h:
                * orbsvcs/orbsvcs/IFRService/Contained_i.cpp:
                * orbsvcs/orbsvcs/IFRService/Contained_i.h:
                * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
                * orbsvcs/orbsvcs/IFRService/Container_i.h:
                * orbsvcs/orbsvcs/IFRService/EmitsDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/EmitsDef_i.h:
                * orbsvcs/orbsvcs/IFRService/EnumDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/EnumDef_i.h:
                * orbsvcs/orbsvcs/IFRService/EventDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/EventDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ExceptionDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ExceptionDef_i.h:
                * orbsvcs/orbsvcs/IFRService/FactoryDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/FactoryDef_i.h:
                * orbsvcs/orbsvcs/IFRService/FinderDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/FinderDef_i.h:
                * orbsvcs/orbsvcs/IFRService/FixedDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/FixedDef_i.h:
                * orbsvcs/orbsvcs/IFRService/HomeDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/HomeDef_i.h:
                * orbsvcs/orbsvcs/IFRService/IDLType_i.cpp:
                * orbsvcs/orbsvcs/IFRService/IDLType_i.h:
                * orbsvcs/orbsvcs/IFRService/IFR_BaseS.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_BaseS.h:
                * orbsvcs/orbsvcs/IFRService/IFR_BaseS.i:
                * orbsvcs/orbsvcs/IFRService/IFR_BaseS_T.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_BaseS_T.h:
                * orbsvcs/orbsvcs/IFRService/IFR_BaseS_T.i:
                * orbsvcs/orbsvcs/IFRService/IFR_BasicS.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_BasicS.h:
                * orbsvcs/orbsvcs/IFRService/IFR_BasicS.i:
                * orbsvcs/orbsvcs/IFRService/IFR_BasicS_T.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_BasicS_T.h:
                * orbsvcs/orbsvcs/IFRService/IFR_BasicS_T.i:
                * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.h:
                * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS.i:
                * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.h:
                * orbsvcs/orbsvcs/IFRService/IFR_ComponentsS_T.i:
                * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.h:
                * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS.i:
                * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS_T.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS_T.h:
                * orbsvcs/orbsvcs/IFRService/IFR_ExtendedS_T.i:
                * orbsvcs/orbsvcs/IFRService/IFR_Service_Loader.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
                * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.h:
                * orbsvcs/orbsvcs/IFRService/IRObject_i.cpp:
                * orbsvcs/orbsvcs/IFRService/IRObject_i.h:
                * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.h:
                * orbsvcs/orbsvcs/IFRService/LocalInterfaceDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/LocalInterfaceDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ModuleDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ModuleDef_i.h:
                * orbsvcs/orbsvcs/IFRService/NativeDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/NativeDef_i.h:
                * orbsvcs/orbsvcs/IFRService/OperationDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/OperationDef_i.h:
                * orbsvcs/orbsvcs/IFRService/PrimaryKeyDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/PrimaryKeyDef_i.h:
                * orbsvcs/orbsvcs/IFRService/PrimitiveDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/PrimitiveDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ProvidesDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ProvidesDef_i.h:
                * orbsvcs/orbsvcs/IFRService/PublishesDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/PublishesDef_i.h:
                * orbsvcs/orbsvcs/IFRService/Repository_i.cpp:
                * orbsvcs/orbsvcs/IFRService/Repository_i.h:
                * orbsvcs/orbsvcs/IFRService/SequenceDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/SequenceDef_i.h:
                * orbsvcs/orbsvcs/IFRService/StringDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/StringDef_i.h:
                * orbsvcs/orbsvcs/IFRService/StructDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/StructDef_i.h:
                * orbsvcs/orbsvcs/IFRService/TypedefDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/TypedefDef_i.h:
                * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/UnionDef_i.h:
                * orbsvcs/orbsvcs/IFRService/UsesDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/UsesDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ValueBoxDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ValueBoxDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ValueDef_i.h:
                * orbsvcs/orbsvcs/IFRService/ValueMemberDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/ValueMemberDef_i.h:
                * orbsvcs/orbsvcs/IFRService/WstringDef_i.cpp:
                * orbsvcs/orbsvcs/IFRService/WstringDef_i.h:
                * orbsvcs/orbsvcs/IFRService/concrete_classes.h:
                * orbsvcs/orbsvcs/IFRService/tmplinst.cpp:

                  The mechanism of method dispatch has been changed in the
                  Interface Repository to use default servants instead of
                  Servant Locator. A servant for each IR Object type, and a
                  POA for each, are created at startup. The object key of
                  POACurrent is parsed to reconstruct the database key, which
                  is then plugged into the servant just before the C++ call.
                  Also, the skeleton files were regenerated. Now only one
                  line in each *S.h file needs to be patched.

                * tao/AbstractBase.cpp:
                * tao/AbstractBase.h:
                * tao/Abstract_Servant_Base.cpp:
                * tao/Abstract_Servant_Base.h:
                * tao/Any.cpp:
                * tao/Any.h:
                * tao/Any.i:
                * tao/Exception.h:
                * tao/IFR_Client_Adapter.h:
                * tao/LocalObject.cpp:
                * tao/LocalObject.h:
                * tao/Marshal.h:
                * tao/NVList.cpp:
                * tao/ORB.cpp:
                * tao/ORB.h:
                * tao/Object.cpp:
                * tao/Object.h:
                * tao/Object.i:
                * tao/Object_Proxy_Impl.cpp:
                * tao/Object_Proxy_Impl.h:
                * tao/Remote_Object_Proxy_Impl.cpp:
                * tao/Remote_Object_Proxy_Impl.h:
                * tao/Sequence_T.cpp:
                * tao/TypeCodeFactory_Adapter.h:
                * tao/Typecode.cpp:
                * tao/Typecode.h:
                * tao/ValueBase.cpp:
                * tao/ValueBase.h:
                * tao/corba.h:
                * tao/corbafwd.h:

                  Changes to TAO files required by the changes in the Any
                  implementation and in the IR Object class names. Also,
                  a virtual marshal() method was added to CORBA::Object to
                  help detect an attempt to marshal a local interface. Finally,
                  a TAO-specific method was added to class TypeCode, which
                  returns the content type without making a duplicate.
                  Similar versions of other TypeCode methods that return
                ` typecodes will be made in the future, for internal ORB use.

                * tao/IFR_Client/IFR_BaseC.cpp:
                * tao/IFR_Client/IFR_BaseC.h:
                * tao/IFR_Client/IFR_BaseC.i:
                * tao/IFR_Client/IFR_BasicC.cpp:
                * tao/IFR_Client/IFR_BasicC.h:
                * tao/IFR_Client/IFR_BasicC.i:
                * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp:
                * tao/IFR_Client/IFR_Client_Adapter_Impl.h:
                * tao/IFR_Client/IFR_ComponentsC.cpp:
                * tao/IFR_Client/IFR_ComponentsC.h:
                * tao/IFR_Client/IFR_ComponentsC.i:
                * tao/IFR_Client/IFR_ExtendedC.cpp:
                * tao/IFR_Client/IFR_ExtendedC.h:
                * tao/IFR_Client/IFR_ExtendedC.i:

                  The stub files were regenerated. They now need no patching.

                * tao/PortableServer/Direct_Object_Proxy_Impl.cpp:
                * tao/PortableServer/Direct_Object_Proxy_Impl.h:
                * tao/PortableServer/ImR_LocatorS.cpp:
                * tao/PortableServer/ImplRepoS.cpp:
                * tao/PortableServer/POA.cpp:
                * tao/PortableServer/POA.h:
                * tao/PortableServer/PolicyS.cpp:
                * tao/PortableServer/Servant_Base.cpp:
                * tao/PortableServer/Servant_Base.h:
                * tao/PortableServer/ThruPOA_Object_Proxy_Impl.cpp:
                * tao/PortableServer/ThruPOA_Object_Proxy_Impl.h:

                  POA files modified to support the other changes. A public
                  static method was added to class TAO_POA, to allow access
                  to a protected static method, which the IFR uses to parse
                  object keys without requiring new/delete pairs.

                * tao/TypeCodeFactory/TypeCodeFactoryC.cpp:
                * tao/TypeCodeFactory/TypeCodeFactoryC.inl:
                * tao/TypeCodeFactory/TypeCodeFactoryC.h:
                * tao/TypeCodeFactory/TypeCodeFactory_Adapter_Impl.cpp:
                * tao/TypeCodeFactory/TypeCodeFactory_Adapter_Impl.h:
                * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
                * tao/TypeCodeFactory/TypeCodeFactory_i.h:

                  Changes to reflect the removal of global flat names for
                  the IR Object classes. Also, the stub files were
                  regenerated, and now need no patching.

                * tao/orb.idl:
                * tao/IFR_Client/IFR_Basic.pidl:
                * tao/IFR_Client/IFR_Components.pidl:
                * tao/IFR_Client/IFR_Base.pidl:
                * tao/IFR_Client/IFR_Extended.pidl:
                * tao/TypeCodeFactory/TypeCodeFactory.pidl:

                  Changes to (p)idl files. Small pieces of IFR_Base.pidl
                  and TypeCodeFactory.pidl that are used by the ORB
                  were moved to orb.idl, which is now included in these
                  two files. Code generation is now executed without first
                  patching the pidl files to remove the CORBA module. The
                  result of these two changes is the elimination of almost
                  all the patching to generated files which used to be
                  necessary.

                * TAOACE.dsw:
                * ta0/Makefile:
                * tao/Makefile.bor:
                * tao/Makefile.am:
                * tao/TAO.dsp:
                * tao/IFR_Client/TAO_IFR_Client.dsp:
                * orbsvcs/orbsvcs/Svc_Utils.dsp:
                * orbsvcs/orbsvcs/IFRService.dsp:

                  Changes to makefiles, projects and workspaces.

                Changes to NVList, TAO_Marshal_* and the dynamic any classes to
                support the changes to Anys and TypeCodes have yet to be made.
                Also, dynamic_cast is now required in Any extraction, whcih may
                cause a problem on some platforms that don't support RTTI.


Wed Mar 12 09:48:32 2003  Chad Elliott  <elliott_c@ociweb.com>

        Committing Paul Calabrese's <calabrese_p@ociweb.com> MPC related
        changes.

        * orbsvcs/orbsvcs/AV.mpc:

          Add a dependency on the ACE_QoS library.

        * orbsvcs/orbsvcs/CosEvent.mpc:
        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/CosTime.mpc:
        * orbsvcs/orbsvcs/RTSched.mpc:

          Update these files so we can build the services with MPC
          on Windows.

        * orbsvcs/orbsvcs/DsNotifyLogAdmin.mpc:

          Add missing mpc file for logging service.

        * orbsvcs/orbsvcs/AV/media-timer.h:
        * orbsvcs/orbsvcs/AV/media-timer.cpp:

          Removed these files.  They were not removed after the rename.

Tue Mar 11 18:00:12 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/tests/Security/MT_IIOP_SSL/Makefile: Added
          PLATFORM_SSL_* variables to the CPPFLAGS and LDFLAGS "make"
          variables in the manner Ossama used to modify the
          Secure_Invocation and SecurityLevel1 tests makefiles.

Tue Mar 11 11:58:12 2003  Ossama Othman  <ossama@uci.edu>

        * orbsvcs/tests/Security/Secure_Invocation/Makefile:
        * orbsvcs/tests/Security/SecurityLevel1/Makefile:

          Add PLATFORM_SSL_* variables to their corresponding CPPFLAGS and
          LDFLAGS "make" variables.  This fixes problems on platforms
          where OpenSSL is installed in a location unknown to the compiler
          and linker.  Thanks to Phil Mesnier <mesnier_p@ociweb.com> for
          detecting the problem.

Tue Mar 11 10:46:29 2003  Ossama Othman  <ossama@uci.edu>

        * tao/corbafwd.h:

          Removed CORBA::{add,remove}_ref() static function declarations.
          They conflicted with the ones defined in `ValueBase.h'.

        * tao/ValueBase.h:

          Corrected CORBA::{add,remove}_ref() static function declarations
          so that "inconsistent DLL linkage" warnings no longer occur in
          MS Windows TAO builds.

          Include "ace/Basic_Types.h" instead of "ace/OS.h".  The former
          is all that is needed for the "ptr_arith_t" typedef.  Inclusion
          of "ace/OS.h" is overkill.

Mon Mar 10 20:24:17 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.cpp: Make the SSLIOP
          connector get the codeset context assigned by the Codeset Manager.

Mon Mar 10 11:03:14 2003  Ossama Othman  <ossama@uci.edu>

        * tao/DynamicInterface/DII_ClientRequestInfo.h (request_):

          Changed the type of this class member from CORBA::Request_var to
          CORBA::Request_ptr.  There is no need to use "_var" type in this
          case.

        * tao/DynamicInterface/DII_ClientRequestInfo.cpp
          (TAO_DII_ClientRequestInfo):

          No need to increase the reference count since the "request_"
          member is no longer a "_var" type, and since the
          TAO_DII_ClientRequestInfo instance used in the
          CORBA::Request::invoke() methd is local to that method.  This is
          a lighter weight solution to the problem that Phil Mesnier
          detected and fixed since no CORBA::Request reference count locks
          are used.

        * examples/Callback_Quoter/Supplier_i.cpp (run):

          Fixed unused value warning.

Mon Mar 10 08:10:02 2003  Ossama Othman  <ossama@uci.edu>

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp (setup_multicast):

          Fixed unused argument warning on platforms where
          ACE_HAS_IP_MULTICAST is not defined.

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp
          (TAO_Log_Constraint_Visitor):

          Added missing semi-colon for the ACE_LACKS_LONGLONG_T case.
          Fixes a syntax error.

        * orbsvcs/orbsvcs/Log/Log_i.cpp (copy_attributes):

          Return value of get_max_size() should be assigned to a
          CORBA::ULongLong, not CORBA::ULong.

          (remove_old_records):
          (check_capacity_alarm_threshold)
          (reset_capacity_alarm_threshold):

          Corrected CORBA::LongLong/ULongLong mismatches.

          Use the ACE_UINT64_DBLCAST_ADAPTER macro when casting a
          CORBA::ULongLong to a double to work around problems when
          CORBA::ULongLong is an emulated type.

        * orbsvcs/orbsvcs/Log/LogRecordStore.cpp (purge_old_records):

          Do not explicitly cast integers to a CORBA::ULongLong.  That
          breaks on platforms where 64 bit integers are emulated.

          Changed loop variable type to match the type used in the
          comparison that dictates when the loop should stop,
          i.e. "CORBA::ULong" -> "CORBA::ULongLong".

        * orbsvcs/orbsvcs/Log/Log_i.cpp (retrieve):

          Corrected format specifier for platforms that lack 64 bit
          integer support.

        * orbsvcs/orbsvcs/Log/PersistStore.cpp (get_percentage_full):

          Explicitly mark the integer literal used in a multiplication
          with a CORBA::ULongLong variable as unsigned since there is no
          operator that multiplies a signed integer with a
          CORBA::ULongLong on platforms where the latter is emulated,
          i.e. no native 64 bit unsigned integer exists.

        * tao/orbconf.h:

          Removed redefinition of ACE_NESTED_CLASS macro, and include
          "ace/Global_Macros.h" instead.  It is already defined in that
          header.

        * tests/Nested_Upcall_Crash/server.cpp (main):

          Cast the return value of ACE_OS::gethrtime() to ACE_RANDR_TYPE
          to fix an error on VxWorks builds.

Mon Mar 10 08:22:01 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/FaultTolerance/IOGR/Manager.bor: Fixed this BCB
          makefile for the BCB5 Static build.

Mon Mar 10 07:56:12 2003  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/nslist/Makefile.bor: Adding missing libraries to link with
          to fix BCB5 Static Link Errors. Also build the nsadd and nsdel
          executables.

Sun Mar  9 16:04:27 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/DynamicInterface/DII_ClientRequestInfo.cpp: The ctor takes
          a pointer to a Request, but assigns this to a Request_var
          without incrementing the reference count. Now, the assignment to
          the Request_var first increments the reference count. This
          quiets the DII Param Test errors.

        * tao/Codeset_Manager.cpp:
        * tao/default_resource.cpp: Cleaned up debug output to be more
          standard compliant.

Sun Mar  9 10:06:59 2003  Douglas C. Schmidt  <schmidt@tango.doc.wustl.edu>

        * docs/compiler.html: Updated the discussion on what files are
          generated by the TAO IDL compiler.  Thanks to Rob Eger
          <reger@txcorp.com> and Carlos O'Ryan for helping with this.

Sat Mar 08 15:27:14 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * tao/orbconf.h: The #define for ACE_NESTED_CLASS was busted. The
          workaround should be applied on platforms where
          ACE_HAS_BROKEN_NAMESPACES is defined instead of just
          Win32. Thanks to Johnny Willemsen fo rcatching this.

Fri Mar  7 17:20:24 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/tests/InterfaceRepo/Application_Test/ifr_dii_client.cpp
          (lookup_interface_def): Replaced several ACE_CHECK; macros with
          ACE_CHECK_RETURN (-1); so that the non-exception builds don't
          complain about not returning a value.

Fri Mar  7 14:17:10 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Param_Test/svc.conf.xml: I neglected add the change for
          setting the native wchar codeset id to the xml form of the
          service config. This should address the errors with the wstring
          data.

Fri Mar  7 10:58:32 2003  Ossama Othman  <ossama@uci.edu>

        * tests/Codec/test.idl (Foo::Bar::C):

          Changed type of this attribute from "long long" to "unsigned
          long long".  It is better supported/emulated by ACE and TAO on
          platforms that lack 64 bit integer support (e.g. VxWorks).

        * tests/Codec/client.cpp:

          Updated to take into account the above change.  The
          "Foo::Bar::C" attribute is now initialized with a value wrapped
          by the ACE_UINT64_LITERAL macro to allow for successful builds
          on platforms that lack 64 bit integer support.  Fixes
          compile-time errors on VxWorks builds.

Fri Mar  7 10:43:57 2003  Ossama Othman  <ossama@uci.edu>

        * tao/DynamicInterface/Request.h:

          Explicitly qualify the TAO_Dynamic_Adapter_Impl friend
          declaration with a global scope qualifier in an attempt to work
          around a problem where some compilers assume that the friend
          declaration refers to a class in the local scope or current
          namespace.

          Moved the CORBA_ORB_RequestSeq class into the CORBA namespace.

        * tao/ORB.h:
        * tao/ObjectIDList.h:
        * tao/ObjectIDList.i:
        * tao/ObjectIDList.cpp:
        * tao/DynamicInterface/Request.cpp:

          Neglected to put the CORBA_ORB_ObjectIdList and
          CORBA_ORB_RequestSeq types into the CORBA namespace, as was
          done with all of the other types in the CORBA namespace.

Fri Mar  7 09:34:06 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_ss.cpp: The check for
          codeset errors were calling the inputCDR's exception generator when
          the OutputCDR was used.

        * tao/Codeset_Translator_Factory_T.h: Removed the TAO_Export
          modifier from the template declaration. Some of the MSCV builds
          were complaining about it, and it looks like the other templates
          in TAO don't export when their base classes do. I referred to
          the Sequence_T source for comparison.

Fri Mar  7 07:17:02 2003  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/ImplRepo_Service.mpc:

          Updated this mpc file to reflect the current state.

        * orbsvcs/orbsvcs/DsLogAdmin.mpc:

          Added libraries that this library needs.

        * orbsvcs/orbsvcs/DsEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:

          Added these mpc files.

Fri Mar  7 06:08:16 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * tests/Param_Test/svc.conf: Added native wchar codeset id to
          allow transmission of wchar data.

Thu Mar  6 11:35:10 2003  Ossama Othman  <ossama@uci.edu>

        * tao/IFR_Client/IFR_ExtendedC.h:
        * tao/IFR_Client/IFR_ExtendedC.cpp:

          Removed duplicate declarations and definitions of the
          CORBA::_tc_{Visibility,ValueModifier} TypeCodes.  They are
          already declared in tao/corbafwd.h, and set in
          tao/IFR_Client/IFR_Client_Adapter_Impl.cpp.  Fixes "multiple
          definition" errors in static builds.

        * tao/TypeCodeFactory/TypeCodeFactoryC.h:
        * tao/TypeCodeFactory/TypeCodeFactoryC.cpp:

          Removed duplicate declarations and definitions of the
          CORBA::_tc_{Identifier,RepositoryId,ValueModifier} TypeCodes.
          They are already declared and defined in
          tao/IFR_Client/IFR_BaseC.*. Fixes "multiple definition" errors
          in static builds.

Thu Mar 06 12:26:36 2003  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/orbsvcs/Notify/Default_Factory.cpp:
          Added missing ACE_TYPENAME on line 34.

Thu Mar  6 11:03:02 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * TAO_IDL/be/be_visitor_operation/operation.cpp: Fix the generation
          of environment checking code following the call to
          TAO_[In|Out]putCDR::throw_stub_exception() so it doesn't break
          on non-native exception builds.

Wed Mar  5 16:09:19 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Codeset_Manager.h:
        * tao/Codeset_Translaotr_Factory.h:
        * tao/Codeset_Translator_Factory_T.h:
        * tests/CodeSets/simple/server.cpp: Fix fuzz errors

Wed Mar  5 12:53:22 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/TAO.dsp:
        * tao/TAO_Static.dsp:
        * tao/tao-dll.icc:
        * tao/tao-lib.icc: Added Codeset_manager and
          Codeset_Translator_Factory source to  makefiles.

Wed Mar  5 11:00:51 2003  Chad Elliott  <elliott_c@ociweb.com>

        * tao/IIOP_Acceptor.cpp:

          Fixed the portspan overflow problem.  The port is restricted to
          unsigned short but the port span plus the port could easily
          overflow.  So, it's now silently restricted to
          ACE_MAX_DEFAULT_PORT.  Thanks to Duane Binder
          <duane.binder@veritas.com> for providing this fix.

Wed Mar  5 10:21:54 2003  Chad Elliott  <elliott_c@ociweb.com>

        * tao/GIOP_Message_Lite.cpp (parse_incoming_messages):

          When copying out the the message size, transfer the bytes into
          a stack allocated character buffer to avoid bus errors on sparc
          hardware.

Wed Mar  5 09:41:55 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Makefile.bor (OBJFILES): Fixed typo in file list.

Wed Mar  5 09:07:02 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Transport.cpp (assign_translators): Removed the ACE_INLINE
          from the function

Wed Mar  5 08:54:53 CST 2003 Pradeep Gore <pradeep@oomworks.com>

        * orbsvcs/Notify_Service/NT_Notify_Service.cpp:
          Corrected the changed service driver name.

Wed Mar  5 06:14:34 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/Makefile.bor (OBJFILES): Added Codeset related files to makefile.

Wed Mar  5 00:01:09 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * TAO_IDL/util/utl_global.cpp (validate_included_idl_files):
          Swapped the order of parameters to passed to realpath, which is
          the non-windows function used for canonizing a path.

Tue Mar  4 13:44:06 2003  Phil Mesnier  <mesnier_p@ociweb.com>

        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_ss.cpp: Wrap the
          marshal / unmarshal code to check for errors and call the
          appropriate static function to raise the related exception.

        * tao/Any.cpp:
        * tao/Any.h:
        * tao/CDR.cpp:
        * tao/CDR.h:
        * tao/CDR.i:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/GIOP_Message_Generator_Parser_12.cpp:
        * tao/GIOP_Message_Lite.cpp:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Profile.cpp:
        * tao/IIOP_Transport.cpp:
        * tao/Invocation.cpp:
        * tao/Invocation.h:
        * tao/Invocation.i:
        * tao/Makefile.tao:
        * tao/ORB.cpp:
        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/ORB_Core.i:
        * tao/Resource_Factory.cpp:
        * tao/Resource_Factory.h:
        * tao/TAO_Server_Request.cpp:
        * tao/Transport.cpp:
        * tao/Transport.h:
        * tao/Transport.inl:
        * tao/default_resource.cpp:
        * tao/default_resource.h:
        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Strategies/DIOP_Transport.cpp:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/SHMIOP_Profile.cpp:
        * tao/Strategies/SHMIOP_Transport.cpp:
        * tao/Strategies/UIOP_Acceptor.cpp:
        * tao/Strategies/UIOP_Profile.cpp:
        * tao/Strategies/UIOP_Transport.cpp:
        * utils/catior/catior.cpp: These files modified to support the
          codeset negotiation feature. This feature replaces the
          ACE_Char_Codeset_Translators owned by the ORB with A codset
          manager framework and dynamically loadable translators.

          The functionality conforms with CORBA 3.0 section 13.10.

        * tao/Codeset_Manager.cpp:
        * tao/Codeset_Manager.h:
        * tao/Codeset_Translator_Factory.cpp:
        * tao/Codeset_Translator_Factory.h:
        * tao/Codeset_Translator_Factory_T.cpp:
        * tao/Codeset_Translator_Factory_T.h: New files added to to
          support the codeset framework

        * tests/CodeSets: A new test, including a sample translator
          library.

Tue Mar  4 08:57:20 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/util/utl_global.cpp:
          Misunderstood the error message that led to the checkin
          below, actually had to retain the 'const' qualifier.


Mon Mar  3 22:38:03 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/util/utl_global.cpp:

          Changed char* arg argument to retain the const qualifier.

Mon Mar  3 17:23:55 2003  Ossama Othman  <ossama@uci.edu>

        * orbsvcs/tests/Bug_1395_Regression/Test_i.cpp:

          Fixed existing and added missing emulated exception support.

Mon Mar  3 14:36:53 2003  Ossama Othman  <ossama@uci.edu>

        * tao/Exception.h:
        * tao/Exception.cpp:

          Uninlined SystemException subclass constructors.  There was no
          real advantage to inlining them.  Inlining them only served to
          increase footprint.

          (operator<<=, operator>>=):

          Placed the definitions of these Any insertion and extraction
          operators in the CORBA namespace.  Fixes "unresolved symbol"
          link-time errors when using these operators.

          (_info, _tao_get_omg_exception_description):

          Improved const-correctness.  Variables that are really constants
          are now marked as such.

          (make_standard_typecode):

          Improved exception-safety.  Manage memory using a
          CORBA::String_var instead of the raw
          CORBA::string_{alloc,release} functions.

Mon Mar  3 15:42:35 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/DynamicAny/DynStruct_i.cpp (get_members):

          Stripped alias (if any) from the type code that is used
          to iterate over the member names. Calling member_name (i)
          on an aliased type code will throw CORBA::BAD_TYPECODE.
          Thanks to Chen Jian <jchen@huawei.com> for reporting the bug.

Mon Mar  3 15:12:32 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/fe/fe_tmplinst.cpp:
        * TAO_IDL/include/drv_extern.h:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:

          Modified scheme for validating included files. This change
          was motivated by errors in include file generation when
          files whose path names are substrings of each other are
          on opposite sides of a conditional include.

Mon Mar  3 11:43:01 2003  Ossama Othman  <ossama@uci.edu>

        * tao/DynamicAny/DynStruct_i.cpp (current_member_kind):

          Corrected return value in emulated exception case.
          "CORBA::tk_null", not "0".  Fixes build problems related to
          invalid conversions from "int" to "CORBA::TCKind".

Mon Mar  3 13:27:01 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_array/array.cpp:

          Fixed generation of array typedef to append "_var" to
          the element name if it is a typedef of CORBA::Object
          or of CORBA::Typecode. Thanks to Simon McQueen
          <sm@prismtechnologies.com> for reporting the problem. This
          closes [BUGID:1458].

Mon Mar  3 13:02:16 2003  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_expression.cpp:
        * TAO_IDL/include/ast_expression.h:
        * TAO_IDL/be/be_visitor_constant/constant_ch.cpp:

          Fixed the lhs of a constant assignment for octets and
          enums to use the typedef name, if there is one. Thanks
          to George Varsamis <gv@prismtechnologies.com> for
          reporting the problem.

Sun  Mar 2 15:10:02 3003 Pradeep Gore <pradeep@oomworks.com>

        * orbsvcs/orbsvcs/Notify/Admin.h:
          Removed extra ";" on line 85 that is foxing the BCB compiler.
          Thanks to Johnny Willemsen <jwillemsen@remedy.nl> for spotting this.

Sun Mar  2 10:04:54 2003  Ossama Othman  <ossama@uci.edu>

        * tao/DynamicAny/DynStruct_i.cpp (current_member_kind):
          (get_members_as_dyn_any):

          Fixed emulated exception macro usage.  "ACE_CHECK_RETURN", not
          "ACE_CHECK".

        * tests/DynAny_Test/test_dynstruct.cpp (run_test):
        * tests/DynAny_Test/test_dynunion.cpp (run_test):

          Fixed emulated exception macro usage.  "ACE_TRY_{CHECK_}EX", not
          "ACE_TRY{_CHECK}".

          Added missing "ACE_TRY_CHECK" after inner ACE_TRY_EX block's
          ACE_ENDTRY.

Sun Mar  2 09:23:18 2003  Ossama Othman  <ossama@uci.edu>

        * tests/DynAny_Test/test_dynstruct.cpp (run_test):
        * tests/DynAny_Test/test_dynunion.cpp (run_test):

          "CORBA_" -> "CORBA::".

Sat Mar  1 13:47:14 CST 2003 Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/orbsvcs/Notify/Builder.cpp:
          Commented out unused parameter.

        * orbsvcs/orbsvcs/Notify/Container_T.inl:
        * orbsvcs/orbsvcs/Notify/Seq_Worker_T.cpp:
          Added missing ACE_TYPENAME keyword.

        * orbsvcs/tests/Notify/performance-tests/Throughput/Throughput.cpp:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.h:
          Replaced Service name to "TAO_Notify_Service"

Sat Mar  1 10:27:55 2003  Ossama Othman  <ossama@uci.edu>

        * orbsvcs/IFR_Service/ifr_adding_visitor_exception.h
          (ifr_adding_visitor_exception):

          Fixed typo.  "CORBAL" -> "CORBA".

Sat Mar  1 09:30:47 2003  Ossama Othman  <ossama@uci.edu>

        * orbsvcs/tests/Security/MT_IIOP_SSL/Server_Worker.h:
        * orbsvcs/tests/Security/MT_SSLIOP/Server_Worker.h:

          "CORBA_" -> "CORBA::".

Sat Mar  1 04:15:39 2003  Ossama Othman  <ossama@uci.edu>

        * orbsvcs/IFR_Service/be_global.cpp:
        * orbsvcs/IFR_Service/be_global.h:
        * orbsvcs/IFR_Service/be_produce.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor.h:
        * orbsvcs/IFR_Service/ifr_adding_visitor_exception.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_exception.h:
        * orbsvcs/IFR_Service/ifr_adding_visitor_operation.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_operation.h:
        * orbsvcs/IFR_Service/ifr_adding_visitor_structure.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_structure.h:
        * orbsvcs/IFR_Service/ifr_adding_visitor_union.cpp:
        * orbsvcs/IFR_Service/ifr_adding_visitor_union.h:
        * orbsvcs/IFR_Service/ifr_removing_visitor.cpp:
        * orbsvcs/IFR_Service/ifr_visitor_macro.h:
        * orbsvcs/examples/ORT/Gateway_ObjRef_Factory.h:

          "CORBA_" -> "CORBA::".

        * tests/RTCORBA/Server_Protocol/server.cpp
          (check_default_server_protocol):

          Added missing CORBA::Environment argument.  Fixes a compile-time
          error.

Sat Mar  1 03:41:30 2003  Ossama Othman  <ossama@uci.edu>

        * orbsvcs/orbsvcs/IFRService/AbstractInterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/AliasDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/AliasDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ArrayDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ArrayDef_i.h:
        * orbsvcs/orbsvcs/IFRService/AttributeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/AttributeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ComponentRepository_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ComponentRepository_i.h:
        * orbsvcs/orbsvcs/IFRService/ConstantDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ConstantDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ConsumesDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ConsumesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/Contained_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Contained_i.h:
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Container_i.h:
        * orbsvcs/orbsvcs/IFRService/EmitsDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/EmitsDef_i.h:
        * orbsvcs/orbsvcs/IFRService/EnumDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/EnumDef_i.h:
        * orbsvcs/orbsvcs/IFRService/EventDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/EventDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExceptionDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExceptionDef_i.h:
        * orbsvcs/orbsvcs/IFRService/FactoryDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/FactoryDef_i.h:
        * orbsvcs/orbsvcs/IFRService/FinderDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/FinderDef_i.h:
        * orbsvcs/orbsvcs/IFRService/HomeDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/HomeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.h:
        * orbsvcs/orbsvcs/IFRService/IFR_macro.h:
        * orbsvcs/orbsvcs/IFRService/IRObject_i.h:
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ModuleDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ModuleDef_i.h:
        * orbsvcs/orbsvcs/IFRService/OperationDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/OperationDef_i.h:
        * orbsvcs/orbsvcs/IFRService/PrimaryKeyDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/PrimaryKeyDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ProvidesDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ProvidesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/PublishesDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/PublishesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/Repository_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Repository_i.h:
        * orbsvcs/orbsvcs/IFRService/SequenceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/SequenceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/Servant_Factory.cpp:
        * orbsvcs/orbsvcs/IFRService/StructDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/StructDef_i.h:
        * orbsvcs/orbsvcs/IFRService/TypedefDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/TypedefDef_i.h:
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.h:
        * orbsvcs/orbsvcs/IFRService/UsesDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UsesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ValueBoxDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueBoxDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ValueMemberDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueMemberDef_i.h:

          "CORBA_" -> "CORBA::".

Fri Feb 28 18:17:28 CST 2003 <pradeep@cs.wustl.edu>

        * orbsvcs/orbsvcs/Notify/Makefile.CosNotification:
        * orbsvcs/orbsvcs/Notify/Makefile:
          Updated.

Fri Feb 28 14:20:57 2003  Ossama Othman  <ossama@uci.edu>

        * tao/Environment.h:

          Removed another TAO_ORB_Core friend declaration that may be
          responsible for namespace related build problems on Solaris.

Thu  Feb 27, 2003  15:14:58  Pradeep Gore  <pradeep@oomworks.com>

        * orbsvcs/orbsvcs/CosNotification_Static.dsp:
          Updated.

Thu Feb 27 11:27:24 2003  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/tao_idl.mpc:

          Add a dependency upon the gperf executable.

Thu Feb 27 07:25:21 2003  Ossama Othman  <ossama@uci.edu>

        * tao/ORBInitInfo.h:
        * tao/ORBInitInfo.inl:
        * tao/ORBInitInfo.cpp:
        * tao/PICurrent.h:
        * tao/PICurrent.inl:
        * tao/PICurrent.cpp:
        * tao/PICurrent_ORBInitializer.cpp:

          Fixed problem where the ORBInitInfo object was not invalidated
          after post_init() was called on ORBInitializers, as required by
          the CORBA spec.

          This also fixes some build problems that were inadvertently
          introduced by a partial fix found in ORB.cpp.

Thu Feb 27 09:09:44 2003  Pradeep Gore  <pradeep@oomworks.com>

        Summary of changes due to code review:
        1. Removed dependency on Types.h and Destroy_Callback.h
        2. Simplify the TAO_NS_Object class by moving functionality from Object_T and Container_T classes.
        3. Made the Filter and FilterFactory interface methods thread safe.

        * orbsvcs/orbsvcs/Notify/Notify_EventChannel_i.h:
        * orbsvcs/orbsvcs/Notify/Notify_EventChannel_i.cpp:
          Removed old file.

        * orbsvcs/orbsvcs/Notify/Consumer_Map.h:
        * orbsvcs/orbsvcs/Notify/Supplier_Map.h:
          Moved the Consumer and Supplier Map definitions to seperate files.

        * orbsvcs/orbsvcs/Notify/Notify_Service.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Service.h:
        * orbsvcs/orbsvcs/Notify/Notify_Service.inl:
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp:
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.h:
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.inl:
          Renamed the confusing file name - Notify_Service to CosNotify_Service.

        * orbsvcs/orbsvcs/Notify/Factory.h:
          Converted this into an abstract service object interface.

        * orbsvcs/orbsvcs/Notify/Factory.cpp:
        * orbsvcs/orbsvcs/Notify/Factory.inl:
        * orbsvcs/orbsvcs/Notify/Default_Factory.cpp:
        * orbsvcs/orbsvcs/Notify/Default_Factory.h:
        * orbsvcs/orbsvcs/Notify/Default_Factory.inl:
          + Moved old Factory.* to the Default_* files.
          + Introduced a factory template to simplify creation of the various Collections.

        * orbsvcs/orbsvcs/Notify/Find_Worker_T.cpp:
        * orbsvcs/orbsvcs/Notify/Find_Worker_T.h:
        * orbsvcs/orbsvcs/Notify/Find_Worker_T.inl:
          An iterator that finds the object given its ID in a collection.

        * orbsvcs/orbsvcs/Notify/Seq_Worker_T.cpp:
        * orbsvcs/orbsvcs/Notify/Seq_Worker_T.h:
        * orbsvcs/orbsvcs/Notify/Seq_Worker_T.inl:
          A Helper class that creates a sequence id ID's given the colleciton.

        * orbsvcs/orbsvcs/Notify/Destroy_Callback.h:
        * orbsvcs/orbsvcs/Notify/Refcountable.cpp:
        * orbsvcs/orbsvcs/Notify/Refcountable.h:
          Removed the Destroy_Callback interface. We instead simplify the mechanism by calling the <release>
          method when the reference count falls to 0.

        * orbsvcs/orbsvcs/Notify/Container.cpp:
        * orbsvcs/orbsvcs/Notify/Container.h:
        * orbsvcs/orbsvcs/Notify/Container.inl:
        * orbsvcs/orbsvcs/Notify/Object_T.cpp:
        * orbsvcs/orbsvcs/Notify/Object_T.h:
        * orbsvcs/orbsvcs/Notify/Object_T.inl:
          Removed these files to simplify the base classes for Notify Objects.

        * orbsvcs/orbsvcs/Notify/Object.cpp:
        * orbsvcs/orbsvcs/Notify/Object.h:
        * orbsvcs/orbsvcs/Notify/Object.inl:
          Moved all Container functionality to the Object class.

        * orbsvcs/orbsvcs/Notify/Container_T.cpp:
        * orbsvcs/orbsvcs/Notify/Container_T.h:
        * orbsvcs/orbsvcs/Notify/Container_T.inl:
          The Container_T template is a wrapper on the Collection class.

        * orbsvcs/orbsvcs/Notify/Admin.cpp:
        * orbsvcs/orbsvcs/Notify/Admin.h:
        * orbsvcs/orbsvcs/Notify/Admin.inl:
          Changes to adapt to new base class. removed the enum to distinguish the type of Admin.

        * orbsvcs/orbsvcs/Notify/Types.h:
        * orbsvcs/orbsvcs/Notify/Types.cpp:
        * orbsvcs/orbsvcs/Notify/Types.inl:
          Removed the global type defines file.

        * orbsvcs/orbsvcs/Notify/AdminProperties.h:
          Removed dependency on Types.h

        * orbsvcs/orbsvcs/Notify/Builder.cpp:
        * orbsvcs/orbsvcs/Notify/Builder.h:
          Simplified the implementation by moving most of the Object initalization
          into the TAO_NS_Object::init method.
          Implemented a TAO_NS_Proxy_Builder_T template class.

        * orbsvcs/orbsvcs/Notify/Consumer.cpp:
        * orbsvcs/orbsvcs/Notify/Consumer.h:
          Removed unnecessary file dependencies.

        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.h:
          Removed unnecessary file dependencies. Uses the Seq_Worker and Find_Worker templates.

        * orbsvcs/orbsvcs/Notify/ETCL_Filter.cpp:
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.h:
        * orbsvcs/orbsvcs/Notify/FilterAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/FilterAdmin.h:
          Serialize interface implementation methods to make them thread-safe.

        * orbsvcs/orbsvcs/Notify/FilterFactory.h:
        * orbsvcs/orbsvcs/Notify/ETCL_FilterFactory.cpp:
        * orbsvcs/orbsvcs/Notify/ETCL_FilterFactory.h:
          The POA in which the Filters are created is supplied in the <create> method.

        * orbsvcs/orbsvcs/Notify/EventChannel.cpp:
        * orbsvcs/orbsvcs/Notify/EventChannel.h:
          The ConsumerAdmin and SupplierAdmin are maintained in seperate Containers.
          Added additional <remove> methods. Implemented <init> method.

        * orbsvcs/orbsvcs/Notify/EventChannelFactory.cpp:
        * orbsvcs/orbsvcs/Notify/EventChannelFactory.h:
          Changes to <init> method - Initializes data members.

        * orbsvcs/orbsvcs/Notify/Event_Manager.cpp:
        * orbsvcs/orbsvcs/Notify/Event_Manager.h:
        * orbsvcs/orbsvcs/Notify/Event_Map_Entry_T.h:
        * orbsvcs/orbsvcs/Notify/Event_Map_T.h:
          Removed dependency on Types.h

        * orbsvcs/orbsvcs/Notify/ID_Factory.h:
        * orbsvcs/orbsvcs/Notify/ID_Factory.inl:
          Use TAO_NS_Object::ID as the ID type.

        * orbsvcs/orbsvcs/Notify/Method_Request.h:
          Removed dependency on Types.h and Refcountable.h

        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.h:
          Modified call to <check_filters>.

        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch_No_Filtering.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch_No_Filtering.h:
          Removed unnecessary file dependencies.

        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.h:
          Modified call to <check_filters>.

        * orbsvcs/orbsvcs/Notify/Method_Request_Updates.h:
          Removed dependency on Types.h.

        * orbsvcs/orbsvcs/Notify/Peer.cpp:
        * orbsvcs/orbsvcs/Notify/Peer.h:
          Removed unnecessary file dependencies.

        * orbsvcs/orbsvcs/Notify/Proxy.cpp:
        * orbsvcs/orbsvcs/Notify/Proxy.h:
          Modified <check_filters> signature.

        * orbsvcs/orbsvcs/Notify/ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.h:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.inl:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer_T.cpp:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.cpp:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.h:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.inl:
        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.cpp:
          Removed unnecessary file dependencies.

        * orbsvcs/orbsvcs/Notify/Proxy_T.cpp:
          Seralizw access to public interface method implementation.

        * orbsvcs/orbsvcs/Notify/QoSProperties.cpp:
        * orbsvcs/orbsvcs/Notify/QoSProperties.h:
          Added error checks to the <copy> and <transfer> methods.

        * orbsvcs/orbsvcs/Notify/Reactive_Task.cpp:
        * orbsvcs/orbsvcs/Notify/Reactive_Task.h:
          Removed dependency on <destroy_callback>.

        * orbsvcs/orbsvcs/Notify/Service.h:
          Added definitions of the generic Service Object and the specific Cos and RT Notification Service names.

        * orbsvcs/orbsvcs/Notify/Supplier.cpp:
          Removed unnecessary file dependencies.

        * orbsvcs/orbsvcs/Notify/SupplierAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.h:
          Changed implementation to use the new TAO_NS_Object , Builder and Find_Worker_T.

        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.cpp:
        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.h:
        * orbsvcs/orbsvcs/Notify/Timer_Queue.cpp:
        * orbsvcs/orbsvcs/Notify/Timer_Queue.h:
        * orbsvcs/orbsvcs/Notify/Timer_Reactor.cpp:
        * orbsvcs/orbsvcs/Notify/Timer_Reactor.h:
          Removed dependency on Destroy_Callback interface.

        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Any/PushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Any/PushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushSupplier.h:
          Removed dependency on Destroy_Callback interface.

        * orbsvcs/Notify_Service/Notify_Service.h:
        * orbsvcs/Notify_Service/Notify_Server.cpp:
          Renamed local TAO_Notify_Service class to TAO_Notify_Service_Driver class to void clash with the
          Service name.
          Forward declare TAO_Notify_Service.

        * orbsvcs/Notify_Service/Notify_Service.cpp:
          Look for the generic Notify Service. If that is not found then look for the default
          service object "Notify_Default_Event_Manager_Objects_Factory".

        * orbsvcs/orbsvcs/CosNotification.dsp:
        * orbsvcs/orbsvcs/CosNotification.bor:
        * orbsvcs/orbsvcs/Makefile.CosNotification:
          Updated.

Wed Feb 26 10:28:28 2003  Ossama Othman  <ossama@uci.edu>

        * tao/RTCORBA/RTCORBAC.cpp:

          Wrapped remaining CORBA::UserException base class method calls
          with the ACE_NESTED_CLASS macro.  Addresses remaining problems
          in Borland C++ builds.

        * tao/TypeCodeFactory/TypeCodeFactoryC.h:

          Removed extraneous "ace/pre.h" include.  Fixes some warnings in
          Borland C++ builds.

Wed Feb 26 10:03:10 2003  Ossama Othman  <ossama@uci.edu>

        * tao/ORB.h (ORB):

          Removed TAO_ORB_Core friend declaration.  It caused some
          compilers assume that the TAO_ORB_Core forward declaration
          actually resided in the CORBA namespace, which conflicted with
          the global TAO_ORB_Core class.

          (_tao_make_ORB):
        * tao/ORB.cpp (_tao_make_ORB):

          New static factory method that creates an ORB.  The idea is to
          prevent "new CORBA::ORB()" from being performed by the user
          since only CORBA::ORB_init() is meant to create ORBs.  It is now
          needed since the CORBA::ORB class no longer has any friends.

        * tao/ORB_Core.cpp (init):

          Replaced call to "new CORBA::ORB()" with
          CORBA::ORB::_tao_make_ORB(), i.e. the new static factory method
          described above is used.

Wed Feb 26 09:16:38 2003  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/RTOLDEvent.mpc:

          The RTOLDEvent resource file does not match the name of the
          project, so we explicitly add it to the mpc file.

Tue Feb 25 11:17:47 2003  Ossama Othman  <ossama@uci.edu>

        * tao/IFR_Client/IFR_BaseC.cpp:
        * tao/IFR_Client/IFR_BaseC.h:
        * tao/IFR_Client/IFR_BaseC.i:
        * tao/IFR_Client/IFR_BasicC.cpp:
        * tao/IFR_Client/IFR_BasicC.h:
        * tao/IFR_Client/IFR_BasicC.i:
        * tao/IFR_Client/IFR_ComponentsC.cpp:
        * tao/IFR_Client/IFR_ComponentsC.h:
        * tao/IFR_Client/IFR_ComponentsC.i:
        * tao/IFR_Client/IFR_ExtendedC.cpp:
        * tao/IFR_Client/IFR_ExtendedC.h:
        * tao/IFR_Client/IFR_ExtendedC.i:
        * orbsvcs/orbsvcs/IFR_Service/IFR_BaseS.cpp:
        * orbsvcs/orbsvcs/IFR_Service/IFR_BaseS.h:
        * orbsvcs/orbsvcs/IFR_Service/IFR_BaseS.i:
        * orbsvcs/orbsvcs/IFR_Service/IFR_BaseS_T.cpp:
        * orbsvcs/orbsvcs/IFR_Service/IFR_BaseS_T.h:
        * orbsvcs/orbsvcs/IFR_Service/IFR_BaseS_T.i:
        * orbsvcs/orbsvcs/IFR_Service/IFR_BasicS.cpp:
        * orbsvcs/orbsvcs/IFR_Service/IFR_BasicS.h:
        * orbsvcs/orbsvcs/IFR_Service/IFR_BasicS.i:
        * orbsvcs/orbsvcs/IFR_Service/IFR_BasicS_T.cpp:
        * orbsvcs/orbsvcs/IFR_Service/IFR_BasicS_T.h:
        * orbsvcs/orbsvcs/IFR_Service/IFR_BasicS_T.i:
        * orbsvcs/orbsvcs/IFR_Service/IFR_ComponentsS.cpp:
        * orbsvcs/orbsvcs/IFR_Service/IFR_ComponentsS.h:
        * orbsvcs/orbsvcs/IFR_Service/IFR_ComponentsS.i:
        * orbsvcs/orbsvcs/IFR_Service/IFR_ComponentsS_T.cpp:
        * orbsvcs/orbsvcs/IFR_Service/IFR_ComponentsS_T.h:
        * orbsvcs/orbsvcs/IFR_Service/IFR_ComponentsS_T.i:
        * orbsvcs/orbsvcs/IFR_Service/IFR_ExtendedS.cpp:
        * orbsvcs/orbsvcs/IFR_Service/IFR_ExtendedS.h:
        * orbsvcs/orbsvcs/IFR_Service/IFR_ExtendedS.i:
        * orbsvcs/orbsvcs/IFR_Service/IFR_ExtendedS_T.cpp:
        * orbsvcs/orbsvcs/IFR_Service/IFR_ExtendedS_T.h:
        * orbsvcs/orbsvcs/IFR_Service/IFR_ExtendedS_T.i:
        * tao/TypeCodeFactory/TypeCodeFactoryC.cpp:
        * tao/TypeCodeFactory/TypeCodeFactoryC.h:
        * tao/TypeCodeFactory/TypeCodeFactoryC.inl:

          Regenerated these stubs to pull in the latest CORBA namespace
          fixes.

        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp:
        * tao/IFR_Client/IFR_Client_Adapter_Impl.h:
        * tao/TypeCodeFactory/TypeCodeFactory_Adapter_Impl.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_Adapter_Impl.h:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.h:

          "CORBA_" -> "CORBA::".

Tue Feb 25 08:02:36 2003  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/EC_Mcast/EC_Mcast.mpc:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.mpc:

          Named the project instead of allowing it to default.

Mon Feb 24 09:15:04 2003  Ossama Othman  <ossama@uci.edu>

        * tao/PortableServer/POA.cpp (TAO_POA):

          Fixed "better conversion" warning.

          Fixed incorrect emulated exception macro usage.
          "ACE_TRY_CHECK", not "ACE_CHECK" should have been used.

          Added missing ACE_CHECK after ACE_ENDTRY.  Without it, the
          re-thrown emulated exception in the ACE_CATCHANY block will be
          ignored, incorrectly allowing code after that block to be
          executed.

Mon Feb 24 08:44:39 2003  Ossama Othman  <ossama@uci.edu>

        * tao/DynamicInterface/DII_ClientRequestInfo.h:

          Fixed problem where "ace/post.h" was not included in
          interceptor disabled builds.

          Fixed problem that prevented the TAO_DII_ClientRequestInfo class
          from ever being visible.  A preprocessor check for
          "TAO_HAS_INTERCEPTORS == 1" was being performed before any
          headers that defined "TAO_HAS_INTERCEPTORS" were included
          meaning that condition always evaluated to false.  This also
          fixes "unresolved symbol" errors that have appeared in some
          builds.

        * tao/DynamicInterface/DII_ClientRequestInfo.cpp:

          Fixed syntax errors that were exposed by the code actually being
          made visible.

Mon Feb 24 15:35:23 2003  Edward Scott  <eas@prismtechnologies.com>

        * tao/DynamicAny/DynUnion_i.h:
        * tao/DynamicAny/DynStruct_i.h:

          Fixed incorrect environment macro usage. Thanks to
          vince@mounts.cc for reporting the problem.

Sat Feb 22 09:50:31 2003  Ossama Othman  <ossama@uci.edu>

        * tao/PortableServer/Collocated_Object.cpp (_get_component):
          (_is_equivalent, _tao_QueryInterface):

          Wrapped remaining CORBA::Object base class method calls with the
          ACE_NESTED_CLASS macro.  Addresses remaining problems in Borland
          C++ builds.

Sat Feb 22 09:37:29 2003  Ossama Othman  <ossama@uci.edu>

        * tao/ORB.h (ORB):

          Qualify the TAO_ORB_Core friend declaration with the global
          scope ("::") qualifier.  Addresses a problem where some
          compilers assume that the TAO_ORB_Core declaration actually
          resides in the CORBA namespace.

        * tao/DynamicInterface/Makefile.bor (OBJFILES):

          Fixed syntax error.

Sat Feb 22 09:06:45 2003  Ossama Othman  <ossama@uci.edu>

        * tao/ValueFactory.h (TAO_OBV_CREATE_RETURN_TYPE):
          (TAO_OBV_REGISTER_FACTORY):

          Removed space in macro definition that was incorrectly
          introduced, and caused syntax errors in some builds.

Sat Feb 22 08:52:13 2003  Ossama Othman  <ossama@uci.edu>

        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:

          Include "tao/Wait_Strategy.h".  Necessitated by inter-header
          dependency reductions.

Sat Feb 22 08:44:46 2003  Ossama Othman  <ossama@uci.edu>

        * tests/Queued_Message_Test/Queued_Message_Test.cpp:

          Include "ace/Message_Block.h".  Necessitated by inter-header
          dependency reductions.

Sat Feb 22 08:40:11 2003  Ossama Othman  <ossama@uci.edu>

        * tests/OBV/Factory/FactoryC_impl.h:

          "CORBA_" -> "CORBA::".

Fri Feb 21 13:40:41 2003  Ossama Othman  <ossama@uci.edu>

        * tao/IOPC.cpp:
        * tao/PortableInterceptorC.cpp:
        * tao/DynamicAny/DynamicAnyC.cpp:
        * tao/IORManipulation/IORC.cpp:
        * tao/IORTable/IORTableC.cpp:
        * tao/Messaging/MessagingC.i:
        * tao/Messaging/MessagingC.cpp:
        * tao/PortableServer/Collocated_Object.i:
        * tao/PortableServer/Collocated_Object.cpp:
        * tao/PortableServer/ImplRepoC.i:
        * tao/PortableServer/ImplRepoC.cpp:
        * tao/PortableServer/ImR_LocatorC.i:
        * tao/PortableServer/ImR_LocatorC.cpp:
        * tao/PortableServer/PortableServerC.cpp:

          Wrap some base class initializations and method calls with the
          ACE_NESTED_CLASS macro to work around MSVC++ 6 namespace brain
          damage.  This should also address problems exhibited in the
          Borland C++ 6 build due to a missing class scope.

Fri Feb 21 13:07:33 2003  Ossama Othman  <ossama@uci.edu>

        * TAO_IDL/be/be_interface.cpp (gen_stub_ctor):
        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp (visit_exception):
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp (visit_interface):

          Generate code that uses the ACE_NESTED_CLASS macro to work
          around MSVC++ 6 lack of fully functional C++ namespace sport.
          This should also address problems exhibited in the Borland C++ 6
          build due to a missing class scope.

Fri Feb 21 12:54:07 2003  Ossama Othman  <ossama@uci.edu>

        * tao/ValueBase.h (add_ref, remove_ref):

          Made these function prototypes match those in
          `corbafwd.h'. Should fix a problem revealed in "Release"
          configuration Windows builds.

        * tao/corba.h:
        * tao/orbconf.h:

          Moved ACE_NESTED_CLASS macro out of corba.h and into orbconf.h.
          That macro is needed within TAO's ORB core, as well.

Fri Feb 21 17:49:54 2003  Edward Scott  <eas@prismtechnologies.com>

        * tao/DynamicAny/DynUnion_i.h:
        * tao/DynamicAny/DynUnion_i.cpp:
          Fixes for bug 1455 for creating Dynamic Anys from Anys initialised
          with _default().

        * tao/DynamicAny/DynStruct_i.cpp (from_any):
        * tao/DynamicAny/DynStruct_i.h (TAO_Local_RefCounted_Object):
        * tao/DynamicAny/DynUnion_i.cpp (TAO_DynUnion_i):
          Fixes for Dynamic Any with aliases typecodes. Fixes bug 1449.

        * tests/DynAny_Test/test_dynunion.cpp:
        * tests/DynAny_Test/test_dynstruct.cpp:
        * tests/DynAny_Test/da_tests.idl:
          Test update for bugs 1449 and 1455.

        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/tao_idl.cpp:
          Correct IFR Service handling IDL with C++ keyword identifiers.
          Fixes bug 1393.

        * orbsvcs/tests/Bug_1393_Regression/Bug_1393_Client.dsp:
        * orbsvcs/tests/Bug_1393_Regression/Bug_1393_Client_Static.dsp:
        * orbsvcs/tests/Bug_1393_Regression/Bug_1393_Regression.dsw:
        * orbsvcs/tests/Bug_1393_Regression/Bug_1393_Regression.mpc:
        * orbsvcs/tests/Bug_1393_Regression/client.cpp:
        * orbsvcs/tests/Bug_1393_Regression/Makefile:
        * orbsvcs/tests/Bug_1393_Regression/Makefile.bor:
        * orbsvcs/tests/Bug_1393_Regression/Makefile.Bug_1393_Client:
        * orbsvcs/tests/Bug_1393_Regression/Makefile.Bug_1393_Client.bor:
        * orbsvcs/tests/Bug_1393_Regression/README:
        * orbsvcs/tests/Bug_1393_Regression/run_test.pl:
          Regression test for 1393.

        * tao/PortableServer/POA.cpp (TAO_POA):
          Recover from failure to contact IMR in create_POA with
          persistent policy. Fixes bug 1395.

        * orbsvcs/tests/Bug_1395_Regression/Bug_1395_Client.dsp:
        * orbsvcs/tests/Bug_1395_Regression/Bug_1395_Regression.dsw:
        * orbsvcs/tests/Bug_1395_Regression/Bug_1395_Regression.mpc:
        * orbsvcs/tests/Bug_1395_Regression/Bug_1395_Server.dsp:
        * orbsvcs/tests/Bug_1395_Regression/client.cpp:
        * orbsvcs/tests/Bug_1395_Regression/Makefile:
        * orbsvcs/tests/Bug_1395_Regression/Makefile.Bug_1395_Client:
        * orbsvcs/tests/Bug_1395_Regression/Makefile.Bug_1395_Server:
        * orbsvcs/tests/Bug_1395_Regression/README:
        * orbsvcs/tests/Bug_1395_Regression/run_test.pl:
        * orbsvcs/tests/Bug_1395_Regression/server.cpp:
        * orbsvcs/tests/Bug_1395_Regression/Test_i.cpp:
        * orbsvcs/tests/Bug_1395_Regression/Test.idl:
        * orbsvcs/tests/Bug_1395_Regression/Test_i.h:
          Regression test for 1395.

        * orbsvcs/orbsvcs/Naming/Naming_Utils.cpp (parse_args):
          Fixed usage message (Bug 1438).

        * orbsvcs/tests/Bug_1436_Regression/README:
        * orbsvcs/tests/Bug_1436_Regression/run_test.pl:
        * orbsvcs/tests/Bug_1436_Regression/test.idl:
          Regression test for 1436.

        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:
          Prevent registration of server with empty server name in the
          ImplRepo service. Fixes bug 1437.

        * orbsvcs/tests/Bug_1437_Regression/README:
        * orbsvcs/tests/Bug_1437_Regression/run_test.pl:
          Regression test for 1437.

Fri Feb 21 06:54:45 2003  Ossama Othman  <ossama@uci.edu>

        * TAO_IDL/be/be_visitor_operation/operation.cpp
          (gen_marshal_and_invoke):

          Moved an ending "if" brace to within a TAO_HAS_INTERCEPTORS
          block.  Fixes builds with interceptors disabled.

Fri Feb 21 06:22:36 2003  Ossama Othman  <ossama@uci.edu>

        * tao/ORBInitializer_Registry.cpp:

          Changed ACE_Array_Base explicit template instantiation argument
          from PortableInterceptor::ORBInitializer_ptr to
          PortableInterceptor::ORBInitializer_var.  Fixes unresolved
          symbol link-time errors in explicit template instantiation
          builds.

Thu Feb 20 17:31:58 2003  Ossama Othman  <ossama@uci.edu>

        * examples/Load_Balancing/Load_Balancer_i.cpp:
        * examples/Load_Balancing_persistent/Identity_Client.cpp:
        * examples/Load_Balancing_persistent/Load_Balancer_i.cpp:
        * examples/POA/DSI/Database_i.cpp:
        * orbsvcs/ImplRepo_Service/Forwarder.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:
        * orbsvcs/PSS/PSDL_Interface_Visitor.cpp:
        * orbsvcs/examples/CosEC/RtEC_Based/tests/Multiple/Supplier.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Notify/Event_Manager.cpp:
        * orbsvcs/orbsvcs/Trader/Interpreter_Utils.cpp:
        * orbsvcs/tests/EC_MT_Mcast/MCast.cpp:
        * orbsvcs/tests/FaultTolerance/IOGR/Manager.cpp:
        * tests/DynAny_Test/test_dynany.cpp:
        * tests/DynAny_Test/test_dynarray.cpp:
        * tests/DynAny_Test/test_dynenum.cpp:
        * tests/DynAny_Test/test_dynsequence.cpp:
        * tests/DynAny_Test/test_dynstruct.cpp:
        * tests/DynAny_Test/test_dynunion.cpp:
        * tests/MProfile/client.cpp:
        * tests/MProfile_Connection_Timeout/client.cpp:
        * tests/MProfile_Forwarding/Manager.cpp:
        * tests/OBV/Factory/FactoryC_impl.cpp:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Client_ORBInitializer.cpp:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Server_ORBInitializer.cpp:
        * utils/catior/catior.cpp:


          "CORBA_" -> "CORBA::".

Thu Feb 20 19:59:36 2003  Balachandran Natarajan  <bala@isis-server.isis.vanderbilt.edu>

        * ChangeLogs/ChangeLog-02c:
        * ChangeLogs/ChangeLog-03a: New files.

        * ChangeLog: Moved some of the contents out to the new files
          above.

Thu Feb 20 15:02:27 2003  Ossama Othman  <ossama@uci.edu>

        * tao/ORB_Core_Auto_Ptr.h:

          Fixed filename mismatch in Doxygen documenation.  Fixes a "fuzz"
          error.

Thu Feb 20 14:04:13 2003  Ossama Othman  <ossama@uci.edu>

        * TAO_IDL/be/be_visitor_union/cdr_op_ci.cpp:

          Zapped remaining uses of "CORBA_Any", and replaced them with
          the correct "CORBA::Any".

Thu Feb 20 13:57:36 2003  Ossama Othman  <ossama@uci.edu>

        * TAO_IDL/be/be_visitor_component/component_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_obj_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_obj_sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_obj_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_obj_sequence_cs.cpp:

          Zapped remaining uses of "CORBA_Object", and replaced them with
          the correct "CORBA::Object".

Thu Feb 20 13:25:37 2003  Ossama Othman  <ossama@uci.edu>

        * tao/Domain/DomainS.cpp:
        * tao/Domain/DomainS.h:

          "CORBA_" -> "CORBA::".

Thu Feb 20 13:05:36 2003  Ossama Othman  <ossama@uci.edu>

        * tao/DynamicInterface/Context.cpp:
        * tao/DynamicInterface/Context.h:
        * tao/DynamicInterface/Context.inl:
        * tao/DynamicInterface/DII_ClientRequestInfo.cpp:
        * tao/DynamicInterface/DII_ClientRequestInfo.h:
        * tao/DynamicInterface/DII_Invocation.cpp:
        * tao/DynamicInterface/Dynamic_Adapter_Impl.cpp:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/DynamicInterface/Dynamic_Implementation.h:
        * tao/DynamicInterface/ExceptionList.cpp:
        * tao/DynamicInterface/ExceptionList.h:
        * tao/DynamicInterface/ExceptionList.inl:
        * tao/DynamicInterface/Makefile:
        * tao/DynamicInterface/Makefile.bor:
        * tao/DynamicInterface/Request.cpp:
        * tao/DynamicInterface/Request.h:
        * tao/DynamicInterface/Request.inl:
        * tao/DynamicInterface/Server_Request.cpp:
        * tao/DynamicInterface/Server_Request.h:
        * tao/DynamicInterface/Server_Request.inl:
        * tao/DynamicInterface/Unknown_User_Exception.cpp:
        * tao/DynamicInterface/Unknown_User_Exception.h:


          "CORBA_" -> "CORBA::"

          Classes that should be in the C++ CORBA namespace are now in
          that namespace.

          Removed some unnecessary includes.

          Added preliminary DII interceptor support.

Thu Feb 20 12:05:42 2003  Ossama Othman  <ossama@uci.edu>

        * tao/Makefile.tao (MAKEFILE):

          Corrected the filename.  It should have been "Makefile.tao".
          Not "Makefile."  Fixes a problem where the generated
          dependencies would end up in the wrong Makefile.  Thanks to Don
          Hinton <dhinton@ieee.org> for supplying this fix.

Thu Feb 20 11:44:53 2003  Ossama Othman  <ossama@uci.edu>

        * tao/Object.i (Object):

          Explicitly initialize the TAO_Base_var private base class in
          this copy constructor.  Fixes a warning exhibited by g++.

Thu Feb 20 11:34:00 2003  Ossama Othman  <ossama@uci.edu>

        * tao/Makefile.bor (OBJFILES):
        * tao/tao.mpc (ORB_Core):

          Added new ORB_Core_Auto_Ptr files to these file lists.

Thu Feb 20 11:27:58 2003  Ossama Othman  <ossama@uci.edu>

        * tao/PortableServer/Collocated_Object.h:

          A forward declaration of TAO_ServantBase is not enough.
          Including "Servant_Base.h" is necessary to establish the
          inheritance of TAO_ServantBase from TAO_Abstract_ServantBase.
          TAO_Collocated_Object's constructor passes a TAO_ServantBase
          pointer to the CORBA::Object constructor, but that constructor
          expects a TAO_Abstract_ServantBase pointer, hence the need to
          establish the inheritance hierarchy.

        * tao/PortableServer/Direct_Object_Proxy_Impl.cpp (_non_existent):

          Corrected emulated exception macro usage.

        * tao/PortableServer/PortableServerC.cpp:

          Fixed lingering "CORBA_" -> "CORBA::" problem for the
          !TAO_USE_SEQUENCE_TEMPLATES case.

Thu Feb 20 11:07:01 2003  Ossama Othman  <ossama@uci.edu>

        * tao/Thread_Lane_Resources.h:
        * tao/Thread_Lane_Resources_Manager.h:

          "corbafwd.h" is unfortunately needed for the emulated exception
          case.

Thu Feb 20 10:56:59 2003  Ossama Othman  <ossama@uci.edu>

        * tao/ORBInitializer_Registry.h (TAO_ORBInitializer_Registry):

          Removed default value in second argument of
          PortableInterceptor::register_orb_initializer() friend
          declaration since it is already defined in actual function
          declaration in PortableInterceptorC.h.  Fixes a compile-time
          problem.

        * tao/Remote_Object_Proxy_Impl.cpp (_get_component):

          Corrected emulated exception macro usage.

        * tao/Typecode.cpp (private_member_label):

          Added missing emulated exception macro parameter to the call to
          TypeCode::private_default_index_i().  Fixes a compile-time
          error in emulated exception builds.  This also removes a TSS
          access, and fixes a potentially missed exception in emulated
          exception builds.

Thu Feb 20 10:20:51 2003  Ossama Othman  <ossama@uci.edu>

        * tao/Exception.h (TAO_SYSTEM_EXCEPTION):
        * tao/Exception.cpp (TAO_SYSTEM_EXCEPTION):

          Removed "##" preprocessor concatenation token for the
          "CORBA::name" case.  It isn't needed in this case.  Fixes a g++
          warning regarding invalid token pasting.

        * tao/Services.i:

          Fixed variables containing "CORBA_" in the middle of their names
          that were inadvertently changed to "CORBA::".  Fixes syntax
          errors.

Thu Feb 20 09:07:56 2003  Ossama Othman  <ossama@uci.edu>

        * TAO_IDL/be/be_interface.cpp (gen_stub_ctor):

          Generate code that correctly uses "CORBA::Object" instead of
          "CORBA_Object".

          (gen_var_defn):

          Made generated "_var" classes inherit privately from
          TAO_Base_var instead of publically.  Specifically, private
          inheritance from TAO_Base_var is done to emphasize that
          a given "_var" does not satisfy the IS-A relationship with
          TAO_Base_var.  "_var" classes are merely IMPLEMENTED-IN-TERMS-OF
          TAO_Base_var.  This also correctly invalidates assignments like:
                Foo_var v;
                TAO_Base_var * t = &v;

        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp
          (visit_exception):

          Generate code that correctly uses "CORBA::UserException" instead
          of "CORBA_UserException".

        * TAO_IDL/be/be_visitor_interface/amh_ch.cpp
        * TAO_IDL/be/be_visitor_interface/interface_ci.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/arglist.cpp:

          Generate code that correctly uses "CORBA::Object" instead of
          "CORBA_Object".

        * TAO_IDL/be/be_visitor_operation/ami_cs.cpp:

          Improved "const correctness" of generated interceptor related
          code.  One of the return values is really a constant.

        * TAO_IDL/be/be_visitor_operation/operation.cpp:

          Fixed generated transport retry code/loop.  The exception macros
          prevent statements like "continue" and "break" from being used
          as expected.  Worked around that deficiency by using if/else
          blocks instead.

          Improved "const correctness" of generated interceptor related
          code.  One of the return values is really a constant.

        * TAO_IDL/be/be_visitor_valuetype/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_cs.cpp:

          Generate code that correctly uses "CORBA::ValueBase" instead of
          "CORBA_ValueBase".

        * TAO_IDL/be/be_visitor_valuetype/valuetype.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_ch.cpp:

          Generate code that correctly uses "CORBA::ValueFactoryBase"
          instead of "CORBA_ValueFactoryBase".

        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_obv_cs.cpp:

          Generate code that correctly uses
          "CORBA::DefaultValueRefCountBase" instead of
          "CORBA_DefaultValueRefCountBase".

        * orbsvcs/orbsvcs/PortableGroup.idl:

          Use the "typeprefix" keyword instead of "#pragma prefix".  The
          former is more modern.

        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Monitor.cpp:

          Corrected comment.

        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlert.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlert.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlert.inl:

          Fixed race conditions in the TAO_LB_LoadAlert class.

        * orbsvcs/orbsvcs/Notify/Service.h:

          Include "ace/Service_Object.h" to pull in ACE_Service_Object
          class declaration.  Necessitated by inter-header dependency
          reductions.

        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.h
          (populate_object_group):

          No need to pass an integral type "const" by value.  Remove the
          "const" qualifier.

        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Loader.h:

          No need to include "tao/corbafwd.h".

        * orbsvcs/orbsvcs/FaultTolerance/FT_Invocation_Endpoint_Selectors.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Acceptor_Registry.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Loader.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/Security/Security_ORBInitializer.cpp:
        * tao/CDR_Encaps_Codec.cpp:
        * tao/CORBALOC_Parser.cpp:
        * tao/CodecFactory.cpp:
        * tao/Connector_Registry.cpp:
        * tao/DLL_Parser.cpp:
        * tao/IIOP_Profile.cpp:
        * tao/Interceptor_List.cpp:
        * tao/Invocation.cpp:
        * tao/Invocation_Endpoint_Selectors.cpp:
        * tao/ORBInitInfo.cpp:
        * tao/PICurrent.cpp:
        * tao/PolicyFactory_Registry.cpp:
        * tao/Profile.cpp:
        * tao/Service_Callbacks.cpp:
        * tao/Transport_Connector.cpp:
        * tao/BiDir_GIOP/BiDirGIOP.cpp:
        * tao/BiDir_GIOP/BiDir_PolicyFactory.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
        * tao/Messaging/Messaging.cpp:
        * tao/Messaging/Messaging_Policy_i.cpp:
        * tao/PortableServer/ObjectReferenceTemplate.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/ServerRequestInfo.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tao/RTCORBA/RT_PolicyFactory.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/Strategies/DIOP_Profile.cpp:
        * tao/Strategies/SHMIOP_Profile.cpp:
        * tao/Strategies/UIOP_Profile.cpp:
        * tests/ORT/ORT_test_IORInterceptor.cpp:

          Use CORBA::SystemException instead of CORBA_SystemException.
          The latter was an implementation detail, and part of a
          workaround for C++ compilers that didn't support namespaces.

        * orbsvcs/orbsvcs/PortableGroup/Portable_Group_Map.h:
        * tao/GIOP_Message_Generator_Parser.h:
        * tao/GIOP_Message_Lite.h:
        * tao/PICurrent.h:
        * tao/Request_Dispatcher.h:

          Forward declare TAO_ServerRequest.  Necessitated by inter-header
          dependency reductions.

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:

          Removed obsolete comment.

        * tao/AbstractBase.cpp:
        * tao/AbstractBase.h:
        * tao/AbstractBase.inl:
        * tao/CORBA_String.cpp:
        * tao/CORBA_String.h:
        * tao/CORBA_String.inl:
        * tao/CurrentC.cpp:
        * tao/CurrentC.h:
        * tao/DomainC.cpp:
        * tao/DomainC.h:
        * tao/DomainC.i:
        * tao/Environment.cpp:
        * tao/Environment.h:
        * tao/Environment.i:
        * tao/Exception.cpp:
        * tao/Exception.h:
        * tao/Exception.i:
        * tao/LocalObject.cpp:
        * tao/LocalObject.h:
        * tao/LocalObject.i:
        * tao/NVList.cpp:
        * tao/NVList.h:
        * tao/NVList.i:
        * tao/ORB.cpp:
        * tao/ORB.h:
        * tao/ORB.i:
        * tao/OctetSeqC.cpp:
        * tao/OctetSeqC.h:
        * tao/OctetSeqC.i:
        * tao/PolicyC.cpp:
        * tao/PolicyC.h:
        * tao/PolicyC.i:
        * tao/Principal.cpp:
        * tao/Principal.h:
        * tao/Principal.i:
        * tao/Services.cpp:
        * tao/Services.h:
        * tao/Services.i:
        * tao/StringSeqC.cpp:
        * tao/StringSeqC.h:
        * tao/StringSeqC.i:
        * tao/Typecode.cpp:
        * tao/Typecode.h:
        * tao/Typecode.i:
        * tao/Typecode_Constants.cpp:
        * tao/ValueBase.cpp:
        * tao/ValueBase.h:
        * tao/ValueBase.i:
        * tao/ValueFactory.cpp:
        * tao/ValueFactory.h:
        * tao/ValueFactory.i:

          Moved all "CORBA_" classes into a true CORBA namespace, and
          dropped the "CORBA_" workaround for compilers that lacked
          C++ namespace support.

        * tao/Abstract_Servant_Base.h:

          Moved "TAO_Skeleton" function typedef to this file.  This change
          is part of set of inter-header dependency reductions.

        * tao/Acceptor_Filter.h:
        * tao/Adapter.h:

          Forward declare TAO_ObjectKey.  Necessitated by inter-header
          dependency reductions.

        * tao/Acceptor_Impl.cpp:

          Include "tao/Transport.h".  Necessitated by inter-header
          dependency reductions.

        * tao/Acceptor_Impl.h:
        * tao/CDR.h:

          Fixed doxygen documentation.

        * tao/Asynch_Invocation.h:

          No need to include "tao/Asynch_Reply_Dispatcher_Base.h".
          Forward declaring "TAO_Asynch_Reply_Dispatcher_Base" is enough.

        * tao/Asynch_Queued_Message.cpp:

          Include "ace/Message_Block.h".  Necessitated by inter-header
          dependency reductions.

        * tao/Asynch_Reply_Dispatcher_Base.h:

          No need to include "tao/orbconf.h"  Including "tao/TAO_Export.h"
          is enough.

        * tao/BoundsC.cpp:
        * tao/IOPC.cpp:
        * tao/PollableC.cpp:
        * tao/PortableInterceptorC.cpp:
        * tao/WrongTransactionC.cpp:
        * tao/DynamicAny/DynamicAnyC.cpp
        * tao/IORTable/IORTableC.cpp:
        * tao/PortableServer/PortableServerC.cpp:
        * tao/RTCORBA/RTCORBAC.cpp:

          Use CORBA::UserException instead of CORBA_UserException.
          The latter was an implementation detail, and part of a
          workaround for C++ compilers that didn't support namespaces.

        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp:
        * orbsvcs/orbsvcs/Trader/Interpreter_Utils.cpp:
        * orbsvcs/orbsvcs/Trader/Interpreter_Utils.h:
        * tao/CDR.cpp:
        * tao/Current.pidl:
        * tao/Policy_ForwardC.cpp:
        * tao/Policy_ForwardC.h:
        * tao/ORB_Core.cpp:
        * tao/ObjectReferenceTemplateC.cpp:
        * tao/ObjectReferenceTemplateC.h:
        * tao/PollableC.h:
        * tao/PortableInterceptorC.h:
        * tao/Sequence.cpp:
        * tao/Sequence_T.cpp:
        * tao/Sequence_T.h:
        * tao/TAO_Server_Request.h:
        * tao/TAO_Server_Request.i:
        * tao/TypeCodeFactory_Adapter.h:
        * tao/objectid.h:
        * tao/DynamicAny/DynAnyFactory.cpp:
        * tao/DynamicAny/DynAnyFactory.h:
        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynAny_i.h:
        * tao/DynamicAny/DynArray_i.cpp:
        * tao/DynamicAny/DynArray_i.h:
        * tao/DynamicAny/DynCommon.cpp:
        * tao/DynamicAny/DynCommon.h:
        * tao/DynamicAny/DynEnum_i.cpp:
        * tao/DynamicAny/DynEnum_i.h:
        * tao/DynamicAny/DynSequence_i.cpp:
        * tao/DynamicAny/DynSequence_i.h:
        * tao/DynamicAny/DynStruct_i.cpp:
        * tao/DynamicAny/DynStruct_i.h:
        * tao/DynamicAny/DynUnion_i.cpp:
        * tao/DynamicAny/DynUnion_i.h:
        * tao/DynamicAny/DynamicAnyC.h:
        * tao/IORManipulation/IORC.cpp:
        * tao/IORManipulation/IORC.h:
        * tao/IORTable/IORTableC.h:
        * tao/IORTable/Table_Adapter.cpp:
        * tao/Messaging/MessagingC.cpp:
        * tao/Messaging/MessagingC.h:
        * tao/Messaging/MessagingC.i:
        * tao/Messaging/MessagingS.cpp:
        * tao/PortableServer/Collocated_Object.cpp:
        * tao/PortableServer/Collocated_Object.i:
        * tao/PortableServer/Default_ORTC.cpp:
        * tao/PortableServer/Default_ORTC.h:
        * tao/PortableServer/ImR_LocatorC.cpp:
        * tao/PortableServer/ImR_LocatorC.h:
        * tao/PortableServer/ImR_LocatorC.i:
        * tao/PortableServer/ImR_LocatorS.cpp:
        * tao/PortableServer/ImR_LocatorS.h:
        * tao/PortableServer/ImplRepoC.cpp:
        * tao/PortableServer/ImplRepoC.h:
        * tao/PortableServer/ImplRepoC.i:
        * tao/PortableServer/ImplRepoS.cpp:
        * tao/PortableServer/ImplRepoS.h:
        * tao/PortableServer/ORB_Manager.cpp:
        * tao/PortableServer/POA.cpp:
        * tao/PortableServer/PolicyS.cpp:
        * tao/PortableServer/PolicyS.h:
        * tao/PortableServer/PortableServerC.h:
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/Servant_Base.h:
        * tao/PortableServer/ThruPOA_Object_Proxy_Impl.cpp:
        * tao/PortableServer/ThruPOA_Object_Proxy_Impl.h:
        * tao/RTCORBA/RTCORBAC.h:

          "CORBA_" -> "CORBA::".

        * tao/ClientInterceptorAdapter.cpp (receive_reply):
          (receive_exception, receive_other):
        * tao/ClientRequestInfo_i.cpp:

          Improved "const-correctness" of code.

        * tao/ClientRequestInfo_i.h:

          No need to include "Service_Context.h".  Forward declaring
          "TAO_Service_Context" is enough.

        * tao/Collocation_Resolver.h:
        * tao/Connector_Registry.h:
        * tao/Endpoint_Selector_Factory.h:
        * tao/Invocation_Endpoint_Selectors.h:
        * tao/Object_Ref_Table.h:
        * tao/Transport_Connector.h:

          Include "ace/CORBA_macros.h" to pull in emulated exception
          preprocessor macros.  Necessitated by inter-header dependency
          reductions.

        * tao/Connection_Handler.h (~TAO_Connection_Handler):
        * tao/IIOP_Transport.h (~TAO_IIOP_Transport):

          Made this destructor protected to enforce proper memory
          management through the reference counting mechanism.

        * tao/Default_Thread_Lane_Resources_Manager.h:
        * tao/Dynamic_Adapter.h:
        * tao/Policy_Set.h:
        * tao/DynamicInterface/Dynamic_Adapter_Impl.h:
        * tao/RTCORBA/RT_Thread_Lane_Resources_Manager.h:

          Do not supply default environment parameter.  It isn't needed in
          these cases.

        * tao/Endpoint.h:

          Improved doxygen documentation.

          (addr_lookup_lock_)

          Improved "const-correctness" by making this member mutable.
          This allows concrete implementations of the
          TAO_Endpoint::object_addr() method to avoid using a hack where
          the constness is casted away.

        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Lite.cpp:

          "CORBA_Exception" -> "CORBA::Exception".

        * tao/GIOP_Message_Generator_Parser_10.cpp:

          "CORBA_OctetSeq" -> "CORBA::OctetSeq".

        * tao/IFR_Client_Adapter.h:

          "CORBA_Interface" -> "CORBA::Interface".

        * tao/IIOP_Connection_Handler.cpp:

          Include "tao/Wait_Strategy.h".  Necessitated by inter-header
          dependency reductions.

        * tao/IIOP_Connection_Handler.h:

          No need to include "ace/Acceptor.h", "tao/Wait_Strategy.h",
          "tao/IIOP_Transport.h".

          Include "ace/SOCK_Stream.h" and "ace/Svc_Handler.h" to allow
          IIOP-specific Svc_Handler typedef to be made in this header.

        * tao/IIOP_Connector.cpp:

          Include "Transport.h" and "Wait_Strategy.h".  Necessitated by
          inter-header dependency reductions.

        * tao/IIOP_Endpoint.h (object_addr_, object_addr_set_):

          Improved "const-correctness" by making these members mutable.
          This allows the TAO_IIOP_Endpoint::object_addr() method to avoid
          using a hack where the constness is casted away.

        * tao/IIOP_Endpoint.i (object_addr):

          No longer any need to use the hack where the constness is casted
          away since the appropriate class members are now mutable.

        * tao/IIOP_Transport.cpp:

          Cosmetic changes.

        * tao/IOPC.h (Codec, CodecFactory):

          Inherit from "CORBA::Object" instead of "CORBA_Object".

        * tao/LF_Event_Loop_Thread_Helper.h:

          No need to include "tao/orbconf.h"

        * tao/LF_Event_Loop_Thread_Helper.inl:

          Added Emacs C++ mode comment.

        * tao/Leader_Follower.h:

          No need to forward declare "TAO_New_Leader_Generator".

        * tao/MCAST_Parser.cpp:

          No need to include "ORB.h".

        * tao/MCAST_Parser.h:

          No need to include "ORB_Core.h".

          Instead include "CORBA_String.h".   Necessitated by inter-header
          dependency reductions.

        * tao/Marshal.h:

          No need to include "tao/Principal.h", "tao/Any.h", "tao/ORB.h".

        * tao/ORBInitInfo.h:

          "CORBA_Environment" -> "CORBA::Environment".

        * tao/ORBInitializer_Registry.h:

          Changed underlying template array parameter from
          "ORBInitializer_ptr" to "ORBInitializer_var" to improve memory
          management of registered ORBInitializers.

          (~TAO_ORBInitializer_Registry):
        * tao/ORBInitializer_Registry.cpp (~TAO_ORBInitializer_Registry):

          Removed declaration for this destructor.  It is no longer
          necessary with the above change in place.

          (register_orb_initializer, pre_init, post_init):

          Improved const-correctness.

        * tao/ORB_Core.h:
        * tao/ORB_Core.i:
        * tao/ORB_Core_Auto_Ptr.h:
        * tao/ORB_Core_Auto_Ptr.inl:
        * tao/ORB_Core_Auto_Ptr.cpp:

          Moved TAO_ORB_Core_Auto_Ptr class from ORB_Core.* to the new
          ORB_Core_Auto_Ptr.* files.

        * tao/Object.h:

          Forward declare TAO_ObjectKey.  Necessitated by inter-header
          dependency reductions.

          "CORBA_Object" -> "CORBA::Object".

          Made CORBA::Object_var inherit privately from TAO_Base_var, and
          added appropriate private copy constructor and assignment
          operator to prevent invalid widening.

        * tao/Object.i:
        * tao/Object.cpp:

          "CORBA_Object" -> "CORBA::Object".

        * tao/Object_KeyC.h:

          Forward declare TAO_Object_Key_var.  Necessitated by the
          "tao/corbafwd.h" cleanup.

        * tao/Object_Proxy_Broker.h (TAO_Object_Proxy_Broker):
        * tao/Object_Proxy_Broker.cpp (TAO_Object_Proxy_Broker):
        * tao/Object_Proxy_Impl.cpp (TAO_Object_Proxy_Impl):

          Removed useless constructor.

        * tao/Object_Proxy_Impl.h:

          Removed useless constructor.

          Added missing "#pragma once".

          "const CORBA::Char *" -> "const char *".

          "CORBA_" -> "CORBA::".

        * tao/Profile.i:

          Corrected some comments.

        * tao/Protocols_Hooks.h:

          Forward declare TAO_Stub.  Necessitated by inter-header
          dependency reductions.

        * tao/Remote_Object_Proxy_Broker.cpp:
        * tao/Remote_Object_Proxy_Broker.h:

          Removed useless constructor and destructor.

        * tao/Remote_Object_Proxy_Impl.cpp:

          Removed useless constructor and destructor.

          Avoided inclusion of "tao/Any.h" by directly using the
          TAO_InputCDR::to_boolean() method instead of
          CORBA::Any::to_boolean().

          "CORBA_" -> "CORBA::".

          Fixed some emulated exception macro usage.

          (_get_component):

          Updated to better match current TAO_IDL generated stub code.

        * tao/Remote_Object_Proxy_Impl.h:

          "CORBA::Char *" -> "char *".

          "CORBA_" -> "CORBA::".

        * tao/Sequence.h:

          Include "ace/CORBA_macros.h" and "ace/Message_Block.h".
          Necessitated by inter-header dependency reduction.

          Removed now obsolete "CORBA_Object" and "CORBA_Environment"
          forward declarations.

          "CORBA_" -> "CORBA::".

        * tao/Service_Callbacks.h:

          Corrected TAO_ServerRequest forward declaration,
           i.e. "TAO_Server_Request" to "TAO_ServerRequest".

        * tao/Stub.h:

          Include new "ORB_Core_Auto_Ptr.h" header to pull in
          TAO_ORB_Core_Auto_Ptr declaration.

        * tao/Stub_Factory.h:

          Forward declare TAO_Stub and include "ace/CORBA_macros.h".
          Necessitated by inter-header dependency reductions.

        * tao/Synch_Queued_Message.cpp:

          Included "ace/Message_Block.h".  Necessitated by inter-header
          dependency reductions.

        * tao/TAO.dsp:

          Added new ORB_Core_Auto_Ptr.* files to this project.

        * tao/TAO_Internal.cpp:

          Include "tao/Adapter.h", "tao/ORB_Core.h" and
          "Dynamic_Service.h".  Necessitated by inter-header dependency
          reductions.

        * tao/Tagged_Components.cpp:

          Cosmetic changes.

        * tao/Thread_Lane_Resources.h:
        * tao/Thread_Lane_Resources_Manager.h:

          No need to include "tao/corbafwd.h".

          Include "tao/TAO_Export.h" and "ace/CORBA_macros.h".
          Necessitated by inter-header dependency reductions.

        * tao/Transport.cpp:

          Cosmetic changes.

        * tao/Transport.h:

          No need to include "Transport_Descriptor_Interface.h".  A
          forward declaration is enough.

          (~TAO_Transport):

          Made destructor protected in order to enforce proper memory
          management through the reference counting mechanism.

        * tao/ValueFactory_Map.cpp:

          Initialize the underlying map with the new
          "TAO_DEFAULT_VALUE_FACTORY_TABLE_SIZE" constant.

          "CORBA_" -> "CORBA::".

        * tao/ValueFactory_Map.h:

          Include "Hash_Map_Manager_T.h" instead of "Hash_Map_Manager.h".
          The latter includes the former, and the former is the only one
          that is needed.

          "CORBA_" -> "CORBA::".

        * tao/corba.h:

          Include "tao/varbase.h".  The TAO_IDL compiler no longer
          generates an include directive for that header in the stub
          headers.

        * tao/corbafwd.cpp:

          Converted global constants in the CORBA namespace to be declared
          using straight C++ instead of the namespace macro workarounds.

        * tao/corbafwd.h:

          No need to include "ace/CORBA_macros.h" and "tao/varbase.h".

          Removed workaround used for compilers that didn't support C++
          namespaces.  All classes and types that are in the CORBA IDL
          namespace are now in a true CORBA C++ namespace.

          Removed all "CORBA_" based typedefs.  They are no longer
          needed.

          Moved all non-CORBA namespace related typedefs and constants out
          this of file.  They don't belong there.

          The above changes greatly reduce the size of this file, which
          has been a bottleneck for compiles.

        * tao/corbafwd.i (default_environment):

          Updated to conform to ACE/TAO coding conventions.

        * tao/iiop_endpoints.h:

          No need to include "tao/Any.h".  Include "tao/CDR.h" instead.

        * tao/orbconf.h:

          Added "TAO_DEFAULT_VALUE_FACTORY_TABLE_SIZE" global constant to
          be used as the default size of the ValueFactory map.
          Previously, the default table size was used which is too large
          (i.e. 1024).

        * tao/varbase.h (TAO_Base_var):

          Added private copy constructor and assignment operator to
          improve prevention of invalid widening.

        * tao/PortableServer/Collocated_Object.h:

          No need to include "tao/Servant_Base.h".

          "CORBA_" -> "CORBA::".

        * tao/PortableServer/Direct_Object_Proxy_Impl.cpp
          (TAO_Direct_Object_Proxy_Impl):

          Removed useless constructor.

          (_get_interface, _getcomponent):

          Fixed emulated exception support.

        * tao/PortableServer/Direct_Object_Proxy_Impl.h:
          (TAO_Direct_Object_Proxy_Impl):

          Removed useless constructor.

        * tao/PortableServer/Object_Adapter.h:

          No need to include "Key_Adapters.h" and "Servant_Base.h".

        * tao/PortableServer/Operation_Table.h:

          Include "tao/Abstract_Servant_Base.h".  Necessitated by
          inter-header dependency reductions.

        * tao/PortableServer/POA.h:

          Include "tao/PortableInterceptorC.h".  Necessitated by
          inter-header dependency reductions.

          Changed map of POA children from ACE_Hash_Map_Manager to
          ACE_Hash_Map_Manager_Ex.  That save us three template
          instantiations.

        * tao/PortableServer/ServerInterceptorAdapter.cpp (send_reply):
          (send_exception, send_other):

          Improved const-correctness.

        * tao/RTCORBA/RT_ORB_Loader.cpp:

          No need to include "tao/ORB_Core.h" and
          "tao/ORBInitializer_Registry.h".

          "CORBA_" -> "CORBA::".
