Mon Mar 22 19:55:58 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_module/module.cpp:
        * TAO_IDL/be/be_root.cpp:
        * TAO_IDL/be_include/be_visitor_root/root.h:
        * TAO_IDL/be_include/be_root.h:
        * TAO_IDL/be_include/be_visitor_root.h:
        
          Made class be_root inherit from be_module (as AST_Root
          inherits from aST_Module) and be_visitor_root inherit
          from be_visitor_module. This change enabled ~1200 lines
          of code to be eliminated from be_visitor_root.

Mon Mar 20 15:52:37 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_visitor_component/component_ci.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ci.cpp:
          Layout changes to the generated code

        * TAO_IDL/be/be_visitor_connector/executor_ami_exh.cpp:
          Commented out the generation of the receptacle_ member, it
          is not used in the generated code as far as I can tell

        * TAO_IDL/be/be_visitor_connector/facet_ami_exs.cpp:
          Const change
        * TAO_IDL/be/be_visitor_operation/operation_ch.cpp

Mon Mar 22 15:05:44 UTC 2010  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * NEWS:
        * tao/ORB_Core.cpp:
        * docs/Options.html:
          Implemented -ORBHandleLoggingStrategyEvents option. Updated NEWS
          for it and added corresponding documentation. This fixes bug#3837.

        * tests/Bug_3837_Regression/client.cpp:
        * tests/Bug_3837_Regression/Bug_3837_Regression.mpc:
        * tests/Bug_3837_Regression/logger.conf:
        * tests/Bug_3837_Regression/Hello.cpp:
        * tests/Bug_3837_Regression/Test.idl:
        * tests/Bug_3837_Regression/server.cpp:
        * tests/Bug_3837_Regression/Hello.h:
        * tests/Bug_3837_Regression/README:
        * tests/Bug_3837_Regression/run_test.pl:
        * bin/tao_orb_tests.lst:
          Added a test for a new feature and scheduled it for run.

Mon Mar 20 10:39:37 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_connector/executor_ami_exh.cpp:
          Generate missing space when connector export macro is used

Mon Mar 20 10:00:37 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * MPC/config/taobaseidldefaults.mpb:
          Added rules for generating connector implementation

Mon Mar 22 09:49:04 UTC 2010  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * examples/RTScheduling/Fixed_Priority_Scheduler/test.cpp:
        * examples/RTScheduling/DT_Creator.cpp:
        * examples/RTScheduling/MIF_Scheduler/test.cpp:
          Fixed these examples on Windows builds.

Mon Mar 20 09:43:37 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_visitor_component/component_sh.cpp
          Layout changes to the generated code

        * TAO_IDL/be/be_visitor_connector/connector_ami_exs.cpp:
          Use ACE_NEW_NORETURN

        * TAO_IDL/be/be_visitor_scope.cpp:
          Check node pointer and return -1 instead of crashing

Fri Mar 19 18:53:26 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_connector.cpp:
        * TAO_IDL/be/be_visitor_connector/connector_ami_exs.cpp:
        * TAO_IDL/be/be_visitor_connector/executor_ami_exs.cpp:
        * TAO_IDL/be/be_visitor_connector/connector_ami_exh.cpp:
        * TAO_IDL/be/be_visitor_connector/facet_ami_exs.cpp:
        * TAO_IDL/be/be_visitor_connector/executor_ami_exh.cpp:
        * TAO_IDL/be/be_visitor_connector/facet_ami_exh.cpp:
        * TAO_IDL/be_include/be_visitor_ami_pre_proc.h:

          More changes debugging the generation of an AMI4CCM
          connector implementation.

Fri Mar 19 14:18:40 UTC 2010  Adam Mitz  <mitza@ociweb.com>

        * examples/PluggableUDP/tests/SimplePerformance/server.cpp:

          Removed redefinition of ACE_MAIN on VxWorks.

        * orbsvcs/DevGuideExamples/NamingService/corbaname_Messenger/run_test.pl:

          Use the TestTarget's HOSTNAME property.

        * tests/AlternateIIOP/run_test.pl:

          Fixed a bug where ',' was used to join two Perl strings instead
          of '.'.  Changed hostname of "bogus" host.

        * tests/Bug_1495_Regression/run_test.pl:

          Swapped client and server TestTargets (client is now target #1).

        * tests/Bug_2183_Regression/hang_client.pl:
        * tests/Bug_2183_Regression/run_test.pl:

          Pass the remote target's hostname to hang_client.pl and run the
          client processes on TestTarget #2.

        * tests/Bug_2805_Regression/client.cpp:
        * tests/Bug_2909_Regression/client.cpp:
        * tests/UNKNOWN_Exception/server.cpp:

          Running orb->perform_work() in a tight loop may starve-out the
          other threads.  Added ACE_OS::thr_yield().

        * tests/CSD_Strategy_Tests/TP_Test_Static/run_test.pl:

          TestTarget #1 is created before the loop, start with #2.

        * tests/ForwardOnceUponException/run_test.pl:

          Select a new random port each time through the loop.

        * tests/HandleExhaustion/run_test.pl:

          Let the client process run a little while longer before killing it.

        * tests/HandleExhaustion/server.cpp:

          On VxWorks (kernel), hard-code the executable name as "server.out".

        * tests/Hang_Shutdown/client.conf:

          Added the three other svc.conf settings that are required when
          -ORBClientConnectionHandler rw is used.

Fri Mar 19 11:55:18 UTC 2010  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * examples/RTScheduling/Fixed_Priority_Scheduler/test.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Task.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler/run_test.pl:
        * examples/RTScheduling/Job_i.cpp:
        * examples/RTScheduling/Thread_Task.cpp:
          Fixed RTScheduling examples on Solaris builds.

Fri Mar 19 10:36:37 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * MPC/config/taobaseidldefaults.mpb:
          Added flags used for ciao and with -GM we get a new A.idl file

Thu Mar 18 18:33:20 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_visitor_connector/connector_ami_exs.cpp:
        * TAO_IDL/be/be_visitor_connector/connector_ami_exh.cpp:
        * TAO_IDL/be/be_visitor_connector/facet_ami_exs.cpp:
        * TAO_IDL/be/be_visitor_connector/executor_ami_exh.cpp:
        * TAO_IDL/be/be_visitor_connector/facet_ami_exh.cpp:
        * TAO_IDL/be_include/be_visitor_connector/facet_ami_exh.h:
        * TAO_IDL/be_include/be_visitor_connector/facet_ami_exs.h:

          Changes to AMI connector impl generation, mostly due
          to the declaration of the AMI connector in IDL as a
          template module instantiation.

        * TAO_IDL/fe/fe_utils.cpp:

          Commented out the destruction of template arguments
          for the time being until a way can be found to
          avoid the call on AST nodes that are already
          destroyed.

Thu Mar 18 09:30:37 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Hello/IDL_Test.mpc:
          Enabled some more files with rti nddsgen

Thu Mar 18 08:02:37 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          Only when -GM is enabled on the commandline generate the ami4ccm
          includes. Fixes the problems that the dds4ccm connectors also
          got this include

        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be_include/be_global.h:
          Default the dds implementation to NONE

        * TAO_IDL/be/be_visitor_connector/connector_dds_exh.cpp:
          With RTI DDS the dds implicit sequence now has a RTISeq postfix

Thu Mar 18 07:59:37 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

              * TAO_IDL/Makefile.am:
                Removed obsolete files

              * TAO_IDL/be/be_visitor_operation/operation_sh.cpp:
              * TAO_IDL/be/be_visitor_interface/interface_sh.cpp
                Changed layout of generated code

Wed Mar 17 19:10:37 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_ami4ccm_pre_proc.cpp:
        * TAO_IDL/be_include/be_visitor_ami4ccm_pre_proc.h:

          Removed this visitor, it was a temporary experiment.

        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/be/be_visitor_interface/ami4ccm_sendc_ex_idl.cpp:
        * TAO_IDL/be/be_visitor_interface/ami4ccm_conn_ex_idl.cpp:
        * TAO_IDL/be/be_visitor_interface/ami4ccm_rh_ex_idl.cpp:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_helper.cpp:
        * TAO_IDL/be/be_connector.cpp:
        * TAO_IDL/be/be_visitor_module/module.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be_include/be_connector.h:
        * TAO_IDL/be_include/be_codegen.h:
        * TAO_IDL/be_include/be_helper.h:
        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/util/utl_global.cpp:

          Further work on implementation of AMI connector code
          generation. The presence of any
          #pragma ciao ami4ccm interface "xxx" directives will
          trigger the generation of an *A.idl file containing
          AMI-related types associated with each interface -
          a local AMI callback interface, a local interface
          containing the corresponding sendc_* operations
          (in a separate interface rather than added to the
          original interface as in CORBA AMI so that users
          connecting to a component but not wishing to use
          AMI will not be burdened with the extra footprint),
          and a connector declaration, in the form of an
          instantiation of a template module (parameterized on
          the original interface and the sendc_* operation
          interface) containing a porttype with a 'uses'
          port using the interface type and a 'provides' port
          using the sendc_* operation interface type, and a
          connector declaration using the porttype. This new
          generated IDL file will be treated like any other
          IDL file containing a connector declaration, that is,
          executor IDL, a servant class, a context class,
          and a connector implementation will be generated in
          turn from it.

Wed Mar 17 13:44:06 UTC 2010  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tao/RTScheduling/Request_Interceptor.cpp:
        * tao/RTScheduling/RTScheduler_Manager.inl:
        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/Current.h:
        * tao/RTScheduling/RTScheduler_Initializer.cpp:
        * tao/RTScheduling/RTScheduler_Initializer.h:
          Fixed a number of memory leaks.

        * tests/RTScheduling/DT_Spawn/test.cpp:
        * tests/RTScheduling/DT_Spawn/Thread_Action.h:
        * tests/RTScheduling/Scheduler.cpp:
        * tests/RTScheduling/Current/Thread_Task.cpp:
        * tests/RTScheduling/Scheduling_Interceptor/test_server.cpp:
        * tests/RTScheduling/VoidData/test_client.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.h:
        * tests/RTScheduling/Thread_Cancel/test.cpp:
        * tests/RTScheduling/Thread_Cancel/Thread_Task.cpp:
        * examples/Kokyu_dsrt_schedulers/fp_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/fp_example/server.cpp:
        * examples/Kokyu_dsrt_schedulers/fp_example/test_i.cpp:
        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/mif_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/mif_example/server.cpp:
        * examples/Kokyu_dsrt_schedulers/mif_example/test_i.cpp:
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/muf_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/muf_example/server.cpp:
        * examples/Kokyu_dsrt_schedulers/muf_example/test_i.cpp:
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/EDF_Scheduler.cpp:
        * examples/RTScheduling/Thread_Task.h:
        * examples/RTScheduling/POA_Holder.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Scheduler.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Scheduler.h:
        * examples/RTScheduling/Fixed_Priority_Scheduler/test.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler/test.h:
        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Task.cpp:
        * examples/RTScheduling/Fixed_Priority_Scheduler/run_test.pl:
        * examples/RTScheduling/Job_i.cpp:
        * examples/RTScheduling/DT_Creator.cpp:
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.cpp:
        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.h:
        * examples/RTScheduling/MIF_Scheduler/test.cpp:
        * examples/RTScheduling/MIF_Scheduler/MIF_DT_Creator.cpp:
        * examples/RTScheduling/MIF_Scheduler/test.h:
        * examples/RTScheduling/MIF_Scheduler/run_test.pl:
        * examples/RTScheduling/MIF_Scheduler/MIF_Task.cpp:
        * examples/RTScheduling/Thread_Task.cpp:
        * examples/RTScheduling/DT_Creator.h:
          Fixed a lot of memory leaks which are actually similar from test
          to test.

Wed Mar 17 10:57:54 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
          Use fully scoped TAO namespace

Wed Mar 17 10:43:54 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_array/array.cpp:
        * TAO_IDL/be/be_visitor_field/field_ch.cpp:
          Use fully scoped TAO namespace

Wed Mar 17 09:14:50 UTC 2010  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * docs/Options.html:
          Improved readability of description for -ORBIgnoreDefaultSvcConfFile.

        * tests/Bug_3826_Regression/run_test.pl:
          Removed -ORBIgnoreDefaultSvcConfFile in a subtest for
          -ORBSvcConfDirective as it is not needed after the following
          change in ACE.
          Wed Mar 17 08:57:30 UTC 2010  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * NEWS:
          Added news entry about -ORBIgnoreDefaultSvcConfFile.

Mon Mar 15 11:49:54 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_interface/ami4ccm_conn_ex_idl.cpp:
          Derive the implied AMI4CCM connector from ::CCM_AMI::AMI_Base

Mon Mar 15 11:25:54 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_component/component_svs.cpp:
          Simplified generated factory method

        * TAO_IDL/be/be_visitor_component/context_svs.cpp:
          Fixed issue with the layout of the generated code

Fri Mar 12 20:34:24 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be_include/be_visitor_connector/connector_ami_exs.h:
        * TAO_IDL/be/be_visitor_connector/connector_ami_exs.cpp:
        * TAO_IDL/be_include/be_visitor_connector/executor_ami_exs.h:
        * TAO_IDL/be/be_visitor_connector/executor_ami_exs.cpp:
        * TAO_IDL/be/be_visitor_connector/facet_ami_exs.cpp:
        * TAO_IDL/be_include/be_visitor_connector/facet_ami_exs.h:

          New visitors, generating the source code for the AMI
          connector implementation.

        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_connector.cpp:
        * TAO_IDL/be/be_visitor_component/facet_exs.cpp:
        * TAO_IDL/be/be_visitor_module/module.cpp:
        * TAO_IDL/be/be_visitor_connector/connector_ami_exh.cpp:
        * TAO_IDL/be/be_visitor_connector/executor_ami_exh.cpp:
        * TAO_IDL/be/be_visitor_connector/facet_ami_exh.cpp:
        * TAO_IDL/be_include/be_operation.h:
        * TAO_IDL/be_include/be_visitor_connector.h:
        * TAO_IDL/be_include/be_visitor_component/facet_exs.h:

          Changes related to the new visitors described above,
          and other minor changes.

Fri Mar 12 11:19:54 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_connector/executor_ami_exh.cpp:
          Fixed argument not used warning

        * util/utl_decllist.cpp:
          Zap old documentation

Thu Mar 11 22:53:51 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_connector/connector_ami_exh.cpp:
        * TAO_IDL/be/be_visitor_connector/executor_ami_exh.cpp:
        * TAO_IDL/be/be_visitor_connector/facet_ami_exh.cpp:
        * TAO_IDL/be_include/be_visitor_connector/facet_ami_exh.h:
        * TAO_IDL/be_include/be_visitor_connector/connector_ami_exh.h:
        * TAO_IDL/be_include/be_visitor_connector/executor_ami_exh.h:

          New visitors to generate the AMI connector implementation
          header.

        * TAO_IDL/be/be_visitor_operation/arglist.cpp:

          Removed generation of pure virtual extension to method
          declarations when generating for implementation header.

        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_module/module.cpp:

          Added temporary code to launch the new visitors until
          the overarching logic is in place for AMI connectors.

        * TAO_IDL/be/be_visitor_connector.cpp:
        * TAO_IDL/be_include/be_visitor_connector.h:

          Added new visitor files to the include lists.

        * TAO_IDL/be/be_visitor_component/executor_exh.cpp:

          Fixed typo in error message.

Thu Mar 11 15:44:15 UTC 2010  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * tao/TAO_Internal.cpp:
          Added a new -ORBIgnoreDefaultSvcConfFile option. It will force to
          ignore svc.conf if it's present in current directory.

        * tests/Bug_3826_Regression/svc.conf:
        * tests/Bug_3826_Regression/server.cpp:
        * tests/Bug_3826_Regression/run_test.pl:
          Extended the test for using a new option.

        * docs/Options.html:
          Documented a new -ORBIgnoreDefaultSvcConfFile option.

Thu Mar 11 14:09:46 UTC 2010  Vladimir Zykov  <vladimir.zykov@prismtech.com>

        * TAO_IDL/be/be_union_branch.cpp:
        * TAO_IDL/be/be_visitor_union/discriminant_ci.cpp:
        * TAO_IDL/be/be_visitor_union/cdr_op_cs.cpp:
        * TAO_IDL/ast/ast_union_branch.cpp:
          Fixed code generation for unions related to bug#3821. If union
          has several case labels for one element and default is not the
          first label in this list then tao_idl generated non-compilable
          code. Changed how default label value is generated. tao_idl uses
          existing but unused enum labels where these exist for maximum
          compatability with Java ORBs.

        * TAO_IDL/ast/ast_union.cpp:
          Fixed a typo in the code when union labels are iterated in
          a loop but only the first label is always checked.

        * tests/Bug_3821_Regression/test.cpp:
        * tests/Bug_3821_Regression/test.idl:
        * tests/IDL_Test/Bug_3821_Regression.idl:
          Updated the test for testing new code.

Thu Mar 11 09:39:54 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_3215_Regression/ServerORBInitializer2.{h,cpp}:
          Layout changes

Tue Mar  9 20:06:25 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/ami4ccm_conn_ex_idl.cpp:

          Added code generation of IDL local interfaces related to
          the generated IDL connector.

        * TAO_IDL/be/be_visitor_component/context_svh.cpp:
        * TAO_IDL/be/be_visitor_component/context_ex_idl.cpp:
        * TAO_IDL/be/be_visitor_component/servant_svs.cpp:
        * TAO_IDL/be/be_visitor_component/context_svs.cpp:

          Fixed memory leaks and made minor formatting changes
          to generated code.

Tue Mar  9 18:29:06 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/ami4ccm_conn_ex_idl.cpp:
        * TAO_IDL/be_include/be_visitor_interface/ami4ccm_conn_ex_idl.h:

          New visitor, to generate the implied connector IDL for a
          designated AMI4CCM IDL interface.

        * TAO_IDL/be/be_visitor_interface.cpp:
        * TAO_IDL/be_include/be_visitor_interface.h:

          Added the new visitor files to the IDL compiler build.

        * TAO_IDL/be/be_interface.cpp:

          Added code to create and launch the new visitor.

Tue Mar  9 14:28:06 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/TAO_IDL_ACE.mwc:
          Use full paths

Mon Mar  8 20:22:18 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/ami4ccm_rh_ex_idl.cpp:

          Changed inheritance list of reply handler interface to include
          corresponding reply handler(s) of parent(s), if any.

Mon Mar  8 19:17:55 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/ami4ccm_sendc_ex_idl.cpp:
        * TAO_IDL/be_include/be_visitor_interface/ami4ccm_sendc_ex_idl.h:

          New files, containing a new visitor that generates an interface
          containing sendc_* operations for AMI4CCM in the executor IDL
          file, and a corresponding CCM_* interface inheriting from it.

        * TAO_IDL/be/be_visitor_scope.cpp:
        * TAO_IDL/be/be_visitor_interface/ami4ccm_rh_ex_idl.cpp:
        * TAO_IDL/be/be_visitor_ami_pre_proc.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_decl.cpp:
        * TAO_IDL/be/be_visitor_interface.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be_include/be_interface.h:
        * TAO_IDL/be_include/be_visitor_interface/ami4ccm_rh_ex_idl.h:
        * TAO_IDL/be_include/be_decl.h:
        * TAO_IDL/be_include/be_visitor_interface.h:

          - Mods to existing files required by the new visitor described
            above

          - Guards to ensure that AMI4CCM IDL gets generated only once
            per interface (specified by the ciao ami4ccm interface
            pragma

          - Code cleanup and cosmetic changes

Mon Mar  8 16:27:06 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_connector/connector_dds_exh.cpp:
          Updated because of move of type traits

Mon Mar  8 15:13:06 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be_include/be_global.h:
          Doxygen changes

Mon Mar  8 14:21:11 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be_include/be_global.h:

          Restored name of enum that was made anonymous in the
          declaration without changing any refereces to the enum.

Mon Mar  8 12:06:44 UTC 2010  Marcel Smit  <msmit@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be_include/be_global.h:
          Renamed 'RTIDDS' of DDS_IMPL enum to 'NDDS'.

Mon Mar  8 11:31:30 UTC 2010  Marcel Smit  <msmit@remedy.nl>

        * TAO_IDL/be/be_global.cpp:
          Using 'ndds' instead of 'rtidds' for IDL compiler flag
          'dds_impl'.

Mon Mar  8 11:22:09 UTC 2010  Marcel Smit  <msmit@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          Renamed directory of dds4ccm_traits.h

Sun Mar  7 19:06:06 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be_include/be_visitor_interface/ami4ccm_rh_ex_idl.h:
          Fixed argument not used warnings

Fri Mar  5 22:26:58 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be_include/be_visitor_interface/ami4ccm_rh_ex_idl.h:
        * TAO_IDL/be/be_visitor_interface/ami4ccm_rh_ex_idl.cpp:

          New files, containing a new visitor to generate the reply
          handler interfaces in executor IDL.

        * TAO_IDL/be/be_visitor_component/context_svh.cpp:
        * TAO_IDL/include/utl_scope.h:
        * TAO_IDL/be_include/be_visitor_interface/ami_interface_ch.h:
        * TAO_IDL/be_include/be_visitor_operation.h:

          Cosmetic changes.

        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_interface.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be_include/be_interface.h:
        * TAO_IDL/be_include/be_visitor_interface.h:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/include/idl_global.h:

          - Added new pragma string to be handled, one that
            designates an IDL interface for AMI4CCM code
            generation.

          - Added storage for the above pragma interface
            names in IDL_GlobalData.

          - Added cleanup of string names contained in
            several new ACE_Unbounded_Queue members of
            IDL_GlobalData.

          - Added iteration of pragma ami4ccm interface
            list and trigger of associated code generation
            in root visitor.

          - Added as yet unimplemented visitor to generate
            the reply handler operations.

Fri Mar  5 20:50:32 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_connectorconnector_dds_exh.cpp:

          Fixed bug in connector traits typedef generation, a component
          declared at global scope caused an extra '::' to be generated
          in the associated context class name.

Fri Mar  5 14:14:06 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/Servant_Base.h:
          Changed refcount to unsigned long and remove casts, we have
          an atomic op specialization for unsigned long for years now

Fri Mar  5 12:28:06 UTC 2010  Marcel Smit  <msmit@remedy.nl>

        * TAO_IDL/be/be_visitor_connector/connector_dds_exh.cpp:
          Namespace RTI renamed to NDDS namespace regarding
          traits.

Fri Mar  5 10:42:57 UTC 2010  Marcel Smit  <msmit@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          Changed path to DDS4CCM_Traits.h

Thu Mar  4 16:31:41 UTC 2010  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/IDL_Test/anonymous.idl:

          Added array test cases.

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be_include/be_global.h:

          Added command line option -Wb,dds_impl=xxx to select
          included files to generate, both the list of typesupport
          files gathered with the associated #pragma, or other
          miscellaneous files such as the state and connector
          template header files.

Thu Mar  4 12:01:54 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:
          Unicode fixes

        * orbsvcs/tests/Bug_3215_Regression/Hello.h:
          Removed msvc checks

Thu Mar  4 11:58:54 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/AnyTypeCode_Adapter_Impl.cpp:
        * tao/PI/PI.h:
        * tao/VarOut_T.h:
          Layout and doxygen changes

Thu Mar  4 08:03:51 UTC 2010  Marcel Smit  <msmit@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          Changed path /impl/ndds to /impl/dds or
          /impl/dds/ndds.

Thu Mar  4 07:50:54 UTC 2010  Johnny Willemsen  <jwillemsen@remedy.nl>

        * NEWS:
          Updated for next micro

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:
