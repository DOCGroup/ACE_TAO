Fri Apr 20 10:00:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * tests/Oneway_Buffering/test.idl:
        * tests/Oneway_Buffering/client.cpp:
        * tests/Oneway_Buffering/Oneway_Buffering_Admin.cpp:
        * tests/Oneway_Buffering/Oneway_Buffering_Admin.h:

          On slower (long time sliced multi-threaded) systems, the
          old test assumed that all communications between the
          three processes were "instantainious", which allowed the 
          client to miss the syncronization with previous attempts,
          which caused it to issue lost message debug. Then the
          lost message was immediatly found on the next itteration
          of the test which caused it to think the policy it was
          testing had failed. Basically this modification allows for
          slight delays (only if necessary) when we are expecting the
          various communications to have been sent.

Fri Apr 20 08:05:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Collocated_Arguments_Converter.cpp:
        * tao/PortableServer/Collocated_Arguments_Converter.h:
        * tao/PortableServer/DII_Arguments_Converter.cpp:
        * tao/PortableServer/DII_Arguments_Converter.h:
          Refactored the DII argument to a generic collocated argument
          converter. The issue that was solved for DII is also valid
          for AMI. Also made a method for converting the request and
          one for the reply, converting the reply is now not done yet but
          we do know that also fails.

        * tao/PortableServer/Upcall_Wrapper.cpp:
          Changed how the argument converter is retrieved. Instead of retrieving
          it using service configurator we put a pointer in the operation details
          which is set or not.

        * tao/DynamicInterface/DII_Arguments_Converter_Impl.cpp:
        * tao/DynamicInterface/DII_Arguments_Converter_Impl.h:
          Updated because the DII base class is renamed:

        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/DynamicInterface/DII_Invocation_Adapter.h:
          Added new adapter for oneway DII calls so that this adapter can
          set the DII Argument Converter for DII oneway calls.

        * tao/DynamicInterface/Request.cpp:
          Use false instead of 0, layout changes, use new DII Oneway adapter.

        * tao/DynamicInterface/Request.h:
        * tao/Protocol_Factory.cpp:
        * tao/IIOP_Profile.cpp:
        * tao/PI/PolicyFactoryC.cpp:
          Layout changes

        * tao/DynamicInterface/Request.inl:
          Use false instead of 0

        * tao/DynamicInterface/Server_Request.inl:
          Use static_cast instead of c-style cast

        * tao/IIOP_Connector.cpp:
          Fixed an inconsistent debug statement

        * tao/Invocation_Adapter.cpp:
        * tao/Invocation_Adapter.h:
        * tao/Invocation_Adapter.inl:
          Layout changes and no need to have a member whether we are
          a DII invocation or not

        * tao/Makefile.am:
          Updated for new files

        * tao/Messaging/AMI_Arguments_Converter_Impl.cpp:
        * tao/Messaging/AMI_Arguments_Converter_Impl.h:
          New AMI argument converter

        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
          Use the new AMI argument converter which fixes bugzilla 2805. Also
          use the

        * tao/Messaging/Messaging_Loader.cpp:
          Added include of the AMI Argument converter

        * tao/operation_details.cpp:
        * tao/operation_details.h:
        * tao/operation_details.inl:
          Instead of storing whether we have a DII call or not, we store
          a pointer to a collocated argument converter that is set or not set

        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/params.cpp:
        * tao/params.h:
        * tao/params.inl:
          Added a new -ORBAMICollication which is default yes. If this is no,
          then when a collocated AMI invocation is made, the call is converted
          to a remote call so that another thread can handle the servant. Also
          the problems with argument corruption are then gone. This is for
          bugzilla 2351.

        * tao/Profile.h:
          Documentation fix

        * tao/Profile_Transport_Resolver.cpp:
        * tao/Profile_Transport_Resolver.h:
        * tao/PortableServer/POAManager.h:
        * tao/PortableServer/POAManagerFactory.cpp:
          Layout changes

        * tao/Stub.inl:
        * tao/TAO_Server_Request.cpp:
        * tao/TAO_Server_Request.h:
        * tao/TAO_Server_Request.inl:
          Bool changes

        * tao/TkResource/TkResource_Factory.h:
        * tao/QtResource/QtResource_Factory.h:
          Removed not used mutex

        * tao/Valuetype/AbstractBase.cpp:
          Bool change

        * docs/Options.html:
          Document new ORBAMICollocation option, this is default yes which
          means that when a collocated AMI call is made the servant is invoked
          using the client thread. When this option is no, when a collocated AMI
          call is made, this is converted to a remote call so that a different
          thread can be used to invoke the servant.

Thu Apr 19 18:24:45 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * orbsvcs/tests/Bug_2248_Regression/Bug_2248_Regression.mpc:

          To resolve the strange "recursive" static initialization
          with SunCC compiler, we have to use '-z now' option in the
          linking stage for the client executable.More debtails see
          the relavent bugzilla entry.

Thu Apr 19 17:12:19 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/driver/drv_preproc.cpp (DRV_sweep_dirs):

          For each directory swept recursively, get its full path
          name and add it to the IDL compiler's internal list of
          include paths. This change makes it unnecessary for the
          user to add a -I option for each directory in the subtree
          whose root is passed to the -r option. Thanks to Abdullah
          Sowayan <abdullah dot sowayan at lmco dot com> for
          reporting the problem.

Thu Apr 19 16:46:01 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/Sequence_Unit_Tests/run_test.pl:

          Added the -boost and -noboost options to allow the user to determine
          whether or not to run tests that require the Boost unit test library.

Thu Apr 19 13:49:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI_Timeouts/run_test.pl:
          Use $PerlACE::wait_interval_for_process_creation

Thu Apr 19 12:43:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/CosEC/Simple/run_test.pl:
        * orbsvcs/examples/CosEC/TypedSimple/run_test.pl:
        * orbsvcs/examples/ImR/Advanced/run_test.pl:
        * orbsvcs/examples/LoadBalancing/run_test.pl:
        * orbsvcs/examples/Log/Basic/run_test.pl:
        * orbsvcs/examples/Log/Event/run_test.pl:
        * orbsvcs/examples/Log/Notify/run_test.pl:
        * orbsvcs/examples/Log/RTEvent/run_test.pl:
        * orbsvcs/examples/ORT/run_test.pl:
        * orbsvcs/examples/RtEC/IIOPGateway/consumerec_crash.pl:
        * orbsvcs/examples/RtEC/IIOPGateway/run_test.pl:
        * orbsvcs/examples/RtEC/Simple/run_test.pl:
        * orbsvcs/examples/Security/Send_File/run_test.pl:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/default_configuration.pl:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/default_configuration.pl:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/run_test.pl:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/run_test.pl:
        * orbsvcs/tests/AVStreams/Bidirectional_Flows/run_test.pl:
        * orbsvcs/tests/AVStreams/Component_Switching/run_test.pl:
        * orbsvcs/tests/AVStreams/Full_Profile/run_test.pl:
        * orbsvcs/tests/AVStreams/Latency/run_test.pl:
        * orbsvcs/tests/AVStreams/Modify_QoS/run_test.pl:
        * orbsvcs/tests/AVStreams/Multicast/run_test.pl:
        * orbsvcs/tests/AVStreams/Multicast_Full_Profile/run_test.pl:
        * orbsvcs/tests/AVStreams/Multiple_Flows/run_test.pl:
        * orbsvcs/tests/AVStreams/Pluggable/run_test.pl:
        * orbsvcs/tests/AVStreams/Pluggable_Flow_Protocol/run_test.pl:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/run_test.pl:
        * orbsvcs/tests/Bug_1334_Regression/run_test.pl:
        * orbsvcs/tests/Bug_1393_Regression/run_test.pl:
        * orbsvcs/tests/Bug_1395_Regression/run_test.pl:
        * orbsvcs/tests/Bug_1436_Regression/run_test.pl:
        * orbsvcs/tests/Bug_1437_Regression/run_test.pl:
        * orbsvcs/tests/Bug_1630_Regression/run_test.pl:
        * orbsvcs/tests/Bug_2247_Regression/run_test.pl:
        * orbsvcs/tests/Bug_2248_Regression/run_test.pl:
        * orbsvcs/tests/Bug_2316_Regression/run_test.pl:
        * orbsvcs/tests/Bug_2800_Regression/run_test.pl:
        * orbsvcs/tests/CosEvent/Timeout/run_test.pl:
        * orbsvcs/tests/EC_Custom_Marshal/run_test.pl:
        * orbsvcs/tests/EC_Multiple/run_test.pl:
        * orbsvcs/tests/EC_Throughput/run_test.pl:
        * orbsvcs/tests/EC_Throughput/run_test_overflow.pl:
        * orbsvcs/tests/Event/Mcast/RTEC_MCast_Federated/run_test.pl:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/run_test.pl:
        * orbsvcs/tests/FaultTolerance/IOGR/run_test.pl:
        * orbsvcs/tests/FT_App/run_test_basic.pl:
        * orbsvcs/tests/FT_App/run_test_demo.pl:
        * orbsvcs/tests/FT_App/run_test_detector.pl:
        * orbsvcs/tests/FT_App/run_test_fault_consumer.pl:
        * orbsvcs/tests/FT_App/run_test_notifier.pl:
        * orbsvcs/tests/FT_App/run_test_registry.pl:
        * orbsvcs/tests/FT_App/run_test_rmnotifier.pl:
        * orbsvcs/tests/FT_App/run_test_rmregistry.pl:
        * orbsvcs/tests/HTIOP/AMI/run_test.pl:
        * orbsvcs/tests/HTIOP/BiDirectional/run_test.pl:
        * orbsvcs/tests/HTIOP/Hello/run_test.pl:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/run_test.pl:
        * orbsvcs/tests/ImplRepo/locked/run_test.pl:
        * orbsvcs/tests/ImplRepo/NameService/run_test.pl:
        * orbsvcs/tests/ImplRepo/run_test.pl:
        * orbsvcs/tests/ImplRepo/scale/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Application_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/IDL3_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/IFR_Inheritance_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/IFR_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Latency_Test/run_test.pl:
        * orbsvcs/tests/InterfaceRepo/Persistence_Test/run_test.pl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/run_test.pl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/run_test.pl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/run_test.pl:
        * orbsvcs/tests/Log/Basic_Log_Test/run_test.pl:
        * orbsvcs/tests/Miop/McastHello/run_test.pl:
        * orbsvcs/tests/Notify/Blocking/run_test.pl:
        * orbsvcs/tests/Notify/Bug_1385_Regression/run_test.pl:
        * orbsvcs/tests/Notify/Bug_2561_Regression/run_test.pl:
        * orbsvcs/tests/Notify/Discarding/run_test.pl:
        * orbsvcs/tests/Notify/Ordering/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/Filter/run_test.pl:
        * orbsvcs/tests/Notify/Reconnecting/run_test.pl:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/run_test.pl:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/run_test.pl:
        * orbsvcs/tests/Notify/Structured_Filter/run_test.pl:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/run_test.pl:
        * orbsvcs/tests/Property/run_test.pl:
        * orbsvcs/tests/RTCosScheduling/run_test.pl:
        * orbsvcs/tests/Security/BiDirectional/run_test.pl:
        * orbsvcs/tests/Security/Big_Request/run_test.pl:
        * orbsvcs/tests/Security/Bug_1107_Regression/run_test.pl:
        * orbsvcs/tests/Security/Callback/run_test.pl:
        * orbsvcs/tests/Security/MT_IIOP_SSL/run_test.pl:
        * orbsvcs/tests/Security/MT_SSLIOP/run_test.pl:
        * orbsvcs/tests/Security/MT_SSLIOP/run_test_harsh.pl:
        * orbsvcs/tests/Security/MT_SSLIOP/run_test_heavy.pl:
        * orbsvcs/tests/Security/Secure_Invocation/run_test.pl:
        * orbsvcs/tests/Time/run_test.pl:
          Use $PerlACE::wait_interval_for_process_creation

Thu Apr 19 12:34:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * interop-tests/wchar/run_test.pl:
          Use $PerlACE::wait_interval_for_process_creation

Thu Apr 19 12:32:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Advanced/ch_12/run_test.pl:
        * examples/Advanced/ch_21/run_test.pl:
        * examples/Advanced/ch_3/run_test.pl:
        * examples/Advanced/ch_8_and_10/run_test.pl:
        * examples/Buffered_AMI/run_test.pl:
        * examples/Buffered_Oneways/run_test.pl:
        * examples/Callback_Quoter/run_test.pl:
        * examples/OBV/Typed_Events/run_test.pl:
        * examples/Persistent_Grid/run_test.pl:
        * examples/PluggableUDP/tests/Performance/run_test.pl:
        * examples/PluggableUDP/tests/SimplePerformance/run_test.pl:
        * examples/RTScheduling/Fixed_Priority_Scheduler/run_test.pl:
        * examples/RTScheduling/MIF_Scheduler/run_test.pl:
        * examples/Simple/bank/run_test.pl:
        * examples/Simple/echo/run_test.pl:
        * examples/Simple/grid/run_test.pl:
        * examples/Simple/time-date/run_test.pl:
        * examples/Simple/time/run_test.pl:
          Use $PerlACE::wait_interval_for_process_creation

Thu Apr 19 12:30:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/nslist/run_test.pl:
          Use $PerlACE::wait_interval_for_process_creation

Thu Apr 19 12:28:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Callback/run_test.pl:
        * performance-tests/Cubit/TAO/DII_Cubit/run_test.pl:
        * performance-tests/Cubit/TAO/IDL_Cubit/run_test.pl:
        * performance-tests/Cubit/TAO/IDL_Cubit/run_test_lite.pl:
        * performance-tests/Cubit/TAO/MT_Cubit/run_test.pl:
        * performance-tests/Latency/AMH_Single_Threaded/run_test.pl:
        * performance-tests/Latency/AMI/run_test.pl:
        * performance-tests/Latency/Deferred/run_test.pl:
        * performance-tests/Latency/DII/run_test.pl:
        * performance-tests/Latency/DSI/run_test.pl:
        * performance-tests/Latency/Single_Threaded/default_configuration.pl:
        * performance-tests/Latency/Single_Threaded/run_test.pl:
        * performance-tests/Latency/Thread_Per_Connection/run_test.pl:
        * performance-tests/Latency/Thread_Pool/run_test.pl:
        * performance-tests/POA/Implicit_Activation/run_test.pl:
        * performance-tests/Protocols/run_test.pl:
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/run-test.pl:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/run-test.pl:
        * performance-tests/RTCorba/Oneways/Reliable/run_test.pl:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/run_test.pl:
        * performance-tests/Sequence_Latency/AMI/run_test.pl:
        * performance-tests/Sequence_Latency/Deferred/run_test.pl:
        * performance-tests/Sequence_Latency/DII/run_test.pl:
        * performance-tests/Sequence_Latency/DSI/run_test.pl:
        * performance-tests/Sequence_Latency/Single_Threaded/default_configuration.pl:
        * performance-tests/Sequence_Latency/Single_Threaded/run_test.pl:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/run_test.pl:
        * performance-tests/Sequence_Latency/Thread_Pool/run_test.pl:
        * performance-tests/Throughput/run_test.pl:
          Use $PerlACE::wait_interval_for_process_creation

Thu Apr 19 05:39:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/LocateRequest_Invocation_Adapter.cpp:
          Fixed conversion warning with VxWorks

Thu Apr 19 05:24:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AlternateIIOP/run_test.pl:
          Improved for vxworks testing

        * tests/Bug_1476_Test/client.cpp:
          Layout changes

        * tests/CollocationLockup/CollocationLockup.mpc:
          Removed not needed after

        * tests/CollocationLockup/run_test.pl:
        * tests/MT_Server/run_test.pl:
          Added check whether spawn did work, if not, exit directly instead of
          waiting for an IOR file

        * tests/Native_Exceptions/run_test.pl:
        * tests/NestedUpcall/Simple/run_test.pl:
        * tests/Server_Leaks/run_test.pl:
          Use a perl variable for the base ior filename so that we only define
          it once

Wed Apr 18 19:55:11 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * TAO_IDL/be/be_visitor_structure/serializer_op_ch.cpp:

          Fixed a bug that does not generate the correct key
          comparison for DCPS KeyLessThan when there are multiple
          DCPS keys.

Wed Apr 18 19:15:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/run_test.pl:
        * tests/AMI_Buffering/run_buffer_size.pl:
        * tests/AMI_Buffering/run_message_count.pl:
        * tests/AMI_Buffering/run_test.pl:
        * tests/AMI_Buffering/run_timeout.pl:
        * tests/AMI_Buffering/run_timeout_reactive.pl:
        * tests/BiDirectional/run_test_ipv6.pl:
        * tests/Big_Request_Muxing/run_test.pl:
        * tests/Blocking_Sync_None/run_test.pl:
        * tests/Bug_1476_Test/run_test.pl:
        * tests/Bug_1535_Regression/run_test.pl:
        * tests/Bug_2183_Regression/run_test.pl:
        * tests/Bug_2429_Regression/run_test.pl:
        * tests/Bug_2678_Regression/run_test.pl:
        * tests/Client_Leaks/run_test.pl:
        * tests/DLL_ORB/run_test.pl:
        * tests/DSI_AMI_Gateway/run_exception_test.pl:
        * tests/DSI_Gateway/run_exception_test.pl:
        * tests/Exposed_Policies/run_test.pl:
        * tests/Faults/run_test.pl:
        * tests/GIOP_Fragments/Java_Big_Reply/run_test.pl:
        * tests/GIOP_Fragments/Java_Big_Request/run_test.pl:
        * tests/InterOp-Naming/run_test.pl:
        * tests/MT_BiDir/run_test.pl:
        * tests/MT_Timeout/run_test.pl:
        * tests/Muxed_GIOP_Versions/run_test.pl:
        * tests/NestedUpcall/Triangle_Test/run_test.pl:
        * tests/Oneway_Buffering/run_buffer_size.pl:
        * tests/Oneway_Buffering/run_message_count.pl:
        * tests/Oneway_Buffering/run_test.pl:
        * tests/Oneway_Buffering/run_timeout.pl:
        * tests/Oneway_Buffering/run_timeout_reactive.pl:
        * tests/Oneway_Timeouts/run_test.pl:
        * tests/Oneways_Invoking_Twoways/run_test.pl:
        * tests/Parallel_Connect_Strategy/run_test.pl:
        * tests/RTCORBA/Dynamic_Thread_Pool/run_test.pl:
        * tests/RTCORBA/Linear_Priority/run_test.pl:
        * tests/RTCORBA/MT_Client_Protocol_Priority/run_test.pl:
        * tests/RTCORBA/Private_Connection/run_test.pl:
        * tests/Typedef_String_Array/run_test.pl:
          Improvements for vxworks cross platform testing and for
          slower test systems like OpenVMS

Wed Apr 18 15:37:09 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/Activator_Options.cpp:

          Clarify the units accepted by the -e option.

Wed Apr 18 13:01:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2791_Regression/MessageFactory.h:
          Fixed fuzz error

Wed Apr 18 12:59:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Collocation_Opportunities/Collocation_Opportunities.cpp:
          No need to pass in empty orb name

        * tests/Collocation_Opportunities/run_test.pl:
          Improvements for vxworks cross platform testing

Wed Apr 18 12:50:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1330_Regression/run_test.pl:
          Improvements for vxworks cross platform testing

Wed Apr 18 12:38:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2084_Regression/run_test.pl:
        * tests/COIOP/run_test.pl:
        * tests/Collocation_Exception_Test/run_test.pl:
        * tests/Collocation_Oneway_Tests/run_test.pl:
        * tests/Collocation_Tests/run_test.pl:
        * tests/DII_Collocation_Tests/oneway/run_test.pl:
        * tests/DII_Collocation_Tests/twoway/run_test.pl:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/run_test.pl:
          Improvements for vxworks cross platform testing

Wed Apr 18 12:10:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/OctetSeq/run_test.pl:
          Increased timeout for vxworks

        * tests/POA/Non_Servant_Upcalls/Non_Servant_Upcalls.cpp:
          Layout changes and removed msvc specific warning disabling

        * tests/POA/Object_Reactivation/Object_Reactivation.cpp:
        * tests/POA/Persistent_ID/server.cpp:
        * tests/POA/POA_Destruction/POA_Destruction.cpp:
          Layout changes, no need to pass in empty orb name

        * tests/Policies/Manipulation.cpp:
          Layout changes

Wed Apr 18 11:39:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2791_Regression/run_test.pl:
          Updated to run under VxWorks

        * tests/Bug_2289_Regression/run_test.pl:
          Don't use LocalFile for the executables

Wed Apr 18 10:23:00 UTC 2007  Ian Roberts  <ir@prismtech.com>

        * tao/Valuetype/Valuetype_Adapter_Impl:
          Fix for Bug 2791, resolving a memory leak when
          unregistering a value factory.

        * tests/Bug_2791_Regression/*:
          New regression test to cover Bug 2791.

Wed Apr 18 10:20:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/FoxResource.mpc:
        * tao/FoxResource/*:
          New Fox Toolkit support library. Thanks to
          Dmitriy Nikitinskiy <nick at bel dot ru> for providing these
          files. This fixes bugzilla 1400.

Tue Apr 17 16:05:50 UTC 2007 Yan Dai  <dai_y@ociweb.com>

        * tao/DynamicAny/DynEnum_i.cpp:

          Use .in() on the var to avoid warnings from some
          platforms.

Tue Apr 17 14:29:52 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/ImplRepo/Bug_689_Regression/run_test.pl:

          Increased the timeouts for slower machines.

Tue Apr 17 13:53:03 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2702_Regression/run_test.pl:

          Remove a portion of the path to perl when running on VMS.

Tue Apr 17 13:41:49 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * performance-tests/Cubit/TAO/MT_Cubit/Globals.cpp:

          Use ACE_SCOPE_THREAD on BSD instead of ACE_SCOPE_PROCESS. It's
          not supported.

Tue Apr 17 13:20:14 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/ImplRepo/Bug_689_Regression/run_test.pl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/run_test.pl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/run_test.pl:

          Added missing kill's for when things go wrong.

Tue Apr 17 13:17:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2768_Regression/server.cpp:
          Use orb->run

        * tao/LocateRequest_Invocation.h:
          Use public inheritance

        * tao/LocateRequest_Invocation_Adapter.{h,cpp}:
          Fixed handling of a location forward. This fixes bugzilla
          2768. Thanks to Markus Henschel <m dot henschel at bally-wulff dot de>
          for reporting this problem

Tue Apr 17 13:05:52 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/ImplRepo/run_test.pl:

          Added a missing kill of the ImplRepo_Service for the airplane_ir
          test when the ImR_Activator fails to start.

Tue Apr 17 12:09:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2768_Regression/*:
          New regression which is failing at this moment, thanks to
          Markus Henschel <m dot henschel at bally-wulff dot de> for making this
          regression.

        * tests/Big_Oneways/run_test.pl:
          Corrected these scripts for VxWorks cross host testing

Tue Apr 17 12:01:56 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/Event_Service/Event_Service.cpp:

          Added an option, -a, to use the thread-per-consumer dispatching
          strategy instead of the default dispatching strategy.

        * orbsvcs/ImplRepo_Service/Activator_Options.h:
        * orbsvcs/ImplRepo_Service/Activator_Options.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.h:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:

          Added a new option, -e, to the ImR_Activator to set the
          environment buffer length for activated servants.  The default
          value, 16kb, is based on the ACE_Process_Options default value.

        * orbsvcs/tests/ImplRepo/run_test.pl:

          Added a usage of the -e option.

Tue Apr 17 08:16:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/ImplRepo/Bug_689_Regression/Bug_689_Regression.mpc:
          Added missing after

Tue Apr 17 08:14:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2678_Regression/run_test.pl:
        * tests/Bug_2683_Regression/run_test.pl:
        * tests/DIOP/run_test.pl:
        * tests/GIOP_Fragments/PMB_With_Fragments/run_test.pl:
        * tests/InterOp-Naming/run_test.pl:
          Fixed variable to be used for VxWorks target name

Tue Apr 17 07:46:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1476_Regression/run_test.pl:
        * tests/Bug_2084_Regression/run_test.pl:
        * tests/Bug_2494_Regression/run_test.pl:
        * tests/Collocation/run_test.pl:
        * tests/IORManipulation/run_test.pl:
        * tests/Native_Exceptions/run_test.pl:
        * tests/Optimized_Connection/run_test.pl:
        * tests/Queued_Message_Test/run_test.pl:
        * tests/Stack_Recursion/run_test.pl:
          Corrected these scripts for VxWorks cross host testing

Tue Apr 17 07:33:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1476_Regression/run_test.pl:
        * tests/Bug_2494_Regression/run_test.pl:
        * tests/Bug_2542_Regression/run_test.pl:
          Corrected these scripts for VxWorks cross host testing

Tue Apr 17 07:25:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2201_Regression/run_test.pl:
        * tests/Bug_2289_Regression/run_test.pl:
          Corrected these scripts for VxWorks cross host testing

Tue Apr 17 07:06:12 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
          Removed not needed check for CORBA/e

Mon Apr 16 18:41:16 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * docs/tutorials/Quoter/Simple/Persistent/index.html:
        * docs/tutorials/Quoter/Simple/ImprovedServer/index.html:
        * docs/tutorials/Quoter/Simple/Impl-Repo/index.html:
        * docs/tutorials/Quoter/Simple/Client/index.html:
        * docs/tutorials/Quoter/Simple/Server/index.html: Updated the
          documentation to use MPC files rather than makefiles.  Thanks to
          Bill Bruns <bruns dot bill at gmail dot com> for noticing this
          and Johnny Willemsen for suggesting the MPC update.

Mon Apr 16 18:03:55 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
        * tests/CORBA_e_Implicit_Activation/server.cpp:

          When attempting to implicitly activate an object, the
          PortableServer::POA::WrongPolicy should be thrown when using CORBA/e
          This fixes bug 2853.

Mon Apr 16 14:43:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2702_Regression/run_test.pl:
          Try to get this working for vxworks

        * tests/DIOP/run_test.pl:
          Fix for VxWorks testing

Mon Apr 16 13:05:59 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/CSD_Strategy_Tests/TP_Test_3/run_test.pl:

          If a client fails, start wrapping up the test instead of waiting a
          minute for each client to finish.  Otherwise, it could take quite
          a long time for the test to finish if all the clients are timing
          out.

Mon Apr 16 13:01:00 UTC 2007 Simon Massey  <sma@prismtech.com>

        * tao_idl/be/be_visitor_constant/constant_cs.cpp:

          Add CORBA complient storeage emmition even when class
          static const int are declared inline in the header class.
          This fixes a CORBA non-complience however it uncovered
          some platforms (noteably Microsoft) where the compiler
          was non- C++ complient in that it always provides storeage
          for such constants at the point they are seen at the
          declaration (in the header). The standard C++ states that
          if storage is required (and it doesn't have to be) it should
          be defined (i.e. allocated) in the definition (i.e. the
          .cpp file as well as declared in the header).

Mon Apr 16 12:04:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DIOP/run_test.pl:
          Updated for VxWorks cross host testing

        * tests/Persistent_ID/run_test.pl:
          Use PerlACE::LocalFile

        * tests/OctetSeq/run_test.pl:
          Run the performance test on the target system when using
          VxWorks cross host testing

        * tests/Abstract_Interface/client.cpp:
          No need to pass in an empty orb name

Mon Apr 16 11:47:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Collocation_Exception_Test/run_test.pl:
        * tests/CollocationLockup/run_test.pl:
        * tests/GIOP_Fragments/PMG_With_Fragments/run_test.pl:
        * tests/Permanent_Forward/run_test.pl:
          Corrected these scripts for VxWorks cross host testing

Mon Apr 16 11:27:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1693_Test/run_test.pl:
        * tests/Sequence_Unit_Tests/run_test.pl:
        * tests/Big_Twoways/run_test.pl:
          Corrected these scripts for VxWorks cross host testing

Mon Apr 16 11:22:32 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/ImplRepo/Bug_689_Regression/Bug_689_Regression.mpc:

          Set IDL_Flags to empty in client and server.  The idl was already
          processed in the *idl project and leaving them in caused problems
          with parallel builds.

Mon Apr 16 11:12:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/OBV/Simple/run_test.pl:
          Corrected this script for VxWorks cross host testing

Sun Apr 15 18:38:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        Reverted the change below, it does breaks support for
        recursive structs when TAO is the client. With this change the Recursive
        Any should succeed again.

        Thu Apr 12 10:52:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp:
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp:
          Added patches for bug 2678, thanks to Alexander Kornienko
          <alexfh at gmail dot com> for creating the patch and the
          starter test program for this bug. Thanks to
          Dale Boan <boan at sedsystems dot ca> for creating the initial
          report and Ben Mohlenhoff <Benjamin_A_Mohlenhoff at raytheon dot com>
          for letting us know that the patched also worked for their setup.

Sun Apr 15 06:18:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/client.cpp:
        * tests/AMI/AMI.mpc:
        * tests/AMI/run_test.pl:
        * tests/Bug_2805_Regression/*:
          Moved test for bug 2805 to its own regression, now the AMI
          test should succeed again, but 2805 is failing

Sun Apr 15 06:01:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Any/Recursive/Test.idl:
        * tests/Any/Recursive/client.cpp:
        * tests/Bug_2844_Regression/*:
          Moved regression for bug 2844 to its own file

Sat Apr 14 20:22:13 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/DynAny_Test/test_dynenum.cpp:

          Removed old exception macros.

Sat Apr 14 19:00:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Any/Recursive/Test.idl:
        * tests/Any/Recursive/client.cpp:
          Removed regression for bug 2804, this has now its own test program

Sat Apr 14 18:57:56 UTC 2007 Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2804_Regression/*:
          Moved the test for bug 2804 from Any/Recursive to its own seperate test, makes
          it easier to reproduce and I am moving all known issues outside of the
          Any/Recursive test so that we can make sure that things that do work keep
          working

Fri Apr 13 19:47:56 UTC 2007 Yan Dai  <dai_y@ociweb.com>

          Fixed several bugs in DynamicAny (See bugzilla #2896).

        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynAnyFactory.cpp:

          Added DynamicAny support for longdouble type.

        * tao/DynamicAny/DynUnion_i.cpp:

          Fixed bug in destroy() that does not check if the member is nil
          to destroy.  This causes crash when union has no active
          member.

        * tao/DynamicAny/DynEnum_i.cpp:

          Fixed bug in
          get_as_string/set_as_string/get_as_ulong/set_as_ulong that do
          not strip the alias to find the member information. This causes
          the problem when calling these functions for typedefed enums
          encapsulated in structs.

        * tao/DynamicAny/DynCommon.cpp:

          Moved out ACE_static_cast from "if" statement in next() method
          to avoid strange problem "coredump from signal 10" on
          sunos58_gcc3.2.1_d0o1 build.

        * tests/DynAny_Test/da_tests.idl:
        * tests/DynAny_Test/data.cpp:
        * tests/DynAny_Test/data.h:
        * tests/DynAny_Test/DynAny_Test.mpc:
        * tests/DynAny_Test/test_dynany.cpp:
        * tests/DynAny_Test/test_dynenum.cpp:
        * tests/DynAny_Test/test_dynstruct.cpp:
        * tests/DynAny_Test/test_dynunion.cpp:

          Added test cases for above bug fixes.

Fri Apr 13 16:38:36 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/ORB_Core.cpp:

          Reverted my change immediately because I am not quite sure about
          the name convention/usage here, need more research:
                                        Fri Apr 13 16:29:47 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

Fri Apr 13 16:29:47 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/ORB_Core.cpp:

          Corrected the valuetype_adapter_factory_name_.

Fri Apr 13 12:35:40 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:

          When starting a server, only reset the ImR_Activator information
          if we are certain that the activator is completely non-responsive.
          There is no test associated with this fix since it would require
          that the activator be temporarily unresponsive (i.e., cause a
          CORBA::TRANSIENT to be thrown).  In any event, this change can not
          make things less reliable since we're in an exceptional situation
          from the start.

          Thanks to Richard Ridgway <Richard_Ridgway at ml dot com> for
          reporting this (bug 2833) and providing the fix.

Fri Apr 13 04:56:08 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * examples/Load_Balancing_persistent/Load_Balancer_i.cpp

          Switch to using naked new instead of macro for placement new
          operations.

Thu Apr 12 19:11:31 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/EventType.h:
        * orbsvcs/orbsvcs/Notify/EventType.inl:
        * orbsvcs/orbsvcs/Notify/EventType.cpp:

          Modified the equivalence operator to match wildcards on the
          domain_name and event_type (instead of a straight string compare).

        * orbsvcs/orbsvcs/Notify/Event_Map_T.inl:

          Since an event type can be equivalent to another and not hash to
          the same thing, we must iterate over the map if a find() on the
          ACE_Hash_Map_Manager doesn't return an entry.

          These changes fix bug 1385.

Thu Apr 12 17:27:44 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Notify/Bug_1385_Regression/Notify_Structured_Push_Consumer.cpp:

          Changed to use the subscription_change() method from the base
          class instead of calling it directly on the proxy.

        * orbsvcs/tests/Notify/Bug_1385_Regression/Structured_Supplier.cpp:

          Fixed the domain_name and type_name on the event header.

Thu Apr 12 15:09:49 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/DII_Arguments.h:

          Changed the lazy_evaluation_ data member back to non-const.
          Because the CORBA::NVList::_tao_incoming_cdr(TAO_InputCDR&, int, bool&)
          will need to modify its value.
          This reverted: Thu Apr 12 10:52:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>
          * tao/DynamicInterface/DII_Arguments.h:
            Const improvement

Thu Apr 12 13:53:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/Profile.cpp:
          Layout changes

Thu Apr 12 13:44:12 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * configure.ac:
        * orbsvcs/tests/Notify/Bug_1385_Regression/Bug_1385_Regression.mpc:
        * orbsvcs/tests/Notify/Bug_1385_Regression/Makefile.am:
        * orbsvcs/tests/Notify/Bug_1385_Regression/Notify_Structured_Push_Consumer.h:
        * orbsvcs/tests/Notify/Bug_1385_Regression/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Bug_1385_Regression/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Bug_1385_Regression/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Bug_1385_Regression/go.idl:
        * orbsvcs/tests/Notify/Bug_1385_Regression/notify.conf:
        * orbsvcs/tests/Notify/Bug_1385_Regression/notify.conf.xml:
        * orbsvcs/tests/Notify/Bug_1385_Regression/run_test.pl:
        * orbsvcs/tests/Notify/Makefile.am:

          Added a new test to demonstrate the subscription_change() does not
          work properly (bug 1385).

Thu Apr 12 12:00:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/POA/DSI/Database_i.{h,cpp}:
          Added nothrow new/delete operators

Thu Apr 12 10:52:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp:
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp:
          Added patches for bug 2678, thanks to Alexander Kornienko
          <alexfh at gmail dot com> for creating the patch and the
          starter test program for this bug. Thanks to
          Dale Boan <boan at sedsystems dot ca> for creating the initial
          report and Ben Mohlenhoff <Benjamin_A_Mohlenhoff at raytheon dot com>
          for letting us know that the patched also worked for their setup.

        * tao/DynamicInterface/DII_Arguments.h:
          Const improvement

        * tao/DynamicInterface/ExceptionList.inl:
          Removed not needed cast and use C++ casts

        * tao/IOR_Parser.h:
          Documentation improvement

        * tao/Pluggable_Messaging_Utils.inl:
          Use false instead of 0

        * tao/Stub.h:
          Layout changes

        * tao/GIOP_Message_Base.cpp:
        * tao/Profile.h:
          Layout changes

Thu Apr 12 06:25:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2678_Regression/client.cpp:
          Fixed typo in include

Wed Apr 11 18:31:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2678_Regression/*:
          New regression test, it needs a C# client as reproducer, that will
          not work, so I am reusing parts of the PMB GIOP test to emulate
          a client but this is not working 100% perfect. When it works perfect
          I will enable the regression test in the test suite.

Wed Apr 11 13:32:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/ami_test_i.cpp:
          Fixed small bug in this test code that could lead to an
          incorrect return value when the parameters are checked.

Wed Apr 11 12:25:17 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Notify/Makefile.am:

          Changed the build order to get Bug_2561_Regression to build after
          TAO_NotifyTests.

Wed Apr 11 10:14:51 UTC 2007  Vadym Ridosh <vridosh@prismtech.com>

        * tao/IIOP_Acceptor.cpp:

          Previous fix for bug 2871 had a small flaw for IPv4 only server
          setups. This patch fixes this flaw.

Tue Apr 10 09:57:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DII_Collocation_Tests/twoway/Client_Task.cpp:
        * tests/DII_Collocation_Tests/twoway/Hello.cpp:
        * tests/DII_Collocation_Tests/twoway/Hello.h:
        * tests/DII_Collocation_Tests/twoway/Test.idl:
          Extended this test to test the out arguments and response_received
          method of the request. This test now fails, see bugzilla 2890

Mon Apr  9 21:09:51 UTC 2007  Yan Dai  <dai_y@ociweb.com>

        * docs/transport_current/index.html:

          Corrected the example of service configuration file for
          dynamic loading TransportCurrent library.

Mon Apr  9 13:02:26 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/ImplRepo/Bug_689_Regression/run_test.pl:

          Modified the imr registration command line to take into account
          the different executable locations for non-debug Windows builds.

Mon Apr  9 11:50:35 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Bug_2248_Regression/Server_Request_Interceptor.cpp:

          Put the ORB id into a CORBA::String_var to avoid memory leaks.

        * orbsvcs/tests/Bug_2248_Regression/run_test.pl:

          Removed an extra ./server in the command arguments.

        * orbsvcs/tests/EC_Throughput/ECT_Supplier.cpp:

          When disconnecting the consumer, ignore exceptions as the consumer
          may already be gone by that time.

        * orbsvcs/tests/FT_App/run_test_demo.pl:

          This script defaults to "Release" executables on Windows, but
          defaults to "Debug" on all other platforms.

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Server_Request_Interceptor.cpp:

          Changed the error message to start with ERROR: and to provide
          useful information.

        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Basic.h:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Basic.cpp:

          Switched the location_ data member from const char* to
          CORBA::String_var to avoid memory leaks.

        * orbsvcs/tests/Redundant_Naming/run_test.pl:

          Sleep one second before starting the client to allow the redundant
          naming service to get into a usable state.

        * orbsvcs/tests/Simple_Naming/client.h:
        * orbsvcs/tests/Simple_Naming/client.cpp:

          Change name_service_ior_ to a CORBA::String_var to avoid a memory
          leak.

        * tests/OBV/Collocated/Forward/Client_Task.cpp:

          Even though bug 1390 is still reported as broken, the client now
          shuts down the server so the run test script doesn't have to
          time out.

Mon Apr  9 11:29:26 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * configure.ac:

          Added the missing entry for tests/DIOP.

Sun Apr  8 15:46:17 UTC 2007  Abdullah Sowayan  <abdullah.sowayan@lmco.com>

        * tao/Utils/ORB_Manager.cpp:

          duplicate object references passed in the constructor. This fixes
          bugzilla 2887.

          Layout enhancements.

Fri Apr  6 17:58:37 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/FaultTolerance/IOGR/Manager.h:
        * orbsvcs/tests/FaultTolerance/IOGR/Manager.cpp:

          Moved file level statics into the Manager class.  They were being
          destroyed in the wrong order with respect to the object manager
          and the ORB.

Fri Apr  6 14:34:21 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * configure.ac:

          Added the makefiles for the new directories (Bug_689_Regression,
          Bug_1107_Regression, Bug_2561_Regression, Bug_2677_Regression and
          Bug_2735_Regression).

Fri Apr  6 13:46:19 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Notify/Bug_2561_Regression/Notify_Push_Consumer.cpp:

          Initialize count_ to 0 in the constructor.

Fri Apr  6 14:36:25 UTC 2007  Vadym Ridosh <vridosh@prismtech.com>

        * tao/ORB_Core.cpp:
        * tao/IIOP_Acceptor.cpp:
        * tao/params.h:
        * tao/params.cpp:
        * docs/Options.html:

          Fix for bug 2871. It introduces a new option -ORBUseIPV6LinkLocal
          which is false by default, i.e. no IPv6 link local addresses will
          be used by server ORB.

Fri Apr  6 12:09:37 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/ImplRepo/Bug_689_Regression/Bug_689_Regression.mpc:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/Makefile.am:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/server.cpp:

          Added the ImR_Client library so that this test will work on static
          builds.

Thu Apr  5 15:45:30 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Notify/Bug_2561_Regression/Bug_2561_Regression.mpc:
        * orbsvcs/tests/Notify/Bug_2561_Regression/Consumer.cpp:
        * orbsvcs/tests/Notify/Bug_2561_Regression/Makefile.am:
        * orbsvcs/tests/Notify/Bug_2561_Regression/Notify_Push_Consumer.h:
        * orbsvcs/tests/Notify/Bug_2561_Regression/Notify_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Bug_2561_Regression/Supplier.cpp:
        * orbsvcs/tests/Notify/Bug_2561_Regression/go.idl:
        * orbsvcs/tests/Notify/Bug_2561_Regression/notify.conf:
        * orbsvcs/tests/Notify/Bug_2561_Regression/notify.conf.xml:
        * orbsvcs/tests/Notify/Bug_2561_Regression/run_test.pl:
        * orbsvcs/tests/Notify/Makefile.am:

          Added a regression test for bug 2561 where a pacing interval of
          100 microseconds is used and two batch consumers are attached to
          the Notify_Service.

        * orbsvcs/tests/Notify/lib/Notify_Test_Client.cpp:

          Avoid destroying the poa and the orb if they're nil.

Thu Apr  5 14:25:10 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2174_Regression/run_test.pl:
        * tests/Bug_2183_Regression/run_test.pl:
        * tests/Bug_2429_Regression/run_test.pl:
        * tests/Bug_2494_Regression/run_test.pl:
        * tests/Connection_Purging/run_test.pl:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/run_test.pl:
        * tests/Server_Leaks/run_test.pl:
        * tests/Typedef_String_Array/run_test.pl:

          Increased timeouts to allow these to run on slower machines.

Thu Apr  5 13:45:52 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Notify/Structured_Multi_Filter/Notify_Push_Consumer.cpp:

          Switch to ETCL and use a $prefix on the component name to test bug
          1428.

        * orbsvcs/tests/Notify/Structured_Multi_Filter/notify.conf.xml:

          Converted notify.conf to XML for use with the XML service
          configurator.

Thu Apr  5 13:37:51 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Notify/Structured_Filter/Structured_Consumer.cpp:

          Change one of the constraint expressions to use a $ prefix on the
          component name to ensure that this works.

Thu Apr  5 11:51:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * MPC/config/link_codecfactory.mpb:
        * MPC/config/nolink_codecfactory.mpb:

          Feature projects to link or not link the TAO_CodecFactory.

        * MPC/config/taoexe.mpb:
        * MPC/config/taolib.mpb:

          Inherit from the link_codecfactory base project to allow the user
          to determine if the TAO_CodecFactory will be linked into an
          executable or library that uses TAO.  On QNX, the dynamic
          unloading of the TAO_CodecFactory library at exit causes a core
          dump.  If the library is linked in, the problem is eliminated.

        * tao/AnyTypeCode.mpc:
        * tao/CodecFactory.mpc:
        * tao/Codeset.mpc:

          Inherit from the nolink_codecfactory base project to ensure that
          the TAO_CodecFactory library is not linked into these libraries.
          This would cause a circular link dependency.

Thu Apr  5 11:24:01 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_933_Regression/MessengerClient.cpp:

          Changed to use .in() to avoid warnings from gcc.

Thu Apr  5 11:20:52 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * examples/Load_Balancing_persistent/Identity_Server.cpp:

          Changed to use .in() to avoid warnings from gcc.

Wed Apr  4 19:13:53 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2735_Regression/server.cpp:

          Avoid string conversion warnings.

Wed Apr  4 19:04:51 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/ImplRepo/Bug_689_Regression/Bug_689_Regression.mpc:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/Makefile.am:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/bug_689_regression.idl:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/bug_689_regression_i.h:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/bug_689_regression_i.cpp:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/client.cpp:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/run_test.pl:
        * orbsvcs/tests/ImplRepo/Bug_689_Regression/server.cpp:
        * orbsvcs/tests/ImplRepo/Makefile.am:

          Added a regression test for bug 689.

Wed Apr  4 16:10:46 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Security/Bug_1107_Regression/Bug_1107_Regression.mpc:
        * orbsvcs/tests/Security/Bug_1107_Regression/Foo.idl:
        * orbsvcs/tests/Security/Bug_1107_Regression/Foo_i.h:
        * orbsvcs/tests/Security/Bug_1107_Regression/Foo_i.cpp:
        * orbsvcs/tests/Security/Bug_1107_Regression/Makefile.am:
        * orbsvcs/tests/Security/Bug_1107_Regression/README:
        * orbsvcs/tests/Security/Bug_1107_Regression/cacert.pem:
        * orbsvcs/tests/Security/Bug_1107_Regression/client.conf:
        * orbsvcs/tests/Security/Bug_1107_Regression/client.conf.xml:
        * orbsvcs/tests/Security/Bug_1107_Regression/client.cpp:
        * orbsvcs/tests/Security/Bug_1107_Regression/client_cert.pem:
        * orbsvcs/tests/Security/Bug_1107_Regression/client_key.pem:
        * orbsvcs/tests/Security/Bug_1107_Regression/run_test.pl:
        * orbsvcs/tests/Security/Bug_1107_Regression/server.conf:
        * orbsvcs/tests/Security/Bug_1107_Regression/server.conf.xml:
        * orbsvcs/tests/Security/Bug_1107_Regression/server.cpp:
        * orbsvcs/tests/Security/Bug_1107_Regression/server_cert.pem:
        * orbsvcs/tests/Security/Bug_1107_Regression/server_key.pem:
        * orbsvcs/tests/Security/Makefile.am:

          Added a regression test based on the Secure_Invocation test for
          bug 1107.

Wed Apr  4 14:42:01 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/IFR_Client_Adapter.h:
        * tao/IFR_Client_Adapter.cpp:

          Fixed the dynamic_cast failure in the same way as Ossama and Chris did in
          Wed May 18 16:23:01 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>
          Mon Nov 21 13:21:03 2005  Chris Cleeland  <cleeland_c@ociweb.com>
          In short, I have added an out-of-line virtual destructor to this class.
          Thanks Ossama for his help on this issue.

Wed Apr  4 13:04:25 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/Notify_Service/Notify_Service.cpp:

          Added the missing parameter for %p in an ACE_ERROR_RETURN().

Wed Apr  4 11:40:33 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * MPC/config/utils.mpb:

          Renamed the after setting from Utils to TAO_Utils to reflect the
          change from Tue Apr  3 18:53:54 UTC 2007.

Wed Apr  4 11:36:10 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2677_Regression/Makefile.am:
        * tests/Bug_2735_Regression/Makefile.am:

          Added missing automake makefiles.

        * tests/Bug_2735_Regression/server.cpp:

          Fixed a compilation error on HP-UX.  They have some pretty simple
          macros defined (e.g., SERVER).

Tue Apr  3 19:08:44 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.inl:

          Added static_cast to avoid conversion warning on MSVC8.

Tue Apr  3 18:53:54 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/Utils.mpc:

          Changed project name from Utils to TAO_Utils to avoid namespace
          pollution, since MPC doesn't accept duplicate project names
          anywhere in the tree during generation.

Tue Apr  3 18:29:29 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2677_Regression/Bug_2677_Regression.mpc:

          Removed the redundant inheritance of taolib.

        * tests/Bug_2677_Regression/DllORB.h:
        * tests/Bug_2677_Regression/DllORB.cpp:

          Removed the requirement of threads from this test.  It was not
          necessary to exercise the fix for 2677.

Tue Apr  3 16:10:10 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:

          Fixed a couple of filtering issues:

          1) If exist was used in the form of "exist $.filterable_data(ident)",
             memory would be leaked in the form of a CORBA::string_dup().
          2) If exist was used in the form of "exist ident", it would never
             match anything.  It now defaults to the looking at the
             filterable data identifiers.

          This fixes bug 1263.

        * orbsvcs/tests/Notify/Structured_Filter/Structured_Consumer.cpp:

          Modified this test to use both forms of exist in the filter.

        * orbsvcs/tests/Notify/Structured_Filter/notify.conf.xml:

          Converted notify.conf to XML for use with the XML service
          configurator.

Tue Apr  3 13:05:52 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2734_Regression/README:
        * tests/Bug_2734_Regression/run_test.pl:

          Added a regression test for Bug 2734 based on the Timeout test.

Tue Apr  3 12:37:37 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Makefile.am:

          Added Bug_2677_Regression and Bug_2735_Regression to the list of
          sub-directories.

Tue Apr  3 12:09:43 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/GIOP_Message_Version.h:
        * tao/GIOP_Message_Version.inl:

          Changed the equality and inequality operators to const (as they
          should have originally been).

Tue Apr  3 11:56:17 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2677_Regression/DllORB.cpp:

          Removed the call to POAManager::deativate(), it wasn't necessary
          and caused problems for minimum CORBA and CORBA e compact.

Mon Apr  2 18:14:07 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/ImplRepo/airplane_client_i.cpp:
        * orbsvcs/tests/ImplRepo/nestea_client_i.cpp:

          Delete the server_key_ before assigning to it, since memory is
          allocated in the constructor.

        * tao/ImR_Client/ImR_Client.cpp:

          Put the result of poa->the_name () in a CORBA::String_var to
          ensure memory is not leaked.  This happened inside an
          if (TAO_debug_level > 0) statement.

Mon Apr  2 17:52:41 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/INS_Locator.h:

          Use a TAO_Local_RefCounted_Object instead of CORBA::LocalObject to
          ensure that the INS_Locator is released in the end.

        * orbsvcs/ImplRepo_Service/Locator_Options.cpp:

          Use ImplRepo_Service in the usage instead of ImR_Locator.

Mon Apr  2 15:24:46 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2735_Regression/run_test.pl:
        * tests/Bug_2735_Regression/server.cpp:

          Modified this test to work with the XML service configurator.

Mon Apr  2 15:00:08 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2677_Regression/Bug_2677_Regression.mpc:
        * tests/Bug_2677_Regression/DllORB.h:
        * tests/Bug_2677_Regression/DllORB.cpp:
        * tests/Bug_2677_Regression/README:
        * tests/Bug_2677_Regression/bug_2677_regression_export.h:
        * tests/Bug_2677_Regression/run_test.pl:
        * tests/Bug_2677_Regression/server.cpp:

          Added a regression test for Bug 2677 provided by Lothar Wrzinger
          <lothar at tradescape dot biz>.

Mon Apr 2 14:06:12 UTC 2007  Martin Corino  <mcorino@remedy.nl>

        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/util/utl_global.cpp:

          Platform specific changes to make IDL compiler run on both
          OpenVMS Alpha and OpenVMS IA64.

Sun Apr  1 04:03:06 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2735_Regression/run_test.pl:

          Fixed the command line to work on Windows.

Fri Mar 30 14:49:24 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2735_Regression/Bug_2735_Regression.mpc:
        * tests/Bug_2735_Regression/run_test.pl:
        * tests/Bug_2735_Regression/server.cpp:

          Added a regression test for Bug 2735 which involves the
          -ORBSvcConfDirective option.

Fri Mar 30 12:25:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.cpp:
          Layout changes

Fri Mar 30 12:22:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/compiler.html:
          Removed deprecated flags, fixed typos and updated a few parts

Thu Mar 29 16:50:15 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/fe/fe_init.cpp:

          Fixed calls to ACE_String_Base methods set (const char*, bool)
          and reset (bool) to pass a boolean instead of an integer.

Wed Mar 28 16:02:37 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * docs/Options.html: Updated the documentation to explain what the
          -ORBSkipServiceConfigOpen option does.  Thanks to Vance Maverick
          <vmaverick at pgp dot com> for motivating.

Thu Mar 29 13:40:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          Use the safe include in the anyop header file, not in the source
          file, makes it possible to use a safe include in the diffserv library.

        * tao/DiffServPolicy.mpc:
        * tao/DiffServPolicy/Client_Network_Priority_Policy.cpp:
        * tao/DiffServPolicy/Client_Network_Priority_Policy.h:
        * tao/DiffServPolicy/DiffServ_Network_Priority_Hook.cpp:
        * tao/DiffServPolicy/DiffServPolicy_ORBInitializer.cpp:
        * tao/DiffServPolicy/Server_Network_Priority_Policy.cpp:
        * tao/DiffServPolicy/Server_Network_Priority_Policy.h:
          Use the safe include feature to make sure people have to include
          the correct file to use diffserv

Thu Mar 29 12:14:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Profile.cpp:
          Fixed bug 2869, handling an invalid endpoint string. Thanks to
          Pierre Bisaillon <pierrebizz at hotmail dot com> for reporting this bug

        * tests/Bug_2869_Regression/*:
          New regression for bug 2869

Thu Mar 29 11:13:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/MCast_Parser.{h,cpp,inl}:
        * tao/ORB.cpp:
        * tao/TAO_Internal.cpp:
        * tao/default_resource.cpp:
          Only use the mcast parser when ACE_HAS_IP_MULTICAST is enabled,
          mcast is not available when this define is not set, so no need
          to build this parser when it can't be used. This fixes bugzilla
          bug 2851.

        * tao/ORB_Core.{h,cpp}:
        * tao/Resource_Factory.cpp:
        * tao/DynamicInterface/Request.cpp:
          Layout changes

        * tao/ORB_Core.inl:
          Use false instead of 0 for a bool

Wed Mar 28 16:44:35 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/HTTP_Parser.cpp:

          The parse_string and match_prefix virtual methods take a const
          char*.  They are converted to ACE_TCHAR* where necessary.

        * tao/Load_Protocol_Factory_T.h:

          Take a const char* in load_protocol_factory() and convert it in
          the one place where ACE_TCHAR* is expected.

        * tao/ORB.cpp:

          Cast ACE::nibble2hex() result to char.  On narrow char builds,
          it's already a char, but on wide char builds it's an ACE_TCHAR.

        * tao/TAO_Internal.cpp:

           Change open_private_services_i() to take char** instead of
           ACE_TCHAR** and use ACE_Argv_Type_Converter to pass the right
           types to ACE_Service_Gestalt::open().

        * tao/Valuetype/AbstractBase.cpp:

          Check the abstract base pointer from the factory before using it.
          If it's zero, return false instead of dereferencing it and dumping
          core.

Wed Mar 28 09:21:40 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Cubit/TAO/MT_Cubit/client.cpp:
          Fixed compile problem with VxWorks

Tue Mar 27 21:15:24 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_valuetype.cpp:

          Fixed a bug in the logic when determining if the valuetype
          supports an abstract interface or not.

Tue Mar 27 19:36:40 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Abstract_Interface/run_test.pl:
          Made this script working for VxWorks

Tue Mar 27 18:00:26 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * orbsvcs/examples/RtEC/Kokyu/Service.cpp

          Unused argument warning.

Tue Mar 27 17:50:38 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * examples/Load_Balancing_persistent/Load_Balancer_i.cpp

          Fixes for strict aliasing warnings.

        * examples/Load_Balancing_persistent/Identity_Server.cpp

          Added logic to bail if it gets invalid group references
          from the load balancing daemon.

Tue Mar 27 13:56:40 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_933_Regression/*:
          New regression for bug 933. TAO didn't had a bug, the regression
          posted by the reporter had several. Fixed the regression and
          adding it now to svn. Thanks to Ruwanganie Gunatilleke
          <ru at ociweb dot com> for making the regression

Tues Mar 27 09:35:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * tests/Big_Request_Muxing/client.cpp:

          Allow time for the server to process messages at the other end
          of the tcpip link before the client destroies the sockets and
          rips down any pending messages it may have still buffered up.
          Note this is ONLY for the benifit of the SYNC_NONE and
          SYNC_WITH_TRANSPORT messages to improve the stats a bit.

Tues Mar 27 08:15:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * tests/Big_Request_Muxing/run_test.pl:

          Allow the new timeouts to actually take effect before
          timing out the test!

Tue Mar 27 07:32:40 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/QtResource/QtResource_Factory.h:
          Use forward declaration of QApplication. Part of the patch of bugzilla
          2870. Thanks to Roland Sun <rolandsun at gmail dot com> for
          providing the patch

Mon Mar 26 20:44:40 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * performance-tests/Cubit/TAO/MT_Cubit/client.cpp
        * performance-tests/Cubit/TAO/MT_Cubit/client.h
        * examples/Simple/time/Time_Client_i.cpp
        * examples/Persistent_Grid/Grid_i.cpp

          Fixes for strict aliasing warnings.

Mon Mar 26 15:24:47 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * tao/Compression/zlib/ZlibCompressor.cpp

          Addressed strict aliasing warning.

Mon Mar 26 14:52:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/PluggableUDP/tests/Basic/*:
        * tests/DIOP/*:
          Moved this test from examples to tests, this is a DIOP regression
          test that can be part of the orb test suite.

        * examples/PluggableUDP/tests/Makefile.am:
          Removed Basic directory

        * tests/Makefile.am:
          Added DIOP directory

Mon Mar 26 14:47:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/PluggableUDP/tests/Basic/client.cpp:
        * examples/PluggableUDP/tests/Basic/server.cpp:
        * examples/PluggableUDP/tests/Basic/UDP_Client_i.cpp:
        * examples/PluggableUDP/tests/Basic/UDP_i.cpp:
        * examples/PluggableUDP/tests/Basic/UDP_i.h:
          Small cleanup and simplifications

Mon Mar 26 10:01:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * tests/Big_Request_Muxing/client.cpp:
        * tests/Big_Request_Muxing/server.cpp:

          Give very generous timeouts for very slow systems (lynxos).

Sat Mar 24 23:40:17 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/tests/Security/EndpointPolicy/EndpointPolicy.mpc:
        * orbsvcs/tests/Security/InsecureReferences/InsecureReferences.mpc:

          The test projects did not have the correct base projects,
          causing core dumps on exit on many platforms.

Fri Mar 23 16:27:39 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * tests/TransportCurrent/IIOP/IIOP.mpc
        * tests/TransportCurrent/Framework/Framework.mpc

          OS X Linker warnings.

Fri Mar 23 13:02:40 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.cpp:
        * orbsvcs/tests/Security/EndpointPolicy:
        * orbsvcs/tests/Security/EndpointPolicy/EndpointPolicy.mpc:
        * orbsvcs/tests/Security/EndpointPolicy/README:
        * orbsvcs/tests/Security/EndpointPolicy/run_test.pl:
        * orbsvcs/tests/Security/EndpointPolicy/svc.conf:
        * orbsvcs/tests/Security/EndpointPolicy/test.cpp:
        * tao/EndpointPolicy/Endpoint_Acceptor_Filter.cpp:
        * tao/IIOP_Profile.h:
        * tao/IIOP_Profile.cpp:
        * tao/Object_Reference_Sequence_Element_T.h:
        * tao/Profile.h:
        * tao/Profile.cpp:

          Fix for bugzilla 2868, allowing SSLIOP, or other IIOP-derived
          protocols to be used with the EndpointPolicy. Includes a new
          test case.

Fri Mar 23 02:44:53 UTC 2007  Phil Mesnier  <mesnier_p@ociweb.com>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Profile.cpp:

          Fix for off-by-one counting error processing multi-endpoint
          insecure iiop endpoints.

        * orbsvcs/tests/Security/InsecureReferences:
        * orbsvcs/tests/Security/InsecureReferences/InsecureReferences.mpc:
        * orbsvcs/tests/Security/InsecureReferences/README:
        * orbsvcs/tests/Security/InsecureReferences/client.conf:
        * orbsvcs/tests/Security/InsecureReferences/run_test.pl:
        * orbsvcs/tests/Security/InsecureReferences/test.cpp:

          A new test validating the fix.

Fri Mar 23 12:08:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/tutorials/Quoter/AMI/Handler_i.cpp
        * docs/tutorials/Quoter/AMI/Handler_i.h
        * docs/tutorials/Quoter/AMI/index.html
        * docs/tutorials/Quoter/AMI/Quoter.idl
        * docs/tutorials/Quoter/AMI/Stock_Factory_i.cpp
        * docs/tutorials/Quoter/AMI/Stock_Factory_i.h
        * docs/tutorials/Quoter/AMI/Stock_i.cpp
        * docs/tutorials/Quoter/AMI/Stock_i.h
        * docs/tutorials/Quoter/Event_Service/index.html
        * docs/tutorials/Quoter/Event_Service/Stock_Factory_i.cpp
        * docs/tutorials/Quoter/Event_Service/Stock_Factory_i.h
        * docs/tutorials/Quoter/Event_Service/Stock_i.cpp
        * docs/tutorials/Quoter/Event_Service/Stock_i.h
        * docs/tutorials/Quoter/On_Demand_Activation/index.html
        * docs/tutorials/Quoter/RT_Event_Service/index.html
        * docs/tutorials/Quoter/RTCORBA/docs/broker.html
          Small updates related to old exception macros.

        * docs/tutorials/Quoter/Simple/index.html:
          Removed, not needed

Fri Mar 23 11:46:00 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Value_TypeCode.h:
        * tao/AnyTypeCode/Value_TypeCode_Static.h:
        * tao/Compression/zlib/ZlibCompressor.h:
        * tao/Compression/zlib/ZlibCompressor_Factory.cpp:
        * tao/Compression/zlib/ZlibCompressor_Factory.h:
        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynAnyFactory.h:
        * tao/DynamicAny/DynArray_i.cpp:
        * tao/DynamicAny/DynArray_i.h:
        * tao/DynamicAny/DynCommon.cpp:
        * tao/DynamicAny/DynCommon.h:
        * tao/DynamicAny/DynEnum_i.h:
        * tao/DynamicAny/DynSequence_i.h:
        * tao/DynamicAny/DynStruct_i.cpp:
        * tao/DynamicAny/DynStruct_i.h:
        * tao/DynamicAny/DynUnion_i.cpp:
        * tao/DynamicAny/DynUnion_i.h:
        * tao/DynamicAny/DynValue_i.cpp:
        * tao/DynamicAny/DynValue_i.h:
        * tao/DynamicAny/DynValueBox_i.cpp:
        * tao/DynamicAny/DynValueBox_i.h:
        * tao/Invocation_Base.h:
        * tao/Object.cpp:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.cpp:
        * tao/PI/PI_Server/ServerInterceptorAdapter.cpp:
        * tao/Profile_Transport_Resolver.h:
          Layout changes

        * tao/PI/ClientRequestInfo.cpp
        * tao/PI_Server/ServerRequestInfo.cpp
          Fixes for bugs 2854, retrieving the reply status
          in send_request didn't gave an exception and bug 2852,
          retrieving out arguments in send_request and receive_request
          could lead to a crash, make sure we return an Any with
          tk_null in those cases.

Fri Mar 23 11:35:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * tests/Big_Request_Muxing/client.cpp:
        * tests/Big_Request_Muxing/Client_Task.cpp:
        * tests/Big_Request_Muxing/Client_Task.h:
        * tests/Big_Request_Muxing/Payload_Receiver.cpp:
        * tests/Big_Request_Muxing/Payload_Receiver.h:
        * tests/Big_Request_Muxing/run_test.pl:
        * tests/Big_Request_Muxing/server.cpp:
        * tests/Big_Request_Muxing/test.idl:

          Stop erroring on lost message that may not be delivered.
          Improved transient tollerance and debug output.

Fri Mar 23 06:42:20 UTC 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * tests/Portable_Interceptors/Dynamic/server_interceptor.cpp:
        * tests/Portable_Interceptors/Dynamic/client_interceptor.cpp:

          Unused argument warnings.

Thu Mar 22 19:52:26 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Any.h:
        * tao/AnyTypeCode/NVList.{h,cpp,inl}:
        * tao/AnyTypeCode/NVList_Adapter_Impl.h:
          Layout changes

Thu Mar 22 19:29:26 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Dynamic/client_interceptor.cpp:
        * tests/Portable_Interceptors/Dynamic/server_interceptor.cpp:
          Extended for bugzilla bugs 2854 and 2852. This test will now fail,
          the fixes will go in tomorrow, that way the scoreboard first shows
          if the problems do exist on all platforms

        * tests/UNKNOWN_Exception/client.cpp:
          Layout change

Thu Mar 22 19:15:26 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/implrepo.html:
          Removed, just forwarding to a subdirectory

        * docs/TAO-metrics.html:
          Fixed wrong html usage

        * docs/Tags.html:
          Fixed incorrect link

Wed Mar 21 12:12:26 CDT 2007  Chad Elliott  <elliott_c@ociweb.com>

        * TAO version 1.5.7 released.

Mon Mar 19 19:34:48 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp:

          The code to set the null terminator on the "kind" read from
          the persistence file was purposely removed. However, the original
          reason that it was there was that this string was the only string
          that was often of length zero.  When fgets read nothing into the
          string, it was then null terminated which yielded a string of zero
          length.  Without it, the string was filled with garbage.

          The correct modification was to initialize the string passed to
          fgets to an empty string and then call fgets.  This handles cases
          where nothing is read from the file.  I have made this change in
          each place where fgets is called.

Mon Mar 19 19:24:37 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * NEWS:

          Added an entry about the unexpected exception handler for Ossama
          Othman.

Mon Mar 19 19:22:36 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * NEWS:

          Added an entry about the IDL compiler code generation for a
          comma-separated list of sequence typedefs for Jeff Parsons.

Mon Mar 19 19:13:59 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_2654_Regression/server.cpp:

          Wait for threads started by the Hello implementation to avoid
          access violations.

Mon Mar 19 16:21:11 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp:

          Added the code to set the null terminator on the "kind" read from
          the persistence file.  It was accidentally removed in the Thu Mar
          9 00:08:52 UTC 2007 commit.

Thu Mar 15 14:19:57 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2800_Regression/NamingTask.cpp:
          Fixed invalid read reported by valgrind

Thu Mar 15 12:14:57 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DynUnion_Test/DynUnionTest.cpp:
          Added include for static builds

Thu Mar 15 11:55:54 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/CORBA_e_Implicit_Activation/server.cpp:

          TAO should throw a CORBA::INV_POLICY when implicit activation is
          used.  Thanks to Johnny Willemsen for pointing this out.

Thu Mar 15 08:05:57 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CORBA_e_Implicit_Activation/server.cpp:
          Fixed variable not used warning

Wed Mar 14 17:24:57 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/BiDir_CORBALOC/TimeServer.cpp:

         Modified this test to use explicit activation to support
         CORBA e compact.

        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:

          Used explicit activation in one place, however there are more
          places where implicit activation is used in this test and in the
          Event core library.

Wed Mar 14 16:14:31 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Bug_2800_Regression/client.cpp:

          Corrected debug message.

        * performance-tests/Throughput/Throughput.mpc:

          Reverted my change from Tue Mar 13 18:24:27 UTC 2007.  It should
          not have been committed.

        * examples/ior_corbaloc/server.cpp:
        * tests/IDL_Test/main.cpp:
        * tests/Multiple/server.cpp:

          Modified these tests to use explicit activation to support
          CORBA e compact.

Wed Mar 14 13:38:15 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Servant_To_Reference_Test/run_test.pl:

          Increase the timeout to allow slower hardware to complete the
          test.

Wed Mar 14 13:11:52 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/File_IO/File_i.cpp:
        * tests/NestedUpcall/Triangle_Test/initiator.cpp:
        * tests/Nested_Upcall_Crash/Client_Peer.cpp:
        * tests/Nested_Upcall_Crash/Server_Peer.cpp:
        * tests/Portable_Interceptors/PICurrent/test_i.cpp:

          Reverted my changes from Tue Mar 13 18:24:27 UTC 2007.  They were
          not correct.

        * tests/RTCORBA/Dynamic_Thread_Pool/server.cpp:
        * tests/RTCORBA/Linear_Priority/server.cpp:
        * tests/RTCORBA/Priority_Inversion_With_Bands/server.cpp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/server.cpp:
        * tests/RTCORBA/Thread_Pool/server.cpp:

          Modified my changes from Tue Mar 13 18:24:27 UTC 2007.  They were
          also incorrect.

Wed Mar 14 08:12:52 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DynUnion_Test/DynUnionTest.cpp:
          Fixed conversion warnings

Tue Mar 14 05:32:38 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/Array_Traits_T.h (copy_range):

          Made this trait method a member template to provide support for
          checked destination iterators.

Tue Mar 13 20:05:54 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Simple_Naming/client.h:
        * orbsvcs/tests/Simple_Naming/client.cpp:

          Modified this test to use explicit activation to support
          CORBA e compact.

Tue Mar 13 18:42:44 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * performance-tests/Throughput/Receiver_Factory.cpp:

          Modified this performance-test to use explicit activation to
          support CORBA e compact.

Tue Mar 13 18:24:27 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * examples/PluggableUDP/tests/Basic/client.cpp:
        * examples/PluggableUDP/tests/Basic/server.cpp:
        * examples/Simple/grid/Grid_i.cpp:
        * examples/Simple/time-date/Time_Date.cpp:
        * performance-tests/Cubit/TAO/MT_Cubit/Cubit_Task.cpp:
        * performance-tests/Latency/Single_Threaded/server.cpp:
        * performance-tests/Latency/Thread_Per_Connection/server.cpp:
        * performance-tests/Latency/Thread_Pool/server.cpp:
        * performance-tests/POA/Object_Creation_And_Registration/registration.cpp:
        * performance-tests/Sequence_Latency/Single_Threaded/server.cpp:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/server.cpp:
        * performance-tests/Sequence_Latency/Thread_Pool/server.cpp:
        * performance-tests/Throughput/Throughput.mpc:
        * performance-tests/Throughput/server.cpp:
        * tests/AMH_Exceptions/server.cpp:
        * tests/AMH_Oneway/server.cpp:
        * tests/AMI/server.cpp:
        * tests/AMI/simple_client.cpp:
        * tests/AMI_Buffering/admin.cpp:
        * tests/AMI_Buffering/client.cpp:
        * tests/AMI_Buffering/server.cpp:
        * tests/AMI_Timeouts/client.cpp:
        * tests/AMI_Timeouts/server.cpp:
        * tests/Abstract_Interface/server.cpp:
        * tests/Abstract_Interface/test_i.h:
        * tests/Abstract_Interface/test_i.cpp:
        * tests/Any/Recursive/server.cpp:
        * tests/BiDirectional/client.cpp:
        * tests/BiDirectional_DelayedUpcall/client.cpp:
        * tests/BiDirectional_NestedUpcall/client.cpp:
        * tests/Big_AMI/client.cpp:
        * tests/Big_AMI/server.cpp:
        * tests/Big_Oneways/client.cpp:
        * tests/Big_Oneways/server.cpp:
        * tests/Big_Reply/server.cpp:
        * tests/Big_Request_Muxing/server.cpp:
        * tests/Big_Twoways/client.cpp:
        * tests/Big_Twoways/server.cpp:
        * tests/Blocking_Sync_None/server.cpp:
        * tests/Bug_1020_Basic_Regression/client.cpp:
        * tests/Bug_1020_Basic_Regression/server.cpp:
        * tests/Bug_1020_Regression/client.cpp:
        * tests/Bug_1020_Regression/server.cpp:
        * tests/Bug_1254_Regression/server.cpp:
        * tests/Bug_1269_Regression/client.cpp:
        * tests/Bug_1269_Regression/server.cpp:
        * tests/Bug_1270_Regression/client.cpp:
        * tests/Bug_1270_Regression/server.cpp:
        * tests/Bug_1330_Regression/server.cpp:
        * tests/Bug_1361_Regression/client.cpp:
        * tests/Bug_1361_Regression/server.cpp:
        * tests/Bug_1383_Regression/SimpleClient.cpp:
        * tests/Bug_1383_Regression/SimpleServer.cpp:
        * tests/Bug_1476_Regression/server.cpp:
        * tests/Bug_1482_Regression/server.cpp:
        * tests/Bug_1495_Regression/Server_Task.cpp:
        * tests/Bug_1551_Regression/server.cpp:
        * tests/Bug_1568_Regression/server.cpp:
        * tests/Bug_1627_Regression/server.cpp:
        * tests/Bug_1670_Regression/server.cpp:
        * tests/Bug_1676_Regression/server.cpp:
        * tests/Bug_2084_Regression/Client_Task.cpp:
        * tests/Bug_2084_Regression/Server_Task.cpp:
        * tests/Bug_2134_Regression/Hello.cpp:
        * tests/Bug_2174_Regression/server.cpp:
        * tests/Bug_2183_Regression/server.cpp:
        * tests/Bug_2186_Regression/client.cpp:
        * tests/Bug_2186_Regression/server.cpp:
        * tests/Bug_2188_Regression/server.cpp:
        * tests/Bug_2289_Regression/client.cpp:
        * tests/Bug_2289_Regression/server.cpp:
        * tests/Bug_2319_Regression/server.cpp:
        * tests/Bug_2328_Regression/server.cpp:
        * tests/Bug_2349_Regression/server.cpp:
        * tests/Bug_2417_Regression/client.cpp:
        * tests/Bug_2417_Regression/server.cpp:
        * tests/Bug_2429_Regression/client.cpp:
        * tests/Bug_2429_Regression/server.cpp:
        * tests/Bug_2494_Regression/server.cpp:
        * tests/Bug_2503_Regression/test_i.cpp:
        * tests/Bug_2560_Regression/server.cpp:
        * tests/Bug_2593_Regression/server.cpp:
        * tests/Bug_2595_Regression/server.cpp:
        * tests/Bug_2669_Regression/client.cpp:
        * tests/Bug_2683_Regression/server.cpp:
        * tests/COIOP/COIOP_Simple_Test.cpp:
        * tests/COIOP/Server_Task.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/server.cpp:
        * tests/Cache_Growth_Test/server.cpp:
        * tests/CallbackTest/client.cpp:
        * tests/CallbackTest/server.cpp:
        * tests/Client_Leaks/Process_Factory.cpp:
        * tests/Client_Leaks/child.cpp:
        * tests/Client_Leaks/server.cpp:
        * tests/CodeSets/simple/server.cpp:
        * tests/Collocation_Exception_Test/Server_Task.cpp:
        * tests/Collocation_Oneway_Tests/Server_Task.cpp:
        * tests/Collocation_Opportunities/Collocation_Opportunities.cpp:
        * tests/Collocation_Tests/Server_Task.cpp:
        * tests/Connect_Strategy_Test/server.cpp:
        * tests/Connection_Purging/server.cpp:
        * tests/Crash_On_Write/server.cpp:
        * tests/Crashed_Callback/client.cpp:
        * tests/Crashed_Callback/server.cpp:
        * tests/DII_Collocation_Tests/oneway/Server_Task.cpp:
        * tests/DII_Collocation_Tests/twoway/Server_Task.cpp:
        * tests/DLL_ORB/Test_Server_Module.cpp:
        * tests/DSI_AMI_Gateway/server.cpp:
        * tests/DSI_Gateway/server.cpp:
        * tests/Explicit_Event_Loop/server.cpp:
        * tests/FL_Cube/server.cpp:
        * tests/Faults/client.cpp:
        * tests/Faults/middle.cpp:
        * tests/Faults/ping.cpp:
        * tests/Faults/pong.cpp:
        * tests/Faults/server.cpp:
        * tests/File_IO/File_i.cpp:
        * tests/Forwarding/server.cpp:
        * tests/GIOP_Fragments/Java_Big_Request/server.cpp:
        * tests/Hang_Shutdown/server.cpp:
        * tests/Hello/server.cpp:
        * tests/ICMG_Any_Bug/Hello.cpp:
        * tests/ICMG_Any_Bug/server.cpp:
        * tests/IOR_Endpoint_Hostnames/generate_ior.cpp:
        * tests/IPV6/server.cpp:
        * tests/Leader_Followers/server.cpp:
        * tests/LongDouble/server.cpp:
        * tests/LongUpcalls/AMI_Manager.cpp:
        * tests/LongUpcalls/ami_client.cpp:
        * tests/LongUpcalls/ami_server.cpp:
        * tests/LongUpcalls/blocking_client.cpp:
        * tests/LongUpcalls/blocking_server.cpp:
        * tests/MProfile/server.cpp:
        * tests/MProfile_Connection_Timeout/server.cpp:
        * tests/MProfile_Forwarding/server.cpp:
        * tests/MT_BiDir/client.cpp:
        * tests/MT_Client/server.cpp:
        * tests/MT_Server/server.cpp:
        * tests/MT_Timeout/server.cpp:
        * tests/Multiple/server.cpp:
        * tests/Muxed_GIOP_Versions/server.cpp:
        * tests/Muxing/server.cpp:
        * tests/Native_Exceptions/server.cpp:
        * tests/NestedUpcall/MT_Client_Test/local_server.cpp:
        * tests/NestedUpcall/Simple/client.cpp:
        * tests/NestedUpcall/Simple/server.cpp:
        * tests/NestedUpcall/Simple/simple-client.cpp:
        * tests/NestedUpcall/Triangle_Test/initiator.cpp:
        * tests/Nested_Event_Loop/server.cpp:
        * tests/Nested_Upcall_Crash/Client_Peer.cpp:
        * tests/Nested_Upcall_Crash/Server_Peer.cpp:
        * tests/Nested_Upcall_Crash/client.cpp:
        * tests/Nested_Upcall_Crash/server.cpp:
        * tests/No_Server_MT_Connect_Test/server.cpp:
        * tests/OBV/Any/server.cpp:
        * tests/OBV/Collocated/Forward/Server_Task.cpp:
        * tests/OBV/Factory/server.cpp:
        * tests/OBV/Forward/server.cpp:
        * tests/OBV/TC_Alignment/server.cpp:
        * tests/OBV/Truncatable/server.cpp:
        * tests/OBV/ValueBox/server.cpp:
        * tests/ORB_shutdown/server.cpp:
        * tests/Object_Loader/Loader.cpp:
        * tests/Objref_Sequence_Test/server.cpp:
        * tests/OctetSeq/server.cpp:
        * tests/Ondemand_Write/server.cpp:
        * tests/Oneway_Buffering/admin.cpp:
        * tests/Oneway_Buffering/server.cpp:
        * tests/Oneways_Invoking_Twoways/client.cpp:
        * tests/Oneways_Invoking_Twoways/server.cpp:
        * tests/POA/Excessive_Object_Deactivations/Excessive_Object_Deactivations.cpp:
        * tests/POA/Object_Reactivation/Object_Reactivation.cpp:
        * tests/POA/POA_Destruction/POA_Destruction.cpp:
        * tests/POA/Persistent_ID/server.cpp:
        * tests/POA/Single_Threaded_POA/Single_Threaded_POA.cpp:
        * tests/POA/wait_for_completion/wait_for_completion.cpp:
        * tests/Parallel_Connect_Strategy/server.cpp:
        * tests/Portable_Interceptors/AMI/server.cpp:
        * tests/Portable_Interceptors/AdvSlot/server.cpp:
        * tests/Portable_Interceptors/AdvSlotDblCpy/server.cpp:
        * tests/Portable_Interceptors/AdvSlotExt/server.cpp:
        * tests/Portable_Interceptors/ORB_Shutdown/server.cpp:
        * tests/Portable_Interceptors/PICurrent/test_i.cpp:
        * tests/Portable_Interceptors/Redirection/server.cpp:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/server.cpp:
        * tests/QtTests/server.cpp:
        * tests/RTCORBA/Dynamic_Thread_Pool/server.cpp:
        * tests/RTCORBA/Linear_Priority/server.cpp:
        * tests/RTCORBA/Policy_Combinations/server.cpp:
        * tests/RTCORBA/Priority_Inversion_With_Bands/server.cpp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/server.cpp:
        * tests/RTCORBA/Thread_Pool/server.cpp:
        * tests/Reliable_Oneways/server.cpp:
        * tests/Server_Connection_Purging/server.cpp:
        * tests/Server_Leaks/server.cpp:
        * tests/Server_Port_Zero/server.cpp:
        * tests/Single_Read/server.cpp:
        * tests/Smart_Proxies/Benchmark/server.cpp:
        * tests/Smart_Proxies/On_Demand/server.cpp:
        * tests/Smart_Proxies/Policy/server.cpp:
        * tests/Smart_Proxies/server.cpp:
        * tests/Stack_Recursion/server.cpp:
        * tests/Strategies/server.cpp:
        * tests/Timed_Buffered_Oneways/server.cpp:
        * tests/Timeout/server.cpp:
        * tests/Two_Objects/Object_Factory_i.cpp:
        * tests/Two_Objects/server.cpp:
        * tests/Typedef_String_Array/server.cpp:
        * tests/UNKNOWN_Exception/server.cpp:
        * tests/Xt_Stopwatch/server.cpp:

          Modified the majority of the TAO tests, performance-tests and
          examples to use explicit activation to support CORBA e compact.

        * tests/CORBA_e_Implicit_Activation:
        * tests/CORBA_e_Implicit_Activation/CORBA_e_Implicit_Activation.mpc:
        * tests/CORBA_e_Implicit_Activation/Hello.h:
        * tests/CORBA_e_Implicit_Activation/Hello.cpp:
        * tests/CORBA_e_Implicit_Activation/Test.idl:
        * tests/CORBA_e_Implicit_Activation/run_test.pl:
        * tests/CORBA_e_Implicit_Activation/server.cpp:

          Added a new test to ensure that CORBA e compact builds throw the
          correct exception when implicit activation is used.

        * tests/Object_Loader/driver.cpp:

          Check the object reference after the _narrow() to avoid a core
          dump.

        * tests/Object_Loader/run_test.pl:

          Use the PerlACE::add_lib_path() function to add the library
          directory instead of directly modifying the PATH environment
          variable.

        * tests/Nested_Event_Loop/test_i.cpp:

          Fixed an exception message to match the right method name.

Tue Mar 13 18:00:34 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/Valuetype/Valuetype_Traits_T.h (copy_range):

          Made this trait method a member template to provide support for
          checked destination iterators.

Tue Mar 13 14:17:52 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2800_Regression/nsmain.cpp:
        * orbsvcs/tests/Bug_2800_Regression/server.cpp:
          Wait on the thread manager until all tasks are ready

Tue Mar 13 12:19:58 UTC 2007  Steve Huston  <shuston@riverace.com>

        * MPC/config/tao_vc8warnings.mpb: Reversed the defaults for VC8
          STL deprecated warnings since Ossama added the checked iterator
          stuff.

Tue Mar 13 09:55:52 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DynUnion_Test/*:
          New DynUnion test, thanks to M. Arshad Khan
          <khan dot m dot arshad at gmail dot com>
          for creating this test. According to the reporter this failed with 1.5
          but it works on svn head without problems.

Mon Mar 12 22:29:32 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/checked_iterator.h:

          Moved to ACE.

        * tao/Generic_Sequence_T.h:
        * tao/Unbounded_Octet_Sequence_T.h:

          Updated include directives.  The checked_iterator.h header is
          now in ACE.

          Updated checked iterator factory function calls to use new name,
          ACE_make_checked_array_iterator.

        * tao/Object_Reference_Traits_T.h (copy_range):
        * tao/String_Traits_T.h (copy_range):

          Made this trait method a member template to simplify support for
          checked destination iterators.

        * tao/Makefile.am:
        * tao/tao.mpc:

          Removed tao/checked_iterator.h header from the appropriate
          header lists.  It has been moved to ACE.

Mon Mar 12 21:35:25 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/TAO_Internal.cpp:

          Fixed compilation errors on WinCE 5.0 builds.

Mon Mar 12 21:03:15 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/checked_iterator.h (TAO_checked_array_iterator):

          New function template that returns a checked iterator if
          supported by the platform (currently VC8 or better), and a
          pointer otherwise.

        * tao/Generic_Sequence_T.h (generic_sequence, length):
        * tao/Unbounded_Octet_Sequence_T.h (length):

          Call new TAO_checked_array_iterator<>() iterator factory
          function to generate destination iterator.  Addresses VC8
          "C4996" warnings when security related warnings are enabled.

        * tao/Value_Traits_T.h (copy_range):

          Made this trait method a member template to simplify support for
          checked destination iterators.

        * tao/Makefile.am:
        * tao/tao.mpc:

          Added new tao/checked_iterator.h header to the appropriate
          header lists.

Mon Mar 12 17:38:26 UTC 2007  Steve Huston  <shuston@riverace.com>

        * MPC/config/tao_vc8warnings.mpb: Added disabler for the
          "warning C4996: 'std::_Copy_opt' was declared deprecated" warnings
          emanating from Microsoft's STL. Added it for both the vc8 and
          nmake types. Also, added a nmake specific option to disable
          the inherits-via-dominance warning and removed that one from
          the ACE vc8nmake.mpb.

          Also moved the warning 4290 disabler (unimplemented exception
          spec) from ACE's vc8nmake.mpb to here.

Mon Mar 11 13:52:52 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2800_Regression/server.cpp:
        * orbsvcs/tests/Bug_2800_Regression/nsmain.cpp:
          Exit with -1 when we can't activate the test tasks

Mon Mar 11 13:44:52 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DiffServ/server.cpp:
        * tests/DiffServ/client.cpp:
          Include DiffservPolicy.h so that the static initializers to run
          in a static build

Sat Mar 10 22:49:01 UTC 2007  Steve Huston  <shuston@riverace.com>

        * MPC/config/tao_vc8warnings.mpb: New base containing features that
          turn VC8 warnings on/off. Some of these may benefit from some looking
          at; if you want to see them, regenerate projects with the feature
          turned off.

        * MPC/config/taodefaults.mpb:
        * TAO_IDL/tao_idl.mpc: Inherit from tao_vc8warnings.mpb to
          shut off the VC8 warnings.

Fri Mar  9 13:47:52 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DiffServ/client.cpp:
        * tests/DiffServ/server.cpp:
          Added missing duplicate calls

Fri Mar  9 11:03:52 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Adapter_Registry.cpp:
        * tao/Argument.cpp:
        * tao/Bind_Dispatcher_Guard.cpp:
        * tao/Cleanup_Func_Registry.cpp:
        * tao/Client_Strategy_Factory.cpp:
        * tao/Connect_Strategy.cpp:
          Layout changes

Fri Mar  9 06:43:52 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp (operator>>):

          Addressed ambiguous ACE_CString constructor calls caused by
          recent changes to constructor "release" parameter type.

Fri Mar  9 00:27:39 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_visitor_ccm_pre_proc.cpp:
        * TAO_IDL/util/utl_identifier.cpp:
        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/util/utl_scope.cpp:

          Changed the signature of ACE_CString constructor calls to avoid
          ambiguity errors due to recent changes in the ACE_CString
          class.

Fri Mar  9 00:08:52 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp (operator>>):

          Addressed problem where ACE_CString length was not set, which
          resulted in no-op copy to another ACE_CString.

Thu Mar  8 21:27:54 UTC 2007  Steve Huston  <shuston@riverace.com>

        * orbsvcs/IFR_Service/be_init.cpp (BE_save_orb_args):
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.cpp (get_local_addr_str):
        * orbsvcs/orbsvcs/IFRService/IRObject_i.cpp (update_key):
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Profile.cpp:
        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp (valid_id):
          Changed the signature of ACE_CString constructor calls to avoid
          ambiguity errors due to recent changes in the ACE_CString
          class.

Thu Mar  8 17:49:52 UTC 2007  Trevor Fields  <fields_t@ociweb.com>

          Fixed the Event Service crashing when dispatching
          queue fills up and using the MT dispatching.

        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.cpp:

          Check for non-NULL TAO_EC_Queue_Full_Service_Object before
          attempting to use.

        * orbsvcs/orbsvcs/Event/EC_MT_Dispatching.cpp:

          Pass in the TAO_EC_Queue_Full_Service_Object reference into
          the TAO_EC_Dispatching_Task constrcutor.

        * orbsvcs/tests/EC_Throughput/ECT_Consumer.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer.h:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer_Driver.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer_Driver.h:

          Add -o parameter to delay the client for a number of
          seconds upon the reception of the first event.

        * orbsvcs/tests/EC_Throughput/ec_mt_overflow.conf:
        * orbsvcs/tests/EC_Throughput/ec_mt_overflow.conf.xml:
        * orbsvcs/tests/EC_Throughput/run_test_overflow.pl:

          Added a test to try and stress the event service enough
          to fill a dispatching queue.  This test does not always
          fill the queue and therefore can succeed on systems
          where a filled queue can result in crash of the
          Event_Service.

Thu Mar  8 15:56:40 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * tao/TAO_Internal.cpp:

          Moving the -ORBDebugLevel processing from the process-global
          initialization section to the ORB-specific initialization. This
          resolves bug#2809 by allowing new ORBs to change the global
          debug level.

Wed Mar  8 01:28:17 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp:

          Corrected zero buffer length handling to match previous
          behavior.

Wed Mar  7 18:28:14 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tests/DSI_AMH/Roundtrip.cpp:

          We don't need to do set_result() when using AMH.

Wed Mar  7 17:58:38 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tests/DSI_AMH/Roundtrip.cpp:

          Corrected the return value when using AMH to invoke_reply.

Wed Mar  7 14:07:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_var.{h,cpp}:
          The const operator->() should return a T*, not T const *,
          removed the non const operator->(), no need for it. This makes
          the Servant_var compliant with the CORBA C++ mapping. Thanks to
          Andres Hurtis <andrej100 at gmail dot com> for reporting this.
          This fixes bugzilla 2847.

        * tao/AnyTypeCode/Marshal.cpp:
        * tao/AnyTypeCode/Union_TypeCode.cpp:
          Layout change

        * tao/AnyTypeCode/Sequence_TypeCode_Static.cpp:
        * tao/AnyTypeCode/TypeCode_Case_Base_T.cpp:
          Bool change

Wed Mar  7 12:32:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * rules.tao.GNU:
          Removed the old tao_idl rules, this is now all in the generated
          GNU makefiles. The rules for the event channel are also removed,
          they didn't work anymore

Tue Mar  6 13:46:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/IDL_Test.mpc:
        * tests/IDL_Test/Makefile.am:
        * tests/IDL_Test/valuetype.idl:
        * tests/Any/Recursive/Test.idl:
          Moved new tests to Any/Recursive and readded -GA, this way
          we don't have issues with build systems that have not
          done a full clean

Tue Mar  6 13:21:24 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * COPYING: Updated this file to clarify that the TAO license need
          not be shipped with binary-only releases.  Thanks to Michael
          Kircher <michael dot kircher at siemens dot com> and Werner
          Burger <werner dot burger at siemens dot com> for motivating
          this.

Tue Mar  6 09:52:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_AMI/run_test.pl:
        * tests/Big_Reply/run_test.pl:
        * tests/Bug_1330_Regression/run_test.pl:
        * tests/Bug_1627_Regression/run_test.pl:
        * tests/Bug_2234_Regression/run_test.pl:
        * tests/Connection_Purging/run_test.pl:
        * tests/Leader_Followers/run_test.pl:
        * tests/MT_Client/run_test.pl:
        * tests/Multiple_Inheritance/run_test.pl:
        * tests/Native_Exceptions/run_test.pl:
        * tests/Nested_Event_Loop/run_test.pl:
        * tests/OctetSeq/run_test.pl:
        * tests/OctetSeq/run_test1.pl:
        * tests/OctetSeq/run_test2.pl:
        * tests/Oneways_Invoking_Twoways/run_test.pl:
        * tests/Oneways_Invoking_Twoways/run_test_svc.pl:
        * tests/Reliable_Oneways/run_sync_none.pl:
        * tests/Reliable_Oneways/run_sync_with_server.pl:
        * tests/Reliable_Oneways/run_sync_with_target.pl:
        * tests/Reliable_Oneways/run_sync_with_transport.pl:
        * tests/Reliable_Oneways/run_test.pl:
        * tests/Server_Leaks/run_test.pl:
          Use a PerlACE variable for the time to wait for a process

Tue Mar  6 09:50:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/POA/Adapter_Activator/run_test.pl:
        * examples/POA/Default_Servant/run_test.pl:
        * examples/POA/DSI/run_test.pl:
        * examples/POA/Explicit_Activation/run_test.pl:
        * examples/POA/FindPOA/run_test.pl:
        * examples/POA/Forwarding/run_test.pl:
        * examples/POA/Loader/run_test.pl:
        * examples/POA/NewPOA/run_test.pl:
        * examples/POA/On_Demand_Activation/run_test.pl:
        * examples/POA/On_Demand_Loading/run_test.pl:
        * examples/POA/POA_BiDir/run_test.pl:
        * examples/POA/Reference_Counted_Servant/run_test.pl:
        * examples/POA/RootPOA/run_test.pl:
        * examples/POA/TIE/run_test.pl:
          Use a PerlACE variable for the time to wait for a process

Tue Mar  6 09:38:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Collocation/run_test.pl:
        * tests/Collocation_Exception_Test/run_test.pl:
        * tests/Collocation_Oneway_Tests/run_test.pl:
        * tests/Collocation_Tests/run_test.pl:
        * tests/RTCORBA/Activate_Object_Multiple_ORBs/run_test.pl:
        * tests/RTCORBA/Client_Propagated/run_test.pl:
        * tests/RTCORBA/Server_Declared/run_test.pl:
        * tests/Servant_To_Reference_Test/run_test.pl:
        * tests/UNKNOWN_Exception/run_test.pl:
          Use a PerlACE variable for the time to wait for a process

Tue Mar  6 09:06:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DSI_AMH/run_test.pl:
        * tests/DSI_AMI_Gateway/run_test.pl:
        * tests/DSI_Gateway/run_test.pl:
        * tests/DynAny_Test/run_test.pl:
        * tests/Explicit_Event_Loop/run_test.pl:
        * tests/ORB_destroy/run_test.pl:
        * tests/ORB_init/run_test.pl:
        * tests/ORB_Local_Config/run_tests_all.pl:
          Use a PerlACE variable for the time to wait for a process

Tue Mar  6 09:03:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Bug_2511_Regression/run_test.pl:
        * tests/POA/Current/run_test.pl:
        * tests/POA/Deactivate_Object/run_test.pl:
        * tests/POA/Default_Servant/run_test.pl:
        * tests/POA/Etherealization/run_test.pl:
        * tests/POA/Excessive_Object_Deactivations/run_test.pl:
        * tests/POA/Identity/run_test.pl:
        * tests/POA/MT_Servant_Locator/run_test.pl:
        * tests/POA/Nested_Non_Servant_Upcalls/run_test.pl:
        * tests/POA/Non_Servant_Upcalls/run_test.pl:
        * tests/POA/Object_Reactivation/run_test.pl:
        * tests/POA/Persistent_ID/run_test.pl:
        * tests/POA/POA_Destruction/run_test.pl:
        * tests/POA/POAManagerFactory/run_test.pl:
        * tests/POA/Policies/run_test.pl:
        * tests/POA/Reference_Counting/run_test.pl:
        * tests/POA/Single_Threaded_POA/run_test.pl:
        * tests/POA/wait_for_completion/run_test.pl:
          Use a PerlACE variable for the time to wait for a process

Tue Mar  6 08:59:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Codec/run_test.pl:
        * tests/POA/Bug_1592_Regression/run_test.pl:
        * tests/Portable_Interceptors/AdvSlot/run_test.pl:
        * tests/Portable_Interceptors/AdvSlotDblCpy/run_test.pl:
        * tests/Portable_Interceptors/AdvSlotExt/run_test.pl:
        * tests/Portable_Interceptors/Benchmark/run_test.pl:
        * tests/Portable_Interceptors/Bug_1559/run_test.pl:
        * tests/Portable_Interceptors/Bug_2088/run_test.pl:
        * tests/Portable_Interceptors/Bug_2510_Regression/run_test.pl:
        * tests/Portable_Interceptors/Collocated/Dynamic/run_test.pl:
        * tests/Portable_Interceptors/Dynamic/run_test.pl:
        * tests/Portable_Interceptors/ForwardRequest/run_test.pl:
        * tests/Portable_Interceptors/IORInterceptor/run_test.pl:
        * tests/Portable_Interceptors/ORB_Shutdown/run_test.pl:
        * tests/Portable_Interceptors/PICurrent/run_test.pl:
        * tests/Portable_Interceptors/PolicyFactory/run_test.pl:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Collocated/run_test.pl:
        * tests/Portable_Interceptors/Processing_Mode_Policy/Remote/run_test.pl:
        * tests/Portable_Interceptors/Recursive_ORBInitializer/run_test.pl:
        * tests/Portable_Interceptors/Redirection/run_test.pl:
        * tests/Portable_Interceptors/Register_Initial_References/run_test.pl:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/run_test.pl:
        * tests/Portable_Interceptors/Service_Context_Manipulation/run_test.pl:
        * tests/Portable_Interceptors/Slot/run_test.pl:
          Use a PerlACE variable for the time to wait for a process

Tue Mar  6 08:15:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Any/Recursive/Test.idl:
          Added another test case

        * tests/Any/Recursive/client.cpp:
          Extended with more tests

        * tests/POA/Current/Current.cpp:
          Layout changes

Tue Mar  6 03:08:49 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * tests/POA/Bug_1592_Regression/run_test.pl:
          Must use $ACE_ROOT/bin instead of ../../bin otherwise it does
          not work for checkouts with ACE and TAO at the same level (such
          as directly from the trunk.)

Mon Mar  5 20:13:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/ast/ast_sequence.cpp:
          Fixed last part of bug 2776, the typecode for recursive valuetype s
          is now generated correctly as recursive

        * TAO_IDL/ast/ast_valuetype.cpp:
        * TAO_IDL/be/be_valuetype.cpp:
        * TAO_IDL/be_include/be_valuetype.h:
        * TAO_IDL/include/ast_valuetype.h:
          Moved in_recursion method from be to ast class

Mon Mar  5 19:00:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp:
        * TAO_IDL/be/be_visitor_typecode/union_typecode.cpp:
        * TAO_IDL/be/be_visitor_typecode/value_typecode.cpp:
          Fixed bug 2776 partially, improved the detection whether we have
          a recursive type or not. Thanks to Martin Corino
          <mcorino at remedy dot nl> for reporting this issue.

Mon Mar  5 14:45:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/valuetype.idl:
          Added Recursive2 and Recursive3 types, both do result in
          an invalid generated typecode. The generated code does compile
          but will result in a crash when used runtime.

        * tests/IDL_Test/IDL_Test.mpc:
          Don't use -GA for valuetype anymore, is too complex

Mon Mar  5 13:41:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Any/Recursive/Test.idl:
          Added RecursiveUnion2 as another test

        * tests/Any/Recursive/client.cpp:
          Added call with RecursiveUnion2, also fails

        * tests/IDL_Test/union.idl:
        * tests/IDL_Test/valuetype.idl
          Some more tests

Mon Mar  5 11:09:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Recursive_Type_TypeCode.cpp:
        * tao/AnyTypeCode/Recursive_Type_TypeCode.h:
        * tao/AnyTypeCode/Struct_TypeCode.cpp:
        * tao/AnyTypeCode/Struct_TypeCode.h:
        * tao/AnyTypeCode/Struct_TypeCode_Static.cpp:
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp:
          Layout changes

Mon Mar  5 11:03:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bounded_Object_Reference_Sequence_T.h:
        * tao/Unbounded_Object_Reference_Sequence_T.h:
          Reverted the change for bugzilla 2829, some builds show errors,
          will investigate these builds first

Mon Mar  5 09:44:32 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>


        * tao/Bounded_Object_Reference_Sequence_T.h:
        * tao/EndpointPolicy/EndpointPolicy_Factory.cpp:
        * tao/Makefile.am:
        * tao/Object_Reference_Const_Sequence_Element_T.h:
        * tao/String_Const_Sequence_Element_T.h:
        * tao/tao.mpc:
        * tao/Unbounded_Object_Reference_Sequence_T.h:
          Fixed bugzilla 2829, make it possible to use .in()
          on the element returned by const operator [] for an
          object reference sequence

        * tao/ORB_Core.cpp:
          layout change

        * TAO_IDL/be/be_visitor_union/union_cs.cpp
        * TAO_IDL/be/be_visitor_union_branch.cpp
        * TAO_IDL/be/be_visitor_union_branch/public_constructor_cs.cpp
        * TAO_IDL/be/be_visitor_union_branch/public_reset_cs.cpp
        * TAO_IDL/be_include/be_codegen.h
        * TAO_IDL/be_include/be_visitor_union_branch.h
        * TAO_IDL/be_include/be_visitor_union_branch/public_constructor_cs.h
          Fixed bugzilla 2839, when an union is created by default
          and the discriminator is for a value that is allocated
          from the heap then allocate a value else we get
          a crash when marshaling this default union

Fri Mar  2 22:15:32 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tests/DSI_AMI_Gateway/test_dsi.cpp:

          Fixed a memory leak.

Fri Mar  2 20:48:45 UTC 2007  Steve Huston  <shuston@riverace.com>

        * TAO-INSTALL.html: Added a description of cross-compiling on
          Windows with Visual Studio.

        * orbsvcs/ImplRepo_Service/Activator_NT_Service.{h cpp}:
        * orbsvcs/ImplRepo_Service/Locator_NT_Service.{h cpp}:
        * orbsvcs/ImplRepo_Service/ImR_Activator.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Locator.cpp:
        * orbsvcs/Naming_Service/NT_Naming_Server.cpp:
        * orbsvcs/Naming_Service/NT_Naming_Service.{h cpp}:
        * orbsvcs/Notify_Service/NT_Notify_Server.cpp:
        * orbsvcs/Notify_Service/NT_Notify_Service.{h cpp}: Don't try this
          on ACE_WIN32 platforms where ACE_LACKS_WIN32_SERVICES.

        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp (open_config):
        * orbsvcs/ImplRepo_Service/Locator_Repository.cpp: Don't try to build
          the Windows registry-using code where ACE_LACKS_WIN32_REGISTRY.

Fri Mar  2 21:00:23 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tests/DSI_AMI_Gateway/test_dsi.cpp:
        * tests/DSI_Gateway/test_dsi.cpp:

          Fixed an unused argument warning.

Fri Mar  2 20:31:11 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.h:
        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:

          Don't need the exception_type_ data memember.
          It is inherited from its parent class AMH_Response_Handler.

        * tao/Messaging/AMH_Response_Handler.h:
        * tao/Messaging/AMH_Response_Handler.cpp:

          Move the exception_type_ from private section to protected section.
          so that the AMH_DSI_Response_Handler as a child class can access
          this data member.

Fri Mar  2 18:45:34 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.inl:
        * tao/DynamicInterface/DII_Reply_Handler.inl:

          Added the missing versioned namespace guard.

Fri Mar  2 07:21:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_attribute.cpp:
          No need to set the flag that an operation has been seen

        * TAO_IDL/be/be_union.cpp:
          When we have an union with an enum as discriminator and the
          number of labels is the same as the enum has members we don't
          need to generate a default case. Fixes bugzilla 2838

Thu Mar  1 21:32:04 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/DII_Reply_Handler.cpp:

          Cosmetic change.

Thu Mar  1 21:22:25 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tests/DSI_AMH/DSI_AMH.mpc:

          Fixed a mpc error.

Thu Mar  1 21:13:06 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/DII_Invocation_Adapter.h:
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:

          Fixed a Intel compiler warning.

Thu Mar  1 20:21:19 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tests/DSI_AMI_Gateway/test_dsi.cpp:

          Fixed a unused argument warning.

Thu Mar  1 19:58:16 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.h:
        * tao/DynamicInterface/DII_Reply_Handler.h:
        * tao/DynamicInterface/DII_Reply_Handler.cpp:

          Added the missing versioned namespace guard.

Thu Mar  1 19:36:47 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:
        * tao/DynamicInterface/DII_Reply_Handler.h:
        * tao/DynamicInterface/DII_Reply_Handler.cpp:

          Removed use of deprecated macros. Changed to use c++ cast.
          Removed a check for gcc > 2.8 since it is not supported.

Thu Mar  1 19:14:18 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.h:
        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:

          Moved implemention code from header file to cpp file.

Thu Mar  1 18:58:47 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.h:
        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:
        * tao/DynamicInterface/DII_Invocation_Adapter.h:
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/DynamicInterface/DII_Reply_Handler.h:
        * tao/DynamicInterface/DII_Reply_Handler.inl:
        * tao/DynamicInterface/Request.h:
        * tao/DynamicInterface/Request.cpp:
        * tests/DSI_AMH/DSI_AMH.mpc:
        * tests/DSI_AMH/README:
        * tests/DSI_AMH/Roundtrip.cpp:
        * tests/DSI_AMH/server.cpp:
        * tests/DSI_AMI_Gateway/My_DII_Reply_Handler.cpp:
        * tests/DSI_AMI_Gateway/gateway.cpp:
        * tests/DSI_AMI_Gateway/test_dsi.h:
        * tests/DSI_AMI_Gateway/test_dsi.inl:
        * tests/DSI_AMI_Gateway/test_dsi.cpp:

          Changed some lengthy lines to be less than 80 characters.

Thu Mar  1 16:14:43 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/Makefile.am:

          Manually added several new files to this file.

Thu Mar  1 14:53:53 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:

          No need to check for null pointer since dynamic_cast already
          does the check for us.

Thu Mar  1 14:01:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/Context.h:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/DynamicInterface/Request.cpp:
        * tao/DynamicInterface/Request.h:
        * tao/DynamicInterface/Server_Request.cpp:
        * tao/DynamicInterface/Unknown_User_Exception.h:
        * tao/Messaging/AMH_Response_Handler.cpp:
        * tao/Transport.h:
        * tao/Transport_Connector.cpp:
        * tao/Transport_Queueing_Strategies.cpp:
        * tao/Transport_Selection_Guard.cpp:
          Layout changes

Thu Mar  1 13:23:32 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/Makefile.am:

          Since these are not automatically generated, we must add new files
          by hand.

Thu Mar  1 13:12:28 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:

          Replaced ACE_static_cast and ACE_const_cast with the correct
          casts.

Wed Feb 28 20:02:07 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * tao/DynamicInterface/AMH_DSI_Response_Handler.h:
        * tao/DynamicInterface/AMH_DSI_Response_Handler.inl:
        * tao/DynamicInterface/AMH_DSI_Response_Handler.cpp:
        * tao/DynamicInterface/DII_Invocation.h:
        * tao/DynamicInterface/DII_Invocation_Adapter.h:
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/DynamicInterface/DII_Reply_Dispatcher.h:
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/DynamicInterface/DII_Reply_Handler.h:
        * tao/DynamicInterface/DII_Reply_Handler.inl:
        * tao/DynamicInterface/DII_Reply_Handler.cpp:
        * tao/DynamicInterface/Request.h:
        * tao/DynamicInterface/Request.cpp:

        * tao/Invocation_Utils.h:

        * tao/Messaging/AMH_Response_Handler.h:
        * tao/Messaging/AMH_Response_Handler.cpp:

          Extended current DynamicInterface to allow DII+AMI+DSI+AMH.

        * tests/DSI_AMH:
        * tests/DSI_AMH/DSI_AMH.mpc:
        * tests/DSI_AMH/README:
        * tests/DSI_AMH/Roundtrip.h:
        * tests/DSI_AMH/Roundtrip.cpp:
        * tests/DSI_AMH/Test.idl:
        * tests/DSI_AMH/client.cpp:
        * tests/DSI_AMH/run_test.pl:
        * tests/DSI_AMH/server.cpp:

          Added a new test for the new DSI+AMH feature.

        * tests/DSI_AMI_Gateway:
        * tests/DSI_AMI_Gateway/DSI_AMI_Gateway.mpc:
        * tests/DSI_AMI_Gateway/My_DII_Reply_Handler.h:
        * tests/DSI_AMI_Gateway/My_DII_Reply_Handler.cpp:
        * tests/DSI_AMI_Gateway/README:
        * tests/DSI_AMI_Gateway/client.cpp:
        * tests/DSI_AMI_Gateway/gateway.cpp:
        * tests/DSI_AMI_Gateway/run_exception_test.pl:
        * tests/DSI_AMI_Gateway/run_test.pl:
        * tests/DSI_AMI_Gateway/server.cpp:
        * tests/DSI_AMI_Gateway/test.idl:
        * tests/DSI_AMI_Gateway/test_dsi.h:
        * tests/DSI_AMI_Gateway/test_dsi.inl:
        * tests/DSI_AMI_Gateway/test_dsi.cpp:
        * tests/DSI_AMI_Gateway/test_i.h:
        * tests/DSI_AMI_Gateway/test_i.inl:
        * tests/DSI_AMI_Gateway/test_i.cpp:

          Added a new test to experience the whole AMI+DII+AMH+DSI feature.

Wed Feb 28 15:24:30 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * MPC/config/diffservpolicy.mpb:

          Added avoids_minimum_corba, avoids_corba_e_compact, and
          avoids_corba_e_micro as base projects and removed the install base
          project.  This library is not available when minimum_corba,
          corba_e_compact or corba_e_micro is enabled.  And, users of this
          library may not want/need their binary or library to be installed.

Wed Feb 28 14:59:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * orbsvcs/tests/Security/MT_IIOP_SSL/Server_Worker.cpp:
        * orbsvcs/tests/Security/MT_SSLIOP/Client_Worker.cpp:
        * orbsvcs/tests/Security/MT_SSLIOP/Server_Worker.cpp:
          Fixed unreferenced local variable warnings

Wed Feb 28 14:44:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Param_Test/options.cpp:
          Fixed memory leak when reading ior file

Wed Feb 28 12:42:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CodecFactory/CDR_Encaps_Codec.cpp:
        * tao/CodecFactory/CDR_Encaps_Codec.h:
        * tao/CodecFactory/CodecFactory.cpp:
        * tao/CodecFactory/CodecFactory.h:
        * tao/CodecFactory/CodecFactory_impl.cpp:
        * tao/CodecFactory/CodecFactory_impl.h:
          Layout changes

Wed Feb 28 12:34:55 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/CodecFactory/CDR_Encaps_Codec.cpp:

          Removed an ACE_THROW_RETURN that somehow made it back in.

Wed Feb 28 10:05:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/append.cpp:
        * tao/AnyTypeCode/Union_TypeCode.cpp:
        * tao/AnyTypeCode/Union_TypeCode_Static.cpp:
          Zapped another few old exception macros

        * tao/DynamicInterface/Dynamic_Implementation.cpp:
          Layout changes

Wed Feb 28 09:40:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * bin/*:
        * Release:
          Added new bin directory and moved some scripts of the ACE_wrappers/bin
          to this directory so that we don't ship TAO specific scripts with ACE

Tue Feb 27 21:09:01 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/MCAST_Parser.cpp (parse_string):

          Removed emulated exception macro that snuck back in to the
          source during the merge.

Tue Feb 27 18:43:11 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/Exception.h:
        * tao/SystemException.h:

          Made copy constructor public again to silence VC7.1 level 4
          warnings.  This constructor should be protected, but VC7.1 at
          warning level 4 complains about the inaccessible copy
          constructor preventing it from being caught.  However, that
          probably isn't true for most cases since CORBA exceptions are
          typically caught by reference, not by copy.

          Added a note describing why the copy constructor is not
          protected.

        * tao/diffs/Object_Key.diff:

          Synchronized with latest version of Object_KeyC.cpp.

Tue Feb 27 13:21:05 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/IDL_Test/union.idl:

          Changed to only exclude the union with negative cases from SunCC
          version 5.8 or below.

Tue Feb 27 12:41:52 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * examples/TypeCode_Creation/main.cpp:
        * examples/TypeCode_Creation/test.idl:

          Modified the idl union to not use negative numbers in the cases.

        * tests/IDL_Test/union.idl:

          Added a union that uses negative numbers in the cases.  This is
          currently #ifdef'ed to not be processed by the Sun preprocessor as
          it separates the negative sign and the number causing problems for
          the tao_idl lexer/scanner.  This is for bugzilla bug #2821.

Tue Feb 27 11:05:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp:

          Some compilers do not process the #if before the macro subsitution
          adjacent string concatination.

Tue Feb 27 06:32:42 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * tao/EndpointPolicy/EndpointPolicy_Factory.cpp (create_policy):

          It seems the const TAO object reference sequence element
          operator[] no longer returns a "_var" or managed type.  Drop the
          newly added ".in()" accessor call.  Addresses g++ 4.1 build
          errors.

        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp (operator >>):

          Fixed partial merge where a number of changes were not
          committed.

          Addressed comparison signed/unsigned warnings.

Mon Feb 26 23:27:03 UTC 2007  Ossama Othman  <ossama_othman at symantec dot com>

        * NEWS:

          Updated to reflect latest changes.

        * TAO_IDL/include/fe_extern.h (File, FE_set_yyin):
        * TAO_IDL/fe/fe_extern.cpp (FE_set_yyin):

          Removed useless "File" class forward declaration.  Just use
          the standard "FILE" type instead.

        * TAO_IDL/be/be_visitor_exception/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuetype/marshal_cs.cpp:

          Added missing visit_scope() method return value check detected
          by Coverity.

        * TAO_IDL/be/be_visitor_typecode/struct_typecode.cpp:
        * TAO_IDL/be/be_visitor_typecode/union_typecode.cpp:
        * TAO_IDL/be/be_visitor_typecode/value_typecode.cpp:

          Added missing accept() method return value check detected by
          Coverity.

        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:

          Fixed buffer overrun detected by Coverity.

        * TAO_IDL/be/be_visitor_amh_pre_proc.cpp:
        * tao/Acceptor_Registry.cpp:
        * tao/CodecFactory/CDR_Encaps_Codec.cpp:
        * tao/DynamicAny/DynArray_i.cpp:
        * tao/DynamicAny/DynStruct_i.cpp:
        * tao/DynamicAny/DynUnion_i.cpp:
        * tao/DynamicAny/DynEnum_i.cpp:
        * tao/DynamicAny/DynSequence_i.cpp:
        * tao/DynamicInterface/DII_Invocation.cpp:
        * tao/EndpointPolicy/EndpointPolicy_ORBInitializer.cpp:
        * tao/EndpointPolicy/EndpointPolicy_Factory.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplate_i.cpp:
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Acceptor.cpp:

          Added missing dynamic_cast<> return value check detected by
          Coverity, i.e. a Coverity FORWARD_NULL error.

        * TAO_IDL/be/be_interface_strategy.cpp (compute_coll_names):

          Place full_coll_name_ and local_coll_name_ pointer members in a
          well defined state by resetting them to zero  after deallocating
          memory they pointed to in case this method returns prematurely,
          and attempts to access them later on occur.  Addresses a problem
          flagged by Coverity.

        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/amh_ss.cpp:
        * tao/BiDir_GIOP/BiDir_PolicyFactory.cpp:
        * tao/CodecFactory/CodecFactory.cpp:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/PI/PICurrent_Loader.cpp:
        * tao/RTCORBA/RT_PolicyFactory.cpp:

          Initialize generated CORBA::Object_ptr skeleton variables with
          CORBA::Object_ptr() instead of CORBA::Object::_nil().  Addresses
          Coverity UNUSED_VALUE errors.

        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_array/array_ch.cpp:
        * TAO_IDL/be/be_visitor_array/array_ci.cpp:
        * TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be/be_visitor_operation/upcall_command_ss.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_cs.cpp:

          Moved zero pointer check before the pointer is actually
          dereferenced.  Addresses Coverity REVERSE_INULL error.

        * TAO_IDL/be/be_codegen.cpp:

          Include "tao/ORB_Constants.h" if operations or valuetypes are
          seen.  Users may check SystemException minor codes.

          Corrected npos constant scope.  s/ACE_SString/ACE_CString/g

          Const-correctness improvements.

          Delay array instantiation optimization until it is needed.
          Minor performance optimization in presence of bad function
          parameters.

        * TAO_IDL/be/be_interface.cpp (gen_def_ctors):

          Issue diagnostic message if inheritance graph traversal fails.

        * TAO_IDL/be/be_decl.cpp:

          Do not continue if scope narrowing fails.

        * TAO_IDL/ast/ast_constant.cpp:
        * TAO_IDL/ast/ast_expression.cpp:
        * TAO_IDL/ast/ast_enum.cpp:
        * tao/AnyTypeCode/Any_Basic_Impl.cpp:
        * tao/AnyTypeCode/Any_Basic_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Dual_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Special_Impl_T.cpp:
        * tao/AnyTypeCode/Any_SystemException.cpp:
        * tao/AnyTypeCode/TypeCode_CDR_Extraction.cpp:
        * tao/AnyTypeCode/append.cpp:
        * tao/AnyTypeCode/skip.cpp:
        * tao/RTCORBA/RT_Transport_Descriptor.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tao/RTCORBA/RT_ORB.cpp:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTCORBA/RT_Endpoint_Utils.cpp:
        * tao/RTPortableServer/RT_Policy_Validator.cpp:

          Check for null pointer before dereferencing.  Addresses Coverity
          FORWARD_NULL errors.

        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/idl.ll:

          Improved consistency between local variable and return value
          types.

          Improved const-correctness.

          Fixed dead code related to IDL comment scanning.  Flagged by
          Coverity.

          Cleaned up node memory management.

        * TAO_IDL/driver/drv_preproc.cpp:

          Removed useless "File" class forward declaration.  Just use
          the standard "FILE" type instead.

          Removed use of "friggin'" from TAO_IDL error diagnostic.  Some
          users may not appreciate this humor.

        * TAO_IDL/util/utl_string.cpp:

          Use operator new() instead of malloc().

          (~UTL_String):

          Deallocate string array members.  Addresses exception-safety
          issues, as well as Coverity CTOR_DTOR_LEAK errors.

          (destroy):

          Deallocate string array members, and reset them to zero.

        * tao/Exception.h:
        * tao/SystemException.h:

          Made copy constructor protected, as required by the C++
          mapping.

        * tao/IIOP_Acceptor.cpp:

          Addressed buffer overrun.

        * tao/IIOP_Connector.cpp:

          Corrected method name in diagnostic message.

          Cosmetic changes.

        * tao/MCAST_Parser.cpp:
        * tao/MCAST_Parser.h:
        * tao/MCAST_Parser.inl:

          Replaced unnecessary delayed conversions from port and TTL
          strings to integral values.  Just store and use the integral
          values directly instead of passing around a bunch of strings.
          Simplifies implementation.

          Added valid TTL check.  The valid TTL range is (0,255].

          Corrected string position variable type to match return value of
          ACE_CString::find(), i.e. ACE_CString::size_type.

        * tao/Object_KeyC.h:
        * tao/Object_KeyC.cpp (encode_sequence_to_string):
          (decode_string_to_sequence):
        * tao/diffs/Object_Key.diff:

          In the decoding case, ensure sequence length value does not
          exceed maximum value for sequence index type (CORBA::ULong).
          This is mostly an issue for 64-bit MS Windows builds.

          Corrected types used in explicit casts.

          Improved const-correctness.

          Improved performance.

        * tao/Policy_Set.cpp:

          Verify TAO_Cached_Policy_Type value is greater than zero before
          using it as an array index.  Addresses Coverity NEGATIVE_RETURNS
          errors.

        * tao/Queued_Message.h:

          Removed include directive for "ace/Time_Value.h".  A forward
          declaration will suffice.

        * tao/TAO_Internal.cpp (open_services):

          Addressed warning regarding potential conflict with similarly
          named variables in different scopes.

        * tao/Transport.cpp (cleanup_queue_i):

          Corrected byte count type to match message length type.

        * tao/orbconf.h (TAO_DEFAULT_ADAPTER_REGISTRY_SIZE):
        * tao/IORTable/Table_Adapter.cpp (priority):

          Created this new constant, and used it where appropriate.

        * tao/AnyTypeCode/String_TypeCode_Traits.h:

          Initialize CORBA::TypeCode_ptr variables with
          CORBA::TypeCode_ptr() instead of CORBA::TypeCode::_nil().
          Addresses Coverity UNUSED_VALUE errors.

        * tao/CSD_ThreadPool/CSD_TP_Task.cpp:

          Removed dead/unreachable code.

        * tao/PortableServer/ServantRetentionStrategyFactoryImpl.cpp:

          Only issue diagnostic message if debugging is enabled by user.

        * tao/RTCORBA/RT_PolicyFactory.cpp:
        * orbsvcs/orbsvcs/Security/SL3_PolicyFactory.cpp:
        * orbsvcs/orbsvcs/Security/SL3_ObjectCredentialsPolicy.cpp:
        * orbsvcs/orbsvcs/Security/SL3_ContextEstablishmentPolicy.cpp:

          Initialize CORBA::Policy_ptr variables with CORBA::Policy_ptr()
          instead of CORBA::Policy::_nil().  Addresses Coverity
          UNUSED_VALUE errors.

        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:

          Added missing dynamic_cast<> return value check detected by
          Coverity, i.e. a Coverity FORWARD_NULL error.

          Initialize CORBA::TypeCode_ptr variables with
          CORBA::TypeCode_ptr() instead of CORBA::TypeCode::_nil().
          Addresses Coverity UNUSED_VALUE errors.

        * orbsvcs/orbsvcs/Naming/Flat_File_Persistence.cpp:

          Verify buffer size falls into a valid range instead of just
          checking for a non-zero value.  Addresses Coverity
          TAINTED_SCALAR errors.

        * orbsvcs/orbsvcs/Notify/XML_Loader.cpp:

          Fixed potential memory leaks.  Addresses Coverity RESOURCE_LEAK
          errors.

        * orbsvcs/orbsvcs/Notify/Routing_Slip_Persistence_Manager.cpp:

          Fixed potential dynamic deallocation of a statically
          instantiated object.

        * orbsvcs/orbsvcs/Notify/FilterAdmin.cpp:

          Explicitly cast return value of "attrs.load()" call to void.  We
          don't appear to care about it.  Address Coverity CHECKED_RETURN
          error.

        From Russell Mora
        * orbsvcs/orbsvcs/Notify/Persistent_File_Allocator.cpp (read):

          Fix for coverity flaged REVERSE_INULL problem.  Do not
          dereference null pointer.

Mon Feb 26 19:30:28 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/IDL_Test/constants.idl:

          Added constants built through various mathematic operations to
          flush out problems with preprocessors that don't handle negative
          signs correctly.  This is for bugzilla bug #2821.

Mon Feb 26 17:25:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp:

          Removed persistance options that rely on non-minimum corba.

Mon Feb 26 17:18:20 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * tests/Sequence_Unit_Tests/unbounded_sequence_cdr_ut.cpp:

          Added a #include for the octet-sequence specialization.

Mon Feb 26 14:44:07 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:

          Reverted my change (committed by Jeff Parsons on my behalf) from
          Tue Nov 28 19:32:46 UTC 2006.  While it fixed an issues with the
          Sun preprocessor (e.g., negative numbers coming out like "- 9"),
          it causes problems with normal subtraction.  Thanks to Jules
          Colding <colding at omesc dot com> for reporting this.  This fixes
          bugzilla bug #2821.

Mon Feb 26 13:57:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Compression/*.{h,cpp}:
        * tao/UB_String_Argument_T.{cpp,inl}:
          Refactored layout using 1.12 version of StyleManager

Mon Feb 26 13:43:45 UTC 2007  Olli Savia  <ops@iki.fi>

        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.cpp:
        * orbsvcs/tests/FT_App/FT_Creator.cpp:
        * orbsvcs/tests/FT_App/TAO_Object_Group_Creator.cpp:
        * tao/ORB.cpp:
        * tao/ORB_Core.cpp:

          Pass correct buffer length to ACE_OS::snprintf().
          Thanks to Yves Alloyer <alloyer at ipanematech dot com> for
          reporting this and providing initial patch. This fixes Bug #2797.

Mon Feb 26 13:43:44 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tests/DiffServ/server.cpp:

          Removed usage of old macros.

Sun Feb 25 21:56:31 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tests/DiffServ/server.cpp:

          Removed ACE_THROW_SPEC in the function definitions and
          declarations. Helps fix the fuzz build errors.

Sun Feb 25 17:28:52 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tests/DiffServ/run_test.pl:

          Added a regression test script for the DiffServ policy test.

Sun Feb 25 17:09:10 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tests/DiffServ:
        * tests/DiffServ/client.cpp:
        * tests/DiffServ/diffserv.mpc:
        * tests/DiffServ/test.idl:
        * tests/DiffServ/server.cpp:
        * tests/DiffServ/README:

          Added a new test for the DiffServ policy.

Sat Feb 24 19:34:08 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * MPC/config/diffservpolicy.mpb:

          Added a MPC project file for the DiffServ policy.

Sat Feb 24 06:56:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Any_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Special_Impl_T.cpp:
        * tao/AnyTypeCode/Any_SystemException.cpp:
          Use false instead of 0

        * tao/AnyTypeCode/ExceptionA.cpp:
        * tao/LocateRequest_Invocation.cpp:
        * tao/PortableServer/Adapter_Activator.cpp:
          Layout change

        * tao/EndpointPolicy/EndpointPolicy_ORBInitializer.cpp:
        * tao/HTTP_Parser.cpp:
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp:
        * tao/LocateRequest_Invocation_Adapter.cpp:
        * tao/Messaging/Messaging_ORBInitializer.cpp:
        * tao/PI/PI_ORBInitializer.cpp:
        * tao/PI_Server/PortableServer_ORBInitializer.cpp:
        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp:
        * tao/RTCORBA/RT_ORBInitializer.cpp:
          Removed not needed catch

        * tao/Object.cpp:
          Fixed _validate_connection

        * tests/Bug_2826_Regression/*:
          New regression for bug 2826 that is about a problem with
          validate_connection. Thanks to Steven Xie
          <steven dot xie at mpathix dot com> for reporting this
          and making the test program

Thu Feb 22 09:35:00 UTC 2007  Simon Massey  <sma@prismtech.com>

        * orbsvcs/orbsvcs/GSSUP.idl:

          This file includes CSI.idl, but this should be relative to TAO/orbsvcs for
          end user use.

Thu Feb 22 09:14:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Bug_1592_Regression/client.cpp:
          Added this file, missed it in a previous commit

Wed Feb 21 14:47:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Makefile.am:
          Updated for some changes

        * tao/AnyTypeCode/Any.cpp:
          Documentation update

        * tao/PI_Server/ServerInterceptorAdapter.cpp:
        * tao/PI_Server/ServerRequestInfo.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Servant_Upcall.cpp:
          Layout changes

Wed Feb 21 14:25:05 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connection_Handler.h:
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connection_Handler.cpp:

          Added a new set_dscp_codepoint () method.

Wed Feb 21 14:21:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Bug_1592_Regression/*:
          New test program for bug 1592, not fixed yet.

        * tests/POA/Excessive_Object_Deactivations/Excessive_Object_Deactivations.mpc:
        * tests/POA/MT_Servant_Locator/MT_Servant_Locator.mpc:
          Simplified

Wed Feb 21 14:15:38 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:

          Modified the pre_invoke_remote_request () method
          to add checks specific to the DiffServ policy,
          to add DiffServ codepoints on the server replies.

Wed Feb 21 12:23:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Bug_2511_Regression/server.cpp:
          Return the error count, in case of a failure then the test
          framework will notice this

        * tao/PortableServer/RequestProcessingStrategyServantLocator.cpp:
          Don't call postinvoke when we don't have a servant. Fixes bugzilla
          bugs 2511 and 2658. Thanks to Martin Cornelius
          <Martin dot Cornelius at smiths-heimann dot com> and Milan
          Cvetkovic <milan dot cvetkovic at mpathix dot com> for reporting
          this and providing a test case and a proposed fix.

Wed Feb 21 11:42:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1383_Regression/*:
          Code for this test, not enabled for automatic testing, just
          integrated this and validated that it just works

Wed Feb 21 10:41:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/TypeCode.cpp:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/UIOP_Connection_Handler.cpp:
          Layout changes

Wed Feb 21 08:28:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Any/Recursive/client.cpp:
        * tests/Any/Recursive/Test.idl:
          Added another test case

        * tests/Hello/server.cpp:
          Layout change

Wed Feb 21 08:24:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/tutorials/Quoter/Simple/Server/index.html:
          Updated because of throw spec removal

        * orbsvcs/orbsvcs/Event/EC_Channel_Destroyer.{h,cpp}:
        * orbsvcs/orbsvcs/Event/EC_Proxy_Disconnector.{h,cpp}:
          Use throw()

        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.h:
          Use false instead of 0

        * orbsvcs/orbsvcs/Naming/Bindings_Iterator_T.{h,cpp}:
          Make destroyed a real bool

        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp:
        * orbsvcs/orbsvcs/Naming/Storable.cpp:
        * orbsvcs/orbsvcs/Naming/Storable.h:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Factory.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Transport.cpp:
        * orbsvcs/tests/Security/Secure_Invocation/Foo_i.cpp:
          Layout change

        * orbsvcs/performance-tests/RTEvent/lib/Implicit_Deactivator.cpp
        * orbsvcs/performance-tests/RTEvent/lib/Servant_var.h:
        * orbsvcs/performance-tests/RTEvent/lib/Servant_var.inl:
          Use std::swap instead of ACE_Swap

        * orbsvcs/tests/Security/Secure_Invocation/Secure_Invocation.mpc:
          Simplified this file

Wed Feb 21 08:14:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
          Layout changes

        * Utils/Servant_Var.inl:
          Use std::swap instead of ACE_Swap

Tue Feb 20 20:59:38 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/TAO_Internal.cpp:

          Removed the process directive for Default Network Priority
          Protocols Hooks.

        * tao/DiffServPolicy/DiffServPolicy.cpp:

          Added code to set the name of the DiffServ Network
          Priority Protocols Hooks with the ORB Core. At ORB
          initialization time, the ORB Core will open a service
          configurator based on this name, to set the network
          priority protocols hooks.

        * tao/ORB_Core.cpp:

          Previosuly, during the initializations of the protocols hooks,
          if the protocols hooks turned out to be 0, a initialization
          error was thrown. Removed that, because now the protocols
          hooks could be 0, because we have removed the default
          implementations.

        * tao/DiffServPolicy/DiffServ_Network_Priority_Hook.cpp:

          Check if the returned network priority protocolos hooks
          from the ORB Core is not 0, before using it.

        * tao/Remote_Invocation.cpp:

          Modified the send_message () to check if DiffServ policy is being
          used to set the DiffServ codepoints on the requests and replies.
          This method already has code to check the enable_network_priority
          flag from the RTCORBA library, to set DiffServ codepoints
          on the requests and replies. Now, using DiffServ library always
          takes precedence irrespective if whether the application uses
          RTCORBA or not.

Tue Feb 20 20:36:12 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/tao.mpc:

          Removed Default_Network_Priority_Protocols_Hooks.{h,cpp}.

Tue Feb 20 20:28:28 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/Default_Network_Priority_Protocols_Hooks.{cpp,h}:

          Removed. The network_priority_protocols_hooks is no
          longer going to incur virtual call overhead, and instead
          just remains as a pointer, which is 0 or not. Non-zero
          instance means, that the DiffServ library is linked in.

Tue Feb 20 20:10:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Default_Protocols_Hooks.{cpp,h}:
          Removed, instead of just invoking the protocol hooks, just
          check if the protocol_hook pointer is 0 or not. If non zero
          then invoke the method

        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.cpp:
          Added missing include to build with Borland

        * tao/IIOP_Connection_Handler.cpp:
        * tao/ORB_Core.cpp:
        * tao/Remote_Invocation.cpp:
        * tao/RTCORBA/RT_Current.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.cpp:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Connection_Handler.cpp:
        * tao/orbsvcs/orbsvcs/SSLIOP_Connection_Handler.cpp:
          When invoking the protocol hooks, check if we have a valid pointer.
          This increases performance and decreases footprint. Fixes bugzilla
          2823.

        * tao/tao.mpc:
          Removed Default_Protocols_Hooks.{h,cpp}

        * tao/TAO_Internal.cpp:
          Removed default protocol hooks

        * tao/Default_Collocation_Resolver.cpp:
        * tao/Invocation_Adapter.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
          Layout change

Tue Feb 20 18:35:50 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp (ssliop_connect):
          Call remove_reference() on svc_handler so that we don't leak
          handles.  Thanks to Ken Sedgwick <ken+5a4 at bonsai dot com> for
          reporting this and testing the fix.  This fixes bugid 1506.

Tue Feb 20 17:56:25 UTC 2007  Douglas C. Schmidt  <schmidt@dre.vanderbilt.edu>

        * COPYING: Clarified how the COPYING file need to be included with
          any code released.  Thanks to Scott Mark <sjm at pobox dot com>
          for helping clarify this.

Tue Feb 20 16:03:13 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/PortableServer/Default_Servant_Dispatcher.cpp:

          Modified the pre_invoke_remote_request () method to do
          some processing, specific to the DiffServ library, to add
          DiffServ codepoints on the replies. The method relegates the
          processing to a network priority hook, defined on the POA,
          and specialized by the DiffServ library.

Tue Feb 20 15:10:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/TypeCode.{h,cpp,inl}:
          Layout changes

Tue Feb 20 13:21:08 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Bug_2800_Regression/NamingTask.cpp:
        * tests/Bug_2809_Regression/server.cpp:

          Deal with conversion from string constant to char*.  Store the
          string constants in a const char* and then use const_cast<> where
          necessary.

Tue Feb 20 06:38:34 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/Connection_Handler.h:
        * tao/Connection_Handler.cpp:

          Added a new set_dscp_codepoint () method with a CORBA::Long
          as an input argument. This function is added as part of the
          DiffServ policy support.

        * tao/IIOP_Connection_Handler.h:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/Strategies/DIOP_Connection_Handler.h:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.h:
        * tao/Strategies/SCIOP_Connection_Handler.cpp:

          Concrete protocol implementations of the above defined method.

Tue Feb 20 05:14:39 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/IOP_IOR.pidl:

          Changed the value of the newly added ServiceID (REP_NWPRIORITY)
          to be among the TAO reserved range.

Mon Feb 19 21:01:10 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy/DiffServPolicy.pidl:

          Changed the PolicyType value to use a value from
          the TAO reserved range.

Mon Feb 19 20:34:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/FTRT_Event_Service/Event_Service/FTRT_Event_Service.mpc:
        * orbsvcs/FTRT_Event_Service/Gateway_Service/FTRTEC_Gateway_Service.mpc:
        * orbsvcs/LifeCycle_Service/LifeCycle_Service.mpc:
        * orbsvcs/FTRT_Event_Service/Factory_Service/FTRTEC_Factory_Service.mpc:
          Added install as base project so that the executables to
          get installed

        * orbsvcs/FTRT_Event_Service/Event_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Factory_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Gateway_Service/Makefile.am:
        * orbsvcs/LifeCycle_Service/Makefile.am:
          Updated because of change above. Fixes bugzilla bug 2813, thanks
          to Thomas Girard <thomas dot g dot girard at free dot fr>
          for reporting this.

Mon Feb 19 19:55:46 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/CDR/allocator.cpp:

          Use a static cast to avoid warnings about converting from
          ACE_hrtime_t to double.

Mon Feb 19 19:44:59 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Bug_1495_Regression/Client_Task.cpp:
        * tests/Bug_1495_Regression/test_i.cpp:
        * tests/Bug_2084_Regression/EventNode.cpp:
        * tests/Bug_2084_Regression/Hello.cpp:

          Use a combination of C-style cast and static_cast<> to avoid
          warnings from gcc in 64-bit mode.

Mon Feb 19 19:00:24 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Crash_On_Write/run_test.pl:

          Extend the client timeout so that very slow machines can complete
          the test.

Mon Feb 19 18:59:01 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy/DiffServ_Network_Priority_Hook.h:

          Fixed the fuzz build errors.

Mon Feb 19 18:48:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Invocation_Adapter.cpp:
        * tao/Profile_Transport_Resolver.cpp:
        * tao/Transport_Connector.cpp:
          Layout changes

Mon Feb 19 18:42:50 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Crash_On_Write/run_test.pl:

          Check for -1 instead of -10 to indicate timeout.

Mon Feb 19 18:41:22 UTC 2007  Carlos O'Ryan  <coryan@atdesk.com>

        * tao/Default_Network_Priority_Protocols_Hooks.cpp:
          Fixed return types in two versions of get_dscp_codepoint().  The
          return type did not match the header file types.

Mon Feb 19 16:37:26 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.cpp:

          Fixed the RTEMS_NO_NETWORK build errors. The errors were in
          throwing exceptions in lines 96 and 102.

Mon Feb 19 14:42:08 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/Network_Priority_Protocols_Hooks.h:
        * tao/Default_Network_Priority_Protocols_Hooks.h:
        * tao/Default_Network_Priority_Protocols_Hooks.cpp:
        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.h:
        * tao/DiffServPolicy/DiffServ_Protocols_Hooks.cpp:

          Modified the signature of get_dscp_codepoint () methods, to get rid
          of the "type qualifier meaningless" errors in most of the TAO
          builds.

Mon Feb 19 14:36:33 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/TAO_Internal.cpp:

          Added a process directive to fix the ORB initialization errors.

Mon Feb 19 12:32:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup.idl:
          Improved doxygen

        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Acceptor.h:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connection_Handler.h:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/IIOP_SSL_Transport.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Accept_Strategy.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ClientCredentials.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current_Impl.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Util.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Util.h:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context_Activator.cpp:
        * orbsvcs/orbsvcs/Shutdown_Utilities.cpp:

          Layout/const changes

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.cpp:
          Fixed compile problems when SSLIOP_DEBUG_PEER_CERTIFICATE is
          enabled

Mon Feb 19 04:42:49 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy/DiffServ_Network_Priority_Hook.cpp:

          Fixed a compilation error.

Fri Feb 16 16:55:51 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/PortableServer/Network_Priority_Hook.h:
        * tao/PortableServer/Network_Priority_Hook.cpp:

          Added a hook in the POA to make a call on the DiffServ library
          to do DiffServ policy related processing on the server side
          of the application. The specialized implementation of the hook
          is provided by the DiffServ library.

        * tao/PortableServer/Root_POA.h:
        * tao/PortableServer/Root_POA.cpp:

          Added code to initialize the above mentioned hook.

          Added get and set methods for the above mentioned hook.

          Added a get method to return the POA's cached policies.

        * tao/PortableServer/POA_Cached_Policies.h:
        * tao/PortableServer/POA_Cached_Policies.cpp:
        * tao/PortableServer/POA_Cached_Policies.inl:

          Added get and set methods for returning DiffServ policy related
          artifacts. These methods are used in the server side for setting
          the DiffServ codepoints on the replies.

Fri Feb 16 16:51:38 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/ORB_Core.h:
        * tao/ORB_Core.cpp:
        * tao/ORB_Core.inl:

          Since a new type of protocols hooks was added as part of the
          TAO DiffServ policy support, the ORB core files are modified to
          instantiate the new type of protocols hooks, if the application
          uses the DiffServ library.

          Get and set methods are added to return the new type of protocols
          hooks.

          Modified the service_context_list () to add DiffServ policy specific
          service context entry, just like how the method adds RTCORBA policy
          specific service context entry.

Fri Feb 16 16:50:00 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/tao.mpc:

          Added the new type of protocols hooks files for compilation.

        * tao/DiffServPolicy.mpc:

          Added a mpc file for compiling the DiffServ library.

Fri Feb 16 16:45:30 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/Network_Priority_Protocols_Hooks.h:
        * tao/Network_Priority_Protocols_Hooks.cpp:

          Added a new type of protocols hook, that is used by the ORB core
          to add in code to do DiffServ policy specific processing. If an
          application uses the DiffServ library, then the library provides
          the specialized hook that needs to be used for adding DiffServ
          codepoints to requests/replies.

        * tao/Default_Network_Priority_Protocols_Hooks.h:
        * tao/Default_Network_Priority_Protocols_Hooks.cpp:

          The default implementations of the above mentioned new type
          of protocols hooks. This implementation is used, in case the
          application does not use the DiffServ library.

Fri Feb 16 16:43:10 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/orbconf.h:

          Added new TAO_Cached_Policy_Type definitions for the
          newly added DiffServ policies.

        * tao/IOP_IOR.pidl:

          Added a new service context ServiceId for the DiffServ policy
          support.

Fri Feb 16 16:35:43 UTC 2007  Jaiganesh B  <jai.dre.vanderbilt.edu>

        * tao/DiffServPolicy:

          Checked in TAO support to specify client-side and server-side
          policies to add DiffServ codepoints to requests and replies. This
          support is different from the current RTCORBA support for adding
          DiffServ codepoints, where there is a one-to-one mapping between
          the RTCORBA thread priorities and the DiffServ codepoints that
          are added to the IP packets. This support defines policies on the
          client as well as the server side, to specify the DiffServ codepoints
          that need to be added to the requests/replies. And the policy
          can be overridden at the ORB, THREAD, and the OBJECT levels.

Thu Feb 15 15:22:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/RT_ORB.h:
        * tao/RTPortableServer/RT_Acceptor_Filters.cpp:
        * tao/RTPortableServer/RT_Collocation_Resolver.cpp:
        * tao/RTPortableServer/RT_Object_Adapter_Factory.cpp:
        * tao/RTPortableServer/RT_POA.cpp:
        * tao/RTPortableServer/RT_POA.inl:
        * tao/RTPortableServer/RT_Policy_Validator.cpp:
        * tao/RTPortableServer/RT_Policy_Validator.h:
          Code layout changes and cleanup now we zapped the emulated exception
          macros

Thu Feb 15 13:23:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Base_Transport_Property.h:
        * tao/ORB.cpp:
        * tao/PI/ClientRequestDetails.h:
        * tao/PI/ClientRequestInfo.cpp:
        * tao/PI/ClientRequestInfo.h:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.h:
        * tao/PI/Interceptor_List_T.cpp:
        * tao/PI/Interceptor_List_T.h:
        * tao/PI/ORBInitializer_Registry_Impl.cpp:
        * tao/PI/ORBInitializer_Registry_Impl.h:
        * tao/PI/ORBInitInfo.cpp:
        * tao/PI/ORBInitInfo.h:
        * tao/PI/PI_ORBInitializer.h:
        * tao/PI/PI_PolicyFactory.h:
        * tao/PI/PICurrent.cpp:
        * tao/PI/PICurrent.h:
        * tao/PI/PICurrent_Impl.h:
        * tao/PI/PICurrent_Loader.cpp:
        * tao/PI/PICurrent_Loader.h:
        * tao/PI/PolicyFactory_Registry.cpp:
        * tao/PI/PolicyFactory_Registry.h:
        * tao/PI/ProcessingModePolicy.h:
        * tao/PI/RequestInfo_Util.cpp:
        * tao/PI/RequestInfo_Util.h:
        * tao/PortableServer/DII_Arguments_Converter.h:
          Layout changes

        * tao/Asynch_Reply_Dispatcher_Base.h
        * tao/Asynch_Reply_Dispatcher_Base.inl
        * tao/Utils/Implicit_Deactivator.cpp:
        * tao/Utils/Implicit_Deactivator.h:
        * tao/Utils/ORB_Destroyer.cpp:
        * tao/Utils/ORB_Destroyer.h:
        * tao/Utils/PolicyList_Destroyer.cpp:
        * tao/Utils/PolicyList_Destroyer.h:
        * tao/Utils/Servant_Var.h:
        * tao/Utils/Servant_Var.inl:
        * tao/Messaging/AMH_Response_Handler.cpp:
        * tao/Messaging/AMH_Response_Handler.h:
          Use empty throw()

Thu Feb 15 13:09:42 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * examples/CSD_Strategy/ThreadPool3/CSD_Test_ThreadPool3.mpc:
        * examples/CSD_Strategy/ThreadPool6/CSD_Test_ThreadPool6.mpc:
        * examples/Simple/bank/bank.mpc:
        * examples/ior_corbaloc/ior_corbaloc.mpc:
        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly.mpc:
        * orbsvcs/tests/Bug_2615_Regression/Bug_2615_Regression.mpc:
        * orbsvcs/tests/Bug_2709_Regression/Bug_2709_Regression.mpc:
        * orbsvcs/tests/Notify/Discarding/Discarding.mpc:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Seq_Multi_ETCL_Filter.mpc:
        * performance-tests/Callback/Callback.mpc:
        * performance-tests/Memory/Single_Threaded/Memory_Growth.mpc:
        * performance-tests/POA/Implicit_Activation/Implicit_Activation.mpc:
        * performance-tests/Pluggable/Pluggable.mpc:
        * performance-tests/Sequence_Latency/Deferred/Deferred.mpc:
        * tests/ICMG_Any_Bug/Hello.mpc:
        * tests/OctetSeq/OctetSeq.mpc:

          Re-arranged the generated source files so that they are at the
          beginning (like MPC would do if it were automatically generating
          the list of source files).  This is required for template
          instantiation to work properly for Visual Age 6.0.

        * tests/Bug_1676_Regression/client.cpp:
        * tests/MT_BiDir/client.cpp:

          Changed "catched" to "caught".

Thu Feb 15 07:46:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2560_Regression/server.cpp:
          Added missing include

Wed Feb 14 19:20:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2809_Regression/*:
          New regression test for bug 2809, thanks to Martin Corino
          for creating the regression

Wed Feb 14 15:19:10 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Bug_2137_Regression/client.cpp:
        * orbsvcs/tests/Bug_2247_Regression/Manager.cpp:
        * orbsvcs/tests/Bug_2248_Regression/client.cpp:
        * orbsvcs/tests/Bug_2285_Regression/client.cpp:
        * orbsvcs/tests/Bug_2285_Regression/client2.cpp:
        * orbsvcs/tests/Bug_2287_Regression/client.cpp:
        * orbsvcs/tests/Bug_2615_Regression/client.cpp:
        * orbsvcs/tests/Bug_2709_Regression/client.cpp:
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/client.cpp:
        * orbsvcs/tests/FaultTolerance/IOGR/Manager.cpp:

          Include tao/PI/PI.h to ensure PI library is actually linked into
          the executable when statically linking on MacOS X Panther.

Wed Feb 14 11:18:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Advanced/ch_8_and_10/client.cpp:
          Layout changes

        * examples/Advanced/ch_8_and_10/server.cpp:
          Removed workaround for bug 2611, with the recent changes to the
          string sequences this is not needed anymore

Wed Feb 14 10:04:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Bug_2800_Regression/*:
          Extended this test so that it runs automatically and does a
          clean shutdown

Tue Feb 13 19:49:59 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * TAO_IDL/be/be_global.cpp:
          Added -Gdcps to the usage output

Tue Feb 13 19:50:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Any/Recursive/Test.idl:
        * tests/Any/Recursive/client.cpp:
          Integrated regression of bug 2804, thanks to Tommy Person
          <tpe at ida dot liu dot se> for creating the test. No fix
          yet for this problem.

Tue Feb 13 19:44:49 UTC 2007  Iliyan Jeliazkov  <iliyan@ociweb.com>

        * orbsvcs/ImplRepo_Service/Locator_XMLHandler.cpp:

          Removing a stray ';'

Tue Feb 13 14:21:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/CodeSets/simple/CodeSets_simple.mpc:
        * tests/Explicit_Event_Loop/Explicit_Event_Loop.mpc:
        * tests/Exposed_Policies/Exposed_Policies.mpc:
        * tests/Faults/Faults.mpc:
        * tests/File_IO/File_IO.mpc:
        * tests/Forwarding/Forwarding.mpc:
        * tests/InterOp-Naming/InterOp-Naming.mpc:
        * tests/IPV6/IPV6_Hello.mpc:
        * tests/Leader_Followers/Leader_Followers.mpc:
        * tests/LongUpcalls/LongUpcalls.mpc:
        * tests/MProfile/MProfile.mpc:
        * tests/MProfile_Connection_Timeout/MProfile_Connection_Timeout.mpc:
        * tests/MProfile_Forwarding/MProfile_Forwarding.mpc:
        * tests/MT_Client/MT_Client.mpc:
        * tests/MT_Server/MT_Server.mpc:
        * tests/MT_Timeout/MT_Timeout.mpc:
        * tests/Multiple/Multiple.mpc:
        * tests/Multiple_Inheritance/Multiple_Inheritance.mpc:
        * tests/Muxed_GIOP_Versions/Muxed_GIOP_Versions.mpc:
        * tests/Muxing/Muxing.mpc:
        * tests/Native_Exceptions/Native_Exceptions.mpc:
        * tests/Nested_Event_Loop/Nested_Event_Loop.mpc:
        * tests/Nested_Upcall_Crash/Nested_Upcall_Crash.mpc:
        * tests/No_Server_MT_Connect_Test/No_Server_Connect_Test.mpc:
        * tests/Objref_Sequence_Test/Objref_Sequence_Test.mpc:
        * tests/OBV/Any/OBV_Any.mpc:
        * tests/OBV/Factory/OBV_Factory.mpc:
        * tests/OBV/Forward/OBV_Forward.mpc:
        * tests/OBV/TC_Alignment/OBV_TC_Alignment.mpc:
        * tests/OBV/Truncatable/OBV_Truncatable.mpc:
        * tests/OBV/ValueBox/valuebox.mpc:
        * tests/Ondemand_Write/Ondemand_Write.mpc:
        * tests/Oneway_Buffering/Oneway_Buffering.mpc:
        * tests/Oneways_Invoking_Twoways/Oneways_Invoking_Twoways.mpc:
        * tests/Parallel_Connect_Strategy/Parallel_Connect_Strategy.mpc:
        * tests/POA/EndpointPolicy/EndpointPolicy.mpc:
        * tests/Portable_Interceptors/Benchmark/PI_Benchmark.mpc:
        * tests/Portable_Interceptors/Bug_1559/Bug_1559.mpc:
        * tests/Portable_Interceptors/Bug_2510_Regression/Bug_2510_Regression.mpc:
        * tests/Portable_Interceptors/Dynamic/PI_Dynamic.mpc:
        * tests/Portable_Interceptors/ForwardRequest/PI_ForwardRequest.mpc:
        * tests/Portable_Interceptors/IORInterceptor/PI_IORInterceptor.mpc:
        * tests/Portable_Interceptors/PICurrent/PI_PICurrent.mpc:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/PI_Request_Interceptor_Flow.mpc:
        * tests/Portable_Interceptors/Service_Context_Manipulation/PI_Svc_Context_Manip.mpc:
        * tests/Reliable_Oneways/Reliable_Oneways.mpc:
        * tests/RTCORBA/Banded_Connections/RTCORBA_Banded_Conn.mpc:
        * tests/RTCORBA/Client_Propagated/RTCORBA_Client_Propagated.mpc:
        * tests/RTCORBA/Client_Protocol/RTCORBA_Client_Protocol.mpc:
        * tests/RTCORBA/Dynamic_Thread_Pool/RT_Dynamic_Thread_Pool.mpc:
        * tests/RTCORBA/Explicit_Binding/RTCORBA_Explicit_Binding.mpc:
        * tests/RTCORBA/Linear_Priority/RTCORBA_Linear_Priority.mpc:
        * tests/RTCORBA/MT_Client_Protocol_Priority/RTCORBA_MT_Client_Proto_Prio.mpc:
        * tests/RTCORBA/Persistent_IOR/RTCORBA_Persistent_IOR.mpc:
        * tests/RTCORBA/Policy_Combinations/RTCORBA_Policy_Combinations.mpc:
        * tests/RTCORBA/Priority_Inversion_With_Bands/Priority_Inversion_With_Bands.mpc:
        * tests/RTCORBA/Private_Connection/RTCORBA_Private_Connection.mpc:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/PaE_Selection.mpc:
        * tests/RTCORBA/Server_Declared/RTCORBA_Server_Declared.mpc:
        * tests/RTCORBA/Server_Protocol/RTCORBA_Server_Protocol.mpc:
        * tests/RTCORBA/Thread_Pool/RTCORBA_Thread_Pool.mpc:
        * tests/RTScheduling/Scheduling_Interceptor/Scheduler_Interceptor.mpc:
        * tests/Server_Connection_Purging/Server_Connection_Purging.mpc:
        * tests/Server_Leaks/Server_Leaks.mpc:
        * tests/Single_Read/Single_Read.mpc:
        * tests/Smart_Proxies/Benchmark/SP_Benchmark.mpc:
        * tests/Smart_Proxies/dtor/dtor.mpc:
        * tests/Smart_Proxies/On_Demand/SP_On_Demand.mpc:
        * tests/Smart_Proxies/Policy/SP_Policy.mpc:
        * tests/Smart_Proxies/Smart_Proxies.mpc:
        * tests/Stack_Recursion/Stack_Recursion.mpc:
        * tests/Strategies/Strategies.mpc:
        * tests/Timed_Buffered_Oneways/Timed_Buffered_Oneways.mpc:
        * tests/Two_Objects/Two_Objects.mpc:
        * tests/Typedef_String_Array/typedef_string_array.mpc:
          Simplified these mpc files, these all have a custom idl project
          so the client and server can both have an after on this idl
          project, the client doesn't need an after on the server

Tue Feb 13 14:09:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/ImplRepo_Service/Locator_XMLHandler.cpp:
          Fixed compile error

Tue Feb 13 14:08:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/ami_test_i.cpp:
          Fixed warning in gcc builds

Tue Feb 13 12:59:12 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Portable_Interceptors/AdvSlotExt/AdvSlotExt.mpc:

          Re-arranged the generated source files so that they are at the
          beginning (like MPC would do if it were automatically generating
          the list of source files).  This is required for template
          instantiation to work properly for Visual Age 6.0.

        * tests/Server_Connection_Purging/client.cpp:

          Decreased the number of connections from 80 to 55 to support
          platforms with limited resources.

Tue Feb 13 08:10:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/AMI/AMI.mpc:
        * tests/AMI/ami_test_i.cpp:
        * tests/AMI/ami_test_i.h:
        * tests/AMI/client.cpp:
        * tests/AMI/run_test.pl:
        * tests/AMI/simple_client.cpp:
          Extended this test to detect argument corruption when using AMI
          collocated. This bug is not fixed, just adding a new regression

Tue Feb 13 07:41:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Metrics.idl
        * orbsvcs/orbsvcs/Metrics/*:
          Removed, wasn't maintained for years

Mon Feb 12 20:15:22 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:

          Trying to fix a compiler warning for VxWorks5.5.1_x86_GCC2.96_Exceptions
          build on DOC group scoreboard.

Mon Feb 12 19:51:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
        * orbsvcs/orbsvcs/AV/Endpoint_Strategy.cpp:
        * orbsvcs/orbsvcs/AV/QoS_UDP.h:
        * orbsvcs/orbsvcs/Channel_Clients_T.h:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSet.cpp:
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.h:
        * orbsvcs/orbsvcs/IFRService/AbstractInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/AliasDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ArrayDef_i.h:
        * orbsvcs/orbsvcs/IFRService/AttributeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ComponentContainer_i.h:
        * orbsvcs/orbsvcs/IFRService/ComponentDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ComponentModuleDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ComponentRepository_i.h:
        * orbsvcs/orbsvcs/IFRService/concrete_classes.h:
        * orbsvcs/orbsvcs/IFRService/ConstantDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ConsumesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/Contained_i.h:
        * orbsvcs/orbsvcs/IFRService/Container_i.h:
        * orbsvcs/orbsvcs/IFRService/EmitsDef_i.h:
        * orbsvcs/orbsvcs/IFRService/EnumDef_i.h:
        * orbsvcs/orbsvcs/IFRService/EventDef_i.h:
        * orbsvcs/orbsvcs/IFRService/EventPortDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExceptionDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtAbstractInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtAttributeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtLocalInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.h:
        * orbsvcs/orbsvcs/IFRService/FactoryDef_i.h:
        * orbsvcs/orbsvcs/IFRService/FinderDef_i.h:
        * orbsvcs/orbsvcs/IFRService/FixedDef_i.h:
        * orbsvcs/orbsvcs/IFRService/HomeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/IDLType_i.h:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.h:
        * orbsvcs/orbsvcs/IFRService/InterfaceAttrExtension_i.h:
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/IRObject_i.h:
        * orbsvcs/orbsvcs/IFRService/LocalInterfaceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ModuleDef_i.h:
        * orbsvcs/orbsvcs/IFRService/NativeDef_i.h:
        * orbsvcs/orbsvcs/IFRService/OperationDef_i.h:
        * orbsvcs/orbsvcs/IFRService/Options.h:
        * orbsvcs/orbsvcs/IFRService/PrimitiveDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ProvidesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/PublishesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/RecursDef_i.h:
        * orbsvcs/orbsvcs/IFRService/Repository_i.h:
        * orbsvcs/orbsvcs/IFRService/SequenceDef_i.h:
        * orbsvcs/orbsvcs/IFRService/StringDef_i.h:
        * orbsvcs/orbsvcs/IFRService/StructDef_i.h:
        * orbsvcs/orbsvcs/IFRService/TypedefDef_i.h:
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.h:
        * orbsvcs/orbsvcs/IFRService/UsesDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ValueBoxDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.h:
        * orbsvcs/orbsvcs/IFRService/ValueMemberDef_i.h:
        * orbsvcs/orbsvcs/IFRService/WstringDef_i.h:
        * orbsvcs/orbsvcs/IOR_Multicast.h:
        * orbsvcs/orbsvcs/Naming/Entries.cpp:
        * orbsvcs/orbsvcs/Naming/Hash_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Service_Container.cpp:
        * orbsvcs/orbsvcs/Naming/Persistent_Entries.cpp:
        * orbsvcs/orbsvcs/Naming/Storable.cpp:
        * orbsvcs/orbsvcs/Naming/Storable.inl:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context_Activator.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context_Activator.h:
        * orbsvcs/orbsvcs/Naming/Transient_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.cpp:
        * orbsvcs/orbsvcs/Runtime_Scheduler.h:
        * orbsvcs/orbsvcs/Sched/DynSched.cpp:
        * orbsvcs/orbsvcs/Sched/DynSched.h:
        * orbsvcs/orbsvcs/Sched/DynSched.inl:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler.h:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.h:
        * orbsvcs/orbsvcs/Sched/SchedEntry.cpp:
        * orbsvcs/orbsvcs/Sched/SchedEntry.h:
        * orbsvcs/orbsvcs/Sched/SchedEntry.inl:
        * orbsvcs/orbsvcs/Sched/Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Scheduler.h:
        * orbsvcs/orbsvcs/Sched/Scheduler_Generic.cpp:
        * orbsvcs/orbsvcs/Sched/Scheduler_Generic.h:
        * orbsvcs/orbsvcs/Sched/Strategy_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Strategy_Scheduler.h:
        * orbsvcs/orbsvcs/Scheduler_Utilities.h:
        * orbsvcs/orbsvcs/Security/Security_ORBInitializer.h:
          Converted to doxygen style

        * orbsvcs/orbsvcs/ESF/ESF_Copy_On_Write.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Changes.cpp:
        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Admin.h:
        * orbsvcs/orbsvcs/ESF/ESF_RefCount_Guard.inl:
          Use prefix increment/decrement

        * orbsvcs/orbsvcs/ESF/ESF_Delayed_Command.cpp:
          Zapped environment macro code

Mon Feb 12 15:32:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * NEWS:

          Fixed the TAO 1.5.7 version number.

        * examples/Advanced/ch_3/Advanced_ch_3.mpc:
        * examples/Buffered_AMI/Buffered_AMI.mpc:
        * examples/Callback_Quoter/Callback_Quoter.mpc:
        * examples/Content_Server/AMI_Iterator/AMI_Iterator.mpc:
        * examples/Kokyu_dsrt_schedulers/fp_example/fp_example.mpc:
        * examples/OBV/Typed_Events/Typed_Events.mpc:
        * examples/Quoter/Quoter.mpc:
        * examples/Simple/bank/bank.mpc:
        * examples/Simple/chat/chat.mpc:
        * examples/Simple/grid/grid.mpc:
        * examples/ior_corbaloc/ior_corbaloc.mpc:
        * orbsvcs/examples/Security/Send_File/Security_Send_File.mpc:
        * orbsvcs/tests/Bug_2285_Regression/Bug_2285_Regression.mpc:
        * orbsvcs/tests/Bug_2316_Regression/Bug_2316_Regression.mpc:
        * orbsvcs/tests/Bug_2615_Regression/Bug_2615_Regression.mpc:
        * orbsvcs/tests/HTIOP/AMI/HTIOP_AMI.mpc:
        * orbsvcs/tests/HTIOP/Hello/HTIOP_Hello.mpc:
        * orbsvcs/tests/ImplRepo/Bug_2604_Regression/Bug_2604.mpc:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Application_Controlled.mpc:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Infrastructure_Controlled.mpc:
        * orbsvcs/tests/Notify/Discarding/Discarding.mpc:
        * orbsvcs/tests/Notify/MT_Dispatching/MT_Dispatching.mpc:
        * orbsvcs/tests/Notify/Ordering/Ordering.mpc:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Seq_Multi_ETCL_Filter.mpc:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Seq_Multi_Filter.mpc:
        * orbsvcs/tests/Notify/Structured_Filter/Struct_Filter.mpc:
        * performance-tests/Cubit/TAO/IDL_Cubit/IDL_Cubit.mpc:
        * performance-tests/Latency/AMH_Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Latency/DII/DII.mpc:
        * performance-tests/Memory/Single_Threaded/Memory_Growth.mpc:
        * performance-tests/POA/Implicit_Activation/Implicit_Activation.mpc:
        * performance-tests/Pluggable/Pluggable.mpc:
        * performance-tests/Protocols/Protocols.mpc:
        * performance-tests/RTCorba/Thread_Pool/Thread_Pool.mpc:
        * performance-tests/Sequence_Latency/DII/DII.mpc:
        * performance-tests/Sequence_Latency/Deferred/Deferred.mpc:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Thread_Per_Conn.mpc:
        * performance-tests/Sequence_Latency/Thread_Pool/Thread_Pool.mpc:
        * performance-tests/Throughput/Throughput.mpc:
        * tests/BiDirectional/BiDirectional.mpc:
        * tests/BiDirectional_DelayedUpcall/BiDir_DelayedUpcall.mpc:
        * tests/BiDirectional_NestedUpcall/BiDir_NestedUpcall.mpc:
        * tests/Big_Oneways/Big_Oneways.mpc:
        * tests/Big_Twoways/Big_Twoways.mpc:
        * tests/Bug_1020_Regression/Bug_1020_Regression.mpc:
        * tests/Bug_1270_Regression/Bug_1270_Regression.mpc:
        * tests/Bug_1361_Regression/Bug_1361_Regression.mpc:
        * tests/Bug_2188_Regression/broken.mpc:
        * tests/Bug_2417_Regression/Bug_2417_Regression.mpc:
        * tests/Client_Leaks/Client_Leaks.mpc:
        * tests/File_IO/File_IO.mpc:
        * tests/Hang_Shutdown/Hang.mpc:
        * tests/ICMG_Any_Bug/Hello.mpc:
        * tests/NestedUpcall/Simple/Simple.mpc:
        * tests/OBV/Any/OBV_Any.mpc:
        * tests/OBV/Simple/OBV_Simple.mpc:
        * tests/OctetSeq/OctetSeq.mpc:
        * tests/Oneway_Timeouts/test.mpc:
        * tests/POA/Persistent_ID/Persistent_ID.mpc:
        * tests/Param_Test/Param_Test.mpc:
        * tests/Portable_Interceptors/AMI/PI_AMI.mpc:
        * tests/Portable_Interceptors/AdvSlot/AdvSlot.mpc:
        * tests/RTCORBA/Client_Propagated/RTCORBA_Client_Propagated.mpc:
        * tests/Timeout/Timeout.mpc:
        * tests/TransportCurrent/IIOP/IIOP.mpc:
        * tests/Two_Objects/Two_Objects.mpc:
        * tests/UNKNOWN_Exception/UNKNOWN_Exception.mpc:

          Re-arranged the generated source files so that they are at the
          beginning (like MPC would do if it were automatically generating
          the list of source files).  This is required for template
          instantiation to work properly for Visual Age 6.0.

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Set_Update_Interceptor.cpp:

          Added include files to get AnyTypeCode definitions.

        * tao/Fixed_Array_Argument_T.inl:

          Fixed a typo of a type name in a Visual Age 6.0 specific section
          of a C-style cast.

Mon Feb 12 14:48:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Acceptor_Impl.cpp
        * tao/AnyTypeCode/append.cpp
        * tao/AnyTypeCode/skip.cpp
        * tao/Codeset/Codeset_Descriptor.cpp
        * tao/Codeset/Codeset_Translator_Factory.cpp
        * tao/Codeset/Codeset_Translator_Factory_T.cpp
        * tao/Codeset/UTF16_BOM_Factory.cpp
        * tao/Codeset/UTF16_BOM_Factory.h
        * tao/Codeset/UTF8_Latin1_Translator.cpp
        * tao/Codeset_Translator_Base.cpp
        * tao/DynamicInterface/Dynamic_Adapter_Impl.h
        * tao/DynamicInterface/Dynamic_Implementation.h
        * tao/DynamicInterface/ExceptionList.h
        * tao/DynamicInterface/Server_Request.h
        * tao/IORManipulation/IORManip_Loader.h
        * tao/IORManipulation/IORManipulation.h
        * tao/RTCORBA/Linear_Network_Priority_Mapping.h
        * tao/RTCORBA/Linear_Priority_Mapping.h
        * tao/RTCORBA/Multi_Priority_Mapping.h
        * tao/RTPortableServer/RTPortableServer.cpp
        * tao/Strategies/UIOP_Factory.h
        * tao/Strategies/UIOP_Lite_Factory.h
        * tao/TypeCodeFactory/TypeCodeFactory_Loader.cpp
          Converted to doxygen style

Mon Feb 12 13:42:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * interop-tests/*.{h,cpp}:
          Removed ACE_THROW_SPEC, layout changes, reduced includes

Mon Feb 12 12:22:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/*.{h,cpp,inl}:
          Removed ACE_THROW_SPEC, layout changes, reduced includes

Mon Feb 12 11:40:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/*.{h,cpp,inl}:
          Removed ACE_THROW_SPEC, layout changes, reduced includes

        * tests/*.mpc:
          Simplified several mpc files

Mon Feb 12 10:53:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/*.{h,cpp,inl}:

        * MPC/config/naming_serv.mpb:
        * orbsvcs/orbsvcs/CosNaming_Serv.mpc:
          Removed the avoids ace_for_tao, the naming service will build
          fine in this configuration

Mon Feb 12 07:27:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bounded_Array_Sequence_T.h:
        * tao/Unbounded_Array_Sequence_T.h:
          Removed check for nill sequence, is done at a different place in TAO
          already and resolves the compile errors on the scoreboard

        * orbsvcs/orbsvcs/*.{h,cpp,inl}:
          Removed ACE_THROW_SPEC, layout changes, reduced includes

Sun Feb 11 18:58:14 2007  Martin Corino  <mcorino@remedy.nl>

        * tao/DynamicAny/DynUnion_i.cpp:

          (Hopefully) Last change to handle inconsistency between statically declared (IDL
          compiler) union typecodes and dynamically declared typecodes where
          the discriminator type is an enum.

Sun Feb 11 12:38:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/*.{h,cpp,inl}:
          Removed ACE_THROW_SPEC, layout changes, reduced includes

Fri Feb  9 16:45:45 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * MPC/config/portableserver.mpb:

          The portableserver base project now inherits from core_anytypecode
          instead of anytypecode.  This is to prevent the situation where
          inheriting from from portablserver causes changes to the IDL compiler
          options, specifically inclusion of support for Anys and Typecodes.
          User projects that inherit from portableserver need to also inherit
          from anytypecode to get the options that generate Anys and Typecodes
          passed to the IDL compiler.  The assumption is that a significant
          number of projects inhert from portableserver yet have no interest in
          the added footprint of Any and Typecode support in generated code.

Thu Feb  8 19:21:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/compiler.html:
          Removed documentation for -Ge 2, that has been removed

        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_visitor_component/component_sh.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/strategized_proxy_broker_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_sh.cpp:
        * TAO_IDL/be/be_visitor_operation/arglist.cpp:
        * TAO_IDL/be/be_visitor_operation/direct_proxy_impl_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be/be_visitor_operation/proxy_impl_xh.cpp:
        * TAO_IDL/be/be_visitor_valuetype/arglist.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_init_arglist_ch.cpp:
        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/be_include/be_interface.h:
        * TAO_IDL/be_include/be_visitor_operation/operation.h:
        * TAO_IDL/be_include/be_visitor_valuetype/valuetype_init_arglist_ch.h:
          Removed generation of ACE_THROW_SPEC

Thu Feb  8 18:42:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Connection_Handler.h:
        * tao/Strategies/COIOP_Connection_Handler.h:
        * tao/Strategies/DIOP_Connection_Handler.h:
        * tao/Strategies/SCIOP_Connection_Handler.h:
        * tao/Strategies/UIOP_Connection_Handler.h:
          Removed not needed forward declaration

        * tao/IIOP_Transport.h:
          Layout change

Thu Feb  8 18:00:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/GIOP_Message_Base.h:
        * tao/IIOP_Connection_Handler.h:
          Layout changes

        * orbsvcs/tests/Bug_2800_Regression/*:
          New regression test for bugzilla bug 2800 created by
          Martin Corino

        * orbsvcs/tests/COIOP_Naming_Test/*:
          New test using COIOP and the naming service together

        * orbsvcs/orbsvcs/Notify/FilterAdmin.cpp:
          Initialise pointer with 0

Thu Feb  8 16:26:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/ExceptionA.h
        * tao/AnyTypeCode/TypeCode.cpp
        * tao/Asynch_Reply_Dispatcher_Base.cpp
        * tao/DynamicInterface/Context.h
        * tao/DynamicInterface/DII_Arguments.cpp
        * tao/DynamicInterface/DII_Invocation.cpp
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp
        * tao/DynamicInterface/DII_Invocation_Adapter.h
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp
        * tao/DynamicInterface/Dynamic_Adapter_Impl.cpp
        * tao/DynamicInterface/Dynamic_Adapter_Impl.h
        * tao/DynamicInterface/Dynamic_Implementation.cpp
        * tao/DynamicInterface/Dynamic_Implementation.h
        * tao/DynamicInterface/ExceptionList.h
        * tao/DynamicInterface/Server_Request.cpp
        * tao/DynamicInterface/Server_Request.h
        * tao/DynamicInterface/Unknown_User_Exception.cpp
        * tao/DynamicInterface/Unknown_User_Exception.h
        * tao/Exception.h
        * tao/GIOP_Message_Base.cpp
        * tao/GIOP_Message_Lite.cpp
        * tao/ImR_Client/ImR_Client.cpp
        * tao/ImR_Client/ServerObject_i.h
        * tao/Invocation_Adapter.cpp
        * tao/Messaging/Asynch_Invocation.cpp
        * tao/Messaging/Asynch_Invocation_Adapter.cpp
        * tao/Messaging/Asynch_Invocation_Adapter.h
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp
        * tao/Messaging/Messaging_Policy_i.cpp
        * tao/Muxed_TMS.cpp
        * tao/ObjRefTemplate/ORT_Adapter_Impl.cpp
        * tao/ORB.cpp
        * tao/PolicyC.cpp
        * tao/RTCORBA/RTCORBAC.cpp
        * tao/SystemException.cpp
        * tao/Tagged_Components.cpp
        * tao/Tagged_Profile.cpp
        * tao/WrongTransactionC.cpp
          Layout changes

Wed Feb  7 23:12:03 UTC 2007  Wallace Zhang  <zhang_w@ociweb.com>

        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.h:
        * orbsvcs/orbsvcs/ETCL/ETCL_Constraint.cpp:

          Changed to use Any_Impl instead of Any to fix memory crash
          problem since Any_Impl is refcounted. Refer to Bug 2798 or
          RT 9552 for more info.

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:

          Repercussion changes are required here.

        * orbsvcs/examples/Notify/Filter/Filter.cpp:
        * orbsvcs/examples/Notify/Filter/Notify_Filter.mpc:

          Added a new case to test IN operator for the ETCL.

        * orbsvcs/examples/Notify/Subscribe/Subscribe.h:
        * orbsvcs/examples/Notify/Subscribe/Subscribe.cpp:

          Fixed an incorrect initialization of a sequence object.  Added
          code to detect consumer receiving not subscribed event.  Thanks
          to Olli Savia <ops at iki dot fi> for reporting this problem and
          helping track down the problem.

Wed Feb  7 20:52:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Naming/Hash_Naming_Context.cpp:
          Throw a cannotproceed exception on any system exception, not just
          timeout exceptions, fixes bugzilla bug 2800

        * orbsvcs/orbsvcs/Naming/Persistent_Context_Index.h:
        * orbsvcs/tests/Bug_1630_Regression/testclient.cpp
        * orbsvcs/tests/Property/client.cpp
        * orbsvcs/tests/Redundant_Naming/client.cpp
        * orbsvcs/tests/RTCosScheduling/client.cpp
        * orbsvcs/tests/RTCosScheduling/server.cpp
          Layout change

Wed Feb  7 20:46:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Collocation_Exception_Test/Client_Task.cpp:
          Also test the minor code of the exception caught

        * tao/POA/Default_Servant/Default_Servant.cpp:
          Layout change

Wed Feb  7 20:16:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/AnyTypeCode/Alias_TypeCode.cpp:
        * tao/AnyTypeCode/Alias_TypeCode_Static.cpp:
        * tao/AnyTypeCode/Alias_TypeCode_Static.h:
        * tao/AnyTypeCode/Any.cpp:
        * tao/Collocated_Invocation.cpp:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/CSD_Framework/CSD_Object_Adapter.cpp:
        * tao/CSD_Framework/CSD_Object_Adapter_Factory.cpp:
        * tao/CSD_Framework/CSD_POA.cpp:
        * tao/CSD_Framework/CSD_POA.h:
        * tao/CSD_Framework/CSD_Strategy_Base.cpp:
        * tao/CSD_Framework/CSD_Strategy_Proxy.inl:
        * tao/EndpointPolicy/IIOPEndpointValue_i.cpp:
        * tao/EndpointPolicy/IIOPEndpointValue_i.h:
        * tao/ORB.cpp:
        * tao/Tagged_Components.cpp:
        * tao/Wait_On_Leader_Follower.h:
          Layout changes

Wed Feb  7 20:08:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/TransportCurrent/lib/Client_ORBInitializer.cpp:
        * tao/TransportCurrent/lib/Client_ORBInitializer.h:
        * tao/TransportCurrent/lib/Client_Request_Interceptor.cpp:
        * tao/TransportCurrent/lib/Client_Request_Interceptor.h:
        * tao/TransportCurrent/lib/Current_Test_Impl.h:
        * tao/TransportCurrent/lib/Server_ORBInitializer.cpp:
        * tao/TransportCurrent/lib/Server_ORBInitializer.h:
        * tao/TransportCurrent/lib/Server_Request_Interceptor.cpp:
        * tao/TransportCurrent/lib/Server_Request_Interceptor.h:
          Use ACE_THROW_SPEC then plain throw

Wed Feb  7 15:31:20 UTC 2007  Vadym Ridosh <vridosh@prismtech.com>

        * tao/AnyTypeCode/Any_SystemException.cpp:
          This fixes bug 2774

Tue Feb  6 20:14:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicAny/DynEnum_i.cpp:
        * tao/ORB.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:

          Layout change

        * tao/String_Const_Sequence_Element_T.h:
          Const improvements to improve ownership

Tue Feb  6 19:00:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/String_Alloc.cpp:
          Layout changes

        * tao/String_Sequence_Element_T.h:
          Added missing out/inout/_retn, this fixes bugzilla bug 2795,
          thanks to Frank Pilhofer <fp at mc dot com> for reporting this

        * tests/Bug_2792_Regression/client.cpp:
          Small improvement

        * tests/Bug_2795_Regression/Bug_2795_Regression.mpc:
        * tests/Bug_2795_Regression/client.cpp:
        * tests/Bug_2795_Regression/run_test.pl:
          New test for bug 2795

        * tests/Collocation_Exception_Test/Server_Task.cpp:
          Initialise pointer with 0

        * tests/ORB_Local_Config/Bug_2612/DllOrb.cpp:
          No need to pass 0 orb name

        * tests/UNKNOWN_Exception/server.cpp:
          Layout change

Tue Feb  6 16:33:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Collocated_Invocation.cpp:
          Added a check that we don't rethrow an user exception that is
          not in the signature list, if that is the case we throw
          an unknown. Fixes bugzilla 2064

        * tao/operation_details.cpp
        * tao/operation_details.h
        * tao/operation_details.inl
          Added support to check whether an exception is in the list of
          exceptions for this operation

        * tao/Invocation_Base.cpp:
          Some more changes related to removing ACE_THROW_SPEC

        * tao/DynamicInterface/DII_Arguments.cpp
        * tao/DynamicInterface/DII_Arguments.inl
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp
        * tao/Exception.h
        * tao/GIOP_Message_Generator_Parser_10.cpp
        * tao/GIOP_Message_State.cpp
        * tao/GIOP_Message_State.inl
        * tao/GIOP_Message_Version.inl
        * tao/Invocation_Endpoint_Selectors.cpp
        * tao/Invocation_Endpoint_Selectors.h
        * tao/IOR_Parser.h
        * tao/IORInterceptor_Adapter.h
        * tao/IORInterceptor_Adapter_Factory.h
        * tao/LocateRequest_Invocation.cpp
        * tao/LocateRequest_Invocation_Adapter.cpp
        * tao/MCAST_Parser.cpp
        * tao/Object.cpp
        * tao/Object_Ref_Table.cpp
        * tao/Object_Ref_Table.inl
        * tao/Object_T.cpp
        * tao/ObjectKey_Table.cpp
        * tao/RTScheduling/Request_Interceptor.cpp
        * tao/Strategies/SCIOP_Endpoint.cpp
        * tao/Strategies/SCIOP_Factory.cpp
        * tao/Strategies/SCIOP_Transport.cpp
        * tao/Strategies/SHMIOP_Acceptor.cpp
        * tao/Strategies/SHMIOP_Transport.cpp
        * tao/Strategies/SHMIOP_Transport.h
        * tao/Strategies/UIOP_Transport.cpp
        * tao/TransportCurrent/Current_ORBInitializer.h
        * tao/TransportCurrent/Current_ORBInitializer_Base.h
        * tao/Valuetype/AbstractBase.cpp
        * tao/Valuetype/ValueBase.cpp
        * tao/Valuetype/ValueFactory.cpp
        * tao/Valuetype/ValueFactory_Map.cpp
          Layout changes

Mon Feb  5 23:30:42 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:

          Removed the check which lets the class definition for
          an anonymous sequence be generated only once. If an
          anonymous sequence is shared as the base type of more
          than one typedef (as it is in a comma separated list
          of typedef declarations), it will need to be generated
          once for each typedef, each generated class having the
          name of the typedef identifier. In the case of two or
          more anonymous sequence members of the same base type,
          the generated #ifdef guard for the class will be the
          same in each case, and the C++ preprocessor will pass
          only one.

        * TAO_IDL/ast/ast_decl.cpp(set_name):

          When the scoped name is reset from outside the node,
          the char* members flat_name, full_name and repoID
          are now deleted, zeroed, and eventually recomputed
          (the last happens on demand), similarly to what is
          already done for the other members local_name and
          original_local_name.

        * TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:
        * TAO_IDL/be/be_visitor_field/field_ch.cpp:

          Added check for the context state before generating a
          class declaration for an anonymous sequence member. For
          valuetypes, this should be done only once, even though
          the scope is visited twice more in the corresponding
          OBV_ class, and we can no longer depend on the previous
          check for anonymous sequences to avoid multiple
          generation (see the first item in this entry).

Mon Feb  5 20:46:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orbconf.h:
          Make sure ACE_THROW_SPEC expands to nothing

        * tao/GIOP_Message_Base.cpp:
          Layout change

Mon Feb  5 20:16:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Collocated_Invocation.cpp:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Lite.cpp:
        * tao/Invocation_Base.cpp:
        * tao/Invocation_Base.h:
        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/ORB.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/TAO_Singleton_Manager.cpp:
        * tao/TAO_Singleton_Manager.h:
          Committed on behalf of Ossama Othman. Added needed code to
          work correctly in case of C++ exceptions without ACE_THROW_SPEC
          spefication. To make sure this all works we are changing ACE
          to expand ACE_THROW_SPEC to nothing, when the scoreboard shows
          no problems we will zap ACE_THROW_SPEC from all source code.

Mon Feb  5 06:20:14 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicAny/DynAnyFactory.cpp:
        * tao/DynamicAny/DynArray_i.cpp:
        * tao/DynamicAny/DynCommon.cpp:
          Layout changes

Sun Feb  4 19:57:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Bounded_Basic_String_Sequence_T.h:
        * tao/String_Const_Sequence_Element_T.h:
        * tao/String_Sequence_Element_T.h:
        * tao/Unbounded_Basic_String_Sequence_T.h:
          Fixed bug 2792, thanks to Frank Pilhofer <fp at mc dot com>
          for reporting this

        * tao/Bug_2792_Regression/Bug_2792_Regression.mpc:
        * tao/Bug_2792_Regression/Bug_2792_Regression/client.cpp:
        * tao/Bug_2792_Regression/Bug_2792_Regression/run_test.pl:
          New regression test

Sun Feb  4 18:51:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Object.cpp
        * tao/Object_T.cpp
        * tao/Object_T.h
        * tao/PortableServer/LifespanStrategyFactoryImpl.cpp
        * tao/PortableServer/LifespanStrategyPersistent.cpp
        * tao/PortableServer/LifespanStrategyPersistentFactoryImpl.cpp
        * tao/PortableServer/LifespanStrategyTransientFactoryImpl.cpp
        * tao/PortableServer/Object_Adapter.cpp
        * tao/PortableServer/ORT_Adapter.h
        * tao/PortableServer/POA_Current.cpp
        * tao/PortableServer/POA_Current_Factory.h
        * tao/PortableServer/POA_Current_Impl.cpp
        * tao/PortableServer/POA_Current_Impl.h
        * tao/PortableServer/POA_Guard.cpp
        * tao/PortableServer/POA_Guard.h
        * tao/PortableServer/POA_Policy_Set.cpp
        * tao/PortableServer/POA_Policy_Set.inl
        * tao/PortableServer/POAManager.cpp
        * tao/PortableServer/POAManager.h
        * tao/PortableServer/POAManager.inl
        * tao/PortableServer/POAManagerFactory.cpp
        * tao/PortableServer/POAManagerFactory.h
        * tao/PortableServer/Regular_POA.cpp
        * tao/PortableServer/RequestProcessingStrategy.cpp
        * tao/PortableServer/RequestProcessingStrategyAOMOnly.cpp
        * tao/PortableServer/RequestProcessingStrategyDefaultServant.cpp
        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp
        * tao/PortableServer/RequestProcessingStrategyServantLocator.cpp
        * tao/PortableServer/RequestProcessingStrategyServantLocator.h
        * tao/PortableServer/RequestProcessingStrategyServantLocatorFI.cpp
        * tao/PortableServer/RequestProcessingStrategyServantLocatorFI.h
        * tao/PortableServer/RequestProcessingStrategyServantManager.cpp
        * tao/PortableServer/RequestProcessingStrategyServantManager.h
        * tao/PortableServer/Servant_Base.h
        * tao/PortableServer/Servant_Dispatcher.h
        * tao/PortableServer/Servant_Upcall.cpp
        * tao/PortableServer/ServantRetentionStrategyFactoryImpl.cpp
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp
        * tao/Strategies/advanced_resource.cpp
        * tao/Strategies/COIOP_Acceptor.cpp
        * tao/Strategies/COIOP_Connection_Handler.cpp
        * tao/Strategies/DIOP_Endpoint.cpp
        * tao/Strategies/SCIOP_Connector.cpp
        * tao/Strategies/UIOP_Connection_Handler.cpp
        * tao/TkResource/TkResource_Loader.cpp
        * tao/TypeCodeFactory/Recursive_TypeCode.cpp
        * tao/TypeCodeFactory/Recursive_TypeCode.h
        * tao/TypeCodeFactory/Recursive_TypeCode.inl
        * tao/TypeCodeFactory/TypeCodeFactory_Adapter_Impl.cpp
        * tao/TypeCodeFactory/TypeCodeFactory_Loader.cpp
        * tao/ULongLongSeq.pidl
        * tao/ULongSeq.pidl
          Layout and const fixes

Fri Feb  2 18:38:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:
          Fixed problem introduced when removing ACE_THROW_RETURN

Fri Feb  2 16:16:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Content_Server/AMI_Observer/Push_Iterator_Factory_i.cpp:
        * examples/CSD_Strategy/ThreadPool2/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool2/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool3/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool3/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool4/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool5/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool5/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool6/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool6/ServerApp.cpp:
        * examples/CSD_Strategy/ThreadPool/ClientApp.cpp:
        * examples/CSD_Strategy/ThreadPool/ServerApp.cpp:
        * examples/Kokyu_dsrt_schedulers/EDF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduler.cpp:
        * examples/Load_Balancing/Load_Balancer_i.cpp:
        * examples/Load_Balancing_persistent/Load_Balancer_i.cpp:
        * examples/Logging/Logger_i.cpp:
        * examples/Persistent_Grid/Grid_i.cpp:
        * examples/POA/Default_Servant/File_i.cpp:
        * examples/POA/DSI/Database_i.cpp:
        * examples/POA/Forwarding/Servant_Activator.cpp:
        * examples/POA/Loader/Servant_Activator.cpp:
        * examples/POA/Loader/Servant_Locator.cpp:
        * examples/POA/On_Demand_Activation/Servant_Activator.cpp:
        * examples/POA/On_Demand_Activation/Servant_Locator.cpp:
        * examples/POA/On_Demand_Loading/Servant_Activator.cpp:
        * examples/POA/On_Demand_Loading/Servant_Locator.cpp:
        * examples/Quoter/Factory_Finder_i.cpp:
        * examples/Quoter/Generic_Factory_i.cpp:
        * examples/Quoter/Quoter_i.cpp:
        * examples/Simple/bank/AccountManager_i.cpp:
        * examples/Simple/echo/Echo_i.cpp:
        * examples/Simple/grid/Grid_i.cpp:
        * orbsvcs/examples/CosEC/Factory/CosEventChannelFactory_i.cpp:
        * orbsvcs/examples/CosEC/Factory/FactoryClient.cpp:
        * orbsvcs/examples/ImR/Combined_Service/dynserver.cpp:
        * orbsvcs/examples/Log/Event/Event_Consumer.cpp:
        * orbsvcs/examples/Log/Event/Event_Supplier.cpp:
        * orbsvcs/examples/Log/Notify/Notify_Consumer.cpp:
        * orbsvcs/examples/Log/Notify/Notify_Supplier.cpp:
        * orbsvcs/examples/Log/RTEvent/RTEvent_Consumer.cpp:
        * orbsvcs/examples/Log/RTEvent/RTEvent_Supplier.cpp:
        * orbsvcs/Fault_Detector/FT_FaultDetectorFactory_i.cpp:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.cpp:
        * orbsvcs/FTRT_Event_Service/Factory_Service/EventChannelFactory_i.cpp:
        * orbsvcs/ImplRepo_Service/Activator_Loader.cpp:
        * orbsvcs/ImplRepo_Service/Forwarder.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:
        * orbsvcs/ImplRepo_Service/Locator_Loader.cpp:
        * orbsvcs/LifeCycle_Service/Criteria_Evaluator.cpp:
        * orbsvcs/LifeCycle_Service/LifeCycle_Service_i.cpp:
        * orbsvcs/LoadBalancer/LoadMonitor.cpp:
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
        * orbsvcs/orbsvcs/Concurrency/CC_Lock.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPullSupplier.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/CosEvent/CEC_TypedSupplierAdmin.cpp:
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicyFactory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_IOGR_Property.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_PolicyFactory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicy_i.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicyFactory.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ForwardCtrlServerInterceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Event_Channel.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.cpp:
        * orbsvcs/orbsvcs/IFRService/AliasDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Container_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ExtValueDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Loader.cpp:
        * orbsvcs/orbsvcs/IFRService/IFR_Service_Utils.cpp:
        * orbsvcs/orbsvcs/IFRService/InterfaceDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/Repository_i.cpp:
        * orbsvcs/orbsvcs/IFRService/StructDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/UnionDef_i.cpp:
        * orbsvcs/orbsvcs/IFRService/ValueDef_i.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Load_Average_Monitor.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Utilization_Monitor.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LeastLoaded.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMinimum.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_MemberLocator.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_ObjectReferenceFactory.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Random.cpp:
        * orbsvcs/orbsvcs/LoadBalancing/LB_RoundRobin.cpp:
        * orbsvcs/orbsvcs/Log/Hash_Iterator_i.cpp:
        * orbsvcs/orbsvcs/Log/Hash_LogRecordStore.cpp:
        * orbsvcs/orbsvcs/Log/LogActivator.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLog_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Metrics/Metrics_FrameManager_T.inl
        * orbsvcs/orbsvcs/Naming/Bindings_Iterator_T.cpp:
        * orbsvcs/orbsvcs/Naming/Hash_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Client.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Client.h
        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Server.h
        * orbsvcs/orbsvcs/Naming/Persistent_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context_Activator.cpp:
        * orbsvcs/orbsvcs/Naming/Transient_Naming_Context.cpp:
        * orbsvcs/orbsvcs/Notify/Builder.cpp:
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.cpp:
        * orbsvcs/orbsvcs/Notify/ETCL_FilterFactory.cpp:
        * orbsvcs/orbsvcs/Notify/Event_Map_T.cpp:
        * orbsvcs/orbsvcs/Notify/FilterAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/Find_Worker_T.cpp:
        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.cpp:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_GenericFactory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Group_Factory.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_Object_Group.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PG_ObjectGroupManager.cpp:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.cpp:
        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp:
        * orbsvcs/orbsvcs/Security/Security_Current.cpp:
        * orbsvcs/orbsvcs/Security/Security_PolicyFactory.cpp:
        * orbsvcs/orbsvcs/Security/SL3_CredentialsCurator.cpp:
        * orbsvcs/orbsvcs/Security/SL3_PolicyFactory.cpp:
        * orbsvcs/orbsvcs/Security/SL3_SecurityCurrent.cpp:
        * orbsvcs/orbsvcs/Security/SL3_SecurityManager.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ClientCredentials.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connector.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Credentials.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_CredentialsAcquirer.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Current_Impl.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_OwnCredentials.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_TargetCredentials.cpp:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Clerk.cpp:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Server.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Database.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators.cpp:
        * orbsvcs/orbsvcs/Trader/Service_Type_Repository.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.cpp:
        * orbsvcs/tests/Concurrency/CC_command.cpp:
        * orbsvcs/tests/CosEvent/lib/Counting_Supplier.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Supplier.cpp:
        * orbsvcs/tests/Event/Mcast/Common/EC_Wrapper.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicaFactory_i.cpp:
        * orbsvcs/tests/FT_App/FT_TestReplica_i.cpp:
        * orbsvcs/tests/FT_App/StubFaultNotifier.cpp:
        * orbsvcs/tests/HTIOP/AMI/ami_test_i.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Factory.cpp:
        * orbsvcs/tests/Notify/Test_Filter/RT_Test_Filter.cpp:
        * orbsvcs/tests/Notify/Test_Filter/RT_Test_FilterFactory.cpp:
        * performance-tests/CSD_Strategy/TestInf/AppHelper.cpp:
        * performance-tests/CSD_Strategy/TestInf/AppHelper.h
        * tao/Synch_Invocation.cpp:
        * tao/Synch_Queued_Message.cpp:
        * tao/SystemException.cpp:
        * tao/SystemException.h
        * tests/Abstract_Interface/test_i.cpp:
        * tests/AMI/ami_test_i.cpp:
        * tests/Bug_2234_Regression/server.cpp:
        * tests/Client_Leaks/Process_Factory.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/AppHelper.cpp:
        * tests/CSD_Strategy_Tests/TP_Common/AppHelper.h
        * tests/CSD_Strategy_Tests/TP_Foo_C/Foo_C_cust_op3.cpp:
        * tests/File_IO/File_i.cpp:
        * tests/MProfile_Forwarding/Servant_Locator.cpp:
        * tests/MT_BiDir/Sender_i.cpp:
        * tests/OctetSeq/test_i.cpp:
        * tests/Param_Test/param_test_i.cpp:
        * tests/Portable_Interceptors/PolicyFactory/PolicyFactory.cpp:
        * tests/Smart_Proxies/On_Demand/server.cpp:
        * tests/Smart_Proxies/Policy/server.cpp:
        * tests/Smart_Proxies/server.cpp:
        * utils/catior/catior.cpp:
          Layout changes and replaced ACE_THROW_RETURN with throw

Fri Feb  2 14:07:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Acceptor_Registry.cpp:
        * tao/AnyTypeCode/Alias_TypeCode.cpp:
        * tao/AnyTypeCode/Alias_TypeCode_Static.cpp:
        * tao/AnyTypeCode/append.cpp:
        * tao/AnyTypeCode/Enum_TypeCode.cpp:
        * tao/AnyTypeCode/Enum_TypeCode_Static.cpp:
        * tao/AnyTypeCode/NVList.cpp:
        * tao/AnyTypeCode/Objref_TypeCode.cpp:
        * tao/AnyTypeCode/Objref_TypeCode_Static.cpp:
        * tao/AnyTypeCode/skip.cpp:
        * tao/AnyTypeCode/Struct_TypeCode.cpp:
        * tao/AnyTypeCode/Struct_TypeCode_Static.cpp:
        * tao/AnyTypeCode/TypeCode.cpp:
        * tao/AnyTypeCode/Union_TypeCode.cpp:
        * tao/AnyTypeCode/Union_TypeCode_Static.cpp:
        * tao/AnyTypeCode/Value_TypeCode.cpp:
        * tao/AnyTypeCode/Value_TypeCode_Static.cpp:
        * tao/BiDir_GIOP/BiDir_PolicyFactory.cpp:
        * tao/Bounded_Array_Sequence_T.h
        * tao/CodecFactory/CDR_Encaps_Codec.cpp:
        * tao/CodecFactory/CodecFactory_impl.cpp:
        * tao/Codeset/Codeset_Manager_i.cpp:
        * tao/Connector_Registry.cpp:
        * tao/CORBALOC_Parser.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Servant_State_Map.inl:
        * tao/CSD_ThreadPool/CSD_TP_Strategy.cpp:
        * tao/DynamicAny/DynAny_i.cpp:
        * tao/DynamicAny/DynAnyFactory.cpp:
        * tao/DynamicAny/DynAnyUtils_T.cpp:
        * tao/DynamicAny/DynArray_i.cpp:
        * tao/DynamicAny/DynCommon.cpp:
        * tao/DynamicAny/DynEnum_i.cpp:
        * tao/DynamicAny/DynSequence_i.cpp:
        * tao/DynamicAny/DynStruct_i.cpp:
        * tao/DynamicAny/DynUnion_i.cpp:
        * tao/DynamicAny/DynValue_i.cpp:
        * tao/DynamicAny/DynValueBox_i.cpp:
        * tao/DynamicAny/DynValueCommon_i.cpp:
        * tao/DynamicInterface/Context.cpp:
        * tao/DynamicInterface/DII_Invocation.cpp:
        * tao/DynamicInterface/DII_Invocation_Adapter.cpp:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/DynamicInterface/ExceptionList.cpp:
        * tao/EndpointPolicy/EndpointPolicy_Factory.cpp:
        * tao/GIOP_Message_Generator_Parser_10.cpp:
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp:
        * tao/Invocation_Adapter.cpp:
        * tao/IORInterceptor/IORInfo.cpp:
        * tao/IORManipulation/IORManipulation.cpp:
        * tao/IORTable/IOR_Table_Impl.cpp:
        * tao/LocalObject.cpp:
        * tao/LocateRequest_Invocation.cpp:
        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
        * tao/Messaging/Connection_Timeout_Policy_i.cpp:
        * tao/Messaging/Messaging_Policy_i.cpp:
        * tao/Messaging/Messaging_PolicyFactory.cpp:
        * tao/Object.cpp:
        * tao/Object_T.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplate_i.cpp:
        * tao/operation_details.cpp:
        * tao/ORB.cpp:
        * tao/ORB_Core.cpp:
        * tao/PI/ClientRequestInfo.cpp:
        * tao/PI/ORBInitInfo.cpp:
        * tao/PI/PI_PolicyFactory.cpp:
        * tao/PI/PolicyFactory_Registry.cpp:
        * tao/PI/PolicyFactoryC.cpp:
        * tao/PI_Server/PortableServer_PolicyFactory.cpp:
        * tao/PI_Server/ServerRequestInfo.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/POA_Current.cpp:
        * tao/PortableServer/POAManagerFactory.cpp:
        * tao/PortableServer/RequestProcessingStrategyAOMOnly.cpp:
        * tao/PortableServer/RequestProcessingStrategyDefaultServant.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantLocator.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantManager.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/Servant_Upcall.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
        * tao/PortableServer/Var_Size_SArgument_T.cpp:
        * tao/Profile_Transport_Resolver.cpp:
        * tao/Remote_Invocation.cpp:
        * tao/Remote_Object_Proxy_Broker.cpp:
        * tao/RTCORBA/RT_Current.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tao/RTCORBA/RT_Mutex.cpp:
        * tao/RTCORBA/RT_ORB.cpp:
        * tao/RTCORBA/RT_Policy_i.cpp:
        * tao/RTCORBA/RT_PolicyFactory.cpp:
        * tao/RTCORBA/RT_Stub.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/RTPortableServer/RT_POA.cpp:
        * tao/RTPortableServer/RT_Policy_Validator.cpp:
        * tao/RTScheduling/Current.cpp:
        * tao/Service_Callbacks.cpp:
        * tao/Stub.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/Thread_Lane_Resources.cpp:
        * tao/Transport_Connector.cpp:
        * tao/TransportCurrent/IIOP_Current_Impl.cpp:
        * tao/TypeCodeFactory/Recursive_TypeCode.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_Adapter_Impl.cpp:
        * tao/TypeCodeFactory/TypeCodeFactory_i.cpp:
        * tao/Unbounded_Array_Sequence_T.h
        * tao/Utils/RIR_Narrow.cpp:
        * tao/Valuetype/ValueBase.cpp:
          Layout changes and replaced ACE_THROW_RETURN with throw

Fri Feb  2 13:32:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.cpp:
        * tao/ORB.h:
        * tao/ORB_Core.h:
          Removed CORBA::ORB_init method that accepts a CORBA Environment
          argument, we don't support emulated exceptions anymore

        * tao/CORBA_methods.h:
        * tao/Objref_VarOut_T.cpp
        * tao/TypeCodeFactory_Adapter.h:
          Updated includes

        * examples/POA/Default_Servant/client.cpp:
        * examples/POA/Default_Servant/server.cpp:
        * examples/POA/DSI/server.cpp:
        * examples/POA/FindPOA/FindPOA.cpp:
        * examples/POA/Forwarding/client.cpp:
        * examples/POA/On_Demand_Activation/server.cpp:
        * examples/POA/RootPOA/RootPOA.cpp:
        * examples/POA/TIE/client.cpp:
        * examples/POA/TIE/server.cpp:
        * orbsvcs/orbsvcs/Concurrency/Concurrency_Loader.cpp:
        * orbsvcs/tests/Bug_1393_Regression/client.cpp:
        * orbsvcs/tests/ImplRepo/airplane_server_i.cpp:
        * orbsvcs/tests/ImplRepo/nestea_server_i.cpp:
        * orbsvcs/tests/ImplRepo/scale/server_i.cpp:
        * orbsvcs/tests/tests_svc_loader/tests_svc_loader.cpp:
        * performance-tests/Latency/Collocation/Collocated_Test.cpp:
        * tests/Collocation/Collocation_Tester.cpp:
        * tests/File_IO/client.cpp:
        * tests/File_IO/server.cpp:
        * tests/Multiple_Inheritance/client.cpp:
        * tests/POA/Identity/Identity.cpp:
        * tests/Smart_Proxies/Collocation/Coll_Tester.cpp:
          No need anymore to pass an empty string as orbname

Fri Feb  2 13:10:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/orbsvcs/CosNaming.idl:
          Doxygen improvements

        * orbsvcs/orbsvcs/Event/EC_Null_Factory.cpp:
        * orbsvcs/orbsvcs/Event/EC_Basic_Factory.cpp:
        * orbsvcs/orbsvcs/CosNaming.idl
        * orbsvcs/FTRT_Event_Service/Gateway_Service/FTRTEC_Gateway_Service.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/server.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/client.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/client.cpp:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/server.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer_Driver.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Throughput.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier_Driver.cpp:
        * orbsvcs/tests/Event/Basic/Complex.cpp:
        * orbsvcs/tests/Event/Basic/Control.cpp:
        * orbsvcs/tests/Event/Basic/Observer.cpp:
        * orbsvcs/tests/Event/Basic/Disconnect.cpp:
        * orbsvcs/tests/Event/Basic/Wildcard.cpp:
        * orbsvcs/tests/Event/Basic/MT_Disconnect.cpp:
        * orbsvcs/tests/Event/Basic/Bitmask.cpp:
        * orbsvcs/tests/Event/Basic/Gateway.cpp:
        * orbsvcs/tests/Event/Basic/Negation.cpp:
        * orbsvcs/tests/Event/Basic/Atomic_Reconnect.cpp:
        * orbsvcs/tests/Event/Basic/Random.cpp:
        * orbsvcs/tests/Event/Basic/Timeout.cpp:
        * orbsvcs/tests/Event/Performance/Latency.cpp:
        * orbsvcs/tests/Event/Performance/Latency_Server.cpp:
        * orbsvcs/tests/Event/lib/Driver.cpp:
        * orbsvcs/tests/Event/Mcast/Complex/supplier.cpp:
        * orbsvcs/tests/Event/Mcast/Complex/consumer.cpp:
        * orbsvcs/tests/Event/Mcast/Common/Gateway_EC.cpp:
        * orbsvcs/tests/Event/Mcast/Simple/supplier.cpp:
        * orbsvcs/tests/Event/Mcast/Simple/consumer.cpp:
        * orbsvcs/tests/Event/Mcast/Two_Way/application.cpp:
        * orbsvcs/tests/Event/UDP/sender.cpp:
        * orbsvcs/tests/Event/UDP/receiver.cpp:
        * orbsvcs/tests/ImplRepo/NameService/test.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Consumer.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Supplier.cpp:
        * orbsvcs/tests/Bug_2137_Regression/client.cpp:
        * orbsvcs/tests/Bug_2248_Regression/server.cpp:
        * orbsvcs/tests/Bug_1395_Regression/client.cpp:
        * orbsvcs/tests/Bug_1395_Regression/server.cpp:
        * orbsvcs/tests/ior_corbaname/ior_corbaname_client_i.cpp:
        * orbsvcs/tests/ior_corbaname/server.cpp:
        * orbsvcs/tests/ior_corbaname/ior_corbaname_client_i.h
        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp:
        * orbsvcs/tests/Miop/McastHello/client.cpp:
        * orbsvcs/tests/Miop/McastHello/server.cpp:
        * orbsvcs/tests/Security/Crash_Test/server.cpp:
        * orbsvcs/tests/Security/Crash_Test/client.cpp:
        * orbsvcs/tests/Security/Secure_Invocation/server.cpp:
        * orbsvcs/tests/Security/Secure_Invocation/client.cpp:
        * orbsvcs/tests/Security/MT_IIOP_SSL/server.cpp:
        * orbsvcs/tests/Security/MT_IIOP_SSL/client.cpp:
        * orbsvcs/tests/Security/BiDirectional/client.cpp:
        * orbsvcs/tests/Security/BiDirectional/server.cpp:
        * orbsvcs/tests/Security/Big_Request/server.cpp:
        * orbsvcs/tests/Security/MT_SSLIOP/server.cpp:
        * orbsvcs/tests/Security/MT_SSLIOP/client.cpp:
        * orbsvcs/tests/Security/Callback/server.cpp:
        * orbsvcs/tests/Security/Callback/client.cpp:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
        * orbsvcs/tests/HTIOP/Hello/client.cpp:
        * orbsvcs/tests/HTIOP/Hello/server.cpp:
        * orbsvcs/tests/HTIOP/AMI/client.cpp:
        * orbsvcs/tests/HTIOP/AMI/server.cpp:
        * orbsvcs/tests/HTIOP/AMI/simple_client.cpp:
        * orbsvcs/tests/HTIOP/BiDirectional/client.cpp:
        * orbsvcs/tests/HTIOP/BiDirectional/server.cpp:
        * orbsvcs/tests/CosEvent/Basic/Push_Event.cpp:
        * orbsvcs/tests/CosEvent/Basic/Random.cpp:
        * orbsvcs/tests/CosEvent/Basic/Disconnect.cpp:
        * orbsvcs/tests/CosEvent/Basic/MT_Disconnect.cpp:
        * orbsvcs/tests/CosEvent/Basic/Shutdown.cpp:
        * orbsvcs/tests/CosEvent/Basic/Pull_Push_Event.cpp:
        * orbsvcs/tests/Bug_2615_Regression/client.cpp:
        * orbsvcs/tests/Bug_2615_Regression/server.cpp:
        * orbsvcs/tests/Bug_2247_Regression/server.cpp:
        * orbsvcs/tests/Bug_2285_Regression/client2.cpp:
        * orbsvcs/tests/Bug_2285_Regression/server.cpp:
        * orbsvcs/tests/Bug_2285_Regression/client.cpp:
        * orbsvcs/tests/Bug_2285_Regression/server2.cpp:
        * orbsvcs/tests/Bug_2287_Regression/client.cpp:
        * orbsvcs/tests/Bug_2287_Regression/server.cpp:
        * orbsvcs/tests/FaultTolerance/IOGR/server.cpp:
        * orbsvcs/tests/FT_App/FT_ReplicationManagerController.cpp:
        * orbsvcs/tests/EC_MT_Mcast/MCast.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/client.cpp:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/client.cpp:
        * orbsvcs/examples/Log/Event/Event_Supplier.cpp:
        * orbsvcs/examples/Log/Event/Event_Consumer.cpp:
        * orbsvcs/examples/Log/RTEvent/RTEvent_Consumer.cpp:
        * orbsvcs/examples/Log/RTEvent/RTEvent_Supplier.cpp:
        * orbsvcs/examples/Log/Notify/Notify_Consumer.cpp:
        * orbsvcs/examples/Log/Notify/Notify_Supplier.cpp:
        * orbsvcs/examples/Security/SecurityLevel1/client.cpp:
        * orbsvcs/examples/Security/SecurityLevel1/server.cpp:
        * orbsvcs/examples/Security/Send_File/server.cpp:
        * orbsvcs/examples/Security/Send_File/client.cpp:
        * orbsvcs/examples/CosEC/TypedSimple/Supplier.cpp:
        * orbsvcs/examples/CosEC/TypedSimple/Consumer.cpp:
        * orbsvcs/examples/CosEC/Simple/Service.cpp:
        * orbsvcs/examples/CosEC/Simple/Supplier.cpp:
        * orbsvcs/examples/CosEC/Simple/Consumer.cpp:
        * orbsvcs/examples/RtEC/IIOPGateway/Gateway.cpp:
        * orbsvcs/examples/RtEC/IIOPGateway/Supplier.cpp:
        * orbsvcs/examples/RtEC/IIOPGateway/EC.cpp:
        * orbsvcs/examples/RtEC/IIOPGateway/Consumer.cpp:
        * orbsvcs/examples/RtEC/Kokyu/Service.cpp:
        * orbsvcs/examples/RtEC/MCast/MCast.cpp:
        * orbsvcs/examples/RtEC/Simple/Service.cpp:
        * orbsvcs/examples/RtEC/Simple/Supplier.cpp:
        * orbsvcs/examples/RtEC/Simple/Consumer.cpp:
        * orbsvcs/examples/RtEC/Schedule/Service.cpp:
        * orbsvcs/examples/LoadBalancing/server.cpp:
        * orbsvcs/examples/LoadBalancing/client.cpp:
        * performance-tests/Latency/DSI/client.cpp:
        * performance-tests/Latency/DSI/server.cpp:
        * performance-tests/Latency/Deferred/client.cpp:
        * performance-tests/Latency/Deferred/server.cpp:
        * performance-tests/Latency/Thread_Pool/client.cpp:
        * performance-tests/Latency/Thread_Pool/server.cpp:
        * performance-tests/Latency/Single_Threaded/client.cpp:
        * performance-tests/Latency/Single_Threaded/server.cpp:
        * performance-tests/Latency/DII/client.cpp:
        * performance-tests/Latency/DII/server.cpp:
        * performance-tests/Latency/AMH_Single_Threaded/client.cpp:
        * performance-tests/Latency/AMH_Single_Threaded/server.cpp:
        * performance-tests/Latency/AMI/client.cpp:
        * performance-tests/Latency/AMI/server.cpp:
        * performance-tests/Latency/Thread_Per_Connection/client.cpp:
        * performance-tests/Latency/Thread_Per_Connection/server.cpp:
        * performance-tests/POA/Create_Reference/create_reference.cpp:
        * performance-tests/POA/Demux/demux_test_server.cpp:
        * performance-tests/POA/Demux/demux_test_client.cpp:
        * performance-tests/POA/Implicit_Activation/client.cpp:
        * performance-tests/POA/Implicit_Activation/server.cpp:
        * performance-tests/POA/Implicit_Activation/collocated.cpp:
        * performance-tests/Protocols/receiver.cpp:
        * performance-tests/Sequence_Latency/DSI/client.cpp:
        * performance-tests/Sequence_Latency/DSI/server.cpp:
        * performance-tests/Sequence_Latency/Deferred/client.cpp:
        * performance-tests/Sequence_Latency/Deferred/server.cpp:
        * performance-tests/Sequence_Latency/Thread_Pool/client.cpp:
        * performance-tests/Sequence_Latency/Thread_Pool/server.cpp:
        * performance-tests/Sequence_Latency/Single_Threaded/client.cpp:
        * performance-tests/Sequence_Latency/Single_Threaded/server.cpp:
        * performance-tests/Sequence_Latency/DII/client.cpp:
        * performance-tests/Sequence_Latency/DII/server.cpp:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/client.cpp:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/server.cpp:
        * performance-tests/Sequence_Latency/AMI/client.cpp:
        * performance-tests/Sequence_Latency/AMI/server.cpp:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/client.cpp:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/server.cpp:
        * performance-tests/Memory/Single_Threaded/client.cpp:
        * performance-tests/Memory/Single_Threaded/server.cpp:
        * performance-tests/Memory/IORsize/client.cpp:
        * performance-tests/Memory/IORsize/server.cpp:
        * performance-tests/Throughput/client.cpp:
        * performance-tests/Throughput/server.cpp:
        * performance-tests/Callback/client.cpp:
        * performance-tests/Callback/server.cpp:
        * performance-tests/RTCorba/Thread_Pool/client.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/client.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Single_Endpoint/server.cpp:
        * performance-tests/RTCorba/Multiple_Endpoints/Orb_Per_Priority/client.cpp:
        * tests/Server_Connection_Purging/server.cpp:
        * tests/Two_Objects/client.cpp:
        * tests/Two_Objects/server.cpp:
        * tests/CollocationLockup/CollocationLockup.cpp:
        * tests/CollocationLockup/SimpleNamingService.cpp:
        * tests/Bug_1270_Regression/client.cpp:
        * tests/Bug_1270_Regression/server.cpp:
        * tests/Bug_1270_Regression/shutdown.cpp:
        * tests/MT_Timeout/client.cpp:
        * tests/MT_Timeout/server.cpp:
        * tests/Parallel_Connect_Strategy/client.cpp:
        * tests/Parallel_Connect_Strategy/server.cpp:
        * tests/MT_BiDir/server.cpp:
        * tests/MT_BiDir/client.cpp:
        * tests/Oneway_Buffering/server.cpp:
        * tests/Oneway_Buffering/client.cpp:
        * tests/Oneway_Buffering/admin.cpp:
        * tests/Client_Leaks/server.cpp:
        * tests/Client_Leaks/client.cpp:
        * tests/Client_Leaks/child.cpp:
        * tests/Faults/middle.cpp:
        * tests/Faults/pong.cpp:
        * tests/Faults/server.cpp:
        * tests/Faults/client.cpp:
        * tests/Faults/ping.cpp:
        * tests/Big_Twoways/server.cpp:
        * tests/Big_Twoways/client.cpp:
        * tests/Stack_Recursion/client.cpp:
        * tests/Stack_Recursion/server.cpp:
        * tests/AMH_Exceptions/client.cpp:
        * tests/Muxing/client.cpp:
        * tests/Muxing/server.cpp:
        * tests/Server_Leaks/client.cpp:
        * tests/Server_Leaks/server.cpp:
        * tests/Bug_2702_Regression/client.cpp:
        * tests/AMH_Oneway/client.cpp:
        * tests/Any/Recursive/client.cpp:
        * tests/Any/Recursive/server.cpp:
        * tests/Muxed_GIOP_Versions/client.cpp:
        * tests/Muxed_GIOP_Versions/server.cpp:
        * tests/AMI_Buffering/server.cpp:
        * tests/AMI_Buffering/client.cpp:
        * tests/AMI_Buffering/admin.cpp:
        * tests/DSI_Gateway/client.cpp:
        * tests/DSI_Gateway/gateway.cpp:
        * tests/DSI_Gateway/server.cpp:
        * tests/Big_Request_Muxing/client.cpp:
        * tests/Big_Request_Muxing/server.cpp:
        * tests/Bug_2669_Regression/client.cpp:
        * tests/Connection_Timeout/client.cpp:
        * tests/QtTests/client.cpp:
        * tests/QtTests/server.cpp:
        * tests/Server_Port_Zero/server.cpp:
        * tests/MProfile/client.cpp:
        * tests/MProfile/server.cpp:
        * tests/Bug_1020_Regression/server.cpp:
        * tests/Bug_1020_Regression/client.cpp:
        * tests/IPV6/client.cpp:
        * tests/IPV6/server.cpp:
        * tests/Bug_2503_Regression/common.cpp:
        * tests/Timeout/client.cpp:
        * tests/Timeout/server.cpp:
        * tests/Bug_1551_Regression/client.cpp:
        * tests/Bug_1551_Regression/server.cpp:
        * tests/Servant_To_Reference_Test/server.cpp:
        * tests/Hello/client.cpp:
        * tests/Hello/server.cpp:
        * tests/Connection_Failure/client.cpp:
        * tests/Connect_Strategy_Test/client.cpp:
        * tests/Connect_Strategy_Test/server.cpp:
        * tests/Big_Reply/client.cpp:
        * tests/Big_Reply/server.cpp:
        * tests/MT_Client/server.cpp:
        * tests/MT_Client/orb_creation.cpp:
        * tests/MT_Client/client.cpp:
        * tests/Typedef_String_Array/client.cpp:
        * tests/Typedef_String_Array/server.cpp:
        * tests/Crashed_Callback/client.cpp:
        * tests/Crashed_Callback/server.cpp:
        * tests/Big_AMI/client.cpp:
        * tests/Big_AMI/server.cpp:
        * tests/OctetSeq/server.cpp:
        * tests/OctetSeq/client.cpp:
        * tests/Bug_1635_Regression/client.cpp:
        * tests/Exposed_Policies/Policy_Tester.cpp:
        * tests/Exposed_Policies/Policy_Verifier.cpp:
        * tests/Bug_1568_Regression/client.cpp:
        * tests/Bug_1568_Regression/server.cpp:
        * tests/BiDirectional_DelayedUpcall/client.cpp:
        * tests/BiDirectional_DelayedUpcall/server.cpp:
        * tests/Blocking_Sync_None/client.cpp:
        * tests/Blocking_Sync_None/server.cpp:
        * tests/Crash_On_Write/client.cpp:
        * tests/Crash_On_Write/server.cpp:
        * tests/MT_Server/client.cpp:
        * tests/MT_Server/server.cpp:
        * tests/Policies/Manipulation.cpp:
        * tests/BiDirectional/client.cpp:
        * tests/BiDirectional/server.cpp:
        * tests/IOR_Endpoint_Hostnames/generate_ior.cpp:
        * tests/Strategies/client.cpp:
        * tests/Strategies/server.cpp:
        * tests/Bug_1020_Basic_Regression/client.cpp:
        * tests/Bug_1020_Basic_Regression/server.cpp:
        * tests/LongUpcalls/ami_client.cpp:
        * tests/LongUpcalls/blocking_server.cpp:
        * tests/LongUpcalls/blocking_client.cpp:
        * tests/LongUpcalls/ami_server.cpp:
        * tests/Bug_1361_Regression/server.cpp:
        * tests/Bug_1361_Regression/shutdown.cpp:
        * tests/Bug_1361_Regression/client.cpp:
        * tests/Bug_1254_Regression/client.cpp:
        * tests/Bug_1254_Regression/server.cpp:
        * tests/Connection_Purging/server.cpp:
        * tests/Connection_Purging/client.cpp:
        * tests/Bug_1670_Regression/client.cpp:
        * tests/Bug_1670_Regression/server.cpp:
        * tests/Bug_1482_Regression/client.cpp:
        * tests/Bug_1482_Regression/server.cpp:
        * tests/CallbackTest/client.cpp:
        * tests/CallbackTest/server.cpp:
        * tests/Bug_1476_Regression/client.cpp:
        * tests/Bug_1476_Regression/server.cpp:
        * tests/MProfile_Forwarding/client.cpp:
        * tests/MProfile_Forwarding/server.cpp:
        * tests/FL_Cube/client.cpp:
        * tests/FL_Cube/server.cpp:
        * tests/AMI_Timeouts/client.cpp:
        * tests/AMI_Timeouts/server.cpp:
        * tests/Compression/server.cpp:
        * tests/Bug_2595_Regression/client.cpp:
        * tests/Bug_2595_Regression/server.cpp:
        * tests/Big_Oneways/server.cpp:
        * tests/Big_Oneways/client.cpp:
        * tests/Portable_Interceptors/Dynamic/server.cpp:
        * tests/Portable_Interceptors/Dynamic/client.cpp:
        * tests/Portable_Interceptors/Bug_2510_Regression/server.cpp:
        * tests/Portable_Interceptors/Bug_2510_Regression/client.cpp:
        * tests/Portable_Interceptors/Service_Context_Manipulation/server.cpp:
        * tests/Portable_Interceptors/Service_Context_Manipulation/client.cpp:
        * tests/Portable_Interceptors/Benchmark/server.cpp:
        * tests/Portable_Interceptors/Benchmark/client.cpp:
        * tests/Portable_Interceptors/Bug_2088/client.cpp:
        * tests/Portable_Interceptors/Register_Initial_References/server.cpp:
        * tests/Portable_Interceptors/Bug_1559/server.cpp:
        * tests/Portable_Interceptors/Bug_1559/client.cpp:
        * tests/Portable_Interceptors/AMI/server.cpp:
        * tests/Portable_Interceptors/AMI/client.cpp:
        * tests/Portable_Interceptors/Recursive_ORBInitializer/client.cpp:
        * tests/No_Server_MT_Connect_Test/client.cpp:
        * tests/No_Server_MT_Connect_Test/server.cpp:
        * tests/Bug_1330_Regression/client.cpp:
        * tests/Bug_1330_Regression/server.cpp:
        * tests/Bug_2134_Regression/Hello.cpp:
        * tests/Bug_2417_Regression/client.cpp:
        * tests/Bug_2417_Regression/server.cpp:
        * tests/Bug_2174_Regression/client.cpp:
        * tests/Bug_2174_Regression/server.cpp:
        * tests/Cache_Growth_Test/client.cpp:
        * tests/Cache_Growth_Test/server.cpp:
        * tests/Bug_1627_Regression/client.cpp:
        * tests/Bug_1627_Regression/server.cpp:
        * tests/Bug_2188_Regression/client.cpp:
        * tests/Bug_2188_Regression/server.cpp:
        * tests/Bug_2289_Regression/client.cpp:
        * tests/Bug_2289_Regression/server.cpp:
        * tests/AMI/server.cpp:
        * tests/AMI/client.cpp:
        * tests/AMI/simple_client.cpp:
        * tests/POA/Deactivate_Object/server.cpp:
        * tests/POA/EndpointPolicy/client.cpp:
        * tests/POA/Reference_Counting/test.cpp:
        * tests/ICMG_Any_Bug/client.cpp:
        * tests/ICMG_Any_Bug/server.cpp:
        * tests/Optimized_Connection/oc_client.cpp:
        * tests/Xt_Stopwatch/server.cpp:
        * tests/Xt_Stopwatch/client.cpp:
        * tests/Bug_2183_Regression/client.cpp:
        * tests/Bug_2183_Regression/server.cpp:
        * tests/Bug_2654_Regression/server.cpp:
        * tests/Bug_2593_Regression/client.cpp:
        * tests/Bug_2593_Regression/server.cpp:
        * tests/Bug_1676_Regression/client.cpp:
        * tests/Bug_1676_Regression/server.cpp:
        * tests/MProfile_Connection_Timeout/client.cpp:
        * tests/MProfile_Connection_Timeout/server.cpp:
        * tests/Nested_Upcall_Crash/client.cpp:
        * tests/Nested_Upcall_Crash/server.cpp:
        * tests/Nested_Upcall_Crash/scavenger.cpp:
        * tests/GIOP_Fragments/PMB_With_Fragments/server.cpp:
        * tests/GIOP_Fragments/Java_Big_Request/server.cpp:
        * tests/GIOP_Fragments/Java_Big_Reply/client.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/client.cpp:
        * tests/CSD_Strategy_Tests/TP_Test_Dynamic/server.cpp:
        * tests/Reliable_Oneways/client.cpp:
        * tests/Reliable_Oneways/server.cpp:
        * tests/OBV/Supports/client.cpp:
        * tests/OBV/Supports/server.cpp:
        * tests/OBV/Forward/client.cpp:
        * tests/OBV/Forward/server.cpp:
        * tests/OBV/Truncatable/client.cpp:
        * tests/OBV/Truncatable/server.cpp:
        * tests/OBV/ValueBox/client.cpp:
        * tests/OBV/ValueBox/server.cpp:
        * tests/OBV/Any/client.cpp:
        * tests/OBV/Any/server.cpp:
        * tests/OBV/Factory/client.cpp:
        * tests/OBV/Factory/server.cpp:
        * tests/Oneways_Invoking_Twoways/server.cpp:
        * tests/Oneways_Invoking_Twoways/client.cpp:
        * tests/Native_Exceptions/client.cpp:
        * tests/Native_Exceptions/server.cpp:
        * tests/Bug_2328_Regression/client.cpp:
        * tests/Bug_2328_Regression/server.cpp:
        * tests/RTCORBA/Priority_Inversion_With_Bands/client.cpp:
        * tests/RTCORBA/Client_Propagated/client.cpp:
        * tests/RTCORBA/Client_Propagated/server.cpp:
        * tests/RTCORBA/Server_Protocol/server.cpp:
        * tests/RTCORBA/Server_Protocol/client.cpp:
        * tests/RTCORBA/Private_Connection/client.cpp:
        * tests/RTCORBA/Private_Connection/server.cpp:
        * tests/RTCORBA/Server_Declared/client.cpp:
        * tests/RTCORBA/Server_Declared/server.cpp:
        * tests/RTCORBA/Client_Protocol/client.cpp:
        * tests/RTCORBA/Client_Protocol/server.cpp:
        * tests/RTCORBA/MT_Client_Protocol_Priority/client.cpp:
        * tests/RTCORBA/MT_Client_Protocol_Priority/server.cpp:
        * tests/RTCORBA/Thread_Pool/client.cpp:
        * tests/RTCORBA/Dynamic_Thread_Pool/client.cpp:
        * tests/RTCORBA/Diffserv/client.cpp:
        * tests/RTCORBA/Diffserv/server.cpp:
        * tests/RTCORBA/RTMutex/server.cpp:
        * tests/RTCORBA/Explicit_Binding/client.cpp:
        * tests/RTCORBA/Explicit_Binding/server.cpp:
        * tests/Bug_2186_Regression/client.cpp:
        * tests/Bug_2186_Regression/server.cpp:
        * tests/Bug_1269_Regression/client.cpp:
        * tests/Bug_1269_Regression/server.cpp:
        * tests/Bug_1269_Regression/shutdown.cpp:
        * tests/Ondemand_Write/client.cpp:
        * tests/Ondemand_Write/server.cpp:
        * tests/Forwarding/client.cpp:
        * tests/Forwarding/server.cpp:
        * tests/BiDirectional_NestedUpcall/client.cpp:
        * tests/BiDirectional_NestedUpcall/server.cpp:
        * tests/ORB_shutdown/server.cpp:
        * examples/Kokyu_dsrt_schedulers/fp_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/fp_example/server.cpp:
        * examples/Kokyu_dsrt_schedulers/mif_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/mif_example/server.cpp:
        * examples/Kokyu_dsrt_schedulers/muf_example/client.cpp:
        * examples/Kokyu_dsrt_schedulers/muf_example/server.cpp:
        * examples/AMI/FL_Callback/progress.cpp:
        * examples/AMI/FL_Callback/peer.cpp:
        * examples/PluggableUDP/tests/Basic/client.cpp:
        * examples/PluggableUDP/tests/Basic/server.cpp:
          No need anymore to pass an empty string as orbname

Thu Feb  1 22:47:04 UTC 2007  Adam Mitz  <mitza@ociweb.com>

        * orbsvcs/orbsvcs/AV/RTCP_Packet.cpp:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.cpp:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.cpp:

          Replaced htonl, htons, ntohl, and ntohs with the appropriate
          ACE_XTOYZ macro (ACE_HTONL, for example).  QNX doesn't have htonl and
          friends without adding extra #includes.

Thu Feb  1 18:08:03 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/ast_typedef.h:
        * TAO_IDL/ast/ast_typedef.cpp:

          Added mutator for the boolean owns_base_type_ member
          so it can be managed from outside the class. This
          member is false by default, but if the base type is
          an anonymous sequence or array, the constructor sets
          it to true.

        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/fe/idl.yy:

          When there is a comma-separated list of typedef declarations,
          the list iteration calls the new method above after the
          first loop and sets the member to false. This call has no
          effect except when the base type is an anonymouse sequence
          or array, in which case we want to prevent the shared base
          type node from being destroyed more than once. Thanks to
          Will Otte <wotte at dre dot vanderbilt dot edu> and Dipa Suri
          <dipa dot suri at lmco dot com> for supplying the IDL that
          uncovered this bug.

        * TAO_IDL/util/utl_decllist.cpp:

          Cosmetic changes.

        * tests/IDL_Test/typedef.idl:

          Added test case for the above bug.

Thu Feb  1 15:43:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.h:
        * tao/RTCORBA/Priority_Mapping_Manager.h:
        * tao/RTCORBA/Thread_Pool.cpp:
          Layout changes

Thu Feb  1 14:37:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Default_Stub_Factory.cpp:
        * tao/Default_Stub_Factory.h:
        * tao/ORB_Core.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:
        * tao/PortableServer/Upcall_Command.h:
        * tao/PortableServer/Upcall_Wrapper.cpp:
        * tao/Stub.cpp:
          Layout changes

Wed Jan 31 22:49:14 2007  Martin Corino  <mcorino@remedy.nl>

        * tao/DynamicAny/DynUnion_i.cpp:

          Changed to handle inconsistency between statically declared (IDL
          compiler) union typecodes and dynamically declared typecodes where
          the discriminator type is an enum.
          With statically declared typecodes the label values are stored as
          actual enum values while with dynamically stored typecodes these
          label values are stored as ULong.

Wed Jan 31 19:00:44 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tests/LongDouble:
        * tests/LongDouble/Global.h:
        * tests/LongDouble/Global.cpp:
        * tests/LongDouble/LongDoubleTest.h:
        * tests/LongDouble/LongDoubleTest.cpp:
        * tests/LongDouble/LongDoubleTest.mpc:
        * tests/LongDouble/Test.idl:
        * tests/LongDouble/client.cpp:
        * tests/LongDouble/run_test.pl:
        * tests/LongDouble/server.cpp:

          Added a test that sends a CORBA::LongDouble from server to client
          to ensure that ACE and TAO correctly handles them.

Wed Jan 31 17:23:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_ACE.mwc:

          Exclude $(ACE_ROOT)/protocols/tests and
          Exclude $(ACE_ROOT)/protocols/examples.  They should not be built
          as part of this workspace.

Wed Jan 31 15:00:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/cdr_op_cs.cpp:
        * TAO_IDL/be/be_visitor_valuebox/any_op_cs.cpp:
          Layout improvements for the generated code now we don't generate
          emulated exception macros

Wed Jan 31 14:44:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_ss.cpp:
          Layout improvements for the generated code now we don't generate
          emulated exception macros

Tue Jan 30 12:37:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Compression/Compression_Manager.{h,cpp}:
          Fixed layout and warnings in single threaded build

Tue Jan 30 12:03:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Compression/Compressor_Factory.{h,cpp}:
          Fixed layout and warnings in single threaded build

Tue Jan 30 11:14:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Direct_Collocation_Upcall_Wrapper.cpp:
          Fixed argument not used warning

        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp:
        * tao/AnyTypeCode/Fixed_TypeCode.cpp:
        * tao/AnyTypeCode/Fixed_TypeCode.h:
        * tao/AnyTypeCode/Marshal.h:
        * tao/AnyTypeCode/Objref_TypeCode.cpp:
        * tao/AnyTypeCode/Objref_TypeCode_Static.cpp:
        * tao/AnyTypeCode/Value_TypeCode_Static.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Factory_Impl.cpp:
        * tao/ORB.cpp:
          Layout changes

Tue Jan 30 10:52:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/COIOP/COIOP_Simple_Test.cpp:
          New simplified COIOP test

        * tests/COIOP/COIOP_Test.cpp:
          Added advanced_resource.h include to force static
          link

        * tests/COIOP/COIOP_Tests.mpc:
          Add custom project for the IDL files and added the
          new simple test

        * tests/COIOP/Server_Task.cpp:
          Initialise pointer with 0

        * tests/COIOP/run_test.pl:
        * tests/Collocation_Tests/run_test.pl:
          Fixed bug in these two perl script, last test case was not
          unique

Tue Jan 30 09:33:14 2007  Martin Corino  <mcorino@remedy.nl>

        * tao/DynamicAny/DynUnion_i.cpp:

          Fixed broken DynUnion support (see Bug #2785).

Tue Jan 30 01:16:13 2007  James H. Hill     <hillj@isis.vanderbilt.edu>

        * tao/Utils/Servant_Var.inl:

          Fixed syntax error in catch (...) statements that was
          prevent TAO from building in some cases.

Mon Jan 29 19:27:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.cpp:
          Removed not needed return statements after ACE_THROW_RETURN, fixes
          warnings with HP aCC on IA64

Mon Jan 29 19:11:14 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Adapter_Registry.cpp:
        * tao/AnyTypeCode/Any.cpp:
        * tao/AnyTypeCode/Any_Array_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Basic_Impl.cpp:
        * tao/AnyTypeCode/Any_Basic_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Dual_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Impl_T.cpp:
        * tao/AnyTypeCode/Any_Special_Impl_T.cpp:
        * tao/AnyTypeCode/Any_SystemException.cpp:
        * tao/AnyTypeCode/Any_Unknown_IDL_Type.cpp:
        * tao/AnyTypeCode/Empty_Param_TypeCode.cpp:
        * tao/AnyTypeCode/ExceptionA.cpp:
        * tao/AnyTypeCode/PolicyA.cpp:
        * tao/AnyTypeCode/TypeCode.cpp:
        * tao/AnyTypeCode/WrongTransactionA.cpp:
        * tao/BiDir_GIOP/BiDirGIOP.cpp:
        * tao/Codeset/Codeset_Manager_Factory.cpp:
        * tao/Codeset/Codeset_Translator_Factory.cpp:
        * tao/Collocated_Invocation.cpp:
        * tao/CORBANAME_Parser.cpp:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/CSD_Framework/CSD_Strategy_Base.cpp:
        * tao/CSD_Framework/CSD_Strategy_Base.inl
        * tao/CSD_ThreadPool/CSD_TP_Cancel_Visitor.inl
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Asynch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_With_Server_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Asynch_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Custom_Request_Operation.inl
        * tao/CSD_ThreadPool/CSD_TP_Remote_Request.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Request.inl
        * tao/CSD_ThreadPool/CSD_TP_Task.cpp:
        * tao/DynamicInterface/DII_Arguments.cpp:
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/DynamicInterface/Dynamic_Implementation.cpp:
        * tao/EndpointPolicy/EndpointPolicy.cpp:
        * tao/EndpointPolicy/EndpointPolicy_ORBInitializer.cpp:
        * tao/FILE_Parser.cpp:
        * tao/GIOP_Message_Base.cpp:
        * tao/GIOP_Message_Base.h:
        * tao/GIOP_Message_Lite.cpp:
        * tao/GIOP_Message_Lite.h:
        * tao/HTTP_Parser.cpp:
        * tao/IFR_Client/IFR_Client_Adapter_Impl.cpp:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Connection_Handler.cpp:
        * tao/ImR_Client/ImR_Client.cpp:
        * tao/Invocation_Adapter.cpp:
        * tao/Invocation_Base.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
        * tao/IORInterceptor_Adapter.h:
        * tao/IORTable/IOR_Table_Impl.cpp:
        * tao/IORTable/IOR_Table_Impl.h:
        * tao/IORTable/Table_Adapter.cpp:
        * tao/Leader_Follower_Flushing_Strategy.cpp:
        * tao/LF_Connect_Strategy.cpp:
        * tao/LF_Connect_Strategy.h:
        * tao/LF_Event.cpp:
        * tao/LF_Event.h:
        * tao/LF_Event_Binder.h:
        * tao/LF_Follower_Auto_Adder.h:
        * tao/LF_Strategy_Complete.h:
        * tao/LocateRequest_Invocation.cpp:
        * tao/LocateRequest_Invocation_Adapter.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
        * tao/Messaging/Connection_Timeout_Policy_i.cpp:
        * tao/Messaging/Messaging_Loader.cpp:
        * tao/Messaging/Messaging_ORBInitializer.cpp:
        * tao/Messaging/Messaging_Policy_i.cpp:
        * tao/MProfile.cpp:
        * tao/Muxed_TMS.cpp:
        * tao/Null_Fragmentation_Strategy.cpp:
        * tao/Null_Fragmentation_Strategy.h:
        * tao/NVList_Adapter.h:
        * tao/Object.cpp:
        * tao/Object.h:
        * tao/Object_T.cpp:
        * tao/ObjectKey_Table.cpp:
        * tao/ObjectKey_Table.h:
        * tao/Objref_VarOut_T.h:
        * tao/operation_details.cpp:
        * tao/ORB.cpp:
        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/ORB_Core.inl
        * tao/ORBInitializer_Registry.cpp:
        * tao/ORBInitializer_Registry.h:
        * tao/ORBInitializer_Registry_Adapter.h:
        * tao/Parser_Registry.cpp:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.cpp:
        * tao/PI/ORBInitializer_Registry_Impl.cpp:
        * tao/PI/PI.cpp:
        * tao/PI/PI_ORBInitializer.cpp:
        * tao/PI_Server/PI_Server_Loader.cpp:
        * tao/PI_Server/PortableServer_ORBInitializer.cpp:
        * tao/PI_Server/ServerInterceptorAdapter.cpp:
        * tao/PI_Server/ServerInterceptorAdapter.h:
        * tao/Pluggable_Messaging.h:
        * tao/Pluggable_Messaging_Utils.inl
        * tao/Policy_Current_Impl.cpp:
        * tao/Policy_Current_Impl.h:
        * tao/Policy_Current_Impl.inl
        * tao/Policy_Manager.cpp:
        * tao/Policy_Manager.h:
        * tao/Policy_Manager.inl
        * tao/Policy_Set.cpp:
        * tao/Policy_Set.h:
        * tao/Policy_Validator.cpp:
        * tao/Policy_Validator.h:
        * tao/PolicyFactory_Registry_Adapter.h:
        * tao/PortableServer/Adapter_Activator.cpp:
        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp:
        * tao/PortableServer/Direct_Collocation_Upcall_Wrapper.cpp:
        * tao/PortableServer/Local_Servant_Base.cpp:
        * tao/PortableServer/Local_Servant_Base.h:
        * tao/PortableServer/Non_Servant_Upcall.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantActivator.cpp:
        * tao/PortableServer/RequestProcessingStrategyServantLocator.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/Servant_Upcall.cpp:
        * tao/PortableServer/ServantRetentionStrategyNonRetain.cpp:
        * tao/PortableServer/ThreadStrategySingleFactoryImpl.cpp:
        * tao/PortableServer/ThreadStrategySingleFactoryImpl.h:
        * tao/PortableServer/Upcall_Wrapper.cpp:
        * tao/Profile.cpp:
        * tao/Reactive_Connect_Strategy.cpp:
        * tao/Reactive_Flushing_Strategy.cpp:
        * tao/Remote_Invocation.cpp:
        * tao/Remote_Invocation.h:
        * tao/RTCORBA/RT_Current.h:
        * tao/RTCORBA/RT_Endpoint_Utils.cpp:
        * tao/RTCORBA/RT_Invocation_Endpoint_Selectors.cpp:
        * tao/RTCORBA/RT_ORB.cpp:
        * tao/RTCORBA/RT_ORB.h:
        * tao/RTCORBA/RT_ORB_Loader.cpp:
        * tao/RTCORBA/RT_ORB_Loader.h:
        * tao/RTCORBA/RT_ORBInitializer.cpp:
        * tao/RTCORBA/RT_ORBInitializer.h:
        * tao/RTCORBA/RT_Policy_i.cpp:
        * tao/RTCORBA/RT_Policy_i.h:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTCORBA/RT_Stub.h:
        * tao/RTCORBA/RT_Stub_Factory.h:
        * tao/RTCORBA/RT_Thread_Lane_Resources_Manager.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/RTCORBA/Thread_Pool.h:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/Request_Interceptor.cpp:
        * tao/RTScheduling/RTScheduler_Loader.cpp:
        * tao/Service_Callbacks.cpp:
        * tao/Service_Context.h:
        * tao/Strategies/advanced_resource.h:
        * tao/Strategies/COIOP_Transport.cpp:
        * tao/Strategies/DIOP_Acceptor.cpp:
        * tao/Strategies/DIOP_Connection_Handler.cpp:
        * tao/Strategies/Optimized_Connection_Endpoint_Selector.cpp:
        * tao/Strategies/SCIOP_Connection_Handler.cpp:
        * tao/Strategies/SHMIOP_Acceptor.cpp:
        * tao/Strategies/SHMIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Connection_Handler.cpp:
        * tao/Strategies/UIOP_Factory.cpp:
        * tao/Strategies/UIOP_Lite_Factory.cpp:
        * tao/Stub.cpp:
        * tao/Synch_Invocation.h:
        * tao/TAO_Server_Request.cpp:
        * tao/TAO_Server_Request.h:
        * tao/Transport_Queueing_Strategies.cpp:
        * tao/TransportCurrent/Current_Impl.cpp:
        * tao/TransportCurrent/Current_Loader.cpp:
        * tao/TransportCurrent/Current_ORBInitializer.cpp:
        * tao/TransportCurrent/Current_ORBInitializer_Base.cpp:
        * tao/Utils/ORB_Manager.cpp:
        * tao/Utils/Servant_Var.inl
        * tao/Utils/Server_Main.cpp:
        * tao/Valuetype/AbstractBase_T.cpp:
        * tao/Wait_On_LF_No_Upcall.cpp:
        * tao/Wait_Strategy.h:
          Layout changes, const improvements and some cleanup of old code
          that is not needed anymore now we removed emulated exceptions

Sun Jan 28 19:59:14 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO version 1.5.6 released.

Fri Jan 26 18:56:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/PortableServer/Object_Adapter.cpp:

          Removed the global scope on the type used in a catch to help vc8
          figure out what to do.

Fri Jan 26 18:45:53 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:

          Removed the extra parenthesis around a throw argument.

Fri Jan 26 18:21:17 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * *.cpp:

          Removed unused variable warnings from 120 files.

Fri Jan 26 16:59:47 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_structure_fwd.cpp:
        * TAO_IDL/ast/ast_check.cpp:

          Fixed incorrect error reporting of undefined struct when
          it is forward declared multiple times.

        * TAO_IDL/ast/ast_enum.cpp:
        * TAO_IDL/ast/ast_union_branch.cpp:

          Fixed incomplete initialization of AST_Expression class
          that hold the value of a union case label when the
          discriminator is an enum type, which was causing the
          calculation of the union's default index to be
          incorrect. Thanks to Martin Corino <mcorino@remedy.nl>
          for reporting both the above IDL compiler bugs.

        * tests/IDL_Test/IDL_Test.mpc:

          Uncommented the struct.idl file in the IDL_Files list,
          so it can now be included in the test. The bug it
          covers is the first one described above.

Fri Jan 26 13:46:23 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * *.{h,inl,cpp}:

          Removed unused variable warnings from over 200 files.

Fri Jan 26 12:12:12 UTC 2007  Johnny Willemsen  <jwillmesen@remedy.nl>

        * tao/Wait_Strategy.cpp:
          Fixed vc warning

Fri Jan 26 12:05:12 UTC 2007  Johnny Willemsen  <jwillmesen@remedy.nl>

        * tao/Makefile.am:
          Removed CSD_ORBInitializer.{h,cpp}, files where removed from the
          distribution

Thu Jan 25 23:47:24 UTC 2007  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/PortableServer/IdAssignmentStrategyFactoryImpl.cpp(destroy):

          Replaced a lost '*' in the parameter to indicate it is a pointer,

Thu Jan 25 19:56:33 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * *.cpp:

          Removed all of the ACE_PRINT_EXCEPTION macros.

Thu Jan 25 19:45:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/ESF/ESF_Proxy_Admin.cpp
        * orbsvcs/orbsvcs/Notify/Container_T.inl
        * orbsvcs/orbsvcs/Notify/Default_Factory.cpp
        * orbsvcs/orbsvcs/Notify/Event_Map_Entry_T.inl
        * orbsvcs/orbsvcs/Notify/Event_Map_T.inl
        * orbsvcs/orbsvcs/Notify/Seq_Worker_T.cpp
        * orbsvcs/orbsvcs/Sched/Reconfig_Sched_Utils_T.cpp
        * orbsvcs/orbsvcs/Sched/Reconfig_Scheduler_T.cpp
        * orbsvcs/orbsvcs/Trader/Offer_Database.cpp
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp
        * orbsvcs/performance-tests/RTEvent/lib/RIR_Narrow.cpp
        * orbsvcs/tests/Notify/lib/Consumer_T.cpp
        * orbsvcs/tests/Notify/lib/Peer_T.cpp
        * orbsvcs/tests/Notify/lib/Supplier_T.cpp
          Replaced ACE_TYPENAME with typename

Thu Jan 25 17:39:59 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * *.{h,cpp,inl}:

          Removed the ACE exception macros from all files.  There are a few
          number of files that still use ACE_PRINT_EXCEPTION.  They will be
          dealt with in my next commit.

Thu Jan 25 13:40:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/IDL_Test.mpc:
          Temporarily removed struct.idl, when the IDL compiler fix is in the repo
          I will enable this file again

Wed Jan 24 18:46:01 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/amh_ss.cpp:

          Changed the last of the ACE_THROW's to real throw's.

Wed Jan 24 18:25:26 UTC 2007  Chad Elliott  <elliott_c@ociweb.com>

        * tao/BiDir_GIOP/BiDirGIOP.cpp:
        * tao/CSD_Framework/CSD_FW_Server_Request_Wrapper.cpp:
        * tao/CSD_ThreadPool/CSD_TP_Collocated_Synch_Request.cpp:
        * tao/DynamicInterface/DII_Reply_Dispatcher.cpp:
        * tao/EndpointPolicy/EndpointPolicy.cpp:
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.cpp:
        * tao/ImR_Client/ImR_Client.cpp:
        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
        * tao/Messaging/Messaging.cpp:
        * tao/Messaging/Messaging_Loader.cpp:
        * tao/ORB_Core.cpp:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.cpp:
        * tao/PI/ORBInitializer_Registry_Impl.cpp:
        * tao/PI/PI.cpp:
        * tao/PI_Server/PI_Server_Loader.cpp:
        * tao/PI_Server/Policy_Creator_T.h:
        * tao/PI_Server/ServerInterceptorAdapter.cpp:
        * tao/PortableServer/Non_Servant_Upcall.cpp:
        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Root_POA.cpp:
        * tao/PortableServer/Servant_Base.cpp:
        * tao/PortableServer/Servant_Upcall.cpp:
        * tao/PortableServer/Upcall_Wrapper.cpp:
        * tao/PortableServer/poa_macros.h:
        * tao/RTCORBA/RT_ORB_Loader.cpp:
        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/RTScheduler_Loader.cpp:
        * tao/Stub.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/Utils/Server_Main.cpp:

          The first run of my macro removal script picked up a few things to
          remove.  I'll be running this script on the rest of the tree soon.

Wed Jan 24 14:00:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/IDL_Test/struct.idl:
        * tests/IDL_Test/IDL_Test.mpc:
          Added new IDL test file, will fail to compile until Jeff commits a fix
          for the IDL compiler.

        * tests/Any/Recursive/*:
          Added some new test cases, one has been fixed already last week, the other
          one is new and stored in bugzill as 2776

        * tao/*.{h,cpp,inl}:
          Zapped all environment macros except ACE_THROW_SPEC and ACE_THROW_RETURN.

        * *.{h,cpp,inl}:
          Zapped part of the environment macros from everything except the core TAO
          libs, more follow later, first let us stabilize this commit. The goal is to
          get rid of all environment macros

Wed Jan 24 12:25:12 UTC 2007  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be/be_codegen.cpp:
          Instead of Environment.h generate Basic_Types.h as include

        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/ami_handler_reply_stub_operation_cs.cpp:
          Generate throw instead of ACE_THROW

Mon Jan 22 23:14:56 2007  William R. Otte  <wotte@dre.vanderbilt.edu>

        * TAO version 1.5.5 released.

Local Variables:
mode: change-log
add-log-time-format: (lambda () (progn (setq tz (getenv "TZ")) (set-time-zone-rule "UTC") (setq time (format-time-string "%a %b %e %H:%M:%S %Z %Y" (current-time))) (set-time-zone-rule tz) time))
indent-tabs-mode: nil
End:

