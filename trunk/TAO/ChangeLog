Wed Jul 13 15:14:46 2005  Justin Michel  <michel_j@ociweb.com>

        * NEWS:

          Added information about recent Notification Service changes.

Wed Jul 13 18:54:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ServerRequestInterceptor_Adapter_Factory.{h,cpp}:
        * tao/ClientRequestInterceptor_Adapter_Factory.{h,cpp}:
          Added virtual destructor to resolve gcc4 runtime errors, the cpp
          file is new

        * tao/tao.mpc:
        * tao/Makefile.am:
          Added new files

        * tao/Thread_Lane_Resources_Manager.cpp:
          Removed explicit templates

Wed Jul 13 18:18:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Pollable.pidl:
        * tao/PollableC.{h,cpp}:
        * tao/PollableS.h:
          Moved these files to the Messaging library

        * tao/Messaging/*C.{h,cpp}:
          Regenerated

        * tao/tao.mpc:
        * tao/Makefile.am:
          Updated because of file move above

Wed Jul 13 12:53:34 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/InterfaceRepo/Application_Test/ifr_dii_client.cpp:

          Added a missing ACE_CHECK_RETURN.

Wed Jul 13 16:51:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
          Updated some debug statements to get the same layout as in other places

Wed Jul 13 11:18:44 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/tests/Notify/Ordering/Notify_Sequence_Push_Consumer.h:
        * orbsvcs/tests/Notify/Ordering/Notify_Sequence_Push_Consumer.cpp:

          Update the test to be more tolerant of differing thread behavior
        on the various platforms.

Wed Jul 13 10:24:39 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/Locator_Repository.cpp:

          Print an error if the registry option is used on a non-Windows OS.

        * orbsvcs/examples/ImR/Advanced/run_test.pl:

          When "using" Getopts::Long, take everything to be compatible with
          Perl 5.6.1.

        * orbsvcs/orbsvcs/CosNotification.mpc:

          Simplify the persistence project by using a wildcard.

        * tao/ImR_Client/ImR_Client.h:
        * tao/ImR_Client/ImR_Client.cpp:

          Added a constructor to initialize the server_object_ pointer.

        * tao/PortableServer/Root_POA.cpp:

          Do not put the passed in POAManager in the safe_poa_manager as we
          do not want it to be destroyed in case an exception is thrown
          during the create_POA_i() method.

Wed Jul 13 08:01:15 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/LoadBalancing.mpc:

          Fixed typo introduced in:
          Tue Jul 12 17:12:46 2005  J.T. Conklin  <jtc@acorntoolworks.com>

Wed Jul 13 12:35:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Encodable.{h,cpp}:
        * tao/Utils/Encodable.{h,cpp}:
          Moved Encodable from the TAO lib to the Utils lib. It is a utility
          class that is not used in TAO and its tests. This way anyone using
          it can keep using it.

        * tao/tao.mpc:
        * tao/Makefile.am:
          Updated for change above

Wed Jul 13 12:19:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/RT_ORB_Loader.cpp:
          Create the _var later on the stack

        * tao/RTCORBA/RT_ORBInitializer.cpp:
          Initialise pointer

        * tao/RTCORBA/RTCORBAC.h:
          No need to derive ProtocolProperties from TAO_Encodable

        * tao/RTCORBA/diffs/RTCORBA.diff:
          Updated

Wed Jul 13 10:44:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IIOP_Acceptor.cpp:
          Updated some debug statements so that they have the same formatting
          as the other statements

Wed Jul 13 10:21:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/performance.html:
          Started with documenting the defines that have impact on runtime
          footprint

Tue Jul 12 17:43:55 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated.

Tue Jul 12 17:12:46 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/LoadBalancing.mpc:
        * orbsvcs/tests/Bug_1395_Regression/Bug_1395_Regression.mpc:

          Add *_IDL projects for compiling *.idl files.  This eliminates
          duplicate rules that would otherwise result when Makefile.am's
          are aggregated in the automake build.

Tue Jul 12 13:39:21 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/CosNaming.mpc:
        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/CosTrading.mpc:
        * orbsvcs/orbsvcs/DsEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsNotifyLogAdmin.mpc:

          Make _IDL projects unconditional now that Chad has enhanced
          MPC to support custom_only builds for VC++ projects.

Tue Jul 12 18:07:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Upcall_Wrapper.cpp:
          Fixed compile errors with msvc6

Tue Jul 12 18:04:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Server_Request_Interceptor.cpp:
          Added missing include

Tue Jul 12 17:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.{h,cpp}:
          Fixed compile errors

Tue Jul 12 08:56:03 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/tests/ImplRepo/run_test.pl:

          Ensure that old exe files are deleted before new ones are copied in
        the nt_service_ir test.
          Make the nt_service_ir test fail more quickly when an error occurs.

Tue Jul 12 08:33:05 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tests/RTCORBA/Banded_Connections/bands.irix:
        * tests/RTCORBA/Banded_Connections/run_test.pl:
        * tests/RTCORBA/MT_Client_Protocol_Priority/run_test.pl:

          Added support for IRIX.

        * tests/RTCORBA/Collocation/continuous.conf:
        * tests/RTCORBA/Collocation/continuous.conf.xml:
        * tests/RTCORBA/Collocation/run_test.pl:
        * tests/RTCORBA/Destroy_Thread_Pool/continuous.conf:
        * tests/RTCORBA/Destroy_Thread_Pool/continuous.conf.xml:
        * tests/RTCORBA/Destroy_Thread_Pool/run_test.pl:
        * tests/RTCORBA/Persistent_IOR/continuous.conf:
        * tests/RTCORBA/Persistent_IOR/continuous.conf.xml:
        * tests/RTCORBA/Persistent_IOR/run_test.pl:
        * tests/RTCORBA/Persistent_IOR/server.cpp:
        * tests/RTCORBA/Priority_Inversion_With_Bands/continuous.conf:
        * tests/RTCORBA/Priority_Inversion_With_Bands/continuous.conf.xml:
        * tests/RTCORBA/Priority_Inversion_With_Bands/run_test.pl:
        * tests/RTCORBA/Priority_Inversion_With_Bands/test_i.cpp:
        * tests/RTCORBA/Server_Declared/continuous.conf:
        * tests/RTCORBA/Server_Declared/continuous.conf.xml:
        * tests/RTCORBA/Server_Declared/run_test.pl:
        * tests/RTCORBA/Thread_Pool/continuous.conf:
        * tests/RTCORBA/Thread_Pool/continuous.conf.xml:
        * tests/RTCORBA/Thread_Pool/run_test.pl:

          For HP-UX, the only priority mapping that makes sense is
          continuous.  For each of these tests, I added a configurator file
          to set the priority mapping and only use it on HP-UX.

        * tests/RTCORBA/common_args.cpp:

          sscanf wasn't working properly (at least with aCC 3.60) so I
          switched to strtoul.

Tue Jul 12 13:29:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/RTCORBA/Persistent_IOR/client.cpp:
          Added check for nil reference

        * tao/Thread_Lane_Resources.cpp (cleanup_rw_transports):
          If we are already finalized (transport_cache pointer is zero)
          directly return.

Tue Jul 12 13:05:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/RTCORBA/Persistent_IOR/test.idl:
          Made the shutdown call a oneway

Tue Jul 12 12:48:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Thread_Lane_Resources.cpp:
          Set pointers to zero after deleting them

Tue Jul 12 12:41:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/ClientRequestInfo.h:
          Removed invalid export macro

Tue Jul 12 11:51:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTCORBA/RT_ORB.cpp:
          Initialise pointers with 0

Tue Jul 12 11:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1639_Regression/test.mpc:
          Simplified this mpc file

Tue Jul 12 10:05:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2174_Regression/Bug_2174_Regression.mpc:
          Don't build the client when minimum_corba is set

        * tao/CONV_FRAME.pidl:
        * tao/GIOP.pidl
          Updated regeneration instructions

        * tao/CONV_FRAMES_T.h:
        * tao/GIOPS_T.h
          Removed this file

        * tao/ClientRequestInfo.{h,cpp}
        * tao/ClientRequestInfo.pidl:
        * tao/ClientRequestInfoA.cpp
        * tao/ClientRequestInfoC.{h,cpp}:
        * tao/ClientRequestInfoS.h:
        * tao/PIForwardRequest.pidl
        * tao/PIForwardRequestA.cpp
        * tao/PIForwardRequestC.{h,cpp}:
        * tao/PIForwardRequestS.h
        * tao/RequestInfo.pidl
        * tao/RequestInfoA.cpp:
        * tao/RequestInfoC.{h,cpp}:
        * tao/RequestInfoS.h:
          These files are moved to the PI library

        * tao/ClientRequestInterceptor_Adapter.h:
          Don't pass TAO_ClientRequestInfo with each invocation,
          an instance is allocated within the adapter implementation.
          Also added a method to get the PortableInterceptor::ReplyStatus
          from a TAO::Invocation_Base

        * tao/Collocation_Resolver.cpp:
        * tao/Protocol_Factory.cpp:
        * tao/Protocols_Hooks.cpp:
        * tao/Tagged_Components.cpp:
          Removed explicit template instantiations

        * tao/IIOP_Profile.h:
        * tao/Profile.h:
          Moved destructor to protected part to make sure an instance
          is only removed by the _decr_refcnt

        * tao/Invocation_Base.{h,cpp,inl}:
          Reworked the invocation path to invoke the client request
          interceptor when it is set and don't create a TAO_ClientRequestInfo
          on the stack, this is done in the PI adapter. Store the invoke_status
          and caught_exception as members in this class, this was done
          previously in the TAO_ClientRequestInfo, but this is now not
          used anymore in the TAO lib

        * tao/MProfile.h:
          Doxygen improvement

        * tao/Makefile.am:
          Updated because of moving of files

        * tao/ORB_Core.h:
          No need to forward declare TAO_ServerRequest

        * tao/PortableInterceptor.pidl:
        * tao/PortableInterceptorC.h:
          Removed the files we moved to PI/PI_Server

        * tao/ServerRequestInfo.pidl:
        * tao/ServerRequestInfoA.cpp:
        * tao/ServerRequestInfoC.{h,cpp}:
        * tao/ServerRequestInfoS.h:
          Moved to the PI_Server lib

        * tao/ServerRequestInterceptor_Adapter.h:
          Updated to not pass TAO_ServerRequestInfo with each call, pass
          the difference exception info

        * tao/Stub.{h,cpp}:
          Removed service_profile_selection(), this was marked deprecated for
          a long time.

        * tao/Synch_Invocation.cpp:
          Fixed incorrect emulated exception usage

        * tao/TAO_Server_Request.{h,cpp,i}:
          Added data members which where previous in TAO_ServerRequestInfo

        * tao/Transport.{h,cpp,inl}:
          Removed TAO_Transport_Refcount_Guard, not used

        * tao/tao.mpc:
          Updated

        * tao/PI/ClientRequestInfo.{cpp,h}:
        * tao/PI/ClientRequestInfo.pidl:
        * tao/PI/ClientRequestInfoA.cpp"
        * tao/PI/ClientRequestInfoC.{h,cpp}:
        * tao/PI/ClientRequestInfoS.h:
          These files moved here from the TAO core library

        * tao/PI/ClientRequestInterceptor.pidl:
          Updated includes because of moved files

        * tao/PI/ClientRequestInterceptorA.cpp:
        * tao/PI/ClientRequestInterceptorC.{h,cpp}:
        * tao/PI/ClientRequestInterceptorS.h:
          Regenerated

        * tao/PI/ClientRequestInterceptor_Adapter_Impl.{h,cpp}:
          Allocate a TAO_ClientRequestInfo on the stack for each
          interception point and updated for base interface

        * tao/PI/InterceptorA.cpp
        * tao/PI/InterceptorC.{h,cpp}:
        * tao/PI/InterceptorS.h:
        * tao/PI/ORBInitInfoA.cpp:
        * tao/PI/ORBInitInfoC.{h,cpp}:
        * tao/PI/ORBInitInfoS.h:
        * tao/PI/ORBInitializerA.cpp:
        * tao/PI/ORBInitializerC.{h,cpp}:
        * tao/PI/ORBInitializerS.h:
          Regenerated

        * tao/PI/PI.h:
          Include new *C.h files

        * tao/PI/PIForwardRequest.pidl
        * tao/PI/PIForwardRequestA.cpp
        * tao/PI/PIForwardRequestC.{h,cpp}:
        * tao/PI/PIForwardRequestS.h:
        * tao/PI/RequestInfo.pidl:
        * tao/PI/RequestInfoA.cpp:
        * tao/PI/RequestInfoC.{h,cpp}:
        * tao/PI/RequestInfoS.h:
          Moved from the TAO lib

        * tao/PI_Server/PI_Server.h:
          Added new *C.h files

        * tao/PI_Server/ServerInterceptorAdapter.{h,cpp}:
          Allocate a TAO_ServerRequestInfo for each interception point

        * tao/PI_Server/ServerRequestInfo.{h,cpp,inl}:
        * tao/PI_Server/ServerRequestInfo.pidl:
        * tao/PI_Server/ServerRequestInfoA.cpp:
        * tao/PI_Server/ServerRequestInfoC.{h,cpp}:
        * tao/PI_Server/ServerRequestInfoS.h:
          Moved from the PortableServer lib

        * tao/PI_Server/ServerRequestInterceptor.pidl:
          Updated includes

        * tao/PI_Server/ServerRequestInterceptorC.h:
          Regenerated

        * tao/PortableServer/Basic_SArguments.cpp:
        * tao/PortableServer/Special_Basic_SArguments.cpp:
        * tao/PortableServer/UB_String_SArguments.cpp
          Removed, not needed

        * tao/PortableServer/ServerRequestInfo.{h,cpp,inl}:
          Moved to the PI_Server lib

        * tao/PortableServer/Local_Servant_Base.inl:
          Removed commented out code

        * tao/PortableServer/ORT_Adapter.cpp:
        * tao/PortableServer/ORT_Adapter_Factory.cpp:
        * tao/PortableServer/StrategyFactory.cpp:
          Removed explicit templates

        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Upcall_Wrapper.cpp:
          Updated code because of changes ServerRequestInterceptor
          adapter change

        * tao/RTCORBA/RT_ORBInitializer.cpp:
          Initialise pointer with 0

        * tao/RTScheduling/RTScheduler.pidl:
          Updated include

        * tao/RTScheduling/RTSchedulerC.h:
          Regenerated

        * tests/Big_Twoways/Peer.cpp:
          Initialise pointer with 0

        * tests/Portable_Interceptors/ForwardRequest/Server_Request_Interceptor.h:
          Added needed include

Mon Jul 11 13:39:34 2005   Gary Maxey <gary.maxey@hp.com>

        * TAO_IDL/be/be_visitor_valuebox/valuebox_cs.cpp:
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ci.cpp:

          Updated to solve cross platform compilation problems.

Mon Jul 11 21:08:17 2005  Boris Kolpackov  <boris@kolpackov.net>

        * orbsvcs/examples/Notify/Federation/Gate/Export.h:
        * orbsvcs/examples/Notify/Federation/Gate/Gate.h:
        * orbsvcs/examples/Notify/Federation/Gate/Gate.mpc:

        Added export macro.

Mon Jul 11 09:07:26 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/orbsvcs/Notify/Admin.cpp:

          Add missing include of Event_Manager.h

Mon Jul 11 07:23:49 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Nested_Upcall_Crash/Nested_Upcall_Crash.mpc:

          Set the stack size for windows based project types to 16Mb to
          allow this test to complete on Windows.

Mon Jul 11 11:12:42 2005  Boris Kolpackov  <boris@kolpackov.net>

        * orbsvcs/examples/Notify/Federation/Agent/Agent.cpp:
        * orbsvcs/examples/Notify/Federation/SpaceCraft/SpaceCraft.cpp:

          Add explicit return statements to main (which is renamed
          to ace_main_i and, as a result, doesn't have proper main
          semantics).

Mon Jul 11 08:37:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/ForwardRequest/PI_ForwardRequest.mpc:
          Removed not needed base projects

Mon Jul 11 08:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2183_Regression/Bug_2183_Regression.mpc:
          Simplified this mpc file

        * tests/Bug_2174_Regression/*:
          New regression for bug 2174. _non_existent should return
          true/false, not raise OBJECT_NOT_EXIST. Thanks to
          Torsten Kuepper <torsten dot kuepper at nokia dot com>
          for making this regression. The bugfix for this will follow
          later this week.

Fri Jul  8 12:59:38 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tests/GIOP_Fragments/PMB_With_Fragments/dribble.pl:

          Added a sleep(1) at the end of this script to allow the socket to
          get flushed before the process exits.  On windows, the socket data
          is lost if the socket isn't flushed by the OS before the process
          completes.

Fri Jul  8 11:15:00 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/tests/Notify/Blocking/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Discarding/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Discarding/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/MT_Dispatching/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Ordering/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Ordering/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/lib/PushConsumer.cpp:
        * orbsvcs/tests/Notify/lib/PushSupplier.cpp:
        * orbsvcs/tests/Notify/lib/SequencePushConsumer.cpp:
        * orbsvcs/tests/Notify/lib/SequencePushSupplier.cpp:
        * orbsvcs/tests/Notify/lib/StructuredPushConsumer.cpp:
        * orbsvcs/tests/Notify/lib/StructuredPushSupplier.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Structured_Supplier.cpp:

          Add NOT_USED where appropriate to exception macros.

Fri Jul  8 16:03:46 2005  Boris Kolpackov  <boris@kolpackov.net>

        * orbsvcs/examples/Notify/Federation/Agent/Agent.cpp:
        * orbsvcs/examples/Notify/Federation/Gate/Gate.cpp:
        * orbsvcs/examples/Notify/Federation/Gate/Gate.h:
        * orbsvcs/examples/Notify/Federation/SpaceCraft/SpaceCraft.cpp:

          Made the code compile on platforms with emulated exceptions.

Fri Jul  8 14:06:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Transport_Cache_Manager.h:
          Removed virtual from destructor, no need for this.

Fri Jul  8 15:32:36 2005  Boris Kolpackov  <boris@kolpackov.net>

        * orbsvcs/examples/Notify/Federation/Agent/Agent.cpp:
        * orbsvcs/examples/Notify/Federation/Gate/Gate.cpp:
        * orbsvcs/examples/Notify/Federation/SpaceCraft/SpaceCraft.cpp:

          Changed all references to TAO_Notify_Service:init to read
          init_service because somebody decided for some reason to
          rename this function. Also made the code compilable by VC6.

Fri Jul  8 12:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/LocalObject.cpp:
          Removed some remarks about possible corba spec mismatch. Checked
          the latest corba spec and we throw the correct error

Fri Jul  8 12:20:47 2005  Simon McQueen  <sm@prismtech.com>

        * tests/Bug_2183_Regression/server.conf:

          Used the wrong comment character in this file.

Thu Jul  7 16:29:47 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.cpp:
        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.cpp:

          Cleanup the output when enqueueing fails.

Thu Jul  7 15:39:54 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/tests/Notify/performance-tests/RedGreen/RedGreen_Test.cpp:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/listener.conf:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/listener.conf.xml:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/lookup.conf:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/lookup.conf.xml:

          Fix test failure due to premature orb->shutdown().
          Update conf files to reflect changes in Notify options.

Thu Jul 07 12:46:22 2005   Gary Maxey <gary.maxey@hp.com>

        * TAO_IDL/fe/idl.ll
        * TAO_IDL/fe/lex.yy.cpp
        * TAO_IDL/fe/lex.yy.cpp.diff

          Added to regular expression for IDL_STRING_LITERAL and
          IDL_WSTRING_LITERAL to allow additional escape sequences
          specified by OMG.

Thu Jul  7 19:50:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/performance.html:
          Added some info about how to reduce compilation footprint

Thu Jul  7 19:27:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTScheduling/Current.cpp:
          Fixed conversion warning

Thu Jul  7 11:33:09 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/ORB_Table.inl (operator==):

          Improved slightly by adding a TAO_ORB_Core pointer equality
          check.

Thu Jul  7 11:23:12 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/ORB_Table.inl (ORB_Core_Ref_Counter):

          Fixed seg faults caused by calling methods through a nil
          TAO_ORB_Core pointer by verifying that the pointer is non-nil
          before doing so.  Thanks to Johnny for pointing out the
          corresponding crash.

Thu Jul  7 18:13:24 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/utl_err.h:
        * TAO_IDL/util/utl_err.cpp:
        * TAO_IDL/util/utl_global.cpp (string_to_scoped_name):

          Minor fix to the logic of string_to_scoped_name(), and
          removed the "malformed scoped name string" error since
          the lookup now catches it if it's incorrect.

Thu Jul  7 16:56:55 2005  Simon McQueen  <sm@prismtech.com>

        * tao/ORB_Core.cpp:
        * tao/params.cpp:
        * tao/params.h:
        * tao/params.i:
        * tao/IIOP_Connection_Handler.cpp:

          Add configuration property '-ORBNoServerSideNameLookups' so
          that server side client name lookups can still be prevented
          when '-ORBDottedDecimalAddresses 1' is not used.

        * docs/Options.html:

          Document the above.

Thu Jul  7 10:01:26 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/orbsvcs/Notify/Builder.cpp:
        * orbsvcs/orbsvcs/Notify/RT_Notify_Service.cpp:
        * orbsvcs/tests/Notify/Basic/ConnectDisconnect.h:
        * orbsvcs/tests/Notify/Basic/Events.h:
        * orbsvcs/tests/Notify/Basic/Filter.h:
        * orbsvcs/tests/Notify/Basic/MultiTypes.h:
        * orbsvcs/tests/Notify/Basic/Sequence.h:
        * orbsvcs/tests/Notify/Basic/Simple.h:
        * orbsvcs/tests/Notify/Basic/Updates.h:
        * orbsvcs/tests/Notify/MT_Dispatching/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Reconnecting/Consumer.h:
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Test_Filter/RT_Test_Filter.h:
        * orbsvcs/tests/Notify/Test_Filter/RT_Test_FilterFactory.h:
        * orbsvcs/tests/Notify/lib/Notify_Test_Client.cpp:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/RedGreen_Test.h:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Throughput.h:
        * tests/Bug_2183_Regression/Hello.h:

          Fix problems with ACE exception macros and fuzz errors.

Thu Jul  7 15:18:01 2005  Boris Kolpackov  <boris@kolpackov.net>

        * orbsvcs/examples/Notify/Federation/federation.mwc:
        * orbsvcs/examples/Notify/Federation/Agent/Agent.cpp:
        * orbsvcs/examples/Notify/Federation/Agent/Agent.mpc:
        * orbsvcs/examples/Notify/Federation/Agent/README:
        * orbsvcs/examples/Notify/Federation/Agent/agent.dia:
        * orbsvcs/examples/Notify/Federation/Gate/Gate.cpp:
        * orbsvcs/examples/Notify/Federation/Gate/Gate.h:
        * orbsvcs/examples/Notify/Federation/Gate/Gate.mpc:
        * orbsvcs/examples/Notify/Federation/SpaceCraft/README:
        * orbsvcs/examples/Notify/Federation/SpaceCraft/SpaceCraft.cpp:
        * orbsvcs/examples/Notify/Federation/SpaceCraft/SpaceCraft.mpc:

          Added a set of examples and support code that show how to set
          up a multicast-based federation of  Notification Services.

        * NEWS:

          Announce new examples.

Thu Jul  7 11:24:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core_TSS_Resources.cpp:
          Removed not needed include

Thu Jul  7 08:00:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Basic_Arguments.cpp:
        * tao/Special_Basic_Arguments.cpp:
        * tao/UB_String_Arguments.cpp:
          Removed these files

        * tao/tao.mpc:
        * tao/Makefile.am:
          Updated for changes above

        * tao/Object.cpp (_get_orb):
          Updated to comply with coding guidelines. Thanks to Ossama to
          point out a few minor items

Wed Jul  6 23:10:52 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Object_Ref_Table.cpp (bind):

          "Transfer" ownership of the object reference being inserted to the
          object reference table by increasing the reference count.
          Addresses seg faults in code that accesses object references
          from the this table.

Wed Jul  6 15:06:17 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.cpp:
        * orbsvcs/tests/Notify/Blocking/common.cpp:
        * orbsvcs/tests/Notify/Discarding/common.cpp:
        * orbsvcs/tests/Notify/Ordering/common.cpp:
        * orbsvcs/tests/Notify/Reconnecting/Consumer.cpp:
        * orbsvcs/tests/Notify/Reconnecting/Supplier.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/common.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/common.cpp:
        * orbsvcs/tests/Notify/lib/Task_Stats.inl:
        * orbsvcs/tests/Notify/performance-tests/Filter/common.cpp:

          Some ACE_*_cast macros were inadvertently reintroduced when porting notification
        service fixes from 1.4a.

Wed Jul  6 12:15:49 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Object_Ref_Table.h (TAO_Object_Ref_Table):

          Re-exported this class until code that accesses it directly is
          updated to use the standard interface.

        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/RTScheduler_Manager.i:

          Reverted changes below due to potential order of initialization
          problems.

Wed Jul  6 11:06:22 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/RTCORBA/RT_Protocols_Hooks.cpp:
        * tao/RTScheduling/Current.cpp:
        * tao/RTScheduling/RTScheduler_Manager.i:

          Register and retrieve initial references through the standard
          ORB interface, not directly through the underlying table.  The
          table is no longer exported.

Wed Jul 06 10:48:04 2005   Gary Maxey <gary.maxey@hp.com>

        * TAO_IDL/ast/ast_expression.cpp:
        * TAO_IDL/include/ast_expression.h:

          Fix for broken mod (%) operator in constant expressions.

Wed Jul  6 08:11:07 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp (create_with_id):
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp (create_with_id):
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp (create_with_id):

          Fix cut-n-pasto introduced in:
          Tue Jul  5 18:01:04 2005  J.T. Conklin  <jtc@acorntoolworks.com>

Wed Jul  6 15:44:16 2005  Simon McQueen  <sm@prismtech.com>

        * tao/IIOP_Connection_Handler.cpp (open):

          Set server side sockets to be non-blocking even if the
          client connection policy is blocking. This fixes bugzilla
          #2183.

        * tests/Bug_2183_Regression/Bug_2183_Regression.mpc:
        * tests/Bug_2183_Regression/Hello.cpp:
        * tests/Bug_2183_Regression/Hello.h:
        * tests/Bug_2183_Regression/README:
        * tests/Bug_2183_Regression/Test.idl:
        * tests/Bug_2183_Regression/client.cpp:
        * tests/Bug_2183_Regression/hang_client.pl:
        * tests/Bug_2183_Regression/run_test.pl:
        * tests/Bug_2183_Regression/server.conf:
        * tests/Bug_2183_Regression/server.cpp:

          Added regression test for the above.

Wed Jul  6 09:47:47 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.cpp:
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp:
        * orbsvcs/orbsvcs/Notify/Event.inl:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/Reactive_Task.h:
        * orbsvcs/orbsvcs/Notify/Reactive_Task.cpp:
        * orbsvcs/tests/Notify/lib/Notify_Test_Client.h:

          Fix misc problems with exception macros.
          Fix problem with renamed init() method.
          Fix problem with use of ACE_Thread_Mutex instead of TAO_SYNCH_MUTEX.

Tue Jul  5 18:01:04 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.cpp (create_with_id):
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp (create_with_id):
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp (create_with_id):
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp (create_with_id):

          Throw DsLogAdmin::InvalidLogFullAction when passed an
          unknown/unsupported log full action.

Tue Jul  5 17:22:12 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp (create_with_id):

          Uncomment ACE_CHECK_RETURN(...) after call to object_creation()
          to align behavior between native and emulated exceptions and to
          match cooresponding checks in NotifyLogFactory_i.cpp and
          RTEventLogFactory_i.cpp.

Tue Jul  5 17:06:09 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp (set_log_full_action):
        * orbsvcs/orbsvcs/Log/Log_i.h:

          Throw DsLogAdmin::InvalidLogFullAction when passed an
          unknown/unsupported log full action.

Tue Jul  5 23:03:27 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/include/utl_err.h:
        * TAO_IDL/util/utl_err.cpp:
        * TAO_IDL/util/utl_global.cpp:

          - Added a check to code that converts a string to a
            ScopedName class in the IDL compiler. The check
            detects certain kinds (not all) of malformed strings.

          - Fixed a bug in the string handling code that processes
            a #pragma ID directive. There was confusion if the
            target node name was not scoped (contained no double
            colon) but the ID string did.

          Thanks to Gar Maxey <gary.maxey@hp.com> for sending in
          the example IDL file that uncovered these problems.

Tue Jul  5 14:12:07 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/tests/ImplRepo/run_test.pl:

          Cleanup generated files such as IORs and the copy of the server
          executable.

Tue Jul 05 11:49:13 2005   Gary Maxey <gary.maxey@hp.com>

        * tao/Valuetype/StringValueC.inl:

          Avoid error when compiling with HPUX compiler.

Tue Jul  5 10:15:29 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/tests/Notify/Blocking/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Discarding/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Discarding/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/MT_Dispatching/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Structured_Supplier.cpp:

          Ensure that OS_NS_unistd.h is included where we use ACE_OS::unlink().

Tue Jul  5 07:48:44 2005  Justin Michel  <michel_j@ociweb.com>

        * examples/Kokyu_dsrt_schedulers/EDF_SchedulingC.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.h:

          Fix case of include for tao/TypeCode.h

Tue Jul  5 07:41:12 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/tests/Notify/Basic/AdminProperties.cpp:
        * orbsvcs/tests/Notify/Basic/ConnectDisconnect.cpp:
        * orbsvcs/tests/Notify/Basic/Events.cpp:
        * orbsvcs/tests/Notify/Basic/MultiTypes.cpp:
        * orbsvcs/tests/Notify/Basic/Sequence.cpp:
        * orbsvcs/tests/Notify/Basic/Simple.cpp:
        * orbsvcs/tests/Notify/Blocking/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Structured_Filter/go.idl:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/go.idl:
        * orbsvcs/tests/Notify/lib/Notify_Test_Client.cpp:
        * orbsvcs/tests/Notify/lib/Peer_T.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Supplier.cpp:

          Fix misc problems with use of ACE_ENV macros.
          Add missing go.idl files

Tue Jul  5 03:07:52 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/CORBA_String.h:
        * tao/CORBA_String.inl:

          Added TAO-specific equality operators.  Allows
          CORBA::{W}String_var to be used as map key.

        * tao/ORB.cpp (resolve_initial_references):

          The initial reference map is now an ACE_Array_Map, which
          implements an STL-like map interface.  Updated map iteration
          accordingly.

        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/ORB_Core.i:
        * tao/ORB_Table.cpp:
        * tao/ORB_Table.h:
        * tao/ORB_Table.inl:
        * tao/Object_Ref_Table.cpp:
        * tao/Object_Ref_Table.h:
        * tao/Object_Ref_Table.inl:
        * tao/params.cpp:
        * tao/params.h:
        * tao/params.i:

          Replaced ACE_Hash_Map_Manager_Ex usage with light weight
          ACE_Array_Map.  Hash map benefits were not worth the larger
          footprint.

          Inlined a number very small functions.  Reduces footprint.

        * tao/Object_Ref_Table.h (TAO_Object_Ref_Table):

          Do not export this class from the TAO shared library.  It is
          meant for internal use alone.

        * tao/ORB_Core_Auto_Ptr.h (TAO_ORB_Core_Auto_Ptr):

          Uncommented "explicit" constructor keyword.  Support for it has
          been required in ACE and TAO for a while now.

        * tao/Makefile.am (nobase_include_HEADERS):

          Added new Object_Ref_Table.inl inline soure file.

Mon Jul  4 18:56:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/MIOP.h:
          Added closing } that was removed by accident earlier today

Mon Jul  4 14:34:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Collocation_Opportunities/Collocation_Opportunities.cpp:
          Fixed compile error

Mon Jul  4 14:12:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.h:
        * tao/params.h:
        * tao/Server_Strategy_Factory.h:
          Removed not needed forward declarations

Mon Jul  4 13:52:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Stub.h:
          Removed not needed forward declarations

Mon Jul  4 13:42:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/orb_types.pidl:
          Don't use -GA with regeneration, we then get an A.cpp with contents
          but the C.cpp file is empty, so just generate everything in C.cpp

        * tao/orb_typesC.{h,cpp}:
        * tao/orb_typesS.h:
          Regenerated

        * tao/orb_typesA.cpp:
          Removed

        * tao/Makefile.am:
        * tao/tao.mpc:
          Removed file above

Mon Jul  4 13:37:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Makefile.am:
          Added missing Messaging_PolicyValueA.cpp

        * tao/tao.mpc:
          Added missing Messaging_PolicyValueA.cpp and
          Messaging_PolicyValueC.cpp

Mon Jul  4 13:12:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Protocols_Hooks.h:
          Removed several not needed forward declarations

Mon Jul  4 13:07:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Visibility.pidl:
          Don't use -GA with regeneration, we then get an A.cpp with contents
          but the C.cpp file is empty, so just generate everything in C.cpp

        * tao/VisibilityC.{h,cpp}:
        * tao/VisibilityS.h:
          Regenerated

        * tao/VisibilityA.cpp:
          Removed

        * tao/Makefile.am:
        * tao/tao.mpc:
          Removed file above

Mon Jul  4 12:59:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PredefinedType_Seq_Tmplinst.cpp:
          Removed this file, explicit templates are not working with TAO
          and will not work anymore in the future

        * tao/Makefile.am:
        * tao/tao.mpc:
          Removed file above

Mon Jul  4 12:05:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientService_Activate.h:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerService_Activate.h:
        * orbsvcs/orbsvcs/PortableGroup/MIOP.h:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Loader.h:
        * tao/PICurrent_Loader.h:
        * tao/BiDir_GIOP/BiDirGIOP.h:
        * tao/CodecFactory/CodecFactory.h:
        * tao/DynamicAny/DynamicAny.h:
        * tao/DynamicInterface/Dynamic_Adapter_Impl.h:
        * tao/IFR_Client/IFR_Client_Adapter_Impl.h:
        * tao/IORInterceptor/IORInterceptor_Adapter_Factory_Impl.h:
        * tao/IORManipulation/IORManip_Loader.h:
        * tao/IORTable/IORTable.h:
        * tao/ImR_Client/ImR_Client.h:
        * tao/Messaging/Messaging.h:
        * tao/ObjRefTemplate/ORT_Adapter_Factory_Impl.h:
        * tao/PI/PI.h:
        * tao/PI/PolicyFactory_Loader.h:
        * tao/PI_Server/PI_Server.h:
        * tao/PortableServer/PortableServer.h:
        * tao/TypeCodeFactory/TypeCodeFactory_Adapter_Impl.h:
        * tao/TypeCodeFactory/TypeCodeFactory_Loader.h:
        * tao/Valuetype/Valuetype_Adapter_Impl.h:
          Removed usage of ACE_HAS_BROKEN_STATIC_CONSTRUCTORS. This seems
          to be used for older broken VxWorks versions but we don't need
          this anymore. Zapped the usage of this and the workaround we
          had in TAO. This fixes bugzilla bug 2177

Mon Jul  4 11:01:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORBInitializer_Registry_Adapter.{h,cpp}:
          Added virtual destructor in new cpp file, hopefully this fixes the
          gcc 4 runtime errors

        * tao/tao.mpc
        * tao/Makefile.am:
          Added new file

Mon Jul  4 10:31:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI_Server/PI_Server.cpp:
        * tao/PI_Server/ServerRequestInterceptor_Factory_Impl.{h,cpp}:
        * tao/PI/PI.cpp:
        * tao/PI/ClientRequestInterceptor_Factory_Impl.{h,cpp}:
        * tao/PI/ClientRequestInterceptor_Adapter_Impl.{h,cpp}:
          Added guards for when interceptors are disabled. The complete
          PI/PI_Server lib shouldn't get build when interceptors are
          disabled but that is not yet possible because the
          ORBInitializers are used internally by some core libs.

Mon Jul  4 09:23:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/AMH/Sink_Server/AMH_Servant.h:
        * examples/Content_Server/AMI_Iterator/Content_Iterator_i.h:
        * examples/Content_Server/AMI_Iterator/Iterator_Handler.h:
        * examples/Content_Server/AMI_Observer/Callback_Handler.h:
        * examples/Content_Server/AMI_Observer/Callback_i.h:
        * examples/Content_Server/AMI_Observer/Push_Iterator_Handler.h:
        * examples/Content_Server/SMI_Iterator/Content_Iterator_i.h:
        * examples/Load_Balancing/Identity_i.h:
        * examples/Load_Balancing/Load_Balancer_i.h:
        * examples/Load_Balancing_persistent/Identity_i.h:
        * examples/Load_Balancing_persistent/Load_Balancer_i.h:
        * examples/POA/Forwarding/test_i.h:
        * examples/RTCORBA/Activity/Job_i.h:
        * examples/RTScheduling/Job_i.h:
        * examples/Simple/time-date/Time_Date_i.h:
        * orbsvcs/FT_ReplicationManager/FT_FaultConsumer.h:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.h:
        * orbsvcs/ImplRepo_Service/Iterator.h:
        * orbsvcs/examples/CosEC/Factory/CosEventChannelFactory_i.h:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/ConsumerAdmin_i.h:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/CosEvent_Utilities.h:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/EventChannel_i.h:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/ProxyPushConsumer_i.h:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/ProxyPushSupplier_i.h:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/SupplierAdmin_i.h:
        * orbsvcs/examples/ImR/Advanced/Manager_i.h:
        * orbsvcs/examples/ImR/Advanced/Messenger_i.h:
        * orbsvcs/examples/ImR/Combined_Service/dynserver.h:
        * orbsvcs/examples/LoadBalancing/RPS_Monitor.h:
        * orbsvcs/examples/LoadBalancing/StockFactory.h:
        * orbsvcs/examples/Log/Notify/Notify_Consumer.h:
        * orbsvcs/examples/Log/Notify/Notify_Supplier.h:
        * orbsvcs/examples/Notify/Filter/Filter.h:
        * orbsvcs/examples/Notify/Lanes/Consumer.h:
        * orbsvcs/examples/Notify/Lanes/Supplier.h:
        * orbsvcs/examples/Notify/Subscribe/Subscribe.h:
        * orbsvcs/examples/Notify/ThreadPool/Consumer.h:
        * orbsvcs/examples/Notify/ThreadPool/Supplier.h:
        * orbsvcs/examples/ORT/Gateway_i.h:
        * orbsvcs/orbsvcs/AV/AVStreams_i.h:
        * orbsvcs/orbsvcs/AV/Flows_T.h:
        * orbsvcs/orbsvcs/Event/ECG_Address_Server_Base.h:
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.h:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.h:
        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Load_Average_Monitor.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_CPU_Utilization_Monitor.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LeastLoaded.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAlert_Handler.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadAverage.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadManager.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_LoadMinimum.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_Random.h:
        * orbsvcs/orbsvcs/LoadBalancing/LB_RoundRobin.h:
        * orbsvcs/orbsvcs/Log/BasicLog_i.h:
        * orbsvcs/orbsvcs/Log/EventLog_i.h:
        * orbsvcs/orbsvcs/Log/Iterator_i.h:
        * orbsvcs/orbsvcs/Log/NotifyLogConsumer.h:
        * orbsvcs/orbsvcs/Log/NotifyLogNotification.h:
        * orbsvcs/orbsvcs/Log/NotifyLog_i.h:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.h:
        * orbsvcs/orbsvcs/Naming/Bindings_Iterator_T.h:
        * orbsvcs/orbsvcs/Naming/Naming_Context_Interface.h:
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.h:
        * orbsvcs/orbsvcs/Notify/ETCL_FilterFactory.h:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.h:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators.h:
        * orbsvcs/orbsvcs/Trader/Trader_T.h:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.h:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/Roundtrip.h:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/RPS_Monitor.h:
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/Roundtrip.h:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Roundtrip.h:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Callback.h:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Session.h:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Session_Factory.h:
        * orbsvcs/performance-tests/RTEvent/lib/Consumer.h:
        * orbsvcs/performance-tests/RTEvent/lib/Control.h:
        * orbsvcs/performance-tests/RTEvent/lib/Loopback.h:
        * orbsvcs/performance-tests/RTEvent/lib/Loopback_Consumer.h:
        * orbsvcs/performance-tests/RTEvent/lib/Loopback_Supplier.h:
        * orbsvcs/performance-tests/RTEvent/lib/Peer_Base.h:
        * orbsvcs/performance-tests/RTEvent/lib/Supplier.h:
        * orbsvcs/tests/CosEvent/Basic/Random.h:
        * orbsvcs/tests/Event/Basic/Random.h:
        * orbsvcs/tests/Event/Mcast/Common/EC_Wrapper.h:
        * orbsvcs/tests/HTIOP/Hello/Hello.h:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/Basic.h:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/Simple.h:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/Basic.h:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/Simple.h:
        * orbsvcs/tests/Miop/McastHello/McastHello.h:
        * orbsvcs/tests/Notify/Test_Filter/RT_Test_Filter.h:
        * orbsvcs/tests/Notify/Test_Filter/RT_Test_FilterFactory.h:
        * orbsvcs/tests/Notify/lib/Peer_T.h:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/RedGreen_Test.h:
        * orbsvcs/tests/RTCosScheduling/Object1_i.h:
        * orbsvcs/tests/Security/Callback/client_i.h:
        * orbsvcs/tests/Security/Callback/server_i.h:
        * orbsvcs/tests/Security/Secure_Invocation/Foo_i.h:
        * performance-tests/Protocols/Protocols.mpc
        * tests/AMI_Buffering/AMI_Buffering.h:
        * tests/AMI_Buffering/AMI_Buffering_Admin.h:
        * tests/AMI_Buffering/Reply_Handler.h:
        * tests/Any/Recursive/Hello.h:
        * tests/BiDirectional_NestedUpcall/test_i.h:
        * tests/Big_Reply/Big_Reply_i.h:
        * tests/Big_Request_Muxing/Payload_Receiver.h:
        * tests/Big_Twoways/Peer.h:
        * tests/Blocking_Sync_None/Blocking_Sync_None.h:
        * tests/Bug_1476_Regression/Sender_i.h:
        * tests/Bug_1482_Regression/Hello.h:
        * tests/Bug_1495_Regression/test_i.h:
        * tests/Bug_1551_Regression/Hello.h:
        * tests/Bug_1551_Regression/Reply_Handler.h:
        * tests/Cache_Growth_Test/Hello.h:
        * tests/Client_Leaks/Process.h:
        * tests/Client_Leaks/Process_Factory.h:
        * tests/Client_Leaks/Startup_Callback.h:
        * tests/Collocation_Tests/Hello.h:
        * tests/Connect_Strategy_Test/Hello.h:
        * tests/Connection_Purging/test_i.h:
        * tests/Crash_On_Write/Oneway_Receiver.h:
        * tests/Crashed_Callback/Crashed_Callback.h:
        * tests/Crashed_Callback/Service.h:
        * tests/Faults/ping_i.h:
        * tests/Faults/test_i.h:
        * tests/GIOP_Fragments/Java_Big_Request/Payload_Receiver.h:
        * tests/GIOP_Fragments/PMB_With_Fragments/Payload_Receiver.h:
        * tests/Hang_Shutdown/test_i.h:
        * tests/Hello/Hello.h:
        * tests/ICMG_Any_Bug/Hello.h:
        * tests/ICMG_Any_Bug/HelloWorld.h:
        * tests/IOR_Endpoint_Hostnames/bogus_i.h:
        * tests/LongUpcalls/AMI_Manager.h:
        * tests/LongUpcalls/Controller.h:
        * tests/LongUpcalls/Manager.h:
        * tests/LongUpcalls/Manager_Handler.h:
        * tests/MT_BiDir/Receiver_i.h:
        * tests/MT_BiDir/Sender_i.h:
        * tests/MT_Timeout/Sleep_Service.h:
        * tests/Nested_Upcall_Crash/Client_Peer.h:
        * tests/Nested_Upcall_Crash/Server_Peer.h:
        * tests/OBV/Supports/Supports_Test_impl.h:
        * tests/ORB_shutdown/Foo_Bar.h:
        * tests/Object_Loader/Test_i.h:
        * tests/Oneway_Buffering/Oneway_Buffering.h:
        * tests/Oneway_Buffering/Oneway_Buffering_Admin.h:
        * tests/Oneways_Invoking_Twoways/Receiver_i.h:
        * tests/Oneways_Invoking_Twoways/Sender_i.h:
        * tests/POA/Deactivate_Object/Hello.h:
        * tests/Portable_Interceptors/AMI/Echo.h:
        * tests/Portable_Interceptors/AMI/Echo_Handler.h:
        * tests/Portable_Interceptors/Collocated/Dynamic/test_i.h:
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/test_i.h:
        * tests/RTCORBA/Priority_Inversion_With_Bands/test_i.h:
        * tests/RTCORBA/Thread_Pool/test_i.h:
        * tests/Reliable_Oneways/Oneway_Receiver.h:
        * tests/Reliable_Oneways/Shutdown_Helper.h:
        * tests/Servant_To_Reference_Test/Test_i.h:
        * tests/Server_Connection_Purging/Test_i.h:
        * tests/Server_Leaks/Ping_Service.h:
        * tests/Server_Port_Zero/Hello.h:
        * tests/Stack_Recursion/Sender.h:
        * TAO_IDL/be/be_visitor_interface/interface_ih.cpp:
        * docs/tutorials/Quoter/Event_Service/Stock_i.h:
        * docs/tutorials/Quoter/RT_Event_Service/Stock_i.h:
        * docs/tutorials/Quoter/Simple/ImprovedServer/Stock_i.h:
        * examples/POA/Adapter_Activator/server.cpp:
        * examples/POA/Reference_Counted_Servant/server.cpp:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/ProxyPushConsumer_i.cpp:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/ProxyPushSupplier_i.cpp:
        * orbsvcs/examples/ImR/Combined_Service/combined.cpp:
        * orbsvcs/tests/BiDir_CORBALOC/TimeServer.cpp:
        * orbsvcs/tests/Event/Mcast/Complex/consumer.cpp:
        * orbsvcs/tests/Event/Mcast/Simple/consumer.cpp:
        * orbsvcs/tests/Event/Mcast/Two_Way/application.cpp:
        * orbsvcs/tests/ImplRepo/scale/server_i.cpp:
        * orbsvcs/tests/Redundant_Naming/client.cpp:
        * orbsvcs/tests/Security/ssliop_corbaloc/client.cpp:
        * orbsvcs/tests/Simple_Naming/client.cpp:
        * performance-tests/Latency/AMH_Single_Threaded/Roundtrip.h:
        * performance-tests/Latency/AMI/Roundtrip.h:
        * performance-tests/Latency/AMI/Roundtrip_Handler.h:
        * performance-tests/Latency/Collocation/Roundtrip.h:
        * performance-tests/Latency/DII/Roundtrip.h:
        * performance-tests/Latency/DSI/Roundtrip.h:
        * performance-tests/Latency/Deferred/Roundtrip.h:
        * performance-tests/Latency/Single_Threaded/Roundtrip.h:
        * performance-tests/Latency/Thread_Per_Connection/Roundtrip.h:
        * performance-tests/Latency/Thread_Pool/Roundtrip.h:
        * performance-tests/Memory/IORsize/Foo_i.h:
        * performance-tests/Memory/IORsize/Memory_Growth.h:
        * performance-tests/Memory/Single_Threaded/Memory_Growth.h:
        * performance-tests/POA/Implicit_Activation/Factory.h:
        * performance-tests/POA/Implicit_Activation/Simple.h:
        * performance-tests/Protocols/Protocols.mpc
        * performance-tests/Protocols/distributor.cpp:
        * performance-tests/Protocols/receiver.cpp:
        * performance-tests/RTCorba/Thread_Pool/server.cpp:
        * performance-tests/Sequence_Latency/AMH_Single_Threaded/Roundtrip.h:
        * performance-tests/Sequence_Latency/AMI/Roundtrip.h:
        * performance-tests/Sequence_Latency/AMI/Roundtrip_Handler.h:
        * performance-tests/Sequence_Latency/DII/Roundtrip.h:
        * performance-tests/Sequence_Latency/DSI/Roundtrip.h:
        * performance-tests/Sequence_Latency/Deferred/Roundtrip.h:
        * performance-tests/Sequence_Latency/Single_Threaded/Roundtrip.h:
        * performance-tests/Sequence_Latency/Thread_Per_Connection/Roundtrip.h:
        * performance-tests/Sequence_Latency/Thread_Pool/Roundtrip.h:
        * performance-tests/Throughput/Receiver.h:
        * performance-tests/Throughput/Receiver_Factory.h:
        * tao/ImR_Client/ServerObject_i.h:
        * tests/AMH_Exceptions/server.cpp:
        * tests/AMH_Oneway/server.cpp:
        * tests/Bug_1568_Regression/server.cpp:
        * tests/Bug_1670_Regression/server.cpp:
        * tests/Collocation_Opportunities/Collocation_Opportunities.cpp:
        * tests/Faults/test_i.h:
        * tests/Objref_Sequence_Test/server.cpp:
        * tests/POA/Etherealization/Etherealization.cpp:
        * tests/POA/MT_Servant_Locator/MT_Servant_Locator.cpp:
        * tests/POA/Nested_Non_Servant_Upcalls/Nested_Non_Servant_Upcalls.cpp:
        * tests/POA/Non_Servant_Upcalls/Non_Servant_Upcalls.cpp:
        * tests/POA/Persistent_ID/server.cpp:
        * tests/RTCORBA/Collocation/Collocation.cpp:
        * tests/RTCORBA/Linear_Priority/server.cpp:
        * tests/RTCORBA/Persistent_IOR/server.cpp:
        * tests/RTCORBA/Policy_Combinations/server.cpp:
        * tests/RTCORBA/Profile_And_Endpoint_Selection/server.cpp:
        * tests/UNKNOWN_Exception/server.cpp:
          All servants are reference counted by default, no need anymore to
          derive the servant from RefCountServantBase. Also removed the msvc
          pragma push/pop when it was not needed anymore

        * tao/Object.{h,cpp}:
          Corrected implementation _get_orb()

        * tao/SystemException.cpp:
          Initailize pointers with 0

Mon Jul  4 07:11:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Big_Twoways/Coordinator.h:
        * tests/Big_Twoways/Session.h:
        * tests/Big_Twoways/Session_Control.h:
        * tests/Big_Oneways/Coordinator.h:
        * tests/Big_Oneways/Peer.h:
        * tests/Big_Oneways/Session.h:
        * tests/Big_Oneways/Session_Control.h:
          No need to derive from RefCountServantBase, Servants are
          reference counted now by defailt.

        * tests/Big_Twoways/run_test.pl:
        * tests/Big_Oneways/run_test.pl:
          Use WaitKill for the server, if the server is still running, it
          is an error

        * tests/Big_Twoways/server.cpp:
        * tests/Big_Oneways/server.cpp:
          No need to do a _remove_ref, the _var handle this

Sun Jul  3 15:09:06 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:

          Fix typo in ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA case.

        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:

          Change create() method parameter name from max_rec_size to
          max_size, as it specifies the size of the whole log, not a
          single log record.

Sun Jul  3 15:00:29 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * tao/tao.mpc:

          Removed Interceptor_List.h from Header_Files and
          Interceptor_List.cpp from Template_Files sections.

Fri Jul 01 15:14:06 2005   Gary Maxey <gary.maxey@hp.com>

        * tao/Valuetype/StringValueC.inl:

          Avoid error when compiling with MSVC6 compiler.

Fri Jul  1 16:14:16 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/tests/Notify/Test_Filter/RT_Test_Filter.cpp:
        * orbsvcs/tests/Notify/lib/Options_Parser.cpp:

          Fix some typos with the previous checkin.

Fri Jul  1 14:43:27 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/Notify_Service/Notify_Service.cpp:
        * orbsvcs/Notify_Service/README:
        * orbsvcs/Notify_Service/svc.conf:
        * orbsvcs/Notify_Service/svc.conf.xml:
        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/CosNotifyComm.idl:
        * orbsvcs/orbsvcs/Notify/Admin.h:
        * orbsvcs/orbsvcs/Notify/Admin.inl:
        * orbsvcs/orbsvcs/Notify/Admin.cpp:
        * orbsvcs/orbsvcs/Notify/AdminProperties.h:
        * orbsvcs/orbsvcs/Notify/AdminProperties.inl:
        * orbsvcs/orbsvcs/Notify/AdminProperties.cpp:
        * orbsvcs/orbsvcs/Notify/Any/AnyEvent.h:
        * orbsvcs/orbsvcs/Notify/Any/AnyEvent.cpp:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Any/CosEC_ProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Any/ProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Any/PushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Any/PushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Any/PushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Any/PushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.h:
        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.cpp:
        * orbsvcs/orbsvcs/Notify/Builder.cpp:
        * orbsvcs/orbsvcs/Notify/Consumer.h:
        * orbsvcs/orbsvcs/Notify/Consumer.inl:
        * orbsvcs/orbsvcs/Notify/Consumer.cpp:
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.h:
        * orbsvcs/orbsvcs/Notify/ConsumerAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.h:
        * orbsvcs/orbsvcs/Notify/CosNotify_Service.cpp:
        * orbsvcs/orbsvcs/Notify/Default_Factory.cpp:
        * orbsvcs/orbsvcs/Notify/Delivery_Request.h:
        * orbsvcs/orbsvcs/Notify/Delivery_Request.cpp:
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.h:
        * orbsvcs/orbsvcs/Notify/ETCL_Filter.cpp:
        * orbsvcs/orbsvcs/Notify/ETCL_FilterFactory.h:
        * orbsvcs/orbsvcs/Notify/Event.h:
        * orbsvcs/orbsvcs/Notify/Event.inl:
        * orbsvcs/orbsvcs/Notify/Event.cpp:
        * orbsvcs/orbsvcs/Notify/EventChannel.h:
        * orbsvcs/orbsvcs/Notify/EventChannel.cpp:
        * orbsvcs/orbsvcs/Notify/EventChannelFactory.h:
        * orbsvcs/orbsvcs/Notify/EventChannelFactory.cpp:
        * orbsvcs/orbsvcs/Notify/EventTypeSeq.h:
        * orbsvcs/orbsvcs/Notify/Event_Manager.h:
        * orbsvcs/orbsvcs/Notify/Event_Manager.inl:
        * orbsvcs/orbsvcs/Notify/Event_Manager.cpp:
        * orbsvcs/orbsvcs/Notify/Event_Persistence_Factory.h:
        * orbsvcs/orbsvcs/Notify/FilterAdmin.h:
        * orbsvcs/orbsvcs/Notify/FilterAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request.h:
        * orbsvcs/orbsvcs/Notify/Method_Request.inl:
        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Dispatch.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Event.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Event.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Lookup.cpp:
        * orbsvcs/orbsvcs/Notify/Method_Request_Shutdown.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates.h:
        * orbsvcs/orbsvcs/Notify/Method_Request_Updates.cpp:
        * orbsvcs/orbsvcs/Notify/Name_Value_Pair.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Interpreter.h:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.h:
        * orbsvcs/orbsvcs/Notify/Notify_Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Notify/Notify_EventChannelFactory_i.cpp:
        * orbsvcs/orbsvcs/Notify/Object.h:
        * orbsvcs/orbsvcs/Notify/Object.inl:
        * orbsvcs/orbsvcs/Notify/Object.cpp:
        * orbsvcs/orbsvcs/Notify/Peer.h:
        * orbsvcs/orbsvcs/Notify/Peer.cpp:
        * orbsvcs/orbsvcs/Notify/Persistent_File_Allocator.h:
        * orbsvcs/orbsvcs/Notify/Persistent_File_Allocator.cpp:
        * orbsvcs/orbsvcs/Notify/Properties.cpp:
        * orbsvcs/orbsvcs/Notify/Proxy.h:
        * orbsvcs/orbsvcs/Notify/Proxy.cpp:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.h:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.inl:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/ProxyConsumer_T.cpp:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.h:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.inl:
        * orbsvcs/orbsvcs/Notify/ProxySupplier.cpp:
        * orbsvcs/orbsvcs/Notify/ProxySupplier_T.cpp:
        * orbsvcs/orbsvcs/Notify/Proxy_T.cpp:
        * orbsvcs/orbsvcs/Notify/QoSProperties.h:
        * orbsvcs/orbsvcs/Notify/QoSProperties.inl:
        * orbsvcs/orbsvcs/Notify/QoSProperties.cpp:
        * orbsvcs/orbsvcs/Notify/README:
        * orbsvcs/orbsvcs/Notify/RT_Builder.cpp:
        * orbsvcs/orbsvcs/Notify/RT_Notify_Service.h:
        * orbsvcs/orbsvcs/Notify/RT_Notify_Service.cpp:
        * orbsvcs/orbsvcs/Notify/Random_File.h:
        * orbsvcs/orbsvcs/Notify/Random_File.cpp:
        * orbsvcs/orbsvcs/Notify/Reactive_Task.h:
        * orbsvcs/orbsvcs/Notify/Reactive_Task.cpp:
        * orbsvcs/orbsvcs/Notify/Reconnection_Registry.h:
        * orbsvcs/orbsvcs/Notify/Refcountable.h:
        * orbsvcs/orbsvcs/Notify/Refcountable.cpp:
        * orbsvcs/orbsvcs/Notify/Refcountable_Guard_T.h:
        * orbsvcs/orbsvcs/Notify/Refcountable_Guard_T.inl:
        * orbsvcs/orbsvcs/Notify/Routing_Slip.h:
        * orbsvcs/orbsvcs/Notify/Routing_Slip.cpp:
        * orbsvcs/orbsvcs/Notify/Routing_Slip_Persistence_Manager.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequenceProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Sequence/SequencePushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Service.h:
        * orbsvcs/orbsvcs/Notify/Standard_Event_Persistence.h:
        * orbsvcs/orbsvcs/Notify/Standard_Event_Persistence.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/RT_StructuredProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Structured/RT_StructuredProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredEvent.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredEvent.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredProxyPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushConsumer.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushConsumer.cpp:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushSupplier.h:
        * orbsvcs/orbsvcs/Notify/Structured/StructuredPushSupplier.cpp:
        * orbsvcs/orbsvcs/Notify/Subscription_Change_Worker.h:
        * orbsvcs/orbsvcs/Notify/Supplier.h:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.h:
        * orbsvcs/orbsvcs/Notify/SupplierAdmin.cpp:
        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.h:
        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.inl:
        * orbsvcs/orbsvcs/Notify/ThreadPool_Task.cpp:
        * orbsvcs/orbsvcs/Notify/Timer.h:
        * orbsvcs/orbsvcs/Notify/Timer_Queue.h:
        * orbsvcs/orbsvcs/Notify/Timer_Reactor.h:
        * orbsvcs/orbsvcs/Notify/Topology_Object.h:
        * orbsvcs/orbsvcs/Notify/Topology_Object.cpp:
        * orbsvcs/orbsvcs/Notify/Worker_Task.h:
        * orbsvcs/orbsvcs/Notify/Buffering_Strategy.inl:
        * orbsvcs/orbsvcs/Notify/Sequence/Batch_Buffering_Strategy.h:
        * orbsvcs/orbsvcs/Notify/Sequence/Batch_Buffering_Strategy.cpp:

          Ported over the refactoring of the Notify Service by Dave Giovannini
        <giovannini_d at ociweb dot com>. These changes primarily fix memory leaks
        and crashes.
          Ported over my own changes that reimplement the OrderPolicy, BlockingPolicy, and
        DiscardPolicy features.

        * orbsvcs/tests/Notify/Basic/AdminProperties.h:
        * orbsvcs/tests/Notify/Basic/AdminProperties.cpp:
        * orbsvcs/tests/Notify/Basic/ConnectDisconnect.h:
        * orbsvcs/tests/Notify/Basic/ConnectDisconnect.cpp:
        * orbsvcs/tests/Notify/Basic/Events.h:
        * orbsvcs/tests/Notify/Basic/Events.cpp:
        * orbsvcs/tests/Notify/Basic/Filter.h:
        * orbsvcs/tests/Notify/Basic/Filter.cpp:
        * orbsvcs/tests/Notify/Basic/IdAssignment.cpp:
        * orbsvcs/tests/Notify/Basic/LifeCycle.cpp:
        * orbsvcs/tests/Notify/Basic/MultiTypes.h:
        * orbsvcs/tests/Notify/Basic/MultiTypes.cpp:
        * orbsvcs/tests/Notify/Basic/Sequence.h:
        * orbsvcs/tests/Notify/Basic/Sequence.cpp:
        * orbsvcs/tests/Notify/Basic/Simple.h:
        * orbsvcs/tests/Notify/Basic/Simple.cpp:
        * orbsvcs/tests/Notify/Basic/Updates.h:
        * orbsvcs/tests/Notify/Basic/Updates.cpp:
        * orbsvcs/tests/Notify/Basic/adminproperties.conf:
        * orbsvcs/tests/Notify/Basic/notify.mt.conf:
        * orbsvcs/tests/Notify/Basic/notify.reactive.conf:
        * orbsvcs/tests/Notify/Basic/notify.rt.conf:
        * orbsvcs/tests/Notify/Basic/run_test.pl:
        * orbsvcs/tests/Notify/Blocking/Notify_Structured_Push_Consumer.h:
        * orbsvcs/tests/Notify/Blocking/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Blocking/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Blocking/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Blocking/common.cpp:
        * orbsvcs/tests/Notify/Blocking/go.idl:
        * orbsvcs/tests/Notify/Blocking/notify.conf:
        * orbsvcs/tests/Notify/Blocking/notify.conf.xml:
        * orbsvcs/tests/Notify/Blocking/run_test.pl:
        * orbsvcs/tests/Notify/Destroy/main.cpp:
        * orbsvcs/tests/Notify/Discarding/Notify_Sequence_Push_Consumer.h:
        * orbsvcs/tests/Notify/Discarding/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Notify_Structured_Push_Consumer.h:
        * orbsvcs/tests/Notify/Discarding/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Discarding/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Discarding/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Discarding/common.cpp:
        * orbsvcs/tests/Notify/Discarding/go.idl:
        * orbsvcs/tests/Notify/Discarding/notify.conf:
        * orbsvcs/tests/Notify/Discarding/notify.conf.xml:
        * orbsvcs/tests/Notify/Discarding/run_test.pl:
        * orbsvcs/tests/Notify/Driver/main.cpp:
        * orbsvcs/tests/Notify/Lanes/consumer.conf:
        * orbsvcs/tests/Notify/Lanes/notify.conf:
        * orbsvcs/tests/Notify/Lanes/run_test.pl:
        * orbsvcs/tests/Notify/Lanes/run_test_consumer.pl:
        * orbsvcs/tests/Notify/Lanes/run_test_notify.pl:
        * orbsvcs/tests/Notify/Lanes/run_test_supplier.pl:
        * orbsvcs/tests/Notify/Lanes/supplier.conf:
        * orbsvcs/tests/Notify/MT_Dispatching/Notify_Structured_Push_Consumer.h:
        * orbsvcs/tests/Notify/MT_Dispatching/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/MT_Dispatching/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/MT_Dispatching/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/MT_Dispatching/go.idl:
        * orbsvcs/tests/Notify/MT_Dispatching/notify_mtdispatching.conf:
        * orbsvcs/tests/Notify/MT_Dispatching/notify_mtdispatching.conf.xml:
        * orbsvcs/tests/Notify/MT_Dispatching/notify_mtsource.conf:
        * orbsvcs/tests/Notify/MT_Dispatching/notify_mtsource.conf.xml:
        * orbsvcs/tests/Notify/MT_Dispatching/notify_nothreads.conf:
        * orbsvcs/tests/Notify/MT_Dispatching/notify_nothreads.conf.xml:
        * orbsvcs/tests/Notify/MT_Dispatching/run_test.pl:
        * orbsvcs/tests/Notify/Ordering/Notify_Sequence_Push_Consumer.h:
        * orbsvcs/tests/Notify/Ordering/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Notify_Structured_Push_Consumer.h:
        * orbsvcs/tests/Notify/Ordering/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Ordering/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Ordering/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Ordering/common.cpp:
        * orbsvcs/tests/Notify/Ordering/go.idl:
        * orbsvcs/tests/Notify/Ordering/notify.conf:
        * orbsvcs/tests/Notify/Ordering/notify.conf.xml:
        * orbsvcs/tests/Notify/Ordering/run_test.pl:
        * orbsvcs/tests/Notify/PluggableTopology/Test_Topology_Factory.h:
        * orbsvcs/tests/Notify/PluggableTopology/main.cpp:
        * orbsvcs/tests/Notify/PluggableTopology/plugtop_ns.conf:
        * orbsvcs/tests/Notify/Reconnecting/Consumer.h:
        * orbsvcs/tests/Notify/Reconnecting/Consumer.cpp:
        * orbsvcs/tests/Notify/Reconnecting/README:
        * orbsvcs/tests/Notify/Reconnecting/Supplier.cpp:
        * orbsvcs/tests/Notify/Reconnecting/event.conf:
        * orbsvcs/tests/Notify/Reconnecting/ns_mt.conf:
        * orbsvcs/tests/Notify/Reconnecting/ns_mt_both.conf:
        * orbsvcs/tests/Notify/Reconnecting/ns_st.conf:
        * orbsvcs/tests/Notify/Reconnecting/ns_st_both.conf:
        * orbsvcs/tests/Notify/Reconnecting/run_test.pl:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Notify_Sequence_Push_Consumer.h:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/common.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/go.idl:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/notify.conf:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/notify.conf.xml:
        * orbsvcs/tests/Notify/Sequence_Multi_ETCL_Filter/run_test.pl:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Notify_Sequence_Push_Consumer.h:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/common.cpp:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/go.idl:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/notify.conf:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/notify.conf.xml:
        * orbsvcs/tests/Notify/Sequence_Multi_Filter/run_test.pl:
        * orbsvcs/tests/Notify/Structured_Filter/Notify_Push_Consumer.h:
        * orbsvcs/tests/Notify/Structured_Filter/Notify_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Filter/Struct_Filter.mpc:
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Filter/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Structured_Filter/notify.conf:
        * orbsvcs/tests/Notify/Structured_Filter/run_test.pl:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Notify_Push_Consumer.h:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Notify_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Notify_Push_Supplier.h:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Notify_Push_Supplier.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Struct_Multi_Filter.mpc:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/notify.conf:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/run_test.pl:
        * orbsvcs/tests/Notify/Test_Filter/RT_Test_Filter.h:
        * orbsvcs/tests/Notify/Test_Filter/RT_Test_Filter.cpp:
        * orbsvcs/tests/Notify/Test_Filter/RT_Test_FilterFactory.h:
        * orbsvcs/tests/Notify/ThreadPool/consumer.conf:
        * orbsvcs/tests/Notify/ThreadPool/notify.conf:
        * orbsvcs/tests/Notify/ThreadPool/run_test.pl:
        * orbsvcs/tests/Notify/ThreadPool/supplier.conf:
        * orbsvcs/tests/Notify/XML_Persistence/main.cpp:
        * orbsvcs/tests/Notify/XML_Persistence/run_test.pl:
        * orbsvcs/tests/Notify/XML_Persistence/svc.conf:
        * orbsvcs/tests/Notify/lib/Command.cpp:
        * orbsvcs/tests/Notify/lib/Consumer_T.h:
        * orbsvcs/tests/Notify/lib/Consumer_T.cpp:
        * orbsvcs/tests/Notify/lib/Driver.h:
        * orbsvcs/tests/Notify/lib/Driver.cpp:
        * orbsvcs/tests/Notify/lib/EventChannel_Command.cpp:
        * orbsvcs/tests/Notify/lib/Notify_Test_Client.h:
        * orbsvcs/tests/Notify/lib/Notify_Test_Client.cpp:
        * orbsvcs/tests/Notify/lib/Options_Parser.cpp:
        * orbsvcs/tests/Notify/lib/Peer_T.h:
        * orbsvcs/tests/Notify/lib/Peer_T.cpp:
        * orbsvcs/tests/Notify/lib/Periodic_Supplier.cpp:
        * orbsvcs/tests/Notify/lib/PushConsumer.cpp:
        * orbsvcs/tests/Notify/lib/PushSupplier.cpp:
        * orbsvcs/tests/Notify/lib/README:
        * orbsvcs/tests/Notify/lib/SequencePushConsumer.cpp:
        * orbsvcs/tests/Notify/lib/SequencePushSupplier.cpp:
        * orbsvcs/tests/Notify/lib/StructuredPushConsumer.cpp:
        * orbsvcs/tests/Notify/lib/StructuredPushSupplier.cpp:
        * orbsvcs/tests/Notify/lib/Supplier_T.h:
        * orbsvcs/tests/Notify/lib/Supplier_T.cpp:
        * orbsvcs/tests/Notify/lib/Task_Callback.h:
        * orbsvcs/tests/Notify/lib/Task_Stats.inl:
        * orbsvcs/tests/Notify/lib/Task_Stats.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Notify_Sequence_Push_Consumer.h:
        * orbsvcs/tests/Notify/performance-tests/Filter/Notify_Sequence_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Notify_Structured_Push_Consumer.h:
        * orbsvcs/tests/Notify/performance-tests/Filter/Notify_Structured_Push_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Sequence_Supplier.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Structured_Consumer.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/Structured_Supplier.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/common.cpp:
        * orbsvcs/tests/Notify/performance-tests/Filter/go.idl:
        * orbsvcs/tests/Notify/performance-tests/Filter/notify.conf:
        * orbsvcs/tests/Notify/performance-tests/Filter/notify.conf.xml:
        * orbsvcs/tests/Notify/performance-tests/Filter/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/RedGreen_Test.h:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/listener.conf:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/listener.conf.xml:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/lookup.conf:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/main.cpp:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/reactive.conf:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/RedGreen/svc.conf:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Throughput.h:
        * orbsvcs/tests/Notify/performance-tests/Throughput/Throughput.cpp:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_0/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_10/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_15/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_20/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_25/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_30/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_35/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_40/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_45/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_5/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/Load_50/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/README:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/consumer.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/run_all.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/1_Path_Period_0_Lanes/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_0/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_10/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_15/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_20/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_25/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_30/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_35/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_40/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_45/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_5/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/Load_50/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/README:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/consumer.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/run_all.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/3_Path_Period_10ms_Lanes/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/2_Hops/consumer.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/2_Hops/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/2_Hops/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/2_Hops_RTCORBA/consumer.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/2_Hops_RTCORBA/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/2_Hops_RTCORBA/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/3_Hops/consumer.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/3_Hops/relay.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/3_Hops/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/3_Hops/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/3_Hops_RTCORBA/consumer.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/3_Hops_RTCORBA/relay.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/3_Hops_RTCORBA/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/3_Hops_RTCORBA/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Colocated/colocated.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Colocated/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Colocated_RTCORBA/colocated.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Colocated_RTCORBA/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Notify/consumer.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Notify/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Notify/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Notify_RTCORBA/consumer.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Notify_RTCORBA/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/Notify_RTCORBA/supplier.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/README:
        * orbsvcs/tests/Notify/performance-tests/scripts/Max_Throughput/run_all.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/Paths_1/other_paths.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/Paths_10/other_paths.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/Paths_20/other_paths.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/Paths_3/other_paths.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/Paths_5/other_paths.conf:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/README:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/run_all.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/run_high_path.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/run_notify.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/run_other_paths.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/Paths_vs_Throughput/run_test.pl:
        * orbsvcs/tests/Notify/performance-tests/scripts/run_all.pl:
        * orbsvcs/tests/Notify/MT_Dispatching/notify_mtlistener.conf:
        * orbsvcs/tests/Notify/MT_Dispatching/notify_mtlistener.conf.xml:
        * orbsvcs/tests/Notify/Structured_Filter/control.idl:
        * orbsvcs/tests/Notify/Structured_Multi_Filter/control.idl:

          Dave G also refactored the tests somewhat to resolve various problems.
          Many tests were rewritten to more fully test the broken QoS features.


Fri Jul  1 17:46:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/AMI/PI_AMI.mpc:
          By accident ami was removed as base project of server

Fri Jul  1 17:04:50 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:

          When generating the base class name in the constructor of
          a sequence, changed the call to be_sequence::gen_base_class_name
          to pass the current scope (as is already done for the same call
          in the stub header visitor) instead of the global scope. This
          change fixes a problem with nested anonymous sequences, for
          example, 'sequence<sequence<short> >, in the generated
          constructor initialization list.

Fri Jul  1 11:33:12 2005  Chad Elliott  <elliott_c@ociweb.com>

        * TAO_IDL/be/be_helper.cpp:
        * TAO_IDL/be/be_visitor_arg_traits.cpp:
        * TAO_IDL/be/be_visitor_traits.cpp:
        * TAO_IDL/be_include/be_helper.h:

          When generating template specializations, do not add the stream
          type suffix.  This allows users to combine the idl generated .cpp
          files into one which with some compilers decreases build times.

Fri Jul  1 15:16:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/AVStreams/Full_Profile/run_test.pl:
        * orbsvcs/tests/AVStreams/Asynch_Three_Stage/run_test.pl:
        * orbsvcs/tests/AVStreams/Component_Switching/run_test.pl:
        * orbsvcs/tests/AVStreams/Multicast/run_test.pl:
        * orbsvcs/tests/AVStreams/Pluggable/run_test.pl:
        * orbsvcs/tests/AVStreams/Simple_Three_Stage/run_test.pl:
          Cleanup generated test files at the start, there can be an old file
          when things failed in the previous run

Fri Jul  1 15:02:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Callback/Callback.mpc:
        * performance-tests/Latency/AMH_Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Latency/AMI/AMI.mpc:
        * performance-tests/Latency/Collocation/Collocation.mpc:
        * performance-tests/Latency/DII/DII.mpc:
        * performance-tests/Latency/DSI/DSI.mpc:
        * performance-tests/Latency/Deferred/Deferred.mpc:
        * performance-tests/Latency/Single_Threaded/Single_Threaded.mpc:
        * performance-tests/Latency/Thread_Per_Connection/Thread_Per_Connection.mpc:
        * performance-tests/Latency/Thread_Pool/Thread_Pool.mpc:
        * performance-tests/Memory/IORsize/Memory_IORsize.mpc:
        * performance-tests/Memory/Single_Threaded/Memory_Growth.mpc:
        * performance-tests/POA/Create_Reference/Create_Reference.mpc:
        * performance-tests/POA/Implicit_Activation/Implicit_Activation.mpc:
          Use better base projects to simplify things

Fri Jul  1 14:51:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/ForwardRequest/PI_ForwardRequest.mpc:
          Added pi_server to the client project also

Fri Jul  1 14:40:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Invocation_Base.cpp:
          Fixed compilation error when interceptors are disabled

Fri Jul  1 07:18:44 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/IFR_Service/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:
        * tao/Makefile.am:

          Regenerated.

        * orbsvcs/IFR_Service/IFR_Service.mpc:

          Changed so-called "convenience libraries" projects to inherit
          from conv_lib.mpb.

Fri Jul  1 13:58:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/ClientRequestInterceptor_Adapter_Impl.h:
          Corrected export macro

Fri Jul  1 13:16:45 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_produce.cpp:

          Moved the conditional initialization of the *A.cpp file stream
          from before the stub header visitor executes to after the
          stub header visitor and before the stub source visitor. This
          move allows the checks for recursive types that happen in
          the stub header visitor to complete, giving correct results
          when the presence of recursive types is checked in the
          generation of includes for the *A.cpp file, if it is generated.
          The *A.cpp includes must also be generated before the *C.cpp
          file since the *A.cpp file, if generated, will steal some
          includes that would go in the *C.cpp file if the -GA option
          was not used.

Fri Jul  1 12:54:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Invocation_Interceptor.h:
          Added include of PI_Server.h

        * orbsvcs/orbsvcs/SSLIOP.mpc:
          Added PI_Server as base project

Fri Jul  1 11:30:12  UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ClientRequestInfo.{h,cpp,inl}:
          Doxygen fix and moved check_validity to the cpp file and removed
          the inline file

        * tao/ClientRequestInterceptor.pidl:
        * tao/ClientRequestInterceptorA.cpp:
        * tao/ClientRequestInterceptorC.{h,cpp}:
        * tao/ClientRequestInterceptorS.h:
          Moved to the PI library

        * tao/ClientRequestInterceptor_Adapter.{h,cpp,inl}:
          Made this a base class, real functionality is in the PI lib.
          Remove the .inl file

        * tao/ClientRequestInterceptor_Adapter_Factory.h:
          New factory base for creating a ClientRequestInterceptor_Adapter

        * tao/Interceptor.pidl:
        * tao/InterceptorA.cpp:
        * tao/InterceptorC.{h,cpp}:
        * tao/InterceptorS.h:
        * tao/Interceptor_List.{cpp,h}:
          Moved to the PI lib

        * tao/Invocation_Base.{h,cpp,inl}:
          Store the PI stack size in the invocation base and handle that
          the ClientRequestInterceptor pointer can be 0.

        * tao/IORInterceptor_Adapter.h:
          Removed several not needed forward declarations

        * tao/ORB_Core.{h,cpp,i}:
          Added methods to get the Client/Server Request interceptor adapters.
          Added the moment an interceptor is registered an adapter will be
          created on demand. Later on we just retrieve the pointer

        * tao/PortableInterceptor.pidl:
        * tao/PortableInterceptorC.h:
          Updated for the moved files

        * tao/RTScheduler.mpc:
          Needs PI_Server

        * tao/ServerRequestInterceptor.pidl:
        * tao/ServerRequestInterceptorA.cpp:
        * tao/ServerRequestInterceptorC.{h,cpp}:
        * tao/ServerRequestInterceptorS.h:
          Moved to the PI_Server library

        * tao/ServerRequestInterceptor_Adapter.{h,cpp}:
          New adapter

        * tao/ServerRequestInterceptor_Adapter_Factory.h:
          New factory

        * tao/tao.mpc:
          Updated for all moved files.

        * tao/IORInterceptor/IORInterceptor.pidl
        * tao/IORInterceptor/IORInterceptorC.h
        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.{h,cpp}:
          Updated for Interceptor_List changes

        * tao/Messaging/Asynch_Reply_Dispatcher.cpp:
          Improved debug statement

        * tao/PI/ClientRequestInterceptor.pidl:
        * tao/PI/ClientRequestInterceptorA.cpp:
        * tao/PI/ClientRequestInterceptorC.{h,cpp}:
        * tao/PI/ClientRequestInterceptorS.h:
          Moved from TAO lib

        * tao/PI/ClientRequestInterceptor_Adapter_Impl.{h,cpp,inl}:
          Implemented ClientRequestInterceptor Adapter which calls the
          interceptors
        * tao/PI/ClientRequestInterceptor_Factory_Impl.{h,cpp}:
          Implemented factory interface.

        * tao/PI/Interceptor.pidl:
        * tao/PI/InterceptorA.cpp:
        * tao/PI/InterceptorC.{h,cpp}:
        * tao/PI/InterceptorS.h:
          Moved from TAO lib

        * tao/PI/Interceptor_List_T.{h,cpp}:
          Moved from TAO lib and updated interfaces to not expose any
          internal knowledge

        * tao/PI/PI.{h,cpp}:
          Add some process directives

        * tao/PI/diff/ORBInitializer.diff
          New diff

        * tao/PI_Server/PI_Server.{h,cpp}:
          Add some process directives

        * tao/PI_Server/PS_CurrentA.cpp
        * tao/PI_Server/PS_CurrentC.{h,cpp}:
          Regenerated

        * tao/PI_Server/ServerInterceptorAdapter.{h,cpp}:
          From portableserver library, adapter that invokes server
          request interceptors

        * tao/PI_Server/ServerRequestInterceptor.pidl
        * tao/PI_Server/ServerRequestInterceptorA.cpp
        * tao/PI_Server/ServerRequestInterceptorC.cpp
        * tao/PI_Server/ServerRequestInterceptorC.h
        * tao/PI_Server/ServerRequestInterceptorS.h
          Moved from TAO lib

        * tao/PI_Server/ServerRequestInterceptor_Factory_Impl.{h,cpp}:
          New factory to create an instance of the adapter

        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/Upcall_Wrapper.cpp:
          Be aware the Server Request Interceptor adapter is a pointer and
          can be zero

        * tao/PortableServer/ServerInterceptorAdapter.{h,cpp,inl}:
          Removed, moved to the PI_Server lib

        * tao/PortableServer/ServerRequestInfo.{h,inl}:
          Export this classes, need it from the PI_Server lib

        * tao/RTCORBA/RTCORBAA.cpp
        * tao/RTCORBA/RTCORBAC.h
          Regenerated

        * tao/RTScheduling/RTScheduler.pidl
        * tao/RTScheduling/RTSchedulerA.cpp
        * tao/RTScheduling/RTSchedulerC.h
        * tao/RTScheduling/Request_Interceptor.h
          Updated for PI changes

        * tests/Bug_1495_Regression/interceptors.cpp
        * tests/Bug_1495_Regression/interceptors.h
        * tests/Portable_Interceptors/Benchmark/interceptors.cpp
        * tests/Portable_Interceptors/Benchmark/interceptors.h
        * tests/Portable_Interceptors/Dynamic/interceptors.cpp
        * tests/Portable_Interceptors/Dynamic/interceptors.h
        * tests/Portable_Interceptors/Service_Context_Manipulation/interceptors.cpp
        * tests/Portable_Interceptors/Service_Context_Manipulation/interceptors.h
        * tests/Portable_Interceptors/Bug_1559/interceptors.cpp
        * tests/Portable_Interceptors/Bug_1559/interceptors.h
          Removed these files, replaced by seperate client/server files below

        * tests/Bug_1495_Regression/client_interceptor.cpp
        * tests/Bug_1495_Regression/client_interceptor.h
        * tests/Bug_1495_Regression/server_interceptor.cpp
        * tests/Bug_1495_Regression/server_interceptor.h
        * tests/Portable_Interceptors/Benchmark/client_interceptors.cpp
        * tests/Portable_Interceptors/Benchmark/client_interceptors.h
        * tests/Portable_Interceptors/Benchmark/server_interceptors.cpp
        * tests/Portable_Interceptors/Benchmark/server_interceptors.h
        * tests/Portable_Interceptors/Bug_1559/client_interceptor.cpp
        * tests/Portable_Interceptors/Bug_1559/client_interceptor.h
        * tests/Portable_Interceptors/Bug_1559/server_interceptor.cpp
        * tests/Portable_Interceptors/Bug_1559/server_interceptor.h
        * tests/Portable_Interceptors/Dynamic/client_interceptor.cpp
        * tests/Portable_Interceptors/Dynamic/client_interceptor.h
        * tests/Portable_Interceptors/Dynamic/server_interceptor.cpp
        * tests/Portable_Interceptors/Dynamic/server_interceptor.h
        * tests/Portable_Interceptors/Service_Context_Manipulation/client_interceptor.cpp
        * tests/Portable_Interceptors/Service_Context_Manipulation/client_interceptor.h
        * tests/Portable_Interceptors/Service_Context_Manipulation/server_interceptor.cpp
        * tests/Portable_Interceptors/Service_Context_Manipulation/server_interceptor.h
          New files

        * tests/Bug_1495_Regression/Bug_1495.mpc
        * tests/Bug_1495_Regression/Server_ORBInitializer.cpp
        * tests/Bug_1495_Regression/Server_ORBInitializer.h
        * tests/Bug_1495_Regression/Threaded_Server.cpp
        * tests/Portable_Interceptors/AMI/Client_Interceptor.h
        * tests/Portable_Interceptors/AMI/PI_AMI.mpc
        * tests/Portable_Interceptors/AMI/Server_Interceptor.h
        * tests/Portable_Interceptors/Benchmark/Client_ORBInitializer.cpp
        * tests/Portable_Interceptors/Benchmark/PI_Benchmark.mpc
        * tests/Portable_Interceptors/Benchmark/Server_ORBInitializer.cpp
        * tests/Portable_Interceptors/Benchmark/client.cpp
        * tests/Portable_Interceptors/Benchmark/server.cpp
        * tests/Portable_Interceptors/Bug_1559/Bug_1559.mpc
        * tests/Portable_Interceptors/Bug_1559/Client_ORBInitializer.cpp
        * tests/Portable_Interceptors/Bug_1559/Server_ORBInitializer.cpp
        * tests/Portable_Interceptors/Bug_1559/Server_ORBInitializer.h
        * tests/Portable_Interceptors/Bug_1559/client.cpp
        * tests/Portable_Interceptors/Bug_1559/server.cpp
        * tests/Portable_Interceptors/Bug_2088/Bug_2088.mpc
        * tests/Portable_Interceptors/Collocated/Dynamic/PI_Dynamic.mpc
        * tests/Portable_Interceptors/Collocated/Dynamic/interceptors.h
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/PI_Svc_Context_Manip.mpc
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/interceptors.h
        * tests/Portable_Interceptors/Dynamic/Echo_Client_ORBInitializer.cpp
        * tests/Portable_Interceptors/Dynamic/Echo_Server_ORBInitializer.cpp
        * tests/Portable_Interceptors/Dynamic/PI_Dynamic.mpc
        * tests/Portable_Interceptors/Dynamic/client.cpp
        * tests/Portable_Interceptors/Dynamic/server.cpp
        * tests/Portable_Interceptors/ForwardRequest/Client_Request_Interceptor.h
        * tests/Portable_Interceptors/ForwardRequest/PI_ForwardRequest.mpc
        * tests/Portable_Interceptors/ForwardRequest/Server_Request_Interceptor.h
        * tests/Portable_Interceptors/ForwardRequest/test.idl
        * tests/Portable_Interceptors/IORInterceptor/PI_IORInterceptor.mpc
        * tests/Portable_Interceptors/ORB_Shutdown/PI_ORB_Shutdown.mpc
        * tests/Portable_Interceptors/ORB_Shutdown/Server_Request_Interceptor.h
        * tests/Portable_Interceptors/PICurrent/ClientRequestInterceptor.h
        * tests/Portable_Interceptors/PICurrent/ClientRequestInterceptor2.h
        * tests/Portable_Interceptors/PICurrent/PI_PICurrent.mpc
        * tests/Portable_Interceptors/PICurrent/ServerRequestInterceptor.h
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Client_Request_Interceptor.h
        * tests/Portable_Interceptors/Request_Interceptor_Flow/PI_Request_Interceptor_Flow.mpc
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Request_Interceptor.h
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Server_Request_Interceptor.h
        * tests/Portable_Interceptors/Request_Interceptor_Flow/client.cpp
        * tests/Portable_Interceptors/Service_Context_Manipulation/Client_ORBInitializer.cpp
        * tests/Portable_Interceptors/Service_Context_Manipulation/PI_Svc_Context_Manip.mpc
        * tests/Portable_Interceptors/Service_Context_Manipulation/Server_ORBInitializer.cpp
        * tests/Portable_Interceptors/Service_Context_Manipulation/client.cpp
        * tests/Portable_Interceptors/Service_Context_Manipulation/server.cpp
        * tests/RTCORBA/Client_Propagated/interceptors.h
        * orbsvcs/examples/FaultTolerance/RolyPoly/ReplicaController.h
        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly.mpc
        * orbsvcs/examples/LoadBalancing/LoadBalancing.mpc
        * orbsvcs/examples/LoadBalancing/ServerRequestInterceptor.h
        * orbsvcs/orbsvcs/CosLoadBalancing.mpc
        * orbsvcs/orbsvcs/FTORB.mpc
        * orbsvcs/orbsvcs/FaultTolerance.mpc
        * orbsvcs/orbsvcs/FtRtEvent.mpc
        * orbsvcs/orbsvcs/Security.mpc
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.h
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Interceptor.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ForwardCtrlServerInterceptor.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FtEventServiceInterceptor.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Set_Update_Interceptor.h
        * orbsvcs/orbsvcs/LoadBalancing/LB_ClientRequestInterceptor.h
        * orbsvcs/orbsvcs/LoadBalancing/LB_ServerRequestInterceptor.h
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/LoadBalancing.mpc
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/ServerRequestInterceptor.h
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/GroupRef_Manipulation.mpc
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/test.idl
          Update for PI change

Fri Jul  1 000:27:47 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_exception.cpp:
        * TAO_IDL/ast/ast_sequence.cpp:
        * TAO_IDL/ast/ast_structure.cpp:
        * TAO_IDL/ast/ast_union.cpp:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_valuetype.cpp:
        * TAO_IDL/be/be_visitor_structure/structure_ch.cpp:
        * TAO_IDL/be/be_visitor_union/union_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:

          Moved evaluation of the in_recursion_ member of structs unions
          and valuetypes to happen soon enough to make the generation of
          the file include of Recursive_Type_TypeCode.h conditional on
          whether a recursive type has been seen or not. Thanks to
          Ossama Otheman <ossama@dre.vanderbilt.edu> for suggesting
          the conditional include.

Thu Jun 30 18:53:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1551_Regression/client.cpp:
          When we get a timeout on the client threads output an error but
          first nicely destroy the POA and ORB before shutting down

Thu Jun 30 10:21:22 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp (get_current_size, get_n_records,
          flush):

          Changed argument list to use ACE_ENV_SINGLE_ARG_DECL_NOT_USED
          instead of ACE_ENV_SINGLE_ARG_DECL, since these methods do not
          throw exceptions.

Thu Jun 30 09:50:46 2005  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IIOP_Profile.cpp:
        * tao/IIOP_Profile.h:
        * tao/Profile.cpp:
        * tao/Profile.h:
        * tao/PortableServer/Default_Acceptor_Filter.cpp:
          This restores the behavior of IIOP_Profile::encode_endpoints so
          that it always creates only TAO_TAG_ENDPOINT component.
          Initially, the new TAG_ALTERNATE_IIOP_ADDRESS support was added
          to this method, with an internal test if the endpoint priority
          was TAO_INVALID_PRIORITY or not. If it was not, both kinds of
          tagged components were created, if the priority was invalid,
          only the new tagged component was created. But this causes
          trouble for RT_CORBA with multiple nics. It also generates
          redundant components.

          A new method, encode_alternate_endpoints is added to support the
          generation of combined endpoints in non-RT ORBs. This new method
          is called from Default_Acceptor_Filter.cpp. The base TAO_Profile
          supplies a null implementation of encode_alternate_endpoints so
          that existing, non-IIOP profiles don't have to be altered.

        * tao/params.cpp:
          To address the issue raised by bugzilla #2173, I've set the
          default for using shared profiles (non-RT) to 0. This avoids a
          side-effect of making shared profiles with endpoints that do not
          have a priority set in an RT environment.

        * tests/AlternateIIOP/run_test.pl:
          Add an explicit -ORBUseSharedProfile 1 to the server.

Thu Jun 30 09:29:56 2005  Gary Maxey <gary.maxey@hp.com>

        * tao/Valuetype/StringValueC.inl

          Latest attempt at getting rid of warning from gcc compiler

Thu Jun 30 14:00:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTScheduling/RTSchedulerC.cpp:
          Regenerated with the latest version of the idl compiler

Thu Jun 30 13:48:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.cpp:
          Added missing .in()

Thu Jun 30 13:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IORInterceptor/IORInfoC.cpp:
        * tao/IORInterceptor/IORInterceptorC.cpp:
        * tao/RTCORBA/RTCORBAC.cpp:
          Regenerated with the latest version of the idl compiler

Thu Jun 30 12:32:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Any/Recursive/client.cpp:
          Added include of TypeCodeFactory_Loader.h so that the
          TypeCodeFactory is loaded. Fixes crashing of the test on
          windows

Thu Jun 30 11:37:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/catior/catior.cpp:
          Fixed retrieval and printing of port number in
          cat_tag_alternate_endpoints.

Wed Jun 29 20:31:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Naming/Naming_Client.h:
          Added include of naming_client.h

Wed Jun 29 20:27:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IOR_Parser.h:
          Emulated exception macro fix

Wed Jun 29 12:02:36 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Invocation_Base.cpp:

          Moved "PortableInterceptor.h" include directive out of
          TAO_HAS_INTERCEPTORS preprocessor block.  It should always be
          visible.  Fixes errors in builds with interceptors disabled.

Wed Jun 29 18:09:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * utils/catior/catior.cpp:
          Added an extra identation for priority and priority model so that it
          is clear they belong to a certain priority and added
          PRIORITY_BANDED_CONNECTION_POLICY_TYPE as one of the types we
          recognize.

Wed Jun 29 10:13:54 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.h:

          Change type of orb_ member variable from _ptr to _var.

Wed Jun 29 10:00:31 2005  Gary Maxey <gary.maxey@hp.com>

        * TAO/tao/Valuetype/StringValueC.inl

          Change to avoid compiler warnings from some compilers.

Wed Jun 29 07:22:38 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/Makefile.am:
        * orbsvcs/FT_ReplicationManager/Makefile.am:
        * orbsvcs/ImplRepo_Service/Makefile.am:

          Regenerated.

        * TAO_IDL/tao_idl.mpc:
        * orbsvcs/FT_ReplicationManager/FT_ReplicationManager.mpc:
        * orbsvcs/ImplRepo_Service/ImplRepo_Service.mpc:

          Changed so-called "convenience libraries" projects to inherit
          from conv_lib.mpb.

Tue Jun 28 22:21:32 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Invocation_Base.inl (reply_received):
        * tao/Invocation_Base.cpp (reply_received):

          Moved this method out-of-line.  It calls a method on its
          TAO_ClientRequestInfo field.  Inlining this method exposes the
          unexported TAO_ClientRequestInfo class to code outside of the
          TAO shared library, which results in "unresolved_symbol"
          link-time errors when attempting to call
          Invocation_Base::reply_received() directly or indirectly
          (e.g. via TAO::Reply_Guard::~Reply_Guard()).  Fixes g++ 4.0
          link-time errors.

        * tao/Synch_Invocation.h (Reply_Guard):

          Improved const-correctness by making an immutable pointer member
          "const".

Tue Jun 28 20:52:22 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Concurrency_Service/Makefile.am:
        * orbsvcs/CosEvent_Service/Makefile.am:
        * orbsvcs/Dump_Schedule/Makefile.am:
        * orbsvcs/Event_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Event_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Factory_Service/Makefile.am:
        * orbsvcs/FTRT_Event_Service/Gateway_Service/Makefile.am:
        * orbsvcs/FT_ReplicationManager/Makefile.am:
        * orbsvcs/Fault_Detector/Makefile.am:
        * orbsvcs/Fault_Notifier/Makefile.am:
        * orbsvcs/IFR_Service/Makefile.am:
        * orbsvcs/ImplRepo_Service/Makefile.am:
        * orbsvcs/LifeCycle_Service/Makefile.am:
        * orbsvcs/LoadBalancer/Makefile.am:
        * orbsvcs/Naming_Service/Makefile.am:
        * orbsvcs/Notify_Service/Makefile.am:
        * orbsvcs/Scheduling_Service/Makefile.am:
        * orbsvcs/TAO_Service/Makefile.am:
        * orbsvcs/Time_Service/Makefile.am:
        * orbsvcs/Trading_Service/Makefile.am:

          Regenerated.

Tue Jun 28 19:51:49 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/Makefile.am:
        * orbsvcs/Logging_Service/Basic_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/Event_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Makefile.am:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

        * orbsvcs/orbsvcs/CosNaming.mpc:
        * orbsvcs/orbsvcs/CosNotification.mpc:
        * orbsvcs/orbsvcs/CosTrading.mpc:
        * orbsvcs/orbsvcs/DsEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsLogAdmin.mpc:
        * orbsvcs/orbsvcs/DsNotifyLogAdmin.mpc:

          Added a *_IDL project, currently only for automake builds, that
          only compiles the *.idl files.  This ensures that all generated
          files will be included in the lists of sources, headers,
          inlines, templates, etc. instead of only those used in the stub
          libraries.  Other build types continue to compile *.idl files as
          part of the stub library projects.  When this is prefected, most
          build methods can use the automake build mechanism.

        * orbsvcs/orbsvcs/CosProperty.mpc:

          Added missing *.h, *.inl, and *S_T.* files to Header_Files,
          Inline_Files, and Template_Files so that they're installed.

        * orbsvcs/orbsvcs/SSLIOP.mpc:

          Added explicit Header_Files and Inline_Files sections so all
          files are installed.

Tue Jun 28 16:11:50 2005  Gary Maxey <gary.maxey@hp.com>

        * TAO_IDL/be/be_visitor_interface/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp
        * TAO_IDL/be/be_visitor_interface_fwd/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_valuebox/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_valuebox/any_op_cs.cpp
        * TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp
        * TAO_IDL/be/be_visitor_valuetype_fwd/any_op_ch.cpp

          Backing out namespace code generation change of Mon Jun 27
          for now due to problems getting it to work across multiple
          compilers.

Tue Jun 28 13:31:01 2005  Gary Maxey <gary.maxey@hp.com>

        * TAO/tao/Valuetype/StringValueC.cpp
          Change to allow operation in non-exception environments

Tue Jun 28 10:05:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Dynamic_ParameterC.h:
          Remove generated include of TypeCode.h. This seems to cause problems
          in some builds.

Tue Jun 28 07:22:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Object.cpp (_get_orb):
          Return the orb related to the TAO_Stub, the orb_core_ member
          could sometimes be zero. Thanks to Bala for giving feedback
          on this.

Mon Jun 27 14:54:53 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:
        * tao/Makefile.am:

          Regenerated.

Mon Jun 27 13:54:27 2005  Gary Maxey <gary.maxey@hp.com>

        * TAO_IDL/be/be_util.cpp
        * TAO_IDL/be_include/be_util.h
        * TAO_IDL/be/be_visitor_interface.cpp
        * TAO_IDL/be/be_visitor_interface_fwd.cpp
        * TAO_IDL/be/be_visitor_valuebox.cpp
        * TAO_IDL/be/be_visitor_valuetype.cpp
        * TAO_IDL/be/be_visitor_valuetype_fwd.cpp
        * TAO_IDL/be/be_visitor_interface/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp
        * TAO_IDL/be/be_visitor_interface_fwd/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_valuebox/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_valuebox/any_op_cs.cpp
        * TAO_IDL/be/be_visitor_valuetype/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_valuetype/any_op_cs.cpp
        * TAO_IDL/be/be_visitor_valuetype_fwd/any_op_ch.cpp

          When generating Any insertion and extraction operators put them
          in a namespace that corresponds to their enclosing module (if
          any).  Addresses problem reported in Bugzilla report #2071.

Mon Jun 27 13:08:01 2005  Gary Maxey <gary.maxey@hp.com>

        * tao/Valuetype/ValueBase.cpp:
          Added missing copy constructor implementation

        * TAO/tao/Valuetype/StringValueC.inl
          Change to avoid warnings by some compilers

Mon Jun 27 12:19:01 2005  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp
          (TAO): Changed the comment to "Using default value of 1.5
          seconds".  Thanks to Simon Massey and Bala for resolving this.

Mon Jun 27 11:09:34 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tests/Exposed_Policies/Policy_Verifier.h:
        * tests/Exposed_Policies/Policy_Verifier.cpp:
        * tests/Exposed_Policies/client.cpp:

          Modified this test to not run if the initialization failed.  This
          avoids a core dump.

        * tests/Exposed_Policies/run_test.pl:

          Remove the ior files before running the server and cut the wait
          times in half.

Mon Jun 27 09:55:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/RTCosScheduling.mpc:
          Added requires dummy_label. The RTCosScheduling library uses
          a non compliant way to register its interceptors. This is
          causing problems with the PI refactory so disable the building
          of this lib until that has been fixed. See also bugzilla 2163.

Mon Jun 27 09:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO_IDL/be_include/be_visitor_operation/ami_cs.h:
        * TAO_IDL/be/be_visitor_operation/ami_cs.cpp:
          Removed gen_marshal_and_invoke method. It wasn't used and contained
          a lot of generation of old code that we don't use anymore

Mon Jun 27 09:05:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Policy_Validator.h:
          Fixed small typo in comment

Mon Jun 27 08:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Valuetype/ValueBase.cpp:
          Fixed implicit conversion warning and use ACE_OS::strcmp instead of
          strcmp directly

Mon Jun 27 07:48:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO/tao/*C.{h,cpp,inl}:
        * TAO/tao/*A.cpp:
        * TAO/tao/PortableServer/*C.{h,cpp,inl}:
        * TAO/tao/PortableServer/*A.cpp:
        * TAO/tao/Messaging/*C.{h,cpp,inl}:
        * TAO/tao/Messaging*A.cpp:
          Regenerated

Sat Jun 25 06:39:03 2005  Gary Maxey <gary.maxey@hp.com>

        * TAO/tao/Valuetype/StringValueC.inl
          Change to avoid warnings by some compilers

Sat Jun 25 06:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/AdapterActivatorC.cpp:
        * tao/PortableServer/ForwardRequestC.cpp:
        * tao/PortableServer/IdAssignmentPolicyC.cpp:
          Regenerated to see what the footprint results are from the latest idl
          compiler change

Fri Jun 24 23:11:45 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Messaging/TAO_Messaging.pc.in:
        * tao/RTPortableServer/TAO_RTPortableServer.pc.in:

          Update with current list of dependencies based on values from
          MPC base project files.

        * tao/PI_Server.mpc:

          Added Pkgconfig_Files definition.

        * tao/PI_Server/TAO_PI_Server.pc.in:

          New file, pkg-config *.pc template for TAO_PI_Server library.

Fri Jun 24 22:50:07 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/Makefile.am:
        * tao/Makefile.am:

          Regenerated.

Fri Jun 24 13:15:03 2005  Gary Maxey <gary.maxey@hp.com>

        * TAO_IDL/be/be_codegen.cpp
          Generated additional include files in stub header for Value Box

        * TAO/tao/Valuetype/StringValue.pidl
        * TAO/tao/Valuetype/StringValueC.cpp
        * TAO/tao/Valuetype/StringValueC.h
        * TAO/tao/Valuetype/StringValueC.inl
          Standard OMG Value Box Definitions

Fri Jun 24 19:42:03 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:

          For local interfaces, changed generated code for _narrow()
          and _unchecked_narrow() methods. For local interfaces, all
          that needs to be done is return a duplicate of a
          dynamic_cast<>, for both methods. Thanks to Johnny Willemsen
          <jwillemsen@remedy.nl> for pointing out the opportunity to
          shrink generated code, and to Ossama Othman
          <ossama@dre.vanderbilt.edu> for an informative discussion on
          the possible benefits of inlining these methods.

Fri Jun 24 13:51:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ClientRequestInfo.{cpp,inl}:
          Moved a few methods out of the inline file to the cpp file

Fri Jun 24 12:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/TAO_Server_Request.h:
          Corrected ifdef guards in this file to match the real filename

        * tao/Dynamic_Adapter.h:
          Removed forward declaration of TAO_GIOP_Twoway_Invocation

        * tao/DynamicInterface/DII_Invocation.{h,cpp,inl}:
          The inl file has some constructors that are ifdef'd with #if 0.
          These used a base class that is not there, so zapped them and
          because the inl file is now empty, removed that from the archive

Fri Jun 24 06:56:11 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:

          Avoid ambiguity error from Visual C++ 6.0.

Fri Jun 24 11:12:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ClientRequestInfo.{h,cpp,inl}:
        * tao/ClientRequestInfo_i.{h,cpp,inl}:
          Moved the implementation from ClientRequestInfo_i to
          ClientRequestInfo. The ClientRequestInfo was split into
          two parts, this is causing problems with the PI refactoring
          and after checking with Ossama we decided to merge these
          two again. This maybe has a small performance impact
          at the moment no interceptors are registered but that
          will be resolved soon with the PI refactoring itself.

        * tao/ClientRequestInterceptor_Adapter.{h,cpp}:
          Updated to use TAO_ClientRequestInfo

        * tao/Invocation_Base.{h,cpp}:
          Updated to use TAO_ClientRequestInfo

        * tao/ORB_Core_TSS_Resources.{h,cpp}:
          No need anymore to store TAO_ClientRequestInfo in TSS.
          This decouples the ClientRequestInfo from the ORB TSS which was the
          main reason to do this.

        * tao/tao.mpc:
          Removed the ClientRequestInfo_i.{h,cpp,inl} files

Fri Jun 24 10:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/AMI/client.cpp:
          Added some more checks to see if things are gone fine.

Fri Jun 24 09:29:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ClientRequestInfo_i.{h,cpp}:
          No need to have virtual methods, this is not a base and removed
          the destructor using an Abstract base, it is not used

Fri Jun 24 08:34:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FaultTolerance/FT_Invocation_Endpoint_Selectors.h
        * orbsvcs/orbsvcs/HTIOP/HTIOP_Connector.h
        * tao/ClientRequestInfo.cpp
        * tao/ClientRequestInfo.h
        * tao/ClientRequestInfo_i.cpp
        * tao/ClientRequestInfo_i.h
        * tao/ClientRequestInfo_i.inl
        * tao/Codeset_Manager.h
        * tao/Protocols_Hooks.h
        * tao/Stub.h
        * tao/PortableServer/ServerRequestInfo.cpp
        * tao/RTCORBA/RT_Endpoint_Utils.h
          Removed TAO_GIOP_Invocation forward declaration and remarks
          about this. This class doesn't exist anymore already for a long
          time

Fri Jun 24 07:04:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Leader_Follower.h:
          Added missing include for single threaded builds

Thu Jun 23 11:02:11 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.h:
        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:

          Use an IORTable::Locator_var instead of an INS_Locator to avoid a
          deletion of a stack variable.

Thu Jun 23 08:21:29 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_Compaction_Handler.cpp (handle_timeout):
        * orbsvcs/orbsvcs/Log/Log_Flush_Handler.cpp (handle_timeout):

          Catch and squelch any exceptions that might be thrown.  Also
          fixes emulated exception builds.  Thanks to Simon Massey for
          pointing out this issue.

Thu Jun 23 14:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/operation_details.{h,cpp}:
          The exception_list method should only be build when interceptors
          are enabled

Thu Jun 23 12:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.{h,cpp}:
        * tao/ORB_Core_TSS_Resources.{h,cpp}:
          Moved ORB_Core_TSS_Resources back to its own file. Problem was
          easier then on first sight, orbconf.h was not includes so the
          TSS file was build without interceptor support

Thu Jun 23 12:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.{h,cpp}:
        * tao/ORB_Core_TSS_Resources.{h,cpp}:
          Moved ORB_Core_TSS_Resources to the ORB_Core file again. The
          PI tests now break and I have not an idea why but moving it
          back fixes it now. Will sort this out soon.

Thu Jun 23 09:52:00 UTC 2005  Simon Massey  <simon.massey@prismtech.com>

        * TAO_IDL/be/be_visitor_valuebox/field_ci.cpp:
        * TAO_IDL/be/be_visitor_valuebox/union_member_ci.cpp:

          Replaced ACE_UNUSED_ARG() with native C++ unnamed parameters
          in responce to Ossama's request that the macro is only used
          in places where normal practices are not available.

        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp:

          Removed unused arg.

Wed Jun 22 18:49:03 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tao/ORB_Core.h:

          Added include of ORB_Core_TSS_Resources.h, so when the
          ACE_TSS_TYPE tss_resources_ member is declared, there
          will be knowledge of a default constructor.

Wed Jun 22 11:34:12 2005  Gary Maxey <gary.maxey@hp.com>

        * TAO_IDL/fe/y.tab.cpp
        * TAO_IDL/fe/idl.yy

          Added valuebox support

Wed Jun 22 08:23:16 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Iterator_i.cpp (handle_timeout):

          Catch and squelch any exceptions that might be thrown by
          destroy().  Thanks to Don Sharp for pointing out this
          issue.

        * orbsvcs/orbsvcs/Log/Log_Compaction_Handler.h:
        * orbsvcs/orbsvcs/Log/Log_Flush_Handler.h:

          #include "ace/Time_Value.h", needed by no-inline builds.  Thanks
          to Simon Massey for pointing out this issue.

        * orbsvcs/orbsvcs/Log/Log_i.cpp (set_records_attribute):

          Changed method to process any excess records returned by the
          query iterator.

        * orbsvcs/orbsvcs/Log/EventLog_i.cpp:
        * orbsvcs/orbsvcs/Log/EventLog_i.h:
        * orbsvcs/orbsvcs/Log/NotifyLog_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLog_i.h:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLog_i.h:

          Removed write_recordlist() method, as it just called
          write_recordlist() on the base class.

Wed Jun 22 14:21:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.{h,cpp,i}:
        * tao/ORB_Core_TSS_Resources.{h,cpp}:
          Moved TAO_ORB_Core_TSS_Resources to its own file. Makes it much easier
          to just see where things are used.

        * tao/tao.mpc:
          Added new files

        * tao/Leader_Follower.{h,cpp,i}:
        * tao/Leader_Follower_Flushing_Strategy.cpp:
        * tao/LF_Connect_Strategy.cpp:
        * tao/LF_Event.cpp LF_Strategy_Complete.cpp:
        * tao/ORB.cpp:
        * tao/PICurrent.cpp:
        * tao/Thread_Lane_Resources.cpp:
        * tao/Transport.cpp:
        * tao/Wait_On_Leader_Follower.cpp:
        * tao/Wait_On_LF_No_Upcall.cpp:
        * tao/ClientRequestInterceptor_Adapter.cpp:
        * tao/RTCORBA/Thread_Pool.cpp:
        * tao/RTCORBA/RT_Thread_Lane_Resources_Manager.cpp:
        * tao/RTPortableServer/RT_Collocation_Resolver.cpp:
        * tao/RTPortableServer/RT_Servant_Dispatcher.cpp:
          Added missing includes now we get less for free from ORB_Core

Wed Jun 22 12:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ClientRequestInfo_i.{h,cpp,inl}:
          Removed reply_status and response_expected methods, they had a
          comment that they need to go and they are not used in the TAO
          libs so it is now time to zap them

Wed Jun 22 12:15:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Request_Interceptor_Flow/Request_Interceptor.cpp:
          Added checks in the destroy that start and end interception
          point calls must not be zero. If they are zero there is a bug
          in TAO

        * tests/Portable_Interceptors/Request_Interceptor_Flow/client.cpp:
        * tests/Portable_Interceptors/PICurrent/client.cpp:
          Explicitly destroy the ORB. When this is not done explicitly the
          destroy operation of the registered interceptors is not called and
          then our checks are not triggered in the destoy operation of the
          registered interceptors

Wed Jun 22 10:27:00 UTC 2005  Simon Massey  <simon.massey@prismtech.com>

        * TAO_IDL/be/be_visitor_valuebox/field_ci.cpp:
        * TAO_IDL/be/be_visitor_valuebox/union_member_ci.cpp:

          Added ACE_UNUSED_ARG() to the above files.

Tue Jun 21 17:50:26 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Interceptor_List.cpp:

          Include "tao/debug.h" to pull in TAO_debug_level global variable
          declaration.

Tue Jun 21 14:41:01 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * TAO_IDL/be/be_visitor_argument/marshal_ss.cpp:
        * TAO_IDL/be/be_visitor_field/cdr_op_cs.cpp:

          Add missing "int" return type to method definitions.

        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.h:

          Added flush and compaction handlers to class.  The flush handler
          is scheduled when the QoS is set to QoSFlush.  The compaction
          handler is scheduled when the max record life is set.

          Removed explicit calls to remove_old_records(), that is now done
          via the compaction handler.

        * orbvcs/orbsvcs/DsLogAdmin.mpc:

          Added Log_Flush_Handler.cpp and Log_Compaction_Handler.cpp to
          the DsLogAdmin_Serv project's list of Source Files.

        * orbsvcs/orbsvcs/Log/Log_Flush_Handler.cpp:
        * orbsvcs/orbsvcs/Log/Log_Flush_Handler.h:

          New files.  Added TAO_Log_Flush_Handler class that manages an
          interval timer that calls flush() on the log when it fires.  The
          interval is currently set to 300 seconds.  This should probably
          be a parameter that is specified when the service is started.

        * orbsvcs/orbsvcs/Log/Log_Compaction_Handler.cpp:
        * orbsvcs/orbsvcs/Log/Log_Compaction_Handler.h:

          New files.  Added TAO_Log_Compaction_Handler class that manages
          an interval timer that calls remove_old_records() on the log
          when it fires.  The interval is currently set to 60 seconds.
          This should probably be a parameter that is specified when the
          service is started.

Tue Jun 21 14:27:12 2005  Gary Maxey <gary.maxey@hp.com>

        * tao/Valuetype/ValueBase.h
        * tao/Valuetype/ValueBase.cpp
          Added support method for valuebox demarshalling.

Tue Jun 21 13:38:23 2005  Gary Maxey <gary.maxey@hp.com>

        * tao/Valuetype/Value_VarOut_T.cpp
          Added missing add_ref in TAO_Value_Var_T assignment operator

Tue Jun 21 13:35:00 2005  Gary Maxey <gary.maxey@hp.com>

        * TAO_IDL/be_include/be_visitor_arg_traits.h
        * TAO_IDL/be_include/be_visitor_argument/arglist.h
        * TAO_IDL/be_include/be_visitor_argument/invoke_cs.h
        * TAO_IDL/be_include/be_visitor_argument/marshal_ss.h
        * TAO_IDL/be_include/be_visitor_argument/upcall_ss.h
        * TAO_IDL/be_include/be_visitor_argument/vardecl_ss.h
        * TAO_IDL/be_include/be_visitor_array/array.h
        * TAO_IDL/be_include/be_visitor_array/cdr_op_cs.h
        * TAO_IDL/be_include/be_visitor_exception/ctor.h
        * TAO_IDL/be_include/be_visitor_exception/ctor_assign.h
        * TAO_IDL/be_include/be_visitor_field/cdr_op_cs.h
        * TAO_IDL/be_include/be_visitor_field/field_ch.h
        * TAO_IDL/be_include/be_visitor_operation/rettype.h
        * TAO_IDL/be_include/be_visitor_operation/rettype_return_cs.h
        * TAO_IDL/be_include/be_visitor_sequence/buffer_type.h
        * TAO_IDL/be_include/be_visitor_sequence/cdr_op_cs.h
        * TAO_IDL/be_include/be_visitor_sequence/sequence_base.h
        * TAO_IDL/be_include/be_visitor_tmplinst/arg_tmplinst.h
        * TAO_IDL/be_include/be_visitor_tmplinst/tmplinst_cs.h
        * TAO_IDL/be_include/be_visitor_tmplinst/tmplinst_ss.h
        * TAO_IDL/be_include/be_visitor_typecode/alias_typecode.h
        * TAO_IDL/be_include/be_visitor_typecode/typecode_decl.h
        * TAO_IDL/be_include/be_visitor_typedef/typedef_ch.h
        * TAO_IDL/be_include/be_visitor_union_branch/cdr_op_cs.h
        * TAO_IDL/be_include/be_visitor_union_branch/private_ch.h
        * TAO_IDL/be_include/be_visitor_union_branch/public_assign_cs.h
        * TAO_IDL/be_include/be_visitor_union_branch/public_ch.h
        * TAO_IDL/be_include/be_visitor_union_branch/public_ci.h
        * TAO_IDL/be_include/be_visitor_union_branch/public_reset_cs.h
        * TAO_IDL/be_include/be_visitor_valuetype/field_cdr_cs.h
        * TAO_IDL/be_include/be_visitor_valuetype/field_ch.h
        * TAO_IDL/be_include/be_visitor_valuetype/field_cs.h
        * TAO_IDL/be/be_sequence.cpp
        * TAO_IDL/be/be_visitor_arg_traits.cpp
        * TAO_IDL/be/be_visitor_argument.cpp
        * TAO_IDL/be/be_visitor_argument/arglist.cpp
        * TAO_IDL/be/be_visitor_argument/invoke_cs.cpp
        * TAO_IDL/be/be_visitor_argument/marshal_ss.cpp
        * TAO_IDL/be/be_visitor_argument/upcall_ss.cpp
        * TAO_IDL/be/be_visitor_argument/vardecl_ss.cpp
        * TAO_IDL/be/be_visitor_array.cpp
        * TAO_IDL/be/be_visitor_array/array.cpp
        * TAO_IDL/be/be_visitor_array/cdr_op_cs.cpp
        * TAO_IDL/be/be_visitor_exception.cpp
        * TAO_IDL/be/be_visitor_exception/ctor_assign.cpp
        * TAO_IDL/be/be_visitor_exception/exception_ctor.cpp
        * TAO_IDL/be/be_visitor_field.cpp
        * TAO_IDL/be/be_visitor_field/field_ch.cpp
        * TAO_IDL/be/be_visitor_field/cdr_op_cs.cpp
        * TAO_IDL/be/be_visitor_operation.cpp
        * TAO_IDL/be/be_visitor_operation/rettype.cpp
        * TAO_IDL/be/be_visitor_operation/rettype_return_cs.cpp
        * TAO_IDL/be/be_visitor_sequence.cpp
        * TAO_IDL/be/be_visitor_sequence/buffer_type.cpp
        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp
        * TAO_IDL/be/be_visitor_sequence/sequence_base.cpp
        * TAO_IDL/be/be_visitor_tmplinst.cpp
        * TAO_IDL/be/be_visitor_tmplinst/arg_tmplinst.cpp
        * TAO_IDL/be/be_visitor_tmplinst/tmplinst_cs.cpp
        * TAO_IDL/be/be_visitor_tmplinst/tmplinst_ss.cpp
        * TAO_IDL/be/be_visitor_typecode.cpp
        * TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp
        * TAO_IDL/be/be_visitor_typecode/alias_typecode.cpp
        * TAO_IDL/be/be_visitor_typedef.cpp
        * TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp
        * TAO_IDL/be/be_visitor_union_branch.cpp
        * TAO_IDL/be/be_visitor_union_branch/cdr_op_cs.cpp
        * TAO_IDL/be/be_visitor_union_branch/private_ch.cpp
        * TAO_IDL/be/be_visitor_union_branch/public_assign_cs.cpp
        * TAO_IDL/be/be_visitor_union_branch/public_ch.cpp
        * TAO_IDL/be/be_visitor_union_branch/public_ci.cpp
        * TAO_IDL/be/be_visitor_union_branch/public_reset_cs.cpp
        * TAO_IDL/be/be_visitor_valuetype.cpp
        * TAO_IDL/be/be_visitor_valuetype/field_cdr_cs.cpp
        * TAO_IDL/be/be_visitor_valuetype/field_ch.cpp
        * TAO_IDL/be/be_visitor_valuetype/field_cs.cpp

          Changes and additions to IDL compiler back-end for
          valuebox support.

Tue Jun 21 16:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/releasenotes/rtc10_sched.html:
          Removed remark about generated include of PortableServerS.h,
          that is not valid anymore.

Tue Jun 21 08:06:00 2005  Gary Maxey <gary.maxey@hp.com>

        * TAO_IDL/be/be_visitor_valuebox/field_ch.cpp
        * TAO_IDL/be/be_visitor_valuebox/field_ci.cpp
        * TAO_IDL/be/be_visitor_valuebox/union_member_ci.cpp
        * TAO_IDL/be/be_visitor_valuebox/valuebox.cpp
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ch.cpp
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ci.cpp
        * TAO_IDL/be/be_visitor_valuebox/valuebox_cs.cpp
          Minor changes to deal with warnings on some compilers.

Tue Jun 21 12:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/RTScheduling/Current/Thread_Task.cpp:
          Layout fixes

Tue Jun 21 11:18:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.h:
          Added a todo for client_request_interceptors and
          server_request_interceptors methods that these should be removed
          when RTCosScheduling doesn't use them anymore

Tue Jun 21 10:58:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Interceptor_List.{h,cpp}:
          Added destroy_interceptors method that goes through the list of
          interceptors and calls destroy on each interceptor

        * tao/IORInterceptor_Adapter.h:
          Removed empty throw spec from destroy_interceptors and removed the
          interceptor_list method which returns the list build up, this is
          internal data which the outside doesn't need to have.

        * tao/ORB_Core.{h,cpp} (destroy_interceptors):
          Use the new destoy_interceptors of the Interceptor_List template

        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.{h,cpp}:
          Use the new destoy_interceptors of the Interceptor_List template
          and removed interceptor_list method

Tue Jun 21 08:22:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORBInitializer_Registry_Adapter.h:
          Added export macro.

Mon Jun 20 23:17:42 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.cpp:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.cpp:

          Fixed fuzz build errors related to missing ACE_ENV_ARG_PARAMETER
          in call to resolve_initial_references().

Mon Jun 20 21:49:02 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Iterator_i.cpp:
        * orbsvcs/orbsvcs/Log/Iterator_i.h:

          Added iterator inactivity timer that causes the iterator to self
          destruct after 1 hour of inactivity.  This should probably be a
          parameter that is specified when the service is started.

        * orbsvcs/orbsvcs/Log/Iterator_i.cpp:
        * orbsvcs/orbsvcs/Log/Iterator_i.h:
        * orbsvcs/orbsvcs/Log/Log_i.cpp:

          Pass reactor to Iterator constructor.

        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.cpp:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.cpp:

          Removed the debug messages that indicated the log service was
          starting, and the name the ior was registered with the naming
          service.  TAO's other ORBservice implementations don't output
          this sort of mundane information.

Mon Jun 20 12:21:00 2005  Gary Maxey <gary.maxey@hp.com>

        * TAO_IDL/be_include/be_generator.h
        * TAO_IDL/be_include/be_valuebox.h
        * TAO_IDL/be_include/be_visitor.h
        * TAO_IDL/be_include/be_visitor_valuebox.h
        * TAO_IDL/be_include/be_visitor_module/module.h
        * TAO_IDL/be_include/be_visitor_root/root.h
        * TAO_IDL/be_include/be_visitor_valuebox/any_op_ch.h
        * TAO_IDL/be_include/be_visitor_valuebox/any_op_cs.h
        * TAO_IDL/be_include/be_visitor_valuebox/cdr_op_ch.h
        * TAO_IDL/be_include/be_visitor_valuebox/cdr_op_cs.h
        * TAO_IDL/be_include/be_visitor_valuebox/field_ch.h
        * TAO_IDL/be_include/be_visitor_valuebox/field_ci.h
        * TAO_IDL/be_include/be_visitor_valuebox/union_member_ci.h
        * TAO_IDL/be_include/be_visitor_valuebox/valuebox.h
        * TAO_IDL/be_include/be_visitor_valuebox/valuebox_ch.h
        * TAO_IDL/be_include/be_visitor_valuebox/valuebox_ci.h
        * TAO_IDL/be_include/be_visitor_valuebox/valuebox_cs.h
        * TAO_IDL/be/be_generator.cpp
        * TAO_IDL/be/be_valuebox.cpp
        * TAO_IDL/be/be_visitor.cpp
        * TAO_IDL/be/be_visitor_root.cpp
        * TAO_IDL/be/be_visitor_module.cpp
        * TAO_IDL/be/be_visitor_valuebox.cpp
        * TAO_IDL/be/be_visitor_module/module.cpp
        * TAO_IDL/be/be_visitor_root/root.cpp
        * TAO_IDL/be/be_visitor_valuebox/any_op_ch.cpp
        * TAO_IDL/be/be_visitor_valuebox/any_op_cs.cpp
        * TAO_IDL/be/be_visitor_valuebox/cdr_op_cs.cpp
        * TAO_IDL/be/be_visitor_valuebox/cdr_op_ch.cpp
        * TAO_IDL/be/be_visitor_valuebox/field_ch.cpp
        * TAO_IDL/be/be_visitor_valuebox/field_ci.cpp
        * TAO_IDL/be/be_visitor_valuebox/union_member_ci.cpp
        * TAO_IDL/be/be_visitor_valuebox/valuebox.cpp
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ch.cpp
        * TAO_IDL/be/be_visitor_valuebox/valuebox_ci.cpp
        * TAO_IDL/be/be_visitor_valuebox/valuebox_cs.cpp
          Changes and additions to IDL compiler back-end for
          valuebox support.

Mon Jun 20 09:18:00 2005  Gary Maxey <gary.maxey@hp.com>
        * orbsvcs/IFR_Service/ifr_visitor.cpp
        * orbsvcs/IFR_Service/ifr_visitor.h
        * orbsvcs/IFR_Service/ifr_adding_visitor.cpp
        * orbsvcs/IFR_Service/ifr_adding_visitor.h
          Add visitors for valuebox support.

Mon Jun 20 08:51:17 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.cpp:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.cpp:

          Added missing semi-colon; bug was hidden by use of emulated
          exception macros.

Mon Jun 20 13:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent.mpc:
          Reverted change to add ami as base project and added -GC again to
          one set of IDL files.

        * orbsvcs/ImplRepo_Service/Forwarder.{h,cpp}:
        * orbsvcs/examples/ORT/Gateway_i.h:
          Corrected includes

        * orbsvcs/ImplRepo_Service/ImplRepo_Service.mpc:
        * orbsvcs/examples/ORT/ORT.mpc:
          Added pi_server as base project

Mon Jun 20 12:35:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/Dynamic_Implementation.cpp:
          Fixed emulated exception errors related to the fact that
          POA_Current_Impl doesn't use them anymore

Mon Jun 20 11:18:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/RequestProcessingStrategyDefaultServant.cpp:
          Fixed emulated exception errors related to the fact that
          POA_Current_Impl doesn't use them anymore

Mon Jun 20 10:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI_Server.mpc:
          New MPC file to build the new PI_Server library

        * examples/POA/DSI/Database_i.h:
        * examples/POA/Default_Servant/File_i.cpp:
        * orbsvcs/ImplRepo_Service/Forwarder.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/UpdateableHandler.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/Utils/FTEC_Gateway.cpp:
        * orbsvcs/orbsvcs/IFRService/Repository_i.h:
        * orbsvcs/tests/FtRtEvent/PushConsumer.cpp:
        * orbsvcs/tests/FtRtEvent/PushSupplier.cpp:
        * orbsvcs/tests/ImplRepo/scale/server_i.cpp:
        * tests/Collocation_Opportunities/Collocation_Opportunities.cpp:
        * tests/File_IO/File_i.cpp:
        * tests/ORT/ServerRequestInterceptor.h:
        * tests/POA/Current/Current.cpp:
        * tests/POA/Persistent_ID/server.cpp:
        * tests/POA/Policies/Policies.cpp:
          Added include of tao/PI_Server/PI_Server.h because of the
          pi_server refactoring. This is needed because these files
          use functionality that is now in the pi_server lib

        * tests/File_IO/File_IO.mpc:
        * tests/ORT/ORT.mpc:
        * tests/POA/Current/Current.mpc:
        * tests/POA/Persistent_ID/Persistent_ID.mpc:
        * tests/POA/Policies/Policies.mpc:
        * tests/Portable_Interceptors/AMI/PI_AMI.mpc:
        * tests/Collocation_Opportunities/Collocation_Opportunities.mpc:
        * examples/POA/DSI/POA_DSI.mpc:
        * examples/POA/Default_Servant/POA_Default_Servant.mpc:
        * orbsvcs/ImplRepo_Service/ImplRepo_Service.mpc:
        * orbsvcs/orbsvcs/FtRtEvent.mpc:
        * orbsvcs/orbsvcs/IFRService.mpc:
        * orbsvcs/tests/ImplRepo/scale/scaletest.mpc:
          Added pi_server as base project

        * tao/Messaging.mpc:
          Added pi as base project, messaging needs pi stuff

        * tao/PortableServer.mpc:
          PortableServer is not dependent on pi anymore

        * tao/TAO_Internal.cpp:
          If the PI_Server_Loader is available, initialize it, this way
          we get the needed services available

        * tao/PortableServer/Object_Adapter_Factory.{cpp,h}:
          No need to register the ORBInitializer, this is now in the pi_server
          library

        * tao/PortableServer/POA_Current_Impl.{h,cpp}:
          Removed exception throw spec and environment macros. These are
          coming from POA::Curent but are not used here and just make
          things dependent on IDL generated code which it doesn't need
          to be.

        * tao/RTPortableServer/RT_Object_Adapter_Factory.{h,cpp}:
          No need to register POA::Current, this is in the pi_server lib.
          Also the adapter can be derived from TAO_Adapter_Factory

        * tao/PortableServer/POA_Current.cpp
        * tao/PortableServer/POA_Current.h
        * tao/PortableServer/POA_Current.inl
        * tao/PortableServer/PS_Current.pidl
        * tao/PortableServer/PS_CurrentA.cpp
        * tao/PortableServer/PS_CurrentC.cpp
        * tao/PortableServer/PS_CurrentC.h
        * tao/PortableServer/Policy_Creator_T.h
        * tao/PortableServer/PortableServer_ORBInitializer.cpp
        * tao/PortableServer/PortableServer_ORBInitializer.h
        * tao/PortableServer/PortableServer_PolicyFactory.cpp
        * tao/PortableServer/PortableServer_PolicyFactory.h
          Removed these files, they are now in the pi_server library.
          If you included one of these files or used the functionality
          of the classes in one of these files, include
          tao/PI_Server/PI_Server.h and link the new pi_server library.

Sat Jun 18 18:53:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CORBA_String.{h,inl}:
          Added missing operator = (const WChar*) to WString_out. Thanks to
          Jean-Marc Prud'Homme <jprudhomme at interstarinc dot com> for
          reporting this and deliver the patch. This fixes bugzilla bug
          2159

Sat Jun 18 15:04:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Notify/EventChannel.cpp:
          Fixed crashing of notication service in mt configuration

Fri Jun 17 19:54:46 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/LogRecordStore.h (LOG_DEFAULT_MAX_REC_LIST_LEN):
        * orbsvcs/orbsvcs/Log/LogRecordStore_persist.h (LOG_DEFAULT_MAX_REC_LIST_LEN):

          Changed the maximum number of records that can be returned by
          query() without using an iterator from 30 to 100.  This should
          probably be a parameter that is specified when the service is
          started, but until it is, 100 is a more reasonable default.

          From documentation available on line, the Orbix log service
          implementation defaults to 100 records, the VisiBroker
          implementation defaults to 1000.

        * orbsvcs/orbsvcs/Log/Log_i.cpp (query_i):

          The ACE_LACKS_LONGLONG_T case cast the 64 bit log record fields
          "id" and "time" to 32 bits, but the format directive still used
          %Q.  Changed to "%d".

Fri Jun 17 19:02:11 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.cpp:

          Moved code for the IOR file and pid file output.  It had been
          mistakenly added inside a commented out section of the code.

        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.cpp:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.cpp:

          From documentation available on-line, VisiBroker's and Orbix's
          log service implementations support using corbaloc IORs and
          resolve_initial_references() to obtain the log factory object
          reference.  Changed TAO's implementation to support the same by
          registering the factory IORs in the IORTable:

            * "BasicLogService" for the Basic_Logging_Service
            * "EventLogService" for the Event_Logging_Service
            * "NotifyLogService" for the Notify_Logging_Service
            * "RTEventLogService" for the RTEvent_Logging_Service

        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.mpc:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.mpc:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.mpc:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.mpc:

          Changed to inherit from iortable.

Fri Jun 17 23:45:00 UTC 2005  Gary Maxey <gary.maxey@hp.com>

        * TAO_IDL/include/ast_decl.h
        * TAO_IDL/include/ast_generator.h
        * TAO_IDL/include/ast_module.h
        * TAO_IDL/include/ast_valuebox.h
        * TAO_IDL/include/ast_visitor.h
        * TAO_IDL/include/idl_global.h
        * TAO_IDL/include/utl_err.h
        * TAO_IDL/include/utl_scope.h
        * TAO_IDL/util/utl_err.cpp
        * TAO_IDL/util/utl_scope.cpp
        * TAO_IDL/ast/ast_generator.cpp
        * TAO_IDL/ast/ast_module.cpp
        * TAO_IDL/ast/ast_redef.cpp
        * TAO_IDL/ast/ast_valuebox.cpp
          Changes and additions to IDL compiler front-end for
          valuebox support.

Fri Jun 17 15:40:51 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/orbsvcs.rc:
        * orbsvcs/orbsvcs/orbsvcs_export.h:

          Remove stray bits left over from when orbsvcs was a single
          library.

Fri Jun 17 19:09:56 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:

          Reverted the change of

          Thu Jun 16 18:54:01 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

          It seems this problem is appearing in other places besides
          generated code, and that making lots of modifications to
          TAO code to work around what is essentially an HP compiler
          bug is not the right approach. Thanks to Johnny Willemsen
          <jwillemsen@remedy.nl> for advice on this matter.

Fri Jun 17 17:58:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.cpp:
          Fixed resolve_initial_references of the CodecFactory

Fri Jun 17 12:31:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI_Server/*:
          First commit of the PI_Server library. Will contain the parts
          of the PortableServer that are dependent on PortableInterceptors.
          These files will be used soon when the MPC files are updated

Fri Jun 17 11:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DLL_ORB/client.cpp:
          Fixed process_directive call

Fri Jun 17 09:56:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.cpp:
          Corrected wrong compare in resolve_initial_references

Fri Jun 17 09:50:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Param_Test/Param_Test.mpc:
          Added explicit after so that we don't compile the same idl file
          at the same time multiple times

Fri Jun 17 09:24:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.{h,cpp}:
          Removed some unneeded emulated exeption macros

Fri Jun 17 09:20:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Nested_Upcall_Crash/Nested_Upcall_Crash.mpc:
          Fixed typo in exename, wanted to commit this yesterday but couldn't
          reach cvs

Fri Jun 17 09:11:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/DLL_ORB/client.cpp:
        * tests/DLL_ORB/server.cpp:
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_ORBInitializer.cpp:
          Use the new macro ACE_DYNAMIC_SERVICE_DIRECTIVE to load the
          libraries

Fri Jun 17 09:09:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1551_Regression/test.mpc:
          Simplified this mpc file

Fri Jun 17 09:56:44 2005  Simon McQueen  <sm@prismtech.com>

        * tao/Valuetype/ValueBase.cpp:

          Add support for stream encoded repository ID indirection as per
          "15.3.4.3 Scope of the Indirections" in 02-06-33.
          This fixes bug #2156.

Fri Jun 17 08:55:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORBInitializer_Registry.cpp:
        * tao/PI/ORBInitInfo.cpp:
        * tao/PortableServer/LifespanStrategyPersistent.cpp:
        * tao/RTCORBA/RT_ORBInitializer.cpp:
        * tao/ORB_Core.cpp:
          Use the new macro ACE_DYNAMIC_SERVICE_DIRECTIVE to load the
          libraries

        * tao/Messaging/Messaging.cpp:
          Return the value of the process_directive call

        * tao/Messaging/Messaging_ORBInitializer.{h,cpp}:
          Don't keep a PolicyFactory as member, just create an instance for
          each ORB. Keeping an instance can cause crashes when the unloading
          of the DLL already has happened before the PolicyFactory registry
          is destructed.

        * tao/PortableServer/Servant_Upcall.h:
          Added forward declaration of CORBA::Object. Need it soon because
          of even more subsetting

        * tao/ORB_Core.cpp:
        * tao/ORB.{h,cpp}:
          Changed the way we throw an InvalidName exception from
          resolve_initial_references. Instead of throwing it from each
          resolve_x_method, just let those methods return a nil object
          and then throw the exception at the end of
          resolve_initial_references when then the object reference is nil.
          This reduces some needs for exception emulation macros but more
          important it guarantees that we always throw the exception instad
          of returning a nil reference. During testing I found that a rir
          of POACurrent returned a nil reference when the PortableServer
          library was not loaded instead of throwing an exception.

Fri Jun 17 08:49:09 2005  Simon McQueen  <sm@prismtech.com>

        * tao/PortableServer/Collocated_Object_Proxy_Broker.cpp:

          Use _retn () instead of out () for the return value from
          _get_component ().
          This fixes bug #2155.

Thu Jun 16 14:23:08 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_field/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp:

          Fix warning about unsigned long arg.

Thu Jun 16 18:54:01 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:

          Added conditional (for HPUX compiler only) code generation of
          include of ace/SString.h in the stub source file, apparently
          necessary when the HP compiler has optimize=1. Thanks to
          Kris Dekeyser <Kris.Dekeyser@lms.be> for reporting the problem.

Thu Jun 16 17:37:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/TAO_Internal.cpp:
          Do the initialisation of the messaging loader earlier

Thu Jun 16 16:47:42 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/IFR_Service/be_produce.cpp:

          Check repository ptr is not null before use in BE_cleanup.
          This fixes bug #2154.

Thu Jun 16 07:45:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/ORBInitializer_Registry_Impl.{h,cpp}:
          Implemented fini call, at the moment the ORBInitializer Registry
          is removed by service config we release all registered
          ORBInitializers

        * tests/Nested_Upcall_Crash/Nested_Upcall_Crash.mpc:
          Simplified this MPC file

Thu Jun 16 06:06:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Param_Test/Param_Test.mpc:
          Set exename for anyop

Wed Jun 15 13:46:48 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * TAO_IDL/be/be_visitor_array/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_array/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_enum/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_enum/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_field/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_field/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_module/serializer_op.cpp:
        * TAO_IDL/be/be_visitor_root/serializer_op.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_typedef/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_typedef/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union/serializer_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union_branch/serializer_op_cs.cpp:
        * TAO_IDL/be_include/be_visitor_array/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_array/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_enum/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_enum/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_field/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_field/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_module/serializer_op.h:
        * TAO_IDL/be_include/be_visitor_root/serializer_op.h:
        * TAO_IDL/be_include/be_visitor_sequence/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_sequence/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_structure/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_structure/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_typedef/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_typedef/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_union/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_union/serializer_op_cs.h:
        * TAO_IDL/be_include/be_visitor_union_branch/serializer_op_ch.h:
        * TAO_IDL/be_include/be_visitor_union_branch/serializer_op_cs.h:

          Addin additional files for providing serialization for sending
          in DDS.

Wed Jun 15 12:36:04 MST 2005  Trevor Fields  <fields_t@ociweb.com>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_decl.cpp:
        * TAO_IDL/be/be_global.cpp:
        * TAO_IDL/be/be_visitor_array.cpp:
        * TAO_IDL/be/be_visitor_enum.cpp:
        * TAO_IDL/be/be_visitor_field.cpp:
        * TAO_IDL/be/be_visitor_module.cpp:
        * TAO_IDL/be/be_visitor_root.cpp:
        * TAO_IDL/be/be_visitor_sequence.cpp:
        * TAO_IDL/be/be_visitor_structure.cpp:
        * TAO_IDL/be/be_visitor_typedef.cpp:
        * TAO_IDL/be/be_visitor_union.cpp:
        * TAO_IDL/be/be_visitor_union_branch.cpp:
        * TAO_IDL/be/be_visitor_module/module.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_structure/structure.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef.cpp:
        * TAO_IDL/be/be_visitor_union/union.cpp:
        * TAO_IDL/be_include/be_codegen.h:
        * TAO_IDL/be_include/be_decl.h:
        * TAO_IDL/be_include/be_global.h:
        * TAO_IDL/be_include/be_visitor_array.h:
        * TAO_IDL/be_include/be_visitor_enum.h:
        * TAO_IDL/be_include/be_visitor_field.h:
        * TAO_IDL/be_include/be_visitor_module.h:
        * TAO_IDL/be_include/be_visitor_root.h:
        * TAO_IDL/be_include/be_visitor_sequence.h:
        * TAO_IDL/be_include/be_visitor_structure.h:
        * TAO_IDL/be_include/be_visitor_typedef.h:
        * TAO_IDL/be_include/be_visitor_union.h:
        * TAO_IDL/be_include/be_visitor_union_branch.h:
        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:

          Adding idl support for the new DDS DCPS implementation over TAO.

Wed Jun 15 17:55:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Collocation_Proxy_Broker.h:
          Added include to get size_t. This should fix the LynxOS build

Wed Jun 15 10:46:12 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/PortableServer/TAO_PortableServer.pc.in:

          Added TAO_PI to list of required libraries.

        * tao/PI.mpc:

          Added Pkgconfig_Files definition.

        * tao/PI/TAO_PI.pc.in:

          New file, pkg-config *.pc template for TAO_PI library.

Wed Jun 15 13:17:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Object_Adapter.cpp:
        * tao/PortableServer/POA_Current_Impl.cpp:
        * tao/PortableServer/Root_POA.cpp:
          Removed several not needed includes

Wed Jun 15 11:57:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Param_Test/Param_Test.mpc:
          Simplified this MPC file, server anyop are not using messaging

        * tao/RTScheduling/RTScheduler_Loader.h:
          Removed not needed forward declaration

        * tao/Messaging/Messaging_ORBInitializer.h:
          Removed not needed forward declaration

        * tao/Messaging/Messaging_Loader.{h,cpp}:
        * tao/Messaging/Messaging.cpp:
          We have an initialisation problem in the Messaging library, it
          registers it ORBInitializer in a static object but the
          ORBInitializer_Registry then doesn't need to be loaded yet.
          Added a Messaging_Loader, this loader is just add to the
          service config registry in the static object, from TAO_Internal
          we then intialize the Message_Loader when it is available,
          which then will register the ORBInitializer. Maybe this problem
          exists with more libs, the regression tests will show it.

        * tao/TAO_Internal.cpp:
          Initialise the Messaging Loader when available

        * tao/PI/ORBInitializer_Registry_Impl.h:
          Removed old documentation

        * tao/RTCORBA/RT_ORBInitializer.cpp:
          Initialise pointer with 0

Wed Jun 15 10:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/RTScheduling/Distributable_Thread.cpp:
        * tao/RTScheduling/Request_Interceptor.h:
        * tao/RTScheduling/RTScheduler_Initializer.cpp:
        * tao/RTScheduling/RTScheduler_Loader.cpp:
          Fixed some potential memory leaks when things go wrong and some
          minor formatting changes

Wed Jun 15 09:33:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORBInitializer_Registry.cpp:
          Don't try to load the ORBInitializer registry in a static
          build

Wed Jun 15 08:03:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Log/Iterator_i.cpp:
          Fixed conversion warning

Tue Jun 14 21:35:35 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/PolicyFactory_Registry_Adapter.cpp:

          Removed stray semi-colon.

Tue Jun 14 20:57:00 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        From Lothar Werzinger <lothar@xcerla.com>
        * orbsvcs/orbsvcs/Naming/Naming_Server.cpp (init_new_naming):

          Register with the ORB's resolve_initial_references() mechanism.
          Primarily useful for dynamically loaded Name Services.
          [Bug 2150]

Tue Jun 14 14:48:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/TAO_Server_Request.h:
          Just include Object.h to get CORBA::Object instead of a forward
          declaration, we get else problems in an inline build.

Tue Jun 14 14:44:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/SCIOP_Profile.cpp:
          Include tao/StringSeqC.h to get StringSeq. It seems the refactoring
          of some PI reveales a lot of includes which are previously
          gotten for free.

Tue Jun 14 14:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Upcall_Wrapper.cpp:
          Added include of tao/Argument.h, this is not pulled in when
          interceptors are disabled

Tue Jun 14 14:34:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/TAO_Server_Request.h:
          Added forward declaration of CORBA::Object. This is not pulled in
          when interceptors are disabled

Tue Jun 14 14:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/RTCORBA/check_supported_priorities.cpp
        * tests/RTCORBA/common_args.cpp
        * tests/RTCORBA/Activate_Object_Multiple_ORBs/test.cpp
        * tests/RTCORBA/Banded_Connections/client.cpp
        * tests/RTCORBA/Banded_Connections/server.cpp
        * tests/RTCORBA/Client_Propagated/Client_ORBInitializer.h
        * tests/RTCORBA/Client_Propagated/RTCORBA_Client_Propagated.mpc
        * tests/RTCORBA/Client_Propagated/client.cpp
        * tests/RTCORBA/Client_Propagated/server.cpp
        * tests/RTCORBA/Collocation/Collocation.cpp
        * tests/RTCORBA/Linear_Priority/client.cpp
        * tests/RTCORBA/Linear_Priority/server.cpp
        * tests/RTCORBA/MT_Client_Protocol_Priority/client.cpp
        * tests/RTCORBA/MT_Client_Protocol_Priority/server.cpp
        * tests/RTCORBA/Policy_Combinations/client.cpp
        * tests/RTCORBA/Policy_Combinations/server.cpp
        * tests/RTCORBA/Priority_Inversion_With_Bands/client.cpp
        * tests/RTCORBA/Priority_Inversion_With_Bands/server.cpp
        * tests/RTCORBA/Profile_And_Endpoint_Selection/client.cpp
        * tests/RTCORBA/Profile_And_Endpoint_Selection/server.cpp
        * tests/RTCORBA/Server_Declared/server.cpp
        * tests/RTCORBA/Thread_Pool/client.cpp
        * tests/RTCORBA/Thread_Pool/server.cpp
          Return 2 instead of -1 when the check_support_priorities fail.
          The test scripts expect then a return value of 2

Tue Jun 14 14:15:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO-INSTALL.html:
          Updated Borland build instructions

Tue Jun 14 13:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/ORBInitializer_Registry_Impl.cpp:
          Corrected include

Tue Jun 14 13:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/FaultTolerance/RolyPoly/ORB_Initializer.{h,cpp}:
          Updated includes

Tue Jun 14 12:04:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/ORT/Server_IORInterceptor_ORBInitializer.h:
          Updated include, missed in a previous checkin

Tue Jun 14 12:01:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/ORBInitializer_Registry.{h,cpp}:
          Renamed to ORBInitializer_Registry_Impl.{h,cpp} This prevents
          confusion if we have the file in the tao or tao/PI directory

        * tao/PI/PI.cpp:
          Updated include

Tue Jun 14 11:50:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.h:
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduler.h:
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduler.h:
          Added missing include of CodecFactory.h

Tue Jun 14 11:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB_Core.cpp:
          Fixed problem with emulated exceptions

Tue Jun 14 10:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/IOPS_T.h:
          Removed, not included by IOPS.h anymore

        * tao/tao.mpc:
          Removed tao/tao.mpc

Tue Jun 14 10:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.h:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Factory.cpp:
        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_ORBInitializer.cpp:
          Added missing includes

Tue Jun 14 10:23:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.h:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.h:
          Added missing includes

Tue Jun 14 10:05:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/AV/SCTP_SEQ.h:
          Added missing include

Tue Jun 14 09:58:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_1693_Test/client.cpp:
        * tests/RTCORBA/Thread_Pool/client.cpp:
        * tests/Codec/client.cpp:
          Fixed compile errors

        * tao/ORB.cpp:
        * tao/ORB_Core.{h,cpp}:
          Changed the way we use the ORBInitializer registry. When it is
          requested from the ORB_Core, get it from the service config
          registry but in a static build don't try to load it on demand

Tue Jun 14 08:41:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PI/*:
          New PI library. Contains ORBInitializer registry, ORBInitInfo and
          PolicyFactory. This will be extended in the future with more classes
          but this is the first step. If you use any of these classes in
          your app, add the include of tao/PI/PI.h to your application code.
          This will make sure the service config registry is filled with
          the loadable modules.

        * tao/BiDir_GIOP.mpc:
          The BiDir library uses a PolicyFactory so it must link with the PI
          library

        * tao/Interceptor_List.{h,cpp}:
          Changed the list to return a value indicating whether it was possible
          to add the interceptor or not. The caller in the PI or IORInterceptor
          library will then throw the correct exception. This way the list
          template can stay in the TAO lib because the exception DuplicateName
          is now in the PI library

        * tao/IORInterceptor.mpc:
          Added PI as base project

        * tao/IORInterceptor_Adapter.{h,cpp}:
          Removed throw clause from add_interceptor method. The clause was
          not correct also, it could throw a DuplicateName exception also.
          This way we are not dependent on the PI library. Also the adapter
          doesn't need to be derived from ACE_Service_Object, this class
          is not loaded, the factory that creates it is.

        * tao/IORInterceptor_Adapter_Factory.{h,cpp}:
          Removed destructor, it is not needed

        * tao/ORB.cpp:
          Updated to use the new ORBInitializer Factory adapter and Policy
          Factory adapter

        * tao/ORB_Core.{h,cpp,i}:
          Updated for new adapters and interceptor list changes. Also added
          a get_orbinitializer_registry which returns the current pointer
          without trying to load the PI library. This is used by the ORB
          to call alls orbinitializers. When the library is not loaded yet,
          no user code caused this so we don't have to do this also

        * tao/ORBInitializer.pidl:
        * tao/ORBInitializerA.cpp:
        * tao/ORBInitializerC.{h,cpp,inl}:
        * tao/ORBInitializerS.h:
        * tao/ORBInitInfo.pidl:
        * tao/ORBInitInfoA.cpp:
        * tao/ORBInitInfoC.{h,cpp,inl}:
        * tao/ORBInitInfoS.h:
        * tao/ORBInitInfo.{h,cpp,inl}:
        * tao/PolicyFactory.pidl:
        * tao/PolicyFactory_Registry.{h,cpp}:
        * tao/PolicyFactoryA.cpp:
        * tao/PolicyFactoryC.{h,cpp,inl}:
          Moved to the PI library

        * tao/IOP_Codec.pidl:
        * tao/IOP_CodecA.cpp:
        * tao/IOP_CodecC.{h,cpp,inl}:
          Moved to the CodecFactory library

        * tao/IOP.pidl:
          Removed include of IOP_Codec.pidl

        * tao/ORBInitializer_Registry.{h,cpp}:
          Removed all code except register_orb_initializer, which now tries
          to load the ORBInitializer Registry on demand. The code is moved to
          the PI library

        * tao/PI.mpc:
          New file

        * tao/PolicyFactory_Registry_Adapter.{h,cpp}:
          New adapter for PolicyFactory_Registry

        * tao/PolicyFactory_Registry_Factory.h:
          New factory for creating a PolicyFactory for each ORB

        * tao/PortableInterceptor.pidl:
          Removed files that moved to the PI library

        * tao/PortableInterceptorA.cpp:
          Removed, empty

        * tao/PortableInterceptorC.{cpp,h}:
          Regenerated

        * tao/PortableServer.mpc:
        * tao/RTCORBA.mpc:
        * tao/Utils.mpc
          Based on the new PI. These all use something of the PI library.
          Because of this only a client gets benefits from this, but the
          server will be handled in the next iteration

        * tao/tao.mpc:
          Updated for all changes

        * tao/BiDir_GIOP/BiDirGIOP.cpp:
          Added include of ORBInitializer_Registry.h

        * tao/BiDir_GIOP/BiDir_ORBInitializer.{h,cpp}:
        * tao/BiDir_GIOP/BiDir_PolicyFactory.h:
          Include tao/PI/PI.h

        * tao/CodecFactory/CodecFactory.h:
          Include IOP_CodecC.h

        * tao/CodecFactory/IOP_CodecC.{h,cpp}:
        * tao/CodecFactory/IOP_CodecA.cpp:
        * tao/CodecFactory/IOP_CodecS.h:
          Files moved from the tao lib

        * tao/CodecFactory/IOP_Codec_include.pidl:
        * tao/CodecFactory/IOP_Codec_includeC.h:
        * tao/CodecFactory/IOP_Codec_includeS.h:
          New files for apps that include IOP_Codec.pidl in the past, they
          should now use this pidl file

        * tao/CodecFactory/CDR_Encaps_Codec.h:
        * tao/CodecFactory/CodecFactory.h:
        * tao/CodecFactory/CodecFactory_imp.h:
          Updated for moving of IOP_Codec.pidl

        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.{h,cpp}:
          Updated for interceptor list change

        * tao/Messaging/Messaging_ORBInitializer.h:
        * tao/Messaging/Messaging_PolicyFactory.h:
        * tao/PortableServer/PortableServer_ORBInitializer.{h,cpp}:
        * tao/PortableServer/PortableServer_PolicyFactory.h:
        * tao/RTCORBA/RT_ORBInitializer.cpp:
        * tao/RTCORBA/RT_PolicyFactory.h
        * tao/RTScheduling/RTScheduling_Initializer.{h,cpp}:
        * tao/Utils/RIR_Narrow.h:
          Changed includes to include tao/PI/PI.h

        * tao/docs/libraries.html:
          Added PI

        * orbsvcs/examples/FaultTolerance/RolyPoly/RolyPoly.mpc
        * orbsvcs/examples/LoadBalancing/ORBInitializer.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientORBInitializer.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientORBInitializer.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicyFactory.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicyFactory.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientService_Activate.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerORBInitializer.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerORBInitializer.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicyFactory.cpp
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerPolicyFactory.h
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerService_Activate.cpp
        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Initializer.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ORBInitializer.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_ORBInitializer.h
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.cpp
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Request_Context_Repository.h
        * orbsvcs/orbsvcs/LoadBalancing/LB_ClientORBInitializer.h
        * orbsvcs/orbsvcs/LoadBalancing/LB_ORBInitializer.h
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_ORBInitializer.cpp
        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_ORBInitializer.h
        * orbsvcs/orbsvcs/Security/SL3_PolicyFactory.h
        * orbsvcs/orbsvcs/Security/Security_ORBInitializer.cpp
        * orbsvcs/orbsvcs/Security/Security_ORBInitializer.h
        * orbsvcs/orbsvcs/Security/Security_PolicyFactory.cpp
        * orbsvcs/orbsvcs/Security/Security_PolicyFactory.h
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/ORBInitializer.cpp
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/CPU/ORBInitializer.h
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/ORBInitializer.h
        * orbsvcs/performance-tests/LoadBalancing/LBPerf/RPS/server.cpp
        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Server_ORBInitializer.h
        * orbsvcs/tests/RTCosScheduling/RTCosScheduling.mpc
        * tests/Bug_1495_Regression/Bug_1495.mpc
        * tests/Bug_1495_Regression/Client_ORBInitializer.h
        * tests/Bug_1495_Regression/Server_ORBInitializer.h
        * tests/ORT/ORT.mpc
        * tests/ORT/ServerORBInitializer.h
        * tests/Portable_Interceptors/AMI/Client_ORBInitializer.h
        * tests/Portable_Interceptors/AMI/Server_ORBInitializer.h
        * tests/Portable_Interceptors/Benchmark/Client_ORBInitializer.h
        * tests/Portable_Interceptors/Benchmark/Server_ORBInitializer.h
        * tests/Portable_Interceptors/Bug_1559/Client_ORBInitializer.h
        * tests/Portable_Interceptors/Bug_1559/Server_ORBInitializer.h
        * tests/Portable_Interceptors/Bug_2088/Client_ORBInitializer.h
        * tests/Portable_Interceptors/Collocated/Dynamic/Collocated_Test.cpp
        * tests/Portable_Interceptors/Collocated/Dynamic/Echo_Collocated_ORBInitializer.cpp
        * tests/Portable_Interceptors/Collocated/Dynamic/Echo_Collocated_ORBInitializer.h
        * tests/Portable_Interceptors/Collocated/Dynamic/PI_Dynamic.mpc
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/Collocated_ORBInitializer.h
        * tests/Portable_Interceptors/Collocated/Service_Context_Manipulation/PI_Svc_Context_Manip.mpc
        * tests/Portable_Interceptors/Dynamic/Echo_Client_ORBInitializer.h
        * tests/Portable_Interceptors/Dynamic/Echo_Server_ORBInitializer.h
        * tests/Portable_Interceptors/ForwardRequest/Client_ORBInitializer.h
        * tests/Portable_Interceptors/ForwardRequest/Server_ORBInitializer.h
        * tests/Portable_Interceptors/IORInterceptor/FOO_ClientRequestInterceptor.h
        * tests/Portable_Interceptors/IORInterceptor/FOO_Client_ORBInitializer.h
        * tests/Portable_Interceptors/IORInterceptor/FOO_IORInterceptor.h
        * tests/Portable_Interceptors/IORInterceptor/FOO_IORInterceptor_ORBInitializer.h
        * tests/Portable_Interceptors/ORB_Shutdown/Server_ORBInitializer.h
        * tests/Portable_Interceptors/PICurrent/ClientORBInitializer.h
        * tests/Portable_Interceptors/PICurrent/ServerORBInitializer.cpp
        * tests/Portable_Interceptors/PICurrent/ServerORBInitializer.h
        * tests/Portable_Interceptors/PICurrent/client.cpp
        * tests/Portable_Interceptors/PolicyFactory/PolicyFactory.h
        * tests/Portable_Interceptors/PolicyFactory/Server_ORBInitializer.h
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Client_ORBInitializer.h
        * tests/Portable_Interceptors/Request_Interceptor_Flow/Server_ORBInitializer.h
        * tests/Portable_Interceptors/Service_Context_Manipulation/Client_ORBInitializer.h
        * tests/Portable_Interceptors/Service_Context_Manipulation/Server_ORBInitializer.h
          Updated for the new PI library

        * tests/RTCORBA/check_supported_priorities.cpp
        * tests/RTCORBA/common_args.cpp
        * tests/RTCORBA/Activate_Object_Multiple_ORBs/test.cpp
        * tests/RTCORBA/Banded_Connections/client.cpp
        * tests/RTCORBA/Banded_Connections/server.cpp
        * tests/RTCORBA/Client_Propagated/Client_ORBInitializer.h
        * tests/RTCORBA/Client_Propagated/RTCORBA_Client_Propagated.mpc
        * tests/RTCORBA/Client_Propagated/client.cpp
        * tests/RTCORBA/Client_Propagated/server.cpp
        * tests/RTCORBA/Collocation/Collocation.cpp
        * tests/RTCORBA/Linear_Priority/client.cpp
        * tests/RTCORBA/Linear_Priority/server.cpp
        * tests/RTCORBA/MT_Client_Protocol_Priority/client.cpp
        * tests/RTCORBA/MT_Client_Protocol_Priority/server.cpp
        * tests/RTCORBA/Policy_Combinations/client.cpp
        * tests/RTCORBA/Policy_Combinations/server.cpp
        * tests/RTCORBA/Priority_Inversion_With_Bands/client.cpp
        * tests/RTCORBA/Priority_Inversion_With_Bands/server.cpp
        * tests/RTCORBA/Profile_And_Endpoint_Selection/client.cpp
        * tests/RTCORBA/Profile_And_Endpoint_Selection/server.cpp
        * tests/RTCORBA/Server_Declared/server.cpp
        * tests/RTCORBA/Thread_Pool/client.cpp
        * tests/RTCORBA/Thread_Pool/server.cpp
          Instead of doing an ACE_OS::exit() when the needed priorities
          are not available, return from the main with a -1. Will reduce
          the number of memory leaks reported by valgrind a lot.

Tue Jun 14 07:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/SCTP_Fault_Detector.cpp:
          Added missing include

Mon Jun 13 17:27:57 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Iterator_i.cpp (get):

          Change to return a zero-length sequence before destroying
          iterator as required by the spec.

Mon Jun 13 17:18:44 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Iterator_i.h:

          Change type of constraint member variable to CORBA::String_var
          so we don't dereference a dangling char * in get().

Mon Jun 13 12:10:06 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Iterator_i.cpp:
        * orbsvcs/orbsvcs/Log/Iterator_i.h:
        * orbsvcs/orbsvcs/Log/Log_i.cpp:

          Changed to interpret "position" as the index in the complete
          sequence of records that match the constraint instead of the
          index in the sequence of all records.

          Changed TAO_Iterator_i constructor to take new "current" and
          "end" iterator parameters.  This allows us to avoid scanning
          and skipping records returned as part of the initial query().

          Simplify iterating over record store by using ACE_Hash_Map's
          STL-like API.

Mon Jun 13 18:51:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FtRtEvent/ClientORB/FTRT_ClientORB_Interceptor.h:
          Converted comments to doxygen style

Mon Jun 13 18:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/PortableGroup/PortableGroup_Loader.cpp:
          Include ORBInitializer_Registry.h, needed for the upcoming PI library

Mon Jun 13 05:07:32 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
        * orbsvcs/orbsvcs/AV/AVStreams_i.h:

          Made public destructors protected since the objects in question
          are reference counted, i.e. memory management should be
          performed through the reference counting mechanism, not operator
          delete();

        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.cpp:
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.h (TAO_FlowSpec_Entry):
        * orbsvcs/orbsvcs/AV/FlowSpec_Entry.i:

          Fixed a memory leak.

Mon Jun 13 09:32:38 2005  Phil Mesnier  <mesnier_p@ociweb.com>

        * tao/IIOP_Profile.cpp:
        * tao/Tagged_Component.cpp:
        * tao/Tagged_Component.h:

          Reverted the change to TAO_Tagged_Component::get_component.

Mon Jun 13 12:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/RTCORBA/Client_Propagated/client.cpp:
          Added include of ORBInitializer_Registry.h

Mon Jun 13 11:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Benchmark/PI_Benchmark.mpc:
        * tests/Portable_Interceptors/Bug_1559/Bug_1559.mpc:
        * tests/Portable_Interceptors/Bug_2088/Bug_2088.mpc:
        * tests/Portable_Interceptors/Dynamic/PI_Dynamic.mpc:
        * tests/Portable_Interceptors/ForwardRequest/PI_ForwardRequest.mpc:
        * tests/Portable_Interceptors/ORB_Shutdown/PI_ORB_Shutdown.mpc:
        * tests/Portable_Interceptors/PICurrent/PI_PICurrent.mpc:
        * tests/Portable_Interceptors/PolicyFactory/PI_PolicyFactory.mpc:
        * tests/Portable_Interceptors/Request_Interceptor_Flow/PI_Request_Interceptor_Flow.mpc:
        * tests/Portable_Interceptors/Service_Context_Manipulation/PI_Svc_Context_Manip.mpc:
          Use interceptors as base project instead of the requires
          interceptors

Mon Jun 13 08:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Strategies/SCIOP_Endpoint.cpp:
          Fixed compile error

Mon Jun 13 08:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Messaging/Asynch_Invocation_Adapter.{h,cpp}:
          Fixed ambiguity warnings with Borland.

Sun Jun 12 23:09:36 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp (TAO_Log_Constraint_Visitor):

          Add property list bindings for each item in the log record's
          attribute list.

Sun Jun 12 23:38:02 2005  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/GIOP_Message_Base.h (process_request, process_locate_request):

          Made the above calls virtual since it makes it easier to do
          implementation inheritance, and override behaviours.

Sun Jun 12 14:24:05 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp (query_i, match_i, remove_old_records):

          Simplify iterating over record store by using ACE_Hash_Map's
          STL-like API.

        * orbsvcs/orbsvcs/Log/Log_i.cpp (query_i):

          Changed from LOG_HASH_MAP_ITER to LOG_RECORD_STORE_ITER.

        * orbsvcs/orbsvcs/Log/LogRecordStore.h (TAO_LogRecordStore):

          Added LOG_RECORD_STORE_ENTRY typedef.

        * orbsvcs/orbsvcs/Log/Iterator_i.cpp: (TAO_Iterator_i):
        * orbsvcs/orbsvcs/Log/Iterator_i.h (TAO_Iterator_i):
        * orbsvcs/orbsvcs/Log/Log_i.cpp (query_i):

          Removed max_store_size argument from constructor.
          Removed (unused) max_store_size member variable.

        * orbsvcs/orbsvcs/Log/Log_Constraint_Visitors.cpp:

          Changed constructor to directly assign log record's .info field
          to property list value binding instead of stashing it in an the
          Any.  This allows the value to be queried via ETCL constraints.

        * orbsvcs/orbsvcs/Log/Log_i.cpp (remove_old_records):

          Changed conditional in constraint as it was casing new, not old,
          records to be deleted.

        * orbsvcs/orbsvcs/Log/Log_i.cpp (validate_capacity_alarm_thresholds):
        * orbsvcs/orbsvcs/Log/Log_i.h (validate_capacity_alarm_thresholds):

          Move validate_capacity_alarm_thresholds method from public to
          protected visibility.

        * tao/Makefile.am:

          Updated to remove Queued_Message.inl.

Sun Jun 12 13:39:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Collocation_Proxy_Broker.h:
          Added forward declaration of environment

Sun Jun 12 13:27:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Security/Security_ORBInitializer.{h,cpp}:
        * tao/RTCORBA/RT_ORBInitializer.{h,cpp}:
          Updated the way the policyfactory is registered in a way that things
          are not dependent on the destruction order and we only have one
          instance of the factory in runtime

Sun Jun 12 12:37:12 UTC 2005  Martin Corino  <mcorino@remedy.nl>

        * rules.tao.GNU:
          Fixed problem with TAO version detection when default Make
          shell is CMD.EXE.

Sat Jun 11 23:45:07 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_operation.cpp:
        * TAO_IDL/be/be_visitor_sequence.cpp:
        * TAO_IDL/be_include/be_visitor_operation.h:
        * TAO_IDL/be_include/be_visitor_sequence.h:

          Removed includes of unused files.

        * TAO_IDL/be/be_visitor_argument/invoke_cs.cpp:
        * TAO_IDL/be/be_visitor_argument/marshal_ss.cpp:

          Fixed incorrect visitor names in error messages.

        * TAO_IDL/be/be_visitor_argument/post_invoke_cs.cpp:
        * TAO_IDL/be/be_visitor_argument/post_marshal_ss.cpp:
        * TAO_IDL/be/be_visitor_argument/pre_invoke_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype_assign_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype_is.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype_marshal_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype_post_invoke_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype_post_upcall_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype_pre_invoke_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype_vardecl_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype_vardecl_ss.cpp:
        * TAO_IDL/be/be_visitor_sequence/elemtype.cpp:
        * TAO_IDL/be_include/be_visitor_argument/post_invoke_cs.h:
        * TAO_IDL/be_include/be_visitor_argument/post_marshal_ss.h:
        * TAO_IDL/be_include/be_visitor_argument/pre_invoke_cs.h:
        * TAO_IDL/be_include/be_visitor_operation/rettype_assign_ss.h:
        * TAO_IDL/be_include/be_visitor_operation/rettype_is.h:
        * TAO_IDL/be_include/be_visitor_operation/rettype_marshal_ss.h:
        * TAO_IDL/be_include/be_visitor_operation/rettype_post_invoke_cs.h:
        * TAO_IDL/be_include/be_visitor_operation/rettype_post_upcall_ss.h:
        * TAO_IDL/be_include/be_visitor_operation/rettype_pre_invoke_cs.h:
        * TAO_IDL/be_include/be_visitor_operation/rettype_vardecl_cs.h:
        * TAO_IDL/be_include/be_visitor_operation/rettype_vardecl_ss.h:
        * TAO_IDL/be_include/be_visitor_sequence/elemtype.h:

          Removed from the repository visitors that are no longer used.
          Thanks to Gary Maxey <gary.maxey@hp.com> for pointing out
          most of them.

Sat Jun 11 14:43:18 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/EventLogConsumer.cpp (push):
        * orbsvcs/orbsvcs/Log/NotifyLogConsumer.cpp (push):

          Add ACE_TRY_CATCH after call to write_recordlist() for emulated
          exception builds.

Sat Jun 11 13:18:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PolicyFactory_Registry.cpp:
          Fixed memory leak at the moment the registering of a policy
          factory fails

Sat Jun 11 12:46:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/RTCORBA/Linear_Priority/run_test.pl:
          When the server can't be started end this test directly

        * tao/RTCORBA/RT_ORBInitializer.{h,cpp}:
          Changed the way we register the PolicyFactory. Don't store it as
          member in the ORBInitializer, this gives problems now we start
          loading the PI stuff on demand. The order of destruction seems to
          be changed causing crashes in the RTCorba tests. This fixes these
          crashes

Sat Jun 11 11:52:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Queued_Message.{h,inl,cpp}:
          Removed the .inl file, it is empty

Fri Jun 10 14:58:23 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:
        * tao/Makefile.am:

          Regenerated.

Fri Jun 10 13:07:04 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Collocation_Proxy_Broker.cpp:
        * tao/Collocation_Proxy_Broker.h:
        * tao/Connection_Handler.cpp:
        * tao/Connection_Handler.inl:
        * tao/GIOP_Message_Generator_Parser.cpp:
        * tao/GIOP_Message_Generator_Parser.h:
        * tao/Invocation_Adapter.cpp:
        * tao/Invocation_Adapter.inl:
        * tao/New_Leader_Generator.cpp:
        * tao/New_Leader_Generator.h:
        * tao/Object.cpp:
        * tao/Object.i:
        * tao/Policy_Manager.cpp:
        * tao/Policy_Manager.i:
        * tao/Queued_Message.cpp:
        * tao/Queued_Message.inl:
        * tao/SystemException.cpp:
        * tao/SystemException.h:
        * tao/UTF16_BOM_Translator.cpp:
        * tao/UTF16_BOM_Translator.h:
        * tao/Messaging/MessagingS.cpp:
        * tao/Messaging/MessagingS.h:
        * tao/PortableServer/PolicyS.cpp:
        * tao/PortableServer/PolicyS.h:
        * tao/PortableServer/Upcall_Command.cpp:
        * tao/PortableServer/Upcall_Command.h:

          Moved inlined virtual methods out of line.  Inlinging them
          causes RTTI issues when using g++ 4.0's hidden symbol
          visibility.

        * tao/Messaging/Asynch_Invocation_Adapter.cpp:
        * tao/Messaging/Asynch_Invocation_Adapter.h (invoke):
        * tao/Messaging/Asynch_Invocation_Adapter.inl:

          Removed unnecessary virtual function override.  All it was
          forward the call to the base class implementation.

          Removed empty inline source file.

        * tao/Makefile.am:
        * tao/tao.mpc:

          Updated source file lists.

Fri Jun 10 13:00:49 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/PICurrent_Loader.h:

          Include "tao/orbconf.h" to pull in default TAO_HAS_INTERCEPTORS
          preprocessor symbol definition.  Fixes link-time errors related
          to missing static constructor definition.

        * tao/PICurrent_Loader.cpp:

          Reorganized include directives so that interceptor related
          headers are not included when compile-time interceptor support
          is not enabled.

Fri Jun 10 12:51:44 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_interface/direct_proxy_impl_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/direct_proxy_impl_ss.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ch.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:

          Generate out of line virtual methods.  Inlined ones prevent RTTI
          from working when enabling hidden symbols with g++ 4.0's
          visibility support.

        * tao/GIOP_Message_Generator_Parser_Impl.inl (check_revision):

          Made "max_allowable_version" variable a static constant instead
          of a non-const variable.  Reduces run-time overhead since this
          value may be computed at compile-time.

Fri Jun 10 18:36:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.cpp:
        * tao/ORB_Core.{h,i}:
        * tao/PICurrent_Loader.{h,cpp}:
          Fixed compile errors when interceptors are disabled

Fri Jun 10 17:21:28 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/Bug_2137_Regression/run_test.pl:

          Fix wrong 'use lib'.

Fri Jun 10 09:59:17 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tao/default_client.cpp:

          Ensure that all TAO related options are consistently case
          insensitive.

Fri Jun 10 13:16:27 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/fe_extern (FE_generate_UUID):

          Added arguments (which were passed by default value before) to
          the generateUUID() call on the ACE UUID_GENERATOR singleton.
          These arguments trigger the inclusion of the thread id in the
          formation of the uuid, along with the process id and timestamp
          that were already being used. In some experiments we have done
          with the Visual Studio 2005 beta (which can take advantage of
          multiple processors to do parallel builds), the process id
          and timestamp alone were apparently not enough to ensure a
          unique id when creating one for use in the temporary file name,
          and multiple threads corresponding to multiple builds in the
          same directory were trying to open temporary files with the
          same name.

Fri Jun 10 08:21:47 2005  Chad Elliott  <elliott_c@ociweb.com>

        * examples/RTScheduling/MIF_Scheduler/MIF_Scheduler.cpp:
        * examples/RTScheduling/Thread_Task.cpp:

          Addressed data initialization and memcpy issues which mainly
          showed up in a 64-bit Solaris build.

        * performance-tests/Cubit/TAO/MT_Cubit/Globals.cpp:

          Use ACE_SCOPE_THREAD on AIX and MacOS X instead of
          ACE_SCOPE_PROCESS since it's not supported.

Fri Jun 10 07:51:36 2005  Phil Mesnier  <mesnier_p@ociweb.com>

        * docs/Options.html:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Profile.cpp:
        * tao/IIOP_Profile.h:
        * tao/ORB_Core.cpp:
        * tao/Tagged_Components.cpp:
        * tao/Tagged_Components.h:
        * tao/params.cpp:
        * tao/params.h:
        * tao/params.i:
        * tao/PortableServer/Default_Acceptor_Filter.cpp:
        * tests/AlternateIIOP:
        * utils/catior/catior.cpp:

          Added support for TAG_ALTERNATE_IIOP_ADDRESS to combine many
          endpoints into a single profile when not using RTCORBA. This may
          be overridden by using the ORB_init argument
          -ORBUseSharedProfiles 0. It is enabled by default. Unlike the
          TAO-specific TAO_TAG_ENDPOINTS, the TAG_ALTERNATE_IIOP_ADDRESS
          component contains a single host:port pair, but many such
          components may be added to a profile to carry as many endpoints
          as required.

Fri Jun 10 10:40:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CodecFactory/*:
          New CodecFactory library. When users want to use the CodecFactory
          they have to include tao/CodecFactory/CodecFactory.h

        * tao/Bind_Dispatcher_Guard.h:
          Doxygen improvement

        * tao/IOP_IOR.pidl:
          Updated numbers for reliable multicast as mentioned in omg document
          03-01-11

        * tao/CDR_Encaps_Codec.{h,cpp}:
        * tao/CodecFactory.{h,cpp}:
          These files are moved to the CodecFactory library

        * tao/CodecFactory.mpc:
          New MPC file for the CodecFactory library

        * tao/ClientRequestInfo_i.h:
        * tao/ClientRequestInterceptor_Adapter.{h,cpp}:
        * tao/Collocated_Invocation.cpp:
        * tao/Invocation_Base.cpp:
        * tao/PICurrent_Copy_Callback.cpp:
        * tao/Synch_Invocation.cpp:
        * tao/TAO_Server_Request.h:
        * tao/TSS_Resources.h:
        * tao/Messaging/Asynch_Invocation.cpp:
        * tao/PortableServer/ServerRequestInfo.h:
          Changed includes and added some more forward declarations because
          of reduced header dependencies

        * tao/Tagged_Components.h:
          Removed commented out code

        * tao/tao.mpc:
          Updated for all these changes

        * tao/ClientRequestInfo_i.i:
          Added needed include

        * tao/CodecFactory_ORBInitializer.{h,cpp}:
          Removed, we don't use an ORBInitializer anymore for the CodecFactory

        * tao/ORB.cpp:
        * tao/ORB_Core.{h,cpp,i}:
          Changed the way we retrieve the CodecFactory and PICurrent. Instead
          of an ORBInitializer we try to load them using svc.conf

        * tao/ORBInitInfo.cpp:
          Use svc.conf to get the CodecFactory instead of allocating a new
          instance here

        * tao/Parser_Registry.cpp:
          Removed empty explicit template instantiation block

        * tao/PICurrent.{h,cpp,inl}:
        * tao/PICurrent_Impl.{h,cpp,inl}:
          Moved TAO::PICurrent_Impl to its own file

        * tao/PICurrent.pidl:
        * tao/PICurrentA.cpp:
        * tao/PICurrentC.{h,cpp}:
        * tao/PICurrentS.h:
          Moved PICurrent to its own file

        * tao/PICurrent_Loader.{h,cpp}:
          Use svc.conf to get PICurrent

        * tao/PICurrent_ORBInitializer.{h,cpp}:
          Removed these files

        * tao/Policy_Manager.{h,cpp,i}:
        * tao/Policy_Current.{h,cpp,inl}:
        * tao/Policy_Current_Impl.{h,cpp,inl}:
          Moved Policy_Current and Policy_Current_Impl to their own files

        * tao/PortableInterceptor.pidl:
        * tao/PortableInterceptorA.cpp:
        * tao/PortableInterceptorC.{h,cpp}:
        * tao/PortableInterceptorS.h:
          Moved PICurrent out of this file and regenerated

        * tao/Services_Activate.cpp:
          Removed explicit templates

        * tao/ServicesS_T.h:
          Removed

        * tao/orbconf.h:
          Added deablfine for RootPOAManager name, will be used later

        * tao/objectid.h:
          Added define for POAManagerFactory

        * tao/LocalObject.{h,cpp}:
          Override _get_orb to throw a no implement with minor code 8

        * tao/Object.{h,cpp}:
          Added _get_orb()

        * docs/libraries.html:
          Added codecfactory

        * tests/Bug_1693_Test/Bug_1693_Test.mpc:
        * tests/Bug_1693_Test/client.cpp:
        * tests/Codec/client.cpp:
        * tests/Codec/Codec.mpc:
        * tests/Portable_Interceptors/IORInterceptor/FOO_Client_ORBInitializer.cpp:
        * tests/Portable_Interceptors/IORInterceptor/FOO_IORInterceptor_ORBInitializer.cpp:
        * tests/Portable_Interceptors/IORInterceptor/PI_IORInterceptor.mpc:
        * examples/Kokyu_dsrt_schedulers/EDF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/FP_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/Kokyu_DSRT_Schedulers.mpc:
        * examples/Kokyu_dsrt_schedulers/MIF_Scheduler.cpp:
        * examples/Kokyu_dsrt_schedulers/MUF_Scheduler.cpp:
        * orbsvcs/PSS/PSDL_Code_Gen.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling.mpc:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp:
          Updated because of new CodecFactory library

Fri Jun 10 10:15:17 2005  Simon McQueen  <sm@prismtech.com>

        * tests/Bug_2144_Regression/Bug_2144_Regression.mpc:

          Add valuetype to dependencies to (hopefully) fix Linux error.

        * tao/Profile.cpp:

          Fix warning on Linux.

Thu Jun 10 08:40:00 UTC 2005  Simon Massey  <sma@prismtech.com>

        * tao/orbsvcs/tests/Bug_2137_Regression/client.cpp:
          Corrected const char * problem.

Thu Jun  9 18:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Tagged_Components.h:
          Removed commented out code

Thu Jun  9 18:44:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ServicesS_T.h:
          Removed this file, was not included at all

Thu Jun  9 18:41:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/FaultTolerance/ChangeLog:
          Removed this file, we have a main changelog

        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientPolicy_i.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ClientRequest_Interceptor.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Invocation_Endpoint_Selectors.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Policy_i.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_ServerRequest_Interceptor.cpp:
          Minor formatting issues. Fixes bugzilla bug 2139. Thanks to
          <jmegq at radiance dot com>

Thu Jun  9 18:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Reference_Counting/*
          New reference counting test, regression for bug 2142.
          Thanks to Frank Pilhofer <fp@mc.com>

Thu Jun  9 15:33:52 2005  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:

          Change valuetype acessor declaration to return a pointer
          rather than a _ptr.

          This fixes bugzilla #2144.

        * tests/Bug_2144_Regression/Bug_2144_Regression.mpc:
        * tests/Bug_2144_Regression/README:
        * tests/Bug_2144_Regression/test.cpp:
        * tests/Bug_2144_Regression/test.idl:

          Regression test for the above.

Thu Jun  9 07:24:15 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/EventLogConsumer.cpp (push):
        * orbsvcs/orbsvcs/Log/NotifyLogConsumer.cpp (push):

          Catch log service exceptions and rethrow the corresponding
          system exception.

Thu Jun  9 07:11:33 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp (write_records, write_recordlist):
        * orbsvcs/orbsvcs/Log/Log_i.h:

          Add DsLogAdmin::LogOffDuty to exception specification.

Thu Jun  9 07:05:36 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerate.

        * orbsvcs/orbsvcs/Security.mpc:

          Add security_export.h to Header File section.

Thu Jun  9 12:54:41 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.cpp:
        * orbsvcs/orbsvcs/FaultTolerance/FT_Service_Callbacks.h:
        * tao/ORB_Core.h:
        * tao/ORB_Core.i:
        * tao/Profile.cpp:
        * tao/Profile.h:
        * tao/Service_Callbacks.cpp:
        * tao/Service_Callbacks.h:

          Changed the signature of the service callbacks is_equivalent
          hook so that a service can completely override the default
          profile comparison mechanism as required by the FT spec.

          This fixes bugzilla # 2137.

        * orbsvcs/tests/Bug_2137_Regression/Bug_2137_Regression.mpc:
        * orbsvcs/tests/Bug_2137_Regression/client.cpp:
        * orbsvcs/tests/Bug_2137_Regression/ep1.ior:
        * orbsvcs/tests/Bug_2137_Regression/ep1_d1_g1_v1.ior:
        * orbsvcs/tests/Bug_2137_Regression/ep1_d1_g1_v2.ior:
        * orbsvcs/tests/Bug_2137_Regression/ep1_d1_g2_v1.ior:
        * orbsvcs/tests/Bug_2137_Regression/ep1_d2_g1_v1.ior:
        * orbsvcs/tests/Bug_2137_Regression/ep2.ior:
        * orbsvcs/tests/Bug_2137_Regression/ep2_d1_g1_v1.ior:
        * orbsvcs/tests/Bug_2137_Regression/ep2_d1_g1_v2.ior:
        * orbsvcs/tests/Bug_2137_Regression/ep2_d1_g2_v1.ior:
        * orbsvcs/tests/Bug_2137_Regression/ep2_d2_g1_v1.ior:
        * orbsvcs/tests/Bug_2137_Regression/README:
        * orbsvcs/tests/Bug_2137_Regression/run_test.pl:

          Committed regression test for the above.

Thu Jun  9 09:31:28 2005  Simon McQueen  <sm@prismtech.com>

        * NEWS:

          Updated with late release note submissions.

Wed Jun 08 08:46:48 2005  Simon McQueen  <sm@prismtech.com>

        * TAO version 1.4.6 released.

Wed Jun  8 11:21:50 2005  Simon McQueen  <sm@prismtech.com>

        * NEWS:

          Updated with release note entries.

Mon Jun  6 18:05:52 2005  unknown  <michel_j@ociweb.com>

        * orbsvcs/ImplRepo_Service/Locator_Repository.cpp:

          Escape more strings written to the xml file. This should fix bug 2129.

Mon Jun  6 16:48:21 2005    <cleeland_c@ociweb.com>

        * tao/IIOP_Acceptor.cpp (create_new_profile): Reverse the order of
          comparisons so that port numbers get compared first.  This
          should make comparisons marginally faster when hostnames are
          ridiculously long if the ports don't match.

        * tao/IIOP_Acceptor.cpp (create_shared_profile): Make port numbers
          a part of the comparison so that RTCORBA connections work
          properly.

Mon Jun  6 02:10:32 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/TypeCode.cpp (equivalent):

          Pass the unaliased TypeCode to the subclass equivalent_i()
          template method instead of the potentially aliased one.  Fixes
          equivalence failures between an aliased TypeCode and unaliased
          TypeCode.  Thanks to Jiang Wei <jiangwei_1976 at yahoo dot com
          dot cn> for reporting the problem and providing a simple test
          case.  [Bug 2140]

Fri Jun  3 10:21:50 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Any/Recursive/client.cpp:

          Fixed unused argument warnings in emulated exception builds.

          Fixed syntax errors in minimum CORBA builds.

Fri Jun  3 09:17:13 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * tests/IOR_Endpoint_Hostnames/list_interfaces.cpp (main):

          Since this code was copied from
          TAO_IIOP_Acceptor::probe_interfaces(), update this code to look
          like the code there.  This was also in response to seemingly
          nonsense complaints on one platform in the line containing
          ACE_static_cast(), so hopefully the change to static_cast<>
          remedies that as well.

Fri Jun  3 14:49:14 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/tests/FaultTolerance/GroupRef_Manipulation/Server_Request_Interceptor.cpp:

          This test was trying to use the old (and superior :-) ) form
          of the FT service context and was subsequently failing to
          extract the group version correctly. Fixed.

Thu Jun  2 14:04:23 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:

          Fix exception macros.

Thu Jun  2 11:06:05 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/examples/ImR/Advanced/TestServer.cpp:

          Add an explicit constructor to work around BCB6 compiler
          warnings about implicit char* to string conversion.

Thu Jun  2 09:10:38 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * tests/IOR_Endpoint_Hostnames/generate_ior.cpp (main): Added
          explicit OrbId to ORB_init() call to fix errors on emulated
          exception builds.

Thu Jun  2 07:04:11 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerate.

        * orbsvcs/orbsvcs/Svc_Utils.mpc:

          Add svc_utils_export.h to Header File section.

Thu Jun  2 09:19:50 2005  Simon McQueen  <sm@prismtech.com>

        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:

          Exception macro fix. Thanks to jmegq@radiance.com for the
          report and fix. This fixes bug #2135.

Wed Jun  1 14:05:31 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/tests/ImplRepo/run_test.pl:

          Fix the persistent_ir test for unix platforms.

Wed Jun  1 09:26:14 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:

          More fixes for exception macros.

Wed Jun  1 08:19:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Root_POA.cpp:
          Increment refcount on the servant in the id_to_servant method.

        * tests/POA/Identity/Identity.cpp:
          Use ServantBase_var to store the servant pointer

Wed Jun  1 02:50:28 2005  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tests/Muxing/Receiver.h:

          Removed inheritance from PortableServer::RefcountServantBase
          since reference is on by default. Please see  "Thu May 26
          10:17:12 UTC 2005  Johnny Willemsen
          <jwillemsen@remedy.nl>". Many tests need to be changed
          similarly.

        * tests/Muxing/svc.conf:

          Added -ORBConnectionCacheMax option to the test.

Tue May 31 22:43:10 2005    <cleeland_c@ociweb.com>

        * tests/IOR_Endpoint_Hostnames/list_interfaces.cpp (main):
        * tests/IOR_Endpoint_Hostnames/generate_ior.cpp (main):

          Fixed warnings related to unused args or variables.

Tue May 31 19:28:48 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_ch.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:
        * TAO_IDL/include/utl_err.h:
        * TAO_IDL/util/utl_err.cpp:

          Since the typecode of a user-defined IDL exception is required
          by any IDL operation that raises it, changed the logic of the
          -St option to be ignored for user exceptions. An informative
          message is also output for each user exception encountered if
          the -St option is used. Formerly, the simultaneous appearance
          of -St and user exceptions would be made apparent only by a
          C++ compile failure.

        * docs/compiler.html:

          Updated IDL compiler documentation to reflect the above change.

Tue May 31 10:08:27 2005  Justin Michel  <michel_j@ociweb.com>

        * tao/IIOP_Endpoint.cpp:

          Add ACE_UNUSED_ARG for variable only used in assert.

Tue May 31 09:19:10 2005  Chris Cleeland  <cleeland@ociweb.com>

        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp (dotted_decimal_address):

          Removed '#if 0' bracketing around this method.  I don't know why
          this method was removed in the first place, but the originator
          of that change is unavailable for consultation for the next
          week, so I will err on the side of making things compile.

        * tests/IOR_Endpoint_Hostnames/IOR_Endpoint_Hostnames.mpc:
        * tests/IOR_Endpoint_Hostnames/bogus_i.h:

          Fixed fuzz build errors related to RCS Id strings and MSC
          version checks, etc.

Tue May 31 09:05:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORBInitializer_Registry.cpp:
          Reverted my change of Mon May 30 13:14:12 UTC 2005. With my change
          we are 3.0.3 corba compliant but this is not usable for our users.
          The draft 3.1 seems to describe the wanted behaviour better. I keep
          the regression test in the archive, the bugzilla entry is reopened.
          We will look at bug 2088 again

Mon May 30 22:19:54 2005  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

        * tao/Transport.h (post_connect_hook):
        * tao/Transport.cpp:

          Added post_connect_hook () method which is invoked just after
          connection establishment (or after a connection is fetched from
          cache). The return value signifies whether the invoker should
          proceed with post connection establishment
          activities or not. There are a wide range of use cases, for
          example protocols like SSLIOP  need this to verify whether
          connections already established have valid
          certificates. Validation of certificates/credentials can be done
          inside this  method. Implementations of this method can even
          tear down the connection, and return a false to the
          invoker. There  are no pre_connect_hooks () since the  transport
          doesn't exist before a connection establishment. :-). A default
          noop implementation has been provided.

        * tao/Transport_Connector.cpp:

          Invoke post_connect_hook () after grabbing a connection from
          cache.

Mon May 30 22:11:35 2005  Chris Cleeland  <cleeland@ociweb.com>

        * tests/IOR_Endpoint_Hostnames/bogus_i.cpp:
        * tests/IOR_Endpoint_Hostnames/generate_ior.cpp:

          Fix ACE_RCSID macro usage that prevented compilation.

Mon May 30 18:27:22 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/include/ast_module.h:
        * TAO_IDL/include/utl_scope.h:
        * TAO_IDL/util/utl_scope.cpp:

          Fixed discrepancies in the signature of look_in_previous()
          between the no-op UTL_Scope version and the AST_Module
          version. These discrepancies were causing warnings with
          the Borland compiler.

Mon May 30 10:23:27 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp (get_log_qos, set_log_qos):

          Fixed compilation on systems where new() does not throw an
          exception on failure (i.e. ACE_NEW_THROWS_EXCEPTIONS is not
          set).

Mon May 30 13:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Bug_2088/*:
          Added a regression for bugzilla bug 2088. When an ORBInitializer
          throws an exception, this should be ignored and the next
          ORBInitializer should be called. Previously an exception was
          propagated back to the caller of ORB::init(). See also 21.7.3.1
          of the corba spec.

        * tao/ORBInitializer_Registry.cpp:
          Fixed bug 2088, catch exceptions locally.

Mon May 30 12:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Cleanup_Func_Registry.h:
          Removed not needed friend classes

Sat May 28 08:59:32 2005  Emre Turkay  <turkaye@dre.vanderbilt.edu>

        * tests/Sequence_Unit_Tests/Sequence_Unit_Tests.mpc:

          Now there is an mpb file in ACE_MPC for the boost related
          settings. Changed the mpc base project accordingly.

Fri May 27 20:14:56 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp (check_grammar):

          Changed to accept TCL, ETCL, and EXTENDED_TCL like the
          Notification Service.

Fri May 27 15:19:57 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp:
        * orbsvcs/orbsvcs/Log/Log_i.h:

          Changed class to store a single QoS property instead of list, as
          the currently specified properties are mutually exclusive.  This
          greatly simplifies the get_log_qos and set_log_qos methods.

          Changed set_log_qos to return all of the unknown/unsupported QoS
          properties when throwing the UnsupportedQoS exception.

Fri May 27 17:01:24 2005  Chris Cleeland  <cleeland_c@ociweb.com>

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
        * tao/IIOP_Connection_Handler.cpp:

          Corrected a problem whereby, when listen points received in a
          bidirectional context get processed, the key for the entry made
          in the transport cache was created using the receiver's notion
          of whether dotted decimal addresses (-ORBDottedDecimalAddresses)
          should be used, rather than how the listen points were sent by
          the sender.  In doing so, when, for example, a CORBA server was
          using -ORBDottedDecimalAddresses and the client was not, the
          client's listen point got cached using its IP address rather
          than its hostname.  However, all the IORs distributed by the
          client would use the hostname, and, thus, the server would not
          be able to find a match for the client's endpoint in its cache,
          and subsequently try to create a new one.

          The change now creates an entry in the cache using, for the
          hostname portion of the key, the host name however the client
          sent the hostname.  This should insure that a receiver of a
          bidirectional context will have the ability to find a match in
          the transport cache.

          This change supercedes the following changelog entry:

          Thu Sep 13 11:05:13 2001  Balachandran Natarajan  <bala@cs.wustl.edu>

          * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:
          * tao/IIOP_Connection_Handler.cpp (process_listen_point_list):

            When creating an IIOP Endpoint, passed in the value of the
            ORBDottedDecimal address value from the ORB_Core. This is a real
            stupid mistake :(. Added a debug statement. Thanks to Werner
            Buchert <w.buchert@medat.de> for reporting this problem.

        * tao/IIOP_Connection_Handler.cpp:
        * orbsvcs/orbsvcs/PortableGroup/UIPMC_Acceptor.cpp:
        * tao/IIOP_Acceptor.h:
        * tao/IIOP_Acceptor.cpp:
        * tao/IIOP_Transport.cpp:

          Modified the IIOP Acceptor so that the behavior for the host
          identifier (hostname or IP address) that appears in IIOP
          profiles is consistent with the following:

          1. value from "hostname_in_ior", if specified;
          2. setting of -ORBDottedDecimalAddresses option
          3. value for <hostname> used in -ORBEndpoint iiop://<hostname>
          4. whatever TAO magically comes up with

          The significant change here is that previous to this change,
          numbers 1 and 2 were reversed, i.e., -ORBDottedDecimalAddresses
          took precedence over hostname_in_ior.

        * tests/IOR_Endpoint_Hostnames/IOR_Endpoint_Hostnames.mpc:
        * tests/IOR_Endpoint_Hostnames/bogus.idl:
        * tests/IOR_Endpoint_Hostnames/bogus_i.cpp:
        * tests/IOR_Endpoint_Hostnames/bogus_i.h:
        * tests/IOR_Endpoint_Hostnames/generate_ior.cpp:
        * tests/IOR_Endpoint_Hostnames/list_interfaces.cpp:
        * tests/IOR_Endpoint_Hostnames/run_test.pl:

          Added a new functionality/regression test for the change listed
          above.  The run_test.pl prints out a matrix for permutations and
          expected results, and indicates whether each permutation
          succeeds or fails.  It also depends upon a new option to catior,
          found in the next entry.

        * orbsvcs/tests/Security/BiDirectional/server.conf:

          Removed some hardcoded paths to OCI personal home directories.

        * utils/catior/catior.cpp:

          Added a "-x" option that works like "-f" except that it reads
          the IOR from standard input (stdin or cin) rather than from a
          file.  This makes catior much more like the unix "cat" command,
          and enables it to be used in a pipeline.

Fri May 27 15:54:44 2005  Justin Michel  <michel_j@ociweb.com>

        * docs/Options.html:
        * tao/IIOP_Connector.cpp:
        * tao/IIOP_Endpoint.h:
        * tao/IIOP_Endpoint.cpp:
        * tao/IIOP_Profile.cpp:
        * tao/params.cpp:

          Reimplemented the -ORBPreferredInterfaces option to support
          wildcards.

Fri May 27 15:30:21 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/ImplRepo_Service/Activator_NT_Service.h:
        * orbsvcs/ImplRepo_Service/Locator_NT_Service.h:
        * tao/TypeCode_Base_Attributes.h:
        * tao/TypeCode_Case.h:
        * tao/TypeCode_Case_T.h:
        * tao/TypeCode_Struct_Field.h:
        * tao/TypeCode_Value_Field.h:
        * utils/wxNamingViewer/pch.h:

          These files #included config.h which isn't safe, because it
          won't necessarilly pick up the correct symbols. For example, I
          caught this by trying to build ACE on Windows with
          __ACE_INLINE__ = 0. The files that #included config.h directly
          saw that it was defined as 0, but changing them to #include
          config-all.h instead, correctly saw that the symbol was
          undefined.

Fri May 27 13:12:10 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Any/Recursive/Test.idl:

          Added new user exception to be used when reporting Any
          demarshaling errors.

        * tests/Any/Recursive/client.cpp:

          Fixed unused argument warnings.

          Use the new user exception when report Any demarshaling
          failures, instead of CORBA::INV_OBJREF.

Fri May 27 08:50:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/POA/Default_Servant/Default_Servant.cpp:
          Slightly modified this test to test reference_to_servant with
          reference counting

        * tests/POA/Deactivate_Object/server.cpp:
          Added a call to reference_to_servant. This as a regression for
          a bug where we didn't increment the reference count on the
          servant before returning it.

        * tao/PortableServer/Root_POA.cpp (reference_to_servant_i):
          Increment the reference count on the servant before returning it.
          Thanks to Konstantinos Lykiardopoulos <klyk at intracom dot gr>
          and  Lothar Werzinger <lothar at xcerla dot com> for reporting
          this problem.

        * tao/PortableServer/RequestProcessingStrategyDefaultServant.cpp:
          In system_id_to_servant() don't increment the refcount on the
          servant, this is done by the POA.

Fri May 27 08:36:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/Servant_Base.cpp:
          Fixed typo in comment

Fri May 27 08:25:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:
          Fixed conversion warnings

Fri May 27 00:36:32 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tests/Any/Recursive/Hello.cpp:
        * tests/Any/Recursive/Hello.h:
        * tests/Any/Recursive/README:
        * tests/Any/Recursive/RecursiveHello.mpc:
        * tests/Any/Recursive/Test.idl:
        * tests/Any/Recursive/client.cpp:
        * tests/Any/Recursive/run_test.pl:
        * tests/Any/Recursive/server.cpp:

          New test that verifies properly functioning recursive type Any
          insertion and extraction support.  It also indirectly verifies
          that recursive TypeCode support is working.

Thu May 26 16:09:50 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:

          Functions with two or more try blocks must use ACE_TRY_EX.

        * orbsvcs/examples/ImR/Advanced/TestClient.cpp:

          Use getline() instead of operator>> to read in lines of
          text from a file into a std::string. Use string::c_str() with
          operator<< instead of relying on existence of ostream extraction
          operators for strings. A more useful solution might be to
          provide insertion/extraction operators for platforms that are
          missing them.

Thu May 26 16:02:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ClientScheduler_i.cpp:
        * orbsvcs/orbsvcs/RTCosScheduling/RTCosScheduling_ServerScheduler_i.cpp:
          Updated for interceptor_list changes

Thu May 26 14:33:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Interceptor_List.cpp:
          Fixed gnu warning

Thu May 26 10:42:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        Made the Interceptor_List a template which is now used instead of a
        base class with derived specific list classes. This is now in the TAO
        namespace instead of using a TAO_ prefix.

        * tao/Interceptor_List.{h,cpp}:
          The Interceptor_List is now a template

        * tao/ClientRequestInterceptor_List.{h,cpp,inl}:
        * tao/ServerRequestInterceptor_List.{h,cpp,inl}:
        * tao/IORInterceptor/IORInterceptor_List.{h,cpp,inl}:
          Removed these files, we have now template instantiations instead
          of specific classes

        * tao/ORB_Core.{h,cpp,i}:
          Update for changes above.

        * tao/IORInterceptor_Adapter.h:
          Updated for interceptor list change

        * tao/IORInterceptor/IORInterceptor_Adapter_Impl.h:
          Updated for interceptor_list change and also implemented
          adapter_state_changed in this class because we don't have
          a specific IORInterceptor list anymore where this was
          implemented.

        * tao/ClientRequestInterceptor_Adapter.{h,cpp,inl}:
          Updated because of ClientInterceptorList change

        * PortableServer/ServerInterceptorAdapter.h:
          Updated because of ServerRequestInterceptor List change

        * tao/tao.mpc:
        * tao/Makefile.am:
          Updated for changes above

Thu May 26 10:17:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        According to the latest C++ mapping, reference counting is mandatory;
        the RefCountServantBase class is now a legacy artifact. Thanks to
        Frank Pilhofer <fpilhofe at mc dot com> for reporting this.
        This fixes bugzilla [1952].

        * tao/Abstract_Servant_Base.{h,cpp}:
          Made the add_ref/remove_ref methods pure virtual and added
          _refcount_value

        * tao/PortableServer/Servant_Base.{h,cpp}:
          Added reference counting to TAO_ServantBase and removed
          TAO_RefCountServantBase

        * tao/PortableServer/PS_ForwardC.h:
          Make RefCountServantBase a noop struct

        * tao/PortableServer/diffs/PS_Forward.diff:
          Updated

Thu May 26 09:23:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Profile.h:
          Removed commented out code

        * tao/QtResource_Factory.h:
          Doxygen improvement

Thu May 26 08:53:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Portable_Interceptors/Collocated/Dynamic/interceptors.cpp:
          Retrieve the object_id in the receive_request. According to
          Konstantinos Lykiardopoulos <klyk at intracom dot gr> this failed
          with the 1.4.5 release of TAO but it works now again. Added this
          as regression so that we don't have a problem in the future again

Thu May 26 07:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ImR_Client/ImplRepo.pidl:
        * tao/ImR_Client/ServerObject.pidl:
          Updated regeneration instructions

Thu May 26 07:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableServer/LifespanStrategyPersistent.cpp:
          Also add a process directive that uses the xml svc.conf way of
          specifying this. This fixes bugzilla 2127. Thanks to Lothar
          Werzinger <lothar at xcerla dot com> for reporting this.

Wed May 25 23:42:43 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Logging_Service/Basic_Logging_Service/Basic_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Event_Logging_Service/Event_Logging_Service.cpp:
        * orbsvcs/Logging_Service/Notify_Logging_Service/Notify_Logging_Service.cpp:

          Changed to pass the ORB pointer to the factories' activate()
          method.

        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.cpp:
          Changed to pass the ORB pointer to the factory's init() method.

        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.cpp
        * orbsvcs/orbsvcs/Log/BasicLogFactory_i.h
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.cpp
        * orbsvcs/orbsvcs/Log/EventLogFactory_i.h
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.cpp
        * orbsvcs/orbsvcs/Log/NotifyLogFactory_i.h

          Changed to stash away ORB pointer in the activate() method, and
          to pass it to the Log servant constructors.

        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.h

          Changed to stash away ORB pointer in the init() method, and to
          pass it to the RTEventLog servant constructor.

        * orbsvcs/orbsvcs/Log/Log_i.cpp
        * orbsvcs/orbsvcs/Log/Log_i.h
        * orbsvcs/orbsvcs/Log/BasicLog_i.cpp
        * orbsvcs/orbsvcs/Log/BasicLog_i.h
        * orbsvcs/orbsvcs/Log/EventLog_i.cpp
        * orbsvcs/orbsvcs/Log/EventLog_i.h
        * orbsvcs/orbsvcs/Log/NotifyLog_i.cpp
        * orbsvcs/orbsvcs/Log/NotifyLog_i.h
        * orbsvcs/orbsvcs/Log/RTEventLog_i.cpp
        * orbsvcs/orbsvcs/Log/RTEventLog_i.h

          Changed constructor to take an ORB pointer instead of a Reactor
          pointer.  The latter had defaulted to use the Reactor Singleton
          instance, but using the servant ORB's reactor ensures the event
          loop will be active.  Curiously, the old reactor pointer wasn't
          being used.  That will change soon, as we'll be adding timer
          handlers for database flush and compaction.

Wed May 25 20:21:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/examples/CosEC/RtEC_Based/tests/Basic/CosEC_RtEC_Based_tests_Basic.mpc:
          Use rtevent_serv as base project

Wed May 25 20:17:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.mpc:
          Changed order of the projects.

Wed May 25 12:24:36 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/DynamicInterface/Unknown_User_Exception.h (_type):
        * tao/DynamicInterface/Unknown_User_Exception.h (_type):

          Renamed this method to "_tao_type" since it is meant to be an
          override for the CORBA::Exception::_tao_type() base class
          method.  Addresses CORBA::UnknownUserException Any insertion
          problems.

Tue May 24 21:13:46 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Invocation_Adapter.cpp (invoke_collocated_i):

          Updated ACE_ASSERT condition to reflect new thru POA case.
          Thanks to Lothar Werzinger for reporting the assertion.

Tue May 24 19:57:43 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/Event_Service/Makefile.am:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Colocated_Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Federated_Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Baseline/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/RTCORBA_Callback/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/Roundtrip/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/TCP_Baseline/Makefile.am:
        * orbsvcs/performance-tests/RTEvent/lib/Makefile.am:
        * orbsvcs/tests/EC_Custom_Marshal/Makefile.am:
        * orbsvcs/tests/EC_MT_Mcast/Makefile.am:
        * orbsvcs/tests/EC_Mcast/Makefile.am:
        * orbsvcs/tests/EC_Multiple/Makefile.am:
        * orbsvcs/tests/EC_Throughput/Makefile.am:
        * orbsvcs/tests/Event/Basic/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Common/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Complex/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Simple/Makefile.am:
        * orbsvcs/tests/Event/Mcast/Two_Way/Makefile.am:
        * orbsvcs/tests/Event/Performance/Makefile.am:
        * orbsvcs/tests/Event/lib/Makefile.am:
        * orbsvcs/tests/FtRtEvent/Makefile.am:

          Regenerate for removal of RTOLDEvent and split of RTEvent
          libraries.

        * orbsvcs/Time_Service/Makefile.am:
        * orbsvcs/orbsvcs/Makefile.am:

          Regenerate for change below.

        * orbsvcs/orbsvcs/CosTime.mpc:

          Inherit from svc_utils.

        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Server.cpp:

          Use new ORBSVCS_Time::Time_Value_to_TimeT() method from the
          Svc_Utils library to convert timestamp to a TimeBase::TimeT.

        * orbsvcs/orbsvcs/Log/NotifyLogConsumer.cpp:
        * orbsvcs/orbsvcs/Log/NotifyLogConsumer.h:

          The specification requires that a structured or typed event
          should be stored as an Any as specified by the Notification
          Service, so connect to the channel as an Any consumer.

Tue May 24 14:29:14 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

Tue May 24 14:15:36 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent_Serv.mpc:
        * orbsvcs/orbsvcs/RTEvent_Skel.mpc:

          Removed RTEvent MPC group.  This causes problems when project
          Makefile.am's are aggregated.

Tue May 24 11:59:37 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Time_Utilities.cpp:
        * orbsvcs/orbsvcs/Time_Utilities.h:
        * orbsvcs/orbsvcs/Time_Utilities.i:

          Updated comments to Doxygen format.

          Added new methods for converting absolute timestamps between
          ACE_Time_Value and TimeBase::TimeT.

Tue May 24 10:32:31 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:

          Regenerated.

Tue May 24 10:58:53 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/ImplRepo_Service/Locator_Repository.cpp:

          Add missing include.

Tue May 24 09:47:52 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/examples/ImR/Advanced/TestServer.cpp:

          Disable fuzz check, because it can't detect the try/catch
        in the calling function.

Tue May 24 09:14:57 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/examples/ImR/Advanced/TestServer.h:
        * orbsvcs/examples/ImR/Advanced/TestServer.cpp:

          This example was simply copied from 1.4a, and I forgot to make
        the adjustments required by the POA refactoring.

        * tao/ImR_Client/ImplRepoC.h:

          The ImplRepo.pidl had #include ServerObject.pidl, but didn't include
        ServerObjectC.h. For now, I manually added the include, but this isn't
        a final solution.

Mon May 23 14:50:27 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/examples/ImR/Advanced/Advanced.mpc:

          Changed from requires += exceptions to inheriting from exceptions. Hopefully
        this will eliminate fuzz errors.

Mon May 23 18:47:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * docs/tutorials/Quoter/RT_Event_Service/Quoter_RT_Event_Service.mpc:
          Updated for RTEvent library split

Mon May 23 18:44:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Simulator/Event_Supplier/Event_Supplier.mpc:
          Updated for RTEvent library split

Mon May 23 13:24:41 2005  Justin Michel  <michel_j@ociweb.com>

        * tao/ImR_Client/ImplRepo.pidl:
        * tao/ImR_Client/ImplRepoA.cpp:
        * tao/ImR_Client/ImplRepoC.h:
        * tao/ImR_Client/ImplRepoC.inl:
        * tao/ImR_Client/ImplRepoC.cpp:
        * tao/ImR_Client/ImplRepoS.h:
        * tao/ImR_Client/ImplRepoS.cpp:

          Re-added the -GA option and updated the command in the pidl to save
        footprint for static builds.

Mon May 23 18:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.{h,cpp}:
          Fixed service config macros

Mon May 23 12:38:31 2005  Justin Michel  <michel_j@ociweb.com>

        * orbsvcs/ImplRepo_Service/Activator_Options.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Activator.idl:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.h:
        * orbsvcs/ImplRepo_Service/ImR_Activator_i.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Locator.cpp:
        * orbsvcs/ImplRepo_Service/ImR_Locator_i.h:
        * orbsvcs/ImplRepo_Service/ImR_Locator_i.cpp:
        * orbsvcs/ImplRepo_Service/Locator_Options.h:
        * orbsvcs/ImplRepo_Service/Locator_Options.cpp:
        * orbsvcs/ImplRepo_Service/Locator_Repository.h:
        * orbsvcs/ImplRepo_Service/Locator_Repository.cpp:
        * orbsvcs/ImplRepo_Service/README.txt:
        * orbsvcs/ImplRepo_Service/tao_imr_i.h:
        * orbsvcs/ImplRepo_Service/tao_imr_i.cpp:
        * tao/ImR_Client/ImR_Client.cpp:
        * tao/ImR_Client/ImplRepo.pidl:
        * tao/ImR_Client/ImplRepoC.h:
        * tao/ImR_Client/ImplRepoC.inl:
        * tao/ImR_Client/ImplRepoC.cpp:
        * tao/ImR_Client/ImplRepoS.h:
        * tao/ImR_Client/ImplRepoS.cpp:

          Several bug fixes and enhancments to the ImR.
          Cleaned up the perl to use strict and compile without warnings.
          Displayed a message that the poa was being registered with the
        ImR even when -orbuseimr 0 was specified.
          Stop printing the exception details for unexpected exceptions
        that happen during a call to server->shutdown(). At least on
        windows, we often get COMM_FAILURE or TRANSIENT, because the
        socket is not shutdown gracefully by the server.
          Don't print the exception when a TRANSIENT is received while
        pinging the server. This is not an error. Not sure why we were
        getting 'No usable profile in IOR' messages though, when we
        expect a 'POA in holding state'.
          Merge in changes to support ImplRepo_Service -e, which
        will clear the repository on startup. This makes it easier to write
        persistence tests, and might be useful in general.
          Updated to automatically set the ImplRepoServiceIOR and
        TAO_USE_IMR environment variables, obviating the need to pass
        -orbuseimr or -orbinitref ImplRepoService=... when using an
        Activator to start a server.
          Add -orbuseimr 0 to the cmd line args, so that the TAO_USE_IMR=1
        environment variable can be used safely.
          Fix incorrect exception specifications in activator.
          Fix command line help descriptions.
          Combine add/update operations in the imr and imr util.
          Support clean shutdown using ctrl-c as well as the
        imr util shutdown-repo command.
          Add detection of server process death, and an option to
        notify the ImR when this happens, to the activator.
          Fix some problems with exception macros and unused vars.
          Fix bug with case-insensitive activator name and binary persistence.


        * orbsvcs/examples/ImR/Advanced/Advanced.mpc:
        * orbsvcs/examples/ImR/Advanced/Manager.idl:
        * orbsvcs/examples/ImR/Advanced/Manager_i.h:
        * orbsvcs/examples/ImR/Advanced/Manager_i.cpp:
        * orbsvcs/examples/ImR/Advanced/Messenger.idl:
        * orbsvcs/examples/ImR/Advanced/Messenger_i.h:
        * orbsvcs/examples/ImR/Advanced/Messenger_i.cpp:
        * orbsvcs/examples/ImR/Advanced/README:
        * orbsvcs/examples/ImR/Advanced/TestClient.h:
        * orbsvcs/examples/ImR/Advanced/TestClient.cpp:
        * orbsvcs/examples/ImR/Advanced/TestServer.h:
        * orbsvcs/examples/ImR/Advanced/TestServer.cpp:
        * orbsvcs/examples/ImR/Advanced/client_main.cpp:
        * orbsvcs/examples/ImR/Advanced/drivers/all:
        * orbsvcs/examples/ImR/Advanced/drivers/defaults:
        * orbsvcs/examples/ImR/Advanced/drivers/environment:
        * orbsvcs/examples/ImR/Advanced/drivers/invocation:
        * orbsvcs/examples/ImR/Advanced/drivers/persistence:
        * orbsvcs/examples/ImR/Advanced/drivers/retry:
        * orbsvcs/examples/ImR/Advanced/drivers/use_environment:
        * orbsvcs/examples/ImR/Advanced/drivers/use_invocation:
        * orbsvcs/examples/ImR/Advanced/drivers/use_persistence:
        * orbsvcs/examples/ImR/Advanced/manager_main.cpp:
        * orbsvcs/examples/ImR/Advanced/run_test.pl:
        * orbsvcs/examples/ImR/Advanced/server_main.cpp:

          Dave Giovannini's new test which provides greater
        coverage of ImR features. Some tests are still failing, so
        this is not ready to be enabled for nightly builds.

        * orbsvcs/orbsvcs/IOR_Multicast.cpp:

          Fixed bug in unregistration, and updated log messages
        to show the name of the class and method being logged.

        * orbsvcs/orbsvcs/Notify/XML_Saver.h:
        * orbsvcs/orbsvcs/Notify/XML_Saver.cpp:

          Updated to use the new ACEXML_escape_string() function.

        * orbsvcs/orbsvcs/Shutdown_Utilities.h:
        * orbsvcs/orbsvcs/Shutdown_Utilities.cpp:

          Updated to work on Windows.

        * orbsvcs/tests/ImplRepo/airplane_server_i.h:
        * orbsvcs/tests/ImplRepo/airplane_server_i.cpp:
        * orbsvcs/tests/ImplRepo/locked/run_test.pl:
        * orbsvcs/tests/ImplRepo/nestea_server_i.h:
        * orbsvcs/tests/ImplRepo/nestea_server_i.cpp:
        * orbsvcs/tests/ImplRepo/run_test.pl:
        * orbsvcs/tests/ImplRepo/scale/server_i.cpp:

          Basic code cleanup to match latest 1.4a.
          Some tests were not shutting down correctly, and were
        activating the poa manager too soon.
          Nestea test prints the contents of ImplRepoServiceIOR and TAO_USE_IMR.
          Stop passing -orbuseimr 1 and imr_init_ref in the command lines
        registered with the ImR.


        * orbsvcs/tests/Notify/Reconnecting/run_test.pl:

          Use -ORBObjRefStyle URL so that the XML file has consistent
        contents, and can be compared for equality. This should let this
        test pass on more (all?) platforms.

        * tao/ORB_Core.cpp:

          Add missing support for -ORBObjRefStyle IOR.

        * tao/ImR_Client/ImplRepoA.cpp:

          Removed this file, because the idl command line wasn't set to generate it.


Mon May 23 06:12:01 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp (TAO_Log_i::remove_old_records):

          Fixed typo introduced in last change.

Mon May 23 12:27:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2119_Regression/test.mpc:
          Simplified this mpc file

Mon May 23 11:08:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/ECG_Adapters.h:
        * orbsvcs/orbsvcs/Event/ECG_Address_Server_Base.h:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_CDR_Message_Sender.h:
        * orbsvcs/orbsvcs/Event/ECG_Complex_Address_Server.h:
        * orbsvcs/orbsvcs/Event/ECG_ConsumerEC_Control.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_EH.h:
        * orbsvcs/orbsvcs/Event/ECG_Mcast_Gateway.h:
        * orbsvcs/orbsvcs/Event/ECG_Reactive_ConsumerEC_Control.h:
        * orbsvcs/orbsvcs/Event/ECG_Reconnect_ConsumerEC_Control.h:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Address_Server.h:
        * orbsvcs/orbsvcs/Event/ECG_Simple_Mcast_EH.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_EH.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Out_Endpoint.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Protocol.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Receiver.h:
        * orbsvcs/orbsvcs/Event/ECG_UDP_Sender.h:
        * orbsvcs/orbsvcs/Event/EC_And_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Basic_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Basic_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_Bitmask_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Channel_Destroyer.h:
        * orbsvcs/orbsvcs/Event/EC_Conjunction_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_ConsumerAdmin.h:
        * orbsvcs/orbsvcs/Event/EC_ConsumerControl.h:
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.cpp
        * orbsvcs/orbsvcs/Event/EC_Default_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Default_ProxyConsumer.h:
        * orbsvcs/orbsvcs/Event/EC_Default_ProxySupplier.h:
        * orbsvcs/orbsvcs/Event/EC_Disjunction_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_Dispatching_Task.h:
        * orbsvcs/orbsvcs/Event/EC_Event_Channel.h:
        * orbsvcs/orbsvcs/Event/EC_Event_Channel_Base.h:
        * orbsvcs/orbsvcs/Event/EC_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.cpp
        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Group_Scheduling.h:
        * orbsvcs/orbsvcs/Event/EC_Lifetime_Utils.h:
        * orbsvcs/orbsvcs/Event/EC_MT_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_Masked_Type_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Negation_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Null_Factory.h:
        * orbsvcs/orbsvcs/Event/EC_Null_Scheduling.h:
        * orbsvcs/orbsvcs/Event/EC_ObserverStrategy.h:
        * orbsvcs/orbsvcs/Event/EC_Per_Supplier_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Prefix_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_ProxyConsumer.h:
        * orbsvcs/orbsvcs/Event/EC_ProxySupplier.h:
        * orbsvcs/orbsvcs/Event/EC_Proxy_Disconnector.h:
        * orbsvcs/orbsvcs/Event/EC_QOS_Info.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_ConsumerControl.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_Dispatching.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_SupplierControl.h:
        * orbsvcs/orbsvcs/Event/EC_Reactive_Timeout_Generator.h:
        * orbsvcs/orbsvcs/Event/EC_Scheduling_Strategy.h:
        * orbsvcs/orbsvcs/Event/EC_SupplierAdmin.h:
        * orbsvcs/orbsvcs/Event/EC_SupplierControl.h:
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Supplier_Filter_Builder.h:
        * orbsvcs/orbsvcs/Event/EC_Timeout_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Timeout_Generator.h:
        * orbsvcs/orbsvcs/Event/EC_Trivial_Supplier_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_Type_Filter.h:
        * orbsvcs/orbsvcs/Event/EC_UDP_Admin.h:
        * orbsvcs/orbsvcs/Event/event_export.h:
          Include the RTEvent_Serv file and updated export macro

        * orbsvcs/orbsvcs/RTEvent_Serv.mpc:
        * orbsvcs/orbsvcs/RTEvent_Serv.rc:
        * orbsvcs/orbsvcs/RTEvent_Skel.mpc:
        * orbsvcs/orbsvcs/RTEvent_Skel.rc:
        * orbsvcs/orbsvcs/Event/event_serv_export.h:
        * orbsvcs/orbsvcs/Event/event_skel_export.h:
          New files for the new RTEvent Serv and Skel libraries

        * orbsvcs/Event_Service/Event_Service.mpc:
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.cpp
        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.mpc:
        * orbsvcs/examples/CosEC/RtEC_Based/bin/CosEC_RtEC_Based_bin.mpc:
        * orbsvcs/examples/CosEC/RtEC_Based/lib/CosEC_RtEC_Based_lib.mpc:
        * orbsvcs/examples/Log/RTEvent/Log_RTEvent.mpc:
        * orbsvcs/examples/RtEC/IIOPGateway/RtEC_IIOPGateway.mpc:
        * orbsvcs/examples/RtEC/Kokyu/RtECKokyu.mpc:
        * orbsvcs/examples/RtEC/MCast/RtEC_MCast.mpc:
        * orbsvcs/examples/RtEC/Schedule/RtEC_Schedule.mpc:
        * orbsvcs/examples/RtEC/Simple/RtEC_Simple.mpc:
        * orbsvcs/orbsvcs/FtRtEvent.mpc:
        * orbsvcs/orbsvcs/RTCORBAEvent.mpc:
        * orbsvcs/orbsvcs/RTEvent.mpc:
        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:
        * orbsvcs/orbsvcs/RTKokyuEvent.mpc:
        * orbsvcs/orbsvcs/RTSchedEvent.mpc:
        * orbsvcs/performance-tests/RTEvent/lib/RTEC_Perf.mpc:
        * orbsvcs/tests/EC_MT_Mcast/EC_MT_Mcast.mpc:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.mpc:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.mpc:
        * orbsvcs/tests/EC_Throughput/EC_Throughput.mpc:
        * orbsvcs/tests/Event/Basic/rteventtestexe.mpb
        * orbsvcs/tests/Event/Mcast/Common/ECMcastTests_lib.mpc:
        * orbsvcs/tests/Event/Mcast/Complex/Complex.mpc:
        * orbsvcs/tests/Event/Mcast/Simple/Simple.mpc:
        * orbsvcs/tests/Event/Mcast/Two_Way/Two_Way.mpc:
        * orbsvcs/tests/Event/Performance/Event_Performance.mpc:
        * orbsvcs/tests/Event/lib/Event_lib.mpc:
          Updated because of splitted RTEvent library

Mon May 23 09:14:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/EC_Custom_Marshal/run_test.pl:
          No need to specify the type of the event service anymore

Mon May 23 05:44:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Event/BCU.cpp BCU.h:
        * orbsvcs/orbsvcs/Event/Debug_Macros.h:
        * orbsvcs/orbsvcs/Event/Dispatching_Modules.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/Event_Channel.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/Event_Manip.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/Fast_Reactor.h
        * orbsvcs/orbsvcs/Event/GPlot_File.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/Local_ESTypes.{h,cpp}:
        * orbsvcs/orbsvcs/Event/Memory_Pools.{h,cpp,i}:
        * orbsvcs/orbsvcs/Event/Module_Factory.{h,cpp}:
        * orbsvcs/orbsvcs/Event/old_event_export.h:
        * orbsvcs/orbsvcs/Event/ReactorTask.{h,cpp}:
        * orbsvcs/orbsvcs/Event/RT_Task.{cpp,h,i}:
        * orbsvcs/orbsvcs/Event/Timer_Module.{h,cpp,i}:
          Removed the old RTEvent implementation. This is already deprecated
          for years. This fixes bugzilla bug 2047

        * orbsvcs/orbsvcs/Event_Service_Constants.h:
          Removed the constants that are for the old ec

Mon May 23 05:35:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Event_Service/Event_Service.{h,cpp}:
          Removed module_factory_, it was for the old ec

Mon May 23 05:31:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/Simulator/Event_Supplier/DualEC_Sup.cpp:
          Fixed casing of include

Sun May 22 22:10:00 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/tests/Log/Basic_Log_Test/Basic_Log_Test.cpp (display_records)
        (delete_records):

        Changed query language parameter from "TCL" to "EXTENDED_TCL".

        * orbsvcs/orbsvcs/Log/Log_i.cpp (QUERY_LANG_SUPPORTED_BY_LOG):

        Changed from "TCL" to "EXTENDED_TCL".

        * orbsvcs/orbsvcs/Log/Log_i.cpp (TAO_Log_i::delete_records_by_id)
        (TAO_Log_i::delete_records, TAO_Log_i::remove_old_records):

        Don't bother checking whether current_size is less than max_size
        if not log_full.  Avoids potentially costly calls into log store
        (if/when we support strategized stores).

Sun May 22 18:02:07 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp (TAO_Log_i::delete_records)
        (TAO_Log_i::remove_old_records):

        Like delete_records_by_id(), reset "log_full" if "current_size"
        is less than "max_size".

Sun May 22 17:01:56 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/Log_i.cpp (TAO_Log_i::scheduled):

        Removed duplicate fetch of current time.

        * orbsvcs/orbsvcs/Log/Log_i.cpp (TAO_Log_i::remove_old_records):

        Corrected calculation of purge time.  Arithmetic was being done on
        time values without normalizing units first.

Sun May 22 16:37:39 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated.

Sun May 22 20:16:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.{cpp,h}:
        * orbsvcs/Event_Service/Event_Service.{h,cpp}:
        * orbsvcs/tests/EC_Throughput/ECT_Throughput.{h,cpp}:
        * examples/Simulator/Event_Supplier/DualEC_Sup.{h,cpp}:
        * orbsvcs/tests/Event/lib/Driver.{h,cpp}:
        * orbsvcs/examples/RtEC/Kokyu/Service.cpp:
        * orbsvcs/examples/RtEC/Schedule/Service.cpp:
          Removed support for the old rt event service, this will be removed
          soon.

        * orbsvcs/Logging_Service/RTEvent_Logging_Service/RTEvent_Logging_Service.mpc:
          Removed not needed includes

        * orbsvcs/Event_Service/Event_Service.mpc:
        * orbsvcs/tests/EC_Throughput/EC_Throughput.mpc:
        * orbsvcs/examples/RtEC/Schedule/RtEC_Schedule.mpc:
        * examples/Simulator/Event_Supplier/Event_Supplier.mpc:
        * orbsvcs/orbsvcs/RTEventLogAdmin.mpc:
          Removed rtoldevent as base project

        * orbsvcs/tests/EC_Throughput/run_test.pl:
          Updated because we just only have one RTEvent implementation

        * orbsvcs/tests/Sched_Conf/Sched_Conf_Anomalies.cpp:
        * orbsvcs/tests/Sched_Conf/Sched_Conf.cpp:
        * orbsvcs/Dump_Schedule/Dump_Schedule.cpp:
          Removed workaround for very old Sun compiler

        * orbsvcs/examples/RtEC/Schedule/Consumer.cpp:
        * orbsvcs/examples/RtEC/Schedule/Supplier.cpp:
          Removed empty explicit instantiation block

        * orbsvcs/examples/RtEC/Schedule/Service.cpp:
        * orbsvcs/orbsvcs/Log/RTEventLogFactory_i.cpp:
          Removed not needed includes of old rtevent files

Sun May 22 10:33:34 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/PortableServer/Root_POA.cpp (create_POA_i):

          Increment the reference count immediately after binding the
          child POA to children map.  Addresses a seg fault introduced by
          the leak fix described in ChangeLog entry "Sun May 22 00:00:31
          2005  Ossama Othman  <ossama@dre.vanderbilt.edu>".

        * tao/PortableServer/Root_POA.h (create_POA_i):

          No need to return a pointer to TAO_Root_POA.  Return a
          PortableServer::POA_ptr instead.  Allows implementation to be
          slightly simplified.

Sun May 22 14:49:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/EC_Multiple/EC_Multiple.mpc:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp:
          Converted this test to use the new RTEC instead of the old one
          which will be removed soon. Also removed a workaround for the Sun 4.2
          compiler which we don't support already for a long time

Sun May 22 14:01:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PICurrent.h:
          Fixed warning

Sun May 22 11:28:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ClientRequestInfo_i.h:
        * tao/ClientRequestInterceptor_Adapter.h:
        * tao/ClientRequestInterceptor_List.cpp:
        * tao/ClientRequestInterceptor_List.h:
        * tao/ClientRequestInterceptor_List.inl:
        * tao/Interceptor_List.cpp:
        * tao/Interceptor_List.h:
        * tao/Interceptor_List.inl:
        * tao/ORB_Core.h:
        * tao/PICurrent.h:
        * tao/PICurrent_Copy_Callback.h:
        * tao/PICurrent_ORBInitializer.h:
        * tao/ServerRequestInterceptor_List.cpp:
        * tao/ServerRequestInterceptor_List.h:
        * tao/ServerRequestInterceptor_List.inl:
        * tao/tao.mpc:
        * tao/PortableServer/ServerInterceptorAdapter.h:
          Moved ClientRequestInterceptor_List and
          ServerRequestInterceptor_List to their own files and updated
          includes.

Sun May 22 11:54:16 2005  Olli Savia  <ops@iki.fi>

        * tao/Collocated_Invocation.cpp:

          Fixed a typo in comment.

Sun May 22 00:00:31 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>


        * tao/Any.h (to_object, to_abstract_base, to_value):

          Made these constructors explicit, in keeping with the CORBA spec
          since it requires that the other "to_" helper structs have
          explicit single argument constructors if supported by the C++
          compiler.

        * tao/PortableServer/Root_POA.cpp (create_POA_i):

          Do not duplicate POA returned from the other create_POA_i()
          override called in this method since we are returning it
          directly to the caller and do not need to retain ownership.
          Fixes a number of memory leaks.

        * tests/ORT/ObjectReferenceFactory.h:

          CORBA::DefaultValueRefCountBase mix-in class should be the last
          in the inheritance chain.  Addresses potential memory leaks.

        * tests/Param_Test/options.cpp:
        * tests/Param_Test/options.h:

          Store the test IOR in a CORBA::String_var and drop the explicit
          calls to CORBA::string_free().  Simplifies memory management and
          fixes a memory leak.

Sat May 21 18:38:12 UTC 2005   Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Profile.cpp:
          Fixed unused argument warning when messaging is disabled.

Sat May 21 18:34:12 UTC 2005   Johnny Willemsen  <jwillemsen@remedy.nl>

        * tests/Bug_2124_Regression/Bug_2124_Regression.mpc:
          Use taoserver as base project to fix unresolved link errors

Fri May 20 20:47:00 2005    Huang-Ming Huang <hh1@cse.wustl.edu>

        * tao/MProfile.cpp:
        * tao/Profile.h:
        * tao/Profile.cpp
        * tao/Stub.cpp:

          Removed the association of TAO_Profile to TAO_Stub. This allows an
          instance of TAO_Profile to be shared between different TAO_MProfile
          objects.

Fri May 20 16:51:35 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Log/LogRecordStore.cpp (TAO_LogRecoreStore::log):
        * orbsvcs/orbsvcs/Log/LogRecordStore_persist.cpp:

          Use "%d" instead of "%Q" log format directive for ACE_UINT64_TO_U32
          parameter.

        * orbsvcs/orbsvcs/Log/LogRecordStore.cpp (TAO_LogRecordStore::update):
        * orbsvcs/orbsvcs/Log/LogRecordStore_persist.cpp:

          Subtract size of existing record and Add size of new record to
          current size.

Fri May 20 16:44:54 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * tao/Makefile.am:

          Regenerated.

Fri May 20 17:10:00 2005    Huang-Ming Huang <hh1@cse.wustl.edu>

        * tao/IIOP_Endpoint:

          Fixed problem in TAO_IIOP_Endpoint::is_preferred_network()
          which should check for empty string rather than null pointer.

Fri May 20 17:00:00 2005    Huang-Ming Huang <hh1@cse.wustl.edu>

        * tao/PortableServer/ServantRetentionStrategyRetain.cpp:

          Fixed problem in ServantRetentionStrategyRetain::find_servant()
          where servant_upcall.user_id is assigned to a local variable which
          causes memory access violation when ServerReqeustInfo::object_id()
          is accessed inside interceptors.

Fri May 20 18:30:23 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_operation/operation.cpp:
        * TAO_IDL/be/be_visitor_tmplinst/tmplinst_cs.cpp:
        * TAO_IDL/be/be_visitor_tmplinst/tmplinst_ss.cpp:

          Added global '::' qualifier to several instances of code
          generation of a scoped name used as a template argument,
          to avoid ambiguity if there are two modules with the same
          name at different levels of nesting. This fix closes
          [BUGID:2125].

        * tests/IDL_Test/array.idl:
        * tests/IDL_Test/nested_scope.idl:
        * tests/IDL_Test/typedef.idl:

          Added various IDL snips provided by Simon McQueen
          <sm@prismtech.com> in various (now closed) Bugzilla entries.

Fri May 20 12:13:13 2005  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * orbsvcs/Naming_Service/NT_Naming_Service.h:
        * orbsvcs/Naming_Service/NT_Naming_Service.cpp:

          Fixed build problems with Visual C++ 6 on Windows

Fri May 20 15:22:42 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_sh.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_ss.cpp:

          Changed the copy constructor for generated skeleton-side
          valuetype classes private and unimplemented. Skeleton
          code is generated for valuetypes only if they support a
          concrete interface. However, these valuetypes also inherit
          from the stub-side valuetype class, which has a private
          unimplemented copy constructor. This fact makes it
          problematic to generate a valid copy constructor for the
          skeleton-side class, since C++ (and many compilers) require each
          base class copy constructor to be called in the
          initialization list.

Fri May 20 15:40:17 2005  Simon McQueen  <sm@prismtech.com>

        * tao/ORB_Core.i:

          Further to Fri May 20 11:27:02 2005  Simon McQueen:
          I forgot to commit the accessor implementation. Not
          my finest hour.

Fri May 20 14:19:08 2005  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/ast/ast_array.cpp:

          Arrays need to take on the "constructed ?" status of the
          type they are an array of as they do with the size type.

          This fixes bug #2126.

        * tests/Bug_2126_Regression/Bug_2126_Regression.mpc:
        * tests/Bug_2126_Regression/README:
        * tests/Bug_2126_Regression/test.cpp:
        * tests/Bug_2126_Regression/Test.idl:

          A regression test for the above fix.

Fri May 20 12:38:34 2005  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/be/be_visitor_arg_traits.cpp:

          Check for alias before bailing out of ::visit_string.

          This fixes bug #2124.

        * tests/Bug_2124_Regression/Bug_2124_Regression.mpc:
        * tests/Bug_2124_Regression/README:
        * tests/Bug_2124_Regression/test.cpp:
        * tests/Bug_2124_Regression/Test.idl:

          A regression test for the above fix.

Fri May 20 10:51:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/Current.pidl:
          Updated header to doxygen style and removed remark about patching
          generated files, this is not needed anymore

Fri May 20 11:27:02 2005  Simon McQueen  <sm@prismtech.com>

        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:

          Add orb init option -ORBIMREndpointsInIMR to allow control over
          whether the ImR enpoint is encoded into persistent policy object
          refs whhen the POA has been registered with the ImR. Default is true.

        * tao/PortableServer/Root_POA.cpp:

          Check whether the above property is set before encoding ImR location
          in preference to the local listener address into object references.

        * docs/Options.html:

          Document the above new option.

          This fixes bug #2123.

Fri May 20 08:55:03 2005  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/be/be_visitor_arg_traits.cpp:

          Generate a guard macro definition based upon the bound length
          and local name of bound strings to prevent duplicate definitions
          when a string of the same length is defined with the same name
          in two different scopes.

          This fixes bug #2122.

        * tests/Bug_2122_Regression/Bug_2122_Regression.mpc:
        * tests/Bug_2122_Regression/README:
        * tests/Bug_2122_Regression/test.cpp:
        * tests/Bug_2122_Regression/Test.idl:

          A regression test for the above.

Thu May 19 11:52:39 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * orbsvcs/examples/CosEC/TypedSimple/Country_i.cpp:

          Fixed emulated exception usage.

Thu May 19 15:03:45 UTC 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/ast/ast_module.cpp:
        * TAO_IDL/include/ast_module.h:

          Modified look_in_previous() by adding a boolean parameter to
          optionally ignore forward declared types when iterating
          over the declarations in previous openings of a module. This
          new parameter is false by default, so that ordinary lookups
          will behave as always. In AST_Module::referenced() however,
          the argument is passed as true explicitly, to avoid
          redefinition errors for forward delcared types that appear
          in an opening of a module previous to the one in which they
          are fully defined, and also referenced before the full
          definition appears. Thanks to Aaron <crackajaxx@gmail.com>
          for reporting the problem and sending example IDL files>.

        * tests/IDL_Test/full.idl:

          Cosmetic changes.

Thu May 19 09:42:22 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/tests/Trading/Trading.mpc:

          I accidentally removed the utils base project from 3 of the
          projects in this mpc file.

Thu May 19 08:55:36 2005  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * orbsvcs/tests/Security/BiDirectional/server.cpp:

          Added an include file for ACE_OS::fopen() to fix VC6 build
          errors.

        * orbsvcs/tests/Security/BiDirectional/test_i.cpp:

          Changed reference to a non-existent test_i.i file to fix
          problems with builds that do not have inline.

Thu May 19 00:55:20 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/Valuetype/ValueFactory_Map.cpp (instance):
        * tao/Valuetype/ValueFactory_Map.h (instance):

          Avoid multiple singleton instances by hiding singleton
          template instance behind this new static method.  See
          TSS_Resources.* changes below for additional details.

Thu May 19 00:29:35 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * tao/TSS_Resources.cpp (instance):
        * tao/TSS_Resources.h (instance):

          Hide TAO_TSS_Singleton behind new TAO_TSS_Resources::instance()
          method.  Addresses multiple TAO_TSS_Singleton instances on
          platforms/compilers that support symbol hiding, but for which we
          do not yet have an appropriate *_SINGLETON_DECLARATION() macro,
          such as g++ 4.0.  Fixes problems where an incorrect singleton
          instance is returned to the caller.

          Removed unnecessary zero pointer check before operator delete()
          call.  Calling operator delete() on a zero pointer is perfectly
          valid.

Wed May 18 16:23:01 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/be/be_visitor_valuetype/valuetype_ci.cpp:
        * TAO_IDL/be/be_visitor_valuetype/valuetype_cs.cpp:

          Moved generated virtual methods out of line.  Inlining them
          causes RTTI problems when the stubs are compiled with g++ 4.0's
          "-fvisibility-inlines-hidden" command line option, and the
          classes in the stubs are exported from a DSO/DLL.

        * tao/Messaging/MessagingC.cpp:
        * tao/Messaging/MessagingC.inl:
        * tao/ObjRefTemplate/Default_ORTC.cpp:
        * tao/ObjRefTemplate/Default_ORTC.inl:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.cpp:
        * tao/ObjRefTemplate/ObjectReferenceTemplateC.inl:
        * tao/Valuetype/AbstractBase.cpp:
        * tao/Valuetype/AbstractBase.inl:
        * tao/Valuetype/Sequence_T.cpp:
        * tao/Valuetype/Sequence_T.inl:

          Moved virtual methods out of line.  See above for the motivation
          behind these changes.

        * tao/ObjRefTemplate/ORT_Adapter_Factory_Impl.h:

          Moved preprocessor "#else" to the first column for portability
          reasons.

        * tao/PortableServer/ORT_Adapter_Factory.cpp:
        * tao/PortableServer/ORT_Adapter_Factory.h (ORT_Adapter_Factory):

          Added a virtual destructor.  Even though this class only defines
          an interface, an out-of-line virtual destructor is necessary to
          avoid dynamic_cast<> failures when using g++ 4.0's
          -fvisibility-inlines-hidden command line option.  Apparently the
          compiler generated destructor is inlined.

Wed May 18 14:56:37 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/Makefile.am:
        * tao/Makefile.am:

          Regenerated.

Wed May 18 15:03:15 2005  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * orbsvcs/tests/Security/BiDirectional/Secure_BiDir.mpc:

          Renamed the BiDirectional.mpc to avoid build problems on Windows
          platforms, caused by duplicate (case-insensitive) project names.
          It conflicts with tests/BiDirectional/BiDirectional.mpc

        * orbsvcs/tests/Security/BiDirectional/BiDirectional.mpc:

          Removed this file.

Wed May 18 14:38:15 2005  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * orbsvcs/Naming_Service/NT_Naming_Service.h:

        Fixing a build problem with Borland on Windows.

Wed May 18 13:05:48 2005  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * tao/Transport_Cache_Manager.cpp:

          Reverted changes that added printing of the stringified
          endpoint address, because it is not possible to pre-determine
          the lenght of the character representation for all protocols'
          endpoints. Thanks Johny and Ossama.

Wed May 18 17:13:53 2005  Simon McQueen  <sm@prismtech.com>

        * TAO_IDL/be/be_visitor_valuetype/field_ch.cpp:
        * TAO_IDL/be_include/be_visitor_valuetype/field_ch.h:

          Make valuetype anonymous private sequence member definitions
          public rather than private.

          This fixes Bugzilla #2119.

        * tests/Bug_2119_Regression/README:
        * tests/Bug_2119_Regression/test.idl:
        * tests/Bug_2119_Regression/test.mpc:

          Regression test for the above.

        * tao/Synch_Invocation.cpp:

          Add COMM_FAILURE to the list of SystemExceptions that can be
          retried in a fault tolerant configuration.

          This fixes Bugzilla #2118.

Wed May 18 10:29:33 2005  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * tao/Transport_Cache_Manager.cpp:
          Fixed Borland build problems and some stylistic improvements
          to logging.

Wed May 18 15:28:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PIForwardRequest.pidl:
          Fixed fuzz error

Wed May 18 13:11:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/ORB.h:
          Doxygen improvement

Wed May 18 12:30:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/corba.h:
          Removed duplicate includes

Wed May 18 12:00:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/PortableInterceptor.pidl:
          Moved several interfaces to their own file

        * tao/ClientRequestInterceptor.pidl:
        * tao/Interceptor.pidl:
        * tao/PIForwardRequest.pidl:
        * tao/ServerRequestInterceptor.pidl:
          New files, contains parts of the original PortableInterceptor.pidl

        * tao/ClientRequestInterceptorA.cpp:
        * tao/ClientRequestInterceptorC.cpp:
        * tao/ClientRequestInterceptorC.h:
        * tao/ClientRequestInterceptorS.h:
        * tao/InterceptorA.cpp:
        * tao/InterceptorC.cpp:
        * tao/InterceptorC.h:
        * tao/InterceptorS.h:
        * tao/PIForwardRequestA.cpp:
        * tao/PIForwardRequestC.cpp:
        * tao/PIForwardRequestC.h:
        * tao/PIForwardRequestS.h:
        * tao/PortableInterceptorA.cpp:
        * tao/PortableInterceptorC.cpp:
        * tao/PortableInterceptorC.h:
        * tao/PortableInterceptorS.h:
        * tao/ServerRequestInterceptorA.cpp:
        * tao/ServerRequestInterceptorC.cpp:
        * tao/ServerRequestInterceptorC.h:
        * tao/ServerRequestInterceptorS.h:
          Mew generated files

        * tao/tao.mpc:
          Added new files

        * tao/diffs/PortableInterceptor.diff:
          Removed, not needed anymore

        * tao/diffs/ServerRequestInterceptor.diff:
          New diff file

Wed May 18 06:56:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Security/BiDirectional/BiDirectional.mpc:
          Give this project an unique name so that MPC doesn't complain about
          duplicate names

        * orbsvcs/tests/Security/BiDirectional/test.idl:
          Converted documentation to doxygen style

Tue May 17 15:55:35 2005  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

        * orbsvcs/Naming_Service/NT_Naming_Service.{h,cpp}:

          For Windows platforms, changed how the handle_control() stops
          the ORB. Instead of having to explicitly stop the reactor loop
          it only needs to call ORB::shutdown(). This also avoids a
          potential race condition that may occur as the ORB gets
          destroy()-ed between the two calls. Added an AutoFinalizer
          class, whose destructor notifies the Windows SCM by calling
          ACE_NT_Service::report_status() when an instance goes out of
          scope. This is helpful in the presence of unexpected
          exceptions.  This patch was forward-ported from 1.3a_p9, based
          upon RT4982.

        * orbsvcs/orbsvcs/Naming/Storable_Naming_Context.cpp:

          Added ACE_TEXT_ALWAYS_CHAR ()

Tue May 17 15:14:55 2005  Iliyan Jeliazkov  <jeliazkov_i@ociweb.com>

          This change allows bi-directional policy to work with SSLIOP
          endpoints.  When a server accepts a client-initiated
          connection or a listen point list, there is no data available
          about the IIOP endpoints, underlying the SSLIOP endpoints.
          There is also no data for most of the attributes of the secure
          connection.  Therefore the "server" must synthesize those,
          however this can not be done correctly. The problem becomes
          evident when bi-directional policy is in effect for both
          peers: a "server" during callback, needs to use the same
          connection the "client" has initiated, but the secure endpoint
          obtained from an IOR can not yield the same hash value as the
          synthesized endpoint (from an LPL), used to cache the
          connection.  Also, such endpoints can not be equivalent, in
          terms of the is_equivalent () method. The IOR from the client
          contains the real (non-synthetic) port number for the IIOP
          endpoint underlying the SSL endpoint.  This causes the server
          to decide that it deals with a different endpoint and try to
          open a new connection. When the ORBs are using bi-directional
          policies and are behind a firewall, this will fail

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Connection_Handler.cpp:

          Creates an instance of the new SSLIOP_Synthetic_Endpoint,
          which it then uses to re-cache the transport.
          TAO_SSLIOP_Connection_Handler::add_transport_to_cache()
          ultimately uses the is_equivalent () method to compare
          endpoints. That method must not compare the underlying IIOP
          port numbers, because in some cases SSLIOP endpoints are
          instantiated with limited amount of information available. For
          example, when accepting a connections in server role, the
          underlying IIOP endpoint's port is unknown an is merely
          assigned to be the same as the secure port, effectively
          precludes the ability of the server to find a connection
          cached with these parameters later.

        * orbsvcs/orbsvcs/SSLIOP/SSLIOP_Endpoint.{h,cpp):

          Introduced a new SSLIOP_Synthetic_Endpoint, which relaxes the
          equivalence comparison with another SSLIOP_Endpoint to limit
          it to only hostname, SSL port and QoP.
          Changed the hash() implementation in SSLIOP_Endpoint to
          eliminate any influence the embedded IIOP endpoint has on the
          hash value. This allows the SSLIOP_Synthetic_Endpoint to hash
          just like an SSLIOP_Endpoint and makes possible that synthetic
          endpoints to be used to find previously cached transports.

        * orbsvcs/tests/Security/BiDirectional/BiDirectional.mpc:
        * orbsvcs/tests/Security/BiDirectional/README:
        * orbsvcs/tests/Security/BiDirectional/client.conf:
        * orbsvcs/tests/Security/BiDirectional/client.cpp:
        * orbsvcs/tests/Security/BiDirectional/run_test.pl:
        * orbsvcs/tests/Security/BiDirectional/server.conf:
        * orbsvcs/tests/Security/BiDirectional/server.cpp:
        * orbsvcs/tests/Security/BiDirectional/test.idl:
        * orbsvcs/tests/Security/BiDirectional/test_i.h:
        * orbsvcs/tests/Security/BiDirectional/test_i.i:
        * orbsvcs/tests/Security/BiDirectional/test_i.cpp:

          A test that demonstrates the problem. Uses TAO-specific
          interfaces to the ORB core to obtain the number of currently
          open connections before and after an invocation. This is done
          both in the servant and in the client.

        * orbsvcs/tests/Security/BiDirectional/ssl/ca.pem:
        * orbsvcs/tests/Security/BiDirectional/ssl/client-cert.pem:
        * orbsvcs/tests/Security/BiDirectional/ssl/client-key.pem:
        * orbsvcs/tests/Security/BiDirectional/ssl/make-client-keys:
        * orbsvcs/tests/Security/BiDirectional/ssl/server-cert.pem:
        * orbsvcs/tests/Security/BiDirectional/ssl/server-key.pem:

          Client and server certificates and keys. Also, a script to
          regenerate them all.


        * tao/Transport_Cache_Manager.cpp:

          Added more informative logging.

Tue May 17 09:18:15 2005  Chad Elliott  <elliott_c@ociweb.com>

        * utils/NamingViewer/NamingViewer.mpc:

          Removed unnecessary Resource_Files section.

        * utils/utils.mwc:

          Added the NamingViewer directory.

Tue May 17 05:54:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/RTScheduling/Fixed_Priority_Scheduler/FP_Scheduler.cpp:
          Use ACE_SIZE_T_FORMAT_SPECIFIER to print out an size_t variable
          with ACE_OS::sprintf

Tue May 17 05:50:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/tests/Event/Basic/Atomic_Reconnect.h:
        * orbsvcs/tests/Event/Basic/Control.h:
          Removed not needed include of Channel_Clients.h. This file has
          been removed and the include was not needed.

Mon May 16 19:22:39 2005  J.T. Conklin  <jtc@acorntoolworks.com>

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/FTEC_Group_Manager.cpp:

          #include "orbsvcs/PortableGroup/PG_Operators.h" and remove the
          "bool operator==(const FTRT::Location&, const FTRT::Location&)"
          implementation.  FTRT::Location is typedef for CosNaming::Name,
          and the operator== implementation for that in the PortableGroup
          library conflict on MacOSX.

Mon May 16 12:15:11 2005  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * TAO_IDL/include/ast_component.h
          (AST_Component::port_descriptor):

          Added an inlined constructor to this structure to make sure all
          fields are initialized prior to use.  Fixes a g++ 4.0 "variable
          is used initialized" warning.

Mon May 16 14:08:35 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/fe/idl.ll (idl_store_pragma):
        * TAO_IDL/fe/lex.yy.cpp (idl_store_pragma):

          Added code to eat extra whitespace in a #pragma directive,
          need when using preprocessors that don't do it automatically.
          Thanks to Johnny Willemsen <jwillemsen@remedy.nl> for
          discovering this quirk about the preprocessor used with the
          Intel C++ compiler. This fixes bugzilla bug [2110]

Mon May 16 18:15:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/CDR.h:
        * tao/Codeset_Manager.h:
        * tao/Codeset_Translator_Factory_T.h:
        * tao/Reply_Dispatcher.h:
        * tao/Sequence.h:
        * tao/Transport_Acceptor.h:
        * tao/SmartProxies/Smart_Proxies.h:
          Doxygen improvements

Mon May 16 10:09:45 2005  Jeff Parsons <j.parsons@vanderbilt.edu>

        * TAO_IDL/be/be_visitor_arg_traits.cpp (visit_operation):

          Added check for imported node, skipping code generation if the
          node is imported. For all other node types in this visitor, arg
          traits specializations must be generated, since an IDL type
          declared in an included file could be used as a parameter in
          an operation in the main file. But when visiting an operation
          itself, the only thing that triggers an arg traits specialization
          is an anonymous bounded string parameter (deprecated but still
          legal). Since this type of declaration is not visible outside
          the operation's scope, it should not trigger code generation
          if the node is imported. Thanks to Johnny Willemsen
          <jwillemsen@remedy.nl> for pointing out that this code generation
          for an imported operation causes a C++ compilation failure, due
          to the lack of a proper #include of tao/BD_String_Arg_Traits.h.

Mon May 16 15:06:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tao/DynamicInterface/Context.h:
        * tao/DynamicInterface/DII_Arguments.h:
        * tao/DynamicInterface/DII_Invocation.h:
        * tao/DynamicInterface/DII_Invocation_Adapter.h:
        * tao/DynamicInterface/DII_Reply_Dispatcher.h:
        * tao/DynamicInterface/Dynamic_Adapter_Impl.h:
        * tao/DynamicInterface/Dynamic_Implementation.h:
        * tao/DynamicInterface/ExceptionList.h:
        * tao/DynamicInterface/Server_Request.h:
          Doxygen improvements

Mon May 16 14:51:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/Channel_Clients.{h,cpp}:
          Removed, not needed anymore

        * orbsvcs/orbsvcs/Channel_Clients_T.h:
        * orbsvcs/orbsvcs/Scheduler_Utilities.h:
          Doxygen fixes

        * orbsvcs/orbsvcs/Makefile.am:
          Removed Channel_Clients files

        * orbsvcs/orbsvcs/Scheduler_Utilities.cpp:
          Removed not needed include of OS.h

        * orbsvcs/orbsvcs/CosEvent/CEC_ProxyPushSupplier.h:
        * orbsvcs/orbsvcs/PortableGroup/PG_Property_Set.h:
          Doxygen improvement

        * orbsvcs/orbsvcs/Event/EC_Gateway_IIOP.h:
        * orbsvcs/tests/Event/lib/Counting_Supplier.h:
          Include Channel_Clients_T.h instead of Channel_Clients.h

Mon May 16 14:38:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * orbsvcs/orbsvcs/RTEvent.mpc:
          Added Channel_Clients_T.cpp, it belongs to this project

        * orbsvcs/orbsvcs/AV.mpc:
          Removed Channel_Clients_T files, they don't belong to the AV service

Mon May 16 14:29:12 UTC 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * examples/RTScheduling/Job_i.cpp:
        * examples/RTScheduling/Thread_Task.cpp:
        * examples/RTScheduling/MIF_Scheduler/MIF_Task.cpp:
          Use ACE_SIZE_T_FORMAT_SPECIFIER to print out an size_t variable
          with ACE_OS::sprintf

        * orbsvcs/orbsvcs/CosNaming.mpc:
        * orbsvcs/orbsvcs/CosNaming_Serv.mpc:
        * orbsvcs/orbsvcs/CosNaming_Skel.mpc:
          Moved the Serv and Skel projects to their own file. This makes it
          possible to create a workspace with just one of the projects

Mon May 16 09:18:26 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/examples/CosEC/RtEC_Based/lib/CosEC_RtEC_Based_lib.mpc:
        * orbsvcs/performance-tests/RTEvent/lib/RTEC_Perf.mpc:
        * orbsvcs/tests/Event/Mcast/Common/ECMcastTests_lib.mpc:
        * orbsvcs/tests/Event/lib/Event_lib.mpc:
        * orbsvcs/tests/Trading/Trading.mpc:

          Removed redundant base projects.

        * orbsvcs/examples/ImR/Combined_Service/test.cpp:

          Modified the assertTrue macro so that it would build on LynxOS.

        * orbsvcs/tests/EC_MT_Mcast/run_test.pl:

          Generate a unique multicast address and port to avoid collisions
          on the same network.

        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/run_test.pl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/windows.conf:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Application_Controlled/windows.conf.xml:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/run_test.pl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/windows.conf:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Infrastructure_Controlled/windows.conf.xml:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/run_test.pl:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/windows.conf:
        * orbsvcs/tests/LoadBalancing/GenericFactory/Manage_Object_Group/windows.conf.xml:

          On Windows, we use a configurator file to switch from the default
          reactor (TP) to Select MT.  The LoadManager, on Windows only,
          requires a reactor that supports registering signal handlers and
          the TP Reactor no longer supports that sort of thing.

        * orbsvcs/tests/Notify/MT_Dispatching/run_test.pl:

          Committing a change from Dale Wilson <wilson_d@ociweb.com>.

          Change shut down timeout from hard coded 1 to symbolic 10
          to eliminate intermittent timeouts on various platforms.

        * orbsvcs/tests/Notify/Structured_Multi_Filter/run_test.pl:

          Committing a change from Trevor Fields <fields_t@ociweb.com>.

          Added delay between iterations of the test to allow
          complete shutdown of Naming service.  The problem showed
          up on dual processor machines.

        * orbsvcs/tests/Notify/XML_Persistence/main.cpp:

          Added an include of the CosNotification library initializer header
          to work around static construction issues on SunOS and MacOS X.

        * orbsvcs/tests/Redundant_Naming/run_test.pl:
        * orbsvcs/tests/Simple_Naming/run_test.pl:

          Allow the user to determine the location of the persistence file
          by the TMPDIR, TEMP and TMP environment variables.  This will work
          around NFS locking issues.

        * orbsvcs/tests/Simple_Naming/process-m-output.pl:

          Committing a change from Yan Dai <dai_y@ociweb.com>.

          Modified the test scripts to accept the empty line, the
          "CommandLine" line and the "WARNING" lines from
          orbsvcs/orbsvcs/Shutdown_Utilities.cpp.

Mon May 16 08:25:53 2005  Chad Elliott  <elliott_c@ociweb.com>

        * orbsvcs/Dump_Schedule/Dump_Schedule.cpp:

          Set the default name to "ScheduleService".

        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:

          Allocate an RtecScheduler::Dependency_Set into the out parameter
          if it doesn't contain one yet.

        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:

          Switched the types for the generated code to match up with actual
          types for the POD_Dependency_Info and POD_Config_Info structures.

Mon May 16 08:21:34 2005  Chad Elliott  <elliott_c@ociweb.com>

        * tao/ORB_Core.cpp:

          Warn the user if the parameter to -ORBCollocation is not
          recognized.

        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/ConnectionHandler_T.h:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/Fault_Detector_T.cpp:
        * orbsvcs/orbsvcs/FtRtEvent/EventChannel/SCTP_Fault_Detector.h:
        * tao/Strategies/SCIOP_Connector.cpp:
        * tao/Strategies/SCIOP_Endpoint.h:
        * tao/Strategies/SCIOP_Endpoint.cpp:

          Corrected many build issues dealing with SCTP.

Sat May 14 06:09:23 2005  Johnny Willemsen  <jwillemsen@remedy.nl>

        * TAO version 1.4.5 released.

Local Variables:
add-log-time-format: current-time-string
End:
