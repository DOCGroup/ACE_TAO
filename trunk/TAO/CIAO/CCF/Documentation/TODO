Legend:

@@ signifies a to-be-done item

%% signifies a done item (should be cleaned-up periodically)

@% signifies a partially-done item

++ signifies difficulty of an item (the more pluses the more difficult)

------------------------------------------------------------------------

@@ Make CCF buildable with MPC.

@@ Write proper build instructions.

@@+ Add Elements to IDL3 and CIDL for consistency.

@@+ Should CIDL syntax tree files have 'using namespace IDL2::SyntaxTree;' 
    directives?

@@++ Add traversal of inheritance list as done for scope.

@@+ It's a good idea to include ostream instead of iostream where I only
    use ostreams.

@@+++ Currently character stream is scanned completely before parsing. The
      better approach would be scanning on demand (1).

@@+++ IDL2::Parsing::parse () should be eliminated (or terminated if you 
      like ;-). This item depends on (1).

@@++ 'using namespace' cleanup.

@@ TypeId::declaration returns ScopedName which is not very consistent 
   since scoped name in general case denotes a bunch of declarations. 
   Same for TypePrefix.
   
@@ Perhaps add reference to declaration table to every SyntaxTree::Node 
   (and not just scopes).

@@ Replace all i++ with ++i.

@@ It seems that SyntaxTree::Node origin in terms of file:line should be 
   preserved for subsequent diagnostic implemented as separate paths 
   (see repository id generator for example).

@@ Rename TypeId/TypePrefix to TypeIdDecl/TypePrefixDecl
 
@@++++ Diagnostic evolution

@%++ XML indentation buffer

@@+++ Anonymous types and typedef's model (2)

@@+++ Introduction (injection) of names into scope

@@++++ C Preprocessor integration (wave)

%% IDL feature: type id/prefix

@@ IDL feature: exception declaration

@@ IDL feature: literals and constant expression (3)

@@ IDL feature: constant declaration; depends on 3

@@ IDL feature: built-in types

@@ IDL feature: sequences; depends on 2,3

@@ IDL feature: struct

@% IDL feature: oprations (completion)

@% IDL feature: attribute (completion)

@% IDL feature: factories/finders (completion)

@@ IDL feature: enum

@@ IDL feature: valuetype

@% IDL feature: event (completion)

@@ IDL feature: array; depends on 2,3

@@ IDL feature: union

@@ IDL feature: fixed; depends on 2,3
