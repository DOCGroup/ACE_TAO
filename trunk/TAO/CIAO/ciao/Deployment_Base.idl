//$Id$

#ifndef DEPLOYMENT_BASE_IDL
#define DEPLOYMENT_BASE_IDL

#include <orb.idl>
#include "Deployment_Core.idl"

module Deployment {

  enum SatisfierPropertyKind {
    Quantity,
    Capacity,
    Minimum,
    Maximum,
    _Attribute,
    Selection
  };

  struct SatisfierProperty {
    string name;
    SatisfierPropertyKind kind;
    boolean dynamic;
    any value;
  };

  typedef sequence < SatisfierProperty > SatisfierProperties;

  struct SharedResource {
    string name;
    ::CORBA::StringSeq resourceType;
    ::CORBA::ULongSeq nodeRef;
    SatisfierProperties property;
  };

  typedef sequence < SharedResource > SharedResources;

  struct Resource {
    string name;
    ::CORBA::StringSeq resourceType;
    SatisfierProperties property;
  };

  typedef sequence < Resource > Resources;

  struct Node {
    string name;
    string label;
    ::CORBA::ULongSeq sharedResourceRef;
    ::CORBA::ULongSeq connectionRef;
    Resources resource;
  };

  typedef sequence < Node > Nodes;

  struct Interconnect {
    string name;
    string label;
    ::CORBA::ULongSeq connectionRef;
    ::CORBA::ULongSeq connectRef;
    Resources resource;
  };

  typedef sequence < Interconnect > Interconnects;

  struct Bridge {
    string name;
    string label;
    ::CORBA::ULongSeq connectRef;
    Resources resource;
  };

  typedef sequence < Bridge > Bridges;

  struct Domain {
    string UUID;
    string label;
    SharedResources sharedResource;
    Nodes node;
    Interconnects interconnect;
    Bridges bridge;
    Properties infoProperty;
  };

};

#endif /* DEPLOYMENT_BASE_IDL */
