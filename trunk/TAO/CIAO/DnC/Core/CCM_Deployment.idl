// $Id$

/**
 * @@ Compile this file with:
 *
 *     tao_idl -I ../.. \
 *          -Wb,export_macro=CIAO_Export \
 *          -Wb,export_include=CIAO_export.h \
 *          -Wb,pre_include="ace/pre.h" \
 *          -Wb,post_include="ace/post.h" \
 *          CCM_Deployment.idl
 */

//#define CIAO_HAS_IMPORT_KEYWORD

#if !defined (CCM_DEPLOYMENT_IDL)
#define CCM_DEPLOYMENT_IDL

#include "CCM_Component.idl"

// *************** Packaging and Deployment ***************

module Components
{
  // Typeprefix Components "omg.org";
  // OMG threw these things away, didn't it.

  //@@ I have decided to keep this ::Component::Deployment
  //module to keep it apart from ::Deployment. --Tao
  module Deployment
  {
    typedef string UUID;
    typedef string Location;

    enum AssemblyState
    {
      INACTIVE,
      INSERVICE
    };

    exception UnknownImplId {};
    exception InvalidLocation {};
    exception InstallationFailure
    {
      FailureReason reason;
    };

    exception InvalidAssembly {};
    interface Container;        // Forward decl.
    typedef sequence<Container> Containers;

    /**
     * The NodeApplication interface wraps around the ComponentServer.
     * If necessary the NodeApplication could handle the case when
     * each componentServer needs to run on seperate thread.
     * However, this is just a rough idea and will be implemented upon
     * special user request.                     --Tao
     */
    interface ComponentServer
    {
      readonly attribute ConfigValues configuration;
      /**
       * We don't need this get_server_activator call anymore
       * The NodeApplication interface will has the information
       * about both the NodeApplicationManager and the ComponentServer.
       *                   --Tao
       */
      //ServerActivator get_server_activator ();
      Container create_container (in ConfigValues config)
        raises (CreateFailure,
                InvalidConfiguration);

      void remove_container (in Container cref)
        raises (RemoveFailure);

      Containers get_containers ();

      void remove ()
        raises (RemoveFailure);
    };

    //@@ Is this exception still necessary?
    //   I would like to keep it since it's more accurate on
    //   describing the situation. --Tao
    exception ImplEntryPointNotFound {};

    interface Container
    {
      readonly attribute ConfigValues configuration;

      ComponentServer get_component_server ();

      CCMHome install_home (in UUID id,
                            in string entrypt,
                            in ConfigValues config)
        raises (UnknownImplId,
                ImplEntryPointNotFound,
                InstallationFailure,
                InvalidConfiguration);

      void remove_home (in CCMHome href)
        raises (RemoveFailure);

      CCMHomes get_homes ();
      void remove ()
        raises (RemoveFailure);

    };

  };
};
#endif /* CCM_DEPLOYMENT_IDL */
