Fri Sep 17 16:46:32 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/CIDLC.sln:
        
          Added the 5 projects from CCF.sln so the CIDL compiler can be
          built from scratch in a single MSVC 7.1 Solution.

Fri Sep 17 08:27:57 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/ciao/Context_Impl_Base.cpp:
	* ciao/Context_Impl_Base.cpp:

	  Use false instead of FALSE. This should fix compile errors in
	  debian full reactor builds.

Fri Sep 17 13:22:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * performance-tests/Benchmark/RoundTripServer/RoundTripServer.mpc:
          Use ciao_server as base

Thu Sep 16 10:15:04 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * DAnCE/ciao/Servant_Impl_Base.h:

          Added inheritance to Servant_Impl_Base of
          POA_Components::CCMObject to bring it in sync with the
          version in regular CIAO/ciao.

        * DAnCE/ciao/Servant_Impl_T.h:

          Made inheritance of Servant_Impl_Base virtual, to bring it
          in sync with the version in regular CIAO/ciao.

Thu Sep 16 08:44:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * DAnCE/ciao/Servant_Activator.cpp:
        * CIAO/ciao/Servant_Activator.cpp:
          Fixed compile errors in Borland build

Tue Sep 14 20:43:31 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * ciao/Context_Impl_Base.h:
        * DAnCE/ciao/Context_Impl_Base.h:

          Moved a sufficiently substantial included file above the
          #pragma once directive, so that some compilers will not
          complain that it's obsolete.

Tue Sep 14 15:02:24 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * DAnCE/ciao/Context_Impl_Base.cpp:
        * DAnCE/ciao/Context_Impl_Base.h:
        * DAnCE/ciao/Context_Impl_T.cpp:
        * DAnCE/ciao/Context_Impl_T.h:
        * DAnCE/ciao/Home_Servant_Impl_Base.cpp:
        * DAnCE/ciao/Home_Servant_Impl_Base.h:
        * DAnCE/ciao/Home_Servant_Impl_T.cpp:
        * DAnCE/ciao/Home_Servant_Impl_T.h:
        * ciao/Context_Impl_Base.cpp:
        * ciao/Context_Impl_Base.h:
        * ciao/Context_Impl_T.cpp:
        * ciao/Context_Impl_T.h:
        * ciao/Home_Servant_Impl_Base.cpp:
        * ciao/Home_Servant_Impl_Base.h:
        * ciao/Home_Servant_Impl_T.cpp:
        * ciao/Home_Servant_Impl_T.h:

          New files, duplicated in CIAO/ciao and
          CIAO/DAnCE/ciao, containing base classes
          for the CIDL-compiler-generated context
          and home servant classes. A template class
          sits in the hierarchy between the generated
          class and its skeleton base class (in the
          case of the home servant) or its executor
          base (in the case of the context). The
          template class also inherits from a
          non-template class which is used to hold
          members and operations not using any template
          parameters.

        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:
        * DAnCE/ciao/CCM_Core.mpc:
        * DAnCE/ciao/Servant_Impl_Base.cpp:
        * DAnCE/ciao/Servant_Impl_Base.h:
        * DAnCE/ciao/Servant_Impl_T.cpp:
        * DAnCE/ciao/Servant_Impl_T.h:
        * ciao/CCM_Core.mpc:
        * ciao/Servant_Impl_Base.cpp:
        * ciao/Servant_Impl_Base.h:
        * ciao/Servant_Impl_T.cpp:
        * ciao/Servant_Impl_T.h:

	  Modified existing files to correspond with the
          new files described above and:

	  - Added implementations for the component servant
            operations provide_facet(), get_named_facets(),
	    get_consumer() and get_named_consumers().

	  - Added inheritance of CCMObject to the non-template
	    base class, to enable operations in the template
 	    base class, which used no template parameters but
 	    which were there only to be in the inheritance
	    hierarchy from skeleton to generated servant, to
	    be moved to the non-template base class, and
	    thus not be reinstantiated with every new type.

	  - Moved operations from generated code to one of
	    the two base classes.

Mon Sep 13 13:18:33 2004  Gan Deng  <gan.deng@vanderbilt.edu>

        * RepositoryManager/Update_Plan.h

          Fixed a waring in Windows build by changing "class" to "struct"
          in forward declaration.

        * examples/BasicSP/BasicSP.mpc
        * examples/BasicSP/BMClosedED/BMClosedED.mpc
        * examples/BasicSP/BMDevice/BMDevice.mpc
        * examples/BasicSP/BMDisplay/BMDisplay.mpc
        * examples/BasicSP/EC/EC.mpc

          Changed the output stub, servant, and executor library names
          for all the components in BasicSP example. The reason is
          becasue all the DnC descriptors are tightly coupled with the
          output library names. I might come back switch this change
          back since this will conflict with the BasicSP example in
          CIAO_ROOT/examples.

Mon Sep 13 13:07:33 2004  Gan Deng  <gan.deng@vanderbilt.edu>

        * DAnCE/NodeApplicationManager/NodeApplicationManager_Impl.cpp

          Fixed a bug inside create_connections () method.

Mon Sep 13 15:16:33 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* DAnCE/tests/NodeApplicationTest/run_test.pl:
	* DAnCE/tests/NodeApplicationTest/run_test_ex.pl:
	* DAnCE/tests/NodeApplicationTest/run_test_simple.pl:

	  Fixed the paths in the scripts.

Mon Sep 13 07:11:06 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/ciao/Port_Activator.h:
	* DAnCE/ciao/Servant_Activator.cpp:
	* ciao/Port_Activator.h:
	* ciao/Servant_Activator.cpp:

	  Fixes for MSVC++ compilation errors. Inspite of being careful I
	  introduced a couple of VC++ anathemas.

Mon Sep 13 06:16:31 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/ciao/Container_Base.cpp:
	* ciao/Container_Base.cpp:

	  Fixed wrong ACE_CHECK usage. This should fix compilation errors
	  in Full_Reactors build.

Mon Sep 13 04:20:44 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/ciao/CCM_Core.mpc:

	  Removed iorinterceptor and objreftemplate from CIAO_DnC_Server
	  project. No reason to believe that they need thes. This should
	  hopefully remove the warnings in our daily builds.

	* examples/Hello/Sender/Sender_exec.cpp:

	  Added a simple debug statement.

	* performance-tests/Benchmark/Benchmark.mpc:

	  Tried fixing the link errors on the scoreboard.

Mon Sep 13 03:50:08 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/ciao/CCM_Core.mpc:
	* DAnCE/ciao/Container_Base.cpp:
	* DAnCE/ciao/Container_Base.h:
	* DAnCE/ciao/Container_Base.inl:
	* DAnCE/ciao/Port_Activator.cpp:
	* DAnCE/ciao/Port_Activator.h:
	* DAnCE/ciao/Port_Activator_T.cpp:
	* DAnCE/ciao/Port_Activator_T.h:
	* DAnCE/ciao/Servant_Activator.cpp:
	* DAnCE/ciao/Servant_Activator.h:

	  Replicated changes to DAnCE. DAnCE testing hasn't been completed
	  yet.

Sun Sep 12 22:10:38 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* CIDLC/ServantHeaderGenerator.cpp:
	* CIDLC/ServantSourceGenerator.cpp:

	  Changes to the CIDL which uses the servant and port activators
	  checked in now.

Mon Sep 13 03:00:52 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	To overcome the long standing problem in DAnCE, we are now making
        the facet and consumer servants to be on demand activatable. This
        would make sure that application level ports are not activated
        until used. This should help address the problems between DAnCE
        and existing way of doing things. These changes should be useful
        even after old CIAO is removed since we want to give existing
        component applications the same activation semantics with DAnCE.

	This checkin addresses old CIAO. DAnCE and CIDLC changes will come
        in soon.

	* ciao/Servant_Activator.cpp:
	* ciao/Servant_Activator.h:

	  New files for facet and consumer activations. We now have a
	  seperate servant activator for facet and consumer ports. The
	  servant activator acts like a factory activating the right port
	  activators which can create the right servant for every port.

	* ciao/Port_Activator.cpp:
	* ciao/Port_Activator.h:
	* ciao/Port_Activator_T.cpp:
	* ciao/Port_Activator_T.h:

	  Concrete port activators for every port.

	* ciao/CCM_Core.mpc:

	  Added the new files for building.

	* ciao/Container_Base.cpp:
	* ciao/Container_Base.h:
	* ciao/Container_Base.inl:

	  Changes to the Container to use the above servant activator. The
	  continer creates the servant activator and sets that in the POA
	  meant for facet and consumers.

Fri Sep 10 23:08:15 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/ciao/Container_Base.cpp:
	* DAnCE/ciao/Container_Base.h:
	* ciao/Container_Base.cpp:
	* ciao/Container_Base.h:

	  Reverted this change "Sat Sep 11 03:35:24 2004  Balachandran
	  Natarajan  <bala@dre.vanderbilt.edu>"

Fri Sep 10 22:53:58 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/ciao/CCM_Core.mpc:
	* ciao/CCM_Core.mpc:

	  Linked with TAO_Utils library

Sat Sep 11 03:35:24 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/ciao/Container_Base.cpp:
	* DAnCE/ciao/Container_Base.h:
	* ciao/Container_Base.cpp:
	* ciao/Container_Base.h:

	  Removed install_servant () since it is not used.

Fri Sep 10 22:28:45 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* CIDLC/ServantSourceGenerator.cpp:

	  Changes to accomodate the accessor renaming.

Sat Sep 11 03:22:06 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* ciao/Container_Base.cpp:
	* ciao/Container_Base.h:
	* ciao/Container_Base.inl:
	* DAnCE/ciao/Container_Base.cpp:
	* DAnCE/ciao/Container_Base.h:
	* DAnCE/ciao/Container_Base.inl:

	  Made a few changes. They are

	  . Added a second POA into the container. One of the POA's will
	    host the component and the other POA will host the facet and
	    consumer servants. Obviously the two POA's have different sets
	    of policies. The new POA is primarily targeted to activate
	    facet and consumer servants on demand.

	  . Renamed the accessor to the ORB and POA. Made them const
            methods

	  . Improved documentation and a number of costeic changes.


 	* DAnCE/RepositoryManager/Repository_Manager.cpp:
	* DAnCE/RepositoryManager/Update_Plan.cpp:
	* DAnCE/RepositoryManager/Update_Plan.h:

	  BUnch of cosmetic changes to be conformant with ACE+TAI coding
	  guidelines.

	* DAnCE/ciao/Servant_Impl_Base.cpp:
	* DAnCE/ciao/Servant_Impl_T.cpp:
	* ciao/Servant_Impl_Base.cpp:
	* ciao/Servant_Impl_T.cpp:

	  Fixed simple compilation errors and warnings.

Thu Sep  9 17:07:59 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/IDL3/Events/Abstract/Abstract.idl:

          Uncommented IDL testing multiple inheritance of eventtypes.

Thu Sep  9 10:30:22 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * DAnCE/ciao/Container_Base.cpp:
        * DAnCE/ciao/Container_Base.h:
        * ciao/Container_Base.cpp:

          Added generate_reference() method to DAnCE version of
          Container_Base, and fixed ACE_CHECK macro mistake in
          both versions.

Wed Sep  8 11:52:45 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * DAnCE/ciao/Servant_Impl_Base.h:
        * DAnCE/ciao/Servant_Impl_Base.cpp:

          Updated files with changes made to the corresponding files
          in regular CIAO/ciao.

Tue Sep  7 22:14:43 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* CCF/CCF/IDL2/SemanticGraph/Elements.hpp:
	* CCF/CCF/IDL2/Traversal/Elements.hpp:
	* CIDLC/ExecutorMappingGenerator.cpp:

	  Fixed unused argument warnings.

Tue Sep  7 15:48:19 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * DAnCE/ciao/Servant_Impl_Base.cpp:
        * ciao/Servant_Impl_Base.cpp:

          Cosmetic changes.

        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:
        * DAnCE/ciao/Servant_Impl_T.cpp:
        * DAnCE/ciao/Servant_Impl_T.h:
        * ciao/Servant_Impl_T.cpp:
        * ciao/Servant_Impl_T.h:

          Moved several methods from the generated servant class to the
          template Servant_Impl base class.

Tue Sep  7 10:44:10 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/CIDLC.mpc:
        * CIDLC/CIDLC.vcproj:
        * CIDLC/RepositoryIdGenerator.cpp:
        * CIDLC/RepositoryIdGenerator.hpp:
        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:
        * CIDLC/cidlc.cpp:

          - Updated the RepositoryIdGenerator and re-added the source
            and header files to the build. This generator creates
            repository ids for interfaces and eventtypes, and stores
            them internally in a context variable for later access
            in code generation. It also handles modifications to the
            repository ids stemming from 'typeprefix' or 'typeid'
            declarations.

          - Added generation of 'provide_<facet name>_i' and
            'get_consumer_<event consumer name>_i' methods in the servant,
            which create dummy object references and store them in the
            appropriate port table in the servant base class.

          - Re-implemented the generated 'provide_<facet name>' and
            'get_consumer_<event consumer name>' methods. They now
            use the container's POA to activate the dummy objects
            created by the corresponding _i methods described above.
            The activation takes place upon the first outside access
            of these objects. If an object has already been activated,
            it will simply be found in its port table and returned.
            Thanks to Bala for the prototype code for this feature.

        * ciao/Container_Base.cpp:
        * ciao/Container_Base.h:

          Added 'generate_reference' utility method called by the
          '_i' methods described above.

        * ciao/Servant_Impl_Base.cpp:
        * ciao/Servant_Impl_Base.h:

          Added 'lookup_facet' and 'lookup_consumer' methods used in
          generated servant code to determine if a desired object has
          been activated already (and added to a port table) or not.

Mon Aug 30 12:52:28 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* performance-tests/Benchmark/Benchmark.mpc:

	  Fixes for link errors in the daily builds

Sun Aug 29 19:25:21 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* tools/XML_Helpers/XMLHelpers.mpc:

	  Fix for link errors in Debian_Core builds.

Sun Aug 29 19:02:42 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* DAnCE/ciao/CCM_Core.mpc:

	  Added valuetype seperately to the Deployment_svnt project.

Sun Aug 29 18:10:13 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* DAnCE/examples/BasicSP/BMClosedED/BMClosedED_svnt.h:
	* DAnCE/examples/BasicSP/BMDevice/BMDevice_svnt.h:
	* DAnCE/examples/BasicSP/BMDisplay/BMDisplay_svnt.h:
	* DAnCE/examples/BasicSP/EC/EC_svnt.h:

	  These files should not be in the repository.

Sat Aug 28 18:44:00 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* DAnCE/examples/BasicSP/BMDevice/BMDevice.mpc:

	  Fixed a compile erros in the daily builds.

Sat Aug 28 09:22:15 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/examples/BasicSP/BasicSP.mpc:
	* DAnCE/examples/BasicSP/BMClosedED/BMClosedED.mpc:
	* DAnCE/examples/BasicSP/BMDevice/BMDevice.mpc:
	* DAnCE/examples/BasicSP/BMDisplay/BMDisplay.mpc:
	* DAnCE/examples/BasicSP/EC/EC.mpc:

	  Fixed the project names and shared librray names so that they
	  don't collide with the regual BasicSP test. Ideally there
	  shouldn't be any duplicate code. I waill talk to Gan about
	  this.

Thu Aug 26 16:45:10 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/IDL3/Lookup/README:
        * tests/IDL3/Lookup/lookup_test.idl:
        * tests/IDL3/Lookup/lookup_test.mpc:

          New files, a test for the IDL compiler lookup of declarations
          in base interfaces, valuetypes, components, and homes, and
          in supported interfaces, referenced by the local name in the
          derived IDL type. Thanks to Boris Kolpackov
          <boris@dre.vanderbilt.edu> for reporting the bug and for
          providing an example IDL file that illustrates the various
          cases.

Thu Aug 26 13:24:40 2004  Gan Deng <gan.deng@vanderbilt.edu>

        * DAnCE/examples/BaiscSP/*.*:

          Created above directory and subdictories to add an example for
          using DAnCE.

Thu Aug 26 12:28:40 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/CIDLC.vcproj:

          Added missing files to project.

Thu Aug 26 11:25:39 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tests/CIDL/CodeGen/CodeGen.mpc:

          Changed dependency from ciao_server to ciao_servant.

Wed Aug 25 11:28:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * DAnCE/Config_Handlers/DnC_Dump.h:
          Removed not needed qualifier

        * DAnCE/RepositoryManager/RepositoryManager_Impl.h:
          Removed not needed ; after namespace closure

Wed Aug 25 11:24:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * DAnCE/Config_Handlers/Config_Error_Handler.h:
          Removed not needed ; after namespace closure

Tue Aug 24 11:31:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * DAnCE/Config_Handlers/Config.h:
          Removed not needed ; after namespace closure

Mon Aug 23 21:47:10 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/Config_Handlers/XSCRT/Elements.hpp:
	* DAnCE/Config_Handlers/XSCRT/Elements.ipp:
	* DAnCE/Config_Handlers/XSCRT/Elements.tpp:
	* DAnCE/Config_Handlers/XSCRT/ExtendedTypeInfo.hpp:
	* DAnCE/Config_Handlers/XSCRT/ExtendedTypeInfo.ipp:
	* DAnCE/Config_Handlers/XSCRT/Parser.hpp:
	* DAnCE/Config_Handlers/XSCRT/Parser.ipp:
	* DAnCE/Config_Handlers/XSCRT/Parser.tpp:
	* DAnCE/Config_Handlers/XSCRT/Traversal.hpp:
	* DAnCE/Config_Handlers/XSCRT/Traversal.ipp:
	* DAnCE/Config_Handlers/XSCRT/Traversal.tpp:
	* DAnCE/Config_Handlers/XSCRT/XMLSchema.hpp:
	* DAnCE/Config_Handlers/XSCRT/XMLSchema.ipp:
	* DAnCE/Config_Handlers/XSCRT/XMLSchema.tpp:

	  Added XSCRT 0.0.4 into the repository to compile the handlers.

Mon Aug 23 21:32:50 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* CIDLC/TypeNameEmitter.cpp:

	  Fixed a compiler error in the daily builds showing up from a
	  non-const declaration of a char * for extraction into an Any.

	* DAnCE/Config_Handlers/Config.h:

	  Deployment.h has been renamed to Config.h

	* DAnCE/Config_Handlers/Process_Element.h:
	* DAnCE/Config_Handlers/Basic_Handler.h:

	  Include Config.h

	* DAnCE/Config_Handlers/Basic_Deployment_Data.cpp:
	* DAnCE/Config_Handlers/Basic_Deployment_Data.hpp:
	* DAnCE/Config_Handlers/Deployment.cpp:
	* DAnCE/Config_Handlers/Deployment.hpp:
	* DAnCE/Config_Handlers/ccd.cpp:
	* DAnCE/Config_Handlers/ccd.hpp:
	* DAnCE/Config_Handlers/cdd.cpp:
	* DAnCE/Config_Handlers/cdd.hpp:
	* DAnCE/Config_Handlers/cdp.cpp:
	* DAnCE/Config_Handlers/cdp.hpp:
	* DAnCE/Config_Handlers/cid.cpp:
	* DAnCE/Config_Handlers/cid.hpp:
	* DAnCE/Config_Handlers/cpd.cpp:
	* DAnCE/Config_Handlers/cpd.hpp:
	* DAnCE/Config_Handlers/iad.cpp:
	* DAnCE/Config_Handlers/iad.hpp:
	* DAnCE/Config_Handlers/pcd.cpp:
	* DAnCE/Config_Handlers/pcd.hpp:
	* DAnCE/Config_Handlers/toplevel.cpp:
	* DAnCE/Config_Handlers/toplevel.hpp:
	* DAnCE/Config_Handlers/Config_Handlers.mpc:

	  Generated code from XSC which is going to be used for the next
	  generation handlers. They have been added in the MPC but guarded
	  with requires += dummy_label since they give lot of warnings.

Mon Aug 23 08:02:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * tools/IDL3_to_IDL2/IDL3_to_IDL2.mpc:
          Fixed typo in vpath

Sun Aug 22 22:23:12 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* DAnCE/Config_Handlers/Config_Handlers.mpc:

	  Fixed VC6 compilation errors.

Mon Aug 23 01:07:24 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/ciao/StandardConfigurator_Impl.cpp:
	* ciao/StandardConfigurator_Impl.cpp:

	  Fixed unused variable warnings.

Sun Aug 22 21:28:34 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* DAnCE/ciao/Servant_Impl_Base.cpp:
	* DAnCE/ciao/Servant_Impl_Base.h:
	* DAnCE/ciao/StandardConfigurator_Impl.cpp:
	* DAnCE/ciao/StandardConfigurator_Impl.h:
 	* DAnCE/ciao/CCM_Core.mpc:

          Added these files to the DAnCE builds. These were from the
	  following change

	  Tue Aug 17 14:29:00 2004  Jules White <jules@dre.vanderbilt.edu>

	* ciao/CCM_Core.mpc:
	* ciao/Servant_Impl_Base.cpp:
	* ciao/Servant_Impl_Base.h:
	* ciao/StandardConfigurator_Impl.cpp:
	* ciao/StandardConfigurator_Impl.h:

	  Fixed compilation errors in builds where exceptions have been
	  turned off.

Sun Aug 22 22:11:49 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* tools/IDL3_to_IDL2/idl3_to_idl2_visitor.cpp:

	  Fixed redeclaration error in VC6 builds.

Sun Aug 22 20:08:10 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* CIDLC/ServantSourceGenerator.cpp:

	  Fixed unused variable warnings in the generated code.

Sun Aug 22 17:06:44 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* tools/IDL3_to_IDL2/be_global.cpp:
	* tools/IDL3_to_IDL2/idl3_to_idl2_visitor.cpp:

	  Fixed unused variable warnings in our daily builds.

Sun Aug 22 16:26:01 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* performance-tests/Protocols/Receiver/Receiver.mpc:

	  Fixed a compile error in our daily builds.

Fri Aug 20 16:01:55 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tools/IDL3_to_IDL2/IDL3_to_IDL2.mpc:

          Fixed typo in source file name.

Fri Aug 20 10:39:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * DAnCE/ciao/Container_Base.h:
          Fixed compile errors

Fri Aug 20 07:32:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ciao/Container_Base.h:
          Fixed compile errors

Thu Aug 19 17:13:22 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/Literals.cpp:
        * CIDLC/Literals.hpp:
        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:
        * CIDLC/TypeNameEmitter.cpp:
        * CIDLC/TypeNameEmitter.hpp:

          Added code generation for the set_attributes() method called
          on the servant by the deployer.

Thu Aug 19 16:09:45 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/ciao/Container_Base.h:
	* ciao/Container_Base.h:

	  Fixed a compilation error reported by  Roland Schimmack <Roland
	  dot Schimmack at gmx dot de>

Thu Aug 19 08:44:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * PROBLEM-REPORT-FORM:
          Ask for the default.features file used by MPC.

Wed Aug 18 14:21:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * DAnCE/NodeManager/NodeDaemon_Impl.h:
          Added missing pragma pop

Tue Aug 17 14:29:00 2004  Jules White <jules@dre.vanderbilt.edu>

        * CIAO/ciao/Servant_Impl_Base.h:
        * CIAO/ciao/Servant_Impl_Base.cpp:
          Added a method to create and return the StandardConfigurator for a component.
          Overrided _default_POA so that it returns the POA of the servant's container.

        * CIAO/ciao/StandardConfigurator_Impl.h:
        * CIAO/ciao/StandardConfigurator_Impl.cpp:
          Created an implementation of the StandardConfigurator interface.

Mon Aug 16 22:15:52 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/tests/NodeApplicationTest/RoundTrip_exec.cpp:
	* DAnCE/tests/NodeApplicationTest/RoundTrip_exec.h:

	  Fixed compilation errors in builds where exceptions have been
	  turned off.

Mon Aug 16 22:09:52 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* performance-tests/Protocols/Sender/Sender.mpc:

	  Fix for link errors on the scoreboard.

Mon Aug 16 21:01:49 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* performance-tests/Benchmark/Benchmark.mpc:

	  Fix for link errors on the scoreboard.

Mon Aug 16 16:44:13 2004  J.T. Conklin  <jtc@acorntoolworks.com>

	* CIAO/DAnCE/ExecutionManager/Execution_Manager.cpp:
	* CIAO/DAnCE/NodeManager/Node_Daemon.cpp:
	* CIAO/DAnCE/ciao/CCM_Container.idl:
	* CIAO/ciao/CCM_Container.idl:
	  Changed #include "orbsvcs/orbsvcs/..." to #include "orbsvcs/...".

Mon Aug 16 16:36:49 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tools/IDL3_to_IDL2/idl3_to_idl2_visitor.cpp:

          Changed conversion for eventtypes to generate, instead of the
          original eventtype, a valuetype with Components::EventBase added
          to its inheritance list. This is completely equivalent to the
          original eventtype and has the advantage that it eliminates the
          need to use the -Sm option (disabling CCM equivalent IDL
          preprocessing) when running the IDL compiler on a converted
          file. Thanks to Bala Natarajan <bala@dre.vanderbilt.edu> for
          the suggestion.

Mon Aug 16 14:14:15 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tests/IDL3/ImpliedIDL/Components/Receptacles/ICReceptacles.idl:

	  Do not do the compile the implied data part of the IDL.

Mon Aug 16 12:42:59 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/Config_Handlers/CAD_Handler.h:
	* DAnCE/Config_Handlers/CEPE_Handler.h:
	* DAnCE/Config_Handlers/CPK_Handler.h:
	* DAnCE/Config_Handlers/CPR_Handler.h:
	* DAnCE/Config_Handlers/Cap_Handler.h:
	* DAnCE/Config_Handlers/CompIntrDesc_Handler.h:
	* DAnCE/Config_Handlers/CompPkgDesc_Handler.h:
	* DAnCE/Config_Handlers/DT_Handler.h:
	* DAnCE/Config_Handlers/Domain_Handler.h:
	* DAnCE/Config_Handlers/ERE_Handler.h:
	* DAnCE/Config_Handlers/IAD_Handler.h:
	* DAnCE/Config_Handlers/ID_Handler.h:
	* DAnCE/Config_Handlers/IR_Handler.h:
	* DAnCE/Config_Handlers/MID_Handler.h:
	* DAnCE/Config_Handlers/NIA_Handler.h:
	* DAnCE/Config_Handlers/PCI_Handler.h:
	* DAnCE/Config_Handlers/PC_Handler.h:
	* DAnCE/Config_Handlers/Plan_Handler.h:
	* DAnCE/Config_Handlers/Process_Element.h:
	* DAnCE/Config_Handlers/Property_Handler.h:
	* DAnCE/Config_Handlers/RS_Handler.h:
	* DAnCE/Config_Handlers/RUK_Handler.h:
	* DAnCE/Config_Handlers/Requirement_Handler.h:
	* DAnCE/Config_Handlers/SPK_Handler.h:
	* DAnCE/Config_Handlers/SP_Handler.h:
	* DAnCE/Config_Handlers/TPD_Handler.h:
	* DAnCE/Config_Handlers/Utils.h:

	  Use ciao/ to include any header files from core ciao.

	* DAnCE/ciao/CCM_Core.mpc:
	* DAnCE/tests/Config_Handlers/handler_test.mpb:
	* DAnCE/tests/NodeApplicationTest/NodeAppTest.mpc:

	  Use the right libraries for linking. This should probably
	  address some of the core build errors on the scoreboard.

Sun Aug 15 18:32:49 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tools/IDL3_to_IDL2/IDL3_to_IDL2.mpc:
        * tools/IDL3_to_IDL2/TAO_IDL3_TO_IDL2_BE_Export.h:
        * tools/IDL3_to_IDL2/be_extern.h:
        * tools/IDL3_to_IDL2/be_global.cpp:
        * tools/IDL3_to_IDL2/be_global.h:
        * tools/IDL3_to_IDL2/be_helper.cpp:
        * tools/IDL3_to_IDL2/be_helper.h:
        * tools/IDL3_to_IDL2/be_init.cpp:
        * tools/IDL3_to_IDL2/be_produce.cpp:
        * tools/IDL3_to_IDL2/be_sunsoft.cpp:
        * tools/IDL3_to_IDL2/be_sunsoft.h:
        * tools/IDL3_to_IDL2/idl3_to_idl2_visitor.cpp:
        * tools/IDL3_to_IDL2/idl3_to_idl2_visitor.h:
        * tools/IDL3_to_IDL2/README:

          New files implementing a tool that inputs an IDL file with IDL3
          constructs and generates another IDL file with the IDL3
          constructs converted to the spec-defined IDL2 equivalents. Using
          the generated file instead of the original one in applications
          will allow the developer to reference the IDL2 equivalent types
          in application IDL, rather than just in C++ code as before.
          The generated IDL file has a '_IDL2' suffix added to the
          original file name just before the '.idl' extension.

Sun Aug 15 09:17:59 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* performance-tests/Benchmark/Benchmark.mpc:

	  Added missing libraries as reported by our daily builds.

Sun Aug 15 09:12:36 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/tests/Config_Handlers/handler_test.mpb:

	  Fixed the handlers to link in CIAO_DnC_Container too.

Sat Aug 14 14:44:24 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/Config_Handlers/Config_Handlers.mpc:

	  Do not include /usr/lib to be in libpaths. This is odd and
	  shouldn't be there at the application level. Applications should
	  only be bothered about using $XERCESCROOT and the like. If the
	  application doesn't specify the compiler, linker and the loader
	  knows where to pick things from.

Sat Aug 14 14:07:53 2004  Aniruddha Gokhale  <a.gokhale@vanderbilt.edu>

	* DAnCE/NodeManager/Node_Daemon.cpp:

	  Included "ace/os_include/os_netdb.h since otherwise the
	  MAXHOSTNAMELEN constant was not found.

Sat Aug 14 15:36:28 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/NodeManager/NodeDaemon_Impl.cpp:
	* DAnCE/NodeManager/NodeDaemon_Impl.h:
	* DAnCE/NodeManager/Node_Daemon.cpp:

	  Cosmetic fixes for fuzz errors and other simple fixes for the
	  daily builds.

	* DAnCE/NodeManager/README:

	  Added a README file in the directory.

Sat Aug 14 04:20:44 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/ExecutionManager/ExecutionManager_Impl.h:
	* DAnCE/ciao/ComponentsC.h:
	* ciao/ComponentsC.h:

	  Removed a trailing ; at the end of namespace closure. g++-3.4.1
	  starts getting seizures once it locates a trailing ;.

Sat Aug 14 03:29:18 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/tests/Config_Handlers/handler_test.mpb:
	* DAnCE/tests/NodeApplicationTest/NodeAppTest.mpc:
	* tools/XML_Helpers/XMLHelpers.mpc:

	  Tried fixing some warnings and errors in the builds. I am not
	  able to reproduce it and so I am taking a blind shot.

Thu Aug 12 14:14:00 Jules White <jules@dre.vanderbilt.edu>

	* docs/schema/cdp.xsd:
	* docs/schema/Modified_Deployment.xsd:

          Changed the schema so that it was more compliant with the spec.

Thu Aug 12 15:25:44 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* DAnCE/NEWS:
	* DAnCE/ciao/Servant_Impl_T.cpp:
	* DAnCE/ciao/Servant_Impl_T.h:

	  Updates at this

Thu Aug 12 11:35:44 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/ciao/Servant_Impl_T.cpp:
	* DAnCE/ciao/Servant_Impl_T.h:

	  Propogating the changes from "Mon Aug  9 11:38:04 2004  Jeff
	  Parsons <j.parsons@vanderbilt.edu>"  to DAnCE.

	* DAnCE/tests/Config_Handlers/Handler_Test.cpp:
	* DAnCE/tests/Config_Handlers/Handler_Test.h:

	  Cleaned up things so that it is more portable.

	* DAnCE/tests/Config_Handlers/handler_test.mpb:

	  Put Handler_Test as a template file.

Thu Aug 12 16:20:19 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* DAnCE/tests/Config_Handlers/Handler_Test.cpp:
	* DAnCE/tests/Config_Handlers/Handler_Test.h:
	* DAnCE/tests/Config_Handlers/Handler_Test.i:

	  Fixed fuzz errors.

Wed Aug 11 22:37:31 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/NodeManager/Node_Daemon.cpp:
	* tests/RTCCM/DiffServ/Sender/Sender_exec.cpp:

	  Fixed fuzz errors.

Wed Aug 11 22:15:26 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/tests/NodeApplicationTest/NodeAppTest.mpc:

	  Fixed yet another problem with MPC file. Should by now compile
	  clean on the scoreboard. Let us see hwo it goes.

Wed Aug 11 20:08:58 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* CIDLC/CIDLC.mpc:

	  Fixed library paths. This seems to have been busted.

Wed Aug 11 14:38:00 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/ExecutionManager/Execution_Manager.cpp:

	  Made certain parts exception safe and fixed fuzz errors.

	* tests/CIDL/CodeGen/CodeGen.mpc:

	  The MPC file was busted which lead to errors in the daily
	  builds.

	* tests/RTCCM/DiffServ/Receiver/Receiver.mpc:

	  Fixed errors in he MPC file.

	* tests/RTCCM/DiffServ/Sender/Sender_exec.cpp:

	  Fixed fuzz errors.

Wed Aug 11 12:45:09 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* CIDLC/CIDLC.mpc:

	  Added new files startting with Exec* into the CIDLC project.

	* CIAOTAO.mwc:

	  Added tests section to the above file.

Wed Aug 11 15:08:44 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tests/CIDL/CodeGen/CodeGen.mpc:

	  Fix for the compilation errors in the daily builds.

Mon Aug  9 11:38:04 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * ciao/Servant_Impl_T.cpp:
        * ciao/Servant_Impl_T.h:

          Moved the body of the destructor and the same_component()
          method from the generated servant class to the base class.

Sat Aug  7 17:55:59 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/tests/NodeApplicationTest/NodeAppTest.mpc:

	  Prevented compilation errors if CIDL is not built.

Sat Aug  7 16:43:45 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* tests/CIDL/CodeGen/CodeGen.mpc:
	* tests/IDL3/Homes/Basic/Basic.mpc:

	  Changed the name of the stub library and project names. There
	  was a clash in project and library names.

Thu Aug  5 17:42:56 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ExecImplGenerator.cpp:
        * CIDLC/ExecImplGenerator.hpp:
        * CIDLC/ExecImplHeaderGenerator.cpp:
        * CIDLC/ExecImplHeaderGenerator.hpp:
        * CIDLC/ExecImplSourceGenerator.cpp:
        * CIDLC/ExecImplSourceGenerator.hpp:

          New files, which generate empty executor implementation
          classes (with spec-defined operations filled in and
          IDL operations and attributes marked for the developer
          to fill in). This generation is optional, triggered by
          the CIDL compiler command line option --gen-exec-impl.
          Two other options --exec-hdr-file-suffix and --exec-src-file-suffix,
          can override the default generated file extensions of
          _exec.h and _exec.cpp. Tao others, --exec-hdr-file-regex and
          --exec-src-file-regex, allow replacement of default generated
          filenames by pattern matching with regular expressions.
          And finally, two more, --exec-export-include,
          overrides the default generated export macro header file,
          and --exec-export-macro, overrides the default generated
          export macro for the executor implementation file.

        * CIDLC/Literals.cpp:
        * CIDLC/Literals.hpp:
        * CIDLC/ServantGenerator.cpp:
        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantHeaderGenerator.hpp:
        * CIDLC/ServantSourceGenerator.cpp:
        * CIDLC/TypeNameEmitter.cpp:
        * CIDLC/TypeNameEmitter.hpp:
        * CIDLC/cidlc.cpp:

          - Added generation of (unimplemented) home finder
            operations.

          - Filled gaps and organized the command line options
            for servant filename suffixes and regular expressions
            to replace default generated filenames.

          - Added a new type name emitter that generates the
            appropriate NULL return value for any type.

        * tests/CIDL/CodeGen/Basic.idl:
        * tests/CIDL/CodeGen/Basic_stub_export.h:
        * tests/CIDL/CodeGen/Basic_svnt_export.h:
        * tests/CIDL/CodeGen/CodeGen.cidl:
        * tests/CIDL/CodeGen/CodeGen.idl:
        * tests/CIDL/CodeGen/CodeGen.mpc:
        * tests/CIDL/CodeGen/CodeGen_exec_export.h:
        * tests/CIDL/CodeGen/CodeGen_stub_export.h:
        * tests/CIDL/CodeGen/CodeGen_svnt_export.h:
        * tests/CIDL/CodeGen/README:

          New test, for servant and executor implemtation code
          generation of the CIDL compiler. This test target
          correct code generation for many component-specific
          features of IDL - catching operations and attributes
          for supported interfaces, operations and attributes
          for parents of supported interfaces, home operations
          from base homes, inherited home factory and finder
          operations, etc. The object of the test is to check
          that the generated code builds and links successfully.

Thu Aug  5 15:49:10 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* DAnCE/tests/NodeApplicationTest/RoundTrip_exec.h:

	  Made destructors in reference count enabled classes protected to
	  enforce proper memory management through the reference counting
	  mechansism (i.e. prevent directly calling operator delete() on
	  the reference counted object).

	  (cube_long):
	* DAnCE/tests/NodeApplicationTest/RoundTrip_exec.cpp (cube_long):
	* performance-tests/Benchmark/RoundTrip/RoundTrip_exec.h
	  (makeCall):
	* performance-tests/Benchmark/RoundTrip/RoundTrip_exec.cpp
	  (makeCall):

	  Added missing emulated exception parameter.  Fixes compile-time
	  errors in emulated exception builds.

	* examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.cpp
	  (ccm_activate):

	  Corrected emulated excepton parameter.  Fixes a compile-time
	  error in emulated exception builds.

	* performance-tests/Protocols/Controller/Controller.mpc:
	* tests/RTCCM/DiffServ/Receiver/Receiver.mpc
	  (DiffServ_Receiver_exec):
	* tests/RTCCM/DiffServ/Sender/Sender.mpc (DiffServ_Sender_exec):

	  Added missing "requires += exceptions".  These tests will not
	  compile in emulated exception configurations.

	* performance-tests/Benchmark/RoundTrip/RoundTrip_exec.cpp
	  (get_latency):

	  Fixed unused parameter warning in emulated exception builds.

Thu Aug  5 11:48:49 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* performance-tests/Protocols/Controller/Controller.mpc:

	  Corrected library link order.  Addresses undefined reference
	  link-time errors in static builds.

	* tools/XML_Helpers/XMLHelpers.mpc (Helper_Test):

	  Added missing TAO_IFR_Client library to "libs" variable.
	  Addresses undefined reference link-time errors in static
	  builds.

Thu Aug  5 13:28:49 2004  Will Otte <wotte@dre.vanderbilt.edu>

	* docs/schema/ciaopolicy.xsd:

	  Schema describing ORB policy configurations.

Thu Aug  5 11:56:03 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CCF/CCF/CodeGenerationKit/IndentationImplanter.hpp:

          Changed template template parameter of class Implanter from
          "Buffer" to "BufferType" because the former was causing a
          problem with VC 7.1 clashing with a class Buffer in another
          file.

Thu Aug  5 08:48:50 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * CIAO-INSTALL.html: Updated to reflect dependency on Xerces and
          native exceptions.

Wed Aug  4 22:50:17 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* examples/Hello/Sender/Sender.mpc (Hello_Starter):
	* performance-tests/Protocols/Controller/Controller.mpc (perf):
	* tools/XML_Helpers/XMLHelpers.mpc (Helper_Test):

	  Fixed static build link-time errors caused by not linking the
	  appropriate libraries.

Wed Aug  4 22:31:24 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* docs/tutorial/Hello/client.cpp (main):

	  Fixed typo that caused a syntax error.

Wed Aug  4 17:24:18 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* examples/OEP/Display/RateGen/RateGen_exec.cpp (create):
	* performance-tests/Benchmark/LatencyTest.cpp (makeCall):
	* performance-tests/Benchmark/RoundTripServer/LatencyTest.cpp
	  (makeCall):
	* tests/RTCCM/Priority_Test/Controllers/Rate_Controller.cpp
	  (create):
	* tests/RTCCM/Priority_Test/Workers/CB_Worker_exec.cpp:
	* tests/RTCCM/Priority_Test/Workers/IOB_Worker_exec.cpp:

	  Fixued unused parameter warnings.

	* docs/tutorial/Hello/hello_exec.cpp:
	* performance-tests/Benchmark/RoundTrip/RoundTrip_exec.cpp:

	  Fixed emulated exception usage.

	  Fixed unused argument warnings.

	* docs/tutorial/Hello/client.cpp (main):
	* docs/tutorial/Hello/simple_client.cpp (main):
	* performance-tests/Benchmark/Multi_Threaded/client.cpp (main):
	* performance-tests/Benchmark/RoundTrip/client.cpp (main):
	* performance-tests/Benchmark/RoundTripClient/client.cpp (main):

	  Fixed CORBA::ORB_init() arguments in emulated exception case.

	  Added missing ACE_TRY_CHECK after CORBA::ORB_init() call.

	* performance-tests/Benchmark/RoundTripClient/RoundTripClient_exec.cpp
	  (start):

	  Fixed emulated exception usage.

	  Added missing emulated exception parameter.  Fixes a
	  compile-time error.

	  Fixed unused parameter warnings.

	* tests/RTCCM/DiffServ/Sender/Sender_exec.cpp:

	  Include "ace/OS_NS_unistd.h" to pull in ACE_OS::sleep()
	  declaration.

	* tests/RTCCM/Priority_Test/Controllers/Controller_exec.cpp:

	  Include "ace/OS_NS_stdio.h" to pull in ACE_OS::snprintf()
	  declaration.

	  Fixed unused parameter warnings.

Wed Aug  4 16:43:43 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* DAnCE/tests/NodeApplicationTest/RoundTrip_exec.cpp:
	* examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.cpp
	  (push_Refresh):

	  Fixed emulated exception usage.

	  Fixed unused parameter warnings.

	* examples/OEP/BasicSP/EC/EC_exec.cpp (pulse):

	  Added missing ACE_TRY_CHECK emulated exception macro.  Fixes
	  warning about unused "ACE_TRY_LABEL" label.

	* examples/OEP/Display/RateGen/client.cpp:

	  Include "ace/OS_NS_unistd.h" to pull in ACE_OS::sleep()
	  declaration.

	* examples/Hello/Receiver/Receiver_exec.cpp (ccm_activate):
	* examples/OEP/BasicSP/BMClosedED/BMClosedED_exec.cpp
	  (ccm_activate):
	* examples/OEP/BasicSP/BMDevice/BMDevice_exec.cpp (ccm_activate):
	* examples/OEP/BasicSP/BMDisplay/BMDisplay_exec.cpp
	  (ccm_activate):
	* examples/OEP/Display/GPS/GPS_exec.cpp (get_MyLocation, posx):
	  (posy, create):
	* examples/OEP/Display/GPS/GPS_tracing_exec.cpp (get_MyLocation):
	  (posx, posy, create):
	* examples/OEP/Display/NavDisplay/NavDisplay_exec.cpp
	  (ccm_activate):
	* examples/OEP/Display/NavDisplayGUI_exec/AddNavUnitCmd.cpp
	  (execute):
	* examples/OEP/Display/NavDisplayGUI_exec/NodeItem.cpp (moveBy):
	* examples/OEP/Display/NavDisplayGUI_exec/QuitCmd.cpp (execute):

	  Fixed unused parameter warnings.

Wed Aug  4 11:16:47 2004  Will Otte <wotte@dre.vanderbilt.edu>

	* Components/ComplexComponent/Attributes/Attributes.idl:
	* Homes/Attributes/HomeAttributes.idl:
	* ImpliedIDL/Components/Basic/ICBasic.idl:
	* Homes/Finder/Finder.idl:
	* ImpliedIDL/Components/EventSink/ICEventSink.idl:
	* ImpliedIDL/Components/EventSource/ICEventSource.idl:
	* ImpliedIDL/Components/Receptacles/ICReceptacles.idl:

	  Addressed some build errors on the Fuzz build.

	* Components/ComplexComponent/Attributes/AttributesS.cpp:
	* Components/ComplexComponent/EventSink/EventSinkS.cpp:
	* Components/ComplexComponent/EventSource/EventSourceS.cpp:
	* Components/ComplexComponent/Facets/FacetsS.cpp:
	* Components/ComplexComponent/Receptacles/ReceptaclesS.cpp:
	* Components/SimpleComponent/SimpleComponentS.cpp:
	* Events/Abstract/AbstractS.cpp:
	* Events/Regular/RegularS.cpp:
	* Homes/Attributes/HomeAttributesS.cpp:
	* Homes/Basic/BasicS.cpp:
	* Homes/Factory/FactoryS.cpp:
	* Homes/Finder/FinderS.cpp:
	* Homes/Inheritance/InheritanceS.cpp:
	* ImpliedIDL/Components/Basic/ICBasicS.cpp:
	* ImpliedIDL/Components/EventSink/ICEventSinkS.cpp:
	* ImpliedIDL/Components/EventSource/ICEventSourceS.cpp:
	* ImpliedIDL/Components/Receptacles/ICReceptaclesS.cpp:
	* ImpliedIDL/Events/EventsS.cpp:
	* ImpliedIDL/Homes/HomesS.cpp:

	  Removed a bunch of generated code from the repository.

Tue Aug  3 20:18:48 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* docs/schema/cid.xsd:
	* docs/schema/Deployment.xsd:

	  Added some tweaks.

Tue Aug  3 14:25:44 2004  Will Otte <wotte@dre.vanderbilt.edu>

	* IDL3/Components/ComplexComponent/Attributes/Attributes.idl:
	* IDL3/Components/ComplexComponent/Attributes/Attributes.mpc:
	* IDL3/Components/ComplexComponent/Attributes/AttributesS.cpp:
	* IDL3/Components/ComplexComponent/Attributes/Attributes_stub_export.h:
	* IDL3/Components/ComplexComponent/Attributes/Attributes_svnt_export.h:
	* IDL3/Components/ComplexComponent/EventSink/EventSink.idl:
	* IDL3/Components/ComplexComponent/EventSink/EventSink.mpc:
	* IDL3/Components/ComplexComponent/EventSink/EventSinkS.cpp:
	* IDL3/Components/ComplexComponent/EventSink/EventSink_stub_export.h:
	* IDL3/Components/ComplexComponent/EventSink/EventSink_svnt_export.h:
	* IDL3/Components/ComplexComponent/EventSource/EventSource.idl:
	* IDL3/Components/ComplexComponent/EventSource/EventSource.mpc:
	* IDL3/Components/ComplexComponent/EventSource/EventSourceS.cpp:
	* IDL3/Components/ComplexComponent/EventSource/EventSource_stub_export.h:
	* IDL3/Components/ComplexComponent/EventSource/EventSource_svnt_export.h:
	* IDL3/Components/ComplexComponent/Facets/Facets.idl:
	* IDL3/Components/ComplexComponent/Facets/Facets.mpc:
	* IDL3/Components/ComplexComponent/Facets/FacetsS.cpp:
	* IDL3/Components/ComplexComponent/Facets/Facets_stub_export.h:
	* IDL3/Components/ComplexComponent/Facets/Facets_svnt_export.h:
	* IDL3/Components/ComplexComponent/Receptacles/Receptacles.idl:
	* IDL3/Components/ComplexComponent/Receptacles/Receptacles.mpc:
	* IDL3/Components/ComplexComponent/Receptacles/ReceptaclesS.cpp:
	* IDL3/Components/ComplexComponent/Receptacles/Receptacles_stub_export.h:
	* IDL3/Components/ComplexComponent/Receptacles/Receptacles_svnt_export.h:
	* IDL3/Components/SimpleComponent/SimpleComponent.idl:
	* IDL3/Components/SimpleComponent/SimpleComponent.mpc:
	* IDL3/Components/SimpleComponent/SimpleComponentS.cpp:
	* IDL3/Components/SimpleComponent/SimpleComponent_exec_export.h:
	* IDL3/Components/SimpleComponent/SimpleComponent_stub_export.h:
	* IDL3/Components/SimpleComponent/SimpleComponent_svnt_export.h:
	* IDL3/Events/Abstract/Abstract.idl:
	* IDL3/Events/Abstract/Abstract.mpc:
	* IDL3/Events/Abstract/AbstractS.cpp:
	* IDL3/Events/Abstract/Abstract_stub_export.h:
	* IDL3/Events/Abstract/Abstract_svnt_export.h:
	* IDL3/Events/Regular/Regular.idl:
	* IDL3/Events/Regular/Regular.mpc:
	* IDL3/Events/Regular/RegularS.cpp:
	* IDL3/Events/Regular/Regular_stub_export.h:
	* IDL3/Events/Regular/Regular_svnt_export.h:
	* IDL3/Homes/Attributes/HomeAttributes.idl:
	* IDL3/Homes/Attributes/HomeAttributes.mpc:
	* IDL3/Homes/Attributes/HomeAttributesS.cpp:
	* IDL3/Homes/Attributes/HomeAttributes_stub_export.h:
	* IDL3/Homes/Attributes/HomeAttributes_svnt_export.h:
	* IDL3/Homes/Basic/Basic.idl:
	* IDL3/Homes/Basic/Basic.mpc:
	* IDL3/Homes/Basic/BasicS.cpp:
	* IDL3/Homes/Basic/Basic_stub_export.h:
	* IDL3/Homes/Basic/Basic_svnt_export.h:
	* IDL3/Homes/Factory/Factory.idl:
	* IDL3/Homes/Factory/Factory.mpc:
	* IDL3/Homes/Factory/FactoryS.cpp:
	* IDL3/Homes/Factory/Factory_stub_export.h:
	* IDL3/Homes/Factory/Factory_svnt_export.h:
	* IDL3/Homes/Finder/Finder.idl:
	* IDL3/Homes/Finder/Finder.mpc:
	* IDL3/Homes/Finder/FinderS.cpp:
	* IDL3/Homes/Finder/Finder_stub_export.h:
	* IDL3/Homes/Finder/Finder_svnt_export.h:
	* IDL3/Homes/Inheritance/Inheritance.idl:
	* IDL3/Homes/Inheritance/Inheritance.mpc:
	* IDL3/Homes/Inheritance/InheritanceS.cpp:
	* IDL3/Homes/Inheritance/Inheritance_stub_export.h:
	* IDL3/Homes/Inheritance/Inheritance_svnt_export.h:
	* IDL3/ImpliedIDL/Components/Basic/ICBasic.idl:
	* IDL3/ImpliedIDL/Components/Basic/ICBasic.mpc:
	* IDL3/ImpliedIDL/Components/Basic/ICBasicS.cpp:
	* IDL3/ImpliedIDL/Components/Basic/ICBasic_stub_export.h:
	* IDL3/ImpliedIDL/Components/Basic/ICBasic_svnt_export.h:
	* IDL3/ImpliedIDL/Components/EventSink/ICEventSink.idl:
	* IDL3/ImpliedIDL/Components/EventSink/ICEventSink.mpc:
	* IDL3/ImpliedIDL/Components/EventSink/ICEventSinkS.cpp:
	* IDL3/ImpliedIDL/Components/EventSink/ICEventSink_stub_export.h:
	* IDL3/ImpliedIDL/Components/EventSink/ICEventSink_svnt_export.h:
	* IDL3/ImpliedIDL/Components/EventSource/ICEventSource.idl:
	* IDL3/ImpliedIDL/Components/EventSource/ICEventSource.mpc:
	* IDL3/ImpliedIDL/Components/EventSource/ICEventSourceS.cpp:
	* IDL3/ImpliedIDL/Components:

	  Various tests of compilation for IDL3 constructs.

Tue Aug  3 18:36:10 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* docs/schema/README.html:

	  File explaining what these new descriptors mean.

 	* docs/schema/Basic_Deployment_Data.xsd:
	* docs/schema/Deployment.xsd:
	* docs/schema/Modified_Deployment.xsd:
	* docs/schema/Spec_Defined_Deployment.xsd:
	* docs/schema/Spec_Defined_XMI.xsd:
	* docs/schema/ccd.xsd:
	* docs/schema/cdd.xsd:
	* docs/schema/cdp.xsd:
	* docs/schema/cid.xsd:
	* docs/schema/cpd.xsd:
	* docs/schema/iad.xsd:
	* docs/schema/pcd.xsd:
	* docs/schema/toplevel.xsd:
	* docs/schema/unused_elements.xsd:

	  Sets of schemata that will be used in DAnCE. The meaning of
	  these different schemata have been documented in the
	  README.html.

Sun Aug  1 09:30:37 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* ChangeLogs:

	  Created a new directory and moved a bunch of ChangeLog entries
	  there.

Sat Jul 31 11:15:15 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * CIAO version 0.4.2 released.

Local Variables:
add-log-time-format: current-time-string
End:
