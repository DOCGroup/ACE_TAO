Fri Aug 20 10:39:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * DAnCE/ciao/Container_Base.h:
          Fixed compile errors

Fri Aug 20 07:32:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * ciao/Container_Base.h:
          Fixed compile errors

Thu Aug 19 17:13:22 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/Literals.cpp:
        * CIDLC/Literals.hpp:
        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantSourceGenerator.cpp:
        * CIDLC/TypeNameEmitter.cpp:
        * CIDLC/TypeNameEmitter.hpp:

          Added code generation for the set_attributes() method called
          on the servant by the deployer.

Thu Aug 19 16:09:45 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/ciao/Container_Base.h:
	* ciao/Container_Base.h:

	  Fixed a compilation error reported by  Roland Schimmack <Roland
	  dot Schimmack at gmx dot de>

Thu Aug 19 08:44:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * PROBLEM-REPORT-FORM:
          Ask for the default.features file used by MPC.

Wed Aug 18 14:21:12 UTC 2004  Johnny Willemsen  <jwillemsen@remedy.nl>

        * DAnCE/NodeManager/NodeDaemon_Impl.h:
          Added missing pragma pop

Tue Aug 17 14:29:00 2004  Jules White <jules@dre.vanderbilt.edu>

        * CIAO/ciao/Servant_Impl_Base.h:
        * CIAO/ciao/Servant_Impl_Base.cpp:
          Added a method to create and return the StandardConfigurator for a component.
          Overrided _default_POA so that it returns the POA of the servant's container.

        * CIAO/ciao/StandardConfigurator_Impl.h:
        * CIAO/ciao/StandardConfigurator_Impl.cpp:
          Created an implementation of the StandardConfigurator interface.

Mon Aug 16 22:15:52 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/tests/NodeApplicationTest/RoundTrip_exec.cpp:
	* DAnCE/tests/NodeApplicationTest/RoundTrip_exec.h:

	  Fixed compilation errors in builds where exceptions have been
	  turned off.

Mon Aug 16 22:09:52 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* performance-tests/Protocols/Sender/Sender.mpc:

	  Fix for link errors on the scoreboard.

Mon Aug 16 21:01:49 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* performance-tests/Benchmark/Benchmark.mpc:

	  Fix for link errors on the scoreboard.

Mon Aug 16 16:44:13 2004  J.T. Conklin  <jtc@acorntoolworks.com>

	* CIAO/DAnCE/ExecutionManager/Execution_Manager.cpp:
	* CIAO/DAnCE/NodeManager/Node_Daemon.cpp:
	* CIAO/DAnCE/ciao/CCM_Container.idl:
	* CIAO/ciao/CCM_Container.idl:
	  Changed #include "orbsvcs/orbsvcs/..." to #include "orbsvcs/...".

Mon Aug 16 16:36:49 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tools/IDL3_to_IDL2/idl3_to_idl2_visitor.cpp:

          Changed conversion for eventtypes to generate, instead of the
          original eventtype, a valuetype with Components::EventBase added
          to its inheritance list. This is completely equivalent to the
          original eventtype and has the advantage that it eliminates the
          need to use the -Sm option (disabling CCM equivalent IDL
          preprocessing) when running the IDL compiler on a converted
          file. Thanks to Bala Natarajan <bala@dre.vanderbilt.edu> for
          the suggestion.

Mon Aug 16 14:14:15 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tests/IDL3/ImpliedIDL/Components/Receptacles/ICReceptacles.idl:

	  Do not do the compile the implied data part of the IDL.

Mon Aug 16 12:42:59 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/Config_Handlers/CAD_Handler.h:
	* DAnCE/Config_Handlers/CEPE_Handler.h:
	* DAnCE/Config_Handlers/CPK_Handler.h:
	* DAnCE/Config_Handlers/CPR_Handler.h:
	* DAnCE/Config_Handlers/Cap_Handler.h:
	* DAnCE/Config_Handlers/CompIntrDesc_Handler.h:
	* DAnCE/Config_Handlers/CompPkgDesc_Handler.h:
	* DAnCE/Config_Handlers/DT_Handler.h:
	* DAnCE/Config_Handlers/Domain_Handler.h:
	* DAnCE/Config_Handlers/ERE_Handler.h:
	* DAnCE/Config_Handlers/IAD_Handler.h:
	* DAnCE/Config_Handlers/ID_Handler.h:
	* DAnCE/Config_Handlers/IR_Handler.h:
	* DAnCE/Config_Handlers/MID_Handler.h:
	* DAnCE/Config_Handlers/NIA_Handler.h:
	* DAnCE/Config_Handlers/PCI_Handler.h:
	* DAnCE/Config_Handlers/PC_Handler.h:
	* DAnCE/Config_Handlers/Plan_Handler.h:
	* DAnCE/Config_Handlers/Process_Element.h:
	* DAnCE/Config_Handlers/Property_Handler.h:
	* DAnCE/Config_Handlers/RS_Handler.h:
	* DAnCE/Config_Handlers/RUK_Handler.h:
	* DAnCE/Config_Handlers/Requirement_Handler.h:
	* DAnCE/Config_Handlers/SPK_Handler.h:
	* DAnCE/Config_Handlers/SP_Handler.h:
	* DAnCE/Config_Handlers/TPD_Handler.h:
	* DAnCE/Config_Handlers/Utils.h:

	  Use ciao/ to include any header files from core ciao.

	* DAnCE/ciao/CCM_Core.mpc:
	* DAnCE/tests/Config_Handlers/handler_test.mpb:
	* DAnCE/tests/NodeApplicationTest/NodeAppTest.mpc:

	  Use the right libraries for linking. This should probably
	  address some of the core build errors on the scoreboard.

Sun Aug 15 18:32:49 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * tools/IDL3_to_IDL2/IDL3_to_IDL2.mpc:
        * tools/IDL3_to_IDL2/TAO_IDL3_TO_IDL2_BE_Export.h:
        * tools/IDL3_to_IDL2/be_extern.h:
        * tools/IDL3_to_IDL2/be_global.cpp:
        * tools/IDL3_to_IDL2/be_global.h:
        * tools/IDL3_to_IDL2/be_helper.cpp:
        * tools/IDL3_to_IDL2/be_helper.h:
        * tools/IDL3_to_IDL2/be_init.cpp:
        * tools/IDL3_to_IDL2/be_produce.cpp:
        * tools/IDL3_to_IDL2/be_sunsoft.cpp:
        * tools/IDL3_to_IDL2/be_sunsoft.h:
        * tools/IDL3_to_IDL2/idl3_to_idl2_visitor.cpp:
        * tools/IDL3_to_IDL2/idl3_to_idl2_visitor.h:
        * tools/IDL3_to_IDL2/README:

          New files implementing a tool that inputs an IDL file with IDL3
          constructs and generates another IDL file with the IDL3
          constructs converted to the spec-defined IDL2 equivalents. Using
          the generated file instead of the original one in applications
          will allow the developer to reference the IDL2 equivalent types
          in application IDL, rather than just in C++ code as before.
          The generated IDL file has a '_IDL2' suffix added to the
          original file name just before the '.idl' extension.

Sun Aug 15 09:17:59 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* performance-tests/Benchmark/Benchmark.mpc:

	  Added missing libraries as reported by our daily builds.

Sun Aug 15 09:12:36 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/tests/Config_Handlers/handler_test.mpb:

	  Fixed the handlers to link in CIAO_DnC_Container too.

Sat Aug 14 14:44:24 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/Config_Handlers/Config_Handlers.mpc:

	  Do not include /usr/lib to be in libpaths. This is odd and
	  shouldn't be there at the application level. Applications should
	  only be bothered about using $XERCESCROOT and the like. If the
	  application doesn't specify the compiler, linker and the loader
	  knows where to pick things from.

Sat Aug 14 14:07:53 2004  Aniruddha Gokhale  <a.gokhale@vanderbilt.edu>

	* DAnCE/NodeManager/Node_Daemon.cpp:

	  Included "ace/os_include/os_netdb.h since otherwise the
	  MAXHOSTNAMELEN constant was not found.

Sat Aug 14 15:36:28 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/NodeManager/NodeDaemon_Impl.cpp:
	* DAnCE/NodeManager/NodeDaemon_Impl.h:
	* DAnCE/NodeManager/Node_Daemon.cpp:

	  Cosmetic fixes for fuzz errors and other simple fixes for the
	  daily builds.

	* DAnCE/NodeManager/README:

	  Added a README file in the directory.

Sat Aug 14 04:20:44 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/ExecutionManager/ExecutionManager_Impl.h:
	* DAnCE/ciao/ComponentsC.h:
	* ciao/ComponentsC.h:

	  Removed a trailing ; at the end of namespace closure. g++-3.4.1
	  starts getting seizures once it locates a trailing ;.

Sat Aug 14 03:29:18 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/tests/Config_Handlers/handler_test.mpb:
	* DAnCE/tests/NodeApplicationTest/NodeAppTest.mpc:
	* tools/XML_Helpers/XMLHelpers.mpc:

	  Tried fixing some warnings and errors in the builds. I am not
	  able to reproduce it and so I am taking a blind shot.

Thu Aug 12 14:14:00 Jules White <jules@dre.vanderbilt.edu>

	* docs/schema/cdp.xsd:
	* docs/schema/Modified_Deployment.xsd:

          Changed the schema so that it was more compliant with the spec.

Thu Aug 12 15:25:44 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* DAnCE/NEWS:
	* DAnCE/ciao/Servant_Impl_T.cpp:
	* DAnCE/ciao/Servant_Impl_T.h:

	  Updates at this

Thu Aug 12 11:35:44 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/ciao/Servant_Impl_T.cpp:
	* DAnCE/ciao/Servant_Impl_T.h:

	  Propogating the changes from "Mon Aug  9 11:38:04 2004  Jeff
	  Parsons <j.parsons@vanderbilt.edu>"  to DAnCE.

	* DAnCE/tests/Config_Handlers/Handler_Test.cpp:
	* DAnCE/tests/Config_Handlers/Handler_Test.h:

	  Cleaned up things so that it is more portable.

	* DAnCE/tests/Config_Handlers/handler_test.mpb:

	  Put Handler_Test as a template file.

Thu Aug 12 16:20:19 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* DAnCE/tests/Config_Handlers/Handler_Test.cpp:
	* DAnCE/tests/Config_Handlers/Handler_Test.h:
	* DAnCE/tests/Config_Handlers/Handler_Test.i:

	  Fixed fuzz errors.

Wed Aug 11 22:37:31 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/NodeManager/Node_Daemon.cpp:
	* tests/RTCCM/DiffServ/Sender/Sender_exec.cpp:

	  Fixed fuzz errors.

Wed Aug 11 22:15:26 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/tests/NodeApplicationTest/NodeAppTest.mpc:

	  Fixed yet another problem with MPC file. Should by now compile
	  clean on the scoreboard. Let us see hwo it goes.

Wed Aug 11 20:08:58 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* CIDLC/CIDLC.mpc:

	  Fixed library paths. This seems to have been busted.

Wed Aug 11 14:38:00 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/ExecutionManager/Execution_Manager.cpp:

	  Made certain parts exception safe and fixed fuzz errors.

	* tests/CIDL/CodeGen/CodeGen.mpc:

	  The MPC file was busted which lead to errors in the daily
	  builds.

	* tests/RTCCM/DiffServ/Receiver/Receiver.mpc:

	  Fixed errors in he MPC file.

	* tests/RTCCM/DiffServ/Sender/Sender_exec.cpp:

	  Fixed fuzz errors.

Wed Aug 11 12:45:09 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* CIDLC/CIDLC.mpc:

	  Added new files startting with Exec* into the CIDLC project.

	* CIAOTAO.mwc:

	  Added tests section to the above file.

Wed Aug 11 15:08:44 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* tests/CIDL/CodeGen/CodeGen.mpc:

	  Fix for the compilation errors in the daily builds.

Mon Aug  9 11:38:04 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * ciao/Servant_Impl_T.cpp:
        * ciao/Servant_Impl_T.h:

          Moved the body of the destructor and the same_component()
          method from the generated servant class to the base class.

Sat Aug  7 17:55:59 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* DAnCE/tests/NodeApplicationTest/NodeAppTest.mpc:

	  Prevented compilation errors if CIDL is not built.

Sat Aug  7 16:43:45 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

 	* tests/CIDL/CodeGen/CodeGen.mpc:
	* tests/IDL3/Homes/Basic/Basic.mpc:

	  Changed the name of the stub library and project names. There
	  was a clash in project and library names.

Thu Aug  5 17:42:56 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CIDLC/ExecImplGenerator.cpp:
        * CIDLC/ExecImplGenerator.hpp:
        * CIDLC/ExecImplHeaderGenerator.cpp:
        * CIDLC/ExecImplHeaderGenerator.hpp:
        * CIDLC/ExecImplSourceGenerator.cpp:
        * CIDLC/ExecImplSourceGenerator.hpp:

          New files, which generate empty executor implementation
          classes (with spec-defined operations filled in and
          IDL operations and attributes marked for the developer
          to fill in). This generation is optional, triggered by
          the CIDL compiler command line option --gen-exec-impl.
          Two other options --exec-hdr-file-suffix and --exec-src-file-suffix,
          can override the default generated file extensions of
          _exec.h and _exec.cpp. Tao others, --exec-hdr-file-regex and
          --exec-src-file-regex, allow replacement of default generated
          filenames by pattern matching with regular expressions.
          And finally, two more, --exec-export-include,
          overrides the default generated export macro header file,
          and --exec-export-macro, overrides the default generated
          export macro for the executor implementation file.

        * CIDLC/Literals.cpp:
        * CIDLC/Literals.hpp:
        * CIDLC/ServantGenerator.cpp:
        * CIDLC/ServantHeaderGenerator.cpp:
        * CIDLC/ServantHeaderGenerator.hpp:
        * CIDLC/ServantSourceGenerator.cpp:
        * CIDLC/TypeNameEmitter.cpp:
        * CIDLC/TypeNameEmitter.hpp:
        * CIDLC/cidlc.cpp:

          - Added generation of (unimplemented) home finder
            operations.

          - Filled gaps and organized the command line options
            for servant filename suffixes and regular expressions
            to replace default generated filenames.

          - Added a new type name emitter that generates the
            appropriate NULL return value for any type.

        * tests/CIDL/CodeGen/Basic.idl:
        * tests/CIDL/CodeGen/Basic_stub_export.h:
        * tests/CIDL/CodeGen/Basic_svnt_export.h:
        * tests/CIDL/CodeGen/CodeGen.cidl:
        * tests/CIDL/CodeGen/CodeGen.idl:
        * tests/CIDL/CodeGen/CodeGen.mpc:
        * tests/CIDL/CodeGen/CodeGen_exec_export.h:
        * tests/CIDL/CodeGen/CodeGen_stub_export.h:
        * tests/CIDL/CodeGen/CodeGen_svnt_export.h:
        * tests/CIDL/CodeGen/README:

          New test, for servant and executor implemtation code
          generation of the CIDL compiler. This test target
          correct code generation for many component-specific
          features of IDL - catching operations and attributes
          for supported interfaces, operations and attributes
          for parents of supported interfaces, home operations
          from base homes, inherited home factory and finder
          operations, etc. The object of the test is to check
          that the generated code builds and links successfully.

Thu Aug  5 15:49:10 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* DAnCE/tests/NodeApplicationTest/RoundTrip_exec.h:

	  Made destructors in reference count enabled classes protected to
	  enforce proper memory management through the reference counting
	  mechansism (i.e. prevent directly calling operator delete() on
	  the reference counted object).

	  (cube_long):
	* DAnCE/tests/NodeApplicationTest/RoundTrip_exec.cpp (cube_long):
	* performance-tests/Benchmark/RoundTrip/RoundTrip_exec.h
	  (makeCall):
	* performance-tests/Benchmark/RoundTrip/RoundTrip_exec.cpp
	  (makeCall):

	  Added missing emulated exception parameter.  Fixes compile-time
	  errors in emulated exception builds.

	* examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.cpp
	  (ccm_activate):

	  Corrected emulated excepton parameter.  Fixes a compile-time
	  error in emulated exception builds.

	* performance-tests/Protocols/Controller/Controller.mpc:
	* tests/RTCCM/DiffServ/Receiver/Receiver.mpc
	  (DiffServ_Receiver_exec):
	* tests/RTCCM/DiffServ/Sender/Sender.mpc (DiffServ_Sender_exec):

	  Added missing "requires += exceptions".  These tests will not
	  compile in emulated exception configurations.

	* performance-tests/Benchmark/RoundTrip/RoundTrip_exec.cpp
	  (get_latency):

	  Fixed unused parameter warning in emulated exception builds.

Thu Aug  5 11:48:49 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* performance-tests/Protocols/Controller/Controller.mpc:

	  Corrected library link order.  Addresses undefined reference
	  link-time errors in static builds.

	* tools/XML_Helpers/XMLHelpers.mpc (Helper_Test):

	  Added missing TAO_IFR_Client library to "libs" variable.
	  Addresses undefined reference link-time errors in static
	  builds.

Thu Aug  5 13:28:49 2004  Will Otte <wotte@dre.vanderbilt.edu>

	* docs/schema/ciaopolicy.xsd:

	  Schema describing ORB policy configurations.

Thu Aug  5 11:56:03 2004  Jeff Parsons <j.parsons@vanderbilt.edu>

        * CCF/CCF/CodeGenerationKit/IndentationImplanter.hpp:

          Changed template template parameter of class Implanter from
          "Buffer" to "BufferType" because the former was causing a
          problem with VC 7.1 clashing with a class Buffer in another
          file.

Thu Aug  5 08:48:50 2004  Krishnakumar B  <kitty@nospam.invalid.domain>

        * CIAO-INSTALL.html: Updated to reflect dependency on Xerces and
          native exceptions.

Wed Aug  4 22:50:17 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* examples/Hello/Sender/Sender.mpc (Hello_Starter):
	* performance-tests/Protocols/Controller/Controller.mpc (perf):
	* tools/XML_Helpers/XMLHelpers.mpc (Helper_Test):

	  Fixed static build link-time errors caused by not linking the
	  appropriate libraries.

Wed Aug  4 22:31:24 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* docs/tutorial/Hello/client.cpp (main):

	  Fixed typo that caused a syntax error.

Wed Aug  4 17:24:18 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* examples/OEP/Display/RateGen/RateGen_exec.cpp (create):
	* performance-tests/Benchmark/LatencyTest.cpp (makeCall):
	* performance-tests/Benchmark/RoundTripServer/LatencyTest.cpp
	  (makeCall):
	* tests/RTCCM/Priority_Test/Controllers/Rate_Controller.cpp
	  (create):
	* tests/RTCCM/Priority_Test/Workers/CB_Worker_exec.cpp:
	* tests/RTCCM/Priority_Test/Workers/IOB_Worker_exec.cpp:

	  Fixued unused parameter warnings.

	* docs/tutorial/Hello/hello_exec.cpp:
	* performance-tests/Benchmark/RoundTrip/RoundTrip_exec.cpp:

	  Fixed emulated exception usage.

	  Fixed unused argument warnings.

	* docs/tutorial/Hello/client.cpp (main):
	* docs/tutorial/Hello/simple_client.cpp (main):
	* performance-tests/Benchmark/Multi_Threaded/client.cpp (main):
	* performance-tests/Benchmark/RoundTrip/client.cpp (main):
	* performance-tests/Benchmark/RoundTripClient/client.cpp (main):

	  Fixed CORBA::ORB_init() arguments in emulated exception case.

	  Added missing ACE_TRY_CHECK after CORBA::ORB_init() call.

	* performance-tests/Benchmark/RoundTripClient/RoundTripClient_exec.cpp
	  (start):

	  Fixed emulated exception usage.

	  Added missing emulated exception parameter.  Fixes a
	  compile-time error.

	  Fixed unused parameter warnings.

	* tests/RTCCM/DiffServ/Sender/Sender_exec.cpp:

	  Include "ace/OS_NS_unistd.h" to pull in ACE_OS::sleep()
	  declaration.

	* tests/RTCCM/Priority_Test/Controllers/Controller_exec.cpp:

	  Include "ace/OS_NS_stdio.h" to pull in ACE_OS::snprintf()
	  declaration.

	  Fixed unused parameter warnings.

Wed Aug  4 16:43:43 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

	* DAnCE/tests/NodeApplicationTest/RoundTrip_exec.cpp:
	* examples/OEP/Display/NavDisplayGUI_exec/NavDisplayGUI_exec.cpp
	  (push_Refresh):

	  Fixed emulated exception usage.

	  Fixed unused parameter warnings.

	* examples/OEP/BasicSP/EC/EC_exec.cpp (pulse):

	  Added missing ACE_TRY_CHECK emulated exception macro.  Fixes
	  warning about unused "ACE_TRY_LABEL" label.

	* examples/OEP/Display/RateGen/client.cpp:

	  Include "ace/OS_NS_unistd.h" to pull in ACE_OS::sleep()
	  declaration.

	* examples/Hello/Receiver/Receiver_exec.cpp (ccm_activate):
	* examples/OEP/BasicSP/BMClosedED/BMClosedED_exec.cpp
	  (ccm_activate):
	* examples/OEP/BasicSP/BMDevice/BMDevice_exec.cpp (ccm_activate):
	* examples/OEP/BasicSP/BMDisplay/BMDisplay_exec.cpp
	  (ccm_activate):
	* examples/OEP/Display/GPS/GPS_exec.cpp (get_MyLocation, posx):
	  (posy, create):
	* examples/OEP/Display/GPS/GPS_tracing_exec.cpp (get_MyLocation):
	  (posx, posy, create):
	* examples/OEP/Display/NavDisplay/NavDisplay_exec.cpp
	  (ccm_activate):
	* examples/OEP/Display/NavDisplayGUI_exec/AddNavUnitCmd.cpp
	  (execute):
	* examples/OEP/Display/NavDisplayGUI_exec/NodeItem.cpp (moveBy):
	* examples/OEP/Display/NavDisplayGUI_exec/QuitCmd.cpp (execute):

	  Fixed unused parameter warnings.

Wed Aug  4 11:16:47 2004  Will Otte <wotte@dre.vanderbilt.edu>

	* Components/ComplexComponent/Attributes/Attributes.idl:
	* Homes/Attributes/HomeAttributes.idl:
	* ImpliedIDL/Components/Basic/ICBasic.idl:
	* Homes/Finder/Finder.idl:
	* ImpliedIDL/Components/EventSink/ICEventSink.idl:
	* ImpliedIDL/Components/EventSource/ICEventSource.idl:
	* ImpliedIDL/Components/Receptacles/ICReceptacles.idl:

	  Addressed some build errors on the Fuzz build.

	* Components/ComplexComponent/Attributes/AttributesS.cpp:
	* Components/ComplexComponent/EventSink/EventSinkS.cpp:
	* Components/ComplexComponent/EventSource/EventSourceS.cpp:
	* Components/ComplexComponent/Facets/FacetsS.cpp:
	* Components/ComplexComponent/Receptacles/ReceptaclesS.cpp:
	* Components/SimpleComponent/SimpleComponentS.cpp:
	* Events/Abstract/AbstractS.cpp:
	* Events/Regular/RegularS.cpp:
	* Homes/Attributes/HomeAttributesS.cpp:
	* Homes/Basic/BasicS.cpp:
	* Homes/Factory/FactoryS.cpp:
	* Homes/Finder/FinderS.cpp:
	* Homes/Inheritance/InheritanceS.cpp:
	* ImpliedIDL/Components/Basic/ICBasicS.cpp:
	* ImpliedIDL/Components/EventSink/ICEventSinkS.cpp:
	* ImpliedIDL/Components/EventSource/ICEventSourceS.cpp:
	* ImpliedIDL/Components/Receptacles/ICReceptaclesS.cpp:
	* ImpliedIDL/Events/EventsS.cpp:
	* ImpliedIDL/Homes/HomesS.cpp:

	  Removed a bunch of generated code from the repository.

Tue Aug  3 20:18:48 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* docs/schema/cid.xsd:
	* docs/schema/Deployment.xsd:

	  Added some tweaks.

Tue Aug  3 14:25:44 2004  Will Otte <wotte@dre.vanderbilt.edu>

	* IDL3/Components/ComplexComponent/Attributes/Attributes.idl:
	* IDL3/Components/ComplexComponent/Attributes/Attributes.mpc:
	* IDL3/Components/ComplexComponent/Attributes/AttributesS.cpp:
	* IDL3/Components/ComplexComponent/Attributes/Attributes_stub_export.h:
	* IDL3/Components/ComplexComponent/Attributes/Attributes_svnt_export.h:
	* IDL3/Components/ComplexComponent/EventSink/EventSink.idl:
	* IDL3/Components/ComplexComponent/EventSink/EventSink.mpc:
	* IDL3/Components/ComplexComponent/EventSink/EventSinkS.cpp:
	* IDL3/Components/ComplexComponent/EventSink/EventSink_stub_export.h:
	* IDL3/Components/ComplexComponent/EventSink/EventSink_svnt_export.h:
	* IDL3/Components/ComplexComponent/EventSource/EventSource.idl:
	* IDL3/Components/ComplexComponent/EventSource/EventSource.mpc:
	* IDL3/Components/ComplexComponent/EventSource/EventSourceS.cpp:
	* IDL3/Components/ComplexComponent/EventSource/EventSource_stub_export.h:
	* IDL3/Components/ComplexComponent/EventSource/EventSource_svnt_export.h:
	* IDL3/Components/ComplexComponent/Facets/Facets.idl:
	* IDL3/Components/ComplexComponent/Facets/Facets.mpc:
	* IDL3/Components/ComplexComponent/Facets/FacetsS.cpp:
	* IDL3/Components/ComplexComponent/Facets/Facets_stub_export.h:
	* IDL3/Components/ComplexComponent/Facets/Facets_svnt_export.h:
	* IDL3/Components/ComplexComponent/Receptacles/Receptacles.idl:
	* IDL3/Components/ComplexComponent/Receptacles/Receptacles.mpc:
	* IDL3/Components/ComplexComponent/Receptacles/ReceptaclesS.cpp:
	* IDL3/Components/ComplexComponent/Receptacles/Receptacles_stub_export.h:
	* IDL3/Components/ComplexComponent/Receptacles/Receptacles_svnt_export.h:
	* IDL3/Components/SimpleComponent/SimpleComponent.idl:
	* IDL3/Components/SimpleComponent/SimpleComponent.mpc:
	* IDL3/Components/SimpleComponent/SimpleComponentS.cpp:
	* IDL3/Components/SimpleComponent/SimpleComponent_exec_export.h:
	* IDL3/Components/SimpleComponent/SimpleComponent_stub_export.h:
	* IDL3/Components/SimpleComponent/SimpleComponent_svnt_export.h:
	* IDL3/Events/Abstract/Abstract.idl:
	* IDL3/Events/Abstract/Abstract.mpc:
	* IDL3/Events/Abstract/AbstractS.cpp:
	* IDL3/Events/Abstract/Abstract_stub_export.h:
	* IDL3/Events/Abstract/Abstract_svnt_export.h:
	* IDL3/Events/Regular/Regular.idl:
	* IDL3/Events/Regular/Regular.mpc:
	* IDL3/Events/Regular/RegularS.cpp:
	* IDL3/Events/Regular/Regular_stub_export.h:
	* IDL3/Events/Regular/Regular_svnt_export.h:
	* IDL3/Homes/Attributes/HomeAttributes.idl:
	* IDL3/Homes/Attributes/HomeAttributes.mpc:
	* IDL3/Homes/Attributes/HomeAttributesS.cpp:
	* IDL3/Homes/Attributes/HomeAttributes_stub_export.h:
	* IDL3/Homes/Attributes/HomeAttributes_svnt_export.h:
	* IDL3/Homes/Basic/Basic.idl:
	* IDL3/Homes/Basic/Basic.mpc:
	* IDL3/Homes/Basic/BasicS.cpp:
	* IDL3/Homes/Basic/Basic_stub_export.h:
	* IDL3/Homes/Basic/Basic_svnt_export.h:
	* IDL3/Homes/Factory/Factory.idl:
	* IDL3/Homes/Factory/Factory.mpc:
	* IDL3/Homes/Factory/FactoryS.cpp:
	* IDL3/Homes/Factory/Factory_stub_export.h:
	* IDL3/Homes/Factory/Factory_svnt_export.h:
	* IDL3/Homes/Finder/Finder.idl:
	* IDL3/Homes/Finder/Finder.mpc:
	* IDL3/Homes/Finder/FinderS.cpp:
	* IDL3/Homes/Finder/Finder_stub_export.h:
	* IDL3/Homes/Finder/Finder_svnt_export.h:
	* IDL3/Homes/Inheritance/Inheritance.idl:
	* IDL3/Homes/Inheritance/Inheritance.mpc:
	* IDL3/Homes/Inheritance/InheritanceS.cpp:
	* IDL3/Homes/Inheritance/Inheritance_stub_export.h:
	* IDL3/Homes/Inheritance/Inheritance_svnt_export.h:
	* IDL3/ImpliedIDL/Components/Basic/ICBasic.idl:
	* IDL3/ImpliedIDL/Components/Basic/ICBasic.mpc:
	* IDL3/ImpliedIDL/Components/Basic/ICBasicS.cpp:
	* IDL3/ImpliedIDL/Components/Basic/ICBasic_stub_export.h:
	* IDL3/ImpliedIDL/Components/Basic/ICBasic_svnt_export.h:
	* IDL3/ImpliedIDL/Components/EventSink/ICEventSink.idl:
	* IDL3/ImpliedIDL/Components/EventSink/ICEventSink.mpc:
	* IDL3/ImpliedIDL/Components/EventSink/ICEventSinkS.cpp:
	* IDL3/ImpliedIDL/Components/EventSink/ICEventSink_stub_export.h:
	* IDL3/ImpliedIDL/Components/EventSink/ICEventSink_svnt_export.h:
	* IDL3/ImpliedIDL/Components/EventSource/ICEventSource.idl:
	* IDL3/ImpliedIDL/Components/EventSource/ICEventSource.mpc:
	* IDL3/ImpliedIDL/Components/EventSource/ICEventSourceS.cpp:
	* IDL3/ImpliedIDL/Components:

	  Various tests of compilation for IDL3 constructs.

Tue Aug  3 18:36:10 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* docs/schema/README.html:

	  File explaining what these new descriptors mean.

 	* docs/schema/Basic_Deployment_Data.xsd:
	* docs/schema/Deployment.xsd:
	* docs/schema/Modified_Deployment.xsd:
	* docs/schema/Spec_Defined_Deployment.xsd:
	* docs/schema/Spec_Defined_XMI.xsd:
	* docs/schema/ccd.xsd:
	* docs/schema/cdd.xsd:
	* docs/schema/cdp.xsd:
	* docs/schema/cid.xsd:
	* docs/schema/cpd.xsd:
	* docs/schema/iad.xsd:
	* docs/schema/pcd.xsd:
	* docs/schema/toplevel.xsd:
	* docs/schema/unused_elements.xsd:

	  Sets of schemata that will be used in DAnCE. The meaning of
	  these different schemata have been documented in the
	  README.html.

Sun Aug  1 09:30:37 2004  Balachandran Natarajan  <bala@dre.vanderbilt.edu>

	* ChangeLogs:

	  Created a new directory and moved a bunch of ChangeLog entries
	  there.

Sat Jul 31 11:15:15 2004  Ossama Othman  <ossama@dre.vanderbilt.edu>

        * CIAO version 0.4.2 released.

Local Variables:
add-log-time-format: current-time-string
End:
