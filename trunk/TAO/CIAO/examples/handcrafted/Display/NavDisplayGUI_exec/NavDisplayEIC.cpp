// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:351


#include "NavDisplayEIC.h"
#include "tao/Stub.h"
#include "tao/Invocation.h"
#include "tao/PortableInterceptor.h"

#if TAO_HAS_INTERCEPTORS == 1
#include "tao/RequestInfo_Util.h"
#include "tao/ClientRequestInfo_i.h"
#include "tao/ClientInterceptorAdapter.h"
#endif  /* TAO_HAS_INTERCEPTORS == 1 */


#if defined (__BORLANDC__)
#pragma option -w-rvl -w-rch -w-ccc -w-aus -w-sig
#endif /* __BORLANDC__ */

#if !defined (__ACE_INLINE__)
#include "NavDisplayEIC.i"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:63

int HUDisplay::NavDisplay_Exec::_tao_class_id = 0;

HUDisplay::NavDisplay_Exec_ptr
HUDisplay::tao_NavDisplay_Exec_life::tao_duplicate (
    NavDisplay_Exec_ptr p
  )
{
  return NavDisplay_Exec::_duplicate (p);
}

void
HUDisplay::tao_NavDisplay_Exec_life::tao_release (
    NavDisplay_Exec_ptr p
  )
{
  CORBA::release (p);
}

HUDisplay::NavDisplay_Exec_ptr
HUDisplay::tao_NavDisplay_Exec_life::tao_nil (
    void
  )
{
  return NavDisplay_Exec::_nil ();
}

CORBA::Boolean
HUDisplay::tao_NavDisplay_Exec_life::tao_marshal (
    NavDisplay_Exec_ptr p,
    TAO_OutputCDR &cdr
  )
{
  return p->marshal (cdr);
}

HUDisplay::NavDisplay_Exec_ptr
HUDisplay::tao_NavDisplay_Exec_cast::tao_narrow (
    CORBA::Object *p
    ACE_ENV_ARG_DECL
  )
{
  return NavDisplay_Exec::_narrow (p ACE_ENV_ARG_PARAMETER);
}

CORBA::Object *
HUDisplay::tao_NavDisplay_Exec_cast::tao_upcast (
    void *src
  )
{
  NavDisplay_Exec **tmp =
    ACE_static_cast (NavDisplay_Exec **, src);
  return *tmp;
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)
  template class
    TAO_Objref_Var_T<
        HUDisplay::NavDisplay_Exec,
        HUDisplay::tao_NavDisplay_Exec_life
      >;
  template class
    TAO_Objref_Out_T<
        HUDisplay::NavDisplay_Exec,
        HUDisplay::tao_NavDisplay_Exec_life
      >;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate \
    TAO_Objref_Var_T< \
        HUDisplay::NavDisplay_Exec, \
        HUDisplay::tao_NavDisplay_Exec_life \
      >
# pragma instantiate \
    TAO_Objref_Out_T< \
        HUDisplay::NavDisplay_Exec, \
        HUDisplay::tao_NavDisplay_Exec_life \
      >
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

// TAO_IDL - Generated from 
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_cs.cpp:245

HUDisplay::NavDisplay_Exec::NavDisplay_Exec (void)
{}

HUDisplay::NavDisplay_Exec::~NavDisplay_Exec (void)
{}

void 
HUDisplay::NavDisplay_Exec::_tao_any_destructor (void *_tao_void_pointer)
{
  NavDisplay_Exec *tmp = ACE_static_cast (NavDisplay_Exec *, _tao_void_pointer);
  CORBA::release (tmp);
}

HUDisplay::NavDisplay_Exec_ptr
HUDisplay::NavDisplay_Exec::_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL
  )
{
  return NavDisplay_Exec::_unchecked_narrow (obj ACE_ENV_ARG_PARAMETER);
}

HUDisplay::NavDisplay_Exec_ptr 
HUDisplay::NavDisplay_Exec::_unchecked_narrow (
    CORBA::Object_ptr obj
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (obj))
    {
      return NavDisplay_Exec::_nil ();
    }
  
  return
      ACE_reinterpret_cast (
          NavDisplay_Exec_ptr,
          obj->_tao_QueryInterface (
              ACE_reinterpret_cast (
                  ptrdiff_t,
                  &NavDisplay_Exec::_tao_class_id
                )
            )
        );
}

HUDisplay::NavDisplay_Exec_ptr
HUDisplay::NavDisplay_Exec::_duplicate (NavDisplay_Exec_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

void *HUDisplay::NavDisplay_Exec::_tao_QueryInterface (ptrdiff_t type)
{
  void *retv = 0;
  
  if (type == ACE_reinterpret_cast (
              ptrdiff_t,
              &ACE_NESTED_CLASS (::HUDisplay, NavDisplay_Exec)::_tao_class_id)
            )
    {
      retv = ACE_reinterpret_cast (void*, this);
    }
  else if (type == ACE_reinterpret_cast (
              ptrdiff_t,
              &::HUDisplay::CCM_NavDisplay::_tao_class_id)
            )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (
                HUDisplay::CCM_NavDisplay_ptr,
                this
              )
          );
    }
  else if (type == ACE_reinterpret_cast (
              ptrdiff_t,
              &::Components::SessionComponent::_tao_class_id)
            )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (
                Components::SessionComponent_ptr,
                this
              )
          );
    }
  else if (type == ACE_reinterpret_cast (
              ptrdiff_t,
              &::Components::EnterpriseComponent::_tao_class_id)
            )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (
                Components::EnterpriseComponent_ptr,
                this
              )
          );
    }
  else if (type == ACE_reinterpret_cast (
               ptrdiff_t,
               &CORBA::Object::_tao_class_id)
             )
    {
      retv =
        ACE_reinterpret_cast (
            void *,
            ACE_static_cast (CORBA::Object_ptr, this)
          );
    }
  
  if (retv != 0)
    {
      this->_add_ref ();
    }
  
  return retv;
}

const char* HUDisplay::NavDisplay_Exec::_interface_repository_id (void) const
{
  return "IDL:HUDisplay/NavDisplay_Exec:1.0";
}

CORBA::Boolean
HUDisplay::NavDisplay_Exec::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_HUDisplay_NavDisplay_Exec[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  34,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x48554469), 
  ACE_NTOHL (0x73706c61), 
  ACE_NTOHL (0x792f4e61), 
  ACE_NTOHL (0x76446973), 
  ACE_NTOHL (0x706c6179), 
  ACE_NTOHL (0x5f457865), 
  ACE_NTOHL (0x633a312e), 
  ACE_NTOHL (0x30000000),  // repository ID = IDL:HUDisplay/NavDisplay_Exec:1.0
    16,
  ACE_NTOHL (0x4e617644), 
  ACE_NTOHL (0x6973706c), 
  ACE_NTOHL (0x61795f45), 
  ACE_NTOHL (0x78656300),  // name = NavDisplay_Exec
  };

static CORBA::TypeCode _tc_TAO_tc_HUDisplay_NavDisplay_Exec (
    CORBA::tk_objref,
    sizeof (_oc_HUDisplay_NavDisplay_Exec),
    (char *) &_oc_HUDisplay_NavDisplay_Exec,
    0,
    sizeof (HUDisplay::NavDisplay_Exec)
  );

TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
TAO_NAMESPACE_BEGIN (HUDisplay)
TAO_NAMESPACE_DEFINE (
    ::CORBA::TypeCode_ptr,
    _tc_NavDisplay_Exec,
    &_tc_TAO_tc_HUDisplay_NavDisplay_Exec
  )
TAO_NAMESPACE_END

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_cs.cpp:50

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    HUDisplay::NavDisplay_Exec_ptr _tao_elem
  )
{
  HUDisplay::NavDisplay_Exec_ptr _tao_objptr =
    HUDisplay::NavDisplay_Exec::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    HUDisplay::NavDisplay_Exec_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<HUDisplay::NavDisplay_Exec>::insert (
      _tao_any,
      HUDisplay::NavDisplay_Exec::_tao_any_destructor,
      HUDisplay::_tc_NavDisplay_Exec,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    HUDisplay::NavDisplay_Exec_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<HUDisplay::NavDisplay_Exec>::extract (
        _tao_any,
        HUDisplay::NavDisplay_Exec::_tao_any_destructor,
        HUDisplay::_tc_NavDisplay_Exec,
        _tao_elem
      );
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
    defined (ACE_HAS_GNU_REPO)
  template class TAO::Any_Impl_T<HUDisplay::NavDisplay_Exec>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
# pragma instantiate TAO::Any_Impl_T<HUDisplay::NavDisplay_Exec>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */

