 $Id$

This directory contains a multi-component examples.  We will likely
evolve this example in the future to show case how easy it is to
configure and assemble a new application using component.

The starting example is an imaginary car (software) instrument
assembly which updates the display of current coordination of the car
periodically.  It consists of 3 components as shown in
<Configuration-0.png>.

These components are all placed under their own subdirectories:

* RateGen - A component that allows it's client to start/stop the rate
            generating event.

* GPS - A component that interact with GPS hardware.  When this
        component receives an event from the Refresh port, it will
        query the GPS hardware and updates the internal cached
        coordinations (so that the current location can be read by
        accessing the MyLocation interface,) and generates an event on
        its Ready port to inform the event consumers that a new GPS
        reading is available.

* NavDisplay - A navigation display component that projects the
               current location of the vehicle on the windshield.
               When a navDisplay receives an event notifying the
               availability of new data on its Refresh port, it will
               acquire the current location of the vehicle by querying
               the interface connected to the GetLocation receptacle.

---------------------------------------------------------------------

      This example does not yet use MPC to generate MSVC 
projects/workspaces/solutions or makefiles - we are still
working on getting the execution of the CIDL compiler
integrated into MPC. The CIDL compiler execution has
been added to MSVC projects, which for now are checked
into the CVS repository. CIDL compiler execution is not yet
integrated with makefiles. The CIDL compiler can be executed by
hand before starting the build for either this example or the
example in ACE_ROOT/TAO/CIAO/examples/OEP/BasicSP.

        Compilation of the CIDL compiler source code requires the
Boost library, which is not included in this distribution of
ACE+TAO+CIAO. The Boost library is available at

http://www.boost.org

        Alternatively, a binary executable of the CIAO
CIDL compiler can be downloaded from

http://www.dre.vanderbilt.edu/CIAO/CIDL.html

Versions are available at the above site for Linux and Windows.

