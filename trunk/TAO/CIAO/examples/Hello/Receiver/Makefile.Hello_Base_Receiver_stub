#----------------------------------------------------------------------------
#       GNU Makefile
#
# @file Makefile.Hello_Base_Receiver_stub
#
# $Id$
#
# This file was automatically generated by MPC.  Any changes made directly to
# this file will be lost the next time it is generated.
#
#----------------------------------------------------------------------------
MAKEFILE         = Makefile.Hello_Base_Receiver_stub
DEPENDENCY_FILE  = .depend.Makefile.Hello_Base_Receiver_stub

## LIB may be set to empty later on in this file
LIB_UNCHECKED    = libReceiver_stub.a
LIB              = $(LIB_UNCHECKED)

## SHLIB may be set to empty later on in this file
SHLIB_UNCHECKED  = libReceiver_stub.$(SOEXT)
SHLIB            = $(SHLIB_UNCHECKED)

ifndef TAO_ROOT
  TAO_ROOT = $(ACE_ROOT)/TAO
endif
ifndef CIAO_ROOT
  CIAO_ROOT = $(TAO_ROOT)/CIAO
endif

TAO_IDL = $(ACE_ROOT)/bin/tao_idl
IDL_FILES = Receiver
IDL_SRC = $(foreach ext, C.cpp S.cpp, $(foreach file, $(IDL_FILES), $(file)$(ext)))

FILES = \
  ReceiverC

#----------------------------------------------------------------------------
#       Include macros and targets
#----------------------------------------------------------------------------
ACE_SHLIBS = -lHello_Base_stub -lCIAO_Client -lTAO_Security -lTAO_PortableServer -lTAO_IORInterceptor -lTAO_ObjRefTemplate -lTAO_Valuetype -lTAO_IFR_Client -lTAO -lACE
include $(ACE_ROOT)/include/makeinclude/wrapper_macros.GNU
## We don't need the ACELIB setting from wrapper_macros.GNU
ACELIB =
include $(TAO_ROOT)/rules.tao.GNU

# To build multiple executables in the same directory on AIX, it works
# best to have a template directory per project.
# The compiler/linker isn't too smart about instantiating templates...
ifdef TEMPINCDIR
TEMPINCDIR := $(TEMPINCDIR)/Hello_Base_Receiver_stub

all: $(TEMPINCDIR)

$(TEMPINCDIR):
	@-test -d $(TEMPINCDIR) || mkdir -p $(TEMPINCDIR) $(ACE_NUL_STDERR)

endif
OUTPUT_DIRECTORY = $(ACE_ROOT)/lib
all: $(OUTPUT_DIRECTORY)

$(OUTPUT_DIRECTORY):
	-@mkdir -p "$(OUTPUT_DIRECTORY)"

CURRENT_COMPONENTS := $(shell sh $(ACE_ROOT)/bin/ace_components --orbsvcs)
ifeq (Security, $(findstring Security, $(CURRENT_COMPONENTS)))
else
  LIB   =
  SHLIB =
  all: comp_warning
endif

ifeq (,$(TAO_ORBSVCS))
else
  ifeq (Security, $(findstring Security, $(TAO_ORBSVCS)))
  else
    LIB   =
    SHLIB =
  endif
endif

ifneq (,$(RC))
  FILES += $(RESOURCES)
endif

LSRC   = $(addsuffix .cpp, $(FILES))

ifneq ($(SHLIB),)
all: idl_stubs

# This rule forces make to run the idl_stubs
# target before building any of the source files.
ReceiverC.cpp: idl_stubs
endif

include $(ACE_ROOT)/include/makeinclude/macros.GNU
include $(ACE_ROOT)/include/makeinclude/rules.common.GNU
include $(ACE_ROOT)/include/makeinclude/rules.nonested.GNU

INSTALL_CHECK = $(ACE_ROOT)/lib
ifeq ($(INSTALL_CHECK),.)
  ifeq ($(PWD),)
    PWD=$(shell pwd)
  endif
  INSLIB = $(PWD)
else
  INSLIB  = $(INSTALL_CHECK)
endif

include $(ACE_ROOT)/include/makeinclude/rules.lib.GNU
include $(ACE_ROOT)/include/makeinclude/rules.local.GNU
include $(TAO_ROOT)/taoconfig.mk

CPPFLAGS     += -I$(CIAO_ROOT) -I$(CIAO_ROOT)/ciao -I$(TAO_ROOT)/orbsvcs/orbsvcs -I$(TAO_ROOT)/orbsvcs -I$(TAO_ROOT) -I$(TAO_ROOT)/tao -I$(ACE_ROOT)
ifeq ($(shared_libs),1)
  ifneq ($(SHLIB),)
    CPPFLAGS += -DRECEIVER_STUB_BUILD_DLL
  endif
endif
ifeq ($(static_libs),1)
  ifneq ($(LIB),)
    CPPFLAGS += -DTAO_AS_STATIC_LIBS -DTAO_AS_STATIC_LIBS -DACE_AS_STATIC_LIBS
  endif
endif


LDFLAGS      += -L$(ACE_ROOT)/lib

TAO_IDLFLAGS += -Wb,stub_export_macro=RECEIVER_STUB_Export -Wb,stub_export_include=Receiver_stub_export.h -Wb,skel_export_macro=RECEIVER_SVNT_Export -Wb,skel_export_include=Receiver_svnt_export.h -I$(CIAO_ROOT) -I$(TAO_ROOT)/CIAO/ciao -I$(TAO_ROOT)/orbsvcs/orbsvcs -Gv -I$(TAO_ROOT) -I$(TAO_ROOT)/orbsvcs -Ge 1 -Sc -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h
#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------
comp_warning:
	@echo This project will not be built due to one of the following missing components:
	@echo Security


ADDITIONAL_IDL_TARGETS =
# IDL File Directory: .

ifneq ($(ADDITIONAL_IDL_TARGETS),)
idl_stubs: $(ADDITIONAL_IDL_TARGETS)
endif

.PRECIOUS: $(foreach ext, $(IDL_EXT), $(foreach file, $(IDL_FILES), $(file)$(ext)))

realclean: clean 
	-$(RM) $(foreach ext, $(IDL_EXT), $(foreach file, $(IDL_FILES), $(file)$(ext)))
ifneq ($(GENERATED_DIRTY),)
	-$(RM) -r $(GENERATED_DIRTY)
endif

