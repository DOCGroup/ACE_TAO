##  Process this file with automake to create Makefile.in
##
## $Id$
##
## This file was generated by MPC.  Any changes made directly to
## this file will be lost the next time it is generated.
##
## MPC Command:
## ../bin/mwc.pl -type automake -noreldefs TAO.mwc

ACE_BUILDDIR = $(top_builddir)/..
ACE_ROOT = $(top_srcdir)/..
TAO_BUILDDIR = $(top_builddir)
TAO_IDL = ACE_ROOT=$(ACE_ROOT) TAO_ROOT=$(TAO_ROOT) $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDL_DEP = $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDLFLAGS = -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I$(TAO_ROOT) -I$(srcdir) -g $(ACE_BUILDDIR)/apps/gperf/src/ace_gperf
TAO_ROOT = $(top_srcdir)

CLEANFILES =
BUILT_SOURCES =

## Makefile.csd_pt_testinf.am

if BUILD_EXCEPTIONS
if BUILD_THREADS

BUILT_SOURCES += \
  FooExceptionC.cpp \
  FooExceptionC.h \
  FooExceptionC.inl \
  FooExceptionS.cpp \
  FooExceptionS.h \
  FooExceptionS.inl

CLEANFILES += \
  FooException-stamp \
  FooExceptionC.cpp \
  FooExceptionC.h \
  FooExceptionC.inl \
  FooExceptionS.cpp \
  FooExceptionS.h \
  FooExceptionS.inl

FooExceptionC.cpp FooExceptionC.h FooExceptionC.inl FooExceptionS.cpp FooExceptionS.h FooExceptionS.inl: FooException-stamp

FooException-stamp: $(srcdir)/FooException.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,export_macro=CSD_PT_TestInf_Export -Wb,export_include=TestInf/CSD_PT_TestInf_Export.h $(srcdir)/FooException.idl
	@touch $@

BUILT_SOURCES += \
  TestAppExceptionC.cpp \
  TestAppExceptionC.h \
  TestAppExceptionC.inl \
  TestAppExceptionS.cpp \
  TestAppExceptionS.h \
  TestAppExceptionS.inl

CLEANFILES += \
  TestAppException-stamp \
  TestAppExceptionC.cpp \
  TestAppExceptionC.h \
  TestAppExceptionC.inl \
  TestAppExceptionS.cpp \
  TestAppExceptionS.h \
  TestAppExceptionS.inl

TestAppExceptionC.cpp TestAppExceptionC.h TestAppExceptionC.inl TestAppExceptionS.cpp TestAppExceptionS.h TestAppExceptionS.inl: TestAppException-stamp

TestAppException-stamp: $(srcdir)/TestAppException.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,export_macro=CSD_PT_TestInf_Export -Wb,export_include=TestInf/CSD_PT_TestInf_Export.h $(srcdir)/TestAppException.idl
	@touch $@

BUILT_SOURCES += \
  CancelledExceptionC.cpp \
  CancelledExceptionC.h \
  CancelledExceptionC.inl \
  CancelledExceptionS.cpp \
  CancelledExceptionS.h \
  CancelledExceptionS.inl

CLEANFILES += \
  CancelledException-stamp \
  CancelledExceptionC.cpp \
  CancelledExceptionC.h \
  CancelledExceptionC.inl \
  CancelledExceptionS.cpp \
  CancelledExceptionS.h \
  CancelledExceptionS.inl

CancelledExceptionC.cpp CancelledExceptionC.h CancelledExceptionC.inl CancelledExceptionS.cpp CancelledExceptionS.h CancelledExceptionS.inl: CancelledException-stamp

CancelledException-stamp: $(srcdir)/CancelledException.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,export_macro=CSD_PT_TestInf_Export -Wb,export_include=TestInf/CSD_PT_TestInf_Export.h $(srcdir)/CancelledException.idl
	@touch $@

BUILT_SOURCES += \
  CustomExceptionC.cpp \
  CustomExceptionC.h \
  CustomExceptionC.inl \
  CustomExceptionS.cpp \
  CustomExceptionS.h \
  CustomExceptionS.inl

CLEANFILES += \
  CustomException-stamp \
  CustomExceptionC.cpp \
  CustomExceptionC.h \
  CustomExceptionC.inl \
  CustomExceptionS.cpp \
  CustomExceptionS.h \
  CustomExceptionS.inl

CustomExceptionC.cpp CustomExceptionC.h CustomExceptionC.inl CustomExceptionS.cpp CustomExceptionS.h CustomExceptionS.inl: CustomException-stamp

CustomException-stamp: $(srcdir)/CustomException.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Wb,export_macro=CSD_PT_TestInf_Export -Wb,export_include=TestInf/CSD_PT_TestInf_Export.h $(srcdir)/CustomException.idl
	@touch $@

noinst_LTLIBRARIES = libCSD_PT_TestInf.la

libCSD_PT_TestInf_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/tao \
  -I$(TAO_ROOT)/performance-tests/CSD_Strategy \
  -I$(TAO_BUILDDIR)/performance-tests/CSD_Strategy \
  -DCSD_PT_TESTINF_BUILD_DLL

libCSD_PT_TestInf_la_SOURCES = \
  AppHelper.cpp \
  AppShutdown.cpp \
  CancelledExceptionC.cpp \
  CancelledExceptionS.cpp \
  ClientEngine.cpp \
  ClientTask.cpp \
  CustomExceptionC.cpp \
  CustomExceptionS.cpp \
  FooExceptionC.cpp \
  FooExceptionS.cpp \
  OrbRunner.cpp \
  OrbShutdownTask.cpp \
  OrbTask.cpp \
  TestAppBase.cpp \
  TestAppExceptionC.cpp \
  TestAppExceptionS.cpp

noinst_HEADERS = \
  AppHelper.h \
  AppShutdown.h \
  CancelledException.idl \
  CancelledExceptionC.h \
  CancelledExceptionC.inl \
  CancelledExceptionS.h \
  CancelledExceptionS.inl \
  ClientEngine.h \
  ClientTask.h \
  CustomException.idl \
  CustomExceptionC.h \
  CustomExceptionC.inl \
  CustomExceptionS.h \
  CustomExceptionS.inl \
  FooException.idl \
  FooExceptionC.h \
  FooExceptionC.inl \
  FooExceptionS.h \
  FooExceptionS.inl \
  OrbRunner.h \
  OrbShutdownTask.h \
  OrbTask.h \
  ServantList_T.cpp \
  ServantList_T.h \
  TestAppBase.h \
  TestAppException.idl \
  TestAppExceptionC.h \
  TestAppExceptionC.inl \
  TestAppExceptionS.h \
  TestAppExceptionS.inl

endif BUILD_THREADS
endif BUILD_EXCEPTIONS

## Clean up template repositories, etc.
clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
