// -*- MPC -*-
// $Id$

project(TAO_IDL_EXE) : aceexe, core, tao_output, crosscompile {
  exename      = tao_idl
  libs        += TAO_IDL_BE TAO_IDL_FE
  includes    += include be_include fe
  install      = $(ACE_ROOT)/bin
  after       += TAO_IDL_BE TAO_IDL_FE gperf

  specific {
    // Override the template value for optimize.  Building the exe
    // with optimization turned on doesn't seem to work (at least not with
    // vc6 or vc71).
    optimize =
  }

  verbatim(gnuace, local) {
    ifeq ($(TAO_IDL_PREPROCESSOR),)
      CPPFLAGS += -DTAO_IDL_PREPROCESSOR=\\\"$(strip $(CXX))\\\"
    else
      CPPFLAGS += -DTAO_IDL_PREPROCESSOR=\\\"$(subst \\,\\,$(TAO_IDL_PREPROCESSOR))\\\"
    endif
  }

  Source_Files {
    tao_idl.cpp
    driver/drv_args.cpp
    driver/drv_preproc.cpp
  }

  Header_Files {
    include/drv_extern.h
    include/drv_private.h
  }
}


project(TAO_IDL_BE) : acelib, core, tao_output, crosscompile {
  sharedname   = TAO_IDL_BE
  libs        += TAO_IDL_FE
  includes    += include be_include fe
  dynamicflags = TAO_IDL_BE_BUILD_DLL
  after       += TAO_IDL_FE

  specific {
    // Override the template value for optimize.  Building the backend
    // with optimization turned on doesn't seem to work (at least not with
    // vc6 or vc71).
    optimize =
  }

  Source_Files {
    be
  }

  Header_Files {
    be_include
  }
}


project(TAO_IDL_FE) : acelib, core, tao_output, crosscompile {
  sharedname   = TAO_IDL_FE
  includes    += include fe
  dynamicflags = TAO_IDL_FE_BUILD_DLL

  specific {
    // Override the template value for optimize.  Building the frontend
    // with optimization turned on doesn't seem to work (at least not with
    // vc6 or vc71).
    // optimize =
  }

  Source_Files {
    fe
    ast
    util
    narrow
  }

  Header_Files {
    include
  }
}
