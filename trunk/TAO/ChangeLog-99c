Tue Jan 19 18:38:57 1999  Balachandran Natarajan  <bala@cs.wustl.edu>

	* examples/Simple/time/Time_Client_i.h
        * examples/Simple/Simple_util.h
        * examples/Simple/Simple_util.cpp
        * examples/Simple/time/Time_i.cpp
        * examples/Simple/time/Time_i.h
        Added stuff for the g++ compiler to compile clean
        and build clean.

Tue Jan 19 16:51:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * TAO/orbsvcs/orbsvcs/Sched/Config_Scheduler.h
          TAO/orbsvcs/orbsvcs/Sched/Strategy_Scheduler.{cpp, h}: added new
	  TAO_Criticality_Scheduler_Strategy.  Thanks to Amir Bahmanyari
          (abahmany@teknowledge.com) for suggesting this.
	
        * TAO/orbsvcs/tests/Simulator/DOVEBrowser/NavWeapDataHandler.java: 
	  added some additional debugging information if an unrecognized any 
	  type is received.

Tue Jan 19 15:44:09 1999  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/Simulator/Event_Supplier/Makefile:
          added dependencies.

Tue Jan 19 15:22:14 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/tests/tests.dsw:
          Added the ECT_Throughput project file.

        * orbsvcs/tests/EC_Throughput/ECT_Driver.cpp:
          MSVC5 does not support conversion from 64bit unsigneds to
          doubles.

Tue Jan 19 01:31:36 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * TAO_IDL/driver/drv_preproc.cpp (DRV_pre_proc): Added a quick
          hack to open the tmp_file in the "correct" status on Win32 so
          the tmp_file will get removed automatically.

          We need to reimplement ACE_OS::fopen to make it behave the same
          as on other platforms at some later point.

          (DRV_copy_input): Changed to use ACE_OS::f* functions.  It
          doesn't really make any difference here because the temp file
          get closed before unlink.

Mon Jan 18 22:57:31 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * orbsvcs/orbsvcs/orbsvcs.dsp:
        * tao/TAO.dsp:
          Updated for NT Alpha.

Mon Jan 18 22:01:13 1999  Pradeep Gore  <pradeep@flamenco.cs.wustl.edu>

        * orbsvcs/tests/CosEC_Multiple/run_test.pl
          Added this script to run the test.
          This is still *under construction*.
        * orbsvcs/tests/CosEC_Multiple/README:
          Updated the README to reflect all the new options.
        * orbsvcs/tests/CosEC_Multiple/CosECConsumer{.h,cpp}:
          Added an <event_count> parameter.
        * orbsvcs/tests/CosEC_Multiple/CosECSupplier{.h,cpp}:
          Added an <event_count> parameter.
        * orbsvcs/tests/CosEC_Multiple/CosEC_Multiple.cpp:
          modified the <shutdown> method to check for nil pointer.
        * orbsvcs/CosEvent_Service/CosEvent_Service.cpp:
          1. Removed the code to [un]register the local scheduler with
          the naming service.This fixed the "-s global option not working" bug.
          2. Modified the <init_SupplierQOS> method to scan for just 1 pair
            of {sourceid, event type} from the command line.
        * orbsvcs/CosEvent_Service/README:
          Updated the README to reflect all the new options.

Mon Jan 18 17:37:45 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Channel_Clients.h:
        * orbsvcs/orbsvcs/Event/Channel_Clients.i:
        * orbsvcs/orbsvcs/Event/Channel_Clients_T.i:
          There was an horrible confusion with this files. I removed some
          obsolote versions and fixed an include.  Thanks to Jeff
          Olszewski <jolszewski@std.saic.com> for pointing this out.

Mon Jan 18 16:51:56 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        The bank example was throwing an exception if run multiple times.

        * examples/Simple/bank/Server_i.cpp (init_naming_service):
          Added the TAO_TRY blocks. Used rebind instead of bind.

        * examples/Simple/bank/server.cpp:
          Added a TAO_CHECK_ENV.

Mon Jan 18 11:20:10 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/decode.cpp:
          Fixed a problem with indirected type codes, thanks to Slava
          Galperin <galperin@teknowledge.com> for detecting the problem
          and providing us with a patch for it.

        * examples/Simple/time/server.cpp:
        * examples/Simple/time/Time_Client_i.cpp:
          Added missing template instantiations.

Mon Jan 18 01:16:53 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/Connect.cpp:
        * tao/GIOP.cpp: Replaced TAO try macros with ACE try macros.

        * tao/try_macros.h: Source in ace/CORBA_macros.h so we can start
          switching over to the new macros.  Most of the macros in this
          file will be gone once we finish the transition.

Mon Jan 18 00:25:40 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.2.52 released.

Sun Jan 17 16:15:10 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/GIOP.h:
        * tao/GIOP.cpp:
          Checked the return value of some send_n() calls, at least to
          print appropiate debug messages if TAO_orbdebug is not 0.
          Also added constants to document the size of the IIOP_Lite
          header (vs. the GIOP header) and the offset of the message size
          in the GIOP and the IIOP_Lite headers.

Sun Jan 17 15:51:39 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        * orbsvcs/Time_Service/Time_Service_Server.dsp: Added the generated
        files of ImplRepo to the project .dsp. This is required till the
        ImplRepo idl files are moved to the orbsvcs/orbsvcs directory.

Sun Jan 17 15:41:12 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * TAO/TAOACE_Static.dsw: Removed outdated project files.

        * TAO/TAO_IDL/tao_idl.dsp:
        * TAO/TAO_IDL/tao_idl_static.dsp:
        * TAO/orbsvcs/orbsvcs/orbsvcs.dsp:
        * TAO/orbsvcs/orbsvcs/orbsvcs_static.dsp:
        * TAO/tao/TAO.dsp:
        * TAO/tao/TAO_Static.dsp: Rearranged the intermediate directory
          for DLL/LIB build to avoid confusing the build utility in VC.

Sun Jan 17 15:34:17 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp (wait_until_ready):
          Replaced ACE_Thread_Mutex with ACE_SYNCH_MUTEX so that this will
          compile properly with threads=0.  Thanks to Russ Noseworthy for
          reporting this!

Sat Jan 16 22:54:14 1999  Ossama Othman  <othman@macarena.cs.wustl.edu>

        * TAO_IDL/driver/drv_args.cpp (DRV_check_gperf):
          Added ability to check for a gperf program with a name other
          than "gperf."  This modification complements the change that
          was made to TAO_IDL/util/utl_global.cpp a few months ago that
          allowed TAO to use a gperf with a name besides "gperf."  As before,
          define the ACE_GPERF macro like so:
                         -DACE_GPERF=\"gperf-ace\"
          for example, to specify a perfect hash function generator called
          "gperf-ace."

Sat Jan 16 11:49:45 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * TAO_IDL/util/utl_global.cpp (add_to_included_idl_files):
          Change line 515 from: this->n_included_idl_files_ += INCREMENT;
          to: this->n_allocated_idl_files_ += INCREMENT;
          so that tao_idl won't crash when including 64 or more files.
          Thanks to Tommy Andreasen <tommy.andreasen@radiometer.dk>
          for reporting this.

Fri Jan 15 19:11:10 1999  Balachandran Natarajan  <bala@cs.wustl.edu>

        * examples/Simple/time/Time_Client_i.cpp:
        * examples/Simple/time/Time_Client_i.h:
        Added permissions for these files.

Fri Jan 15 18:43:02 1999  Balachandran Natarajan  <bala@cs.wustl.edu>

        * examples/Simple/time/Time_Client_i.cpp:
        * examples/Simple/time/Time_Client_i.h:
        New files added for implementing the Templates for
        a single client/server model

        * examples/Simple/time/Time_i.cpp:
        * examples/Simple/time/Time_i.h:
        * examples/Simple/time/server.cpp:
        * examples/Simple/time/client.cpp:
        Made  changes in a way such that server and client
        make instantiations of templates with their interface
        objects.

        * examples/Simple/Simple_Util.h:
        * examples/Simple/Simple_Util.cpp:
        New files that have the template definitions and
        implementation of those methods.

Fri Jan 15 17:24:36 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        * orbsvcs/tests/Time/Client_i.cpp (init): Checked the return value
        of the obtain_initial_references () for the client to die gracefully
        in the absence of a clerk. Thanks to Ulf for pointing out this.

        * orbsvcs/tests/Time/Client_i.h : Removed explicit qualification
        of the method test_for_secure_universal_time (). Thanks to Ulf for
        pointing out this.

Fri Jan 15 14:25:29 1999  Seth Widoff  <swidoff@thalia.cimds.ri.cmu.edu>

        * orbsvcs/tests/Trading/Service_Type_Exporter.cpp:
        * orbsvcs/tests/Trading/TT_Info.{h,cpp}:
        * orbsvcs/tests/Trading/colocated_test.cpp:
        * orbsvcs/tests/Trading/export_test.cpp:
        * orbsvcs/tests/Trading/import_test.cpp:
        Added the -iorfile or -i option to the export and import
        test. When provided a file name, the tests read the trader IOR
        from the file, else from standard input. Fixed some formating in
        the remaining files.

        * orbsvcs/orbsvcs/Trader/Service_Type_Repository.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_T.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.cpp:
        More "clever" uses of sequence buffers to avoid copying broke
        when the memory mangement of string sequences changed
        recently. Resorted to good, ol' fashioned copying. There shouldn't
        be any more of these lurking around.

Fri Jan 15 08:21:55 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.2.51 released.

Fri Jan 15 03:52:22 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/exceptions.html: Removed most entries in this file.  Added
          redirection to the new exception handling guideline page.

Fri Jan 15 01:47:41 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.2.50 released.

Fri Jan 15 00:35:24 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        * orbsvcs/tests/Time/run_test.pl : Added this perl script to test
        run the time service. The script offers options to run the service
        using either of the following :
          - Implementation Repository
          - Naming Service
          - Files
        The script runs only a single server because at this time I dont
        know how to start servers on different machines with the same
        script. Also the IR doesnt allow to run its multiple copies in
        the same directory because it writes implrepo.ior to the current
        directory.

        * orbsvcs/tests/Time/implrepo.conf : Added this file. This doesnt
        really belong here but anything which needs to run the IR needs
        this file.

Thu Jan 14 23:50:25 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * docs/implrepo/usersguide.html:
        * docs/implrepo/index.html:
        * docs/implrepo/status.html:
          Added and collected most of the information on the
          Implementation Repository.  The main addition was a rough
          User's Guide which should help people use the IR.

        * docs/releasenotes/index.html:
        * docs/index.html:
          Now point to the correct IR stuff.

Thu Jan 14 23:32:19 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        * orbsvcs/tests/ImplRepo/Makefile: Changed to incorporate the
        right path for Repository.o file. The make was throwing a link
        error.

Thu Jan 14 22:10:49 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/try_macros.h: Added comments to indication the macros in the
          file has been depricated.

Thu Jan 14 15:39:34 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/Connect.cpp (check_unexpected_data): Only print the closing
          connection message when TAO_orbdebug is on.

Thu Jan 14 15:52:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * orbsvcs/tests/Simulator/README
          orbsvcs/tests/Simulator/DOVEBrowser/Makefile
          orbsvcs/tests/Simulator/DOVEMIB/Makefile
          orbsvcs/tests/Simulator/Event_Supplier/Makefile

Thu Jan 14 14:07:17 1999  Jeff Parsons <jp4@cs.wustl.edu>

        * tao/Request.{h,i,cpp}:
          Added the argument manipulation helper functions, as shown
          in the C++ mapping of ORBOS 98-09-03.

Thu Jan 14 11:51:31 1999  Douglas C. Schmidt  <schmidt@ace.cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/Event_Channel.h,
          orbsvcs/orbsvcs/Trader/Service_Type_Repository.h: Changed a
          private: to public: to fix a problem on IRIX 6.4.  Thanks to
          Eric Mitchell <emitchell@altaira.com> for reporting this.

Thu Jan 14 02:46:56 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.2.49 released.

Thu Jan 14 00:52:48 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/ORB.cpp (run): Added a new version of the run() method.
          This variant takes no timeout parameters and hence does not
          terminate the event loop if the Reactor returns a 0.  This
          variant is necessary for TAO to work correctly with Reactor
          implementations such as XtReactor that returns zero even when
          the timeout does not expire.

          Thanks to JM Strauss <jms97@club-internet.fr> for suggesting
          this change.

          Also, fixed the timeout by reference version of the run() method
          such that it no longer pretends to be dealing with const
          timeouts.

Wed Jan 13 14:56:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * orbsvcs/tests/Simulator/Event_Supplier/Event_Sup.cpp
          orbsvcs/tests/Simulator/Event_Supplier/Logging_Sup.cpp: fixed string
          members of IDL structs by using .inout () to obtain lvalue.

Wed Jan 13 09:50:16 1999  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Log/Logger_i.cpp: removed ACE_Equal_To<ACE_CString>
          explicit instantiation because it's in tao/POA.cpp.

Tue Jan 12 20:10:16 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/GIOP.cpp (send_request): Changed to use sendv_n to do vector
          write.

Tue Jan 12 19:13:07 1999  Pradeep Gore  <pradeep@flamenco.cs.wustl.edu>

        * orbsvcs/CosEvent_Service/CosEvent_Service.cpp:
          fixed a seg fault that happened on program exit if <parse_args>
          failed. Now, <init_ORB> is called before anything else.

Tue Jan 12 18:04:33 1999  Jeff Parsons <jp4@cs.wustl.edu>

        * tao/Sequence_T.i: Fixed a memory leak in bounded sequences.
          Thanks to Patrice Bensoussan <pbensoussan@amadeus.net> for
          helping us track this down.

Tue Jan 12 13:09:06 1999  Darrell Brunsch <brunsch@cs.wustl.edu>

        * orbsvcs/ImplRepo_Service/ImplRepo_i.{h,cpp}: Fixed some warning
          producing code.

Tue Jan 12 10:48:15 1999  David L. Levine  <levine@cs.wustl.edu>

        * tao/Sequence_T.{i,cpp} (TAO_Unbounded_Sequence::operator[]):
          uninlined to avoid build (template instantiation) problems with
          Sun C++ 4.2 patch 104631-07.  Thanks to Magnus Karlsson
          <magnus.karlsson@syncom.se> for confirming that this solves the
          problem.

Tue Jan 12 08:46:42 1999  Aniruddha Gokhale  <gokhale@sahyadri.research.bell-labs.com>

        * TAO_IDL/util/utl_scope.cpp:

          In the patch applied mentioned in the ChangeLog below, we were
          using the keyword "true" in a while loop. Unfortunately, it is
          not supported by SunCC. So we use the value 1 to represent a
          "true" value.

Mon Jan 11 22:56:26 1999  Jeff Parsons <jp4@cs.wustl.edu>

        * tao_idl/include/utl_scope.h:
        * tao_idl/util/utl_scope.cpp:
          Added a patch sent in by Hamish Friedlander. This patch
          modified his previous patch (which enabled re-opening of
          modules) to further enable scoped lookups on these
          re-opened modules.

Mon Jan 11 21:20:23 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/GIOP.cpp (send_request): Fixed typos.

Mon Jan 11 19:40:25 1999  Pradeep Gore  <pradeep@flamenco.cs.wustl.edu>

        * orbsvcs/orbsvcs/CosEvent:
          for all files in this directory -
          replaced TAO_TRY_ENV with TAO_IN_ENV

Mon Jan 11 16:55:57 1999  David L. Levine  <levine@cs.wustl.edu>

        * IIOP: removed entire directory tree.

Mon Jan 11 16:36:08 1999  Jeff Parsons <jp4@cs.wustl.edu>

        * TAO/docs/releasenotes/index.html:
          Added a section for the forthcoming Interface Repository

Mon Jan 11 13:15:15 1999  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tao/GIOP.cpp: Changed the implementation to use the new send_n()
          method on SOCK_Stream.  This enabled me to be able to remove the
          adhoc use of writev_n() in this file.

Mon Jan 11 12:37:23 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        Dereferenced the _var pointers in the following.
        * orbsvcs/Time_Service/Server_i.cpp (init_IR):
        * orbsvcs/Time_Service/Server_i.cpp (create_server):

Mon Jan 11 02:10:05 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/try_macros.h (TAO_THROW_ENV_RETURN): Forgot to removed
          duplicate definition.

        * tao/try_macros.h (TAO_CATCHALL): For compilers without c++
          exceptions, simply make it identical to TAO_CATCHANY.  Thanks,
          to Irfan for suggesting the change.

Sun Jan 10 22:43:06 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * Active_Object_Map.h:
        * Active_Object_Map.i:
        * Any.h:
        * Any.i:
        * CDR.h:
        * CDR.i:
        * Connect.cpp:
        * Connect.h:
        * DynAnyC.h:
        * DynAny_i.h:
        * DynArray_i.h:
        * DynEnum_i.h:
        * DynSequence_i.h:
        * DynStruct_i.h:
        * DynUnion_i.h:
        * Environment.h:
        * Exception.cpp:
        * IIOP_Object.h:
        * Invocation.cpp:
        * Invocation.i:
        * Marshal.i:
        * ORB.h:
        * ORB_Core.h:
        * ORB_Core.i:
        * Object.i:
        * POA_CORBA.h:
        * Server_Request.h:
        * Stub.h:
        * TAO.h: Standardized the name of CORBA_Environment argument in
          functions.  This is an effort trying to simplify the use of TAO
          try macros.

        * tao/try_macros.h: Removed TAO_THROW_ENV_RETURN_VOID.  It's
          identical to TAO_THROW_ENV.
          Changed to use TAO_CHECK_ENV_RETURN and
          TAO_CHECK_ENV_RETURN_VOID to define TAO_CHECK_RETURN and
          TAO_CHECK_RETURN_VOID.

        * docs/exceptions.html: Added a section "In a nutshell" which
          covers 99% of the use case of TAO try macros.

Sun Jan 10 16:36:24 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        Added the following to the Time Service.

        * orbsvcs/Time_Service/README:
        * orbsvcs/tests/Time/README:

Sun Jan 10 15:36:44 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        * orbsvcs/Time_Service/Makefile: Added the following rule to make
        sure the ImplRepo_Service is uptodate.
        include $(ACE_ROOT)/include/makeinclude/rules.nested.GNU

        There would be no need for this once the files in the
        ImplRepo_Service are moved to the proper directories.

Sun Jan 10 02:57:26 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * examples/POA/DSI/Database_i.cpp: Fixed template instantiation
          problems and member re-ordereding problems.

Sat Jan  9 22:50:35 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        * orbsvcs/Time_Service/Server_i.cpp : Added the Implementation
        repository related functions. Made changes to incorporate the
        additional functionality required by the IR.

        * orbsvcs/Time_Service/Server_i.h : Addded member variables and
        functions required by the IR.

        The following files are required by the server. These files
        would have to be removed from here once the IR stabilizes and
        these files are put in a particular directory.

        * orbsvcs/Time_Service/IR_Helper.cpp
        * orbsvcs/Time_Service/IR_Helper.h
        * orbsvcs/Time_Service/implrepo.conf

        * orbsvcs/Time_Service/Makefile : Changed the Makefile to link
        in the IR_Helper and other objects required by the Implementation
        Repository.

Sat Jan  9 22:06:09 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_obj_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_obj_sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_obj_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_obj_sequence_cs.cpp:
          Changed to generate code using TAO_IN_ENV instead of _env.

        * orbsvcs/Concurrency_Service/Concurrency_Service.cpp:
        * orbsvcs/ImplRepo_Service/ImplRepo_i.cpp:
        * orbsvcs/LifeCycle_Service/Life_Cycle_Service_i.cpp:
        * orbsvcs/Trading_Service/Trading_Service.cpp:
        * orbsvcs/orbsvcs/Channel_Clients_T.cpp:
        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp:
        * orbsvcs/orbsvcs/Concurrency/CC_Lock.cpp:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSet.cpp:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSetFactory.cpp:
        * orbsvcs/orbsvcs/CosEvent/ProxyPushSupplier_i.cpp:
        * orbsvcs/orbsvcs/Event/Dispatching_Modules.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.cpp:
        * orbsvcs/orbsvcs/Event/Event_Channel.cpp:
        * orbsvcs/orbsvcs/Log/Logger_i.cpp:
        * orbsvcs/orbsvcs/Naming/CosNaming_i.cpp:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.cpp:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:
        * orbsvcs/orbsvcs/Time/TAO_TIO.cpp:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Clerk.cpp:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Server.cpp:
        * orbsvcs/orbsvcs/Time/TAO_UTO.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_Interpreter.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Database.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators_T.cpp:
        * orbsvcs/orbsvcs/Trader/Service_Type_Repository.cpp:
        * orbsvcs/orbsvcs/Trader/Trader.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_T.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/server/Machine_Properties.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/server/Property_Exporter.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/server/Video_Repository.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/server/augmented_server.cpp:
        * orbsvcs/tests/Concurrency/CC_command.cpp:
        * orbsvcs/tests/Concurrency/CC_naming_service.cpp:
        * orbsvcs/tests/EC_Basic/EC_Basic.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Consumer.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Supplier.cpp:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer_Driver.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier_Driver.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Throughput.cpp:
        * orbsvcs/tests/Event_Latency/Event_Latency.cpp:
        * orbsvcs/tests/ImplRepo/IR_Helper.cpp:
        * orbsvcs/tests/ImplRepo/airplane_i.cpp:
        * orbsvcs/tests/ImplRepo/airplane_server_i.cpp:
        * orbsvcs/tests/Simple_Naming/client.cpp:
        * orbsvcs/tests/Trading/Offer_Exporter.cpp:
        * orbsvcs/tests/Trading/Offer_Importer.cpp:
        * orbsvcs/tests/Trading/Service_Type_Exporter.cpp:
        * orbsvcs/tests/Trading/Simple_Dynamic.cpp:
        * tests/Param_Test/except.cpp:
        * examples/Callback_Quoter/Consumer_Input_Handler.cpp:
        * examples/Callback_Quoter/Notifier_i.cpp:
        * examples/Quoter/Factory_Finder_i.cpp:
        * examples/Quoter/Generic_Factory_i.cpp:
        * examples/Quoter/Quoter_i.cpp:
        * examples/Simple/bank/AccountManager_i.cpp:
        * examples/Simple/grid/Grid_i.cpp:
        * Any.h:
        * CDR.h:
        * Connect.h:
        * CurrentC.h:
        * CurrentS.cpp:
        * DynAnyS.cpp:
        * DynAny_i.cpp:
        * DynArray_i.cpp:
        * DynEnum_i.cpp:
        * DynSequence_i.cpp:
        * DynStruct_i.cpp:
        * DynUnion_i.cpp:
        * Exception.h:
        * Forwarding_Servant.h:
        * GIOP.h:
        * IIOP_Interpreter.h:
        * IIOP_ORB.h:
        * IIOP_Object.h:
        * Invocation.h:
        * Marshal.h:
        * NVList.h:
        * ORB.cpp:
        * ORB.h:
        * Object.h:
        * POA.h:
        * POAC.h:
        * POAS.cpp:
        * POAS.h:
        * POA_CORBA.h:
        * PolicyC.h:
        * PolicyS.cpp:
        * Sequence.h:
        * Sequence_T.h:
        * Servant_Base.h:
        * Server_Request.h:
        * Stub.h:
        * TAO.h:
        * Typecode.h:
        * corba.h:
        * poa_T.h:
        * varout.h: Replaced all occurances of <_env> with TAO_IN_ENV.

        * orbsvcs/orbsvcs/CosEvent/ProxyPushConsumer_i.cpp
          (connect_push_supplier): Changed to use TAO_IN_ENV.

        * tao/try_macros.h: Added a new macro definition TAO_IN_ENV which
          maps to _env.  The purpose of adding this macro is to make the
          use of TAO try macros more readable.  From now on, we should
          always use TAO_IN_ENV to name the CORBA environment passed in
          from function arguments.  TAO_TRY_ENV should only be used within
          TAO_TRY block.

Sat Jan  9 14:53:15 1999  Pradeep Gore  <pradeep@flamenco.cs.wustl.edu>

        * orbsvcs/orbsvcs/CosEvent/EventChannel_i.cpp:
          dereferenced uses of _var with .in ()

Fri Jan  8 18:06:11 1999  Pradeep Gore  <pradeep@flamenco.cs.wustl.edu>

        * orbsvcs/orbsvcs/CosEvent:
          These changes are across all the files in this directory...
          1. prefixed each class name with TAO_CosEC_
          2. changed all member *_ptr to *_var, removed calls to <release>.
        * orbsvcs/orbsvcs/CosEvent/ProxyPushConsumer_i.cpp:
          1. <push> now uses an <EventSet> that does not own the buffer.
          2. ACE_NEW replaced with ACE_NEW_THROW.
        * orbsvcs/orbsvcs/CosEvent/ProxyPushSupplier_i.cpp:
          ACE_NEW replaced with ACE_NEW_THROW.
        * orbsvcs/tests/CosEC_Basic/CosEC_Basic.h:
        * orbsvcs/CosEvent_Service/CosEvent_Service.h:
          Changed EventChannel_i to TAO_CosEC_EventChannel_i.

Fri Jan  8 15:05:08 1999  Jeff Parsons <jp4@cs.wustl.edu>

        * tao_idl/be/be_visitor_union_branch/public_ci.cpp:
        * tao_idl/be/be_visitor_union_branch/public_reset_cs.cpp.cpp:
          Further attempt to correct bug report by Ron Barack. I will ask
          Andy to check my changes.

Fri Jan  8 13:49:30 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * orbsvcs/tests/EC_Throughput/ECT_Throughput.cpp (run): Changed to
          use TAO_CATCHANY and TAO_CATCHALL.

Fri Jan 08 13:10:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * orbsvcs/tests/Simulator/DOVEMIB/clnt.cpp: added .out () to
          TAO_String_Manager idl structure fields that are being passed to
          strcpy calls.

Thu Jan  7 21:24:43 1999  Pradeep Gore  <pradeep@flamenco.cs.wustl.edu>

        * orbsvcs/CosEvent_Service/CosEvent_Service.cpp
          1. The parse_args method accepts Event and Source Ids from
             the command line.
          2. The scheduler has an option of being local or remote.
             (specifying remote does not work very well yet).
          3. added methods init_SupplierQOS  and init_ConsumerQOS.

        created the CosEC_Multiple test, added all these files:
        * orbsvcs/tests/CosEvent_Multiple.h
        * orbsvcs/tests/CosEvent_Multiple.cpp
          Base class for test consumer and supplier implementation.
        * orbsvcs/tests/CosECConsumer.h
        * orbsvcs/tests/CosECConsumer.cpp
        * orbsvcs/tests/CosECSupplier.h
        * orbsvcs/tests/CosECSupplier.cpp
        * orbsvcs/tests/Makefile
        * orbsvcs/tests/README

Thu Jan  7 19:07:45 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/try_macros.h (TAO_CATCHANY):  Don't treat the macro
          differently in either cases.  Simply reuse TAO_CATCH to catch
          CORBA_Exception.

Thu Jan 07 14:34:04 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/try_macros.h (TAO_CATCHANY,TAO_CATCHALL): Changed
          TAO_CATCHANY to catch CORBA_Exception or its subclasses only.
          Another macro TAO_CATCHALL was added to facilitate the use of
          "catch (...)".  TAO_CATCHALL translates to a no-op on platforms
          without native exception support.

          This change is aim to unify the error handling behavior of TAO
          programs on platforms with or without native exceptions.  "catch
          (...)" is evil anyway.

        * tao/Connect.cpp (handle_input): Changed to use TAO_CATCHANY and
          TAO_CATCHALL.

Thu Jan 07 07:16:29 1999  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/RT_Task.cpp (svc): initialize local
          "priority" to 0 to avoid warning about uninitialized use
          from DEC cxx with DCE threads.

        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.cpp (shutdown): fixed
          if (_env.exception () == 0) test to be
          if (_env.exception () != 0).  Thanks to Russ Noseworthy
          <rnosewor@objectsciences.com> for providing the fix.

Thu Jan 07 05:07:33 1999  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.2.48 released.

Thu Jan 07 04:06:51 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * Connect.cpp (check_unexpected_data): Made the checks for 0 and
          -1 from recv() the same. 0 is a graceful shutdown, while -1 is a
          somewhat ugly shutdown. Both will result in this function
          returning -1 and this connection getting closed.

        * Invocation.cpp (invoke): Added asserts to check for failures in
          resume_handler().

Wed Jan 06 16:44:06 1999  David L. Levine  <schmidt@cs.wustl.edu>

        * TAO version 0.2.47 released.

Wed Jan 06 16:16:40 1999  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/Time_Service/Server_i.cpp (init_IR): added .in ()
          dereference to "time_service_server_".

Wed Jan  6 15:33:10 1999  Jeff Parsons <jp4@cs.wustl.edu>

        * DynStruct_i.cpp:
          Even though this had already been fixed with respect to
          the latest compile problem, I noticed that the line in
          this file that contains ACE_Array_Base<> should be
          changed to something better that's already used in a
          couple of the other DynAny classes.

Wed Jan  6 15:29:10 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        Commented out some IR related code for the build to go through.
        * orbsvcs/Time_Service/Server_i.h (class Server_i):
        * orbsvcs/Time_Service/Server_i.h:

Wed Jan 06 15:03:44 1999  David L. Levine  <levine@cs.wustl.edu>

        * examples/Simple/echo/Client_i.cpp (echo_list): added .in ()
          dereference to "ior".

Wed Jan 06 14:07:15 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/Exception.{h,cpp} (TAO_DONT_CATCH):
        * tao/try_macros.h: Reverted my previous change about not using
          catch (...) on TAO_CATCHANY for debug build.  This "feature" is
          turned on only when you define TAO_DONT_CATCH_DOT_DOT_DOT.
          Thanks to Irfan for persuading me.

Wed Jan  6 13:44:29 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        * orbsvcs/Time_Service/Server_i.h (class Server_i): Addded the
        IR related code.

Wed Jan 06 13:29:04 1999  David L. Levine  <levine@cs.wustl.edu>

        * tao/DynStruct_i.cpp: removed ACE_Array_Base<CORBA_DynAny_var>
          instantiation because it's in DynArray_i.cpp.

Wed Jan  6 14:05:21 EST 1999  Aniruddha Gokhale  <gokhale@sahyadri.research.bell-labs.com>

        * TAO_IDL/be/be_visitor_array/array_ch.cpp:

          g++ was issuing warnings for the helper methods defined for
          arrays (e.g., _alloc, _dup, _copy, _free). These warnings
          appeared only when the helper methods were in the outermost
          global scope because they were defined static and the compiler
          could not find their implementation. Thus, we now do not
          generate the "static" keyword for these helpers if they are in
          the outermost scope. However, this change made Sun C++ compiler
          unhappy since it did not like the _free and _alloc in the inline
          file (*.i) and their forward declarations did not have the
          inline word. So now also generate the ACE_INLINE macro for the
          _free and _alloc methods if they are in the outermost scope. Now
          both compilers are happy. Hopefully others are too.

        * TAO_IDL/be/be_visitor_sequence/sequence_ci.cpp:
          TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:

          The var and out implementation was not guarded by the #if
          !defined conditionla. As a result, there were instances when we
          could get multiple definitions. Thanks to Virginie Amar
          <vamar@amadeus.net> for submitting the bugreport.

          We had also forgotten to set the "is_generated" flag to true
          once we had generated code for the sequence node.

        * TAO_IDL/be/be_visitor_union_branch/public_reset_cs.cpp:

          Since we now use the TAO_Object_Field_T<T> for object reference
          members of union, we couldn't call CORBA::release in the "reset"
          method. We now simply call "delete".

Wed Jan 06 11:55:25 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * examples/Simple/echo/Client_i.cpp (echo_list): Changed <l> to of
          type Echo::List_var to free up the return value.  The returned
          string from object_to_string must be freed properly.

Wed Jan  6 09:31:16 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.cpp:
          The UDP_Receiver::init() method should only create the RT_Info
          if it is not there already. Thanks to Dave Meyer
          <dmeyer@std.saic.com> and J. Russell Noseworthy
          <rnosewor@objectsciences.com> for providing this fix.

Wed Jan 06 09:04:46 1999  Carlos O'Ryan  <coryan@JIG>

        * docs/releasenotes/TODO.html:
          Updated the information about EC related tasks.

        * docs/releasenotes/ec.html:
          Added the new features in the EC; removed the entries about a
          missing CosEventChannel, because we have one now!

        * docs/releasenotes/index.html:
          Added some comments for Pradeep.

Wed Jan  6 07:44:24 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/DynStruct_i.cpp:
          Removed the last use (hopefully) of ACE_Array<>

Wed Jan 06 02:58:28 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * TAO_Examples.dsw
        * POA/Explicit_Activation/Makefile
        * POA/Generic_Servant/Makefile
        * POA/Generic_Servant/server.dsp
        * POA/Loader/Loader.dsw
        * POA/Loader/Makefile
        * POA/Loader/server.dsp
        * POA/On_Demand_Activation/On_Demand_Activation.dsw
        * POA/On_Demand_Activation/server.dsp
        * POA/On_Demand_Activation/Makefile
        * POA/On_Demand_Loading/Makefile
        * POA/On_Demand_Loading/On_Demand_Loading.dsw
        * POA/On_Demand_Loading/server.dsp

          - Changed the name of the Generic Servant dynamic library from
            MyFoo back to Generic_Servant.  This was causing too many
            things to break on NT since the original settings were based
            on the Generic_Servant name.

          - Removed excess include directories in the make setting.

          - Fixed NT make files (including release settings) and made them
            conform with the existing makefiles.

        * POA/On_Demand_Loading/Servant_Activator.cpp
        * POA/On_Demand_Loading/Servant_Locator.cpp
        * POA/Loader/Servant_Activator.cpp
        * POA/Loader/Servant_Locator.cpp
        * POA/Loader/Server_Manager.cpp

          - Removed access includes files.

        * POA/On_Demand_Loading/Servant_Manager.cpp: Fixed use of ACE_CString.

Tue Jan  5 22:36:54 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/default_server.{h,cpp}:
        * tao/default_client.{h,cpp}:
        * tao/ORB_Core.{h,cpp}: We also need to define/declare static
          services for platform without svc.conf support.

Tue Jan  5 18:27:26 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        * orbsvcs/Time_Service/Server_i.cpp (init): Added the IR related
        code.

Tue Jan  5 17:44:53 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/DynAnyC.h
        * tao/DynAnyC.i
        * tao/DynSequence_i.h:
        * tao/DynStruct_i.h:
          Removed some other uses of ACE_Array in favor of ACE_Array_Base,
          in these cases there was no need for the operator== and/or
          operator!=

Tue Jan 05 15:40:20 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * performance-tests/Cubit/TAO/MT_Cubit/Task_Client.cpp (init_orb):
        * performance-tests/Cubit/TAO/MT_Cubit/Cubit_Task.cpp (initialize_orb):
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Client.cpp (init):
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Server.cpp (init):
          Removed explicit call to <TAO_Internal::open_services> when
          building static lib version on Win32 since we can now use them
          as static service (and configure them thru svc.conf.static
          file.)

        * performance_tests/Cubit/TAO/IDL_Cubit/svc.conf.static:
        * performance_tests/Cubit/TAO/MT_Cubit/svc.conf.static: Added two
          example svc.conf files to show how to use static services.

        * tao/orbconf.h: Changed the format of XXX_FACTORY_ARGS strings for
          platforms without svc.conf support to a single char string.
          These entries should look like this now:

           "static TAO_Foobar_Factory \"-ORBsettings a -ORBset b\""

        * tao/TAO_Internal.{h,cpp}: Removed method open_services which
          takes separate argument lists for each of the TAO default
          service.  Service initialization is now done in a more general
          way.

Tue Jan 05 14:32:11 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/Object.i (_narrow): _narrow must increase the reference
          count on the object.  Thanks to Ron Barack <rab@terminal.cz> for
          reporting this bug.

Tue Jan 05 14:21:57 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/TAO_Internal.cpp (open_services): Added insertion of
          default static service objects of TAO.  I forgot to do that.

Tue Jan  5 13:06:12 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        * examples/Simple/bank/Client_i.cpp (withdraw): Removed the
          cast and used the .in () method instead. This would probably
          fix the error on DU cxx.

Tue Jan 05 07:57:40 1999  David L. Levine  <levine@cs.wustl.edu>

        * examples/Simple/bank/Client_i.cpp (withdraw): added in ()
          dereference of except->reason.  Thanks to Andy for figuring
          out how to get this to compile now.

        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Client.cpp,client.cpp,
          MT_Cubit/Task_Client.cpp: removed VxWorks #ifdefs that disabled
          ORB shutdown, because it no longer causes a MemPartFree with
          last night's remove () fixes to ace/Synch.

Tue Jan 05 04:51:02 1999  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/TAO_Internal.cpp:
        * tao/ORB_Core.{h,cpp}:
        * tao/default_server.{h,cpp}:
        * tao/default_client.{h,cpp}: Added definitions for static service
          objects and enabled TAO to use static services if
          TAO_USES_STATIC_SERVICE is defined.  This will allow platforms
          that doesn't support dynamic linking to change TAO's behavior at
          run-time.

Mon Jan 04 17:48:17 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * orbsvcs/orbsvcs/CosEvent/EventChannel_i.cpp (for_suppliers):
          Fixed typos.

Mon Jan  4 16:52:08 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        Added the following project files for Time Service on NT.
        * orbsvcs/Time_Service/Time_Service.dsw
        * orbsvcs/Time_Service/Time_Service_Clerk.dsp
        * orbsvcs/Time_Service/Time_Service_Server.dsp

        * orbsvcs/tests/Time/Time_Service_Test.dsw
        * orbsvcs/tests/Time/Time_Service_Test.dsp

        * orbsvcs/tests/Time/Client_i.cpp: Changed the TAO_CATCHANY to
          TAO_CATCH (SystemException, sysex). The former somehow wasn't
          catching CORBA::NO_IMPLEMENT on NT.


Mon Jan  4 16:30:27 1999  Jeff Parsons <jp4@cs.wustl.edu>

        * tao_idl/be/be_visitor_union_branch/private_ch.cpp:
        * tao_idl/be/be_visitor_union_branch/public_access_cs.cpp:
        * tao_idl/be/be_visitor_union_branch/public_assign_cs.cpp:
        * tao_idl/be/be_visitor_union_branch/public_ci.cpp:
          Implemented TAO_Object_Field_T<foo> in place of foo_ptr
          for objects inside a union, so that _upcast() and
          _downcast() will work.

Mon Jan 04 16:08:49 1999  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/CosEvent/Event_Channel_i.cpp (for_consumers):
          added missing ; at end of statement.

        * TAO_IDL/Makefile: with GreenHills gcx, added -w to CCFLAGS
          to suppress many warnings about TAO_YY_BREAK statements being
          unreachable.

Mon Jan  4 14:29:49 EST 1999  Aniruddha Gokhale  <gokhale@sahyadri.research.bell-labs.com>

        * TAO_IDL/be/be_visitor_sequence/gen_bounded_str_sequence_ci.cpp:

          For the [] operator, instead of returning a
          TAO_SeqElem_String_Manager, we were generating
          TAO_String_Manager.

        * tests/Param_Test/objref.cpp
          tests/Param_Test/ub_objref_seq.cpp:

          There were instances of incorrect assignment between a
          String_var and a TAO_String_Manager.

Mon Jan 04 12:45:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * orbsvcs/orbsvcs/Runtime_Scheduler.{cpp, h}
          orbsvcs/orbsvcs/Scheduler_Utilities.{h, i}: added
          ACE_NEW_THROW_RETURN, lots of comments.

Mon Jan 04 12:04:37 1999  Carlos O'Ryan  <coryan@JIG>

        * orbsvcs/orbsvcs/CosEvent/*
        * orbsvcs/CosEvent_Service/CosEvent_Service.cpp:
          Another code review for Pradeep.

Mon Jan  4 07:39:27 EST 1999  Aniruddha Gokhale  <gokhale@sahyadri.research.bell-labs.com>

        * orbsvcs/orbsvcs/Trader/Trader_Utils.cpp:

          The code was written with the assumption that a string member of
          a struct gets mapped to CORBA::String_var. However, due to the
          recent changes made to the IDL compiler where a string member
          gets mapped to a TAO_String_Manager caused several problems in
          the Trader code. This happened when the string member was
          assigned directly to a CORBA::String_var class. The right way to
          do this is to use the "in ()" method on the TAO_String_Manager
          class to retrieve the underlying string.

        * tao/Managed_Types.h
          tao/ORB.h:

          I had forgotten to include the Managed_Types.i file when the
          ACE_INLINE macro is defined. This was causing all kinds of
          undefined symbol errors at link time. However, it turns out that
          the Managed_Types.i file uses operations such as
          CORBA::string_free that get used before their inline definition
          is seen in ORB.i. The solution to this dependency problem is to
          include Managed_Types.i after ORB.i in the file ORB.h.

        * tao/{Sequence, Sequence_T}.{i,cpp} (operator []):

          Moved the definition of the [] operator to the *.cpp file since
          it was using the inline constructor of the
          TAO_SeqElem_String_Manager before it was defined.

        * tao/Managed_Types.i:

          Some missing ACE_INLINE added.

Mon Jan 04 00:15:13 1999  Darrell Brunsch  <brunsch@cs.wustl.edu>

        * orbsvcs/ImplRepo_Service/ImplRepo_i.cpp:
        * orbsvcs/tests/ImplRepo/IR_Helper.cpp:
          Updated to work with recent changes to the ORB (specifically the
          IIOP_Object constructor and ORB_Core::addr()).

Sun Jan 03 23:05:08 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/TAO_Static.dsp:
        * tao/TAO.dsp:

          Added Managed_Types.cpp to build.

Sun Jan 03 22:42:22 1999  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Time/TAO_UTO.cpp (TAO_UTO): moved "/2" out of
          the ACE_U64_TO_U32 conversion, because dividing an ACE_U_LongLong
          by an int results in an ACE_UINT32.

Sun Jan  3 22:01:37 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        * orbsvcs/Time_Service/Server_i.cpp:
          Used rebind () instead of bind (). Because servers dont handle ^C,
          once bound contexts stay bound till the Naming Service is up.
          This was already being done for clerks. Commented out the IR part.
          Fixed warnings in init() and run() methods.

        * orbsvcs/Time_Service/Server_i.h:
          Added some comments. Also commented out the IR part, so I could
          fix the warnings pointed out by David and check the files in.

        * orbsvcs/Time_Service/Clerk_i.cpp:
          Added some comments. Commented out the IR part. Removed warnings
          for unreferenced variables

Sun Jan 03 21:39:49 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/POA.cpp (encode_sequence_to_string): Removed extra call to
          isascii().  It's followed by an isprint(): if byte is printable,
          then it must be ascii.  Thanks to David Levine and Chris
          Cleeland for helping with this.

Sun Jan  3 21:10:42 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        Addded a new function to check if it is the first server or clerk.
        If it is then get a new context and bind it to the Name Server.
        The subsequent servers and clerks will bind to this context. The
        way this was being done previously is by clearing the exception
        and checking the return value of NamingContext::resolve (). Was
        working fine on Solaris but threw an exception on NT. I am now
        handling the exception appropriately. Also corrected a memory
        problem using CORBA::string_dup.

        * orbsvcs/Time_Service/Server_i.cpp:
        * orbsvcs/Time_Service/Server_i.h:
        * orbsvcs/Time_Service/Clerk_i.cpp:
        * orbsvcs/Time_Service/Clerk_i.h:

Sun Jan  3 20:30:00 1999  Chris Gill  <cdgill@cs.wustl.edu>

        * docs/releasenotes/index.html: added TAO Scheduling Service section

Sun Jan  3 19:22:23 1999  Pradeep Gore  <pradeep@flamenco.cs.wustl.edu>

        * orbsvcs/CosEvent_Service/CosEvent_Service.h:
        * orbsvcs/CosEvent_Service/CosEvent_Service.cpp:
        * orbsvcs/CosEvent_Service/README:
        * orbsvcs/CosEvent_Service/Makefile:
          added the above files for the COS Event Service.

Sun Jan  3 18:56:51 1999  Jeff Parsons <jp4@cs.wustl.edu>

        * tao/DynSequence_i.{h,cpp}:
        * tao/DynStruct_i.{h<cpp}:
          Changed use of ACE_Array to use of ACE_Array_Base,
          to match Carlos' changes to DynArray_i.

Sun Jan  3 18:54:29  1999  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * examples/POA/On_Demand_Loading/On_Demand_Loading.dsw:
        * examples/POA/On_Demand_Loading/"POA On_Demand_Loading Server.dsp":
          Added the NT workspace for the On_Demand_Loading example.

        * examples/POA/Loader/Loader.dsp:
        * examples/POA/Loader/"POA Loader Server.dsp":
          Added the NT workspace for the Loader example.

        * examples/POA/Generic_Servant/Server.dsp:
          Changed the settings of the project so that MyFoo.dll is produced as output.

Sun Jan  3 19:27:01 EST 1999  Aniruddha Gokhale  <gokhale@sahyadri.research.bell-labs.com>

        * tao/Managed_Types.{h,i,cpp}:

          Three new files added. These define and implement the various
          manager classes such as TAO_String_Manager,
          TAO_SeqElem_String_Manager that are required by the IDL to C++
          mapping for struct members that are strings and sequences of
          strings, respectively. We had to resort to two different
          managers because the managed type for sequence of strings must
          obey the value of the release data member of the sequence
          class. Other than this, the semantics are the same.

        * tao/ORB.h:

          Included the newly added Managed_Types.h file.

        * tao/{Sequence, Sequence_T}.{h,i,cpp}:

          Moved the TAO_String_Manager to the Managed_Types.* files. In
          addition, we now use TAO_SeqElem_String_Manager for the return
          type of the [] operator.

        * TAO_IDL/be/be_visitor_array/array.cpp (visit_string):

          Arrays of strings now use the TAO_String_Manager as its element
          type instead of CORBA::String_var. This was required to conform
          to the IDL->C++ mapping.

        * TAO_IDL/be/be_visitor_field/field_ch.cpp (visit_string):

          Struct memebrs that are strings now use the TAO_String_Manager
          as its type instead of CORBA::String_var. This was required to conform
          to the IDL->C++ mapping.

        * TAO_IDL/be/be_visitor_sequence/elemtype.cpp
          TAO_IDL/be/be_visitor_sequence/gen_bounded_str_sequence_ch.cpp
          TAO_IDL/be/be_visitor_sequence/gen_bounded_str_sequence_ci.cpp

          The generated code now produces TAO_SeqElem_String_Manager
          instead of TAO_String_Manager for the [] operator.

        * docs/releasenotes/index.html:

          Updated to reflect latest status. Also, removed some old
          comments that are no longer applicable.

Sun Jan  3 17:32:27 1999  Jeff Parsons <jp4@cs.wustl.edu>

        * orbsvcs/orbsvcs/Time/TAO_UTO.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_Vistors.cpp:
          Added some casting to fix some conversion warnings I was
          getting while rebuilding with VC5.

Sun Jan  3 13:12:27 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        Added the TAO_ORBSVCS_Export macro to the following files.

        * orbsvcs/orbsvcs/Time/Timer_Helper.h
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Server.h
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Clerk.h
        * orbsvcs/orbsvcs/Time/TAO_UTO.h
        * orbsvcs/orbsvcs/Time/TAO_TIO.h

Sat Jan  2 17:32:35 1999  Pradeep Gore  <pradeep@flamenco.cs.wustl.edu>

        * orbsvcs/tests/CosEC_Basic/CosEC_Basic.cpp:
          split the <init> method over 3 other  methods -
          <init_ORB>, <init_RtEC> and <init_CosEC>.

Sat Jan 02 11:15:48 1999  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/CosEvent/ConsumerAdmin_i.cpp (obtain_push_supplier):
          added .in () dereference to rtecproxypushsupplier.

        * orbsvcs/orbsvcs/CosEvent/SupplierAdmin_i.cpp (obtain_push_consumer):
          added .in () dereference to rtecproxypushconsumer.

        * examples/Simple/grid/Client_i.cpp (test_grid): added
          ACE_UNUSED_ARG (ret_val) to avoid compiler warning with ACE_NDEBUG.

        * orbsvcs/Time_Service/Clerk_i.cpp (get_first_IOR): added
          .in () dereference to obj.

Fri Jan  1 23:31:48 1999  Pradeep Gore  <pradeep@flamenco.cs.wustl.edu>

        * orbsvcs/orbsvcs/CosEvent/EventChannel_i.h:
        * orbsvcs/orbsvcs/CosEvent/EventChannel_i.cpp:
          corrections to comments after code review.

        * orbsvcs/orbsvcs/CosEvent/ConsumerAdmin_i.h:
        * orbsvcs/orbsvcs/CosEvent/ConsumerAdmin_i.cpp:
          using ACE_NEW now.

        * orbsvcs/orbsvcs/CosEvent/SupplierAdmin_i.h:
        * orbsvcs/orbsvcs/CosEvent/SupplierAdmin_i.cpp:
          using ACE_NEW now.

        * orbsvcs/orbsvcs/CosEvent/ProxyPushSupplier_i.h:
        * orbsvcs/orbsvcs/CosEvent/ProxyPushSupplier_i.cpp:
          uses ACE_NEW now, added a <connected> method,
          connect_push_consumer method throws AlreadyConnected and
          BAD_PARAM exceptions.

        * orbsvcs/orbsvcs/CosEvent/ProxyPushConsumer_i.h:
        * orbsvcs/orbsvcs/CosEvent/ProxyPushConsumer_i.cpp:
          uses ACE_NEW now.

        * orbsvcs/tests/CosEC_Basic/CosEC_Basic.h:
          changed method names to init,run and shutdown.
          corrections to comments after code review.

        * orbsvcs/tests/CosEC_Basic/CosEC_Basic.cpp:
          added checks for return errors.

        * orbsvcs/tests/CosEC_Basic/CosECSupplier.h:
        * orbsvcs/tests/CosEC_Basic/CosECSupplier.cpp:
          corrections to comments after code review.
          <disconnect_push_supplier> method now deactivates
          the Supplier object.

        * orbsvcs/tests/CosEC_Basic/CosECConsumer.h:
        * orbsvcs/tests/CosEC_Basic/CosECConsumer.cpp:
          corrections to comments after code review.
          <disconnect_push_consumer> method now deactivates
          the Comsumer object.

Fri Jan  1 18:11:07 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        * orbsvcs/Time_Service/Clerk_i.cpp : Used _duplicate ()
        on the server IORs. This overcomes the automatic deletion of memory.

        * orbsvcs/orbsvcs/Time/Timer_Helper.cpp : Used the advance () method
        to iterate over the ACE_Array. The ACE_Unbounded_Set which was being
        used earlier did not require this method to be used.

Fri Jan 01 16:48:23 1999  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Time/TAO_UTO.cpp (TAO_UTO): replaced cast
          with ACE_U64_TO_U32 macro invocation.

        * orbsvcs/orbsvcs/Event/Event_Channel.cpp: added
          ACE_Array_Base<TAO_EC_Event> explicit instantiation.

        * orbsvcs/orbsvcs/Trader/Constraint_Visitors.cpp: added
          a bunch of TAO_find explicit instantiations.

Fri Jan  1 13:33:33 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        * orbsvcs/orbsvcs/Time/TAO_UTO.cpp: Removed a ; at the end of a
          function. Digital Unix 4.0 was throwing a warning for this.

Fri Jan  1 12:29:28 1999  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/Makefile:
          Added the Time_Service directory.

        * orbsvcs/Time_Service/Clerk_i.h:
        * orbsvcs/Time_Service/Clerk_i.cpp:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Clerk.h:
        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Clerk.cpp:
        * orbsvcs/orbsvcs/Time/Timer_Helper.h:
        * orbsvcs/orbsvcs/Time/Timer_Helper.cpp:
          Use ACE_Array_Base instead of ACE_Unbounded_Set because it does
          not require an == or != operator defined.

        * tao/DynArray_i.h:
        * tao/DynArray_i.cpp:
          Use ACE_Array_Base instead of ACE_Array.

Fri Jan  1 11:51:42 1999  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        Removed some VxWorks errors like 'TAO_TRY_LABEL unreferenced' in
        the following files.

        * orbsvcs/orbsvcs/Time/TAO_Time_Service_Server.cpp:
        * orbsvcs/orbsvcs/Time/TAO_TIO.cpp:
        * orbsvcs/orbsvcs/Time//TAO_UTO.cpp:
        * orbsvcs/orbsvcs/Time//TAO_Time_Service_Clerk.cpp:

Fri Jan 01 02:45:18 1999  Irfan Pyarali  <irfan@cs.wustl.edu>

        * TAO_IDL/be/be_visitor_array/array_ci.cpp (gen_forany_impl and
          gen_var_impl): There is no cast required for assigning a pointer
          to zero. Thanks to Patrice Bensoussan <pbensoussan@amadeus.net>
          for reporting this bug.

        * Active_Object_Map.i: Rearranged functions to remove "redeclared
          inline after being called" warnings.  Thanks to David for
          pointing these out.
