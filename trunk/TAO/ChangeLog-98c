Thu Jul  2 19:22:24 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

	* orbsvcs/tests/Makefile: 
	* orbsvcs/tests/EC_Throughput/Makefile: 
	* orbsvcs/tests/EC_Throughput/svc.conf: 
	* orbsvcs/tests/EC_Throughput/data.idl: 
	* orbsvcs/tests/EC_Throughput/ECT_Consumer.h: 
	* orbsvcs/tests/EC_Throughput/ECT_Consumer.cpp: 
	* orbsvcs/tests/EC_Throughput/ECT_Supplier.h: 
	* orbsvcs/tests/EC_Throughput/ECT_Supplier.cpp: 
	  This test shows how to use the EC for custom marshalling, later
	  it will be adapted to measure throughput in the EC.

	* orbsvcs/orbsvcs/RtecEventComm.idl: 
	  Added some padding so the payload (an encapsulated CDR) is
	  always properly aligned.

Thu Jul  2 14:28:01 1998  Aniruddha Gokhale  <gokhale@mambo.cs.wustl.edu>

	* TAO_IDL/be/be_array.cpp: We were generating incorrect code for
	the out () and _retn () methods of the Array_var class.

	* TAO_IDL/be_include/be.h" Missing #include for Process.h added.

	* TAO_IDL/Makefile: Ran make depend
	
	* tests/Param_Test/README: Added description for the array tests.

Thu Jul  2 12:36:28 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Trader[_T].{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Constraint_Visitors.{h,cpp}:
        For the 'in' operator in the standard OMG constraint language, the
        Constraint Interpreter needs to identify and extract from Anys
        sequences of primitive types, regardless of how many times the
        sequence has been typedef'd. Added code to do this.

        * orbsvcs/tests/Trading/TTest.idl:
        * orbsvcs/tests/Trading/TT_Info.cpp:
        * orbsvcs/tests/Trading/Service_Type_Exporter.cpp:
        * orbsvcs/tests/Trading/Offer_Exporter.cpp:
        Now sends aliased sequences to the Trader to test the above
        enhancement.

Thu Jul  2 12:29:10 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        The Next round of changes for GPERF + TAO_IDL integration. NT
        related stuff have been taken care of. attributes also should work
        now.
        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/be_include/be_interface.h:
        * TAO_IDL/be_include/be_codegen.h:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_helper.cpp:
        * TAO_IDL/be/be_codegen.cpp:

Thu Jul 02 09:17:57 1998  David L. Levine  <levine@cs.wustl.edu>

        * tests/CDR/growth.cpp (main),
          tests/OctetSeq/OctetSeq.cpp (run): replaced
          ACE_hrtime_t-to-ACE_INT32 static casts with ACE_U64_TO_U32
          for compatibility with ACE_U_LongLong.

        * tests/NestedUpcall/Triangle_Test/Object_A_Impl.cpp: added
          newline at end of file.

        * tests/POA/On_Demand_Activation/Servant_Locator.cpp (postinvoke):
          added ACE_UNUSED_ARG (my_servant) to avoid compile warning about
          unused variable with ACE_NDEBUG.

        * tests/Cubit/TAO/MT_Cubit/Task_Client (run_tests): use
          ACE_OS::fprintf instead of fprintf, and fixed the format
          specifier to match the argument type.

Thu Jul 02 01:50:58 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/POA: Renamed TAO_POA_Locking to Synchronization.  Also
          renamed the related enums to not use the USE_ prefix.

Wed Jul  1 22:42:13 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/orbsvcs/Makefile:
        * orbsvcs/orbsvcs/CosTrading.idl:
        Merged Sequences.idl into CosTrading.idl.

        * orbsvcs/orbsvcs/Trader/Trader.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Trader_T.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.{h,cpp}:
        Addressed DEC cxx warnings/errors. Hopefully solved some, probbaly
        introduced more.

Wed Jul 01 21:14:11 1998  David L. Levine  <levine@cs.wustl.edu>

        * tests/Param_Test/any.cpp: commented out unused static
          any_table.

        * tests/Param_Test/fixed_array.cpp (check_validity): commented
          out unused local ret.

        * tests/Param_Test/{bd,ub}_str_seq.cpp (init_parameters):
          commented out unused local gen.

Wed Jul  1 19:20:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * orbsvcs/LifeCycle_Service/Makefile: I hopefully
          fixed the complains of the DEC cxx compiler.

Wed Jul  1 15:50:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * tao/ORB.cpp: Fixed a memory leak in the initial
          references code. The pointers (name_service_ and trading_service_)
          were not properly reused and not properly released.

        * tao/Operation_Table.h: Fixed a spelling problem with
          TAO_operation_db_entry.

Wed Jul  1 13:59:30 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/LifeCycle_Service/Makefile: Removed STL flags.

        * tao/TAO.{h,cpp}: Passing in argc to the TAO_ORB_Manager by
        reference, since ORB_init takes argc by reference.

        * orbsvcs/Trading_Service/Trading_Service.{h,cpp}:
        * orbsvcs/Trading_Service/Makefile:
        Made Trading Service app resemble other orbsvcs apps. Accepts -TS*
        command line arguments. Has the ability to form a complete graph
        federation with other traders on the same multicast network.

        * orbsvcs/tests/Trading/Offer_Exporter.{h,cpp}:
        * orbsvcs/tests/Trading/Offer_Importer.{h,cpp}:
        * orbsvcs/tests/Trading/Service_Type_Exporter.{h,cpp}:
        * orbsvcs/tests/Trading/export_test.cpp:
        * orbsvcs/tests/Trading/Makfile:
        export_test will now export service types and offers to all
        traders linked to the multicast-enabled trader, so import_test
        will test federated queries.

        * orbsvcs/orbsvcs/IOR_Multicast.{h,cpp}: Added an init method for
        initialization outside the constructor.

        * orbsvcs/orbsvcs/Makefile: Changed macro name from
        TAO_HAS_DYNAMIC_PROPERTY_BUG to TAO_HAS_OBJECT_IN_STRUCT_MARSHAL_BUG.

        * orbsvcs/orbsvcs/Trader/*.*:
        o  Hopefully fixed DEC cxx errors/warnings.
        o  Added command-line configuration of trader policies, interfaces,
        and multithreading support.
        o  Debugged link interface and federated queries.
        o  Added explicit template specialization.

Wed Jul  1 1:55:23 1998 Jeff Parsons <jp4@cs.wustl.edu>

        * TAO/tests/Cubit/TAO/DII_Cubit/Makefile: It works, at least with
        SunCC. It builds the DII client and also the IDL server if
        necessary (since we run it before running client.exe) -thanks
        to David Levine for that.
        * TAO/tests/Cubit/TAO/DII_Cubit/client.h, cpp: Now builds and
        executes on Unix and NT. Also added some macros for the
        environment checking inside the operations.

Wed Jul  1 10:28:07 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * TAO_IDL/be_include/be_interface.h (be_type): Fixed the warnings
        in g++.

Wed Jul  1 06:36:11 1998  Aniruddha Gokhale  <gokhale@mambo.cs.wustl.edu>

        * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp: For the copying
        version of the <<= operator, we were not doing a copy. Thanks to
        Seth Widoff for pointing this out.

Tue Jun 30 22:08:38 1998  David L. Levine  <levine@cs.wustl.edu>

        * TAO_IDL/be/be_codegen.cpp (lookup_strategy): added full
          qualification of TAO_CodeGen::LOOKUP_STRATEGY return type.

Tue Jun 30 18:27:49 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Sequence_T.i:
          Another ACE_CAST_CONST problem, thanks to Seth Widoff
          (sbw1@cs.wustl.edu) for catching this one.

Tue Jun 30 18:21:04 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * tests/Quoter/Makefile:
        Removed STL includes --- no longer needed for Trading Service.

Tue Jun 30 16:50:12 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        First round of changes for GPERF + TAO_IDL integration. Execute
        tao_idl with -P option to enable PERFECT_HASH operation lookup
        strategy.

        IDL-Attributes are not supported yet.

        * TAO_IDL/driver/drv_args.cpp: Added option -P to enable
        PERFECT_HASH operation lookup strategy.

        * TAO_IDL/be_include/be_interface.h: Added methods to generate
        perfect hashing operation lookup table in the server skeleton
        code.

        * TAO_IDL/be_include/be_helper.h (class TAO_OutStream): Added a
        new stream type GPERF_INPUT to indicate the outstream is for
        gperf's input file.

        * TAO_IDL/be_include/be_codegen.h (class TAO_CodeGen):  Added <enum
        LOOKUP_STRATEGY {...}> to indicate various lookup
        strategies. Added the member and access methods that keeps track
        of the TAO_OutStream that corresponds to the gperf's input file.

        * TAO_IDL/be_include/be.h: Included "ace/Process.h".

        * TAO_IDL/be/be_interface.cpp:

        * TAO_IDL/be/be_helper.cpp:

        * TAO_IDL/be/be_codegen.cpp:

        * tao/Operation_Table.h (TAO_Perfect_Hash_OpTable):
        * tao/Operation_Table.cpp :
                Defined the class TAO_Perfect_Hash_OpTable, the factory
        class for Perfect_Hashing-Operation_Lookup strategy.

Tue Jun 30 13:23:59 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:
          Workaround Sun/CC problem when compiling with -O (but not
          -fast). Apparently it does not like to use static (file) scope
          symbols in the definition of a template.

Tue Jun 30 10:40:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * docs/configurations.html: Added documentation about the
          -ORBiiopprofilelock switch.

        * tao/Client_Strategy_Factory.{h,cpp}: Added the create_iiop_profile_lock (void)

        * tao/GIOP.cpp: Use ACE_Lock instead of ACE_SYNCH_MUTEX.

        * tao/IIOP_Object.cpp: Added the initialization of the fwd_profile_lock_ptr to
          the constructor.

        * tao/IIOP_Object.h: Changed the forward profile lock to a pointer to a lock.

        * tao/IIOP_Object.i: Added the initialization of the fwd_profile_lock_ptr to
          the constructor.

        * tao/default_client.{h,cpp}: Added the parsing of "-ORBportiiopproflielock" to
          the parse_args method. "thread" (default) means to use a mutex lock
          on the access of the forwarding iiop profile. "null" means, use a null
          mutex, which is faster, but does not provide any protection.
          Added also the function create_iiop_profile_lock () to allow
          others to create a new lock, depending on the above mentioned switch.

Tue Jun 30 00:58:57 1998  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.1.36 released.

Mon Jun 29 14:43:17 1998  David L. Levine  <levine@cs.wustl.edu>

        * TAO_IDL/be/be_array.cpp (gen_forany_defn): changed
          declaration of friend CORBA::Any to friend class CORBA_Any,
          to keep DEC cxx from complaining.  Also, commented out
          the declaration, because it doesn't appear to be necessary.

        * tests/OctetSeq/OctetSeq.cpp (main): cast sizeof to int
          to avoid egcs warning about signed/unsigned comparison.

Mon Jun 29 11:05:03 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/encode.cpp:
          Removed unused variable.

Mon Jun 29 11:00:26 1998  Aniruddha Gokhale  <gokhale@mambo.cs.wustl.edu>

        * TAO_IDL/be/be_visitor_operation/operation_cs.cpp:

        After the call to do_static_call, we were not checking if some
        exception was raised. This was causing major problems if there was
        any post do_static_call processing such as narrowing to be
        done. Thanks to Seth Widoff for reporting the problem.

Sun Jun 28 21:33:48 1998  David L. Levine  <levine@cs.wustl.edu>

        * tao/GIOP.cpp: replaced ACE_SYNCH_RW_MUTEX with
          ACE_SYNCH_MUTEX so that it will compile with g++
          (and be correct :-).

        * tests/OctetSeq/OctetSeq.cpp (main): changed loop index
          i from u_int to int to avoid signed/unsigned comparison.

Sun Jun 28 16:10:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * tests/NestedUpcalls/Triangle_Test/Makefile: Added
          this Makefile for use on Unix machines.

Sun Jun 28 15:30:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * tao/GIOP.cpp: In method location_forwarding, removed
          the explicit release of the IIOP_Object. It is implicitly
          released by the release of the CORBA::OBject pointer.

        * tests/Quoter/Generic_Factory_Impl.{h,cpp}: Splitted
          the create_object method into two parts.

Sat Jun 27 18:13:05 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * TAO/tests/POA/Explicit_Activation/server.cpp (main): Changed
          #include "ace/Timeprobes.h" to #include "tao/Timeprobes.h".
