##  Process this file with automake to create Makefile.in
##
## $Id$
##
## This file was generated by MPC.  Any changes made directly to
## this file will be lost the next time it is generated.
##
## MPC Command:
## ../bin/mwc.pl -type automake -noreldefs TAO.mwc

ACE_BUILDDIR = $(top_builddir)/..
ACE_ROOT = $(top_srcdir)/..
TAO_BUILDDIR = $(top_builddir)
TAO_IDL = ACE_ROOT=$(ACE_ROOT) TAO_ROOT=$(TAO_ROOT) $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDL_DEP = $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDLFLAGS = -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I$(TAO_ROOT) -I$(srcdir) -g $(ACE_BUILDDIR)/apps/gperf/src/ace_gperf
TAO_ROOT = $(top_srcdir)

CLEANFILES =
BUILT_SOURCES =

## Makefile.csd_tp_foo_b_lib.am

if BUILD_EXCEPTIONS
if BUILD_THREADS

BUILT_SOURCES += \
  Foo_BC.cpp \
  Foo_BC.h \
  Foo_BC.inl \
  Foo_BS.cpp \
  Foo_BS.h \
  Foo_BS.inl

CLEANFILES += \
  Foo_B-stamp \
  Foo_BC.cpp \
  Foo_BC.h \
  Foo_BC.inl \
  Foo_BS.cpp \
  Foo_BS.h \
  Foo_BS.inl

Foo_BC.cpp Foo_BC.h Foo_BC.inl Foo_BS.cpp Foo_BS.h Foo_BS.inl: Foo_B-stamp

Foo_B-stamp: $(srcdir)/Foo_B.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -I$(TAO_ROOT)/tests/CSD_Strategy_Tests/TP_Common -b -Wb,export_macro=CSD_TP_Foo_B_Export -Wb,export_include=CSD_TP_Foo_B_Export.h $(srcdir)/Foo_B.idl
	@touch $@

BUILT_SOURCES += \
  CallbackC.cpp \
  CallbackC.h \
  CallbackC.inl \
  CallbackS.cpp \
  CallbackS.h \
  CallbackS.inl

CLEANFILES += \
  Callback-stamp \
  CallbackC.cpp \
  CallbackC.h \
  CallbackC.inl \
  CallbackS.cpp \
  CallbackS.h \
  CallbackS.inl

CallbackC.cpp CallbackC.h CallbackC.inl CallbackS.cpp CallbackS.h CallbackS.inl: Callback-stamp

Callback-stamp: $(srcdir)/Callback.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -I$(TAO_ROOT)/tests/CSD_Strategy_Tests/TP_Common -b -Wb,export_macro=CSD_TP_Foo_B_Export -Wb,export_include=CSD_TP_Foo_B_Export.h $(srcdir)/Callback.idl
	@touch $@

noinst_LTLIBRARIES = libCSD_TP_Foo_B.la

libCSD_TP_Foo_B_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/tests/CSD_Strategy_Tests/TP_Common \
  -I$(TAO_BUILDDIR)/tests/CSD_Strategy_Tests/TP_Common \
  -I$(TAO_ROOT)/tao \
  -DCSD_TP_FOO_B_BUILD_DLL

libCSD_TP_Foo_B_la_SOURCES = \
  CallbackC.cpp \
  CallbackS.cpp \
  Callback_i.cpp \
  Foo_BC.cpp \
  Foo_BS.cpp \
  Foo_B_ClientEngine.cpp \
  Foo_B_SimpleClientEngine.cpp \
  Foo_B_Statistics.cpp \
  Foo_B_i.cpp

libCSD_TP_Foo_B_la_LDFLAGS = \
 -L$(TAO_ROOT)/tests/CSD_Strategy_Tests/TP_Common

noinst_HEADERS = \
  Callback.idl \
  CallbackC.h \
  CallbackC.inl \
  CallbackS.h \
  CallbackS.inl \
  Callback_i.h \
  Foo_B.idl \
  Foo_BC.h \
  Foo_BC.inl \
  Foo_BS.h \
  Foo_BS.inl \
  Foo_B_ClientEngine.h \
  Foo_B_SimpleClientEngine.h \
  Foo_B_Statistics.h \
  Foo_B_i.h

endif BUILD_THREADS
endif BUILD_EXCEPTIONS

## Clean up template repositories, etc.
clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
