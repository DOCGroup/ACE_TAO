
This is the cubit example that does everything using DII requests. It uses the server in IDL_Cubit.

***NOTE: This doesn't work on NT yet. This version was built with SunCC.

A one-button test function hasn't been written yet, so you have to manually run the server first (in IDL_Cubit). Then run the client with zero or more of the following args:

	[-d]			Increments TAO_debug_level.

	[-n <# of calls>]	Sets the # of calls per loop (default is 250).

	[-i <factory IOR>]	For passing the IOR by hand.

	[-f <filename>]		If server is run with [-o <filename>] option, 
				it outputs its factory IOR to a file, which
				the client can read.

	[-x]			Shuts down server when finished.

	[-s]			Disables use of the TAO naming service (-i and
				-f options do this automatically).

If using the -i option, you might want to run the server with the option [-ORBobjrefstyle url]. This will cause the server to display its IOR in a more human-readable form. Make sure you use the factory IOR, NOT the nameservice IOR. The server displays both.

The command line options, default calls per loop, order and display format of the stats are all similar to those in the IDL_Cubit tests.
upported, as shown in parse_args in client.cpp.

On the Unix side, the Makefile will also build IDL_Cubit/server if
necessary (thanks to David Levine). If the server exits when run on a
Unix machine, it probbly means that someone else is also running it 
and the defaults port numbers have collided. Just add the arg
[-ORBport 0] when running the server and it will get a new port #.
