$Id$

According to corba C++ mapping if bounds for IDL-bounded strings are violated
then BAD_PARAM has to be thrown. Currently MARSHAL is thrown.


_Expected successful result_:

$ ./run_test.pl
Test_Interceptors::Visual: <IOR:010000000f00000049444c3a546573742f413a312e3000000100000000000000800000000101020020000000777339332e6865616471756172746572732e65636c6970736573702e636f6d0030bb00001b00000014010f0052535445c43349c07a0b000000000001000000010000000002000000000000000800000001000000004f41540100000018000000010000000100010001000000010001050901010000000000>
TAO (11647|67364256) - ServerRequest::tao_send_reply_exception, could not marshal exception reply
TAO (11647|67364256) - ServerRequest::tao_send_reply_exception, could not marshal exception reply
event loop finished
Test is OK.

_Expected regression result_:

$ ./run_test.pl
Test_Interceptors::Visual: <IOR:010000000f00000049444c3a546573742f413a312e3000000100000000000000800000000101020020000000777339332e6865616471756172746572732e65636c6970736573702e636f6d0006a200001b00000014010f005253541dc5334967c807000000000001000000010000000002000000000000000800000001000000004f41540100000018000000010000000100010001000000010001050901010000000000>
ERROR: Wrong exception is thrown in a call for `in bounded_string`.
ERROR: Wrong exception is thrown in a call for `in string<BOUND>`.
ERROR: Wrong exception is thrown in a call for `out bounded_string`.
ERROR: Wrong exception is thrown in a call for `out string<BOUND>`.
ERROR: Wrong exception is thrown in a call for `inout bounded_string` (server side).
ERROR: Wrong exception is thrown in a call for `inout string<BOUND>` (server side).
ERROR: Wrong exception is thrown in a call for `inout bounded_string`.
ERROR: Wrong exception is thrown in a call for `inout string<BOUND>`.
ERROR: Wrong exception is thrown in a call when server returns `bounded_string`.
ERROR: Wrong exception is thrown in a call when server returns `string<BOUND>`.
ERROR: No exception is thrown in a call for `in sequence<bounded_string>`.
ERROR: No exception is thrown in a call for `in sequence<string<BOUND>>`.
ERROR: No exception is thrown in a call for `out sequence<bounded_string>`.
ERROR: No exception is thrown in a call for `out sequence<string<BOUND>>`.
ERROR: No exception is thrown in a call for `inout sequence<bounded_string>` (server side).
ERROR: No exception is thrown in a call for `inout sequence<string<BOUND>>` (server side).
ERROR: No exception is thrown in a call for `inout sequence<bounded_string>`.
ERROR: No exception is thrown in a call for `inout sequence<string<BOUND>>`.
ERROR: No exception is thrown in a call when server returns `sequence<bounded_string>`.
ERROR: No exception is thrown in a call when server returns `sequence<string<BOUND>>`.
ERROR: No exception is thrown in a call for `in bounded_string array[]`.
ERROR: No exception is thrown in a call for `in string<BOUND> array[]`.
ERROR: No exception is thrown in a call for `out bounded_string array[]`.
ERROR: No exception is thrown in a call for `out string<BOUND> array[]`.
ERROR: No exception is thrown in a call for `inout bounded_string array[]` (server side).
ERROR: No exception is thrown in a call for `inout string<BOUND> array[]` (server side).
ERROR: No exception is thrown in a call for `inout bounded_string array[]`.
ERROR: No exception is thrown in a call for `inout string<BOUND> array[]`.
ERROR: No exception is thrown in a call when server returns `bounded_string array[]`.
ERROR: No exception is thrown in a call when server returns `string<BOUND> array[]`.
ERROR: No exception is thrown in a call for `in struct {}`.
ERROR: No exception is thrown in a call for `out struct {}`.
ERROR: No exception is thrown in a call for `inout struct {}` (server side).
ERROR: No exception is thrown in a call for `inout struct {}`.
ERROR: No exception is thrown in a call when server returns `struct {}`.
ERROR: No exception is thrown in a call for `in union {}`.
ERROR: No exception is thrown in a call for `out union {}`.
ERROR: No exception is thrown in a call for `inout union {}` (server side).
ERROR: No exception is thrown in a call for `inout union {}`.
ERROR: No exception is thrown in a call when when server returns `union {}`.
ERROR: No exception is thrown in a call for `in valuebox {bounded_string}`.
ERROR: No exception is thrown in a call for `in valuebox {string<BOUND>}`.
ERROR: No exception is thrown in a call for `out valuebox {bounded_string}`.
ERROR: No exception is thrown in a call for `out valuebox {string<BOUND>}`.
ERROR: No exception is thrown in a call for `inout valuebox {bounded_string}` (server side).
ERROR: No exception is thrown in a call for `inout valuebox {string<BOUND>}` (server side).
ERROR: No exception is thrown in a call for `inout valuebox {bounded_string}`.
ERROR: No exception is thrown in a call for `inout valuebox {string<BOUND>}`.
ERROR: No exception is thrown in a call when server returns `valuebox {bounded_string}`.
ERROR: No exception is thrown in a call when server returns `valuebox {string<BOUND>}`.
ERROR: No exception is thrown in a call for `in valuetype {}`.
ERROR: No exception is thrown in a call for `out valuetype {}`.
ERROR: No exception is thrown in a call for `inout valuetype {}` (server side).
ERROR: No exception is thrown in a call for `inout valuetype {}`.
ERROR: No exception is thrown in a call when server returns `valuetype {}`.
ERROR: Illegal exception is thrown.
ERROR: Illegal exception is thrown.
event loop finished
ERROR: client returned 1
