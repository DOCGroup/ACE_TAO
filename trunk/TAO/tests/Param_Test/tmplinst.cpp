// $Id$

// The contents of this file REALLY should be generated by the IDL
// compiler, but that functionality isn't available yet.

#include "param_testCli.h"

ACE_RCSID(Param_Test, tmplinst, "$Id$")

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)
template class TAO_Unbounded_Sequence<CORBA::Any>;
template class TAO_Bounded_Sequence<CORBA::Long,32>;
template class TAO_Unbounded_Sequence<CORBA::Short>;
template class TAO_Bounded_Sequence<CORBA::Short,32>;
template class TAO_Bounded_String_Sequence<32>;
template class TAO_Unbounded_Sequence<Param_Test::Fixed_Struct>;
template class TAO_Bounded_Sequence<Param_Test::Fixed_Struct,32>;
template class TAO_Unbounded_Object_Sequence<Coffee,Coffee_var>;
template class TAO_Bounded_Object_Sequence<Coffee,Coffee_var,32>;
template class TAO_Unbounded_Array_Sequence<Param_Test::Fixed_Array,Param_Test::Fixed_Array_var>;
template class TAO_Bounded_Array_Sequence<Param_Test::Fixed_Array,Param_Test::Fixed_Array_var,32>;
#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
#pragma instantiate TAO_Unbounded_Sequence<CORBA::Any>
#pragma instantiate TAO_Bounded_Sequence<CORBA::Long,32>
#pragma instantiate TAO_Unbounded_Sequence<CORBA::Short>
#pragma instantiate TAO_Bounded_Sequence<CORBA::Short,32>
#pragma instantiate TAO_Bounded_String_Sequence<32>
#pragma instantiate TAO_Unbounded_Sequence<Param_Test::Fixed_Struct>
#pragma instantiate TAO_Bounded_Sequence<Param_Test::Fixed_Struct,32>
#pragma instantiate TAO_Unbounded_Object_Sequence<Coffee,Coffee_var>
#pragma instantiate TAO_Bounded_Object_Sequence<Coffee,Coffee_var,32>
#pragma instantiate TAO_Unbounded_Array_Sequence<Param_Test::Fixed_Array,Param_Test::Fixed_Array_var>
#pragma instantiate TAO_Bounded_Array_Sequence<Param_Test::Fixed_Array,Param_Test::Fixed_Array_var,32>
#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
