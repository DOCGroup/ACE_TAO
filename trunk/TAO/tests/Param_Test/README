// $Id$

// ============================================================================
//
// = LIBRARY
//    TAO/tests/Param_Test
//
// = FILENAME
//    README
//
// = AUTHOR
//    Aniruddha Gokhale
//
// ============================================================================

This directory contains an application that tests all the parameter
passing conventions in CORBA for a number of OMG IDL data types.

Type "make" to make the application. The server executable is called
"server" and the client executable is called "client".

You should have the TAO IDL compiler and the TAO library installed
before using this application.

To run the server, type

   server [arguments to ORB_init] [-d] [-o <ior_output_file>]

          arguments to ORB_init start with the letters -ORB. Please
          see TAO documentattion on all the supported arguments

          -d for debugging. 
	  -o <ior_output_file> for outputting the servant IOR to a file.

To run the client, type

   client [arguments to ORB_init] [options for this application]

   Supported options are:

   [-d]                                 debugging
   [-n loopcount]                       number of times to run the test
   [-f servant-IOR-file]		reads the servant-IOR from the specified file.
   [-k Param_Test-obj-ref-key]          object key of Param_Test object
   [-h hostname]                        host to bind to
   [-p port]                            port number of server
   [-i invocation (sii/dii)]            default is static invocation
                                        interface. To use DII, type
                                        -i dii
   [-t data type]
       Data types supported in this version are:

       short                for shorts
       short                for long long
       ubstring             for unbounded string
       bdstring             for bounded string
       fixed_struct         for fixed sized structs
       ub_strseq            for sequences of strings
       bd_strseq            for bounded sequences of strings
       var_struct           for variable structs
       nested_struct        for nested structs
       ub_struct_seq        for sequences of structs
       bd_struct_seq        for bounded sequences of structs
       any                  for Any
       objref               for object references
       objref_sequence      for sequences object references
       any_sequence         for sequences of Any
       ub_short_sequence    for sequences of shorts
       ub_long_sequence     for sequences of shorts
       bd_short_sequence    for bounded sequences of shorts
       bd_long_sequence     for bounded sequences of shorts
       fixed_array          for arrays of fixed sized types (longs)
       var_array            for arrays of var sized types (strings)


	There are 2 options of giving the Param_obj-ref-key i.e IOR to the client:

	1. Using the -f option to read the IOR from a file.

	2. Using the -k option to read the IOR from the 	
	   command line.

run_test.pl:
-----------
	There is a perl script in this directory named run_test.pl to test all
	the types. It starts the server first and then runs the client with 
	the different data type parameters. The arguments it takes are:
	
	-n num              -- runs the client num times (default is 5)
        -d                  -- runs each in debug mode
        -onewin             -- keeps all tests in one window on NT
        -h                  -- prints this information
        -t type             -- runs only one type of param test
        -i (dii|sii)        -- Changes the type of invocation (default is sii)
        
NOTE**
----
	Currently there are still problems with multiple virtual inheritance
	used in the objref data type. In these tests, type objref works with
	sii but not dii, and objref_sequence does not work for either sii or dii.





