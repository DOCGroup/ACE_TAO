##  Process this file with automake to create Makefile.in
##
## $Id$
##
## This file was generated by MPC.  Any changes made directly to
## this file will be lost the next time it is generated.
##
## MPC Command:
## ../bin/mwc.pl -type automake -noreldefs TAO.mwc

ACE_BUILDDIR = $(top_builddir)/..
ACE_ROOT = $(top_srcdir)/..
TAO_BUILDDIR = $(top_builddir)
TAO_IDL = ACE_ROOT=$(ACE_ROOT) TAO_ROOT=$(TAO_ROOT) $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDL_DEP = $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDLFLAGS = -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I$(TAO_ROOT) -I$(srcdir) -g $(ACE_BUILDDIR)/apps/gperf/src/ace_gperf
TAO_ROOT = $(top_srcdir)

noinst_LTLIBRARIES =

## Makefile.Collocation_Idl.am

BUILT_SOURCES = \
  DiamondC.cpp \
  DiamondC.h \
  DiamondC.inl \
  DiamondS.cpp \
  DiamondS.h \
  DiamondS.inl

CLEANFILES = \
  Diamond-stamp \
  DiamondC.cpp \
  DiamondC.h \
  DiamondC.inl \
  DiamondS.cpp \
  DiamondS.h \
  DiamondS.inl

DiamondC.cpp DiamondC.h DiamondC.inl DiamondS.cpp DiamondS.h DiamondS.inl: Diamond-stamp

Diamond-stamp: $(srcdir)/Diamond.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -Sa -St -Wb,skel_export_macro=Diamond_Export -Wb,stub_export_macro=MY_Stub_Export -Wb,skel_export_include=diamond_export.h -Wb,stub_export_include=stub_export.h -Gd -St -Sa $(srcdir)/Diamond.idl
	@touch $@

noinst_HEADERS = \
  Diamond.idl

## Makefile.Collocation_Test_Stub.am

if BUILD_EXCEPTIONS

noinst_LTLIBRARIES += libCollocation_Test_Stub.la

libCollocation_Test_Stub_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DMY_STUB_BUILD_DLL

libCollocation_Test_Stub_la_SOURCES = \
  DiamondC.cpp

noinst_HEADERS += \
  Collocation_Tester.h \
  Diamond_i.h \
  diamond_export.h \
  stub_export.h

endif BUILD_EXCEPTIONS

## Makefile.Collocation_Diamond.am

if BUILD_EXCEPTIONS

noinst_LTLIBRARIES += libCollocation_Diamond.la

libCollocation_Diamond_la_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -DDIAMOND_BUILD_DLL

libCollocation_Diamond_la_SOURCES = \
  DiamondS.cpp \
  Diamond_i.cpp

noinst_HEADERS += \
  Diamond_i.h

endif BUILD_EXCEPTIONS

## Makefile.Collocation_Server.am

if BUILD_EXCEPTIONS

noinst_PROGRAMS = Collocation

Collocation_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR)

Collocation_SOURCES = \
  Collocation.cpp \
  Collocation_Tester.cpp \
  Collocation_Tester.h

Collocation_LDADD = \
  libCollocation_Test_Stub.la \
  libCollocation_Diamond.la \
  $(TAO_BUILDDIR)/tao/libTAO_Strategies.la \
  $(TAO_BUILDDIR)/tao/libTAO_PI.la \
  $(TAO_BUILDDIR)/tao/libTAO_CodecFactory.la \
  $(TAO_BUILDDIR)/tao/libTAO_PortableServer.la \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

endif BUILD_EXCEPTIONS

## Clean up template repositories, etc.
clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
