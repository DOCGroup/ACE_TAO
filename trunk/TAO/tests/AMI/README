# $Id$

Description:
This is a simple test for AMI callback model.


Note:
Use TAO_HAS_CORBA_MESSAGING
and TAO_HAS_AMI_CALLBACK
to compile TAO. This enables the AMI code in it.

The TAO IDL compiler needs to be compiled with IDL_HAS_VALUETYPE.
Use -GC on the TAO IDL compiler if you want to generate
code for AMI callbacks. 

Usage:
=====
$ server -o ior
$ simple_client -ORBSvcConf muxed.conf -k file://ior -i 10

simple-client:
=============

$ simple_client -k file://test_ior [-i <niterations] [-x] [-d] \
     -ORBSvcConf {muxed.conf,
                  exclusive.conf}

-d Enable debug messages.
-i Number of iterations.
-k IOR.
-x Call shutdown method.

Issues <i> number of asynchronous requests. Then it issues a
synchronous request, which collects the replies.

If you choose Muxed Transport configuration, then the synchronous
request  will collect all the asynchronous replies also, since the
replies will arrive in order. 

But in the Exclusive Transport, the synchronous request might now
collect all the AMI replies. It might return as soon as its reply
arrives. 



