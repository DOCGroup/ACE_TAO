$Id$

This is a test for RTCORBA::PriorityBandedConnectionPolicy.

Description
-----------

This test consists of several mini-tests, each exercising some aspect
of PriorityBandedConnectionPolicy:

(Server)

- Attempt to create a POA for which the bands do not match thread
  lanes.  Should get POA::InvalidPolicy exception.

- Attempt to register an servant with priority that doesn't match the
  resources/configuration of that POA, i.e., its bands/lanes.  Should
  get BAD_PARAM exception.

(Client)

- Set RTCORBA::PriorityBandedConnectionPolicy on the object where
  bands do not match server resources, i.e., threadpool lanes.
  Attempt an invocation on the object.  Should get INV_POLICY
  exception.

- Now attempt one more invocation on the same object (with
  CLIENT_PROPAGATED and bands), but with the client thread priority
  not matching any of the bands.  Should get INV_POLICY exception.

- Set RTCORBA::PriorityBandedConnectionPolicy on the object with
  CLIENT_PROPAGATED priority model where bands match server resources.
  Attempt several invocations on the object, changing the priority of
  the invoking client thread before each.  This should succeed.
  Verify that correct band is being used for each invocation, and that
  appropriate server threadpool lane is providing the service.

- Attempt invocation on an object with SERVER_DECLARED priority model
  and RTCORBA::PriorityBandedConnectionPolicy set using the client
  thread with priority not matching any of the object's priority
  bands.  This should succeed. Verify the correct band and server
  threadpool lane are being used for the invocation.


Check run_test.pl to see how to set up a run for this test.
