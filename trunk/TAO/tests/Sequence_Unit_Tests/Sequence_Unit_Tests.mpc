// -*- MPC -*-
// $Id$

project(*UB_Simple_Types) : taoexe {
  Source_Files {
    Unbounded_Simple_Types.cpp
  }
}

project(*Unbounded_Octet) : taoexe {
  Source_Files {
    Unbounded_Octet.cpp
  }
}

project(*B_Simple_Types) : taoexe {
  Source_Files {
    Bounded_Simple_Types.cpp
  }
}

project(*Unbounded_String) : taoexe {
  Source_Files {
    Unbounded_String.cpp
  }
}

project(*Bounded_String) : taoexe {
  Source_Files {
    Bounded_String.cpp
  }
}

project(*UB_Arr_Seq): taoexe {
  // Temporarily disabled this test, need to change the mock_array a lot
  requires += dummy_label
  exename = unbounded_array_sequence_ut
  Source_Files {
    mock_array.cpp
    unbounded_array_sequence_ut.cpp
  }
}

project(*Obj_Ref_Seq_Elem): taoexe {
  exename = object_reference_sequence_element_ut
  Source_Files {
    mock_reference.cpp
    object_reference_sequence_element_ut.cpp
  }
}

project(*UB_Obj_Ref_Seq): taoexe {
  exename = unbounded_object_reference_sequence_ut
  Source_Files {
    mock_reference.cpp
    unbounded_object_reference_sequence_ut.cpp
  }
}

project(*UB_Sequence_CDR): taoexe {
  exename = unbounded_sequence_cdr_ut
  Source_Files {
    mock_reference.cpp
    unbounded_sequence_cdr_ut.cpp
  }
}

project(*B_Sequence_CDR): taoexe {
  exename = bounded_sequence_cdr_ut
  Source_Files {
    mock_reference.cpp
    bounded_sequence_cdr_ut.cpp
  }
}

project(*UB_Fwd_Ob_Ref_Seq): taoexe {
  exename = unbounded_fwd_object_reference_sequence_ut
  Source_Files {
    fwd_mock_reference.cpp
    unbounded_fwd_object_reference_sequence_ut.cpp
  }
}

project(*UB_Octet_Sequence): taoexe {
  exename = unbounded_octet_sequence_ut
  Source_Files {
    mock_reference.cpp
    unbounded_octet_sequence_ut.cpp
  }
}

project(*UB_Oct_Seq_No_Cpy): taoexe {
  exename = unbounded_octet_sequence_nocopy_ut
  Source_Files {
    mock_reference.cpp
    unbounded_octet_sequence_nocopy_ut.cpp
  }
}

project(*B_Obj_Ref_Seq): taoexe {
  exename = bounded_object_reference_sequence_ut
  Source_Files {
    mock_reference.cpp
    bounded_object_reference_sequence_ut.cpp
  }
}

project(*String_Seq_Elem): taoexe {
  exename = string_sequence_element_ut
  Source_Files {
    string_sequence_element_ut.cpp
  }
}

project(*UB_String_Seq): taoexe {
  exename = unbounded_string_sequence_ut
  Source_Files {
    unbounded_string_sequence_ut.cpp
  }
}

project(*B_String_Seq): taoexe {
  exename = bounded_string_sequence_ut
  Source_Files {
    bounded_string_sequence_ut.cpp
  }
}

project(*Test_Alloc_Traits): taoexe {
  exename = testing_allocation_traits_ut
  Source_Files {
    testing_allocation_traits_ut.cpp
  }
}

project(*UB_Value_Sequence): taoexe {
  exename = unbounded_value_sequence_ut
  Source_Files {
    unbounded_value_sequence_ut.cpp
  }
}

project(*B_Value_Sequence): taoexe {
  exename = bounded_value_sequence_ut
  Source_Files {
    bounded_value_sequence_ut.cpp
  }
}
