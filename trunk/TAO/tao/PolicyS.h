// $Id$

/* -*- C++ -*- */

// ******  Code generated by the The ACE ORB (TAO) IDL Compiler *******
// TAO ORB and the TAO IDL Compiler have been developed by Washington
// University Computer Science's Distributed Object Computing Group.
//
// Information on TAO is available at
//                 http://www.cs.wustl.edu/~schmidt/TAO.html

#if !defined (_TAO_IDL_POLICYS_H_)
#define _TAO_IDL_POLICYS_H_

#include "PolicyC.h"

class TAO_Export  POA_CORBA
{
public:
  class Policy;
  typedef Policy *Policy_ptr;
  class TAO_Export  Policy :  public virtual PortableServer::ServantBase
  {
  protected:
    Policy (void);
  public:
    virtual ~Policy (void);
    virtual CORBA::Boolean _is_a (
        const char* logical_type_id,
        CORBA::Environment &_tao_environment);
    virtual void* _downcast (
        const char* logical_type_id
      );
    virtual CORBA::PolicyType policy_type (
        CORBA::Environment &_tao_environment
       ) = 0;
    static void _get_policy_type_skel (
        CORBA::ServerRequest &_tao_req,
        void *_tao_obj,
        void *_tao_context,
        CORBA::Environment &_tao_env
      );

    virtual CORBA::Policy_ptr copy (
        CORBA::Environment &_tao_environment
       ) = 0;
    static void copy_skel (
        CORBA::ServerRequest &_tao_req,
        void *_tao_obj,
        void *_tao_context,
        CORBA::Environment &_tao_env
      );

    virtual void destroy (
        CORBA::Environment &_tao_environment
       ) = 0;
    static void destroy_skel (
        CORBA::ServerRequest &_tao_req,
        void *_tao_obj,
        void *_tao_context,
        CORBA::Environment &_tao_env
      );

    static void _is_a_skel (CORBA::ServerRequest &req, void *obj, void *context, CORBA::Environment &_tao_enviroment);

    virtual void _dispatch (CORBA::ServerRequest &_tao_req, void *_tao_context, CORBA::Environment &_tao_env);

    CORBA::Policy *_this (CORBA::Environment &_tao_environment);
    virtual const char* _interface_repository_id (void) const;
  };


#if !defined (_CORBA_POLICY___COLLOCATED_SH_)
#define _CORBA_POLICY___COLLOCATED_SH_

  class TAO_Export  _tao_collocated_Policy     : public virtual CORBA_Policy
  {
  public:
    _tao_collocated_Policy (
        Policy_ptr  servant,
        STUB_Object *stub
      );
    Policy_ptr _get_servant (void) const;
    virtual CORBA::Boolean _is_a (
        const char *logical_type_id,
        CORBA::Environment &_tao_environment
      );
    virtual CORBA::PolicyType policy_type (
        CORBA::Environment &_tao_environment
       );
    virtual CORBA::Policy_ptr copy (
        CORBA::Environment &_tao_environment
       );
    virtual void destroy (
        CORBA::Environment &_tao_environment
       );

  private:
    Policy_ptr servant_;
  };


#endif /* end #if !defined */


};


#if defined (__ACE_INLINE__)
#include "PolicyS.i"
#endif /* defined INLINE */


#endif /* if !defined */
