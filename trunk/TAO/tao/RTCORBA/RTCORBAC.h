// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:151

#ifndef _TAO_IDL_ORIG_RTCORBAC_H_
#define _TAO_IDL_ORIG_RTCORBAC_H_
#include "ace/pre.h"
#include "rtcorba_export.h"


#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */
#include "tao/corbafwd.h"
#include "tao/VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Sequence_T.h"
#include "tao/PolicyC.h"
#include "tao/TimeBaseC.h"
#include "tao/Encodable.h"

// Forward references.
class TAO_Priority_Mapping_Manager;
class TAO_Priority_Mapping_Manager_var;
class TAO_Priority_Mapping_Manager_out;
class TAO_Priority_Mapping;
class TAO_Network_Priority_Mapping_Manager;
class TAO_Network_Priority_Mapping_Manager_var;
class TAO_Network_Priority_Mapping_Manager_out;
class TAO_Network_Priority_Mapping;

#ifndef TAO_RTCORBA_SAFE_INCLUDE
#error "You should not include RTCORBAC.h directly, use RTCORBA.h"
#endif /* !TAO_RTCORBA_SAFE_INCLUDE */



#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_RTCORBA_Export

#if defined (TAO_EXPORT_NESTED_CLASSES)
#  if defined (TAO_EXPORT_NESTED_MACRO)
#    undef TAO_EXPORT_NESTED_MACRO
#  endif /* defined (TAO_EXPORT_NESTED_MACRO) */
#  define TAO_EXPORT_NESTED_MACRO TAO_RTCORBA_Export
#endif /* TAO_EXPORT_NESTED_CLASSES */

#if defined(_MSC_VER)
#if (_MSC_VER >= 1200)
#pragma warning(push)
#endif /* _MSC_VER >= 1200 */
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:48

TAO_NAMESPACE  RTCORBA
{
    // TAO-specific
  typedef TAO_Priority_Mapping_Manager PriorityMappingManager;
  typedef TAO_Priority_Mapping_Manager *PriorityMappingManager_ptr;
  typedef TAO_Priority_Mapping_Manager_var PriorityMappingManager_var;
  typedef TAO_Priority_Mapping_Manager_out PriorityMappingManager_out;

  typedef TAO_Network_Priority_Mapping_Manager NetworkPriorityMappingManager;
  typedef TAO_Network_Priority_Mapping_Manager *NetworkPriorityMappingManager_ptr;
  typedef TAO_Network_Priority_Mapping_Manager_var NetworkPriorityMappingManager_var;
  typedef TAO_Network_Priority_Mapping_Manager_out NetworkPriorityMappingManager_out;

  typedef CORBA::Long NetworkPriority;

  typedef TAO_Priority_Mapping PriorityMapping;
  typedef TAO_Network_Priority_Mapping NetworkPriorityMapping;
  // End TAO-specific

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:343
  
  typedef CORBA::Short NativePriority;
  typedef CORBA::Short_out NativePriority_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_NativePriority;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:343
  
  typedef CORBA::Short Priority;
  typedef CORBA::Short_out Priority_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Priority;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52
  
  const RTCORBA::Priority minPriority = 0;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52
  
  const RTCORBA::Priority maxPriority = 32767;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:343
  
  typedef CORBA::Long NetworkPriority;
  typedef CORBA::Long_out NetworkPriority_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_NetworkPriority;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:343
  
  typedef CORBA::ULong ThreadpoolId;
  typedef CORBA::ULong_out ThreadpoolId_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ThreadpoolId;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_type.cpp:249
  
  struct ThreadpoolLane;
  
  typedef
    TAO_Fixed_Var_T<
        ThreadpoolLane
      >
    ThreadpoolLane_var;
  
  typedef
    ThreadpoolLane &
    ThreadpoolLane_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/structure_ch.cpp:52
  
  struct TAO_RTCORBA_Export ThreadpoolLane
  {
    typedef ThreadpoolLane_var _var_type;
    
    static void _tao_any_destructor (void *);
    RTCORBA::Priority lane_priority;
    CORBA::ULong static_threads;
    CORBA::ULong dynamic_threads;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ThreadpoolLane;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:91

#if !defined (_RTCORBA_THREADPOOLLANES_CH_)
#define _RTCORBA_THREADPOOLLANES_CH_
  
  class ThreadpoolLanes;
  
  typedef
    TAO_FixedSeq_Var_T<
        ThreadpoolLanes,
        ThreadpoolLane
      >
    ThreadpoolLanes_var;
  
  typedef
    TAO_Seq_Out_T<
        ThreadpoolLanes,
        ThreadpoolLanes_var,
        ThreadpoolLane
      >
    ThreadpoolLanes_out;
  
  class TAO_RTCORBA_Export ThreadpoolLanes
    : public
        TAO_Unbounded_Sequence<
            ThreadpoolLane
          >
  {
  public:
    ThreadpoolLanes (void);
    ThreadpoolLanes (CORBA::ULong max);
    ThreadpoolLanes (
        CORBA::ULong max,
        CORBA::ULong length,
        ThreadpoolLane* buffer, 
        CORBA::Boolean release = 0
      );
    ThreadpoolLanes (const ThreadpoolLanes &);
    ~ThreadpoolLanes (void);
    
    static void _tao_any_destructor (void *);
    
    typedef ThreadpoolLanes_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ThreadpoolLanes;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::PolicyType PRIORITY_MODEL_POLICY_TYPE = 40U;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/enum_ch.cpp:57
  
  enum PriorityModel
  {
    CLIENT_PROPAGATED,
    SERVER_DECLARED
  };
  
  typedef PriorityModel &PriorityModel_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_PriorityModel;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:570

#if !defined (_RTCORBA_PRIORITYMODELPOLICY__ODDS_N_ENDS_CH_)
#define _RTCORBA_PRIORITYMODELPOLICY__ODDS_N_ENDS_CH_
  
  class PriorityModelPolicy;
  typedef PriorityModelPolicy *PriorityModelPolicy_ptr;
  struct tao_PriorityModelPolicy_life;
  
  typedef
    TAO_Objref_Var_T<
        PriorityModelPolicy,
        tao_PriorityModelPolicy_life
      >
    PriorityModelPolicy_var;
  
  typedef
    TAO_Objref_Out_T<
        PriorityModelPolicy,
        tao_PriorityModelPolicy_life
      >
    PriorityModelPolicy_out;
  
  struct TAO_RTCORBA_Export tao_PriorityModelPolicy_life
  {
    static PriorityModelPolicy_ptr tao_duplicate (PriorityModelPolicy_ptr);
    static void tao_release (PriorityModelPolicy_ptr);
    static PriorityModelPolicy_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        PriorityModelPolicy_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_RTCORBA_Export tao_PriorityModelPolicy_cast
  {
    static PriorityModelPolicy_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:50

#if !defined (_RTCORBA_PRIORITYMODELPOLICY_CH_)
#define _RTCORBA_PRIORITYMODELPOLICY_CH_
  
  class TAO_RTCORBA_Export PriorityModelPolicy
    : public virtual CORBA::Policy
  {
  public:
    typedef PriorityModelPolicy_ptr _ptr_type;
    typedef PriorityModelPolicy_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static PriorityModelPolicy_ptr _duplicate (PriorityModelPolicy_ptr obj);
    
    static PriorityModelPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static PriorityModelPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static PriorityModelPolicy_ptr _nil (void)
      {
        return (PriorityModelPolicy_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::RTCORBA::PriorityModel priority_model (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual RTCORBA::Priority server_priority (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:207

    virtual void *_tao_QueryInterface (ptrdiff_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    PriorityModelPolicy (void);
    virtual ~PriorityModelPolicy (void);
  
  private:
    PriorityModelPolicy (const PriorityModelPolicy &);
    void operator= (const PriorityModelPolicy &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_PriorityModelPolicy;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::PolicyType THREADPOOL_POLICY_TYPE = 41U;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:570

#if !defined (_RTCORBA_THREADPOOLPOLICY__ODDS_N_ENDS_CH_)
#define _RTCORBA_THREADPOOLPOLICY__ODDS_N_ENDS_CH_
  
  class ThreadpoolPolicy;
  typedef ThreadpoolPolicy *ThreadpoolPolicy_ptr;
  struct tao_ThreadpoolPolicy_life;
  
  typedef
    TAO_Objref_Var_T<
        ThreadpoolPolicy,
        tao_ThreadpoolPolicy_life
      >
    ThreadpoolPolicy_var;
  
  typedef
    TAO_Objref_Out_T<
        ThreadpoolPolicy,
        tao_ThreadpoolPolicy_life
      >
    ThreadpoolPolicy_out;
  
  struct TAO_RTCORBA_Export tao_ThreadpoolPolicy_life
  {
    static ThreadpoolPolicy_ptr tao_duplicate (ThreadpoolPolicy_ptr);
    static void tao_release (ThreadpoolPolicy_ptr);
    static ThreadpoolPolicy_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        ThreadpoolPolicy_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_RTCORBA_Export tao_ThreadpoolPolicy_cast
  {
    static ThreadpoolPolicy_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:50

#if !defined (_RTCORBA_THREADPOOLPOLICY_CH_)
#define _RTCORBA_THREADPOOLPOLICY_CH_
  
  class TAO_RTCORBA_Export ThreadpoolPolicy
    : public virtual CORBA::Policy
  {
  public:
    typedef ThreadpoolPolicy_ptr _ptr_type;
    typedef ThreadpoolPolicy_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static ThreadpoolPolicy_ptr _duplicate (ThreadpoolPolicy_ptr obj);
    
    static ThreadpoolPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ThreadpoolPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ThreadpoolPolicy_ptr _nil (void)
      {
        return (ThreadpoolPolicy_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual RTCORBA::ThreadpoolId threadpool (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:207

    virtual void *_tao_QueryInterface (ptrdiff_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    ThreadpoolPolicy (void);
    virtual ~ThreadpoolPolicy (void);
  
  private:
    ThreadpoolPolicy (const ThreadpoolPolicy &);
    void operator= (const ThreadpoolPolicy &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ThreadpoolPolicy;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:570

#if !defined (_RTCORBA_PROTOCOLPROPERTIES__ODDS_N_ENDS_CH_)
#define _RTCORBA_PROTOCOLPROPERTIES__ODDS_N_ENDS_CH_
  
  class ProtocolProperties;
  typedef ProtocolProperties *ProtocolProperties_ptr;
  struct tao_ProtocolProperties_life;
  
  typedef
    TAO_Objref_Var_T<
        ProtocolProperties,
        tao_ProtocolProperties_life
      >
    ProtocolProperties_var;
  
  typedef
    TAO_Objref_Out_T<
        ProtocolProperties,
        tao_ProtocolProperties_life
      >
    ProtocolProperties_out;
  
  struct TAO_RTCORBA_Export tao_ProtocolProperties_life
  {
    static ProtocolProperties_ptr tao_duplicate (ProtocolProperties_ptr);
    static void tao_release (ProtocolProperties_ptr);
    static ProtocolProperties_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        ProtocolProperties_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_RTCORBA_Export tao_ProtocolProperties_cast
  {
    static ProtocolProperties_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:50

#if !defined (_RTCORBA_PROTOCOLPROPERTIES_CH_)
#define _RTCORBA_PROTOCOLPROPERTIES_CH_
  
  class TAO_RTCORBA_Export ProtocolProperties
    : public virtual CORBA::Object
    , public TAO_Encodable
  {
  public:
    typedef ProtocolProperties_ptr _ptr_type;
    typedef ProtocolProperties_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static ProtocolProperties_ptr _duplicate (ProtocolProperties_ptr obj);
    
    static ProtocolProperties_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ProtocolProperties_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ProtocolProperties_ptr _nil (void)
      {
        return (ProtocolProperties_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:207

    virtual void *_tao_QueryInterface (ptrdiff_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
    // CDR Encoder/Decoder methods.
    virtual CORBA::Boolean _tao_encode (TAO_OutputCDR &out_cdr);
    virtual CORBA::Boolean _tao_decode (TAO_InputCDR &in_cdr);

  protected:
    ProtocolProperties (void);
    virtual ~ProtocolProperties (void);
  
  private:
    ProtocolProperties (const ProtocolProperties &);
    void operator= (const ProtocolProperties &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ProtocolProperties;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_type.cpp:249
  
  struct Protocol;
  
  typedef
    TAO_Var_Var_T<
        Protocol
      >
    Protocol_var;
  
  typedef
    TAO_Out_T<
        Protocol,
        Protocol_var
      >
    Protocol_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/structure_ch.cpp:52
  
  struct TAO_RTCORBA_Export Protocol
  {
    typedef Protocol_var _var_type;
    
    static void _tao_any_destructor (void *);
    IOP::ProfileId protocol_type;
    RTCORBA::ProtocolProperties_var orb_protocol_properties;
    RTCORBA::ProtocolProperties_var transport_protocol_properties;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Protocol;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:91

#if !defined (_RTCORBA_PROTOCOLLIST_CH_)
#define _RTCORBA_PROTOCOLLIST_CH_
  
  class ProtocolList;
  
  typedef
    TAO_VarSeq_Var_T<
        ProtocolList,
        Protocol
      >
    ProtocolList_var;
  
  typedef
    TAO_Seq_Out_T<
        ProtocolList,
        ProtocolList_var,
        Protocol
      >
    ProtocolList_out;
  
  class TAO_RTCORBA_Export ProtocolList
    : public
        TAO_Unbounded_Sequence<
            Protocol
          >
  {
  public:
    ProtocolList (void);
    ProtocolList (CORBA::ULong max);
    ProtocolList (
        CORBA::ULong max,
        CORBA::ULong length,
        Protocol* buffer, 
        CORBA::Boolean release = 0
      );
    ProtocolList (const ProtocolList &);
    ~ProtocolList (void);
    
    static void _tao_any_destructor (void *);
    
    typedef ProtocolList_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ProtocolList;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::PolicyType SERVER_PROTOCOL_POLICY_TYPE = 42U;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:570

#if !defined (_RTCORBA_SERVERPROTOCOLPOLICY__ODDS_N_ENDS_CH_)
#define _RTCORBA_SERVERPROTOCOLPOLICY__ODDS_N_ENDS_CH_
  
  class ServerProtocolPolicy;
  typedef ServerProtocolPolicy *ServerProtocolPolicy_ptr;
  struct tao_ServerProtocolPolicy_life;
  
  typedef
    TAO_Objref_Var_T<
        ServerProtocolPolicy,
        tao_ServerProtocolPolicy_life
      >
    ServerProtocolPolicy_var;
  
  typedef
    TAO_Objref_Out_T<
        ServerProtocolPolicy,
        tao_ServerProtocolPolicy_life
      >
    ServerProtocolPolicy_out;
  
  struct TAO_RTCORBA_Export tao_ServerProtocolPolicy_life
  {
    static ServerProtocolPolicy_ptr tao_duplicate (ServerProtocolPolicy_ptr);
    static void tao_release (ServerProtocolPolicy_ptr);
    static ServerProtocolPolicy_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        ServerProtocolPolicy_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_RTCORBA_Export tao_ServerProtocolPolicy_cast
  {
    static ServerProtocolPolicy_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:50

#if !defined (_RTCORBA_SERVERPROTOCOLPOLICY_CH_)
#define _RTCORBA_SERVERPROTOCOLPOLICY_CH_
  
  class TAO_RTCORBA_Export ServerProtocolPolicy
    : public virtual CORBA::Policy
  {
  public:
    typedef ServerProtocolPolicy_ptr _ptr_type;
    typedef ServerProtocolPolicy_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static ServerProtocolPolicy_ptr _duplicate (ServerProtocolPolicy_ptr obj);
    
    static ServerProtocolPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ServerProtocolPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ServerProtocolPolicy_ptr _nil (void)
      {
        return (ServerProtocolPolicy_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::RTCORBA::ProtocolList * protocols (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:207

    virtual void *_tao_QueryInterface (ptrdiff_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    ServerProtocolPolicy (void);
    virtual ~ServerProtocolPolicy (void);
  
  private:
    ServerProtocolPolicy (const ServerProtocolPolicy &);
    void operator= (const ServerProtocolPolicy &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ServerProtocolPolicy;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::PolicyType CLIENT_PROTOCOL_POLICY_TYPE = 43U;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:570

#if !defined (_RTCORBA_CLIENTPROTOCOLPOLICY__ODDS_N_ENDS_CH_)
#define _RTCORBA_CLIENTPROTOCOLPOLICY__ODDS_N_ENDS_CH_
  
  class ClientProtocolPolicy;
  typedef ClientProtocolPolicy *ClientProtocolPolicy_ptr;
  struct tao_ClientProtocolPolicy_life;
  
  typedef
    TAO_Objref_Var_T<
        ClientProtocolPolicy,
        tao_ClientProtocolPolicy_life
      >
    ClientProtocolPolicy_var;
  
  typedef
    TAO_Objref_Out_T<
        ClientProtocolPolicy,
        tao_ClientProtocolPolicy_life
      >
    ClientProtocolPolicy_out;
  
  struct TAO_RTCORBA_Export tao_ClientProtocolPolicy_life
  {
    static ClientProtocolPolicy_ptr tao_duplicate (ClientProtocolPolicy_ptr);
    static void tao_release (ClientProtocolPolicy_ptr);
    static ClientProtocolPolicy_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        ClientProtocolPolicy_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_RTCORBA_Export tao_ClientProtocolPolicy_cast
  {
    static ClientProtocolPolicy_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:50

#if !defined (_RTCORBA_CLIENTPROTOCOLPOLICY_CH_)
#define _RTCORBA_CLIENTPROTOCOLPOLICY_CH_
  
  class TAO_RTCORBA_Export ClientProtocolPolicy
    : public virtual CORBA::Policy
  {
  public:
    typedef ClientProtocolPolicy_ptr _ptr_type;
    typedef ClientProtocolPolicy_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static ClientProtocolPolicy_ptr _duplicate (ClientProtocolPolicy_ptr obj);
    
    static ClientProtocolPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ClientProtocolPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static ClientProtocolPolicy_ptr _nil (void)
      {
        return (ClientProtocolPolicy_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::RTCORBA::ProtocolList * protocols (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:207

    virtual void *_tao_QueryInterface (ptrdiff_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    ClientProtocolPolicy (void);
    virtual ~ClientProtocolPolicy (void);
  
  private:
    ClientProtocolPolicy (const ClientProtocolPolicy &);
    void operator= (const ClientProtocolPolicy &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ClientProtocolPolicy;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::PolicyType PRIVATE_CONNECTION_POLICY_TYPE = 44U;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:570

#if !defined (_RTCORBA_PRIVATECONNECTIONPOLICY__ODDS_N_ENDS_CH_)
#define _RTCORBA_PRIVATECONNECTIONPOLICY__ODDS_N_ENDS_CH_
  
  class PrivateConnectionPolicy;
  typedef PrivateConnectionPolicy *PrivateConnectionPolicy_ptr;
  struct tao_PrivateConnectionPolicy_life;
  
  typedef
    TAO_Objref_Var_T<
        PrivateConnectionPolicy,
        tao_PrivateConnectionPolicy_life
      >
    PrivateConnectionPolicy_var;
  
  typedef
    TAO_Objref_Out_T<
        PrivateConnectionPolicy,
        tao_PrivateConnectionPolicy_life
      >
    PrivateConnectionPolicy_out;
  
  struct TAO_RTCORBA_Export tao_PrivateConnectionPolicy_life
  {
    static PrivateConnectionPolicy_ptr tao_duplicate (PrivateConnectionPolicy_ptr);
    static void tao_release (PrivateConnectionPolicy_ptr);
    static PrivateConnectionPolicy_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        PrivateConnectionPolicy_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_RTCORBA_Export tao_PrivateConnectionPolicy_cast
  {
    static PrivateConnectionPolicy_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:50

#if !defined (_RTCORBA_PRIVATECONNECTIONPOLICY_CH_)
#define _RTCORBA_PRIVATECONNECTIONPOLICY_CH_
  
  class TAO_RTCORBA_Export PrivateConnectionPolicy
    : public virtual CORBA::Policy
  {
  public:
    typedef PrivateConnectionPolicy_ptr _ptr_type;
    typedef PrivateConnectionPolicy_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static PrivateConnectionPolicy_ptr _duplicate (PrivateConnectionPolicy_ptr obj);
    
    static PrivateConnectionPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static PrivateConnectionPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static PrivateConnectionPolicy_ptr _nil (void)
      {
        return (PrivateConnectionPolicy_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:207

    virtual void *_tao_QueryInterface (ptrdiff_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    PrivateConnectionPolicy (void);
    virtual ~PrivateConnectionPolicy (void);
  
  private:
    PrivateConnectionPolicy (const PrivateConnectionPolicy &);
    void operator= (const PrivateConnectionPolicy &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_PrivateConnectionPolicy;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:570

#if !defined (_RTCORBA_TCPPROTOCOLPROPERTIES__ODDS_N_ENDS_CH_)
#define _RTCORBA_TCPPROTOCOLPROPERTIES__ODDS_N_ENDS_CH_
  
  class TCPProtocolProperties;
  typedef TCPProtocolProperties *TCPProtocolProperties_ptr;
  struct tao_TCPProtocolProperties_life;
  
  typedef
    TAO_Objref_Var_T<
        TCPProtocolProperties,
        tao_TCPProtocolProperties_life
      >
    TCPProtocolProperties_var;
  
  typedef
    TAO_Objref_Out_T<
        TCPProtocolProperties,
        tao_TCPProtocolProperties_life
      >
    TCPProtocolProperties_out;
  
  struct TAO_RTCORBA_Export tao_TCPProtocolProperties_life
  {
    static TCPProtocolProperties_ptr tao_duplicate (TCPProtocolProperties_ptr);
    static void tao_release (TCPProtocolProperties_ptr);
    static TCPProtocolProperties_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        TCPProtocolProperties_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_RTCORBA_Export tao_TCPProtocolProperties_cast
  {
    static TCPProtocolProperties_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:50

#if !defined (_RTCORBA_TCPPROTOCOLPROPERTIES_CH_)
#define _RTCORBA_TCPPROTOCOLPROPERTIES_CH_
  
  class TAO_RTCORBA_Export TCPProtocolProperties
    : public virtual RTCORBA::ProtocolProperties
  {
  public:
    typedef TCPProtocolProperties_ptr _ptr_type;
    typedef TCPProtocolProperties_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static TCPProtocolProperties_ptr _duplicate (TCPProtocolProperties_ptr obj);
    
    static TCPProtocolProperties_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static TCPProtocolProperties_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static TCPProtocolProperties_ptr _nil (void)
      {
        return (TCPProtocolProperties_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Long send_buffer_size (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void send_buffer_size (
        CORBA::Long send_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Long recv_buffer_size (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void recv_buffer_size (
        CORBA::Long recv_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Boolean keep_alive (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void keep_alive (
        CORBA::Boolean keep_alive
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Boolean dont_route (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void dont_route (
        CORBA::Boolean dont_route
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Boolean no_delay (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void no_delay (
        CORBA::Boolean no_delay
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Boolean enable_network_priority (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void enable_network_priority (
        CORBA::Boolean enable_network_priority
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:207

    virtual void *_tao_QueryInterface (ptrdiff_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    TCPProtocolProperties (void);
    virtual ~TCPProtocolProperties (void);
  
  private:
    TCPProtocolProperties (const TCPProtocolProperties &);
    void operator= (const TCPProtocolProperties &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_TCPProtocolProperties;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:570

#if !defined (_RTCORBA_GIOPPROTOCOLPROPERTIES__ODDS_N_ENDS_CH_)
#define _RTCORBA_GIOPPROTOCOLPROPERTIES__ODDS_N_ENDS_CH_
  
  class GIOPProtocolProperties;
  typedef GIOPProtocolProperties *GIOPProtocolProperties_ptr;
  struct tao_GIOPProtocolProperties_life;
  
  typedef
    TAO_Objref_Var_T<
        GIOPProtocolProperties,
        tao_GIOPProtocolProperties_life
      >
    GIOPProtocolProperties_var;
  
  typedef
    TAO_Objref_Out_T<
        GIOPProtocolProperties,
        tao_GIOPProtocolProperties_life
      >
    GIOPProtocolProperties_out;
  
  struct TAO_RTCORBA_Export tao_GIOPProtocolProperties_life
  {
    static GIOPProtocolProperties_ptr tao_duplicate (GIOPProtocolProperties_ptr);
    static void tao_release (GIOPProtocolProperties_ptr);
    static GIOPProtocolProperties_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        GIOPProtocolProperties_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_RTCORBA_Export tao_GIOPProtocolProperties_cast
  {
    static GIOPProtocolProperties_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:50

#if !defined (_RTCORBA_GIOPPROTOCOLPROPERTIES_CH_)
#define _RTCORBA_GIOPPROTOCOLPROPERTIES_CH_
  
  class TAO_RTCORBA_Export GIOPProtocolProperties
    : public virtual RTCORBA::ProtocolProperties
  {
  public:
    typedef GIOPProtocolProperties_ptr _ptr_type;
    typedef GIOPProtocolProperties_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static GIOPProtocolProperties_ptr _duplicate (GIOPProtocolProperties_ptr obj);
    
    static GIOPProtocolProperties_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static GIOPProtocolProperties_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static GIOPProtocolProperties_ptr _nil (void)
      {
        return (GIOPProtocolProperties_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:207

    virtual void *_tao_QueryInterface (ptrdiff_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    GIOPProtocolProperties (void);
    virtual ~GIOPProtocolProperties (void);
  
  private:
    GIOPProtocolProperties (const GIOPProtocolProperties &);
    void operator= (const GIOPProtocolProperties &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_GIOPProtocolProperties;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:570

#if !defined (_RTCORBA_UNIXDOMAINPROTOCOLPROPERTIES__ODDS_N_ENDS_CH_)
#define _RTCORBA_UNIXDOMAINPROTOCOLPROPERTIES__ODDS_N_ENDS_CH_
  
  class UnixDomainProtocolProperties;
  typedef UnixDomainProtocolProperties *UnixDomainProtocolProperties_ptr;
  struct tao_UnixDomainProtocolProperties_life;
  
  typedef
    TAO_Objref_Var_T<
        UnixDomainProtocolProperties,
        tao_UnixDomainProtocolProperties_life
      >
    UnixDomainProtocolProperties_var;
  
  typedef
    TAO_Objref_Out_T<
        UnixDomainProtocolProperties,
        tao_UnixDomainProtocolProperties_life
      >
    UnixDomainProtocolProperties_out;
  
  struct TAO_RTCORBA_Export tao_UnixDomainProtocolProperties_life
  {
    static UnixDomainProtocolProperties_ptr tao_duplicate (UnixDomainProtocolProperties_ptr);
    static void tao_release (UnixDomainProtocolProperties_ptr);
    static UnixDomainProtocolProperties_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        UnixDomainProtocolProperties_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_RTCORBA_Export tao_UnixDomainProtocolProperties_cast
  {
    static UnixDomainProtocolProperties_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:50

#if !defined (_RTCORBA_UNIXDOMAINPROTOCOLPROPERTIES_CH_)
#define _RTCORBA_UNIXDOMAINPROTOCOLPROPERTIES_CH_
  
  class TAO_RTCORBA_Export UnixDomainProtocolProperties
    : public virtual RTCORBA::ProtocolProperties
  {
  public:
    typedef UnixDomainProtocolProperties_ptr _ptr_type;
    typedef UnixDomainProtocolProperties_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static UnixDomainProtocolProperties_ptr _duplicate (UnixDomainProtocolProperties_ptr obj);
    
    static UnixDomainProtocolProperties_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static UnixDomainProtocolProperties_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static UnixDomainProtocolProperties_ptr _nil (void)
      {
        return (UnixDomainProtocolProperties_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Long send_buffer_size (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void send_buffer_size (
        CORBA::Long send_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Long recv_buffer_size (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void recv_buffer_size (
        CORBA::Long recv_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:207

    virtual void *_tao_QueryInterface (ptrdiff_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    UnixDomainProtocolProperties (void);
    virtual ~UnixDomainProtocolProperties (void);
  
  private:
    UnixDomainProtocolProperties (const UnixDomainProtocolProperties &);
    void operator= (const UnixDomainProtocolProperties &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_UnixDomainProtocolProperties;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:570

#if !defined (_RTCORBA_SHAREDMEMORYPROTOCOLPROPERTIES__ODDS_N_ENDS_CH_)
#define _RTCORBA_SHAREDMEMORYPROTOCOLPROPERTIES__ODDS_N_ENDS_CH_
  
  class SharedMemoryProtocolProperties;
  typedef SharedMemoryProtocolProperties *SharedMemoryProtocolProperties_ptr;
  struct tao_SharedMemoryProtocolProperties_life;
  
  typedef
    TAO_Objref_Var_T<
        SharedMemoryProtocolProperties,
        tao_SharedMemoryProtocolProperties_life
      >
    SharedMemoryProtocolProperties_var;
  
  typedef
    TAO_Objref_Out_T<
        SharedMemoryProtocolProperties,
        tao_SharedMemoryProtocolProperties_life
      >
    SharedMemoryProtocolProperties_out;
  
  struct TAO_RTCORBA_Export tao_SharedMemoryProtocolProperties_life
  {
    static SharedMemoryProtocolProperties_ptr tao_duplicate (SharedMemoryProtocolProperties_ptr);
    static void tao_release (SharedMemoryProtocolProperties_ptr);
    static SharedMemoryProtocolProperties_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        SharedMemoryProtocolProperties_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_RTCORBA_Export tao_SharedMemoryProtocolProperties_cast
  {
    static SharedMemoryProtocolProperties_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:50

#if !defined (_RTCORBA_SHAREDMEMORYPROTOCOLPROPERTIES_CH_)
#define _RTCORBA_SHAREDMEMORYPROTOCOLPROPERTIES_CH_
  
  class TAO_RTCORBA_Export SharedMemoryProtocolProperties
    : public virtual RTCORBA::ProtocolProperties
  {
  public:
    typedef SharedMemoryProtocolProperties_ptr _ptr_type;
    typedef SharedMemoryProtocolProperties_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static SharedMemoryProtocolProperties_ptr _duplicate (SharedMemoryProtocolProperties_ptr obj);
    
    static SharedMemoryProtocolProperties_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static SharedMemoryProtocolProperties_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static SharedMemoryProtocolProperties_ptr _nil (void)
      {
        return (SharedMemoryProtocolProperties_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Long preallocate_buffer_size (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void preallocate_buffer_size (
        CORBA::Long preallocate_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual char * mmap_filename (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void mmap_filename (
        const char * mmap_filename
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual char * mmap_lockname (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void mmap_lockname (
        const char * mmap_lockname
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:207

    virtual void *_tao_QueryInterface (ptrdiff_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    SharedMemoryProtocolProperties (void);
    virtual ~SharedMemoryProtocolProperties (void);
  
  private:
    SharedMemoryProtocolProperties (const SharedMemoryProtocolProperties &);
    void operator= (const SharedMemoryProtocolProperties &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_SharedMemoryProtocolProperties;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_type.cpp:249
  
  struct PriorityBand;
  
  typedef
    TAO_Fixed_Var_T<
        PriorityBand
      >
    PriorityBand_var;
  
  typedef
    PriorityBand &
    PriorityBand_out;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/structure_ch.cpp:52
  
  struct TAO_RTCORBA_Export PriorityBand
  {
    typedef PriorityBand_var _var_type;
    
    static void _tao_any_destructor (void *);
    RTCORBA::Priority low;
    RTCORBA::Priority high;
  };
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_PriorityBand;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/sequence_ch.cpp:91

#if !defined (_RTCORBA_PRIORITYBANDS_CH_)
#define _RTCORBA_PRIORITYBANDS_CH_
  
  class PriorityBands;
  
  typedef
    TAO_FixedSeq_Var_T<
        PriorityBands,
        PriorityBand
      >
    PriorityBands_var;
  
  typedef
    TAO_Seq_Out_T<
        PriorityBands,
        PriorityBands_var,
        PriorityBand
      >
    PriorityBands_out;
  
  class TAO_RTCORBA_Export PriorityBands
    : public
        TAO_Unbounded_Sequence<
            PriorityBand
          >
  {
  public:
    PriorityBands (void);
    PriorityBands (CORBA::ULong max);
    PriorityBands (
        CORBA::ULong max,
        CORBA::ULong length,
        PriorityBand* buffer, 
        CORBA::Boolean release = 0
      );
    PriorityBands (const PriorityBands &);
    ~PriorityBands (void);
    
    static void _tao_any_destructor (void *);
    
    typedef PriorityBands_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_PriorityBands;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52
  
  const CORBA::PolicyType PRIORITY_BANDED_CONNECTION_POLICY_TYPE = 45U;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:570

#if !defined (_RTCORBA_PRIORITYBANDEDCONNECTIONPOLICY__ODDS_N_ENDS_CH_)
#define _RTCORBA_PRIORITYBANDEDCONNECTIONPOLICY__ODDS_N_ENDS_CH_
  
  class PriorityBandedConnectionPolicy;
  typedef PriorityBandedConnectionPolicy *PriorityBandedConnectionPolicy_ptr;
  struct tao_PriorityBandedConnectionPolicy_life;
  
  typedef
    TAO_Objref_Var_T<
        PriorityBandedConnectionPolicy,
        tao_PriorityBandedConnectionPolicy_life
      >
    PriorityBandedConnectionPolicy_var;
  
  typedef
    TAO_Objref_Out_T<
        PriorityBandedConnectionPolicy,
        tao_PriorityBandedConnectionPolicy_life
      >
    PriorityBandedConnectionPolicy_out;
  
  struct TAO_RTCORBA_Export tao_PriorityBandedConnectionPolicy_life
  {
    static PriorityBandedConnectionPolicy_ptr tao_duplicate (PriorityBandedConnectionPolicy_ptr);
    static void tao_release (PriorityBandedConnectionPolicy_ptr);
    static PriorityBandedConnectionPolicy_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        PriorityBandedConnectionPolicy_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_RTCORBA_Export tao_PriorityBandedConnectionPolicy_cast
  {
    static PriorityBandedConnectionPolicy_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:50

#if !defined (_RTCORBA_PRIORITYBANDEDCONNECTIONPOLICY_CH_)
#define _RTCORBA_PRIORITYBANDEDCONNECTIONPOLICY_CH_
  
  class TAO_RTCORBA_Export PriorityBandedConnectionPolicy
    : public virtual CORBA::Policy
  {
  public:
    typedef PriorityBandedConnectionPolicy_ptr _ptr_type;
    typedef PriorityBandedConnectionPolicy_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static PriorityBandedConnectionPolicy_ptr _duplicate (PriorityBandedConnectionPolicy_ptr obj);
    
    static PriorityBandedConnectionPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static PriorityBandedConnectionPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static PriorityBandedConnectionPolicy_ptr _nil (void)
      {
        return (PriorityBandedConnectionPolicy_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::RTCORBA::PriorityBands * priority_bands (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:207

    virtual void *_tao_QueryInterface (ptrdiff_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    PriorityBandedConnectionPolicy (void);
    virtual ~PriorityBandedConnectionPolicy (void);
  
  private:
    PriorityBandedConnectionPolicy (const PriorityBandedConnectionPolicy &);
    void operator= (const PriorityBandedConnectionPolicy &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_PriorityBandedConnectionPolicy;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:570

#if !defined (_RTCORBA_CURRENT__ODDS_N_ENDS_CH_)
#define _RTCORBA_CURRENT__ODDS_N_ENDS_CH_
  
  class Current;
  typedef Current *Current_ptr;
  struct tao_Current_life;
  
  typedef
    TAO_Objref_Var_T<
        Current,
        tao_Current_life
      >
    Current_var;
  
  typedef
    TAO_Objref_Out_T<
        Current,
        tao_Current_life
      >
    Current_out;
  
  struct TAO_RTCORBA_Export tao_Current_life
  {
    static Current_ptr tao_duplicate (Current_ptr);
    static void tao_release (Current_ptr);
    static Current_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        Current_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_RTCORBA_Export tao_Current_cast
  {
    static Current_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:50

#if !defined (_RTCORBA_CURRENT_CH_)
#define _RTCORBA_CURRENT_CH_
  
  class TAO_RTCORBA_Export Current
    : public virtual CORBA::Current
  {
  public:
    typedef Current_ptr _ptr_type;
    typedef Current_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static Current_ptr _duplicate (Current_ptr obj);
    
    static Current_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static Current_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static Current_ptr _nil (void)
      {
        return (Current_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual RTCORBA::Priority the_priority (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void the_priority (
        RTCORBA::Priority the_priority
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:207

    virtual void *_tao_QueryInterface (ptrdiff_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    Current (void);
    virtual ~Current (void);
  
  private:
    Current (const Current &);
    void operator= (const Current &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Current;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:570

#if !defined (_RTCORBA_MUTEX__ODDS_N_ENDS_CH_)
#define _RTCORBA_MUTEX__ODDS_N_ENDS_CH_
  
  class Mutex;
  typedef Mutex *Mutex_ptr;
  struct tao_Mutex_life;
  
  typedef
    TAO_Objref_Var_T<
        Mutex,
        tao_Mutex_life
      >
    Mutex_var;
  
  typedef
    TAO_Objref_Out_T<
        Mutex,
        tao_Mutex_life
      >
    Mutex_out;
  
  struct TAO_RTCORBA_Export tao_Mutex_life
  {
    static Mutex_ptr tao_duplicate (Mutex_ptr);
    static void tao_release (Mutex_ptr);
    static Mutex_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        Mutex_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_RTCORBA_Export tao_Mutex_cast
  {
    static Mutex_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:50

#if !defined (_RTCORBA_MUTEX_CH_)
#define _RTCORBA_MUTEX_CH_
  
  class TAO_RTCORBA_Export Mutex
    : public virtual CORBA::Object
  {
  public:
    typedef Mutex_ptr _ptr_type;
    typedef Mutex_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static Mutex_ptr _duplicate (Mutex_ptr obj);
    
    static Mutex_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static Mutex_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static Mutex_ptr _nil (void)
      {
        return (Mutex_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void lock (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void unlock (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Boolean try_lock (
        TimeBase::TimeT max_wait
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:207

    virtual void *_tao_QueryInterface (ptrdiff_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    Mutex (void);
    virtual ~Mutex (void);
  
  private:
    Mutex (const Mutex &);
    void operator= (const Mutex &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Mutex;
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:570

#if !defined (_RTCORBA_RTORB__ODDS_N_ENDS_CH_)
#define _RTCORBA_RTORB__ODDS_N_ENDS_CH_
  
  class RTORB;
  typedef RTORB *RTORB_ptr;
  struct tao_RTORB_life;
  
  typedef
    TAO_Objref_Var_T<
        RTORB,
        tao_RTORB_life
      >
    RTORB_var;
  
  typedef
    TAO_Objref_Out_T<
        RTORB,
        tao_RTORB_life
      >
    RTORB_out;
  
  struct TAO_RTCORBA_Export tao_RTORB_life
  {
    static RTORB_ptr tao_duplicate (RTORB_ptr);
    static void tao_release (RTORB_ptr);
    static RTORB_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        RTORB_ptr,
        TAO_OutputCDR &
      );
  };
  
  struct TAO_RTCORBA_Export tao_RTORB_cast
  {
    static RTORB_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:50

#if !defined (_RTCORBA_RTORB_CH_)
#define _RTCORBA_RTORB_CH_
  
  class TAO_RTCORBA_Export RTORB
    : public virtual CORBA::Object
  {
  public:
    typedef RTORB_ptr _ptr_type;
    typedef RTORB_var _var_type;
    static int _tao_class_id;
    
    // The static operations.
    static RTORB_ptr _duplicate (RTORB_ptr obj);
    
    static RTORB_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static RTORB_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static RTORB_ptr _nil (void)
      {
        return (RTORB_ptr)0;
      }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::RTCORBA::Mutex_ptr create_mutex (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void destroy_mutex (
        RTCORBA::Mutex_ptr the_mutex
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_RTCORBA_RTORB_MUTEXNOTFOUND_CH_)
#define _RTCORBA_RTORB_MUTEXNOTFOUND_CH_
    
    class TAO_RTCORBA_Export MutexNotFound : public CORBA::UserException
    {
    public:
      
      MutexNotFound (void);
      MutexNotFound (const MutexNotFound &);
      ~MutexNotFound (void);

      MutexNotFound &operator= (const MutexNotFound &);
      
      static void _tao_any_destructor (void *);
      
      static MutexNotFound *_downcast (CORBA::Exception *);
      static CORBA::Exception *_alloc (void);

      virtual CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void);

      virtual void _tao_encode (
          TAO_OutputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        ) const;
      
      virtual void _tao_decode (
          TAO_InputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        );
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
      
      virtual CORBA::TypeCode_ptr _type (void) const;
    };
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    static ::CORBA::TypeCode_ptr _tc_MutexNotFound;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::RTCORBA::Mutex_ptr create_named_mutex (
        const char * name,
        CORBA::Boolean_out created_flag
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::RTCORBA::Mutex_ptr open_named_mutex (
        const char * name
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , RTCORBA::RTORB::MutexNotFound
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::RTCORBA::TCPProtocolProperties_ptr create_tcp_protocol_properties (
        CORBA::Long send_buffer_size,
        CORBA::Long recv_buffer_size,
        CORBA::Boolean keep_alive,
        CORBA::Boolean dont_route,
        CORBA::Boolean no_delay,
        CORBA::Boolean enable_network_priority
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:51

#if !defined (_RTCORBA_RTORB_INVALIDTHREADPOOL_CH_)
#define _RTCORBA_RTORB_INVALIDTHREADPOOL_CH_
    
    class TAO_RTCORBA_Export InvalidThreadpool : public CORBA::UserException
    {
    public:
      
      InvalidThreadpool (void);
      InvalidThreadpool (const InvalidThreadpool &);
      ~InvalidThreadpool (void);

      InvalidThreadpool &operator= (const InvalidThreadpool &);
      
      static void _tao_any_destructor (void *);
      
      static InvalidThreadpool *_downcast (CORBA::Exception *);
      static CORBA::Exception *_alloc (void);

      virtual CORBA::Exception *_tao_duplicate (void) const;

      virtual void _raise (void);

      virtual void _tao_encode (
          TAO_OutputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        ) const;
      
      virtual void _tao_decode (
          TAO_InputCDR &
          ACE_ENV_ARG_DECL_NOT_USED
        );
      
      // TAO_IDL - Generated from
      // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/exception_ch.cpp:125
      
      virtual CORBA::TypeCode_ptr _type (void) const;
    };
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
    
    static ::CORBA::TypeCode_ptr _tc_InvalidThreadpool;

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual RTCORBA::ThreadpoolId create_threadpool (
        CORBA::ULong stacksize,
        CORBA::ULong static_threads,
        CORBA::ULong dynamic_threads,
        RTCORBA::Priority default_priority,
        CORBA::Boolean allow_request_buffering,
        CORBA::ULong max_buffered_requests,
        CORBA::ULong max_request_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual RTCORBA::ThreadpoolId create_threadpool_with_lanes (
        CORBA::ULong stacksize,
        const RTCORBA::ThreadpoolLanes & lanes,
        CORBA::Boolean allow_borrowing,
        CORBA::Boolean allow_request_buffering,
        CORBA::ULong max_buffered_requests,
        CORBA::ULong max_request_buffer_size
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void destroy_threadpool (
        RTCORBA::ThreadpoolId threadpool
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
        , RTCORBA::RTORB::InvalidThreadpool
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::RTCORBA::PriorityModelPolicy_ptr create_priority_model_policy (
        RTCORBA::PriorityModel priority_model,
        RTCORBA::Priority server_priority
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::RTCORBA::ThreadpoolPolicy_ptr create_threadpool_policy (
        RTCORBA::ThreadpoolId threadpool
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::RTCORBA::PriorityBandedConnectionPolicy_ptr create_priority_banded_connection_policy (
        const RTCORBA::PriorityBands & priority_bands
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::RTCORBA::ServerProtocolPolicy_ptr create_server_protocol_policy (
        const RTCORBA::ProtocolList & protocols
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::RTCORBA::ClientProtocolPolicy_ptr create_client_protocol_policy (
        const RTCORBA::ProtocolList & protocols
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::RTCORBA::PrivateConnectionPolicy_ptr create_private_connection_policy (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;
    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:207

    virtual void *_tao_QueryInterface (ptrdiff_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    RTORB (void);
    virtual ~RTORB (void);
  
  private:
    RTORB (const RTORB &);
    void operator= (const RTORB &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RTORB;

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:67

}
TAO_NAMESPACE_CLOSE // module RTCORBA

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, const RTCORBA::ThreadpoolLane &); // copying version
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ThreadpoolLane*); // noncopying version
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::ThreadpoolLane *&); // deprecated
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, const RTCORBA::ThreadpoolLane *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, const RTCORBA::ThreadpoolLanes &); // copying version
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ThreadpoolLanes*); // noncopying version
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::ThreadpoolLanes *&); // deprecated
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, const RTCORBA::ThreadpoolLanes *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/any_op_ch.cpp:51

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::PriorityModel);
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::PriorityModel &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::PriorityModelPolicy_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::PriorityModelPolicy_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::PriorityModelPolicy_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ThreadpoolPolicy_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ThreadpoolPolicy_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::ThreadpoolPolicy_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ProtocolProperties_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ProtocolProperties_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::ProtocolProperties_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, const RTCORBA::Protocol &); // copying version
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::Protocol*); // noncopying version
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::Protocol *&); // deprecated
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, const RTCORBA::Protocol *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, const RTCORBA::ProtocolList &); // copying version
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ProtocolList*); // noncopying version
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::ProtocolList *&); // deprecated
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, const RTCORBA::ProtocolList *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ServerProtocolPolicy_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ServerProtocolPolicy_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::ServerProtocolPolicy_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ClientProtocolPolicy_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::ClientProtocolPolicy_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::ClientProtocolPolicy_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::PrivateConnectionPolicy_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::PrivateConnectionPolicy_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::PrivateConnectionPolicy_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::TCPProtocolProperties_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::TCPProtocolProperties_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::TCPProtocolProperties_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::GIOPProtocolProperties_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::GIOPProtocolProperties_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::GIOPProtocolProperties_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::UnixDomainProtocolProperties_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::UnixDomainProtocolProperties_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::UnixDomainProtocolProperties_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::SharedMemoryProtocolProperties_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::SharedMemoryProtocolProperties_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::SharedMemoryProtocolProperties_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, const RTCORBA::PriorityBand &); // copying version
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::PriorityBand*); // noncopying version
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::PriorityBand *&); // deprecated
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, const RTCORBA::PriorityBand *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, const RTCORBA::PriorityBands &); // copying version
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::PriorityBands*); // noncopying version
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::PriorityBands *&); // deprecated
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, const RTCORBA::PriorityBands *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::PriorityBandedConnectionPolicy_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::PriorityBandedConnectionPolicy_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::PriorityBandedConnectionPolicy_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::Current_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::Current_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::Current_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::Mutex_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::Mutex_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::Mutex_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::RTORB_ptr); // copying
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::RTORB_ptr *); // non-copying
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::RTORB_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, const RTCORBA::RTORB::MutexNotFound &); // copying version
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::RTORB::MutexNotFound*); // noncopying version
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::RTORB::MutexNotFound *&); // deprecated
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, const RTCORBA::RTORB::MutexNotFound *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_exception/any_op_ch.cpp:52

TAO_RTCORBA_Export void operator<<= (CORBA::Any &, const RTCORBA::RTORB::InvalidThreadpool &); // copying version
TAO_RTCORBA_Export void operator<<= (CORBA::Any &, RTCORBA::RTORB::InvalidThreadpool*); // noncopying version
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, RTCORBA::RTORB::InvalidThreadpool *&); // deprecated
TAO_RTCORBA_Export CORBA::Boolean operator>>= (const CORBA::Any &, const RTCORBA::RTORB::InvalidThreadpool *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:48

#ifndef __ACE_INLINE__

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/cdr_op_ch.cpp:53

TAO_RTCORBA_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const RTCORBA::ThreadpoolLane &);
TAO_RTCORBA_Export CORBA::Boolean operator>> (TAO_InputCDR &, RTCORBA::ThreadpoolLane &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_RTCORBA_ThreadpoolLanes_H_
#define _TAO_CDR_OP_RTCORBA_ThreadpoolLanes_H_

TAO_RTCORBA_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const RTCORBA::ThreadpoolLanes &
  );
TAO_RTCORBA_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    RTCORBA::ThreadpoolLanes &
  );

#endif /* _TAO_CDR_OP_RTCORBA_ThreadpoolLanes_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_enum/cdr_op_ch.cpp:50

TAO_RTCORBA_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const RTCORBA::PriorityModel &);
TAO_RTCORBA_Export CORBA::Boolean operator>> (TAO_InputCDR &, RTCORBA::PriorityModel &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/cdr_op_ch.cpp:53

TAO_RTCORBA_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const RTCORBA::Protocol &);
TAO_RTCORBA_Export CORBA::Boolean operator>> (TAO_InputCDR &, RTCORBA::Protocol &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_RTCORBA_ProtocolList_H_
#define _TAO_CDR_OP_RTCORBA_ProtocolList_H_

TAO_RTCORBA_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const RTCORBA::ProtocolList &
  );
TAO_RTCORBA_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    RTCORBA::ProtocolList &
  );

#endif /* _TAO_CDR_OP_RTCORBA_ProtocolList_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/cdr_op_ch.cpp:53

TAO_RTCORBA_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const RTCORBA::PriorityBand &);
TAO_RTCORBA_Export CORBA::Boolean operator>> (TAO_InputCDR &, RTCORBA::PriorityBand &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_RTCORBA_PriorityBands_H_
#define _TAO_CDR_OP_RTCORBA_PriorityBands_H_

TAO_RTCORBA_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const RTCORBA::PriorityBands &
  );
TAO_RTCORBA_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    RTCORBA::PriorityBands &
  );

#endif /* _TAO_CDR_OP_RTCORBA_PriorityBands_H_ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:64

#endif /* __ACE_INLINE__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:1018

#if defined (__ACE_INLINE__)
#include "RTCORBAC.i"
#endif /* defined INLINE */

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#include "ace/post.h"
#endif /* ifndef */

