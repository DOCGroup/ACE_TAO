--- orig/RTCORBAC.h	Fri Jun 15 10:45:32 2001
+++ RTCORBAC.h	Fri Jun 15 10:31:54 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -23,15 +23,29 @@
 #define _TAO_IDL_ORIG_RTCORBAC_H_
 
 #include "ace/pre.h"
-#include "tao/corba.h"
+#include "tao/orbconf.h"
 
 #if !defined (ACE_LACKS_PRAGMA_ONCE)
 # pragma once
 #endif /* ACE_LACKS_PRAGMA_ONCE */
 
 #include "rtcorba_export.h"
-#include "IOPC.h"
-#include "TimeBaseC.h"
+#include "tao/IOPC.h"
+#include "tao/PolicyC.h"
+#include "tao/TimeBaseC.h"
+#include "tao/Encodable.h"
+//#include "Priority_Mapping_Manager.h"
+
+// Forward references.
+class TAO_Priority_Mapping_Manager;
+class TAO_Priority_Mapping_Manager_var;
+class TAO_Priority_Mapping_Manager_out;
+class TAO_Priority_Mapping;
+
+#ifndef TAO_RTCORBA_SAFE_INCLUDE
+#error "You should not include RTCORBAC.h directly, use RTCORBA.h"
+#endif /* !TAO_RTCORBA_SAFE_INCLUDE */
+
 
 #if defined (TAO_EXPORT_MACRO)
 #undef TAO_EXPORT_MACRO
@@ -58,6 +72,13 @@
 
 TAO_NAMESPACE  RTCORBA
 {
+  // TAO-specific
+  typedef TAO_Priority_Mapping_Manager PriorityMappingManager;
+  typedef TAO_Priority_Mapping_Manager *PriorityMappingManager_ptr;
+  typedef TAO_Priority_Mapping_Manager_var PriorityMappingManager_var;
+  typedef TAO_Priority_Mapping_Manager_out PriorityMappingManager_out;
+  // End TAO-specific
+
   typedef CORBA::Short NativePriority;
   typedef CORBA::Short_out NativePriority_out;
   TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_NativePriority;
@@ -70,6 +91,7 @@
   
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::Short maxPriority;
   
+  typedef TAO_Priority_Mapping PriorityMapping;
   typedef CORBA::ULong ThreadpoolId;
   typedef CORBA::ULong_out ThreadpoolId_out;
   TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_ThreadpoolId;
@@ -673,7 +695,8 @@
 #define _RTCORBA_PROTOCOLPROPERTIES_CH_
   
   class TAO_RTCORBA_Export ProtocolProperties
-    : public virtual CORBA_Object
+  : public virtual CORBA_Object,
+    public TAO_Encodable
   {
   public:
   #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
@@ -705,6 +728,11 @@
     
     virtual const char* _interface_repository_id (void) const;
 
+    // CDR Encoder/Decoder methods.
+
+    virtual CORBA::Boolean _tao_encode (TAO_OutputCDR &out_cdr);
+    virtual CORBA::Boolean _tao_decode (TAO_InputCDR &in_cdr);
+
   protected:
     ProtocolProperties ();
     
@@ -2930,7 +2958,7 @@
           CORBA::Environment &
         );
       
-      static InvalidThreadpool *_downcast (CORBA::Exception *);
+      static InvalidThreadpool *_narrow (CORBA::Exception *);
 
 
       // = TAO extension.
