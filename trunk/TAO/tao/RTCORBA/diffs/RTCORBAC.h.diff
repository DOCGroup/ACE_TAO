--- orig/RTCORBAC.h	Tue Jun 12 17:56:16 2001
+++ RTCORBAC.h	Tue Jun 12 16:14:06 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -23,15 +23,26 @@
 #define _TAO_IDL_ORIG_RTCORBAC_H_
 
 #include "ace/pre.h"
-#include "tao/corba.h"
+#include "tao/orbconf.h"
+
+#include "rtcorba_export.h"
 
 #if !defined (ACE_LACKS_PRAGMA_ONCE)
 # pragma once
 #endif /* ACE_LACKS_PRAGMA_ONCE */
 
-#include "rtcorba_export.h"
-#include "IOPC.h"
-#include "TimeBaseC.h"
+#include "tao/IOPC.h"
+#include "tao/PolicyC.h"
+#include "tao/TimeBaseC.h"
+
+#include "tao/Encodable.h"
+
+#include "Priority_Mapping_Manager.h"
+
+#ifndef TAO_RTCORBA_SAFE_INCLUDE
+#error "You should not include RTCORBAC.h directly, use RTCORBA.h"
+#endif /* !TAO_RTCORBA_SAFE_INCLUDE */
+
 
 #if defined (TAO_EXPORT_MACRO)
 #undef TAO_EXPORT_MACRO
@@ -58,6 +69,13 @@
 
 TAO_NAMESPACE  RTCORBA
 {
+  // TAO-specific
+  typedef TAO_Priority_Mapping_Manager PriorityMappingManager;
+  typedef TAO_Priority_Mapping_Manager *PriorityMappingManager_ptr;
+  typedef TAO_Priority_Mapping_Manager_var PriorityMappingManager_var;
+  typedef TAO_Priority_Mapping_Manager_out PriorityMappingManager_out;
+  // End TAO-specific
+
   typedef CORBA::Short NativePriority;
   typedef CORBA::Short_out NativePriority_out;
   TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_NativePriority;
@@ -70,6 +88,7 @@
   
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::Short maxPriority;
   
+  typedef TAO_Priority_Mapping PriorityMapping;
   typedef CORBA::ULong ThreadpoolId;
   typedef CORBA::ULong_out ThreadpoolId_out;
   TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_ThreadpoolId;
@@ -89,23 +108,20 @@
     ACE_NESTED_CLASS (RTCORBA, Priority) lane_priority;
     CORBA::ULong static_threads;
     CORBA::ULong dynamic_threads;
-    
   };
   
   class TAO_RTCORBA_Export ThreadpoolLane_var
   {
   public:
-    ThreadpoolLane_var (void);
+    ThreadpoolLane_var (void); // default constructor
     ThreadpoolLane_var (ThreadpoolLane *);
-    ThreadpoolLane_var (const ThreadpoolLane_var &);
-    // Fixed-size types only.
-    ThreadpoolLane_var (const ThreadpoolLane &);
-    ~ThreadpoolLane_var (void);
+    ThreadpoolLane_var (const ThreadpoolLane_var &); // copy constructor
+    ThreadpoolLane_var (const ThreadpoolLane &); // fixed-size types only
+    ~ThreadpoolLane_var (void); // destructor
     
     ThreadpoolLane_var &operator= (ThreadpoolLane *);
     ThreadpoolLane_var &operator= (const ThreadpoolLane_var &);
-    // Fixed-size types only.
-    ThreadpoolLane_var &operator= (const ThreadpoolLane &);
+    ThreadpoolLane_var &operator= (const ThreadpoolLane &); // fixed-size types only
     ThreadpoolLane *operator-> (void);
     const ThreadpoolLane *operator-> (void) const;
     
@@ -134,46 +150,36 @@
 #if !defined (__TAO_UNBOUNDED_SEQUENCE_RTCORBA_THREADPOOLLANES_CH_)
 #define __TAO_UNBOUNDED_SEQUENCE_RTCORBA_THREADPOOLLANES_CH_
   
-  class TAO_EXPORT_NESTED_MACRO _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes
-    : public TAO_Unbounded_Base_Sequence
+    class TAO_EXPORT_NESTED_MACRO _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes : public TAO_Unbounded_Base_Sequence
   {
   public:
     // = Initialization and termination methods.
-    _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes (void);
+
+      _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes (void); // Default constructor.
     _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes (CORBA::ULong maximum); 
-    _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes (
-        CORBA::ULong maximum,
+      _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes (CORBA::ULong maximum,
         CORBA::ULong length,
         ThreadpoolLane *data,
-        CORBA::Boolean release = 0
-      );
-    _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes (
-        const _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes &rhs
-      );
-    _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes &operator= (
-        const _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes &rhs
-      );
-    virtual ~_TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes (void);
-    
+        CORBA::Boolean release = 0);
+      _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes (const _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes &rhs);
+      _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes &operator= (const _TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes &rhs);
+      virtual ~_TAO_Unbounded_Sequence_RTCORBA_ThreadpoolLanes (void); // Dtor.
     // = Accessors.
     ThreadpoolLane &operator[] (CORBA::ULong i);
     const ThreadpoolLane &operator[] (CORBA::ULong i) const;
-    
     // = Static operations.
     static ThreadpoolLane *allocbuf (CORBA::ULong size);
     static void freebuf (ThreadpoolLane *buffer);
-    
-    // Implement the TAO_Base_Sequence methods (see Sequence.h)
     virtual void _allocate_buffer (CORBA::ULong length);
     virtual void _deallocate_buffer (void);
+      // Implement the TAO_Base_Sequence methods (see Sequence.h)
+
     ThreadpoolLane *get_buffer (CORBA::Boolean orphan = 0);
     const ThreadpoolLane *get_buffer (void) const;
-    void replace (
-        CORBA::ULong max,
+      void replace (CORBA::ULong max,
         CORBA::ULong length,
         ThreadpoolLane *data,
-        CORBA::Boolean release
-      );
+        CORBA::Boolean release);
   };
   
 #endif /* end #if !defined */
@@ -215,7 +221,6 @@
     typedef ThreadpoolLanes_var _var_type;
 #endif /* ! __GNUC__ || g++ >= 2.8 */
     
-    
   };
   
 #endif /* end #if !defined */
@@ -231,17 +236,15 @@
   class TAO_RTCORBA_Export ThreadpoolLanes_var
   {
   public:
-    ThreadpoolLanes_var (void);
+    ThreadpoolLanes_var (void); // default constructor
     ThreadpoolLanes_var (ThreadpoolLanes *);
-    ThreadpoolLanes_var (const ThreadpoolLanes_var &);
-    // Fixed-size base types only.
-    ThreadpoolLanes_var (const ThreadpoolLanes &);
-    ~ThreadpoolLanes_var (void);
+    ThreadpoolLanes_var (const ThreadpoolLanes_var &); // copy constructor
+    ThreadpoolLanes_var (const ThreadpoolLanes &); // fixed-size base types only
+    ~ThreadpoolLanes_var (void); // destructor
     
     ThreadpoolLanes_var &operator= (ThreadpoolLanes *);
     ThreadpoolLanes_var &operator= (const ThreadpoolLanes_var &);
-    // Fixed-size base types only.
-    ThreadpoolLanes_var &operator= (const ThreadpoolLanes &);
+    ThreadpoolLanes_var &operator= (const ThreadpoolLanes &); // fixed-size base types only
     ThreadpoolLanes *operator-> (void);
     const ThreadpoolLanes *operator-> (void) const;
     
@@ -285,7 +288,7 @@
   
   private:
     ThreadpoolLanes *&ptr_;
-    // Assignment from T_var not allowed.
+    // assignment from T_var not allowed
     void operator= (const ThreadpoolLanes_var &);
   };
   
@@ -301,7 +304,6 @@
     CLIENT_PROPAGATED,
     SERVER_DECLARED
   };
-  
   typedef PriorityModel &PriorityModel_out;
   TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_PriorityModel;
   
@@ -344,10 +346,7 @@
     static PriorityModelPolicy_ptr duplicate (PriorityModelPolicy_ptr);
     static void release (PriorityModelPolicy_ptr);
     static PriorityModelPolicy_ptr nil (void);
-    static PriorityModelPolicy_ptr narrow (
-        CORBA::Object *,
-        CORBA::Environment &
-      );
+    static PriorityModelPolicy_ptr narrow (CORBA::Object *, CORBA::Environment &);
     static CORBA::Object * upcast (void *);
   
   private:
@@ -388,8 +387,7 @@
 #if !defined (_RTCORBA_PRIORITYMODELPOLICY_CH_)
 #define _RTCORBA_PRIORITYMODELPOLICY_CH_
   
-  class TAO_RTCORBA_Export PriorityModelPolicy
-    : public virtual CORBA::Policy
+class TAO_RTCORBA_Export PriorityModelPolicy: public virtual CORBA::Policy
   {
   public:
   #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
@@ -399,19 +397,16 @@
 
     // the static operations
     static PriorityModelPolicy_ptr _duplicate (PriorityModelPolicy_ptr obj);
-    
     static PriorityModelPolicy_ptr _narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static PriorityModelPolicy_ptr _unchecked_narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static PriorityModelPolicy_ptr _nil (void)
       {
         return (PriorityModelPolicy_ptr)0;
@@ -441,7 +436,6 @@
     PriorityModelPolicy ();
     
     virtual ~PriorityModelPolicy (void);
-  
   private:
     PriorityModelPolicy (const PriorityModelPolicy &);
     void operator= (const PriorityModelPolicy &);
@@ -491,10 +485,7 @@
     static ThreadpoolPolicy_ptr duplicate (ThreadpoolPolicy_ptr);
     static void release (ThreadpoolPolicy_ptr);
     static ThreadpoolPolicy_ptr nil (void);
-    static ThreadpoolPolicy_ptr narrow (
-        CORBA::Object *,
-        CORBA::Environment &
-      );
+    static ThreadpoolPolicy_ptr narrow (CORBA::Object *, CORBA::Environment &);
     static CORBA::Object * upcast (void *);
   
   private:
@@ -535,8 +526,7 @@
 #if !defined (_RTCORBA_THREADPOOLPOLICY_CH_)
 #define _RTCORBA_THREADPOOLPOLICY_CH_
   
-  class TAO_RTCORBA_Export ThreadpoolPolicy
-    : public virtual CORBA::Policy
+class TAO_RTCORBA_Export ThreadpoolPolicy: public virtual CORBA::Policy
   {
   public:
   #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
@@ -546,19 +536,16 @@
 
     // the static operations
     static ThreadpoolPolicy_ptr _duplicate (ThreadpoolPolicy_ptr obj);
-    
     static ThreadpoolPolicy_ptr _narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static ThreadpoolPolicy_ptr _unchecked_narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static ThreadpoolPolicy_ptr _nil (void)
       {
         return (ThreadpoolPolicy_ptr)0;
@@ -580,7 +567,6 @@
     ThreadpoolPolicy ();
     
     virtual ~ThreadpoolPolicy (void);
-  
   private:
     ThreadpoolPolicy (const ThreadpoolPolicy &);
     void operator= (const ThreadpoolPolicy &);
@@ -628,10 +614,7 @@
     static ProtocolProperties_ptr duplicate (ProtocolProperties_ptr);
     static void release (ProtocolProperties_ptr);
     static ProtocolProperties_ptr nil (void);
-    static ProtocolProperties_ptr narrow (
-        CORBA::Object *,
-        CORBA::Environment &
-      );
+    static ProtocolProperties_ptr narrow (CORBA::Object *, CORBA::Environment &);
     static CORBA::Object * upcast (void *);
   
   private:
@@ -672,8 +655,8 @@
 #if !defined (_RTCORBA_PROTOCOLPROPERTIES_CH_)
 #define _RTCORBA_PROTOCOLPROPERTIES_CH_
   
-  class TAO_RTCORBA_Export ProtocolProperties
-    : public virtual CORBA_Object
+class TAO_RTCORBA_Export ProtocolProperties : public virtual CORBA_Object,
+                                      public TAO_Encodable
   {
   public:
   #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
@@ -683,19 +666,16 @@
 
     // the static operations
     static ProtocolProperties_ptr _duplicate (ProtocolProperties_ptr obj);
-    
     static ProtocolProperties_ptr _narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static ProtocolProperties_ptr _unchecked_narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static ProtocolProperties_ptr _nil (void)
       {
         return (ProtocolProperties_ptr)0;
@@ -705,11 +685,15 @@
     
     virtual const char* _interface_repository_id (void) const;
 
+    // CDR Encoder/Decoder methods.
+
+    virtual CORBA::Boolean _tao_encode (TAO_OutputCDR &out_cdr);
+    virtual CORBA::Boolean _tao_decode (TAO_InputCDR &in_cdr);
+
   protected:
     ProtocolProperties ();
     
     virtual ~ProtocolProperties (void);
-  
   private:
     ProtocolProperties (const ProtocolProperties &);
     void operator= (const ProtocolProperties &);
@@ -731,16 +715,15 @@
     IOP::ProfileId protocol_type;
     ACE_NESTED_CLASS (RTCORBA, ProtocolProperties_var) orb_protocol_properties;
     ACE_NESTED_CLASS (RTCORBA, ProtocolProperties_var) transport_protocol_properties;
-    
   };
   
   class TAO_RTCORBA_Export Protocol_var
   {
   public:
-    Protocol_var (void);
+    Protocol_var (void); // default constructor
     Protocol_var (Protocol *);
-    Protocol_var (const Protocol_var &);
-    ~Protocol_var (void);
+    Protocol_var (const Protocol_var &); // copy constructor
+    ~Protocol_var (void); // destructor
     
     Protocol_var &operator= (Protocol *);
     Protocol_var &operator= (const Protocol_var &);
@@ -750,8 +733,7 @@
     operator const Protocol &() const;
     operator Protocol &();
     operator Protocol &() const;
-    // Variable-size types only.
-    operator Protocol *&();
+    operator Protocol *&(); // variable-size types only
     
     // in, inout, out, _retn 
     const Protocol &in (void) const;
@@ -778,7 +760,7 @@
     
   private:
     Protocol *&ptr_;
-    // Assignment from T_var not allowed.
+    // assignment from T_var not allowed
     void operator= (const Protocol_var &);
   };
   
@@ -788,46 +770,36 @@
 #if !defined (__TAO_UNBOUNDED_SEQUENCE_RTCORBA_PROTOCOLLIST_CH_)
 #define __TAO_UNBOUNDED_SEQUENCE_RTCORBA_PROTOCOLLIST_CH_
   
-  class TAO_EXPORT_NESTED_MACRO _TAO_Unbounded_Sequence_RTCORBA_ProtocolList
-    : public TAO_Unbounded_Base_Sequence
+    class TAO_EXPORT_NESTED_MACRO _TAO_Unbounded_Sequence_RTCORBA_ProtocolList : public TAO_Unbounded_Base_Sequence
   {
   public:
     // = Initialization and termination methods.
-    _TAO_Unbounded_Sequence_RTCORBA_ProtocolList (void);
+
+      _TAO_Unbounded_Sequence_RTCORBA_ProtocolList (void); // Default constructor.
     _TAO_Unbounded_Sequence_RTCORBA_ProtocolList (CORBA::ULong maximum); 
-    _TAO_Unbounded_Sequence_RTCORBA_ProtocolList (
-        CORBA::ULong maximum,
+      _TAO_Unbounded_Sequence_RTCORBA_ProtocolList (CORBA::ULong maximum,
         CORBA::ULong length,
         Protocol *data,
-        CORBA::Boolean release = 0
-      );
-    _TAO_Unbounded_Sequence_RTCORBA_ProtocolList (
-        const _TAO_Unbounded_Sequence_RTCORBA_ProtocolList &rhs
-      );
-    _TAO_Unbounded_Sequence_RTCORBA_ProtocolList &operator= (
-        const _TAO_Unbounded_Sequence_RTCORBA_ProtocolList &rhs
-      );
-    virtual ~_TAO_Unbounded_Sequence_RTCORBA_ProtocolList (void);
-    
+        CORBA::Boolean release = 0);
+      _TAO_Unbounded_Sequence_RTCORBA_ProtocolList (const _TAO_Unbounded_Sequence_RTCORBA_ProtocolList &rhs);
+      _TAO_Unbounded_Sequence_RTCORBA_ProtocolList &operator= (const _TAO_Unbounded_Sequence_RTCORBA_ProtocolList &rhs);
+      virtual ~_TAO_Unbounded_Sequence_RTCORBA_ProtocolList (void); // Dtor.
     // = Accessors.
     Protocol &operator[] (CORBA::ULong i);
     const Protocol &operator[] (CORBA::ULong i) const;
-    
     // = Static operations.
     static Protocol *allocbuf (CORBA::ULong size);
     static void freebuf (Protocol *buffer);
-    
-    // Implement the TAO_Base_Sequence methods (see Sequence.h)
     virtual void _allocate_buffer (CORBA::ULong length);
     virtual void _deallocate_buffer (void);
+      // Implement the TAO_Base_Sequence methods (see Sequence.h)
+
     Protocol *get_buffer (CORBA::Boolean orphan = 0);
     const Protocol *get_buffer (void) const;
-    void replace (
-        CORBA::ULong max,
+      void replace (CORBA::ULong max,
         CORBA::ULong length,
         Protocol *data,
-        CORBA::Boolean release
-      );
+        CORBA::Boolean release);
   };
   
 #endif /* end #if !defined */
@@ -869,7 +841,6 @@
     typedef ProtocolList_var _var_type;
 #endif /* ! __GNUC__ || g++ >= 2.8 */
     
-    
   };
   
 #endif /* end #if !defined */
@@ -885,10 +856,10 @@
   class TAO_RTCORBA_Export ProtocolList_var
   {
   public:
-    ProtocolList_var (void);
+    ProtocolList_var (void); // default constructor
     ProtocolList_var (ProtocolList *);
-    ProtocolList_var (const ProtocolList_var &);
-    ~ProtocolList_var (void);
+    ProtocolList_var (const ProtocolList_var &); // copy constructor
+    ~ProtocolList_var (void); // destructor
     
     ProtocolList_var &operator= (ProtocolList *);
     ProtocolList_var &operator= (const ProtocolList_var &);
@@ -936,7 +907,7 @@
   
   private:
     ProtocolList *&ptr_;
-    // Assignment from T_var not allowed.
+    // assignment from T_var not allowed
     void operator= (const ProtocolList_var &);
   };
   
@@ -984,10 +955,7 @@
     static ServerProtocolPolicy_ptr duplicate (ServerProtocolPolicy_ptr);
     static void release (ServerProtocolPolicy_ptr);
     static ServerProtocolPolicy_ptr nil (void);
-    static ServerProtocolPolicy_ptr narrow (
-        CORBA::Object *,
-        CORBA::Environment &
-      );
+    static ServerProtocolPolicy_ptr narrow (CORBA::Object *, CORBA::Environment &);
     static CORBA::Object * upcast (void *);
   
   private:
@@ -1028,8 +996,7 @@
 #if !defined (_RTCORBA_SERVERPROTOCOLPOLICY_CH_)
 #define _RTCORBA_SERVERPROTOCOLPOLICY_CH_
   
-  class TAO_RTCORBA_Export ServerProtocolPolicy
-    : public virtual CORBA::Policy
+class TAO_RTCORBA_Export ServerProtocolPolicy: public virtual CORBA::Policy
   {
   public:
   #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
@@ -1039,19 +1006,16 @@
 
     // the static operations
     static ServerProtocolPolicy_ptr _duplicate (ServerProtocolPolicy_ptr obj);
-    
     static ServerProtocolPolicy_ptr _narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static ServerProtocolPolicy_ptr _unchecked_narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static ServerProtocolPolicy_ptr _nil (void)
       {
         return (ServerProtocolPolicy_ptr)0;
@@ -1073,7 +1037,6 @@
     ServerProtocolPolicy ();
     
     virtual ~ServerProtocolPolicy (void);
-  
   private:
     ServerProtocolPolicy (const ServerProtocolPolicy &);
     void operator= (const ServerProtocolPolicy &);
@@ -1123,10 +1086,7 @@
     static ClientProtocolPolicy_ptr duplicate (ClientProtocolPolicy_ptr);
     static void release (ClientProtocolPolicy_ptr);
     static ClientProtocolPolicy_ptr nil (void);
-    static ClientProtocolPolicy_ptr narrow (
-        CORBA::Object *,
-        CORBA::Environment &
-      );
+    static ClientProtocolPolicy_ptr narrow (CORBA::Object *, CORBA::Environment &);
     static CORBA::Object * upcast (void *);
   
   private:
@@ -1167,8 +1127,7 @@
 #if !defined (_RTCORBA_CLIENTPROTOCOLPOLICY_CH_)
 #define _RTCORBA_CLIENTPROTOCOLPOLICY_CH_
   
-  class TAO_RTCORBA_Export ClientProtocolPolicy
-    : public virtual CORBA::Policy
+class TAO_RTCORBA_Export ClientProtocolPolicy: public virtual CORBA::Policy
   {
   public:
   #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
@@ -1178,19 +1137,16 @@
 
     // the static operations
     static ClientProtocolPolicy_ptr _duplicate (ClientProtocolPolicy_ptr obj);
-    
     static ClientProtocolPolicy_ptr _narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static ClientProtocolPolicy_ptr _unchecked_narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static ClientProtocolPolicy_ptr _nil (void)
       {
         return (ClientProtocolPolicy_ptr)0;
@@ -1212,7 +1168,6 @@
     ClientProtocolPolicy ();
     
     virtual ~ClientProtocolPolicy (void);
-  
   private:
     ClientProtocolPolicy (const ClientProtocolPolicy &);
     void operator= (const ClientProtocolPolicy &);
@@ -1262,10 +1217,7 @@
     static PrivateConnectionPolicy_ptr duplicate (PrivateConnectionPolicy_ptr);
     static void release (PrivateConnectionPolicy_ptr);
     static PrivateConnectionPolicy_ptr nil (void);
-    static PrivateConnectionPolicy_ptr narrow (
-        CORBA::Object *,
-        CORBA::Environment &
-      );
+    static PrivateConnectionPolicy_ptr narrow (CORBA::Object *, CORBA::Environment &);
     static CORBA::Object * upcast (void *);
   
   private:
@@ -1306,8 +1258,7 @@
 #if !defined (_RTCORBA_PRIVATECONNECTIONPOLICY_CH_)
 #define _RTCORBA_PRIVATECONNECTIONPOLICY_CH_
   
-  class TAO_RTCORBA_Export PrivateConnectionPolicy
-    : public virtual CORBA::Policy
+class TAO_RTCORBA_Export PrivateConnectionPolicy: public virtual CORBA::Policy
   {
   public:
   #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
@@ -1317,19 +1268,16 @@
 
     // the static operations
     static PrivateConnectionPolicy_ptr _duplicate (PrivateConnectionPolicy_ptr obj);
-    
     static PrivateConnectionPolicy_ptr _narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static PrivateConnectionPolicy_ptr _unchecked_narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static PrivateConnectionPolicy_ptr _nil (void)
       {
         return (PrivateConnectionPolicy_ptr)0;
@@ -1343,7 +1291,6 @@
     PrivateConnectionPolicy ();
     
     virtual ~PrivateConnectionPolicy (void);
-  
   private:
     PrivateConnectionPolicy (const PrivateConnectionPolicy &);
     void operator= (const PrivateConnectionPolicy &);
@@ -1391,10 +1338,7 @@
     static TCPProtocolProperties_ptr duplicate (TCPProtocolProperties_ptr);
     static void release (TCPProtocolProperties_ptr);
     static TCPProtocolProperties_ptr nil (void);
-    static TCPProtocolProperties_ptr narrow (
-        CORBA::Object *,
-        CORBA::Environment &
-      );
+    static TCPProtocolProperties_ptr narrow (CORBA::Object *, CORBA::Environment &);
     static CORBA::Object * upcast (void *);
   
   private:
@@ -1435,8 +1379,7 @@
 #if !defined (_RTCORBA_TCPPROTOCOLPROPERTIES_CH_)
 #define _RTCORBA_TCPPROTOCOLPROPERTIES_CH_
   
-  class TAO_RTCORBA_Export TCPProtocolProperties
-    : public virtual ProtocolProperties
+class TAO_RTCORBA_Export TCPProtocolProperties: public virtual ProtocolProperties
   {
   public:
   #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
@@ -1446,19 +1389,16 @@
 
     // the static operations
     static TCPProtocolProperties_ptr _duplicate (TCPProtocolProperties_ptr obj);
-    
     static TCPProtocolProperties_ptr _narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static TCPProtocolProperties_ptr _unchecked_narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static TCPProtocolProperties_ptr _nil (void)
       {
         return (TCPProtocolProperties_ptr)0;
@@ -1557,7 +1497,6 @@
     TCPProtocolProperties ();
     
     virtual ~TCPProtocolProperties (void);
-  
   private:
     TCPProtocolProperties (const TCPProtocolProperties &);
     void operator= (const TCPProtocolProperties &);
@@ -1605,10 +1544,7 @@
     static GIOPProtocolProperties_ptr duplicate (GIOPProtocolProperties_ptr);
     static void release (GIOPProtocolProperties_ptr);
     static GIOPProtocolProperties_ptr nil (void);
-    static GIOPProtocolProperties_ptr narrow (
-        CORBA::Object *,
-        CORBA::Environment &
-      );
+    static GIOPProtocolProperties_ptr narrow (CORBA::Object *, CORBA::Environment &);
     static CORBA::Object * upcast (void *);
   
   private:
@@ -1649,8 +1585,7 @@
 #if !defined (_RTCORBA_GIOPPROTOCOLPROPERTIES_CH_)
 #define _RTCORBA_GIOPPROTOCOLPROPERTIES_CH_
   
-  class TAO_RTCORBA_Export GIOPProtocolProperties
-    : public virtual ProtocolProperties
+class TAO_RTCORBA_Export GIOPProtocolProperties: public virtual ProtocolProperties
   {
   public:
   #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
@@ -1660,19 +1595,16 @@
 
     // the static operations
     static GIOPProtocolProperties_ptr _duplicate (GIOPProtocolProperties_ptr obj);
-    
     static GIOPProtocolProperties_ptr _narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static GIOPProtocolProperties_ptr _unchecked_narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static GIOPProtocolProperties_ptr _nil (void)
       {
         return (GIOPProtocolProperties_ptr)0;
@@ -1686,7 +1618,6 @@
     GIOPProtocolProperties ();
     
     virtual ~GIOPProtocolProperties (void);
-  
   private:
     GIOPProtocolProperties (const GIOPProtocolProperties &);
     void operator= (const GIOPProtocolProperties &);
@@ -1734,10 +1665,7 @@
     static UnixDomainProtocolProperties_ptr duplicate (UnixDomainProtocolProperties_ptr);
     static void release (UnixDomainProtocolProperties_ptr);
     static UnixDomainProtocolProperties_ptr nil (void);
-    static UnixDomainProtocolProperties_ptr narrow (
-        CORBA::Object *,
-        CORBA::Environment &
-      );
+    static UnixDomainProtocolProperties_ptr narrow (CORBA::Object *, CORBA::Environment &);
     static CORBA::Object * upcast (void *);
   
   private:
@@ -1778,8 +1706,7 @@
 #if !defined (_RTCORBA_UNIXDOMAINPROTOCOLPROPERTIES_CH_)
 #define _RTCORBA_UNIXDOMAINPROTOCOLPROPERTIES_CH_
   
-  class TAO_RTCORBA_Export UnixDomainProtocolProperties
-    : public virtual ProtocolProperties
+class TAO_RTCORBA_Export UnixDomainProtocolProperties: public virtual ProtocolProperties
   {
   public:
   #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
@@ -1789,19 +1716,16 @@
 
     // the static operations
     static UnixDomainProtocolProperties_ptr _duplicate (UnixDomainProtocolProperties_ptr obj);
-    
     static UnixDomainProtocolProperties_ptr _narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static UnixDomainProtocolProperties_ptr _unchecked_narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static UnixDomainProtocolProperties_ptr _nil (void)
       {
         return (UnixDomainProtocolProperties_ptr)0;
@@ -1849,7 +1773,6 @@
     UnixDomainProtocolProperties ();
     
     virtual ~UnixDomainProtocolProperties (void);
-  
   private:
     UnixDomainProtocolProperties (const UnixDomainProtocolProperties &);
     void operator= (const UnixDomainProtocolProperties &);
@@ -1897,10 +1820,7 @@
     static SharedMemoryProtocolProperties_ptr duplicate (SharedMemoryProtocolProperties_ptr);
     static void release (SharedMemoryProtocolProperties_ptr);
     static SharedMemoryProtocolProperties_ptr nil (void);
-    static SharedMemoryProtocolProperties_ptr narrow (
-        CORBA::Object *,
-        CORBA::Environment &
-      );
+    static SharedMemoryProtocolProperties_ptr narrow (CORBA::Object *, CORBA::Environment &);
     static CORBA::Object * upcast (void *);
   
   private:
@@ -1941,8 +1861,7 @@
 #if !defined (_RTCORBA_SHAREDMEMORYPROTOCOLPROPERTIES_CH_)
 #define _RTCORBA_SHAREDMEMORYPROTOCOLPROPERTIES_CH_
   
-  class TAO_RTCORBA_Export SharedMemoryProtocolProperties
-    : public virtual ProtocolProperties
+class TAO_RTCORBA_Export SharedMemoryProtocolProperties: public virtual ProtocolProperties
   {
   public:
   #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
@@ -1952,19 +1871,16 @@
 
     // the static operations
     static SharedMemoryProtocolProperties_ptr _duplicate (SharedMemoryProtocolProperties_ptr obj);
-    
     static SharedMemoryProtocolProperties_ptr _narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static SharedMemoryProtocolProperties_ptr _unchecked_narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static SharedMemoryProtocolProperties_ptr _nil (void)
       {
         return (SharedMemoryProtocolProperties_ptr)0;
@@ -2029,7 +1945,6 @@
     SharedMemoryProtocolProperties ();
     
     virtual ~SharedMemoryProtocolProperties (void);
-  
   private:
     SharedMemoryProtocolProperties (const SharedMemoryProtocolProperties &);
     void operator= (const SharedMemoryProtocolProperties &);
@@ -2052,23 +1967,20 @@
     
     ACE_NESTED_CLASS (RTCORBA, Priority) low;
     ACE_NESTED_CLASS (RTCORBA, Priority) high;
-    
   };
   
   class TAO_RTCORBA_Export PriorityBand_var
   {
   public:
-    PriorityBand_var (void);
+    PriorityBand_var (void); // default constructor
     PriorityBand_var (PriorityBand *);
-    PriorityBand_var (const PriorityBand_var &);
-    // Fixed-size types only.
-    PriorityBand_var (const PriorityBand &);
-    ~PriorityBand_var (void);
+    PriorityBand_var (const PriorityBand_var &); // copy constructor
+    PriorityBand_var (const PriorityBand &); // fixed-size types only
+    ~PriorityBand_var (void); // destructor
     
     PriorityBand_var &operator= (PriorityBand *);
     PriorityBand_var &operator= (const PriorityBand_var &);
-    // Fixed-size types only.
-    PriorityBand_var &operator= (const PriorityBand &);
+    PriorityBand_var &operator= (const PriorityBand &); // fixed-size types only
     PriorityBand *operator-> (void);
     const PriorityBand *operator-> (void) const;
     
@@ -2097,46 +2009,36 @@
 #if !defined (__TAO_UNBOUNDED_SEQUENCE_RTCORBA_PRIORITYBANDS_CH_)
 #define __TAO_UNBOUNDED_SEQUENCE_RTCORBA_PRIORITYBANDS_CH_
   
-  class TAO_EXPORT_NESTED_MACRO _TAO_Unbounded_Sequence_RTCORBA_PriorityBands
-    : public TAO_Unbounded_Base_Sequence
+    class TAO_EXPORT_NESTED_MACRO _TAO_Unbounded_Sequence_RTCORBA_PriorityBands : public TAO_Unbounded_Base_Sequence
   {
   public:
     // = Initialization and termination methods.
-    _TAO_Unbounded_Sequence_RTCORBA_PriorityBands (void);
+
+      _TAO_Unbounded_Sequence_RTCORBA_PriorityBands (void); // Default constructor.
     _TAO_Unbounded_Sequence_RTCORBA_PriorityBands (CORBA::ULong maximum); 
-    _TAO_Unbounded_Sequence_RTCORBA_PriorityBands (
-        CORBA::ULong maximum,
+      _TAO_Unbounded_Sequence_RTCORBA_PriorityBands (CORBA::ULong maximum,
         CORBA::ULong length,
         PriorityBand *data,
-        CORBA::Boolean release = 0
-      );
-    _TAO_Unbounded_Sequence_RTCORBA_PriorityBands (
-        const _TAO_Unbounded_Sequence_RTCORBA_PriorityBands &rhs
-      );
-    _TAO_Unbounded_Sequence_RTCORBA_PriorityBands &operator= (
-        const _TAO_Unbounded_Sequence_RTCORBA_PriorityBands &rhs
-      );
-    virtual ~_TAO_Unbounded_Sequence_RTCORBA_PriorityBands (void);
-    
+        CORBA::Boolean release = 0);
+      _TAO_Unbounded_Sequence_RTCORBA_PriorityBands (const _TAO_Unbounded_Sequence_RTCORBA_PriorityBands &rhs);
+      _TAO_Unbounded_Sequence_RTCORBA_PriorityBands &operator= (const _TAO_Unbounded_Sequence_RTCORBA_PriorityBands &rhs);
+      virtual ~_TAO_Unbounded_Sequence_RTCORBA_PriorityBands (void); // Dtor.
     // = Accessors.
     PriorityBand &operator[] (CORBA::ULong i);
     const PriorityBand &operator[] (CORBA::ULong i) const;
-    
     // = Static operations.
     static PriorityBand *allocbuf (CORBA::ULong size);
     static void freebuf (PriorityBand *buffer);
-    
-    // Implement the TAO_Base_Sequence methods (see Sequence.h)
     virtual void _allocate_buffer (CORBA::ULong length);
     virtual void _deallocate_buffer (void);
+      // Implement the TAO_Base_Sequence methods (see Sequence.h)
+
     PriorityBand *get_buffer (CORBA::Boolean orphan = 0);
     const PriorityBand *get_buffer (void) const;
-    void replace (
-        CORBA::ULong max,
+      void replace (CORBA::ULong max,
         CORBA::ULong length,
         PriorityBand *data,
-        CORBA::Boolean release
-      );
+        CORBA::Boolean release);
   };
   
 #endif /* end #if !defined */
@@ -2178,7 +2080,6 @@
     typedef PriorityBands_var _var_type;
 #endif /* ! __GNUC__ || g++ >= 2.8 */
     
-    
   };
   
 #endif /* end #if !defined */
@@ -2194,17 +2095,15 @@
   class TAO_RTCORBA_Export PriorityBands_var
   {
   public:
-    PriorityBands_var (void);
+    PriorityBands_var (void); // default constructor
     PriorityBands_var (PriorityBands *);
-    PriorityBands_var (const PriorityBands_var &);
-    // Fixed-size base types only.
-    PriorityBands_var (const PriorityBands &);
-    ~PriorityBands_var (void);
+    PriorityBands_var (const PriorityBands_var &); // copy constructor
+    PriorityBands_var (const PriorityBands &); // fixed-size base types only
+    ~PriorityBands_var (void); // destructor
     
     PriorityBands_var &operator= (PriorityBands *);
     PriorityBands_var &operator= (const PriorityBands_var &);
-    // Fixed-size base types only.
-    PriorityBands_var &operator= (const PriorityBands &);
+    PriorityBands_var &operator= (const PriorityBands &); // fixed-size base types only
     PriorityBands *operator-> (void);
     const PriorityBands *operator-> (void) const;
     
@@ -2248,7 +2147,7 @@
   
   private:
     PriorityBands *&ptr_;
-    // Assignment from T_var not allowed.
+    // assignment from T_var not allowed
     void operator= (const PriorityBands_var &);
   };
   
@@ -2298,10 +2197,7 @@
     static PriorityBandedConnectionPolicy_ptr duplicate (PriorityBandedConnectionPolicy_ptr);
     static void release (PriorityBandedConnectionPolicy_ptr);
     static PriorityBandedConnectionPolicy_ptr nil (void);
-    static PriorityBandedConnectionPolicy_ptr narrow (
-        CORBA::Object *,
-        CORBA::Environment &
-      );
+    static PriorityBandedConnectionPolicy_ptr narrow (CORBA::Object *, CORBA::Environment &);
     static CORBA::Object * upcast (void *);
   
   private:
@@ -2342,8 +2238,7 @@
 #if !defined (_RTCORBA_PRIORITYBANDEDCONNECTIONPOLICY_CH_)
 #define _RTCORBA_PRIORITYBANDEDCONNECTIONPOLICY_CH_
   
-  class TAO_RTCORBA_Export PriorityBandedConnectionPolicy
-    : public virtual CORBA::Policy
+class TAO_RTCORBA_Export PriorityBandedConnectionPolicy: public virtual CORBA::Policy
   {
   public:
   #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
@@ -2353,19 +2248,16 @@
 
     // the static operations
     static PriorityBandedConnectionPolicy_ptr _duplicate (PriorityBandedConnectionPolicy_ptr obj);
-    
     static PriorityBandedConnectionPolicy_ptr _narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static PriorityBandedConnectionPolicy_ptr _unchecked_narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static PriorityBandedConnectionPolicy_ptr _nil (void)
       {
         return (PriorityBandedConnectionPolicy_ptr)0;
@@ -2387,7 +2279,6 @@
     PriorityBandedConnectionPolicy ();
     
     virtual ~PriorityBandedConnectionPolicy (void);
-  
   private:
     PriorityBandedConnectionPolicy (const PriorityBandedConnectionPolicy &);
     void operator= (const PriorityBandedConnectionPolicy &);
@@ -2435,10 +2326,7 @@
     static Current_ptr duplicate (Current_ptr);
     static void release (Current_ptr);
     static Current_ptr nil (void);
-    static Current_ptr narrow (
-        CORBA::Object *,
-        CORBA::Environment &
-      );
+    static Current_ptr narrow (CORBA::Object *, CORBA::Environment &);
     static CORBA::Object * upcast (void *);
   
   private:
@@ -2479,8 +2367,7 @@
 #if !defined (_RTCORBA_CURRENT_CH_)
 #define _RTCORBA_CURRENT_CH_
   
-  class TAO_RTCORBA_Export Current
-    : public virtual CORBA::Current
+class TAO_RTCORBA_Export Current: public virtual CORBA::Current
   {
   public:
   #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
@@ -2490,19 +2377,16 @@
 
     // the static operations
     static Current_ptr _duplicate (Current_ptr obj);
-    
     static Current_ptr _narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static Current_ptr _unchecked_narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static Current_ptr _nil (void)
       {
         return (Current_ptr)0;
@@ -2533,7 +2417,6 @@
     Current ();
     
     virtual ~Current (void);
-  
   private:
     Current (const Current &);
     void operator= (const Current &);
@@ -2581,10 +2464,7 @@
     static Mutex_ptr duplicate (Mutex_ptr);
     static void release (Mutex_ptr);
     static Mutex_ptr nil (void);
-    static Mutex_ptr narrow (
-        CORBA::Object *,
-        CORBA::Environment &
-      );
+    static Mutex_ptr narrow (CORBA::Object *, CORBA::Environment &);
     static CORBA::Object * upcast (void *);
   
   private:
@@ -2625,8 +2505,7 @@
 #if !defined (_RTCORBA_MUTEX_CH_)
 #define _RTCORBA_MUTEX_CH_
   
-  class TAO_RTCORBA_Export Mutex
-    : public virtual CORBA_Object
+class TAO_RTCORBA_Export Mutex : public virtual CORBA_Object
   {
   public:
   #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
@@ -2636,19 +2515,16 @@
 
     // the static operations
     static Mutex_ptr _duplicate (Mutex_ptr obj);
-    
     static Mutex_ptr _narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static Mutex_ptr _unchecked_narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static Mutex_ptr _nil (void)
       {
         return (Mutex_ptr)0;
@@ -2687,7 +2563,6 @@
     Mutex ();
     
     virtual ~Mutex (void);
-  
   private:
     Mutex (const Mutex &);
     void operator= (const Mutex &);
@@ -2735,10 +2610,7 @@
     static RTORB_ptr duplicate (RTORB_ptr);
     static void release (RTORB_ptr);
     static RTORB_ptr nil (void);
-    static RTORB_ptr narrow (
-        CORBA::Object *,
-        CORBA::Environment &
-      );
+    static RTORB_ptr narrow (CORBA::Object *, CORBA::Environment &);
     static CORBA::Object * upcast (void *);
   
   private:
@@ -2779,8 +2651,7 @@
 #if !defined (_RTCORBA_RTORB_CH_)
 #define _RTCORBA_RTORB_CH_
   
-  class TAO_RTCORBA_Export RTORB
-    : public virtual CORBA_Object
+class TAO_RTCORBA_Export RTORB : public virtual CORBA_Object
   {
   public:
   #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
@@ -2790,19 +2661,16 @@
 
     // the static operations
     static RTORB_ptr _duplicate (RTORB_ptr obj);
-    
     static RTORB_ptr _narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static RTORB_ptr _unchecked_narrow (
         CORBA::Object_ptr obj,
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
       );
-    
     static RTORB_ptr _nil (void)
       {
         return (RTORB_ptr)0;
@@ -2930,7 +2798,7 @@
           CORBA::Environment &
         );
       
-      static InvalidThreadpool *_downcast (CORBA::Exception *);
+      static InvalidThreadpool *_narrow (CORBA::Exception *);
 
 
       // = TAO extension.
@@ -3041,7 +2909,6 @@
     RTORB ();
     
     virtual ~RTORB (void);
-  
   private:
     RTORB (const RTORB &);
     void operator= (const RTORB &);
