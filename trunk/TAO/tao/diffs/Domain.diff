--- orig/DomainC.cpp	2005-02-18 11:42:40.695684800 +0100
+++ DomainC.cpp	2005-02-18 12:07:00.775176000 +0100
@@ -39,6 +39,10 @@
 #include "tao/Special_Basic_Arguments.h"
 #include "ace/OS_NS_string.h"
 
+#include "tao/ORB_Core.h"
+#include "tao/IFR_Client_Adapter.h"
+#include "ace/Dynamic_Service.h"
+
 #if defined (__BORLANDC__)
 #pragma option -w-rvl -w-rch -w-ccc -w-aus -w-sig
 #endif /* __BORLANDC__ */
@@ -50,6 +54,44 @@
 // TAO_IDL - Generated from
 // be\be_visitor_arg_traits.cpp:66
 
+// TAO specific stuff.
+namespace CORBA
+{
+  class InterfaceDef;
+  typedef InterfaceDef *InterfaceDef_ptr;
+  typedef TAO_Objref_Var_T<InterfaceDef> InterfaceDef_var;
+  typedef TAO_Objref_Out_T<InterfaceDef> InterfaceDef_out;
+}
+
+#if TAO_HAS_INTERCEPTORS == 1
+
+ACE_TEMPLATE_SPECIALIZATION
+void
+TAO::In_Object_Argument_T<CORBA::InterfaceDef_ptr>::interceptor_param (Dynamic::Parameter & p)
+{
+  TAO_IFR_Client_Adapter *adapter =
+    ACE_Dynamic_Service<TAO_IFR_Client_Adapter>::instance (
+        TAO_ORB_Core::ifr_client_adapter_name ()
+      );
+
+  adapter->interfacedef_any_insert (p.argument, this->x_);
+  p.mode = CORBA::PARAM_IN;
+}
+
+#endif /* TAO_HAS_INTERCEPTORS */
+
+ACE_TEMPLATE_SPECIALIZATION
+CORBA::Boolean
+TAO::In_Object_Argument_T<CORBA::InterfaceDef_ptr>::marshal (TAO_OutputCDR & cdr)
+{
+  TAO_IFR_Client_Adapter *adapter =
+    ACE_Dynamic_Service<TAO_IFR_Client_Adapter>::instance (
+        TAO_ORB_Core::ifr_client_adapter_name ()
+      );
+
+  return adapter->interfacedef_cdr_insert (cdr, this->x_);
+}
+
 // Arg traits specializations.
 namespace TAO
 {
--- orig/DomainC.h	2005-02-18 11:42:40.695684800 +0100
+++ DomainC.h	2005-02-18 11:42:54.145024000 +0100
@@ -51,7 +51,6 @@
 #include "tao/Seq_Out_T.h"
 
 #include "tao/PolicyC.h"
-#include "tao/InterfaceDefC.h"
 
 #if defined (TAO_EXPORT_MACRO)
 #undef TAO_EXPORT_MACRO
