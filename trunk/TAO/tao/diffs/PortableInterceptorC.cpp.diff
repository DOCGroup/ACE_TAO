--- orig/PortableInterceptorC.cpp	Wed Apr 25 00:17:34 2001
+++ PortableInterceptorC.cpp	Tue Apr 24 13:44:42 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -21,13 +21,6 @@
 
 #include "PortableInterceptorC.h"
 
-#include "tao/Stub.h"
-#include "tao/Invocation.h"
-#include "tao/ClientRequestInfo.h"
-#if TAO_HAS_INTERCEPTORS == 1
-#include "tao/RequestInfo_Util.h"
-#endif  /* TAO_HAS_INTERCEPTORS == 1 */
-
 #if defined (__BORLANDC__)
 #pragma option -w-rvl -w-rch -w-ccc -w-aus
 #endif /* __BORLANDC__ */
@@ -36,48 +29,7 @@
 #include "PortableInterceptorC.i"
 #endif /* !defined INLINE */
 
-PortableInterceptor::Interceptor_ptr
-tao_PortableInterceptor_Interceptor_duplicate (
-    PortableInterceptor::Interceptor_ptr p
-  )
-{
-  return PortableInterceptor::Interceptor::_duplicate (p);
-}
-
-void
-tao_PortableInterceptor_Interceptor_release (
-    PortableInterceptor::Interceptor_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-PortableInterceptor::Interceptor_ptr
-tao_PortableInterceptor_Interceptor_nil (
-    void
-  )
-{
-  return PortableInterceptor::Interceptor::_nil ();
-}
-
-PortableInterceptor::Interceptor_ptr
-tao_PortableInterceptor_Interceptor_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return PortableInterceptor::Interceptor::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_PortableInterceptor_Interceptor_upcast (
-    void *src
-  )
-{
-  PortableInterceptor::Interceptor **tmp =
-    ACE_static_cast (PortableInterceptor::Interceptor **, src);
-  return *tmp;
-}
+#include "CORBA_String.h"
 
 // *************************************************************
 // Operations for class PortableInterceptor::Interceptor_var
@@ -168,13 +120,13 @@
 }
 
 ::PortableInterceptor::Interceptor_ptr
-PortableInterceptor::Interceptor_var::duplicate (Interceptor_ptr p)
+PortableInterceptor::Interceptor_var::duplicate (PortableInterceptor::Interceptor_ptr p)
 {
   return ::PortableInterceptor::Interceptor::_duplicate (p);
 }
 
 void
-PortableInterceptor::Interceptor_var::release (Interceptor_ptr p)
+PortableInterceptor::Interceptor_var::release (PortableInterceptor::Interceptor_ptr p)
 {
   CORBA::release (p);
 }
@@ -197,11 +149,10 @@
 CORBA::Object *
 PortableInterceptor::Interceptor_var::upcast (void *src)
 {
-  Interceptor **tmp =
-    ACE_static_cast (Interceptor **, src);
+  PortableInterceptor::Interceptor **tmp =
+    ACE_static_cast (PortableInterceptor::Interceptor **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class PortableInterceptor::Interceptor_out
 // *************************************************************
@@ -489,7 +440,6 @@
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ForwardRequest, &_tc_TAO_tc_PortableInterceptor_ForwardRequest)
 TAO_NAMESPACE_END
 
-
 // TAO extension - the virtual _type method.
 CORBA::TypeCode_ptr PortableInterceptor::ForwardRequest::_type (void) const
 {
@@ -692,7 +642,6 @@
   ACE_NTOHL (0x6c6f7400),  // name = InvalidSlot
   0, // member count
 };
-
 static CORBA::TypeCode _tc_TAO_tc_PortableInterceptor_InvalidSlot (
     CORBA::tk_except,
     sizeof (_oc_PortableInterceptor_InvalidSlot),
@@ -706,55 +655,12 @@
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_InvalidSlot, &_tc_TAO_tc_PortableInterceptor_InvalidSlot)
 TAO_NAMESPACE_END
 
-
 // TAO extension - the virtual _type method.
 CORBA::TypeCode_ptr PortableInterceptor::InvalidSlot::_type (void) const
 {
   return ::PortableInterceptor::_tc_InvalidSlot;
 }
 
-PortableInterceptor::Current_ptr
-tao_PortableInterceptor_Current_duplicate (
-    PortableInterceptor::Current_ptr p
-  )
-{
-  return PortableInterceptor::Current::_duplicate (p);
-}
-
-void
-tao_PortableInterceptor_Current_release (
-    PortableInterceptor::Current_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-PortableInterceptor::Current_ptr
-tao_PortableInterceptor_Current_nil (
-    void
-  )
-{
-  return PortableInterceptor::Current::_nil ();
-}
-
-PortableInterceptor::Current_ptr
-tao_PortableInterceptor_Current_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return PortableInterceptor::Current::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_PortableInterceptor_Current_upcast (
-    void *src
-  )
-{
-  PortableInterceptor::Current **tmp =
-    ACE_static_cast (PortableInterceptor::Current **, src);
-  return *tmp;
-}
 
 // *************************************************************
 // Operations for class PortableInterceptor::Current_var
@@ -845,13 +751,13 @@
 }
 
 ::PortableInterceptor::Current_ptr
-PortableInterceptor::Current_var::duplicate (Current_ptr p)
+PortableInterceptor::Current_var::duplicate (PortableInterceptor::Current_ptr p)
 {
   return ::PortableInterceptor::Current::_duplicate (p);
 }
 
 void
-PortableInterceptor::Current_var::release (Current_ptr p)
+PortableInterceptor::Current_var::release (PortableInterceptor::Current_ptr p)
 {
   CORBA::release (p);
 }
@@ -874,11 +780,10 @@
 CORBA::Object *
 PortableInterceptor::Current_var::upcast (void *src)
 {
-  Current **tmp =
-    ACE_static_cast (Current **, src);
+  PortableInterceptor::Current **tmp =
+    ACE_static_cast (PortableInterceptor::Current **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class PortableInterceptor::Current_out
 // *************************************************************
@@ -1019,48 +924,6 @@
   return "IDL:PortableInterceptor/Current:1.0";
 }
 
-PortableInterceptor::RequestInfo_ptr
-tao_PortableInterceptor_RequestInfo_duplicate (
-    PortableInterceptor::RequestInfo_ptr p
-  )
-{
-  return PortableInterceptor::RequestInfo::_duplicate (p);
-}
-
-void
-tao_PortableInterceptor_RequestInfo_release (
-    PortableInterceptor::RequestInfo_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-PortableInterceptor::RequestInfo_ptr
-tao_PortableInterceptor_RequestInfo_nil (
-    void
-  )
-{
-  return PortableInterceptor::RequestInfo::_nil ();
-}
-
-PortableInterceptor::RequestInfo_ptr
-tao_PortableInterceptor_RequestInfo_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return PortableInterceptor::RequestInfo::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_PortableInterceptor_RequestInfo_upcast (
-    void *src
-  )
-{
-  PortableInterceptor::RequestInfo **tmp =
-    ACE_static_cast (PortableInterceptor::RequestInfo **, src);
-  return *tmp;
-}
 
 // *************************************************************
 // Operations for class PortableInterceptor::RequestInfo_var
@@ -1151,13 +1014,13 @@
 }
 
 ::PortableInterceptor::RequestInfo_ptr
-PortableInterceptor::RequestInfo_var::duplicate (RequestInfo_ptr p)
+PortableInterceptor::RequestInfo_var::duplicate (PortableInterceptor::RequestInfo_ptr p)
 {
   return ::PortableInterceptor::RequestInfo::_duplicate (p);
 }
 
 void
-PortableInterceptor::RequestInfo_var::release (RequestInfo_ptr p)
+PortableInterceptor::RequestInfo_var::release (PortableInterceptor::RequestInfo_ptr p)
 {
   CORBA::release (p);
 }
@@ -1180,11 +1043,10 @@
 CORBA::Object *
 PortableInterceptor::RequestInfo_var::upcast (void *src)
 {
-  RequestInfo **tmp =
-    ACE_static_cast (RequestInfo **, src);
+  PortableInterceptor::RequestInfo **tmp =
+    ACE_static_cast (PortableInterceptor::RequestInfo **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class PortableInterceptor::RequestInfo_out
 // *************************************************************
@@ -1313,48 +1175,6 @@
   return "IDL:PortableInterceptor/RequestInfo:1.0";
 }
 
-PortableInterceptor::ClientRequestInfo_ptr
-tao_PortableInterceptor_ClientRequestInfo_duplicate (
-    PortableInterceptor::ClientRequestInfo_ptr p
-  )
-{
-  return PortableInterceptor::ClientRequestInfo::_duplicate (p);
-}
-
-void
-tao_PortableInterceptor_ClientRequestInfo_release (
-    PortableInterceptor::ClientRequestInfo_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-PortableInterceptor::ClientRequestInfo_ptr
-tao_PortableInterceptor_ClientRequestInfo_nil (
-    void
-  )
-{
-  return PortableInterceptor::ClientRequestInfo::_nil ();
-}
-
-PortableInterceptor::ClientRequestInfo_ptr
-tao_PortableInterceptor_ClientRequestInfo_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return PortableInterceptor::ClientRequestInfo::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_PortableInterceptor_ClientRequestInfo_upcast (
-    void *src
-  )
-{
-  PortableInterceptor::ClientRequestInfo **tmp =
-    ACE_static_cast (PortableInterceptor::ClientRequestInfo **, src);
-  return *tmp;
-}
 
 // *************************************************************
 // Operations for class PortableInterceptor::ClientRequestInfo_var
@@ -1445,13 +1265,13 @@
 }
 
 ::PortableInterceptor::ClientRequestInfo_ptr
-PortableInterceptor::ClientRequestInfo_var::duplicate (ClientRequestInfo_ptr p)
+PortableInterceptor::ClientRequestInfo_var::duplicate (PortableInterceptor::ClientRequestInfo_ptr p)
 {
   return ::PortableInterceptor::ClientRequestInfo::_duplicate (p);
 }
 
 void
-PortableInterceptor::ClientRequestInfo_var::release (ClientRequestInfo_ptr p)
+PortableInterceptor::ClientRequestInfo_var::release (PortableInterceptor::ClientRequestInfo_ptr p)
 {
   CORBA::release (p);
 }
@@ -1474,11 +1294,10 @@
 CORBA::Object *
 PortableInterceptor::ClientRequestInfo_var::upcast (void *src)
 {
-  ClientRequestInfo **tmp =
-    ACE_static_cast (ClientRequestInfo **, src);
+  PortableInterceptor::ClientRequestInfo **tmp =
+    ACE_static_cast (PortableInterceptor::ClientRequestInfo **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class PortableInterceptor::ClientRequestInfo_out
 // *************************************************************
@@ -1619,48 +1438,6 @@
   return "IDL:PortableInterceptor/ClientRequestInfo:1.0";
 }
 
-PortableInterceptor::ServerRequestInfo_ptr
-tao_PortableInterceptor_ServerRequestInfo_duplicate (
-    PortableInterceptor::ServerRequestInfo_ptr p
-  )
-{
-  return PortableInterceptor::ServerRequestInfo::_duplicate (p);
-}
-
-void
-tao_PortableInterceptor_ServerRequestInfo_release (
-    PortableInterceptor::ServerRequestInfo_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-PortableInterceptor::ServerRequestInfo_ptr
-tao_PortableInterceptor_ServerRequestInfo_nil (
-    void
-  )
-{
-  return PortableInterceptor::ServerRequestInfo::_nil ();
-}
-
-PortableInterceptor::ServerRequestInfo_ptr
-tao_PortableInterceptor_ServerRequestInfo_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return PortableInterceptor::ServerRequestInfo::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_PortableInterceptor_ServerRequestInfo_upcast (
-    void *src
-  )
-{
-  PortableInterceptor::ServerRequestInfo **tmp =
-    ACE_static_cast (PortableInterceptor::ServerRequestInfo **, src);
-  return *tmp;
-}
 
 // *************************************************************
 // Operations for class PortableInterceptor::ServerRequestInfo_var
@@ -1751,13 +1528,13 @@
 }
 
 ::PortableInterceptor::ServerRequestInfo_ptr
-PortableInterceptor::ServerRequestInfo_var::duplicate (ServerRequestInfo_ptr p)
+PortableInterceptor::ServerRequestInfo_var::duplicate (PortableInterceptor::ServerRequestInfo_ptr p)
 {
   return ::PortableInterceptor::ServerRequestInfo::_duplicate (p);
 }
 
 void
-PortableInterceptor::ServerRequestInfo_var::release (ServerRequestInfo_ptr p)
+PortableInterceptor::ServerRequestInfo_var::release (PortableInterceptor::ServerRequestInfo_ptr p)
 {
   CORBA::release (p);
 }
@@ -1780,11 +1557,10 @@
 CORBA::Object *
 PortableInterceptor::ServerRequestInfo_var::upcast (void *src)
 {
-  ServerRequestInfo **tmp =
-    ACE_static_cast (ServerRequestInfo **, src);
+  PortableInterceptor::ServerRequestInfo **tmp =
+    ACE_static_cast (PortableInterceptor::ServerRequestInfo **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class PortableInterceptor::ServerRequestInfo_out
 // *************************************************************
@@ -1925,48 +1701,6 @@
   return "IDL:PortableInterceptor/ServerRequestInfo:1.0";
 }
 
-PortableInterceptor::ClientRequestInterceptor_ptr
-tao_PortableInterceptor_ClientRequestInterceptor_duplicate (
-    PortableInterceptor::ClientRequestInterceptor_ptr p
-  )
-{
-  return PortableInterceptor::ClientRequestInterceptor::_duplicate (p);
-}
-
-void
-tao_PortableInterceptor_ClientRequestInterceptor_release (
-    PortableInterceptor::ClientRequestInterceptor_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-PortableInterceptor::ClientRequestInterceptor_ptr
-tao_PortableInterceptor_ClientRequestInterceptor_nil (
-    void
-  )
-{
-  return PortableInterceptor::ClientRequestInterceptor::_nil ();
-}
-
-PortableInterceptor::ClientRequestInterceptor_ptr
-tao_PortableInterceptor_ClientRequestInterceptor_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return PortableInterceptor::ClientRequestInterceptor::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_PortableInterceptor_ClientRequestInterceptor_upcast (
-    void *src
-  )
-{
-  PortableInterceptor::ClientRequestInterceptor **tmp =
-    ACE_static_cast (PortableInterceptor::ClientRequestInterceptor **, src);
-  return *tmp;
-}
 
 // *************************************************************
 // Operations for class PortableInterceptor::ClientRequestInterceptor_var
@@ -2057,13 +1791,13 @@
 }
 
 ::PortableInterceptor::ClientRequestInterceptor_ptr
-PortableInterceptor::ClientRequestInterceptor_var::duplicate (ClientRequestInterceptor_ptr p)
+PortableInterceptor::ClientRequestInterceptor_var::duplicate (PortableInterceptor::ClientRequestInterceptor_ptr p)
 {
   return ::PortableInterceptor::ClientRequestInterceptor::_duplicate (p);
 }
 
 void
-PortableInterceptor::ClientRequestInterceptor_var::release (ClientRequestInterceptor_ptr p)
+PortableInterceptor::ClientRequestInterceptor_var::release (PortableInterceptor::ClientRequestInterceptor_ptr p)
 {
   CORBA::release (p);
 }
@@ -2086,11 +1820,10 @@
 CORBA::Object *
 PortableInterceptor::ClientRequestInterceptor_var::upcast (void *src)
 {
-  ClientRequestInterceptor **tmp =
-    ACE_static_cast (ClientRequestInterceptor **, src);
+  PortableInterceptor::ClientRequestInterceptor **tmp =
+    ACE_static_cast (PortableInterceptor::ClientRequestInterceptor **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class PortableInterceptor::ClientRequestInterceptor_out
 // *************************************************************
@@ -2231,48 +1964,6 @@
   return "IDL:PortableInterceptor/ClientRequestInterceptor:1.0";
 }
 
-PortableInterceptor::ServerRequestInterceptor_ptr
-tao_PortableInterceptor_ServerRequestInterceptor_duplicate (
-    PortableInterceptor::ServerRequestInterceptor_ptr p
-  )
-{
-  return PortableInterceptor::ServerRequestInterceptor::_duplicate (p);
-}
-
-void
-tao_PortableInterceptor_ServerRequestInterceptor_release (
-    PortableInterceptor::ServerRequestInterceptor_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-PortableInterceptor::ServerRequestInterceptor_ptr
-tao_PortableInterceptor_ServerRequestInterceptor_nil (
-    void
-  )
-{
-  return PortableInterceptor::ServerRequestInterceptor::_nil ();
-}
-
-PortableInterceptor::ServerRequestInterceptor_ptr
-tao_PortableInterceptor_ServerRequestInterceptor_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return PortableInterceptor::ServerRequestInterceptor::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_PortableInterceptor_ServerRequestInterceptor_upcast (
-    void *src
-  )
-{
-  PortableInterceptor::ServerRequestInterceptor **tmp =
-    ACE_static_cast (PortableInterceptor::ServerRequestInterceptor **, src);
-  return *tmp;
-}
 
 // *************************************************************
 // Operations for class PortableInterceptor::ServerRequestInterceptor_var
@@ -2363,13 +2054,13 @@
 }
 
 ::PortableInterceptor::ServerRequestInterceptor_ptr
-PortableInterceptor::ServerRequestInterceptor_var::duplicate (ServerRequestInterceptor_ptr p)
+PortableInterceptor::ServerRequestInterceptor_var::duplicate (PortableInterceptor::ServerRequestInterceptor_ptr p)
 {
   return ::PortableInterceptor::ServerRequestInterceptor::_duplicate (p);
 }
 
 void
-PortableInterceptor::ServerRequestInterceptor_var::release (ServerRequestInterceptor_ptr p)
+PortableInterceptor::ServerRequestInterceptor_var::release (PortableInterceptor::ServerRequestInterceptor_ptr p)
 {
   CORBA::release (p);
 }
@@ -2392,11 +2083,10 @@
 CORBA::Object *
 PortableInterceptor::ServerRequestInterceptor_var::upcast (void *src)
 {
-  ServerRequestInterceptor **tmp =
-    ACE_static_cast (ServerRequestInterceptor **, src);
+  PortableInterceptor::ServerRequestInterceptor **tmp =
+    ACE_static_cast (PortableInterceptor::ServerRequestInterceptor **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class PortableInterceptor::ServerRequestInterceptor_out
 // *************************************************************
@@ -2537,48 +2227,6 @@
   return "IDL:PortableInterceptor/ServerRequestInterceptor:1.0";
 }
 
-PortableInterceptor::IORInfo_ptr
-tao_PortableInterceptor_IORInfo_duplicate (
-    PortableInterceptor::IORInfo_ptr p
-  )
-{
-  return PortableInterceptor::IORInfo::_duplicate (p);
-}
-
-void
-tao_PortableInterceptor_IORInfo_release (
-    PortableInterceptor::IORInfo_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-PortableInterceptor::IORInfo_ptr
-tao_PortableInterceptor_IORInfo_nil (
-    void
-  )
-{
-  return PortableInterceptor::IORInfo::_nil ();
-}
-
-PortableInterceptor::IORInfo_ptr
-tao_PortableInterceptor_IORInfo_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return PortableInterceptor::IORInfo::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_PortableInterceptor_IORInfo_upcast (
-    void *src
-  )
-{
-  PortableInterceptor::IORInfo **tmp =
-    ACE_static_cast (PortableInterceptor::IORInfo **, src);
-  return *tmp;
-}
 
 // *************************************************************
 // Operations for class PortableInterceptor::IORInfo_var
@@ -2669,13 +2317,13 @@
 }
 
 ::PortableInterceptor::IORInfo_ptr
-PortableInterceptor::IORInfo_var::duplicate (IORInfo_ptr p)
+PortableInterceptor::IORInfo_var::duplicate (PortableInterceptor::IORInfo_ptr p)
 {
   return ::PortableInterceptor::IORInfo::_duplicate (p);
 }
 
 void
-PortableInterceptor::IORInfo_var::release (IORInfo_ptr p)
+PortableInterceptor::IORInfo_var::release (PortableInterceptor::IORInfo_ptr p)
 {
   CORBA::release (p);
 }
@@ -2698,11 +2346,10 @@
 CORBA::Object *
 PortableInterceptor::IORInfo_var::upcast (void *src)
 {
-  IORInfo **tmp =
-    ACE_static_cast (IORInfo **, src);
+  PortableInterceptor::IORInfo **tmp =
+    ACE_static_cast (PortableInterceptor::IORInfo **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class PortableInterceptor::IORInfo_out
 // *************************************************************
@@ -2831,48 +2478,6 @@
   return "IDL:PortableInterceptor/IORInfo:1.0";
 }
 
-PortableInterceptor::IORInterceptor_ptr
-tao_PortableInterceptor_IORInterceptor_duplicate (
-    PortableInterceptor::IORInterceptor_ptr p
-  )
-{
-  return PortableInterceptor::IORInterceptor::_duplicate (p);
-}
-
-void
-tao_PortableInterceptor_IORInterceptor_release (
-    PortableInterceptor::IORInterceptor_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-PortableInterceptor::IORInterceptor_ptr
-tao_PortableInterceptor_IORInterceptor_nil (
-    void
-  )
-{
-  return PortableInterceptor::IORInterceptor::_nil ();
-}
-
-PortableInterceptor::IORInterceptor_ptr
-tao_PortableInterceptor_IORInterceptor_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return PortableInterceptor::IORInterceptor::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_PortableInterceptor_IORInterceptor_upcast (
-    void *src
-  )
-{
-  PortableInterceptor::IORInterceptor **tmp =
-    ACE_static_cast (PortableInterceptor::IORInterceptor **, src);
-  return *tmp;
-}
 
 // *************************************************************
 // Operations for class PortableInterceptor::IORInterceptor_var
@@ -2963,13 +2568,13 @@
 }
 
 ::PortableInterceptor::IORInterceptor_ptr
-PortableInterceptor::IORInterceptor_var::duplicate (IORInterceptor_ptr p)
+PortableInterceptor::IORInterceptor_var::duplicate (PortableInterceptor::IORInterceptor_ptr p)
 {
   return ::PortableInterceptor::IORInterceptor::_duplicate (p);
 }
 
 void
-PortableInterceptor::IORInterceptor_var::release (IORInterceptor_ptr p)
+PortableInterceptor::IORInterceptor_var::release (PortableInterceptor::IORInterceptor_ptr p)
 {
   CORBA::release (p);
 }
@@ -2992,11 +2597,10 @@
 CORBA::Object *
 PortableInterceptor::IORInterceptor_var::upcast (void *src)
 {
-  IORInterceptor **tmp =
-    ACE_static_cast (IORInterceptor **, src);
+  PortableInterceptor::IORInterceptor **tmp =
+    ACE_static_cast (PortableInterceptor::IORInterceptor **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class PortableInterceptor::IORInterceptor_out
 // *************************************************************
@@ -3137,48 +2741,6 @@
   return "IDL:PortableInterceptor/IORInterceptor:1.0";
 }
 
-PortableInterceptor::PolicyFactory_ptr
-tao_PortableInterceptor_PolicyFactory_duplicate (
-    PortableInterceptor::PolicyFactory_ptr p
-  )
-{
-  return PortableInterceptor::PolicyFactory::_duplicate (p);
-}
-
-void
-tao_PortableInterceptor_PolicyFactory_release (
-    PortableInterceptor::PolicyFactory_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-PortableInterceptor::PolicyFactory_ptr
-tao_PortableInterceptor_PolicyFactory_nil (
-    void
-  )
-{
-  return PortableInterceptor::PolicyFactory::_nil ();
-}
-
-PortableInterceptor::PolicyFactory_ptr
-tao_PortableInterceptor_PolicyFactory_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return PortableInterceptor::PolicyFactory::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_PortableInterceptor_PolicyFactory_upcast (
-    void *src
-  )
-{
-  PortableInterceptor::PolicyFactory **tmp =
-    ACE_static_cast (PortableInterceptor::PolicyFactory **, src);
-  return *tmp;
-}
 
 // *************************************************************
 // Operations for class PortableInterceptor::PolicyFactory_var
@@ -3269,13 +2831,13 @@
 }
 
 ::PortableInterceptor::PolicyFactory_ptr
-PortableInterceptor::PolicyFactory_var::duplicate (PolicyFactory_ptr p)
+PortableInterceptor::PolicyFactory_var::duplicate (PortableInterceptor::PolicyFactory_ptr p)
 {
   return ::PortableInterceptor::PolicyFactory::_duplicate (p);
 }
 
 void
-PortableInterceptor::PolicyFactory_var::release (PolicyFactory_ptr p)
+PortableInterceptor::PolicyFactory_var::release (PortableInterceptor::PolicyFactory_ptr p)
 {
   CORBA::release (p);
 }
@@ -3298,11 +2860,10 @@
 CORBA::Object *
 PortableInterceptor::PolicyFactory_var::upcast (void *src)
 {
-  PolicyFactory **tmp =
-    ACE_static_cast (PolicyFactory **, src);
+  PortableInterceptor::PolicyFactory **tmp =
+    ACE_static_cast (PortableInterceptor::PolicyFactory **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class PortableInterceptor::PolicyFactory_out
 // *************************************************************
@@ -3431,48 +2992,6 @@
   return "IDL:PortableInterceptor/PolicyFactory:1.0";
 }
 
-PortableInterceptor::ORBInitInfo_ptr
-tao_PortableInterceptor_ORBInitInfo_duplicate (
-    PortableInterceptor::ORBInitInfo_ptr p
-  )
-{
-  return PortableInterceptor::ORBInitInfo::_duplicate (p);
-}
-
-void
-tao_PortableInterceptor_ORBInitInfo_release (
-    PortableInterceptor::ORBInitInfo_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-PortableInterceptor::ORBInitInfo_ptr
-tao_PortableInterceptor_ORBInitInfo_nil (
-    void
-  )
-{
-  return PortableInterceptor::ORBInitInfo::_nil ();
-}
-
-PortableInterceptor::ORBInitInfo_ptr
-tao_PortableInterceptor_ORBInitInfo_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return PortableInterceptor::ORBInitInfo::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_PortableInterceptor_ORBInitInfo_upcast (
-    void *src
-  )
-{
-  PortableInterceptor::ORBInitInfo **tmp =
-    ACE_static_cast (PortableInterceptor::ORBInitInfo **, src);
-  return *tmp;
-}
 
 // *************************************************************
 // Operations for class PortableInterceptor::ORBInitInfo_var
@@ -3563,13 +3082,13 @@
 }
 
 ::PortableInterceptor::ORBInitInfo_ptr
-PortableInterceptor::ORBInitInfo_var::duplicate (ORBInitInfo_ptr p)
+PortableInterceptor::ORBInitInfo_var::duplicate (PortableInterceptor::ORBInitInfo_ptr p)
 {
   return ::PortableInterceptor::ORBInitInfo::_duplicate (p);
 }
 
 void
-PortableInterceptor::ORBInitInfo_var::release (ORBInitInfo_ptr p)
+PortableInterceptor::ORBInitInfo_var::release (PortableInterceptor::ORBInitInfo_ptr p)
 {
   CORBA::release (p);
 }
@@ -3592,11 +3111,10 @@
 CORBA::Object *
 PortableInterceptor::ORBInitInfo_var::upcast (void *src)
 {
-  ORBInitInfo **tmp =
-    ACE_static_cast (ORBInitInfo **, src);
+  PortableInterceptor::ORBInitInfo **tmp =
+    ACE_static_cast (PortableInterceptor::ORBInitInfo **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class PortableInterceptor::ORBInitInfo_out
 // *************************************************************
@@ -3871,48 +3389,6 @@
   return retval;
 }
 
-PortableInterceptor::ORBInitializer_ptr
-tao_PortableInterceptor_ORBInitializer_duplicate (
-    PortableInterceptor::ORBInitializer_ptr p
-  )
-{
-  return PortableInterceptor::ORBInitializer::_duplicate (p);
-}
-
-void
-tao_PortableInterceptor_ORBInitializer_release (
-    PortableInterceptor::ORBInitializer_ptr p
-  )
-{
-  CORBA::release (p);
-}
-
-PortableInterceptor::ORBInitializer_ptr
-tao_PortableInterceptor_ORBInitializer_nil (
-    void
-  )
-{
-  return PortableInterceptor::ORBInitializer::_nil ();
-}
-
-PortableInterceptor::ORBInitializer_ptr
-tao_PortableInterceptor_ORBInitializer_narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return PortableInterceptor::ORBInitializer::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-tao_PortableInterceptor_ORBInitializer_upcast (
-    void *src
-  )
-{
-  PortableInterceptor::ORBInitializer **tmp =
-    ACE_static_cast (PortableInterceptor::ORBInitializer **, src);
-  return *tmp;
-}
 
 // *************************************************************
 // Operations for class PortableInterceptor::ORBInitializer_var
@@ -4003,13 +3479,13 @@
 }
 
 ::PortableInterceptor::ORBInitializer_ptr
-PortableInterceptor::ORBInitializer_var::duplicate (ORBInitializer_ptr p)
+PortableInterceptor::ORBInitializer_var::duplicate (PortableInterceptor::ORBInitializer_ptr p)
 {
   return ::PortableInterceptor::ORBInitializer::_duplicate (p);
 }
 
 void
-PortableInterceptor::ORBInitializer_var::release (ORBInitializer_ptr p)
+PortableInterceptor::ORBInitializer_var::release (PortableInterceptor::ORBInitializer_ptr p)
 {
   CORBA::release (p);
 }
@@ -4032,11 +3508,10 @@
 CORBA::Object *
 PortableInterceptor::ORBInitializer_var::upcast (void *src)
 {
-  ORBInitializer **tmp =
-    ACE_static_cast (ORBInitializer **, src);
+  PortableInterceptor::ORBInitializer **tmp =
+    ACE_static_cast (PortableInterceptor::ORBInitializer **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class PortableInterceptor::ORBInitializer_out
 // *************************************************************
@@ -4211,12 +3686,14 @@
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (PortableInterceptor::_tc_ForwardRequest, ACE_TRY_ENV);
+    CORBA::Boolean result =
+      type->equivalent (PortableInterceptor::_tc_ForwardRequest, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
-      return 0; // not equivalent
+      {
+        return 0;
+      }
     
     if (_tao_any.any_owns_data ())
     {
@@ -4301,12 +3778,14 @@
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (PortableInterceptor::_tc_InvalidSlot, ACE_TRY_ENV);
+    CORBA::Boolean result =
+      type->equivalent (PortableInterceptor::_tc_InvalidSlot, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
-      return 0; // not equivalent
+      {
+        return 0;
+      }
     
     if (_tao_any.any_owns_data ())
     {
@@ -4428,4 +3907,3 @@
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
   #  pragma instantiate TAO_Object_Manager<PortableInterceptor::ORBInitializer,PortableInterceptor::ORBInitializer_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
-
