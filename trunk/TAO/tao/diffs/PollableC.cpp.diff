--- orig/PollableC.cpp	Fri Apr 28 12:20:09 2000
+++ PollableC.cpp	Fri Apr 28 12:12:21 2000
@@ -9,10 +9,19 @@
 
 #include "PollableC.h"
 
+#if (TAO_HAS_AMI_POLLER == 1)
+
+#include "tao/POA_CORBA.h"
+#include "tao/Stub.h"
+#include "tao/Invocation.h"
+#include "tao/Any.h"
+
 #if !defined (__ACE_INLINE__)
 #include "PollableC.i"
 #endif /* !defined INLINE */
 
+ACE_RCSID(tao, PollableC, "$Id$")
+
 CORBA_Pollable_ptr CORBA_Pollable::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
@@ -43,7 +52,7 @@
         );
 }
 
-CORBA_Pollable_ptr 
+CORBA_Pollable_ptr
 CORBA_Pollable::_duplicate (CORBA_Pollable_ptr obj)
 {
   if (!CORBA::is_nil (obj))
@@ -61,7 +70,7 @@
   else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
     retv = ACE_reinterpret_cast (void *,
       ACE_static_cast (CORBA::Object_ptr, this));
-    
+
   if (retv)
     this->_add_ref ();
   return retv;
@@ -69,7 +78,7 @@
 
 const char* CORBA_Pollable::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_Pollable:1.0";
+  return "IDL:omg.org/CORBA/Pollable:1.0";
 }
 
 CORBA_DIIPollable_ptr CORBA_DIIPollable::_narrow (
@@ -102,7 +111,7 @@
         );
 }
 
-CORBA_DIIPollable_ptr 
+CORBA_DIIPollable_ptr
 CORBA_DIIPollable::_duplicate (CORBA_DIIPollable_ptr obj)
 {
   if (!CORBA::is_nil (obj))
@@ -132,7 +141,7 @@
   else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
     retv = ACE_reinterpret_cast (void *,
       ACE_static_cast (CORBA::Object_ptr, this));
-    
+
   if (retv)
     this->_add_ref ();
   return retv;
@@ -140,7 +149,7 @@
 
 const char* CORBA_DIIPollable::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_DIIPollable:1.0";
+  return "IDL:omg.org/CORBA/DIIPollable:1.0";
 }
 
 CORBA_PollableSet_ptr CORBA_PollableSet::_narrow (
@@ -173,7 +182,7 @@
         );
 }
 
-CORBA_PollableSet_ptr 
+CORBA_PollableSet_ptr
 CORBA_PollableSet::_duplicate (CORBA_PollableSet_ptr obj)
 {
   if (!CORBA::is_nil (obj))
@@ -210,7 +219,7 @@
 CORBA_PollableSet::NoPossiblePollable *
 CORBA_PollableSet::NoPossiblePollable::_narrow (CORBA::Exception *exc)
 {
-  if (!ACE_OS::strcmp ("IDL:omg.org/CORBA_PollableSet/NoPossiblePollable:1.0", exc->_id ())) // same type
+  if (!ACE_OS::strcmp ("IDL:omg.org/CORBA/PollableSet/NoPossiblePollable:1.0", exc->_id ())) // same type
     return ACE_dynamic_cast (NoPossiblePollable *, exc);
   else
     return 0;
@@ -275,7 +284,7 @@
 CORBA_PollableSet::UnknownPollable *
 CORBA_PollableSet::UnknownPollable::_narrow (CORBA::Exception *exc)
 {
-  if (!ACE_OS::strcmp ("IDL:omg.org/CORBA_PollableSet/UnknownPollable:1.0", exc->_id ())) // same type
+  if (!ACE_OS::strcmp ("IDL:omg.org/CORBA/PollableSet/UnknownPollable:1.0", exc->_id ())) // same type
     return ACE_dynamic_cast (UnknownPollable *, exc);
   else
     return 0;
@@ -321,7 +330,7 @@
   else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
     retv = ACE_reinterpret_cast (void *,
       ACE_static_cast (CORBA::Object_ptr, this));
-    
+
   if (retv)
     this->_add_ref ();
   return retv;
@@ -329,6 +338,7 @@
 
 const char* CORBA_PollableSet::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_PollableSet:1.0";
+  return "IDL:omg.org/CORBA/PollableSet:1.0";
 }
 
+#endif /* TAO_HAS_AMI_POLLER == 1 */
