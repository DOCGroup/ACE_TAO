--- orig/DomainS.h	Mon Apr 30 22:11:10 2001
+++ DomainS.h	Mon Apr 30 22:01:45 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -19,13 +19,13 @@
 // Information about TAO is available at:
 //     http://www.cs.wustl.edu/~schmidt/TAO.html
 
-#ifndef _TAO_IDL_DOMAINS_H_
-#define _TAO_IDL_DOMAINS_H_
+#ifndef _TAO_IDL_ORIG_DOMAINS_H_
+#define _TAO_IDL_ORIG_DOMAINS_H_
 
 #include "ace/pre.h"
-#include "../../orig/PolicyS.h"
-#include "DomainC.h"
-
+#include "domain_export.h"
+#include "tao/DomainC.h"
+#include "tao/PortableServer/PolicyS.h"
 
 #if !defined (ACE_LACKS_PRAGMA_ONCE)
 # pragma once
@@ -47,15 +47,11 @@
 #pragma option push -w-rvl -w-rch -w-ccc -w-inl
 #endif /* __BORLANDC__ */
 
-TAO_NAMESPACE  POA_CORBA
-{
-}
-TAO_NAMESPACE_CLOSE // module CORBA
-
 class POA_CORBA_DomainManager;
 typedef POA_CORBA_DomainManager *POA_CORBA_DomainManager_ptr;
 // Forward Classes Declaration
 class _TAO_CORBA_DomainManager_ThruPOA_Proxy_Impl;
+class _TAO_CORBA_DomainManager_Direct_Proxy_Impl;
 class _TAO_CORBA_DomainManager_Strategized_Proxy_Broker;
 
 class TAO_Domain_Export POA_CORBA_DomainManager :  public virtual PortableServer::ServantBase
@@ -116,7 +112,7 @@
 
   virtual const char* _interface_repository_id (void) const;
 
-  virtual CORBA_Policy_ptr get_domain_policy (
+  virtual CORBA::Policy_ptr get_domain_policy (
       CORBA::PolicyType policy_type,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -154,6 +150,7 @@
   );
 
 private:
+
   // Helper methods that takes care to create the proxy
   // as soon as their use is necessary.
   void create_proxy (
@@ -161,6 +158,8 @@
     CORBA::Environment &ACE_TRY_ENV
   );
   
+private:
+
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
@@ -195,7 +194,7 @@
   
   virtual ~_TAO_CORBA_DomainManager_ThruPOA_Proxy_Impl (void) { }
   
-  virtual CORBA_Policy_ptr get_domain_policy (
+    virtual CORBA::Policy_ptr get_domain_policy (
       CORBA_Object *_collocated_tao_target_,
       CORBA::PolicyType policy_type,
       CORBA::Environment &ACE_TRY_ENV
@@ -204,18 +203,48 @@
       CORBA::SystemException
     ));
 
-
 };
 
+
 //
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
 
+///////////////////////////////////////////////////////////////////////
+//                    Direct  Impl. Declaration
+//
+
+class TAO_Domain_Export _TAO_CORBA_DomainManager_Direct_Proxy_Impl :
+  public virtual _TAO_CORBA_DomainManager_Proxy_Impl,
+  public virtual TAO_Direct_Object_Proxy_Impl
+{
+public:
+  _TAO_CORBA_DomainManager_Direct_Proxy_Impl (void);
+
+  virtual ~_TAO_CORBA_DomainManager_Direct_Proxy_Impl (void) { }
+
+    virtual CORBA::Policy_ptr get_domain_policy (
+      CORBA_Object *_collocated_tao_target_,
+      CORBA::PolicyType policy_type,
+      CORBA::Environment &ACE_TRY_ENV
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException
+    ));
+
+};
+
+
+//
+//                Direct  Proxy Impl. Declaration
+///////////////////////////////////////////////////////////////////////
+
 class POA_CORBA_ConstructionPolicy;
 typedef POA_CORBA_ConstructionPolicy *POA_CORBA_ConstructionPolicy_ptr;
 // Forward Classes Declaration
 class _TAO_CORBA_ConstructionPolicy_ThruPOA_Proxy_Impl;
+class _TAO_CORBA_ConstructionPolicy_Direct_Proxy_Impl;
 class _TAO_CORBA_ConstructionPolicy_Strategized_Proxy_Broker;
 
 class TAO_Domain_Export POA_CORBA_ConstructionPolicy : public virtual POA_CORBA_Policy
@@ -277,7 +306,7 @@
   virtual const char* _interface_repository_id (void) const;
 
   virtual void make_domain_manager (
-      CORBA_InterfaceDef_ptr object_type,
+      CORBA::InterfaceDef_ptr object_type,
       CORBA::Boolean constr_policy,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -339,6 +368,7 @@
   );
 
 private:
+
   // Helper methods that takes care to create the proxy
   // as soon as their use is necessary.
   void create_proxy (
@@ -346,6 +376,8 @@
     CORBA::Environment &ACE_TRY_ENV
   );
   
+private:
+
   // Caches the proxy implementations. The proxy implementation
   // are totally stateless, and those can be shared by all the
   // instances of a given IDL interface type.
@@ -374,7 +406,7 @@
 class TAO_Domain_Export _TAO_CORBA_ConstructionPolicy_ThruPOA_Proxy_Impl : 
   public virtual ::_TAO_CORBA_ConstructionPolicy_Proxy_Impl,
   public virtual TAO_ThruPOA_Object_Proxy_Impl,
-  public virtual ::_TAO_CORBA_Policy_ThruPOA_Proxy_Impl
+  public virtual _TAO_CORBA_Policy_ThruPOA_Proxy_Impl
   
 {
 public:
@@ -384,7 +416,7 @@
   
   virtual void make_domain_manager (
       CORBA_Object *_collocated_tao_target_,
-      CORBA_InterfaceDef_ptr object_type,
+      CORBA::InterfaceDef_ptr object_type,
       CORBA::Boolean constr_policy,
       CORBA::Environment &ACE_TRY_ENV
     )
@@ -392,13 +424,45 @@
       CORBA::SystemException
     ));
 
-
 };
 
+
 //
 //                ThruPOA  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
+
+///////////////////////////////////////////////////////////////////////
+//                    Direct  Impl. Declaration
+//
+
+class TAO_Domain_Export _TAO_CORBA_ConstructionPolicy_Direct_Proxy_Impl :
+  public virtual _TAO_CORBA_ConstructionPolicy_Proxy_Impl,
+  public virtual TAO_Direct_Object_Proxy_Impl,
+  public virtual _TAO_CORBA_Policy_Direct_Proxy_Impl
+
+{
+public:
+  _TAO_CORBA_ConstructionPolicy_Direct_Proxy_Impl (void);
+
+  virtual ~_TAO_CORBA_ConstructionPolicy_Direct_Proxy_Impl (void) { }
+
+    virtual void make_domain_manager (
+      CORBA_Object *_collocated_tao_target_,
+      CORBA::InterfaceDef_ptr object_type,
+      CORBA::Boolean constr_policy,
+      CORBA::Environment &ACE_TRY_ENV
+    )
+    ACE_THROW_SPEC ((
+      CORBA::SystemException
+    ));
+
+};
+
+
+//
+//                Direct  Proxy Impl. Declaration
+///////////////////////////////////////////////////////////////////////
 
 #include "DomainS_T.h"
 
