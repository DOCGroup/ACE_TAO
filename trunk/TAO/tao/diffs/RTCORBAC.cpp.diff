--- orig/RTCORBAC.cpp	Tue Apr 17 23:11:09 2001
+++ RTCORBAC.cpp	Tue Apr 17 23:10:41 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -23,7 +23,12 @@
 
 #include "tao/Stub.h"
 #include "tao/Invocation.h"
-#include "tao/ClientRequestInfo.h"
+
+#if (TAO_HAS_RT_CORBA == 1)
+
+#include "tao/TAOS.h"
+#include "tao/Typecode.h"
+
 #if TAO_HAS_INTERCEPTORS == 1
 #include "tao/RequestInfo_Util.h"
 #endif  /* TAO_HAS_INTERCEPTORS == 1 */
@@ -475,6 +480,7 @@
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_PriorityModel, &_tc_TAO_tc_RTCORBA_PriorityModel)
 TAO_NAMESPACE_END
 
+
 // *************************************************************
 // Operations for class RTCORBA::PriorityModelPolicy_var
 // *************************************************************
@@ -597,7 +603,6 @@
     ACE_static_cast (PriorityModelPolicy **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class RTCORBA::PriorityModelPolicy_out
 // *************************************************************
@@ -742,6 +747,7 @@
 TAO_NAMESPACE_BEGIN (RTCORBA)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, THREADPOOL_POLICY_TYPE, 41U)
 TAO_NAMESPACE_END
+
 // *************************************************************
 // Operations for class RTCORBA::ThreadpoolPolicy_var
 // *************************************************************
@@ -864,7 +870,6 @@
     ACE_static_cast (ThreadpoolPolicy **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class RTCORBA::ThreadpoolPolicy_out
 // *************************************************************
@@ -1005,6 +1010,7 @@
   return "IDL:omg.org/RTCORBA/ThreadpoolPolicy:1.0";
 }
 
+
 // *************************************************************
 // Operations for class RTCORBA::ProtocolProperties_var
 // *************************************************************
@@ -1127,7 +1133,6 @@
     ACE_static_cast (ProtocolProperties **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class RTCORBA::ProtocolProperties_out
 // *************************************************************
@@ -1356,6 +1361,7 @@
 TAO_NAMESPACE_BEGIN (RTCORBA)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, SERVER_PROTOCOL_POLICY_TYPE, 42U)
 TAO_NAMESPACE_END
+
 // *************************************************************
 // Operations for class RTCORBA::ServerProtocolPolicy_var
 // *************************************************************
@@ -1478,7 +1484,6 @@
     ACE_static_cast (ServerProtocolPolicy **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class RTCORBA::ServerProtocolPolicy_out
 // *************************************************************
@@ -1623,6 +1628,7 @@
 TAO_NAMESPACE_BEGIN (RTCORBA)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, CLIENT_PROTOCOL_POLICY_TYPE, 43U)
 TAO_NAMESPACE_END
+
 // *************************************************************
 // Operations for class RTCORBA::ClientProtocolPolicy_var
 // *************************************************************
@@ -1745,7 +1751,6 @@
     ACE_static_cast (ClientProtocolPolicy **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class RTCORBA::ClientProtocolPolicy_out
 // *************************************************************
@@ -1890,6 +1895,7 @@
 TAO_NAMESPACE_BEGIN (RTCORBA)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, PRIVATE_CONNECTION_POLICY_TYPE, 44U)
 TAO_NAMESPACE_END
+
 // *************************************************************
 // Operations for class RTCORBA::PrivateConnectionPolicy_var
 // *************************************************************
@@ -2012,7 +2018,6 @@
     ACE_static_cast (PrivateConnectionPolicy **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class RTCORBA::PrivateConnectionPolicy_out
 // *************************************************************
@@ -2275,7 +2280,6 @@
     ACE_static_cast (TCPProtocolProperties **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class RTCORBA::TCPProtocolProperties_out
 // *************************************************************
@@ -2336,6 +2340,21 @@
 }
 
 
+//////////////////////////////////////////////////////
+// CDR Encoding Support
+
+CORBA::Boolean
+RTCORBA::ProtocolProperties::_tao_encode (TAO_OutputCDR &)
+{
+  return 1;
+}
+
+CORBA::Boolean
+RTCORBA::ProtocolProperties::_tao_decode (TAO_InputCDR &)
+{
+  return 1;
+}
+
 // default constructor
 RTCORBA::TCPProtocolProperties::TCPProtocolProperties ()
 {
@@ -2416,6 +2435,7 @@
   return "IDL:omg.org/RTCORBA/TCPProtocolProperties:1.0";
 }
 
+
 // *************************************************************
 // Operations for class RTCORBA::GIOPProtocolProperties_var
 // *************************************************************
@@ -2538,7 +2558,6 @@
     ACE_static_cast (GIOPProtocolProperties **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class RTCORBA::GIOPProtocolProperties_out
 // *************************************************************
@@ -2679,6 +2698,7 @@
   return "IDL:omg.org/RTCORBA/GIOPProtocolProperties:1.0";
 }
 
+
 // *************************************************************
 // Operations for class RTCORBA::UnixDomainProtocolProperties_var
 // *************************************************************
@@ -2801,7 +2821,6 @@
     ACE_static_cast (UnixDomainProtocolProperties **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class RTCORBA::UnixDomainProtocolProperties_out
 // *************************************************************
@@ -2942,6 +2961,7 @@
   return "IDL:omg.org/RTCORBA/UnixDomainProtocolProperties:1.0";
 }
 
+
 // *************************************************************
 // Operations for class RTCORBA::SharedMemoryProtocolProperties_var
 // *************************************************************
@@ -3064,7 +3084,6 @@
     ACE_static_cast (SharedMemoryProtocolProperties **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class RTCORBA::SharedMemoryProtocolProperties_out
 // *************************************************************
@@ -3496,6 +3515,7 @@
 TAO_NAMESPACE_BEGIN (RTCORBA)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, PRIORITY_BANDED_CONNECTION_POLICY_TYPE, 45U)
 TAO_NAMESPACE_END
+
 // *************************************************************
 // Operations for class RTCORBA::PriorityBandedConnectionPolicy_var
 // *************************************************************
@@ -3618,7 +3638,6 @@
     ACE_static_cast (PriorityBandedConnectionPolicy **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class RTCORBA::PriorityBandedConnectionPolicy_out
 // *************************************************************
@@ -3759,6 +3778,7 @@
   return "IDL:omg.org/RTCORBA/PriorityBandedConnectionPolicy:1.0";
 }
 
+
 // *************************************************************
 // Operations for class RTCORBA::Current_var
 // *************************************************************
@@ -3881,7 +3901,6 @@
     ACE_static_cast (Current **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class RTCORBA::Current_out
 // *************************************************************
@@ -4022,6 +4041,7 @@
   return "IDL:omg.org/RTCORBA/Current:1.0";
 }
 
+
 // *************************************************************
 // Operations for class RTCORBA::Mutex_var
 // *************************************************************
@@ -4144,7 +4164,6 @@
     ACE_static_cast (Mutex **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class RTCORBA::Mutex_out
 // *************************************************************
@@ -4273,6 +4292,7 @@
   return "IDL:omg.org/RTCORBA/Mutex:1.0";
 }
 
+
 // *************************************************************
 // Operations for class RTCORBA::RTORB_var
 // *************************************************************
@@ -4395,7 +4415,6 @@
     ACE_static_cast (RTORB **, src);
   return *tmp;
 }
-
 // *************************************************************
 // Inline operations for class RTCORBA::RTORB_out
 // *************************************************************
@@ -4619,7 +4638,7 @@
 
 // Narrow.
 RTCORBA::RTORB::InvalidThreadpool *
-RTCORBA::RTORB::InvalidThreadpool::_downcast (CORBA::Exception *exc)
+RTCORBA::RTORB::InvalidThreadpool::_narrow (CORBA::Exception *exc)
 {
   if (!ACE_OS::strcmp ("IDL:omg.org/RTCORBA/RTORB/InvalidThreadpool:1.0", exc->_id ()))
     {
@@ -5230,3 +5249,4 @@
   return 0; // error
 }
 
+#endif /* TAO_HAS_RT_CORBA == 1 */
