--- orig/TAOC.i	Tue Jun 12 17:41:13 2001
+++ TAOC.i	Tue Jun 12 13:58:15 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$ TAOC.i,v 1.8 2001/01/17 02:59:45 parsons Exp $ */
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -20,6 +20,12 @@
 //     http://www.cs.wustl.edu/~schmidt/TAO.html
 
 // *************************************************************
+// Inline operations for class TAO::PrioritySpecification_var
+// *************************************************************
+
+#if (TAO_HAS_BUFFERING_CONSTRAINT_POLICY == 1)
+
+// *************************************************************
 // Inline operations for class TAO::BufferingConstraint_var
 // *************************************************************
 
@@ -75,12 +81,12 @@
         }
       else
         {
-          BufferingConstraint *deep_copy =
-            new BufferingConstraint (*p.ptr_);
+          TAO::BufferingConstraint *deep_copy =
+            new TAO::BufferingConstraint (*p.ptr_);
           
           if (deep_copy != 0)
             {
-              BufferingConstraint *tmp = deep_copy;
+              TAO::BufferingConstraint *tmp = deep_copy;
               deep_copy = this->ptr_;
               this->ptr_ = tmp;
               delete deep_copy;
@@ -164,10 +170,52 @@
   return this->ptr_;
 }
 
-
 #if !defined (_TAO_BUFFERINGCONSTRAINTPOLICY___CI_)
 #define _TAO_BUFFERINGCONSTRAINTPOLICY___CI_
 
+ACE_INLINE TAO::BufferingConstraintPolicy_ptr
+tao_TAO_BufferingConstraintPolicy_duplicate (
+    TAO::BufferingConstraintPolicy_ptr p
+  )
+{
+  return TAO::BufferingConstraintPolicy::_duplicate (p);
+}
+
+ACE_INLINE void
+tao_TAO_BufferingConstraintPolicy_release (
+    TAO::BufferingConstraintPolicy_ptr p
+  )
+{
+  CORBA::release (p);
+}
+
+ACE_INLINE TAO::BufferingConstraintPolicy_ptr
+tao_TAO_BufferingConstraintPolicy_nil (
+    void
+  )
+{
+  return TAO::BufferingConstraintPolicy::_nil ();
+}
+
+ACE_INLINE TAO::BufferingConstraintPolicy_ptr
+tao_TAO_BufferingConstraintPolicy_narrow (
+    CORBA::Object *p,
+    CORBA::Environment &ACE_TRY_ENV
+  )
+{
+  return TAO::BufferingConstraintPolicy::_narrow (p, ACE_TRY_ENV);
+}
+
+ACE_INLINE CORBA::Object *
+tao_TAO_BufferingConstraintPolicy_upcast (
+    void *src
+  )
+{
+  TAO::BufferingConstraintPolicy **tmp =
+    ACE_static_cast (TAO::BufferingConstraintPolicy **, src);
+  return *tmp;
+}
+
 
 #endif /* end #if !defined */
 
@@ -199,3 +247,4 @@
   
 }
 
+#endif /* TAO_HAS_BUFFERING_CONSTRAINT_POLICY == 1 */
