--- orig/TAOC.i	Tue Apr 17 00:03:03 2001
+++ TAOC.i	Tue Apr 17 00:13:28 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$ TAOC.i,v 1.8 2001/01/17 02:59:45 parsons Exp $ */
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -23,6 +23,8 @@
 // Inline operations for class TAO::PrioritySpecification_var
 // *************************************************************
 
+#if (TAO_HAS_CLIENT_PRIORITY_POLICY == 1)
+
 ACE_INLINE
 TAO::PrioritySpecification_var::PrioritySpecification_var (void) // default constructor
   : ptr_ (0)
@@ -75,12 +77,12 @@
         }
       else
         {
-          PrioritySpecification *deep_copy =
-            new PrioritySpecification (*p.ptr_);
+          TAO::PrioritySpecification *deep_copy = 
+            new TAO::PrioritySpecification (*p.ptr_);
           
           if (deep_copy != 0)
             {
-              PrioritySpecification *tmp = deep_copy;
+              TAO::PrioritySpecification *tmp = deep_copy;
               deep_copy = this->ptr_;
               this->ptr_ = tmp;
               delete deep_copy;
@@ -164,7 +166,6 @@
   return this->ptr_;
 }
 
-
 #if !defined (_TAO_CLIENTPRIORITYPOLICY___CI_)
 #define _TAO_CLIENTPRIORITYPOLICY___CI_
 
@@ -214,6 +215,35 @@
 
 #endif /* end #if !defined */
 
+ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const TAO::PrioritySpecification &_tao_aggregate)
+{
+  if (
+    (strm << _tao_aggregate.mode) &&
+    (strm << _tao_aggregate.min_priority) &&
+    (strm << _tao_aggregate.max_priority)
+  )
+    return 1;
+  else
+    return 0;
+
+}
+
+ACE_INLINE CORBA::Boolean operator>> (TAO_InputCDR &strm, TAO::PrioritySpecification &_tao_aggregate)
+{
+  if (
+    (strm >> _tao_aggregate.mode) &&
+    (strm >> _tao_aggregate.min_priority) &&
+    (strm >> _tao_aggregate.max_priority)
+  )
+    return 1;
+  else
+    return 0;
+
+}
+#endif /* TAO_HAS_CLIENT_PRIORITY_POLICY == 1 */
+
+#if (TAO_HAS_BUFFERING_CONSTRAINT_POLICY == 1)
+
 // *************************************************************
 // Inline operations for class TAO::BufferingConstraint_var
 // *************************************************************
@@ -270,12 +300,12 @@
         }
       else
         {
-          BufferingConstraint *deep_copy =
-            new BufferingConstraint (*p.ptr_);
+          TAO::BufferingConstraint *deep_copy = 
+            new TAO::BufferingConstraint (*p.ptr_);
           
           if (deep_copy != 0)
             {
-              BufferingConstraint *tmp = deep_copy;
+              TAO::BufferingConstraint *tmp = deep_copy;
               deep_copy = this->ptr_;
               this->ptr_ = tmp;
               delete deep_copy;
@@ -359,7 +389,6 @@
   return this->ptr_;
 }
 
-
 #if !defined (_TAO_BUFFERINGCONSTRAINTPOLICY___CI_)
 #define _TAO_BUFFERINGCONSTRAINTPOLICY___CI_
 
@@ -409,32 +438,6 @@
 
 #endif /* end #if !defined */
 
-ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const TAO::PrioritySpecification &_tao_aggregate)
-{
-  if (
-    (strm << _tao_aggregate.mode) &&
-    (strm << _tao_aggregate.min_priority) &&
-    (strm << _tao_aggregate.max_priority)
-  )
-    return 1;
-  else
-    return 0;
-  
-}
-
-ACE_INLINE CORBA::Boolean operator>> (TAO_InputCDR &strm, TAO::PrioritySpecification &_tao_aggregate)
-{
-  if (
-    (strm >> _tao_aggregate.mode) &&
-    (strm >> _tao_aggregate.min_priority) &&
-    (strm >> _tao_aggregate.max_priority)
-  )
-    return 1;
-  else
-    return 0;
-  
-}
-
 ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const TAO::BufferingConstraint &_tao_aggregate)
 {
   if (
@@ -463,3 +466,4 @@
   
 }
 
+#endif /* TAO_HAS_BUFFERING_CONSTRAINT_POLICY == 1 */
