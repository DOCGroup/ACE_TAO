--- orig/ImplRepoC.i	Sun Apr  1 16:33:08 2001
+++ ImplRepoC.i	Sun Apr  1 17:47:35 2001
@@ -86,14 +86,14 @@
   return *this;
 }
 
-ACE_INLINE 
+ACE_INLINE
 ImplementationRepository::ServerObject_var::operator const ::ImplementationRepository::ServerObject_ptr &() const // cast
 {
   return this->ptr_;
 }
 
-ACE_INLINE 
-ImplementationRepository::ServerObject_var::operator ::ImplementationRepository::ServerObject_ptr &() // cast 
+ACE_INLINE
+ImplementationRepository::ServerObject_var::operator ::ImplementationRepository::ServerObject_ptr &() // cast
 {
   return this->ptr_;
 }
@@ -185,7 +185,7 @@
   return *this;
 }
 
-ACE_INLINE 
+ACE_INLINE
 ImplementationRepository::ServerObject_out::operator ::ImplementationRepository::ServerObject_ptr &() // cast
 {
   return this->ptr_;
@@ -257,7 +257,7 @@
         {
           EnvironmentVariable *deep_copy =
             new EnvironmentVariable (*p.ptr_);
-          
+
           if (deep_copy != 0)
             {
               EnvironmentVariable *tmp = deep_copy;
@@ -267,7 +267,7 @@
             }
         }
     }
-  
+
   return *this;
 }
 
@@ -290,20 +290,20 @@
 }
 
 ACE_INLINE
-ImplementationRepository::EnvironmentVariable_var::operator ::ImplementationRepository::EnvironmentVariable &() // cast 
+ImplementationRepository::EnvironmentVariable_var::operator ::ImplementationRepository::EnvironmentVariable &() // cast
 {
   return *this->ptr_;
 }
 
 ACE_INLINE
-ImplementationRepository::EnvironmentVariable_var::operator ::ImplementationRepository::EnvironmentVariable &() const // cast 
+ImplementationRepository::EnvironmentVariable_var::operator ::ImplementationRepository::EnvironmentVariable &() const // cast
 {
   return *this->ptr_;
 }
 
 // variable-size types only
 ACE_INLINE
-ImplementationRepository::EnvironmentVariable_var::operator ::ImplementationRepository::EnvironmentVariable *&() // cast 
+ImplementationRepository::EnvironmentVariable_var::operator ::ImplementationRepository::EnvironmentVariable *&() // cast
 {
   return this->ptr_;
 }
@@ -320,7 +320,7 @@
   return *this->ptr_;
 }
 
-// mapping for variable size 
+// mapping for variable size
 ACE_INLINE ::ImplementationRepository::EnvironmentVariable *&
 ImplementationRepository::EnvironmentVariable_var::out (void)
 {
@@ -381,7 +381,7 @@
   return *this;
 }
 
-ACE_INLINE 
+ACE_INLINE
 ImplementationRepository::EnvironmentVariable_out::operator ::ImplementationRepository::EnvironmentVariable *&() // cast
 {
   return this->ptr_;
@@ -401,7 +401,7 @@
 
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  
+
 #if !defined (__TAO_UNBOUNDED_SEQUENCE_IMPLEMENTATIONREPOSITORY_ENVIRONMENTLIST_CI_)
 #define __TAO_UNBOUNDED_SEQUENCE_IMPLEMENTATIONREPOSITORY_ENVIRONMENTLIST_CI_
 
@@ -414,24 +414,24 @@
     ACE_NEW_RETURN (retval, ImplementationRepository::EnvironmentVariable[size], 0);
     return retval;
   }
-  
+
   ACE_INLINE void ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList::freebuf (ImplementationRepository::EnvironmentVariable *buffer)
   // Free the sequence.
   {
     delete [] buffer;
   }
-  
+
   ACE_INLINE
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList::_TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList (void) // Default constructor.
   {
   }
-  
+
   ACE_INLINE
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList::_TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList (CORBA::ULong maximum) // Constructor using a maximum length value.
     : TAO_Unbounded_Base_Sequence (maximum, _TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList::allocbuf (maximum))
   {
   }
-  
+
   ACE_INLINE
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList::_TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList (CORBA::ULong maximum,
     CORBA::ULong length,
@@ -440,7 +440,7 @@
   : TAO_Unbounded_Base_Sequence (maximum, length, data, release)
   {
   }
-  
+
   ACE_INLINE
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList::_TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList (const _TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList &rhs)
   // Copy constructor.
@@ -450,10 +450,10 @@
     {
       ImplementationRepository::EnvironmentVariable *tmp1 = _TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList::allocbuf (this->maximum_);
       ImplementationRepository::EnvironmentVariable * const tmp2 = ACE_reinterpret_cast (ImplementationRepository::EnvironmentVariable * ACE_CAST_CONST, rhs.buffer_);
-      
+
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         tmp1[i] = tmp2[i];
-      
+
       this->buffer_ = tmp1;
     }
     else
@@ -461,14 +461,14 @@
       this->buffer_ = 0;
     }
   }
-  
+
   ACE_INLINE ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList &
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList::operator= (const _TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList &rhs)
   // Assignment operator.
   {
     if (this == &rhs)
       return *this;
-    
+
     if (this->release_)
     {
       if (this->maximum_ < rhs.maximum_)
@@ -481,18 +481,18 @@
     }
     else
       this->buffer_ = _TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList::allocbuf (rhs.maximum_);
-    
+
     TAO_Unbounded_Base_Sequence::operator= (rhs);
-    
+
     ImplementationRepository::EnvironmentVariable *tmp1 = ACE_reinterpret_cast (ImplementationRepository::EnvironmentVariable *, this->buffer_);
     ImplementationRepository::EnvironmentVariable * const tmp2 = ACE_reinterpret_cast (ImplementationRepository::EnvironmentVariable * ACE_CAST_CONST, rhs.buffer_);
-    
+
     for (CORBA::ULong i = 0; i < this->length_; ++i)
       tmp1[i] = tmp2[i];
-    
+
     return *this;
   }
-  
+
   // = Accessors.
   ACE_INLINE ImplementationRepository::EnvironmentVariable &
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList::operator[] (CORBA::ULong i)
@@ -502,7 +502,7 @@
     ImplementationRepository::EnvironmentVariable* tmp = ACE_reinterpret_cast(ImplementationRepository::EnvironmentVariable*,this->buffer_);
     return tmp[i];
   }
-  
+
   ACE_INLINE const ImplementationRepository::EnvironmentVariable &
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList::operator[] (CORBA::ULong i) const
   // operator []
@@ -511,9 +511,9 @@
     ImplementationRepository::EnvironmentVariable * const tmp = ACE_reinterpret_cast (ImplementationRepository::EnvironmentVariable* ACE_CAST_CONST, this->buffer_);
     return tmp[i];
   }
-  
+
   // Implement the TAO_Base_Sequence methods (see Sequence.h)
-  
+
   ACE_INLINE ImplementationRepository::EnvironmentVariable *
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList::get_buffer (CORBA::Boolean orphan)
   {
@@ -547,13 +547,13 @@
     }
     return result;
   }
-  
+
   ACE_INLINE const ImplementationRepository::EnvironmentVariable *
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList::get_buffer (void) const
   {
     return ACE_reinterpret_cast(const ImplementationRepository::EnvironmentVariable * ACE_CAST_CONST, this->buffer_);
   }
-  
+
   ACE_INLINE void
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_EnvironmentList::replace (CORBA::ULong max,
   CORBA::ULong length,
@@ -570,11 +570,11 @@
     this->buffer_ = data;
     this->release_ = release;
   }
-  
+
 #endif /* end #if !defined */
 
 
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
 
 #if !defined (_IMPLEMENTATIONREPOSITORY_ENVIRONMENTLIST_CI_)
 #define _IMPLEMENTATIONREPOSITORY_ENVIRONMENTLIST_CI_
@@ -630,7 +630,7 @@
         {
           EnvironmentList *deep_copy =
             new EnvironmentList (*p.ptr_);
-          
+
           if (deep_copy != 0)
             {
               EnvironmentList *tmp = deep_copy;
@@ -640,7 +640,7 @@
             }
         }
     }
-  
+
   return *this;
 }
 
@@ -656,27 +656,27 @@
   return this->ptr_;
 }
 
-ACE_INLINE 
+ACE_INLINE
 ImplementationRepository::EnvironmentList_var::operator const ::ImplementationRepository::EnvironmentList &() const // cast
 {
   return *this->ptr_;
 }
 
-ACE_INLINE 
-ImplementationRepository::EnvironmentList_var::operator ::ImplementationRepository::EnvironmentList &() // cast 
+ACE_INLINE
+ImplementationRepository::EnvironmentList_var::operator ::ImplementationRepository::EnvironmentList &() // cast
 {
   return *this->ptr_;
 }
 
-ACE_INLINE 
-ImplementationRepository::EnvironmentList_var::operator ::ImplementationRepository::EnvironmentList &() const // cast 
+ACE_INLINE
+ImplementationRepository::EnvironmentList_var::operator ::ImplementationRepository::EnvironmentList &() const // cast
 {
   return *this->ptr_;
 }
 
 // variable-size types only
 ACE_INLINE
-ImplementationRepository::EnvironmentList_var::operator ::ImplementationRepository::EnvironmentList *&() // cast 
+ImplementationRepository::EnvironmentList_var::operator ::ImplementationRepository::EnvironmentList *&() // cast
 {
   return this->ptr_;
 }
@@ -705,7 +705,7 @@
   return *this->ptr_;
 }
 
-// mapping for variable size 
+// mapping for variable size
 ACE_INLINE ::ImplementationRepository::EnvironmentList *&
 ImplementationRepository::EnvironmentList_var::out (void)
 {
@@ -766,7 +766,7 @@
   return *this;
 }
 
-ACE_INLINE 
+ACE_INLINE
 ImplementationRepository::EnvironmentList_out::operator ::ImplementationRepository::EnvironmentList *&() // cast
 {
   return this->ptr_;
@@ -844,7 +844,7 @@
         {
           StartupOptions *deep_copy =
             new StartupOptions (*p.ptr_);
-          
+
           if (deep_copy != 0)
             {
               StartupOptions *tmp = deep_copy;
@@ -854,7 +854,7 @@
             }
         }
     }
-  
+
   return *this;
 }
 
@@ -877,20 +877,20 @@
 }
 
 ACE_INLINE
-ImplementationRepository::StartupOptions_var::operator ::ImplementationRepository::StartupOptions &() // cast 
+ImplementationRepository::StartupOptions_var::operator ::ImplementationRepository::StartupOptions &() // cast
 {
   return *this->ptr_;
 }
 
 ACE_INLINE
-ImplementationRepository::StartupOptions_var::operator ::ImplementationRepository::StartupOptions &() const // cast 
+ImplementationRepository::StartupOptions_var::operator ::ImplementationRepository::StartupOptions &() const // cast
 {
   return *this->ptr_;
 }
 
 // variable-size types only
 ACE_INLINE
-ImplementationRepository::StartupOptions_var::operator ::ImplementationRepository::StartupOptions *&() // cast 
+ImplementationRepository::StartupOptions_var::operator ::ImplementationRepository::StartupOptions *&() // cast
 {
   return this->ptr_;
 }
@@ -907,7 +907,7 @@
   return *this->ptr_;
 }
 
-// mapping for variable size 
+// mapping for variable size
 ACE_INLINE ::ImplementationRepository::StartupOptions *&
 ImplementationRepository::StartupOptions_var::out (void)
 {
@@ -968,7 +968,7 @@
   return *this;
 }
 
-ACE_INLINE 
+ACE_INLINE
 ImplementationRepository::StartupOptions_out::operator ::ImplementationRepository::StartupOptions *&() // cast
 {
   return this->ptr_;
@@ -1037,7 +1037,7 @@
         {
           ServerInformation *deep_copy =
             new ServerInformation (*p.ptr_);
-          
+
           if (deep_copy != 0)
             {
               ServerInformation *tmp = deep_copy;
@@ -1047,7 +1047,7 @@
             }
         }
     }
-  
+
   return *this;
 }
 
@@ -1070,20 +1070,20 @@
 }
 
 ACE_INLINE
-ImplementationRepository::ServerInformation_var::operator ::ImplementationRepository::ServerInformation &() // cast 
+ImplementationRepository::ServerInformation_var::operator ::ImplementationRepository::ServerInformation &() // cast
 {
   return *this->ptr_;
 }
 
 ACE_INLINE
-ImplementationRepository::ServerInformation_var::operator ::ImplementationRepository::ServerInformation &() const // cast 
+ImplementationRepository::ServerInformation_var::operator ::ImplementationRepository::ServerInformation &() const // cast
 {
   return *this->ptr_;
 }
 
 // variable-size types only
 ACE_INLINE
-ImplementationRepository::ServerInformation_var::operator ::ImplementationRepository::ServerInformation *&() // cast 
+ImplementationRepository::ServerInformation_var::operator ::ImplementationRepository::ServerInformation *&() // cast
 {
   return this->ptr_;
 }
@@ -1100,7 +1100,7 @@
   return *this->ptr_;
 }
 
-// mapping for variable size 
+// mapping for variable size
 ACE_INLINE ::ImplementationRepository::ServerInformation *&
 ImplementationRepository::ServerInformation_var::out (void)
 {
@@ -1161,7 +1161,7 @@
   return *this;
 }
 
-ACE_INLINE 
+ACE_INLINE
 ImplementationRepository::ServerInformation_out::operator ::ImplementationRepository::ServerInformation *&() // cast
 {
   return this->ptr_;
@@ -1181,7 +1181,7 @@
 
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
-  
+
 #if !defined (__TAO_UNBOUNDED_SEQUENCE_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST_CI_)
 #define __TAO_UNBOUNDED_SEQUENCE_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST_CI_
 
@@ -1194,24 +1194,24 @@
     ACE_NEW_RETURN (retval, ImplementationRepository::ServerInformation[size], 0);
     return retval;
   }
-  
+
   ACE_INLINE void ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList::freebuf (ImplementationRepository::ServerInformation *buffer)
   // Free the sequence.
   {
     delete [] buffer;
   }
-  
+
   ACE_INLINE
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList::_TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList (void) // Default constructor.
   {
   }
-  
+
   ACE_INLINE
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList::_TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList (CORBA::ULong maximum) // Constructor using a maximum length value.
     : TAO_Unbounded_Base_Sequence (maximum, _TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList::allocbuf (maximum))
   {
   }
-  
+
   ACE_INLINE
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList::_TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList (CORBA::ULong maximum,
     CORBA::ULong length,
@@ -1220,7 +1220,7 @@
   : TAO_Unbounded_Base_Sequence (maximum, length, data, release)
   {
   }
-  
+
   ACE_INLINE
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList::_TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList (const _TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList &rhs)
   // Copy constructor.
@@ -1230,10 +1230,10 @@
     {
       ImplementationRepository::ServerInformation *tmp1 = _TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList::allocbuf (this->maximum_);
       ImplementationRepository::ServerInformation * const tmp2 = ACE_reinterpret_cast (ImplementationRepository::ServerInformation * ACE_CAST_CONST, rhs.buffer_);
-      
+
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         tmp1[i] = tmp2[i];
-      
+
       this->buffer_ = tmp1;
     }
     else
@@ -1241,14 +1241,14 @@
       this->buffer_ = 0;
     }
   }
-  
+
   ACE_INLINE ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList &
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList::operator= (const _TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList &rhs)
   // Assignment operator.
   {
     if (this == &rhs)
       return *this;
-    
+
     if (this->release_)
     {
       if (this->maximum_ < rhs.maximum_)
@@ -1261,18 +1261,18 @@
     }
     else
       this->buffer_ = _TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList::allocbuf (rhs.maximum_);
-    
+
     TAO_Unbounded_Base_Sequence::operator= (rhs);
-    
+
     ImplementationRepository::ServerInformation *tmp1 = ACE_reinterpret_cast (ImplementationRepository::ServerInformation *, this->buffer_);
     ImplementationRepository::ServerInformation * const tmp2 = ACE_reinterpret_cast (ImplementationRepository::ServerInformation * ACE_CAST_CONST, rhs.buffer_);
-    
+
     for (CORBA::ULong i = 0; i < this->length_; ++i)
       tmp1[i] = tmp2[i];
-    
+
     return *this;
   }
-  
+
   // = Accessors.
   ACE_INLINE ImplementationRepository::ServerInformation &
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList::operator[] (CORBA::ULong i)
@@ -1282,7 +1282,7 @@
     ImplementationRepository::ServerInformation* tmp = ACE_reinterpret_cast(ImplementationRepository::ServerInformation*,this->buffer_);
     return tmp[i];
   }
-  
+
   ACE_INLINE const ImplementationRepository::ServerInformation &
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList::operator[] (CORBA::ULong i) const
   // operator []
@@ -1291,9 +1291,9 @@
     ImplementationRepository::ServerInformation * const tmp = ACE_reinterpret_cast (ImplementationRepository::ServerInformation* ACE_CAST_CONST, this->buffer_);
     return tmp[i];
   }
-  
+
   // Implement the TAO_Base_Sequence methods (see Sequence.h)
-  
+
   ACE_INLINE ImplementationRepository::ServerInformation *
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList::get_buffer (CORBA::Boolean orphan)
   {
@@ -1327,13 +1327,13 @@
     }
     return result;
   }
-  
+
   ACE_INLINE const ImplementationRepository::ServerInformation *
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList::get_buffer (void) const
   {
     return ACE_reinterpret_cast(const ImplementationRepository::ServerInformation * ACE_CAST_CONST, this->buffer_);
   }
-  
+
   ACE_INLINE void
   ImplementationRepository::_TAO_Unbounded_Sequence_ImplementationRepository_ServerInformationList::replace (CORBA::ULong max,
   CORBA::ULong length,
@@ -1350,11 +1350,11 @@
     this->buffer_ = data;
     this->release_ = release;
   }
-  
+
 #endif /* end #if !defined */
 
 
-#endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
+#endif /* !TAO_USE_SEQUENCE_TEMPLATES */
 
 #if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST_CI_)
 #define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST_CI_
@@ -1410,7 +1410,7 @@
         {
           ServerInformationList *deep_copy =
             new ServerInformationList (*p.ptr_);
-          
+
           if (deep_copy != 0)
             {
               ServerInformationList *tmp = deep_copy;
@@ -1420,7 +1420,7 @@
             }
         }
     }
-  
+
   return *this;
 }
 
@@ -1436,27 +1436,27 @@
   return this->ptr_;
 }
 
-ACE_INLINE 
+ACE_INLINE
 ImplementationRepository::ServerInformationList_var::operator const ::ImplementationRepository::ServerInformationList &() const // cast
 {
   return *this->ptr_;
 }
 
-ACE_INLINE 
-ImplementationRepository::ServerInformationList_var::operator ::ImplementationRepository::ServerInformationList &() // cast 
+ACE_INLINE
+ImplementationRepository::ServerInformationList_var::operator ::ImplementationRepository::ServerInformationList &() // cast
 {
   return *this->ptr_;
 }
 
-ACE_INLINE 
-ImplementationRepository::ServerInformationList_var::operator ::ImplementationRepository::ServerInformationList &() const // cast 
+ACE_INLINE
+ImplementationRepository::ServerInformationList_var::operator ::ImplementationRepository::ServerInformationList &() const // cast
 {
   return *this->ptr_;
 }
 
 // variable-size types only
 ACE_INLINE
-ImplementationRepository::ServerInformationList_var::operator ::ImplementationRepository::ServerInformationList *&() // cast 
+ImplementationRepository::ServerInformationList_var::operator ::ImplementationRepository::ServerInformationList *&() // cast
 {
   return this->ptr_;
 }
@@ -1485,7 +1485,7 @@
   return *this->ptr_;
 }
 
-// mapping for variable size 
+// mapping for variable size
 ACE_INLINE ::ImplementationRepository::ServerInformationList *&
 ImplementationRepository::ServerInformationList_var::out (void)
 {
@@ -1546,7 +1546,7 @@
   return *this;
 }
 
-ACE_INLINE 
+ACE_INLINE
 ImplementationRepository::ServerInformationList_out::operator ::ImplementationRepository::ServerInformationList *&() // cast
 {
   return this->ptr_;
@@ -1604,7 +1604,7 @@
   : ptr_ (ImplementationRepository::ServerInformationIterator::_nil ())
 {}
 
-ACE_INLINE ImplementationRepository::ServerInformationIterator_ptr 
+ACE_INLINE ImplementationRepository::ServerInformationIterator_ptr
 ImplementationRepository::ServerInformationIterator_var::ptr (void) const
 {
   return this->ptr_;
@@ -1641,19 +1641,19 @@
   return *this;
 }
 
-ACE_INLINE 
+ACE_INLINE
 ImplementationRepository::ServerInformationIterator_var::operator const ImplementationRepository::ServerInformationIterator_ptr &() const // cast
 {
   return this->ptr_;
 }
 
-ACE_INLINE 
-ImplementationRepository::ServerInformationIterator_var::operator ImplementationRepository::ServerInformationIterator_ptr &() // cast 
+ACE_INLINE
+ImplementationRepository::ServerInformationIterator_var::operator ImplementationRepository::ServerInformationIterator_ptr &() // cast
 {
   return this->ptr_;
 }
 
-ACE_INLINE ImplementationRepository::ServerInformationIterator_ptr 
+ACE_INLINE ImplementationRepository::ServerInformationIterator_ptr
 ImplementationRepository::ServerInformationIterator_var::operator-> (void) const
 {
   return this->ptr_;
@@ -1679,7 +1679,7 @@
   return this->ptr_;
 }
 
-ACE_INLINE ImplementationRepository::ServerInformationIterator_ptr 
+ACE_INLINE ImplementationRepository::ServerInformationIterator_ptr
 ImplementationRepository::ServerInformationIterator_var::_retn (void)
 {
   // yield ownership of managed obj reference
@@ -1740,7 +1740,7 @@
   return *this;
 }
 
-ACE_INLINE 
+ACE_INLINE
 ImplementationRepository::ServerInformationIterator_out::operator ImplementationRepository::ServerInformationIterator_ptr &() // cast
 {
   return this->ptr_;
@@ -1752,7 +1752,7 @@
   return this->ptr_;
 }
 
-ACE_INLINE ImplementationRepository::ServerInformationIterator_ptr 
+ACE_INLINE ImplementationRepository::ServerInformationIterator_ptr
 ImplementationRepository::ServerInformationIterator_out::operator-> (void)
 {
   return this->ptr_;
@@ -1840,14 +1840,14 @@
   return *this;
 }
 
-ACE_INLINE 
+ACE_INLINE
 ImplementationRepository::Administration_var::operator const ::ImplementationRepository::Administration_ptr &() const // cast
 {
   return this->ptr_;
 }
 
-ACE_INLINE 
-ImplementationRepository::Administration_var::operator ::ImplementationRepository::Administration_ptr &() // cast 
+ACE_INLINE
+ImplementationRepository::Administration_var::operator ::ImplementationRepository::Administration_ptr &() // cast
 {
   return this->ptr_;
 }
@@ -1939,7 +1939,7 @@
   return *this;
 }
 
-ACE_INLINE 
+ACE_INLINE
 ImplementationRepository::Administration_out::operator ::ImplementationRepository::Administration_ptr &() // cast
 {
   return this->ptr_;
@@ -2018,7 +2018,7 @@
     return 1;
   else
     return 0;
-  
+
 }
 
 ACE_INLINE CORBA::Boolean operator>> (TAO_InputCDR &strm, ImplementationRepository::EnvironmentVariable &_tao_aggregate)
@@ -2030,7 +2030,7 @@
     return 1;
   else
     return 0;
-  
+
 }
 
 
@@ -2058,12 +2058,12 @@
 {
   CORBA::ULong _tao_temp = 0;
   CORBA::Boolean _tao_result = strm >> _tao_temp;
-  
+
   if (_tao_result == 1)
     {
       _tao_enumval = ACE_static_cast (ImplementationRepository::ActivationMode, _tao_temp);
     }
-  
+
   return _tao_result;
 }
 
@@ -2078,7 +2078,7 @@
     return 1;
   else
     return 0;
-  
+
 }
 
 ACE_INLINE CORBA::Boolean operator>> (TAO_InputCDR &strm, ImplementationRepository::StartupOptions &_tao_aggregate)
@@ -2092,7 +2092,7 @@
     return 1;
   else
     return 0;
-  
+
 }
 
 ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const ImplementationRepository::ServerInformation &_tao_aggregate)
@@ -2106,7 +2106,7 @@
     return 1;
   else
     return 0;
-  
+
 }
 
 ACE_INLINE CORBA::Boolean operator>> (TAO_InputCDR &strm, ImplementationRepository::ServerInformation &_tao_aggregate)
@@ -2120,7 +2120,7 @@
     return 1;
   else
     return 0;
-  
+
 }
 
 
@@ -2301,4 +2301,3 @@
   ACE_ENDTRY;
   return 0;
 }
-
