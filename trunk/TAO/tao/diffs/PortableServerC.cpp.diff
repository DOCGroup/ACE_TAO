--- orig/PortableServerC.cpp	Wed Apr 18 01:09:27 2001
+++ PortableServerC.cpp	Wed Apr 18 00:44:53 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -20,13 +20,8 @@
 //     http://www.cs.wustl.edu/~schmidt/TAO.html
 
 #include "PortableServerC.h"
-
-#include "tao/Stub.h"
-#include "tao/Invocation.h"
-#include "tao/ClientRequestInfo.h"
-#if TAO_HAS_INTERCEPTORS == 1
-#include "tao/RequestInfo_Util.h"
-#endif  /* TAO_HAS_INTERCEPTORS == 1 */
+#include "POA.h"
+#include "tao/ORB.h"
 
 #if defined (__BORLANDC__)
 #pragma option -w-rvl -w-rch -w-ccc -w-aus
@@ -263,6 +258,8 @@
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ObjectId, &_tc_TAO_tc_PortableServer_ObjectId)
 TAO_NAMESPACE_END
 
+#if (TAO_HAS_MINIMUM_CORBA == 0)
+
 // Default constructor.
 PortableServer::ForwardRequest::ForwardRequest (void)
   : CORBA_UserException ("IDL:PortableServer/ForwardRequest:1.0")
@@ -421,6 +418,8 @@
   return ::PortableServer::_tc_ForwardRequest;
 }
 
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (PortableServer)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, THREAD_POLICY_ID, 16U)
@@ -449,6 +448,9 @@
 TAO_NAMESPACE_BEGIN (PortableServer)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, REQUEST_PROCESSING_POLICY_ID, 22U)
 TAO_NAMESPACE_END
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 static const CORBA::Long _oc_PortableServer_ThreadPolicyValue[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -760,6 +762,8 @@
   return "IDL:PortableServer/ThreadPolicy:1.0";
 }
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 static const CORBA::Long _oc_PortableServer_LifespanPolicyValue[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -1687,6 +1691,8 @@
   return "IDL:PortableServer/IdAssignmentPolicy:1.0";
 }
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 static const CORBA::Long _oc_PortableServer_ImplicitActivationPolicyValue[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -2642,6 +2648,8 @@
   return "IDL:PortableServer/RequestProcessingPolicy:1.0";
 }
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 // *************************************************************
 // Operations for class PortableServer::POAManager_var
 // *************************************************************
@@ -2961,6 +2969,8 @@
   return retval;
 }
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 // *************************************************************
 // Operations for class PortableServer::AdapterActivator_var
 // *************************************************************
@@ -3989,6 +3999,8 @@
   return "IDL:PortableServer/ServantLocator:1.0";
 }
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 // *************************************************************
 // Operations for class PortableServer::POA_var
 // *************************************************************
@@ -4454,6 +4466,8 @@
   this->index = _tao_index;
 }
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 // Default constructor.
 PortableServer::POA::NoServant::NoServant (void)
   : CORBA_UserException ("IDL:PortableServer/POA/NoServant:1.0")
@@ -4522,6 +4536,8 @@
   return retval;
 }
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 // Default constructor.
 PortableServer::POA::ObjectAlreadyActive::ObjectAlreadyActive (void)
   : CORBA_UserException ("IDL:PortableServer/POA/ObjectAlreadyActive:1.0")
@@ -5261,6 +5277,30 @@
   return retval;
 }
 
+char *
+PortableServer::ObjectId_to_string (const PortableServer::ObjectId &id)
+{
+  return TAO_POA::ObjectId_to_string (id);
+}
+
+CORBA::WChar *
+PortableServer::ObjectId_to_wstring (const PortableServer::ObjectId &id)
+{
+  return TAO_POA::ObjectId_to_wstring (id);
+}
+
+PortableServer::ObjectId *
+PortableServer::string_to_ObjectId (const char *id)
+{
+  return TAO_POA::string_to_ObjectId (id);
+}
+
+PortableServer::ObjectId *
+PortableServer::wstring_to_ObjectId (const CORBA::WChar *id)
+{
+  return TAO_POA::wstring_to_ObjectId (id);
+}
+
 void operator<<= (
     CORBA::Any &_tao_any,
     const PortableServer::ObjectId &_tao_elem
@@ -5352,6 +5392,8 @@
   return 0;
 }
 
+#if (TAO_HAS_MINIMUM_CORBA == 0)
+
 void operator<<= (CORBA::Any &_tao_any, const PortableServer::ForwardRequest &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
@@ -5442,6 +5484,10 @@
   return 0;
 }
 
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 void operator<<= (CORBA::Any &_tao_any, PortableServer::ThreadPolicyValue _tao_elem)
 {
   TAO_OutputCDR stream;
@@ -5489,6 +5535,8 @@
   #  pragma instantiate TAO_Object_Manager<PortableServer::ThreadPolicy,PortableServer::ThreadPolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 void operator<<= (CORBA::Any &_tao_any, PortableServer::LifespanPolicyValue _tao_elem)
 {
   TAO_OutputCDR stream;
@@ -5630,6 +5678,8 @@
   #  pragma instantiate TAO_Object_Manager<PortableServer::IdAssignmentPolicy,PortableServer::IdAssignmentPolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 void operator<<= (CORBA::Any &_tao_any, PortableServer::ImplicitActivationPolicyValue _tao_elem)
 {
   TAO_OutputCDR stream;
@@ -5771,6 +5821,8 @@
   #  pragma instantiate TAO_Object_Manager<PortableServer::RequestProcessingPolicy,PortableServer::RequestProcessingPolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
     template class TAO_Object_Manager<PortableServer::POAManager,PortableServer::POAManager_var>;
@@ -5778,6 +5830,8 @@
   #  pragma instantiate TAO_Object_Manager<PortableServer::POAManager,PortableServer::POAManager_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
     template class TAO_Object_Manager<PortableServer::AdapterActivator,PortableServer::AdapterActivator_var>;
@@ -5805,6 +5859,8 @@
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
   #  pragma instantiate TAO_Object_Manager<PortableServer::ServantLocator,PortableServer::ServantLocator_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
+
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
