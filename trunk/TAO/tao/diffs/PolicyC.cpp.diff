--- orig/PolicyC.cpp	Mon Apr 16 18:53:06 2001
+++ PolicyC.cpp	Mon Apr 16 19:08:11 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -23,6 +23,7 @@
 
 #include "tao/Stub.h"
 #include "tao/Invocation.h"
+#include "tao/PortableInterceptor.h"
 #include "tao/ClientRequestInfo.h"
 #if TAO_HAS_INTERCEPTORS == 1
 #include "tao/RequestInfo_Util.h"
@@ -36,124 +37,34 @@
 #include "PolicyC.i"
 #endif /* !defined INLINE */
 
-static const CORBA::Long _oc_CORBA_PolicyErrorCode[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  38,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x412f506f), 
-  ACE_NTOHL (0x6c696379), 
-  ACE_NTOHL (0x4572726f), 
-  ACE_NTOHL (0x72436f64), 
-  ACE_NTOHL (0x653a312e), 
-  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/PolicyErrorCode:1.0
-  16,
-  ACE_NTOHL (0x506f6c69), 
-  ACE_NTOHL (0x63794572), 
-  ACE_NTOHL (0x726f7243), 
-  ACE_NTOHL (0x6f646500),  // name = PolicyErrorCode
-  CORBA::tk_short,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_PolicyErrorCode (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_PolicyErrorCode),
-    (char *) &_oc_CORBA_PolicyErrorCode,
-    0,
-    sizeof (CORBA::PolicyErrorCode)
-  );
+// ****************************************************************
 
-TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
+TAO_NAMESPACE_TYPE (const CORBA::PolicyErrorCode)
 TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_PolicyErrorCode, &_tc_TAO_tc_CORBA_PolicyErrorCode)
+TAO_NAMESPACE_DEFINE (const CORBA::PolicyErrorCode, BAD_POLICY, 0)
 TAO_NAMESPACE_END
-
-static const CORBA::Long _oc_CORBA_PolicyType[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  33,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x412f506f), 
-  ACE_NTOHL (0x6c696379), 
-  ACE_NTOHL (0x54797065), 
-  ACE_NTOHL (0x3a312e30), 
-  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/PolicyType:1.0
-  11,
-  ACE_NTOHL (0x506f6c69), 
-  ACE_NTOHL (0x63795479), 
-  ACE_NTOHL (0x70650000),  // name = PolicyType
-  CORBA::tk_ulong,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_PolicyType (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_PolicyType),
-    (char *) &_oc_CORBA_PolicyType,
-    0,
-    sizeof (CORBA::PolicyType)
-  );
-
-TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
+TAO_NAMESPACE_TYPE (const CORBA::PolicyErrorCode)
 TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_PolicyType, &_tc_TAO_tc_CORBA_PolicyType)
+TAO_NAMESPACE_DEFINE (const CORBA::PolicyErrorCode, UNSUPPORTED_POLICY, 1)
 TAO_NAMESPACE_END
-
-static const CORBA::Long _oc_CORBA_SetOverrideType[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  38,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x412f5365), 
-  ACE_NTOHL (0x744f7665), 
-  ACE_NTOHL (0x72726964), 
-  ACE_NTOHL (0x65547970), 
-  ACE_NTOHL (0x653a312e), 
-  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/SetOverrideType:1.0
-  16,
-  ACE_NTOHL (0x5365744f), 
-  ACE_NTOHL (0x76657272), 
-  ACE_NTOHL (0x69646554), 
-  ACE_NTOHL (0x79706500),  // name = SetOverrideType
-  2, // member count
-  13,
-  ACE_NTOHL (0x5345545f), 
-  ACE_NTOHL (0x4f564552), 
-  ACE_NTOHL (0x52494445), 
-  ACE_NTOHL (0x0),  // name = SET_OVERRIDE
-  13,
-  ACE_NTOHL (0x4144445f), 
-  ACE_NTOHL (0x4f564552), 
-  ACE_NTOHL (0x52494445), 
-  ACE_NTOHL (0x0),  // name = ADD_OVERRIDE
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_SetOverrideType (
-    CORBA::tk_enum,
-    sizeof (_oc_CORBA_SetOverrideType),
-    (char *) &_oc_CORBA_SetOverrideType,
-    0,
-    sizeof (CORBA::SetOverrideType)
-  );
-
-TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
+TAO_NAMESPACE_TYPE (const CORBA::PolicyErrorCode)
+TAO_NAMESPACE_BEGIN (CORBA)
+TAO_NAMESPACE_DEFINE (const CORBA::PolicyErrorCode, BAD_POLICY_TYPE, 2)
+TAO_NAMESPACE_END
+TAO_NAMESPACE_TYPE (const CORBA::PolicyErrorCode)
+TAO_NAMESPACE_BEGIN (CORBA)
+TAO_NAMESPACE_DEFINE (const CORBA::PolicyErrorCode, BAD_POLICY_VALUE, 3)
+TAO_NAMESPACE_END
+TAO_NAMESPACE_TYPE (const CORBA::PolicyErrorCode)
 TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_SetOverrideType, &_tc_TAO_tc_CORBA_SetOverrideType)
+TAO_NAMESPACE_DEFINE (const CORBA::PolicyErrorCode, UNSUPPORTED_POLICY_VALUE, 4)
 TAO_NAMESPACE_END
 
+// ****************************************************************
+
 // Default constructor.
 CORBA_PolicyError::CORBA_PolicyError (void)
-  : CORBA_UserException ("IDL:omg.org/CORBA_PolicyError:1.0")
+  : CORBA_UserException ("IDL:omg.org/CORBA/PolicyError:1.0")
 {
 }
 
@@ -188,7 +99,7 @@
 CORBA_PolicyError *
 CORBA_PolicyError::_downcast (CORBA::Exception *exc)
 {
-  if (!ACE_OS::strcmp ("IDL:omg.org/CORBA_PolicyError:1.0", exc->_id ()))
+  if (!ACE_OS::strcmp ("IDL:omg.org/CORBA/PolicyError:1.0", exc->_id ()))
     {
       return ACE_dynamic_cast (CORBA_PolicyError *, exc);
     }
@@ -240,7 +151,7 @@
 CORBA_PolicyError::CORBA_PolicyError (
     CORBA::PolicyErrorCode _tao_reason
   )
-  : CORBA_UserException ("IDL:omg.org/CORBA_PolicyError:1.0")
+  : CORBA_UserException ("IDL:omg.org/CORBA/PolicyError:1.0")
 {
   this->reason = _tao_reason;
 }
@@ -408,7 +319,7 @@
 
 // Default constructor.
 CORBA_InvalidPolicies::CORBA_InvalidPolicies (void)
-  : CORBA_UserException ("IDL:omg.org/CORBA_InvalidPolicies:1.0")
+  : CORBA_UserException ("IDL:omg.org/CORBA/InvalidPolicies:1.0")
 {
 }
 
@@ -443,7 +354,7 @@
 CORBA_InvalidPolicies *
 CORBA_InvalidPolicies::_downcast (CORBA::Exception *exc)
 {
-  if (!ACE_OS::strcmp ("IDL:omg.org/CORBA_InvalidPolicies:1.0", exc->_id ()))
+  if (!ACE_OS::strcmp ("IDL:omg.org/CORBA/InvalidPolicies:1.0", exc->_id ()))
     {
       return ACE_dynamic_cast (CORBA_InvalidPolicies *, exc);
     }
@@ -495,7 +406,7 @@
 CORBA_InvalidPolicies::CORBA_InvalidPolicies (
     const CORBA_InvalidPolicies::_tao_seq_UShort & _tao_indices
   )
-  : CORBA_UserException ("IDL:omg.org/CORBA_InvalidPolicies:1.0")
+  : CORBA_UserException ("IDL:omg.org/CORBA/InvalidPolicies:1.0")
 {
   this->indices = _tao_indices;
 }
@@ -675,7 +586,7 @@
   return *tmp;
 }
 // *************************************************************
-// Inline operations for class CORBA_Policy_out
+// Operations for class CORBA_Policy_out
 // *************************************************************
 
 CORBA_Policy_out::CORBA_Policy_out (CORBA_Policy_ptr &p)
@@ -1564,7 +1475,7 @@
     return CORBA_Policy::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_Policy:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/Policy:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_Policy::_nil ());
       if (is_a == 0)
         return CORBA_Policy::_nil ();
@@ -1632,7 +1543,7 @@
 CORBA::Boolean CORBA_Policy::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Policy:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Policy:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -1657,7 +1568,19 @@
 
 const char* CORBA_Policy::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_Policy:1.0";
+  return "IDL:omg.org/CORBA/Policy:1.0";
+}
+
+CORBA::Boolean
+CORBA_Policy::_tao_encode (TAO_OutputCDR &)
+{
+  return 0;
+}
+
+CORBA::Boolean
+CORBA_Policy::_tao_decode (TAO_InputCDR &)
+{
+  return 0;
 }
 
 CORBA::PolicyType CORBA_Policy::policy_type (
@@ -2213,7 +2136,7 @@
   return *tmp;
 }
 // *************************************************************
-// Inline operations for class CORBA_PolicyManager_out
+// Operations for class CORBA_PolicyManager_out
 // *************************************************************
 
 CORBA_PolicyManager_out::CORBA_PolicyManager_out (CORBA_PolicyManager_ptr &p)
@@ -2337,258 +2260,9 @@
 
 const char* CORBA_PolicyManager::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_PolicyManager:1.0";
-}
-
-// *************************************************************
-// Operations for class CORBA_Current_var
-// *************************************************************
-
-CORBA_Current_var::CORBA_Current_var (void) // default constructor
-  : ptr_ (CORBA_Current::_nil ())
-{}
-
-::CORBA_Current_ptr
-CORBA_Current_var::ptr (void) const
-{
-  return this->ptr_;
-}
-
-CORBA_Current_var::CORBA_Current_var (const ::CORBA_Current_var &p) // copy constructor
-  : TAO_Base_var (),
-    ptr_ (CORBA_Current::_duplicate (p.ptr ()))
-{}
-
-CORBA_Current_var::~CORBA_Current_var (void) // destructor
-{
-  CORBA::release (this->ptr_);
-}
-
-CORBA_Current_var &
-CORBA_Current_var::operator= (CORBA_Current_ptr p)
-{
-  CORBA::release (this->ptr_);
-  this->ptr_ = p;
-  return *this;
-}
-
-CORBA_Current_var &
-CORBA_Current_var::operator= (const ::CORBA_Current_var &p)
-{
-  if (this != &p)
-  {
-    CORBA::release (this->ptr_);
-    this->ptr_ = ::CORBA_Current::_duplicate (p.ptr ());
-  }
-  return *this;
-}
-
-CORBA_Current_var::operator const ::CORBA_Current_ptr &() const // cast
-{
-  return this->ptr_;
-}
-
-CORBA_Current_var::operator ::CORBA_Current_ptr &() // cast 
-{
-  return this->ptr_;
-}
-
-::CORBA_Current_ptr
-CORBA_Current_var::operator-> (void) const
-{
-  return this->ptr_;
-}
-
-::CORBA_Current_ptr
-CORBA_Current_var::in (void) const
-{
-  return this->ptr_;
-}
-
-::CORBA_Current_ptr &
-CORBA_Current_var::inout (void)
-{
-  return this->ptr_;
-}
-
-::CORBA_Current_ptr &
-CORBA_Current_var::out (void)
-{
-  CORBA::release (this->ptr_);
-  this->ptr_ = ::CORBA_Current::_nil ();
-  return this->ptr_;
+  return "IDL:omg.org/CORBA/PolicyManager:1.0";
 }
 
-::CORBA_Current_ptr
-CORBA_Current_var::_retn (void)
-{
-  // yield ownership of managed obj reference
-  ::CORBA_Current_ptr val = this->ptr_;
-  this->ptr_ = ::CORBA_Current::_nil ();
-  return val;
-}
-
-::CORBA_Current_ptr
-CORBA_Current_var::duplicate (CORBA_Current_ptr p)
-{
-  return ::CORBA_Current::_duplicate (p);
-}
-
-void
-CORBA_Current_var::release (CORBA_Current_ptr p)
-{
-  CORBA::release (p);
-}
-
-::CORBA_Current_ptr
-CORBA_Current_var::nil (void)
-{
-  return ::CORBA_Current::_nil ();
-}
-
-::CORBA_Current_ptr
-CORBA_Current_var::narrow (
-    CORBA::Object *p,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return ::CORBA_Current::_narrow (p, ACE_TRY_ENV);
-}
-
-CORBA::Object *
-CORBA_Current_var::upcast (void *src)
-{
-  CORBA_Current **tmp =
-    ACE_static_cast (CORBA_Current **, src);
-  return *tmp;
-}
-// *************************************************************
-// Inline operations for class CORBA_Current_out
-// *************************************************************
-
-CORBA_Current_out::CORBA_Current_out (CORBA_Current_ptr &p)
-  : ptr_ (p)
-{
-  this->ptr_ = ::CORBA_Current::_nil ();
-}
-
-CORBA_Current_out::CORBA_Current_out (CORBA_Current_var &p) // constructor from _var
-  : ptr_ (p.out ())
-{
-  CORBA::release (this->ptr_);
-  this->ptr_ = ::CORBA_Current::_nil ();
-}
-
-CORBA_Current_out::CORBA_Current_out (const ::CORBA_Current_out &p) // copy constructor
-  : ptr_ (ACE_const_cast (CORBA_Current_out &, p).ptr_)
-{}
-
-::CORBA_Current_out &
-CORBA_Current_out::operator= (const ::CORBA_Current_out &p)
-{
-  this->ptr_ = ACE_const_cast (CORBA_Current_out&, p).ptr_;
-  return *this;
-}
-
-CORBA_Current_out &
-CORBA_Current_out::operator= (const ::CORBA_Current_var &p)
-{
-  this->ptr_ = ::CORBA_Current::_duplicate (p.ptr ());
-  return *this;
-}
-
-CORBA_Current_out &
-CORBA_Current_out::operator= (CORBA_Current_ptr p)
-{
-  this->ptr_ = p;
-  return *this;
-}
-
-CORBA_Current_out::operator ::CORBA_Current_ptr &() // cast
-{
-  return this->ptr_;
-}
-
-::CORBA_Current_ptr &
-CORBA_Current_out::ptr (void) // ptr
-{
-  return this->ptr_;
-}
-
-::CORBA_Current_ptr
-CORBA_Current_out::operator-> (void)
-{
-  return this->ptr_;
-}
-
-
-// default constructor
-CORBA_Current::CORBA_Current ()
-{
-  }
-
-// destructor
-CORBA_Current::~CORBA_Current (void)
-{}
-
-CORBA_Current_ptr CORBA_Current::_narrow (
-    CORBA::Object_ptr obj,
-    CORBA::Environment &ACE_TRY_ENV
-  )
-{
-  return CORBA_Current::_unchecked_narrow (obj, ACE_TRY_ENV);
-}
-
-CORBA_Current_ptr CORBA_Current::_unchecked_narrow (
-    CORBA::Object_ptr obj,
-    CORBA::Environment &
-  )
-{
-  if (CORBA::is_nil (obj))
-    return CORBA_Current::_nil ();
-  return
-      ACE_reinterpret_cast
-        (
-          CORBA_Current_ptr,
-            obj->_tao_QueryInterface
-              (
-                ACE_reinterpret_cast
-                  (
-                    ptr_arith_t,
-                    &CORBA_Current::_narrow
-                  )
-              )
-        );
-}
-
-CORBA_Current_ptr
-CORBA_Current::_duplicate (CORBA_Current_ptr obj)
-{
-  if (!CORBA::is_nil (obj))
-    obj->_add_ref ();
-  return obj;
-}
-
-void *CORBA_Current::_tao_QueryInterface (ptr_arith_t type)
-{
-  void *retv = 0;
-  if (type == ACE_reinterpret_cast
-    (ptr_arith_t,
-      &CORBA_Current::_narrow))
-    retv = ACE_reinterpret_cast (void*, this);
-  else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
-    retv = ACE_reinterpret_cast (void *,
-      ACE_static_cast (CORBA::Object_ptr, this));
-    
-  if (retv)
-    this->_add_ref ();
-  return retv;
-}
-
-const char* CORBA_Current::_interface_repository_id (void) const
-{
-  return "IDL:omg.org/CORBA_Current:1.0";
-}
 
 // *************************************************************
 // Operations for class CORBA_PolicyCurrent_var
@@ -2713,7 +2387,7 @@
   return *tmp;
 }
 // *************************************************************
-// Inline operations for class CORBA_PolicyCurrent_out
+// Operations for class CORBA_PolicyCurrent_out
 // *************************************************************
 
 CORBA_PolicyCurrent_out::CORBA_PolicyCurrent_out (CORBA_PolicyCurrent_ptr &p)
@@ -2861,7 +2535,7 @@
 
 const char* CORBA_PolicyCurrent::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_PolicyCurrent:1.0";
+  return "IDL:omg.org/CORBA/PolicyCurrent:1.0";
 }
 
 void operator<<= (CORBA::Any &_tao_any, CORBA::SetOverrideType _tao_elem)
@@ -2968,7 +2642,7 @@
         return 0;
       if (ACE_OS::strcmp (
           interface_repository_id.in (),
-          "IDL:omg.org/CORBA_PolicyError:1.0"))
+          "IDL:omg.org/CORBA/PolicyError:1.0"))
         return 0;
       if (stream >> *tmp)
       {
@@ -3058,7 +2732,7 @@
         return 0;
       if (ACE_OS::strcmp (
           interface_repository_id.in (),
-          "IDL:omg.org/CORBA_InvalidPolicies:1.0"))
+          "IDL:omg.org/CORBA/InvalidPolicies:1.0"))
         return 0;
       if (stream >> *tmp)
       {
@@ -3336,13 +3010,6 @@
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<CORBA_Current,CORBA_Current_var>;
-  #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<CORBA_Current,CORBA_Current_var>
-#endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
-
-#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
-    defined (ACE_HAS_GNU_REPO)
     template class TAO_Object_Manager<CORBA_PolicyCurrent,CORBA_PolicyCurrent_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
   #  pragma instantiate TAO_Object_Manager<CORBA_PolicyCurrent,CORBA_PolicyCurrent_var>
@@ -3495,4 +3162,3 @@
   }
   return 0; // error
 }
-
