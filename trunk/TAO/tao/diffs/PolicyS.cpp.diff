--- PolicyS.cpp	Fri Jul 14 06:18:45 2000
+++ PolicyS.cpp.mod	Fri Jul 14 06:18:30 2000
@@ -7,12 +7,16 @@
 // Information about TAO is available at:
 //                 http://www.cs.wustl.edu/~schmidt/TAO.html
 
-#include "PolicyS.h"
+#include "tao/PolicyC.h"
+#include "tao/Operation_Table.h"
+#include "tao/Server_Request.h"
+#include "tao/NVList.h"
+#include "tao/Stub.h"
+#include "tao/POA_CORBA.h"
+#include "tao/Typecode.h"
+#include "tao/Object_Adapter.h"
+#include "tao/ORB_Core.h"
 
-#if !defined (__ACE_INLINE__)
-#include "PolicyS.i"
-#endif /* !defined INLINE */
-
 class TAO_CORBA_Policy_Perfect_Hash_OpTable : public TAO_Perfect_Hash_OpTable
 {
 private:
@@ -91,14 +95,14 @@
   static const class TAO_operation_db_entry  wordlist[] =
     {
       {"",0},{"",0},{"",0},{"",0},
-      {"copy", 	&POA_CORBA_Policy::copy_skel},
-      {"_is_a",  &POA_CORBA_Policy::_is_a_skel},
+      {"copy",  &POA_CORBA::Policy::copy_skel},
+      {"_is_a",  &POA_CORBA::Policy::_is_a_skel},
       {"",0},
-      {"destroy", 	&POA_CORBA_Policy::destroy_skel},
+      {"destroy",       &POA_CORBA::Policy::destroy_skel},
       {"",0},{"",0},{"",0},{"",0},{"",0},
-      {"_non_existent",  &POA_CORBA_Policy::_non_existent_skel},
+      {"_non_existent",  &POA_CORBA::Policy::_non_existent_skel},
       {"",0},{"",0},
-      {"_get_policy_type", 	&POA_CORBA_Policy::_get_policy_type_skel},
+      {"_get_policy_type",      &POA_CORBA::Policy::_get_policy_type_skel},
     };
 
   if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
@@ -131,7 +135,7 @@
       CORBA_Policy_ptr retval = 0;
       ACE_NEW_RETURN (
           retval,
-          _tao_thru_poa_collocated_CORBA_Policy (stub),
+          POA_CORBA::_tao_thru_poa_collocated_CORBA_Policy (stub),
           0
         );
       return retval;
@@ -158,29 +162,29 @@
   _TAO_collocation_POA_CORBA_Policy_Stub_Factory_Initializer (ACE_reinterpret_cast (long, _TAO_collocation_POA_CORBA_Policy_Stub_Factory_Initializer));
 
 // skeleton constructor
-POA_CORBA_Policy::POA_CORBA_Policy (void)
+POA_CORBA::Policy::Policy (void)
 {
   this->optable_ = &tao_CORBA_Policy_optable;
 }
 
 // copy ctor
-POA_CORBA_Policy::POA_CORBA_Policy (const POA_CORBA_Policy& rhs)
+POA_CORBA::Policy::Policy (const POA_CORBA::Policy& rhs)
   :   TAO_ServantBase (rhs)
 {}
 
 // skeleton destructor
-POA_CORBA_Policy::~POA_CORBA_Policy (void)
+POA_CORBA::Policy::~Policy (void)
 {
 }
 
-void POA_CORBA_Policy::_get_policy_type_skel (
+void POA_CORBA::Policy::_get_policy_type_skel (
     TAO_ServerRequest &_tao_server_request,
     void *_tao_object_reference, 
     void * /* context */, 
     CORBA::Environment &ACE_TRY_ENV
 )
 {
-  POA_CORBA_Policy *_tao_impl = (POA_CORBA_Policy *)_tao_object_reference;
+  POA_CORBA::Policy *_tao_impl = (POA_CORBA::Policy *)_tao_object_reference;
 
   CORBA::PolicyType _tao_retval = 0;
 #if (TAO_HAS_INTERCEPTORS == 1)
@@ -259,14 +263,14 @@
 
 }
 
-void POA_CORBA_Policy::copy_skel (
+void POA_CORBA::Policy::copy_skel (
     TAO_ServerRequest &_tao_server_request,
     void *_tao_object_reference, 
     void * /* context */, 
     CORBA::Environment &ACE_TRY_ENV
 )
 {
-  POA_CORBA_Policy *_tao_impl = (POA_CORBA_Policy *)_tao_object_reference;
+  POA_CORBA::Policy *_tao_impl = (POA_CORBA::Policy *)_tao_object_reference;
 
   CORBA_Policy_var _tao_retval;
 #if (TAO_HAS_INTERCEPTORS == 1)
@@ -345,14 +349,14 @@
 
 }
 
-void POA_CORBA_Policy::destroy_skel (
+void POA_CORBA::Policy::destroy_skel (
     TAO_ServerRequest &_tao_server_request,
     void *_tao_object_reference, 
     void * /* context */, 
     CORBA::Environment &ACE_TRY_ENV
 )
 {
-  POA_CORBA_Policy *_tao_impl = (POA_CORBA_Policy *)_tao_object_reference;
+  POA_CORBA::Policy *_tao_impl = (POA_CORBA::Policy *)_tao_object_reference;
 
 #if (TAO_HAS_INTERCEPTORS == 1)
   TAO_ServerRequestInterceptor_Adapter
@@ -424,7 +428,7 @@
   ACE_CHECK;
   }
 
-void POA_CORBA_Policy::_is_a_skel (
+void POA_CORBA::Policy::_is_a_skel (
     TAO_ServerRequest &_tao_server_request, 
     void * _tao_object_reference,
     void * /* context */,
@@ -432,7 +436,7 @@
   )
 {
   TAO_InputCDR &_tao_in = _tao_server_request.incoming ();
-  POA_CORBA_Policy *_tao_impl = (POA_CORBA_Policy *) _tao_object_reference;
+  POA_CORBA::Policy *_tao_impl = (POA_CORBA::Policy *) _tao_object_reference;
   CORBA::Boolean _tao_retval = 0;
   CORBA::String_var value;
   if (!(_tao_in >> value.out ()))
@@ -448,14 +452,14 @@
     ACE_THROW (CORBA::MARSHAL ());
 }
 
-void POA_CORBA_Policy::_non_existent_skel (
+void POA_CORBA::Policy::_non_existent_skel (
     TAO_ServerRequest &_tao_server_request, 
     void * _tao_object_reference,
     void * /* context */,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
-  POA_CORBA_Policy *_tao_impl = (POA_CORBA_Policy *) _tao_object_reference;
+  POA_CORBA::Policy *_tao_impl = (POA_CORBA::Policy *) _tao_object_reference;
   CORBA::Boolean _tao_retval = _tao_impl->_non_existent (ACE_TRY_ENV);
   ACE_CHECK;
   
@@ -466,7 +470,7 @@
     ACE_THROW (CORBA::MARSHAL ());
 }
 
-CORBA::Boolean POA_CORBA_Policy::_is_a (
+CORBA::Boolean POA_CORBA::Policy::_is_a (
     const char* value,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -479,29 +483,29 @@
       return 0;
 }
 
-void* POA_CORBA_Policy::_downcast (
+void* POA_CORBA::Policy::_downcast (
     const char* logical_type_id
   )
 {
 if (ACE_OS::strcmp (logical_type_id, "IDL:omg.org/CORBA_Policy:1.0") == 0)
-    return ACE_static_cast (POA_CORBA_Policy_ptr, this);
+    return ACE_static_cast (POA_CORBA::Policy_ptr, this);
     if (ACE_OS::strcmp (logical_type_id, "IDL:omg.org/CORBA/Object:1.0") == 0)
     return ACE_static_cast(PortableServer::Servant, this);
   return 0;
 }
 
-void POA_CORBA_Policy::_dispatch (TAO_ServerRequest &req, void *context, CORBA::Environment &ACE_TRY_ENV)
+void POA_CORBA::Policy::_dispatch (TAO_ServerRequest &req, void *context, CORBA::Environment &ACE_TRY_ENV)
 {
   this->synchronous_upcall_dispatch(req, context, this, ACE_TRY_ENV);
 }
 
-const char* POA_CORBA_Policy::_interface_repository_id (void) const
+const char* POA_CORBA::Policy::_interface_repository_id (void) const
 {
   return "IDL:omg.org/CORBA_Policy:1.0";
 }
 
 CORBA_Policy*
-POA_CORBA_Policy::_this (CORBA_Environment &ACE_TRY_ENV)
+POA_CORBA::Policy::_this (CORBA_Environment &ACE_TRY_ENV)
 {
   TAO_Stub *stub = this->_create_stub (ACE_TRY_ENV);
   ACE_CHECK_RETURN (0);
@@ -513,7 +517,7 @@
           ::CORBA_Policy_ptr retval = 0;
           ACE_NEW_RETURN (
               retval,
-              _tao_thru_poa_collocated_CORBA_Policy (stub),
+              POA_CORBA::_tao_thru_poa_collocated_CORBA_Policy (stub),
               0
             );
           return retval;
@@ -533,14 +537,14 @@
     }
 }
 
-_tao_thru_poa_collocated_CORBA_Policy::_tao_thru_poa_collocated_CORBA_Policy (
+POA_CORBA::_tao_thru_poa_collocated_CORBA_Policy::_tao_thru_poa_collocated_CORBA_Policy (
   TAO_Stub *stub
 )
   :  CORBA_Object (stub, 0, 1)
 {
 }
 
-CORBA::Boolean _tao_thru_poa_collocated_CORBA_Policy::_is_a(
+CORBA::Boolean POA_CORBA::_tao_thru_poa_collocated_CORBA_Policy::_is_a(
     const CORBA::Char *logical_type_id,
     CORBA_Environment &ACE_TRY_ENV
   )
@@ -556,7 +560,7 @@
     );
   ACE_CHECK_RETURN (0);
   return ACE_reinterpret_cast (
-      POA_CORBA_Policy_ptr,
+      POA_CORBA::Policy_ptr,
       servant_upcall.servant ()->_downcast (
           "IDL:omg.org/CORBA_Policy:1.0"
         )
@@ -564,7 +568,7 @@
 }
 
 
-CORBA::Boolean _tao_thru_poa_collocated_CORBA_Policy::_non_existent(
+CORBA::Boolean POA_CORBA::_tao_thru_poa_collocated_CORBA_Policy::_non_existent(
     CORBA_Environment &ACE_TRY_ENV
   )
 
@@ -579,7 +583,7 @@
     );
   ACE_CHECK_RETURN (0);
   return ACE_reinterpret_cast (
-      POA_CORBA_Policy_ptr,
+      POA_CORBA::Policy_ptr,
       servant_upcall.servant ()->_downcast (
           "IDL:omg.org/CORBA_Policy:1.0"
         )
@@ -587,7 +591,7 @@
 }
 
 
-CORBA::PolicyType _tao_thru_poa_collocated_CORBA_Policy::policy_type  (
+CORBA::PolicyType POA_CORBA::_tao_thru_poa_collocated_CORBA_Policy::policy_type  (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -606,7 +610,7 @@
     );
   ACE_CHECK_RETURN  (_tao_retval);
   return ACE_reinterpret_cast (
-      POA_CORBA_Policy_ptr,
+      POA_CORBA::Policy_ptr,
       servant_upcall.servant ()->_downcast (
           "IDL:omg.org/CORBA_Policy:1.0"
         )
@@ -616,7 +620,7 @@
 
 }
 
-CORBA_Policy_ptr _tao_thru_poa_collocated_CORBA_Policy::copy  (
+CORBA_Policy_ptr POA_CORBA::_tao_thru_poa_collocated_CORBA_Policy::copy  (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -635,7 +639,7 @@
     );
   ACE_CHECK_RETURN (0);
   return ACE_reinterpret_cast (
-      POA_CORBA_Policy_ptr,
+      POA_CORBA::Policy_ptr,
       servant_upcall.servant ()->_downcast (
           "IDL:omg.org/CORBA_Policy:1.0"
         )
@@ -645,7 +649,7 @@
 
 }
 
-void _tao_thru_poa_collocated_CORBA_Policy::destroy  (
+void POA_CORBA::_tao_thru_poa_collocated_CORBA_Policy::destroy  (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -662,7 +666,7 @@
     );
   ACE_CHECK;
   ACE_reinterpret_cast (
-      POA_CORBA_Policy_ptr,
+      POA_CORBA::Policy_ptr,
       servant_upcall.servant ()->_downcast (
           "IDL:omg.org/CORBA_Policy:1.0"
         )
@@ -671,6 +675,3 @@
     );
   return;
 }
-
-
-
