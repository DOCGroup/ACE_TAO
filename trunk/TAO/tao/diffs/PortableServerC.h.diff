--- orig/PortableServerC.h	Wed Apr 18 01:09:27 2001
+++ PortableServerC.h	Wed Apr 18 00:45:14 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -23,13 +23,17 @@
 #define _TAO_IDL_ORIG_PORTABLESERVERC_H_
 
 #include "ace/pre.h"
-#include "tao/corba.h"
+#include "portableserver_export.h"
+#include "tao/corbafwd.h"
 
 #if !defined (ACE_LACKS_PRAGMA_ONCE)
 # pragma once
 #endif /* ACE_LACKS_PRAGMA_ONCE */
 
-#include "tao/corbafwd.h"
+#include "tao/CurrentC.h"
+#include "tao/PolicyC.h"
+#include "tao/Typecode.h"
+#include "tao/Any.h"
 
 #if defined (TAO_EXPORT_MACRO)
 #undef TAO_EXPORT_MACRO
@@ -54,8 +58,22 @@
 #pragma option push -w-rvl -w-rch -w-ccc -w-inl
 #endif /* __BORLANDC__ */
 
+class TAO_ServantBase;
+class TAO_ServantBase_var;
+class TAO_RefCountServantBase;
+class TAO_Local_ServantBase;
+class TAO_DynamicImplementation;
+
 TAO_NAMESPACE  PortableServer
 {
+  typedef TAO_ServantBase ServantBase;
+  typedef TAO_ServantBase_var ServantBase_var;
+  typedef TAO_RefCountServantBase RefCountServantBase;
+  typedef ServantBase *Servant;
+
+  typedef TAO_Local_ServantBase LocalServantBase;
+  typedef TAO_DynamicImplementation DynamicImplementation;
+
   class POA;
   
 #if !defined (_PORTABLESERVER_POA___PTR_CH_)
@@ -403,6 +421,8 @@
   TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_ObjectId;
 
 
+#if (TAO_HAS_MINIMUM_CORBA == 0)
+
 #if !defined (_PORTABLESERVER_FORWARDREQUEST_CH_)
 #define _PORTABLESERVER_FORWARDREQUEST_CH_
 
@@ -452,6 +472,8 @@
 
 #endif /* end #if !defined */
 
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
+
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong THREAD_POLICY_ID;
 
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong LIFESPAN_POLICY_ID;
@@ -471,6 +493,9 @@
         ORB_CTRL_MODEL,
         SINGLE_THREAD_MODEL    
   };
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
   typedef ThreadPolicyValue &ThreadPolicyValue_out;
   TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_ThreadPolicyValue;
 
@@ -603,6 +628,8 @@
 
 #endif /* end #if !defined */
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
   enum LifespanPolicyValue
   {
         TRANSIENT,
@@ -1019,6 +1046,9 @@
         IMPLICIT_ACTIVATION,
         NO_IMPLICIT_ACTIVATION    
   };
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
   typedef ImplicitActivationPolicyValue &ImplicitActivationPolicyValue_out;
   TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_ImplicitActivationPolicyValue;
 
@@ -1151,11 +1181,16 @@
 
 #endif /* end #if !defined */
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
   enum ServantRetentionPolicyValue
   {
         RETAIN,
         NON_RETAIN    
   };
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
   typedef ServantRetentionPolicyValue &ServantRetentionPolicyValue_out;
   TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_ServantRetentionPolicyValue;
 
@@ -1288,12 +1323,17 @@
 
 #endif /* end #if !defined */
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
   enum RequestProcessingPolicyValue
   {
         USE_ACTIVE_OBJECT_MAP_ONLY,
         USE_DEFAULT_SERVANT,
         USE_SERVANT_MANAGER    
   };
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
   typedef RequestProcessingPolicyValue &RequestProcessingPolicyValue_out;
   TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_RequestProcessingPolicyValue;
 
@@ -1427,6 +1467,8 @@
 #endif /* end #if !defined */
 
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 #if !defined (_PORTABLESERVER_POAMANAGER___PTR_CH_)
 #define _PORTABLESERVER_POAMANAGER___PTR_CH_
 
@@ -1589,6 +1631,8 @@
         PortableServer::POAManager::AdapterInactive
       )) = 0;
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
     virtual void hold_requests (
         CORBA::Boolean wait_for_completion,
         CORBA::Environment &ACE_TRY_ENV = 
@@ -1620,6 +1664,8 @@
         PortableServer::POAManager::AdapterInactive
       )) = 0;
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
     virtual PortableServer::POAManager::State get_state (
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
@@ -1645,6 +1691,8 @@
 #endif /* end #if !defined */
 
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 #if !defined (_PORTABLESERVER_ADAPTERACTIVATOR___PTR_CH_)
 #define _PORTABLESERVER_ADAPTERACTIVATOR___PTR_CH_
 
@@ -2003,14 +2051,19 @@
 
     virtual PortableServer::Servant incarnate (
         const PortableServer::ObjectId & oid,
-        PortableServer::POA_ptr adapter,
-        CORBA::Environment &ACE_TRY_ENV = 
-          TAO_default_environment ()
+        PortableServer::POA_ptr adapter
+      TAO_ENV_ARG_DECL_WITH_DEFAULTS
       )
+#if (TAO_HAS_MINIMUM_CORBA == 0)
       ACE_THROW_SPEC ((
         CORBA::SystemException,
         PortableServer::ForwardRequest
       )) = 0;
+#else
+    ACE_THROW_SPEC ((
+      CORBA::SystemException
+    )) = 0;
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
 
     virtual void etherealize (
         const PortableServer::ObjectId & oid,
@@ -2124,6 +2177,9 @@
 class TAO_PortableServer_Export ServantLocator: public virtual ServantManager
   {
   public:
+
+    typedef void *Cookie;
+
   #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
     typedef ServantLocator_ptr _ptr_type;
     typedef ServantLocator_var _var_type;
@@ -2150,23 +2206,27 @@
         const PortableServer::ObjectId & oid,
         PortableServer::POA_ptr adapter,
         const char * operation,
-        PortableServer::ServantLocator::Cookie & the_cookie,
-        CORBA::Environment &ACE_TRY_ENV = 
-          TAO_default_environment ()
+        PortableServer::ServantLocator::Cookie & the_cookie
+        TAO_ENV_ARG_DECL_WITH_DEFAULTS
       )
+#if (TAO_HAS_MINIMUM_CORBA == 0)
       ACE_THROW_SPEC ((
         CORBA::SystemException,
         PortableServer::ForwardRequest
       )) = 0;
+#else
+      ACE_THROW_SPEC ((
+        CORBA::SystemException
+      )) = 0;
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
 
     virtual void postinvoke (
         const PortableServer::ObjectId & oid,
         PortableServer::POA_ptr adapter,
         const char * operation,
         PortableServer::ServantLocator::Cookie the_cookie,
-        PortableServer::Servant the_servant,
-        CORBA::Environment &ACE_TRY_ENV = 
-          TAO_default_environment ()
+        PortableServer::Servant the_servant
+        TAO_ENV_ARG_DECL_WITH_DEFAULTS
       )
       ACE_THROW_SPEC ((
         CORBA::SystemException
@@ -2189,6 +2249,8 @@
 #endif /* end #if !defined */
 
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 #if !defined (_PORTABLESERVER_POA_CH_)
 #define _PORTABLESERVER_POA_CH_
 
@@ -2345,6 +2407,8 @@
 #endif /* end #if !defined */
 
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 #if !defined (_PORTABLESERVER_POA_NOSERVANT_CH_)
 #define _PORTABLESERVER_POA_NOSERVANT_CH_
 
@@ -2386,6 +2450,8 @@
 #endif /* end #if !defined */
 
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 #if !defined (_PORTABLESERVER_POA_OBJECTALREADYACTIVE_CH_)
 #define _PORTABLESERVER_POA_OBJECTALREADYACTIVE_CH_
 
@@ -2665,6 +2731,8 @@
         CORBA::SystemException
       )) = 0;
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
     virtual PortableServer::ThreadPolicy_ptr create_thread_policy (
         PortableServer::ThreadPolicyValue value,
         CORBA::Environment &ACE_TRY_ENV = 
@@ -2674,6 +2742,8 @@
         CORBA::SystemException
       )) = 0;
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
     virtual PortableServer::LifespanPolicy_ptr create_lifespan_policy (
         PortableServer::LifespanPolicyValue value,
         CORBA::Environment &ACE_TRY_ENV = 
@@ -2701,6 +2771,8 @@
         CORBA::SystemException
       )) = 0;
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
     virtual PortableServer::ImplicitActivationPolicy_ptr create_implicit_activation_policy (
         PortableServer::ImplicitActivationPolicyValue value,
         CORBA::Environment &ACE_TRY_ENV = 
@@ -2728,6 +2800,8 @@
         CORBA::SystemException
       )) = 0;
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
     virtual char * the_name (
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
@@ -2760,6 +2834,8 @@
         CORBA::SystemException
       )) = 0;
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
     virtual PortableServer::AdapterActivator_ptr the_activator (
         CORBA::Environment &ACE_TRY_ENV = 
           TAO_default_environment ()
@@ -2816,6 +2892,8 @@
         PortableServer::POA::WrongPolicy
       )) = 0;
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
     virtual PortableServer::ObjectId * activate_object (
         PortableServer::Servant p_servant,
         CORBA::Environment &ACE_TRY_ENV = 
@@ -3136,6 +3214,11 @@
 #endif /* end #if !defined */
 
 
+  TAO_NAMESPACE_STORAGE_CLASS char *ObjectId_to_string (const PortableServer::ObjectId &id);
+  TAO_NAMESPACE_STORAGE_CLASS CORBA::WChar *ObjectId_to_wstring (const PortableServer::ObjectId &id);
+  TAO_NAMESPACE_STORAGE_CLASS PortableServer::ObjectId *string_to_ObjectId (const char *id);
+  TAO_NAMESPACE_STORAGE_CLASS PortableServer::ObjectId *wstring_to_ObjectId (const CORBA::WChar *id);
+
 }
 TAO_NAMESPACE_CLOSE // module PortableServer
 
@@ -3143,18 +3226,32 @@
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::ObjectId*); // noncopying version
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::ObjectId *&); // deprecated
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, const PortableServer::ObjectId *&);
+
+#if (TAO_HAS_MINIMUM_CORBA == 0)
+
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, const PortableServer::ForwardRequest &); // copying version
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::ForwardRequest*); // noncopying version
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::ForwardRequest *&); // deprecated
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, const PortableServer::ForwardRequest *&);
+
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::ThreadPolicyValue);
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::ThreadPolicyValue &);
+
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::LifespanPolicyValue);
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::LifespanPolicyValue &);
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::IdUniquenessPolicyValue);
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::IdUniquenessPolicyValue &);
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::IdAssignmentPolicyValue);
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::IdAssignmentPolicyValue &);
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::ImplicitActivationPolicyValue);
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::ImplicitActivationPolicyValue &);
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::ServantRetentionPolicyValue);
@@ -3162,6 +3259,8 @@
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::RequestProcessingPolicyValue);
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::RequestProcessingPolicyValue &);
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 #ifndef __ACE_INLINE__
 
 
@@ -3179,23 +3278,37 @@
 
 #endif /* _TAO_CDR_OP_PortableServer_ObjectId_H_ */
 
+#if (TAO_HAS_MINIMUM_CORBA == 0)
+
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::ForwardRequest &);
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::ForwardRequest &);
 
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::ThreadPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::ThreadPolicyValue &);
+
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::LifespanPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::LifespanPolicyValue &);
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::IdUniquenessPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::IdUniquenessPolicyValue &);
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::IdAssignmentPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::IdAssignmentPolicyValue &);
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::ImplicitActivationPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::ImplicitActivationPolicyValue &);
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::ServantRetentionPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::ServantRetentionPolicyValue &);
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::RequestProcessingPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::RequestProcessingPolicyValue &);
+
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
 
 #endif /* __ACE_INLINE__ */
 
