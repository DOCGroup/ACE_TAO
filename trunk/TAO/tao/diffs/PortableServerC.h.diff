--- PortableServerC.h	Tue Jul 11 01:25:50 2000
+++ PortableServerC.h.mod	Tue Jul 11 01:16:35 2000
@@ -11,7 +11,7 @@
 #define _TAO_IDL_PORTABLESERVERC_H_
 
 #include "ace/pre.h"
-#include "tao/corba.h"
+#include "tao/corbafwd.h"
 
 #if defined (ACE_HAS_MINIMUM_IOSTREAMH_INCLUSION)
 #include "ace/streams.h"
@@ -21,7 +21,10 @@
 # pragma once
 #endif /* ACE_LACKS_PRAGMA_ONCE */
 
-#include "tao/corbafwd.h"
+#include "tao/CurrentC.h"
+#include "tao/PolicyC.h"
+#include "tao/Typecode.h"
+#include "tao/Any.h"
 
 #if defined (TAO_EXPORT_MACRO)
 #undef TAO_EXPORT_MACRO
@@ -42,8 +45,22 @@
 #pragma warning(disable:4250)
 #endif /* _MSC_VER */
 
+class TAO_ServantBase;
+class TAO_ServantBase_var;
+class TAO_RefCountServantBase;
+class TAO_Local_ServantBase;
+class TAO_DynamicImplementation;
+
 TAO_NAMESPACE  PortableServer
 {
+  typedef TAO_ServantBase ServantBase;
+  typedef TAO_ServantBase_var ServantBase_var;
+  typedef TAO_RefCountServantBase RefCountServantBase;
+  typedef ServantBase *Servant;
+
+  typedef TAO_Local_ServantBase LocalServantBase;
+  typedef TAO_DynamicImplementation DynamicImplementation;
+
   class POA;
   
 #if !defined (_PORTABLESERVER_POA___PTR_CH_)
@@ -297,13 +314,13 @@
 #endif /* ! __GNUC__ || g++ >= 2.8 */
 
 
-#if (TAO_NO_COPY_OCTET_SEQUENCES == 1)
+#if defined(TAO_NO_COPY_OCTET_SEQUENCES)
     ObjectId (
         CORBA::ULong length,
         const ACE_Message_Block* mb
       )
       : TAO_Unbounded_Sequence<CORBA::Octet> (length, mb) {}
-#endif /* TAO_NO_COPY_OCTET_SEQUENCE == 1 */
+#endif /* TAO_NO_COPY_OCTET_SEQUENCE */
 
   };
   
@@ -380,6 +397,8 @@
   TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_ObjectId;
 
 
+#if (TAO_HAS_MINIMUM_CORBA == 0)
+
 #if !defined (_PORTABLESERVER_FORWARDREQUEST_CH_)
 #define _PORTABLESERVER_FORWARDREQUEST_CH_
 
@@ -421,6 +440,8 @@
 
 #endif /* end #if !defined */
 
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
+
 TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong THREAD_POLICY_ID;
 
 TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong LIFESPAN_POLICY_ID;
@@ -435,6 +456,8 @@
 
 TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong REQUEST_PROCESSING_POLICY_ID;
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 enum ThreadPolicyValue
 {
     ORB_CTRL_MODEL,
@@ -564,6 +587,8 @@
 
 #endif /* end #if !defined */
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 enum LifespanPolicyValue
 {
     TRANSIENT,
@@ -951,6 +976,8 @@
 
 #endif /* end #if !defined */
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 enum ImplicitActivationPolicyValue
 {
     IMPLICIT_ACTIVATION,
@@ -1080,12 +1107,17 @@
 
 #endif /* end #if !defined */
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 enum ServantRetentionPolicyValue
 {
     RETAIN,
     NON_RETAIN,
     ServantRetentionPolicyValue_TAO_ENUM_32BIT_ENFORCER = 0x7FFFFFFF
 };
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 typedef ServantRetentionPolicyValue &ServantRetentionPolicyValue_out;
 TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_ServantRetentionPolicyValue;
 
@@ -1209,6 +1241,8 @@
 
 #endif /* end #if !defined */
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 enum RequestProcessingPolicyValue
 {
     USE_ACTIVE_OBJECT_MAP_ONLY,
@@ -1216,6 +1250,9 @@
     USE_SERVANT_MANAGER,
     RequestProcessingPolicyValue_TAO_ENUM_32BIT_ENFORCER = 0x7FFFFFFF
 };
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 typedef RequestProcessingPolicyValue &RequestProcessingPolicyValue_out;
 TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_RequestProcessingPolicyValue;
 
@@ -1339,6 +1376,7 @@
 
 #endif /* end #if !defined */
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
 
 #if !defined (_PORTABLESERVER_POAMANAGER___PTR_CH_)
 #define _PORTABLESERVER_POAMANAGER___PTR_CH_
@@ -1489,6 +1527,8 @@
     PortableServer::POAManager::AdapterInactive
   )) = 0;
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 virtual void hold_requests (
     CORBA::Boolean wait_for_completion,
     CORBA::Environment &ACE_TRY_ENV = 
@@ -1520,6 +1560,8 @@
     PortableServer::POAManager::AdapterInactive
   )) = 0;
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 virtual PortableServer::POAManager::State get_state (
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
@@ -1544,6 +1586,8 @@
 #endif /* end #if !defined */
 
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 #if !defined (_PORTABLESERVER_ADAPTERACTIVATOR___PTR_CH_)
 #define _PORTABLESERVER_ADAPTERACTIVATOR___PTR_CH_
 
@@ -1876,23 +1920,27 @@
 
   virtual PortableServer::Servant incarnate (
       const PortableServer::ObjectId & oid,
-      PortableServer::POA_ptr adapter,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
+      PortableServer::POA_ptr adapter
+      TAO_ENV_ARG_DECL_WITH_DEFAULTS
     )
+#if (TAO_HAS_MINIMUM_CORBA == 0)
     ACE_THROW_SPEC ((
       CORBA::SystemException,
       PortableServer::ForwardRequest
     )) = 0;
+#else
+    ACE_THROW_SPEC ((
+      CORBA::SystemException
+    )) = 0;
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
 
   virtual void etherealize (
       const PortableServer::ObjectId & oid,
       PortableServer::POA_ptr adapter,
       PortableServer::Servant serv,
       CORBA::Boolean cleanup_in_progress,
-      CORBA::Boolean remaining_activations,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
+      CORBA::Boolean remaining_activations
+      TAO_ENV_ARG_DECL_WITH_DEFAULTS
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
@@ -1988,6 +2036,9 @@
 class TAO_Export ServantLocator: public virtual ServantManager
 {
 public:
+
+    typedef void *Cookie;
+
 #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
   typedef ServantLocator_ptr _ptr_type;
   typedef ServantLocator_var _var_type;
@@ -2014,23 +2065,27 @@
       const PortableServer::ObjectId & oid,
       PortableServer::POA_ptr adapter,
       const char * operation,
-      PortableServer::ServantLocator::Cookie & the_cookie,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
+      PortableServer::ServantLocator::Cookie & the_cookie
+      TAO_ENV_ARG_DECL_WITH_DEFAULTS
     )
+#if (TAO_HAS_MINIMUM_CORBA == 0)
     ACE_THROW_SPEC ((
       CORBA::SystemException,
       PortableServer::ForwardRequest
     )) = 0;
+#else
+    ACE_THROW_SPEC ((
+      CORBA::SystemException
+    )) = 0;
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
 
   virtual void postinvoke (
       const PortableServer::ObjectId & oid,
       PortableServer::POA_ptr adapter,
       const char * operation,
       PortableServer::ServantLocator::Cookie the_cookie,
-      PortableServer::Servant the_servant,
-      CORBA::Environment &ACE_TRY_ENV = 
-        TAO_default_environment ()
+      PortableServer::Servant the_servant
+      TAO_ENV_ARG_DECL_WITH_DEFAULTS
     )
     ACE_THROW_SPEC ((
       CORBA::SystemException
@@ -2052,6 +2107,8 @@
 #endif /* end #if !defined */
 
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 #if !defined (_PORTABLESERVER_POA___PTR_CH_)
 #define _PORTABLESERVER_POA___PTR_CH_
 
@@ -2258,6 +2315,8 @@
 #endif /* end #if !defined */
 
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 #if !defined (_PORTABLESERVER_POA_NOSERVANT_CH_)
 #define _PORTABLESERVER_POA_NOSERVANT_CH_
 
@@ -2292,6 +2351,7 @@
 
 #endif /* end #if !defined */
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
 
 #if !defined (_PORTABLESERVER_POA_OBJECTALREADYACTIVE_CH_)
 #define _PORTABLESERVER_POA_OBJECTALREADYACTIVE_CH_
@@ -2536,6 +2596,8 @@
     CORBA::SystemException
   )) = 0;
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 virtual PortableServer::ThreadPolicy_ptr create_thread_policy (
     PortableServer::ThreadPolicyValue value,
     CORBA::Environment &ACE_TRY_ENV = 
@@ -2545,6 +2607,8 @@
     CORBA::SystemException
   )) = 0;
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 virtual PortableServer::LifespanPolicy_ptr create_lifespan_policy (
     PortableServer::LifespanPolicyValue value,
     CORBA::Environment &ACE_TRY_ENV = 
@@ -2572,6 +2636,8 @@
     CORBA::SystemException
   )) = 0;
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 virtual PortableServer::ImplicitActivationPolicy_ptr create_implicit_activation_policy (
     PortableServer::ImplicitActivationPolicyValue value,
     CORBA::Environment &ACE_TRY_ENV = 
@@ -2599,6 +2665,8 @@
     CORBA::SystemException
   )) = 0;
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 virtual char * the_name (
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
@@ -2631,6 +2699,8 @@
     CORBA::SystemException
   )) = 0;
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 virtual PortableServer::AdapterActivator_ptr the_activator (
     CORBA::Environment &ACE_TRY_ENV = 
       TAO_default_environment ()
@@ -2687,6 +2757,8 @@
     PortableServer::POA::WrongPolicy
   )) = 0;
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 virtual PortableServer::ObjectId * activate_object (
     PortableServer::Servant p_servant,
     CORBA::Environment &ACE_TRY_ENV = 
@@ -2989,6 +3061,10 @@
 
 #endif /* end #if !defined */
 
+  TAO_NAMESPACE_STORAGE_CLASS char *ObjectId_to_string (const PortableServer::ObjectId &id);
+  TAO_NAMESPACE_STORAGE_CLASS CORBA::WChar *ObjectId_to_wstring (const PortableServer::ObjectId &id);
+  TAO_NAMESPACE_STORAGE_CLASS PortableServer::ObjectId *string_to_ObjectId (const char *id);
+  TAO_NAMESPACE_STORAGE_CLASS PortableServer::ObjectId *wstring_to_ObjectId (const CORBA::WChar *id);
 
 }
 TAO_NAMESPACE_CLOSE // module PortableServer
@@ -2997,18 +3073,32 @@
 TAO_Export void operator<<= (CORBA::Any &, PortableServer::ObjectId*); // noncopying version
 TAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::ObjectId *&); // deprecated
 TAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const PortableServer::ObjectId *&);
+
+#if (TAO_HAS_MINIMUM_CORBA == 0)
+
 TAO_Export void operator<<= (CORBA::Any &, const PortableServer::ForwardRequest &); // copying version
 TAO_Export void operator<<= (CORBA::Any &, PortableServer::ForwardRequest*); // noncopying version
 TAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::ForwardRequest *&); // deprecated
 TAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const PortableServer::ForwardRequest *&);
+
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 TAO_Export void operator<<= (CORBA::Any &, PortableServer::ThreadPolicyValue);
 TAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::ThreadPolicyValue &);
+
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 TAO_Export void operator<<= (CORBA::Any &, PortableServer::LifespanPolicyValue);
 TAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::LifespanPolicyValue &);
 TAO_Export void operator<<= (CORBA::Any &, PortableServer::IdUniquenessPolicyValue);
 TAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::IdUniquenessPolicyValue &);
 TAO_Export void operator<<= (CORBA::Any &, PortableServer::IdAssignmentPolicyValue);
 TAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::IdAssignmentPolicyValue &);
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 TAO_Export void operator<<= (CORBA::Any &, PortableServer::ImplicitActivationPolicyValue);
 TAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::ImplicitActivationPolicyValue &);
 TAO_Export void operator<<= (CORBA::Any &, PortableServer::ServantRetentionPolicyValue);
@@ -3016,6 +3106,8 @@
 TAO_Export void operator<<= (CORBA::Any &, PortableServer::RequestProcessingPolicyValue);
 TAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::RequestProcessingPolicyValue &);
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 #ifndef __ACE_INLINE__
 
 
@@ -3033,28 +3125,47 @@
 
 #endif /* _TAO_CDR_OP_PortableServer_ObjectId_H_ */
 
+#if (TAO_HAS_MINIMUM_CORBA == 0)
+
 TAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::ForwardRequest &);
 TAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::ForwardRequest &);
 
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
+
 # if !defined (ACE_LACKS_IOSTREAM_TOTALLY)
 
+#if (TAO_HAS_MINIMUM_CORBA == 0)
+
 TAO_Export ostream& operator<< (ostream &, const PortableServer::ForwardRequest &);
 
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
+
 # endif /* ACE_LACKS_IOSTREAM_TOTALLY */
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 TAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::ThreadPolicyValue &); // 
 TAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::ThreadPolicyValue &);
+
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 TAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::LifespanPolicyValue &); // 
 TAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::LifespanPolicyValue &);
 TAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::IdUniquenessPolicyValue &); // 
 TAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::IdUniquenessPolicyValue &);
 TAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::IdAssignmentPolicyValue &); // 
 TAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::IdAssignmentPolicyValue &);
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 TAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::ImplicitActivationPolicyValue &); // 
 TAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::ImplicitActivationPolicyValue &);
 TAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::ServantRetentionPolicyValue &); // 
 TAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::ServantRetentionPolicyValue &);
 TAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::RequestProcessingPolicyValue &); // 
 TAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::RequestProcessingPolicyValue &);
+
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
 
 #endif /* __ACE_INLINE__ */
 
