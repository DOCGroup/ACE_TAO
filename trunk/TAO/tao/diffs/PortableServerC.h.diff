--- PortableServerC.h.orig	Thu Jan 10 08:52:03 2002
+++ PortableServerC.h	Sat Jan 12 15:23:10 2002
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -23,13 +23,17 @@
 #define _TAO_IDL_PORTABLESERVERC_H_
 
 #include "ace/pre.h"
-#include "tao/corba.h"
+#include "portableserver_export.h"
+#include "tao/corbafwd.h"
 
 #if !defined (ACE_LACKS_PRAGMA_ONCE)
 # pragma once
 #endif /* ACE_LACKS_PRAGMA_ONCE */
 
-#include "tao/corbafwd.h"
+#include "tao/CurrentC.h"
+#include "tao/PolicyC.h"
+#include "tao/Typecode.h"
+#include "tao/Any.h"
 
 #if defined (TAO_EXPORT_MACRO)
 #undef TAO_EXPORT_MACRO
@@ -54,8 +58,23 @@
 #pragma option push -w-rvl -w-rch -w-ccc -w-inl
 #endif /* __BORLANDC__ */
 
+class TAO_ServantBase;
+class TAO_ServantBase_var;
+class TAO_RefCountServantBase;
+class TAO_Local_ServantBase;
+class TAO_DynamicImplementation;
+class TAO_POA;
+
 TAO_NAMESPACE  PortableServer
 {
+  typedef TAO_ServantBase ServantBase;
+  typedef TAO_ServantBase_var ServantBase_var;
+  typedef TAO_RefCountServantBase RefCountServantBase;
+  typedef ServantBase *Servant;
+
+  typedef TAO_Local_ServantBase LocalServantBase;
+  typedef TAO_DynamicImplementation DynamicImplementation;
+
   class POA;
   
 #if !defined (_PORTABLESERVER_POA___PTR_CH_)
@@ -421,6 +440,7 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ObjectId;
   
+#if (TAO_HAS_MINIMUM_CORBA == 0)
   
 #if !defined (_PORTABLESERVER_FORWARDREQUEST_CH_)
 #define _PORTABLESERVER_FORWARDREQUEST_CH_
@@ -678,6 +698,8 @@
   
 #endif /* end #if !defined */
   
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
+
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_IDs;
   
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong THREAD_POLICY_ID;
@@ -700,6 +722,8 @@
     SINGLE_THREAD_MODEL
   };
   
+#if (TAO_HAS_MINIMUM_POA == 0)
+
   typedef ThreadPolicyValue &ThreadPolicyValue_out;
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ThreadPolicyValue;
   
@@ -839,6 +863,8 @@
   
 #endif /* end #if !defined */
   
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+  
   enum LifespanPolicyValue
   {
     TRANSIENT,
@@ -1280,6 +1306,8 @@
     NO_IMPLICIT_ACTIVATION
   };
   
+#if (TAO_HAS_MINIMUM_POA == 0)
+
   typedef ImplicitActivationPolicyValue &ImplicitActivationPolicyValue_out;
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ImplicitActivationPolicyValue;
   
@@ -1419,12 +1447,16 @@
   
 #endif /* end #if !defined */
   
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
   enum ServantRetentionPolicyValue
   {
     RETAIN,
     NON_RETAIN
   };
   
+#if (TAO_HAS_MINIMUM_POA == 0)
+
   typedef ServantRetentionPolicyValue &ServantRetentionPolicyValue_out;
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ServantRetentionPolicyValue;
   
@@ -1564,6 +1596,8 @@
   
 #endif /* end #if !defined */
   
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
   enum RequestProcessingPolicyValue
   {
     USE_ACTIVE_OBJECT_MAP_ONLY,
@@ -1571,6 +1605,8 @@
     USE_SERVANT_MANAGER
   };
   
+#if (TAO_HAS_MINIMUM_POA == 0)
+
   typedef RequestProcessingPolicyValue &RequestProcessingPolicyValue_out;
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RequestProcessingPolicyValue;
   
@@ -1710,6 +1746,7 @@
   
 #endif /* end #if !defined */
   
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
   
 #if !defined (_PORTABLESERVER_POAMANAGER___PTR_CH_)
 #define _PORTABLESERVER_POAMANAGER___PTR_CH_
@@ -1880,6 +1917,8 @@
         PortableServer::POAManager::AdapterInactive
       )) = 0;
     
+#if (TAO_HAS_MINIMUM_POA == 0)
+    
     virtual void hold_requests (
         CORBA::Boolean wait_for_completion TAO_ENV_ARG_DECL_WITH_DEFAULTS
       )
@@ -1905,6 +1944,8 @@
         PortableServer::POAManager::AdapterInactive
       )) = 0;
     
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
     virtual ::PortableServer::POAManager::State get_state (
         TAO_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
       )
@@ -1929,6 +1970,7 @@
   
 #endif /* end #if !defined */
   
+#if (TAO_HAS_MINIMUM_POA == 0)
   
 #if !defined (_PORTABLESERVER_ADAPTERACTIVATOR___PTR_CH_)
 #define _PORTABLESERVER_ADAPTERACTIVATOR___PTR_CH_
@@ -2311,10 +2353,16 @@
         const PortableServer::ObjectId & oid,
         PortableServer::POA_ptr adapter TAO_ENV_ARG_DECL_WITH_DEFAULTS
       )
+#if (TAO_HAS_MINIMUM_CORBA == 0)
       ACE_THROW_SPEC ((
         CORBA::SystemException,
         PortableServer::ForwardRequest
       )) = 0;
+#else
+      ACE_THROW_SPEC ((
+        CORBA::SystemException
+      )) = 0;
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
     
     virtual void etherealize (
         const PortableServer::ObjectId & oid,
@@ -2431,6 +2479,9 @@
     : public virtual PortableServer::ServantManager
   {
   public:
+
+    typedef void *Cookie;
+
   #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
     typedef ServantLocator_ptr _ptr_type;
     typedef ServantLocator_var _var_type;
@@ -2462,10 +2513,16 @@
         const char * operation,
         PortableServer::ServantLocator::Cookie & the_cookie TAO_ENV_ARG_DECL_WITH_DEFAULTS
       )
+#if (TAO_HAS_MINIMUM_CORBA == 0)
       ACE_THROW_SPEC ((
         CORBA::SystemException,
         PortableServer::ForwardRequest
       )) = 0;
+#else
+      ACE_THROW_SPEC ((
+        CORBA::SystemException
+      )) = 0;
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */    
     
     virtual void postinvoke (
         const PortableServer::ObjectId & oid,
@@ -2574,6 +2631,7 @@
   
 #endif /* end #if !defined */
   
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
   
 #if !defined (_PORTABLESERVER_POA_CH_)
 #define _PORTABLESERVER_POA_CH_
@@ -2607,6 +2665,10 @@
         return (POA_ptr)0;
       }
     
+    virtual TAO_POA* _tao_poa_downcast(void) 
+      { 
+        return 0; 
+      }
     
 #if !defined (_PORTABLESERVER_POA_ADAPTERALREADYEXISTS_CH_)
 #define _PORTABLESERVER_POA_ADAPTERALREADYEXISTS_CH_
@@ -2734,6 +2796,7 @@
 
 #endif /* end #if !defined */
     
+#if (TAO_HAS_MINIMUM_POA == 0)
     
 #if !defined (_PORTABLESERVER_POA_NOSERVANT_CH_)
 #define _PORTABLESERVER_POA_NOSERVANT_CH_
@@ -2775,6 +2838,7 @@
 
 #endif /* end #if !defined */
     
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
     
 #if !defined (_PORTABLESERVER_POA_OBJECTALREADYACTIVE_CH_)
 #define _PORTABLESERVER_POA_OBJECTALREADYACTIVE_CH_
@@ -3049,6 +3113,8 @@
         CORBA::SystemException
       )) = 0;
     
+#if (TAO_HAS_MINIMUM_POA == 0)
+    
     virtual ::PortableServer::ThreadPolicy_ptr create_thread_policy (
         PortableServer::ThreadPolicyValue value TAO_ENV_ARG_DECL_WITH_DEFAULTS
       )
@@ -3056,6 +3122,8 @@
         CORBA::SystemException
       )) = 0;
     
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
     virtual ::PortableServer::LifespanPolicy_ptr create_lifespan_policy (
         PortableServer::LifespanPolicyValue value TAO_ENV_ARG_DECL_WITH_DEFAULTS
       )
@@ -3077,6 +3145,8 @@
         CORBA::SystemException
       )) = 0;
     
+#if (TAO_HAS_MINIMUM_POA == 0)
+
     virtual ::PortableServer::ImplicitActivationPolicy_ptr create_implicit_activation_policy (
         PortableServer::ImplicitActivationPolicyValue value TAO_ENV_ARG_DECL_WITH_DEFAULTS
       )
@@ -3098,6 +3168,8 @@
         CORBA::SystemException
       )) = 0;
     
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
     virtual char * the_name (
         TAO_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
       )
@@ -3126,6 +3198,8 @@
         CORBA::SystemException
       )) = 0;
     
+#if (TAO_HAS_MINIMUM_POA == 0)
+
     virtual ::PortableServer::AdapterActivator_ptr the_activator (
         TAO_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
       )
@@ -3173,6 +3247,8 @@
         PortableServer::POA::WrongPolicy
       )) = 0;
     
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
     virtual ::PortableServer::ObjectId * activate_object (
         PortableServer::Servant p_servant TAO_ENV_ARG_DECL_WITH_DEFAULTS
       )
@@ -3518,6 +3594,10 @@
   
 #endif /* end #if !defined */
   
+  TAO_NAMESPACE_STORAGE_CLASS char *ObjectId_to_string (const PortableServer::ObjectId &id);
+  TAO_NAMESPACE_STORAGE_CLASS CORBA::WChar *ObjectId_to_wstring (const PortableServer::ObjectId &id);
+  TAO_NAMESPACE_STORAGE_CLASS PortableServer::ObjectId *string_to_ObjectId (const char *id);
+  TAO_NAMESPACE_STORAGE_CLASS PortableServer::ObjectId *wstring_to_ObjectId (const CORBA::WChar *id);
   
 }
 TAO_NAMESPACE_CLOSE // module PortableServer
@@ -3526,10 +3606,16 @@
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::ObjectId*); // noncopying version
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::ObjectId *&); // deprecated
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, const PortableServer::ObjectId *&);
+
+#if (TAO_HAS_MINIMUM_CORBA == 0)
+
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, const PortableServer::ForwardRequest &); // copying version
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::ForwardRequest*); // noncopying version
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::ForwardRequest *&); // deprecated
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, const PortableServer::ForwardRequest *&);
+
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
+
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, const PortableServer::NotAGroupObject &); // copying version
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::NotAGroupObject*); // noncopying version
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::NotAGroupObject *&); // deprecated
@@ -3538,14 +3624,23 @@
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::IDs*); // noncopying version
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::IDs *&); // deprecated
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, const PortableServer::IDs *&);
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::ThreadPolicyValue);
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::ThreadPolicyValue &);
+
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::LifespanPolicyValue);
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::LifespanPolicyValue &);
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::IdUniquenessPolicyValue);
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::IdUniquenessPolicyValue &);
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::IdAssignmentPolicyValue);
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::IdAssignmentPolicyValue &);
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::ImplicitActivationPolicyValue);
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::ImplicitActivationPolicyValue &);
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::ServantRetentionPolicyValue);
@@ -3553,6 +3648,8 @@
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::RequestProcessingPolicyValue);
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::RequestProcessingPolicyValue &);
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 #ifndef __ACE_INLINE__
 
 
@@ -3570,9 +3667,13 @@
 
 #endif /* _TAO_CDR_OP_PortableServer_ObjectId_H_ */
 
+#if (TAO_HAS_MINIMUM_CORBA == 0)
+
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::ForwardRequest &);
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::ForwardRequest &);
 
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
+
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::NotAGroupObject &);
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::NotAGroupObject &);
 
@@ -3591,20 +3692,30 @@
 
 #endif /* _TAO_CDR_OP_PortableServer_IDs_H_ */
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::ThreadPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::ThreadPolicyValue &);
+
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::LifespanPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::LifespanPolicyValue &);
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::IdUniquenessPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::IdUniquenessPolicyValue &);
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::IdAssignmentPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::IdAssignmentPolicyValue &);
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::ImplicitActivationPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::ImplicitActivationPolicyValue &);
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::ServantRetentionPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::ServantRetentionPolicyValue &);
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::RequestProcessingPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::RequestProcessingPolicyValue &);
+
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
 
 #endif /* __ACE_INLINE__ */
 
