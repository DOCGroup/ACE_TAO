--- orig/TAOC.h	Tue Apr 17 00:03:03 2001
+++ TAOC.h	Tue Apr 17 00:58:39 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$ Id: TAOC.h,v 1.24 2000/06/28 03:47:12 marina Exp $ */
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -19,19 +19,33 @@
 // Information about TAO is available at:
 //     http://www.cs.wustl.edu/~schmidt/TAO.html
 
+// ******  Code generated by the The ACE ORB (TAO) IDL Compiler *******
+// TAO and the TAO IDL Compiler have been developed by the Center for
+// Distributed Object Computing at Washington University, St. Louis.
+//
+// Information about TAO is available at:
+//                 http://www.cs.wustl.edu/~schmidt/TAO.html
+
 #ifndef _TAO_IDL_ORIG_TAOC_H_
 #define _TAO_IDL_ORIG_TAOC_H_
-
 #include "ace/pre.h"
-#include "tao/corba.h"
+
+#include "tao/corbafwd.h"
 
 #if !defined (ACE_LACKS_PRAGMA_ONCE)
 # pragma once
 #endif /* ACE_LACKS_PRAGMA_ONCE */
 
-#include "tao/corbafwd.h"
-#include "PolicyC.h"
-#include "TimeBaseC.h"
+#if (TAO_HAS_CLIENT_PRIORITY_POLICY == 1 || \
+     TAO_HAS_BUFFERING_CONSTRAINT_POLICY == 1)
+
+#include "tao/PolicyC.h"
+#include "tao/TimeBaseC.h"
+
+#endif /* TAO_HAS_CLIENT_PRIORITY_POLICY == 1 ||
+          TAO_HAS_BUFFERING_CONSTRAINT_POLICY == 1 */
+
+#include "tao/Priority_Mapping_Manager.h"
 
 #if defined (TAO_EXPORT_MACRO)
 #undef TAO_EXPORT_MACRO
@@ -58,6 +72,19 @@
 
 TAO_NAMESPACE  TAO
 {
+
+#if (TAO_HAS_RT_CORBA == 1)
+
+  typedef TAO_Priority_Mapping_Manager PriorityMappingManager;
+  typedef TAO_Priority_Mapping_Manager *PriorityMappingManager_ptr;
+  typedef TAO_Priority_Mapping_Manager_var PriorityMappingManager_var;
+  typedef TAO_Priority_Mapping_Manager_out PriorityMappingManager_out;
+
+#endif /* TAO_HAS_RT_CORBA == 1 */
+
+
+#if (TAO_HAS_CLIENT_PRIORITY_POLICY == 1)
+
   typedef CORBA::Short PrioritySelectionMode;
   typedef CORBA::Short_out PrioritySelectionMode_out;
     TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_PrioritySelectionMode;
@@ -239,8 +266,7 @@
     virtual const char* _interface_repository_id (void) const;
 
   protected:
-    ClientPriorityPolicy ();
-    
+    ClientPriorityPolicy (void);
     virtual ~ClientPriorityPolicy (void);
   private:
     ClientPriorityPolicy (const ClientPriorityPolicy &);
@@ -250,6 +276,10 @@
 
 #endif /* end #if !defined */
 
+#endif /* TAO_HAS_CLIENT_PRIORITY_POLICY == 1 */
+
+#if (TAO_HAS_BUFFERING_CONSTRAINT_POLICY == 1)
+
   typedef CORBA::UShort BufferingConstraintMode;
   typedef CORBA::UShort_out BufferingConstraintMode_out;
     TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_BufferingConstraintMode;
@@ -434,8 +464,7 @@
     virtual const char* _interface_repository_id (void) const;
 
   protected:
-    BufferingConstraintPolicy ();
-    
+    BufferingConstraintPolicy (void);
     virtual ~BufferingConstraintPolicy (void);
   private:
     BufferingConstraintPolicy (const BufferingConstraintPolicy &);
@@ -445,6 +474,8 @@
 
 #endif /* end #if !defined */
 
+#endif /* TAO_HAS_BUFFERING_CONSTRAINT_POLICY == 1 */
+
   typedef CORBA::Short SyncScope;
   typedef CORBA::Short_out SyncScope_out;
     TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_SyncScope;
@@ -461,25 +492,41 @@
 
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::Short SYNC_DELAYED_BUFFERING;
 
-
 }
 TAO_NAMESPACE_CLOSE // module TAO
 
+#if (TAO_HAS_CLIENT_PRIORITY_POLICY == 1)
+
 TAO_Export void operator<<= (CORBA::Any &, const TAO::PrioritySpecification &); // copying version
 TAO_Export void operator<<= (CORBA::Any &, TAO::PrioritySpecification*); // noncopying version
 TAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, TAO::PrioritySpecification *&); // deprecated
 TAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const TAO::PrioritySpecification *&);
+#endif /* TAO_HAS_CLIENT_PRIORITY_POLICY == 1 */
+
+#if (TAO_HAS_BUFFERING_CONSTRAINT_POLICY == 1)
+
 TAO_Export void operator<<= (CORBA::Any &, const TAO::BufferingConstraint &); // copying version
 TAO_Export void operator<<= (CORBA::Any &, TAO::BufferingConstraint*); // noncopying version
 TAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, TAO::BufferingConstraint *&); // deprecated
 TAO_Export CORBA::Boolean operator>>= (const CORBA::Any &, const TAO::BufferingConstraint *&);
 
+#endif /* TAO_HAS_BUFFERING_CONSTRAINT_POLICY == 1 */
+
 #ifndef __ACE_INLINE__
 
+#if (TAO_HAS_CLIENT_PRIORITY_POLICY == 1)
+
 TAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const TAO::PrioritySpecification &);
 TAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, TAO::PrioritySpecification &);
+
+#endif /* TAO_HAS_CLIENT_PRIORITY_POLICY == 1 */
+
+#if (TAO_HAS_BUFFERING_CONSTRAINT_POLICY == 1)
+
 TAO_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const TAO::BufferingConstraint &);
 TAO_Export CORBA::Boolean operator>> (TAO_InputCDR &, TAO::BufferingConstraint &);
+
+#endif /* TAO_HAS_BUFFERING_CONSTRAINT_POLICY == 1 */
 
 #endif /* __ACE_INLINE__ */
 
