// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:171

#ifndef _TAO_IDL_ORIG_IFR_BASEC_H_
#define _TAO_IDL_ORIG_IFR_BASEC_H_

#include /**/ "ace/pre.h"

#include "tao/ORB.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "ifr_client_export.h"
#include "tao/Environment.h"
#include "tao/Object.h"
#include "tao/Typecode.h"
#include "tao/Any.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_IFR_Client_Export

#if defined (TAO_EXPORT_NESTED_CLASSES)
#  if defined (TAO_EXPORT_NESTED_MACRO)
#    undef TAO_EXPORT_NESTED_MACRO
#  endif /* defined (TAO_EXPORT_NESTED_MACRO) */
#  define TAO_EXPORT_NESTED_MACRO TAO_IFR_Client_Export
#endif /* TAO_EXPORT_NESTED_CLASSES */

#if defined(_MSC_VER)
#if (_MSC_VER >= 1200)
#pragma warning(push)
#endif /* _MSC_VER >= 1200 */
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from 
// be\be_visitor_root/root_ch.cpp:63

namespace TAO
{
  class Collocation_Proxy_Broker;
  
  template<typename T> class Narrow_Utils;
  template<typename T> class AbstractBase_Narrow_Utils;
}

// TAO_IDL - Generated from
// be\be_visitor_module/module_ch.cpp:48

namespace CORBA
{
  
  // TAO_IDL - Generated from
  // be\be_visitor_typedef/typedef_ch.cpp:376
  
  typedef char * ScopedName;
  typedef CORBA::String_var ScopedName_var;
  typedef CORBA::String_out ScopedName_out;
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ScopedName;
  
  // TAO_IDL - Generated from
  // be\be_visitor_enum/enum_ch.cpp:57
  
  enum DefinitionKind
  {
    dk_none,
    dk_all,
    dk_Attribute,
    dk_Constant,
    dk_Exception,
    dk_Interface,
    dk_Module,
    dk_Operation,
    dk_Typedef,
    dk_Alias,
    dk_Struct,
    dk_Union,
    dk_Enum,
    dk_Primitive,
    dk_String,
    dk_Sequence,
    dk_Array,
    dk_Repository,
    dk_Wstring,
    dk_Fixed,
    dk_Value,
    dk_ValueBox,
    dk_ValueMember,
    dk_Native,
    dk_AbstractInterface,
    dk_LocalInterface,
    dk_Component,
    dk_Home,
    dk_Factory,
    dk_Finder,
    dk_Emits,
    dk_Publishes,
    dk_Consumes,
    dk_Provides,
    dk_Uses,
    dk_Event
  };
  
  typedef DefinitionKind &DefinitionKind_out;
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_DefinitionKind;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_IROBJECT__VAR_OUT_CH_)
#define _CORBA_IROBJECT__VAR_OUT_CH_
  
  class IRObject;
  typedef IRObject *IRObject_ptr;
  
  typedef
    TAO_Objref_Var_T<
        IRObject
      >
    IRObject_var;
  
  typedef
    TAO_Objref_Out_T<
        IRObject
      >
    IRObject_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_IROBJECT_CH_)
#define _CORBA_IROBJECT_CH_
  
  class TAO_IFR_Client_Export IRObject
    : public virtual CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<IRObject>;
    typedef IRObject_ptr _ptr_type;
    typedef IRObject_var _var_type;
    
    // The static operations.
    static IRObject_ptr _duplicate (IRObject_ptr obj);
    
    static IRObject_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static IRObject_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static IRObject_ptr _nil (void)
    {
      return (IRObject_ptr)0;
    }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::DefinitionKind def_kind (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void destroy (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:208
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_IRObject_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    IRObject (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_IRObject_setup_collocation (int collocated);
    
    // Concrete non-local interface only.
    IRObject (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );
    
    // Non-local interface only.
    IRObject (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );
    
    virtual ~IRObject (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    IRObject (const IRObject &);
    
    void operator= (const IRObject &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_IRObject;
  
  // TAO_IDL - Generated from
  // be\be_visitor_typedef/typedef_ch.cpp:376
  
  typedef char * VersionSpec;
  typedef CORBA::String_var VersionSpec_var;
  typedef CORBA::String_out VersionSpec_out;
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_VersionSpec;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_CONTAINED__VAR_OUT_CH_)
#define _CORBA_CONTAINED__VAR_OUT_CH_
  
  class Contained;
  typedef Contained *Contained_ptr;
  
  typedef
    TAO_Objref_Var_T<
        Contained
      >
    Contained_var;
  
  typedef
    TAO_Objref_Out_T<
        Contained
      >
    Contained_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_REPOSITORY__VAR_OUT_CH_)
#define _CORBA_REPOSITORY__VAR_OUT_CH_
  
  class Repository;
  typedef Repository *Repository_ptr;
  
  typedef
    TAO_Objref_Var_T<
        Repository
      >
    Repository_var;
  
  typedef
    TAO_Objref_Out_T<
        Repository
      >
    Repository_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_CONTAINER__VAR_OUT_CH_)
#define _CORBA_CONTAINER__VAR_OUT_CH_
  
  class Container;
  typedef Container *Container_ptr;
  
  typedef
    TAO_Objref_Var_T<
        Container
      >
    Container_var;
  
  typedef
    TAO_Objref_Out_T<
        Container
      >
    Container_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_CONTAINED_CH_)
#define _CORBA_CONTAINED_CH_
  
  class TAO_IFR_Client_Export Contained
    : public virtual CORBA::IRObject
  {
  public:
    friend class TAO::Narrow_Utils<Contained>;
    typedef Contained_ptr _ptr_type;
    typedef Contained_var _var_type;
    
    // The static operations.
    static Contained_ptr _duplicate (Contained_ptr obj);
    
    static Contained_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static Contained_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static Contained_ptr _nil (void)
    {
      return (Contained_ptr)0;
    }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual char * id (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void id (
        const char * id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual char * name (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void name (
        const char * name
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual char * version (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void version (
        const char * version
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::Container_ptr defined_in (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual char * absolute_name (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::Repository_ptr containing_repository (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_type.cpp:258
    
    struct Description;
    
    typedef
      TAO_Var_Var_T<
          Description
        >
      Description_var;
    
    typedef
      TAO_Out_T<
          Description,
          Description_var
        >
      Description_out;
    
    // TAO_IDL - Generated from
    // be\be_visitor_structure/structure_ch.cpp:52
    
    struct TAO_IFR_Client_Export Description
    {
      typedef Description_var _var_type;
      
      static void _tao_any_destructor (void *);
      ACE_NESTED_CLASS (CORBA, DefinitionKind) kind;
      CORBA::Any value;
    };
    
    // TAO_IDL - Generated from
    // be\be_visitor_typecode/typecode_decl.cpp:44
    
    static ::CORBA::TypeCode_ptr _tc_Description;
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::Contained::Description * describe (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual void move (
        CORBA::Container_ptr new_container,
        const char * new_name,
        const char * new_version
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:208
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_Contained_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    Contained (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_Contained_setup_collocation (int collocated);
    
    // Concrete non-local interface only.
    Contained (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );
    
    // Non-local interface only.
    Contained (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );
    
    virtual ~Contained (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Contained (const Contained &);
    
    void operator= (const Contained &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Contained;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_MODULEDEF__VAR_OUT_CH_)
#define _CORBA_MODULEDEF__VAR_OUT_CH_
  
  class ModuleDef;
  typedef ModuleDef *ModuleDef_ptr;
  
  typedef
    TAO_Objref_Var_T<
        ModuleDef
      >
    ModuleDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ModuleDef
      >
    ModuleDef_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_CONSTANTDEF__VAR_OUT_CH_)
#define _CORBA_CONSTANTDEF__VAR_OUT_CH_
  
  class ConstantDef;
  typedef ConstantDef *ConstantDef_ptr;
  
  typedef
    TAO_Objref_Var_T<
        ConstantDef
      >
    ConstantDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ConstantDef
      >
    ConstantDef_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_IDLTYPE__VAR_OUT_CH_)
#define _CORBA_IDLTYPE__VAR_OUT_CH_
  
  class IDLType;
  typedef IDLType *IDLType_ptr;
  
  typedef
    TAO_Objref_Var_T<
        IDLType
      >
    IDLType_var;
  
  typedef
    TAO_Objref_Out_T<
        IDLType
      >
    IDLType_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_STRUCTDEF__VAR_OUT_CH_)
#define _CORBA_STRUCTDEF__VAR_OUT_CH_
  
  class StructDef;
  typedef StructDef *StructDef_ptr;
  
  typedef
    TAO_Objref_Var_T<
        StructDef
      >
    StructDef_var;
  
  typedef
    TAO_Objref_Out_T<
        StructDef
      >
    StructDef_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_UNIONDEF__VAR_OUT_CH_)
#define _CORBA_UNIONDEF__VAR_OUT_CH_
  
  class UnionDef;
  typedef UnionDef *UnionDef_ptr;
  
  typedef
    TAO_Objref_Var_T<
        UnionDef
      >
    UnionDef_var;
  
  typedef
    TAO_Objref_Out_T<
        UnionDef
      >
    UnionDef_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_ENUMDEF__VAR_OUT_CH_)
#define _CORBA_ENUMDEF__VAR_OUT_CH_
  
  class EnumDef;
  typedef EnumDef *EnumDef_ptr;
  
  typedef
    TAO_Objref_Var_T<
        EnumDef
      >
    EnumDef_var;
  
  typedef
    TAO_Objref_Out_T<
        EnumDef
      >
    EnumDef_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_ALIASDEF__VAR_OUT_CH_)
#define _CORBA_ALIASDEF__VAR_OUT_CH_
  
  class AliasDef;
  typedef AliasDef *AliasDef_ptr;
  
  typedef
    TAO_Objref_Var_T<
        AliasDef
      >
    AliasDef_var;
  
  typedef
    TAO_Objref_Out_T<
        AliasDef
      >
    AliasDef_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_INTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_INTERFACEDEF__VAR_OUT_CH_
  
  class InterfaceDef;
  typedef InterfaceDef *InterfaceDef_ptr;
  
  typedef
    TAO_Objref_Var_T<
        InterfaceDef
      >
    InterfaceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        InterfaceDef
      >
    InterfaceDef_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_INTERFACEDEFSEQ_CH_)
#define _CORBA_INTERFACEDEFSEQ_CH_
  
  class InterfaceDefSeq;
  
  typedef
    TAO_MngSeq_Var_T<
        InterfaceDefSeq,
        TAO_Object_Manager<
            InterfaceDef,
            InterfaceDef_var
          >
      >
    InterfaceDefSeq_var;
  
  typedef
    TAO_MngSeq_Out_T<
        InterfaceDefSeq,
        InterfaceDefSeq_var,
        TAO_Object_Manager<
            InterfaceDef,
            InterfaceDef_var
          >
      >
    InterfaceDefSeq_out;
  
  class TAO_IFR_Client_Export InterfaceDefSeq
    : public
        TAO_Unbounded_Object_Sequence<
            InterfaceDef,
            InterfaceDef_var
          >
  {
  public:
    InterfaceDefSeq (void);
    InterfaceDefSeq (CORBA::ULong max);
    InterfaceDefSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        InterfaceDef_ptr* buffer, 
        CORBA::Boolean release = 0
      );
    InterfaceDefSeq (const InterfaceDefSeq &);
    ~InterfaceDefSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef InterfaceDefSeq_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_InterfaceDefSeq;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_EXCEPTIONDEF__VAR_OUT_CH_)
#define _CORBA_EXCEPTIONDEF__VAR_OUT_CH_
  
  class ExceptionDef;
  typedef ExceptionDef *ExceptionDef_ptr;
  
  typedef
    TAO_Objref_Var_T<
        ExceptionDef
      >
    ExceptionDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ExceptionDef
      >
    ExceptionDef_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_NATIVEDEF__VAR_OUT_CH_)
#define _CORBA_NATIVEDEF__VAR_OUT_CH_
  
  class NativeDef;
  typedef NativeDef *NativeDef_ptr;
  
  typedef
    TAO_Objref_Var_T<
        NativeDef
      >
    NativeDef_var;
  
  typedef
    TAO_Objref_Out_T<
        NativeDef
      >
    NativeDef_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_VALUEDEF__VAR_OUT_CH_)
#define _CORBA_VALUEDEF__VAR_OUT_CH_
  
  class ValueDef;
  typedef ValueDef *ValueDef_ptr;
  
  typedef
    TAO_Objref_Var_T<
        ValueDef
      >
    ValueDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ValueDef
      >
    ValueDef_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_VALUEDEFSEQ_CH_)
#define _CORBA_VALUEDEFSEQ_CH_
  
  class ValueDefSeq;
  
  typedef
    TAO_MngSeq_Var_T<
        ValueDefSeq,
        TAO_Object_Manager<
            ValueDef,
            ValueDef_var
          >
      >
    ValueDefSeq_var;
  
  typedef
    TAO_MngSeq_Out_T<
        ValueDefSeq,
        ValueDefSeq_var,
        TAO_Object_Manager<
            ValueDef,
            ValueDef_var
          >
      >
    ValueDefSeq_out;
  
  class TAO_IFR_Client_Export ValueDefSeq
    : public
        TAO_Unbounded_Object_Sequence<
            ValueDef,
            ValueDef_var
          >
  {
  public:
    ValueDefSeq (void);
    ValueDefSeq (CORBA::ULong max);
    ValueDefSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        ValueDef_ptr* buffer, 
        CORBA::Boolean release = 0
      );
    ValueDefSeq (const ValueDefSeq &);
    ~ValueDefSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef ValueDefSeq_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ValueDefSeq;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_VALUEBOXDEF__VAR_OUT_CH_)
#define _CORBA_VALUEBOXDEF__VAR_OUT_CH_
  
  class ValueBoxDef;
  typedef ValueBoxDef *ValueBoxDef_ptr;
  
  typedef
    TAO_Objref_Var_T<
        ValueBoxDef
      >
    ValueBoxDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ValueBoxDef
      >
    ValueBoxDef_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_ABSTRACTINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_ABSTRACTINTERFACEDEF__VAR_OUT_CH_
  
  class AbstractInterfaceDef;
  typedef AbstractInterfaceDef *AbstractInterfaceDef_ptr;
  
  typedef
    TAO_Objref_Var_T<
        AbstractInterfaceDef
      >
    AbstractInterfaceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        AbstractInterfaceDef
      >
    AbstractInterfaceDef_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_ABSTRACTINTERFACEDEFSEQ_CH_)
#define _CORBA_ABSTRACTINTERFACEDEFSEQ_CH_
  
  class AbstractInterfaceDefSeq;
  
  typedef
    TAO_MngSeq_Var_T<
        AbstractInterfaceDefSeq,
        TAO_Object_Manager<
            AbstractInterfaceDef,
            AbstractInterfaceDef_var
          >
      >
    AbstractInterfaceDefSeq_var;
  
  typedef
    TAO_MngSeq_Out_T<
        AbstractInterfaceDefSeq,
        AbstractInterfaceDefSeq_var,
        TAO_Object_Manager<
            AbstractInterfaceDef,
            AbstractInterfaceDef_var
          >
      >
    AbstractInterfaceDefSeq_out;
  
  class TAO_IFR_Client_Export AbstractInterfaceDefSeq
    : public
        TAO_Unbounded_Object_Sequence<
            AbstractInterfaceDef,
            AbstractInterfaceDef_var
          >
  {
  public:
    AbstractInterfaceDefSeq (void);
    AbstractInterfaceDefSeq (CORBA::ULong max);
    AbstractInterfaceDefSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        AbstractInterfaceDef_ptr* buffer, 
        CORBA::Boolean release = 0
      );
    AbstractInterfaceDefSeq (const AbstractInterfaceDefSeq &);
    ~AbstractInterfaceDefSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef AbstractInterfaceDefSeq_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_AbstractInterfaceDefSeq;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_LOCALINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_LOCALINTERFACEDEF__VAR_OUT_CH_
  
  class LocalInterfaceDef;
  typedef LocalInterfaceDef *LocalInterfaceDef_ptr;
  
  typedef
    TAO_Objref_Var_T<
        LocalInterfaceDef
      >
    LocalInterfaceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        LocalInterfaceDef
      >
    LocalInterfaceDef_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_LOCALINTERFACEDEFSEQ_CH_)
#define _CORBA_LOCALINTERFACEDEFSEQ_CH_
  
  class LocalInterfaceDefSeq;
  
  typedef
    TAO_MngSeq_Var_T<
        LocalInterfaceDefSeq,
        TAO_Object_Manager<
            LocalInterfaceDef,
            LocalInterfaceDef_var
          >
      >
    LocalInterfaceDefSeq_var;
  
  typedef
    TAO_MngSeq_Out_T<
        LocalInterfaceDefSeq,
        LocalInterfaceDefSeq_var,
        TAO_Object_Manager<
            LocalInterfaceDef,
            LocalInterfaceDef_var
          >
      >
    LocalInterfaceDefSeq_out;
  
  class TAO_IFR_Client_Export LocalInterfaceDefSeq
    : public
        TAO_Unbounded_Object_Sequence<
            LocalInterfaceDef,
            LocalInterfaceDef_var
          >
  {
  public:
    LocalInterfaceDefSeq (void);
    LocalInterfaceDefSeq (CORBA::ULong max);
    LocalInterfaceDefSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        LocalInterfaceDef_ptr* buffer, 
        CORBA::Boolean release = 0
      );
    LocalInterfaceDefSeq (const LocalInterfaceDefSeq &);
    ~LocalInterfaceDefSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef LocalInterfaceDefSeq_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_LocalInterfaceDefSeq;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_EXTINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_EXTINTERFACEDEF__VAR_OUT_CH_
  
  class ExtInterfaceDef;
  typedef ExtInterfaceDef *ExtInterfaceDef_ptr;
  
  typedef
    TAO_Objref_Var_T<
        ExtInterfaceDef
      >
    ExtInterfaceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ExtInterfaceDef
      >
    ExtInterfaceDef_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_EXTINTERFACEDEFSEQ_CH_)
#define _CORBA_EXTINTERFACEDEFSEQ_CH_
  
  class ExtInterfaceDefSeq;
  
  typedef
    TAO_MngSeq_Var_T<
        ExtInterfaceDefSeq,
        TAO_Object_Manager<
            ExtInterfaceDef,
            ExtInterfaceDef_var
          >
      >
    ExtInterfaceDefSeq_var;
  
  typedef
    TAO_MngSeq_Out_T<
        ExtInterfaceDefSeq,
        ExtInterfaceDefSeq_var,
        TAO_Object_Manager<
            ExtInterfaceDef,
            ExtInterfaceDef_var
          >
      >
    ExtInterfaceDefSeq_out;
  
  class TAO_IFR_Client_Export ExtInterfaceDefSeq
    : public
        TAO_Unbounded_Object_Sequence<
            ExtInterfaceDef,
            ExtInterfaceDef_var
          >
  {
  public:
    ExtInterfaceDefSeq (void);
    ExtInterfaceDefSeq (CORBA::ULong max);
    ExtInterfaceDefSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        ExtInterfaceDef_ptr* buffer, 
        CORBA::Boolean release = 0
      );
    ExtInterfaceDefSeq (const ExtInterfaceDefSeq &);
    ~ExtInterfaceDefSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef ExtInterfaceDefSeq_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ExtInterfaceDefSeq;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_EXTVALUEDEF__VAR_OUT_CH_)
#define _CORBA_EXTVALUEDEF__VAR_OUT_CH_
  
  class ExtValueDef;
  typedef ExtValueDef *ExtValueDef_ptr;
  
  typedef
    TAO_Objref_Var_T<
        ExtValueDef
      >
    ExtValueDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ExtValueDef
      >
    ExtValueDef_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_EXTVALUEDEFSEQ_CH_)
#define _CORBA_EXTVALUEDEFSEQ_CH_
  
  class ExtValueDefSeq;
  
  typedef
    TAO_MngSeq_Var_T<
        ExtValueDefSeq,
        TAO_Object_Manager<
            ExtValueDef,
            ExtValueDef_var
          >
      >
    ExtValueDefSeq_var;
  
  typedef
    TAO_MngSeq_Out_T<
        ExtValueDefSeq,
        ExtValueDefSeq_var,
        TAO_Object_Manager<
            ExtValueDef,
            ExtValueDef_var
          >
      >
    ExtValueDefSeq_out;
  
  class TAO_IFR_Client_Export ExtValueDefSeq
    : public
        TAO_Unbounded_Object_Sequence<
            ExtValueDef,
            ExtValueDef_var
          >
  {
  public:
    ExtValueDefSeq (void);
    ExtValueDefSeq (CORBA::ULong max);
    ExtValueDefSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        ExtValueDef_ptr* buffer, 
        CORBA::Boolean release = 0
      );
    ExtValueDefSeq (const ExtValueDefSeq &);
    ~ExtValueDefSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef ExtValueDefSeq_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ExtValueDefSeq;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_EXTABSTRACTINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_EXTABSTRACTINTERFACEDEF__VAR_OUT_CH_
  
  class ExtAbstractInterfaceDef;
  typedef ExtAbstractInterfaceDef *ExtAbstractInterfaceDef_ptr;
  
  typedef
    TAO_Objref_Var_T<
        ExtAbstractInterfaceDef
      >
    ExtAbstractInterfaceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ExtAbstractInterfaceDef
      >
    ExtAbstractInterfaceDef_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_EXTABSTRACTINTERFACEDEFSEQ_CH_)
#define _CORBA_EXTABSTRACTINTERFACEDEFSEQ_CH_
  
  class ExtAbstractInterfaceDefSeq;
  
  typedef
    TAO_MngSeq_Var_T<
        ExtAbstractInterfaceDefSeq,
        TAO_Object_Manager<
            ExtAbstractInterfaceDef,
            ExtAbstractInterfaceDef_var
          >
      >
    ExtAbstractInterfaceDefSeq_var;
  
  typedef
    TAO_MngSeq_Out_T<
        ExtAbstractInterfaceDefSeq,
        ExtAbstractInterfaceDefSeq_var,
        TAO_Object_Manager<
            ExtAbstractInterfaceDef,
            ExtAbstractInterfaceDef_var
          >
      >
    ExtAbstractInterfaceDefSeq_out;
  
  class TAO_IFR_Client_Export ExtAbstractInterfaceDefSeq
    : public
        TAO_Unbounded_Object_Sequence<
            ExtAbstractInterfaceDef,
            ExtAbstractInterfaceDef_var
          >
  {
  public:
    ExtAbstractInterfaceDefSeq (void);
    ExtAbstractInterfaceDefSeq (CORBA::ULong max);
    ExtAbstractInterfaceDefSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        ExtAbstractInterfaceDef_ptr* buffer, 
        CORBA::Boolean release = 0
      );
    ExtAbstractInterfaceDefSeq (const ExtAbstractInterfaceDefSeq &);
    ~ExtAbstractInterfaceDefSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef ExtAbstractInterfaceDefSeq_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ExtAbstractInterfaceDefSeq;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_EXTLOCALINTERFACEDEF__VAR_OUT_CH_)
#define _CORBA_EXTLOCALINTERFACEDEF__VAR_OUT_CH_
  
  class ExtLocalInterfaceDef;
  typedef ExtLocalInterfaceDef *ExtLocalInterfaceDef_ptr;
  
  typedef
    TAO_Objref_Var_T<
        ExtLocalInterfaceDef
      >
    ExtLocalInterfaceDef_var;
  
  typedef
    TAO_Objref_Out_T<
        ExtLocalInterfaceDef
      >
    ExtLocalInterfaceDef_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_EXTLOCALINTERFACEDEFSEQ_CH_)
#define _CORBA_EXTLOCALINTERFACEDEFSEQ_CH_
  
  class ExtLocalInterfaceDefSeq;
  
  typedef
    TAO_MngSeq_Var_T<
        ExtLocalInterfaceDefSeq,
        TAO_Object_Manager<
            ExtLocalInterfaceDef,
            ExtLocalInterfaceDef_var
          >
      >
    ExtLocalInterfaceDefSeq_var;
  
  typedef
    TAO_MngSeq_Out_T<
        ExtLocalInterfaceDefSeq,
        ExtLocalInterfaceDefSeq_var,
        TAO_Object_Manager<
            ExtLocalInterfaceDef,
            ExtLocalInterfaceDef_var
          >
      >
    ExtLocalInterfaceDefSeq_out;
  
  class TAO_IFR_Client_Export ExtLocalInterfaceDefSeq
    : public
        TAO_Unbounded_Object_Sequence<
            ExtLocalInterfaceDef,
            ExtLocalInterfaceDef_var
          >
  {
  public:
    ExtLocalInterfaceDefSeq (void);
    ExtLocalInterfaceDefSeq (CORBA::ULong max);
    ExtLocalInterfaceDefSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        ExtLocalInterfaceDef_ptr* buffer, 
        CORBA::Boolean release = 0
      );
    ExtLocalInterfaceDefSeq (const ExtLocalInterfaceDefSeq &);
    ~ExtLocalInterfaceDefSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef ExtLocalInterfaceDefSeq_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ExtLocalInterfaceDefSeq;
  
  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_CONTAINEDSEQ_CH_)
#define _CORBA_CONTAINEDSEQ_CH_
  
  class ContainedSeq;
  
  typedef
    TAO_MngSeq_Var_T<
        ContainedSeq,
        TAO_Object_Manager<
            Contained,
            Contained_var
          >
      >
    ContainedSeq_var;
  
  typedef
    TAO_MngSeq_Out_T<
        ContainedSeq,
        ContainedSeq_var,
        TAO_Object_Manager<
            Contained,
            Contained_var
          >
      >
    ContainedSeq_out;
  
  class TAO_IFR_Client_Export ContainedSeq
    : public
        TAO_Unbounded_Object_Sequence<
            Contained,
            Contained_var
          >
  {
  public:
    ContainedSeq (void);
    ContainedSeq (CORBA::ULong max);
    ContainedSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        Contained_ptr* buffer, 
        CORBA::Boolean release = 0
      );
    ContainedSeq (const ContainedSeq &);
    ~ContainedSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef ContainedSeq_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ContainedSeq;
  
  // TAO_IDL - Generated from
  // be\be_type.cpp:258
  
  struct StructMember;
  
  typedef
    TAO_Var_Var_T<
        StructMember
      >
    StructMember_var;
  
  typedef
    TAO_Out_T<
        StructMember,
        StructMember_var
      >
    StructMember_out;
  
  // TAO_IDL - Generated from
  // be\be_visitor_structure/structure_ch.cpp:52
  
  struct TAO_IFR_Client_Export StructMember
  {
    typedef StructMember_var _var_type;
    
    static void _tao_any_destructor (void *);
    TAO_String_Manager name;
    CORBA::TypeCode_var type;
    CORBA::IDLType_var type_def;
  };
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_StructMember;
  
  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_STRUCTMEMBERSEQ_CH_)
#define _CORBA_STRUCTMEMBERSEQ_CH_
  
  class StructMemberSeq;
  
  typedef
    TAO_VarSeq_Var_T<
        StructMemberSeq,
        StructMember
      >
    StructMemberSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        StructMemberSeq,
        StructMemberSeq_var,
        StructMember
      >
    StructMemberSeq_out;
  
  class TAO_IFR_Client_Export StructMemberSeq
    : public
        TAO_Unbounded_Sequence<
            StructMember
          >
  {
  public:
    StructMemberSeq (void);
    StructMemberSeq (CORBA::ULong max);
    StructMemberSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        StructMember* buffer, 
        CORBA::Boolean release = 0
      );
    StructMemberSeq (const StructMemberSeq &);
    ~StructMemberSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef StructMemberSeq_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_StructMemberSeq;
  
  // TAO_IDL - Generated from
  // be\be_type.cpp:258
  
  struct Initializer;
  
  typedef
    TAO_Var_Var_T<
        Initializer
      >
    Initializer_var;
  
  typedef
    TAO_Out_T<
        Initializer,
        Initializer_var
      >
    Initializer_out;
  
  // TAO_IDL - Generated from
  // be\be_visitor_structure/structure_ch.cpp:52
  
  struct TAO_IFR_Client_Export Initializer
  {
    typedef Initializer_var _var_type;
    
    static void _tao_any_destructor (void *);
    CORBA::StructMemberSeq members;
    TAO_String_Manager name;
  };
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Initializer;
  
  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_INITIALIZERSEQ_CH_)
#define _CORBA_INITIALIZERSEQ_CH_
  
  class InitializerSeq;
  
  typedef
    TAO_VarSeq_Var_T<
        InitializerSeq,
        Initializer
      >
    InitializerSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        InitializerSeq,
        InitializerSeq_var,
        Initializer
      >
    InitializerSeq_out;
  
  class TAO_IFR_Client_Export InitializerSeq
    : public
        TAO_Unbounded_Sequence<
            Initializer
          >
  {
  public:
    InitializerSeq (void);
    InitializerSeq (CORBA::ULong max);
    InitializerSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        Initializer* buffer, 
        CORBA::Boolean release = 0
      );
    InitializerSeq (const InitializerSeq &);
    ~InitializerSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef InitializerSeq_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_InitializerSeq;
  
  // TAO_IDL - Generated from
  // be\be_type.cpp:258
  
  struct ExceptionDescription;
  
  typedef
    TAO_Var_Var_T<
        ExceptionDescription
      >
    ExceptionDescription_var;
  
  typedef
    TAO_Out_T<
        ExceptionDescription,
        ExceptionDescription_var
      >
    ExceptionDescription_out;
  
  // TAO_IDL - Generated from
  // be\be_visitor_structure/structure_ch.cpp:52
  
  struct TAO_IFR_Client_Export ExceptionDescription
  {
    typedef ExceptionDescription_var _var_type;
    
    static void _tao_any_destructor (void *);
    TAO_String_Manager name;
    TAO_String_Manager id;
    TAO_String_Manager defined_in;
    TAO_String_Manager version;
    CORBA::TypeCode_var type;
  };
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ExceptionDescription;
  
  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_EXCDESCRIPTIONSEQ_CH_)
#define _CORBA_EXCDESCRIPTIONSEQ_CH_
  
  class ExcDescriptionSeq;
  
  typedef
    TAO_VarSeq_Var_T<
        ExcDescriptionSeq,
        ExceptionDescription
      >
    ExcDescriptionSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        ExcDescriptionSeq,
        ExcDescriptionSeq_var,
        ExceptionDescription
      >
    ExcDescriptionSeq_out;
  
  class TAO_IFR_Client_Export ExcDescriptionSeq
    : public
        TAO_Unbounded_Sequence<
            ExceptionDescription
          >
  {
  public:
    ExcDescriptionSeq (void);
    ExcDescriptionSeq (CORBA::ULong max);
    ExcDescriptionSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        ExceptionDescription* buffer, 
        CORBA::Boolean release = 0
      );
    ExcDescriptionSeq (const ExcDescriptionSeq &);
    ~ExcDescriptionSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef ExcDescriptionSeq_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ExcDescriptionSeq;
  
  // TAO_IDL - Generated from
  // be\be_type.cpp:258
  
  struct ExtInitializer;
  
  typedef
    TAO_Var_Var_T<
        ExtInitializer
      >
    ExtInitializer_var;
  
  typedef
    TAO_Out_T<
        ExtInitializer,
        ExtInitializer_var
      >
    ExtInitializer_out;
  
  // TAO_IDL - Generated from
  // be\be_visitor_structure/structure_ch.cpp:52
  
  struct TAO_IFR_Client_Export ExtInitializer
  {
    typedef ExtInitializer_var _var_type;
    
    static void _tao_any_destructor (void *);
    CORBA::StructMemberSeq members;
    CORBA::ExcDescriptionSeq exceptions;
    TAO_String_Manager name;
  };
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ExtInitializer;
  
  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_EXTINITIALIZERSEQ_CH_)
#define _CORBA_EXTINITIALIZERSEQ_CH_
  
  class ExtInitializerSeq;
  
  typedef
    TAO_VarSeq_Var_T<
        ExtInitializerSeq,
        ExtInitializer
      >
    ExtInitializerSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        ExtInitializerSeq,
        ExtInitializerSeq_var,
        ExtInitializer
      >
    ExtInitializerSeq_out;
  
  class TAO_IFR_Client_Export ExtInitializerSeq
    : public
        TAO_Unbounded_Sequence<
            ExtInitializer
          >
  {
  public:
    ExtInitializerSeq (void);
    ExtInitializerSeq (CORBA::ULong max);
    ExtInitializerSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        ExtInitializer* buffer, 
        CORBA::Boolean release = 0
      );
    ExtInitializerSeq (const ExtInitializerSeq &);
    ~ExtInitializerSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef ExtInitializerSeq_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ExtInitializerSeq;
  
  // TAO_IDL - Generated from
  // be\be_type.cpp:258
  
  struct UnionMember;
  
  typedef
    TAO_Var_Var_T<
        UnionMember
      >
    UnionMember_var;
  
  typedef
    TAO_Out_T<
        UnionMember,
        UnionMember_var
      >
    UnionMember_out;
  
  // TAO_IDL - Generated from
  // be\be_visitor_structure/structure_ch.cpp:52
  
  struct TAO_IFR_Client_Export UnionMember
  {
    typedef UnionMember_var _var_type;
    
    static void _tao_any_destructor (void *);
    TAO_String_Manager name;
    CORBA::Any label;
    CORBA::TypeCode_var type;
    CORBA::IDLType_var type_def;
  };
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_UnionMember;
  
  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_UNIONMEMBERSEQ_CH_)
#define _CORBA_UNIONMEMBERSEQ_CH_
  
  class UnionMemberSeq;
  
  typedef
    TAO_VarSeq_Var_T<
        UnionMemberSeq,
        UnionMember
      >
    UnionMemberSeq_var;
  
  typedef
    TAO_Seq_Out_T<
        UnionMemberSeq,
        UnionMemberSeq_var,
        UnionMember
      >
    UnionMemberSeq_out;
  
  class TAO_IFR_Client_Export UnionMemberSeq
    : public
        TAO_Unbounded_Sequence<
            UnionMember
          >
  {
  public:
    UnionMemberSeq (void);
    UnionMemberSeq (CORBA::ULong max);
    UnionMemberSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        UnionMember* buffer, 
        CORBA::Boolean release = 0
      );
    UnionMemberSeq (const UnionMemberSeq &);
    ~UnionMemberSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef UnionMemberSeq_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_UnionMemberSeq;
  
  // TAO_IDL - Generated from
  // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_ENUMMEMBERSEQ_CH_)
#define _CORBA_ENUMMEMBERSEQ_CH_
  
  class EnumMemberSeq;
  
  typedef
    TAO_MngSeq_Var_T<
        EnumMemberSeq,
        TAO_SeqElem_String_Manager
      >
    EnumMemberSeq_var;
  
  typedef
    TAO_MngSeq_Out_T<
        EnumMemberSeq,
        EnumMemberSeq_var,
        TAO_SeqElem_String_Manager
      >
    EnumMemberSeq_out;
  
  class TAO_IFR_Client_Export EnumMemberSeq
    : public
        TAO_Unbounded_String_Sequence
  {
  public:
    EnumMemberSeq (void);
    EnumMemberSeq (CORBA::ULong max);
    EnumMemberSeq (
        CORBA::ULong max,
        CORBA::ULong length,
        char ** buffer, 
        CORBA::Boolean release = 0
      );
    EnumMemberSeq (const EnumMemberSeq &);
    ~EnumMemberSeq (void);
    
    static void _tao_any_destructor (void *);
    
    typedef EnumMemberSeq_var _var_type;
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_EnumMemberSeq;
  
  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_CONTAINER_CH_)
#define _CORBA_CONTAINER_CH_
  
  class TAO_IFR_Client_Export Container
    : public virtual CORBA::IRObject
  {
  public:
    friend class TAO::Narrow_Utils<Container>;
    typedef Container_ptr _ptr_type;
    typedef Container_var _var_type;
    
    // The static operations.
    static Container_ptr _duplicate (Container_ptr obj);
    
    static Container_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static Container_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static Container_ptr _nil (void)
    {
      return (Container_ptr)0;
    }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::Contained_ptr lookup (
        const char * search_name
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::ContainedSeq * contents (
        CORBA::DefinitionKind limit_type,
        CORBA::Boolean exclude_inherited
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::ContainedSeq * lookup_name (
        const char * search_name,
        CORBA::Long levels_to_search,
        CORBA::DefinitionKind limit_type,
        CORBA::Boolean exclude_inherited
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_type.cpp:258
    
    struct Description;
    
    typedef
      TAO_Var_Var_T<
          Description
        >
      Description_var;
    
    typedef
      TAO_Out_T<
          Description,
          Description_var
        >
      Description_out;
    
    // TAO_IDL - Generated from
    // be\be_visitor_structure/structure_ch.cpp:52
    
    struct TAO_IFR_Client_Export Description
    {
      typedef Description_var _var_type;
      
      static void _tao_any_destructor (void *);
      ACE_NESTED_CLASS (CORBA, Contained_var) contained_object;
      ACE_NESTED_CLASS (CORBA, DefinitionKind) kind;
      CORBA::Any value;
    };
    
    // TAO_IDL - Generated from
    // be\be_visitor_typecode/typecode_decl.cpp:44
    
    static ::CORBA::TypeCode_ptr _tc_Description;
    
    // TAO_IDL - Generated from
    // be\be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_CORBA_CONTAINER_DESCRIPTIONSEQ_CH_)
#define _CORBA_CONTAINER_DESCRIPTIONSEQ_CH_
    
    class DescriptionSeq;
    
    typedef
      TAO_VarSeq_Var_T<
          DescriptionSeq,
          Description
        >
      DescriptionSeq_var;
    
    typedef
      TAO_Seq_Out_T<
          DescriptionSeq,
          DescriptionSeq_var,
          Description
        >
      DescriptionSeq_out;
    
    class TAO_IFR_Client_Export DescriptionSeq
      : public
          TAO_Unbounded_Sequence<
              Description
            >
    {
    public:
      DescriptionSeq (void);
      DescriptionSeq (CORBA::ULong max);
      DescriptionSeq (
          CORBA::ULong max,
          CORBA::ULong length,
          Description* buffer, 
          CORBA::Boolean release = 0
        );
      DescriptionSeq (const DescriptionSeq &);
      ~DescriptionSeq (void);
      
      static void _tao_any_destructor (void *);
      
      typedef DescriptionSeq_var _var_type;
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // be\be_visitor_typecode/typecode_decl.cpp:44
    
    static ::CORBA::TypeCode_ptr _tc_DescriptionSeq;
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::Container::DescriptionSeq * describe_contents (
        CORBA::DefinitionKind limit_type,
        CORBA::Boolean exclude_inherited,
        CORBA::Long max_returned_objs
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::ModuleDef_ptr create_module (
        const char * id,
        const char * name,
        const char * version
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::ConstantDef_ptr create_constant (
        const char * id,
        const char * name,
        const char * version,
        CORBA::IDLType_ptr type,
        const CORBA::Any & value
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::StructDef_ptr create_struct (
        const char * id,
        const char * name,
        const char * version,
        const CORBA::StructMemberSeq & members
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::UnionDef_ptr create_union (
        const char * id,
        const char * name,
        const char * version,
        CORBA::IDLType_ptr discriminator_type,
        const CORBA::UnionMemberSeq & members
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::EnumDef_ptr create_enum (
        const char * id,
        const char * name,
        const char * version,
        const CORBA::EnumMemberSeq & members
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::AliasDef_ptr create_alias (
        const char * id,
        const char * name,
        const char * version,
        CORBA::IDLType_ptr original_type
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::InterfaceDef_ptr create_interface (
        const char * id,
        const char * name,
        const char * version,
        const CORBA::InterfaceDefSeq & base_interfaces
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::ValueDef_ptr create_value (
        const char * id,
        const char * name,
        const char * version,
        CORBA::Boolean is_custom,
        CORBA::Boolean is_abstract,
        CORBA::ValueDef_ptr base_value,
        CORBA::Boolean is_truncatable,
        const CORBA::ValueDefSeq & abstract_base_values,
        const CORBA::InterfaceDefSeq & supported_interfaces,
        const CORBA::InitializerSeq & initializers
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::ValueBoxDef_ptr create_value_box (
        const char * id,
        const char * name,
        const char * version,
        CORBA::IDLType_ptr original_type_def
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::ExceptionDef_ptr create_exception (
        const char * id,
        const char * name,
        const char * version,
        const CORBA::StructMemberSeq & members
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::NativeDef_ptr create_native (
        const char * id,
        const char * name,
        const char * version
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::AbstractInterfaceDef_ptr create_abstract_interface (
        const char * id,
        const char * name,
        const char * version,
        const CORBA::AbstractInterfaceDefSeq & base_interfaces
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::LocalInterfaceDef_ptr create_local_interface (
        const char * id,
        const char * name,
        const char * version,
        const CORBA::InterfaceDefSeq & base_interfaces
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual ::CORBA::ExtValueDef_ptr create_ext_value (
        const char * id,
        const char * name,
        const char * version,
        CORBA::Boolean is_custom,
        CORBA::Boolean is_abstract,
        CORBA::ValueDef_ptr base_value,
        CORBA::Boolean is_truncatable,
        const CORBA::ValueDefSeq & abstract_base_values,
        const CORBA::InterfaceDefSeq & supported_interfaces,
        const CORBA::ExtInitializerSeq & initializers
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:208
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_Container_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    Container (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_Container_setup_collocation (int collocated);
    
    // Concrete non-local interface only.
    Container (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );
    
    // Non-local interface only.
    Container (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );
    
    virtual ~Container (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Container (const Container &);
    
    void operator= (const Container &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Container;
  
  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_IDLTYPE_CH_)
#define _CORBA_IDLTYPE_CH_
  
  class TAO_IFR_Client_Export IDLType
    : public virtual CORBA::IRObject
  {
  public:
    friend class TAO::Narrow_Utils<IDLType>;
    typedef IDLType_ptr _ptr_type;
    typedef IDLType_var _var_type;
    
    // The static operations.
    static IDLType_ptr _duplicate (IDLType_ptr obj);
    
    static IDLType_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static IDLType_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static IDLType_ptr _nil (void)
    {
      return (IDLType_ptr)0;
    }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // be\be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::TypeCode_ptr type (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:208
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_IDLType_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    IDLType (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_IDLType_setup_collocation (int collocated);
    
    // Concrete non-local interface only.
    IDLType (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );
    
    // Non-local interface only.
    IDLType (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );
    
    virtual ~IDLType (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    IDLType (const IDLType &);
    
    void operator= (const IDLType &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_IDLType;
  
  // TAO_IDL - Generated from
  // be\be_interface.cpp:611

#if !defined (_CORBA_TYPEDEFDEF__VAR_OUT_CH_)
#define _CORBA_TYPEDEFDEF__VAR_OUT_CH_
  
  class TypedefDef;
  typedef TypedefDef *TypedefDef_ptr;
  
  typedef
    TAO_Objref_Var_T<
        TypedefDef
      >
    TypedefDef_var;
  
  typedef
    TAO_Objref_Out_T<
        TypedefDef
      >
    TypedefDef_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_CORBA_TYPEDEFDEF_CH_)
#define _CORBA_TYPEDEFDEF_CH_
  
  class TAO_IFR_Client_Export TypedefDef
    : public virtual CORBA::Contained,
      public virtual CORBA::IDLType
  {
  public:
    friend class TAO::Narrow_Utils<TypedefDef>;
    typedef TypedefDef_ptr _ptr_type;
    typedef TypedefDef_var _var_type;
    
    // The static operations.
    static TypedefDef_ptr _duplicate (TypedefDef_ptr obj);
    
    static TypedefDef_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static TypedefDef_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static TypedefDef_ptr _nil (void)
    {
      return (TypedefDef_ptr)0;
    }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // be\be_visitor_interface/interface_ch.cpp:208
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_TypedefDef_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    TypedefDef (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void CORBA_TypedefDef_setup_collocation (int collocated);
    
    // Concrete non-local interface only.
    TypedefDef (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );
    
    // Non-local interface only.
    TypedefDef (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );
    
    virtual ~TypedefDef (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    TypedefDef (const TypedefDef &);
    
    void operator= (const TypedefDef &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_TypedefDef;
  
  // TAO_IDL - Generated from
  // be\be_type.cpp:258
  
  struct TypeDescription;
  
  typedef
    TAO_Var_Var_T<
        TypeDescription
      >
    TypeDescription_var;
  
  typedef
    TAO_Out_T<
        TypeDescription,
        TypeDescription_var
      >
    TypeDescription_out;
  
  // TAO_IDL - Generated from
  // be\be_visitor_structure/structure_ch.cpp:52
  
  struct TAO_IFR_Client_Export TypeDescription
  {
    typedef TypeDescription_var _var_type;
    
    static void _tao_any_destructor (void *);
    TAO_String_Manager name;
    TAO_String_Manager id;
    TAO_String_Manager defined_in;
    TAO_String_Manager version;
    CORBA::TypeCode_var type;
  };
  
  // TAO_IDL - Generated from
  // be\be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_TypeDescription;

// TAO_IDL - Generated from
// be\be_visitor_module/module_ch.cpp:66

} // module CORBA

// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// be\be_visitor_root/root.cpp:120

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_IRObject_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_Contained_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_Container_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_IDLType_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

extern TAO_IFR_Client_Export
TAO::Collocation_Proxy_Broker *
(*CORBA__TAO_TypedefDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:59

// Traits specializations.
namespace TAO
{

#if !defined (_CORBA_IROBJECT__TRAITS_CH_)
#define _CORBA_IROBJECT__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::IRObject>
  {
    static CORBA::IRObject_ptr tao_duplicate (
        CORBA::IRObject_ptr
      );
    static void tao_release (
        CORBA::IRObject_ptr
      );
    static CORBA::IRObject_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::IRObject_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_CONTAINED__TRAITS_CH_)
#define _CORBA_CONTAINED__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::Contained>
  {
    static CORBA::Contained_ptr tao_duplicate (
        CORBA::Contained_ptr
      );
    static void tao_release (
        CORBA::Contained_ptr
      );
    static CORBA::Contained_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::Contained_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_REPOSITORY__TRAITS_CH_)
#define _CORBA_REPOSITORY__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::Repository>
  {
    static CORBA::Repository_ptr tao_duplicate (
        CORBA::Repository_ptr
      );
    static void tao_release (
        CORBA::Repository_ptr
      );
    static CORBA::Repository_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::Repository_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_CONTAINER__TRAITS_CH_)
#define _CORBA_CONTAINER__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::Container>
  {
    static CORBA::Container_ptr tao_duplicate (
        CORBA::Container_ptr
      );
    static void tao_release (
        CORBA::Container_ptr
      );
    static CORBA::Container_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::Container_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_MODULEDEF__TRAITS_CH_)
#define _CORBA_MODULEDEF__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::ModuleDef>
  {
    static CORBA::ModuleDef_ptr tao_duplicate (
        CORBA::ModuleDef_ptr
      );
    static void tao_release (
        CORBA::ModuleDef_ptr
      );
    static CORBA::ModuleDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::ModuleDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_CONSTANTDEF__TRAITS_CH_)
#define _CORBA_CONSTANTDEF__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::ConstantDef>
  {
    static CORBA::ConstantDef_ptr tao_duplicate (
        CORBA::ConstantDef_ptr
      );
    static void tao_release (
        CORBA::ConstantDef_ptr
      );
    static CORBA::ConstantDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::ConstantDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_IDLTYPE__TRAITS_CH_)
#define _CORBA_IDLTYPE__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::IDLType>
  {
    static CORBA::IDLType_ptr tao_duplicate (
        CORBA::IDLType_ptr
      );
    static void tao_release (
        CORBA::IDLType_ptr
      );
    static CORBA::IDLType_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::IDLType_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_STRUCTDEF__TRAITS_CH_)
#define _CORBA_STRUCTDEF__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::StructDef>
  {
    static CORBA::StructDef_ptr tao_duplicate (
        CORBA::StructDef_ptr
      );
    static void tao_release (
        CORBA::StructDef_ptr
      );
    static CORBA::StructDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::StructDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_UNIONDEF__TRAITS_CH_)
#define _CORBA_UNIONDEF__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::UnionDef>
  {
    static CORBA::UnionDef_ptr tao_duplicate (
        CORBA::UnionDef_ptr
      );
    static void tao_release (
        CORBA::UnionDef_ptr
      );
    static CORBA::UnionDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::UnionDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_ENUMDEF__TRAITS_CH_)
#define _CORBA_ENUMDEF__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::EnumDef>
  {
    static CORBA::EnumDef_ptr tao_duplicate (
        CORBA::EnumDef_ptr
      );
    static void tao_release (
        CORBA::EnumDef_ptr
      );
    static CORBA::EnumDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::EnumDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_ALIASDEF__TRAITS_CH_)
#define _CORBA_ALIASDEF__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::AliasDef>
  {
    static CORBA::AliasDef_ptr tao_duplicate (
        CORBA::AliasDef_ptr
      );
    static void tao_release (
        CORBA::AliasDef_ptr
      );
    static CORBA::AliasDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::AliasDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_INTERFACEDEF__TRAITS_CH_)
#define _CORBA_INTERFACEDEF__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::InterfaceDef>
  {
    static CORBA::InterfaceDef_ptr tao_duplicate (
        CORBA::InterfaceDef_ptr
      );
    static void tao_release (
        CORBA::InterfaceDef_ptr
      );
    static CORBA::InterfaceDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::InterfaceDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXCEPTIONDEF__TRAITS_CH_)
#define _CORBA_EXCEPTIONDEF__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::ExceptionDef>
  {
    static CORBA::ExceptionDef_ptr tao_duplicate (
        CORBA::ExceptionDef_ptr
      );
    static void tao_release (
        CORBA::ExceptionDef_ptr
      );
    static CORBA::ExceptionDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::ExceptionDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_NATIVEDEF__TRAITS_CH_)
#define _CORBA_NATIVEDEF__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::NativeDef>
  {
    static CORBA::NativeDef_ptr tao_duplicate (
        CORBA::NativeDef_ptr
      );
    static void tao_release (
        CORBA::NativeDef_ptr
      );
    static CORBA::NativeDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::NativeDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_VALUEDEF__TRAITS_CH_)
#define _CORBA_VALUEDEF__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::ValueDef>
  {
    static CORBA::ValueDef_ptr tao_duplicate (
        CORBA::ValueDef_ptr
      );
    static void tao_release (
        CORBA::ValueDef_ptr
      );
    static CORBA::ValueDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::ValueDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_VALUEBOXDEF__TRAITS_CH_)
#define _CORBA_VALUEBOXDEF__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::ValueBoxDef>
  {
    static CORBA::ValueBoxDef_ptr tao_duplicate (
        CORBA::ValueBoxDef_ptr
      );
    static void tao_release (
        CORBA::ValueBoxDef_ptr
      );
    static CORBA::ValueBoxDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::ValueBoxDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_ABSTRACTINTERFACEDEF__TRAITS_CH_)
#define _CORBA_ABSTRACTINTERFACEDEF__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::AbstractInterfaceDef>
  {
    static CORBA::AbstractInterfaceDef_ptr tao_duplicate (
        CORBA::AbstractInterfaceDef_ptr
      );
    static void tao_release (
        CORBA::AbstractInterfaceDef_ptr
      );
    static CORBA::AbstractInterfaceDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::AbstractInterfaceDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_LOCALINTERFACEDEF__TRAITS_CH_)
#define _CORBA_LOCALINTERFACEDEF__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::LocalInterfaceDef>
  {
    static CORBA::LocalInterfaceDef_ptr tao_duplicate (
        CORBA::LocalInterfaceDef_ptr
      );
    static void tao_release (
        CORBA::LocalInterfaceDef_ptr
      );
    static CORBA::LocalInterfaceDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::LocalInterfaceDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXTINTERFACEDEF__TRAITS_CH_)
#define _CORBA_EXTINTERFACEDEF__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::ExtInterfaceDef>
  {
    static CORBA::ExtInterfaceDef_ptr tao_duplicate (
        CORBA::ExtInterfaceDef_ptr
      );
    static void tao_release (
        CORBA::ExtInterfaceDef_ptr
      );
    static CORBA::ExtInterfaceDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::ExtInterfaceDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXTVALUEDEF__TRAITS_CH_)
#define _CORBA_EXTVALUEDEF__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::ExtValueDef>
  {
    static CORBA::ExtValueDef_ptr tao_duplicate (
        CORBA::ExtValueDef_ptr
      );
    static void tao_release (
        CORBA::ExtValueDef_ptr
      );
    static CORBA::ExtValueDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::ExtValueDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXTABSTRACTINTERFACEDEF__TRAITS_CH_)
#define _CORBA_EXTABSTRACTINTERFACEDEF__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::ExtAbstractInterfaceDef>
  {
    static CORBA::ExtAbstractInterfaceDef_ptr tao_duplicate (
        CORBA::ExtAbstractInterfaceDef_ptr
      );
    static void tao_release (
        CORBA::ExtAbstractInterfaceDef_ptr
      );
    static CORBA::ExtAbstractInterfaceDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::ExtAbstractInterfaceDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXTLOCALINTERFACEDEF__TRAITS_CH_)
#define _CORBA_EXTLOCALINTERFACEDEF__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::ExtLocalInterfaceDef>
  {
    static CORBA::ExtLocalInterfaceDef_ptr tao_duplicate (
        CORBA::ExtLocalInterfaceDef_ptr
      );
    static void tao_release (
        CORBA::ExtLocalInterfaceDef_ptr
      );
    static CORBA::ExtLocalInterfaceDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::ExtLocalInterfaceDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */

#if !defined (_CORBA_TYPEDEFDEF__TRAITS_CH_)
#define _CORBA_TYPEDEFDEF__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct TAO_IFR_Client_Export Objref_Traits<CORBA::TypedefDef>
  {
    static CORBA::TypedefDef_ptr tao_duplicate (
        CORBA::TypedefDef_ptr
      );
    static void tao_release (
        CORBA::TypedefDef_ptr
      );
    static CORBA::TypedefDef_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        CORBA::TypedefDef_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */
}

// TAO_IDL - Generated from
// be\be_visitor_enum/any_op_ch.cpp:51

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::DefinitionKind);
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::DefinitionKind &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::IRObject_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::IRObject_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::IRObject_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::Repository_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::Repository_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::Repository *&);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::Contained_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::Contained_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::Contained_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::Contained::Description &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::Contained::Description*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::Contained::Description *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::Contained::Description *&);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ModuleDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ModuleDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ModuleDef *&);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ConstantDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ConstantDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ConstantDef *&);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::StructDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::StructDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::StructDef *&);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::UnionDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::UnionDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::UnionDef *&);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::EnumDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::EnumDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::EnumDef *&);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AliasDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AliasDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::AliasDef *&);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::InterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::InterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::InterfaceDef *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::InterfaceDefSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::InterfaceDefSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::InterfaceDefSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::InterfaceDefSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExceptionDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExceptionDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExceptionDef *&);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::NativeDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::NativeDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::NativeDef *&);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ValueDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ValueDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ValueDef *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ValueDefSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ValueDefSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ValueDefSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ValueDefSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ValueBoxDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ValueBoxDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ValueBoxDef *&);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AbstractInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AbstractInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::AbstractInterfaceDef *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::AbstractInterfaceDefSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AbstractInterfaceDefSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::AbstractInterfaceDefSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::AbstractInterfaceDefSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::LocalInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::LocalInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::LocalInterfaceDef *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::LocalInterfaceDefSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::LocalInterfaceDefSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::LocalInterfaceDefSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::LocalInterfaceDefSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtInterfaceDef *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ExtInterfaceDefSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtInterfaceDefSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtInterfaceDefSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ExtInterfaceDefSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtValueDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtValueDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtValueDef *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ExtValueDefSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtValueDefSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtValueDefSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ExtValueDefSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtAbstractInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtAbstractInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtAbstractInterfaceDef *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ExtAbstractInterfaceDefSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtAbstractInterfaceDefSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtAbstractInterfaceDefSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ExtAbstractInterfaceDefSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/any_op_ch.cpp:65

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtLocalInterfaceDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtLocalInterfaceDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtLocalInterfaceDef *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ExtLocalInterfaceDefSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtLocalInterfaceDefSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtLocalInterfaceDefSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ExtLocalInterfaceDefSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ContainedSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ContainedSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ContainedSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ContainedSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::StructMember &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::StructMember*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::StructMember *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::StructMember *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::StructMemberSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::StructMemberSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::StructMemberSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::StructMemberSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::Initializer &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::Initializer*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::Initializer *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::Initializer *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::InitializerSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::InitializerSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::InitializerSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::InitializerSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ExceptionDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExceptionDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExceptionDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ExceptionDescription *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ExcDescriptionSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExcDescriptionSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExcDescriptionSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ExcDescriptionSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ExtInitializer &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtInitializer*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtInitializer *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ExtInitializer *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::ExtInitializerSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ExtInitializerSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ExtInitializerSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::ExtInitializerSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::UnionMember &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::UnionMember*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::UnionMember *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::UnionMember *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::UnionMemberSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::UnionMemberSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::UnionMemberSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::UnionMemberSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::EnumMemberSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::EnumMemberSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::EnumMemberSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::EnumMemberSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::Container_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::Container_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::Container_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::Container::Description &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::Container::Description*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::Container::Description *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::Container::Description *&);

// TAO_IDL - Generated from
// be\be_visitor_sequence/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::Container::DescriptionSeq &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::Container::DescriptionSeq*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::Container::DescriptionSeq *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::Container::DescriptionSeq *&);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::IDLType_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::IDLType_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::IDLType_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::TypedefDef_ptr); // copying
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::TypedefDef_ptr *); // non-copying
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::TypedefDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/any_op_ch.cpp:52

TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA::TypeDescription &); // copying version
TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::TypeDescription*); // noncopying version
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::TypeDescription *&); // deprecated
TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA::TypeDescription *&);

// TAO_IDL - Generated from
// be\be_visitor_enum/cdr_op_ch.cpp:50

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::DefinitionKind &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::DefinitionKind &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::IRObject_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::IRObject_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::Repository_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::Repository_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::Contained_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::Contained_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::Contained::Description &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::Contained::Description &);

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ModuleDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ModuleDef_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ConstantDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ConstantDef_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::StructDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::StructDef_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::UnionDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::UnionDef_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::EnumDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::EnumDef_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AliasDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AliasDef_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::InterfaceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::InterfaceDef_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_InterfaceDefSeq_H_
#define _TAO_CDR_OP_CORBA_InterfaceDefSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::InterfaceDefSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::InterfaceDefSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_InterfaceDefSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExceptionDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExceptionDef_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::NativeDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::NativeDef_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ValueDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ValueDef_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_ValueDefSeq_H_
#define _TAO_CDR_OP_CORBA_ValueDefSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::ValueDefSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::ValueDefSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_ValueDefSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ValueBoxDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ValueBoxDef_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AbstractInterfaceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AbstractInterfaceDef_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_AbstractInterfaceDefSeq_H_
#define _TAO_CDR_OP_CORBA_AbstractInterfaceDefSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::AbstractInterfaceDefSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::AbstractInterfaceDefSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_AbstractInterfaceDefSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::LocalInterfaceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::LocalInterfaceDef_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_LocalInterfaceDefSeq_H_
#define _TAO_CDR_OP_CORBA_LocalInterfaceDefSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::LocalInterfaceDefSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::LocalInterfaceDefSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_LocalInterfaceDefSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtInterfaceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtInterfaceDef_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_ExtInterfaceDefSeq_H_
#define _TAO_CDR_OP_CORBA_ExtInterfaceDefSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::ExtInterfaceDefSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::ExtInterfaceDefSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_ExtInterfaceDefSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtValueDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtValueDef_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_ExtValueDefSeq_H_
#define _TAO_CDR_OP_CORBA_ExtValueDefSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::ExtValueDefSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::ExtValueDefSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_ExtValueDefSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtAbstractInterfaceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtAbstractInterfaceDef_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_ExtAbstractInterfaceDefSeq_H_
#define _TAO_CDR_OP_CORBA_ExtAbstractInterfaceDefSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::ExtAbstractInterfaceDefSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::ExtAbstractInterfaceDefSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_ExtAbstractInterfaceDefSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_interface_fwd/cdr_op_ch.cpp:66

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtLocalInterfaceDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtLocalInterfaceDef_ptr &);


// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_ExtLocalInterfaceDefSeq_H_
#define _TAO_CDR_OP_CORBA_ExtLocalInterfaceDefSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::ExtLocalInterfaceDefSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::ExtLocalInterfaceDefSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_ExtLocalInterfaceDefSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_ContainedSeq_H_
#define _TAO_CDR_OP_CORBA_ContainedSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::ContainedSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::ContainedSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_ContainedSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::StructMember &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::StructMember &);

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_StructMemberSeq_H_
#define _TAO_CDR_OP_CORBA_StructMemberSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::StructMemberSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::StructMemberSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_StructMemberSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::Initializer &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::Initializer &);

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_InitializerSeq_H_
#define _TAO_CDR_OP_CORBA_InitializerSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::InitializerSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::InitializerSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_InitializerSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExceptionDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExceptionDescription &);

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_ExcDescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_ExcDescriptionSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::ExcDescriptionSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::ExcDescriptionSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_ExcDescriptionSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ExtInitializer &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ExtInitializer &);

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_ExtInitializerSeq_H_
#define _TAO_CDR_OP_CORBA_ExtInitializerSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::ExtInitializerSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::ExtInitializerSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_ExtInitializerSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::UnionMember &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::UnionMember &);

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_UnionMemberSeq_H_
#define _TAO_CDR_OP_CORBA_UnionMemberSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::UnionMemberSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::UnionMemberSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_UnionMemberSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_EnumMemberSeq_H_
#define _TAO_CDR_OP_CORBA_EnumMemberSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::EnumMemberSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::EnumMemberSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_EnumMemberSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::Container_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::Container_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::Container::Description &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::Container::Description &);

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_ch.cpp:71

#if !defined _TAO_CDR_OP_CORBA_Container_DescriptionSeq_H_
#define _TAO_CDR_OP_CORBA_Container_DescriptionSeq_H_

TAO_IFR_Client_Export CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const CORBA::Container::DescriptionSeq &
  );
TAO_IFR_Client_Export CORBA::Boolean operator>> (
    TAO_InputCDR &,
    CORBA::Container::DescriptionSeq &
  );

#endif /* _TAO_CDR_OP_CORBA_Container_DescriptionSeq_H_ */

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::IDLType_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::IDLType_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_ch.cpp:55

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::TypedefDef_ptr );
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::TypedefDef_ptr &);

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::TypeDescription &);
TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::TypeDescription &);

// TAO_IDL - Generated from
// be\be_codegen.cpp:978

#if defined (__ACE_INLINE__)
#include "IFR_BaseC.i"
#endif /* defined INLINE */

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#include /**/ "ace/post.h"

#endif /* ifndef */

