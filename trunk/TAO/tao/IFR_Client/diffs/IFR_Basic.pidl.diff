--- IFR_Basic.pidl.old	Fri Jun  1 22:48:20 2001
+++ IFR_Basic.pidl	Fri Jun  1 22:43:58 2001
@@ -71,13 +71,6 @@
 
 module CORBA 
 {
-  interface PrimitiveDef;
-  interface StringDef;
-  interface SequenceDef;
-  interface ArrayDef;
-  interface WstringDef;
-  interface FixedDef;
-
   enum PrimitiveKind 
   {
     pk_null, 
@@ -104,276 +97,277 @@
     pk_value_base
   };
 
-  interface Repository : Container 
+  enum AttributeMode 
+  {
+    ATTR_NORMAL, 
+    ATTR_READONLY
+  };
+
+  enum OperationMode 
+  {
+    OP_NORMAL, 
+    OP_ONEWAY
+  };
+};
+
+  interface CORBA_PrimitiveDef;
+  interface CORBA_StringDef;
+  interface CORBA_SequenceDef;
+  interface CORBA_ArrayDef;
+  interface CORBA_WstringDef;
+  interface CORBA_FixedDef;
+
+  interface CORBA_Repository : CORBA_Container 
   {
     // read interface
-    Contained lookup_id (
-        in RepositoryId search_id
+    CORBA_Contained lookup_id (
+        in string search_id
       );
-    TypeCode get_canonical_typecode (
-        in TypeCode tc
+    CORBA::TypeCode get_canonical_typecode (
+        in CORBA::TypeCode tc
       );
-    PrimitiveDef get_primitive (
-        in PrimitiveKind kind
+    CORBA_PrimitiveDef get_primitive (
+        in CORBA::PrimitiveKind kind
       );
     // write interface
-    StringDef create_string (
+    CORBA_StringDef create_string (
         in unsigned long bound
       );
-    WstringDef create_wstring (
+    CORBA_WstringDef create_wstring (
         in unsigned long bound
       );
-    SequenceDef create_sequence (
+    CORBA_SequenceDef create_sequence (
         in unsigned long bound,
-        in IDLType element_type
+        in CORBA_IDLType element_type
       );
-    ArrayDef create_array (
+    CORBA_ArrayDef create_array (
         in unsigned long length,
-        in IDLType element_type
+        in CORBA_IDLType element_type
       );
-    FixedDef create_fixed (
+    CORBA_FixedDef create_fixed (
         in unsigned short digits,
         in short scale
       );
   };
 
-  interface ModuleDef : Container, Contained 
+  interface CORBA_ModuleDef : CORBA_Container, CORBA_Contained 
   {
   };
 
-  struct ModuleDescription 
+  struct CORBA_ModuleDescription 
   {
-    Identifier name;
-    RepositoryId id;
-    RepositoryId defined_in;
-    VersionSpec version;
+    string name;
+    string id;
+    string defined_in;
+    string version;
   };
 
-  interface ConstantDef : Contained 
+  interface CORBA_ConstantDef : CORBA_Contained 
   {
-    readonly attribute TypeCode type;
-    attribute IDLType type_def;
+    readonly attribute CORBA::TypeCode type;
+    attribute CORBA_IDLType type_def;
     attribute any value;
   };
 
-  struct ConstantDescription 
+  struct CORBA_ConstantDescription 
   {
-    Identifier name;
-    RepositoryId id;
-    RepositoryId defined_in;
-    VersionSpec version;
-    TypeCode type;
+    string name;
+    string id;
+    string defined_in;
+    string version;
+    CORBA::TypeCode type;
     any value;
   };
 
-  interface StructDef : TypedefDef, Container 
+  interface CORBA_StructDef : CORBA_TypedefDef, CORBA_Container 
   {
-    attribute StructMemberSeq members;
+    attribute CORBA_StructMemberSeq members;
   };
 
-  interface UnionDef : TypedefDef, Container 
+  interface CORBA_UnionDef : CORBA_TypedefDef, CORBA_Container 
   {
-    readonly attribute TypeCode discriminator_type;
-    attribute IDLType discriminator_type_def;
-    attribute UnionMemberSeq members;
+    readonly attribute CORBA::TypeCode discriminator_type;
+    attribute CORBA_IDLType discriminator_type_def;
+    attribute CORBA_UnionMemberSeq members;
   };
 
-  interface EnumDef : TypedefDef 
+  interface CORBA_EnumDef : CORBA_TypedefDef 
   {
-    attribute EnumMemberSeq members;
+    attribute CORBA_EnumMemberSeq members;
   };
 
-  interface AliasDef : TypedefDef 
+  interface CORBA_AliasDef : CORBA_TypedefDef 
   {
-    attribute IDLType original_type_def;
+    attribute CORBA_IDLType original_type_def;
   };
 
-  interface NativeDef : TypedefDef 
+  interface CORBA_NativeDef : CORBA_TypedefDef 
   {
   };
 
-  interface PrimitiveDef: IDLType 
+  interface CORBA_PrimitiveDef: CORBA_IDLType 
   {
-    readonly attribute PrimitiveKind kind;
+    readonly attribute CORBA::PrimitiveKind kind;
   };
 
-  interface StringDef : IDLType 
+  interface CORBA_StringDef : CORBA_IDLType 
   {
     attribute unsigned long bound;
   };
 
-  interface WstringDef : IDLType 
+  interface CORBA_WstringDef : CORBA_IDLType 
   {
     attribute unsigned long bound;
   };
 
-  interface SequenceDef : IDLType 
+  interface CORBA_SequenceDef : CORBA_IDLType 
   {
     attribute unsigned long bound;
-    readonly attribute TypeCode element_type;
-    attribute IDLType element_type_def;
+    readonly attribute CORBA::TypeCode element_type;
+    attribute CORBA_IDLType element_type_def;
   };
 
-  interface ArrayDef : IDLType 
+  interface CORBA_ArrayDef : CORBA_IDLType 
   {
   attribute unsigned long length;
-  readonly attribute TypeCode element_type;
-  attribute IDLType element_type_def;
-  };
-
-  interface ExceptionDef : Contained, Container 
-  {
-    readonly attribute TypeCode type;
-    attribute StructMemberSeq members;
-  };
-
-  struct ExceptionDescription 
-  {
-    Identifier name;
-    RepositoryId id;
-    RepositoryId defined_in;
-    VersionSpec version;
-    TypeCode type;
+  readonly attribute CORBA::TypeCode element_type;
+  attribute CORBA_IDLType element_type_def;
   };
 
-  typedef sequence <ExceptionDef> ExceptionDefSeq;
-  typedef sequence <ExceptionDescription> ExcDescriptionSeq;
-
-  enum AttributeMode 
+  interface CORBA_ExceptionDef : CORBA_Contained, CORBA_Container 
   {
-    ATTR_NORMAL, 
-    ATTR_READONLY
+    readonly attribute CORBA::TypeCode type;
+    attribute CORBA_StructMemberSeq members;
   };
 
-  interface AttributeDef : Contained 
+  struct CORBA_ExceptionDescription 
   {
-    readonly attribute TypeCode type;
-    attribute IDLType type_def;
-    attribute AttributeMode mode;
+    string name;
+    string id;
+    string defined_in;
+    string version;
+    CORBA::TypeCode type;
   };
 
-  struct AttributeDescription 
-  {
-    Identifier name;
-    RepositoryId id;
-    RepositoryId defined_in;
-    VersionSpec version;
-    TypeCode type;
-    AttributeMode mode;
-  };
+  typedef sequence <CORBA_ExceptionDef> CORBA_ExceptionDefSeq;
+  typedef sequence <CORBA_ExceptionDescription> CORBA_ExcDescriptionSeq;
 
-  enum OperationMode 
+  interface CORBA_AttributeDef : CORBA_Contained 
   {
-    OP_NORMAL, 
-    OP_ONEWAY
+    readonly attribute CORBA::TypeCode type;
+    attribute CORBA_IDLType type_def;
+    attribute CORBA::AttributeMode mode;
   };
 
-  enum ParameterMode 
+  struct CORBA_AttributeDescription 
   {
-    PARAM_IN, 
-    PARAM_OUT, 
-    PARAM_INOUT
+    string name;
+    string id;
+    string defined_in;
+    string version;
+    CORBA::TypeCode type;
+    CORBA::AttributeMode mode;
   };
 
-  struct ParameterDescription 
+  struct CORBA_ParameterDescription 
   {
-    Identifier name;
-    TypeCode type;
-    IDLType type_def;
-    ParameterMode mode;
+    string name;
+    CORBA::TypeCode type;
+    CORBA_IDLType type_def;
+    CORBA::ParameterMode mode;
   };
 
-  typedef sequence <ParameterDescription> ParDescriptionSeq;
-  typedef Identifier ContextIdentifier;
-  typedef sequence <ContextIdentifier> ContextIdSeq;
+  typedef sequence <CORBA_ParameterDescription> CORBA_ParDescriptionSeq;
+  typedef string CORBA_Contextstring;
+  typedef sequence <CORBA_Contextstring> CORBA_ContextIdSeq;
 
-  interface OperationDef : Contained 
+  interface CORBA_OperationDef : CORBA_Contained 
   {
-    readonly attribute TypeCode result;
-    attribute IDLType result_def;
-    attribute ParDescriptionSeq params;
-    attribute OperationMode mode;
-    attribute ContextIdSeq contexts;
-    attribute ExceptionDefSeq exceptions;
+    readonly attribute CORBA::TypeCode result;
+    attribute CORBA_IDLType result_def;
+    attribute CORBA_ParDescriptionSeq params;
+    attribute CORBA::OperationMode mode;
+    attribute CORBA_ContextIdSeq contexts;
+    attribute CORBA_ExceptionDefSeq exceptions;
   };
 
-  struct OperationDescription 
+  struct CORBA_OperationDescription 
   {
-    Identifier name;
-    RepositoryId id;
-    RepositoryId defined_in;
-    VersionSpec version;
-    TypeCode result;
-    OperationMode mode;
-    ContextIdSeq contexts;
-    ParDescriptionSeq parameters;
-    ExcDescriptionSeq exceptions;
+    string name;
+    string id;
+    string defined_in;
+    string version;
+    CORBA::TypeCode result;
+    CORBA::OperationMode mode;
+    CORBA_ContextIdSeq contexts;
+    CORBA_ParDescriptionSeq parameters;
+    CORBA_ExcDescriptionSeq exceptions;
   };
 
-  typedef sequence <RepositoryId> RepositoryIdSeq;
-  typedef sequence <OperationDescription> OpDescriptionSeq;
-  typedef sequence <AttributeDescription> AttrDescriptionSeq;
+  typedef sequence <string> CORBA_RepositoryIdSeq;
+  typedef sequence <CORBA_OperationDescription> CORBA_OpDescriptionSeq;
+  typedef sequence <CORBA_AttributeDescription> CORBA_AttrDescriptionSeq;
 
-  interface InterfaceDef : Container, Contained, IDLType 
+  interface CORBA_InterfaceDef : CORBA_Container, CORBA_Contained, CORBA_IDLType 
   {
     // read/write interface
-    attribute InterfaceDefSeq base_interfaces;
+    attribute CORBA_InterfaceDefSeq base_interfaces;
     // read interface
     boolean is_a (
-        in RepositoryId interface_id
+        in string interface_id
       );
 
     struct FullInterfaceDescription 
     {
-      Identifier name;
-      RepositoryId id;
-      RepositoryId defined_in;
-      VersionSpec version;
-      OpDescriptionSeq operations;
-      AttrDescriptionSeq attributes;
-      RepositoryIdSeq base_interfaces;
-      TypeCode type;
+      string name;
+      string id;
+      string defined_in;
+      string version;
+      CORBA_OpDescriptionSeq operations;
+      CORBA_AttrDescriptionSeq attributes;
+      CORBA_RepositoryIdSeq base_interfaces;
+      CORBA::TypeCode type;
     };
 
     FullInterfaceDescription describe_interface ();
 
     // write interface
-    AttributeDef create_attribute (
-        in RepositoryId id,
-        in Identifier name,
-        in VersionSpec version,
-        in IDLType type,
-        in AttributeMode mode
+    CORBA_AttributeDef create_attribute (
+        in string id,
+        in string name,
+        in string version,
+        in CORBA_IDLType type,
+        in CORBA::AttributeMode mode
       );
-    OperationDef create_operation (
-        in RepositoryId id,
-        in Identifier name,
-        in VersionSpec version,
-        in IDLType result,
-        in OperationMode mode,
-        in ParDescriptionSeq params,
-        in ExceptionDefSeq exceptions,
-        in ContextIdSeq contexts
+    CORBA_OperationDef create_operation (
+        in string id,
+        in string name,
+        in string version,
+        in CORBA_IDLType result,
+        in CORBA::OperationMode mode,
+        in CORBA_ParDescriptionSeq params,
+        in CORBA_ExceptionDefSeq exceptions,
+        in CORBA_ContextIdSeq contexts
       );
   };
 
-  struct InterfaceDescription 
+  struct CORBA_InterfaceDescription 
   {
-    Identifier name;
-    RepositoryId id;
-    RepositoryId defined_in;
-    VersionSpec version;
-    RepositoryIdSeq base_interfaces;
+    string name;
+    string id;
+    string defined_in;
+    string version;
+    CORBA_RepositoryIdSeq base_interfaces;
   };
 
-  interface AbstractInterfaceDef : InterfaceDef 
+  interface CORBA_AbstractInterfaceDef : CORBA_InterfaceDef 
   {
   };
 
-  interface LocalInterfaceDef : InterfaceDef 
+  interface CORBA_LocalInterfaceDef : CORBA_InterfaceDef 
   {
   };
-};
+
 
 #pragma prefix ""
 
