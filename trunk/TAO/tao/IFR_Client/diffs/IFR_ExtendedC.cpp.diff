--- orig/IFR_ExtendedC.cpp	Tue Apr 24 23:25:56 2001
+++ IFR_ExtendedC.cpp	Tue Apr 24 23:09:09 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -20,10 +20,8 @@
 //     http://www.cs.wustl.edu/~schmidt/TAO.html
 
 #include "IFR_ExtendedC.h"
-
-#include "tao/Stub.h"
-#include "tao/Invocation.h"
 #include "tao/ClientRequestInfo.h"
+
 #if TAO_HAS_INTERCEPTORS == 1
 #include "tao/RequestInfo_Util.h"
 #endif  /* TAO_HAS_INTERCEPTORS == 1 */
@@ -36,40 +34,6 @@
 #include "IFR_ExtendedC.i"
 #endif /* !defined INLINE */
 
-static const CORBA::Long _oc_CORBA_Visibility[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  33,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x412f5669), 
-  ACE_NTOHL (0x73696269), 
-  ACE_NTOHL (0x6c697479), 
-  ACE_NTOHL (0x3a312e30), 
-  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Visibility:1.0
-  11,
-  ACE_NTOHL (0x56697369), 
-  ACE_NTOHL (0x62696c69), 
-  ACE_NTOHL (0x74790000),  // name = Visibility
-  CORBA::tk_short,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_Visibility (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_Visibility),
-    (char *) &_oc_CORBA_Visibility,
-    0,
-    sizeof (CORBA::Visibility)
-  );
-
-TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
-TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_Visibility, &_tc_TAO_tc_CORBA_Visibility)
-TAO_NAMESPACE_END
-
 CORBA_FixedDef_ptr
 tao_CORBA_FixedDef_duplicate (
     CORBA_FixedDef_ptr p
@@ -1392,7 +1356,7 @@
     return CORBA_FixedDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_FixedDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/FixedDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_FixedDef::_nil ());
       if (is_a == 0)
         return CORBA_FixedDef::_nil ();
@@ -1460,9 +1424,9 @@
 CORBA::Boolean CORBA_FixedDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_FixedDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IDLType:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/FixedDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IDLType:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -1511,7 +1475,7 @@
 
 const char* CORBA_FixedDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_FixedDef:1.0";
+  return "IDL:omg.org/CORBA/FixedDef:1.0";
 }
 
 CORBA::UShort CORBA_FixedDef::digits (
@@ -1586,139 +1550,6 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_FixedDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  31,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4669), 
-  ACE_NTOHL (0x78656444), 
-  ACE_NTOHL (0x65663a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_FixedDef:1.0
-  15,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f4669), 
-  ACE_NTOHL (0x78656444), 
-  ACE_NTOHL (0x65660000),  // name = CORBA_FixedDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_FixedDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_FixedDef),
-    (char *) &_oc_CORBA_FixedDef,
-    0,
-    sizeof (CORBA_FixedDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_FixedDef =
-  &_tc_TAO_tc_CORBA_FixedDef;
-
-static const CORBA::Long _oc_CORBA_ValueMember[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  34,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5661), 
-  ACE_NTOHL (0x6c75654d), 
-  ACE_NTOHL (0x656d6265), 
-  ACE_NTOHL (0x723a312e), 
-  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_ValueMember:1.0
-  18,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5661), 
-  ACE_NTOHL (0x6c75654d), 
-  ACE_NTOHL (0x656d6265), 
-  ACE_NTOHL (0x72000000),  // name = CORBA_ValueMember
-  7, // member count
-  5,
-  ACE_NTOHL (0x6e616d65), 
-  ACE_NTOHL (0x0),  // name = name
-  CORBA::tk_string, 
-  0U, // string length
-  3,
-  ACE_NTOHL (0x69640000),  // name = id
-  CORBA::tk_string, 
-  0U, // string length
-  11,
-  ACE_NTOHL (0x64656669), 
-  ACE_NTOHL (0x6e65645f), 
-  ACE_NTOHL (0x696e0000),  // name = defined_in
-  CORBA::tk_string, 
-  0U, // string length
-  8,
-  ACE_NTOHL (0x76657273), 
-  ACE_NTOHL (0x696f6e00),  // name = version
-  CORBA::tk_string, 
-  0U, // string length
-  5,
-  ACE_NTOHL (0x74797065), 
-  ACE_NTOHL (0x0),  // name = type
-  CORBA::tk_TypeCode,
-
-  9,
-  ACE_NTOHL (0x74797065), 
-  ACE_NTOHL (0x5f646566), 
-  ACE_NTOHL (0x0),  // name = type_def
-  CORBA::tk_objref, // typecode kind
-  60, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    30,
-    ACE_NTOHL (0x49444c3a), 
-    ACE_NTOHL (0x6f6d672e), 
-    ACE_NTOHL (0x6f72672f), 
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f4944), 
-    ACE_NTOHL (0x4c547970), 
-    ACE_NTOHL (0x653a312e), 
-    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_IDLType:1.0
-    14,
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f4944), 
-    ACE_NTOHL (0x4c547970), 
-    ACE_NTOHL (0x65000000),  // name = CORBA_IDLType
-
-  7,
-  ACE_NTOHL (0x61636365), 
-  ACE_NTOHL (0x73730000),  // name = access
-  CORBA::tk_alias, // typecode kind for typedefs
-  64, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    33,
-    ACE_NTOHL (0x49444c3a), 
-    ACE_NTOHL (0x6f6d672e), 
-    ACE_NTOHL (0x6f72672f), 
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x412f5669), 
-    ACE_NTOHL (0x73696269), 
-    ACE_NTOHL (0x6c697479), 
-    ACE_NTOHL (0x3a312e30), 
-    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Visibility:1.0
-    11,
-    ACE_NTOHL (0x56697369), 
-    ACE_NTOHL (0x62696c69), 
-    ACE_NTOHL (0x74790000),  // name = Visibility
-    CORBA::tk_short,
-
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ValueMember (
-    CORBA::tk_struct,
-    sizeof (_oc_CORBA_ValueMember),
-    (char *) &_oc_CORBA_ValueMember,
-    0,
-    sizeof (CORBA_ValueMember)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_ValueMember =
-  &_tc_TAO_tc_CORBA_ValueMember;
-
 void CORBA_ValueMember::_tao_any_destructor (void *x)
 {
   CORBA_ValueMember *tmp = ACE_static_cast (CORBA_ValueMember*,x);
@@ -1821,136 +1652,6 @@
 
 #endif /* end #if !defined */
 
-static const CORBA::Long _oc_CORBA_ValueMemberSeq[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  37,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5661), 
-  ACE_NTOHL (0x6c75654d), 
-  ACE_NTOHL (0x656d6265), 
-  ACE_NTOHL (0x72536571), 
-  ACE_NTOHL (0x3a312e30), 
-  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA_ValueMemberSeq:1.0
-  21,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5661), 
-  ACE_NTOHL (0x6c75654d), 
-  ACE_NTOHL (0x656d6265), 
-  ACE_NTOHL (0x72536571), 
-  ACE_NTOHL (0x0),  // name = CORBA_ValueMemberSeq
-  CORBA::tk_sequence, // typecode kind
-  352, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    CORBA::tk_struct, // typecode kind
-    336, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      34,
-      ACE_NTOHL (0x49444c3a), 
-      ACE_NTOHL (0x6f6d672e), 
-      ACE_NTOHL (0x6f72672f), 
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f5661), 
-      ACE_NTOHL (0x6c75654d), 
-      ACE_NTOHL (0x656d6265), 
-      ACE_NTOHL (0x723a312e), 
-      ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_ValueMember:1.0
-      18,
-      ACE_NTOHL (0x434f5242), 
-      ACE_NTOHL (0x415f5661), 
-      ACE_NTOHL (0x6c75654d), 
-      ACE_NTOHL (0x656d6265), 
-      ACE_NTOHL (0x72000000),  // name = CORBA_ValueMember
-      7, // member count
-      5,
-      ACE_NTOHL (0x6e616d65), 
-      ACE_NTOHL (0x0),  // name = name
-      CORBA::tk_string, 
-      0U, // string length
-      3,
-      ACE_NTOHL (0x69640000),  // name = id
-      CORBA::tk_string, 
-      0U, // string length
-      11,
-      ACE_NTOHL (0x64656669), 
-      ACE_NTOHL (0x6e65645f), 
-      ACE_NTOHL (0x696e0000),  // name = defined_in
-      CORBA::tk_string, 
-      0U, // string length
-      8,
-      ACE_NTOHL (0x76657273), 
-      ACE_NTOHL (0x696f6e00),  // name = version
-      CORBA::tk_string, 
-      0U, // string length
-      5,
-      ACE_NTOHL (0x74797065), 
-      ACE_NTOHL (0x0),  // name = type
-      CORBA::tk_TypeCode,
-
-      9,
-      ACE_NTOHL (0x74797065), 
-      ACE_NTOHL (0x5f646566), 
-      ACE_NTOHL (0x0),  // name = type_def
-      CORBA::tk_objref, // typecode kind
-      60, // encapsulation length
-        TAO_ENCAP_BYTE_ORDER, // byte order
-        30,
-        ACE_NTOHL (0x49444c3a), 
-        ACE_NTOHL (0x6f6d672e), 
-        ACE_NTOHL (0x6f72672f), 
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4944), 
-        ACE_NTOHL (0x4c547970), 
-        ACE_NTOHL (0x653a312e), 
-        ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_IDLType:1.0
-        14,
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4944), 
-        ACE_NTOHL (0x4c547970), 
-        ACE_NTOHL (0x65000000),  // name = CORBA_IDLType
-
-      7,
-      ACE_NTOHL (0x61636365), 
-      ACE_NTOHL (0x73730000),  // name = access
-      CORBA::tk_alias, // typecode kind for typedefs
-      64, // encapsulation length
-        TAO_ENCAP_BYTE_ORDER, // byte order
-        33,
-        ACE_NTOHL (0x49444c3a), 
-        ACE_NTOHL (0x6f6d672e), 
-        ACE_NTOHL (0x6f72672f), 
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x412f5669), 
-        ACE_NTOHL (0x73696269), 
-        ACE_NTOHL (0x6c697479), 
-        ACE_NTOHL (0x3a312e30), 
-        ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Visibility:1.0
-        11,
-        ACE_NTOHL (0x56697369), 
-        ACE_NTOHL (0x62696c69), 
-        ACE_NTOHL (0x74790000),  // name = Visibility
-        CORBA::tk_short,
-
-
-
-    0U,
-
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ValueMemberSeq (
-    CORBA::tk_alias,
-    sizeof (_oc_CORBA_ValueMemberSeq),
-    (char *) &_oc_CORBA_ValueMemberSeq,
-    0,
-    sizeof (CORBA_ValueMemberSeq)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_ValueMemberSeq =
-  &_tc_TAO_tc_CORBA_ValueMemberSeq;
-
 CORBA_ValueMemberDef_ptr
 tao_CORBA_ValueMemberDef_duplicate (
     CORBA_ValueMemberDef_ptr p
@@ -3529,7 +3230,7 @@
     return CORBA_ValueMemberDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_ValueMemberDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/ValueMemberDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_ValueMemberDef::_nil ());
       if (is_a == 0)
         return CORBA_ValueMemberDef::_nil ();
@@ -3597,9 +3298,9 @@
 CORBA::Boolean CORBA_ValueMemberDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_ValueMemberDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Contained:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/ValueMemberDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Contained:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -3648,7 +3349,7 @@
 
 const char* CORBA_ValueMemberDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_ValueMemberDef:1.0";
+  return "IDL:omg.org/CORBA/ValueMemberDef:1.0";
 }
 
 CORBA::TypeCode_ptr CORBA_ValueMemberDef::type (
@@ -3740,40 +3441,6 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_ValueMemberDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  37,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5661), 
-  ACE_NTOHL (0x6c75654d), 
-  ACE_NTOHL (0x656d6265), 
-  ACE_NTOHL (0x72446566), 
-  ACE_NTOHL (0x3a312e30), 
-  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA_ValueMemberDef:1.0
-  21,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5661), 
-  ACE_NTOHL (0x6c75654d), 
-  ACE_NTOHL (0x656d6265), 
-  ACE_NTOHL (0x72446566), 
-  ACE_NTOHL (0x0),  // name = CORBA_ValueMemberDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ValueMemberDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_ValueMemberDef),
-    (char *) &_oc_CORBA_ValueMemberDef,
-    0,
-    sizeof (CORBA_ValueMemberDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_ValueMemberDef =
-  &_tc_TAO_tc_CORBA_ValueMemberDef;
-
 CORBA_ValueDef_ptr
 tao_CORBA_ValueDef_duplicate (
     CORBA_ValueDef_ptr p
@@ -9133,7 +8800,7 @@
     return CORBA_ValueDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_ValueDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/ValueDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_ValueDef::_nil ());
       if (is_a == 0)
         return CORBA_ValueDef::_nil ();
@@ -9201,11 +8868,11 @@
 CORBA::Boolean CORBA_ValueDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_ValueDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Container:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Contained:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IDLType:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/ValueDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Container:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Contained:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IDLType:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -9278,7 +8945,7 @@
 
 const char* CORBA_ValueDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_ValueDef:1.0";
+  return "IDL:omg.org/CORBA/ValueDef:1.0";
 }
 
 CORBA_InterfaceDefSeq * CORBA_ValueDef::supported_interfaces (
@@ -9560,7 +9227,7 @@
   ACE_NTOHL (0x6f6d672e), 
   ACE_NTOHL (0x6f72672f), 
   ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5661), 
+  ACE_NTOHL (0x412f5661), 
   ACE_NTOHL (0x6c756544), 
   ACE_NTOHL (0x65662f46), 
   ACE_NTOHL (0x756c6c56), 
@@ -9568,7 +9235,7 @@
   ACE_NTOHL (0x44657363), 
   ACE_NTOHL (0x72697074), 
   ACE_NTOHL (0x696f6e3a), 
-  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_ValueDef/FullValueDescription:1.0
+  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ValueDef/FullValueDescription:1.0
   21,
   ACE_NTOHL (0x46756c6c), 
   ACE_NTOHL (0x56616c75), 
@@ -9580,12 +9247,49 @@
   5,
   ACE_NTOHL (0x6e616d65), 
   ACE_NTOHL (0x0),  // name = name
-  CORBA::tk_string, 
-  0U, // string length
+  CORBA::tk_alias, // typecode kind for typedefs
+  68, // encapsulation length
+    TAO_ENCAP_BYTE_ORDER, // byte order
+    33,
+    ACE_NTOHL (0x49444c3a), 
+    ACE_NTOHL (0x6f6d672e), 
+    ACE_NTOHL (0x6f72672f), 
+    ACE_NTOHL (0x434f5242), 
+    ACE_NTOHL (0x412f4964), 
+    ACE_NTOHL (0x656e7469), 
+    ACE_NTOHL (0x66696572), 
+    ACE_NTOHL (0x3a312e30), 
+    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
+    11,
+    ACE_NTOHL (0x4964656e), 
+    ACE_NTOHL (0x74696669), 
+    ACE_NTOHL (0x65720000),  // name = Identifier
+    CORBA::tk_string, 
+    0U, // string length
+
   3,
   ACE_NTOHL (0x69640000),  // name = id
+  CORBA::tk_alias, // typecode kind for typedefs
+  72, // encapsulation length
+    TAO_ENCAP_BYTE_ORDER, // byte order
+    35,
+    ACE_NTOHL (0x49444c3a), 
+    ACE_NTOHL (0x6f6d672e), 
+    ACE_NTOHL (0x6f72672f), 
+    ACE_NTOHL (0x434f5242), 
+    ACE_NTOHL (0x412f5265), 
+    ACE_NTOHL (0x706f7369), 
+    ACE_NTOHL (0x746f7279), 
+    ACE_NTOHL (0x49643a31), 
+    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+    13,
+    ACE_NTOHL (0x5265706f), 
+    ACE_NTOHL (0x7369746f), 
+    ACE_NTOHL (0x72794964), 
+    ACE_NTOHL (0x0),  // name = RepositoryId
   CORBA::tk_string, 
   0U, // string length
+
   12,
   ACE_NTOHL (0x69735f61), 
   ACE_NTOHL (0x62737472), 
@@ -9602,85 +9306,194 @@
   ACE_NTOHL (0x64656669), 
   ACE_NTOHL (0x6e65645f), 
   ACE_NTOHL (0x696e0000),  // name = defined_in
+  CORBA::tk_alias, // typecode kind for typedefs
+  72, // encapsulation length
+    TAO_ENCAP_BYTE_ORDER, // byte order
+    35,
+    ACE_NTOHL (0x49444c3a), 
+    ACE_NTOHL (0x6f6d672e), 
+    ACE_NTOHL (0x6f72672f), 
+    ACE_NTOHL (0x434f5242), 
+    ACE_NTOHL (0x412f5265), 
+    ACE_NTOHL (0x706f7369), 
+    ACE_NTOHL (0x746f7279), 
+    ACE_NTOHL (0x49643a31), 
+    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+    13,
+    ACE_NTOHL (0x5265706f), 
+    ACE_NTOHL (0x7369746f), 
+    ACE_NTOHL (0x72794964), 
+    ACE_NTOHL (0x0),  // name = RepositoryId
   CORBA::tk_string, 
   0U, // string length
+
   8,
   ACE_NTOHL (0x76657273), 
   ACE_NTOHL (0x696f6e00),  // name = version
+  CORBA::tk_alias, // typecode kind for typedefs
+  68, // encapsulation length
+    TAO_ENCAP_BYTE_ORDER, // byte order
+    34,
+    ACE_NTOHL (0x49444c3a), 
+    ACE_NTOHL (0x6f6d672e), 
+    ACE_NTOHL (0x6f72672f), 
+    ACE_NTOHL (0x434f5242), 
+    ACE_NTOHL (0x412f5665), 
+    ACE_NTOHL (0x7273696f), 
+    ACE_NTOHL (0x6e537065), 
+    ACE_NTOHL (0x633a312e), 
+    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
+    12,
+    ACE_NTOHL (0x56657273), 
+    ACE_NTOHL (0x696f6e53), 
+    ACE_NTOHL (0x70656300),  // name = VersionSpec
   CORBA::tk_string, 
   0U, // string length
+
   11,
   ACE_NTOHL (0x6f706572), 
   ACE_NTOHL (0x6174696f), 
   ACE_NTOHL (0x6e730000),  // name = operations
   CORBA::tk_alias, // typecode kind for typedefs
-  1296, // encapsulation length
+  2036, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     39,
     ACE_NTOHL (0x49444c3a), 
     ACE_NTOHL (0x6f6d672e), 
     ACE_NTOHL (0x6f72672f), 
     ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f4f70), 
+    ACE_NTOHL (0x412f4f70), 
     ACE_NTOHL (0x44657363), 
     ACE_NTOHL (0x72697074), 
     ACE_NTOHL (0x696f6e53), 
     ACE_NTOHL (0x65713a31), 
-    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_OpDescriptionSeq:1.0
-    23,
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f4f70), 
-    ACE_NTOHL (0x44657363), 
-    ACE_NTOHL (0x72697074), 
-    ACE_NTOHL (0x696f6e53), 
-    ACE_NTOHL (0x65710000),  // name = CORBA_OpDescriptionSeq
+    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OpDescriptionSeq:1.0
+    17,
+    ACE_NTOHL (0x4f704465), 
+    ACE_NTOHL (0x73637269), 
+    ACE_NTOHL (0x7074696f), 
+    ACE_NTOHL (0x6e536571), 
+    ACE_NTOHL (0x0),  // name = OpDescriptionSeq
     CORBA::tk_sequence, // typecode kind
-    1212, // encapsulation length
+    1956, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       CORBA::tk_struct, // typecode kind
-      1196, // encapsulation length
+      1940, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         43,
         ACE_NTOHL (0x49444c3a), 
         ACE_NTOHL (0x6f6d672e), 
         ACE_NTOHL (0x6f72672f), 
         ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4f70), 
+        ACE_NTOHL (0x412f4f70), 
         ACE_NTOHL (0x65726174), 
         ACE_NTOHL (0x696f6e44), 
         ACE_NTOHL (0x65736372), 
         ACE_NTOHL (0x69707469), 
         ACE_NTOHL (0x6f6e3a31), 
-        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_OperationDescription:1.0
-        27,
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4f70), 
-        ACE_NTOHL (0x65726174), 
-        ACE_NTOHL (0x696f6e44), 
-        ACE_NTOHL (0x65736372), 
-        ACE_NTOHL (0x69707469), 
-        ACE_NTOHL (0x6f6e0000),  // name = CORBA_OperationDescription
+        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/OperationDescription:1.0
+        21,
+        ACE_NTOHL (0x4f706572), 
+        ACE_NTOHL (0x6174696f), 
+        ACE_NTOHL (0x6e446573), 
+        ACE_NTOHL (0x63726970), 
+        ACE_NTOHL (0x74696f6e), 
+        ACE_NTOHL (0x0),  // name = OperationDescription
         9, // member count
         5,
         ACE_NTOHL (0x6e616d65), 
         ACE_NTOHL (0x0),  // name = name
+        CORBA::tk_alias, // typecode kind for typedefs
+        68, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          33,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f4964), 
+          ACE_NTOHL (0x656e7469), 
+          ACE_NTOHL (0x66696572), 
+          ACE_NTOHL (0x3a312e30), 
+          ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
+          11,
+          ACE_NTOHL (0x4964656e), 
+          ACE_NTOHL (0x74696669), 
+          ACE_NTOHL (0x65720000),  // name = Identifier
         CORBA::tk_string, 
         0U, // string length
+
         3,
         ACE_NTOHL (0x69640000),  // name = id
+        CORBA::tk_alias, // typecode kind for typedefs
+        72, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          35,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f5265), 
+          ACE_NTOHL (0x706f7369), 
+          ACE_NTOHL (0x746f7279), 
+          ACE_NTOHL (0x49643a31), 
+          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+          13,
+          ACE_NTOHL (0x5265706f), 
+          ACE_NTOHL (0x7369746f), 
+          ACE_NTOHL (0x72794964), 
+          ACE_NTOHL (0x0),  // name = RepositoryId
         CORBA::tk_string, 
         0U, // string length
+
         11,
         ACE_NTOHL (0x64656669), 
         ACE_NTOHL (0x6e65645f), 
         ACE_NTOHL (0x696e0000),  // name = defined_in
+        CORBA::tk_alias, // typecode kind for typedefs
+        72, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          35,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f5265), 
+          ACE_NTOHL (0x706f7369), 
+          ACE_NTOHL (0x746f7279), 
+          ACE_NTOHL (0x49643a31), 
+          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+          13,
+          ACE_NTOHL (0x5265706f), 
+          ACE_NTOHL (0x7369746f), 
+          ACE_NTOHL (0x72794964), 
+          ACE_NTOHL (0x0),  // name = RepositoryId
         CORBA::tk_string, 
         0U, // string length
+
         8,
         ACE_NTOHL (0x76657273), 
         ACE_NTOHL (0x696f6e00),  // name = version
+        CORBA::tk_alias, // typecode kind for typedefs
+        68, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          34,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f5665), 
+          ACE_NTOHL (0x7273696f), 
+          ACE_NTOHL (0x6e537065), 
+          ACE_NTOHL (0x633a312e), 
+          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
+          12,
+          ACE_NTOHL (0x56657273), 
+          ACE_NTOHL (0x696f6e53), 
+          ACE_NTOHL (0x70656300),  // name = VersionSpec
         CORBA::tk_string, 
         0U, // string length
+
         7,
         ACE_NTOHL (0x72657375), 
         ACE_NTOHL (0x6c740000),  // name = result
@@ -9722,29 +9535,67 @@
         ACE_NTOHL (0x65787473), 
         ACE_NTOHL (0x0),  // name = contexts
         CORBA::tk_alias, // typecode kind for typedefs
-        92, // encapsulation length
+        236, // encapsulation length
           TAO_ENCAP_BYTE_ORDER, // byte order
           35,
           ACE_NTOHL (0x49444c3a), 
           ACE_NTOHL (0x6f6d672e), 
           ACE_NTOHL (0x6f72672f), 
           ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f436f), 
+          ACE_NTOHL (0x412f436f), 
           ACE_NTOHL (0x6e746578), 
           ACE_NTOHL (0x74496453), 
           ACE_NTOHL (0x65713a31), 
-          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ContextIdSeq:1.0
-          19,
+          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ContextIdSeq:1.0
+          13,
+          ACE_NTOHL (0x436f6e74), 
+          ACE_NTOHL (0x65787449), 
+          ACE_NTOHL (0x64536571), 
+          ACE_NTOHL (0x0),  // name = ContextIdSeq
+          CORBA::tk_sequence, // typecode kind
+          164, // encapsulation length
+            TAO_ENCAP_BYTE_ORDER, // byte order
+            CORBA::tk_alias, // typecode kind for typedefs
+            148, // encapsulation length
+              TAO_ENCAP_BYTE_ORDER, // byte order
+              40,
+              ACE_NTOHL (0x49444c3a), 
+              ACE_NTOHL (0x6f6d672e), 
+              ACE_NTOHL (0x6f72672f), 
           ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f436f), 
+              ACE_NTOHL (0x412f436f), 
           ACE_NTOHL (0x6e746578), 
-          ACE_NTOHL (0x74496453), 
-          ACE_NTOHL (0x65710000),  // name = CORBA_ContextIdSeq
-          CORBA::tk_sequence, // typecode kind
-          16, // encapsulation length
+              ACE_NTOHL (0x74496465), 
+              ACE_NTOHL (0x6e746966), 
+              ACE_NTOHL (0x6965723a), 
+              ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ContextIdentifier:1.0
+              18,
+              ACE_NTOHL (0x436f6e74), 
+              ACE_NTOHL (0x65787449), 
+              ACE_NTOHL (0x64656e74), 
+              ACE_NTOHL (0x69666965), 
+              ACE_NTOHL (0x72000000),  // name = ContextIdentifier
+              CORBA::tk_alias, // typecode kind for typedefs
+              68, // encapsulation length
             TAO_ENCAP_BYTE_ORDER, // byte order
+                33,
+                ACE_NTOHL (0x49444c3a), 
+                ACE_NTOHL (0x6f6d672e), 
+                ACE_NTOHL (0x6f72672f), 
+                ACE_NTOHL (0x434f5242), 
+                ACE_NTOHL (0x412f4964), 
+                ACE_NTOHL (0x656e7469), 
+                ACE_NTOHL (0x66696572), 
+                ACE_NTOHL (0x3a312e30), 
+                ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
+                11,
+                ACE_NTOHL (0x4964656e), 
+                ACE_NTOHL (0x74696669), 
+                ACE_NTOHL (0x65720000),  // name = Identifier
             CORBA::tk_string, 
             0U, // string length
+
+
             0U,
 
 
@@ -9753,58 +9604,74 @@
         ACE_NTOHL (0x6d657465), 
         ACE_NTOHL (0x72730000),  // name = parameters
         CORBA::tk_alias, // typecode kind for typedefs
-        444, // encapsulation length
+        496, // encapsulation length
           TAO_ENCAP_BYTE_ORDER, // byte order
           40,
           ACE_NTOHL (0x49444c3a), 
           ACE_NTOHL (0x6f6d672e), 
           ACE_NTOHL (0x6f72672f), 
           ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f5061), 
+          ACE_NTOHL (0x412f5061), 
           ACE_NTOHL (0x72446573), 
           ACE_NTOHL (0x63726970), 
           ACE_NTOHL (0x74696f6e), 
           ACE_NTOHL (0x5365713a), 
-          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_ParDescriptionSeq:1.0
-          24,
-          ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f5061), 
-          ACE_NTOHL (0x72446573), 
-          ACE_NTOHL (0x63726970), 
-          ACE_NTOHL (0x74696f6e), 
-          ACE_NTOHL (0x53657100),  // name = CORBA_ParDescriptionSeq
+          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ParDescriptionSeq:1.0
+          18,
+          ACE_NTOHL (0x50617244), 
+          ACE_NTOHL (0x65736372), 
+          ACE_NTOHL (0x69707469), 
+          ACE_NTOHL (0x6f6e5365), 
+          ACE_NTOHL (0x71000000),  // name = ParDescriptionSeq
           CORBA::tk_sequence, // typecode kind
-          360, // encapsulation length
+          416, // encapsulation length
             TAO_ENCAP_BYTE_ORDER, // byte order
             CORBA::tk_struct, // typecode kind
-            344, // encapsulation length
+            400, // encapsulation length
               TAO_ENCAP_BYTE_ORDER, // byte order
               43,
               ACE_NTOHL (0x49444c3a), 
               ACE_NTOHL (0x6f6d672e), 
               ACE_NTOHL (0x6f72672f), 
               ACE_NTOHL (0x434f5242), 
-              ACE_NTOHL (0x415f5061), 
+              ACE_NTOHL (0x412f5061), 
               ACE_NTOHL (0x72616d65), 
               ACE_NTOHL (0x74657244), 
               ACE_NTOHL (0x65736372), 
               ACE_NTOHL (0x69707469), 
               ACE_NTOHL (0x6f6e3a31), 
-              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ParameterDescription:1.0
-              27,
-              ACE_NTOHL (0x434f5242), 
-              ACE_NTOHL (0x415f5061), 
-              ACE_NTOHL (0x72616d65), 
-              ACE_NTOHL (0x74657244), 
-              ACE_NTOHL (0x65736372), 
-              ACE_NTOHL (0x69707469), 
-              ACE_NTOHL (0x6f6e0000),  // name = CORBA_ParameterDescription
+              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ParameterDescription:1.0
+              21,
+              ACE_NTOHL (0x50617261), 
+              ACE_NTOHL (0x6d657465), 
+              ACE_NTOHL (0x72446573), 
+              ACE_NTOHL (0x63726970), 
+              ACE_NTOHL (0x74696f6e), 
+              ACE_NTOHL (0x0),  // name = ParameterDescription
               4, // member count
               5,
               ACE_NTOHL (0x6e616d65), 
               ACE_NTOHL (0x0),  // name = name
+              CORBA::tk_alias, // typecode kind for typedefs
+              68, // encapsulation length
+                TAO_ENCAP_BYTE_ORDER, // byte order
+                33,
+                ACE_NTOHL (0x49444c3a), 
+                ACE_NTOHL (0x6f6d672e), 
+                ACE_NTOHL (0x6f72672f), 
+                ACE_NTOHL (0x434f5242), 
+                ACE_NTOHL (0x412f4964), 
+                ACE_NTOHL (0x656e7469), 
+                ACE_NTOHL (0x66696572), 
+                ACE_NTOHL (0x3a312e30), 
+                ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
+                11,
+                ACE_NTOHL (0x4964656e), 
+                ACE_NTOHL (0x74696669), 
+                ACE_NTOHL (0x65720000),  // name = Identifier
               CORBA::tk_string, 
               0U, // string length
+
               5,
               ACE_NTOHL (0x74797065), 
               ACE_NTOHL (0x0),  // name = type
@@ -9815,22 +9682,20 @@
               ACE_NTOHL (0x5f646566), 
               ACE_NTOHL (0x0),  // name = type_def
               CORBA::tk_objref, // typecode kind
-              60, // encapsulation length
+              52, // encapsulation length
                 TAO_ENCAP_BYTE_ORDER, // byte order
                 30,
                 ACE_NTOHL (0x49444c3a), 
                 ACE_NTOHL (0x6f6d672e), 
                 ACE_NTOHL (0x6f72672f), 
                 ACE_NTOHL (0x434f5242), 
-                ACE_NTOHL (0x415f4944), 
+                ACE_NTOHL (0x412f4944), 
                 ACE_NTOHL (0x4c547970), 
                 ACE_NTOHL (0x653a312e), 
-                ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_IDLType:1.0
-                14,
-                ACE_NTOHL (0x434f5242), 
-                ACE_NTOHL (0x415f4944), 
-                ACE_NTOHL (0x4c547970), 
-                ACE_NTOHL (0x65000000),  // name = CORBA_IDLType
+                ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/IDLType:1.0
+                8,
+                ACE_NTOHL (0x49444c54), 
+                ACE_NTOHL (0x79706500),  // name = IDLType
 
               5,
               ACE_NTOHL (0x6d6f6465), 
@@ -9876,73 +9741,145 @@
         ACE_NTOHL (0x7074696f), 
         ACE_NTOHL (0x6e730000),  // name = exceptions
         CORBA::tk_alias, // typecode kind for typedefs
-        284, // encapsulation length
+        556, // encapsulation length
           TAO_ENCAP_BYTE_ORDER, // byte order
           40,
           ACE_NTOHL (0x49444c3a), 
           ACE_NTOHL (0x6f6d672e), 
           ACE_NTOHL (0x6f72672f), 
           ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f4578), 
+          ACE_NTOHL (0x412f4578), 
           ACE_NTOHL (0x63446573), 
           ACE_NTOHL (0x63726970), 
           ACE_NTOHL (0x74696f6e), 
           ACE_NTOHL (0x5365713a), 
-          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA_ExcDescriptionSeq:1.0
-          24,
-          ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f4578), 
-          ACE_NTOHL (0x63446573), 
-          ACE_NTOHL (0x63726970), 
-          ACE_NTOHL (0x74696f6e), 
-          ACE_NTOHL (0x53657100),  // name = CORBA_ExcDescriptionSeq
+          ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ExcDescriptionSeq:1.0
+          18,
+          ACE_NTOHL (0x45786344), 
+          ACE_NTOHL (0x65736372), 
+          ACE_NTOHL (0x69707469), 
+          ACE_NTOHL (0x6f6e5365), 
+          ACE_NTOHL (0x71000000),  // name = ExcDescriptionSeq
           CORBA::tk_sequence, // typecode kind
-          200, // encapsulation length
+          476, // encapsulation length
             TAO_ENCAP_BYTE_ORDER, // byte order
             CORBA::tk_struct, // typecode kind
-            184, // encapsulation length
+            460, // encapsulation length
               TAO_ENCAP_BYTE_ORDER, // byte order
               43,
               ACE_NTOHL (0x49444c3a), 
               ACE_NTOHL (0x6f6d672e), 
               ACE_NTOHL (0x6f72672f), 
               ACE_NTOHL (0x434f5242), 
-              ACE_NTOHL (0x415f4578), 
+              ACE_NTOHL (0x412f4578), 
               ACE_NTOHL (0x63657074), 
               ACE_NTOHL (0x696f6e44), 
               ACE_NTOHL (0x65736372), 
               ACE_NTOHL (0x69707469), 
               ACE_NTOHL (0x6f6e3a31), 
-              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ExceptionDescription:1.0
-              27,
-              ACE_NTOHL (0x434f5242), 
-              ACE_NTOHL (0x415f4578), 
-              ACE_NTOHL (0x63657074), 
-              ACE_NTOHL (0x696f6e44), 
-              ACE_NTOHL (0x65736372), 
-              ACE_NTOHL (0x69707469), 
-              ACE_NTOHL (0x6f6e0000),  // name = CORBA_ExceptionDescription
+              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/ExceptionDescription:1.0
+              21,
+              ACE_NTOHL (0x45786365), 
+              ACE_NTOHL (0x7074696f), 
+              ACE_NTOHL (0x6e446573), 
+              ACE_NTOHL (0x63726970), 
+              ACE_NTOHL (0x74696f6e), 
+              ACE_NTOHL (0x0),  // name = ExceptionDescription
               5, // member count
               5,
               ACE_NTOHL (0x6e616d65), 
               ACE_NTOHL (0x0),  // name = name
+              CORBA::tk_alias, // typecode kind for typedefs
+              68, // encapsulation length
+                TAO_ENCAP_BYTE_ORDER, // byte order
+                33,
+                ACE_NTOHL (0x49444c3a), 
+                ACE_NTOHL (0x6f6d672e), 
+                ACE_NTOHL (0x6f72672f), 
+                ACE_NTOHL (0x434f5242), 
+                ACE_NTOHL (0x412f4964), 
+                ACE_NTOHL (0x656e7469), 
+                ACE_NTOHL (0x66696572), 
+                ACE_NTOHL (0x3a312e30), 
+                ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
+                11,
+                ACE_NTOHL (0x4964656e), 
+                ACE_NTOHL (0x74696669), 
+                ACE_NTOHL (0x65720000),  // name = Identifier
               CORBA::tk_string, 
               0U, // string length
+
               3,
               ACE_NTOHL (0x69640000),  // name = id
+              CORBA::tk_alias, // typecode kind for typedefs
+              72, // encapsulation length
+                TAO_ENCAP_BYTE_ORDER, // byte order
+                35,
+                ACE_NTOHL (0x49444c3a), 
+                ACE_NTOHL (0x6f6d672e), 
+                ACE_NTOHL (0x6f72672f), 
+                ACE_NTOHL (0x434f5242), 
+                ACE_NTOHL (0x412f5265), 
+                ACE_NTOHL (0x706f7369), 
+                ACE_NTOHL (0x746f7279), 
+                ACE_NTOHL (0x49643a31), 
+                ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+                13,
+                ACE_NTOHL (0x5265706f), 
+                ACE_NTOHL (0x7369746f), 
+                ACE_NTOHL (0x72794964), 
+                ACE_NTOHL (0x0),  // name = RepositoryId
               CORBA::tk_string, 
               0U, // string length
+
               11,
               ACE_NTOHL (0x64656669), 
               ACE_NTOHL (0x6e65645f), 
               ACE_NTOHL (0x696e0000),  // name = defined_in
+              CORBA::tk_alias, // typecode kind for typedefs
+              72, // encapsulation length
+                TAO_ENCAP_BYTE_ORDER, // byte order
+                35,
+                ACE_NTOHL (0x49444c3a), 
+                ACE_NTOHL (0x6f6d672e), 
+                ACE_NTOHL (0x6f72672f), 
+                ACE_NTOHL (0x434f5242), 
+                ACE_NTOHL (0x412f5265), 
+                ACE_NTOHL (0x706f7369), 
+                ACE_NTOHL (0x746f7279), 
+                ACE_NTOHL (0x49643a31), 
+                ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+                13,
+                ACE_NTOHL (0x5265706f), 
+                ACE_NTOHL (0x7369746f), 
+                ACE_NTOHL (0x72794964), 
+                ACE_NTOHL (0x0),  // name = RepositoryId
               CORBA::tk_string, 
               0U, // string length
+
               8,
               ACE_NTOHL (0x76657273), 
               ACE_NTOHL (0x696f6e00),  // name = version
+              CORBA::tk_alias, // typecode kind for typedefs
+              68, // encapsulation length
+                TAO_ENCAP_BYTE_ORDER, // byte order
+                34,
+                ACE_NTOHL (0x49444c3a), 
+                ACE_NTOHL (0x6f6d672e), 
+                ACE_NTOHL (0x6f72672f), 
+                ACE_NTOHL (0x434f5242), 
+                ACE_NTOHL (0x412f5665), 
+                ACE_NTOHL (0x7273696f), 
+                ACE_NTOHL (0x6e537065), 
+                ACE_NTOHL (0x633a312e), 
+                ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
+                12,
+                ACE_NTOHL (0x56657273), 
+                ACE_NTOHL (0x696f6e53), 
+                ACE_NTOHL (0x70656300),  // name = VersionSpec
               CORBA::tk_string, 
               0U, // string length
+
               5,
               ACE_NTOHL (0x74797065), 
               ACE_NTOHL (0x0),  // name = type
@@ -9961,75 +9898,146 @@
   ACE_NTOHL (0x69627574), 
   ACE_NTOHL (0x65730000),  // name = attributes
   CORBA::tk_alias, // typecode kind for typedefs
-  416, // encapsulation length
+  684, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     41,
     ACE_NTOHL (0x49444c3a), 
     ACE_NTOHL (0x6f6d672e), 
     ACE_NTOHL (0x6f72672f), 
     ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f4174), 
+    ACE_NTOHL (0x412f4174), 
     ACE_NTOHL (0x74724465), 
     ACE_NTOHL (0x73637269), 
     ACE_NTOHL (0x7074696f), 
     ACE_NTOHL (0x6e536571), 
     ACE_NTOHL (0x3a312e30), 
-    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA_AttrDescriptionSeq:1.0
-    25,
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f4174), 
-    ACE_NTOHL (0x74724465), 
-    ACE_NTOHL (0x73637269), 
-    ACE_NTOHL (0x7074696f), 
-    ACE_NTOHL (0x6e536571), 
-    ACE_NTOHL (0x0),  // name = CORBA_AttrDescriptionSeq
+    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/AttrDescriptionSeq:1.0
+    19,
+    ACE_NTOHL (0x41747472), 
+    ACE_NTOHL (0x44657363), 
+    ACE_NTOHL (0x72697074), 
+    ACE_NTOHL (0x696f6e53), 
+    ACE_NTOHL (0x65710000),  // name = AttrDescriptionSeq
     CORBA::tk_sequence, // typecode kind
-    324, // encapsulation length
+    600, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       CORBA::tk_struct, // typecode kind
-      308, // encapsulation length
+      584, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         43,
         ACE_NTOHL (0x49444c3a), 
         ACE_NTOHL (0x6f6d672e), 
         ACE_NTOHL (0x6f72672f), 
         ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4174), 
+        ACE_NTOHL (0x412f4174), 
         ACE_NTOHL (0x74726962), 
         ACE_NTOHL (0x75746544), 
         ACE_NTOHL (0x65736372), 
         ACE_NTOHL (0x69707469), 
         ACE_NTOHL (0x6f6e3a31), 
-        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_AttributeDescription:1.0
-        27,
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f4174), 
-        ACE_NTOHL (0x74726962), 
-        ACE_NTOHL (0x75746544), 
-        ACE_NTOHL (0x65736372), 
-        ACE_NTOHL (0x69707469), 
-        ACE_NTOHL (0x6f6e0000),  // name = CORBA_AttributeDescription
+        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/AttributeDescription:1.0
+        21,
+        ACE_NTOHL (0x41747472), 
+        ACE_NTOHL (0x69627574), 
+        ACE_NTOHL (0x65446573), 
+        ACE_NTOHL (0x63726970), 
+        ACE_NTOHL (0x74696f6e), 
+        ACE_NTOHL (0x0),  // name = AttributeDescription
         6, // member count
         5,
         ACE_NTOHL (0x6e616d65), 
         ACE_NTOHL (0x0),  // name = name
+        CORBA::tk_alias, // typecode kind for typedefs
+        68, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          33,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f4964), 
+          ACE_NTOHL (0x656e7469), 
+          ACE_NTOHL (0x66696572), 
+          ACE_NTOHL (0x3a312e30), 
+          ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
+          11,
+          ACE_NTOHL (0x4964656e), 
+          ACE_NTOHL (0x74696669), 
+          ACE_NTOHL (0x65720000),  // name = Identifier
         CORBA::tk_string, 
         0U, // string length
+
         3,
         ACE_NTOHL (0x69640000),  // name = id
+        CORBA::tk_alias, // typecode kind for typedefs
+        72, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          35,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f5265), 
+          ACE_NTOHL (0x706f7369), 
+          ACE_NTOHL (0x746f7279), 
+          ACE_NTOHL (0x49643a31), 
+          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+          13,
+          ACE_NTOHL (0x5265706f), 
+          ACE_NTOHL (0x7369746f), 
+          ACE_NTOHL (0x72794964), 
+          ACE_NTOHL (0x0),  // name = RepositoryId
         CORBA::tk_string, 
         0U, // string length
+
         11,
         ACE_NTOHL (0x64656669), 
         ACE_NTOHL (0x6e65645f), 
         ACE_NTOHL (0x696e0000),  // name = defined_in
+        CORBA::tk_alias, // typecode kind for typedefs
+        72, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          35,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f5265), 
+          ACE_NTOHL (0x706f7369), 
+          ACE_NTOHL (0x746f7279), 
+          ACE_NTOHL (0x49643a31), 
+          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+          13,
+          ACE_NTOHL (0x5265706f), 
+          ACE_NTOHL (0x7369746f), 
+          ACE_NTOHL (0x72794964), 
+          ACE_NTOHL (0x0),  // name = RepositoryId
         CORBA::tk_string, 
         0U, // string length
+
         8,
         ACE_NTOHL (0x76657273), 
         ACE_NTOHL (0x696f6e00),  // name = version
+        CORBA::tk_alias, // typecode kind for typedefs
+        68, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          34,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f5665), 
+          ACE_NTOHL (0x7273696f), 
+          ACE_NTOHL (0x6e537065), 
+          ACE_NTOHL (0x633a312e), 
+          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
+          12,
+          ACE_NTOHL (0x56657273), 
+          ACE_NTOHL (0x696f6e53), 
+          ACE_NTOHL (0x70656300),  // name = VersionSpec
         CORBA::tk_string, 
         0U, // string length
+
         5,
         ACE_NTOHL (0x74797065), 
         ACE_NTOHL (0x0),  // name = type
@@ -10075,69 +10083,139 @@
   ACE_NTOHL (0x6d656d62), 
   ACE_NTOHL (0x65727300),  // name = members
   CORBA::tk_alias, // typecode kind for typedefs
-  436, // encapsulation length
+  692, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     37,
     ACE_NTOHL (0x49444c3a), 
     ACE_NTOHL (0x6f6d672e), 
     ACE_NTOHL (0x6f72672f), 
     ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f5661), 
+    ACE_NTOHL (0x412f5661), 
     ACE_NTOHL (0x6c75654d), 
     ACE_NTOHL (0x656d6265), 
     ACE_NTOHL (0x72536571), 
     ACE_NTOHL (0x3a312e30), 
-    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA_ValueMemberSeq:1.0
-    21,
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f5661), 
-    ACE_NTOHL (0x6c75654d), 
-    ACE_NTOHL (0x656d6265), 
-    ACE_NTOHL (0x72536571), 
-    ACE_NTOHL (0x0),  // name = CORBA_ValueMemberSeq
+    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/ValueMemberSeq:1.0
+    15,
+    ACE_NTOHL (0x56616c75), 
+    ACE_NTOHL (0x654d656d), 
+    ACE_NTOHL (0x62657253), 
+    ACE_NTOHL (0x65710000),  // name = ValueMemberSeq
     CORBA::tk_sequence, // typecode kind
-    352, // encapsulation length
+    616, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       CORBA::tk_struct, // typecode kind
-      336, // encapsulation length
+      600, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         34,
         ACE_NTOHL (0x49444c3a), 
         ACE_NTOHL (0x6f6d672e), 
         ACE_NTOHL (0x6f72672f), 
         ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f5661), 
+        ACE_NTOHL (0x412f5661), 
         ACE_NTOHL (0x6c75654d), 
         ACE_NTOHL (0x656d6265), 
         ACE_NTOHL (0x723a312e), 
-        ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_ValueMember:1.0
-        18,
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f5661), 
-        ACE_NTOHL (0x6c75654d), 
-        ACE_NTOHL (0x656d6265), 
-        ACE_NTOHL (0x72000000),  // name = CORBA_ValueMember
+        ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/ValueMember:1.0
+        12,
+        ACE_NTOHL (0x56616c75), 
+        ACE_NTOHL (0x654d656d), 
+        ACE_NTOHL (0x62657200),  // name = ValueMember
         7, // member count
         5,
         ACE_NTOHL (0x6e616d65), 
         ACE_NTOHL (0x0),  // name = name
+        CORBA::tk_alias, // typecode kind for typedefs
+        68, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          33,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f4964), 
+          ACE_NTOHL (0x656e7469), 
+          ACE_NTOHL (0x66696572), 
+          ACE_NTOHL (0x3a312e30), 
+          ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
+          11,
+          ACE_NTOHL (0x4964656e), 
+          ACE_NTOHL (0x74696669), 
+          ACE_NTOHL (0x65720000),  // name = Identifier
         CORBA::tk_string, 
         0U, // string length
+
         3,
         ACE_NTOHL (0x69640000),  // name = id
+        CORBA::tk_alias, // typecode kind for typedefs
+        72, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          35,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f5265), 
+          ACE_NTOHL (0x706f7369), 
+          ACE_NTOHL (0x746f7279), 
+          ACE_NTOHL (0x49643a31), 
+          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+          13,
+          ACE_NTOHL (0x5265706f), 
+          ACE_NTOHL (0x7369746f), 
+          ACE_NTOHL (0x72794964), 
+          ACE_NTOHL (0x0),  // name = RepositoryId
         CORBA::tk_string, 
         0U, // string length
+
         11,
         ACE_NTOHL (0x64656669), 
         ACE_NTOHL (0x6e65645f), 
         ACE_NTOHL (0x696e0000),  // name = defined_in
+        CORBA::tk_alias, // typecode kind for typedefs
+        72, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          35,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f5265), 
+          ACE_NTOHL (0x706f7369), 
+          ACE_NTOHL (0x746f7279), 
+          ACE_NTOHL (0x49643a31), 
+          ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+          13,
+          ACE_NTOHL (0x5265706f), 
+          ACE_NTOHL (0x7369746f), 
+          ACE_NTOHL (0x72794964), 
+          ACE_NTOHL (0x0),  // name = RepositoryId
         CORBA::tk_string, 
         0U, // string length
+
         8,
         ACE_NTOHL (0x76657273), 
         ACE_NTOHL (0x696f6e00),  // name = version
+        CORBA::tk_alias, // typecode kind for typedefs
+        68, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          34,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f5665), 
+          ACE_NTOHL (0x7273696f), 
+          ACE_NTOHL (0x6e537065), 
+          ACE_NTOHL (0x633a312e), 
+          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/VersionSpec:1.0
+          12,
+          ACE_NTOHL (0x56657273), 
+          ACE_NTOHL (0x696f6e53), 
+          ACE_NTOHL (0x70656300),  // name = VersionSpec
         CORBA::tk_string, 
         0U, // string length
+
         5,
         ACE_NTOHL (0x74797065), 
         ACE_NTOHL (0x0),  // name = type
@@ -10148,22 +10226,20 @@
         ACE_NTOHL (0x5f646566), 
         ACE_NTOHL (0x0),  // name = type_def
         CORBA::tk_objref, // typecode kind
-        60, // encapsulation length
+        52, // encapsulation length
           TAO_ENCAP_BYTE_ORDER, // byte order
           30,
           ACE_NTOHL (0x49444c3a), 
           ACE_NTOHL (0x6f6d672e), 
           ACE_NTOHL (0x6f72672f), 
           ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f4944), 
+          ACE_NTOHL (0x412f4944), 
           ACE_NTOHL (0x4c547970), 
           ACE_NTOHL (0x653a312e), 
-          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_IDLType:1.0
-          14,
-          ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f4944), 
-          ACE_NTOHL (0x4c547970), 
-          ACE_NTOHL (0x65000000),  // name = CORBA_IDLType
+          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/IDLType:1.0
+          8,
+          ACE_NTOHL (0x49444c54), 
+          ACE_NTOHL (0x79706500),  // name = IDLType
 
         7,
         ACE_NTOHL (0x61636365), 
@@ -10198,101 +10274,112 @@
   ACE_NTOHL (0x7a657273), 
   ACE_NTOHL (0x0),  // name = initializers
   CORBA::tk_alias, // typecode kind for typedefs
-  504, // encapsulation length
+  604, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     37,
     ACE_NTOHL (0x49444c3a), 
     ACE_NTOHL (0x6f6d672e), 
     ACE_NTOHL (0x6f72672f), 
     ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f496e), 
+    ACE_NTOHL (0x412f496e), 
     ACE_NTOHL (0x69746961), 
     ACE_NTOHL (0x6c697a65), 
     ACE_NTOHL (0x72536571), 
     ACE_NTOHL (0x3a312e30), 
-    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA_InitializerSeq:1.0
-    21,
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f496e), 
-    ACE_NTOHL (0x69746961), 
-    ACE_NTOHL (0x6c697a65), 
-    ACE_NTOHL (0x72536571), 
-    ACE_NTOHL (0x0),  // name = CORBA_InitializerSeq
+    ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/InitializerSeq:1.0
+    15,
+    ACE_NTOHL (0x496e6974), 
+    ACE_NTOHL (0x69616c69), 
+    ACE_NTOHL (0x7a657253), 
+    ACE_NTOHL (0x65710000),  // name = InitializerSeq
     CORBA::tk_sequence, // typecode kind
-    420, // encapsulation length
+    528, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       CORBA::tk_struct, // typecode kind
-      404, // encapsulation length
+      512, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         34,
         ACE_NTOHL (0x49444c3a), 
         ACE_NTOHL (0x6f6d672e), 
         ACE_NTOHL (0x6f72672f), 
         ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f496e), 
+        ACE_NTOHL (0x412f496e), 
         ACE_NTOHL (0x69746961), 
         ACE_NTOHL (0x6c697a65), 
         ACE_NTOHL (0x723a312e), 
-        ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_Initializer:1.0
-        18,
-        ACE_NTOHL (0x434f5242), 
-        ACE_NTOHL (0x415f496e), 
-        ACE_NTOHL (0x69746961), 
-        ACE_NTOHL (0x6c697a65), 
-        ACE_NTOHL (0x72000000),  // name = CORBA_Initializer
+        ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/Initializer:1.0
+        12,
+        ACE_NTOHL (0x496e6974), 
+        ACE_NTOHL (0x69616c69), 
+        ACE_NTOHL (0x7a657200),  // name = Initializer
         2, // member count
         8,
         ACE_NTOHL (0x6d656d62), 
         ACE_NTOHL (0x65727300),  // name = members
         CORBA::tk_alias, // typecode kind for typedefs
-        292, // encapsulation length
+        340, // encapsulation length
           TAO_ENCAP_BYTE_ORDER, // byte order
           38,
           ACE_NTOHL (0x49444c3a), 
           ACE_NTOHL (0x6f6d672e), 
           ACE_NTOHL (0x6f72672f), 
           ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f5374), 
+          ACE_NTOHL (0x412f5374), 
           ACE_NTOHL (0x72756374), 
           ACE_NTOHL (0x4d656d62), 
           ACE_NTOHL (0x65725365), 
           ACE_NTOHL (0x713a312e), 
-          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_StructMemberSeq:1.0
-          22,
-          ACE_NTOHL (0x434f5242), 
-          ACE_NTOHL (0x415f5374), 
-          ACE_NTOHL (0x72756374), 
-          ACE_NTOHL (0x4d656d62), 
-          ACE_NTOHL (0x65725365), 
-          ACE_NTOHL (0x71000000),  // name = CORBA_StructMemberSeq
+          ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/StructMemberSeq:1.0
+          16,
+          ACE_NTOHL (0x53747275), 
+          ACE_NTOHL (0x63744d65), 
+          ACE_NTOHL (0x6d626572), 
+          ACE_NTOHL (0x53657100),  // name = StructMemberSeq
           CORBA::tk_sequence, // typecode kind
-          208, // encapsulation length
+          264, // encapsulation length
             TAO_ENCAP_BYTE_ORDER, // byte order
             CORBA::tk_struct, // typecode kind
-            192, // encapsulation length
+            248, // encapsulation length
               TAO_ENCAP_BYTE_ORDER, // byte order
               35,
               ACE_NTOHL (0x49444c3a), 
               ACE_NTOHL (0x6f6d672e), 
               ACE_NTOHL (0x6f72672f), 
               ACE_NTOHL (0x434f5242), 
-              ACE_NTOHL (0x415f5374), 
+              ACE_NTOHL (0x412f5374), 
               ACE_NTOHL (0x72756374), 
               ACE_NTOHL (0x4d656d62), 
               ACE_NTOHL (0x65723a31), 
-              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_StructMember:1.0
-              19,
-              ACE_NTOHL (0x434f5242), 
-              ACE_NTOHL (0x415f5374), 
-              ACE_NTOHL (0x72756374), 
-              ACE_NTOHL (0x4d656d62), 
-              ACE_NTOHL (0x65720000),  // name = CORBA_StructMember
+              ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/StructMember:1.0
+              13,
+              ACE_NTOHL (0x53747275), 
+              ACE_NTOHL (0x63744d65), 
+              ACE_NTOHL (0x6d626572), 
+              ACE_NTOHL (0x0),  // name = StructMember
               3, // member count
               5,
               ACE_NTOHL (0x6e616d65), 
               ACE_NTOHL (0x0),  // name = name
+              CORBA::tk_alias, // typecode kind for typedefs
+              68, // encapsulation length
+                TAO_ENCAP_BYTE_ORDER, // byte order
+                33,
+                ACE_NTOHL (0x49444c3a), 
+                ACE_NTOHL (0x6f6d672e), 
+                ACE_NTOHL (0x6f72672f), 
+                ACE_NTOHL (0x434f5242), 
+                ACE_NTOHL (0x412f4964), 
+                ACE_NTOHL (0x656e7469), 
+                ACE_NTOHL (0x66696572), 
+                ACE_NTOHL (0x3a312e30), 
+                ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
+                11,
+                ACE_NTOHL (0x4964656e), 
+                ACE_NTOHL (0x74696669), 
+                ACE_NTOHL (0x65720000),  // name = Identifier
               CORBA::tk_string, 
               0U, // string length
+
               5,
               ACE_NTOHL (0x74797065), 
               ACE_NTOHL (0x0),  // name = type
@@ -10303,22 +10390,20 @@
               ACE_NTOHL (0x5f646566), 
               ACE_NTOHL (0x0),  // name = type_def
               CORBA::tk_objref, // typecode kind
-              60, // encapsulation length
+              52, // encapsulation length
                 TAO_ENCAP_BYTE_ORDER, // byte order
                 30,
                 ACE_NTOHL (0x49444c3a), 
                 ACE_NTOHL (0x6f6d672e), 
                 ACE_NTOHL (0x6f72672f), 
                 ACE_NTOHL (0x434f5242), 
-                ACE_NTOHL (0x415f4944), 
+                ACE_NTOHL (0x412f4944), 
                 ACE_NTOHL (0x4c547970), 
                 ACE_NTOHL (0x653a312e), 
-                ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_IDLType:1.0
-                14,
-                ACE_NTOHL (0x434f5242), 
-                ACE_NTOHL (0x415f4944), 
-                ACE_NTOHL (0x4c547970), 
-                ACE_NTOHL (0x65000000),  // name = CORBA_IDLType
+                ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/IDLType:1.0
+                8,
+                ACE_NTOHL (0x49444c54), 
+                ACE_NTOHL (0x79706500),  // name = IDLType
 
 
             0U,
@@ -10327,9 +10412,27 @@
         5,
         ACE_NTOHL (0x6e616d65), 
         ACE_NTOHL (0x0),  // name = name
+        CORBA::tk_alias, // typecode kind for typedefs
+        68, // encapsulation length
+          TAO_ENCAP_BYTE_ORDER, // byte order
+          33,
+          ACE_NTOHL (0x49444c3a), 
+          ACE_NTOHL (0x6f6d672e), 
+          ACE_NTOHL (0x6f72672f), 
+          ACE_NTOHL (0x434f5242), 
+          ACE_NTOHL (0x412f4964), 
+          ACE_NTOHL (0x656e7469), 
+          ACE_NTOHL (0x66696572), 
+          ACE_NTOHL (0x3a312e30), 
+          ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
+          11,
+          ACE_NTOHL (0x4964656e), 
+          ACE_NTOHL (0x74696669), 
+          ACE_NTOHL (0x65720000),  // name = Identifier
         CORBA::tk_string, 
         0U, // string length
 
+
       0U,
 
 
@@ -10341,31 +10444,48 @@
   ACE_NTOHL (0x61636573), 
   ACE_NTOHL (0x0),  // name = supported_interfaces
   CORBA::tk_alias, // typecode kind for typedefs
-  100, // encapsulation length
+  164, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     38,
     ACE_NTOHL (0x49444c3a), 
     ACE_NTOHL (0x6f6d672e), 
     ACE_NTOHL (0x6f72672f), 
     ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f5265), 
+    ACE_NTOHL (0x412f5265), 
     ACE_NTOHL (0x706f7369), 
     ACE_NTOHL (0x746f7279), 
     ACE_NTOHL (0x49645365), 
     ACE_NTOHL (0x713a312e), 
-    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_RepositoryIdSeq:1.0
-    22,
+    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/RepositoryIdSeq:1.0
+    16,
+    ACE_NTOHL (0x5265706f), 
+    ACE_NTOHL (0x7369746f), 
+    ACE_NTOHL (0x72794964), 
+    ACE_NTOHL (0x53657100),  // name = RepositoryIdSeq
+    CORBA::tk_sequence, // typecode kind
+    88, // encapsulation length
+      TAO_ENCAP_BYTE_ORDER, // byte order
+      CORBA::tk_alias, // typecode kind for typedefs
+      72, // encapsulation length
+        TAO_ENCAP_BYTE_ORDER, // byte order
+        35,
+        ACE_NTOHL (0x49444c3a), 
+        ACE_NTOHL (0x6f6d672e), 
+        ACE_NTOHL (0x6f72672f), 
     ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f5265), 
+        ACE_NTOHL (0x412f5265), 
     ACE_NTOHL (0x706f7369), 
     ACE_NTOHL (0x746f7279), 
-    ACE_NTOHL (0x49645365), 
-    ACE_NTOHL (0x71000000),  // name = CORBA_RepositoryIdSeq
-    CORBA::tk_sequence, // typecode kind
-    16, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
+        ACE_NTOHL (0x49643a31), 
+        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+        13,
+        ACE_NTOHL (0x5265706f), 
+        ACE_NTOHL (0x7369746f), 
+        ACE_NTOHL (0x72794964), 
+        ACE_NTOHL (0x0),  // name = RepositoryId
       CORBA::tk_string, 
       0U, // string length
+
       0U,
 
 
@@ -10377,31 +10497,48 @@
   ACE_NTOHL (0x6c756573), 
   ACE_NTOHL (0x0),  // name = abstract_base_values
   CORBA::tk_alias, // typecode kind for typedefs
-  100, // encapsulation length
+  164, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     38,
     ACE_NTOHL (0x49444c3a), 
     ACE_NTOHL (0x6f6d672e), 
     ACE_NTOHL (0x6f72672f), 
     ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f5265), 
+    ACE_NTOHL (0x412f5265), 
     ACE_NTOHL (0x706f7369), 
     ACE_NTOHL (0x746f7279), 
     ACE_NTOHL (0x49645365), 
     ACE_NTOHL (0x713a312e), 
-    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_RepositoryIdSeq:1.0
-    22,
+    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA/RepositoryIdSeq:1.0
+    16,
+    ACE_NTOHL (0x5265706f), 
+    ACE_NTOHL (0x7369746f), 
+    ACE_NTOHL (0x72794964), 
+    ACE_NTOHL (0x53657100),  // name = RepositoryIdSeq
+    CORBA::tk_sequence, // typecode kind
+    88, // encapsulation length
+      TAO_ENCAP_BYTE_ORDER, // byte order
+      CORBA::tk_alias, // typecode kind for typedefs
+      72, // encapsulation length
+        TAO_ENCAP_BYTE_ORDER, // byte order
+        35,
+        ACE_NTOHL (0x49444c3a), 
+        ACE_NTOHL (0x6f6d672e), 
+        ACE_NTOHL (0x6f72672f), 
     ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f5265), 
+        ACE_NTOHL (0x412f5265), 
     ACE_NTOHL (0x706f7369), 
     ACE_NTOHL (0x746f7279), 
-    ACE_NTOHL (0x49645365), 
-    ACE_NTOHL (0x71000000),  // name = CORBA_RepositoryIdSeq
-    CORBA::tk_sequence, // typecode kind
-    16, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
+        ACE_NTOHL (0x49643a31), 
+        ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+        13,
+        ACE_NTOHL (0x5265706f), 
+        ACE_NTOHL (0x7369746f), 
+        ACE_NTOHL (0x72794964), 
+        ACE_NTOHL (0x0),  // name = RepositoryId
       CORBA::tk_string, 
       0U, // string length
+
       0U,
 
 
@@ -10416,8 +10553,27 @@
   ACE_NTOHL (0x62617365), 
   ACE_NTOHL (0x5f76616c), 
   ACE_NTOHL (0x75650000),  // name = base_value
+  CORBA::tk_alias, // typecode kind for typedefs
+  72, // encapsulation length
+    TAO_ENCAP_BYTE_ORDER, // byte order
+    35,
+    ACE_NTOHL (0x49444c3a), 
+    ACE_NTOHL (0x6f6d672e), 
+    ACE_NTOHL (0x6f72672f), 
+    ACE_NTOHL (0x434f5242), 
+    ACE_NTOHL (0x412f5265), 
+    ACE_NTOHL (0x706f7369), 
+    ACE_NTOHL (0x746f7279), 
+    ACE_NTOHL (0x49643a31), 
+    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+    13,
+    ACE_NTOHL (0x5265706f), 
+    ACE_NTOHL (0x7369746f), 
+    ACE_NTOHL (0x72794964), 
+    ACE_NTOHL (0x0),  // name = RepositoryId
   CORBA::tk_string, 
   0U, // string length
+
   5,
   ACE_NTOHL (0x74797065), 
   ACE_NTOHL (0x0),  // name = type
@@ -10546,188 +10702,6 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_ValueDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  31,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5661), 
-  ACE_NTOHL (0x6c756544), 
-  ACE_NTOHL (0x65663a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ValueDef:1.0
-  15,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5661), 
-  ACE_NTOHL (0x6c756544), 
-  ACE_NTOHL (0x65660000),  // name = CORBA_ValueDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ValueDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_ValueDef),
-    (char *) &_oc_CORBA_ValueDef,
-    0,
-    sizeof (CORBA_ValueDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_ValueDef =
-  &_tc_TAO_tc_CORBA_ValueDef;
-
-static const CORBA::Long _oc_CORBA_ValueDescription[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  39,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5661), 
-  ACE_NTOHL (0x6c756544), 
-  ACE_NTOHL (0x65736372), 
-  ACE_NTOHL (0x69707469), 
-  ACE_NTOHL (0x6f6e3a31), 
-  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA_ValueDescription:1.0
-  23,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5661), 
-  ACE_NTOHL (0x6c756544), 
-  ACE_NTOHL (0x65736372), 
-  ACE_NTOHL (0x69707469), 
-  ACE_NTOHL (0x6f6e0000),  // name = CORBA_ValueDescription
-  10, // member count
-  5,
-  ACE_NTOHL (0x6e616d65), 
-  ACE_NTOHL (0x0),  // name = name
-  CORBA::tk_string, 
-  0U, // string length
-  3,
-  ACE_NTOHL (0x69640000),  // name = id
-  CORBA::tk_string, 
-  0U, // string length
-  12,
-  ACE_NTOHL (0x69735f61), 
-  ACE_NTOHL (0x62737472), 
-  ACE_NTOHL (0x61637400),  // name = is_abstract
-  CORBA::tk_boolean,
-
-  10,
-  ACE_NTOHL (0x69735f63), 
-  ACE_NTOHL (0x7573746f), 
-  ACE_NTOHL (0x6d000000),  // name = is_custom
-  CORBA::tk_boolean,
-
-  11,
-  ACE_NTOHL (0x64656669), 
-  ACE_NTOHL (0x6e65645f), 
-  ACE_NTOHL (0x696e0000),  // name = defined_in
-  CORBA::tk_string, 
-  0U, // string length
-  8,
-  ACE_NTOHL (0x76657273), 
-  ACE_NTOHL (0x696f6e00),  // name = version
-  CORBA::tk_string, 
-  0U, // string length
-  21,
-  ACE_NTOHL (0x73757070), 
-  ACE_NTOHL (0x6f727465), 
-  ACE_NTOHL (0x645f696e), 
-  ACE_NTOHL (0x74657266), 
-  ACE_NTOHL (0x61636573), 
-  ACE_NTOHL (0x0),  // name = supported_interfaces
-  CORBA::tk_alias, // typecode kind for typedefs
-  100, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    38,
-    ACE_NTOHL (0x49444c3a), 
-    ACE_NTOHL (0x6f6d672e), 
-    ACE_NTOHL (0x6f72672f), 
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f5265), 
-    ACE_NTOHL (0x706f7369), 
-    ACE_NTOHL (0x746f7279), 
-    ACE_NTOHL (0x49645365), 
-    ACE_NTOHL (0x713a312e), 
-    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_RepositoryIdSeq:1.0
-    22,
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f5265), 
-    ACE_NTOHL (0x706f7369), 
-    ACE_NTOHL (0x746f7279), 
-    ACE_NTOHL (0x49645365), 
-    ACE_NTOHL (0x71000000),  // name = CORBA_RepositoryIdSeq
-    CORBA::tk_sequence, // typecode kind
-    16, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      CORBA::tk_string, 
-      0U, // string length
-      0U,
-
-
-  21,
-  ACE_NTOHL (0x61627374), 
-  ACE_NTOHL (0x72616374), 
-  ACE_NTOHL (0x5f626173), 
-  ACE_NTOHL (0x655f7661), 
-  ACE_NTOHL (0x6c756573), 
-  ACE_NTOHL (0x0),  // name = abstract_base_values
-  CORBA::tk_alias, // typecode kind for typedefs
-  100, // encapsulation length
-    TAO_ENCAP_BYTE_ORDER, // byte order
-    38,
-    ACE_NTOHL (0x49444c3a), 
-    ACE_NTOHL (0x6f6d672e), 
-    ACE_NTOHL (0x6f72672f), 
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f5265), 
-    ACE_NTOHL (0x706f7369), 
-    ACE_NTOHL (0x746f7279), 
-    ACE_NTOHL (0x49645365), 
-    ACE_NTOHL (0x713a312e), 
-    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_RepositoryIdSeq:1.0
-    22,
-    ACE_NTOHL (0x434f5242), 
-    ACE_NTOHL (0x415f5265), 
-    ACE_NTOHL (0x706f7369), 
-    ACE_NTOHL (0x746f7279), 
-    ACE_NTOHL (0x49645365), 
-    ACE_NTOHL (0x71000000),  // name = CORBA_RepositoryIdSeq
-    CORBA::tk_sequence, // typecode kind
-    16, // encapsulation length
-      TAO_ENCAP_BYTE_ORDER, // byte order
-      CORBA::tk_string, 
-      0U, // string length
-      0U,
-
-
-  15,
-  ACE_NTOHL (0x69735f74), 
-  ACE_NTOHL (0x72756e63), 
-  ACE_NTOHL (0x61746162), 
-  ACE_NTOHL (0x6c650000),  // name = is_truncatable
-  CORBA::tk_boolean,
-
-  11,
-  ACE_NTOHL (0x62617365), 
-  ACE_NTOHL (0x5f76616c), 
-  ACE_NTOHL (0x75650000),  // name = base_value
-  CORBA::tk_string, 
-  0U, // string length
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ValueDescription (
-    CORBA::tk_struct,
-    sizeof (_oc_CORBA_ValueDescription),
-    (char *) &_oc_CORBA_ValueDescription,
-    0,
-    sizeof (CORBA_ValueDescription)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_ValueDescription =
-  &_tc_TAO_tc_CORBA_ValueDescription;
-
 void CORBA_ValueDescription::_tao_any_destructor (void *x)
 {
   CORBA_ValueDescription *tmp = ACE_static_cast (CORBA_ValueDescription*,x);
@@ -11564,7 +11538,7 @@
     return CORBA_ValueBoxDef::_nil ();
   if (! obj->_is_local ())
     {
-      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA_ValueBoxDef:1.0", ACE_TRY_ENV);
+      CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/ValueBoxDef:1.0", ACE_TRY_ENV);
       ACE_CHECK_RETURN (CORBA_ValueBoxDef::_nil ());
       if (is_a == 0)
         return CORBA_ValueBoxDef::_nil ();
@@ -11632,11 +11606,11 @@
 CORBA::Boolean CORBA_ValueBoxDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_ValueBoxDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_TypedefDef:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_Contained:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IDLType:1.0")) ||
-    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA_IRObject:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/ValueBoxDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/TypedefDef:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Contained:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IDLType:1.0")) ||
+    (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/Object:1.0")))
   return 1; // success using local knowledge
   else
@@ -11709,7 +11683,7 @@
 
 const char* CORBA_ValueBoxDef::_interface_repository_id (void) const
 {
-  return "IDL:omg.org/CORBA_ValueBoxDef:1.0";
+  return "IDL:omg.org/CORBA/ValueBoxDef:1.0";
 }
 
 CORBA_IDLType_ptr CORBA_ValueBoxDef::original_type_def (
@@ -11748,45 +11722,13 @@
     );
 }
 
-static const CORBA::Long _oc_CORBA_ValueBoxDef[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  34,
-  ACE_NTOHL (0x49444c3a), 
-  ACE_NTOHL (0x6f6d672e), 
-  ACE_NTOHL (0x6f72672f), 
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5661), 
-  ACE_NTOHL (0x6c756542), 
-  ACE_NTOHL (0x6f784465), 
-  ACE_NTOHL (0x663a312e), 
-  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/CORBA_ValueBoxDef:1.0
-  18,
-  ACE_NTOHL (0x434f5242), 
-  ACE_NTOHL (0x415f5661), 
-  ACE_NTOHL (0x6c756542), 
-  ACE_NTOHL (0x6f784465), 
-  ACE_NTOHL (0x66000000),  // name = CORBA_ValueBoxDef
-};
-
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ValueBoxDef (
-    CORBA::tk_objref,
-    sizeof (_oc_CORBA_ValueBoxDef),
-    (char *) &_oc_CORBA_ValueBoxDef,
-    0,
-    sizeof (CORBA_ValueBoxDef)
-  );
-
-CORBA::TypeCode_ptr _tc_CORBA_ValueBoxDef =
-  &_tc_TAO_tc_CORBA_ValueBoxDef;
-
 void operator<<= (CORBA::Any &_tao_any, CORBA_FixedDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_FixedDef, 
+        CORBA::_tc_FixedDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -11803,7 +11745,7 @@
     _tao_elem = CORBA_FixedDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_FixedDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_FixedDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -11816,7 +11758,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_FixedDef,
+          CORBA::_tc_FixedDef,
           1,
           _tao_elem,
           CORBA_FixedDef::_tao_any_destructor
@@ -11846,7 +11788,7 @@
   TAO_OutputCDR stream;
   stream << _tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ValueMember,
+      CORBA::_tc_ValueMember,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin ()
     );
@@ -11857,7 +11799,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ValueMember,
+      CORBA::_tc_ValueMember,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -11878,7 +11820,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ValueMember, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ValueMember, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -11903,7 +11845,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_ValueMember,
+            CORBA::_tc_ValueMember,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_ValueMember::_tao_any_destructor
@@ -11933,7 +11875,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_ValueMemberSeq,
+        CORBA::_tc_ValueMemberSeq,
         TAO_ENCAP_BYTE_ORDER,
         stream.begin ()
       );
@@ -11945,7 +11887,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ValueMemberSeq,
+      CORBA::_tc_ValueMemberSeq,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -11969,7 +11911,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ValueMemberSeq, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ValueMemberSeq, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -11994,7 +11936,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_ValueMemberSeq,
+            CORBA::_tc_ValueMemberSeq,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_ValueMemberSeq::_tao_any_destructor
@@ -12021,7 +11963,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_ValueMemberDef, 
+        CORBA::_tc_ValueMemberDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -12038,7 +11980,7 @@
     _tao_elem = CORBA_ValueMemberDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ValueMemberDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ValueMemberDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -12051,7 +11993,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_ValueMemberDef,
+          CORBA::_tc_ValueMemberDef,
           1,
           _tao_elem,
           CORBA_ValueMemberDef::_tao_any_destructor
@@ -12082,7 +12024,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_ValueDef, 
+        CORBA::_tc_ValueDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -12099,7 +12041,7 @@
     _tao_elem = CORBA_ValueDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ValueDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ValueDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -12112,7 +12054,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_ValueDef,
+          CORBA::_tc_ValueDef,
           1,
           _tao_elem,
           CORBA_ValueDef::_tao_any_destructor
@@ -12225,7 +12167,7 @@
   TAO_OutputCDR stream;
   stream << _tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ValueDescription,
+      CORBA::_tc_ValueDescription,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin ()
     );
@@ -12236,7 +12178,7 @@
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      _tc_CORBA_ValueDescription,
+      CORBA::_tc_ValueDescription,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
@@ -12257,7 +12199,7 @@
   {
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ValueDescription, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ValueDescription, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -12282,7 +12224,7 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            _tc_CORBA_ValueDescription,
+            CORBA::_tc_ValueDescription,
             1,
             ACE_static_cast (void *, tmp),
             CORBA_ValueDescription::_tao_any_destructor
@@ -12309,7 +12251,7 @@
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        _tc_CORBA_ValueBoxDef, 
+        CORBA::_tc_ValueBoxDef, 
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
@@ -12326,7 +12268,7 @@
     _tao_elem = CORBA_ValueBoxDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
     
-    CORBA::Boolean result = type->equivalent (_tc_CORBA_ValueBoxDef, ACE_TRY_ENV);
+    CORBA::Boolean result = type->equivalent (CORBA::_tc_ValueBoxDef, ACE_TRY_ENV);
     ACE_TRY_CHECK;
     
     if (!result)
@@ -12339,7 +12281,7 @@
     if (stream >> _tao_elem)
     {
       ((CORBA::Any *)&_tao_any)->_tao_replace (
-          _tc_CORBA_ValueBoxDef,
+          CORBA::_tc_ValueBoxDef,
           1,
           _tao_elem,
           CORBA_ValueBoxDef::_tao_any_destructor
@@ -12431,11 +12373,6 @@
     // If length is 0 we return true.
     if (0 >= _tao_seq_len) 
       return 1;
-    // Add a check to the length of the sequence
-    // to make sure it does not exceed the length
-    // of the stream. (See bug 58.)
-    if (_tao_seq_len > strm.length())
-      return 0;
     // retrieve all the elements
     CORBA::Boolean _tao_marshal_flag = 1;
     for (CORBA::ULong i = 0; i < _tao_sequence.length () && _tao_marshal_flag; i++)
