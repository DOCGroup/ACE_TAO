--- orig/InterfaceC.cpp	Fri Mar 09 00:47:29 2001
+++ InterfaceC.cpp	Thu Mar 08 20:22:55 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+/* $Id$ */
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -20,6 +20,14 @@
 //     http://www.cs.wustl.edu/~schmidt/TAO.html
 
 #include "InterfaceC.h"
+#include "tao/Stub.h"
+#include "tao/Invocation.h"
+
+// The Following header must remain visible since it contains the
+// "TAO_INTERCEPTOR" macros.  Note that this won't cause problems when
+// portable interceptor support is disabled since those macros are
+// always visible, too.
+#include "tao/PortableInterceptor.h"
 
 #if TAO_HAS_INTERCEPTORS == 1
 #include "tao/RequestInfo_Util.h"
@@ -74,64 +82,25 @@
   12, ACE_NTOHL (0x646b5f50), ACE_NTOHL (0x726f7669), ACE_NTOHL (0x64657300),  // name = dk_Provides
   8, ACE_NTOHL (0x646b5f55), ACE_NTOHL (0x73657300),  // name = dk_Uses
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_DefinitionKind (CORBA::tk_enum, sizeof (_oc_IR_DefinitionKind), (char *) &_oc_IR_DefinitionKind, 0, sizeof (IR::DefinitionKind));
+static CORBA::TypeCode _tc_TAO_tc_IR_DefinitionKind (CORBA::tk_enum, sizeof (_oc_IR_DefinitionKind), (char *) &_oc_IR_DefinitionKind, 0, sizeof (IR_DefinitionKind));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_DefinitionKind, &_tc_TAO_tc_IR_DefinitionKind)
 TAO_NAMESPACE_END
-static const CORBA::Long _oc_CORBA_Identifier[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  33, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x434f5242), ACE_NTOHL (0x412f4964), ACE_NTOHL (0x656e7469), ACE_NTOHL (0x66696572), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
-  11, ACE_NTOHL (0x4964656e), ACE_NTOHL (0x74696669), ACE_NTOHL (0x65720000),  // name = Identifier
-  CORBA::tk_string, 
-  0U, // string length
-};
-static CORBA::TypeCode _tc_TAO_tc_CORBA_Identifier (CORBA::tk_alias, sizeof (_oc_CORBA_Identifier), (char *) &_oc_CORBA_Identifier, 0, sizeof (CORBA::Identifier));
-TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
-TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_Identifier, &_tc_TAO_tc_CORBA_Identifier)
-TAO_NAMESPACE_END
-static const CORBA::Long _oc_CORBA_ScopedName[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  33, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x434f5242), ACE_NTOHL (0x412f5363), ACE_NTOHL (0x6f706564), ACE_NTOHL (0x4e616d65), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/ScopedName:1.0
-  11, ACE_NTOHL (0x53636f70), ACE_NTOHL (0x65644e61), ACE_NTOHL (0x6d650000),  // name = ScopedName
-  CORBA::tk_string, 
-  0U, // string length
-};
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ScopedName (CORBA::tk_alias, sizeof (_oc_CORBA_ScopedName), (char *) &_oc_CORBA_ScopedName, 0, sizeof (CORBA::ScopedName));
-TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
-TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ScopedName, &_tc_TAO_tc_CORBA_ScopedName)
-TAO_NAMESPACE_END
-static const CORBA::Long _oc_CORBA_RepositoryId[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  35, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x434f5242), ACE_NTOHL (0x412f5265), ACE_NTOHL (0x706f7369), ACE_NTOHL (0x746f7279), ACE_NTOHL (0x49643a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
-  13, ACE_NTOHL (0x5265706f), ACE_NTOHL (0x7369746f), ACE_NTOHL (0x72794964), ACE_NTOHL (0x0),  // name = RepositoryId
-  CORBA::tk_string, 
-  0U, // string length
-};
-static CORBA::TypeCode _tc_TAO_tc_CORBA_RepositoryId (CORBA::tk_alias, sizeof (_oc_CORBA_RepositoryId), (char *) &_oc_CORBA_RepositoryId, 0, sizeof (CORBA::RepositoryId));
-TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
-TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_RepositoryId, &_tc_TAO_tc_CORBA_RepositoryId)
-TAO_NAMESPACE_END
 
 ///////////////////////////////////////////////////////////////////////
 //                Base & Remote Proxy  Implementation. 
 //
 
-CORBA::_TAO_IRObject_Proxy_Impl::_TAO_IRObject_Proxy_Impl (void)
+_TAO_IRObject_Proxy_Impl::_TAO_IRObject_Proxy_Impl (void)
 {}
 
-CORBA::_TAO_IRObject_Remote_Proxy_Impl::_TAO_IRObject_Remote_Proxy_Impl (void)
+_TAO_IRObject_Remote_Proxy_Impl::_TAO_IRObject_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-IR::DefinitionKind CORBA::_TAO_IRObject_Remote_Proxy_Impl::def_kind (
+IR_DefinitionKind _TAO_IRObject_Remote_Proxy_Impl::def_kind (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -140,7 +109,7 @@
   ))
 {
   
-  IR::DefinitionKind _tao_retval = (IR::DefinitionKind)0;
+  IR_DefinitionKind _tao_retval = (IR_DefinitionKind)0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -168,7 +137,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      CORBA::IRObject::TAO_ClientRequestInfo_CORBA_IRObject_def_kind_get ri (
+      CORBA_IRObject::TAO_ClientRequestInfo_CORBA_IRObject_def_kind_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -224,7 +193,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::DefinitionKind  _tao_retval_info = _tao_retval;
+              IR_DefinitionKind  _tao_retval_info = _tao_retval;
                ri.result (_tao_retval_info);
             );
           
@@ -289,7 +258,7 @@
   return _tao_retval;
 }
 
-void CORBA::_TAO_IRObject_Remote_Proxy_Impl::destroy (
+void _TAO_IRObject_Remote_Proxy_Impl::destroy (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -297,10 +266,6 @@
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -326,7 +291,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      CORBA::IRObject::TAO_ClientRequestInfo_CORBA_IRObject_destroy ri (
+      CORBA_IRObject::TAO_ClientRequestInfo_CORBA_IRObject_destroy ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -440,37 +405,36 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-CORBA::_TAO_IRObject_Proxy_Broker::_TAO_IRObject_Proxy_Broker (void)
+_TAO_IRObject_Proxy_Broker::_TAO_IRObject_Proxy_Broker (void)
 {
 }
 
-CORBA::_TAO_IRObject_Proxy_Broker::~_TAO_IRObject_Proxy_Broker (void)
+_TAO_IRObject_Proxy_Broker::~_TAO_IRObject_Proxy_Broker (void)
 {
 }
 
-CORBA::_TAO_IRObject_Proxy_Broker * (*CORBA__TAO_IRObject_Proxy_Broker_Factory_function_pointer) (
+_TAO_IRObject_Proxy_Broker * (*_TAO_IRObject_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-CORBA::_TAO_IRObject_Remote_Proxy_Broker *
-CORBA::_TAO_IRObject_Remote_Proxy_Broker::the_TAO_IRObject_Remote_Proxy_Broker (void)
+_TAO_IRObject_Remote_Proxy_Broker *
+_TAO_IRObject_Remote_Proxy_Broker::the_TAO_IRObject_Remote_Proxy_Broker (void)
 {
-  static ::CORBA::_TAO_IRObject_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_IRObject_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
-
-CORBA::_TAO_IRObject_Remote_Proxy_Broker::_TAO_IRObject_Remote_Proxy_Broker (void)
+_TAO_IRObject_Remote_Proxy_Broker::_TAO_IRObject_Remote_Proxy_Broker (void)
 {
 }
 
-CORBA::_TAO_IRObject_Remote_Proxy_Broker::~_TAO_IRObject_Remote_Proxy_Broker (void)
+_TAO_IRObject_Remote_Proxy_Broker::~_TAO_IRObject_Remote_Proxy_Broker (void)
 {
 }
 
-CORBA::_TAO_IRObject_Proxy_Impl&
-CORBA::_TAO_IRObject_Remote_Proxy_Broker::select_proxy (
-  ::CORBA::IRObject *object,
+_TAO_IRObject_Proxy_Impl&
+_TAO_IRObject_Remote_Proxy_Broker::select_proxy (
+  CORBA_IRObject *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -486,107 +450,107 @@
 
 
 // default constructor
-CORBA::IRObject::IRObject (int collocated)
+CORBA_IRObject::CORBA_IRObject (int collocated)
 {
   this->CORBA_IRObject_setup_collocation (collocated);
 }
 
 // destructor
-CORBA::IRObject::~IRObject (void)
+CORBA_IRObject::~CORBA_IRObject (void)
 {}
 
 void
-CORBA::IRObject::CORBA_IRObject_setup_collocation (int collocated)
+CORBA_IRObject::CORBA_IRObject_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_IRObject_Proxy_Broker_ =
-      ::CORBA__TAO_IRObject_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_IRObject_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_IRObject_Proxy_Broker_ =
-      ::CORBA::_TAO_IRObject_Remote_Proxy_Broker::the_TAO_IRObject_Remote_Proxy_Broker ();
+      _TAO_IRObject_Remote_Proxy_Broker::the_TAO_IRObject_Remote_Proxy_Broker ();    
 }
 
-void CORBA::IRObject::_tao_any_destructor (void *x)
+void CORBA_IRObject::_tao_any_destructor (void *x)
 {
-  IRObject *tmp = ACE_static_cast (IRObject*,x);
+  CORBA_IRObject *tmp = ACE_static_cast (CORBA_IRObject*,x);
   CORBA::release (tmp);
 }
 
-CORBA::IRObject_ptr CORBA::IRObject::_narrow (
+CORBA_IRObject_ptr CORBA_IRObject::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return IRObject::_nil ();
+    return CORBA_IRObject::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/CORBA/IRObject:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (IRObject::_nil ());
+      ACE_CHECK_RETURN (CORBA_IRObject::_nil ());
       if (is_a == 0)
-        return IRObject::_nil ();
+        return CORBA_IRObject::_nil ();
     }
-  return IRObject::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return CORBA_IRObject::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-CORBA::IRObject_ptr CORBA::IRObject::_unchecked_narrow (
+CORBA_IRObject_ptr CORBA_IRObject::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return IRObject::_nil ();
+    return CORBA_IRObject::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      IRObject_ptr default_proxy = IRObject::_nil ();
+      CORBA_IRObject_ptr default_proxy = CORBA_IRObject::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&CORBA__TAO_IRObject_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () && _TAO_IRObject_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::CORBA::IRObject (
+          CORBA_IRObject (
             stub,
             1,
             obj->_servant ()),
             
-          IRObject::_nil ());
+          CORBA_IRObject::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::CORBA::IRObject (stub, 0, obj->_servant ()), IRObject::_nil ());
+        ACE_NEW_RETURN (default_proxy, CORBA_IRObject (stub, 0, obj->_servant ()), CORBA_IRObject::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            IRObject_ptr,
+            CORBA_IRObject_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &IRObject::_narrow
+                      &CORBA_IRObject::_narrow
                     )
                 )
           );
 }
 
-CORBA::IRObject_ptr
-CORBA::IRObject::_duplicate (IRObject_ptr obj)
+CORBA_IRObject_ptr
+CORBA_IRObject::_duplicate (CORBA_IRObject_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean CORBA::IRObject::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean CORBA_IRObject::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/CORBA/IRObject:1.0")) ||
@@ -596,12 +560,12 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *CORBA::IRObject::_tao_QueryInterface (ptr_arith_t type)
+void *CORBA_IRObject::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::CORBA, IRObject)::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast (ptr_arith_t, &CORBA::Object::_narrow))
     retv = ACE_reinterpret_cast (void *,
@@ -612,12 +576,12 @@
   return retv;
 }
 
-const char* CORBA::IRObject::_interface_repository_id (void) const
+const char* CORBA_IRObject::_interface_repository_id (void) const
 {
   return "IDL:omg.org/CORBA/IRObject:1.0";
 }
 
-IR::DefinitionKind CORBA::IRObject::def_kind (
+IR_DefinitionKind CORBA_IRObject::def_kind (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -626,7 +590,7 @@
 {
   _TAO_IRObject_Proxy_Impl &proxy = 
     this->the_TAO_IRObject_Proxy_Broker_->select_proxy (this, ACE_TRY_ENV);
-  ACE_CHECK_RETURN ((IR::DefinitionKind)0);
+  ACE_CHECK_RETURN ((IR_DefinitionKind)0);
   
   return proxy.def_kind (
       this,
@@ -634,7 +598,7 @@
     );
 }
 
-void CORBA::IRObject::destroy (
+void CORBA_IRObject::destroy (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -651,9 +615,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-CORBA::IRObject::TAO_ClientRequestInfo_CORBA_IRObject_def_kind_get::TAO_ClientRequestInfo_CORBA_IRObject_def_kind_get (
+CORBA_IRObject::TAO_ClientRequestInfo_CORBA_IRObject_def_kind_get::TAO_ClientRequestInfo_CORBA_IRObject_def_kind_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -662,7 +625,7 @@
 {}
 
 Dynamic::ParameterList *
-CORBA::IRObject::TAO_ClientRequestInfo_CORBA_IRObject_def_kind_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+CORBA_IRObject::TAO_ClientRequestInfo_CORBA_IRObject_def_kind_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -674,7 +637,7 @@
 }
 
 Dynamic::ExceptionList *
-CORBA::IRObject::TAO_ClientRequestInfo_CORBA_IRObject_def_kind_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+CORBA_IRObject::TAO_ClientRequestInfo_CORBA_IRObject_def_kind_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -687,7 +650,7 @@
 
 
 CORBA::Any * 
-CORBA::IRObject::TAO_ClientRequestInfo_CORBA_IRObject_def_kind_get::result (CORBA::Environment &ACE_TRY_ENV)
+CORBA_IRObject::TAO_ClientRequestInfo_CORBA_IRObject_def_kind_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -703,13 +666,13 @@
 }
 
 void 
-CORBA::IRObject::TAO_ClientRequestInfo_CORBA_IRObject_def_kind_get::result (IR::DefinitionKind result)
+CORBA_IRObject::TAO_ClientRequestInfo_CORBA_IRObject_def_kind_get::result (IR_DefinitionKind result)
 {
   // update the result 
   this->_result = result;
 }
 
-CORBA::IRObject::TAO_ClientRequestInfo_CORBA_IRObject_destroy::TAO_ClientRequestInfo_CORBA_IRObject_destroy (
+CORBA_IRObject::TAO_ClientRequestInfo_CORBA_IRObject_destroy::TAO_ClientRequestInfo_CORBA_IRObject_destroy (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -718,7 +681,7 @@
 {}
 
 Dynamic::ParameterList *
-CORBA::IRObject::TAO_ClientRequestInfo_CORBA_IRObject_destroy::arguments (CORBA::Environment &ACE_TRY_ENV)
+CORBA_IRObject::TAO_ClientRequestInfo_CORBA_IRObject_destroy::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -730,7 +693,7 @@
 }
 
 Dynamic::ExceptionList *
-CORBA::IRObject::TAO_ClientRequestInfo_CORBA_IRObject_destroy::exceptions (CORBA::Environment &ACE_TRY_ENV)
+CORBA_IRObject::TAO_ClientRequestInfo_CORBA_IRObject_destroy::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -743,7 +706,7 @@
 
 
 CORBA::Any * 
-CORBA::IRObject::TAO_ClientRequestInfo_CORBA_IRObject_destroy::result (CORBA::Environment &ACE_TRY_ENV)
+CORBA_IRObject::TAO_ClientRequestInfo_CORBA_IRObject_destroy::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -756,106 +719,68 @@
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
-static const CORBA::Long _oc_CORBA_IRObject[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  31, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x434f5242), ACE_NTOHL (0x412f4952), ACE_NTOHL (0x4f626a65), ACE_NTOHL (0x63743a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/IRObject:1.0
-  9, ACE_NTOHL (0x49524f62), ACE_NTOHL (0x6a656374), ACE_NTOHL (0x0),  // name = IRObject
-};
-static CORBA::TypeCode _tc_TAO_tc_CORBA_IRObject (CORBA::tk_objref, sizeof (_oc_CORBA_IRObject), (char *) &_oc_CORBA_IRObject, 0, sizeof (CORBA::IRObject));
-TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
-TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_IRObject, &_tc_TAO_tc_CORBA_IRObject)
-TAO_NAMESPACE_END
-static const CORBA::Long _oc_CORBA_ValueModifier[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  36, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x434f5242), ACE_NTOHL (0x412f5661), ACE_NTOHL (0x6c75654d), ACE_NTOHL (0x6f646966), ACE_NTOHL (0x6965723a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/CORBA/ValueModifier:1.0
-  14, ACE_NTOHL (0x56616c75), ACE_NTOHL (0x654d6f64), ACE_NTOHL (0x69666965), ACE_NTOHL (0x72000000),  // name = ValueModifier
-  CORBA::tk_short,
-
-};
-static CORBA::TypeCode _tc_TAO_tc_CORBA_ValueModifier (CORBA::tk_alias, sizeof (_oc_CORBA_ValueModifier), (char *) &_oc_CORBA_ValueModifier, 0, sizeof (CORBA::ValueModifier));
-TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
-TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ValueModifier, &_tc_TAO_tc_CORBA_ValueModifier)
-TAO_NAMESPACE_END
-TAO_NAMESPACE_TYPE (const CORBA::Short)
-TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (const CORBA::Short, VM_NONE, 0)
-TAO_NAMESPACE_END
-TAO_NAMESPACE_TYPE (const CORBA::Short)
-TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (const CORBA::Short, VM_CUSTOM, 1)
-TAO_NAMESPACE_END
-TAO_NAMESPACE_TYPE (const CORBA::Short)
-TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (const CORBA::Short, VM_ABSTRACT, 2)
-TAO_NAMESPACE_END
-TAO_NAMESPACE_TYPE (const CORBA::Short)
-TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (const CORBA::Short, VM_TRUNCATABLE, 3)
-TAO_NAMESPACE_END
-static const CORBA::Long _oc_CORBA_Visibility[] =
-{
-  TAO_ENCAP_BYTE_ORDER, // byte order
-  33, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x434f5242), ACE_NTOHL (0x412f5669), ACE_NTOHL (0x73696269), ACE_NTOHL (0x6c697479), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Visibility:1.0
-  11, ACE_NTOHL (0x56697369), ACE_NTOHL (0x62696c69), ACE_NTOHL (0x74790000),  // name = Visibility
-  CORBA::tk_short,
 
-};
-static CORBA::TypeCode _tc_TAO_tc_CORBA_Visibility (CORBA::tk_alias, sizeof (_oc_CORBA_Visibility), (char *) &_oc_CORBA_Visibility, 0, sizeof (CORBA::Visibility));
-TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
-TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_Visibility, &_tc_TAO_tc_CORBA_Visibility)
-TAO_NAMESPACE_END
-TAO_NAMESPACE_TYPE (const CORBA::Short)
-TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (const CORBA::Short, PRIVATE_MEMBER, 0)
-TAO_NAMESPACE_END
-TAO_NAMESPACE_TYPE (const CORBA::Short)
-TAO_NAMESPACE_BEGIN (CORBA)
-TAO_NAMESPACE_DEFINE (const CORBA::Short, PUBLIC_MEMBER, 1)
-TAO_NAMESPACE_END
 static const CORBA::Long _oc_IR_Identifier[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   30, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x64656e74), ACE_NTOHL (0x69666965), ACE_NTOHL (0x723a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/Identifier:1.0
   11, ACE_NTOHL (0x4964656e), ACE_NTOHL (0x74696669), ACE_NTOHL (0x65720000),  // name = Identifier
+  CORBA::tk_alias, // typecode kind for typedefs
+  68, // encapsulation length
+    TAO_ENCAP_BYTE_ORDER, // byte order
+    33, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x434f5242), ACE_NTOHL (0x412f4964), ACE_NTOHL (0x656e7469), ACE_NTOHL (0x66696572), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/Identifier:1.0
+    11, ACE_NTOHL (0x4964656e), ACE_NTOHL (0x74696669), ACE_NTOHL (0x65720000),  // name = Identifier
   CORBA::tk_string, 
   0U, // string length
+
 };
 static CORBA::TypeCode _tc_TAO_tc_IR_Identifier (CORBA::tk_alias, sizeof (_oc_IR_Identifier), (char *) &_oc_IR_Identifier, 0, sizeof (IR::Identifier));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_Identifier, &_tc_TAO_tc_IR_Identifier)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_ScopedName[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   30, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f53), ACE_NTOHL (0x636f7065), ACE_NTOHL (0x644e616d), ACE_NTOHL (0x653a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/ScopedName:1.0
   11, ACE_NTOHL (0x53636f70), ACE_NTOHL (0x65644e61), ACE_NTOHL (0x6d650000),  // name = ScopedName
+  CORBA::tk_alias, // typecode kind for typedefs
+  68, // encapsulation length
+    TAO_ENCAP_BYTE_ORDER, // byte order
+    33, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x434f5242), ACE_NTOHL (0x412f5363), ACE_NTOHL (0x6f706564), ACE_NTOHL (0x4e616d65), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/CORBA/ScopedName:1.0
+    11, ACE_NTOHL (0x53636f70), ACE_NTOHL (0x65644e61), ACE_NTOHL (0x6d650000),  // name = ScopedName
   CORBA::tk_string, 
   0U, // string length
+
 };
+
 static CORBA::TypeCode _tc_TAO_tc_IR_ScopedName (CORBA::tk_alias, sizeof (_oc_IR_ScopedName), (char *) &_oc_IR_ScopedName, 0, sizeof (IR::ScopedName));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ScopedName, &_tc_TAO_tc_IR_ScopedName)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_RepositoryId[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f52), ACE_NTOHL (0x65706f73), ACE_NTOHL (0x69746f72), ACE_NTOHL (0x7949643a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/RepositoryId:1.0
-  13, ACE_NTOHL (0x5265706f), ACE_NTOHL (0x7369746f), ACE_NTOHL (0x72794964), ACE_NTOHL (0x0),  // name = RepositoryId
+  13, ACE_NTOHL (0x5265706f), ACE_NTOHL (0x7369746f), ACE_NTOHL (0x72794964), ACE_NTOHL (0x0),  // name = IR_RepositoryId
+  CORBA::tk_alias, // typecode kind for typedefs
+  72, // encapsulation length
+    TAO_ENCAP_BYTE_ORDER, // byte order
+    35, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x434f5242), ACE_NTOHL (0x412f5265), ACE_NTOHL (0x706f7369), ACE_NTOHL (0x746f7279), ACE_NTOHL (0x49643a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/CORBA/RepositoryId:1.0
+    13, ACE_NTOHL (0x5265706f), ACE_NTOHL (0x7369746f), ACE_NTOHL (0x72794964), ACE_NTOHL (0x0),  // name = IR_RepositoryId
   CORBA::tk_string, 
   0U, // string length
+
 };
 static CORBA::TypeCode _tc_TAO_tc_IR_RepositoryId (CORBA::tk_alias, sizeof (_oc_IR_RepositoryId), (char *) &_oc_IR_RepositoryId, 0, sizeof (IR::RepositoryId));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_RepositoryId, &_tc_TAO_tc_IR_RepositoryId)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_VersionSpec[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -874,15 +799,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_Contained_Proxy_Impl::_TAO_Contained_Proxy_Impl (void)
+_TAO_Contained_Proxy_Impl::_TAO_Contained_Proxy_Impl (void)
 {}
 
-IR::_TAO_Contained_Remote_Proxy_Impl::_TAO_Contained_Remote_Proxy_Impl (void)
+_TAO_Contained_Remote_Proxy_Impl::_TAO_Contained_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-char * IR::_TAO_Contained_Remote_Proxy_Impl::id (
+char * _TAO_Contained_Remote_Proxy_Impl::id (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -919,7 +844,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Contained::TAO_ClientRequestInfo_IR_Contained_id_get ri (
+      IR_Contained::TAO_ClientRequestInfo_IR_Contained_id_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -1041,7 +966,7 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_Contained_Remote_Proxy_Impl::id (
+void _TAO_Contained_Remote_Proxy_Impl::id (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     CORBA::Environment &ACE_TRY_ENV
@@ -1050,10 +975,6 @@
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -1079,7 +1000,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Contained::TAO_ClientRequestInfo_IR_Contained_id_set ri (
+      IR_Contained::TAO_ClientRequestInfo_IR_Contained_id_set ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -1193,7 +1114,7 @@
   
 }
 
-char * IR::_TAO_Contained_Remote_Proxy_Impl::name (
+char * _TAO_Contained_Remote_Proxy_Impl::name (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -1201,10 +1122,8 @@
     CORBA::SystemException
   ))
 {
-  
   CORBA::String_var _tao_safe_retval;
   
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
@@ -1230,7 +1149,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Contained::TAO_ClientRequestInfo_IR_Contained_name_get ri (
+      IR_Contained::TAO_ClientRequestInfo_IR_Contained_name_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -1352,7 +1271,7 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_Contained_Remote_Proxy_Impl::name (
+void _TAO_Contained_Remote_Proxy_Impl::name (
     CORBA_Object *_collocated_tao_target_,
     const char * name,
     CORBA::Environment &ACE_TRY_ENV
@@ -1361,10 +1280,6 @@
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -1390,7 +1305,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Contained::TAO_ClientRequestInfo_IR_Contained_name_set ri (
+      IR_Contained::TAO_ClientRequestInfo_IR_Contained_name_set ri (
         &_tao_call,
         _collocated_tao_target_,
         name,
@@ -1504,7 +1419,7 @@
   
 }
 
-char * IR::_TAO_Contained_Remote_Proxy_Impl::version (
+char * _TAO_Contained_Remote_Proxy_Impl::version (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -1541,7 +1456,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Contained::TAO_ClientRequestInfo_IR_Contained_version_get ri (
+      IR_Contained::TAO_ClientRequestInfo_IR_Contained_version_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -1663,7 +1578,7 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_Contained_Remote_Proxy_Impl::version (
+void _TAO_Contained_Remote_Proxy_Impl::version (
     CORBA_Object *_collocated_tao_target_,
     const char * version,
     CORBA::Environment &ACE_TRY_ENV
@@ -1672,15 +1587,10 @@
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_version",
@@ -1701,7 +1611,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Contained::TAO_ClientRequestInfo_IR_Contained_version_set ri (
+      IR_Contained::TAO_ClientRequestInfo_IR_Contained_version_set ri (
         &_tao_call,
         _collocated_tao_target_,
         version,
@@ -1815,7 +1725,7 @@
   
 }
 
-IR::Container_ptr IR::_TAO_Contained_Remote_Proxy_Impl::defined_in (
+IR_Container_ptr _TAO_Contained_Remote_Proxy_Impl::defined_in (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -1823,16 +1733,14 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::Container_ptr _tao_retval = IR::Container::_nil ();
-  IR::Container_var _tao_safe_retval (_tao_retval);
+  IR_Container_ptr _tao_retval = IR_Container::_nil ();
+  IR_Container_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_defined_in",
@@ -1853,7 +1761,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Contained::TAO_ClientRequestInfo_IR_Contained_defined_in_get ri (
+      IR_Contained::TAO_ClientRequestInfo_IR_Contained_defined_in_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -1909,7 +1817,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::Container_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_Container_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -1975,7 +1883,7 @@
   return _tao_safe_retval._retn ();
 }
 
-char * IR::_TAO_Contained_Remote_Proxy_Impl::absolute_name (
+char * _TAO_Contained_Remote_Proxy_Impl::absolute_name (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -1983,15 +1891,12 @@
     CORBA::SystemException
   ))
 {
-  
   CORBA::String_var _tao_safe_retval;
   
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_absolute_name",
@@ -2012,7 +1917,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Contained::TAO_ClientRequestInfo_IR_Contained_absolute_name_get ri (
+      IR_Contained::TAO_ClientRequestInfo_IR_Contained_absolute_name_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -2134,7 +2039,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::Repository_ptr IR::_TAO_Contained_Remote_Proxy_Impl::containing_repository (
+IR_Repository_ptr _TAO_Contained_Remote_Proxy_Impl::containing_repository (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -2142,16 +2047,13 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::Repository_ptr _tao_retval = IR::Repository::_nil ();
-  IR::Repository_var _tao_safe_retval (_tao_retval);
-  
+  IR_Repository_ptr _tao_retval = IR_Repository::_nil ();
+  IR_Repository_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_containing_repository",
@@ -2172,7 +2074,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Contained::TAO_ClientRequestInfo_IR_Contained_containing_repository_get ri (
+      IR_Contained::TAO_ClientRequestInfo_IR_Contained_containing_repository_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -2228,7 +2130,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::Repository_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_Repository_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -2294,7 +2196,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::Contained::Description * IR::_TAO_Contained_Remote_Proxy_Impl::describe (
+IR_Contained::Description * _TAO_Contained_Remote_Proxy_Impl::describe (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -2302,16 +2204,14 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::Contained::Description *_tao_retval = 0;
+  IR_Contained::Description *_tao_retval = 0;
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
-  ACE_NEW_RETURN (_tao_retval, IR::Contained::Description, _tao_retval);
-  IR::Contained::Description_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_Contained::Description, _tao_retval);
+  IR_Contained::Description_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "describe",
@@ -2332,7 +2232,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Contained::TAO_ClientRequestInfo_IR_Contained_describe ri (
+      IR_Contained::TAO_ClientRequestInfo_IR_Contained_describe ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -2388,7 +2288,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::Contained::Description * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_Contained::Description * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -2454,9 +2354,9 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_Contained_Remote_Proxy_Impl::move (
+void _TAO_Contained_Remote_Proxy_Impl::move (
     CORBA_Object *_collocated_tao_target_,
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -2465,15 +2365,10 @@
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "move",
@@ -2494,7 +2389,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Contained::TAO_ClientRequestInfo_IR_Contained_move ri (
+      IR_Contained::TAO_ClientRequestInfo_IR_Contained_move ri (
         &_tao_call,
         _collocated_tao_target_,
         new_container,
@@ -2622,37 +2517,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_Contained_Proxy_Broker::_TAO_Contained_Proxy_Broker (void)
+_TAO_Contained_Proxy_Broker::_TAO_Contained_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_Contained_Proxy_Broker::~_TAO_Contained_Proxy_Broker (void)
+_TAO_Contained_Proxy_Broker::~_TAO_Contained_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_Contained_Proxy_Broker * (*IR__TAO_Contained_Proxy_Broker_Factory_function_pointer) (
+_TAO_Contained_Proxy_Broker * (*_TAO_Contained_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_Contained_Remote_Proxy_Broker *
-IR::_TAO_Contained_Remote_Proxy_Broker::the_TAO_Contained_Remote_Proxy_Broker (void)
+_TAO_Contained_Remote_Proxy_Broker *
+_TAO_Contained_Remote_Proxy_Broker::the_TAO_Contained_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_Contained_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_Contained_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_Contained_Remote_Proxy_Broker::_TAO_Contained_Remote_Proxy_Broker (void)
+_TAO_Contained_Remote_Proxy_Broker::_TAO_Contained_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_Contained_Remote_Proxy_Broker::~_TAO_Contained_Remote_Proxy_Broker (void)
+_TAO_Contained_Remote_Proxy_Broker::~_TAO_Contained_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_Contained_Proxy_Impl&
-IR::_TAO_Contained_Remote_Proxy_Broker::select_proxy (
-  ::IR::Contained *object,
+_TAO_Contained_Proxy_Impl&
+_TAO_Contained_Remote_Proxy_Broker::select_proxy (
+  IR_Contained *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -2668,109 +2563,109 @@
 
 
 // default constructor
-IR::Contained::Contained (int collocated)
+IR_Contained::IR_Contained (int collocated)
 {
   this->IR_Contained_setup_collocation (collocated);
 }
 
 // destructor
-IR::Contained::~Contained (void)
+IR_Contained::~IR_Contained (void)
 {}
 
 void
-IR::Contained::IR_Contained_setup_collocation (int collocated)
+IR_Contained::IR_Contained_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_Contained_Proxy_Broker_ =
-      ::IR__TAO_Contained_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_Contained_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_Contained_Proxy_Broker_ =
-      ::IR::_TAO_Contained_Remote_Proxy_Broker::the_TAO_Contained_Remote_Proxy_Broker ();
+      _TAO_Contained_Remote_Proxy_Broker::the_TAO_Contained_Remote_Proxy_Broker ();
   
   this->CORBA_IRObject_setup_collocation (collocated);
 }
 
-void IR::Contained::_tao_any_destructor (void *x)
+void IR_Contained::_tao_any_destructor (void *x)
 {
-  Contained *tmp = ACE_static_cast (Contained*,x);
+  IR_Contained *tmp = ACE_static_cast (IR_Contained*,x);
   CORBA::release (tmp);
 }
 
-IR::Contained_ptr IR::Contained::_narrow (
+IR_Contained_ptr IR_Contained::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return Contained::_nil ();
+    return IR_Contained::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/Contained:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (Contained::_nil ());
+      ACE_CHECK_RETURN (IR_Contained::_nil ());
       if (is_a == 0)
-        return Contained::_nil ();
+        return IR_Contained::_nil ();
     }
-  return Contained::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_Contained::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::Contained_ptr IR::Contained::_unchecked_narrow (
+IR_Contained_ptr IR_Contained::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return Contained::_nil ();
+    return IR_Contained::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      Contained_ptr default_proxy = Contained::_nil ();
+      IR_Contained_ptr default_proxy = IR_Contained::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_Contained_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_Contained_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::Contained (
+          IR_Contained (
             stub,
             1,
             obj->_servant ()),
             
-          Contained::_nil ());
+          IR_Contained::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::Contained (stub, 0, obj->_servant ()), Contained::_nil ());
+        ACE_NEW_RETURN (default_proxy, IR_Contained (stub, 0, obj->_servant ()), IR_Contained::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            Contained_ptr,
+            IR_Contained_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &Contained::_narrow
+                      &IR_Contained::_narrow
                     )
                 )
           );
 }
 
-IR::Contained_ptr
-IR::Contained::_duplicate (Contained_ptr obj)
+IR_Contained_ptr
+IR_Contained::_duplicate (IR_Contained_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::Contained::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_Contained::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/Contained:1.0")) ||
@@ -2781,22 +2676,22 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::Contained::_tao_QueryInterface (ptr_arith_t type)
+void *IR_Contained::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -2809,12 +2704,12 @@
   return retv;
 }
 
-const char* IR::Contained::_interface_repository_id (void) const
+const char* IR_Contained::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/Contained:1.0";
 }
 
-char * IR::Contained::id (
+char * IR_Contained::id (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -2831,7 +2726,7 @@
     );
 }
 
-void IR::Contained::id (
+void IR_Contained::id (
     const char * id,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -2850,7 +2745,7 @@
     );
 }
 
-char * IR::Contained::name (
+char * IR_Contained::name (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -2867,7 +2762,7 @@
     );
 }
 
-void IR::Contained::name (
+void IR_Contained::name (
     const char * name,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -2886,7 +2781,7 @@
     );
 }
 
-char * IR::Contained::version (
+char * IR_Contained::version (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -2903,7 +2798,7 @@
     );
 }
 
-void IR::Contained::version (
+void IR_Contained::version (
     const char * version,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -2922,7 +2817,7 @@
     );
 }
 
-IR::Container_ptr IR::Contained::defined_in (
+IR_Container_ptr IR_Contained::defined_in (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -2939,7 +2834,7 @@
     );
 }
 
-char * IR::Contained::absolute_name (
+char * IR_Contained::absolute_name (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -2956,7 +2851,7 @@
     );
 }
 
-IR::Repository_ptr IR::Contained::containing_repository (
+IR_Repository_ptr IR_Contained::containing_repository (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -3025,16 +2920,16 @@
   CORBA::tk_any,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_Contained_Description (CORBA::tk_struct, sizeof (_oc_IR_Contained_Description), (char *) &_oc_IR_Contained_Description, 0, sizeof (IR::Contained::Description));
-CORBA::TypeCode_ptr IR::Contained::_tc_Description = &_tc_TAO_tc_IR_Contained_Description;
+static CORBA::TypeCode _tc_TAO_tc_IR_Contained_Description (CORBA::tk_struct, sizeof (_oc_IR_Contained_Description), (char *) &_oc_IR_Contained_Description, 0, sizeof (IR_Contained::Description));
+CORBA::TypeCode_ptr IR_Contained::_tc_Description = &_tc_TAO_tc_IR_Contained_Description;
 
-void IR::Contained::Description::_tao_any_destructor (void *x)
+void IR_Contained::Description::_tao_any_destructor (void *x)
 {
   Description *tmp = ACE_static_cast (Description*,x);
   delete tmp;
 }
 
-IR::Contained::Description * IR::Contained::describe (
+IR_Contained::Description * IR_Contained::describe (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -3051,8 +2946,8 @@
     );
 }
 
-void IR::Contained::move (
-    IR::Container_ptr new_container,
+void IR_Contained::move (
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &ACE_TRY_ENV
@@ -3074,9 +2969,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_id_get::TAO_ClientRequestInfo_IR_Contained_id_get (
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_id_get::TAO_ClientRequestInfo_IR_Contained_id_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -3085,7 +2979,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_id_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_id_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -3097,7 +2991,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_id_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_id_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -3110,7 +3004,7 @@
 
 
 CORBA::Any * 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_id_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_id_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -3126,13 +3020,13 @@
 }
 
 void 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_id_get::result (char * result)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_id_get::result (char * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_id_set::TAO_ClientRequestInfo_IR_Contained_id_set (
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_id_set::TAO_ClientRequestInfo_IR_Contained_id_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
@@ -3143,7 +3037,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_id_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_id_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -3162,7 +3056,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_id_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_id_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -3175,7 +3069,7 @@
 
 
 CORBA::Any * 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_id_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_id_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -3187,7 +3081,7 @@
   return result_any;
 }
 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_name_get::TAO_ClientRequestInfo_IR_Contained_name_get (
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_name_get::TAO_ClientRequestInfo_IR_Contained_name_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -3196,7 +3090,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_name_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_name_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -3208,7 +3102,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_name_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_name_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -3221,7 +3115,7 @@
 
 
 CORBA::Any * 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_name_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_name_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -3237,13 +3131,13 @@
 }
 
 void 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_name_get::result (char * result)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_name_get::result (char * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_name_set::TAO_ClientRequestInfo_IR_Contained_name_set (
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_name_set::TAO_ClientRequestInfo_IR_Contained_name_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * name,
@@ -3254,7 +3148,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_name_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_name_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -3273,7 +3167,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_name_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_name_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -3286,7 +3180,7 @@
 
 
 CORBA::Any * 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_name_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_name_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -3298,7 +3192,7 @@
   return result_any;
 }
 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_version_get::TAO_ClientRequestInfo_IR_Contained_version_get (
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_version_get::TAO_ClientRequestInfo_IR_Contained_version_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -3307,7 +3201,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_version_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_version_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -3319,7 +3213,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_version_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_version_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -3332,7 +3226,7 @@
 
 
 CORBA::Any * 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_version_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_version_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -3348,13 +3242,13 @@
 }
 
 void 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_version_get::result (char * result)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_version_get::result (char * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_version_set::TAO_ClientRequestInfo_IR_Contained_version_set (
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_version_set::TAO_ClientRequestInfo_IR_Contained_version_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * version,
@@ -3365,7 +3259,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_version_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_version_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -3384,7 +3278,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_version_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_version_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -3397,7 +3291,7 @@
 
 
 CORBA::Any * 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_version_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_version_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -3409,7 +3303,7 @@
   return result_any;
 }
 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_defined_in_get::TAO_ClientRequestInfo_IR_Contained_defined_in_get (
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_defined_in_get::TAO_ClientRequestInfo_IR_Contained_defined_in_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -3418,7 +3312,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_defined_in_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_defined_in_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -3430,7 +3324,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_defined_in_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_defined_in_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -3443,7 +3337,7 @@
 
 
 CORBA::Any * 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_defined_in_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_defined_in_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -3459,13 +3353,13 @@
 }
 
 void 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_defined_in_get::result (IR::Container_ptr result)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_defined_in_get::result (IR_Container_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_absolute_name_get::TAO_ClientRequestInfo_IR_Contained_absolute_name_get (
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_absolute_name_get::TAO_ClientRequestInfo_IR_Contained_absolute_name_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -3474,7 +3368,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_absolute_name_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_absolute_name_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -3486,7 +3380,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_absolute_name_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_absolute_name_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -3499,7 +3393,7 @@
 
 
 CORBA::Any * 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_absolute_name_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_absolute_name_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -3515,13 +3409,13 @@
 }
 
 void 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_absolute_name_get::result (char * result)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_absolute_name_get::result (char * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_containing_repository_get::TAO_ClientRequestInfo_IR_Contained_containing_repository_get (
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_containing_repository_get::TAO_ClientRequestInfo_IR_Contained_containing_repository_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -3530,7 +3424,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_containing_repository_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_containing_repository_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -3542,7 +3436,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_containing_repository_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_containing_repository_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -3555,7 +3449,7 @@
 
 
 CORBA::Any * 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_containing_repository_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_containing_repository_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -3571,13 +3465,13 @@
 }
 
 void 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_containing_repository_get::result (IR::Repository_ptr result)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_containing_repository_get::result (IR_Repository_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_describe::TAO_ClientRequestInfo_IR_Contained_describe (
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_describe::TAO_ClientRequestInfo_IR_Contained_describe (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -3586,7 +3480,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_describe::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_describe::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -3598,7 +3492,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_describe::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_describe::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -3611,7 +3505,7 @@
 
 
 CORBA::Any * 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_describe::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_describe::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -3627,16 +3521,16 @@
 }
 
 void 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_describe::result (ACE_NESTED_CLASS (IR::Contained,Description) * result)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_describe::result (ACE_NESTED_CLASS (IR_Contained,Description) * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_move::TAO_ClientRequestInfo_IR_Contained_move (
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_move::TAO_ClientRequestInfo_IR_Contained_move (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    IR::Container_ptr new_container,
+    IR_Container_ptr new_container,
     const char * new_name,
     const char * new_version,
     CORBA::Environment &    
@@ -3648,7 +3542,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_move::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_move::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -3678,7 +3572,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_move::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_move::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -3691,7 +3585,7 @@
 
 
 CORBA::Any * 
-IR::Contained::TAO_ClientRequestInfo_IR_Contained_move::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Contained::TAO_ClientRequestInfo_IR_Contained_move::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -3704,13 +3598,14 @@
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_Contained[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   29, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f43), ACE_NTOHL (0x6f6e7461), ACE_NTOHL (0x696e6564), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IR/Contained:1.0
-  10, ACE_NTOHL (0x436f6e74), ACE_NTOHL (0x61696e65), ACE_NTOHL (0x64000000),  // name = Contained
+  10, ACE_NTOHL (0x436f6e74), ACE_NTOHL (0x61696e65), ACE_NTOHL (0x64000000),  // name = IR_Contained
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_Contained (CORBA::tk_objref, sizeof (_oc_IR_Contained), (char *) &_oc_IR_Contained, 0, sizeof (IR::Contained));
+static CORBA::TypeCode _tc_TAO_tc_IR_Contained (CORBA::tk_objref, sizeof (_oc_IR_Contained), (char *) &_oc_IR_Contained, 0, sizeof (IR_Contained));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_Contained, &_tc_TAO_tc_IR_Contained)
@@ -3718,22 +3613,19 @@
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_INTERFACEDEFSEQ_CS_)
-#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_INTERFACEDEFSEQ_CS_
-
   // The Base_Sequence functions, please see tao/Sequence.h
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::InterfaceDef **tmp = 0;
+    IR_InterfaceDef **tmp = 0;
     tmp = _TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::InterfaceDef **old = ACE_reinterpret_cast (IR::InterfaceDef**, this->buffer_);
+      IR_InterfaceDef **old = ACE_reinterpret_cast (IR_InterfaceDef**, this->buffer_);
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         if (!this->release_)
-          tmp[i] = IR::InterfaceDef::_duplicate (old[i]);
+          tmp[i] = IR_InterfaceDef::_duplicate (old[i]);
         else
           tmp[i] = old[i];
         
@@ -3745,111 +3637,102 @@
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
-    IR::InterfaceDef **tmp = ACE_reinterpret_cast (IR::InterfaceDef**, this->buffer_);
+    IR_InterfaceDef **tmp = ACE_reinterpret_cast (IR_InterfaceDef**, this->buffer_);
     for (CORBA::ULong i = 0; i < this->length_; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::InterfaceDef::_nil ();
+      tmp[i] = IR_InterfaceDef::_nil ();
     }
     _TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq::freebuf (tmp);
     this->buffer_ = 0;
   }
   
-  IR::_TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq::~_TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq (void)
+  _TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq::~_TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq (void)
   {
     this->_deallocate_buffer ();
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
+  _TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
   {
-    IR::InterfaceDef **tmp = ACE_reinterpret_cast (IR::InterfaceDef**, this->buffer_);
+    IR_InterfaceDef **tmp = ACE_reinterpret_cast (IR_InterfaceDef**, this->buffer_);
     
     for (CORBA::ULong i = nl; i < ol; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::InterfaceDef::_nil ();
+      tmp[i] = IR_InterfaceDef::_nil ();
     }
   }
   void 
-  IR::_TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq::_downcast (
+  _TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq::_downcast (
       void* target,
       CORBA_Object *src,
       CORBA_Environment &ACE_TRY_ENV
     )
   {
-    IR::InterfaceDef **tmp = ACE_static_cast (IR::InterfaceDef**, target);
-    *tmp = IR::InterfaceDef::_narrow (src, ACE_TRY_ENV);
+    IR_InterfaceDef **tmp = ACE_static_cast (IR_InterfaceDef**, target);
+    *tmp = IR_InterfaceDef::_narrow (src, ACE_TRY_ENV);
   }
 
   CORBA_Object*
-  IR::_TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq::_upcast (void *src) const
+  _TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq::_upcast (void *src) const
   {
-    IR::InterfaceDef **tmp = ACE_static_cast (IR::InterfaceDef**, src);
+    IR_InterfaceDef **tmp = ACE_static_cast (IR_InterfaceDef**, src);
     return *tmp;
   }
   
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_INTERFACEDEFSEQ_CS_)
-#define _IR_INTERFACEDEFSEQ_CS_
-
 // *************************************************************
-// IR::InterfaceDefSeq
+// IR_InterfaceDefSeq
 // *************************************************************
 
-IR::InterfaceDefSeq::InterfaceDefSeq (void)
+IR_InterfaceDefSeq::IR_InterfaceDefSeq (void)
 {}
-IR::InterfaceDefSeq::InterfaceDefSeq (CORBA::ULong max) // uses max size
+IR_InterfaceDefSeq::IR_InterfaceDefSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::InterfaceDef,IR::InterfaceDef_var>
+  TAO_Unbounded_Object_Sequence<IR_InterfaceDef,IR_InterfaceDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::InterfaceDefSeq::InterfaceDefSeq (CORBA::ULong max, CORBA::ULong length, IR::InterfaceDef_ptr *buffer, CORBA::Boolean release)
+IR_InterfaceDefSeq::IR_InterfaceDefSeq (CORBA::ULong max, CORBA::ULong length, IR_InterfaceDef_ptr *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::InterfaceDef,IR::InterfaceDef_var>
+  TAO_Unbounded_Object_Sequence<IR_InterfaceDef,IR_InterfaceDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::InterfaceDefSeq::InterfaceDefSeq (const InterfaceDefSeq &seq) // copy ctor
+IR_InterfaceDefSeq::IR_InterfaceDefSeq (const IR_InterfaceDefSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_InterfaceDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::InterfaceDef,IR::InterfaceDef_var>
+  TAO_Unbounded_Object_Sequence<IR_InterfaceDef,IR_InterfaceDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::InterfaceDefSeq::~InterfaceDefSeq (void) // dtor
+IR_InterfaceDefSeq::~IR_InterfaceDefSeq (void) // dtor
 {}
-void IR::InterfaceDefSeq::_tao_any_destructor (void *x)
+void IR_InterfaceDefSeq::_tao_any_destructor (void *x)
 {
-  InterfaceDefSeq *tmp = ACE_static_cast (InterfaceDefSeq*,x);
+  IR_InterfaceDefSeq *tmp = ACE_static_cast (IR_InterfaceDefSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_InterfaceDefSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   35, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x6e746572), ACE_NTOHL (0x66616365), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65713a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/InterfaceDefSeq:1.0
-  16, ACE_NTOHL (0x496e7465), ACE_NTOHL (0x72666163), ACE_NTOHL (0x65446566), ACE_NTOHL (0x53657100),  // name = InterfaceDefSeq
+  16, ACE_NTOHL (0x496e7465), ACE_NTOHL (0x72666163), ACE_NTOHL (0x65446566), ACE_NTOHL (0x53657100),  // name = IR_InterfaceDefSeq
   CORBA::tk_sequence, // typecode kind
   76, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
@@ -3857,12 +3740,12 @@
     60, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x6e746572), ACE_NTOHL (0x66616365), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/InterfaceDef:1.0
-      13, ACE_NTOHL (0x496e7465), ACE_NTOHL (0x72666163), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = InterfaceDef
+      13, ACE_NTOHL (0x496e7465), ACE_NTOHL (0x72666163), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = IR_InterfaceDef
 
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_InterfaceDefSeq (CORBA::tk_alias, sizeof (_oc_IR_InterfaceDefSeq), (char *) &_oc_IR_InterfaceDefSeq, 0, sizeof (IR::InterfaceDefSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_InterfaceDefSeq (CORBA::tk_alias, sizeof (_oc_IR_InterfaceDefSeq), (char *) &_oc_IR_InterfaceDefSeq, 0, sizeof (IR_InterfaceDefSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_InterfaceDefSeq, &_tc_TAO_tc_IR_InterfaceDefSeq)
@@ -3870,22 +3753,19 @@
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_VALUEDEFSEQ_CS_)
-#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_VALUEDEFSEQ_CS_
-
   // The Base_Sequence functions, please see tao/Sequence.h
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_ValueDefSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Object_Sequence_IR_ValueDefSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::ValueDef **tmp = 0;
+    IR_ValueDef **tmp = 0;
     tmp = _TAO_Unbounded_Object_Sequence_IR_ValueDefSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::ValueDef **old = ACE_reinterpret_cast (IR::ValueDef**, this->buffer_);
+      IR_ValueDef **old = ACE_reinterpret_cast (IR_ValueDef**, this->buffer_);
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         if (!this->release_)
-          tmp[i] = IR::ValueDef::_duplicate (old[i]);
+          tmp[i] = IR_ValueDef::_duplicate (old[i]);
         else
           tmp[i] = old[i];
         
@@ -3897,111 +3777,102 @@
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_ValueDefSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Object_Sequence_IR_ValueDefSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
-    IR::ValueDef **tmp = ACE_reinterpret_cast (IR::ValueDef**, this->buffer_);
+    IR_ValueDef **tmp = ACE_reinterpret_cast (IR_ValueDef**, this->buffer_);
     for (CORBA::ULong i = 0; i < this->length_; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::ValueDef::_nil ();
+      tmp[i] = IR_ValueDef::_nil ();
     }
     _TAO_Unbounded_Object_Sequence_IR_ValueDefSeq::freebuf (tmp);
     this->buffer_ = 0;
   }
   
-  IR::_TAO_Unbounded_Object_Sequence_IR_ValueDefSeq::~_TAO_Unbounded_Object_Sequence_IR_ValueDefSeq (void)
+  _TAO_Unbounded_Object_Sequence_IR_ValueDefSeq::~_TAO_Unbounded_Object_Sequence_IR_ValueDefSeq (void)
   {
     this->_deallocate_buffer ();
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_ValueDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
+  _TAO_Unbounded_Object_Sequence_IR_ValueDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
   {
-    IR::ValueDef **tmp = ACE_reinterpret_cast (IR::ValueDef**, this->buffer_);
+    IR_ValueDef **tmp = ACE_reinterpret_cast (IR_ValueDef**, this->buffer_);
     
     for (CORBA::ULong i = nl; i < ol; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::ValueDef::_nil ();
+      tmp[i] = IR_ValueDef::_nil ();
     }
   }
   void 
-  IR::_TAO_Unbounded_Object_Sequence_IR_ValueDefSeq::_downcast (
+  _TAO_Unbounded_Object_Sequence_IR_ValueDefSeq::_downcast (
       void* target,
       CORBA_Object *src,
       CORBA_Environment &ACE_TRY_ENV
     )
   {
-    IR::ValueDef **tmp = ACE_static_cast (IR::ValueDef**, target);
-    *tmp = IR::ValueDef::_narrow (src, ACE_TRY_ENV);
+    IR_ValueDef **tmp = ACE_static_cast (IR_ValueDef**, target);
+    *tmp = IR_ValueDef::_narrow (src, ACE_TRY_ENV);
   }
 
   CORBA_Object*
-  IR::_TAO_Unbounded_Object_Sequence_IR_ValueDefSeq::_upcast (void *src) const
+  _TAO_Unbounded_Object_Sequence_IR_ValueDefSeq::_upcast (void *src) const
   {
-    IR::ValueDef **tmp = ACE_static_cast (IR::ValueDef**, src);
+    IR_ValueDef **tmp = ACE_static_cast (IR_ValueDef**, src);
     return *tmp;
   }
   
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_VALUEDEFSEQ_CS_)
-#define _IR_VALUEDEFSEQ_CS_
-
 // *************************************************************
-// IR::ValueDefSeq
+// IR_ValueDefSeq
 // *************************************************************
 
-IR::ValueDefSeq::ValueDefSeq (void)
+IR_ValueDefSeq::IR_ValueDefSeq (void)
 {}
-IR::ValueDefSeq::ValueDefSeq (CORBA::ULong max) // uses max size
+IR_ValueDefSeq::IR_ValueDefSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_ValueDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::ValueDef,IR::ValueDef_var>
+  TAO_Unbounded_Object_Sequence<IR_ValueDef,IR_ValueDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::ValueDefSeq::ValueDefSeq (CORBA::ULong max, CORBA::ULong length, IR::ValueDef_ptr *buffer, CORBA::Boolean release)
+IR_ValueDefSeq::IR_ValueDefSeq (CORBA::ULong max, CORBA::ULong length, IR_ValueDef_ptr *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_ValueDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::ValueDef,IR::ValueDef_var>
+  TAO_Unbounded_Object_Sequence<IR_ValueDef,IR_ValueDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::ValueDefSeq::ValueDefSeq (const ValueDefSeq &seq) // copy ctor
+IR_ValueDefSeq::IR_ValueDefSeq (const IR_ValueDefSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_ValueDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::ValueDef,IR::ValueDef_var>
+  TAO_Unbounded_Object_Sequence<IR_ValueDef,IR_ValueDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::ValueDefSeq::~ValueDefSeq (void) // dtor
+IR_ValueDefSeq::~IR_ValueDefSeq (void) // dtor
 {}
-void IR::ValueDefSeq::_tao_any_destructor (void *x)
+void IR_ValueDefSeq::_tao_any_destructor (void *x)
 {
-  ValueDefSeq *tmp = ACE_static_cast (ValueDefSeq*,x);
+  IR_ValueDefSeq *tmp = ACE_static_cast (IR_ValueDefSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_ValueDefSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   31, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f56), ACE_NTOHL (0x616c7565), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65713a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/ValueDefSeq:1.0
-  12, ACE_NTOHL (0x56616c75), ACE_NTOHL (0x65446566), ACE_NTOHL (0x53657100),  // name = ValueDefSeq
+  12, ACE_NTOHL (0x56616c75), ACE_NTOHL (0x65446566), ACE_NTOHL (0x53657100),  // name = IR_ValueDefSeq
   CORBA::tk_sequence, // typecode kind
   68, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
@@ -4009,12 +3880,12 @@
     52, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       28, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f56), ACE_NTOHL (0x616c7565), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/ValueDef:1.0
-      9, ACE_NTOHL (0x56616c75), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = ValueDef
+      9, ACE_NTOHL (0x56616c75), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = IR_ValueDef
 
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ValueDefSeq (CORBA::tk_alias, sizeof (_oc_IR_ValueDefSeq), (char *) &_oc_IR_ValueDefSeq, 0, sizeof (IR::ValueDefSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_ValueDefSeq (CORBA::tk_alias, sizeof (_oc_IR_ValueDefSeq), (char *) &_oc_IR_ValueDefSeq, 0, sizeof (IR_ValueDefSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ValueDefSeq, &_tc_TAO_tc_IR_ValueDefSeq)
@@ -4022,22 +3893,19 @@
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_COMPONENTDEFSEQ_CS_)
-#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_COMPONENTDEFSEQ_CS_
-
   // The Base_Sequence functions, please see tao/Sequence.h
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::ComponentDef **tmp = 0;
+    IR_ComponentDef **tmp = 0;
     tmp = _TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::ComponentDef **old = ACE_reinterpret_cast (IR::ComponentDef**, this->buffer_);
+      IR_ComponentDef **old = ACE_reinterpret_cast (IR_ComponentDef**, this->buffer_);
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         if (!this->release_)
-          tmp[i] = IR::ComponentDef::_duplicate (old[i]);
+          tmp[i] = IR_ComponentDef::_duplicate (old[i]);
         else
           tmp[i] = old[i];
         
@@ -4049,111 +3917,102 @@
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
-    IR::ComponentDef **tmp = ACE_reinterpret_cast (IR::ComponentDef**, this->buffer_);
+    IR_ComponentDef **tmp = ACE_reinterpret_cast (IR_ComponentDef**, this->buffer_);
     for (CORBA::ULong i = 0; i < this->length_; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::ComponentDef::_nil ();
+      tmp[i] = IR_ComponentDef::_nil ();
     }
     _TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq::freebuf (tmp);
     this->buffer_ = 0;
   }
   
-  IR::_TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq::~_TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq (void)
+  _TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq::~_TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq (void)
   {
     this->_deallocate_buffer ();
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
+  _TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
   {
-    IR::ComponentDef **tmp = ACE_reinterpret_cast (IR::ComponentDef**, this->buffer_);
+    IR_ComponentDef **tmp = ACE_reinterpret_cast (IR_ComponentDef**, this->buffer_);
     
     for (CORBA::ULong i = nl; i < ol; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::ComponentDef::_nil ();
+      tmp[i] = IR_ComponentDef::_nil ();
     }
   }
   void 
-  IR::_TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq::_downcast (
+  _TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq::_downcast (
       void* target,
       CORBA_Object *src,
       CORBA_Environment &ACE_TRY_ENV
     )
   {
-    IR::ComponentDef **tmp = ACE_static_cast (IR::ComponentDef**, target);
-    *tmp = IR::ComponentDef::_narrow (src, ACE_TRY_ENV);
+    IR_ComponentDef **tmp = ACE_static_cast (IR_ComponentDef**, target);
+    *tmp = IR_ComponentDef::_narrow (src, ACE_TRY_ENV);
   }
 
   CORBA_Object*
-  IR::_TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq::_upcast (void *src) const
+  _TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq::_upcast (void *src) const
   {
-    IR::ComponentDef **tmp = ACE_static_cast (IR::ComponentDef**, src);
+    IR_ComponentDef **tmp = ACE_static_cast (IR_ComponentDef**, src);
     return *tmp;
   }
   
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_COMPONENTDEFSEQ_CS_)
-#define _IR_COMPONENTDEFSEQ_CS_
-
 // *************************************************************
-// IR::ComponentDefSeq
+// IR_ComponentDefSeq
 // *************************************************************
 
-IR::ComponentDefSeq::ComponentDefSeq (void)
+IR_ComponentDefSeq::IR_ComponentDefSeq (void)
 {}
-IR::ComponentDefSeq::ComponentDefSeq (CORBA::ULong max) // uses max size
+IR_ComponentDefSeq::IR_ComponentDefSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::ComponentDef,IR::ComponentDef_var>
+  TAO_Unbounded_Object_Sequence<IR_ComponentDef,IR_ComponentDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::ComponentDefSeq::ComponentDefSeq (CORBA::ULong max, CORBA::ULong length, IR::ComponentDef_ptr *buffer, CORBA::Boolean release)
+IR_ComponentDefSeq::IR_ComponentDefSeq (CORBA::ULong max, CORBA::ULong length, IR_ComponentDef_ptr *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::ComponentDef,IR::ComponentDef_var>
+  TAO_Unbounded_Object_Sequence<IR_ComponentDef,IR_ComponentDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::ComponentDefSeq::ComponentDefSeq (const ComponentDefSeq &seq) // copy ctor
+IR_ComponentDefSeq::IR_ComponentDefSeq (const IR_ComponentDefSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_ComponentDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::ComponentDef,IR::ComponentDef_var>
+  TAO_Unbounded_Object_Sequence<IR_ComponentDef,IR_ComponentDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::ComponentDefSeq::~ComponentDefSeq (void) // dtor
+IR_ComponentDefSeq::~IR_ComponentDefSeq (void) // dtor
 {}
-void IR::ComponentDefSeq::_tao_any_destructor (void *x)
+void IR_ComponentDefSeq::_tao_any_destructor (void *x)
 {
-  ComponentDefSeq *tmp = ACE_static_cast (ComponentDefSeq*,x);
+  IR_ComponentDefSeq *tmp = ACE_static_cast (IR_ComponentDefSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_ComponentDefSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   35, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f43), ACE_NTOHL (0x6f6d706f), ACE_NTOHL (0x6e656e74), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65713a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/ComponentDefSeq:1.0
-  16, ACE_NTOHL (0x436f6d70), ACE_NTOHL (0x6f6e656e), ACE_NTOHL (0x74446566), ACE_NTOHL (0x53657100),  // name = ComponentDefSeq
+  16, ACE_NTOHL (0x436f6d70), ACE_NTOHL (0x6f6e656e), ACE_NTOHL (0x74446566), ACE_NTOHL (0x53657100),  // name = IR_ComponentDefSeq
   CORBA::tk_sequence, // typecode kind
   76, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
@@ -4161,12 +4020,12 @@
     60, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f43), ACE_NTOHL (0x6f6d706f), ACE_NTOHL (0x6e656e74), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/ComponentDef:1.0
-      13, ACE_NTOHL (0x436f6d70), ACE_NTOHL (0x6f6e656e), ACE_NTOHL (0x74446566), ACE_NTOHL (0x0),  // name = ComponentDef
+      13, ACE_NTOHL (0x436f6d70), ACE_NTOHL (0x6f6e656e), ACE_NTOHL (0x74446566), ACE_NTOHL (0x0),  // name = IR_ComponentDef
 
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ComponentDefSeq (CORBA::tk_alias, sizeof (_oc_IR_ComponentDefSeq), (char *) &_oc_IR_ComponentDefSeq, 0, sizeof (IR::ComponentDefSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_ComponentDefSeq (CORBA::tk_alias, sizeof (_oc_IR_ComponentDefSeq), (char *) &_oc_IR_ComponentDefSeq, 0, sizeof (IR_ComponentDefSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ComponentDefSeq, &_tc_TAO_tc_IR_ComponentDefSeq)
@@ -4174,22 +4033,19 @@
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_PROVIDESDEFSEQ_CS_)
-#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_PROVIDESDEFSEQ_CS_
-
   // The Base_Sequence functions, please see tao/Sequence.h
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::ProvidesDef **tmp = 0;
+    IR_ProvidesDef **tmp = 0;
     tmp = _TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::ProvidesDef **old = ACE_reinterpret_cast (IR::ProvidesDef**, this->buffer_);
+      IR_ProvidesDef **old = ACE_reinterpret_cast (IR_ProvidesDef**, this->buffer_);
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         if (!this->release_)
-          tmp[i] = IR::ProvidesDef::_duplicate (old[i]);
+          tmp[i] = IR_ProvidesDef::_duplicate (old[i]);
         else
           tmp[i] = old[i];
         
@@ -4201,111 +4057,102 @@
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
-    IR::ProvidesDef **tmp = ACE_reinterpret_cast (IR::ProvidesDef**, this->buffer_);
+    IR_ProvidesDef **tmp = ACE_reinterpret_cast (IR_ProvidesDef**, this->buffer_);
     for (CORBA::ULong i = 0; i < this->length_; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::ProvidesDef::_nil ();
+      tmp[i] = IR_ProvidesDef::_nil ();
     }
     _TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq::freebuf (tmp);
     this->buffer_ = 0;
   }
   
-  IR::_TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq::~_TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq (void)
+  _TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq::~_TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq (void)
   {
     this->_deallocate_buffer ();
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
+  _TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
   {
-    IR::ProvidesDef **tmp = ACE_reinterpret_cast (IR::ProvidesDef**, this->buffer_);
+    IR_ProvidesDef **tmp = ACE_reinterpret_cast (IR_ProvidesDef**, this->buffer_);
     
     for (CORBA::ULong i = nl; i < ol; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::ProvidesDef::_nil ();
+      tmp[i] = IR_ProvidesDef::_nil ();
     }
   }
   void 
-  IR::_TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq::_downcast (
+  _TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq::_downcast (
       void* target,
       CORBA_Object *src,
       CORBA_Environment &ACE_TRY_ENV
     )
   {
-    IR::ProvidesDef **tmp = ACE_static_cast (IR::ProvidesDef**, target);
-    *tmp = IR::ProvidesDef::_narrow (src, ACE_TRY_ENV);
+    IR_ProvidesDef **tmp = ACE_static_cast (IR_ProvidesDef**, target);
+    *tmp = IR_ProvidesDef::_narrow (src, ACE_TRY_ENV);
   }
 
   CORBA_Object*
-  IR::_TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq::_upcast (void *src) const
+  _TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq::_upcast (void *src) const
   {
-    IR::ProvidesDef **tmp = ACE_static_cast (IR::ProvidesDef**, src);
+    IR_ProvidesDef **tmp = ACE_static_cast (IR_ProvidesDef**, src);
     return *tmp;
   }
   
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_PROVIDESDEFSEQ_CS_)
-#define _IR_PROVIDESDEFSEQ_CS_
-
 // *************************************************************
-// IR::ProvidesDefSeq
+// IR_ProvidesDefSeq
 // *************************************************************
 
-IR::ProvidesDefSeq::ProvidesDefSeq (void)
+IR_ProvidesDefSeq::IR_ProvidesDefSeq (void)
 {}
-IR::ProvidesDefSeq::ProvidesDefSeq (CORBA::ULong max) // uses max size
+IR_ProvidesDefSeq::IR_ProvidesDefSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::ProvidesDef,IR::ProvidesDef_var>
+  TAO_Unbounded_Object_Sequence<IR_ProvidesDef,IR_ProvidesDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::ProvidesDefSeq::ProvidesDefSeq (CORBA::ULong max, CORBA::ULong length, IR::ProvidesDef_ptr *buffer, CORBA::Boolean release)
+IR_ProvidesDefSeq::IR_ProvidesDefSeq (CORBA::ULong max, CORBA::ULong length, IR_ProvidesDef_ptr *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::ProvidesDef,IR::ProvidesDef_var>
+  TAO_Unbounded_Object_Sequence<IR_ProvidesDef,IR_ProvidesDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::ProvidesDefSeq::ProvidesDefSeq (const ProvidesDefSeq &seq) // copy ctor
+IR_ProvidesDefSeq::IR_ProvidesDefSeq (const IR_ProvidesDefSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_ProvidesDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::ProvidesDef,IR::ProvidesDef_var>
+  TAO_Unbounded_Object_Sequence<IR_ProvidesDef,IR_ProvidesDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::ProvidesDefSeq::~ProvidesDefSeq (void) // dtor
+IR_ProvidesDefSeq::~IR_ProvidesDefSeq (void) // dtor
 {}
-void IR::ProvidesDefSeq::_tao_any_destructor (void *x)
+void IR_ProvidesDefSeq::_tao_any_destructor (void *x)
 {
-  ProvidesDefSeq *tmp = ACE_static_cast (ProvidesDefSeq*,x);
+  IR_ProvidesDefSeq *tmp = ACE_static_cast (IR_ProvidesDefSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_ProvidesDefSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   34, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f50), ACE_NTOHL (0x726f7669), ACE_NTOHL (0x64657344), ACE_NTOHL (0x65665365), ACE_NTOHL (0x713a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/ProvidesDefSeq:1.0
-  15, ACE_NTOHL (0x50726f76), ACE_NTOHL (0x69646573), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65710000),  // name = ProvidesDefSeq
+  15, ACE_NTOHL (0x50726f76), ACE_NTOHL (0x69646573), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65710000),  // name = IR_ProvidesDefSeq
   CORBA::tk_sequence, // typecode kind
   72, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
@@ -4313,12 +4160,12 @@
     56, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       31, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f50), ACE_NTOHL (0x726f7669), ACE_NTOHL (0x64657344), ACE_NTOHL (0x65663a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/ProvidesDef:1.0
-      12, ACE_NTOHL (0x50726f76), ACE_NTOHL (0x69646573), ACE_NTOHL (0x44656600),  // name = ProvidesDef
+      12, ACE_NTOHL (0x50726f76), ACE_NTOHL (0x69646573), ACE_NTOHL (0x44656600),  // name = IR_ProvidesDef
 
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ProvidesDefSeq (CORBA::tk_alias, sizeof (_oc_IR_ProvidesDefSeq), (char *) &_oc_IR_ProvidesDefSeq, 0, sizeof (IR::ProvidesDefSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_ProvidesDefSeq (CORBA::tk_alias, sizeof (_oc_IR_ProvidesDefSeq), (char *) &_oc_IR_ProvidesDefSeq, 0, sizeof (IR_ProvidesDefSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ProvidesDefSeq, &_tc_TAO_tc_IR_ProvidesDefSeq)
@@ -4326,22 +4173,19 @@
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_USESDEFSEQ_CS_)
-#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_USESDEFSEQ_CS_
-
   // The Base_Sequence functions, please see tao/Sequence.h
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_UsesDefSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Object_Sequence_IR_UsesDefSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::UsesDef **tmp = 0;
+    IR_UsesDef **tmp = 0;
     tmp = _TAO_Unbounded_Object_Sequence_IR_UsesDefSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::UsesDef **old = ACE_reinterpret_cast (IR::UsesDef**, this->buffer_);
+      IR_UsesDef **old = ACE_reinterpret_cast (IR_UsesDef**, this->buffer_);
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         if (!this->release_)
-          tmp[i] = IR::UsesDef::_duplicate (old[i]);
+          tmp[i] = IR_UsesDef::_duplicate (old[i]);
         else
           tmp[i] = old[i];
         
@@ -4353,111 +4197,102 @@
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_UsesDefSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Object_Sequence_IR_UsesDefSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
-    IR::UsesDef **tmp = ACE_reinterpret_cast (IR::UsesDef**, this->buffer_);
+    IR_UsesDef **tmp = ACE_reinterpret_cast (IR_UsesDef**, this->buffer_);
     for (CORBA::ULong i = 0; i < this->length_; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::UsesDef::_nil ();
+      tmp[i] = IR_UsesDef::_nil ();
     }
     _TAO_Unbounded_Object_Sequence_IR_UsesDefSeq::freebuf (tmp);
     this->buffer_ = 0;
   }
   
-  IR::_TAO_Unbounded_Object_Sequence_IR_UsesDefSeq::~_TAO_Unbounded_Object_Sequence_IR_UsesDefSeq (void)
+  _TAO_Unbounded_Object_Sequence_IR_UsesDefSeq::~_TAO_Unbounded_Object_Sequence_IR_UsesDefSeq (void)
   {
     this->_deallocate_buffer ();
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_UsesDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
+  _TAO_Unbounded_Object_Sequence_IR_UsesDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
   {
-    IR::UsesDef **tmp = ACE_reinterpret_cast (IR::UsesDef**, this->buffer_);
+    IR_UsesDef **tmp = ACE_reinterpret_cast (IR_UsesDef**, this->buffer_);
     
     for (CORBA::ULong i = nl; i < ol; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::UsesDef::_nil ();
+      tmp[i] = IR_UsesDef::_nil ();
     }
   }
   void 
-  IR::_TAO_Unbounded_Object_Sequence_IR_UsesDefSeq::_downcast (
+  _TAO_Unbounded_Object_Sequence_IR_UsesDefSeq::_downcast (
       void* target,
       CORBA_Object *src,
       CORBA_Environment &ACE_TRY_ENV
     )
   {
-    IR::UsesDef **tmp = ACE_static_cast (IR::UsesDef**, target);
-    *tmp = IR::UsesDef::_narrow (src, ACE_TRY_ENV);
+    IR_UsesDef **tmp = ACE_static_cast (IR_UsesDef**, target);
+    *tmp = IR_UsesDef::_narrow (src, ACE_TRY_ENV);
   }
 
   CORBA_Object*
-  IR::_TAO_Unbounded_Object_Sequence_IR_UsesDefSeq::_upcast (void *src) const
+  _TAO_Unbounded_Object_Sequence_IR_UsesDefSeq::_upcast (void *src) const
   {
-    IR::UsesDef **tmp = ACE_static_cast (IR::UsesDef**, src);
+    IR_UsesDef **tmp = ACE_static_cast (IR_UsesDef**, src);
     return *tmp;
   }
   
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_USESDEFSEQ_CS_)
-#define _IR_USESDEFSEQ_CS_
-
 // *************************************************************
-// IR::UsesDefSeq
+// IR_UsesDefSeq
 // *************************************************************
 
-IR::UsesDefSeq::UsesDefSeq (void)
+IR_UsesDefSeq::IR_UsesDefSeq (void)
 {}
-IR::UsesDefSeq::UsesDefSeq (CORBA::ULong max) // uses max size
+IR_UsesDefSeq::IR_UsesDefSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_UsesDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::UsesDef,IR::UsesDef_var>
+  TAO_Unbounded_Object_Sequence<IR_UsesDef,IR_UsesDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::UsesDefSeq::UsesDefSeq (CORBA::ULong max, CORBA::ULong length, IR::UsesDef_ptr *buffer, CORBA::Boolean release)
+IR_UsesDefSeq::IR_UsesDefSeq (CORBA::ULong max, CORBA::ULong length, IR_UsesDef_ptr *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_UsesDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::UsesDef,IR::UsesDef_var>
+  TAO_Unbounded_Object_Sequence<IR_UsesDef,IR_UsesDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::UsesDefSeq::UsesDefSeq (const UsesDefSeq &seq) // copy ctor
+IR_UsesDefSeq::IR_UsesDefSeq (const IR_UsesDefSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_UsesDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::UsesDef,IR::UsesDef_var>
+  TAO_Unbounded_Object_Sequence<IR_UsesDef,IR_UsesDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::UsesDefSeq::~UsesDefSeq (void) // dtor
+IR_UsesDefSeq::~IR_UsesDefSeq (void) // dtor
 {}
-void IR::UsesDefSeq::_tao_any_destructor (void *x)
+void IR_UsesDefSeq::_tao_any_destructor (void *x)
 {
-  UsesDefSeq *tmp = ACE_static_cast (UsesDefSeq*,x);
+  IR_UsesDefSeq *tmp = ACE_static_cast (IR_UsesDefSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_UsesDefSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   30, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f55), ACE_NTOHL (0x73657344), ACE_NTOHL (0x65665365), ACE_NTOHL (0x713a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/UsesDefSeq:1.0
-  11, ACE_NTOHL (0x55736573), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65710000),  // name = UsesDefSeq
+  11, ACE_NTOHL (0x55736573), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65710000),  // name = IR_UsesDefSeq
   CORBA::tk_sequence, // typecode kind
   64, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
@@ -4465,12 +4300,12 @@
     48, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f55), ACE_NTOHL (0x73657344), ACE_NTOHL (0x65663a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/UsesDef:1.0
-      8, ACE_NTOHL (0x55736573), ACE_NTOHL (0x44656600),  // name = UsesDef
+      8, ACE_NTOHL (0x55736573), ACE_NTOHL (0x44656600),  // name = IR_UsesDef
 
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_UsesDefSeq (CORBA::tk_alias, sizeof (_oc_IR_UsesDefSeq), (char *) &_oc_IR_UsesDefSeq, 0, sizeof (IR::UsesDefSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_UsesDefSeq (CORBA::tk_alias, sizeof (_oc_IR_UsesDefSeq), (char *) &_oc_IR_UsesDefSeq, 0, sizeof (IR_UsesDefSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_UsesDefSeq, &_tc_TAO_tc_IR_UsesDefSeq)
@@ -4478,22 +4313,19 @@
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_HOMEDEFSEQ_CS_)
-#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_HOMEDEFSEQ_CS_
-
   // The Base_Sequence functions, please see tao/Sequence.h
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_HomeDefSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Object_Sequence_IR_HomeDefSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::HomeDef **tmp = 0;
+    IR_HomeDef **tmp = 0;
     tmp = _TAO_Unbounded_Object_Sequence_IR_HomeDefSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::HomeDef **old = ACE_reinterpret_cast (IR::HomeDef**, this->buffer_);
+      IR_HomeDef **old = ACE_reinterpret_cast (IR_HomeDef**, this->buffer_);
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         if (!this->release_)
-          tmp[i] = IR::HomeDef::_duplicate (old[i]);
+          tmp[i] = IR_HomeDef::_duplicate (old[i]);
         else
           tmp[i] = old[i];
         
@@ -4505,111 +4337,102 @@
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_HomeDefSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Object_Sequence_IR_HomeDefSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
-    IR::HomeDef **tmp = ACE_reinterpret_cast (IR::HomeDef**, this->buffer_);
+    IR_HomeDef **tmp = ACE_reinterpret_cast (IR_HomeDef**, this->buffer_);
     for (CORBA::ULong i = 0; i < this->length_; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::HomeDef::_nil ();
+      tmp[i] = IR_HomeDef::_nil ();
     }
     _TAO_Unbounded_Object_Sequence_IR_HomeDefSeq::freebuf (tmp);
     this->buffer_ = 0;
   }
   
-  IR::_TAO_Unbounded_Object_Sequence_IR_HomeDefSeq::~_TAO_Unbounded_Object_Sequence_IR_HomeDefSeq (void)
+  _TAO_Unbounded_Object_Sequence_IR_HomeDefSeq::~_TAO_Unbounded_Object_Sequence_IR_HomeDefSeq (void)
   {
     this->_deallocate_buffer ();
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_HomeDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
+  _TAO_Unbounded_Object_Sequence_IR_HomeDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
   {
-    IR::HomeDef **tmp = ACE_reinterpret_cast (IR::HomeDef**, this->buffer_);
+    IR_HomeDef **tmp = ACE_reinterpret_cast (IR_HomeDef**, this->buffer_);
     
     for (CORBA::ULong i = nl; i < ol; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::HomeDef::_nil ();
+      tmp[i] = IR_HomeDef::_nil ();
     }
   }
   void 
-  IR::_TAO_Unbounded_Object_Sequence_IR_HomeDefSeq::_downcast (
+  _TAO_Unbounded_Object_Sequence_IR_HomeDefSeq::_downcast (
       void* target,
       CORBA_Object *src,
       CORBA_Environment &ACE_TRY_ENV
     )
   {
-    IR::HomeDef **tmp = ACE_static_cast (IR::HomeDef**, target);
-    *tmp = IR::HomeDef::_narrow (src, ACE_TRY_ENV);
+    IR_HomeDef **tmp = ACE_static_cast (IR_HomeDef**, target);
+    *tmp = IR_HomeDef::_narrow (src, ACE_TRY_ENV);
   }
 
   CORBA_Object*
-  IR::_TAO_Unbounded_Object_Sequence_IR_HomeDefSeq::_upcast (void *src) const
+  _TAO_Unbounded_Object_Sequence_IR_HomeDefSeq::_upcast (void *src) const
   {
-    IR::HomeDef **tmp = ACE_static_cast (IR::HomeDef**, src);
+    IR_HomeDef **tmp = ACE_static_cast (IR_HomeDef**, src);
     return *tmp;
   }
   
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_HOMEDEFSEQ_CS_)
-#define _IR_HOMEDEFSEQ_CS_
-
 // *************************************************************
-// IR::HomeDefSeq
+// IR_HomeDefSeq
 // *************************************************************
 
-IR::HomeDefSeq::HomeDefSeq (void)
+IR_HomeDefSeq::IR_HomeDefSeq (void)
 {}
-IR::HomeDefSeq::HomeDefSeq (CORBA::ULong max) // uses max size
+IR_HomeDefSeq::IR_HomeDefSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_HomeDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::HomeDef,IR::HomeDef_var>
+  TAO_Unbounded_Object_Sequence<IR_HomeDef,IR_HomeDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::HomeDefSeq::HomeDefSeq (CORBA::ULong max, CORBA::ULong length, IR::HomeDef_ptr *buffer, CORBA::Boolean release)
+IR_HomeDefSeq::IR_HomeDefSeq (CORBA::ULong max, CORBA::ULong length, IR_HomeDef_ptr *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_HomeDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::HomeDef,IR::HomeDef_var>
+  TAO_Unbounded_Object_Sequence<IR_HomeDef,IR_HomeDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::HomeDefSeq::HomeDefSeq (const HomeDefSeq &seq) // copy ctor
+IR_HomeDefSeq::IR_HomeDefSeq (const IR_HomeDefSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_HomeDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::HomeDef,IR::HomeDef_var>
+  TAO_Unbounded_Object_Sequence<IR_HomeDef,IR_HomeDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::HomeDefSeq::~HomeDefSeq (void) // dtor
+IR_HomeDefSeq::~IR_HomeDefSeq (void) // dtor
 {}
-void IR::HomeDefSeq::_tao_any_destructor (void *x)
+void IR_HomeDefSeq::_tao_any_destructor (void *x)
 {
-  HomeDefSeq *tmp = ACE_static_cast (HomeDefSeq*,x);
+  IR_HomeDefSeq *tmp = ACE_static_cast (IR_HomeDefSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_HomeDefSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   30, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f48), ACE_NTOHL (0x6f6d6544), ACE_NTOHL (0x65665365), ACE_NTOHL (0x713a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/HomeDefSeq:1.0
-  11, ACE_NTOHL (0x486f6d65), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65710000),  // name = HomeDefSeq
+  11, ACE_NTOHL (0x486f6d65), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65710000),  // name = IR_HomeDefSeq
   CORBA::tk_sequence, // typecode kind
   64, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
@@ -4617,12 +4440,12 @@
     48, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f48), ACE_NTOHL (0x6f6d6544), ACE_NTOHL (0x65663a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/HomeDef:1.0
-      8, ACE_NTOHL (0x486f6d65), ACE_NTOHL (0x44656600),  // name = HomeDef
+      8, ACE_NTOHL (0x486f6d65), ACE_NTOHL (0x44656600),  // name = IR_HomeDef
 
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_HomeDefSeq (CORBA::tk_alias, sizeof (_oc_IR_HomeDefSeq), (char *) &_oc_IR_HomeDefSeq, 0, sizeof (IR::HomeDefSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_HomeDefSeq (CORBA::tk_alias, sizeof (_oc_IR_HomeDefSeq), (char *) &_oc_IR_HomeDefSeq, 0, sizeof (IR_HomeDefSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_HomeDefSeq, &_tc_TAO_tc_IR_HomeDefSeq)
@@ -4630,22 +4453,19 @@
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_EMITSDEFSEQ_CS_)
-#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_EMITSDEFSEQ_CS_
-
   // The Base_Sequence functions, please see tao/Sequence.h
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::EmitsDef **tmp = 0;
+    IR_EmitsDef **tmp = 0;
     tmp = _TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::EmitsDef **old = ACE_reinterpret_cast (IR::EmitsDef**, this->buffer_);
+      IR_EmitsDef **old = ACE_reinterpret_cast (IR_EmitsDef**, this->buffer_);
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         if (!this->release_)
-          tmp[i] = IR::EmitsDef::_duplicate (old[i]);
+          tmp[i] = IR_EmitsDef::_duplicate (old[i]);
         else
           tmp[i] = old[i];
         
@@ -4657,111 +4477,102 @@
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
-    IR::EmitsDef **tmp = ACE_reinterpret_cast (IR::EmitsDef**, this->buffer_);
+    IR_EmitsDef **tmp = ACE_reinterpret_cast (IR_EmitsDef**, this->buffer_);
     for (CORBA::ULong i = 0; i < this->length_; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::EmitsDef::_nil ();
+      tmp[i] = IR_EmitsDef::_nil ();
     }
     _TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq::freebuf (tmp);
     this->buffer_ = 0;
   }
   
-  IR::_TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq::~_TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq (void)
+  _TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq::~_TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq (void)
   {
     this->_deallocate_buffer ();
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
+  _TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
   {
-    IR::EmitsDef **tmp = ACE_reinterpret_cast (IR::EmitsDef**, this->buffer_);
+    IR_EmitsDef **tmp = ACE_reinterpret_cast (IR_EmitsDef**, this->buffer_);
     
     for (CORBA::ULong i = nl; i < ol; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::EmitsDef::_nil ();
+      tmp[i] = IR_EmitsDef::_nil ();
     }
   }
   void 
-  IR::_TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq::_downcast (
+  _TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq::_downcast (
       void* target,
       CORBA_Object *src,
       CORBA_Environment &ACE_TRY_ENV
     )
   {
-    IR::EmitsDef **tmp = ACE_static_cast (IR::EmitsDef**, target);
-    *tmp = IR::EmitsDef::_narrow (src, ACE_TRY_ENV);
+    IR_EmitsDef **tmp = ACE_static_cast (IR_EmitsDef**, target);
+    *tmp = IR_EmitsDef::_narrow (src, ACE_TRY_ENV);
   }
 
   CORBA_Object*
-  IR::_TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq::_upcast (void *src) const
+  _TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq::_upcast (void *src) const
   {
-    IR::EmitsDef **tmp = ACE_static_cast (IR::EmitsDef**, src);
+    IR_EmitsDef **tmp = ACE_static_cast (IR_EmitsDef**, src);
     return *tmp;
   }
   
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_EMITSDEFSEQ_CS_)
-#define _IR_EMITSDEFSEQ_CS_
-
 // *************************************************************
-// IR::EmitsDefSeq
+// IR_EmitsDefSeq
 // *************************************************************
 
-IR::EmitsDefSeq::EmitsDefSeq (void)
+IR_EmitsDefSeq::IR_EmitsDefSeq (void)
 {}
-IR::EmitsDefSeq::EmitsDefSeq (CORBA::ULong max) // uses max size
+IR_EmitsDefSeq::IR_EmitsDefSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::EmitsDef,IR::EmitsDef_var>
+  TAO_Unbounded_Object_Sequence<IR_EmitsDef,IR_EmitsDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::EmitsDefSeq::EmitsDefSeq (CORBA::ULong max, CORBA::ULong length, IR::EmitsDef_ptr *buffer, CORBA::Boolean release)
+IR_EmitsDefSeq::IR_EmitsDefSeq (CORBA::ULong max, CORBA::ULong length, IR_EmitsDef_ptr *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::EmitsDef,IR::EmitsDef_var>
+  TAO_Unbounded_Object_Sequence<IR_EmitsDef,IR_EmitsDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::EmitsDefSeq::EmitsDefSeq (const EmitsDefSeq &seq) // copy ctor
+IR_EmitsDefSeq::IR_EmitsDefSeq (const IR_EmitsDefSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_EmitsDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::EmitsDef,IR::EmitsDef_var>
+  TAO_Unbounded_Object_Sequence<IR_EmitsDef,IR_EmitsDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::EmitsDefSeq::~EmitsDefSeq (void) // dtor
+IR_EmitsDefSeq::~IR_EmitsDefSeq (void) // dtor
 {}
-void IR::EmitsDefSeq::_tao_any_destructor (void *x)
+void IR_EmitsDefSeq::_tao_any_destructor (void *x)
 {
-  EmitsDefSeq *tmp = ACE_static_cast (EmitsDefSeq*,x);
+  IR_EmitsDefSeq *tmp = ACE_static_cast (IR_EmitsDefSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_EmitsDefSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   31, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f45), ACE_NTOHL (0x6d697473), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65713a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/EmitsDefSeq:1.0
-  12, ACE_NTOHL (0x456d6974), ACE_NTOHL (0x73446566), ACE_NTOHL (0x53657100),  // name = EmitsDefSeq
+  12, ACE_NTOHL (0x456d6974), ACE_NTOHL (0x73446566), ACE_NTOHL (0x53657100),  // name = IR_EmitsDefSeq
   CORBA::tk_sequence, // typecode kind
   68, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
@@ -4769,12 +4580,12 @@
     52, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       28, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f45), ACE_NTOHL (0x6d697473), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/EmitsDef:1.0
-      9, ACE_NTOHL (0x456d6974), ACE_NTOHL (0x73446566), ACE_NTOHL (0x0),  // name = EmitsDef
+      9, ACE_NTOHL (0x456d6974), ACE_NTOHL (0x73446566), ACE_NTOHL (0x0),  // name = IR_EmitsDef
 
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_EmitsDefSeq (CORBA::tk_alias, sizeof (_oc_IR_EmitsDefSeq), (char *) &_oc_IR_EmitsDefSeq, 0, sizeof (IR::EmitsDefSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_EmitsDefSeq (CORBA::tk_alias, sizeof (_oc_IR_EmitsDefSeq), (char *) &_oc_IR_EmitsDefSeq, 0, sizeof (IR_EmitsDefSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_EmitsDefSeq, &_tc_TAO_tc_IR_EmitsDefSeq)
@@ -4782,22 +4593,19 @@
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_PUBLISHESDEFSEQ_CS_)
-#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_PUBLISHESDEFSEQ_CS_
-
   // The Base_Sequence functions, please see tao/Sequence.h
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::PublishesDef **tmp = 0;
+    IR_PublishesDef **tmp = 0;
     tmp = _TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::PublishesDef **old = ACE_reinterpret_cast (IR::PublishesDef**, this->buffer_);
+      IR_PublishesDef **old = ACE_reinterpret_cast (IR_PublishesDef**, this->buffer_);
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         if (!this->release_)
-          tmp[i] = IR::PublishesDef::_duplicate (old[i]);
+          tmp[i] = IR_PublishesDef::_duplicate (old[i]);
         else
           tmp[i] = old[i];
         
@@ -4809,111 +4617,102 @@
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
-    IR::PublishesDef **tmp = ACE_reinterpret_cast (IR::PublishesDef**, this->buffer_);
+    IR_PublishesDef **tmp = ACE_reinterpret_cast (IR_PublishesDef**, this->buffer_);
     for (CORBA::ULong i = 0; i < this->length_; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::PublishesDef::_nil ();
+      tmp[i] = IR_PublishesDef::_nil ();
     }
     _TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq::freebuf (tmp);
     this->buffer_ = 0;
   }
   
-  IR::_TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq::~_TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq (void)
+  _TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq::~_TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq (void)
   {
     this->_deallocate_buffer ();
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
+  _TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
   {
-    IR::PublishesDef **tmp = ACE_reinterpret_cast (IR::PublishesDef**, this->buffer_);
+    IR_PublishesDef **tmp = ACE_reinterpret_cast (IR_PublishesDef**, this->buffer_);
     
     for (CORBA::ULong i = nl; i < ol; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::PublishesDef::_nil ();
+      tmp[i] = IR_PublishesDef::_nil ();
     }
   }
   void 
-  IR::_TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq::_downcast (
+  _TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq::_downcast (
       void* target,
       CORBA_Object *src,
       CORBA_Environment &ACE_TRY_ENV
     )
   {
-    IR::PublishesDef **tmp = ACE_static_cast (IR::PublishesDef**, target);
-    *tmp = IR::PublishesDef::_narrow (src, ACE_TRY_ENV);
+    IR_PublishesDef **tmp = ACE_static_cast (IR_PublishesDef**, target);
+    *tmp = IR_PublishesDef::_narrow (src, ACE_TRY_ENV);
   }
 
   CORBA_Object*
-  IR::_TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq::_upcast (void *src) const
+  _TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq::_upcast (void *src) const
   {
-    IR::PublishesDef **tmp = ACE_static_cast (IR::PublishesDef**, src);
+    IR_PublishesDef **tmp = ACE_static_cast (IR_PublishesDef**, src);
     return *tmp;
   }
   
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_PUBLISHESDEFSEQ_CS_)
-#define _IR_PUBLISHESDEFSEQ_CS_
-
 // *************************************************************
-// IR::PublishesDefSeq
+// IR_PublishesDefSeq
 // *************************************************************
 
-IR::PublishesDefSeq::PublishesDefSeq (void)
+IR_PublishesDefSeq::IR_PublishesDefSeq (void)
 {}
-IR::PublishesDefSeq::PublishesDefSeq (CORBA::ULong max) // uses max size
+IR_PublishesDefSeq::IR_PublishesDefSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::PublishesDef,IR::PublishesDef_var>
+  TAO_Unbounded_Object_Sequence<IR_PublishesDef,IR_PublishesDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::PublishesDefSeq::PublishesDefSeq (CORBA::ULong max, CORBA::ULong length, IR::PublishesDef_ptr *buffer, CORBA::Boolean release)
+IR_PublishesDefSeq::IR_PublishesDefSeq (CORBA::ULong max, CORBA::ULong length, IR_PublishesDef_ptr *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::PublishesDef,IR::PublishesDef_var>
+  TAO_Unbounded_Object_Sequence<IR_PublishesDef,IR_PublishesDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::PublishesDefSeq::PublishesDefSeq (const PublishesDefSeq &seq) // copy ctor
+IR_PublishesDefSeq::IR_PublishesDefSeq (const IR_PublishesDefSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_PublishesDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::PublishesDef,IR::PublishesDef_var>
+  TAO_Unbounded_Object_Sequence<IR_PublishesDef,IR_PublishesDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::PublishesDefSeq::~PublishesDefSeq (void) // dtor
+IR_PublishesDefSeq::~IR_PublishesDefSeq (void) // dtor
 {}
-void IR::PublishesDefSeq::_tao_any_destructor (void *x)
+void IR_PublishesDefSeq::_tao_any_destructor (void *x)
 {
-  PublishesDefSeq *tmp = ACE_static_cast (PublishesDefSeq*,x);
+  IR_PublishesDefSeq *tmp = ACE_static_cast (IR_PublishesDefSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_PublishesDefSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   35, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f50), ACE_NTOHL (0x75626c69), ACE_NTOHL (0x73686573), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65713a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/PublishesDefSeq:1.0
-  16, ACE_NTOHL (0x5075626c), ACE_NTOHL (0x69736865), ACE_NTOHL (0x73446566), ACE_NTOHL (0x53657100),  // name = PublishesDefSeq
+  16, ACE_NTOHL (0x5075626c), ACE_NTOHL (0x69736865), ACE_NTOHL (0x73446566), ACE_NTOHL (0x53657100),  // name = IR_PublishesDefSeq
   CORBA::tk_sequence, // typecode kind
   76, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
@@ -4921,12 +4720,12 @@
     60, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f50), ACE_NTOHL (0x75626c69), ACE_NTOHL (0x73686573), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/PublishesDef:1.0
-      13, ACE_NTOHL (0x5075626c), ACE_NTOHL (0x69736865), ACE_NTOHL (0x73446566), ACE_NTOHL (0x0),  // name = PublishesDef
+      13, ACE_NTOHL (0x5075626c), ACE_NTOHL (0x69736865), ACE_NTOHL (0x73446566), ACE_NTOHL (0x0),  // name = IR_PublishesDef
 
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_PublishesDefSeq (CORBA::tk_alias, sizeof (_oc_IR_PublishesDefSeq), (char *) &_oc_IR_PublishesDefSeq, 0, sizeof (IR::PublishesDefSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_PublishesDefSeq (CORBA::tk_alias, sizeof (_oc_IR_PublishesDefSeq), (char *) &_oc_IR_PublishesDefSeq, 0, sizeof (IR_PublishesDefSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_PublishesDefSeq, &_tc_TAO_tc_IR_PublishesDefSeq)
@@ -4934,22 +4733,19 @@
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_CONSUMESDEFSEQ_CS_)
-#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_CONSUMESDEFSEQ_CS_
-
   // The Base_Sequence functions, please see tao/Sequence.h
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::ConsumesDef **tmp = 0;
+    IR_ConsumesDef **tmp = 0;
     tmp = _TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::ConsumesDef **old = ACE_reinterpret_cast (IR::ConsumesDef**, this->buffer_);
+      IR_ConsumesDef **old = ACE_reinterpret_cast (IR_ConsumesDef**, this->buffer_);
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         if (!this->release_)
-          tmp[i] = IR::ConsumesDef::_duplicate (old[i]);
+          tmp[i] = IR_ConsumesDef::_duplicate (old[i]);
         else
           tmp[i] = old[i];
         
@@ -4961,111 +4757,102 @@
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
-    IR::ConsumesDef **tmp = ACE_reinterpret_cast (IR::ConsumesDef**, this->buffer_);
+    IR_ConsumesDef **tmp = ACE_reinterpret_cast (IR_ConsumesDef**, this->buffer_);
     for (CORBA::ULong i = 0; i < this->length_; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::ConsumesDef::_nil ();
+      tmp[i] = IR_ConsumesDef::_nil ();
     }
     _TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq::freebuf (tmp);
     this->buffer_ = 0;
   }
   
-  IR::_TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq::~_TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq (void)
+  _TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq::~_TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq (void)
   {
     this->_deallocate_buffer ();
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
+  _TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
   {
-    IR::ConsumesDef **tmp = ACE_reinterpret_cast (IR::ConsumesDef**, this->buffer_);
+    IR_ConsumesDef **tmp = ACE_reinterpret_cast (IR_ConsumesDef**, this->buffer_);
     
     for (CORBA::ULong i = nl; i < ol; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::ConsumesDef::_nil ();
+      tmp[i] = IR_ConsumesDef::_nil ();
     }
   }
   void 
-  IR::_TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq::_downcast (
+  _TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq::_downcast (
       void* target,
       CORBA_Object *src,
       CORBA_Environment &ACE_TRY_ENV
     )
   {
-    IR::ConsumesDef **tmp = ACE_static_cast (IR::ConsumesDef**, target);
-    *tmp = IR::ConsumesDef::_narrow (src, ACE_TRY_ENV);
+    IR_ConsumesDef **tmp = ACE_static_cast (IR_ConsumesDef**, target);
+    *tmp = IR_ConsumesDef::_narrow (src, ACE_TRY_ENV);
   }
 
   CORBA_Object*
-  IR::_TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq::_upcast (void *src) const
+  _TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq::_upcast (void *src) const
   {
-    IR::ConsumesDef **tmp = ACE_static_cast (IR::ConsumesDef**, src);
+    IR_ConsumesDef **tmp = ACE_static_cast (IR_ConsumesDef**, src);
     return *tmp;
   }
   
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_CONSUMESDEFSEQ_CS_)
-#define _IR_CONSUMESDEFSEQ_CS_
-
 // *************************************************************
-// IR::ConsumesDefSeq
+// IR_ConsumesDefSeq
 // *************************************************************
 
-IR::ConsumesDefSeq::ConsumesDefSeq (void)
+IR_ConsumesDefSeq::IR_ConsumesDefSeq (void)
 {}
-IR::ConsumesDefSeq::ConsumesDefSeq (CORBA::ULong max) // uses max size
+IR_ConsumesDefSeq::IR_ConsumesDefSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::ConsumesDef,IR::ConsumesDef_var>
+  TAO_Unbounded_Object_Sequence<IR_ConsumesDef,IR_ConsumesDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::ConsumesDefSeq::ConsumesDefSeq (CORBA::ULong max, CORBA::ULong length, IR::ConsumesDef_ptr *buffer, CORBA::Boolean release)
+IR_ConsumesDefSeq::IR_ConsumesDefSeq (CORBA::ULong max, CORBA::ULong length, IR_ConsumesDef_ptr *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::ConsumesDef,IR::ConsumesDef_var>
+  TAO_Unbounded_Object_Sequence<IR_ConsumesDef,IR_ConsumesDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::ConsumesDefSeq::ConsumesDefSeq (const ConsumesDefSeq &seq) // copy ctor
+IR_ConsumesDefSeq::IR_ConsumesDefSeq (const IR_ConsumesDefSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_ConsumesDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::ConsumesDef,IR::ConsumesDef_var>
+  TAO_Unbounded_Object_Sequence<IR_ConsumesDef,IR_ConsumesDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::ConsumesDefSeq::~ConsumesDefSeq (void) // dtor
+IR_ConsumesDefSeq::~IR_ConsumesDefSeq (void) // dtor
 {}
-void IR::ConsumesDefSeq::_tao_any_destructor (void *x)
+void IR_ConsumesDefSeq::_tao_any_destructor (void *x)
 {
-  ConsumesDefSeq *tmp = ACE_static_cast (ConsumesDefSeq*,x);
+  IR_ConsumesDefSeq *tmp = ACE_static_cast (IR_ConsumesDefSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_ConsumesDefSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   34, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f43), ACE_NTOHL (0x6f6e7375), ACE_NTOHL (0x6d657344), ACE_NTOHL (0x65665365), ACE_NTOHL (0x713a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/ConsumesDefSeq:1.0
-  15, ACE_NTOHL (0x436f6e73), ACE_NTOHL (0x756d6573), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65710000),  // name = ConsumesDefSeq
+  15, ACE_NTOHL (0x436f6e73), ACE_NTOHL (0x756d6573), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65710000),  // name = IR_ConsumesDefSeq
   CORBA::tk_sequence, // typecode kind
   72, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
@@ -5073,12 +4860,12 @@
     56, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       31, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f43), ACE_NTOHL (0x6f6e7375), ACE_NTOHL (0x6d657344), ACE_NTOHL (0x65663a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/ConsumesDef:1.0
-      12, ACE_NTOHL (0x436f6e73), ACE_NTOHL (0x756d6573), ACE_NTOHL (0x44656600),  // name = ConsumesDef
+      12, ACE_NTOHL (0x436f6e73), ACE_NTOHL (0x756d6573), ACE_NTOHL (0x44656600),  // name = IR_ConsumesDef
 
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ConsumesDefSeq (CORBA::tk_alias, sizeof (_oc_IR_ConsumesDefSeq), (char *) &_oc_IR_ConsumesDefSeq, 0, sizeof (IR::ConsumesDefSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_ConsumesDefSeq (CORBA::tk_alias, sizeof (_oc_IR_ConsumesDefSeq), (char *) &_oc_IR_ConsumesDefSeq, 0, sizeof (IR_ConsumesDefSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ConsumesDefSeq, &_tc_TAO_tc_IR_ConsumesDefSeq)
@@ -5086,22 +4873,19 @@
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_FACTORYDEFSEQ_CS_)
-#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_FACTORYDEFSEQ_CS_
-
   // The Base_Sequence functions, please see tao/Sequence.h
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::FactoryDef **tmp = 0;
+    IR_FactoryDef **tmp = 0;
     tmp = _TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::FactoryDef **old = ACE_reinterpret_cast (IR::FactoryDef**, this->buffer_);
+      IR_FactoryDef **old = ACE_reinterpret_cast (IR_FactoryDef**, this->buffer_);
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         if (!this->release_)
-          tmp[i] = IR::FactoryDef::_duplicate (old[i]);
+          tmp[i] = IR_FactoryDef::_duplicate (old[i]);
         else
           tmp[i] = old[i];
         
@@ -5113,111 +4897,102 @@
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
-    IR::FactoryDef **tmp = ACE_reinterpret_cast (IR::FactoryDef**, this->buffer_);
+    IR_FactoryDef **tmp = ACE_reinterpret_cast (IR_FactoryDef**, this->buffer_);
     for (CORBA::ULong i = 0; i < this->length_; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::FactoryDef::_nil ();
+      tmp[i] = IR_FactoryDef::_nil ();
     }
     _TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq::freebuf (tmp);
     this->buffer_ = 0;
   }
   
-  IR::_TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq::~_TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq (void)
+  _TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq::~_TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq (void)
   {
     this->_deallocate_buffer ();
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
+  _TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
   {
-    IR::FactoryDef **tmp = ACE_reinterpret_cast (IR::FactoryDef**, this->buffer_);
+    IR_FactoryDef **tmp = ACE_reinterpret_cast (IR_FactoryDef**, this->buffer_);
     
     for (CORBA::ULong i = nl; i < ol; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::FactoryDef::_nil ();
+      tmp[i] = IR_FactoryDef::_nil ();
     }
   }
   void 
-  IR::_TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq::_downcast (
+  _TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq::_downcast (
       void* target,
       CORBA_Object *src,
       CORBA_Environment &ACE_TRY_ENV
     )
   {
-    IR::FactoryDef **tmp = ACE_static_cast (IR::FactoryDef**, target);
-    *tmp = IR::FactoryDef::_narrow (src, ACE_TRY_ENV);
+    IR_FactoryDef **tmp = ACE_static_cast (IR_FactoryDef**, target);
+    *tmp = IR_FactoryDef::_narrow (src, ACE_TRY_ENV);
   }
 
   CORBA_Object*
-  IR::_TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq::_upcast (void *src) const
+  _TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq::_upcast (void *src) const
   {
-    IR::FactoryDef **tmp = ACE_static_cast (IR::FactoryDef**, src);
+    IR_FactoryDef **tmp = ACE_static_cast (IR_FactoryDef**, src);
     return *tmp;
   }
   
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_FACTORYDEFSEQ_CS_)
-#define _IR_FACTORYDEFSEQ_CS_
-
 // *************************************************************
-// IR::FactoryDefSeq
+// IR_FactoryDefSeq
 // *************************************************************
 
-IR::FactoryDefSeq::FactoryDefSeq (void)
+IR_FactoryDefSeq::IR_FactoryDefSeq (void)
 {}
-IR::FactoryDefSeq::FactoryDefSeq (CORBA::ULong max) // uses max size
+IR_FactoryDefSeq::IR_FactoryDefSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::FactoryDef,IR::FactoryDef_var>
+  TAO_Unbounded_Object_Sequence<IR_FactoryDef,IR_FactoryDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::FactoryDefSeq::FactoryDefSeq (CORBA::ULong max, CORBA::ULong length, IR::FactoryDef_ptr *buffer, CORBA::Boolean release)
+IR_FactoryDefSeq::IR_FactoryDefSeq (CORBA::ULong max, CORBA::ULong length, IR_FactoryDef_ptr *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::FactoryDef,IR::FactoryDef_var>
+  TAO_Unbounded_Object_Sequence<IR_FactoryDef,IR_FactoryDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::FactoryDefSeq::FactoryDefSeq (const FactoryDefSeq &seq) // copy ctor
+IR_FactoryDefSeq::IR_FactoryDefSeq (const IR_FactoryDefSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_FactoryDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::FactoryDef,IR::FactoryDef_var>
+  TAO_Unbounded_Object_Sequence<IR_FactoryDef,IR_FactoryDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::FactoryDefSeq::~FactoryDefSeq (void) // dtor
+IR_FactoryDefSeq::~IR_FactoryDefSeq (void) // dtor
 {}
-void IR::FactoryDefSeq::_tao_any_destructor (void *x)
+void IR_FactoryDefSeq::_tao_any_destructor (void *x)
 {
-  FactoryDefSeq *tmp = ACE_static_cast (FactoryDefSeq*,x);
+  IR_FactoryDefSeq *tmp = ACE_static_cast (IR_FactoryDefSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_FactoryDefSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   33, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f46), ACE_NTOHL (0x6163746f), ACE_NTOHL (0x72794465), ACE_NTOHL (0x66536571), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IR/FactoryDefSeq:1.0
-  14, ACE_NTOHL (0x46616374), ACE_NTOHL (0x6f727944), ACE_NTOHL (0x65665365), ACE_NTOHL (0x71000000),  // name = FactoryDefSeq
+  14, ACE_NTOHL (0x46616374), ACE_NTOHL (0x6f727944), ACE_NTOHL (0x65665365), ACE_NTOHL (0x71000000),  // name = IR_FactoryDefSeq
   CORBA::tk_sequence, // typecode kind
   72, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
@@ -5225,12 +5000,12 @@
     56, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       30, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f46), ACE_NTOHL (0x6163746f), ACE_NTOHL (0x72794465), ACE_NTOHL (0x663a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/FactoryDef:1.0
-      11, ACE_NTOHL (0x46616374), ACE_NTOHL (0x6f727944), ACE_NTOHL (0x65660000),  // name = FactoryDef
+      11, ACE_NTOHL (0x46616374), ACE_NTOHL (0x6f727944), ACE_NTOHL (0x65660000),  // name = IR_FactoryDef
 
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_FactoryDefSeq (CORBA::tk_alias, sizeof (_oc_IR_FactoryDefSeq), (char *) &_oc_IR_FactoryDefSeq, 0, sizeof (IR::FactoryDefSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_FactoryDefSeq (CORBA::tk_alias, sizeof (_oc_IR_FactoryDefSeq), (char *) &_oc_IR_FactoryDefSeq, 0, sizeof (IR_FactoryDefSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_FactoryDefSeq, &_tc_TAO_tc_IR_FactoryDefSeq)
@@ -5238,22 +5013,19 @@
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_FINDERDEFSEQ_CS_)
-#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_FINDERDEFSEQ_CS_
-
   // The Base_Sequence functions, please see tao/Sequence.h
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_FinderDefSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Object_Sequence_IR_FinderDefSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::FinderDef **tmp = 0;
+    IR_FinderDef **tmp = 0;
     tmp = _TAO_Unbounded_Object_Sequence_IR_FinderDefSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::FinderDef **old = ACE_reinterpret_cast (IR::FinderDef**, this->buffer_);
+      IR_FinderDef **old = ACE_reinterpret_cast (IR_FinderDef**, this->buffer_);
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         if (!this->release_)
-          tmp[i] = IR::FinderDef::_duplicate (old[i]);
+          tmp[i] = IR_FinderDef::_duplicate (old[i]);
         else
           tmp[i] = old[i];
         
@@ -5265,111 +5037,102 @@
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_FinderDefSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Object_Sequence_IR_FinderDefSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
-    IR::FinderDef **tmp = ACE_reinterpret_cast (IR::FinderDef**, this->buffer_);
+    IR_FinderDef **tmp = ACE_reinterpret_cast (IR_FinderDef**, this->buffer_);
     for (CORBA::ULong i = 0; i < this->length_; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::FinderDef::_nil ();
+      tmp[i] = IR_FinderDef::_nil ();
     }
     _TAO_Unbounded_Object_Sequence_IR_FinderDefSeq::freebuf (tmp);
     this->buffer_ = 0;
   }
   
-  IR::_TAO_Unbounded_Object_Sequence_IR_FinderDefSeq::~_TAO_Unbounded_Object_Sequence_IR_FinderDefSeq (void)
+  _TAO_Unbounded_Object_Sequence_IR_FinderDefSeq::~_TAO_Unbounded_Object_Sequence_IR_FinderDefSeq (void)
   {
     this->_deallocate_buffer ();
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_FinderDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
+  _TAO_Unbounded_Object_Sequence_IR_FinderDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
   {
-    IR::FinderDef **tmp = ACE_reinterpret_cast (IR::FinderDef**, this->buffer_);
+    IR_FinderDef **tmp = ACE_reinterpret_cast (IR_FinderDef**, this->buffer_);
     
     for (CORBA::ULong i = nl; i < ol; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::FinderDef::_nil ();
+      tmp[i] = IR_FinderDef::_nil ();
     }
   }
   void 
-  IR::_TAO_Unbounded_Object_Sequence_IR_FinderDefSeq::_downcast (
+  _TAO_Unbounded_Object_Sequence_IR_FinderDefSeq::_downcast (
       void* target,
       CORBA_Object *src,
       CORBA_Environment &ACE_TRY_ENV
     )
   {
-    IR::FinderDef **tmp = ACE_static_cast (IR::FinderDef**, target);
-    *tmp = IR::FinderDef::_narrow (src, ACE_TRY_ENV);
+    IR_FinderDef **tmp = ACE_static_cast (IR_FinderDef**, target);
+    *tmp = IR_FinderDef::_narrow (src, ACE_TRY_ENV);
   }
 
   CORBA_Object*
-  IR::_TAO_Unbounded_Object_Sequence_IR_FinderDefSeq::_upcast (void *src) const
+  _TAO_Unbounded_Object_Sequence_IR_FinderDefSeq::_upcast (void *src) const
   {
-    IR::FinderDef **tmp = ACE_static_cast (IR::FinderDef**, src);
+    IR_FinderDef **tmp = ACE_static_cast (IR_FinderDef**, src);
     return *tmp;
   }
   
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_FINDERDEFSEQ_CS_)
-#define _IR_FINDERDEFSEQ_CS_
-
 // *************************************************************
-// IR::FinderDefSeq
+// IR_FinderDefSeq
 // *************************************************************
 
-IR::FinderDefSeq::FinderDefSeq (void)
+IR_FinderDefSeq::IR_FinderDefSeq (void)
 {}
-IR::FinderDefSeq::FinderDefSeq (CORBA::ULong max) // uses max size
+IR_FinderDefSeq::IR_FinderDefSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_FinderDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::FinderDef,IR::FinderDef_var>
+  TAO_Unbounded_Object_Sequence<IR_FinderDef,IR_FinderDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::FinderDefSeq::FinderDefSeq (CORBA::ULong max, CORBA::ULong length, IR::FinderDef_ptr *buffer, CORBA::Boolean release)
+IR_FinderDefSeq::IR_FinderDefSeq (CORBA::ULong max, CORBA::ULong length, IR_FinderDef_ptr *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_FinderDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::FinderDef,IR::FinderDef_var>
+  TAO_Unbounded_Object_Sequence<IR_FinderDef,IR_FinderDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::FinderDefSeq::FinderDefSeq (const FinderDefSeq &seq) // copy ctor
+IR_FinderDefSeq::IR_FinderDefSeq (const IR_FinderDefSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_FinderDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::FinderDef,IR::FinderDef_var>
+  TAO_Unbounded_Object_Sequence<IR_FinderDef,IR_FinderDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::FinderDefSeq::~FinderDefSeq (void) // dtor
+IR_FinderDefSeq::~IR_FinderDefSeq (void) // dtor
 {}
-void IR::FinderDefSeq::_tao_any_destructor (void *x)
+void IR_FinderDefSeq::_tao_any_destructor (void *x)
 {
-  FinderDefSeq *tmp = ACE_static_cast (FinderDefSeq*,x);
+  IR_FinderDefSeq *tmp = ACE_static_cast (IR_FinderDefSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_FinderDefSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f46), ACE_NTOHL (0x696e6465), ACE_NTOHL (0x72446566), ACE_NTOHL (0x5365713a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/FinderDefSeq:1.0
-  13, ACE_NTOHL (0x46696e64), ACE_NTOHL (0x65724465), ACE_NTOHL (0x66536571), ACE_NTOHL (0x0),  // name = FinderDefSeq
+  13, ACE_NTOHL (0x46696e64), ACE_NTOHL (0x65724465), ACE_NTOHL (0x66536571), ACE_NTOHL (0x0),  // name = IR_FinderDefSeq
   CORBA::tk_sequence, // typecode kind
   72, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
@@ -5377,12 +5140,12 @@
     56, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       29, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f46), ACE_NTOHL (0x696e6465), ACE_NTOHL (0x72446566), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IR/FinderDef:1.0
-      10, ACE_NTOHL (0x46696e64), ACE_NTOHL (0x65724465), ACE_NTOHL (0x66000000),  // name = FinderDef
+      10, ACE_NTOHL (0x46696e64), ACE_NTOHL (0x65724465), ACE_NTOHL (0x66000000),  // name = IR_FinderDef
 
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_FinderDefSeq (CORBA::tk_alias, sizeof (_oc_IR_FinderDefSeq), (char *) &_oc_IR_FinderDefSeq, 0, sizeof (IR::FinderDefSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_FinderDefSeq (CORBA::tk_alias, sizeof (_oc_IR_FinderDefSeq), (char *) &_oc_IR_FinderDefSeq, 0, sizeof (IR_FinderDefSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_FinderDefSeq, &_tc_TAO_tc_IR_FinderDefSeq)
@@ -5390,22 +5153,19 @@
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_CONTAINEDSEQ_CS_)
-#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_CONTAINEDSEQ_CS_
-
   // The Base_Sequence functions, please see tao/Sequence.h
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_ContainedSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Object_Sequence_IR_ContainedSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::Contained **tmp = 0;
+    IR_Contained **tmp = 0;
     tmp = _TAO_Unbounded_Object_Sequence_IR_ContainedSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::Contained **old = ACE_reinterpret_cast (IR::Contained**, this->buffer_);
+      IR_Contained **old = ACE_reinterpret_cast (IR_Contained**, this->buffer_);
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         if (!this->release_)
-          tmp[i] = IR::Contained::_duplicate (old[i]);
+          tmp[i] = IR_Contained::_duplicate (old[i]);
         else
           tmp[i] = old[i];
         
@@ -5417,111 +5177,102 @@
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_ContainedSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Object_Sequence_IR_ContainedSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
-    IR::Contained **tmp = ACE_reinterpret_cast (IR::Contained**, this->buffer_);
+    IR_Contained **tmp = ACE_reinterpret_cast (IR_Contained**, this->buffer_);
     for (CORBA::ULong i = 0; i < this->length_; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::Contained::_nil ();
+      tmp[i] = IR_Contained::_nil ();
     }
     _TAO_Unbounded_Object_Sequence_IR_ContainedSeq::freebuf (tmp);
     this->buffer_ = 0;
   }
   
-  IR::_TAO_Unbounded_Object_Sequence_IR_ContainedSeq::~_TAO_Unbounded_Object_Sequence_IR_ContainedSeq (void)
+  _TAO_Unbounded_Object_Sequence_IR_ContainedSeq::~_TAO_Unbounded_Object_Sequence_IR_ContainedSeq (void)
   {
     this->_deallocate_buffer ();
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_ContainedSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
+  _TAO_Unbounded_Object_Sequence_IR_ContainedSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
   {
-    IR::Contained **tmp = ACE_reinterpret_cast (IR::Contained**, this->buffer_);
+    IR_Contained **tmp = ACE_reinterpret_cast (IR_Contained**, this->buffer_);
     
     for (CORBA::ULong i = nl; i < ol; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::Contained::_nil ();
+      tmp[i] = IR_Contained::_nil ();
     }
   }
   void 
-  IR::_TAO_Unbounded_Object_Sequence_IR_ContainedSeq::_downcast (
+  _TAO_Unbounded_Object_Sequence_IR_ContainedSeq::_downcast (
       void* target,
       CORBA_Object *src,
       CORBA_Environment &ACE_TRY_ENV
     )
   {
-    IR::Contained **tmp = ACE_static_cast (IR::Contained**, target);
-    *tmp = IR::Contained::_narrow (src, ACE_TRY_ENV);
+    IR_Contained **tmp = ACE_static_cast (IR_Contained**, target);
+    *tmp = IR_Contained::_narrow (src, ACE_TRY_ENV);
   }
 
   CORBA_Object*
-  IR::_TAO_Unbounded_Object_Sequence_IR_ContainedSeq::_upcast (void *src) const
+  _TAO_Unbounded_Object_Sequence_IR_ContainedSeq::_upcast (void *src) const
   {
-    IR::Contained **tmp = ACE_static_cast (IR::Contained**, src);
+    IR_Contained **tmp = ACE_static_cast (IR_Contained**, src);
     return *tmp;
   }
   
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_CONTAINEDSEQ_CS_)
-#define _IR_CONTAINEDSEQ_CS_
-
 // *************************************************************
-// IR::ContainedSeq
+// IR_ContainedSeq
 // *************************************************************
 
-IR::ContainedSeq::ContainedSeq (void)
+IR_ContainedSeq::IR_ContainedSeq (void)
 {}
-IR::ContainedSeq::ContainedSeq (CORBA::ULong max) // uses max size
+IR_ContainedSeq::IR_ContainedSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_ContainedSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::Contained,IR::Contained_var>
+  TAO_Unbounded_Object_Sequence<IR_Contained,IR_Contained_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::ContainedSeq::ContainedSeq (CORBA::ULong max, CORBA::ULong length, IR::Contained_ptr *buffer, CORBA::Boolean release)
+IR_ContainedSeq::IR_ContainedSeq (CORBA::ULong max, CORBA::ULong length, IR_Contained_ptr *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_ContainedSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::Contained,IR::Contained_var>
+  TAO_Unbounded_Object_Sequence<IR_Contained,IR_Contained_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::ContainedSeq::ContainedSeq (const ContainedSeq &seq) // copy ctor
+IR_ContainedSeq::IR_ContainedSeq (const IR_ContainedSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_ContainedSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::Contained,IR::Contained_var>
+  TAO_Unbounded_Object_Sequence<IR_Contained,IR_Contained_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::ContainedSeq::~ContainedSeq (void) // dtor
+IR_ContainedSeq::~IR_ContainedSeq (void) // dtor
 {}
-void IR::ContainedSeq::_tao_any_destructor (void *x)
+void IR_ContainedSeq::_tao_any_destructor (void *x)
 {
-  ContainedSeq *tmp = ACE_static_cast (ContainedSeq*,x);
+  IR_ContainedSeq *tmp = ACE_static_cast (IR_ContainedSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_ContainedSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f43), ACE_NTOHL (0x6f6e7461), ACE_NTOHL (0x696e6564), ACE_NTOHL (0x5365713a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/ContainedSeq:1.0
-  13, ACE_NTOHL (0x436f6e74), ACE_NTOHL (0x61696e65), ACE_NTOHL (0x64536571), ACE_NTOHL (0x0),  // name = ContainedSeq
+  13, ACE_NTOHL (0x436f6e74), ACE_NTOHL (0x61696e65), ACE_NTOHL (0x64536571), ACE_NTOHL (0x0),  // name = IR_ContainedSeq
   CORBA::tk_sequence, // typecode kind
   72, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
@@ -5529,21 +5280,22 @@
     56, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       29, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f43), ACE_NTOHL (0x6f6e7461), ACE_NTOHL (0x696e6564), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IR/Contained:1.0
-      10, ACE_NTOHL (0x436f6e74), ACE_NTOHL (0x61696e65), ACE_NTOHL (0x64000000),  // name = Contained
+      10, ACE_NTOHL (0x436f6e74), ACE_NTOHL (0x61696e65), ACE_NTOHL (0x64000000),  // name = IR_Contained
 
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ContainedSeq (CORBA::tk_alias, sizeof (_oc_IR_ContainedSeq), (char *) &_oc_IR_ContainedSeq, 0, sizeof (IR::ContainedSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_ContainedSeq (CORBA::tk_alias, sizeof (_oc_IR_ContainedSeq), (char *) &_oc_IR_ContainedSeq, 0, sizeof (IR_ContainedSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ContainedSeq, &_tc_TAO_tc_IR_ContainedSeq)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_StructMember[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f53), ACE_NTOHL (0x74727563), ACE_NTOHL (0x744d656d), ACE_NTOHL (0x6265723a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/StructMember:1.0
-  13, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744d65), ACE_NTOHL (0x6d626572), ACE_NTOHL (0x0),  // name = StructMember
+  13, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744d65), ACE_NTOHL (0x6d626572), ACE_NTOHL (0x0),  // name = IR_StructMember
   3, // member count
   5, ACE_NTOHL (0x6e616d65), ACE_NTOHL (0x0),  // name = name
   CORBA::tk_alias, // typecode kind for typedefs
@@ -5562,35 +5314,32 @@
   48, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x444c5479), ACE_NTOHL (0x70653a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/IDLType:1.0
-    8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IDLType
+    8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IR_IDLType
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_StructMember (CORBA::tk_struct, sizeof (_oc_IR_StructMember), (char *) &_oc_IR_StructMember, 0, sizeof (IR::StructMember));
+static CORBA::TypeCode _tc_TAO_tc_IR_StructMember (CORBA::tk_struct, sizeof (_oc_IR_StructMember), (char *) &_oc_IR_StructMember, 0, sizeof (IR_StructMember));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_StructMember, &_tc_TAO_tc_IR_StructMember)
 TAO_NAMESPACE_END
-void IR::StructMember::_tao_any_destructor (void *x)
+
+void IR_StructMember::_tao_any_destructor (void *x)
 {
-  StructMember *tmp = ACE_static_cast (StructMember*,x);
+  IR_StructMember *tmp = ACE_static_cast (IR_StructMember*,x);
   delete tmp;
 }
 
-
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_SEQUENCE_IR_STRUCTMEMBERSEQ_CS_)
-#define __TAO_UNBOUNDED_SEQUENCE_IR_STRUCTMEMBERSEQ_CS_
-
   void
-  IR::_TAO_Unbounded_Sequence_IR_StructMemberSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Sequence_IR_StructMemberSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::StructMember* tmp = 0;
+    IR_StructMember* tmp = 0;
     tmp = _TAO_Unbounded_Sequence_IR_StructMemberSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::StructMember *old = ACE_reinterpret_cast (IR::StructMember *,this->buffer_);
+      IR_StructMember *old = ACE_reinterpret_cast (IR_StructMember *,this->buffer_);
       
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         tmp[i] = old[i];
@@ -5603,80 +5352,70 @@
   }
   
   void
-  IR::_TAO_Unbounded_Sequence_IR_StructMemberSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Sequence_IR_StructMemberSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
     
-    IR::StructMember *tmp = ACE_reinterpret_cast (IR::StructMember *,this->buffer_);
+    IR_StructMember *tmp = ACE_reinterpret_cast (IR_StructMember *,this->buffer_);
     
     _TAO_Unbounded_Sequence_IR_StructMemberSeq::freebuf (tmp);
     this->buffer_ = 0;
   } 
   
-  IR::_TAO_Unbounded_Sequence_IR_StructMemberSeq::~_TAO_Unbounded_Sequence_IR_StructMemberSeq (void) // Dtor.
+  _TAO_Unbounded_Sequence_IR_StructMemberSeq::~_TAO_Unbounded_Sequence_IR_StructMemberSeq (void) // Dtor.
   {
     this->_deallocate_buffer ();
   }
   
-  
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_STRUCTMEMBERSEQ_CS_)
-#define _IR_STRUCTMEMBERSEQ_CS_
-
 // *************************************************************
-// IR::StructMemberSeq
+// IR_StructMemberSeq
 // *************************************************************
 
-IR::StructMemberSeq::StructMemberSeq (void)
+IR_StructMemberSeq::IR_StructMemberSeq (void)
 {}
-IR::StructMemberSeq::StructMemberSeq (CORBA::ULong max) // uses max size
+IR_StructMemberSeq::IR_StructMemberSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_StructMemberSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::StructMember>
+  TAO_Unbounded_Sequence<IR_StructMember>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::StructMemberSeq::StructMemberSeq (CORBA::ULong max, CORBA::ULong length, IR::StructMember *buffer, CORBA::Boolean release)
+IR_StructMemberSeq::IR_StructMemberSeq (CORBA::ULong max, CORBA::ULong length, IR_StructMember *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_StructMemberSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::StructMember>
+  TAO_Unbounded_Sequence<IR_StructMember>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::StructMemberSeq::StructMemberSeq (const StructMemberSeq &seq) // copy ctor
+IR_StructMemberSeq::IR_StructMemberSeq (const IR_StructMemberSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_StructMemberSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::StructMember>
+  TAO_Unbounded_Sequence<IR_StructMember>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::StructMemberSeq::~StructMemberSeq (void) // dtor
+IR_StructMemberSeq::~IR_StructMemberSeq (void) // dtor
 {}
-void IR::StructMemberSeq::_tao_any_destructor (void *x)
+void IR_StructMemberSeq::_tao_any_destructor (void *x)
 {
-  StructMemberSeq *tmp = ACE_static_cast (StructMemberSeq*,x);
+  IR_StructMemberSeq *tmp = ACE_static_cast (IR_StructMemberSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_StructMemberSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   35, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f53), ACE_NTOHL (0x74727563), ACE_NTOHL (0x744d656d), ACE_NTOHL (0x62657253), ACE_NTOHL (0x65713a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/StructMemberSeq:1.0
-  16, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744d65), ACE_NTOHL (0x6d626572), ACE_NTOHL (0x53657100),  // name = StructMemberSeq
+  16, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744d65), ACE_NTOHL (0x6d626572), ACE_NTOHL (0x53657100),  // name = IR_StructMemberSeq
   CORBA::tk_sequence, // typecode kind
   252, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
@@ -5684,7 +5423,7 @@
     236, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f53), ACE_NTOHL (0x74727563), ACE_NTOHL (0x744d656d), ACE_NTOHL (0x6265723a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/StructMember:1.0
-      13, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744d65), ACE_NTOHL (0x6d626572), ACE_NTOHL (0x0),  // name = StructMember
+      13, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744d65), ACE_NTOHL (0x6d626572), ACE_NTOHL (0x0),  // name = IR_StructMember
       3, // member count
       5, ACE_NTOHL (0x6e616d65), ACE_NTOHL (0x0),  // name = name
       CORBA::tk_alias, // typecode kind for typedefs
@@ -5703,29 +5442,30 @@
       48, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x444c5479), ACE_NTOHL (0x70653a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/IDLType:1.0
-        8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IDLType
+        8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IR_IDLType
 
 
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_StructMemberSeq (CORBA::tk_alias, sizeof (_oc_IR_StructMemberSeq), (char *) &_oc_IR_StructMemberSeq, 0, sizeof (IR::StructMemberSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_StructMemberSeq (CORBA::tk_alias, sizeof (_oc_IR_StructMemberSeq), (char *) &_oc_IR_StructMemberSeq, 0, sizeof (IR_StructMemberSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_StructMemberSeq, &_tc_TAO_tc_IR_StructMemberSeq)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_Initializer[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   31, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x6e697469), ACE_NTOHL (0x616c697a), ACE_NTOHL (0x65723a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/Initializer:1.0
-  12, ACE_NTOHL (0x496e6974), ACE_NTOHL (0x69616c69), ACE_NTOHL (0x7a657200),  // name = Initializer
+  12, ACE_NTOHL (0x496e6974), ACE_NTOHL (0x69616c69), ACE_NTOHL (0x7a657200),  // name = IR_Initializer
   2, // member count
   8, ACE_NTOHL (0x6d656d62), ACE_NTOHL (0x65727300),  // name = members
   CORBA::tk_alias, // typecode kind for typedefs
   324, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     35, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f53), ACE_NTOHL (0x74727563), ACE_NTOHL (0x744d656d), ACE_NTOHL (0x62657253), ACE_NTOHL (0x65713a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/StructMemberSeq:1.0
-    16, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744d65), ACE_NTOHL (0x6d626572), ACE_NTOHL (0x53657100),  // name = StructMemberSeq
+    16, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744d65), ACE_NTOHL (0x6d626572), ACE_NTOHL (0x53657100),  // name = IR_StructMemberSeq
     CORBA::tk_sequence, // typecode kind
     252, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
@@ -5733,7 +5473,7 @@
       236, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f53), ACE_NTOHL (0x74727563), ACE_NTOHL (0x744d656d), ACE_NTOHL (0x6265723a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/StructMember:1.0
-        13, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744d65), ACE_NTOHL (0x6d626572), ACE_NTOHL (0x0),  // name = StructMember
+        13, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744d65), ACE_NTOHL (0x6d626572), ACE_NTOHL (0x0),  // name = IR_StructMember
         3, // member count
         5, ACE_NTOHL (0x6e616d65), ACE_NTOHL (0x0),  // name = name
         CORBA::tk_alias, // typecode kind for typedefs
@@ -5752,7 +5492,7 @@
         48, // encapsulation length
           TAO_ENCAP_BYTE_ORDER, // byte order
           27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x444c5479), ACE_NTOHL (0x70653a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/IDLType:1.0
-          8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IDLType
+          8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IR_IDLType
 
 
       0U,
@@ -5768,32 +5508,29 @@
     0U, // string length
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_Initializer (CORBA::tk_struct, sizeof (_oc_IR_Initializer), (char *) &_oc_IR_Initializer, 0, sizeof (IR::Initializer));
+static CORBA::TypeCode _tc_TAO_tc_IR_Initializer (CORBA::tk_struct, sizeof (_oc_IR_Initializer), (char *) &_oc_IR_Initializer, 0, sizeof (IR_Initializer));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_Initializer, &_tc_TAO_tc_IR_Initializer)
 TAO_NAMESPACE_END
-void IR::Initializer::_tao_any_destructor (void *x)
+
+void IR_Initializer::_tao_any_destructor (void *x)
 {
-  Initializer *tmp = ACE_static_cast (Initializer*,x);
+  IR_Initializer *tmp = ACE_static_cast (IR_Initializer*,x);
   delete tmp;
 }
 
-
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_SEQUENCE_IR_INITIALIZERSEQ_CS_)
-#define __TAO_UNBOUNDED_SEQUENCE_IR_INITIALIZERSEQ_CS_
-
   void
-  IR::_TAO_Unbounded_Sequence_IR_InitializerSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Sequence_IR_InitializerSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::Initializer* tmp = 0;
+    IR_Initializer* tmp = 0;
     tmp = _TAO_Unbounded_Sequence_IR_InitializerSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::Initializer *old = ACE_reinterpret_cast (IR::Initializer *,this->buffer_);
+      IR_Initializer *old = ACE_reinterpret_cast (IR_Initializer *,this->buffer_);
       
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         tmp[i] = old[i];
@@ -5806,80 +5543,70 @@
   }
   
   void
-  IR::_TAO_Unbounded_Sequence_IR_InitializerSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Sequence_IR_InitializerSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
     
-    IR::Initializer *tmp = ACE_reinterpret_cast (IR::Initializer *,this->buffer_);
+    IR_Initializer *tmp = ACE_reinterpret_cast (IR_Initializer *,this->buffer_);
     
     _TAO_Unbounded_Sequence_IR_InitializerSeq::freebuf (tmp);
     this->buffer_ = 0;
   } 
   
-  IR::_TAO_Unbounded_Sequence_IR_InitializerSeq::~_TAO_Unbounded_Sequence_IR_InitializerSeq (void) // Dtor.
+  _TAO_Unbounded_Sequence_IR_InitializerSeq::~_TAO_Unbounded_Sequence_IR_InitializerSeq (void) // Dtor.
   {
     this->_deallocate_buffer ();
   }
   
-  
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_INITIALIZERSEQ_CS_)
-#define _IR_INITIALIZERSEQ_CS_
-
 // *************************************************************
-// IR::InitializerSeq
+// IR_InitializerSeq
 // *************************************************************
 
-IR::InitializerSeq::InitializerSeq (void)
+IR_InitializerSeq::IR_InitializerSeq (void)
 {}
-IR::InitializerSeq::InitializerSeq (CORBA::ULong max) // uses max size
+IR_InitializerSeq::IR_InitializerSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_InitializerSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::Initializer>
+  TAO_Unbounded_Sequence<IR_Initializer>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::InitializerSeq::InitializerSeq (CORBA::ULong max, CORBA::ULong length, IR::Initializer *buffer, CORBA::Boolean release)
+IR_InitializerSeq::IR_InitializerSeq (CORBA::ULong max, CORBA::ULong length, IR_Initializer *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_InitializerSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::Initializer>
+  TAO_Unbounded_Sequence<IR_Initializer>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::InitializerSeq::InitializerSeq (const InitializerSeq &seq) // copy ctor
+IR_InitializerSeq::IR_InitializerSeq (const IR_InitializerSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_InitializerSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::Initializer>
+  TAO_Unbounded_Sequence<IR_Initializer>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::InitializerSeq::~InitializerSeq (void) // dtor
+IR_InitializerSeq::~IR_InitializerSeq (void) // dtor
 {}
-void IR::InitializerSeq::_tao_any_destructor (void *x)
+void IR_InitializerSeq::_tao_any_destructor (void *x)
 {
-  InitializerSeq *tmp = ACE_static_cast (InitializerSeq*,x);
+  IR_InitializerSeq *tmp = ACE_static_cast (IR_InitializerSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_InitializerSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   34, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x6e697469), ACE_NTOHL (0x616c697a), ACE_NTOHL (0x65725365), ACE_NTOHL (0x713a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/InitializerSeq:1.0
-  15, ACE_NTOHL (0x496e6974), ACE_NTOHL (0x69616c69), ACE_NTOHL (0x7a657253), ACE_NTOHL (0x65710000),  // name = InitializerSeq
+  15, ACE_NTOHL (0x496e6974), ACE_NTOHL (0x69616c69), ACE_NTOHL (0x7a657253), ACE_NTOHL (0x65710000),  // name = IR_InitializerSeq
   CORBA::tk_sequence, // typecode kind
   504, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
@@ -5887,14 +5614,14 @@
     488, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       31, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x6e697469), ACE_NTOHL (0x616c697a), ACE_NTOHL (0x65723a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/Initializer:1.0
-      12, ACE_NTOHL (0x496e6974), ACE_NTOHL (0x69616c69), ACE_NTOHL (0x7a657200),  // name = Initializer
+      12, ACE_NTOHL (0x496e6974), ACE_NTOHL (0x69616c69), ACE_NTOHL (0x7a657200),  // name = IR_Initializer
       2, // member count
       8, ACE_NTOHL (0x6d656d62), ACE_NTOHL (0x65727300),  // name = members
       CORBA::tk_alias, // typecode kind for typedefs
       324, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         35, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f53), ACE_NTOHL (0x74727563), ACE_NTOHL (0x744d656d), ACE_NTOHL (0x62657253), ACE_NTOHL (0x65713a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/StructMemberSeq:1.0
-        16, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744d65), ACE_NTOHL (0x6d626572), ACE_NTOHL (0x53657100),  // name = StructMemberSeq
+        16, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744d65), ACE_NTOHL (0x6d626572), ACE_NTOHL (0x53657100),  // name = IR_StructMemberSeq
         CORBA::tk_sequence, // typecode kind
         252, // encapsulation length
           TAO_ENCAP_BYTE_ORDER, // byte order
@@ -5902,7 +5629,7 @@
           236, // encapsulation length
             TAO_ENCAP_BYTE_ORDER, // byte order
             32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f53), ACE_NTOHL (0x74727563), ACE_NTOHL (0x744d656d), ACE_NTOHL (0x6265723a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/StructMember:1.0
-            13, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744d65), ACE_NTOHL (0x6d626572), ACE_NTOHL (0x0),  // name = StructMember
+            13, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744d65), ACE_NTOHL (0x6d626572), ACE_NTOHL (0x0),  // name = IR_StructMember
             3, // member count
             5, ACE_NTOHL (0x6e616d65), ACE_NTOHL (0x0),  // name = name
             CORBA::tk_alias, // typecode kind for typedefs
@@ -5921,7 +5648,7 @@
             48, // encapsulation length
               TAO_ENCAP_BYTE_ORDER, // byte order
               27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x444c5479), ACE_NTOHL (0x70653a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/IDLType:1.0
-              8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IDLType
+              8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IR_IDLType
 
 
           0U,
@@ -5940,16 +5667,17 @@
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_InitializerSeq (CORBA::tk_alias, sizeof (_oc_IR_InitializerSeq), (char *) &_oc_IR_InitializerSeq, 0, sizeof (IR::InitializerSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_InitializerSeq (CORBA::tk_alias, sizeof (_oc_IR_InitializerSeq), (char *) &_oc_IR_InitializerSeq, 0, sizeof (IR_InitializerSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_InitializerSeq, &_tc_TAO_tc_IR_InitializerSeq)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_UnionMember[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   31, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f55), ACE_NTOHL (0x6e696f6e), ACE_NTOHL (0x4d656d62), ACE_NTOHL (0x65723a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/UnionMember:1.0
-  12, ACE_NTOHL (0x556e696f), ACE_NTOHL (0x6e4d656d), ACE_NTOHL (0x62657200),  // name = UnionMember
+  12, ACE_NTOHL (0x556e696f), ACE_NTOHL (0x6e4d656d), ACE_NTOHL (0x62657200),  // name = IR_UnionMember
   4, // member count
   5, ACE_NTOHL (0x6e616d65), ACE_NTOHL (0x0),  // name = name
   CORBA::tk_alias, // typecode kind for typedefs
@@ -5971,35 +5699,32 @@
   48, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x444c5479), ACE_NTOHL (0x70653a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/IDLType:1.0
-    8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IDLType
+    8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IR_IDLType
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_UnionMember (CORBA::tk_struct, sizeof (_oc_IR_UnionMember), (char *) &_oc_IR_UnionMember, 0, sizeof (IR::UnionMember));
+static CORBA::TypeCode _tc_TAO_tc_IR_UnionMember (CORBA::tk_struct, sizeof (_oc_IR_UnionMember), (char *) &_oc_IR_UnionMember, 0, sizeof (IR_UnionMember));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_UnionMember, &_tc_TAO_tc_IR_UnionMember)
 TAO_NAMESPACE_END
-void IR::UnionMember::_tao_any_destructor (void *x)
+
+void IR_UnionMember::_tao_any_destructor (void *x)
 {
-  UnionMember *tmp = ACE_static_cast (UnionMember*,x);
+  IR_UnionMember *tmp = ACE_static_cast (IR_UnionMember*,x);
   delete tmp;
 }
 
-
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_SEQUENCE_IR_UNIONMEMBERSEQ_CS_)
-#define __TAO_UNBOUNDED_SEQUENCE_IR_UNIONMEMBERSEQ_CS_
-
   void
-  IR::_TAO_Unbounded_Sequence_IR_UnionMemberSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Sequence_IR_UnionMemberSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::UnionMember* tmp = 0;
+    IR_UnionMember* tmp = 0;
     tmp = _TAO_Unbounded_Sequence_IR_UnionMemberSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::UnionMember *old = ACE_reinterpret_cast (IR::UnionMember *,this->buffer_);
+      IR_UnionMember *old = ACE_reinterpret_cast (IR_UnionMember *,this->buffer_);
       
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         tmp[i] = old[i];
@@ -6012,80 +5737,70 @@
   }
   
   void
-  IR::_TAO_Unbounded_Sequence_IR_UnionMemberSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Sequence_IR_UnionMemberSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
     
-    IR::UnionMember *tmp = ACE_reinterpret_cast (IR::UnionMember *,this->buffer_);
+    IR_UnionMember *tmp = ACE_reinterpret_cast (IR_UnionMember *,this->buffer_);
     
     _TAO_Unbounded_Sequence_IR_UnionMemberSeq::freebuf (tmp);
     this->buffer_ = 0;
   } 
   
-  IR::_TAO_Unbounded_Sequence_IR_UnionMemberSeq::~_TAO_Unbounded_Sequence_IR_UnionMemberSeq (void) // Dtor.
+  _TAO_Unbounded_Sequence_IR_UnionMemberSeq::~_TAO_Unbounded_Sequence_IR_UnionMemberSeq (void) // Dtor.
   {
     this->_deallocate_buffer ();
   }
   
-  
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_UNIONMEMBERSEQ_CS_)
-#define _IR_UNIONMEMBERSEQ_CS_
-
 // *************************************************************
-// IR::UnionMemberSeq
+// IR_UnionMemberSeq
 // *************************************************************
 
-IR::UnionMemberSeq::UnionMemberSeq (void)
+IR_UnionMemberSeq::IR_UnionMemberSeq (void)
 {}
-IR::UnionMemberSeq::UnionMemberSeq (CORBA::ULong max) // uses max size
+IR_UnionMemberSeq::IR_UnionMemberSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_UnionMemberSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::UnionMember>
+  TAO_Unbounded_Sequence<IR_UnionMember>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::UnionMemberSeq::UnionMemberSeq (CORBA::ULong max, CORBA::ULong length, IR::UnionMember *buffer, CORBA::Boolean release)
+IR_UnionMemberSeq::IR_UnionMemberSeq (CORBA::ULong max, CORBA::ULong length, IR_UnionMember *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_UnionMemberSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::UnionMember>
+  TAO_Unbounded_Sequence<IR_UnionMember>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::UnionMemberSeq::UnionMemberSeq (const UnionMemberSeq &seq) // copy ctor
+IR_UnionMemberSeq::IR_UnionMemberSeq (const IR_UnionMemberSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_UnionMemberSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::UnionMember>
+  TAO_Unbounded_Sequence<IR_UnionMember>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::UnionMemberSeq::~UnionMemberSeq (void) // dtor
+IR_UnionMemberSeq::~IR_UnionMemberSeq (void) // dtor
 {}
-void IR::UnionMemberSeq::_tao_any_destructor (void *x)
+void IR_UnionMemberSeq::_tao_any_destructor (void *x)
 {
-  UnionMemberSeq *tmp = ACE_static_cast (UnionMemberSeq*,x);
+  IR_UnionMemberSeq *tmp = ACE_static_cast (IR_UnionMemberSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_UnionMemberSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   34, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f55), ACE_NTOHL (0x6e696f6e), ACE_NTOHL (0x4d656d62), ACE_NTOHL (0x65725365), ACE_NTOHL (0x713a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/UnionMemberSeq:1.0
-  15, ACE_NTOHL (0x556e696f), ACE_NTOHL (0x6e4d656d), ACE_NTOHL (0x62657253), ACE_NTOHL (0x65710000),  // name = UnionMemberSeq
+  15, ACE_NTOHL (0x556e696f), ACE_NTOHL (0x6e4d656d), ACE_NTOHL (0x62657253), ACE_NTOHL (0x65710000),  // name = IR_UnionMemberSeq
   CORBA::tk_sequence, // typecode kind
   264, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
@@ -6093,7 +5808,7 @@
     248, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       31, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f55), ACE_NTOHL (0x6e696f6e), ACE_NTOHL (0x4d656d62), ACE_NTOHL (0x65723a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/UnionMember:1.0
-      12, ACE_NTOHL (0x556e696f), ACE_NTOHL (0x6e4d656d), ACE_NTOHL (0x62657200),  // name = UnionMember
+      12, ACE_NTOHL (0x556e696f), ACE_NTOHL (0x6e4d656d), ACE_NTOHL (0x62657200),  // name = IR_UnionMember
       4, // member count
       5, ACE_NTOHL (0x6e616d65), ACE_NTOHL (0x0),  // name = name
       CORBA::tk_alias, // typecode kind for typedefs
@@ -6115,28 +5830,25 @@
       48, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x444c5479), ACE_NTOHL (0x70653a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/IDLType:1.0
-        8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IDLType
+        8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IR_IDLType
 
 
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_UnionMemberSeq (CORBA::tk_alias, sizeof (_oc_IR_UnionMemberSeq), (char *) &_oc_IR_UnionMemberSeq, 0, sizeof (IR::UnionMemberSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_UnionMemberSeq (CORBA::tk_alias, sizeof (_oc_IR_UnionMemberSeq), (char *) &_oc_IR_UnionMemberSeq, 0, sizeof (IR_UnionMemberSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_UnionMemberSeq, &_tc_TAO_tc_IR_UnionMemberSeq)
 TAO_NAMESPACE_END
 
-#if !defined (_IR_ENUMMEMBERSEQ_CS_)
-#define _IR_ENUMMEMBERSEQ_CS_
-
 // *************************************************************
-// IR::EnumMemberSeq
+// IR_EnumMemberSeq
 // *************************************************************
 
-IR::EnumMemberSeq::EnumMemberSeq (void)
+IR_EnumMemberSeq::IR_EnumMemberSeq (void)
 {}
-IR::EnumMemberSeq::EnumMemberSeq (CORBA::ULong max) // uses max size
+IR_EnumMemberSeq::IR_EnumMemberSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   TAO_Unbounded_String_Sequence
@@ -6145,7 +5857,7 @@
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::EnumMemberSeq::EnumMemberSeq (CORBA::ULong max, CORBA::ULong length, char * *buffer, CORBA::Boolean release)
+IR_EnumMemberSeq::IR_EnumMemberSeq (CORBA::ULong max, CORBA::ULong length, char * *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   TAO_Unbounded_String_Sequence
@@ -6154,7 +5866,7 @@
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::EnumMemberSeq::EnumMemberSeq (const EnumMemberSeq &seq) // copy ctor
+IR_EnumMemberSeq::IR_EnumMemberSeq (const IR_EnumMemberSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   TAO_Unbounded_String_Sequence
@@ -6163,22 +5875,19 @@
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::EnumMemberSeq::~EnumMemberSeq (void) // dtor
+IR_EnumMemberSeq::~IR_EnumMemberSeq (void) // dtor
 {}
-void IR::EnumMemberSeq::_tao_any_destructor (void *x)
+void IR_EnumMemberSeq::_tao_any_destructor (void *x)
 {
-  EnumMemberSeq *tmp = ACE_static_cast (EnumMemberSeq*,x);
+  IR_EnumMemberSeq *tmp = ACE_static_cast (IR_EnumMemberSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_EnumMemberSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   33, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f45), ACE_NTOHL (0x6e756d4d), ACE_NTOHL (0x656d6265), ACE_NTOHL (0x72536571), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IR/EnumMemberSeq:1.0
-  14, ACE_NTOHL (0x456e756d), ACE_NTOHL (0x4d656d62), ACE_NTOHL (0x65725365), ACE_NTOHL (0x71000000),  // name = EnumMemberSeq
+  14, ACE_NTOHL (0x456e756d), ACE_NTOHL (0x4d656d62), ACE_NTOHL (0x65725365), ACE_NTOHL (0x71000000),  // name = IR_EnumMemberSeq
   CORBA::tk_sequence, // typecode kind
   80, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
@@ -6193,7 +5902,7 @@
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_EnumMemberSeq (CORBA::tk_alias, sizeof (_oc_IR_EnumMemberSeq), (char *) &_oc_IR_EnumMemberSeq, 0, sizeof (IR::EnumMemberSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_EnumMemberSeq (CORBA::tk_alias, sizeof (_oc_IR_EnumMemberSeq), (char *) &_oc_IR_EnumMemberSeq, 0, sizeof (IR_EnumMemberSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_EnumMemberSeq, &_tc_TAO_tc_IR_EnumMemberSeq)
@@ -6203,15 +5912,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_Container_Proxy_Impl::_TAO_Container_Proxy_Impl (void)
+_TAO_Container_Proxy_Impl::_TAO_Container_Proxy_Impl (void)
 {}
 
-IR::_TAO_Container_Remote_Proxy_Impl::_TAO_Container_Remote_Proxy_Impl (void)
+_TAO_Container_Remote_Proxy_Impl::_TAO_Container_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-IR::Contained_ptr IR::_TAO_Container_Remote_Proxy_Impl::lookup (
+IR_Contained_ptr _TAO_Container_Remote_Proxy_Impl::lookup (
     CORBA_Object *_collocated_tao_target_,
     const char * search_name,
     CORBA::Environment &ACE_TRY_ENV
@@ -6220,9 +5929,8 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::Contained_ptr _tao_retval = IR::Contained::_nil ();
-  IR::Contained_var _tao_safe_retval (_tao_retval);
+  IR_Contained_ptr _tao_retval = IR_Contained::_nil ();
+  IR_Contained_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -6250,7 +5958,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Container::TAO_ClientRequestInfo_IR_Container_lookup ri (
+      IR_Container::TAO_ClientRequestInfo_IR_Container_lookup ri (
         &_tao_call,
         _collocated_tao_target_,
         search_name,
@@ -6317,7 +6025,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::Contained_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_Contained_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -6383,9 +6091,9 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::ContainedSeq * IR::_TAO_Container_Remote_Proxy_Impl::contents (
+IR_ContainedSeq * _TAO_Container_Remote_Proxy_Impl::contents (
     CORBA_Object *_collocated_tao_target_,
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -6393,17 +6101,14 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::ContainedSeq *_tao_retval = 0;
-  
+  IR_ContainedSeq *_tao_retval = 0;
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
-  ACE_NEW_RETURN (_tao_retval, IR::ContainedSeq, _tao_retval);
-  IR::ContainedSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_ContainedSeq, _tao_retval);
+  IR_ContainedSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "contents",
@@ -6424,7 +6129,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Container::TAO_ClientRequestInfo_IR_Container_contents ri (
+      IR_Container::TAO_ClientRequestInfo_IR_Container_contents ri (
         &_tao_call,
         _collocated_tao_target_,
         limit_type,
@@ -6493,7 +6198,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ContainedSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ContainedSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -6559,11 +6264,11 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::ContainedSeq * IR::_TAO_Container_Remote_Proxy_Impl::lookup_name (
+IR_ContainedSeq * _TAO_Container_Remote_Proxy_Impl::lookup_name (
     CORBA_Object *_collocated_tao_target_,
     const char * search_name,
     CORBA::Long levels_to_search,
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -6571,17 +6276,14 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::ContainedSeq *_tao_retval = 0;
-  
+  IR_ContainedSeq *_tao_retval = 0;
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
-  ACE_NEW_RETURN (_tao_retval, IR::ContainedSeq, _tao_retval);
-  IR::ContainedSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_ContainedSeq, _tao_retval);
+  IR_ContainedSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "lookup_name",
@@ -6602,7 +6304,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Container::TAO_ClientRequestInfo_IR_Container_lookup_name ri (
+      IR_Container::TAO_ClientRequestInfo_IR_Container_lookup_name ri (
         &_tao_call,
         _collocated_tao_target_,
         search_name,
@@ -6675,7 +6377,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ContainedSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ContainedSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -6741,9 +6443,9 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::Container::DescriptionSeq * IR::_TAO_Container_Remote_Proxy_Impl::describe_contents (
+IR_Container::DescriptionSeq * _TAO_Container_Remote_Proxy_Impl::describe_contents (
     CORBA_Object *_collocated_tao_target_,
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Long max_returned_objs,
     CORBA::Environment &ACE_TRY_ENV
@@ -6752,17 +6454,14 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::Container::DescriptionSeq *_tao_retval = 0;
-  
+  IR_Container::DescriptionSeq *_tao_retval = 0;
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
-  ACE_NEW_RETURN (_tao_retval, IR::Container::DescriptionSeq, _tao_retval);
-  IR::Container::DescriptionSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_Container::DescriptionSeq, _tao_retval);
+  IR_Container::DescriptionSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "describe_contents",
@@ -6783,7 +6482,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Container::TAO_ClientRequestInfo_IR_Container_describe_contents ri (
+      IR_Container::TAO_ClientRequestInfo_IR_Container_describe_contents ri (
         &_tao_call,
         _collocated_tao_target_,
         limit_type,
@@ -6854,7 +6553,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::Container::DescriptionSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_Container::DescriptionSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -6920,7 +6619,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::ModuleDef_ptr IR::_TAO_Container_Remote_Proxy_Impl::create_module (
+IR_ModuleDef_ptr _TAO_Container_Remote_Proxy_Impl::create_module (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
@@ -6931,16 +6630,13 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::ModuleDef_ptr _tao_retval = IR::ModuleDef::_nil ();
-  IR::ModuleDef_var _tao_safe_retval (_tao_retval);
-  
+  IR_ModuleDef_ptr _tao_retval = IR_ModuleDef::_nil ();
+  IR_ModuleDef_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "create_module",
@@ -6961,7 +6657,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Container::TAO_ClientRequestInfo_IR_Container_create_module ri (
+      IR_Container::TAO_ClientRequestInfo_IR_Container_create_module ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -7032,7 +6728,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ModuleDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ModuleDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -7098,12 +6794,12 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::ConstantDef_ptr IR::_TAO_Container_Remote_Proxy_Impl::create_constant (
+IR_ConstantDef_ptr _TAO_Container_Remote_Proxy_Impl::create_constant (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+    IR_IDLType_ptr type,
     const CORBA::Any & value,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -7111,16 +6807,13 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::ConstantDef_ptr _tao_retval = IR::ConstantDef::_nil ();
-  IR::ConstantDef_var _tao_safe_retval (_tao_retval);
-  
+  IR_ConstantDef_ptr _tao_retval = IR_ConstantDef::_nil ();
+  IR_ConstantDef_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "create_constant",
@@ -7141,7 +6834,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Container::TAO_ClientRequestInfo_IR_Container_create_constant ri (
+      IR_Container::TAO_ClientRequestInfo_IR_Container_create_constant ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -7216,7 +6909,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ConstantDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ConstantDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -7282,28 +6975,25 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::StructDef_ptr IR::_TAO_Container_Remote_Proxy_Impl::create_struct (
+IR_StructDef_ptr _TAO_Container_Remote_Proxy_Impl::create_struct (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-  IR::StructDef_ptr _tao_retval = IR::StructDef::_nil ();
-  IR::StructDef_var _tao_safe_retval (_tao_retval);
-  
+  IR_StructDef_ptr _tao_retval = IR_StructDef::_nil ();
+  IR_StructDef_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "create_struct",
@@ -7324,7 +7014,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Container::TAO_ClientRequestInfo_IR_Container_create_struct ri (
+      IR_Container::TAO_ClientRequestInfo_IR_Container_create_struct ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -7397,7 +7087,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::StructDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_StructDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -7463,29 +7153,26 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::UnionDef_ptr IR::_TAO_Container_Remote_Proxy_Impl::create_union (
+IR_UnionDef_ptr _TAO_Container_Remote_Proxy_Impl::create_union (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr discriminator_type,
-    const IR::UnionMemberSeq & members,
+    IR_IDLType_ptr discriminator_type,
+    const IR_UnionMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-  IR::UnionDef_ptr _tao_retval = IR::UnionDef::_nil ();
-  IR::UnionDef_var _tao_safe_retval (_tao_retval);
-  
+  IR_UnionDef_ptr _tao_retval = IR_UnionDef::_nil ();
+  IR_UnionDef_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "create_union",
@@ -7506,7 +7193,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Container::TAO_ClientRequestInfo_IR_Container_create_union ri (
+      IR_Container::TAO_ClientRequestInfo_IR_Container_create_union ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -7581,7 +7268,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::UnionDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_UnionDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -7647,28 +7334,25 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::EnumDef_ptr IR::_TAO_Container_Remote_Proxy_Impl::create_enum (
+IR_EnumDef_ptr _TAO_Container_Remote_Proxy_Impl::create_enum (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    const IR::EnumMemberSeq & members,
+    const IR_EnumMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-  IR::EnumDef_ptr _tao_retval = IR::EnumDef::_nil ();
-  IR::EnumDef_var _tao_safe_retval (_tao_retval);
-  
+  IR_EnumDef_ptr _tao_retval = IR_EnumDef::_nil ();
+  IR_EnumDef_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "create_enum",
@@ -7689,7 +7373,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Container::TAO_ClientRequestInfo_IR_Container_create_enum ri (
+      IR_Container::TAO_ClientRequestInfo_IR_Container_create_enum ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -7762,7 +7446,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::EnumDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_EnumDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -7828,28 +7512,25 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::AliasDef_ptr IR::_TAO_Container_Remote_Proxy_Impl::create_alias (
+IR_AliasDef_ptr _TAO_Container_Remote_Proxy_Impl::create_alias (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type,
+    IR_IDLType_ptr original_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-  IR::AliasDef_ptr _tao_retval = IR::AliasDef::_nil ();
-  IR::AliasDef_var _tao_safe_retval (_tao_retval);
-  
+  IR_AliasDef_ptr _tao_retval = IR_AliasDef::_nil ();
+  IR_AliasDef_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "create_alias",
@@ -7870,7 +7551,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Container::TAO_ClientRequestInfo_IR_Container_create_alias ri (
+      IR_Container::TAO_ClientRequestInfo_IR_Container_create_alias ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -7943,7 +7624,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::AliasDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_AliasDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -8009,12 +7690,12 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::InterfaceDef_ptr IR::_TAO_Container_Remote_Proxy_Impl::create_interface (
+IR_InterfaceDef_ptr _TAO_Container_Remote_Proxy_Impl::create_interface (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Boolean is_abstract,
     CORBA::Boolean is_local,
     CORBA::Environment &ACE_TRY_ENV
@@ -8023,16 +7704,14 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::InterfaceDef_ptr _tao_retval = IR::InterfaceDef::_nil ();
-  IR::InterfaceDef_var _tao_safe_retval (_tao_retval);
+  IR_InterfaceDef_ptr _tao_retval = IR_InterfaceDef::_nil ();
+  IR_InterfaceDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "create_interface",
@@ -8053,7 +7732,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Container::TAO_ClientRequestInfo_IR_Container_create_interface ri (
+      IR_Container::TAO_ClientRequestInfo_IR_Container_create_interface ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -8130,7 +7809,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::InterfaceDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_InterfaceDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -8196,34 +7875,31 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::ValueDef_ptr IR::_TAO_Container_Remote_Proxy_Impl::create_value (
+IR_ValueDef_ptr _TAO_Container_Remote_Proxy_Impl::create_value (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
     CORBA::Boolean is_custom,
     CORBA::Boolean is_abstract,
-    IR::ValueDef_ptr base_value,
+    IR_ValueDef_ptr base_value,
     CORBA::Boolean is_truncatable,
-    const IR::ValueDefSeq & abstract_base_values,
-    const IR::InterfaceDefSeq & supported_interfaces,
-    const IR::InitializerSeq & initializers,
+    const IR_ValueDefSeq & abstract_base_values,
+    const IR_InterfaceDefSeq & supported_interfaces,
+    const IR_InitializerSeq & initializers,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-  IR::ValueDef_ptr _tao_retval = IR::ValueDef::_nil ();
-  IR::ValueDef_var _tao_safe_retval (_tao_retval);
-  
+  IR_ValueDef_ptr _tao_retval = IR_ValueDef::_nil ();
+  IR_ValueDef_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "create_value",
@@ -8244,7 +7920,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Container::TAO_ClientRequestInfo_IR_Container_create_value ri (
+      IR_Container::TAO_ClientRequestInfo_IR_Container_create_value ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -8329,7 +8005,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ValueDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ValueDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -8395,28 +8071,25 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::ValueBoxDef_ptr IR::_TAO_Container_Remote_Proxy_Impl::create_value_box (
+IR_ValueBoxDef_ptr _TAO_Container_Remote_Proxy_Impl::create_value_box (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-  IR::ValueBoxDef_ptr _tao_retval = IR::ValueBoxDef::_nil ();
-  IR::ValueBoxDef_var _tao_safe_retval (_tao_retval);
-  
+  IR_ValueBoxDef_ptr _tao_retval = IR_ValueBoxDef::_nil ();
+  IR_ValueBoxDef_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "create_value_box",
@@ -8437,7 +8110,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Container::TAO_ClientRequestInfo_IR_Container_create_value_box ri (
+      IR_Container::TAO_ClientRequestInfo_IR_Container_create_value_box ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -8510,7 +8183,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ValueBoxDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ValueBoxDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -8576,28 +8249,25 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::ExceptionDef_ptr IR::_TAO_Container_Remote_Proxy_Impl::create_exception (
+IR_ExceptionDef_ptr _TAO_Container_Remote_Proxy_Impl::create_exception (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-  IR::ExceptionDef_ptr _tao_retval = IR::ExceptionDef::_nil ();
-  IR::ExceptionDef_var _tao_safe_retval (_tao_retval);
-  
+  IR_ExceptionDef_ptr _tao_retval = IR_ExceptionDef::_nil ();
+  IR_ExceptionDef_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "create_exception",
@@ -8618,7 +8288,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Container::TAO_ClientRequestInfo_IR_Container_create_exception ri (
+      IR_Container::TAO_ClientRequestInfo_IR_Container_create_exception ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -8691,7 +8361,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ExceptionDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ExceptionDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -8757,7 +8427,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::NativeDef_ptr IR::_TAO_Container_Remote_Proxy_Impl::create_native (
+IR_NativeDef_ptr _TAO_Container_Remote_Proxy_Impl::create_native (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
@@ -8768,16 +8438,13 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::NativeDef_ptr _tao_retval = IR::NativeDef::_nil ();
-  IR::NativeDef_var _tao_safe_retval (_tao_retval);
-  
+  IR_NativeDef_ptr _tao_retval = IR_NativeDef::_nil ();
+  IR_NativeDef_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "create_native",
@@ -8798,7 +8465,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Container::TAO_ClientRequestInfo_IR_Container_create_native ri (
+      IR_Container::TAO_ClientRequestInfo_IR_Container_create_native ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -8869,7 +8536,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::NativeDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_NativeDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -8945,37 +8612,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_Container_Proxy_Broker::_TAO_Container_Proxy_Broker (void)
+_TAO_Container_Proxy_Broker::_TAO_Container_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_Container_Proxy_Broker::~_TAO_Container_Proxy_Broker (void)
+_TAO_Container_Proxy_Broker::~_TAO_Container_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_Container_Proxy_Broker * (*IR__TAO_Container_Proxy_Broker_Factory_function_pointer) (
+_TAO_Container_Proxy_Broker * (*_TAO_Container_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_Container_Remote_Proxy_Broker *
-IR::_TAO_Container_Remote_Proxy_Broker::the_TAO_Container_Remote_Proxy_Broker (void)
+_TAO_Container_Remote_Proxy_Broker *
+_TAO_Container_Remote_Proxy_Broker::the_TAO_Container_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_Container_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_Container_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_Container_Remote_Proxy_Broker::_TAO_Container_Remote_Proxy_Broker (void)
+_TAO_Container_Remote_Proxy_Broker::_TAO_Container_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_Container_Remote_Proxy_Broker::~_TAO_Container_Remote_Proxy_Broker (void)
+_TAO_Container_Remote_Proxy_Broker::~_TAO_Container_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_Container_Proxy_Impl&
-IR::_TAO_Container_Remote_Proxy_Broker::select_proxy (
-  ::IR::Container *object,
+_TAO_Container_Proxy_Impl&
+_TAO_Container_Remote_Proxy_Broker::select_proxy (
+  ::IR_Container *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -8991,109 +8658,109 @@
 
 
 // default constructor
-IR::Container::Container (int collocated)
+IR_Container::IR_Container (int collocated)
 {
   this->IR_Container_setup_collocation (collocated);
 }
 
 // destructor
-IR::Container::~Container (void)
+IR_Container::~IR_Container (void)
 {}
 
 void
-IR::Container::IR_Container_setup_collocation (int collocated)
+IR_Container::IR_Container_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_Container_Proxy_Broker_ =
-      ::IR__TAO_Container_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_Container_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_Container_Proxy_Broker_ =
-      ::IR::_TAO_Container_Remote_Proxy_Broker::the_TAO_Container_Remote_Proxy_Broker ();
+      _TAO_Container_Remote_Proxy_Broker::the_TAO_Container_Remote_Proxy_Broker ();
   
   this->CORBA_IRObject_setup_collocation (collocated);
 }
 
-void IR::Container::_tao_any_destructor (void *x)
+void IR_Container::_tao_any_destructor (void *x)
 {
-  Container *tmp = ACE_static_cast (Container*,x);
+  IR_Container *tmp = ACE_static_cast (IR_Container*,x);
   CORBA::release (tmp);
 }
 
-IR::Container_ptr IR::Container::_narrow (
+IR_Container_ptr IR_Container::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return Container::_nil ();
+    return IR_Container::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/Container:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (Container::_nil ());
+      ACE_CHECK_RETURN (IR_Container::_nil ());
       if (is_a == 0)
-        return Container::_nil ();
+        return IR_Container::_nil ();
     }
-  return Container::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_Container::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::Container_ptr IR::Container::_unchecked_narrow (
+IR_Container_ptr IR_Container::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return Container::_nil ();
+    return IR_Container::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      Container_ptr default_proxy = Container::_nil ();
+      IR_Container_ptr default_proxy = IR_Container::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_Container_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_Container_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::Container (
+          ::IR_Container (
             stub,
             1,
             obj->_servant ()),
             
-          Container::_nil ());
+          IR_Container::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::Container (stub, 0, obj->_servant ()), Container::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_Container (stub, 0, obj->_servant ()), IR_Container::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            Container_ptr,
+            IR_Container_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &Container::_narrow
+                      &IR_Container::_narrow
                     )
                 )
           );
 }
 
-IR::Container_ptr
-IR::Container::_duplicate (Container_ptr obj)
+IR_Container_ptr
+IR_Container::_duplicate (IR_Container_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::Container::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_Container::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/Container:1.0")) ||
@@ -9104,22 +8771,22 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::Container::_tao_QueryInterface (ptr_arith_t type)
+void *IR_Container::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Container)::_narrow))
+      &IR_Container::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -9132,12 +8799,12 @@
   return retv;
 }
 
-const char* IR::Container::_interface_repository_id (void) const
+const char* IR_Container::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/Container:1.0";
 }
 
-IR::Contained_ptr IR::Container::lookup (
+IR_Contained_ptr IR_Container::lookup (
     const char * search_name,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -9156,8 +8823,8 @@
     );
 }
 
-IR::ContainedSeq * IR::Container::contents (
-    IR::DefinitionKind limit_type,
+IR_ContainedSeq * IR_Container::contents (
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -9177,10 +8844,10 @@
     );
 }
 
-IR::ContainedSeq * IR::Container::lookup_name (
+IR_ContainedSeq * IR_Container::lookup_name (
     const char * search_name,
     CORBA::Long levels_to_search,
-    IR::DefinitionKind limit_type,
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -9213,7 +8880,7 @@
   56, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     29, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f43), ACE_NTOHL (0x6f6e7461), ACE_NTOHL (0x696e6564), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IR/Contained:1.0
-    10, ACE_NTOHL (0x436f6e74), ACE_NTOHL (0x61696e65), ACE_NTOHL (0x64000000),  // name = Contained
+    10, ACE_NTOHL (0x436f6e74), ACE_NTOHL (0x61696e65), ACE_NTOHL (0x64000000),  // name = IR_Contained
 
   5, ACE_NTOHL (0x6b696e64), ACE_NTOHL (0x0),  // name = kind
   CORBA::tk_enum, // typecode kind
@@ -9261,30 +8928,26 @@
   CORBA::tk_any,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_Container_Description (CORBA::tk_struct, sizeof (_oc_IR_Container_Description), (char *) &_oc_IR_Container_Description, 0, sizeof (IR::Container::Description));
-CORBA::TypeCode_ptr IR::Container::_tc_Description = &_tc_TAO_tc_IR_Container_Description;
+static CORBA::TypeCode _tc_TAO_tc_IR_Container_Description (CORBA::tk_struct, sizeof (_oc_IR_Container_Description), (char *) &_oc_IR_Container_Description, 0, sizeof (IR_Container::Description));
+CORBA::TypeCode_ptr IR_Container::_tc_Description = &_tc_TAO_tc_IR_Container_Description;
 
-void IR::Container::Description::_tao_any_destructor (void *x)
+void IR_Container::Description::_tao_any_destructor (void *x)
 {
   Description *tmp = ACE_static_cast (Description*,x);
   delete tmp;
 }
 
-
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_SEQUENCE_IR_CONTAINER_DESCRIPTIONSEQ_CS_)
-#define __TAO_UNBOUNDED_SEQUENCE_IR_CONTAINER_DESCRIPTIONSEQ_CS_
-
   void
-  IR::Container::_TAO_Unbounded_Sequence_IR_Container_DescriptionSeq::_allocate_buffer (CORBA::ULong length)
+  IR_Container::_TAO_Unbounded_Sequence_IR_Container_DescriptionSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::Container::Description* tmp = 0;
+    IR_Container::Description* tmp = 0;
     tmp = _TAO_Unbounded_Sequence_IR_Container_DescriptionSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::Container::Description *old = ACE_reinterpret_cast (IR::Container::Description *,this->buffer_);
+      IR_Container::Description *old = ACE_reinterpret_cast (IR_Container::Description *,this->buffer_);
       
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         tmp[i] = old[i];
@@ -9297,75 +8960,66 @@
   }
   
   void
-  IR::Container::_TAO_Unbounded_Sequence_IR_Container_DescriptionSeq::_deallocate_buffer (void)
+  IR_Container::_TAO_Unbounded_Sequence_IR_Container_DescriptionSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
     
-    IR::Container::Description *tmp = ACE_reinterpret_cast (IR::Container::Description *,this->buffer_);
+    IR_Container::Description *tmp = ACE_reinterpret_cast (IR_Container::Description *,this->buffer_);
     
     _TAO_Unbounded_Sequence_IR_Container_DescriptionSeq::freebuf (tmp);
     this->buffer_ = 0;
   } 
   
-  IR::Container::_TAO_Unbounded_Sequence_IR_Container_DescriptionSeq::~_TAO_Unbounded_Sequence_IR_Container_DescriptionSeq (void) // Dtor.
+  IR_Container::_TAO_Unbounded_Sequence_IR_Container_DescriptionSeq::~_TAO_Unbounded_Sequence_IR_Container_DescriptionSeq (void) // Dtor.
   {
     this->_deallocate_buffer ();
   }
   
   
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_CONTAINER_DESCRIPTIONSEQ_CS_)
-#define _IR_CONTAINER_DESCRIPTIONSEQ_CS_
-
 // *************************************************************
-// IR::Container::DescriptionSeq
+// IR_Container::DescriptionSeq
 // *************************************************************
 
-IR::Container::DescriptionSeq::DescriptionSeq (void)
+IR_Container::DescriptionSeq::DescriptionSeq (void)
 {}
-IR::Container::DescriptionSeq::DescriptionSeq (CORBA::ULong max) // uses max size
+IR_Container::DescriptionSeq::DescriptionSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_Container_DescriptionSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::Container::Description>
+  TAO_Unbounded_Sequence<IR_Container::Description>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::Container::DescriptionSeq::DescriptionSeq (CORBA::ULong max, CORBA::ULong length, IR::Container::Description *buffer, CORBA::Boolean release)
+IR_Container::DescriptionSeq::DescriptionSeq (CORBA::ULong max, CORBA::ULong length, IR_Container::Description *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_Container_DescriptionSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::Container::Description>
+  TAO_Unbounded_Sequence<IR_Container::Description>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::Container::DescriptionSeq::DescriptionSeq (const DescriptionSeq &seq) // copy ctor
+IR_Container::DescriptionSeq::DescriptionSeq (const DescriptionSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_Container_DescriptionSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::Container::Description>
+  TAO_Unbounded_Sequence<IR_Container::Description>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::Container::DescriptionSeq::~DescriptionSeq (void) // dtor
+IR_Container::DescriptionSeq::~DescriptionSeq (void) // dtor
 {}
-void IR::Container::DescriptionSeq::_tao_any_destructor (void *x)
+void IR_Container::DescriptionSeq::_tao_any_destructor (void *x)
 {
   DescriptionSeq *tmp = ACE_static_cast (DescriptionSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_Container_DescriptionSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -9385,7 +9039,7 @@
       56, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         29, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f43), ACE_NTOHL (0x6f6e7461), ACE_NTOHL (0x696e6564), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IR/Contained:1.0
-        10, ACE_NTOHL (0x436f6e74), ACE_NTOHL (0x61696e65), ACE_NTOHL (0x64000000),  // name = Contained
+        10, ACE_NTOHL (0x436f6e74), ACE_NTOHL (0x61696e65), ACE_NTOHL (0x64000000),  // name = IR_Contained
 
       5, ACE_NTOHL (0x6b696e64), ACE_NTOHL (0x0),  // name = kind
       CORBA::tk_enum, // typecode kind
@@ -9436,11 +9090,11 @@
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_Container_DescriptionSeq (CORBA::tk_alias, sizeof (_oc_IR_Container_DescriptionSeq), (char *) &_oc_IR_Container_DescriptionSeq, 0, sizeof (IR::Container::DescriptionSeq));
-CORBA::TypeCode_ptr IR::Container::_tc_DescriptionSeq = &_tc_TAO_tc_IR_Container_DescriptionSeq;
+static CORBA::TypeCode _tc_TAO_tc_IR_Container_DescriptionSeq (CORBA::tk_alias, sizeof (_oc_IR_Container_DescriptionSeq), (char *) &_oc_IR_Container_DescriptionSeq, 0, sizeof (IR_Container::DescriptionSeq));
+CORBA::TypeCode_ptr IR_Container::_tc_DescriptionSeq = &_tc_TAO_tc_IR_Container_DescriptionSeq;
 
-IR::Container::DescriptionSeq * IR::Container::describe_contents (
-    IR::DefinitionKind limit_type,
+IR_Container::DescriptionSeq * IR_Container::describe_contents (
+    IR_DefinitionKind limit_type,
     CORBA::Boolean exclude_inherited,
     CORBA::Long max_returned_objs,
     CORBA::Environment &ACE_TRY_ENV
@@ -9462,7 +9116,7 @@
     );
 }
 
-IR::ModuleDef_ptr IR::Container::create_module (
+IR_ModuleDef_ptr IR_Container::create_module (
     const char * id,
     const char * name,
     const char * version,
@@ -9485,11 +9139,11 @@
     );
 }
 
-IR::ConstantDef_ptr IR::Container::create_constant (
+IR_ConstantDef_ptr IR_Container::create_constant (
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+    IR_IDLType_ptr type,
     const CORBA::Any & value,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -9512,11 +9166,11 @@
     );
 }
 
-IR::StructDef_ptr IR::Container::create_struct (
+IR_StructDef_ptr IR_Container::create_struct (
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9537,12 +9191,12 @@
     );
 }
 
-IR::UnionDef_ptr IR::Container::create_union (
+IR_UnionDef_ptr IR_Container::create_union (
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr discriminator_type,
-    const IR::UnionMemberSeq & members,
+    IR_IDLType_ptr discriminator_type,
+    const IR_UnionMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9564,11 +9218,11 @@
     );
 }
 
-IR::EnumDef_ptr IR::Container::create_enum (
+IR_EnumDef_ptr IR_Container::create_enum (
     const char * id,
     const char * name,
     const char * version,
-    const IR::EnumMemberSeq & members,
+    const IR_EnumMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9589,11 +9243,11 @@
     );
 }
 
-IR::AliasDef_ptr IR::Container::create_alias (
+IR_AliasDef_ptr IR_Container::create_alias (
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type,
+    IR_IDLType_ptr original_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9614,11 +9268,11 @@
     );
 }
 
-IR::InterfaceDef_ptr IR::Container::create_interface (
+IR_InterfaceDef_ptr IR_Container::create_interface (
     const char * id,
     const char * name,
     const char * version,
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Boolean is_abstract,
     CORBA::Boolean is_local,
     CORBA::Environment &ACE_TRY_ENV
@@ -9643,17 +9297,17 @@
     );
 }
 
-IR::ValueDef_ptr IR::Container::create_value (
+IR_ValueDef_ptr IR_Container::create_value (
     const char * id,
     const char * name,
     const char * version,
     CORBA::Boolean is_custom,
     CORBA::Boolean is_abstract,
-    IR::ValueDef_ptr base_value,
+    IR_ValueDef_ptr base_value,
     CORBA::Boolean is_truncatable,
-    const IR::ValueDefSeq & abstract_base_values,
-    const IR::InterfaceDefSeq & supported_interfaces,
-    const IR::InitializerSeq & initializers,
+    const IR_ValueDefSeq & abstract_base_values,
+    const IR_InterfaceDefSeq & supported_interfaces,
+    const IR_InitializerSeq & initializers,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9680,11 +9334,11 @@
     );
 }
 
-IR::ValueBoxDef_ptr IR::Container::create_value_box (
+IR_ValueBoxDef_ptr IR_Container::create_value_box (
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9705,11 +9359,11 @@
     );
 }
 
-IR::ExceptionDef_ptr IR::Container::create_exception (
+IR_ExceptionDef_ptr IR_Container::create_exception (
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -9730,7 +9384,7 @@
     );
 }
 
-IR::NativeDef_ptr IR::Container::create_native (
+IR_NativeDef_ptr IR_Container::create_native (
     const char * id,
     const char * name,
     const char * version,
@@ -9753,9 +9407,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::Container::TAO_ClientRequestInfo_IR_Container_lookup::TAO_ClientRequestInfo_IR_Container_lookup (
+IR_Container::TAO_ClientRequestInfo_IR_Container_lookup::TAO_ClientRequestInfo_IR_Container_lookup (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * search_name,
@@ -9766,7 +9419,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_lookup::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_lookup::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -9785,7 +9438,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_lookup::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_lookup::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -9798,7 +9451,7 @@
 
 
 CORBA::Any * 
-IR::Container::TAO_ClientRequestInfo_IR_Container_lookup::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_lookup::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -9814,16 +9467,16 @@
 }
 
 void 
-IR::Container::TAO_ClientRequestInfo_IR_Container_lookup::result (IR::Contained_ptr result)
+IR_Container::TAO_ClientRequestInfo_IR_Container_lookup::result (IR_Contained_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Container::TAO_ClientRequestInfo_IR_Container_contents::TAO_ClientRequestInfo_IR_Container_contents (
+IR_Container::TAO_ClientRequestInfo_IR_Container_contents::TAO_ClientRequestInfo_IR_Container_contents (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    IR::DefinitionKind & limit_type,
+    IR_DefinitionKind & limit_type,
     const CORBA::Boolean & exclude_inherited,
     CORBA::Environment &    
   )
@@ -9833,7 +9486,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_contents::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_contents::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -9858,7 +9511,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_contents::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_contents::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -9871,7 +9524,7 @@
 
 
 CORBA::Any * 
-IR::Container::TAO_ClientRequestInfo_IR_Container_contents::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_contents::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -9887,18 +9540,18 @@
 }
 
 void 
-IR::Container::TAO_ClientRequestInfo_IR_Container_contents::result (IR::ContainedSeq * result)
+IR_Container::TAO_ClientRequestInfo_IR_Container_contents::result (IR_ContainedSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Container::TAO_ClientRequestInfo_IR_Container_lookup_name::TAO_ClientRequestInfo_IR_Container_lookup_name (
+IR_Container::TAO_ClientRequestInfo_IR_Container_lookup_name::TAO_ClientRequestInfo_IR_Container_lookup_name (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * search_name,
     const CORBA::Long & levels_to_search,
-    IR::DefinitionKind & limit_type,
+    IR_DefinitionKind & limit_type,
     const CORBA::Boolean & exclude_inherited,
     CORBA::Environment &    
   )
@@ -9910,7 +9563,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_lookup_name::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_lookup_name::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -9945,7 +9598,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_lookup_name::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_lookup_name::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -9958,7 +9611,7 @@
 
 
 CORBA::Any * 
-IR::Container::TAO_ClientRequestInfo_IR_Container_lookup_name::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_lookup_name::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -9974,16 +9627,16 @@
 }
 
 void 
-IR::Container::TAO_ClientRequestInfo_IR_Container_lookup_name::result (IR::ContainedSeq * result)
+IR_Container::TAO_ClientRequestInfo_IR_Container_lookup_name::result (IR_ContainedSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Container::TAO_ClientRequestInfo_IR_Container_describe_contents::TAO_ClientRequestInfo_IR_Container_describe_contents (
+IR_Container::TAO_ClientRequestInfo_IR_Container_describe_contents::TAO_ClientRequestInfo_IR_Container_describe_contents (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    IR::DefinitionKind & limit_type,
+    IR_DefinitionKind & limit_type,
     const CORBA::Boolean & exclude_inherited,
     const CORBA::Long & max_returned_objs,
     CORBA::Environment &    
@@ -9995,7 +9648,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_describe_contents::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_describe_contents::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -10025,7 +9678,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_describe_contents::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_describe_contents::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -10038,7 +9691,7 @@
 
 
 CORBA::Any * 
-IR::Container::TAO_ClientRequestInfo_IR_Container_describe_contents::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_describe_contents::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -10054,13 +9707,13 @@
 }
 
 void 
-IR::Container::TAO_ClientRequestInfo_IR_Container_describe_contents::result (ACE_NESTED_CLASS (IR::Container,DescriptionSeq) * result)
+IR_Container::TAO_ClientRequestInfo_IR_Container_describe_contents::result (ACE_NESTED_CLASS (IR_Container,DescriptionSeq) * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_module::TAO_ClientRequestInfo_IR_Container_create_module (
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_module::TAO_ClientRequestInfo_IR_Container_create_module (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
@@ -10075,7 +9728,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_module::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_module::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -10104,7 +9757,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_module::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_module::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -10117,7 +9770,7 @@
 
 
 CORBA::Any * 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_module::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_module::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -10133,19 +9786,19 @@
 }
 
 void 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_module::result (IR::ModuleDef_ptr result)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_module::result (IR_ModuleDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_constant::TAO_ClientRequestInfo_IR_Container_create_constant (
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_constant::TAO_ClientRequestInfo_IR_Container_create_constant (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+    IR_IDLType_ptr type,
     const CORBA::Any & value,
     CORBA::Environment &    
   )
@@ -10158,7 +9811,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_constant::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_constant::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -10198,7 +9851,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_constant::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_constant::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -10211,7 +9864,7 @@
 
 
 CORBA::Any * 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_constant::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_constant::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -10227,19 +9880,19 @@
 }
 
 void 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_constant::result (IR::ConstantDef_ptr result)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_constant::result (IR_ConstantDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_struct::TAO_ClientRequestInfo_IR_Container_create_struct (
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_struct::TAO_ClientRequestInfo_IR_Container_create_struct (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -10250,7 +9903,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_struct::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_struct::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -10285,7 +9938,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_struct::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_struct::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -10298,7 +9951,7 @@
 
 
 CORBA::Any * 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_struct::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_struct::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -10314,20 +9967,20 @@
 }
 
 void 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_struct::result (IR::StructDef_ptr result)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_struct::result (IR_StructDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_union::TAO_ClientRequestInfo_IR_Container_create_union (
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_union::TAO_ClientRequestInfo_IR_Container_create_union (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr discriminator_type,
-    const IR::UnionMemberSeq & members,
+    IR_IDLType_ptr discriminator_type,
+    const IR_UnionMemberSeq & members,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -10339,7 +9992,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_union::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_union::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -10380,7 +10033,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_union::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_union::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -10393,7 +10046,7 @@
 
 
 CORBA::Any * 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_union::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_union::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -10409,19 +10062,19 @@
 }
 
 void 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_union::result (IR::UnionDef_ptr result)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_union::result (IR_UnionDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_enum::TAO_ClientRequestInfo_IR_Container_create_enum (
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_enum::TAO_ClientRequestInfo_IR_Container_create_enum (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    const IR::EnumMemberSeq & members,
+    const IR_EnumMemberSeq & members,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -10432,7 +10085,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_enum::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_enum::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -10467,7 +10120,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_enum::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_enum::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -10480,7 +10133,7 @@
 
 
 CORBA::Any * 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_enum::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_enum::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -10496,19 +10149,19 @@
 }
 
 void 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_enum::result (IR::EnumDef_ptr result)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_enum::result (IR_EnumDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_alias::TAO_ClientRequestInfo_IR_Container_create_alias (
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_alias::TAO_ClientRequestInfo_IR_Container_create_alias (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type,
+    IR_IDLType_ptr original_type,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -10519,7 +10172,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_alias::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_alias::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -10554,7 +10207,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_alias::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_alias::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -10567,7 +10220,7 @@
 
 
 CORBA::Any * 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_alias::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_alias::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -10583,19 +10236,19 @@
 }
 
 void 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_alias::result (IR::AliasDef_ptr result)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_alias::result (IR_AliasDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_interface::TAO_ClientRequestInfo_IR_Container_create_interface (
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_interface::TAO_ClientRequestInfo_IR_Container_create_interface (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     const CORBA::Boolean & is_abstract,
     const CORBA::Boolean & is_local,
     CORBA::Environment &    
@@ -10610,7 +10263,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_interface::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_interface::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -10655,7 +10308,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_interface::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_interface::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -10668,7 +10321,7 @@
 
 
 CORBA::Any * 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_interface::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_interface::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -10684,13 +10337,13 @@
 }
 
 void 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_interface::result (IR::InterfaceDef_ptr result)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_interface::result (IR_InterfaceDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_value::TAO_ClientRequestInfo_IR_Container_create_value (
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_value::TAO_ClientRequestInfo_IR_Container_create_value (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
@@ -10698,11 +10351,11 @@
     const char * version,
     const CORBA::Boolean & is_custom,
     const CORBA::Boolean & is_abstract,
-    IR::ValueDef_ptr base_value,
+    IR_ValueDef_ptr base_value,
     const CORBA::Boolean & is_truncatable,
-    const IR::ValueDefSeq & abstract_base_values,
-    const IR::InterfaceDefSeq & supported_interfaces,
-    const IR::InitializerSeq & initializers,
+    const IR_ValueDefSeq & abstract_base_values,
+    const IR_InterfaceDefSeq & supported_interfaces,
+    const IR_InitializerSeq & initializers,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -10719,7 +10372,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_value::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_value::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -10787,7 +10440,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_value::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_value::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -10800,7 +10453,7 @@
 
 
 CORBA::Any * 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_value::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_value::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -10816,19 +10469,19 @@
 }
 
 void 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_value::result (IR::ValueDef_ptr result)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_value::result (IR_ValueDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_value_box::TAO_ClientRequestInfo_IR_Container_create_value_box (
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_value_box::TAO_ClientRequestInfo_IR_Container_create_value_box (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -10839,7 +10492,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_value_box::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_value_box::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -10874,7 +10527,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_value_box::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_value_box::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -10887,7 +10540,7 @@
 
 
 CORBA::Any * 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_value_box::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_value_box::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -10903,19 +10556,19 @@
 }
 
 void 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_value_box::result (IR::ValueBoxDef_ptr result)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_value_box::result (IR_ValueBoxDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_exception::TAO_ClientRequestInfo_IR_Container_create_exception (
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_exception::TAO_ClientRequestInfo_IR_Container_create_exception (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -10926,7 +10579,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_exception::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_exception::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -10961,7 +10614,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_exception::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_exception::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -10974,7 +10627,7 @@
 
 
 CORBA::Any * 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_exception::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_exception::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -10990,13 +10643,13 @@
 }
 
 void 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_exception::result (IR::ExceptionDef_ptr result)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_exception::result (IR_ExceptionDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_native::TAO_ClientRequestInfo_IR_Container_create_native (
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_native::TAO_ClientRequestInfo_IR_Container_create_native (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
@@ -11011,7 +10664,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_native::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_native::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -11040,7 +10693,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_native::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_native::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -11053,7 +10706,7 @@
 
 
 CORBA::Any * 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_native::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_native::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -11069,20 +10722,21 @@
 }
 
 void 
-IR::Container::TAO_ClientRequestInfo_IR_Container_create_native::result (IR::NativeDef_ptr result)
+IR_Container::TAO_ClientRequestInfo_IR_Container_create_native::result (IR_NativeDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_Container[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   29, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f43), ACE_NTOHL (0x6f6e7461), ACE_NTOHL (0x696e6572), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IR/Container:1.0
-  10, ACE_NTOHL (0x436f6e74), ACE_NTOHL (0x61696e65), ACE_NTOHL (0x72000000),  // name = Container
+  10, ACE_NTOHL (0x436f6e74), ACE_NTOHL (0x61696e65), ACE_NTOHL (0x72000000),  // name = IR_Container
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_Container (CORBA::tk_objref, sizeof (_oc_IR_Container), (char *) &_oc_IR_Container, 0, sizeof (IR::Container));
+static CORBA::TypeCode _tc_TAO_tc_IR_Container (CORBA::tk_objref, sizeof (_oc_IR_Container), (char *) &_oc_IR_Container, 0, sizeof (IR_Container));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_Container, &_tc_TAO_tc_IR_Container)
@@ -11092,15 +10746,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_IDLType_Proxy_Impl::_TAO_IDLType_Proxy_Impl (void)
+_TAO_IDLType_Proxy_Impl::_TAO_IDLType_Proxy_Impl (void)
 {}
 
-IR::_TAO_IDLType_Remote_Proxy_Impl::_TAO_IDLType_Remote_Proxy_Impl (void)
+_TAO_IDLType_Remote_Proxy_Impl::_TAO_IDLType_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-CORBA::TypeCode_ptr IR::_TAO_IDLType_Remote_Proxy_Impl::type (
+CORBA::TypeCode_ptr _TAO_IDLType_Remote_Proxy_Impl::type (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -11108,16 +10762,13 @@
     CORBA::SystemException
   ))
 {
-  
   CORBA::TypeCode_ptr _tao_retval = CORBA::TypeCode::_nil ();
   CORBA::TypeCode_var _tao_safe_retval (_tao_retval);
   
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_type",
@@ -11138,7 +10789,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::IDLType::TAO_ClientRequestInfo_IR_IDLType_type_get ri (
+      IR_IDLType::TAO_ClientRequestInfo_IR_IDLType_type_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -11270,37 +10921,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_IDLType_Proxy_Broker::_TAO_IDLType_Proxy_Broker (void)
+_TAO_IDLType_Proxy_Broker::_TAO_IDLType_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_IDLType_Proxy_Broker::~_TAO_IDLType_Proxy_Broker (void)
+_TAO_IDLType_Proxy_Broker::~_TAO_IDLType_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_IDLType_Proxy_Broker * (*IR__TAO_IDLType_Proxy_Broker_Factory_function_pointer) (
+_TAO_IDLType_Proxy_Broker * (*_TAO_IDLType_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_IDLType_Remote_Proxy_Broker *
-IR::_TAO_IDLType_Remote_Proxy_Broker::the_TAO_IDLType_Remote_Proxy_Broker (void)
+_TAO_IDLType_Remote_Proxy_Broker *
+_TAO_IDLType_Remote_Proxy_Broker::the_TAO_IDLType_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_IDLType_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_IDLType_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_IDLType_Remote_Proxy_Broker::_TAO_IDLType_Remote_Proxy_Broker (void)
+_TAO_IDLType_Remote_Proxy_Broker::_TAO_IDLType_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_IDLType_Remote_Proxy_Broker::~_TAO_IDLType_Remote_Proxy_Broker (void)
+_TAO_IDLType_Remote_Proxy_Broker::~_TAO_IDLType_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_IDLType_Proxy_Impl&
-IR::_TAO_IDLType_Remote_Proxy_Broker::select_proxy (
-  ::IR::IDLType *object,
+_TAO_IDLType_Proxy_Impl&
+_TAO_IDLType_Remote_Proxy_Broker::select_proxy (
+  ::IR_IDLType *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -11316,109 +10967,109 @@
 
 
 // default constructor
-IR::IDLType::IDLType (int collocated)
+IR_IDLType::IR_IDLType (int collocated)
 {
   this->IR_IDLType_setup_collocation (collocated);
 }
 
 // destructor
-IR::IDLType::~IDLType (void)
+IR_IDLType::~IR_IDLType (void)
 {}
 
 void
-IR::IDLType::IR_IDLType_setup_collocation (int collocated)
+IR_IDLType::IR_IDLType_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_IDLType_Proxy_Broker_ =
-      ::IR__TAO_IDLType_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_IDLType_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_IDLType_Proxy_Broker_ =
-      ::IR::_TAO_IDLType_Remote_Proxy_Broker::the_TAO_IDLType_Remote_Proxy_Broker ();
+      ::_TAO_IDLType_Remote_Proxy_Broker::the_TAO_IDLType_Remote_Proxy_Broker ();
   
   this->CORBA_IRObject_setup_collocation (collocated);
 }
 
-void IR::IDLType::_tao_any_destructor (void *x)
+void IR_IDLType::_tao_any_destructor (void *x)
 {
-  IDLType *tmp = ACE_static_cast (IDLType*,x);
+  IR_IDLType *tmp = ACE_static_cast (IR_IDLType*,x);
   CORBA::release (tmp);
 }
 
-IR::IDLType_ptr IR::IDLType::_narrow (
+IR_IDLType_ptr IR_IDLType::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return IDLType::_nil ();
+    return IR_IDLType::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/IDLType:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (IDLType::_nil ());
+      ACE_CHECK_RETURN (IR_IDLType::_nil ());
       if (is_a == 0)
-        return IDLType::_nil ();
+        return IR_IDLType::_nil ();
     }
-  return IDLType::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_IDLType::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::IDLType_ptr IR::IDLType::_unchecked_narrow (
+IR_IDLType_ptr IR_IDLType::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return IDLType::_nil ();
+    return IR_IDLType::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      IDLType_ptr default_proxy = IDLType::_nil ();
+      IR_IDLType_ptr default_proxy = IR_IDLType::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_IDLType_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_IDLType_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::IDLType (
+          ::IR_IDLType (
             stub,
             1,
             obj->_servant ()),
             
-          IDLType::_nil ());
+          IR_IDLType::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::IDLType (stub, 0, obj->_servant ()), IDLType::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_IDLType (stub, 0, obj->_servant ()), IR_IDLType::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            IDLType_ptr,
+            IR_IDLType_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &IDLType::_narrow
+                      &IR_IDLType::_narrow
                     )
                 )
           );
 }
 
-IR::IDLType_ptr
-IR::IDLType::_duplicate (IDLType_ptr obj)
+IR_IDLType_ptr
+IR_IDLType::_duplicate (IR_IDLType_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::IDLType::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_IDLType::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/IDLType:1.0")) ||
@@ -11429,22 +11080,22 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::IDLType::_tao_QueryInterface (ptr_arith_t type)
+void *IR_IDLType::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, IDLType)::_narrow))
+      &IR_IDLType::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -11457,12 +11108,12 @@
   return retv;
 }
 
-const char* IR::IDLType::_interface_repository_id (void) const
+const char* IR_IDLType::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/IDLType:1.0";
 }
 
-CORBA::TypeCode_ptr IR::IDLType::type (
+CORBA::TypeCode_ptr IR_IDLType::type (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -11479,9 +11130,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::IDLType::TAO_ClientRequestInfo_IR_IDLType_type_get::TAO_ClientRequestInfo_IR_IDLType_type_get (
+IR_IDLType::TAO_ClientRequestInfo_IR_IDLType_type_get::TAO_ClientRequestInfo_IR_IDLType_type_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -11490,7 +11140,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::IDLType::TAO_ClientRequestInfo_IR_IDLType_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_IDLType::TAO_ClientRequestInfo_IR_IDLType_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -11502,7 +11152,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::IDLType::TAO_ClientRequestInfo_IR_IDLType_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_IDLType::TAO_ClientRequestInfo_IR_IDLType_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -11515,7 +11165,7 @@
 
 
 CORBA::Any * 
-IR::IDLType::TAO_ClientRequestInfo_IR_IDLType_type_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_IDLType::TAO_ClientRequestInfo_IR_IDLType_type_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -11531,20 +11181,21 @@
 }
 
 void 
-IR::IDLType::TAO_ClientRequestInfo_IR_IDLType_type_get::result (CORBA::TypeCode_ptr result)
+IR_IDLType::TAO_ClientRequestInfo_IR_IDLType_type_get::result (CORBA::TypeCode_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_IDLType[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x444c5479), ACE_NTOHL (0x70653a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/IDLType:1.0
-  8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IDLType
+  8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IR_IDLType
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_IDLType (CORBA::tk_objref, sizeof (_oc_IR_IDLType), (char *) &_oc_IR_IDLType, 0, sizeof (IR::IDLType));
+static CORBA::TypeCode _tc_TAO_tc_IR_IDLType (CORBA::tk_objref, sizeof (_oc_IR_IDLType), (char *) &_oc_IR_IDLType, 0, sizeof (IR_IDLType));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_IDLType, &_tc_TAO_tc_IR_IDLType)
@@ -11578,7 +11229,7 @@
   11, ACE_NTOHL (0x706b5f77), ACE_NTOHL (0x73747269), ACE_NTOHL (0x6e670000),  // name = pk_wstring
   14, ACE_NTOHL (0x706b5f76), ACE_NTOHL (0x616c7565), ACE_NTOHL (0x5f626173), ACE_NTOHL (0x65000000),  // name = pk_value_base
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_PrimitiveKind (CORBA::tk_enum, sizeof (_oc_IR_PrimitiveKind), (char *) &_oc_IR_PrimitiveKind, 0, sizeof (IR::PrimitiveKind));
+static CORBA::TypeCode _tc_TAO_tc_IR_PrimitiveKind (CORBA::tk_enum, sizeof (_oc_IR_PrimitiveKind), (char *) &_oc_IR_PrimitiveKind, 0, sizeof (IR_PrimitiveKind));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_PrimitiveKind, &_tc_TAO_tc_IR_PrimitiveKind)
@@ -11588,15 +11239,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_Repository_Proxy_Impl::_TAO_Repository_Proxy_Impl (void)
+_TAO_Repository_Proxy_Impl::_TAO_Repository_Proxy_Impl (void)
 {}
 
-IR::_TAO_Repository_Remote_Proxy_Impl::_TAO_Repository_Remote_Proxy_Impl (void)
+_TAO_Repository_Remote_Proxy_Impl::_TAO_Repository_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-IR::Contained_ptr IR::_TAO_Repository_Remote_Proxy_Impl::lookup_id (
+IR_Contained_ptr _TAO_Repository_Remote_Proxy_Impl::lookup_id (
     CORBA_Object *_collocated_tao_target_,
     const char * search_id,
     CORBA::Environment &ACE_TRY_ENV
@@ -11605,16 +11256,13 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::Contained_ptr _tao_retval = IR::Contained::_nil ();
-  IR::Contained_var _tao_safe_retval (_tao_retval);
-  
+  IR_Contained_ptr _tao_retval = IR_Contained::_nil ();
+  IR_Contained_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "lookup_id",
@@ -11635,7 +11283,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Repository::TAO_ClientRequestInfo_IR_Repository_lookup_id ri (
+      IR_Repository::TAO_ClientRequestInfo_IR_Repository_lookup_id ri (
         &_tao_call,
         _collocated_tao_target_,
         search_id,
@@ -11702,7 +11350,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::Contained_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_Contained_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -11768,7 +11416,7 @@
   return _tao_safe_retval._retn ();
 }
 
-CORBA::TypeCode_ptr IR::_TAO_Repository_Remote_Proxy_Impl::get_canonical_typecode (
+CORBA::TypeCode_ptr _TAO_Repository_Remote_Proxy_Impl::get_canonical_typecode (
     CORBA_Object *_collocated_tao_target_,
     CORBA::TypeCode_ptr tc,
     CORBA::Environment &ACE_TRY_ENV
@@ -11777,16 +11425,13 @@
     CORBA::SystemException
   ))
 {
-  
   CORBA::TypeCode_ptr _tao_retval = CORBA::TypeCode::_nil ();
   CORBA::TypeCode_var _tao_safe_retval (_tao_retval);
   
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "get_canonical_typecode",
@@ -11807,7 +11452,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Repository::TAO_ClientRequestInfo_IR_Repository_get_canonical_typecode ri (
+      IR_Repository::TAO_ClientRequestInfo_IR_Repository_get_canonical_typecode ri (
         &_tao_call,
         _collocated_tao_target_,
         tc,
@@ -11940,25 +11585,22 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::PrimitiveDef_ptr IR::_TAO_Repository_Remote_Proxy_Impl::get_primitive (
+IR_PrimitiveDef_ptr _TAO_Repository_Remote_Proxy_Impl::get_primitive (
     CORBA_Object *_collocated_tao_target_,
-    IR::PrimitiveKind kind,
+    IR_PrimitiveKind kind,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-  IR::PrimitiveDef_ptr _tao_retval = IR::PrimitiveDef::_nil ();
-  IR::PrimitiveDef_var _tao_safe_retval (_tao_retval);
-  
+  IR_PrimitiveDef_ptr _tao_retval = IR_PrimitiveDef::_nil ();
+  IR_PrimitiveDef_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "get_primitive",
@@ -11979,7 +11621,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Repository::TAO_ClientRequestInfo_IR_Repository_get_primitive ri (
+      IR_Repository::TAO_ClientRequestInfo_IR_Repository_get_primitive ri (
         &_tao_call,
         _collocated_tao_target_,
         kind,
@@ -12046,7 +11688,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::PrimitiveDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_PrimitiveDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -12112,7 +11754,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::StringDef_ptr IR::_TAO_Repository_Remote_Proxy_Impl::create_string (
+IR_StringDef_ptr _TAO_Repository_Remote_Proxy_Impl::create_string (
     CORBA_Object *_collocated_tao_target_,
     CORBA::ULong bound,
     CORBA::Environment &ACE_TRY_ENV
@@ -12121,16 +11763,13 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::StringDef_ptr _tao_retval = IR::StringDef::_nil ();
-  IR::StringDef_var _tao_safe_retval (_tao_retval);
-  
+  IR_StringDef_ptr _tao_retval = IR_StringDef::_nil ();
+  IR_StringDef_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "create_string",
@@ -12151,7 +11790,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_string ri (
+      IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_string ri (
         &_tao_call,
         _collocated_tao_target_,
         bound,
@@ -12218,7 +11857,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::StringDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_StringDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -12284,7 +11923,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::WstringDef_ptr IR::_TAO_Repository_Remote_Proxy_Impl::create_wstring (
+IR_WstringDef_ptr _TAO_Repository_Remote_Proxy_Impl::create_wstring (
     CORBA_Object *_collocated_tao_target_,
     CORBA::ULong bound,
     CORBA::Environment &ACE_TRY_ENV
@@ -12293,16 +11932,13 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::WstringDef_ptr _tao_retval = IR::WstringDef::_nil ();
-  IR::WstringDef_var _tao_safe_retval (_tao_retval);
-  
+  IR_WstringDef_ptr _tao_retval = IR_WstringDef::_nil ();
+  IR_WstringDef_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "create_wstring",
@@ -12323,7 +11959,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_wstring ri (
+      IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_wstring ri (
         &_tao_call,
         _collocated_tao_target_,
         bound,
@@ -12390,7 +12026,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::WstringDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_WstringDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -12456,26 +12092,23 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::SequenceDef_ptr IR::_TAO_Repository_Remote_Proxy_Impl::create_sequence (
+IR_SequenceDef_ptr _TAO_Repository_Remote_Proxy_Impl::create_sequence (
     CORBA_Object *_collocated_tao_target_,
     CORBA::ULong bound,
-    IR::IDLType_ptr element_type,
+    IR_IDLType_ptr element_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-  IR::SequenceDef_ptr _tao_retval = IR::SequenceDef::_nil ();
-  IR::SequenceDef_var _tao_safe_retval (_tao_retval);
-  
+  IR_SequenceDef_ptr _tao_retval = IR_SequenceDef::_nil ();
+  IR_SequenceDef_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "create_sequence",
@@ -12496,7 +12129,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_sequence ri (
+      IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_sequence ri (
         &_tao_call,
         _collocated_tao_target_,
         bound,
@@ -12565,7 +12198,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::SequenceDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_SequenceDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -12631,26 +12264,23 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::ArrayDef_ptr IR::_TAO_Repository_Remote_Proxy_Impl::create_array (
+IR_ArrayDef_ptr _TAO_Repository_Remote_Proxy_Impl::create_array (
     CORBA_Object *_collocated_tao_target_,
     CORBA::ULong length,
-    IR::IDLType_ptr element_type,
+    IR_IDLType_ptr element_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-  IR::ArrayDef_ptr _tao_retval = IR::ArrayDef::_nil ();
-  IR::ArrayDef_var _tao_safe_retval (_tao_retval);
-  
+  IR_ArrayDef_ptr _tao_retval = IR_ArrayDef::_nil ();
+  IR_ArrayDef_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "create_array",
@@ -12671,7 +12301,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_array ri (
+      IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_array ri (
         &_tao_call,
         _collocated_tao_target_,
         length,
@@ -12740,7 +12370,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ArrayDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ArrayDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -12806,7 +12436,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::FixedDef_ptr IR::_TAO_Repository_Remote_Proxy_Impl::create_fixed (
+IR_FixedDef_ptr _TAO_Repository_Remote_Proxy_Impl::create_fixed (
     CORBA_Object *_collocated_tao_target_,
     CORBA::UShort digits,
     CORBA::Short scale,
@@ -12816,16 +12446,13 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::FixedDef_ptr _tao_retval = IR::FixedDef::_nil ();
-  IR::FixedDef_var _tao_safe_retval (_tao_retval);
-  
+  IR_FixedDef_ptr _tao_retval = IR_FixedDef::_nil ();
+  IR_FixedDef_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "create_fixed",
@@ -12846,7 +12473,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_fixed ri (
+      IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_fixed ri (
         &_tao_call,
         _collocated_tao_target_,
         digits,
@@ -12915,7 +12542,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::FixedDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_FixedDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -12991,37 +12618,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_Repository_Proxy_Broker::_TAO_Repository_Proxy_Broker (void)
+_TAO_Repository_Proxy_Broker::_TAO_Repository_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_Repository_Proxy_Broker::~_TAO_Repository_Proxy_Broker (void)
+_TAO_Repository_Proxy_Broker::~_TAO_Repository_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_Repository_Proxy_Broker * (*IR__TAO_Repository_Proxy_Broker_Factory_function_pointer) (
+_TAO_Repository_Proxy_Broker * (*_TAO_Repository_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_Repository_Remote_Proxy_Broker *
-IR::_TAO_Repository_Remote_Proxy_Broker::the_TAO_Repository_Remote_Proxy_Broker (void)
+_TAO_Repository_Remote_Proxy_Broker *
+_TAO_Repository_Remote_Proxy_Broker::the_TAO_Repository_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_Repository_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_Repository_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_Repository_Remote_Proxy_Broker::_TAO_Repository_Remote_Proxy_Broker (void)
+_TAO_Repository_Remote_Proxy_Broker::_TAO_Repository_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_Repository_Remote_Proxy_Broker::~_TAO_Repository_Remote_Proxy_Broker (void)
+_TAO_Repository_Remote_Proxy_Broker::~_TAO_Repository_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_Repository_Proxy_Impl&
-IR::_TAO_Repository_Remote_Proxy_Broker::select_proxy (
-  ::IR::Repository *object,
+_TAO_Repository_Proxy_Impl&
+_TAO_Repository_Remote_Proxy_Broker::select_proxy (
+  ::IR_Repository *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -13037,109 +12664,109 @@
 
 
 // default constructor
-IR::Repository::Repository (int collocated)
+IR_Repository::IR_Repository (int collocated)
 {
   this->IR_Repository_setup_collocation (collocated);
 }
 
 // destructor
-IR::Repository::~Repository (void)
+IR_Repository::~IR_Repository (void)
 {}
 
 void
-IR::Repository::IR_Repository_setup_collocation (int collocated)
+IR_Repository::IR_Repository_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_Repository_Proxy_Broker_ =
-      ::IR__TAO_Repository_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_Repository_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_Repository_Proxy_Broker_ =
-      ::IR::_TAO_Repository_Remote_Proxy_Broker::the_TAO_Repository_Remote_Proxy_Broker ();
+      ::_TAO_Repository_Remote_Proxy_Broker::the_TAO_Repository_Remote_Proxy_Broker ();
   
   this->IR_Container_setup_collocation (collocated);
 }
 
-void IR::Repository::_tao_any_destructor (void *x)
+void IR_Repository::_tao_any_destructor (void *x)
 {
-  Repository *tmp = ACE_static_cast (Repository*,x);
+  IR_Repository *tmp = ACE_static_cast (IR_Repository*,x);
   CORBA::release (tmp);
 }
 
-IR::Repository_ptr IR::Repository::_narrow (
+IR_Repository_ptr IR_Repository::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return Repository::_nil ();
+    return IR_Repository::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/Repository:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (Repository::_nil ());
+      ACE_CHECK_RETURN (IR_Repository::_nil ());
       if (is_a == 0)
-        return Repository::_nil ();
+        return IR_Repository::_nil ();
     }
-  return Repository::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_Repository::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::Repository_ptr IR::Repository::_unchecked_narrow (
+IR_Repository_ptr IR_Repository::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return Repository::_nil ();
+    return IR_Repository::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      Repository_ptr default_proxy = Repository::_nil ();
+      IR_Repository_ptr default_proxy = IR_Repository::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_Repository_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_Repository_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::Repository (
+          ::IR_Repository (
             stub,
             1,
             obj->_servant ()),
             
-          Repository::_nil ());
+          IR_Repository::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::Repository (stub, 0, obj->_servant ()), Repository::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_Repository (stub, 0, obj->_servant ()), IR_Repository::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            Repository_ptr,
+            IR_Repository_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &Repository::_narrow
+                      &IR_Repository::_narrow
                     )
                 )
           );
 }
 
-IR::Repository_ptr
-IR::Repository::_duplicate (Repository_ptr obj)
+IR_Repository_ptr
+IR_Repository::_duplicate (IR_Repository_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::Repository::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_Repository::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/Repository:1.0")) ||
@@ -13151,34 +12778,34 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::Repository::_tao_QueryInterface (ptr_arith_t type)
+void *IR_Repository::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Repository)::_narrow))
+      &IR_Repository::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Container)::_narrow))
+      &IR_Container::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Container_ptr,
+            IR_Container_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -13191,12 +12818,12 @@
   return retv;
 }
 
-const char* IR::Repository::_interface_repository_id (void) const
+const char* IR_Repository::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/Repository:1.0";
 }
 
-IR::Contained_ptr IR::Repository::lookup_id (
+IR_Contained_ptr IR_Repository::lookup_id (
     const char * search_id,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -13215,7 +12842,7 @@
     );
 }
 
-CORBA::TypeCode_ptr IR::Repository::get_canonical_typecode (
+CORBA::TypeCode_ptr IR_Repository::get_canonical_typecode (
     CORBA::TypeCode_ptr tc,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -13234,8 +12861,8 @@
     );
 }
 
-IR::PrimitiveDef_ptr IR::Repository::get_primitive (
-    IR::PrimitiveKind kind,
+IR_PrimitiveDef_ptr IR_Repository::get_primitive (
+    IR_PrimitiveKind kind,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -13253,7 +12880,7 @@
     );
 }
 
-IR::StringDef_ptr IR::Repository::create_string (
+IR_StringDef_ptr IR_Repository::create_string (
     CORBA::ULong bound,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -13272,7 +12899,7 @@
     );
 }
 
-IR::WstringDef_ptr IR::Repository::create_wstring (
+IR_WstringDef_ptr IR_Repository::create_wstring (
     CORBA::ULong bound,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -13291,9 +12918,9 @@
     );
 }
 
-IR::SequenceDef_ptr IR::Repository::create_sequence (
+IR_SequenceDef_ptr IR_Repository::create_sequence (
     CORBA::ULong bound,
-    IR::IDLType_ptr element_type,
+    IR_IDLType_ptr element_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -13312,9 +12939,9 @@
     );
 }
 
-IR::ArrayDef_ptr IR::Repository::create_array (
+IR_ArrayDef_ptr IR_Repository::create_array (
     CORBA::ULong length,
-    IR::IDLType_ptr element_type,
+    IR_IDLType_ptr element_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -13333,7 +12960,7 @@
     );
 }
 
-IR::FixedDef_ptr IR::Repository::create_fixed (
+IR_FixedDef_ptr IR_Repository::create_fixed (
     CORBA::UShort digits,
     CORBA::Short scale,
     CORBA::Environment &ACE_TRY_ENV
@@ -13354,9 +12981,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_lookup_id::TAO_ClientRequestInfo_IR_Repository_lookup_id (
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_lookup_id::TAO_ClientRequestInfo_IR_Repository_lookup_id (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * search_id,
@@ -13367,7 +12993,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_lookup_id::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_lookup_id::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -13386,7 +13012,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_lookup_id::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_lookup_id::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -13399,7 +13025,7 @@
 
 
 CORBA::Any * 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_lookup_id::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_lookup_id::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -13415,13 +13041,13 @@
 }
 
 void 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_lookup_id::result (IR::Contained_ptr result)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_lookup_id::result (IR_Contained_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_get_canonical_typecode::TAO_ClientRequestInfo_IR_Repository_get_canonical_typecode (
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_get_canonical_typecode::TAO_ClientRequestInfo_IR_Repository_get_canonical_typecode (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::TypeCode_ptr tc,
@@ -13432,7 +13058,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_get_canonical_typecode::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_get_canonical_typecode::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -13451,7 +13077,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_get_canonical_typecode::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_get_canonical_typecode::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -13464,7 +13090,7 @@
 
 
 CORBA::Any * 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_get_canonical_typecode::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_get_canonical_typecode::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -13480,16 +13106,16 @@
 }
 
 void 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_get_canonical_typecode::result (CORBA::TypeCode_ptr result)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_get_canonical_typecode::result (CORBA::TypeCode_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_get_primitive::TAO_ClientRequestInfo_IR_Repository_get_primitive (
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_get_primitive::TAO_ClientRequestInfo_IR_Repository_get_primitive (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    IR::PrimitiveKind & kind,
+    IR_PrimitiveKind & kind,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -13497,7 +13123,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_get_primitive::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_get_primitive::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -13517,7 +13143,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_get_primitive::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_get_primitive::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -13530,7 +13156,7 @@
 
 
 CORBA::Any * 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_get_primitive::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_get_primitive::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -13546,13 +13172,13 @@
 }
 
 void 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_get_primitive::result (IR::PrimitiveDef_ptr result)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_get_primitive::result (IR_PrimitiveDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_string::TAO_ClientRequestInfo_IR_Repository_create_string (
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_string::TAO_ClientRequestInfo_IR_Repository_create_string (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const CORBA::ULong & bound,
@@ -13563,7 +13189,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_string::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_string::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -13582,7 +13208,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_string::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_string::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -13595,7 +13221,7 @@
 
 
 CORBA::Any * 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_string::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_string::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -13611,13 +13237,13 @@
 }
 
 void 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_string::result (IR::StringDef_ptr result)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_string::result (IR_StringDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_wstring::TAO_ClientRequestInfo_IR_Repository_create_wstring (
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_wstring::TAO_ClientRequestInfo_IR_Repository_create_wstring (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const CORBA::ULong & bound,
@@ -13628,7 +13254,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_wstring::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_wstring::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -13647,7 +13273,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_wstring::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_wstring::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -13660,7 +13286,7 @@
 
 
 CORBA::Any * 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_wstring::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_wstring::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -13676,17 +13302,17 @@
 }
 
 void 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_wstring::result (IR::WstringDef_ptr result)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_wstring::result (IR_WstringDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_sequence::TAO_ClientRequestInfo_IR_Repository_create_sequence (
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_sequence::TAO_ClientRequestInfo_IR_Repository_create_sequence (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const CORBA::ULong & bound,
-    IR::IDLType_ptr element_type,
+    IR_IDLType_ptr element_type,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -13695,7 +13321,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_sequence::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_sequence::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -13720,7 +13346,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_sequence::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_sequence::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -13733,7 +13359,7 @@
 
 
 CORBA::Any * 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_sequence::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_sequence::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -13749,17 +13375,17 @@
 }
 
 void 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_sequence::result (IR::SequenceDef_ptr result)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_sequence::result (IR_SequenceDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_array::TAO_ClientRequestInfo_IR_Repository_create_array (
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_array::TAO_ClientRequestInfo_IR_Repository_create_array (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const CORBA::ULong & length,
-    IR::IDLType_ptr element_type,
+    IR_IDLType_ptr element_type,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -13768,7 +13394,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_array::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_array::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -13793,7 +13419,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_array::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_array::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -13806,7 +13432,7 @@
 
 
 CORBA::Any * 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_array::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_array::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -13822,13 +13448,13 @@
 }
 
 void 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_array::result (IR::ArrayDef_ptr result)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_array::result (IR_ArrayDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_fixed::TAO_ClientRequestInfo_IR_Repository_create_fixed (
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_fixed::TAO_ClientRequestInfo_IR_Repository_create_fixed (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const CORBA::UShort & digits,
@@ -13841,7 +13467,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_fixed::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_fixed::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -13865,7 +13491,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_fixed::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_fixed::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -13878,7 +13504,7 @@
 
 
 CORBA::Any * 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_fixed::result (CORBA::Environment &ACE_TRY_ENV)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_fixed::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -13894,20 +13520,21 @@
 }
 
 void 
-IR::Repository::TAO_ClientRequestInfo_IR_Repository_create_fixed::result (IR::FixedDef_ptr result)
+IR_Repository::TAO_ClientRequestInfo_IR_Repository_create_fixed::result (IR_FixedDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_Repository[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   30, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f52), ACE_NTOHL (0x65706f73), ACE_NTOHL (0x69746f72), ACE_NTOHL (0x793a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/Repository:1.0
-  11, ACE_NTOHL (0x5265706f), ACE_NTOHL (0x7369746f), ACE_NTOHL (0x72790000),  // name = Repository
+  11, ACE_NTOHL (0x5265706f), ACE_NTOHL (0x7369746f), ACE_NTOHL (0x72790000),  // name = IR_Repository
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_Repository (CORBA::tk_objref, sizeof (_oc_IR_Repository), (char *) &_oc_IR_Repository, 0, sizeof (IR::Repository));
+static CORBA::TypeCode _tc_TAO_tc_IR_Repository (CORBA::tk_objref, sizeof (_oc_IR_Repository), (char *) &_oc_IR_Repository, 0, sizeof (IR_Repository));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_Repository, &_tc_TAO_tc_IR_Repository)
@@ -13917,37 +13544,34 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_ComponentRepository_Proxy_Impl::_TAO_ComponentRepository_Proxy_Impl (void)
+_TAO_ComponentRepository_Proxy_Impl::_TAO_ComponentRepository_Proxy_Impl (void)
 {}
 
-IR::_TAO_ComponentRepository_Remote_Proxy_Impl::_TAO_ComponentRepository_Remote_Proxy_Impl (void)
+_TAO_ComponentRepository_Remote_Proxy_Impl::_TAO_ComponentRepository_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-IR::ComponentDef_ptr IR::_TAO_ComponentRepository_Remote_Proxy_Impl::create_component (
+IR_ComponentDef_ptr _TAO_ComponentRepository_Remote_Proxy_Impl::create_component (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    IR::ComponentDef_ptr base_component,
-    const IR::InterfaceDefSeq & supports_interfaces,
+    IR_ComponentDef_ptr base_component,
+    const IR_InterfaceDefSeq & supports_interfaces,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-  IR::ComponentDef_ptr _tao_retval = IR::ComponentDef::_nil ();
-  IR::ComponentDef_var _tao_safe_retval (_tao_retval);
-  
+  IR_ComponentDef_ptr _tao_retval = IR_ComponentDef::_nil ();
+  IR_ComponentDef_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "create_component",
@@ -13968,7 +13592,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_component ri (
+      IR_ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_component ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -14043,7 +13667,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ComponentDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ComponentDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -14109,30 +13733,27 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::HomeDef_ptr IR::_TAO_ComponentRepository_Remote_Proxy_Impl::create_home (
+IR_HomeDef_ptr _TAO_ComponentRepository_Remote_Proxy_Impl::create_home (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    IR::HomeDef_ptr base_home,
-    IR::ComponentDef_ptr managed_component,
-    IR::ValueDef_ptr primary_key,
+    IR_HomeDef_ptr base_home,
+    IR_ComponentDef_ptr managed_component,
+    IR_ValueDef_ptr primary_key,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-  IR::HomeDef_ptr _tao_retval = IR::HomeDef::_nil ();
-  IR::HomeDef_var _tao_safe_retval (_tao_retval);
-  
+  IR_HomeDef_ptr _tao_retval = IR_HomeDef::_nil ();
+  IR_HomeDef_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "create_home",
@@ -14153,7 +13774,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_home ri (
+      IR_ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_home ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -14230,7 +13851,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::HomeDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_HomeDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -14306,37 +13927,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_ComponentRepository_Proxy_Broker::_TAO_ComponentRepository_Proxy_Broker (void)
+_TAO_ComponentRepository_Proxy_Broker::_TAO_ComponentRepository_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ComponentRepository_Proxy_Broker::~_TAO_ComponentRepository_Proxy_Broker (void)
+_TAO_ComponentRepository_Proxy_Broker::~_TAO_ComponentRepository_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ComponentRepository_Proxy_Broker * (*IR__TAO_ComponentRepository_Proxy_Broker_Factory_function_pointer) (
+_TAO_ComponentRepository_Proxy_Broker * (*_TAO_ComponentRepository_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_ComponentRepository_Remote_Proxy_Broker *
-IR::_TAO_ComponentRepository_Remote_Proxy_Broker::the_TAO_ComponentRepository_Remote_Proxy_Broker (void)
+_TAO_ComponentRepository_Remote_Proxy_Broker *
+_TAO_ComponentRepository_Remote_Proxy_Broker::the_TAO_ComponentRepository_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_ComponentRepository_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_ComponentRepository_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_ComponentRepository_Remote_Proxy_Broker::_TAO_ComponentRepository_Remote_Proxy_Broker (void)
+_TAO_ComponentRepository_Remote_Proxy_Broker::_TAO_ComponentRepository_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ComponentRepository_Remote_Proxy_Broker::~_TAO_ComponentRepository_Remote_Proxy_Broker (void)
+_TAO_ComponentRepository_Remote_Proxy_Broker::~_TAO_ComponentRepository_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ComponentRepository_Proxy_Impl&
-IR::_TAO_ComponentRepository_Remote_Proxy_Broker::select_proxy (
-  ::IR::ComponentRepository *object,
+_TAO_ComponentRepository_Proxy_Impl&
+_TAO_ComponentRepository_Remote_Proxy_Broker::select_proxy (
+  ::IR_ComponentRepository *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -14352,109 +13973,109 @@
 
 
 // default constructor
-IR::ComponentRepository::ComponentRepository (int collocated)
+IR_ComponentRepository::IR_ComponentRepository (int collocated)
 {
   this->IR_ComponentRepository_setup_collocation (collocated);
 }
 
 // destructor
-IR::ComponentRepository::~ComponentRepository (void)
+IR_ComponentRepository::~IR_ComponentRepository (void)
 {}
 
 void
-IR::ComponentRepository::IR_ComponentRepository_setup_collocation (int collocated)
+IR_ComponentRepository::IR_ComponentRepository_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_ComponentRepository_Proxy_Broker_ =
-      ::IR__TAO_ComponentRepository_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_ComponentRepository_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_ComponentRepository_Proxy_Broker_ =
-      ::IR::_TAO_ComponentRepository_Remote_Proxy_Broker::the_TAO_ComponentRepository_Remote_Proxy_Broker ();
+      _TAO_ComponentRepository_Remote_Proxy_Broker::the_TAO_ComponentRepository_Remote_Proxy_Broker ();
   
   this->IR_Repository_setup_collocation (collocated);
 }
 
-void IR::ComponentRepository::_tao_any_destructor (void *x)
+void IR_ComponentRepository::_tao_any_destructor (void *x)
 {
-  ComponentRepository *tmp = ACE_static_cast (ComponentRepository*,x);
+  IR_ComponentRepository *tmp = ACE_static_cast (IR_ComponentRepository*,x);
   CORBA::release (tmp);
 }
 
-IR::ComponentRepository_ptr IR::ComponentRepository::_narrow (
+IR_ComponentRepository_ptr IR_ComponentRepository::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return ComponentRepository::_nil ();
+    return IR_ComponentRepository::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/ComponentRepository:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (ComponentRepository::_nil ());
+      ACE_CHECK_RETURN (IR_ComponentRepository::_nil ());
       if (is_a == 0)
-        return ComponentRepository::_nil ();
+        return IR_ComponentRepository::_nil ();
     }
-  return ComponentRepository::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_ComponentRepository::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::ComponentRepository_ptr IR::ComponentRepository::_unchecked_narrow (
+IR_ComponentRepository_ptr IR_ComponentRepository::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return ComponentRepository::_nil ();
+    return IR_ComponentRepository::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      ComponentRepository_ptr default_proxy = ComponentRepository::_nil ();
+      IR_ComponentRepository_ptr default_proxy = IR_ComponentRepository::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_ComponentRepository_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_ComponentRepository_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::ComponentRepository (
+          ::IR_ComponentRepository (
             stub,
             1,
             obj->_servant ()),
             
-          ComponentRepository::_nil ());
+          IR_ComponentRepository::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::ComponentRepository (stub, 0, obj->_servant ()), ComponentRepository::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_ComponentRepository (stub, 0, obj->_servant ()), IR_ComponentRepository::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            ComponentRepository_ptr,
+            IR_ComponentRepository_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &ComponentRepository::_narrow
+                      &IR_ComponentRepository::_narrow
                     )
                 )
           );
 }
 
-IR::ComponentRepository_ptr
-IR::ComponentRepository::_duplicate (ComponentRepository_ptr obj)
+IR_ComponentRepository_ptr
+IR_ComponentRepository::_duplicate (IR_ComponentRepository_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::ComponentRepository::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_ComponentRepository::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/ComponentRepository:1.0")) ||
@@ -14467,46 +14088,46 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::ComponentRepository::_tao_QueryInterface (ptr_arith_t type)
+void *IR_ComponentRepository::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, ComponentRepository)::_narrow))
+      &IR_ComponentRepository::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Repository)::_narrow))
+      &IR_Repository::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Repository_ptr,
+            IR_Repository_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Container)::_narrow))
+      &IR_Container::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Container_ptr,
+            IR_Container_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -14519,17 +14140,17 @@
   return retv;
 }
 
-const char* IR::ComponentRepository::_interface_repository_id (void) const
+const char* IR_ComponentRepository::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/ComponentRepository:1.0";
 }
 
-IR::ComponentDef_ptr IR::ComponentRepository::create_component (
+IR_ComponentDef_ptr IR_ComponentRepository::create_component (
     const char * id,
     const char * name,
     const char * version,
-    IR::ComponentDef_ptr base_component,
-    const IR::InterfaceDefSeq & supports_interfaces,
+    IR_ComponentDef_ptr base_component,
+    const IR_InterfaceDefSeq & supports_interfaces,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -14551,13 +14172,13 @@
     );
 }
 
-IR::HomeDef_ptr IR::ComponentRepository::create_home (
+IR_HomeDef_ptr IR_ComponentRepository::create_home (
     const char * id,
     const char * name,
     const char * version,
-    IR::HomeDef_ptr base_home,
-    IR::ComponentDef_ptr managed_component,
-    IR::ValueDef_ptr primary_key,
+    IR_HomeDef_ptr base_home,
+    IR_ComponentDef_ptr managed_component,
+    IR_ValueDef_ptr primary_key,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -14580,16 +14201,15 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_component::TAO_ClientRequestInfo_IR_ComponentRepository_create_component (
+IR_ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_component::TAO_ClientRequestInfo_IR_ComponentRepository_create_component (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    IR::ComponentDef_ptr base_component,
-    const IR::InterfaceDefSeq & supports_interfaces,
+    IR_ComponentDef_ptr base_component,
+    const IR_InterfaceDefSeq & supports_interfaces,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -14601,7 +14221,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_component::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_component::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -14642,7 +14262,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_component::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_component::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -14655,7 +14275,7 @@
 
 
 CORBA::Any * 
-IR::ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_component::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_component::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -14671,21 +14291,21 @@
 }
 
 void 
-IR::ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_component::result (IR::ComponentDef_ptr result)
+IR_ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_component::result (IR_ComponentDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_home::TAO_ClientRequestInfo_IR_ComponentRepository_create_home (
+IR_ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_home::TAO_ClientRequestInfo_IR_ComponentRepository_create_home (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    IR::HomeDef_ptr base_home,
-    IR::ComponentDef_ptr managed_component,
-    IR::ValueDef_ptr primary_key,
+    IR_HomeDef_ptr base_home,
+    IR_ComponentDef_ptr managed_component,
+    IR_ValueDef_ptr primary_key,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -14698,7 +14318,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_home::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_home::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -14745,7 +14365,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_home::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_home::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -14758,7 +14378,7 @@
 
 
 CORBA::Any * 
-IR::ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_home::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_home::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -14774,20 +14394,21 @@
 }
 
 void 
-IR::ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_home::result (IR::HomeDef_ptr result)
+IR_ComponentRepository::TAO_ClientRequestInfo_IR_ComponentRepository_create_home::result (IR_HomeDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_ComponentRepository[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   39, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f43), ACE_NTOHL (0x6f6d706f), ACE_NTOHL (0x6e656e74), ACE_NTOHL (0x5265706f), ACE_NTOHL (0x7369746f), ACE_NTOHL (0x72793a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/ComponentRepository:1.0
-  20, ACE_NTOHL (0x436f6d70), ACE_NTOHL (0x6f6e656e), ACE_NTOHL (0x74526570), ACE_NTOHL (0x6f736974), ACE_NTOHL (0x6f727900),  // name = ComponentRepository
+  20, ACE_NTOHL (0x436f6d70), ACE_NTOHL (0x6f6e656e), ACE_NTOHL (0x74526570), ACE_NTOHL (0x6f736974), ACE_NTOHL (0x6f727900),  // name = IR_ComponentRepository
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ComponentRepository (CORBA::tk_objref, sizeof (_oc_IR_ComponentRepository), (char *) &_oc_IR_ComponentRepository, 0, sizeof (IR::ComponentRepository));
+static CORBA::TypeCode _tc_TAO_tc_IR_ComponentRepository (CORBA::tk_objref, sizeof (_oc_IR_ComponentRepository), (char *) &_oc_IR_ComponentRepository, 0, sizeof (IR_ComponentRepository));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ComponentRepository, &_tc_TAO_tc_IR_ComponentRepository)
@@ -14797,10 +14418,10 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_ModuleDef_Proxy_Impl::_TAO_ModuleDef_Proxy_Impl (void)
+_TAO_ModuleDef_Proxy_Impl::_TAO_ModuleDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_ModuleDef_Remote_Proxy_Impl::_TAO_ModuleDef_Remote_Proxy_Impl (void)
+_TAO_ModuleDef_Remote_Proxy_Impl::_TAO_ModuleDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
@@ -14815,37 +14436,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_ModuleDef_Proxy_Broker::_TAO_ModuleDef_Proxy_Broker (void)
+_TAO_ModuleDef_Proxy_Broker::_TAO_ModuleDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ModuleDef_Proxy_Broker::~_TAO_ModuleDef_Proxy_Broker (void)
+_TAO_ModuleDef_Proxy_Broker::~_TAO_ModuleDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ModuleDef_Proxy_Broker * (*IR__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_ModuleDef_Proxy_Broker * (*_TAO_ModuleDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_ModuleDef_Remote_Proxy_Broker *
-IR::_TAO_ModuleDef_Remote_Proxy_Broker::the_TAO_ModuleDef_Remote_Proxy_Broker (void)
+_TAO_ModuleDef_Remote_Proxy_Broker *
+_TAO_ModuleDef_Remote_Proxy_Broker::the_TAO_ModuleDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_ModuleDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_ModuleDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_ModuleDef_Remote_Proxy_Broker::_TAO_ModuleDef_Remote_Proxy_Broker (void)
+_TAO_ModuleDef_Remote_Proxy_Broker::_TAO_ModuleDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ModuleDef_Remote_Proxy_Broker::~_TAO_ModuleDef_Remote_Proxy_Broker (void)
+_TAO_ModuleDef_Remote_Proxy_Broker::~_TAO_ModuleDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ModuleDef_Proxy_Impl&
-IR::_TAO_ModuleDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::ModuleDef *object,
+_TAO_ModuleDef_Proxy_Impl&
+_TAO_ModuleDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_ModuleDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -14861,111 +14482,110 @@
 
 
 // default constructor
-IR::ModuleDef::ModuleDef (int collocated)
+IR_ModuleDef::IR_ModuleDef (int collocated)
 {
   this->IR_ModuleDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::ModuleDef::~ModuleDef (void)
+IR_ModuleDef::~IR_ModuleDef (void)
 {}
 
 void
-IR::ModuleDef::IR_ModuleDef_setup_collocation (int collocated)
+IR_ModuleDef::IR_ModuleDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_ModuleDef_Proxy_Broker_ =
-      ::IR__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_ModuleDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_ModuleDef_Proxy_Broker_ =
-      ::IR::_TAO_ModuleDef_Remote_Proxy_Broker::the_TAO_ModuleDef_Remote_Proxy_Broker ();
+      _TAO_ModuleDef_Remote_Proxy_Broker::the_TAO_ModuleDef_Remote_Proxy_Broker ();
   
   this->IR_Container_setup_collocation (collocated);
-  
   this->IR_Contained_setup_collocation (collocated);
 }
 
-void IR::ModuleDef::_tao_any_destructor (void *x)
+void IR_ModuleDef::_tao_any_destructor (void *x)
 {
-  ModuleDef *tmp = ACE_static_cast (ModuleDef*,x);
+  IR_ModuleDef *tmp = ACE_static_cast (IR_ModuleDef*,x);
   CORBA::release (tmp);
 }
 
-IR::ModuleDef_ptr IR::ModuleDef::_narrow (
+IR_ModuleDef_ptr IR_ModuleDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return ModuleDef::_nil ();
+    return IR_ModuleDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/ModuleDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (ModuleDef::_nil ());
+      ACE_CHECK_RETURN (IR_ModuleDef::_nil ());
       if (is_a == 0)
-        return ModuleDef::_nil ();
+        return IR_ModuleDef::_nil ();
     }
-  return ModuleDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_ModuleDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::ModuleDef_ptr IR::ModuleDef::_unchecked_narrow (
+IR_ModuleDef_ptr IR_ModuleDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return ModuleDef::_nil ();
+    return IR_ModuleDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      ModuleDef_ptr default_proxy = ModuleDef::_nil ();
+      IR_ModuleDef_ptr default_proxy = IR_ModuleDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_ModuleDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::ModuleDef (
+          ::IR_ModuleDef (
             stub,
             1,
             obj->_servant ()),
             
-          ModuleDef::_nil ());
+          IR_ModuleDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::ModuleDef (stub, 0, obj->_servant ()), ModuleDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_ModuleDef (stub, 0, obj->_servant ()), IR_ModuleDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            ModuleDef_ptr,
+            IR_ModuleDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &ModuleDef::_narrow
+                      &IR_ModuleDef::_narrow
                     )
                 )
           );
 }
 
-IR::ModuleDef_ptr
-IR::ModuleDef::_duplicate (ModuleDef_ptr obj)
+IR_ModuleDef_ptr
+IR_ModuleDef::_duplicate (IR_ModuleDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::ModuleDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_ModuleDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/ModuleDef:1.0")) ||
@@ -14978,46 +14598,46 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::ModuleDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_ModuleDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, ModuleDef)::_narrow))
+      &IR_ModuleDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Container)::_narrow))
+      &IR_Container::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Container_ptr,
+            IR_Container_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -15030,25 +14650,23 @@
   return retv;
 }
 
-const char* IR::ModuleDef::_interface_repository_id (void) const
+const char* IR_ModuleDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/ModuleDef:1.0";
 }
 
-
-#if (TAO_HAS_INTERCEPTORS == 1)
-#endif /* TAO_HAS_INTERCEPTORS */
 static const CORBA::Long _oc_IR_ModuleDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   29, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f4d), ACE_NTOHL (0x6f64756c), ACE_NTOHL (0x65446566), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IR/ModuleDef:1.0
-  10, ACE_NTOHL (0x4d6f6475), ACE_NTOHL (0x6c654465), ACE_NTOHL (0x66000000),  // name = ModuleDef
+  10, ACE_NTOHL (0x4d6f6475), ACE_NTOHL (0x6c654465), ACE_NTOHL (0x66000000),  // name = IR_ModuleDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ModuleDef (CORBA::tk_objref, sizeof (_oc_IR_ModuleDef), (char *) &_oc_IR_ModuleDef, 0, sizeof (IR::ModuleDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_ModuleDef (CORBA::tk_objref, sizeof (_oc_IR_ModuleDef), (char *) &_oc_IR_ModuleDef, 0, sizeof (IR_ModuleDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ModuleDef, &_tc_TAO_tc_IR_ModuleDef)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_ModuleDescription[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -15092,31 +14710,31 @@
     0U, // string length
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ModuleDescription (CORBA::tk_struct, sizeof (_oc_IR_ModuleDescription), (char *) &_oc_IR_ModuleDescription, 0, sizeof (IR::ModuleDescription));
+static CORBA::TypeCode _tc_TAO_tc_IR_ModuleDescription (CORBA::tk_struct, sizeof (_oc_IR_ModuleDescription), (char *) &_oc_IR_ModuleDescription, 0, sizeof (IR_ModuleDescription));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ModuleDescription, &_tc_TAO_tc_IR_ModuleDescription)
 TAO_NAMESPACE_END
-void IR::ModuleDescription::_tao_any_destructor (void *x)
+
+void IR_ModuleDescription::_tao_any_destructor (void *x)
 {
-  ModuleDescription *tmp = ACE_static_cast (ModuleDescription*,x);
+  IR_ModuleDescription *tmp = ACE_static_cast (IR_ModuleDescription*,x);
   delete tmp;
 }
 
-
 ///////////////////////////////////////////////////////////////////////
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_ConstantDef_Proxy_Impl::_TAO_ConstantDef_Proxy_Impl (void)
+_TAO_ConstantDef_Proxy_Impl::_TAO_ConstantDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_ConstantDef_Remote_Proxy_Impl::_TAO_ConstantDef_Remote_Proxy_Impl (void)
+_TAO_ConstantDef_Remote_Proxy_Impl::_TAO_ConstantDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-CORBA::TypeCode_ptr IR::_TAO_ConstantDef_Remote_Proxy_Impl::type (
+CORBA::TypeCode_ptr _TAO_ConstantDef_Remote_Proxy_Impl::type (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -15124,16 +14742,13 @@
     CORBA::SystemException
   ))
 {
-  
   CORBA::TypeCode_ptr _tao_retval = CORBA::TypeCode::_nil ();
   CORBA::TypeCode_var _tao_safe_retval (_tao_retval);
   
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_type",
@@ -15154,7 +14769,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_get ri (
+      IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -15276,7 +14891,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::IDLType_ptr IR::_TAO_ConstantDef_Remote_Proxy_Impl::type_def (
+IR_IDLType_ptr _TAO_ConstantDef_Remote_Proxy_Impl::type_def (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -15284,16 +14899,13 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::IDLType_ptr _tao_retval = IR::IDLType::_nil ();
-  IR::IDLType_var _tao_safe_retval (_tao_retval);
-  
+  IR_IDLType_ptr _tao_retval = IR_IDLType::_nil ();
+  IR_IDLType_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_type_def",
@@ -15314,7 +14926,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_get ri (
+      IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -15370,7 +14982,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::IDLType_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_IDLType_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -15436,19 +15048,15 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_ConstantDef_Remote_Proxy_Impl::type_def (
+void _TAO_ConstantDef_Remote_Proxy_Impl::type_def (
     CORBA_Object *_collocated_tao_target_,
-    IR::IDLType_ptr type_def,
+    IR_IDLType_ptr type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -15474,7 +15082,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_set ri (
+      IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_set ri (
         &_tao_call,
         _collocated_tao_target_,
         type_def,
@@ -15588,7 +15196,7 @@
   
 }
 
-CORBA::Any * IR::_TAO_ConstantDef_Remote_Proxy_Impl::value (
+CORBA::Any * _TAO_ConstantDef_Remote_Proxy_Impl::value (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -15596,15 +15204,12 @@
     CORBA::SystemException
   ))
 {
-  
   CORBA::Any *_tao_retval = 0;
   
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   ACE_NEW_RETURN (_tao_retval, CORBA::Any, _tao_retval);
   CORBA::Any_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
@@ -15627,7 +15232,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_get ri (
+      IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -15749,7 +15354,7 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_ConstantDef_Remote_Proxy_Impl::value (
+void _TAO_ConstantDef_Remote_Proxy_Impl::value (
     CORBA_Object *_collocated_tao_target_,
     const CORBA::Any & value,
     CORBA::Environment &ACE_TRY_ENV
@@ -15758,10 +15363,6 @@
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -15787,7 +15388,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_set ri (
+      IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_set ri (
         &_tao_call,
         _collocated_tao_target_,
         value,
@@ -15901,7 +15502,6 @@
   
 }
 
-
 //
 //            End  Base & Remote  Proxy Implemeentation. 
 ///////////////////////////////////////////////////////////////////////
@@ -15911,37 +15511,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_ConstantDef_Proxy_Broker::_TAO_ConstantDef_Proxy_Broker (void)
+_TAO_ConstantDef_Proxy_Broker::_TAO_ConstantDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ConstantDef_Proxy_Broker::~_TAO_ConstantDef_Proxy_Broker (void)
+_TAO_ConstantDef_Proxy_Broker::~_TAO_ConstantDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ConstantDef_Proxy_Broker * (*IR__TAO_ConstantDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_ConstantDef_Proxy_Broker * (*_TAO_ConstantDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_ConstantDef_Remote_Proxy_Broker *
-IR::_TAO_ConstantDef_Remote_Proxy_Broker::the_TAO_ConstantDef_Remote_Proxy_Broker (void)
+_TAO_ConstantDef_Remote_Proxy_Broker *
+_TAO_ConstantDef_Remote_Proxy_Broker::the_TAO_ConstantDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_ConstantDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_ConstantDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_ConstantDef_Remote_Proxy_Broker::_TAO_ConstantDef_Remote_Proxy_Broker (void)
+_TAO_ConstantDef_Remote_Proxy_Broker::_TAO_ConstantDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ConstantDef_Remote_Proxy_Broker::~_TAO_ConstantDef_Remote_Proxy_Broker (void)
+_TAO_ConstantDef_Remote_Proxy_Broker::~_TAO_ConstantDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ConstantDef_Proxy_Impl&
-IR::_TAO_ConstantDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::ConstantDef *object,
+_TAO_ConstantDef_Proxy_Impl&
+_TAO_ConstantDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_ConstantDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -15957,109 +15557,109 @@
 
 
 // default constructor
-IR::ConstantDef::ConstantDef (int collocated)
+IR_ConstantDef::IR_ConstantDef (int collocated)
 {
   this->IR_ConstantDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::ConstantDef::~ConstantDef (void)
+IR_ConstantDef::~IR_ConstantDef (void)
 {}
 
 void
-IR::ConstantDef::IR_ConstantDef_setup_collocation (int collocated)
+IR_ConstantDef::IR_ConstantDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_ConstantDef_Proxy_Broker_ =
-      ::IR__TAO_ConstantDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_ConstantDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_ConstantDef_Proxy_Broker_ =
-      ::IR::_TAO_ConstantDef_Remote_Proxy_Broker::the_TAO_ConstantDef_Remote_Proxy_Broker ();
+      _TAO_ConstantDef_Remote_Proxy_Broker::the_TAO_ConstantDef_Remote_Proxy_Broker ();
   
   this->IR_Contained_setup_collocation (collocated);
 }
 
-void IR::ConstantDef::_tao_any_destructor (void *x)
+void IR_ConstantDef::_tao_any_destructor (void *x)
 {
-  ConstantDef *tmp = ACE_static_cast (ConstantDef*,x);
+  IR_ConstantDef *tmp = ACE_static_cast (IR_ConstantDef*,x);
   CORBA::release (tmp);
 }
 
-IR::ConstantDef_ptr IR::ConstantDef::_narrow (
+IR_ConstantDef_ptr IR_ConstantDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return ConstantDef::_nil ();
+    return IR_ConstantDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/ConstantDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (ConstantDef::_nil ());
+      ACE_CHECK_RETURN (IR_ConstantDef::_nil ());
       if (is_a == 0)
-        return ConstantDef::_nil ();
+        return IR_ConstantDef::_nil ();
     }
-  return ConstantDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_ConstantDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::ConstantDef_ptr IR::ConstantDef::_unchecked_narrow (
+IR_ConstantDef_ptr IR_ConstantDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return ConstantDef::_nil ();
+    return IR_ConstantDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      ConstantDef_ptr default_proxy = ConstantDef::_nil ();
+      IR_ConstantDef_ptr default_proxy = IR_ConstantDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_ConstantDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_ConstantDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::ConstantDef (
+          ::IR_ConstantDef (
             stub,
             1,
             obj->_servant ()),
             
-          ConstantDef::_nil ());
+          IR_ConstantDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::ConstantDef (stub, 0, obj->_servant ()), ConstantDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_ConstantDef (stub, 0, obj->_servant ()), IR_ConstantDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            ConstantDef_ptr,
+            IR_ConstantDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &ConstantDef::_narrow
+                      &IR_ConstantDef::_narrow
                     )
                 )
           );
 }
 
-IR::ConstantDef_ptr
-IR::ConstantDef::_duplicate (ConstantDef_ptr obj)
+IR_ConstantDef_ptr
+IR_ConstantDef::_duplicate (IR_ConstantDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::ConstantDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_ConstantDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/ConstantDef:1.0")) ||
@@ -16071,34 +15671,34 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::ConstantDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_ConstantDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, ConstantDef)::_narrow))
+      &IR_ConstantDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -16111,12 +15711,12 @@
   return retv;
 }
 
-const char* IR::ConstantDef::_interface_repository_id (void) const
+const char* IR_ConstantDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/ConstantDef:1.0";
 }
 
-CORBA::TypeCode_ptr IR::ConstantDef::type (
+CORBA::TypeCode_ptr IR_ConstantDef::type (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -16133,7 +15733,7 @@
     );
 }
 
-IR::IDLType_ptr IR::ConstantDef::type_def (
+IR_IDLType_ptr IR_ConstantDef::type_def (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -16150,8 +15750,8 @@
     );
 }
 
-void IR::ConstantDef::type_def (
-    IR::IDLType_ptr type_def,
+void IR_ConstantDef::type_def (
+    IR_IDLType_ptr type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -16169,7 +15769,7 @@
     );
 }
 
-CORBA::Any * IR::ConstantDef::value (
+CORBA::Any * IR_ConstantDef::value (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -16186,7 +15786,7 @@
     );
 }
 
-void IR::ConstantDef::value (
+void IR_ConstantDef::value (
     const CORBA::Any & value,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -16205,9 +15805,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_get::TAO_ClientRequestInfo_IR_ConstantDef_type_get (
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_get::TAO_ClientRequestInfo_IR_ConstantDef_type_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -16216,7 +15815,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -16228,7 +15827,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -16241,7 +15840,7 @@
 
 
 CORBA::Any * 
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -16257,13 +15856,13 @@
 }
 
 void 
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_get::result (CORBA::TypeCode_ptr result)
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_get::result (CORBA::TypeCode_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_get::TAO_ClientRequestInfo_IR_ConstantDef_type_def_get (
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_get::TAO_ClientRequestInfo_IR_ConstantDef_type_def_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -16272,7 +15871,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -16284,7 +15883,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -16297,7 +15896,7 @@
 
 
 CORBA::Any * 
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -16313,16 +15912,16 @@
 }
 
 void 
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_get::result (IR::IDLType_ptr result)
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_get::result (IR_IDLType_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_set::TAO_ClientRequestInfo_IR_ConstantDef_type_def_set (
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_set::TAO_ClientRequestInfo_IR_ConstantDef_type_def_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    IR::IDLType_ptr type_def,
+    IR_IDLType_ptr type_def,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -16330,7 +15929,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -16350,7 +15949,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -16363,7 +15962,7 @@
 
 
 CORBA::Any * 
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_type_def_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -16375,7 +15974,7 @@
   return result_any;
 }
 
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_get::TAO_ClientRequestInfo_IR_ConstantDef_value_get (
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_get::TAO_ClientRequestInfo_IR_ConstantDef_value_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -16384,7 +15983,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -16396,7 +15995,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -16409,7 +16008,7 @@
 
 
 CORBA::Any * 
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -16425,13 +16024,13 @@
 }
 
 void 
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_get::result (CORBA::Any * result)
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_get::result (CORBA::Any * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_set::TAO_ClientRequestInfo_IR_ConstantDef_value_set (
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_set::TAO_ClientRequestInfo_IR_ConstantDef_value_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const CORBA::Any & value,
@@ -16442,7 +16041,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -16461,7 +16060,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -16474,7 +16073,7 @@
 
 
 CORBA::Any * 
-IR::ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ConstantDef::TAO_ClientRequestInfo_IR_ConstantDef_value_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -16487,17 +16086,19 @@
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_ConstantDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   31, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f43), ACE_NTOHL (0x6f6e7374), ACE_NTOHL (0x616e7444), ACE_NTOHL (0x65663a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/ConstantDef:1.0
-  12, ACE_NTOHL (0x436f6e73), ACE_NTOHL (0x74616e74), ACE_NTOHL (0x44656600),  // name = ConstantDef
+  12, ACE_NTOHL (0x436f6e73), ACE_NTOHL (0x74616e74), ACE_NTOHL (0x44656600),  // name = IR_ConstantDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ConstantDef (CORBA::tk_objref, sizeof (_oc_IR_ConstantDef), (char *) &_oc_IR_ConstantDef, 0, sizeof (IR::ConstantDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_ConstantDef (CORBA::tk_objref, sizeof (_oc_IR_ConstantDef), (char *) &_oc_IR_ConstantDef, 0, sizeof (IR_ConstantDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ConstantDef, &_tc_TAO_tc_IR_ConstantDef)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_ConstantDescription[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -16547,14 +16148,15 @@
   CORBA::tk_any,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ConstantDescription (CORBA::tk_struct, sizeof (_oc_IR_ConstantDescription), (char *) &_oc_IR_ConstantDescription, 0, sizeof (IR::ConstantDescription));
+static CORBA::TypeCode _tc_TAO_tc_IR_ConstantDescription (CORBA::tk_struct, sizeof (_oc_IR_ConstantDescription), (char *) &_oc_IR_ConstantDescription, 0, sizeof (IR_ConstantDescription));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ConstantDescription, &_tc_TAO_tc_IR_ConstantDescription)
 TAO_NAMESPACE_END
-void IR::ConstantDescription::_tao_any_destructor (void *x)
+
+void IR_ConstantDescription::_tao_any_destructor (void *x)
 {
-  ConstantDescription *tmp = ACE_static_cast (ConstantDescription*,x);
+  IR_ConstantDescription *tmp = ACE_static_cast (IR_ConstantDescription*,x);
   delete tmp;
 }
 
@@ -16563,10 +16165,10 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_TypedefDef_Proxy_Impl::_TAO_TypedefDef_Proxy_Impl (void)
+_TAO_TypedefDef_Proxy_Impl::_TAO_TypedefDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_TypedefDef_Remote_Proxy_Impl::_TAO_TypedefDef_Remote_Proxy_Impl (void)
+_TAO_TypedefDef_Remote_Proxy_Impl::_TAO_TypedefDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
@@ -16581,37 +16183,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_TypedefDef_Proxy_Broker::_TAO_TypedefDef_Proxy_Broker (void)
+_TAO_TypedefDef_Proxy_Broker::_TAO_TypedefDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_TypedefDef_Proxy_Broker::~_TAO_TypedefDef_Proxy_Broker (void)
+_TAO_TypedefDef_Proxy_Broker::~_TAO_TypedefDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_TypedefDef_Proxy_Broker * (*IR__TAO_TypedefDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_TypedefDef_Proxy_Broker * (*_TAO_TypedefDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_TypedefDef_Remote_Proxy_Broker *
-IR::_TAO_TypedefDef_Remote_Proxy_Broker::the_TAO_TypedefDef_Remote_Proxy_Broker (void)
+_TAO_TypedefDef_Remote_Proxy_Broker *
+_TAO_TypedefDef_Remote_Proxy_Broker::the_TAO_TypedefDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_TypedefDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_TypedefDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_TypedefDef_Remote_Proxy_Broker::_TAO_TypedefDef_Remote_Proxy_Broker (void)
+_TAO_TypedefDef_Remote_Proxy_Broker::_TAO_TypedefDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_TypedefDef_Remote_Proxy_Broker::~_TAO_TypedefDef_Remote_Proxy_Broker (void)
+_TAO_TypedefDef_Remote_Proxy_Broker::~_TAO_TypedefDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_TypedefDef_Proxy_Impl&
-IR::_TAO_TypedefDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::TypedefDef *object,
+_TAO_TypedefDef_Proxy_Impl&
+_TAO_TypedefDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_TypedefDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -16627,111 +16229,110 @@
 
 
 // default constructor
-IR::TypedefDef::TypedefDef (int collocated)
+IR_TypedefDef::IR_TypedefDef (int collocated)
 {
   this->IR_TypedefDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::TypedefDef::~TypedefDef (void)
+IR_TypedefDef::~IR_TypedefDef (void)
 {}
 
 void
-IR::TypedefDef::IR_TypedefDef_setup_collocation (int collocated)
+IR_TypedefDef::IR_TypedefDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_TypedefDef_Proxy_Broker_ =
-      ::IR__TAO_TypedefDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_TypedefDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_TypedefDef_Proxy_Broker_ =
-      ::IR::_TAO_TypedefDef_Remote_Proxy_Broker::the_TAO_TypedefDef_Remote_Proxy_Broker ();
+      _TAO_TypedefDef_Remote_Proxy_Broker::the_TAO_TypedefDef_Remote_Proxy_Broker ();
   
   this->IR_Contained_setup_collocation (collocated);
-  
   this->IR_IDLType_setup_collocation (collocated);
 }
 
-void IR::TypedefDef::_tao_any_destructor (void *x)
+void IR_TypedefDef::_tao_any_destructor (void *x)
 {
-  TypedefDef *tmp = ACE_static_cast (TypedefDef*,x);
+  IR_TypedefDef *tmp = ACE_static_cast (IR_TypedefDef*,x);
   CORBA::release (tmp);
 }
 
-IR::TypedefDef_ptr IR::TypedefDef::_narrow (
+IR_TypedefDef_ptr IR_TypedefDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return TypedefDef::_nil ();
+    return IR_TypedefDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/TypedefDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (TypedefDef::_nil ());
+      ACE_CHECK_RETURN (IR_TypedefDef::_nil ());
       if (is_a == 0)
-        return TypedefDef::_nil ();
+        return IR_TypedefDef::_nil ();
     }
-  return TypedefDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_TypedefDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::TypedefDef_ptr IR::TypedefDef::_unchecked_narrow (
+IR_TypedefDef_ptr IR_TypedefDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return TypedefDef::_nil ();
+    return IR_TypedefDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      TypedefDef_ptr default_proxy = TypedefDef::_nil ();
+      IR_TypedefDef_ptr default_proxy = IR_TypedefDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_TypedefDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_TypedefDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::TypedefDef (
+          ::IR_TypedefDef (
             stub,
             1,
             obj->_servant ()),
             
-          TypedefDef::_nil ());
+          IR_TypedefDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::TypedefDef (stub, 0, obj->_servant ()), TypedefDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_TypedefDef (stub, 0, obj->_servant ()), IR_TypedefDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            TypedefDef_ptr,
+            IR_TypedefDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &TypedefDef::_narrow
+                      &IR_TypedefDef::_narrow
                     )
                 )
           );
 }
 
-IR::TypedefDef_ptr
-IR::TypedefDef::_duplicate (TypedefDef_ptr obj)
+IR_TypedefDef_ptr
+IR_TypedefDef::_duplicate (IR_TypedefDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::TypedefDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_TypedefDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/TypedefDef:1.0")) ||
@@ -16744,46 +16345,46 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::TypedefDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_TypedefDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, TypedefDef)::_narrow))
+      &IR_TypedefDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, IDLType)::_narrow))
+      &IR_IDLType::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::IDLType_ptr,
+            IR_IDLType_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -16796,25 +16397,23 @@
   return retv;
 }
 
-const char* IR::TypedefDef::_interface_repository_id (void) const
+const char* IR_TypedefDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/TypedefDef:1.0";
 }
 
-
-#if (TAO_HAS_INTERCEPTORS == 1)
-#endif /* TAO_HAS_INTERCEPTORS */
 static const CORBA::Long _oc_IR_TypedefDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   30, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f54), ACE_NTOHL (0x79706564), ACE_NTOHL (0x65664465), ACE_NTOHL (0x663a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/TypedefDef:1.0
-  11, ACE_NTOHL (0x54797065), ACE_NTOHL (0x64656644), ACE_NTOHL (0x65660000),  // name = TypedefDef
+  11, ACE_NTOHL (0x54797065), ACE_NTOHL (0x64656644), ACE_NTOHL (0x65660000),  // name = IR_TypedefDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_TypedefDef (CORBA::tk_objref, sizeof (_oc_IR_TypedefDef), (char *) &_oc_IR_TypedefDef, 0, sizeof (IR::TypedefDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_TypedefDef (CORBA::tk_objref, sizeof (_oc_IR_TypedefDef), (char *) &_oc_IR_TypedefDef, 0, sizeof (IR_TypedefDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_TypedefDef, &_tc_TAO_tc_IR_TypedefDef)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_TypeDescription[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -16861,31 +16460,31 @@
   CORBA::tk_TypeCode,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_TypeDescription (CORBA::tk_struct, sizeof (_oc_IR_TypeDescription), (char *) &_oc_IR_TypeDescription, 0, sizeof (IR::TypeDescription));
+static CORBA::TypeCode _tc_TAO_tc_IR_TypeDescription (CORBA::tk_struct, sizeof (_oc_IR_TypeDescription), (char *) &_oc_IR_TypeDescription, 0, sizeof (IR_TypeDescription));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_TypeDescription, &_tc_TAO_tc_IR_TypeDescription)
 TAO_NAMESPACE_END
-void IR::TypeDescription::_tao_any_destructor (void *x)
+
+void IR_TypeDescription::_tao_any_destructor (void *x)
 {
-  TypeDescription *tmp = ACE_static_cast (TypeDescription*,x);
+  IR_TypeDescription *tmp = ACE_static_cast (IR_TypeDescription*,x);
   delete tmp;
 }
 
-
 ///////////////////////////////////////////////////////////////////////
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_StructDef_Proxy_Impl::_TAO_StructDef_Proxy_Impl (void)
+_TAO_StructDef_Proxy_Impl::_TAO_StructDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_StructDef_Remote_Proxy_Impl::_TAO_StructDef_Remote_Proxy_Impl (void)
+_TAO_StructDef_Remote_Proxy_Impl::_TAO_StructDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-IR::StructMemberSeq * IR::_TAO_StructDef_Remote_Proxy_Impl::members (
+IR_StructMemberSeq * _TAO_StructDef_Remote_Proxy_Impl::members (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -16893,17 +16492,14 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::StructMemberSeq *_tao_retval = 0;
-  
+  IR_StructMemberSeq *_tao_retval = 0;
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
-  ACE_NEW_RETURN (_tao_retval, IR::StructMemberSeq, _tao_retval);
-  IR::StructMemberSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_StructMemberSeq, _tao_retval);
+  IR_StructMemberSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_members",
@@ -16924,7 +16520,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::StructDef::TAO_ClientRequestInfo_IR_StructDef_members_get ri (
+      IR_StructDef::TAO_ClientRequestInfo_IR_StructDef_members_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -16980,7 +16576,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::StructMemberSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_StructMemberSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -17046,19 +16642,15 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_StructDef_Remote_Proxy_Impl::members (
+void _TAO_StructDef_Remote_Proxy_Impl::members (
     CORBA_Object *_collocated_tao_target_,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -17084,7 +16676,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::StructDef::TAO_ClientRequestInfo_IR_StructDef_members_set ri (
+      IR_StructDef::TAO_ClientRequestInfo_IR_StructDef_members_set ri (
         &_tao_call,
         _collocated_tao_target_,
         members,
@@ -17208,37 +16800,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_StructDef_Proxy_Broker::_TAO_StructDef_Proxy_Broker (void)
+_TAO_StructDef_Proxy_Broker::_TAO_StructDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_StructDef_Proxy_Broker::~_TAO_StructDef_Proxy_Broker (void)
+_TAO_StructDef_Proxy_Broker::~_TAO_StructDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_StructDef_Proxy_Broker * (*IR__TAO_StructDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_StructDef_Proxy_Broker * (*_TAO_StructDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_StructDef_Remote_Proxy_Broker *
-IR::_TAO_StructDef_Remote_Proxy_Broker::the_TAO_StructDef_Remote_Proxy_Broker (void)
+_TAO_StructDef_Remote_Proxy_Broker *
+_TAO_StructDef_Remote_Proxy_Broker::the_TAO_StructDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_StructDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_StructDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_StructDef_Remote_Proxy_Broker::_TAO_StructDef_Remote_Proxy_Broker (void)
+_TAO_StructDef_Remote_Proxy_Broker::_TAO_StructDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_StructDef_Remote_Proxy_Broker::~_TAO_StructDef_Remote_Proxy_Broker (void)
+_TAO_StructDef_Remote_Proxy_Broker::~_TAO_StructDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_StructDef_Proxy_Impl&
-IR::_TAO_StructDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::StructDef *object,
+_TAO_StructDef_Proxy_Impl&
+_TAO_StructDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_StructDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -17254,111 +16846,110 @@
 
 
 // default constructor
-IR::StructDef::StructDef (int collocated)
+IR_StructDef::IR_StructDef (int collocated)
 {
   this->IR_StructDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::StructDef::~StructDef (void)
+IR_StructDef::~IR_StructDef (void)
 {}
 
 void
-IR::StructDef::IR_StructDef_setup_collocation (int collocated)
+IR_StructDef::IR_StructDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_StructDef_Proxy_Broker_ =
-      ::IR__TAO_StructDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_StructDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_StructDef_Proxy_Broker_ =
-      ::IR::_TAO_StructDef_Remote_Proxy_Broker::the_TAO_StructDef_Remote_Proxy_Broker ();
+      _TAO_StructDef_Remote_Proxy_Broker::the_TAO_StructDef_Remote_Proxy_Broker ();
   
   this->IR_TypedefDef_setup_collocation (collocated);
-  
   this->IR_Container_setup_collocation (collocated);
 }
 
-void IR::StructDef::_tao_any_destructor (void *x)
+void IR_StructDef::_tao_any_destructor (void *x)
 {
-  StructDef *tmp = ACE_static_cast (StructDef*,x);
+  IR_StructDef *tmp = ACE_static_cast (IR_StructDef*,x);
   CORBA::release (tmp);
 }
 
-IR::StructDef_ptr IR::StructDef::_narrow (
+IR_StructDef_ptr IR_StructDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return StructDef::_nil ();
+    return IR_StructDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/StructDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (StructDef::_nil ());
+      ACE_CHECK_RETURN (IR_StructDef::_nil ());
       if (is_a == 0)
-        return StructDef::_nil ();
+        return IR_StructDef::_nil ();
     }
-  return StructDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_StructDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::StructDef_ptr IR::StructDef::_unchecked_narrow (
+IR_StructDef_ptr IR_StructDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return StructDef::_nil ();
+    return IR_StructDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      StructDef_ptr default_proxy = StructDef::_nil ();
+      IR_StructDef_ptr default_proxy = IR_StructDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_StructDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_StructDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::StructDef (
+          ::IR_StructDef (
             stub,
             1,
             obj->_servant ()),
             
-          StructDef::_nil ());
+          IR_StructDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::StructDef (stub, 0, obj->_servant ()), StructDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_StructDef (stub, 0, obj->_servant ()), IR_StructDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            StructDef_ptr,
+            IR_StructDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &StructDef::_narrow
+                      &IR_StructDef::_narrow
                     )
                 )
           );
 }
 
-IR::StructDef_ptr
-IR::StructDef::_duplicate (StructDef_ptr obj)
+IR_StructDef_ptr
+IR_StructDef::_duplicate (IR_StructDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::StructDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_StructDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/StructDef:1.0")) ||
@@ -17373,70 +16964,70 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::StructDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_StructDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, StructDef)::_narrow))
+      &IR_StructDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, TypedefDef)::_narrow))
+      &IR_TypedefDef::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::TypedefDef_ptr,
+            IR_TypedefDef_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Container)::_narrow))
+      &IR_Container::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Container_ptr,
+            IR_Container_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, IDLType)::_narrow))
+      &IR_IDLType::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::IDLType_ptr,
+            IR_IDLType_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -17449,12 +17040,12 @@
   return retv;
 }
 
-const char* IR::StructDef::_interface_repository_id (void) const
+const char* IR_StructDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/StructDef:1.0";
 }
 
-IR::StructMemberSeq * IR::StructDef::members (
+IR_StructMemberSeq * IR_StructDef::members (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -17471,8 +17062,8 @@
     );
 }
 
-void IR::StructDef::members (
-    const IR::StructMemberSeq & members,
+void IR_StructDef::members (
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -17490,9 +17081,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::StructDef::TAO_ClientRequestInfo_IR_StructDef_members_get::TAO_ClientRequestInfo_IR_StructDef_members_get (
+IR_StructDef::TAO_ClientRequestInfo_IR_StructDef_members_get::TAO_ClientRequestInfo_IR_StructDef_members_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -17501,7 +17091,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::StructDef::TAO_ClientRequestInfo_IR_StructDef_members_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_StructDef::TAO_ClientRequestInfo_IR_StructDef_members_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -17513,7 +17103,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::StructDef::TAO_ClientRequestInfo_IR_StructDef_members_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_StructDef::TAO_ClientRequestInfo_IR_StructDef_members_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -17526,7 +17116,7 @@
 
 
 CORBA::Any * 
-IR::StructDef::TAO_ClientRequestInfo_IR_StructDef_members_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_StructDef::TAO_ClientRequestInfo_IR_StructDef_members_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -17542,16 +17132,16 @@
 }
 
 void 
-IR::StructDef::TAO_ClientRequestInfo_IR_StructDef_members_get::result (IR::StructMemberSeq * result)
+IR_StructDef::TAO_ClientRequestInfo_IR_StructDef_members_get::result (IR_StructMemberSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::StructDef::TAO_ClientRequestInfo_IR_StructDef_members_set::TAO_ClientRequestInfo_IR_StructDef_members_set (
+IR_StructDef::TAO_ClientRequestInfo_IR_StructDef_members_set::TAO_ClientRequestInfo_IR_StructDef_members_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -17559,7 +17149,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::StructDef::TAO_ClientRequestInfo_IR_StructDef_members_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_StructDef::TAO_ClientRequestInfo_IR_StructDef_members_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -17579,7 +17169,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::StructDef::TAO_ClientRequestInfo_IR_StructDef_members_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_StructDef::TAO_ClientRequestInfo_IR_StructDef_members_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -17592,7 +17182,7 @@
 
 
 CORBA::Any * 
-IR::StructDef::TAO_ClientRequestInfo_IR_StructDef_members_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_StructDef::TAO_ClientRequestInfo_IR_StructDef_members_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -17605,13 +17195,14 @@
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_StructDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   29, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f53), ACE_NTOHL (0x74727563), ACE_NTOHL (0x74446566), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IR/StructDef:1.0
-  10, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744465), ACE_NTOHL (0x66000000),  // name = StructDef
+  10, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744465), ACE_NTOHL (0x66000000),  // name = IR_StructDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_StructDef (CORBA::tk_objref, sizeof (_oc_IR_StructDef), (char *) &_oc_IR_StructDef, 0, sizeof (IR::StructDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_StructDef (CORBA::tk_objref, sizeof (_oc_IR_StructDef), (char *) &_oc_IR_StructDef, 0, sizeof (IR_StructDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_StructDef, &_tc_TAO_tc_IR_StructDef)
@@ -17621,15 +17212,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_UnionDef_Proxy_Impl::_TAO_UnionDef_Proxy_Impl (void)
+_TAO_UnionDef_Proxy_Impl::_TAO_UnionDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_UnionDef_Remote_Proxy_Impl::_TAO_UnionDef_Remote_Proxy_Impl (void)
+_TAO_UnionDef_Remote_Proxy_Impl::_TAO_UnionDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-CORBA::TypeCode_ptr IR::_TAO_UnionDef_Remote_Proxy_Impl::discriminator_type (
+CORBA::TypeCode_ptr _TAO_UnionDef_Remote_Proxy_Impl::discriminator_type (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -17637,16 +17228,13 @@
     CORBA::SystemException
   ))
 {
-  
   CORBA::TypeCode_ptr _tao_retval = CORBA::TypeCode::_nil ();
   CORBA::TypeCode_var _tao_safe_retval (_tao_retval);
   
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_discriminator_type",
@@ -17667,7 +17255,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_get ri (
+      IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -17789,7 +17377,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::IDLType_ptr IR::_TAO_UnionDef_Remote_Proxy_Impl::discriminator_type_def (
+IR_IDLType_ptr _TAO_UnionDef_Remote_Proxy_Impl::discriminator_type_def (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -17797,16 +17385,13 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::IDLType_ptr _tao_retval = IR::IDLType::_nil ();
-  IR::IDLType_var _tao_safe_retval (_tao_retval);
-  
+  IR_IDLType_ptr _tao_retval = IR_IDLType::_nil ();
+  IR_IDLType_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_discriminator_type_def",
@@ -17827,7 +17412,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_get ri (
+      IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -17883,7 +17468,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::IDLType_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_IDLType_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -17949,19 +17534,15 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_UnionDef_Remote_Proxy_Impl::discriminator_type_def (
+void _TAO_UnionDef_Remote_Proxy_Impl::discriminator_type_def (
     CORBA_Object *_collocated_tao_target_,
-    IR::IDLType_ptr discriminator_type_def,
+    IR_IDLType_ptr discriminator_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -17987,7 +17568,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_set ri (
+      IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_set ri (
         &_tao_call,
         _collocated_tao_target_,
         discriminator_type_def,
@@ -18101,7 +17682,7 @@
   
 }
 
-IR::UnionMemberSeq * IR::_TAO_UnionDef_Remote_Proxy_Impl::members (
+IR_UnionMemberSeq * _TAO_UnionDef_Remote_Proxy_Impl::members (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -18109,17 +17690,14 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::UnionMemberSeq *_tao_retval = 0;
-  
+  IR_UnionMemberSeq *_tao_retval = 0;
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
-  ACE_NEW_RETURN (_tao_retval, IR::UnionMemberSeq, _tao_retval);
-  IR::UnionMemberSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_UnionMemberSeq, _tao_retval);
+  IR_UnionMemberSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_members",
@@ -18140,7 +17718,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_get ri (
+      IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -18196,7 +17774,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::UnionMemberSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_UnionMemberSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -18262,19 +17840,15 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_UnionDef_Remote_Proxy_Impl::members (
+void _TAO_UnionDef_Remote_Proxy_Impl::members (
     CORBA_Object *_collocated_tao_target_,
-    const IR::UnionMemberSeq & members,
+    const IR_UnionMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -18300,7 +17874,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_set ri (
+      IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_set ri (
         &_tao_call,
         _collocated_tao_target_,
         members,
@@ -18424,37 +17998,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_UnionDef_Proxy_Broker::_TAO_UnionDef_Proxy_Broker (void)
+_TAO_UnionDef_Proxy_Broker::_TAO_UnionDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_UnionDef_Proxy_Broker::~_TAO_UnionDef_Proxy_Broker (void)
+_TAO_UnionDef_Proxy_Broker::~_TAO_UnionDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_UnionDef_Proxy_Broker * (*IR__TAO_UnionDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_UnionDef_Proxy_Broker * (*_TAO_UnionDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_UnionDef_Remote_Proxy_Broker *
-IR::_TAO_UnionDef_Remote_Proxy_Broker::the_TAO_UnionDef_Remote_Proxy_Broker (void)
+_TAO_UnionDef_Remote_Proxy_Broker *
+_TAO_UnionDef_Remote_Proxy_Broker::the_TAO_UnionDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_UnionDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_UnionDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_UnionDef_Remote_Proxy_Broker::_TAO_UnionDef_Remote_Proxy_Broker (void)
+_TAO_UnionDef_Remote_Proxy_Broker::_TAO_UnionDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_UnionDef_Remote_Proxy_Broker::~_TAO_UnionDef_Remote_Proxy_Broker (void)
+_TAO_UnionDef_Remote_Proxy_Broker::~_TAO_UnionDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_UnionDef_Proxy_Impl&
-IR::_TAO_UnionDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::UnionDef *object,
+_TAO_UnionDef_Proxy_Impl&
+_TAO_UnionDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_UnionDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -18470,111 +18044,110 @@
 
 
 // default constructor
-IR::UnionDef::UnionDef (int collocated)
+IR_UnionDef::IR_UnionDef (int collocated)
 {
   this->IR_UnionDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::UnionDef::~UnionDef (void)
+IR_UnionDef::~IR_UnionDef (void)
 {}
 
 void
-IR::UnionDef::IR_UnionDef_setup_collocation (int collocated)
+IR_UnionDef::IR_UnionDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_UnionDef_Proxy_Broker_ =
-      ::IR__TAO_UnionDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_UnionDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_UnionDef_Proxy_Broker_ =
-      ::IR::_TAO_UnionDef_Remote_Proxy_Broker::the_TAO_UnionDef_Remote_Proxy_Broker ();
+      _TAO_UnionDef_Remote_Proxy_Broker::the_TAO_UnionDef_Remote_Proxy_Broker ();
   
   this->IR_TypedefDef_setup_collocation (collocated);
-  
   this->IR_Container_setup_collocation (collocated);
 }
 
-void IR::UnionDef::_tao_any_destructor (void *x)
+void IR_UnionDef::_tao_any_destructor (void *x)
 {
-  UnionDef *tmp = ACE_static_cast (UnionDef*,x);
+  IR_UnionDef *tmp = ACE_static_cast (IR_UnionDef*,x);
   CORBA::release (tmp);
 }
 
-IR::UnionDef_ptr IR::UnionDef::_narrow (
+IR_UnionDef_ptr IR_UnionDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return UnionDef::_nil ();
+    return IR_UnionDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/UnionDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (UnionDef::_nil ());
+      ACE_CHECK_RETURN (IR_UnionDef::_nil ());
       if (is_a == 0)
-        return UnionDef::_nil ();
+        return IR_UnionDef::_nil ();
     }
-  return UnionDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_UnionDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::UnionDef_ptr IR::UnionDef::_unchecked_narrow (
+IR_UnionDef_ptr IR_UnionDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return UnionDef::_nil ();
+    return IR_UnionDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      UnionDef_ptr default_proxy = UnionDef::_nil ();
+      IR_UnionDef_ptr default_proxy = IR_UnionDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_UnionDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_UnionDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::UnionDef (
+          ::IR_UnionDef (
             stub,
             1,
             obj->_servant ()),
             
-          UnionDef::_nil ());
+          IR_UnionDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::UnionDef (stub, 0, obj->_servant ()), UnionDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_UnionDef (stub, 0, obj->_servant ()), IR_UnionDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            UnionDef_ptr,
+            IR_UnionDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &UnionDef::_narrow
+                      &IR_UnionDef::_narrow
                     )
                 )
           );
 }
 
-IR::UnionDef_ptr
-IR::UnionDef::_duplicate (UnionDef_ptr obj)
+IR_UnionDef_ptr
+IR_UnionDef::_duplicate (IR_UnionDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::UnionDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_UnionDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/UnionDef:1.0")) ||
@@ -18589,70 +18162,70 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::UnionDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_UnionDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, UnionDef)::_narrow))
+      &IR_UnionDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, TypedefDef)::_narrow))
+      &IR_TypedefDef::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::TypedefDef_ptr,
+            IR_TypedefDef_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Container)::_narrow))
+      &IR_Container::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Container_ptr,
+            IR_Container_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, IDLType)::_narrow))
+      &IR_IDLType::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::IDLType_ptr,
+            IR_IDLType_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -18665,12 +18238,12 @@
   return retv;
 }
 
-const char* IR::UnionDef::_interface_repository_id (void) const
+const char* IR_UnionDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/UnionDef:1.0";
 }
 
-CORBA::TypeCode_ptr IR::UnionDef::discriminator_type (
+CORBA::TypeCode_ptr IR_UnionDef::discriminator_type (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -18687,7 +18260,7 @@
     );
 }
 
-IR::IDLType_ptr IR::UnionDef::discriminator_type_def (
+IR_IDLType_ptr IR_UnionDef::discriminator_type_def (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -18704,8 +18277,8 @@
     );
 }
 
-void IR::UnionDef::discriminator_type_def (
-    IR::IDLType_ptr discriminator_type_def,
+void IR_UnionDef::discriminator_type_def (
+    IR_IDLType_ptr discriminator_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -18723,7 +18296,7 @@
     );
 }
 
-IR::UnionMemberSeq * IR::UnionDef::members (
+IR_UnionMemberSeq * IR_UnionDef::members (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -18740,8 +18313,8 @@
     );
 }
 
-void IR::UnionDef::members (
-    const IR::UnionMemberSeq & members,
+void IR_UnionDef::members (
+    const IR_UnionMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -18759,9 +18332,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_get::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_get (
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_get::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -18770,7 +18342,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -18782,7 +18354,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -18795,7 +18367,7 @@
 
 
 CORBA::Any * 
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -18811,13 +18383,13 @@
 }
 
 void 
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_get::result (CORBA::TypeCode_ptr result)
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_get::result (CORBA::TypeCode_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_get::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_get (
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_get::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -18826,7 +18398,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -18838,7 +18410,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -18851,7 +18423,7 @@
 
 
 CORBA::Any * 
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -18867,16 +18439,16 @@
 }
 
 void 
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_get::result (IR::IDLType_ptr result)
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_get::result (IR_IDLType_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_set::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_set (
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_set::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    IR::IDLType_ptr discriminator_type_def,
+    IR_IDLType_ptr discriminator_type_def,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -18884,7 +18456,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -18904,7 +18476,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -18917,7 +18489,7 @@
 
 
 CORBA::Any * 
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_discriminator_type_def_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -18929,7 +18501,7 @@
   return result_any;
 }
 
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_get::TAO_ClientRequestInfo_IR_UnionDef_members_get (
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_get::TAO_ClientRequestInfo_IR_UnionDef_members_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -18938,7 +18510,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -18950,7 +18522,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -18963,7 +18535,7 @@
 
 
 CORBA::Any * 
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -18979,16 +18551,16 @@
 }
 
 void 
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_get::result (IR::UnionMemberSeq * result)
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_get::result (IR_UnionMemberSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_set::TAO_ClientRequestInfo_IR_UnionDef_members_set (
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_set::TAO_ClientRequestInfo_IR_UnionDef_members_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    const IR::UnionMemberSeq & members,
+    const IR_UnionMemberSeq & members,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -18996,7 +18568,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -19016,7 +18588,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -19029,7 +18601,7 @@
 
 
 CORBA::Any * 
-IR::UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_UnionDef::TAO_ClientRequestInfo_IR_UnionDef_members_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -19042,13 +18614,14 @@
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_UnionDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   28, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f55), ACE_NTOHL (0x6e696f6e), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/UnionDef:1.0
-  9, ACE_NTOHL (0x556e696f), ACE_NTOHL (0x6e446566), ACE_NTOHL (0x0),  // name = UnionDef
+  9, ACE_NTOHL (0x556e696f), ACE_NTOHL (0x6e446566), ACE_NTOHL (0x0),  // name = IR_UnionDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_UnionDef (CORBA::tk_objref, sizeof (_oc_IR_UnionDef), (char *) &_oc_IR_UnionDef, 0, sizeof (IR::UnionDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_UnionDef (CORBA::tk_objref, sizeof (_oc_IR_UnionDef), (char *) &_oc_IR_UnionDef, 0, sizeof (IR_UnionDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_UnionDef, &_tc_TAO_tc_IR_UnionDef)
@@ -19058,15 +18631,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_EnumDef_Proxy_Impl::_TAO_EnumDef_Proxy_Impl (void)
+_TAO_EnumDef_Proxy_Impl::_TAO_EnumDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_EnumDef_Remote_Proxy_Impl::_TAO_EnumDef_Remote_Proxy_Impl (void)
+_TAO_EnumDef_Remote_Proxy_Impl::_TAO_EnumDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-IR::EnumMemberSeq * IR::_TAO_EnumDef_Remote_Proxy_Impl::members (
+IR_EnumMemberSeq * _TAO_EnumDef_Remote_Proxy_Impl::members (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -19074,17 +18647,14 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::EnumMemberSeq *_tao_retval = 0;
-  
+  IR_EnumMemberSeq *_tao_retval = 0;
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
-  ACE_NEW_RETURN (_tao_retval, IR::EnumMemberSeq, _tao_retval);
-  IR::EnumMemberSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_EnumMemberSeq, _tao_retval);
+  IR_EnumMemberSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_members",
@@ -19105,7 +18675,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_get ri (
+      IR_EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -19161,7 +18731,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::EnumMemberSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_EnumMemberSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -19227,24 +18797,19 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_EnumDef_Remote_Proxy_Impl::members (
+void _TAO_EnumDef_Remote_Proxy_Impl::members (
     CORBA_Object *_collocated_tao_target_,
-    const IR::EnumMemberSeq & members,
+    const IR_EnumMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_members",
@@ -19265,7 +18830,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_set ri (
+      IR_EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_set ri (
         &_tao_call,
         _collocated_tao_target_,
         members,
@@ -19389,37 +18954,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_EnumDef_Proxy_Broker::_TAO_EnumDef_Proxy_Broker (void)
+_TAO_EnumDef_Proxy_Broker::_TAO_EnumDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_EnumDef_Proxy_Broker::~_TAO_EnumDef_Proxy_Broker (void)
+_TAO_EnumDef_Proxy_Broker::~_TAO_EnumDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_EnumDef_Proxy_Broker * (*IR__TAO_EnumDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_EnumDef_Proxy_Broker * (*_TAO_EnumDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_EnumDef_Remote_Proxy_Broker *
-IR::_TAO_EnumDef_Remote_Proxy_Broker::the_TAO_EnumDef_Remote_Proxy_Broker (void)
+_TAO_EnumDef_Remote_Proxy_Broker *
+_TAO_EnumDef_Remote_Proxy_Broker::the_TAO_EnumDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_EnumDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_EnumDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_EnumDef_Remote_Proxy_Broker::_TAO_EnumDef_Remote_Proxy_Broker (void)
+_TAO_EnumDef_Remote_Proxy_Broker::_TAO_EnumDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_EnumDef_Remote_Proxy_Broker::~_TAO_EnumDef_Remote_Proxy_Broker (void)
+_TAO_EnumDef_Remote_Proxy_Broker::~_TAO_EnumDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_EnumDef_Proxy_Impl&
-IR::_TAO_EnumDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::EnumDef *object,
+_TAO_EnumDef_Proxy_Impl&
+_TAO_EnumDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_EnumDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -19435,109 +19000,109 @@
 
 
 // default constructor
-IR::EnumDef::EnumDef (int collocated)
+IR_EnumDef::IR_EnumDef (int collocated)
 {
   this->IR_EnumDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::EnumDef::~EnumDef (void)
+IR_EnumDef::~IR_EnumDef (void)
 {}
 
 void
-IR::EnumDef::IR_EnumDef_setup_collocation (int collocated)
+IR_EnumDef::IR_EnumDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_EnumDef_Proxy_Broker_ =
-      ::IR__TAO_EnumDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_EnumDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_EnumDef_Proxy_Broker_ =
-      ::IR::_TAO_EnumDef_Remote_Proxy_Broker::the_TAO_EnumDef_Remote_Proxy_Broker ();
+      _TAO_EnumDef_Remote_Proxy_Broker::the_TAO_EnumDef_Remote_Proxy_Broker ();
   
   this->IR_TypedefDef_setup_collocation (collocated);
 }
 
-void IR::EnumDef::_tao_any_destructor (void *x)
+void IR_EnumDef::_tao_any_destructor (void *x)
 {
-  EnumDef *tmp = ACE_static_cast (EnumDef*,x);
+  IR_EnumDef *tmp = ACE_static_cast (IR_EnumDef*,x);
   CORBA::release (tmp);
 }
 
-IR::EnumDef_ptr IR::EnumDef::_narrow (
+IR_EnumDef_ptr IR_EnumDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return EnumDef::_nil ();
+    return IR_EnumDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/EnumDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (EnumDef::_nil ());
+      ACE_CHECK_RETURN (IR_EnumDef::_nil ());
       if (is_a == 0)
-        return EnumDef::_nil ();
+        return IR_EnumDef::_nil ();
     }
-  return EnumDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_EnumDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::EnumDef_ptr IR::EnumDef::_unchecked_narrow (
+IR_EnumDef_ptr IR_EnumDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return EnumDef::_nil ();
+    return IR_EnumDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      EnumDef_ptr default_proxy = EnumDef::_nil ();
+      IR_EnumDef_ptr default_proxy = IR_EnumDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_EnumDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_EnumDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::EnumDef (
+          ::IR_EnumDef (
             stub,
             1,
             obj->_servant ()),
             
-          EnumDef::_nil ());
+          IR_EnumDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::EnumDef (stub, 0, obj->_servant ()), EnumDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_EnumDef (stub, 0, obj->_servant ()), IR_EnumDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            EnumDef_ptr,
+            IR_EnumDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &EnumDef::_narrow
+                      &IR_EnumDef::_narrow
                     )
                 )
           );
 }
 
-IR::EnumDef_ptr
-IR::EnumDef::_duplicate (EnumDef_ptr obj)
+IR_EnumDef_ptr
+IR_EnumDef::_duplicate (IR_EnumDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::EnumDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_EnumDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/EnumDef:1.0")) ||
@@ -19551,58 +19116,58 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::EnumDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_EnumDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, EnumDef)::_narrow))
+      &IR_EnumDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, TypedefDef)::_narrow))
+      &IR_TypedefDef::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::TypedefDef_ptr,
+            IR_TypedefDef_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, IDLType)::_narrow))
+      &IR_IDLType::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::IDLType_ptr,
+            IR_IDLType_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -19615,12 +19180,12 @@
   return retv;
 }
 
-const char* IR::EnumDef::_interface_repository_id (void) const
+const char* IR_EnumDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/EnumDef:1.0";
 }
 
-IR::EnumMemberSeq * IR::EnumDef::members (
+IR_EnumMemberSeq * IR_EnumDef::members (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -19637,8 +19202,8 @@
     );
 }
 
-void IR::EnumDef::members (
-    const IR::EnumMemberSeq & members,
+void IR_EnumDef::members (
+    const IR_EnumMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -19656,9 +19221,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_get::TAO_ClientRequestInfo_IR_EnumDef_members_get (
+IR_EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_get::TAO_ClientRequestInfo_IR_EnumDef_members_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -19667,7 +19231,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -19679,7 +19243,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -19692,7 +19256,7 @@
 
 
 CORBA::Any * 
-IR::EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -19708,16 +19272,16 @@
 }
 
 void 
-IR::EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_get::result (IR::EnumMemberSeq * result)
+IR_EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_get::result (IR_EnumMemberSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_set::TAO_ClientRequestInfo_IR_EnumDef_members_set (
+IR_EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_set::TAO_ClientRequestInfo_IR_EnumDef_members_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    const IR::EnumMemberSeq & members,
+    const IR_EnumMemberSeq & members,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -19725,7 +19289,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -19745,7 +19309,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -19758,7 +19322,7 @@
 
 
 CORBA::Any * 
-IR::EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_EnumDef::TAO_ClientRequestInfo_IR_EnumDef_members_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -19771,13 +19335,14 @@
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_EnumDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f45), ACE_NTOHL (0x6e756d44), ACE_NTOHL (0x65663a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/EnumDef:1.0
-  8, ACE_NTOHL (0x456e756d), ACE_NTOHL (0x44656600),  // name = EnumDef
+  8, ACE_NTOHL (0x456e756d), ACE_NTOHL (0x44656600),  // name = IR_EnumDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_EnumDef (CORBA::tk_objref, sizeof (_oc_IR_EnumDef), (char *) &_oc_IR_EnumDef, 0, sizeof (IR::EnumDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_EnumDef (CORBA::tk_objref, sizeof (_oc_IR_EnumDef), (char *) &_oc_IR_EnumDef, 0, sizeof (IR_EnumDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_EnumDef, &_tc_TAO_tc_IR_EnumDef)
@@ -19787,15 +19352,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_AliasDef_Proxy_Impl::_TAO_AliasDef_Proxy_Impl (void)
+_TAO_AliasDef_Proxy_Impl::_TAO_AliasDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_AliasDef_Remote_Proxy_Impl::_TAO_AliasDef_Remote_Proxy_Impl (void)
+_TAO_AliasDef_Remote_Proxy_Impl::_TAO_AliasDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-IR::IDLType_ptr IR::_TAO_AliasDef_Remote_Proxy_Impl::original_type_def (
+IR_IDLType_ptr _TAO_AliasDef_Remote_Proxy_Impl::original_type_def (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -19803,16 +19368,13 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::IDLType_ptr _tao_retval = IR::IDLType::_nil ();
-  IR::IDLType_var _tao_safe_retval (_tao_retval);
-  
+  IR_IDLType_ptr _tao_retval = IR_IDLType::_nil ();
+  IR_IDLType_var _tao_safe_retval (_tao_retval);
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_original_type_def",
@@ -19833,7 +19395,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_get ri (
+      IR_AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -19889,7 +19451,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::IDLType_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_IDLType_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -19955,24 +19517,19 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_AliasDef_Remote_Proxy_Impl::original_type_def (
+void _TAO_AliasDef_Remote_Proxy_Impl::original_type_def (
     CORBA_Object *_collocated_tao_target_,
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_original_type_def",
@@ -19993,7 +19550,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_set ri (
+      IR_AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_set ri (
         &_tao_call,
         _collocated_tao_target_,
         original_type_def,
@@ -20117,37 +19674,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_AliasDef_Proxy_Broker::_TAO_AliasDef_Proxy_Broker (void)
+_TAO_AliasDef_Proxy_Broker::_TAO_AliasDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_AliasDef_Proxy_Broker::~_TAO_AliasDef_Proxy_Broker (void)
+_TAO_AliasDef_Proxy_Broker::~_TAO_AliasDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_AliasDef_Proxy_Broker * (*IR__TAO_AliasDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_AliasDef_Proxy_Broker * (*_TAO_AliasDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_AliasDef_Remote_Proxy_Broker *
-IR::_TAO_AliasDef_Remote_Proxy_Broker::the_TAO_AliasDef_Remote_Proxy_Broker (void)
+_TAO_AliasDef_Remote_Proxy_Broker *
+_TAO_AliasDef_Remote_Proxy_Broker::the_TAO_AliasDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_AliasDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_AliasDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_AliasDef_Remote_Proxy_Broker::_TAO_AliasDef_Remote_Proxy_Broker (void)
+_TAO_AliasDef_Remote_Proxy_Broker::_TAO_AliasDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_AliasDef_Remote_Proxy_Broker::~_TAO_AliasDef_Remote_Proxy_Broker (void)
+_TAO_AliasDef_Remote_Proxy_Broker::~_TAO_AliasDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_AliasDef_Proxy_Impl&
-IR::_TAO_AliasDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::AliasDef *object,
+_TAO_AliasDef_Proxy_Impl&
+_TAO_AliasDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_AliasDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -20163,109 +19720,109 @@
 
 
 // default constructor
-IR::AliasDef::AliasDef (int collocated)
+IR_AliasDef::IR_AliasDef (int collocated)
 {
   this->IR_AliasDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::AliasDef::~AliasDef (void)
+IR_AliasDef::~IR_AliasDef (void)
 {}
 
 void
-IR::AliasDef::IR_AliasDef_setup_collocation (int collocated)
+IR_AliasDef::IR_AliasDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_AliasDef_Proxy_Broker_ =
-      ::IR__TAO_AliasDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_AliasDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_AliasDef_Proxy_Broker_ =
-      ::IR::_TAO_AliasDef_Remote_Proxy_Broker::the_TAO_AliasDef_Remote_Proxy_Broker ();
+      _TAO_AliasDef_Remote_Proxy_Broker::the_TAO_AliasDef_Remote_Proxy_Broker ();
   
   this->IR_TypedefDef_setup_collocation (collocated);
 }
 
-void IR::AliasDef::_tao_any_destructor (void *x)
+void IR_AliasDef::_tao_any_destructor (void *x)
 {
-  AliasDef *tmp = ACE_static_cast (AliasDef*,x);
+  IR_AliasDef *tmp = ACE_static_cast (IR_AliasDef*,x);
   CORBA::release (tmp);
 }
 
-IR::AliasDef_ptr IR::AliasDef::_narrow (
+IR_AliasDef_ptr IR_AliasDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return AliasDef::_nil ();
+    return IR_AliasDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/AliasDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (AliasDef::_nil ());
+      ACE_CHECK_RETURN (IR_AliasDef::_nil ());
       if (is_a == 0)
-        return AliasDef::_nil ();
+        return IR_AliasDef::_nil ();
     }
-  return AliasDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_AliasDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::AliasDef_ptr IR::AliasDef::_unchecked_narrow (
+IR_AliasDef_ptr IR_AliasDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return AliasDef::_nil ();
+    return IR_AliasDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      AliasDef_ptr default_proxy = AliasDef::_nil ();
+      IR_AliasDef_ptr default_proxy = IR_AliasDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_AliasDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_AliasDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::AliasDef (
+          ::IR_AliasDef (
             stub,
             1,
             obj->_servant ()),
             
-          AliasDef::_nil ());
+          IR_AliasDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::AliasDef (stub, 0, obj->_servant ()), AliasDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_AliasDef (stub, 0, obj->_servant ()), IR_AliasDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            AliasDef_ptr,
+            IR_AliasDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &AliasDef::_narrow
+                      &IR_AliasDef::_narrow
                     )
                 )
           );
 }
 
-IR::AliasDef_ptr
-IR::AliasDef::_duplicate (AliasDef_ptr obj)
+IR_AliasDef_ptr
+IR_AliasDef::_duplicate (IR_AliasDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::AliasDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_AliasDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/AliasDef:1.0")) ||
@@ -20279,58 +19836,58 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::AliasDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_AliasDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, AliasDef)::_narrow))
+      &IR_AliasDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, TypedefDef)::_narrow))
+      &IR_TypedefDef::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::TypedefDef_ptr,
+            IR_TypedefDef_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, IDLType)::_narrow))
+      &IR_IDLType::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::IDLType_ptr,
+            IR_IDLType_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -20343,12 +19900,12 @@
   return retv;
 }
 
-const char* IR::AliasDef::_interface_repository_id (void) const
+const char* IR_AliasDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/AliasDef:1.0";
 }
 
-IR::IDLType_ptr IR::AliasDef::original_type_def (
+IR_IDLType_ptr IR_AliasDef::original_type_def (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -20365,8 +19922,8 @@
     );
 }
 
-void IR::AliasDef::original_type_def (
-    IR::IDLType_ptr original_type_def,
+void IR_AliasDef::original_type_def (
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -20384,9 +19941,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_get::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_get (
+IR_AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_get::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -20395,7 +19951,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -20407,7 +19963,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -20420,7 +19976,7 @@
 
 
 CORBA::Any * 
-IR::AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -20436,16 +19992,16 @@
 }
 
 void 
-IR::AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_get::result (IR::IDLType_ptr result)
+IR_AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_get::result (IR_IDLType_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_set::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_set (
+IR_AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_set::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -20453,7 +20009,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -20473,7 +20029,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -20486,7 +20042,7 @@
 
 
 CORBA::Any * 
-IR::AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_AliasDef::TAO_ClientRequestInfo_IR_AliasDef_original_type_def_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -20499,13 +20055,14 @@
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_AliasDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   28, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f41), ACE_NTOHL (0x6c696173), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/AliasDef:1.0
-  9, ACE_NTOHL (0x416c6961), ACE_NTOHL (0x73446566), ACE_NTOHL (0x0),  // name = AliasDef
+  9, ACE_NTOHL (0x416c6961), ACE_NTOHL (0x73446566), ACE_NTOHL (0x0),  // name = IR_AliasDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_AliasDef (CORBA::tk_objref, sizeof (_oc_IR_AliasDef), (char *) &_oc_IR_AliasDef, 0, sizeof (IR::AliasDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_AliasDef (CORBA::tk_objref, sizeof (_oc_IR_AliasDef), (char *) &_oc_IR_AliasDef, 0, sizeof (IR_AliasDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_AliasDef, &_tc_TAO_tc_IR_AliasDef)
@@ -20515,10 +20072,10 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_NativeDef_Proxy_Impl::_TAO_NativeDef_Proxy_Impl (void)
+_TAO_NativeDef_Proxy_Impl::_TAO_NativeDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_NativeDef_Remote_Proxy_Impl::_TAO_NativeDef_Remote_Proxy_Impl (void)
+_TAO_NativeDef_Remote_Proxy_Impl::_TAO_NativeDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
@@ -20533,37 +20090,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_NativeDef_Proxy_Broker::_TAO_NativeDef_Proxy_Broker (void)
+_TAO_NativeDef_Proxy_Broker::_TAO_NativeDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_NativeDef_Proxy_Broker::~_TAO_NativeDef_Proxy_Broker (void)
+_TAO_NativeDef_Proxy_Broker::~_TAO_NativeDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_NativeDef_Proxy_Broker * (*IR__TAO_NativeDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_NativeDef_Proxy_Broker * (*_TAO_NativeDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_NativeDef_Remote_Proxy_Broker *
-IR::_TAO_NativeDef_Remote_Proxy_Broker::the_TAO_NativeDef_Remote_Proxy_Broker (void)
+_TAO_NativeDef_Remote_Proxy_Broker *
+_TAO_NativeDef_Remote_Proxy_Broker::the_TAO_NativeDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_NativeDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_NativeDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_NativeDef_Remote_Proxy_Broker::_TAO_NativeDef_Remote_Proxy_Broker (void)
+_TAO_NativeDef_Remote_Proxy_Broker::_TAO_NativeDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_NativeDef_Remote_Proxy_Broker::~_TAO_NativeDef_Remote_Proxy_Broker (void)
+_TAO_NativeDef_Remote_Proxy_Broker::~_TAO_NativeDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_NativeDef_Proxy_Impl&
-IR::_TAO_NativeDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::NativeDef *object,
+_TAO_NativeDef_Proxy_Impl&
+_TAO_NativeDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_NativeDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -20579,109 +20136,109 @@
 
 
 // default constructor
-IR::NativeDef::NativeDef (int collocated)
+IR_NativeDef::IR_NativeDef (int collocated)
 {
   this->IR_NativeDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::NativeDef::~NativeDef (void)
+IR_NativeDef::~IR_NativeDef (void)
 {}
 
 void
-IR::NativeDef::IR_NativeDef_setup_collocation (int collocated)
+IR_NativeDef::IR_NativeDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_NativeDef_Proxy_Broker_ =
-      ::IR__TAO_NativeDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_NativeDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_NativeDef_Proxy_Broker_ =
-      ::IR::_TAO_NativeDef_Remote_Proxy_Broker::the_TAO_NativeDef_Remote_Proxy_Broker ();
+      _TAO_NativeDef_Remote_Proxy_Broker::the_TAO_NativeDef_Remote_Proxy_Broker ();
   
   this->IR_TypedefDef_setup_collocation (collocated);
 }
 
-void IR::NativeDef::_tao_any_destructor (void *x)
+void IR_NativeDef::_tao_any_destructor (void *x)
 {
-  NativeDef *tmp = ACE_static_cast (NativeDef*,x);
+  IR_NativeDef *tmp = ACE_static_cast (IR_NativeDef*,x);
   CORBA::release (tmp);
 }
 
-IR::NativeDef_ptr IR::NativeDef::_narrow (
+IR_NativeDef_ptr IR_NativeDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return NativeDef::_nil ();
+    return IR_NativeDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/NativeDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (NativeDef::_nil ());
+      ACE_CHECK_RETURN (IR_NativeDef::_nil ());
       if (is_a == 0)
-        return NativeDef::_nil ();
+        return IR_NativeDef::_nil ();
     }
-  return NativeDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_NativeDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::NativeDef_ptr IR::NativeDef::_unchecked_narrow (
+IR_NativeDef_ptr IR_NativeDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return NativeDef::_nil ();
+    return IR_NativeDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      NativeDef_ptr default_proxy = NativeDef::_nil ();
+      IR_NativeDef_ptr default_proxy = IR_NativeDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_NativeDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_NativeDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::NativeDef (
+          ::IR_NativeDef (
             stub,
             1,
             obj->_servant ()),
             
-          NativeDef::_nil ());
+          IR_NativeDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::NativeDef (stub, 0, obj->_servant ()), NativeDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_NativeDef (stub, 0, obj->_servant ()), IR_NativeDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            NativeDef_ptr,
+            IR_NativeDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &NativeDef::_narrow
+                      &IR_NativeDef::_narrow
                     )
                 )
           );
 }
 
-IR::NativeDef_ptr
-IR::NativeDef::_duplicate (NativeDef_ptr obj)
+IR_NativeDef_ptr
+IR_NativeDef::_duplicate (IR_NativeDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::NativeDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_NativeDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/NativeDef:1.0")) ||
@@ -20695,58 +20252,58 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::NativeDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_NativeDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, NativeDef)::_narrow))
+      &IR_NativeDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, TypedefDef)::_narrow))
+      &IR_TypedefDef::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::TypedefDef_ptr,
+            IR_TypedefDef_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, IDLType)::_narrow))
+      &IR_IDLType::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::IDLType_ptr,
+            IR_IDLType_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -20759,21 +20316,18 @@
   return retv;
 }
 
-const char* IR::NativeDef::_interface_repository_id (void) const
+const char* IR_NativeDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/NativeDef:1.0";
 }
 
-
-#if (TAO_HAS_INTERCEPTORS == 1)
-#endif /* TAO_HAS_INTERCEPTORS */
 static const CORBA::Long _oc_IR_NativeDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   29, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f4e), ACE_NTOHL (0x61746976), ACE_NTOHL (0x65446566), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IR/NativeDef:1.0
-  10, ACE_NTOHL (0x4e617469), ACE_NTOHL (0x76654465), ACE_NTOHL (0x66000000),  // name = NativeDef
+  10, ACE_NTOHL (0x4e617469), ACE_NTOHL (0x76654465), ACE_NTOHL (0x66000000),  // name = IR_NativeDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_NativeDef (CORBA::tk_objref, sizeof (_oc_IR_NativeDef), (char *) &_oc_IR_NativeDef, 0, sizeof (IR::NativeDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_NativeDef (CORBA::tk_objref, sizeof (_oc_IR_NativeDef), (char *) &_oc_IR_NativeDef, 0, sizeof (IR_NativeDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_NativeDef, &_tc_TAO_tc_IR_NativeDef)
@@ -20783,15 +20337,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_PrimitiveDef_Proxy_Impl::_TAO_PrimitiveDef_Proxy_Impl (void)
+_TAO_PrimitiveDef_Proxy_Impl::_TAO_PrimitiveDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_PrimitiveDef_Remote_Proxy_Impl::_TAO_PrimitiveDef_Remote_Proxy_Impl (void)
+_TAO_PrimitiveDef_Remote_Proxy_Impl::_TAO_PrimitiveDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-IR::PrimitiveKind IR::_TAO_PrimitiveDef_Remote_Proxy_Impl::kind (
+IR_PrimitiveKind _TAO_PrimitiveDef_Remote_Proxy_Impl::kind (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -20799,15 +20353,12 @@
     CORBA::SystemException
   ))
 {
-  
-  IR::PrimitiveKind _tao_retval = (IR::PrimitiveKind)0;
-  
+  IR_PrimitiveKind _tao_retval = (IR_PrimitiveKind)0;
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), _tao_retval);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_kind",
@@ -20828,7 +20379,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::PrimitiveDef::TAO_ClientRequestInfo_IR_PrimitiveDef_kind_get ri (
+      IR_PrimitiveDef::TAO_ClientRequestInfo_IR_PrimitiveDef_kind_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -20884,7 +20435,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::PrimitiveKind  _tao_retval_info = _tao_retval;
+              IR_PrimitiveKind  _tao_retval_info = _tao_retval;
                ri.result (_tao_retval_info);
             );
           
@@ -20959,37 +20510,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_PrimitiveDef_Proxy_Broker::_TAO_PrimitiveDef_Proxy_Broker (void)
+_TAO_PrimitiveDef_Proxy_Broker::_TAO_PrimitiveDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_PrimitiveDef_Proxy_Broker::~_TAO_PrimitiveDef_Proxy_Broker (void)
+_TAO_PrimitiveDef_Proxy_Broker::~_TAO_PrimitiveDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_PrimitiveDef_Proxy_Broker * (*IR__TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_PrimitiveDef_Proxy_Broker * (*_TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_PrimitiveDef_Remote_Proxy_Broker *
-IR::_TAO_PrimitiveDef_Remote_Proxy_Broker::the_TAO_PrimitiveDef_Remote_Proxy_Broker (void)
+_TAO_PrimitiveDef_Remote_Proxy_Broker *
+_TAO_PrimitiveDef_Remote_Proxy_Broker::the_TAO_PrimitiveDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_PrimitiveDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_PrimitiveDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_PrimitiveDef_Remote_Proxy_Broker::_TAO_PrimitiveDef_Remote_Proxy_Broker (void)
+_TAO_PrimitiveDef_Remote_Proxy_Broker::_TAO_PrimitiveDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_PrimitiveDef_Remote_Proxy_Broker::~_TAO_PrimitiveDef_Remote_Proxy_Broker (void)
+_TAO_PrimitiveDef_Remote_Proxy_Broker::~_TAO_PrimitiveDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_PrimitiveDef_Proxy_Impl&
-IR::_TAO_PrimitiveDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::PrimitiveDef *object,
+_TAO_PrimitiveDef_Proxy_Impl&
+_TAO_PrimitiveDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_PrimitiveDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -21005,109 +20556,109 @@
 
 
 // default constructor
-IR::PrimitiveDef::PrimitiveDef (int collocated)
+IR_PrimitiveDef::IR_PrimitiveDef (int collocated)
 {
   this->IR_PrimitiveDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::PrimitiveDef::~PrimitiveDef (void)
+IR_PrimitiveDef::~IR_PrimitiveDef (void)
 {}
 
 void
-IR::PrimitiveDef::IR_PrimitiveDef_setup_collocation (int collocated)
+IR_PrimitiveDef::IR_PrimitiveDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_PrimitiveDef_Proxy_Broker_ =
-      ::IR__TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_PrimitiveDef_Proxy_Broker_ =
-      ::IR::_TAO_PrimitiveDef_Remote_Proxy_Broker::the_TAO_PrimitiveDef_Remote_Proxy_Broker ();
+      _TAO_PrimitiveDef_Remote_Proxy_Broker::the_TAO_PrimitiveDef_Remote_Proxy_Broker ();
   
   this->IR_IDLType_setup_collocation (collocated);
 }
 
-void IR::PrimitiveDef::_tao_any_destructor (void *x)
+void IR_PrimitiveDef::_tao_any_destructor (void *x)
 {
-  PrimitiveDef *tmp = ACE_static_cast (PrimitiveDef*,x);
+  IR_PrimitiveDef *tmp = ACE_static_cast (IR_PrimitiveDef*,x);
   CORBA::release (tmp);
 }
 
-IR::PrimitiveDef_ptr IR::PrimitiveDef::_narrow (
+IR_PrimitiveDef_ptr IR_PrimitiveDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return PrimitiveDef::_nil ();
+    return IR_PrimitiveDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/PrimitiveDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (PrimitiveDef::_nil ());
+      ACE_CHECK_RETURN (IR_PrimitiveDef::_nil ());
       if (is_a == 0)
-        return PrimitiveDef::_nil ();
+        return IR_PrimitiveDef::_nil ();
     }
-  return PrimitiveDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_PrimitiveDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::PrimitiveDef_ptr IR::PrimitiveDef::_unchecked_narrow (
+IR_PrimitiveDef_ptr IR_PrimitiveDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return PrimitiveDef::_nil ();
+    return IR_PrimitiveDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      PrimitiveDef_ptr default_proxy = PrimitiveDef::_nil ();
+      IR_PrimitiveDef_ptr default_proxy = IR_PrimitiveDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::PrimitiveDef (
+          ::IR_PrimitiveDef (
             stub,
             1,
             obj->_servant ()),
             
-          PrimitiveDef::_nil ());
+          IR_PrimitiveDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::PrimitiveDef (stub, 0, obj->_servant ()), PrimitiveDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_PrimitiveDef (stub, 0, obj->_servant ()), IR_PrimitiveDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            PrimitiveDef_ptr,
+            IR_PrimitiveDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &PrimitiveDef::_narrow
+                      &IR_PrimitiveDef::_narrow
                     )
                 )
           );
 }
 
-IR::PrimitiveDef_ptr
-IR::PrimitiveDef::_duplicate (PrimitiveDef_ptr obj)
+IR_PrimitiveDef_ptr
+IR_PrimitiveDef::_duplicate (IR_PrimitiveDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::PrimitiveDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_PrimitiveDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/PrimitiveDef:1.0")) ||
@@ -21119,34 +20670,34 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::PrimitiveDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_PrimitiveDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, PrimitiveDef)::_narrow))
+      &IR_PrimitiveDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, IDLType)::_narrow))
+      &IR_IDLType::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::IDLType_ptr,
+            IR_IDLType_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -21159,12 +20710,12 @@
   return retv;
 }
 
-const char* IR::PrimitiveDef::_interface_repository_id (void) const
+const char* IR_PrimitiveDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/PrimitiveDef:1.0";
 }
 
-IR::PrimitiveKind IR::PrimitiveDef::kind (
+IR_PrimitiveKind IR_PrimitiveDef::kind (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -21181,9 +20732,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::PrimitiveDef::TAO_ClientRequestInfo_IR_PrimitiveDef_kind_get::TAO_ClientRequestInfo_IR_PrimitiveDef_kind_get (
+IR_PrimitiveDef::TAO_ClientRequestInfo_IR_PrimitiveDef_kind_get::TAO_ClientRequestInfo_IR_PrimitiveDef_kind_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -21192,7 +20742,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::PrimitiveDef::TAO_ClientRequestInfo_IR_PrimitiveDef_kind_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_PrimitiveDef::TAO_ClientRequestInfo_IR_PrimitiveDef_kind_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -21204,7 +20754,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::PrimitiveDef::TAO_ClientRequestInfo_IR_PrimitiveDef_kind_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_PrimitiveDef::TAO_ClientRequestInfo_IR_PrimitiveDef_kind_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -21217,7 +20767,7 @@
 
 
 CORBA::Any * 
-IR::PrimitiveDef::TAO_ClientRequestInfo_IR_PrimitiveDef_kind_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_PrimitiveDef::TAO_ClientRequestInfo_IR_PrimitiveDef_kind_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -21233,20 +20783,21 @@
 }
 
 void 
-IR::PrimitiveDef::TAO_ClientRequestInfo_IR_PrimitiveDef_kind_get::result (IR::PrimitiveKind result)
+IR_PrimitiveDef::TAO_ClientRequestInfo_IR_PrimitiveDef_kind_get::result (IR_PrimitiveKind result)
 {
   // update the result 
   this->_result = result;
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_PrimitiveDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f50), ACE_NTOHL (0x72696d69), ACE_NTOHL (0x74697665), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/PrimitiveDef:1.0
-  13, ACE_NTOHL (0x5072696d), ACE_NTOHL (0x69746976), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = PrimitiveDef
+  13, ACE_NTOHL (0x5072696d), ACE_NTOHL (0x69746976), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = IR_PrimitiveDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_PrimitiveDef (CORBA::tk_objref, sizeof (_oc_IR_PrimitiveDef), (char *) &_oc_IR_PrimitiveDef, 0, sizeof (IR::PrimitiveDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_PrimitiveDef (CORBA::tk_objref, sizeof (_oc_IR_PrimitiveDef), (char *) &_oc_IR_PrimitiveDef, 0, sizeof (IR_PrimitiveDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_PrimitiveDef, &_tc_TAO_tc_IR_PrimitiveDef)
@@ -21256,15 +20807,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_StringDef_Proxy_Impl::_TAO_StringDef_Proxy_Impl (void)
+_TAO_StringDef_Proxy_Impl::_TAO_StringDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_StringDef_Remote_Proxy_Impl::_TAO_StringDef_Remote_Proxy_Impl (void)
+_TAO_StringDef_Remote_Proxy_Impl::_TAO_StringDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-CORBA::ULong IR::_TAO_StringDef_Remote_Proxy_Impl::bound (
+CORBA::ULong _TAO_StringDef_Remote_Proxy_Impl::bound (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -21272,15 +20823,12 @@
     CORBA::SystemException
   ))
 {
-  
   CORBA::ULong _tao_retval = 0;
   
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), _tao_retval);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_bound",
@@ -21301,7 +20849,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_get ri (
+      IR_StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -21422,7 +20970,7 @@
   return _tao_retval;
 }
 
-void IR::_TAO_StringDef_Remote_Proxy_Impl::bound (
+void _TAO_StringDef_Remote_Proxy_Impl::bound (
     CORBA_Object *_collocated_tao_target_,
     CORBA::ULong bound,
     CORBA::Environment &ACE_TRY_ENV
@@ -21431,15 +20979,10 @@
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_bound",
@@ -21460,7 +21003,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_set ri (
+      IR_StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_set ri (
         &_tao_call,
         _collocated_tao_target_,
         bound,
@@ -21584,37 +21127,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_StringDef_Proxy_Broker::_TAO_StringDef_Proxy_Broker (void)
+_TAO_StringDef_Proxy_Broker::_TAO_StringDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_StringDef_Proxy_Broker::~_TAO_StringDef_Proxy_Broker (void)
+_TAO_StringDef_Proxy_Broker::~_TAO_StringDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_StringDef_Proxy_Broker * (*IR__TAO_StringDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_StringDef_Proxy_Broker * (*_TAO_StringDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_StringDef_Remote_Proxy_Broker *
-IR::_TAO_StringDef_Remote_Proxy_Broker::the_TAO_StringDef_Remote_Proxy_Broker (void)
+_TAO_StringDef_Remote_Proxy_Broker *
+_TAO_StringDef_Remote_Proxy_Broker::the_TAO_StringDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_StringDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_StringDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_StringDef_Remote_Proxy_Broker::_TAO_StringDef_Remote_Proxy_Broker (void)
+_TAO_StringDef_Remote_Proxy_Broker::_TAO_StringDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_StringDef_Remote_Proxy_Broker::~_TAO_StringDef_Remote_Proxy_Broker (void)
+_TAO_StringDef_Remote_Proxy_Broker::~_TAO_StringDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_StringDef_Proxy_Impl&
-IR::_TAO_StringDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::StringDef *object,
+_TAO_StringDef_Proxy_Impl&
+_TAO_StringDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_StringDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -21630,109 +21173,109 @@
 
 
 // default constructor
-IR::StringDef::StringDef (int collocated)
+IR_StringDef::IR_StringDef (int collocated)
 {
   this->IR_StringDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::StringDef::~StringDef (void)
+IR_StringDef::~IR_StringDef (void)
 {}
 
 void
-IR::StringDef::IR_StringDef_setup_collocation (int collocated)
+IR_StringDef::IR_StringDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_StringDef_Proxy_Broker_ =
-      ::IR__TAO_StringDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_StringDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_StringDef_Proxy_Broker_ =
-      ::IR::_TAO_StringDef_Remote_Proxy_Broker::the_TAO_StringDef_Remote_Proxy_Broker ();
+      _TAO_StringDef_Remote_Proxy_Broker::the_TAO_StringDef_Remote_Proxy_Broker ();
   
   this->IR_IDLType_setup_collocation (collocated);
 }
 
-void IR::StringDef::_tao_any_destructor (void *x)
+void IR_StringDef::_tao_any_destructor (void *x)
 {
-  StringDef *tmp = ACE_static_cast (StringDef*,x);
+  IR_StringDef *tmp = ACE_static_cast (IR_StringDef*,x);
   CORBA::release (tmp);
 }
 
-IR::StringDef_ptr IR::StringDef::_narrow (
+IR_StringDef_ptr IR_StringDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return StringDef::_nil ();
+    return IR_StringDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/StringDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (StringDef::_nil ());
+      ACE_CHECK_RETURN (IR_StringDef::_nil ());
       if (is_a == 0)
-        return StringDef::_nil ();
+        return IR_StringDef::_nil ();
     }
-  return StringDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_StringDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::StringDef_ptr IR::StringDef::_unchecked_narrow (
+IR_StringDef_ptr IR_StringDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return StringDef::_nil ();
+    return IR_StringDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      StringDef_ptr default_proxy = StringDef::_nil ();
+      IR_StringDef_ptr default_proxy = IR_StringDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_StringDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_StringDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::StringDef (
+          ::IR_StringDef (
             stub,
             1,
             obj->_servant ()),
             
-          StringDef::_nil ());
+          IR_StringDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::StringDef (stub, 0, obj->_servant ()), StringDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_StringDef (stub, 0, obj->_servant ()), IR_StringDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            StringDef_ptr,
+            IR_StringDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &StringDef::_narrow
+                      &IR_StringDef::_narrow
                     )
                 )
           );
 }
 
-IR::StringDef_ptr
-IR::StringDef::_duplicate (StringDef_ptr obj)
+IR_StringDef_ptr
+IR_StringDef::_duplicate (IR_StringDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::StringDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_StringDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/StringDef:1.0")) ||
@@ -21744,34 +21287,34 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::StringDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_StringDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, StringDef)::_narrow))
+      &IR_StringDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, IDLType)::_narrow))
+      &IR_IDLType::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::IDLType_ptr,
+            IR_IDLType_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -21784,12 +21327,12 @@
   return retv;
 }
 
-const char* IR::StringDef::_interface_repository_id (void) const
+const char* IR_StringDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/StringDef:1.0";
 }
 
-CORBA::ULong IR::StringDef::bound (
+CORBA::ULong IR_StringDef::bound (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -21806,7 +21349,7 @@
     );
 }
 
-void IR::StringDef::bound (
+void IR_StringDef::bound (
     CORBA::ULong bound,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -21825,9 +21368,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_get::TAO_ClientRequestInfo_IR_StringDef_bound_get (
+IR_StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_get::TAO_ClientRequestInfo_IR_StringDef_bound_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -21836,7 +21378,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -21848,7 +21390,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -21861,7 +21403,7 @@
 
 
 CORBA::Any * 
-IR::StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -21877,13 +21419,13 @@
 }
 
 void 
-IR::StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_get::result (CORBA::ULong result)
+IR_StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_get::result (CORBA::ULong result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_set::TAO_ClientRequestInfo_IR_StringDef_bound_set (
+IR_StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_set::TAO_ClientRequestInfo_IR_StringDef_bound_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const CORBA::ULong & bound,
@@ -21894,7 +21436,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -21913,7 +21455,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -21926,7 +21468,7 @@
 
 
 CORBA::Any * 
-IR::StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_StringDef::TAO_ClientRequestInfo_IR_StringDef_bound_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -21939,13 +21481,14 @@
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_StringDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   29, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f53), ACE_NTOHL (0x7472696e), ACE_NTOHL (0x67446566), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IR/StringDef:1.0
-  10, ACE_NTOHL (0x53747269), ACE_NTOHL (0x6e674465), ACE_NTOHL (0x66000000),  // name = StringDef
+  10, ACE_NTOHL (0x53747269), ACE_NTOHL (0x6e674465), ACE_NTOHL (0x66000000),  // name = IR_StringDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_StringDef (CORBA::tk_objref, sizeof (_oc_IR_StringDef), (char *) &_oc_IR_StringDef, 0, sizeof (IR::StringDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_StringDef (CORBA::tk_objref, sizeof (_oc_IR_StringDef), (char *) &_oc_IR_StringDef, 0, sizeof (IR_StringDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_StringDef, &_tc_TAO_tc_IR_StringDef)
@@ -21955,15 +21498,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_WstringDef_Proxy_Impl::_TAO_WstringDef_Proxy_Impl (void)
+_TAO_WstringDef_Proxy_Impl::_TAO_WstringDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_WstringDef_Remote_Proxy_Impl::_TAO_WstringDef_Remote_Proxy_Impl (void)
+_TAO_WstringDef_Remote_Proxy_Impl::_TAO_WstringDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-CORBA::ULong IR::_TAO_WstringDef_Remote_Proxy_Impl::bound (
+CORBA::ULong _TAO_WstringDef_Remote_Proxy_Impl::bound (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -21971,15 +21514,12 @@
     CORBA::SystemException
   ))
 {
-  
   CORBA::ULong _tao_retval = 0;
   
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW_RETURN (CORBA::INTERNAL (), _tao_retval);
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_bound",
@@ -22000,7 +21540,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_get ri (
+      IR_WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -22121,7 +21661,7 @@
   return _tao_retval;
 }
 
-void IR::_TAO_WstringDef_Remote_Proxy_Impl::bound (
+void _TAO_WstringDef_Remote_Proxy_Impl::bound (
     CORBA_Object *_collocated_tao_target_,
     CORBA::ULong bound,
     CORBA::Environment &ACE_TRY_ENV
@@ -22130,15 +21670,10 @@
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_bound",
@@ -22159,7 +21694,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_set ri (
+      IR_WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_set ri (
         &_tao_call,
         _collocated_tao_target_,
         bound,
@@ -22283,37 +21818,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_WstringDef_Proxy_Broker::_TAO_WstringDef_Proxy_Broker (void)
+_TAO_WstringDef_Proxy_Broker::_TAO_WstringDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_WstringDef_Proxy_Broker::~_TAO_WstringDef_Proxy_Broker (void)
+_TAO_WstringDef_Proxy_Broker::~_TAO_WstringDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_WstringDef_Proxy_Broker * (*IR__TAO_WstringDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_WstringDef_Proxy_Broker * (*_TAO_WstringDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_WstringDef_Remote_Proxy_Broker *
-IR::_TAO_WstringDef_Remote_Proxy_Broker::the_TAO_WstringDef_Remote_Proxy_Broker (void)
+_TAO_WstringDef_Remote_Proxy_Broker *
+_TAO_WstringDef_Remote_Proxy_Broker::the_TAO_WstringDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_WstringDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_WstringDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_WstringDef_Remote_Proxy_Broker::_TAO_WstringDef_Remote_Proxy_Broker (void)
+_TAO_WstringDef_Remote_Proxy_Broker::_TAO_WstringDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_WstringDef_Remote_Proxy_Broker::~_TAO_WstringDef_Remote_Proxy_Broker (void)
+_TAO_WstringDef_Remote_Proxy_Broker::~_TAO_WstringDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_WstringDef_Proxy_Impl&
-IR::_TAO_WstringDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::WstringDef *object,
+_TAO_WstringDef_Proxy_Impl&
+_TAO_WstringDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_WstringDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -22329,109 +21864,109 @@
 
 
 // default constructor
-IR::WstringDef::WstringDef (int collocated)
+IR_WstringDef::IR_WstringDef (int collocated)
 {
   this->IR_WstringDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::WstringDef::~WstringDef (void)
+IR_WstringDef::~IR_WstringDef (void)
 {}
 
 void
-IR::WstringDef::IR_WstringDef_setup_collocation (int collocated)
+IR_WstringDef::IR_WstringDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_WstringDef_Proxy_Broker_ =
-      ::IR__TAO_WstringDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_WstringDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_WstringDef_Proxy_Broker_ =
-      ::IR::_TAO_WstringDef_Remote_Proxy_Broker::the_TAO_WstringDef_Remote_Proxy_Broker ();
+      _TAO_WstringDef_Remote_Proxy_Broker::the_TAO_WstringDef_Remote_Proxy_Broker ();
   
   this->IR_IDLType_setup_collocation (collocated);
 }
 
-void IR::WstringDef::_tao_any_destructor (void *x)
+void IR_WstringDef::_tao_any_destructor (void *x)
 {
-  WstringDef *tmp = ACE_static_cast (WstringDef*,x);
+  IR_WstringDef *tmp = ACE_static_cast (IR_WstringDef*,x);
   CORBA::release (tmp);
 }
 
-IR::WstringDef_ptr IR::WstringDef::_narrow (
+IR_WstringDef_ptr IR_WstringDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return WstringDef::_nil ();
+    return IR_WstringDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/WstringDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (WstringDef::_nil ());
+      ACE_CHECK_RETURN (IR_WstringDef::_nil ());
       if (is_a == 0)
-        return WstringDef::_nil ();
+        return IR_WstringDef::_nil ();
     }
-  return WstringDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_WstringDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::WstringDef_ptr IR::WstringDef::_unchecked_narrow (
+IR_WstringDef_ptr IR_WstringDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return WstringDef::_nil ();
+    return IR_WstringDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      WstringDef_ptr default_proxy = WstringDef::_nil ();
+      IR_WstringDef_ptr default_proxy = IR_WstringDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_WstringDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_WstringDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::WstringDef (
+          ::IR_WstringDef (
             stub,
             1,
             obj->_servant ()),
             
-          WstringDef::_nil ());
+          IR_WstringDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::WstringDef (stub, 0, obj->_servant ()), WstringDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_WstringDef (stub, 0, obj->_servant ()), IR_WstringDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            WstringDef_ptr,
+            IR_WstringDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &WstringDef::_narrow
+                      &IR_WstringDef::_narrow
                     )
                 )
           );
 }
 
-IR::WstringDef_ptr
-IR::WstringDef::_duplicate (WstringDef_ptr obj)
+IR_WstringDef_ptr
+IR_WstringDef::_duplicate (IR_WstringDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::WstringDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_WstringDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/WstringDef:1.0")) ||
@@ -22443,34 +21978,34 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::WstringDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_WstringDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, WstringDef)::_narrow))
+      &IR_WstringDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, IDLType)::_narrow))
+      &IR_IDLType::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::IDLType_ptr,
+            IR_IDLType_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -22483,12 +22018,12 @@
   return retv;
 }
 
-const char* IR::WstringDef::_interface_repository_id (void) const
+const char* IR_WstringDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/WstringDef:1.0";
 }
 
-CORBA::ULong IR::WstringDef::bound (
+CORBA::ULong IR_WstringDef::bound (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -22505,7 +22040,7 @@
     );
 }
 
-void IR::WstringDef::bound (
+void IR_WstringDef::bound (
     CORBA::ULong bound,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -22524,9 +22059,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_get::TAO_ClientRequestInfo_IR_WstringDef_bound_get (
+IR_WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_get::TAO_ClientRequestInfo_IR_WstringDef_bound_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -22535,7 +22069,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -22547,7 +22081,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -22560,7 +22094,7 @@
 
 
 CORBA::Any * 
-IR::WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -22576,13 +22110,13 @@
 }
 
 void 
-IR::WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_get::result (CORBA::ULong result)
+IR_WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_get::result (CORBA::ULong result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_set::TAO_ClientRequestInfo_IR_WstringDef_bound_set (
+IR_WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_set::TAO_ClientRequestInfo_IR_WstringDef_bound_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const CORBA::ULong & bound,
@@ -22593,7 +22127,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -22612,7 +22146,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -22625,7 +22159,7 @@
 
 
 CORBA::Any * 
-IR::WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_WstringDef::TAO_ClientRequestInfo_IR_WstringDef_bound_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -22638,13 +22172,14 @@
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_WstringDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   30, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f57), ACE_NTOHL (0x73747269), ACE_NTOHL (0x6e674465), ACE_NTOHL (0x663a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/WstringDef:1.0
-  11, ACE_NTOHL (0x57737472), ACE_NTOHL (0x696e6744), ACE_NTOHL (0x65660000),  // name = WstringDef
+  11, ACE_NTOHL (0x57737472), ACE_NTOHL (0x696e6744), ACE_NTOHL (0x65660000),  // name = IR_WstringDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_WstringDef (CORBA::tk_objref, sizeof (_oc_IR_WstringDef), (char *) &_oc_IR_WstringDef, 0, sizeof (IR::WstringDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_WstringDef (CORBA::tk_objref, sizeof (_oc_IR_WstringDef), (char *) &_oc_IR_WstringDef, 0, sizeof (IR_WstringDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_WstringDef, &_tc_TAO_tc_IR_WstringDef)
@@ -22654,15 +22189,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_FixedDef_Proxy_Impl::_TAO_FixedDef_Proxy_Impl (void)
+_TAO_FixedDef_Proxy_Impl::_TAO_FixedDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_FixedDef_Remote_Proxy_Impl::_TAO_FixedDef_Remote_Proxy_Impl (void)
+_TAO_FixedDef_Remote_Proxy_Impl::_TAO_FixedDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-CORBA::UShort IR::_TAO_FixedDef_Remote_Proxy_Impl::digits (
+CORBA::UShort _TAO_FixedDef_Remote_Proxy_Impl::digits (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -22699,7 +22234,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_get ri (
+      IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -22820,7 +22355,7 @@
   return _tao_retval;
 }
 
-void IR::_TAO_FixedDef_Remote_Proxy_Impl::digits (
+void _TAO_FixedDef_Remote_Proxy_Impl::digits (
     CORBA_Object *_collocated_tao_target_,
     CORBA::UShort digits,
     CORBA::Environment &ACE_TRY_ENV
@@ -22829,15 +22364,10 @@
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_digits",
@@ -22858,7 +22388,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_set ri (
+      IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_set ri (
         &_tao_call,
         _collocated_tao_target_,
         digits,
@@ -22972,7 +22502,7 @@
   
 }
 
-CORBA::Short IR::_TAO_FixedDef_Remote_Proxy_Impl::scale (
+CORBA::Short _TAO_FixedDef_Remote_Proxy_Impl::scale (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -23009,7 +22539,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_get ri (
+      IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -23130,7 +22660,7 @@
   return _tao_retval;
 }
 
-void IR::_TAO_FixedDef_Remote_Proxy_Impl::scale (
+void _TAO_FixedDef_Remote_Proxy_Impl::scale (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Short scale,
     CORBA::Environment &ACE_TRY_ENV
@@ -23139,15 +22669,10 @@
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_scale",
@@ -23168,7 +22693,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_set ri (
+      IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_set ri (
         &_tao_call,
         _collocated_tao_target_,
         scale,
@@ -23292,37 +22817,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_FixedDef_Proxy_Broker::_TAO_FixedDef_Proxy_Broker (void)
+_TAO_FixedDef_Proxy_Broker::_TAO_FixedDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_FixedDef_Proxy_Broker::~_TAO_FixedDef_Proxy_Broker (void)
+_TAO_FixedDef_Proxy_Broker::~_TAO_FixedDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_FixedDef_Proxy_Broker * (*IR__TAO_FixedDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_FixedDef_Proxy_Broker * (*_TAO_FixedDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_FixedDef_Remote_Proxy_Broker *
-IR::_TAO_FixedDef_Remote_Proxy_Broker::the_TAO_FixedDef_Remote_Proxy_Broker (void)
+_TAO_FixedDef_Remote_Proxy_Broker *
+_TAO_FixedDef_Remote_Proxy_Broker::the_TAO_FixedDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_FixedDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_FixedDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_FixedDef_Remote_Proxy_Broker::_TAO_FixedDef_Remote_Proxy_Broker (void)
+_TAO_FixedDef_Remote_Proxy_Broker::_TAO_FixedDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_FixedDef_Remote_Proxy_Broker::~_TAO_FixedDef_Remote_Proxy_Broker (void)
+_TAO_FixedDef_Remote_Proxy_Broker::~_TAO_FixedDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_FixedDef_Proxy_Impl&
-IR::_TAO_FixedDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::FixedDef *object,
+_TAO_FixedDef_Proxy_Impl&
+_TAO_FixedDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_FixedDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -23338,109 +22863,109 @@
 
 
 // default constructor
-IR::FixedDef::FixedDef (int collocated)
+IR_FixedDef::IR_FixedDef (int collocated)
 {
   this->IR_FixedDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::FixedDef::~FixedDef (void)
+IR_FixedDef::~IR_FixedDef (void)
 {}
 
 void
-IR::FixedDef::IR_FixedDef_setup_collocation (int collocated)
+IR_FixedDef::IR_FixedDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_FixedDef_Proxy_Broker_ =
-      ::IR__TAO_FixedDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_FixedDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_FixedDef_Proxy_Broker_ =
-      ::IR::_TAO_FixedDef_Remote_Proxy_Broker::the_TAO_FixedDef_Remote_Proxy_Broker ();
+      _TAO_FixedDef_Remote_Proxy_Broker::the_TAO_FixedDef_Remote_Proxy_Broker ();
   
   this->IR_IDLType_setup_collocation (collocated);
 }
 
-void IR::FixedDef::_tao_any_destructor (void *x)
+void IR_FixedDef::_tao_any_destructor (void *x)
 {
-  FixedDef *tmp = ACE_static_cast (FixedDef*,x);
+  IR_FixedDef *tmp = ACE_static_cast (IR_FixedDef*,x);
   CORBA::release (tmp);
 }
 
-IR::FixedDef_ptr IR::FixedDef::_narrow (
+IR_FixedDef_ptr IR_FixedDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return FixedDef::_nil ();
+    return IR_FixedDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/FixedDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (FixedDef::_nil ());
+      ACE_CHECK_RETURN (IR_FixedDef::_nil ());
       if (is_a == 0)
-        return FixedDef::_nil ();
+        return IR_FixedDef::_nil ();
     }
-  return FixedDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_FixedDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::FixedDef_ptr IR::FixedDef::_unchecked_narrow (
+IR_FixedDef_ptr IR_FixedDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return FixedDef::_nil ();
+    return IR_FixedDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      FixedDef_ptr default_proxy = FixedDef::_nil ();
+      IR_FixedDef_ptr default_proxy = IR_FixedDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_FixedDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_FixedDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::FixedDef (
+          ::IR_FixedDef (
             stub,
             1,
             obj->_servant ()),
             
-          FixedDef::_nil ());
+          IR_FixedDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::FixedDef (stub, 0, obj->_servant ()), FixedDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_FixedDef (stub, 0, obj->_servant ()), IR_FixedDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            FixedDef_ptr,
+            IR_FixedDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &FixedDef::_narrow
+                      &IR_FixedDef::_narrow
                     )
                 )
           );
 }
 
-IR::FixedDef_ptr
-IR::FixedDef::_duplicate (FixedDef_ptr obj)
+IR_FixedDef_ptr
+IR_FixedDef::_duplicate (IR_FixedDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::FixedDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_FixedDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/FixedDef:1.0")) ||
@@ -23452,34 +22977,34 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::FixedDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_FixedDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, FixedDef)::_narrow))
+      &IR_FixedDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, IDLType)::_narrow))
+      &IR_IDLType::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::IDLType_ptr,
+            IR_IDLType_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -23492,12 +23017,12 @@
   return retv;
 }
 
-const char* IR::FixedDef::_interface_repository_id (void) const
+const char* IR_FixedDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/FixedDef:1.0";
 }
 
-CORBA::UShort IR::FixedDef::digits (
+CORBA::UShort IR_FixedDef::digits (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -23514,7 +23039,7 @@
     );
 }
 
-void IR::FixedDef::digits (
+void IR_FixedDef::digits (
     CORBA::UShort digits,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -23533,7 +23058,7 @@
     );
 }
 
-CORBA::Short IR::FixedDef::scale (
+CORBA::Short IR_FixedDef::scale (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -23550,7 +23075,7 @@
     );
 }
 
-void IR::FixedDef::scale (
+void IR_FixedDef::scale (
     CORBA::Short scale,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -23569,9 +23094,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_get::TAO_ClientRequestInfo_IR_FixedDef_digits_get (
+IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_get::TAO_ClientRequestInfo_IR_FixedDef_digits_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -23580,7 +23104,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -23592,7 +23116,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -23605,7 +23129,7 @@
 
 
 CORBA::Any * 
-IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -23621,13 +23145,13 @@
 }
 
 void 
-IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_get::result (CORBA::UShort result)
+IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_get::result (CORBA::UShort result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_set::TAO_ClientRequestInfo_IR_FixedDef_digits_set (
+IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_set::TAO_ClientRequestInfo_IR_FixedDef_digits_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const CORBA::UShort & digits,
@@ -23638,7 +23162,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -23657,7 +23181,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -23670,7 +23194,7 @@
 
 
 CORBA::Any * 
-IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_digits_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -23682,7 +23206,7 @@
   return result_any;
 }
 
-IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_get::TAO_ClientRequestInfo_IR_FixedDef_scale_get (
+IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_get::TAO_ClientRequestInfo_IR_FixedDef_scale_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -23691,7 +23215,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -23703,7 +23227,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -23716,7 +23240,7 @@
 
 
 CORBA::Any * 
-IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -23732,13 +23256,13 @@
 }
 
 void 
-IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_get::result (CORBA::Short result)
+IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_get::result (CORBA::Short result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_set::TAO_ClientRequestInfo_IR_FixedDef_scale_set (
+IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_set::TAO_ClientRequestInfo_IR_FixedDef_scale_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const CORBA::Short & scale,
@@ -23749,7 +23273,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -23768,7 +23292,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -23781,7 +23305,7 @@
 
 
 CORBA::Any * 
-IR::FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_FixedDef::TAO_ClientRequestInfo_IR_FixedDef_scale_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -23794,13 +23318,14 @@
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_FixedDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   28, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f46), ACE_NTOHL (0x69786564), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/FixedDef:1.0
-  9, ACE_NTOHL (0x46697865), ACE_NTOHL (0x64446566), ACE_NTOHL (0x0),  // name = FixedDef
+  9, ACE_NTOHL (0x46697865), ACE_NTOHL (0x64446566), ACE_NTOHL (0x0),  // name = IR_FixedDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_FixedDef (CORBA::tk_objref, sizeof (_oc_IR_FixedDef), (char *) &_oc_IR_FixedDef, 0, sizeof (IR::FixedDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_FixedDef (CORBA::tk_objref, sizeof (_oc_IR_FixedDef), (char *) &_oc_IR_FixedDef, 0, sizeof (IR_FixedDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_FixedDef, &_tc_TAO_tc_IR_FixedDef)
@@ -23810,15 +23335,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_SequenceDef_Proxy_Impl::_TAO_SequenceDef_Proxy_Impl (void)
+_TAO_SequenceDef_Proxy_Impl::_TAO_SequenceDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_SequenceDef_Remote_Proxy_Impl::_TAO_SequenceDef_Remote_Proxy_Impl (void)
+_TAO_SequenceDef_Remote_Proxy_Impl::_TAO_SequenceDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-CORBA::ULong IR::_TAO_SequenceDef_Remote_Proxy_Impl::bound (
+CORBA::ULong _TAO_SequenceDef_Remote_Proxy_Impl::bound (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -23855,7 +23380,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_get ri (
+      IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -23976,7 +23501,7 @@
   return _tao_retval;
 }
 
-void IR::_TAO_SequenceDef_Remote_Proxy_Impl::bound (
+void _TAO_SequenceDef_Remote_Proxy_Impl::bound (
     CORBA_Object *_collocated_tao_target_,
     CORBA::ULong bound,
     CORBA::Environment &ACE_TRY_ENV
@@ -23985,15 +23510,10 @@
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_bound",
@@ -24014,7 +23534,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_set ri (
+      IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_set ri (
         &_tao_call,
         _collocated_tao_target_,
         bound,
@@ -24128,7 +23648,7 @@
   
 }
 
-CORBA::TypeCode_ptr IR::_TAO_SequenceDef_Remote_Proxy_Impl::element_type (
+CORBA::TypeCode_ptr _TAO_SequenceDef_Remote_Proxy_Impl::element_type (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -24166,7 +23686,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_get ri (
+      IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -24288,7 +23808,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::IDLType_ptr IR::_TAO_SequenceDef_Remote_Proxy_Impl::element_type_def (
+IR_IDLType_ptr _TAO_SequenceDef_Remote_Proxy_Impl::element_type_def (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -24297,8 +23817,8 @@
   ))
 {
   
-  IR::IDLType_ptr _tao_retval = IR::IDLType::_nil ();
-  IR::IDLType_var _tao_safe_retval (_tao_retval);
+  IR_IDLType_ptr _tao_retval = IR_IDLType::_nil ();
+  IR_IDLType_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -24326,7 +23846,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_get ri (
+      IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -24382,7 +23902,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::IDLType_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_IDLType_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -24448,24 +23968,19 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_SequenceDef_Remote_Proxy_Impl::element_type_def (
+void _TAO_SequenceDef_Remote_Proxy_Impl::element_type_def (
     CORBA_Object *_collocated_tao_target_,
-    IR::IDLType_ptr element_type_def,
+    IR_IDLType_ptr element_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_element_type_def",
@@ -24486,7 +24001,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_set ri (
+      IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_set ri (
         &_tao_call,
         _collocated_tao_target_,
         element_type_def,
@@ -24610,37 +24125,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_SequenceDef_Proxy_Broker::_TAO_SequenceDef_Proxy_Broker (void)
+_TAO_SequenceDef_Proxy_Broker::_TAO_SequenceDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_SequenceDef_Proxy_Broker::~_TAO_SequenceDef_Proxy_Broker (void)
+_TAO_SequenceDef_Proxy_Broker::~_TAO_SequenceDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_SequenceDef_Proxy_Broker * (*IR__TAO_SequenceDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_SequenceDef_Proxy_Broker * (*_TAO_SequenceDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_SequenceDef_Remote_Proxy_Broker *
-IR::_TAO_SequenceDef_Remote_Proxy_Broker::the_TAO_SequenceDef_Remote_Proxy_Broker (void)
+_TAO_SequenceDef_Remote_Proxy_Broker *
+_TAO_SequenceDef_Remote_Proxy_Broker::the_TAO_SequenceDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_SequenceDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_SequenceDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_SequenceDef_Remote_Proxy_Broker::_TAO_SequenceDef_Remote_Proxy_Broker (void)
+_TAO_SequenceDef_Remote_Proxy_Broker::_TAO_SequenceDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_SequenceDef_Remote_Proxy_Broker::~_TAO_SequenceDef_Remote_Proxy_Broker (void)
+_TAO_SequenceDef_Remote_Proxy_Broker::~_TAO_SequenceDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_SequenceDef_Proxy_Impl&
-IR::_TAO_SequenceDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::SequenceDef *object,
+_TAO_SequenceDef_Proxy_Impl&
+_TAO_SequenceDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_SequenceDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -24656,109 +24171,109 @@
 
 
 // default constructor
-IR::SequenceDef::SequenceDef (int collocated)
+IR_SequenceDef::IR_SequenceDef (int collocated)
 {
   this->IR_SequenceDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::SequenceDef::~SequenceDef (void)
+IR_SequenceDef::~IR_SequenceDef (void)
 {}
 
 void
-IR::SequenceDef::IR_SequenceDef_setup_collocation (int collocated)
+IR_SequenceDef::IR_SequenceDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_SequenceDef_Proxy_Broker_ =
-      ::IR__TAO_SequenceDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_SequenceDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_SequenceDef_Proxy_Broker_ =
-      ::IR::_TAO_SequenceDef_Remote_Proxy_Broker::the_TAO_SequenceDef_Remote_Proxy_Broker ();
+      _TAO_SequenceDef_Remote_Proxy_Broker::the_TAO_SequenceDef_Remote_Proxy_Broker ();
   
   this->IR_IDLType_setup_collocation (collocated);
 }
 
-void IR::SequenceDef::_tao_any_destructor (void *x)
+void IR_SequenceDef::_tao_any_destructor (void *x)
 {
-  SequenceDef *tmp = ACE_static_cast (SequenceDef*,x);
+  IR_SequenceDef *tmp = ACE_static_cast (IR_SequenceDef*,x);
   CORBA::release (tmp);
 }
 
-IR::SequenceDef_ptr IR::SequenceDef::_narrow (
+IR_SequenceDef_ptr IR_SequenceDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return SequenceDef::_nil ();
+    return IR_SequenceDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/SequenceDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (SequenceDef::_nil ());
+      ACE_CHECK_RETURN (IR_SequenceDef::_nil ());
       if (is_a == 0)
-        return SequenceDef::_nil ();
+        return IR_SequenceDef::_nil ();
     }
-  return SequenceDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_SequenceDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::SequenceDef_ptr IR::SequenceDef::_unchecked_narrow (
+IR_SequenceDef_ptr IR_SequenceDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return SequenceDef::_nil ();
+    return IR_SequenceDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      SequenceDef_ptr default_proxy = SequenceDef::_nil ();
+      IR_SequenceDef_ptr default_proxy = IR_SequenceDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_SequenceDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_SequenceDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::SequenceDef (
+          ::IR_SequenceDef (
             stub,
             1,
             obj->_servant ()),
             
-          SequenceDef::_nil ());
+          IR_SequenceDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::SequenceDef (stub, 0, obj->_servant ()), SequenceDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_SequenceDef (stub, 0, obj->_servant ()), IR_SequenceDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            SequenceDef_ptr,
+            IR_SequenceDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &SequenceDef::_narrow
+                      &IR_SequenceDef::_narrow
                     )
                 )
           );
 }
 
-IR::SequenceDef_ptr
-IR::SequenceDef::_duplicate (SequenceDef_ptr obj)
+IR_SequenceDef_ptr
+IR_SequenceDef::_duplicate (IR_SequenceDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::SequenceDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_SequenceDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/SequenceDef:1.0")) ||
@@ -24770,34 +24285,34 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::SequenceDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_SequenceDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, SequenceDef)::_narrow))
+      &IR_SequenceDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, IDLType)::_narrow))
+      &IR_IDLType::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::IDLType_ptr,
+            IR_IDLType_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -24810,12 +24325,12 @@
   return retv;
 }
 
-const char* IR::SequenceDef::_interface_repository_id (void) const
+const char* IR_SequenceDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/SequenceDef:1.0";
 }
 
-CORBA::ULong IR::SequenceDef::bound (
+CORBA::ULong IR_SequenceDef::bound (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -24832,7 +24347,7 @@
     );
 }
 
-void IR::SequenceDef::bound (
+void IR_SequenceDef::bound (
     CORBA::ULong bound,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -24851,7 +24366,7 @@
     );
 }
 
-CORBA::TypeCode_ptr IR::SequenceDef::element_type (
+CORBA::TypeCode_ptr IR_SequenceDef::element_type (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -24868,7 +24383,7 @@
     );
 }
 
-IR::IDLType_ptr IR::SequenceDef::element_type_def (
+IR_IDLType_ptr IR_SequenceDef::element_type_def (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -24885,8 +24400,8 @@
     );
 }
 
-void IR::SequenceDef::element_type_def (
-    IR::IDLType_ptr element_type_def,
+void IR_SequenceDef::element_type_def (
+    IR_IDLType_ptr element_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -24904,9 +24419,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_get::TAO_ClientRequestInfo_IR_SequenceDef_bound_get (
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_get::TAO_ClientRequestInfo_IR_SequenceDef_bound_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -24915,7 +24429,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -24927,7 +24441,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -24940,7 +24454,7 @@
 
 
 CORBA::Any * 
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -24956,13 +24470,13 @@
 }
 
 void 
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_get::result (CORBA::ULong result)
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_get::result (CORBA::ULong result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_set::TAO_ClientRequestInfo_IR_SequenceDef_bound_set (
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_set::TAO_ClientRequestInfo_IR_SequenceDef_bound_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const CORBA::ULong & bound,
@@ -24973,7 +24487,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -24992,7 +24506,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -25005,7 +24519,7 @@
 
 
 CORBA::Any * 
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_bound_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -25017,7 +24531,7 @@
   return result_any;
 }
 
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_get::TAO_ClientRequestInfo_IR_SequenceDef_element_type_get (
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_get::TAO_ClientRequestInfo_IR_SequenceDef_element_type_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -25026,7 +24540,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -25038,7 +24552,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -25051,7 +24565,7 @@
 
 
 CORBA::Any * 
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -25067,13 +24581,13 @@
 }
 
 void 
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_get::result (CORBA::TypeCode_ptr result)
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_get::result (CORBA::TypeCode_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_get::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_get (
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_get::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -25082,7 +24596,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -25094,7 +24608,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -25107,7 +24621,7 @@
 
 
 CORBA::Any * 
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -25123,16 +24637,16 @@
 }
 
 void 
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_get::result (IR::IDLType_ptr result)
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_get::result (IR_IDLType_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_set::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_set (
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_set::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    IR::IDLType_ptr element_type_def,
+    IR_IDLType_ptr element_type_def,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -25140,7 +24654,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -25160,7 +24674,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -25173,7 +24687,7 @@
 
 
 CORBA::Any * 
-IR::SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_SequenceDef::TAO_ClientRequestInfo_IR_SequenceDef_element_type_def_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -25186,13 +24700,14 @@
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_SequenceDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   31, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f53), ACE_NTOHL (0x65717565), ACE_NTOHL (0x6e636544), ACE_NTOHL (0x65663a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/SequenceDef:1.0
-  12, ACE_NTOHL (0x53657175), ACE_NTOHL (0x656e6365), ACE_NTOHL (0x44656600),  // name = SequenceDef
+  12, ACE_NTOHL (0x53657175), ACE_NTOHL (0x656e6365), ACE_NTOHL (0x44656600),  // name = IR_SequenceDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_SequenceDef (CORBA::tk_objref, sizeof (_oc_IR_SequenceDef), (char *) &_oc_IR_SequenceDef, 0, sizeof (IR::SequenceDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_SequenceDef (CORBA::tk_objref, sizeof (_oc_IR_SequenceDef), (char *) &_oc_IR_SequenceDef, 0, sizeof (IR_SequenceDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_SequenceDef, &_tc_TAO_tc_IR_SequenceDef)
@@ -25202,15 +24717,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_ArrayDef_Proxy_Impl::_TAO_ArrayDef_Proxy_Impl (void)
+_TAO_ArrayDef_Proxy_Impl::_TAO_ArrayDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_ArrayDef_Remote_Proxy_Impl::_TAO_ArrayDef_Remote_Proxy_Impl (void)
+_TAO_ArrayDef_Remote_Proxy_Impl::_TAO_ArrayDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-CORBA::ULong IR::_TAO_ArrayDef_Remote_Proxy_Impl::length (
+CORBA::ULong _TAO_ArrayDef_Remote_Proxy_Impl::length (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -25247,7 +24762,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_get ri (
+      IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -25368,7 +24883,7 @@
   return _tao_retval;
 }
 
-void IR::_TAO_ArrayDef_Remote_Proxy_Impl::length (
+void _TAO_ArrayDef_Remote_Proxy_Impl::length (
     CORBA_Object *_collocated_tao_target_,
     CORBA::ULong length,
     CORBA::Environment &ACE_TRY_ENV
@@ -25377,15 +24892,10 @@
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_length",
@@ -25406,7 +24916,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_set ri (
+      IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_set ri (
         &_tao_call,
         _collocated_tao_target_,
         length,
@@ -25520,7 +25030,7 @@
   
 }
 
-CORBA::TypeCode_ptr IR::_TAO_ArrayDef_Remote_Proxy_Impl::element_type (
+CORBA::TypeCode_ptr _TAO_ArrayDef_Remote_Proxy_Impl::element_type (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -25558,7 +25068,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_get ri (
+      IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -25680,7 +25190,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::IDLType_ptr IR::_TAO_ArrayDef_Remote_Proxy_Impl::element_type_def (
+IR_IDLType_ptr _TAO_ArrayDef_Remote_Proxy_Impl::element_type_def (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -25689,8 +25199,8 @@
   ))
 {
   
-  IR::IDLType_ptr _tao_retval = IR::IDLType::_nil ();
-  IR::IDLType_var _tao_safe_retval (_tao_retval);
+  IR_IDLType_ptr _tao_retval = IR_IDLType::_nil ();
+  IR_IDLType_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -25718,7 +25228,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_get ri (
+      IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -25774,7 +25284,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::IDLType_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_IDLType_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -25840,24 +25350,19 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_ArrayDef_Remote_Proxy_Impl::element_type_def (
+void _TAO_ArrayDef_Remote_Proxy_Impl::element_type_def (
     CORBA_Object *_collocated_tao_target_,
-    IR::IDLType_ptr element_type_def,
+    IR_IDLType_ptr element_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_element_type_def",
@@ -25878,7 +25383,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_set ri (
+      IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_set ri (
         &_tao_call,
         _collocated_tao_target_,
         element_type_def,
@@ -26002,37 +25507,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_ArrayDef_Proxy_Broker::_TAO_ArrayDef_Proxy_Broker (void)
+_TAO_ArrayDef_Proxy_Broker::_TAO_ArrayDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ArrayDef_Proxy_Broker::~_TAO_ArrayDef_Proxy_Broker (void)
+_TAO_ArrayDef_Proxy_Broker::~_TAO_ArrayDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ArrayDef_Proxy_Broker * (*IR__TAO_ArrayDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_ArrayDef_Proxy_Broker * (*_TAO_ArrayDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_ArrayDef_Remote_Proxy_Broker *
-IR::_TAO_ArrayDef_Remote_Proxy_Broker::the_TAO_ArrayDef_Remote_Proxy_Broker (void)
+_TAO_ArrayDef_Remote_Proxy_Broker *
+_TAO_ArrayDef_Remote_Proxy_Broker::the_TAO_ArrayDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_ArrayDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_ArrayDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_ArrayDef_Remote_Proxy_Broker::_TAO_ArrayDef_Remote_Proxy_Broker (void)
+_TAO_ArrayDef_Remote_Proxy_Broker::_TAO_ArrayDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ArrayDef_Remote_Proxy_Broker::~_TAO_ArrayDef_Remote_Proxy_Broker (void)
+_TAO_ArrayDef_Remote_Proxy_Broker::~_TAO_ArrayDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ArrayDef_Proxy_Impl&
-IR::_TAO_ArrayDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::ArrayDef *object,
+_TAO_ArrayDef_Proxy_Impl&
+_TAO_ArrayDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_ArrayDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -26048,109 +25553,109 @@
 
 
 // default constructor
-IR::ArrayDef::ArrayDef (int collocated)
+IR_ArrayDef::IR_ArrayDef (int collocated)
 {
   this->IR_ArrayDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::ArrayDef::~ArrayDef (void)
+IR_ArrayDef::~IR_ArrayDef (void)
 {}
 
 void
-IR::ArrayDef::IR_ArrayDef_setup_collocation (int collocated)
+IR_ArrayDef::IR_ArrayDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_ArrayDef_Proxy_Broker_ =
-      ::IR__TAO_ArrayDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_ArrayDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_ArrayDef_Proxy_Broker_ =
-      ::IR::_TAO_ArrayDef_Remote_Proxy_Broker::the_TAO_ArrayDef_Remote_Proxy_Broker ();
+      _TAO_ArrayDef_Remote_Proxy_Broker::the_TAO_ArrayDef_Remote_Proxy_Broker ();
   
   this->IR_IDLType_setup_collocation (collocated);
 }
 
-void IR::ArrayDef::_tao_any_destructor (void *x)
+void IR_ArrayDef::_tao_any_destructor (void *x)
 {
-  ArrayDef *tmp = ACE_static_cast (ArrayDef*,x);
+  IR_ArrayDef *tmp = ACE_static_cast (IR_ArrayDef*,x);
   CORBA::release (tmp);
 }
 
-IR::ArrayDef_ptr IR::ArrayDef::_narrow (
+IR_ArrayDef_ptr IR_ArrayDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return ArrayDef::_nil ();
+    return IR_ArrayDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/ArrayDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (ArrayDef::_nil ());
+      ACE_CHECK_RETURN (IR_ArrayDef::_nil ());
       if (is_a == 0)
-        return ArrayDef::_nil ();
+        return IR_ArrayDef::_nil ();
     }
-  return ArrayDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_ArrayDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::ArrayDef_ptr IR::ArrayDef::_unchecked_narrow (
+IR_ArrayDef_ptr IR_ArrayDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return ArrayDef::_nil ();
+    return IR_ArrayDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      ArrayDef_ptr default_proxy = ArrayDef::_nil ();
+      IR_ArrayDef_ptr default_proxy = IR_ArrayDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_ArrayDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_ArrayDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::ArrayDef (
+          ::IR_ArrayDef (
             stub,
             1,
             obj->_servant ()),
             
-          ArrayDef::_nil ());
+          IR_ArrayDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::ArrayDef (stub, 0, obj->_servant ()), ArrayDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_ArrayDef (stub, 0, obj->_servant ()), IR_ArrayDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            ArrayDef_ptr,
+            IR_ArrayDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &ArrayDef::_narrow
+                      &IR_ArrayDef::_narrow
                     )
                 )
           );
 }
 
-IR::ArrayDef_ptr
-IR::ArrayDef::_duplicate (ArrayDef_ptr obj)
+IR_ArrayDef_ptr
+IR_ArrayDef::_duplicate (IR_ArrayDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::ArrayDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_ArrayDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/ArrayDef:1.0")) ||
@@ -26162,34 +25667,34 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::ArrayDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_ArrayDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, ArrayDef)::_narrow))
+      &IR_ArrayDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, IDLType)::_narrow))
+      &IR_IDLType::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::IDLType_ptr,
+            IR_IDLType_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -26202,12 +25707,12 @@
   return retv;
 }
 
-const char* IR::ArrayDef::_interface_repository_id (void) const
+const char* IR_ArrayDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/ArrayDef:1.0";
 }
 
-CORBA::ULong IR::ArrayDef::length (
+CORBA::ULong IR_ArrayDef::length (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -26224,7 +25729,7 @@
     );
 }
 
-void IR::ArrayDef::length (
+void IR_ArrayDef::length (
     CORBA::ULong length,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -26243,7 +25748,7 @@
     );
 }
 
-CORBA::TypeCode_ptr IR::ArrayDef::element_type (
+CORBA::TypeCode_ptr IR_ArrayDef::element_type (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -26260,7 +25765,7 @@
     );
 }
 
-IR::IDLType_ptr IR::ArrayDef::element_type_def (
+IR_IDLType_ptr IR_ArrayDef::element_type_def (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -26277,8 +25782,8 @@
     );
 }
 
-void IR::ArrayDef::element_type_def (
-    IR::IDLType_ptr element_type_def,
+void IR_ArrayDef::element_type_def (
+    IR_IDLType_ptr element_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -26296,9 +25801,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_get::TAO_ClientRequestInfo_IR_ArrayDef_length_get (
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_get::TAO_ClientRequestInfo_IR_ArrayDef_length_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -26307,7 +25811,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -26319,7 +25823,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -26332,7 +25836,7 @@
 
 
 CORBA::Any * 
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -26348,13 +25852,13 @@
 }
 
 void 
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_get::result (CORBA::ULong result)
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_get::result (CORBA::ULong result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_set::TAO_ClientRequestInfo_IR_ArrayDef_length_set (
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_set::TAO_ClientRequestInfo_IR_ArrayDef_length_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const CORBA::ULong & length,
@@ -26365,7 +25869,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -26384,7 +25888,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -26397,7 +25901,7 @@
 
 
 CORBA::Any * 
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_length_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -26409,7 +25913,7 @@
   return result_any;
 }
 
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_get::TAO_ClientRequestInfo_IR_ArrayDef_element_type_get (
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_get::TAO_ClientRequestInfo_IR_ArrayDef_element_type_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -26418,7 +25922,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -26430,7 +25934,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -26443,7 +25947,7 @@
 
 
 CORBA::Any * 
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -26459,13 +25963,13 @@
 }
 
 void 
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_get::result (CORBA::TypeCode_ptr result)
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_get::result (CORBA::TypeCode_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_get::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_get (
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_get::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -26474,7 +25978,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -26486,7 +25990,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -26499,7 +26003,7 @@
 
 
 CORBA::Any * 
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -26515,16 +26019,16 @@
 }
 
 void 
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_get::result (IR::IDLType_ptr result)
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_get::result (IR_IDLType_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_set::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_set (
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_set::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    IR::IDLType_ptr element_type_def,
+    IR_IDLType_ptr element_type_def,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -26532,7 +26036,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -26552,7 +26056,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -26565,7 +26069,7 @@
 
 
 CORBA::Any * 
-IR::ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ArrayDef::TAO_ClientRequestInfo_IR_ArrayDef_element_type_def_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -26578,13 +26082,14 @@
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_ArrayDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   28, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f41), ACE_NTOHL (0x72726179), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/ArrayDef:1.0
-  9, ACE_NTOHL (0x41727261), ACE_NTOHL (0x79446566), ACE_NTOHL (0x0),  // name = ArrayDef
+  9, ACE_NTOHL (0x41727261), ACE_NTOHL (0x79446566), ACE_NTOHL (0x0),  // name = IR_ArrayDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ArrayDef (CORBA::tk_objref, sizeof (_oc_IR_ArrayDef), (char *) &_oc_IR_ArrayDef, 0, sizeof (IR::ArrayDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_ArrayDef (CORBA::tk_objref, sizeof (_oc_IR_ArrayDef), (char *) &_oc_IR_ArrayDef, 0, sizeof (IR_ArrayDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ArrayDef, &_tc_TAO_tc_IR_ArrayDef)
@@ -26594,15 +26099,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_ExceptionDef_Proxy_Impl::_TAO_ExceptionDef_Proxy_Impl (void)
+_TAO_ExceptionDef_Proxy_Impl::_TAO_ExceptionDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_ExceptionDef_Remote_Proxy_Impl::_TAO_ExceptionDef_Remote_Proxy_Impl (void)
+_TAO_ExceptionDef_Remote_Proxy_Impl::_TAO_ExceptionDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-CORBA::TypeCode_ptr IR::_TAO_ExceptionDef_Remote_Proxy_Impl::type (
+CORBA::TypeCode_ptr _TAO_ExceptionDef_Remote_Proxy_Impl::type (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -26640,7 +26145,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_type_get ri (
+      IR_ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_type_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -26762,7 +26267,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::StructMemberSeq * IR::_TAO_ExceptionDef_Remote_Proxy_Impl::members (
+IR_StructMemberSeq * _TAO_ExceptionDef_Remote_Proxy_Impl::members (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -26771,7 +26276,7 @@
   ))
 {
   
-  IR::StructMemberSeq *_tao_retval = 0;
+  IR_StructMemberSeq *_tao_retval = 0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -26779,8 +26284,8 @@
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
   
-  ACE_NEW_RETURN (_tao_retval, IR::StructMemberSeq, _tao_retval);
-  IR::StructMemberSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_StructMemberSeq, _tao_retval);
+  IR_StructMemberSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_members",
@@ -26801,7 +26306,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_get ri (
+      IR_ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -26857,7 +26362,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::StructMemberSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_StructMemberSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -26923,24 +26428,19 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_ExceptionDef_Remote_Proxy_Impl::members (
+void _TAO_ExceptionDef_Remote_Proxy_Impl::members (
     CORBA_Object *_collocated_tao_target_,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_members",
@@ -26961,7 +26461,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_set ri (
+      IR_ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_set ri (
         &_tao_call,
         _collocated_tao_target_,
         members,
@@ -27085,37 +26585,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_ExceptionDef_Proxy_Broker::_TAO_ExceptionDef_Proxy_Broker (void)
+_TAO_ExceptionDef_Proxy_Broker::_TAO_ExceptionDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ExceptionDef_Proxy_Broker::~_TAO_ExceptionDef_Proxy_Broker (void)
+_TAO_ExceptionDef_Proxy_Broker::~_TAO_ExceptionDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ExceptionDef_Proxy_Broker * (*IR__TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_ExceptionDef_Proxy_Broker * (*_TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_ExceptionDef_Remote_Proxy_Broker *
-IR::_TAO_ExceptionDef_Remote_Proxy_Broker::the_TAO_ExceptionDef_Remote_Proxy_Broker (void)
+_TAO_ExceptionDef_Remote_Proxy_Broker *
+_TAO_ExceptionDef_Remote_Proxy_Broker::the_TAO_ExceptionDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_ExceptionDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_ExceptionDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_ExceptionDef_Remote_Proxy_Broker::_TAO_ExceptionDef_Remote_Proxy_Broker (void)
+_TAO_ExceptionDef_Remote_Proxy_Broker::_TAO_ExceptionDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ExceptionDef_Remote_Proxy_Broker::~_TAO_ExceptionDef_Remote_Proxy_Broker (void)
+_TAO_ExceptionDef_Remote_Proxy_Broker::~_TAO_ExceptionDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ExceptionDef_Proxy_Impl&
-IR::_TAO_ExceptionDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::ExceptionDef *object,
+_TAO_ExceptionDef_Proxy_Impl&
+_TAO_ExceptionDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_ExceptionDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -27131,111 +26631,110 @@
 
 
 // default constructor
-IR::ExceptionDef::ExceptionDef (int collocated)
+IR_ExceptionDef::IR_ExceptionDef (int collocated)
 {
   this->IR_ExceptionDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::ExceptionDef::~ExceptionDef (void)
+IR_ExceptionDef::~IR_ExceptionDef (void)
 {}
 
 void
-IR::ExceptionDef::IR_ExceptionDef_setup_collocation (int collocated)
+IR_ExceptionDef::IR_ExceptionDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_ExceptionDef_Proxy_Broker_ =
-      ::IR__TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_ExceptionDef_Proxy_Broker_ =
-      ::IR::_TAO_ExceptionDef_Remote_Proxy_Broker::the_TAO_ExceptionDef_Remote_Proxy_Broker ();
+      _TAO_ExceptionDef_Remote_Proxy_Broker::the_TAO_ExceptionDef_Remote_Proxy_Broker ();
   
   this->IR_Contained_setup_collocation (collocated);
-  
   this->IR_Container_setup_collocation (collocated);
 }
 
-void IR::ExceptionDef::_tao_any_destructor (void *x)
+void IR_ExceptionDef::_tao_any_destructor (void *x)
 {
-  ExceptionDef *tmp = ACE_static_cast (ExceptionDef*,x);
+  IR_ExceptionDef *tmp = ACE_static_cast (IR_ExceptionDef*,x);
   CORBA::release (tmp);
 }
 
-IR::ExceptionDef_ptr IR::ExceptionDef::_narrow (
+IR_ExceptionDef_ptr IR_ExceptionDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return ExceptionDef::_nil ();
+    return IR_ExceptionDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/ExceptionDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (ExceptionDef::_nil ());
+      ACE_CHECK_RETURN (IR_ExceptionDef::_nil ());
       if (is_a == 0)
-        return ExceptionDef::_nil ();
+        return IR_ExceptionDef::_nil ();
     }
-  return ExceptionDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_ExceptionDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::ExceptionDef_ptr IR::ExceptionDef::_unchecked_narrow (
+IR_ExceptionDef_ptr IR_ExceptionDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return ExceptionDef::_nil ();
+    return IR_ExceptionDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      ExceptionDef_ptr default_proxy = ExceptionDef::_nil ();
+      IR_ExceptionDef_ptr default_proxy = IR_ExceptionDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::ExceptionDef (
+          ::IR_ExceptionDef (
             stub,
             1,
             obj->_servant ()),
             
-          ExceptionDef::_nil ());
+          IR_ExceptionDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::ExceptionDef (stub, 0, obj->_servant ()), ExceptionDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_ExceptionDef (stub, 0, obj->_servant ()), IR_ExceptionDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            ExceptionDef_ptr,
+            IR_ExceptionDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &ExceptionDef::_narrow
+                      &IR_ExceptionDef::_narrow
                     )
                 )
           );
 }
 
-IR::ExceptionDef_ptr
-IR::ExceptionDef::_duplicate (ExceptionDef_ptr obj)
+IR_ExceptionDef_ptr
+IR_ExceptionDef::_duplicate (IR_ExceptionDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::ExceptionDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_ExceptionDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/ExceptionDef:1.0")) ||
@@ -27248,46 +26747,46 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::ExceptionDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_ExceptionDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, ExceptionDef)::_narrow))
+      &IR_ExceptionDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Container)::_narrow))
+      &IR_Container::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Container_ptr,
+            IR_Container_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -27300,12 +26799,12 @@
   return retv;
 }
 
-const char* IR::ExceptionDef::_interface_repository_id (void) const
+const char* IR_ExceptionDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/ExceptionDef:1.0";
 }
 
-CORBA::TypeCode_ptr IR::ExceptionDef::type (
+CORBA::TypeCode_ptr IR_ExceptionDef::type (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -27322,7 +26821,7 @@
     );
 }
 
-IR::StructMemberSeq * IR::ExceptionDef::members (
+IR_StructMemberSeq * IR_ExceptionDef::members (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -27339,8 +26838,8 @@
     );
 }
 
-void IR::ExceptionDef::members (
-    const IR::StructMemberSeq & members,
+void IR_ExceptionDef::members (
+    const IR_StructMemberSeq & members,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -27358,9 +26857,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_type_get::TAO_ClientRequestInfo_IR_ExceptionDef_type_get (
+IR_ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_type_get::TAO_ClientRequestInfo_IR_ExceptionDef_type_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -27369,7 +26867,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -27381,7 +26879,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -27394,7 +26892,7 @@
 
 
 CORBA::Any * 
-IR::ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_type_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_type_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -27410,13 +26908,13 @@
 }
 
 void 
-IR::ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_type_get::result (CORBA::TypeCode_ptr result)
+IR_ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_type_get::result (CORBA::TypeCode_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_get::TAO_ClientRequestInfo_IR_ExceptionDef_members_get (
+IR_ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_get::TAO_ClientRequestInfo_IR_ExceptionDef_members_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -27425,7 +26923,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -27437,7 +26935,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -27450,7 +26948,7 @@
 
 
 CORBA::Any * 
-IR::ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -27466,16 +26964,16 @@
 }
 
 void 
-IR::ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_get::result (IR::StructMemberSeq * result)
+IR_ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_get::result (IR_StructMemberSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_set::TAO_ClientRequestInfo_IR_ExceptionDef_members_set (
+IR_ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_set::TAO_ClientRequestInfo_IR_ExceptionDef_members_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    const IR::StructMemberSeq & members,
+    const IR_StructMemberSeq & members,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -27483,7 +26981,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -27503,7 +27001,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -27516,7 +27014,7 @@
 
 
 CORBA::Any * 
-IR::ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ExceptionDef::TAO_ClientRequestInfo_IR_ExceptionDef_members_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -27529,17 +27027,19 @@
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_ExceptionDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f45), ACE_NTOHL (0x78636570), ACE_NTOHL (0x74696f6e), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/ExceptionDef:1.0
-  13, ACE_NTOHL (0x45786365), ACE_NTOHL (0x7074696f), ACE_NTOHL (0x6e446566), ACE_NTOHL (0x0),  // name = ExceptionDef
+  13, ACE_NTOHL (0x45786365), ACE_NTOHL (0x7074696f), ACE_NTOHL (0x6e446566), ACE_NTOHL (0x0),  // name = IR_ExceptionDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ExceptionDef (CORBA::tk_objref, sizeof (_oc_IR_ExceptionDef), (char *) &_oc_IR_ExceptionDef, 0, sizeof (IR::ExceptionDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_ExceptionDef (CORBA::tk_objref, sizeof (_oc_IR_ExceptionDef), (char *) &_oc_IR_ExceptionDef, 0, sizeof (IR_ExceptionDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ExceptionDef, &_tc_TAO_tc_IR_ExceptionDef)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_ExceptionDescription[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -27586,36 +27086,33 @@
   CORBA::tk_TypeCode,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ExceptionDescription (CORBA::tk_struct, sizeof (_oc_IR_ExceptionDescription), (char *) &_oc_IR_ExceptionDescription, 0, sizeof (IR::ExceptionDescription));
+static CORBA::TypeCode _tc_TAO_tc_IR_ExceptionDescription (CORBA::tk_struct, sizeof (_oc_IR_ExceptionDescription), (char *) &_oc_IR_ExceptionDescription, 0, sizeof (IR_ExceptionDescription));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ExceptionDescription, &_tc_TAO_tc_IR_ExceptionDescription)
 TAO_NAMESPACE_END
-void IR::ExceptionDescription::_tao_any_destructor (void *x)
+
+void IR_ExceptionDescription::_tao_any_destructor (void *x)
 {
-  ExceptionDescription *tmp = ACE_static_cast (ExceptionDescription*,x);
+  IR_ExceptionDescription *tmp = ACE_static_cast (IR_ExceptionDescription*,x);
   delete tmp;
 }
 
-
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_EXCEPTIONDEFSEQ_CS_)
-#define __TAO_UNBOUNDED_OBJECT_SEQUENCE_IR_EXCEPTIONDEFSEQ_CS_
-
   // The Base_Sequence functions, please see tao/Sequence.h
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::ExceptionDef **tmp = 0;
+    IR_ExceptionDef **tmp = 0;
     tmp = _TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::ExceptionDef **old = ACE_reinterpret_cast (IR::ExceptionDef**, this->buffer_);
+      IR_ExceptionDef **old = ACE_reinterpret_cast (IR_ExceptionDef**, this->buffer_);
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         if (!this->release_)
-          tmp[i] = IR::ExceptionDef::_duplicate (old[i]);
+          tmp[i] = IR_ExceptionDef::_duplicate (old[i]);
         else
           tmp[i] = old[i];
         
@@ -27627,106 +27124,97 @@
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
-    IR::ExceptionDef **tmp = ACE_reinterpret_cast (IR::ExceptionDef**, this->buffer_);
+    IR_ExceptionDef **tmp = ACE_reinterpret_cast (IR_ExceptionDef**, this->buffer_);
     for (CORBA::ULong i = 0; i < this->length_; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::ExceptionDef::_nil ();
+      tmp[i] = IR_ExceptionDef::_nil ();
     }
     _TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq::freebuf (tmp);
     this->buffer_ = 0;
   }
   
-  IR::_TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq::~_TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq (void)
+  _TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq::~_TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq (void)
   {
     this->_deallocate_buffer ();
   }
   
   void
-  IR::_TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
+  _TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq::_shrink_buffer (CORBA::ULong nl, CORBA::ULong ol)
   {
-    IR::ExceptionDef **tmp = ACE_reinterpret_cast (IR::ExceptionDef**, this->buffer_);
+    IR_ExceptionDef **tmp = ACE_reinterpret_cast (IR_ExceptionDef**, this->buffer_);
     
     for (CORBA::ULong i = nl; i < ol; ++i)
     {
       CORBA::release (tmp[i]);
-      tmp[i] = IR::ExceptionDef::_nil ();
+      tmp[i] = IR_ExceptionDef::_nil ();
     }
   }
   void 
-  IR::_TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq::_downcast (
+  _TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq::_downcast (
       void* target,
       CORBA_Object *src,
       CORBA_Environment &ACE_TRY_ENV
     )
   {
-    IR::ExceptionDef **tmp = ACE_static_cast (IR::ExceptionDef**, target);
-    *tmp = IR::ExceptionDef::_narrow (src, ACE_TRY_ENV);
+    IR_ExceptionDef **tmp = ACE_static_cast (IR_ExceptionDef**, target);
+    *tmp = IR_ExceptionDef::_narrow (src, ACE_TRY_ENV);
   }
 
   CORBA_Object*
-  IR::_TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq::_upcast (void *src) const
+  _TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq::_upcast (void *src) const
   {
-    IR::ExceptionDef **tmp = ACE_static_cast (IR::ExceptionDef**, src);
+    IR_ExceptionDef **tmp = ACE_static_cast (IR_ExceptionDef**, src);
     return *tmp;
   }
   
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_EXCEPTIONDEFSEQ_CS_)
-#define _IR_EXCEPTIONDEFSEQ_CS_
-
 // *************************************************************
-// IR::ExceptionDefSeq
+// IR_ExceptionDefSeq
 // *************************************************************
 
-IR::ExceptionDefSeq::ExceptionDefSeq (void)
+IR_ExceptionDefSeq::IR_ExceptionDefSeq (void)
 {}
-IR::ExceptionDefSeq::ExceptionDefSeq (CORBA::ULong max) // uses max size
+IR_ExceptionDefSeq::IR_ExceptionDefSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::ExceptionDef,IR::ExceptionDef_var>
+  TAO_Unbounded_Object_Sequence<IR_ExceptionDef,IR_ExceptionDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::ExceptionDefSeq::ExceptionDefSeq (CORBA::ULong max, CORBA::ULong length, IR::ExceptionDef_ptr *buffer, CORBA::Boolean release)
+IR_ExceptionDefSeq::IR_ExceptionDefSeq (CORBA::ULong max, CORBA::ULong length, IR_ExceptionDef_ptr *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::ExceptionDef,IR::ExceptionDef_var>
+  TAO_Unbounded_Object_Sequence<IR_ExceptionDef,IR_ExceptionDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::ExceptionDefSeq::ExceptionDefSeq (const ExceptionDefSeq &seq) // copy ctor
+IR_ExceptionDefSeq::IR_ExceptionDefSeq (const IR_ExceptionDefSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Object_Sequence_IR_ExceptionDefSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Object_Sequence<IR::ExceptionDef,IR::ExceptionDef_var>
+  TAO_Unbounded_Object_Sequence<IR_ExceptionDef,IR_ExceptionDef_var>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::ExceptionDefSeq::~ExceptionDefSeq (void) // dtor
+IR_ExceptionDefSeq::~IR_ExceptionDefSeq (void) // dtor
 {}
-void IR::ExceptionDefSeq::_tao_any_destructor (void *x)
+void IR_ExceptionDefSeq::_tao_any_destructor (void *x)
 {
-  ExceptionDefSeq *tmp = ACE_static_cast (ExceptionDefSeq*,x);
+  IR_ExceptionDefSeq *tmp = ACE_static_cast (IR_ExceptionDefSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_ExceptionDefSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -27739,12 +27227,12 @@
     60, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
       32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f45), ACE_NTOHL (0x78636570), ACE_NTOHL (0x74696f6e), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/ExceptionDef:1.0
-      13, ACE_NTOHL (0x45786365), ACE_NTOHL (0x7074696f), ACE_NTOHL (0x6e446566), ACE_NTOHL (0x0),  // name = ExceptionDef
+      13, ACE_NTOHL (0x45786365), ACE_NTOHL (0x7074696f), ACE_NTOHL (0x6e446566), ACE_NTOHL (0x0),  // name = IR_ExceptionDef
 
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ExceptionDefSeq (CORBA::tk_alias, sizeof (_oc_IR_ExceptionDefSeq), (char *) &_oc_IR_ExceptionDefSeq, 0, sizeof (IR::ExceptionDefSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_ExceptionDefSeq (CORBA::tk_alias, sizeof (_oc_IR_ExceptionDefSeq), (char *) &_oc_IR_ExceptionDefSeq, 0, sizeof (IR_ExceptionDefSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ExceptionDefSeq, &_tc_TAO_tc_IR_ExceptionDefSeq)
@@ -27752,18 +27240,15 @@
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_SEQUENCE_IR_EXCDESCRIPTIONSEQ_CS_)
-#define __TAO_UNBOUNDED_SEQUENCE_IR_EXCDESCRIPTIONSEQ_CS_
-
   void
-  IR::_TAO_Unbounded_Sequence_IR_ExcDescriptionSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Sequence_IR_ExcDescriptionSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::ExceptionDescription* tmp = 0;
+    IR_ExceptionDescription* tmp = 0;
     tmp = _TAO_Unbounded_Sequence_IR_ExcDescriptionSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::ExceptionDescription *old = ACE_reinterpret_cast (IR::ExceptionDescription *,this->buffer_);
+      IR_ExceptionDescription *old = ACE_reinterpret_cast (IR_ExceptionDescription *,this->buffer_);
       
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         tmp[i] = old[i];
@@ -27776,75 +27261,65 @@
   }
   
   void
-  IR::_TAO_Unbounded_Sequence_IR_ExcDescriptionSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Sequence_IR_ExcDescriptionSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
     
-    IR::ExceptionDescription *tmp = ACE_reinterpret_cast (IR::ExceptionDescription *,this->buffer_);
+    IR_ExceptionDescription *tmp = ACE_reinterpret_cast (IR_ExceptionDescription *,this->buffer_);
     
     _TAO_Unbounded_Sequence_IR_ExcDescriptionSeq::freebuf (tmp);
     this->buffer_ = 0;
   } 
   
-  IR::_TAO_Unbounded_Sequence_IR_ExcDescriptionSeq::~_TAO_Unbounded_Sequence_IR_ExcDescriptionSeq (void) // Dtor.
+  _TAO_Unbounded_Sequence_IR_ExcDescriptionSeq::~_TAO_Unbounded_Sequence_IR_ExcDescriptionSeq (void) // Dtor.
   {
     this->_deallocate_buffer ();
   }
   
-  
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_EXCDESCRIPTIONSEQ_CS_)
-#define _IR_EXCDESCRIPTIONSEQ_CS_
-
 // *************************************************************
-// IR::ExcDescriptionSeq
+// IR_ExcDescriptionSeq
 // *************************************************************
 
-IR::ExcDescriptionSeq::ExcDescriptionSeq (void)
+IR_ExcDescriptionSeq::IR_ExcDescriptionSeq (void)
 {}
-IR::ExcDescriptionSeq::ExcDescriptionSeq (CORBA::ULong max) // uses max size
+IR_ExcDescriptionSeq::IR_ExcDescriptionSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_ExcDescriptionSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::ExceptionDescription>
+  TAO_Unbounded_Sequence<IR_ExceptionDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::ExcDescriptionSeq::ExcDescriptionSeq (CORBA::ULong max, CORBA::ULong length, IR::ExceptionDescription *buffer, CORBA::Boolean release)
+IR_ExcDescriptionSeq::IR_ExcDescriptionSeq (CORBA::ULong max, CORBA::ULong length, IR_ExceptionDescription *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_ExcDescriptionSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::ExceptionDescription>
+  TAO_Unbounded_Sequence<IR_ExceptionDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::ExcDescriptionSeq::ExcDescriptionSeq (const ExcDescriptionSeq &seq) // copy ctor
+IR_ExcDescriptionSeq::IR_ExcDescriptionSeq (const IR_ExcDescriptionSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_ExcDescriptionSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::ExceptionDescription>
+  TAO_Unbounded_Sequence<IR_ExceptionDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::ExcDescriptionSeq::~ExcDescriptionSeq (void) // dtor
+IR_ExcDescriptionSeq::~IR_ExcDescriptionSeq (void) // dtor
 {}
-void IR::ExcDescriptionSeq::_tao_any_destructor (void *x)
+void IR_ExcDescriptionSeq::_tao_any_destructor (void *x)
 {
-  ExcDescriptionSeq *tmp = ACE_static_cast (ExcDescriptionSeq*,x);
+  IR_ExcDescriptionSeq *tmp = ACE_static_cast (IR_ExcDescriptionSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_ExcDescriptionSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -27902,11 +27377,12 @@
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ExcDescriptionSeq (CORBA::tk_alias, sizeof (_oc_IR_ExcDescriptionSeq), (char *) &_oc_IR_ExcDescriptionSeq, 0, sizeof (IR::ExcDescriptionSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_ExcDescriptionSeq (CORBA::tk_alias, sizeof (_oc_IR_ExcDescriptionSeq), (char *) &_oc_IR_ExcDescriptionSeq, 0, sizeof (IR_ExcDescriptionSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ExcDescriptionSeq, &_tc_TAO_tc_IR_ExcDescriptionSeq)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_AttributeMode[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -27916,7 +27392,7 @@
   12, ACE_NTOHL (0x41545452), ACE_NTOHL (0x5f4e4f52), ACE_NTOHL (0x4d414c00),  // name = ATTR_NORMAL
   14, ACE_NTOHL (0x41545452), ACE_NTOHL (0x5f524541), ACE_NTOHL (0x444f4e4c), ACE_NTOHL (0x59000000),  // name = ATTR_READONLY
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_AttributeMode (CORBA::tk_enum, sizeof (_oc_IR_AttributeMode), (char *) &_oc_IR_AttributeMode, 0, sizeof (IR::AttributeMode));
+static CORBA::TypeCode _tc_TAO_tc_IR_AttributeMode (CORBA::tk_enum, sizeof (_oc_IR_AttributeMode), (char *) &_oc_IR_AttributeMode, 0, sizeof (IR_AttributeMode));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_AttributeMode, &_tc_TAO_tc_IR_AttributeMode)
@@ -27926,15 +27402,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_AttributeDef_Proxy_Impl::_TAO_AttributeDef_Proxy_Impl (void)
+_TAO_AttributeDef_Proxy_Impl::_TAO_AttributeDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_AttributeDef_Remote_Proxy_Impl::_TAO_AttributeDef_Remote_Proxy_Impl (void)
+_TAO_AttributeDef_Remote_Proxy_Impl::_TAO_AttributeDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-CORBA::TypeCode_ptr IR::_TAO_AttributeDef_Remote_Proxy_Impl::type (
+CORBA::TypeCode_ptr _TAO_AttributeDef_Remote_Proxy_Impl::type (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -27972,7 +27448,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_get ri (
+      IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -28094,7 +27570,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::IDLType_ptr IR::_TAO_AttributeDef_Remote_Proxy_Impl::type_def (
+IR_IDLType_ptr _TAO_AttributeDef_Remote_Proxy_Impl::type_def (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -28103,8 +27579,8 @@
   ))
 {
   
-  IR::IDLType_ptr _tao_retval = IR::IDLType::_nil ();
-  IR::IDLType_var _tao_safe_retval (_tao_retval);
+  IR_IDLType_ptr _tao_retval = IR_IDLType::_nil ();
+  IR_IDLType_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -28132,7 +27608,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_get ri (
+      IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -28188,7 +27664,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::IDLType_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_IDLType_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -28254,24 +27730,19 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_AttributeDef_Remote_Proxy_Impl::type_def (
+void _TAO_AttributeDef_Remote_Proxy_Impl::type_def (
     CORBA_Object *_collocated_tao_target_,
-    IR::IDLType_ptr type_def,
+    IR_IDLType_ptr type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_type_def",
@@ -28292,7 +27763,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_set ri (
+      IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_set ri (
         &_tao_call,
         _collocated_tao_target_,
         type_def,
@@ -28406,7 +27877,7 @@
   
 }
 
-IR::AttributeMode IR::_TAO_AttributeDef_Remote_Proxy_Impl::mode (
+IR_AttributeMode _TAO_AttributeDef_Remote_Proxy_Impl::mode (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -28415,7 +27886,7 @@
   ))
 {
   
-  IR::AttributeMode _tao_retval = (IR::AttributeMode)0;
+  IR_AttributeMode _tao_retval = (IR_AttributeMode)0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -28443,7 +27914,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_get ri (
+      IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -28499,7 +27970,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::AttributeMode  _tao_retval_info = _tao_retval;
+              IR_AttributeMode  _tao_retval_info = _tao_retval;
                ri.result (_tao_retval_info);
             );
           
@@ -28564,24 +28035,19 @@
   return _tao_retval;
 }
 
-void IR::_TAO_AttributeDef_Remote_Proxy_Impl::mode (
+void _TAO_AttributeDef_Remote_Proxy_Impl::mode (
     CORBA_Object *_collocated_tao_target_,
-    IR::AttributeMode mode,
+    IR_AttributeMode mode,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_mode",
@@ -28602,7 +28068,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_set ri (
+      IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_set ri (
         &_tao_call,
         _collocated_tao_target_,
         mode,
@@ -28726,37 +28192,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_AttributeDef_Proxy_Broker::_TAO_AttributeDef_Proxy_Broker (void)
+_TAO_AttributeDef_Proxy_Broker::_TAO_AttributeDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_AttributeDef_Proxy_Broker::~_TAO_AttributeDef_Proxy_Broker (void)
+_TAO_AttributeDef_Proxy_Broker::~_TAO_AttributeDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_AttributeDef_Proxy_Broker * (*IR__TAO_AttributeDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_AttributeDef_Proxy_Broker * (*_TAO_AttributeDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_AttributeDef_Remote_Proxy_Broker *
-IR::_TAO_AttributeDef_Remote_Proxy_Broker::the_TAO_AttributeDef_Remote_Proxy_Broker (void)
+_TAO_AttributeDef_Remote_Proxy_Broker *
+_TAO_AttributeDef_Remote_Proxy_Broker::the_TAO_AttributeDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_AttributeDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_AttributeDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_AttributeDef_Remote_Proxy_Broker::_TAO_AttributeDef_Remote_Proxy_Broker (void)
+_TAO_AttributeDef_Remote_Proxy_Broker::_TAO_AttributeDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_AttributeDef_Remote_Proxy_Broker::~_TAO_AttributeDef_Remote_Proxy_Broker (void)
+_TAO_AttributeDef_Remote_Proxy_Broker::~_TAO_AttributeDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_AttributeDef_Proxy_Impl&
-IR::_TAO_AttributeDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::AttributeDef *object,
+_TAO_AttributeDef_Proxy_Impl&
+_TAO_AttributeDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_AttributeDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -28772,109 +28238,109 @@
 
 
 // default constructor
-IR::AttributeDef::AttributeDef (int collocated)
+IR_AttributeDef::IR_AttributeDef (int collocated)
 {
   this->IR_AttributeDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::AttributeDef::~AttributeDef (void)
+IR_AttributeDef::~IR_AttributeDef (void)
 {}
 
 void
-IR::AttributeDef::IR_AttributeDef_setup_collocation (int collocated)
+IR_AttributeDef::IR_AttributeDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_AttributeDef_Proxy_Broker_ =
-      ::IR__TAO_AttributeDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_AttributeDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_AttributeDef_Proxy_Broker_ =
-      ::IR::_TAO_AttributeDef_Remote_Proxy_Broker::the_TAO_AttributeDef_Remote_Proxy_Broker ();
+      _TAO_AttributeDef_Remote_Proxy_Broker::the_TAO_AttributeDef_Remote_Proxy_Broker ();
   
   this->IR_Contained_setup_collocation (collocated);
 }
 
-void IR::AttributeDef::_tao_any_destructor (void *x)
+void IR_AttributeDef::_tao_any_destructor (void *x)
 {
-  AttributeDef *tmp = ACE_static_cast (AttributeDef*,x);
+  IR_AttributeDef *tmp = ACE_static_cast (IR_AttributeDef*,x);
   CORBA::release (tmp);
 }
 
-IR::AttributeDef_ptr IR::AttributeDef::_narrow (
+IR_AttributeDef_ptr IR_AttributeDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return AttributeDef::_nil ();
+    return IR_AttributeDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/AttributeDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (AttributeDef::_nil ());
+      ACE_CHECK_RETURN (IR_AttributeDef::_nil ());
       if (is_a == 0)
-        return AttributeDef::_nil ();
+        return IR_AttributeDef::_nil ();
     }
-  return AttributeDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_AttributeDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::AttributeDef_ptr IR::AttributeDef::_unchecked_narrow (
+IR_AttributeDef_ptr IR_AttributeDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return AttributeDef::_nil ();
+    return IR_AttributeDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      AttributeDef_ptr default_proxy = AttributeDef::_nil ();
+      IR_AttributeDef_ptr default_proxy = IR_AttributeDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_AttributeDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_AttributeDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::AttributeDef (
+          ::IR_AttributeDef (
             stub,
             1,
             obj->_servant ()),
             
-          AttributeDef::_nil ());
+          IR_AttributeDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::AttributeDef (stub, 0, obj->_servant ()), AttributeDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_AttributeDef (stub, 0, obj->_servant ()), IR_AttributeDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            AttributeDef_ptr,
+            IR_AttributeDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &AttributeDef::_narrow
+                      &IR_AttributeDef::_narrow
                     )
                 )
           );
 }
 
-IR::AttributeDef_ptr
-IR::AttributeDef::_duplicate (AttributeDef_ptr obj)
+IR_AttributeDef_ptr
+IR_AttributeDef::_duplicate (IR_AttributeDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::AttributeDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_AttributeDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/AttributeDef:1.0")) ||
@@ -28886,34 +28352,34 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::AttributeDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_AttributeDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, AttributeDef)::_narrow))
+      &IR_AttributeDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -28926,12 +28392,12 @@
   return retv;
 }
 
-const char* IR::AttributeDef::_interface_repository_id (void) const
+const char* IR_AttributeDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/AttributeDef:1.0";
 }
 
-CORBA::TypeCode_ptr IR::AttributeDef::type (
+CORBA::TypeCode_ptr IR_AttributeDef::type (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -28948,7 +28414,7 @@
     );
 }
 
-IR::IDLType_ptr IR::AttributeDef::type_def (
+IR_IDLType_ptr IR_AttributeDef::type_def (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -28965,8 +28431,8 @@
     );
 }
 
-void IR::AttributeDef::type_def (
-    IR::IDLType_ptr type_def,
+void IR_AttributeDef::type_def (
+    IR_IDLType_ptr type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -28984,7 +28450,7 @@
     );
 }
 
-IR::AttributeMode IR::AttributeDef::mode (
+IR_AttributeMode IR_AttributeDef::mode (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -28993,7 +28459,7 @@
 {
   _TAO_AttributeDef_Proxy_Impl &proxy = 
     this->the_TAO_AttributeDef_Proxy_Broker_->select_proxy (this, ACE_TRY_ENV);
-  ACE_CHECK_RETURN ((IR::AttributeMode)0);
+  ACE_CHECK_RETURN ((IR_AttributeMode)0);
   
   return proxy.mode (
       this,
@@ -29001,8 +28467,8 @@
     );
 }
 
-void IR::AttributeDef::mode (
-    IR::AttributeMode mode,
+void IR_AttributeDef::mode (
+    IR_AttributeMode mode,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -29020,9 +28486,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_get::TAO_ClientRequestInfo_IR_AttributeDef_type_get (
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_get::TAO_ClientRequestInfo_IR_AttributeDef_type_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -29031,7 +28496,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -29043,7 +28508,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -29056,7 +28521,7 @@
 
 
 CORBA::Any * 
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -29072,13 +28537,13 @@
 }
 
 void 
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_get::result (CORBA::TypeCode_ptr result)
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_get::result (CORBA::TypeCode_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_get::TAO_ClientRequestInfo_IR_AttributeDef_type_def_get (
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_get::TAO_ClientRequestInfo_IR_AttributeDef_type_def_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -29087,7 +28552,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -29099,7 +28564,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -29112,7 +28577,7 @@
 
 
 CORBA::Any * 
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -29128,16 +28593,16 @@
 }
 
 void 
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_get::result (IR::IDLType_ptr result)
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_get::result (IR_IDLType_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_set::TAO_ClientRequestInfo_IR_AttributeDef_type_def_set (
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_set::TAO_ClientRequestInfo_IR_AttributeDef_type_def_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    IR::IDLType_ptr type_def,
+    IR_IDLType_ptr type_def,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -29145,7 +28610,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -29165,7 +28630,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -29178,7 +28643,7 @@
 
 
 CORBA::Any * 
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_type_def_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -29190,7 +28655,7 @@
   return result_any;
 }
 
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_get::TAO_ClientRequestInfo_IR_AttributeDef_mode_get (
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_get::TAO_ClientRequestInfo_IR_AttributeDef_mode_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -29199,7 +28664,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -29211,7 +28676,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -29224,7 +28689,7 @@
 
 
 CORBA::Any * 
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -29240,16 +28705,16 @@
 }
 
 void 
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_get::result (IR::AttributeMode result)
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_get::result (IR_AttributeMode result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_set::TAO_ClientRequestInfo_IR_AttributeDef_mode_set (
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_set::TAO_ClientRequestInfo_IR_AttributeDef_mode_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    IR::AttributeMode & mode,
+    IR_AttributeMode & mode,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -29257,7 +28722,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -29277,7 +28742,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -29290,7 +28755,7 @@
 
 
 CORBA::Any * 
-IR::AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_AttributeDef::TAO_ClientRequestInfo_IR_AttributeDef_mode_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -29303,17 +28768,19 @@
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_AttributeDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f41), ACE_NTOHL (0x74747269), ACE_NTOHL (0x62757465), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/AttributeDef:1.0
-  13, ACE_NTOHL (0x41747472), ACE_NTOHL (0x69627574), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = AttributeDef
+  13, ACE_NTOHL (0x41747472), ACE_NTOHL (0x69627574), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = IR_AttributeDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_AttributeDef (CORBA::tk_objref, sizeof (_oc_IR_AttributeDef), (char *) &_oc_IR_AttributeDef, 0, sizeof (IR::AttributeDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_AttributeDef (CORBA::tk_objref, sizeof (_oc_IR_AttributeDef), (char *) &_oc_IR_AttributeDef, 0, sizeof (IR_AttributeDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_AttributeDef, &_tc_TAO_tc_IR_AttributeDef)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_AttributeDescription[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -29486,14 +28953,15 @@
 
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_AttributeDescription (CORBA::tk_struct, sizeof (_oc_IR_AttributeDescription), (char *) &_oc_IR_AttributeDescription, 0, sizeof (IR::AttributeDescription));
+static CORBA::TypeCode _tc_TAO_tc_IR_AttributeDescription (CORBA::tk_struct, sizeof (_oc_IR_AttributeDescription), (char *) &_oc_IR_AttributeDescription, 0, sizeof (IR_AttributeDescription));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_AttributeDescription, &_tc_TAO_tc_IR_AttributeDescription)
 TAO_NAMESPACE_END
-void IR::AttributeDescription::_tao_any_destructor (void *x)
+
+void IR_AttributeDescription::_tao_any_destructor (void *x)
 {
-  AttributeDescription *tmp = ACE_static_cast (AttributeDescription*,x);
+  IR_AttributeDescription *tmp = ACE_static_cast (IR_AttributeDescription*,x);
   delete tmp;
 }
 
@@ -29506,11 +28974,12 @@
   10, ACE_NTOHL (0x4f505f4e), ACE_NTOHL (0x4f524d41), ACE_NTOHL (0x4c000000),  // name = OP_NORMAL
   10, ACE_NTOHL (0x4f505f4f), ACE_NTOHL (0x4e455741), ACE_NTOHL (0x59000000),  // name = OP_ONEWAY
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_OperationMode (CORBA::tk_enum, sizeof (_oc_IR_OperationMode), (char *) &_oc_IR_OperationMode, 0, sizeof (IR::OperationMode));
+static CORBA::TypeCode _tc_TAO_tc_IR_OperationMode (CORBA::tk_enum, sizeof (_oc_IR_OperationMode), (char *) &_oc_IR_OperationMode, 0, sizeof (IR_OperationMode));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_OperationMode, &_tc_TAO_tc_IR_OperationMode)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_ParameterMode[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -29521,11 +28990,12 @@
   10, ACE_NTOHL (0x50415241), ACE_NTOHL (0x4d5f4f55), ACE_NTOHL (0x54000000),  // name = PARAM_OUT
   12, ACE_NTOHL (0x50415241), ACE_NTOHL (0x4d5f494e), ACE_NTOHL (0x4f555400),  // name = PARAM_INOUT
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ParameterMode (CORBA::tk_enum, sizeof (_oc_IR_ParameterMode), (char *) &_oc_IR_ParameterMode, 0, sizeof (IR::ParameterMode));
+static CORBA::TypeCode _tc_TAO_tc_IR_ParameterMode (CORBA::tk_enum, sizeof (_oc_IR_ParameterMode), (char *) &_oc_IR_ParameterMode, 0, sizeof (IR_ParameterMode));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ParameterMode, &_tc_TAO_tc_IR_ParameterMode)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_ParameterDescription[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -29549,7 +29019,7 @@
   48, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x444c5479), ACE_NTOHL (0x70653a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/IDLType:1.0
-    8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IDLType
+    8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IR_IDLType
 
   5, ACE_NTOHL (0x6d6f6465), ACE_NTOHL (0x0),  // name = mode
   CORBA::tk_enum, // typecode kind
@@ -29563,32 +29033,30 @@
     12, ACE_NTOHL (0x50415241), ACE_NTOHL (0x4d5f494e), ACE_NTOHL (0x4f555400),  // name = PARAM_INOUT
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ParameterDescription (CORBA::tk_struct, sizeof (_oc_IR_ParameterDescription), (char *) &_oc_IR_ParameterDescription, 0, sizeof (IR::ParameterDescription));
+static CORBA::TypeCode _tc_TAO_tc_IR_ParameterDescription (CORBA::tk_struct, sizeof (_oc_IR_ParameterDescription), (char *) &_oc_IR_ParameterDescription, 0, sizeof (IR_ParameterDescription));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ParameterDescription, &_tc_TAO_tc_IR_ParameterDescription)
 TAO_NAMESPACE_END
-void IR::ParameterDescription::_tao_any_destructor (void *x)
+
+void IR_ParameterDescription::_tao_any_destructor (void *x)
 {
-  ParameterDescription *tmp = ACE_static_cast (ParameterDescription*,x);
+  IR_ParameterDescription *tmp = ACE_static_cast (IR_ParameterDescription*,x);
   delete tmp;
 }
 
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_SEQUENCE_IR_PARDESCRIPTIONSEQ_CS_)
-#define __TAO_UNBOUNDED_SEQUENCE_IR_PARDESCRIPTIONSEQ_CS_
-
   void
-  IR::_TAO_Unbounded_Sequence_IR_ParDescriptionSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Sequence_IR_ParDescriptionSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::ParameterDescription* tmp = 0;
+    IR_ParameterDescription* tmp = 0;
     tmp = _TAO_Unbounded_Sequence_IR_ParDescriptionSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::ParameterDescription *old = ACE_reinterpret_cast (IR::ParameterDescription *,this->buffer_);
+      IR_ParameterDescription *old = ACE_reinterpret_cast (IR_ParameterDescription *,this->buffer_);
       
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         tmp[i] = old[i];
@@ -29601,75 +29069,65 @@
   }
   
   void
-  IR::_TAO_Unbounded_Sequence_IR_ParDescriptionSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Sequence_IR_ParDescriptionSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
     
-    IR::ParameterDescription *tmp = ACE_reinterpret_cast (IR::ParameterDescription *,this->buffer_);
+    IR_ParameterDescription *tmp = ACE_reinterpret_cast (IR_ParameterDescription *,this->buffer_);
     
     _TAO_Unbounded_Sequence_IR_ParDescriptionSeq::freebuf (tmp);
     this->buffer_ = 0;
   } 
   
-  IR::_TAO_Unbounded_Sequence_IR_ParDescriptionSeq::~_TAO_Unbounded_Sequence_IR_ParDescriptionSeq (void) // Dtor.
+  _TAO_Unbounded_Sequence_IR_ParDescriptionSeq::~_TAO_Unbounded_Sequence_IR_ParDescriptionSeq (void) // Dtor.
   {
     this->_deallocate_buffer ();
   }
   
-  
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_PARDESCRIPTIONSEQ_CS_)
-#define _IR_PARDESCRIPTIONSEQ_CS_
-
 // *************************************************************
-// IR::ParDescriptionSeq
+// IR_ParDescriptionSeq
 // *************************************************************
 
-IR::ParDescriptionSeq::ParDescriptionSeq (void)
+IR_ParDescriptionSeq::IR_ParDescriptionSeq (void)
 {}
-IR::ParDescriptionSeq::ParDescriptionSeq (CORBA::ULong max) // uses max size
+IR_ParDescriptionSeq::IR_ParDescriptionSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_ParDescriptionSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::ParameterDescription>
+  TAO_Unbounded_Sequence<IR_ParameterDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::ParDescriptionSeq::ParDescriptionSeq (CORBA::ULong max, CORBA::ULong length, IR::ParameterDescription *buffer, CORBA::Boolean release)
+IR_ParDescriptionSeq::IR_ParDescriptionSeq (CORBA::ULong max, CORBA::ULong length, IR_ParameterDescription *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_ParDescriptionSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::ParameterDescription>
+  TAO_Unbounded_Sequence<IR_ParameterDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::ParDescriptionSeq::ParDescriptionSeq (const ParDescriptionSeq &seq) // copy ctor
+IR_ParDescriptionSeq::IR_ParDescriptionSeq (const IR_ParDescriptionSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_ParDescriptionSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::ParameterDescription>
+  TAO_Unbounded_Sequence<IR_ParameterDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::ParDescriptionSeq::~ParDescriptionSeq (void) // dtor
+IR_ParDescriptionSeq::~IR_ParDescriptionSeq (void) // dtor
 {}
-void IR::ParDescriptionSeq::_tao_any_destructor (void *x)
+void IR_ParDescriptionSeq::_tao_any_destructor (void *x)
 {
-  ParDescriptionSeq *tmp = ACE_static_cast (ParDescriptionSeq*,x);
+  IR_ParDescriptionSeq *tmp = ACE_static_cast (IR_ParDescriptionSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_ParDescriptionSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -29701,7 +29159,7 @@
       48, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x444c5479), ACE_NTOHL (0x70653a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/IDLType:1.0
-        8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IDLType
+        8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IR_IDLType
 
       5, ACE_NTOHL (0x6d6f6465), ACE_NTOHL (0x0),  // name = mode
       CORBA::tk_enum, // typecode kind
@@ -29718,11 +29176,12 @@
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ParDescriptionSeq (CORBA::tk_alias, sizeof (_oc_IR_ParDescriptionSeq), (char *) &_oc_IR_ParDescriptionSeq, 0, sizeof (IR::ParDescriptionSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_ParDescriptionSeq (CORBA::tk_alias, sizeof (_oc_IR_ParDescriptionSeq), (char *) &_oc_IR_ParDescriptionSeq, 0, sizeof (IR_ParDescriptionSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ParDescriptionSeq, &_tc_TAO_tc_IR_ParDescriptionSeq)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_ContextIdentifier[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -29743,16 +29202,13 @@
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ContextIdentifier, &_tc_TAO_tc_IR_ContextIdentifier)
 TAO_NAMESPACE_END
 
-#if !defined (_IR_CONTEXTIDSEQ_CS_)
-#define _IR_CONTEXTIDSEQ_CS_
-
 // *************************************************************
-// IR::ContextIdSeq
+// IR_ContextIdSeq
 // *************************************************************
 
-IR::ContextIdSeq::ContextIdSeq (void)
+IR_ContextIdSeq::IR_ContextIdSeq (void)
 {}
-IR::ContextIdSeq::ContextIdSeq (CORBA::ULong max) // uses max size
+IR_ContextIdSeq::IR_ContextIdSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   TAO_Unbounded_String_Sequence
@@ -29761,7 +29217,7 @@
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::ContextIdSeq::ContextIdSeq (CORBA::ULong max, CORBA::ULong length, char * *buffer, CORBA::Boolean release)
+IR_ContextIdSeq::IR_ContextIdSeq (CORBA::ULong max, CORBA::ULong length, char * *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   TAO_Unbounded_String_Sequence
@@ -29770,7 +29226,7 @@
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::ContextIdSeq::ContextIdSeq (const ContextIdSeq &seq) // copy ctor
+IR_ContextIdSeq::IR_ContextIdSeq (const IR_ContextIdSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   TAO_Unbounded_String_Sequence
@@ -29779,17 +29235,14 @@
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::ContextIdSeq::~ContextIdSeq (void) // dtor
+IR_ContextIdSeq::~IR_ContextIdSeq (void) // dtor
 {}
-void IR::ContextIdSeq::_tao_any_destructor (void *x)
+void IR_ContextIdSeq::_tao_any_destructor (void *x)
 {
-  ContextIdSeq *tmp = ACE_static_cast (ContextIdSeq*,x);
+  IR_ContextIdSeq *tmp = ACE_static_cast (IR_ContextIdSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_ContextIdSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -29815,7 +29268,7 @@
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ContextIdSeq (CORBA::tk_alias, sizeof (_oc_IR_ContextIdSeq), (char *) &_oc_IR_ContextIdSeq, 0, sizeof (IR::ContextIdSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_ContextIdSeq (CORBA::tk_alias, sizeof (_oc_IR_ContextIdSeq), (char *) &_oc_IR_ContextIdSeq, 0, sizeof (IR_ContextIdSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ContextIdSeq, &_tc_TAO_tc_IR_ContextIdSeq)
@@ -29825,15 +29278,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_OperationDef_Proxy_Impl::_TAO_OperationDef_Proxy_Impl (void)
+_TAO_OperationDef_Proxy_Impl::_TAO_OperationDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_OperationDef_Remote_Proxy_Impl::_TAO_OperationDef_Remote_Proxy_Impl (void)
+_TAO_OperationDef_Remote_Proxy_Impl::_TAO_OperationDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-CORBA::TypeCode_ptr IR::_TAO_OperationDef_Remote_Proxy_Impl::result (
+CORBA::TypeCode_ptr _TAO_OperationDef_Remote_Proxy_Impl::result (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -29871,7 +29324,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_get ri (
+      IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -29993,7 +29446,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::IDLType_ptr IR::_TAO_OperationDef_Remote_Proxy_Impl::result_def (
+IR_IDLType_ptr _TAO_OperationDef_Remote_Proxy_Impl::result_def (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -30002,8 +29455,8 @@
   ))
 {
   
-  IR::IDLType_ptr _tao_retval = IR::IDLType::_nil ();
-  IR::IDLType_var _tao_safe_retval (_tao_retval);
+  IR_IDLType_ptr _tao_retval = IR_IDLType::_nil ();
+  IR_IDLType_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -30031,7 +29484,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_get ri (
+      IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -30087,7 +29540,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::IDLType_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_IDLType_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -30153,24 +29606,19 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_OperationDef_Remote_Proxy_Impl::result_def (
+void _TAO_OperationDef_Remote_Proxy_Impl::result_def (
     CORBA_Object *_collocated_tao_target_,
-    IR::IDLType_ptr result_def,
+    IR_IDLType_ptr result_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_result_def",
@@ -30191,7 +29639,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_set ri (
+      IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_set ri (
         &_tao_call,
         _collocated_tao_target_,
         result_def,
@@ -30305,7 +29753,7 @@
   
 }
 
-IR::ParDescriptionSeq * IR::_TAO_OperationDef_Remote_Proxy_Impl::params (
+IR_ParDescriptionSeq * _TAO_OperationDef_Remote_Proxy_Impl::params (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -30314,7 +29762,7 @@
   ))
 {
   
-  IR::ParDescriptionSeq *_tao_retval = 0;
+  IR_ParDescriptionSeq *_tao_retval = 0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -30322,8 +29770,8 @@
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
   
-  ACE_NEW_RETURN (_tao_retval, IR::ParDescriptionSeq, _tao_retval);
-  IR::ParDescriptionSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_ParDescriptionSeq, _tao_retval);
+  IR_ParDescriptionSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_params",
@@ -30344,7 +29792,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_get ri (
+      IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -30400,7 +29848,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ParDescriptionSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ParDescriptionSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -30466,24 +29914,19 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_OperationDef_Remote_Proxy_Impl::params (
+void _TAO_OperationDef_Remote_Proxy_Impl::params (
     CORBA_Object *_collocated_tao_target_,
-    const IR::ParDescriptionSeq & params,
+    const IR_ParDescriptionSeq & params,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_params",
@@ -30504,7 +29947,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_set ri (
+      IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_set ri (
         &_tao_call,
         _collocated_tao_target_,
         params,
@@ -30618,7 +30061,7 @@
   
 }
 
-IR::OperationMode IR::_TAO_OperationDef_Remote_Proxy_Impl::mode (
+IR_OperationMode _TAO_OperationDef_Remote_Proxy_Impl::mode (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -30627,7 +30070,7 @@
   ))
 {
   
-  IR::OperationMode _tao_retval = (IR::OperationMode)0;
+  IR_OperationMode _tao_retval = (IR_OperationMode)0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -30655,7 +30098,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_get ri (
+      IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -30711,7 +30154,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::OperationMode  _tao_retval_info = _tao_retval;
+              IR_OperationMode  _tao_retval_info = _tao_retval;
                ri.result (_tao_retval_info);
             );
           
@@ -30776,24 +30219,19 @@
   return _tao_retval;
 }
 
-void IR::_TAO_OperationDef_Remote_Proxy_Impl::mode (
+void _TAO_OperationDef_Remote_Proxy_Impl::mode (
     CORBA_Object *_collocated_tao_target_,
-    IR::OperationMode mode,
+    IR_OperationMode mode,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_mode",
@@ -30814,7 +30252,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_set ri (
+      IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_set ri (
         &_tao_call,
         _collocated_tao_target_,
         mode,
@@ -30928,7 +30366,7 @@
   
 }
 
-IR::ContextIdSeq * IR::_TAO_OperationDef_Remote_Proxy_Impl::contexts (
+IR_ContextIdSeq * _TAO_OperationDef_Remote_Proxy_Impl::contexts (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -30937,7 +30375,7 @@
   ))
 {
   
-  IR::ContextIdSeq *_tao_retval = 0;
+  IR_ContextIdSeq *_tao_retval = 0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -30945,8 +30383,8 @@
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
   
-  ACE_NEW_RETURN (_tao_retval, IR::ContextIdSeq, _tao_retval);
-  IR::ContextIdSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_ContextIdSeq, _tao_retval);
+  IR_ContextIdSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_contexts",
@@ -30967,7 +30405,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_get ri (
+      IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -31023,7 +30461,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ContextIdSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ContextIdSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -31089,24 +30527,19 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_OperationDef_Remote_Proxy_Impl::contexts (
+void _TAO_OperationDef_Remote_Proxy_Impl::contexts (
     CORBA_Object *_collocated_tao_target_,
-    const IR::ContextIdSeq & contexts,
+    const IR_ContextIdSeq & contexts,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_contexts",
@@ -31127,7 +30560,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_set ri (
+      IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_set ri (
         &_tao_call,
         _collocated_tao_target_,
         contexts,
@@ -31241,7 +30674,7 @@
   
 }
 
-IR::ExceptionDefSeq * IR::_TAO_OperationDef_Remote_Proxy_Impl::exceptions (
+IR_ExceptionDefSeq * _TAO_OperationDef_Remote_Proxy_Impl::exceptions (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -31250,7 +30683,7 @@
   ))
 {
   
-  IR::ExceptionDefSeq *_tao_retval = 0;
+  IR_ExceptionDefSeq *_tao_retval = 0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -31258,8 +30691,8 @@
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
   
-  ACE_NEW_RETURN (_tao_retval, IR::ExceptionDefSeq, _tao_retval);
-  IR::ExceptionDefSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_ExceptionDefSeq, _tao_retval);
+  IR_ExceptionDefSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_exceptions",
@@ -31280,7 +30713,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_get ri (
+      IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -31336,7 +30769,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ExceptionDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ExceptionDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -31402,24 +30835,19 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_OperationDef_Remote_Proxy_Impl::exceptions (
+void _TAO_OperationDef_Remote_Proxy_Impl::exceptions (
     CORBA_Object *_collocated_tao_target_,
-    const IR::ExceptionDefSeq & exceptions,
+    const IR_ExceptionDefSeq & exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
 
-  
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_set_exceptions",
@@ -31440,7 +30868,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_set ri (
+      IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_set ri (
         &_tao_call,
         _collocated_tao_target_,
         exceptions,
@@ -31564,37 +30992,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_OperationDef_Proxy_Broker::_TAO_OperationDef_Proxy_Broker (void)
+_TAO_OperationDef_Proxy_Broker::_TAO_OperationDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_OperationDef_Proxy_Broker::~_TAO_OperationDef_Proxy_Broker (void)
+_TAO_OperationDef_Proxy_Broker::~_TAO_OperationDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_OperationDef_Proxy_Broker * (*IR__TAO_OperationDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_OperationDef_Proxy_Broker * (*_TAO_OperationDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_OperationDef_Remote_Proxy_Broker *
-IR::_TAO_OperationDef_Remote_Proxy_Broker::the_TAO_OperationDef_Remote_Proxy_Broker (void)
+_TAO_OperationDef_Remote_Proxy_Broker *
+_TAO_OperationDef_Remote_Proxy_Broker::the_TAO_OperationDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_OperationDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_OperationDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_OperationDef_Remote_Proxy_Broker::_TAO_OperationDef_Remote_Proxy_Broker (void)
+_TAO_OperationDef_Remote_Proxy_Broker::_TAO_OperationDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_OperationDef_Remote_Proxy_Broker::~_TAO_OperationDef_Remote_Proxy_Broker (void)
+_TAO_OperationDef_Remote_Proxy_Broker::~_TAO_OperationDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_OperationDef_Proxy_Impl&
-IR::_TAO_OperationDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::OperationDef *object,
+_TAO_OperationDef_Proxy_Impl&
+_TAO_OperationDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_OperationDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -31610,109 +31038,109 @@
 
 
 // default constructor
-IR::OperationDef::OperationDef (int collocated)
+IR_OperationDef::IR_OperationDef (int collocated)
 {
   this->IR_OperationDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::OperationDef::~OperationDef (void)
+IR_OperationDef::~IR_OperationDef (void)
 {}
 
 void
-IR::OperationDef::IR_OperationDef_setup_collocation (int collocated)
+IR_OperationDef::IR_OperationDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_OperationDef_Proxy_Broker_ =
-      ::IR__TAO_OperationDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_OperationDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_OperationDef_Proxy_Broker_ =
-      ::IR::_TAO_OperationDef_Remote_Proxy_Broker::the_TAO_OperationDef_Remote_Proxy_Broker ();
+      _TAO_OperationDef_Remote_Proxy_Broker::the_TAO_OperationDef_Remote_Proxy_Broker ();
   
   this->IR_Contained_setup_collocation (collocated);
 }
 
-void IR::OperationDef::_tao_any_destructor (void *x)
+void IR_OperationDef::_tao_any_destructor (void *x)
 {
-  OperationDef *tmp = ACE_static_cast (OperationDef*,x);
+  IR_OperationDef *tmp = ACE_static_cast (IR_OperationDef*,x);
   CORBA::release (tmp);
 }
 
-IR::OperationDef_ptr IR::OperationDef::_narrow (
+IR_OperationDef_ptr IR_OperationDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return OperationDef::_nil ();
+    return IR_OperationDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/OperationDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (OperationDef::_nil ());
+      ACE_CHECK_RETURN (IR_OperationDef::_nil ());
       if (is_a == 0)
-        return OperationDef::_nil ();
+        return IR_OperationDef::_nil ();
     }
-  return OperationDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_OperationDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::OperationDef_ptr IR::OperationDef::_unchecked_narrow (
+IR_OperationDef_ptr IR_OperationDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return OperationDef::_nil ();
+    return IR_OperationDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      OperationDef_ptr default_proxy = OperationDef::_nil ();
+      IR_OperationDef_ptr default_proxy = IR_OperationDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_OperationDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_OperationDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::OperationDef (
+          ::IR_OperationDef (
             stub,
             1,
             obj->_servant ()),
             
-          OperationDef::_nil ());
+          IR_OperationDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::OperationDef (stub, 0, obj->_servant ()), OperationDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_OperationDef (stub, 0, obj->_servant ()), IR_OperationDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            OperationDef_ptr,
+            IR_OperationDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &OperationDef::_narrow
+                      &IR_OperationDef::_narrow
                     )
                 )
           );
 }
 
-IR::OperationDef_ptr
-IR::OperationDef::_duplicate (OperationDef_ptr obj)
+IR_OperationDef_ptr
+IR_OperationDef::_duplicate (IR_OperationDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::OperationDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_OperationDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/OperationDef:1.0")) ||
@@ -31724,34 +31152,34 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::OperationDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_OperationDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, OperationDef)::_narrow))
+      &IR_OperationDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -31764,12 +31192,12 @@
   return retv;
 }
 
-const char* IR::OperationDef::_interface_repository_id (void) const
+const char* IR_OperationDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/OperationDef:1.0";
 }
 
-CORBA::TypeCode_ptr IR::OperationDef::result (
+CORBA::TypeCode_ptr IR_OperationDef::result (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -31786,7 +31214,7 @@
     );
 }
 
-IR::IDLType_ptr IR::OperationDef::result_def (
+IR_IDLType_ptr IR_OperationDef::result_def (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -31803,8 +31231,8 @@
     );
 }
 
-void IR::OperationDef::result_def (
-    IR::IDLType_ptr result_def,
+void IR_OperationDef::result_def (
+    IR_IDLType_ptr result_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -31822,7 +31250,7 @@
     );
 }
 
-IR::ParDescriptionSeq * IR::OperationDef::params (
+IR_ParDescriptionSeq * IR_OperationDef::params (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -31839,8 +31267,8 @@
     );
 }
 
-void IR::OperationDef::params (
-    const IR::ParDescriptionSeq & params,
+void IR_OperationDef::params (
+    const IR_ParDescriptionSeq & params,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -31858,7 +31286,7 @@
     );
 }
 
-IR::OperationMode IR::OperationDef::mode (
+IR_OperationMode IR_OperationDef::mode (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -31867,7 +31295,7 @@
 {
   _TAO_OperationDef_Proxy_Impl &proxy = 
     this->the_TAO_OperationDef_Proxy_Broker_->select_proxy (this, ACE_TRY_ENV);
-  ACE_CHECK_RETURN ((IR::OperationMode)0);
+  ACE_CHECK_RETURN ((IR_OperationMode)0);
   
   return proxy.mode (
       this,
@@ -31875,8 +31303,8 @@
     );
 }
 
-void IR::OperationDef::mode (
-    IR::OperationMode mode,
+void IR_OperationDef::mode (
+    IR_OperationMode mode,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -31894,7 +31322,7 @@
     );
 }
 
-IR::ContextIdSeq * IR::OperationDef::contexts (
+IR_ContextIdSeq * IR_OperationDef::contexts (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -31911,8 +31339,8 @@
     );
 }
 
-void IR::OperationDef::contexts (
-    const IR::ContextIdSeq & contexts,
+void IR_OperationDef::contexts (
+    const IR_ContextIdSeq & contexts,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -31930,7 +31358,7 @@
     );
 }
 
-IR::ExceptionDefSeq * IR::OperationDef::exceptions (
+IR_ExceptionDefSeq * IR_OperationDef::exceptions (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -31947,8 +31375,8 @@
     );
 }
 
-void IR::OperationDef::exceptions (
-    const IR::ExceptionDefSeq & exceptions,
+void IR_OperationDef::exceptions (
+    const IR_ExceptionDefSeq & exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -31966,9 +31394,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_get::TAO_ClientRequestInfo_IR_OperationDef_result_get (
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_get::TAO_ClientRequestInfo_IR_OperationDef_result_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -31977,7 +31404,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -31989,7 +31416,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -32002,7 +31429,7 @@
 
 
 CORBA::Any * 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -32018,13 +31445,13 @@
 }
 
 void 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_get::result (CORBA::TypeCode_ptr result)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_get::result (CORBA::TypeCode_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_get::TAO_ClientRequestInfo_IR_OperationDef_result_def_get (
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_get::TAO_ClientRequestInfo_IR_OperationDef_result_def_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -32033,7 +31460,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -32045,7 +31472,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -32058,7 +31485,7 @@
 
 
 CORBA::Any * 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -32074,16 +31501,16 @@
 }
 
 void 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_get::result (IR::IDLType_ptr result)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_get::result (IR_IDLType_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_set::TAO_ClientRequestInfo_IR_OperationDef_result_def_set (
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_set::TAO_ClientRequestInfo_IR_OperationDef_result_def_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    IR::IDLType_ptr result_def,
+    IR_IDLType_ptr result_def,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -32091,7 +31518,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -32111,7 +31538,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -32124,7 +31551,7 @@
 
 
 CORBA::Any * 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_result_def_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -32136,7 +31563,7 @@
   return result_any;
 }
 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_get::TAO_ClientRequestInfo_IR_OperationDef_params_get (
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_get::TAO_ClientRequestInfo_IR_OperationDef_params_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -32145,7 +31572,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -32157,7 +31584,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -32170,7 +31597,7 @@
 
 
 CORBA::Any * 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -32186,16 +31613,16 @@
 }
 
 void 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_get::result (IR::ParDescriptionSeq * result)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_get::result (IR_ParDescriptionSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_set::TAO_ClientRequestInfo_IR_OperationDef_params_set (
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_set::TAO_ClientRequestInfo_IR_OperationDef_params_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    const IR::ParDescriptionSeq & params,
+    const IR_ParDescriptionSeq & params,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -32203,7 +31630,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -32223,7 +31650,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -32236,7 +31663,7 @@
 
 
 CORBA::Any * 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_params_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -32248,7 +31675,7 @@
   return result_any;
 }
 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_get::TAO_ClientRequestInfo_IR_OperationDef_mode_get (
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_get::TAO_ClientRequestInfo_IR_OperationDef_mode_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -32257,7 +31684,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -32269,7 +31696,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -32282,7 +31709,7 @@
 
 
 CORBA::Any * 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -32298,16 +31725,16 @@
 }
 
 void 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_get::result (IR::OperationMode result)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_get::result (IR_OperationMode result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_set::TAO_ClientRequestInfo_IR_OperationDef_mode_set (
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_set::TAO_ClientRequestInfo_IR_OperationDef_mode_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    IR::OperationMode & mode,
+    IR_OperationMode & mode,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -32315,7 +31742,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -32335,7 +31762,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -32348,7 +31775,7 @@
 
 
 CORBA::Any * 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_mode_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -32360,7 +31787,7 @@
   return result_any;
 }
 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_get::TAO_ClientRequestInfo_IR_OperationDef_contexts_get (
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_get::TAO_ClientRequestInfo_IR_OperationDef_contexts_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -32369,7 +31796,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -32381,7 +31808,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -32394,7 +31821,7 @@
 
 
 CORBA::Any * 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -32410,16 +31837,16 @@
 }
 
 void 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_get::result (IR::ContextIdSeq * result)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_get::result (IR_ContextIdSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_set::TAO_ClientRequestInfo_IR_OperationDef_contexts_set (
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_set::TAO_ClientRequestInfo_IR_OperationDef_contexts_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    const IR::ContextIdSeq & contexts,
+    const IR_ContextIdSeq & contexts,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -32427,7 +31854,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -32447,7 +31874,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -32460,7 +31887,7 @@
 
 
 CORBA::Any * 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_contexts_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -32472,7 +31899,7 @@
   return result_any;
 }
 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_get::TAO_ClientRequestInfo_IR_OperationDef_exceptions_get (
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_get::TAO_ClientRequestInfo_IR_OperationDef_exceptions_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -32481,7 +31908,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -32493,7 +31920,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -32506,7 +31933,7 @@
 
 
 CORBA::Any * 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -32522,16 +31949,16 @@
 }
 
 void 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_get::result (IR::ExceptionDefSeq * result)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_get::result (IR_ExceptionDefSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_set::TAO_ClientRequestInfo_IR_OperationDef_exceptions_set (
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_set::TAO_ClientRequestInfo_IR_OperationDef_exceptions_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    const IR::ExceptionDefSeq & exceptions,
+    const IR_ExceptionDefSeq & exceptions,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -32539,7 +31966,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -32559,7 +31986,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -32572,7 +31999,7 @@
 
 
 CORBA::Any * 
-IR::OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_OperationDef::TAO_ClientRequestInfo_IR_OperationDef_exceptions_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -32585,17 +32012,19 @@
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_OperationDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f4f), ACE_NTOHL (0x70657261), ACE_NTOHL (0x74696f6e), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/OperationDef:1.0
-  13, ACE_NTOHL (0x4f706572), ACE_NTOHL (0x6174696f), ACE_NTOHL (0x6e446566), ACE_NTOHL (0x0),  // name = OperationDef
+  13, ACE_NTOHL (0x4f706572), ACE_NTOHL (0x6174696f), ACE_NTOHL (0x6e446566), ACE_NTOHL (0x0),  // name = IR_OperationDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_OperationDef (CORBA::tk_objref, sizeof (_oc_IR_OperationDef), (char *) &_oc_IR_OperationDef, 0, sizeof (IR::OperationDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_OperationDef (CORBA::tk_objref, sizeof (_oc_IR_OperationDef), (char *) &_oc_IR_OperationDef, 0, sizeof (IR_OperationDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_OperationDef, &_tc_TAO_tc_IR_OperationDef)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_OperationDescription[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -32709,7 +32138,7 @@
         48, // encapsulation length
           TAO_ENCAP_BYTE_ORDER, // byte order
           27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x444c5479), ACE_NTOHL (0x70653a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/IDLType:1.0
-          8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IDLType
+          8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IR_IDLType
 
         5, ACE_NTOHL (0x6d6f6465), ACE_NTOHL (0x0),  // name = mode
         CORBA::tk_enum, // typecode kind
@@ -32785,28 +32214,25 @@
 
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_OperationDescription (CORBA::tk_struct, sizeof (_oc_IR_OperationDescription), (char *) &_oc_IR_OperationDescription, 0, sizeof (IR::OperationDescription));
+static CORBA::TypeCode _tc_TAO_tc_IR_OperationDescription (CORBA::tk_struct, sizeof (_oc_IR_OperationDescription), (char *) &_oc_IR_OperationDescription, 0, sizeof (IR_OperationDescription));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_OperationDescription, &_tc_TAO_tc_IR_OperationDescription)
 TAO_NAMESPACE_END
-void IR::OperationDescription::_tao_any_destructor (void *x)
+
+void IR_OperationDescription::_tao_any_destructor (void *x)
 {
-  OperationDescription *tmp = ACE_static_cast (OperationDescription*,x);
+  IR_OperationDescription *tmp = ACE_static_cast (IR_OperationDescription*,x);
   delete tmp;
 }
 
-
-#if !defined (_IR_REPOSITORYIDSEQ_CS_)
-#define _IR_REPOSITORYIDSEQ_CS_
-
 // *************************************************************
-// IR::RepositoryIdSeq
+// IR_RepositoryIdSeq
 // *************************************************************
 
-IR::RepositoryIdSeq::RepositoryIdSeq (void)
+IR_RepositoryIdSeq::IR_RepositoryIdSeq (void)
 {}
-IR::RepositoryIdSeq::RepositoryIdSeq (CORBA::ULong max) // uses max size
+IR_RepositoryIdSeq::IR_RepositoryIdSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   TAO_Unbounded_String_Sequence
@@ -32815,7 +32241,7 @@
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::RepositoryIdSeq::RepositoryIdSeq (CORBA::ULong max, CORBA::ULong length, char * *buffer, CORBA::Boolean release)
+IR_RepositoryIdSeq::IR_RepositoryIdSeq (CORBA::ULong max, CORBA::ULong length, char * *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   TAO_Unbounded_String_Sequence
@@ -32824,7 +32250,7 @@
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::RepositoryIdSeq::RepositoryIdSeq (const RepositoryIdSeq &seq) // copy ctor
+IR_RepositoryIdSeq::IR_RepositoryIdSeq (const IR_RepositoryIdSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   TAO_Unbounded_String_Sequence
@@ -32833,17 +32259,14 @@
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::RepositoryIdSeq::~RepositoryIdSeq (void) // dtor
+IR_RepositoryIdSeq::~IR_RepositoryIdSeq (void) // dtor
 {}
-void IR::RepositoryIdSeq::_tao_any_destructor (void *x)
+void IR_RepositoryIdSeq::_tao_any_destructor (void *x)
 {
-  RepositoryIdSeq *tmp = ACE_static_cast (RepositoryIdSeq*,x);
+  IR_RepositoryIdSeq *tmp = ACE_static_cast (IR_RepositoryIdSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_RepositoryIdSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -32863,7 +32286,7 @@
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_RepositoryIdSeq (CORBA::tk_alias, sizeof (_oc_IR_RepositoryIdSeq), (char *) &_oc_IR_RepositoryIdSeq, 0, sizeof (IR::RepositoryIdSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_RepositoryIdSeq (CORBA::tk_alias, sizeof (_oc_IR_RepositoryIdSeq), (char *) &_oc_IR_RepositoryIdSeq, 0, sizeof (IR_RepositoryIdSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_RepositoryIdSeq, &_tc_TAO_tc_IR_RepositoryIdSeq)
@@ -32871,18 +32294,15 @@
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_SEQUENCE_IR_OPDESCRIPTIONSEQ_CS_)
-#define __TAO_UNBOUNDED_SEQUENCE_IR_OPDESCRIPTIONSEQ_CS_
-
   void
-  IR::_TAO_Unbounded_Sequence_IR_OpDescriptionSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Sequence_IR_OpDescriptionSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::OperationDescription* tmp = 0;
+    IR_OperationDescription* tmp = 0;
     tmp = _TAO_Unbounded_Sequence_IR_OpDescriptionSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::OperationDescription *old = ACE_reinterpret_cast (IR::OperationDescription *,this->buffer_);
+      IR_OperationDescription *old = ACE_reinterpret_cast (IR_OperationDescription *,this->buffer_);
       
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         tmp[i] = old[i];
@@ -32895,75 +32315,65 @@
   }
   
   void
-  IR::_TAO_Unbounded_Sequence_IR_OpDescriptionSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Sequence_IR_OpDescriptionSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
     
-    IR::OperationDescription *tmp = ACE_reinterpret_cast (IR::OperationDescription *,this->buffer_);
+    IR_OperationDescription *tmp = ACE_reinterpret_cast (IR_OperationDescription *,this->buffer_);
     
     _TAO_Unbounded_Sequence_IR_OpDescriptionSeq::freebuf (tmp);
     this->buffer_ = 0;
   } 
   
-  IR::_TAO_Unbounded_Sequence_IR_OpDescriptionSeq::~_TAO_Unbounded_Sequence_IR_OpDescriptionSeq (void) // Dtor.
+  _TAO_Unbounded_Sequence_IR_OpDescriptionSeq::~_TAO_Unbounded_Sequence_IR_OpDescriptionSeq (void) // Dtor.
   {
     this->_deallocate_buffer ();
   }
   
-  
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_OPDESCRIPTIONSEQ_CS_)
-#define _IR_OPDESCRIPTIONSEQ_CS_
-
 // *************************************************************
-// IR::OpDescriptionSeq
+// IR_OpDescriptionSeq
 // *************************************************************
 
-IR::OpDescriptionSeq::OpDescriptionSeq (void)
+IR_OpDescriptionSeq::IR_OpDescriptionSeq (void)
 {}
-IR::OpDescriptionSeq::OpDescriptionSeq (CORBA::ULong max) // uses max size
+IR_OpDescriptionSeq::IR_OpDescriptionSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_OpDescriptionSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::OperationDescription>
+  TAO_Unbounded_Sequence<IR_OperationDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::OpDescriptionSeq::OpDescriptionSeq (CORBA::ULong max, CORBA::ULong length, IR::OperationDescription *buffer, CORBA::Boolean release)
+IR_OpDescriptionSeq::IR_OpDescriptionSeq (CORBA::ULong max, CORBA::ULong length, IR_OperationDescription *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_OpDescriptionSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::OperationDescription>
+  TAO_Unbounded_Sequence<IR_OperationDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::OpDescriptionSeq::OpDescriptionSeq (const OpDescriptionSeq &seq) // copy ctor
+IR_OpDescriptionSeq::IR_OpDescriptionSeq (const IR_OpDescriptionSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_OpDescriptionSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::OperationDescription>
+  TAO_Unbounded_Sequence<IR_OperationDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::OpDescriptionSeq::~OpDescriptionSeq (void) // dtor
+IR_OpDescriptionSeq::~IR_OpDescriptionSeq (void) // dtor
 {}
-void IR::OpDescriptionSeq::_tao_any_destructor (void *x)
+void IR_OpDescriptionSeq::_tao_any_destructor (void *x)
 {
-  OpDescriptionSeq *tmp = ACE_static_cast (OpDescriptionSeq*,x);
+  IR_OpDescriptionSeq *tmp = ACE_static_cast (IR_OpDescriptionSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_OpDescriptionSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -33085,7 +32495,7 @@
             48, // encapsulation length
               TAO_ENCAP_BYTE_ORDER, // byte order
               27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x444c5479), ACE_NTOHL (0x70653a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/IDLType:1.0
-              8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IDLType
+              8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IR_IDLType
 
             5, ACE_NTOHL (0x6d6f6465), ACE_NTOHL (0x0),  // name = mode
             CORBA::tk_enum, // typecode kind
@@ -33164,7 +32574,7 @@
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_OpDescriptionSeq (CORBA::tk_alias, sizeof (_oc_IR_OpDescriptionSeq), (char *) &_oc_IR_OpDescriptionSeq, 0, sizeof (IR::OpDescriptionSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_OpDescriptionSeq (CORBA::tk_alias, sizeof (_oc_IR_OpDescriptionSeq), (char *) &_oc_IR_OpDescriptionSeq, 0, sizeof (IR_OpDescriptionSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_OpDescriptionSeq, &_tc_TAO_tc_IR_OpDescriptionSeq)
@@ -33172,18 +32582,15 @@
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_SEQUENCE_IR_ATTRDESCRIPTIONSEQ_CS_)
-#define __TAO_UNBOUNDED_SEQUENCE_IR_ATTRDESCRIPTIONSEQ_CS_
-
   void
-  IR::_TAO_Unbounded_Sequence_IR_AttrDescriptionSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Sequence_IR_AttrDescriptionSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::AttributeDescription* tmp = 0;
+    IR_AttributeDescription* tmp = 0;
     tmp = _TAO_Unbounded_Sequence_IR_AttrDescriptionSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::AttributeDescription *old = ACE_reinterpret_cast (IR::AttributeDescription *,this->buffer_);
+      IR_AttributeDescription *old = ACE_reinterpret_cast (IR_AttributeDescription *,this->buffer_);
       
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         tmp[i] = old[i];
@@ -33196,75 +32603,65 @@
   }
   
   void
-  IR::_TAO_Unbounded_Sequence_IR_AttrDescriptionSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Sequence_IR_AttrDescriptionSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
     
-    IR::AttributeDescription *tmp = ACE_reinterpret_cast (IR::AttributeDescription *,this->buffer_);
+    IR_AttributeDescription *tmp = ACE_reinterpret_cast (IR_AttributeDescription *,this->buffer_);
     
     _TAO_Unbounded_Sequence_IR_AttrDescriptionSeq::freebuf (tmp);
     this->buffer_ = 0;
   } 
   
-  IR::_TAO_Unbounded_Sequence_IR_AttrDescriptionSeq::~_TAO_Unbounded_Sequence_IR_AttrDescriptionSeq (void) // Dtor.
+  _TAO_Unbounded_Sequence_IR_AttrDescriptionSeq::~_TAO_Unbounded_Sequence_IR_AttrDescriptionSeq (void) // Dtor.
   {
     this->_deallocate_buffer ();
   }
   
-  
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_ATTRDESCRIPTIONSEQ_CS_)
-#define _IR_ATTRDESCRIPTIONSEQ_CS_
-
 // *************************************************************
-// IR::AttrDescriptionSeq
+// IR_AttrDescriptionSeq
 // *************************************************************
 
-IR::AttrDescriptionSeq::AttrDescriptionSeq (void)
+IR_AttrDescriptionSeq::IR_AttrDescriptionSeq (void)
 {}
-IR::AttrDescriptionSeq::AttrDescriptionSeq (CORBA::ULong max) // uses max size
+IR_AttrDescriptionSeq::IR_AttrDescriptionSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_AttrDescriptionSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::AttributeDescription>
+  TAO_Unbounded_Sequence<IR_AttributeDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::AttrDescriptionSeq::AttrDescriptionSeq (CORBA::ULong max, CORBA::ULong length, IR::AttributeDescription *buffer, CORBA::Boolean release)
+IR_AttrDescriptionSeq::IR_AttrDescriptionSeq (CORBA::ULong max, CORBA::ULong length, IR_AttributeDescription *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_AttrDescriptionSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::AttributeDescription>
+  TAO_Unbounded_Sequence<IR_AttributeDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::AttrDescriptionSeq::AttrDescriptionSeq (const AttrDescriptionSeq &seq) // copy ctor
+IR_AttrDescriptionSeq::IR_AttrDescriptionSeq (const IR_AttrDescriptionSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_AttrDescriptionSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::AttributeDescription>
+  TAO_Unbounded_Sequence<IR_AttributeDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::AttrDescriptionSeq::~AttrDescriptionSeq (void) // dtor
+IR_AttrDescriptionSeq::~IR_AttrDescriptionSeq (void) // dtor
 {}
-void IR::AttrDescriptionSeq::_tao_any_destructor (void *x)
+void IR_AttrDescriptionSeq::_tao_any_destructor (void *x)
 {
-  AttrDescriptionSeq *tmp = ACE_static_cast (AttrDescriptionSeq*,x);
+  IR_AttrDescriptionSeq *tmp = ACE_static_cast (IR_AttrDescriptionSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_AttrDescriptionSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -33448,7 +32845,7 @@
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_AttrDescriptionSeq (CORBA::tk_alias, sizeof (_oc_IR_AttrDescriptionSeq), (char *) &_oc_IR_AttrDescriptionSeq, 0, sizeof (IR::AttrDescriptionSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_AttrDescriptionSeq (CORBA::tk_alias, sizeof (_oc_IR_AttrDescriptionSeq), (char *) &_oc_IR_AttrDescriptionSeq, 0, sizeof (IR_AttrDescriptionSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_AttrDescriptionSeq, &_tc_TAO_tc_IR_AttrDescriptionSeq)
@@ -33458,15 +32855,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_InterfaceDef_Proxy_Impl::_TAO_InterfaceDef_Proxy_Impl (void)
+_TAO_InterfaceDef_Proxy_Impl::_TAO_InterfaceDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_InterfaceDef_Remote_Proxy_Impl::_TAO_InterfaceDef_Remote_Proxy_Impl (void)
+_TAO_InterfaceDef_Remote_Proxy_Impl::_TAO_InterfaceDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-IR::InterfaceDefSeq * IR::_TAO_InterfaceDef_Remote_Proxy_Impl::base_interfaces (
+IR_InterfaceDefSeq * _TAO_InterfaceDef_Remote_Proxy_Impl::base_interfaces (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -33475,7 +32872,7 @@
   ))
 {
   
-  IR::InterfaceDefSeq *_tao_retval = 0;
+  IR_InterfaceDefSeq *_tao_retval = 0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -33483,8 +32880,8 @@
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
   
-  ACE_NEW_RETURN (_tao_retval, IR::InterfaceDefSeq, _tao_retval);
-  IR::InterfaceDefSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_InterfaceDefSeq, _tao_retval);
+  IR_InterfaceDefSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_base_interfaces",
@@ -33505,7 +32902,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_get ri (
+      IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -33561,7 +32958,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::InterfaceDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_InterfaceDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -33627,19 +33024,15 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_InterfaceDef_Remote_Proxy_Impl::base_interfaces (
+void _TAO_InterfaceDef_Remote_Proxy_Impl::base_interfaces (
     CORBA_Object *_collocated_tao_target_,
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -33665,7 +33058,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_set ri (
+      IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_set ri (
         &_tao_call,
         _collocated_tao_target_,
         base_interfaces,
@@ -33779,7 +33172,7 @@
   
 }
 
-CORBA::Boolean IR::_TAO_InterfaceDef_Remote_Proxy_Impl::is_abstract (
+CORBA::Boolean _TAO_InterfaceDef_Remote_Proxy_Impl::is_abstract (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -33816,7 +33209,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_get ri (
+      IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -33937,7 +33330,7 @@
   return _tao_retval;
 }
 
-void IR::_TAO_InterfaceDef_Remote_Proxy_Impl::is_abstract (
+void _TAO_InterfaceDef_Remote_Proxy_Impl::is_abstract (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Boolean is_abstract,
     CORBA::Environment &ACE_TRY_ENV
@@ -33946,10 +33339,6 @@
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -33975,7 +33364,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_set ri (
+      IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_set ri (
         &_tao_call,
         _collocated_tao_target_,
         is_abstract,
@@ -34089,7 +33478,7 @@
   
 }
 
-CORBA::Boolean IR::_TAO_InterfaceDef_Remote_Proxy_Impl::is_local (
+CORBA::Boolean _TAO_InterfaceDef_Remote_Proxy_Impl::is_local (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -34126,7 +33515,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_get ri (
+      IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -34247,7 +33636,7 @@
   return _tao_retval;
 }
 
-void IR::_TAO_InterfaceDef_Remote_Proxy_Impl::is_local (
+void _TAO_InterfaceDef_Remote_Proxy_Impl::is_local (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Boolean is_local,
     CORBA::Environment &ACE_TRY_ENV
@@ -34256,10 +33645,6 @@
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -34285,7 +33670,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_set ri (
+      IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_set ri (
         &_tao_call,
         _collocated_tao_target_,
         is_local,
@@ -34399,7 +33784,7 @@
   
 }
 
-CORBA::Boolean IR::_TAO_InterfaceDef_Remote_Proxy_Impl::is_a (
+CORBA::Boolean _TAO_InterfaceDef_Remote_Proxy_Impl::is_a (
     CORBA_Object *_collocated_tao_target_,
     const char * interface_id,
     CORBA::Environment &ACE_TRY_ENV
@@ -34437,7 +33822,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_a ri (
+      IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_a ri (
         &_tao_call,
         _collocated_tao_target_,
         interface_id,
@@ -34569,15 +33954,15 @@
   return _tao_retval;
 }
 
-IR::AttributeDef_ptr IR::_TAO_InterfaceDef_Remote_Proxy_Impl::create_attribute (
+IR_AttributeDef_ptr _TAO_InterfaceDef_Remote_Proxy_Impl::create_attribute (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
-    IR::AttributeMode mode,
-    const IR::ExceptionDefSeq & get_exceptions,
-    const IR::ExceptionDefSeq & put_exceptions,
+    IR_IDLType_ptr type,
+    IR_AttributeMode mode,
+    const IR_ExceptionDefSeq & get_exceptions,
+    const IR_ExceptionDefSeq & put_exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -34585,8 +33970,8 @@
   ))
 {
   
-  IR::AttributeDef_ptr _tao_retval = IR::AttributeDef::_nil ();
-  IR::AttributeDef_var _tao_safe_retval (_tao_retval);
+  IR_AttributeDef_ptr _tao_retval = IR_AttributeDef::_nil ();
+  IR_AttributeDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -34614,7 +33999,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_attribute ri (
+      IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_attribute ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -34693,7 +34078,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::AttributeDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_AttributeDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -34759,16 +34144,16 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::OperationDef_ptr IR::_TAO_InterfaceDef_Remote_Proxy_Impl::create_operation (
+IR_OperationDef_ptr _TAO_InterfaceDef_Remote_Proxy_Impl::create_operation (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr result,
-    IR::OperationMode mode,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
-    const IR::ContextIdSeq & contexts,
+    IR_IDLType_ptr result,
+    IR_OperationMode mode,
+    const IR_ParDescriptionSeq & params,
+    const IR_ExceptionDefSeq & exceptions,
+    const IR_ContextIdSeq & contexts,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -34776,8 +34161,8 @@
   ))
 {
   
-  IR::OperationDef_ptr _tao_retval = IR::OperationDef::_nil ();
-  IR::OperationDef_var _tao_safe_retval (_tao_retval);
+  IR_OperationDef_ptr _tao_retval = IR_OperationDef::_nil ();
+  IR_OperationDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -34805,7 +34190,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_operation ri (
+      IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_operation ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -34886,7 +34271,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::OperationDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_OperationDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -34962,37 +34347,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_InterfaceDef_Proxy_Broker::_TAO_InterfaceDef_Proxy_Broker (void)
+_TAO_InterfaceDef_Proxy_Broker::_TAO_InterfaceDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_InterfaceDef_Proxy_Broker::~_TAO_InterfaceDef_Proxy_Broker (void)
+_TAO_InterfaceDef_Proxy_Broker::~_TAO_InterfaceDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_InterfaceDef_Proxy_Broker * (*IR__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_InterfaceDef_Proxy_Broker * (*_TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_InterfaceDef_Remote_Proxy_Broker *
-IR::_TAO_InterfaceDef_Remote_Proxy_Broker::the_TAO_InterfaceDef_Remote_Proxy_Broker (void)
+_TAO_InterfaceDef_Remote_Proxy_Broker *
+_TAO_InterfaceDef_Remote_Proxy_Broker::the_TAO_InterfaceDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_InterfaceDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_InterfaceDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_InterfaceDef_Remote_Proxy_Broker::_TAO_InterfaceDef_Remote_Proxy_Broker (void)
+_TAO_InterfaceDef_Remote_Proxy_Broker::_TAO_InterfaceDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_InterfaceDef_Remote_Proxy_Broker::~_TAO_InterfaceDef_Remote_Proxy_Broker (void)
+_TAO_InterfaceDef_Remote_Proxy_Broker::~_TAO_InterfaceDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_InterfaceDef_Proxy_Impl&
-IR::_TAO_InterfaceDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::InterfaceDef *object,
+_TAO_InterfaceDef_Proxy_Impl&
+_TAO_InterfaceDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_InterfaceDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -35008,113 +34393,111 @@
 
 
 // default constructor
-IR::InterfaceDef::InterfaceDef (int collocated)
+IR_InterfaceDef::IR_InterfaceDef (int collocated)
 {
   this->IR_InterfaceDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::InterfaceDef::~InterfaceDef (void)
+IR_InterfaceDef::~IR_InterfaceDef (void)
 {}
 
 void
-IR::InterfaceDef::IR_InterfaceDef_setup_collocation (int collocated)
+IR_InterfaceDef::IR_InterfaceDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_InterfaceDef_Proxy_Broker_ =
-      ::IR__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_InterfaceDef_Proxy_Broker_ =
-      ::IR::_TAO_InterfaceDef_Remote_Proxy_Broker::the_TAO_InterfaceDef_Remote_Proxy_Broker ();
+      _TAO_InterfaceDef_Remote_Proxy_Broker::the_TAO_InterfaceDef_Remote_Proxy_Broker ();
   
   this->IR_Container_setup_collocation (collocated);
-  
   this->IR_Contained_setup_collocation (collocated);
-  
   this->IR_IDLType_setup_collocation (collocated);
 }
 
-void IR::InterfaceDef::_tao_any_destructor (void *x)
+void IR_InterfaceDef::_tao_any_destructor (void *x)
 {
-  InterfaceDef *tmp = ACE_static_cast (InterfaceDef*,x);
+  IR_InterfaceDef *tmp = ACE_static_cast (IR_InterfaceDef*,x);
   CORBA::release (tmp);
 }
 
-IR::InterfaceDef_ptr IR::InterfaceDef::_narrow (
+IR_InterfaceDef_ptr IR_InterfaceDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return InterfaceDef::_nil ();
+    return IR_InterfaceDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/InterfaceDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (InterfaceDef::_nil ());
+      ACE_CHECK_RETURN (IR_InterfaceDef::_nil ());
       if (is_a == 0)
-        return InterfaceDef::_nil ();
+        return IR_InterfaceDef::_nil ();
     }
-  return InterfaceDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_InterfaceDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::InterfaceDef_ptr IR::InterfaceDef::_unchecked_narrow (
+IR_InterfaceDef_ptr IR_InterfaceDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return InterfaceDef::_nil ();
+    return IR_InterfaceDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      InterfaceDef_ptr default_proxy = InterfaceDef::_nil ();
+      IR_InterfaceDef_ptr default_proxy = IR_InterfaceDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::InterfaceDef (
+          ::IR_InterfaceDef (
             stub,
             1,
             obj->_servant ()),
             
-          InterfaceDef::_nil ());
+          IR_InterfaceDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::InterfaceDef (stub, 0, obj->_servant ()), InterfaceDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_InterfaceDef (stub, 0, obj->_servant ()), IR_InterfaceDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            InterfaceDef_ptr,
+            IR_InterfaceDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &InterfaceDef::_narrow
+                      &IR_InterfaceDef::_narrow
                     )
                 )
           );
 }
 
-IR::InterfaceDef_ptr
-IR::InterfaceDef::_duplicate (InterfaceDef_ptr obj)
+IR_InterfaceDef_ptr
+IR_InterfaceDef::_duplicate (IR_InterfaceDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::InterfaceDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_InterfaceDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/InterfaceDef:1.0")) ||
@@ -35128,58 +34511,58 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::InterfaceDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_InterfaceDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, InterfaceDef)::_narrow))
+      &IR_InterfaceDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Container)::_narrow))
+      &IR_Container::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Container_ptr,
+            IR_Container_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, IDLType)::_narrow))
+      &IR_IDLType::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::IDLType_ptr,
+            IR_IDLType_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -35192,12 +34575,12 @@
   return retv;
 }
 
-const char* IR::InterfaceDef::_interface_repository_id (void) const
+const char* IR_InterfaceDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/InterfaceDef:1.0";
 }
 
-IR::InterfaceDefSeq * IR::InterfaceDef::base_interfaces (
+IR_InterfaceDefSeq * IR_InterfaceDef::base_interfaces (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -35214,8 +34597,8 @@
     );
 }
 
-void IR::InterfaceDef::base_interfaces (
-    const IR::InterfaceDefSeq & base_interfaces,
+void IR_InterfaceDef::base_interfaces (
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -35233,7 +34616,7 @@
     );
 }
 
-CORBA::Boolean IR::InterfaceDef::is_abstract (
+CORBA::Boolean IR_InterfaceDef::is_abstract (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -35250,7 +34633,7 @@
     );
 }
 
-void IR::InterfaceDef::is_abstract (
+void IR_InterfaceDef::is_abstract (
     CORBA::Boolean is_abstract,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -35269,7 +34652,7 @@
     );
 }
 
-CORBA::Boolean IR::InterfaceDef::is_local (
+CORBA::Boolean IR_InterfaceDef::is_local (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -35286,7 +34669,7 @@
     );
 }
 
-void IR::InterfaceDef::is_local (
+void IR_InterfaceDef::is_local (
     CORBA::Boolean is_local,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -35305,7 +34688,7 @@
     );
 }
 
-CORBA::Boolean IR::InterfaceDef::is_a (
+CORBA::Boolean IR_InterfaceDef::is_a (
     const char * interface_id,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -35324,14 +34707,14 @@
     );
 }
 
-IR::AttributeDef_ptr IR::InterfaceDef::create_attribute (
+IR_AttributeDef_ptr IR_InterfaceDef::create_attribute (
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
-    IR::AttributeMode mode,
-    const IR::ExceptionDefSeq & get_exceptions,
-    const IR::ExceptionDefSeq & put_exceptions,
+    IR_IDLType_ptr type,
+    IR_AttributeMode mode,
+    const IR_ExceptionDefSeq & get_exceptions,
+    const IR_ExceptionDefSeq & put_exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -35355,15 +34738,15 @@
     );
 }
 
-IR::OperationDef_ptr IR::InterfaceDef::create_operation (
+IR_OperationDef_ptr IR_InterfaceDef::create_operation (
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr result,
-    IR::OperationMode mode,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
-    const IR::ContextIdSeq & contexts,
+    IR_IDLType_ptr result,
+    IR_OperationMode mode,
+    const IR_ParDescriptionSeq & params,
+    const IR_ExceptionDefSeq & exceptions,
+    const IR_ContextIdSeq & contexts,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -35388,9 +34771,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_get::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_get (
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_get::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -35399,7 +34781,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -35411,7 +34793,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -35424,7 +34806,7 @@
 
 
 CORBA::Any * 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -35440,16 +34822,16 @@
 }
 
 void 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_get::result (IR::InterfaceDefSeq * result)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_get::result (IR_InterfaceDefSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_set::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_set (
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_set::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    const IR::InterfaceDefSeq & base_interfaces,
+    const IR_InterfaceDefSeq & base_interfaces,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -35457,7 +34839,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -35477,7 +34859,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -35490,7 +34872,7 @@
 
 
 CORBA::Any * 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_base_interfaces_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -35502,7 +34884,7 @@
   return result_any;
 }
 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_get::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_get (
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_get::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -35511,7 +34893,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -35523,7 +34905,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -35536,7 +34918,7 @@
 
 
 CORBA::Any * 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -35552,13 +34934,13 @@
 }
 
 void 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_get::result (CORBA::Boolean result)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_get::result (CORBA::Boolean result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_set::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_set (
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_set::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const CORBA::Boolean & is_abstract,
@@ -35569,7 +34951,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -35588,7 +34970,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -35601,7 +34983,7 @@
 
 
 CORBA::Any * 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_abstract_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -35613,7 +34995,7 @@
   return result_any;
 }
 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_get::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_get (
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_get::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -35622,7 +35004,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -35634,7 +35016,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -35647,7 +35029,7 @@
 
 
 CORBA::Any * 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -35663,13 +35045,13 @@
 }
 
 void 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_get::result (CORBA::Boolean result)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_get::result (CORBA::Boolean result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_set::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_set (
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_set::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const CORBA::Boolean & is_local,
@@ -35680,7 +35062,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -35699,7 +35081,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -35712,7 +35094,7 @@
 
 
 CORBA::Any * 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_local_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -35724,7 +35106,7 @@
   return result_any;
 }
 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_a::TAO_ClientRequestInfo_IR_InterfaceDef_is_a (
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_a::TAO_ClientRequestInfo_IR_InterfaceDef_is_a (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * interface_id,
@@ -35735,7 +35117,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_a::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_a::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -35754,7 +35136,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_a::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_a::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -35767,7 +35149,7 @@
 
 
 CORBA::Any * 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_a::result (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_a::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -35783,22 +35165,22 @@
 }
 
 void 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_a::result (CORBA::Boolean result)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_is_a::result (CORBA::Boolean result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_attribute::TAO_ClientRequestInfo_IR_InterfaceDef_create_attribute (
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_attribute::TAO_ClientRequestInfo_IR_InterfaceDef_create_attribute (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
-    IR::AttributeMode & mode,
-    const IR::ExceptionDefSeq & get_exceptions,
-    const IR::ExceptionDefSeq & put_exceptions,
+    IR_IDLType_ptr type,
+    IR_AttributeMode & mode,
+    const IR_ExceptionDefSeq & get_exceptions,
+    const IR_ExceptionDefSeq & put_exceptions,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -35812,7 +35194,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_attribute::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_attribute::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -35865,7 +35247,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_attribute::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_attribute::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -35878,7 +35260,7 @@
 
 
 CORBA::Any * 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_attribute::result (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_attribute::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -35894,23 +35276,23 @@
 }
 
 void 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_attribute::result (IR::AttributeDef_ptr result)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_attribute::result (IR_AttributeDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_operation::TAO_ClientRequestInfo_IR_InterfaceDef_create_operation (
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_operation::TAO_ClientRequestInfo_IR_InterfaceDef_create_operation (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr result,
-    IR::OperationMode & mode,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
-    const IR::ContextIdSeq & contexts,
+    IR_IDLType_ptr result,
+    IR_OperationMode & mode,
+    const IR_ParDescriptionSeq & params,
+    const IR_ExceptionDefSeq & exceptions,
+    const IR_ContextIdSeq & contexts,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -35925,7 +35307,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_operation::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_operation::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -35984,7 +35366,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_operation::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_operation::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -35997,7 +35379,7 @@
 
 
 CORBA::Any * 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_operation::result (CORBA::Environment &ACE_TRY_ENV)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_operation::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -36013,24 +35395,26 @@
 }
 
 void 
-IR::InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_operation::result (IR::OperationDef_ptr result)
+IR_InterfaceDef::TAO_ClientRequestInfo_IR_InterfaceDef_create_operation::result (IR_OperationDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_InterfaceDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x6e746572), ACE_NTOHL (0x66616365), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/InterfaceDef:1.0
-  13, ACE_NTOHL (0x496e7465), ACE_NTOHL (0x72666163), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = InterfaceDef
+  13, ACE_NTOHL (0x496e7465), ACE_NTOHL (0x72666163), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = IR_InterfaceDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_InterfaceDef (CORBA::tk_objref, sizeof (_oc_IR_InterfaceDef), (char *) &_oc_IR_InterfaceDef, 0, sizeof (IR::InterfaceDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_InterfaceDef (CORBA::tk_objref, sizeof (_oc_IR_InterfaceDef), (char *) &_oc_IR_InterfaceDef, 0, sizeof (IR_InterfaceDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_InterfaceDef, &_tc_TAO_tc_IR_InterfaceDef)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_InterfaceDescription[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -36195,7 +35579,7 @@
               48, // encapsulation length
                 TAO_ENCAP_BYTE_ORDER, // byte order
                 27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x444c5479), ACE_NTOHL (0x70653a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/IDLType:1.0
-                8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IDLType
+                8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IR_IDLType
 
               5, ACE_NTOHL (0x6d6f6465), ACE_NTOHL (0x0),  // name = mode
               CORBA::tk_enum, // typecode kind
@@ -36488,14 +35872,15 @@
   CORBA::tk_boolean,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_InterfaceDescription (CORBA::tk_struct, sizeof (_oc_IR_InterfaceDescription), (char *) &_oc_IR_InterfaceDescription, 0, sizeof (IR::InterfaceDescription));
+static CORBA::TypeCode _tc_TAO_tc_IR_InterfaceDescription (CORBA::tk_struct, sizeof (_oc_IR_InterfaceDescription), (char *) &_oc_IR_InterfaceDescription, 0, sizeof (IR_InterfaceDescription));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_InterfaceDescription, &_tc_TAO_tc_IR_InterfaceDescription)
 TAO_NAMESPACE_END
-void IR::InterfaceDescription::_tao_any_destructor (void *x)
+
+void IR_InterfaceDescription::_tao_any_destructor (void *x)
 {
-  InterfaceDescription *tmp = ACE_static_cast (InterfaceDescription*,x);
+  IR_InterfaceDescription *tmp = ACE_static_cast (IR_InterfaceDescription*,x);
   delete tmp;
 }
 
@@ -36549,7 +35934,7 @@
   48, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x444c5479), ACE_NTOHL (0x70653a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/IDLType:1.0
-    8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IDLType
+    8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IR_IDLType
 
   7, ACE_NTOHL (0x61636365), ACE_NTOHL (0x73730000),  // name = access
   CORBA::tk_alias, // typecode kind for typedefs
@@ -36561,32 +35946,30 @@
 
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ValueMember (CORBA::tk_struct, sizeof (_oc_IR_ValueMember), (char *) &_oc_IR_ValueMember, 0, sizeof (IR::ValueMember));
+static CORBA::TypeCode _tc_TAO_tc_IR_ValueMember (CORBA::tk_struct, sizeof (_oc_IR_ValueMember), (char *) &_oc_IR_ValueMember, 0, sizeof (IR_ValueMember));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ValueMember, &_tc_TAO_tc_IR_ValueMember)
 TAO_NAMESPACE_END
-void IR::ValueMember::_tao_any_destructor (void *x)
+
+void IR_ValueMember::_tao_any_destructor (void *x)
 {
-  ValueMember *tmp = ACE_static_cast (ValueMember*,x);
+  IR_ValueMember *tmp = ACE_static_cast (IR_ValueMember*,x);
   delete tmp;
 }
 
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_SEQUENCE_IR_VALUEMEMBERSEQ_CS_)
-#define __TAO_UNBOUNDED_SEQUENCE_IR_VALUEMEMBERSEQ_CS_
-
   void
-  IR::_TAO_Unbounded_Sequence_IR_ValueMemberSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Sequence_IR_ValueMemberSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::ValueMember* tmp = 0;
+    IR_ValueMember* tmp = 0;
     tmp = _TAO_Unbounded_Sequence_IR_ValueMemberSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::ValueMember *old = ACE_reinterpret_cast (IR::ValueMember *,this->buffer_);
+      IR_ValueMember *old = ACE_reinterpret_cast (IR_ValueMember *,this->buffer_);
       
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         tmp[i] = old[i];
@@ -36599,75 +35982,65 @@
   }
   
   void
-  IR::_TAO_Unbounded_Sequence_IR_ValueMemberSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Sequence_IR_ValueMemberSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
     
-    IR::ValueMember *tmp = ACE_reinterpret_cast (IR::ValueMember *,this->buffer_);
+    IR_ValueMember *tmp = ACE_reinterpret_cast (IR_ValueMember *,this->buffer_);
     
     _TAO_Unbounded_Sequence_IR_ValueMemberSeq::freebuf (tmp);
     this->buffer_ = 0;
   } 
   
-  IR::_TAO_Unbounded_Sequence_IR_ValueMemberSeq::~_TAO_Unbounded_Sequence_IR_ValueMemberSeq (void) // Dtor.
+  _TAO_Unbounded_Sequence_IR_ValueMemberSeq::~_TAO_Unbounded_Sequence_IR_ValueMemberSeq (void) // Dtor.
   {
     this->_deallocate_buffer ();
   }
   
-  
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_VALUEMEMBERSEQ_CS_)
-#define _IR_VALUEMEMBERSEQ_CS_
-
 // *************************************************************
-// IR::ValueMemberSeq
+// IR_ValueMemberSeq
 // *************************************************************
 
-IR::ValueMemberSeq::ValueMemberSeq (void)
+IR_ValueMemberSeq::IR_ValueMemberSeq (void)
 {}
-IR::ValueMemberSeq::ValueMemberSeq (CORBA::ULong max) // uses max size
+IR_ValueMemberSeq::IR_ValueMemberSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_ValueMemberSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::ValueMember>
+  TAO_Unbounded_Sequence<IR_ValueMember>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::ValueMemberSeq::ValueMemberSeq (CORBA::ULong max, CORBA::ULong length, IR::ValueMember *buffer, CORBA::Boolean release)
+IR_ValueMemberSeq::IR_ValueMemberSeq (CORBA::ULong max, CORBA::ULong length, IR_ValueMember *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_ValueMemberSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::ValueMember>
+  TAO_Unbounded_Sequence<IR_ValueMember>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::ValueMemberSeq::ValueMemberSeq (const ValueMemberSeq &seq) // copy ctor
+IR_ValueMemberSeq::IR_ValueMemberSeq (const IR_ValueMemberSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_ValueMemberSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::ValueMember>
+  TAO_Unbounded_Sequence<IR_ValueMember>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::ValueMemberSeq::~ValueMemberSeq (void) // dtor
+IR_ValueMemberSeq::~IR_ValueMemberSeq (void) // dtor
 {}
-void IR::ValueMemberSeq::_tao_any_destructor (void *x)
+void IR_ValueMemberSeq::_tao_any_destructor (void *x)
 {
-  ValueMemberSeq *tmp = ACE_static_cast (ValueMemberSeq*,x);
+  IR_ValueMemberSeq *tmp = ACE_static_cast (IR_ValueMemberSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_ValueMemberSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -36726,7 +36099,7 @@
       48, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x444c5479), ACE_NTOHL (0x70653a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/IDLType:1.0
-        8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IDLType
+        8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IR_IDLType
 
       7, ACE_NTOHL (0x61636365), ACE_NTOHL (0x73730000),  // name = access
       CORBA::tk_alias, // typecode kind for typedefs
@@ -36741,7 +36114,7 @@
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ValueMemberSeq (CORBA::tk_alias, sizeof (_oc_IR_ValueMemberSeq), (char *) &_oc_IR_ValueMemberSeq, 0, sizeof (IR::ValueMemberSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_ValueMemberSeq (CORBA::tk_alias, sizeof (_oc_IR_ValueMemberSeq), (char *) &_oc_IR_ValueMemberSeq, 0, sizeof (IR_ValueMemberSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ValueMemberSeq, &_tc_TAO_tc_IR_ValueMemberSeq)
@@ -36751,15 +36124,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_ValueMemberDef_Proxy_Impl::_TAO_ValueMemberDef_Proxy_Impl (void)
+_TAO_ValueMemberDef_Proxy_Impl::_TAO_ValueMemberDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_ValueMemberDef_Remote_Proxy_Impl::_TAO_ValueMemberDef_Remote_Proxy_Impl (void)
+_TAO_ValueMemberDef_Remote_Proxy_Impl::_TAO_ValueMemberDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-CORBA::TypeCode_ptr IR::_TAO_ValueMemberDef_Remote_Proxy_Impl::type (
+CORBA::TypeCode_ptr _TAO_ValueMemberDef_Remote_Proxy_Impl::type (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -36797,7 +36170,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_get ri (
+      IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -36919,7 +36292,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::IDLType_ptr IR::_TAO_ValueMemberDef_Remote_Proxy_Impl::type_def (
+IR_IDLType_ptr _TAO_ValueMemberDef_Remote_Proxy_Impl::type_def (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -36928,8 +36301,8 @@
   ))
 {
   
-  IR::IDLType_ptr _tao_retval = IR::IDLType::_nil ();
-  IR::IDLType_var _tao_safe_retval (_tao_retval);
+  IR_IDLType_ptr _tao_retval = IR_IDLType::_nil ();
+  IR_IDLType_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -36957,7 +36330,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_get ri (
+      IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -37013,7 +36386,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::IDLType_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_IDLType_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -37079,19 +36452,15 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_ValueMemberDef_Remote_Proxy_Impl::type_def (
+void _TAO_ValueMemberDef_Remote_Proxy_Impl::type_def (
     CORBA_Object *_collocated_tao_target_,
-    IR::IDLType_ptr type_def,
+    IR_IDLType_ptr type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -37117,7 +36486,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_set ri (
+      IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_set ri (
         &_tao_call,
         _collocated_tao_target_,
         type_def,
@@ -37231,7 +36600,7 @@
   
 }
 
-CORBA::Visibility IR::_TAO_ValueMemberDef_Remote_Proxy_Impl::access (
+CORBA::Visibility _TAO_ValueMemberDef_Remote_Proxy_Impl::access (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -37268,7 +36637,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_get ri (
+      IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -37389,7 +36758,7 @@
   return _tao_retval;
 }
 
-void IR::_TAO_ValueMemberDef_Remote_Proxy_Impl::access (
+void _TAO_ValueMemberDef_Remote_Proxy_Impl::access (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Visibility access,
     CORBA::Environment &ACE_TRY_ENV
@@ -37398,10 +36767,6 @@
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -37427,7 +36792,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_set ri (
+      IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_set ri (
         &_tao_call,
         _collocated_tao_target_,
         access,
@@ -37551,37 +36916,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_ValueMemberDef_Proxy_Broker::_TAO_ValueMemberDef_Proxy_Broker (void)
+_TAO_ValueMemberDef_Proxy_Broker::_TAO_ValueMemberDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ValueMemberDef_Proxy_Broker::~_TAO_ValueMemberDef_Proxy_Broker (void)
+_TAO_ValueMemberDef_Proxy_Broker::~_TAO_ValueMemberDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ValueMemberDef_Proxy_Broker * (*IR__TAO_ValueMemberDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_ValueMemberDef_Proxy_Broker * (*_TAO_ValueMemberDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_ValueMemberDef_Remote_Proxy_Broker *
-IR::_TAO_ValueMemberDef_Remote_Proxy_Broker::the_TAO_ValueMemberDef_Remote_Proxy_Broker (void)
+_TAO_ValueMemberDef_Remote_Proxy_Broker *
+_TAO_ValueMemberDef_Remote_Proxy_Broker::the_TAO_ValueMemberDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_ValueMemberDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_ValueMemberDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_ValueMemberDef_Remote_Proxy_Broker::_TAO_ValueMemberDef_Remote_Proxy_Broker (void)
+_TAO_ValueMemberDef_Remote_Proxy_Broker::_TAO_ValueMemberDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ValueMemberDef_Remote_Proxy_Broker::~_TAO_ValueMemberDef_Remote_Proxy_Broker (void)
+_TAO_ValueMemberDef_Remote_Proxy_Broker::~_TAO_ValueMemberDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ValueMemberDef_Proxy_Impl&
-IR::_TAO_ValueMemberDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::ValueMemberDef *object,
+_TAO_ValueMemberDef_Proxy_Impl&
+_TAO_ValueMemberDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_ValueMemberDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -37597,109 +36962,109 @@
 
 
 // default constructor
-IR::ValueMemberDef::ValueMemberDef (int collocated)
+IR_ValueMemberDef::IR_ValueMemberDef (int collocated)
 {
   this->IR_ValueMemberDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::ValueMemberDef::~ValueMemberDef (void)
+IR_ValueMemberDef::~IR_ValueMemberDef (void)
 {}
 
 void
-IR::ValueMemberDef::IR_ValueMemberDef_setup_collocation (int collocated)
+IR_ValueMemberDef::IR_ValueMemberDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_ValueMemberDef_Proxy_Broker_ =
-      ::IR__TAO_ValueMemberDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_ValueMemberDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_ValueMemberDef_Proxy_Broker_ =
-      ::IR::_TAO_ValueMemberDef_Remote_Proxy_Broker::the_TAO_ValueMemberDef_Remote_Proxy_Broker ();
+      _TAO_ValueMemberDef_Remote_Proxy_Broker::the_TAO_ValueMemberDef_Remote_Proxy_Broker ();
   
   this->IR_Contained_setup_collocation (collocated);
 }
 
-void IR::ValueMemberDef::_tao_any_destructor (void *x)
+void IR_ValueMemberDef::_tao_any_destructor (void *x)
 {
-  ValueMemberDef *tmp = ACE_static_cast (ValueMemberDef*,x);
+  IR_ValueMemberDef *tmp = ACE_static_cast (IR_ValueMemberDef*,x);
   CORBA::release (tmp);
 }
 
-IR::ValueMemberDef_ptr IR::ValueMemberDef::_narrow (
+IR_ValueMemberDef_ptr IR_ValueMemberDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return ValueMemberDef::_nil ();
+    return IR_ValueMemberDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/ValueMemberDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (ValueMemberDef::_nil ());
+      ACE_CHECK_RETURN (IR_ValueMemberDef::_nil ());
       if (is_a == 0)
-        return ValueMemberDef::_nil ();
+        return IR_ValueMemberDef::_nil ();
     }
-  return ValueMemberDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_ValueMemberDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::ValueMemberDef_ptr IR::ValueMemberDef::_unchecked_narrow (
+IR_ValueMemberDef_ptr IR_ValueMemberDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return ValueMemberDef::_nil ();
+    return IR_ValueMemberDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      ValueMemberDef_ptr default_proxy = ValueMemberDef::_nil ();
+      IR_ValueMemberDef_ptr default_proxy = IR_ValueMemberDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_ValueMemberDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_ValueMemberDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::ValueMemberDef (
+          ::IR_ValueMemberDef (
             stub,
             1,
             obj->_servant ()),
             
-          ValueMemberDef::_nil ());
+          IR_ValueMemberDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::ValueMemberDef (stub, 0, obj->_servant ()), ValueMemberDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_ValueMemberDef (stub, 0, obj->_servant ()), IR_ValueMemberDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            ValueMemberDef_ptr,
+            IR_ValueMemberDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &ValueMemberDef::_narrow
+                      &IR_ValueMemberDef::_narrow
                     )
                 )
           );
 }
 
-IR::ValueMemberDef_ptr
-IR::ValueMemberDef::_duplicate (ValueMemberDef_ptr obj)
+IR_ValueMemberDef_ptr
+IR_ValueMemberDef::_duplicate (IR_ValueMemberDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::ValueMemberDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_ValueMemberDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/ValueMemberDef:1.0")) ||
@@ -37711,34 +37076,34 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::ValueMemberDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_ValueMemberDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, ValueMemberDef)::_narrow))
+      &IR_ValueMemberDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -37751,12 +37116,12 @@
   return retv;
 }
 
-const char* IR::ValueMemberDef::_interface_repository_id (void) const
+const char* IR_ValueMemberDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/ValueMemberDef:1.0";
 }
 
-CORBA::TypeCode_ptr IR::ValueMemberDef::type (
+CORBA::TypeCode_ptr IR_ValueMemberDef::type (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -37773,7 +37138,7 @@
     );
 }
 
-IR::IDLType_ptr IR::ValueMemberDef::type_def (
+IR_IDLType_ptr IR_ValueMemberDef::type_def (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -37790,8 +37155,8 @@
     );
 }
 
-void IR::ValueMemberDef::type_def (
-    IR::IDLType_ptr type_def,
+void IR_ValueMemberDef::type_def (
+    IR_IDLType_ptr type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -37809,7 +37174,7 @@
     );
 }
 
-CORBA::Visibility IR::ValueMemberDef::access (
+CORBA::Visibility IR_ValueMemberDef::access (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -37826,7 +37191,7 @@
     );
 }
 
-void IR::ValueMemberDef::access (
+void IR_ValueMemberDef::access (
     CORBA::Visibility access,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -37845,9 +37210,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_get::TAO_ClientRequestInfo_IR_ValueMemberDef_type_get (
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_get::TAO_ClientRequestInfo_IR_ValueMemberDef_type_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -37856,7 +37220,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -37868,7 +37232,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -37881,7 +37245,7 @@
 
 
 CORBA::Any * 
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -37897,13 +37261,13 @@
 }
 
 void 
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_get::result (CORBA::TypeCode_ptr result)
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_get::result (CORBA::TypeCode_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_get::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_get (
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_get::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -37912,7 +37276,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -37924,7 +37288,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -37937,7 +37301,7 @@
 
 
 CORBA::Any * 
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -37953,16 +37317,16 @@
 }
 
 void 
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_get::result (IR::IDLType_ptr result)
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_get::result (IR_IDLType_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_set::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_set (
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_set::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    IR::IDLType_ptr type_def,
+    IR_IDLType_ptr type_def,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -37970,7 +37334,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -37990,7 +37354,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -38003,7 +37367,7 @@
 
 
 CORBA::Any * 
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_type_def_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -38015,7 +37379,7 @@
   return result_any;
 }
 
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_get::TAO_ClientRequestInfo_IR_ValueMemberDef_access_get (
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_get::TAO_ClientRequestInfo_IR_ValueMemberDef_access_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -38024,7 +37388,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -38036,7 +37400,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -38049,7 +37413,7 @@
 
 
 CORBA::Any * 
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -38065,13 +37429,13 @@
 }
 
 void 
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_get::result (CORBA::Visibility result)
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_get::result (CORBA::Visibility result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_set::TAO_ClientRequestInfo_IR_ValueMemberDef_access_set (
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_set::TAO_ClientRequestInfo_IR_ValueMemberDef_access_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const CORBA::Visibility & access,
@@ -38082,7 +37446,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -38101,7 +37465,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -38114,7 +37478,7 @@
 
 
 CORBA::Any * 
-IR::ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueMemberDef::TAO_ClientRequestInfo_IR_ValueMemberDef_access_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -38127,13 +37491,14 @@
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_ValueMemberDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   34, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f56), ACE_NTOHL (0x616c7565), ACE_NTOHL (0x4d656d62), ACE_NTOHL (0x65724465), ACE_NTOHL (0x663a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/ValueMemberDef:1.0
-  15, ACE_NTOHL (0x56616c75), ACE_NTOHL (0x654d656d), ACE_NTOHL (0x62657244), ACE_NTOHL (0x65660000),  // name = ValueMemberDef
+  15, ACE_NTOHL (0x56616c75), ACE_NTOHL (0x654d656d), ACE_NTOHL (0x62657244), ACE_NTOHL (0x65660000),  // name = IR_ValueMemberDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ValueMemberDef (CORBA::tk_objref, sizeof (_oc_IR_ValueMemberDef), (char *) &_oc_IR_ValueMemberDef, 0, sizeof (IR::ValueMemberDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_ValueMemberDef (CORBA::tk_objref, sizeof (_oc_IR_ValueMemberDef), (char *) &_oc_IR_ValueMemberDef, 0, sizeof (IR_ValueMemberDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ValueMemberDef, &_tc_TAO_tc_IR_ValueMemberDef)
@@ -38143,15 +37508,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_ValueDef_Proxy_Impl::_TAO_ValueDef_Proxy_Impl (void)
+_TAO_ValueDef_Proxy_Impl::_TAO_ValueDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_ValueDef_Remote_Proxy_Impl::_TAO_ValueDef_Remote_Proxy_Impl (void)
+_TAO_ValueDef_Remote_Proxy_Impl::_TAO_ValueDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-IR::InterfaceDefSeq * IR::_TAO_ValueDef_Remote_Proxy_Impl::supported_interfaces (
+IR_InterfaceDefSeq * _TAO_ValueDef_Remote_Proxy_Impl::supported_interfaces (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -38160,7 +37525,7 @@
   ))
 {
   
-  IR::InterfaceDefSeq *_tao_retval = 0;
+  IR_InterfaceDefSeq *_tao_retval = 0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -38168,8 +37533,8 @@
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
   
-  ACE_NEW_RETURN (_tao_retval, IR::InterfaceDefSeq, _tao_retval);
-  IR::InterfaceDefSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_InterfaceDefSeq, _tao_retval);
+  IR_InterfaceDefSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_supported_interfaces",
@@ -38190,7 +37555,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_get ri (
+      IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -38246,7 +37611,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::InterfaceDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_InterfaceDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -38312,19 +37677,15 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_ValueDef_Remote_Proxy_Impl::supported_interfaces (
+void _TAO_ValueDef_Remote_Proxy_Impl::supported_interfaces (
     CORBA_Object *_collocated_tao_target_,
-    const IR::InterfaceDefSeq & supported_interfaces,
+    const IR_InterfaceDefSeq & supported_interfaces,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -38350,7 +37711,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_set ri (
+      IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_set ri (
         &_tao_call,
         _collocated_tao_target_,
         supported_interfaces,
@@ -38464,7 +37825,7 @@
   
 }
 
-IR::InitializerSeq * IR::_TAO_ValueDef_Remote_Proxy_Impl::initializers (
+IR_InitializerSeq * _TAO_ValueDef_Remote_Proxy_Impl::initializers (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -38473,7 +37834,7 @@
   ))
 {
   
-  IR::InitializerSeq *_tao_retval = 0;
+  IR_InitializerSeq *_tao_retval = 0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -38481,8 +37842,8 @@
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
   
-  ACE_NEW_RETURN (_tao_retval, IR::InitializerSeq, _tao_retval);
-  IR::InitializerSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_InitializerSeq, _tao_retval);
+  IR_InitializerSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_initializers",
@@ -38503,7 +37864,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_get ri (
+      IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -38559,7 +37920,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::InitializerSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_InitializerSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -38625,19 +37986,15 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_ValueDef_Remote_Proxy_Impl::initializers (
+void _TAO_ValueDef_Remote_Proxy_Impl::initializers (
     CORBA_Object *_collocated_tao_target_,
-    const IR::InitializerSeq & initializers,
+    const IR_InitializerSeq & initializers,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -38663,7 +38020,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_set ri (
+      IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_set ri (
         &_tao_call,
         _collocated_tao_target_,
         initializers,
@@ -38777,7 +38134,7 @@
   
 }
 
-IR::ValueDef_ptr IR::_TAO_ValueDef_Remote_Proxy_Impl::base_value (
+IR_ValueDef_ptr _TAO_ValueDef_Remote_Proxy_Impl::base_value (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -38786,8 +38143,8 @@
   ))
 {
   
-  IR::ValueDef_ptr _tao_retval = IR::ValueDef::_nil ();
-  IR::ValueDef_var _tao_safe_retval (_tao_retval);
+  IR_ValueDef_ptr _tao_retval = IR_ValueDef::_nil ();
+  IR_ValueDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -38815,7 +38172,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_get ri (
+      IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -38871,7 +38228,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ValueDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ValueDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -38937,19 +38294,15 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_ValueDef_Remote_Proxy_Impl::base_value (
+void _TAO_ValueDef_Remote_Proxy_Impl::base_value (
     CORBA_Object *_collocated_tao_target_,
-    IR::ValueDef_ptr base_value,
+    IR_ValueDef_ptr base_value,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -38975,7 +38328,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_set ri (
+      IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_set ri (
         &_tao_call,
         _collocated_tao_target_,
         base_value,
@@ -39089,7 +38442,7 @@
   
 }
 
-IR::ValueDefSeq * IR::_TAO_ValueDef_Remote_Proxy_Impl::abstract_base_values (
+IR_ValueDefSeq * _TAO_ValueDef_Remote_Proxy_Impl::abstract_base_values (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -39098,7 +38451,7 @@
   ))
 {
   
-  IR::ValueDefSeq *_tao_retval = 0;
+  IR_ValueDefSeq *_tao_retval = 0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -39106,8 +38459,8 @@
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
   
-  ACE_NEW_RETURN (_tao_retval, IR::ValueDefSeq, _tao_retval);
-  IR::ValueDefSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_ValueDefSeq, _tao_retval);
+  IR_ValueDefSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_abstract_base_values",
@@ -39128,7 +38481,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_get ri (
+      IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -39184,7 +38537,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ValueDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ValueDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -39250,19 +38603,15 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_ValueDef_Remote_Proxy_Impl::abstract_base_values (
+void _TAO_ValueDef_Remote_Proxy_Impl::abstract_base_values (
     CORBA_Object *_collocated_tao_target_,
-    const IR::ValueDefSeq & abstract_base_values,
+    const IR_ValueDefSeq & abstract_base_values,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -39288,7 +38637,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_set ri (
+      IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_set ri (
         &_tao_call,
         _collocated_tao_target_,
         abstract_base_values,
@@ -39402,7 +38751,7 @@
   
 }
 
-CORBA::Boolean IR::_TAO_ValueDef_Remote_Proxy_Impl::is_abstract (
+CORBA::Boolean _TAO_ValueDef_Remote_Proxy_Impl::is_abstract (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -39439,7 +38788,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_get ri (
+      IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -39560,7 +38909,7 @@
   return _tao_retval;
 }
 
-void IR::_TAO_ValueDef_Remote_Proxy_Impl::is_abstract (
+void _TAO_ValueDef_Remote_Proxy_Impl::is_abstract (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Boolean is_abstract,
     CORBA::Environment &ACE_TRY_ENV
@@ -39569,10 +38918,6 @@
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -39598,7 +38943,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_set ri (
+      IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_set ri (
         &_tao_call,
         _collocated_tao_target_,
         is_abstract,
@@ -39712,7 +39057,7 @@
   
 }
 
-CORBA::Boolean IR::_TAO_ValueDef_Remote_Proxy_Impl::is_custom (
+CORBA::Boolean _TAO_ValueDef_Remote_Proxy_Impl::is_custom (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -39749,7 +39094,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_get ri (
+      IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -39870,7 +39215,7 @@
   return _tao_retval;
 }
 
-void IR::_TAO_ValueDef_Remote_Proxy_Impl::is_custom (
+void _TAO_ValueDef_Remote_Proxy_Impl::is_custom (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Boolean is_custom,
     CORBA::Environment &ACE_TRY_ENV
@@ -39879,10 +39224,6 @@
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -39908,7 +39249,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_set ri (
+      IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_set ri (
         &_tao_call,
         _collocated_tao_target_,
         is_custom,
@@ -40022,7 +39363,7 @@
   
 }
 
-CORBA::Boolean IR::_TAO_ValueDef_Remote_Proxy_Impl::is_truncatable (
+CORBA::Boolean _TAO_ValueDef_Remote_Proxy_Impl::is_truncatable (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -40059,7 +39400,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_get ri (
+      IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -40180,7 +39521,7 @@
   return _tao_retval;
 }
 
-void IR::_TAO_ValueDef_Remote_Proxy_Impl::is_truncatable (
+void _TAO_ValueDef_Remote_Proxy_Impl::is_truncatable (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Boolean is_truncatable,
     CORBA::Environment &ACE_TRY_ENV
@@ -40189,10 +39530,6 @@
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -40218,7 +39555,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_set ri (
+      IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_set ri (
         &_tao_call,
         _collocated_tao_target_,
         is_truncatable,
@@ -40332,7 +39669,7 @@
   
 }
 
-CORBA::Boolean IR::_TAO_ValueDef_Remote_Proxy_Impl::is_a (
+CORBA::Boolean _TAO_ValueDef_Remote_Proxy_Impl::is_a (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     CORBA::Environment &ACE_TRY_ENV
@@ -40370,7 +39707,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_a ri (
+      IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_a ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -40502,12 +39839,12 @@
   return _tao_retval;
 }
 
-IR::ValueMemberDef_ptr IR::_TAO_ValueDef_Remote_Proxy_Impl::create_value_member (
+IR_ValueMemberDef_ptr _TAO_ValueDef_Remote_Proxy_Impl::create_value_member (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+    IR_IDLType_ptr type,
     CORBA::Visibility access,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -40516,8 +39853,8 @@
   ))
 {
   
-  IR::ValueMemberDef_ptr _tao_retval = IR::ValueMemberDef::_nil ();
-  IR::ValueMemberDef_var _tao_safe_retval (_tao_retval);
+  IR_ValueMemberDef_ptr _tao_retval = IR_ValueMemberDef::_nil ();
+  IR_ValueMemberDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -40545,7 +39882,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_value_member ri (
+      IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_value_member ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -40620,7 +39957,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ValueMemberDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ValueMemberDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -40686,15 +40023,15 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::AttributeDef_ptr IR::_TAO_ValueDef_Remote_Proxy_Impl::create_attribute (
+IR_AttributeDef_ptr _TAO_ValueDef_Remote_Proxy_Impl::create_attribute (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
-    IR::AttributeMode mode,
-    const IR::ExceptionDefSeq & get_exceptions,
-    const IR::ExceptionDefSeq & put_exceptions,
+    IR_IDLType_ptr type,
+    IR_AttributeMode mode,
+    const IR_ExceptionDefSeq & get_exceptions,
+    const IR_ExceptionDefSeq & put_exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -40702,8 +40039,8 @@
   ))
 {
   
-  IR::AttributeDef_ptr _tao_retval = IR::AttributeDef::_nil ();
-  IR::AttributeDef_var _tao_safe_retval (_tao_retval);
+  IR_AttributeDef_ptr _tao_retval = IR_AttributeDef::_nil ();
+  IR_AttributeDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -40731,7 +40068,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_attribute ri (
+      IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_attribute ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -40810,7 +40147,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::AttributeDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_AttributeDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -40876,16 +40213,16 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::OperationDef_ptr IR::_TAO_ValueDef_Remote_Proxy_Impl::create_operation (
+IR_OperationDef_ptr _TAO_ValueDef_Remote_Proxy_Impl::create_operation (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr result,
-    IR::OperationMode mode,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
-    const IR::ContextIdSeq & contexts,
+    IR_IDLType_ptr result,
+    IR_OperationMode mode,
+    const IR_ParDescriptionSeq & params,
+    const IR_ExceptionDefSeq & exceptions,
+    const IR_ContextIdSeq & contexts,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -40893,8 +40230,8 @@
   ))
 {
   
-  IR::OperationDef_ptr _tao_retval = IR::OperationDef::_nil ();
-  IR::OperationDef_var _tao_safe_retval (_tao_retval);
+  IR_OperationDef_ptr _tao_retval = IR_OperationDef::_nil ();
+  IR_OperationDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -40922,7 +40259,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_operation ri (
+      IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_operation ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -41003,7 +40340,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::OperationDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_OperationDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -41079,37 +40416,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_ValueDef_Proxy_Broker::_TAO_ValueDef_Proxy_Broker (void)
+_TAO_ValueDef_Proxy_Broker::_TAO_ValueDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ValueDef_Proxy_Broker::~_TAO_ValueDef_Proxy_Broker (void)
+_TAO_ValueDef_Proxy_Broker::~_TAO_ValueDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ValueDef_Proxy_Broker * (*IR__TAO_ValueDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_ValueDef_Proxy_Broker * (*_TAO_ValueDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_ValueDef_Remote_Proxy_Broker *
-IR::_TAO_ValueDef_Remote_Proxy_Broker::the_TAO_ValueDef_Remote_Proxy_Broker (void)
+_TAO_ValueDef_Remote_Proxy_Broker *
+_TAO_ValueDef_Remote_Proxy_Broker::the_TAO_ValueDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_ValueDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_ValueDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_ValueDef_Remote_Proxy_Broker::_TAO_ValueDef_Remote_Proxy_Broker (void)
+_TAO_ValueDef_Remote_Proxy_Broker::_TAO_ValueDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ValueDef_Remote_Proxy_Broker::~_TAO_ValueDef_Remote_Proxy_Broker (void)
+_TAO_ValueDef_Remote_Proxy_Broker::~_TAO_ValueDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ValueDef_Proxy_Impl&
-IR::_TAO_ValueDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::ValueDef *object,
+_TAO_ValueDef_Proxy_Impl&
+_TAO_ValueDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_ValueDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -41125,113 +40462,111 @@
 
 
 // default constructor
-IR::ValueDef::ValueDef (int collocated)
+IR_ValueDef::IR_ValueDef (int collocated)
 {
   this->IR_ValueDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::ValueDef::~ValueDef (void)
+IR_ValueDef::~IR_ValueDef (void)
 {}
 
 void
-IR::ValueDef::IR_ValueDef_setup_collocation (int collocated)
+IR_ValueDef::IR_ValueDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_ValueDef_Proxy_Broker_ =
-      ::IR__TAO_ValueDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_ValueDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_ValueDef_Proxy_Broker_ =
-      ::IR::_TAO_ValueDef_Remote_Proxy_Broker::the_TAO_ValueDef_Remote_Proxy_Broker ();
+      _TAO_ValueDef_Remote_Proxy_Broker::the_TAO_ValueDef_Remote_Proxy_Broker ();
   
   this->IR_Container_setup_collocation (collocated);
-  
   this->IR_Contained_setup_collocation (collocated);
-  
   this->IR_IDLType_setup_collocation (collocated);
 }
 
-void IR::ValueDef::_tao_any_destructor (void *x)
+void IR_ValueDef::_tao_any_destructor (void *x)
 {
-  ValueDef *tmp = ACE_static_cast (ValueDef*,x);
+  IR_ValueDef *tmp = ACE_static_cast (IR_ValueDef*,x);
   CORBA::release (tmp);
 }
 
-IR::ValueDef_ptr IR::ValueDef::_narrow (
+IR_ValueDef_ptr IR_ValueDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return ValueDef::_nil ();
+    return IR_ValueDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/ValueDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (ValueDef::_nil ());
+      ACE_CHECK_RETURN (IR_ValueDef::_nil ());
       if (is_a == 0)
-        return ValueDef::_nil ();
+        return IR_ValueDef::_nil ();
     }
-  return ValueDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_ValueDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::ValueDef_ptr IR::ValueDef::_unchecked_narrow (
+IR_ValueDef_ptr IR_ValueDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return ValueDef::_nil ();
+    return IR_ValueDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      ValueDef_ptr default_proxy = ValueDef::_nil ();
+      IR_ValueDef_ptr default_proxy = IR_ValueDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_ValueDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_ValueDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::ValueDef (
+          ::IR_ValueDef (
             stub,
             1,
             obj->_servant ()),
             
-          ValueDef::_nil ());
+          IR_ValueDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::ValueDef (stub, 0, obj->_servant ()), ValueDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_ValueDef (stub, 0, obj->_servant ()), IR_ValueDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            ValueDef_ptr,
+            IR_ValueDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &ValueDef::_narrow
+                      &IR_ValueDef::_narrow
                     )
                 )
           );
 }
 
-IR::ValueDef_ptr
-IR::ValueDef::_duplicate (ValueDef_ptr obj)
+IR_ValueDef_ptr
+IR_ValueDef::_duplicate (IR_ValueDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::ValueDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_ValueDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/ValueDef:1.0")) ||
@@ -41245,58 +40580,58 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::ValueDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_ValueDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, ValueDef)::_narrow))
+      &IR_ValueDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Container)::_narrow))
+      &IR_Container::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Container_ptr,
+            IR_Container_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, IDLType)::_narrow))
+      &IR_IDLType::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::IDLType_ptr,
+            IR_IDLType_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -41309,12 +40644,12 @@
   return retv;
 }
 
-const char* IR::ValueDef::_interface_repository_id (void) const
+const char* IR_ValueDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/ValueDef:1.0";
 }
 
-IR::InterfaceDefSeq * IR::ValueDef::supported_interfaces (
+IR_InterfaceDefSeq * IR_ValueDef::supported_interfaces (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -41331,8 +40666,8 @@
     );
 }
 
-void IR::ValueDef::supported_interfaces (
-    const IR::InterfaceDefSeq & supported_interfaces,
+void IR_ValueDef::supported_interfaces (
+    const IR_InterfaceDefSeq & supported_interfaces,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -41350,7 +40685,7 @@
     );
 }
 
-IR::InitializerSeq * IR::ValueDef::initializers (
+IR_InitializerSeq * IR_ValueDef::initializers (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -41367,8 +40702,8 @@
     );
 }
 
-void IR::ValueDef::initializers (
-    const IR::InitializerSeq & initializers,
+void IR_ValueDef::initializers (
+    const IR_InitializerSeq & initializers,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -41386,7 +40721,7 @@
     );
 }
 
-IR::ValueDef_ptr IR::ValueDef::base_value (
+IR_ValueDef_ptr IR_ValueDef::base_value (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -41403,8 +40738,8 @@
     );
 }
 
-void IR::ValueDef::base_value (
-    IR::ValueDef_ptr base_value,
+void IR_ValueDef::base_value (
+    IR_ValueDef_ptr base_value,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -41422,7 +40757,7 @@
     );
 }
 
-IR::ValueDefSeq * IR::ValueDef::abstract_base_values (
+IR_ValueDefSeq * IR_ValueDef::abstract_base_values (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -41439,8 +40774,8 @@
     );
 }
 
-void IR::ValueDef::abstract_base_values (
-    const IR::ValueDefSeq & abstract_base_values,
+void IR_ValueDef::abstract_base_values (
+    const IR_ValueDefSeq & abstract_base_values,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -41458,7 +40793,7 @@
     );
 }
 
-CORBA::Boolean IR::ValueDef::is_abstract (
+CORBA::Boolean IR_ValueDef::is_abstract (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -41475,7 +40810,7 @@
     );
 }
 
-void IR::ValueDef::is_abstract (
+void IR_ValueDef::is_abstract (
     CORBA::Boolean is_abstract,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -41494,7 +40829,7 @@
     );
 }
 
-CORBA::Boolean IR::ValueDef::is_custom (
+CORBA::Boolean IR_ValueDef::is_custom (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -41511,7 +40846,7 @@
     );
 }
 
-void IR::ValueDef::is_custom (
+void IR_ValueDef::is_custom (
     CORBA::Boolean is_custom,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -41530,7 +40865,7 @@
     );
 }
 
-CORBA::Boolean IR::ValueDef::is_truncatable (
+CORBA::Boolean IR_ValueDef::is_truncatable (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -41547,7 +40882,7 @@
     );
 }
 
-void IR::ValueDef::is_truncatable (
+void IR_ValueDef::is_truncatable (
     CORBA::Boolean is_truncatable,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -41566,7 +40901,7 @@
     );
 }
 
-CORBA::Boolean IR::ValueDef::is_a (
+CORBA::Boolean IR_ValueDef::is_a (
     const char * id,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -41585,11 +40920,11 @@
     );
 }
 
-IR::ValueMemberDef_ptr IR::ValueDef::create_value_member (
+IR_ValueMemberDef_ptr IR_ValueDef::create_value_member (
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+    IR_IDLType_ptr type,
     CORBA::Visibility access,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -41612,14 +40947,14 @@
     );
 }
 
-IR::AttributeDef_ptr IR::ValueDef::create_attribute (
+IR_AttributeDef_ptr IR_ValueDef::create_attribute (
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
-    IR::AttributeMode mode,
-    const IR::ExceptionDefSeq & get_exceptions,
-    const IR::ExceptionDefSeq & put_exceptions,
+    IR_IDLType_ptr type,
+    IR_AttributeMode mode,
+    const IR_ExceptionDefSeq & get_exceptions,
+    const IR_ExceptionDefSeq & put_exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -41643,15 +40978,15 @@
     );
 }
 
-IR::OperationDef_ptr IR::ValueDef::create_operation (
+IR_OperationDef_ptr IR_ValueDef::create_operation (
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr result,
-    IR::OperationMode mode,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
-    const IR::ContextIdSeq & contexts,
+    IR_IDLType_ptr result,
+    IR_OperationMode mode,
+    const IR_ParDescriptionSeq & params,
+    const IR_ExceptionDefSeq & exceptions,
+    const IR_ContextIdSeq & contexts,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -41676,9 +41011,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_get::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_get (
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_get::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -41687,7 +41021,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -41699,7 +41033,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -41712,7 +41046,7 @@
 
 
 CORBA::Any * 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -41728,16 +41062,16 @@
 }
 
 void 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_get::result (IR::InterfaceDefSeq * result)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_get::result (IR_InterfaceDefSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_set::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_set (
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_set::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    const IR::InterfaceDefSeq & supported_interfaces,
+    const IR_InterfaceDefSeq & supported_interfaces,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -41745,7 +41079,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -41765,7 +41099,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -41778,7 +41112,7 @@
 
 
 CORBA::Any * 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_supported_interfaces_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -41790,7 +41124,7 @@
   return result_any;
 }
 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_get::TAO_ClientRequestInfo_IR_ValueDef_initializers_get (
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_get::TAO_ClientRequestInfo_IR_ValueDef_initializers_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -41799,7 +41133,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -41811,7 +41145,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -41824,7 +41158,7 @@
 
 
 CORBA::Any * 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -41840,16 +41174,16 @@
 }
 
 void 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_get::result (IR::InitializerSeq * result)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_get::result (IR_InitializerSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_set::TAO_ClientRequestInfo_IR_ValueDef_initializers_set (
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_set::TAO_ClientRequestInfo_IR_ValueDef_initializers_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    const IR::InitializerSeq & initializers,
+    const IR_InitializerSeq & initializers,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -41857,7 +41191,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -41877,7 +41211,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -41890,7 +41224,7 @@
 
 
 CORBA::Any * 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_initializers_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -41902,7 +41236,7 @@
   return result_any;
 }
 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_get::TAO_ClientRequestInfo_IR_ValueDef_base_value_get (
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_get::TAO_ClientRequestInfo_IR_ValueDef_base_value_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -41911,7 +41245,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -41923,7 +41257,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -41936,7 +41270,7 @@
 
 
 CORBA::Any * 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -41952,16 +41286,16 @@
 }
 
 void 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_get::result (IR::ValueDef_ptr result)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_get::result (IR_ValueDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_set::TAO_ClientRequestInfo_IR_ValueDef_base_value_set (
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_set::TAO_ClientRequestInfo_IR_ValueDef_base_value_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    IR::ValueDef_ptr base_value,
+    IR_ValueDef_ptr base_value,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -41969,7 +41303,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -41989,7 +41323,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -42002,7 +41336,7 @@
 
 
 CORBA::Any * 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_base_value_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -42014,7 +41348,7 @@
   return result_any;
 }
 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_get::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_get (
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_get::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -42023,7 +41357,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -42035,7 +41369,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -42048,7 +41382,7 @@
 
 
 CORBA::Any * 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -42064,16 +41398,16 @@
 }
 
 void 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_get::result (IR::ValueDefSeq * result)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_get::result (IR_ValueDefSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_set::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_set (
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_set::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    const IR::ValueDefSeq & abstract_base_values,
+    const IR_ValueDefSeq & abstract_base_values,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -42081,7 +41415,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -42101,7 +41435,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -42114,7 +41448,7 @@
 
 
 CORBA::Any * 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_abstract_base_values_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -42126,7 +41460,7 @@
   return result_any;
 }
 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_get::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_get (
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_get::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -42135,7 +41469,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -42147,7 +41481,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -42160,7 +41494,7 @@
 
 
 CORBA::Any * 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -42176,13 +41510,13 @@
 }
 
 void 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_get::result (CORBA::Boolean result)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_get::result (CORBA::Boolean result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_set::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_set (
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_set::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const CORBA::Boolean & is_abstract,
@@ -42193,7 +41527,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -42212,7 +41546,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -42225,7 +41559,7 @@
 
 
 CORBA::Any * 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_abstract_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -42237,7 +41571,7 @@
   return result_any;
 }
 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_get::TAO_ClientRequestInfo_IR_ValueDef_is_custom_get (
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_get::TAO_ClientRequestInfo_IR_ValueDef_is_custom_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -42246,7 +41580,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -42258,7 +41592,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -42271,7 +41605,7 @@
 
 
 CORBA::Any * 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -42287,13 +41621,13 @@
 }
 
 void 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_get::result (CORBA::Boolean result)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_get::result (CORBA::Boolean result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_set::TAO_ClientRequestInfo_IR_ValueDef_is_custom_set (
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_set::TAO_ClientRequestInfo_IR_ValueDef_is_custom_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const CORBA::Boolean & is_custom,
@@ -42304,7 +41638,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -42323,7 +41657,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -42336,7 +41670,7 @@
 
 
 CORBA::Any * 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_custom_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -42348,7 +41682,7 @@
   return result_any;
 }
 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_get::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_get (
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_get::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -42357,7 +41691,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -42369,7 +41703,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -42382,7 +41716,7 @@
 
 
 CORBA::Any * 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -42398,13 +41732,13 @@
 }
 
 void 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_get::result (CORBA::Boolean result)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_get::result (CORBA::Boolean result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_set::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_set (
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_set::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const CORBA::Boolean & is_truncatable,
@@ -42415,7 +41749,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -42434,7 +41768,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -42447,7 +41781,7 @@
 
 
 CORBA::Any * 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_truncatable_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -42459,7 +41793,7 @@
   return result_any;
 }
 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_a::TAO_ClientRequestInfo_IR_ValueDef_is_a (
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_a::TAO_ClientRequestInfo_IR_ValueDef_is_a (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
@@ -42470,7 +41804,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_a::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_a::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -42489,7 +41823,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_a::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_a::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -42502,7 +41836,7 @@
 
 
 CORBA::Any * 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_a::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_a::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -42518,19 +41852,19 @@
 }
 
 void 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_a::result (CORBA::Boolean result)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_is_a::result (CORBA::Boolean result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_value_member::TAO_ClientRequestInfo_IR_ValueDef_create_value_member (
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_value_member::TAO_ClientRequestInfo_IR_ValueDef_create_value_member (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
+    IR_IDLType_ptr type,
     const CORBA::Visibility & access,
     CORBA::Environment &    
   )
@@ -42543,7 +41877,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_value_member::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_value_member::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -42583,7 +41917,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_value_member::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_value_member::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -42596,7 +41930,7 @@
 
 
 CORBA::Any * 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_value_member::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_value_member::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -42612,22 +41946,22 @@
 }
 
 void 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_value_member::result (IR::ValueMemberDef_ptr result)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_value_member::result (IR_ValueMemberDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_attribute::TAO_ClientRequestInfo_IR_ValueDef_create_attribute (
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_attribute::TAO_ClientRequestInfo_IR_ValueDef_create_attribute (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr type,
-    IR::AttributeMode & mode,
-    const IR::ExceptionDefSeq & get_exceptions,
-    const IR::ExceptionDefSeq & put_exceptions,
+    IR_IDLType_ptr type,
+    IR_AttributeMode & mode,
+    const IR_ExceptionDefSeq & get_exceptions,
+    const IR_ExceptionDefSeq & put_exceptions,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -42641,7 +41975,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_attribute::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_attribute::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -42694,7 +42028,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_attribute::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_attribute::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -42707,7 +42041,7 @@
 
 
 CORBA::Any * 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_attribute::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_attribute::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -42723,23 +42057,23 @@
 }
 
 void 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_attribute::result (IR::AttributeDef_ptr result)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_attribute::result (IR_AttributeDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_operation::TAO_ClientRequestInfo_IR_ValueDef_create_operation (
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_operation::TAO_ClientRequestInfo_IR_ValueDef_create_operation (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    IR::IDLType_ptr result,
-    IR::OperationMode & mode,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
-    const IR::ContextIdSeq & contexts,
+    IR_IDLType_ptr result,
+    IR_OperationMode & mode,
+    const IR_ParDescriptionSeq & params,
+    const IR_ExceptionDefSeq & exceptions,
+    const IR_ContextIdSeq & contexts,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -42754,7 +42088,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_operation::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_operation::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -42813,7 +42147,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_operation::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_operation::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -42826,7 +42160,7 @@
 
 
 CORBA::Any * 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_operation::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_operation::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -42842,24 +42176,26 @@
 }
 
 void 
-IR::ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_operation::result (IR::OperationDef_ptr result)
+IR_ValueDef::TAO_ClientRequestInfo_IR_ValueDef_create_operation::result (IR_OperationDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_ValueDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   28, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f56), ACE_NTOHL (0x616c7565), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/ValueDef:1.0
-  9, ACE_NTOHL (0x56616c75), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = ValueDef
+  9, ACE_NTOHL (0x56616c75), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = IR_ValueDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ValueDef (CORBA::tk_objref, sizeof (_oc_IR_ValueDef), (char *) &_oc_IR_ValueDef, 0, sizeof (IR::ValueDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_ValueDef (CORBA::tk_objref, sizeof (_oc_IR_ValueDef), (char *) &_oc_IR_ValueDef, 0, sizeof (IR_ValueDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ValueDef, &_tc_TAO_tc_IR_ValueDef)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_ValueDescription[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -43030,7 +42366,7 @@
               48, // encapsulation length
                 TAO_ENCAP_BYTE_ORDER, // byte order
                 27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x444c5479), ACE_NTOHL (0x70653a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/IDLType:1.0
-                8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IDLType
+                8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IR_IDLType
 
               5, ACE_NTOHL (0x6d6f6465), ACE_NTOHL (0x0),  // name = mode
               CORBA::tk_enum, // typecode kind
@@ -43352,7 +42688,7 @@
         48, // encapsulation length
           TAO_ENCAP_BYTE_ORDER, // byte order
           27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x444c5479), ACE_NTOHL (0x70653a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/IDLType:1.0
-          8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IDLType
+          8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IR_IDLType
 
         7, ACE_NTOHL (0x61636365), ACE_NTOHL (0x73730000),  // name = access
         CORBA::tk_alias, // typecode kind for typedefs
@@ -43372,7 +42708,7 @@
   576, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     34, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x6e697469), ACE_NTOHL (0x616c697a), ACE_NTOHL (0x65725365), ACE_NTOHL (0x713a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/InitializerSeq:1.0
-    15, ACE_NTOHL (0x496e6974), ACE_NTOHL (0x69616c69), ACE_NTOHL (0x7a657253), ACE_NTOHL (0x65710000),  // name = InitializerSeq
+    15, ACE_NTOHL (0x496e6974), ACE_NTOHL (0x69616c69), ACE_NTOHL (0x7a657253), ACE_NTOHL (0x65710000),  // name = IR_InitializerSeq
     CORBA::tk_sequence, // typecode kind
     504, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
@@ -43380,14 +42716,14 @@
       488, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         31, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x6e697469), ACE_NTOHL (0x616c697a), ACE_NTOHL (0x65723a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/Initializer:1.0
-        12, ACE_NTOHL (0x496e6974), ACE_NTOHL (0x69616c69), ACE_NTOHL (0x7a657200),  // name = Initializer
+        12, ACE_NTOHL (0x496e6974), ACE_NTOHL (0x69616c69), ACE_NTOHL (0x7a657200),  // name = IR_Initializer
         2, // member count
         8, ACE_NTOHL (0x6d656d62), ACE_NTOHL (0x65727300),  // name = members
         CORBA::tk_alias, // typecode kind for typedefs
         324, // encapsulation length
           TAO_ENCAP_BYTE_ORDER, // byte order
           35, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f53), ACE_NTOHL (0x74727563), ACE_NTOHL (0x744d656d), ACE_NTOHL (0x62657253), ACE_NTOHL (0x65713a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/StructMemberSeq:1.0
-          16, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744d65), ACE_NTOHL (0x6d626572), ACE_NTOHL (0x53657100),  // name = StructMemberSeq
+          16, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744d65), ACE_NTOHL (0x6d626572), ACE_NTOHL (0x53657100),  // name = IR_StructMemberSeq
           CORBA::tk_sequence, // typecode kind
           252, // encapsulation length
             TAO_ENCAP_BYTE_ORDER, // byte order
@@ -43395,7 +42731,7 @@
             236, // encapsulation length
               TAO_ENCAP_BYTE_ORDER, // byte order
               32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f53), ACE_NTOHL (0x74727563), ACE_NTOHL (0x744d656d), ACE_NTOHL (0x6265723a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/StructMember:1.0
-              13, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744d65), ACE_NTOHL (0x6d626572), ACE_NTOHL (0x0),  // name = StructMember
+              13, ACE_NTOHL (0x53747275), ACE_NTOHL (0x63744d65), ACE_NTOHL (0x6d626572), ACE_NTOHL (0x0),  // name = IR_StructMember
               3, // member count
               5, ACE_NTOHL (0x6e616d65), ACE_NTOHL (0x0),  // name = name
               CORBA::tk_alias, // typecode kind for typedefs
@@ -43414,7 +42750,7 @@
               48, // encapsulation length
                 TAO_ENCAP_BYTE_ORDER, // byte order
                 27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x444c5479), ACE_NTOHL (0x70653a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/IDLType:1.0
-                8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IDLType
+                8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IR_IDLType
 
 
             0U,
@@ -43489,14 +42825,15 @@
   CORBA::tk_TypeCode,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ValueDescription (CORBA::tk_struct, sizeof (_oc_IR_ValueDescription), (char *) &_oc_IR_ValueDescription, 0, sizeof (IR::ValueDescription));
+static CORBA::TypeCode _tc_TAO_tc_IR_ValueDescription (CORBA::tk_struct, sizeof (_oc_IR_ValueDescription), (char *) &_oc_IR_ValueDescription, 0, sizeof (IR_ValueDescription));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ValueDescription, &_tc_TAO_tc_IR_ValueDescription)
 TAO_NAMESPACE_END
-void IR::ValueDescription::_tao_any_destructor (void *x)
+
+void IR_ValueDescription::_tao_any_destructor (void *x)
 {
-  ValueDescription *tmp = ACE_static_cast (ValueDescription*,x);
+  IR_ValueDescription *tmp = ACE_static_cast (IR_ValueDescription*,x);
   delete tmp;
 }
 
@@ -43505,15 +42842,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_ValueBoxDef_Proxy_Impl::_TAO_ValueBoxDef_Proxy_Impl (void)
+_TAO_ValueBoxDef_Proxy_Impl::_TAO_ValueBoxDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_ValueBoxDef_Remote_Proxy_Impl::_TAO_ValueBoxDef_Remote_Proxy_Impl (void)
+_TAO_ValueBoxDef_Remote_Proxy_Impl::_TAO_ValueBoxDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-IR::IDLType_ptr IR::_TAO_ValueBoxDef_Remote_Proxy_Impl::original_type_def (
+IR_IDLType_ptr _TAO_ValueBoxDef_Remote_Proxy_Impl::original_type_def (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -43522,8 +42859,8 @@
   ))
 {
   
-  IR::IDLType_ptr _tao_retval = IR::IDLType::_nil ();
-  IR::IDLType_var _tao_safe_retval (_tao_retval);
+  IR_IDLType_ptr _tao_retval = IR_IDLType::_nil ();
+  IR_IDLType_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -43551,7 +42888,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_get ri (
+      IR_ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -43607,7 +42944,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::IDLType_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_IDLType_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -43673,19 +43010,15 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_ValueBoxDef_Remote_Proxy_Impl::original_type_def (
+void _TAO_ValueBoxDef_Remote_Proxy_Impl::original_type_def (
     CORBA_Object *_collocated_tao_target_,
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -43711,7 +43044,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_set ri (
+      IR_ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_set ri (
         &_tao_call,
         _collocated_tao_target_,
         original_type_def,
@@ -43835,37 +43168,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_ValueBoxDef_Proxy_Broker::_TAO_ValueBoxDef_Proxy_Broker (void)
+_TAO_ValueBoxDef_Proxy_Broker::_TAO_ValueBoxDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ValueBoxDef_Proxy_Broker::~_TAO_ValueBoxDef_Proxy_Broker (void)
+_TAO_ValueBoxDef_Proxy_Broker::~_TAO_ValueBoxDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ValueBoxDef_Proxy_Broker * (*IR__TAO_ValueBoxDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_ValueBoxDef_Proxy_Broker * (*_TAO_ValueBoxDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_ValueBoxDef_Remote_Proxy_Broker *
-IR::_TAO_ValueBoxDef_Remote_Proxy_Broker::the_TAO_ValueBoxDef_Remote_Proxy_Broker (void)
+_TAO_ValueBoxDef_Remote_Proxy_Broker *
+_TAO_ValueBoxDef_Remote_Proxy_Broker::the_TAO_ValueBoxDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_ValueBoxDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_ValueBoxDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_ValueBoxDef_Remote_Proxy_Broker::_TAO_ValueBoxDef_Remote_Proxy_Broker (void)
+_TAO_ValueBoxDef_Remote_Proxy_Broker::_TAO_ValueBoxDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ValueBoxDef_Remote_Proxy_Broker::~_TAO_ValueBoxDef_Remote_Proxy_Broker (void)
+_TAO_ValueBoxDef_Remote_Proxy_Broker::~_TAO_ValueBoxDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ValueBoxDef_Proxy_Impl&
-IR::_TAO_ValueBoxDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::ValueBoxDef *object,
+_TAO_ValueBoxDef_Proxy_Impl&
+_TAO_ValueBoxDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_ValueBoxDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -43881,109 +43214,109 @@
 
 
 // default constructor
-IR::ValueBoxDef::ValueBoxDef (int collocated)
+IR_ValueBoxDef::IR_ValueBoxDef (int collocated)
 {
   this->IR_ValueBoxDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::ValueBoxDef::~ValueBoxDef (void)
+IR_ValueBoxDef::~IR_ValueBoxDef (void)
 {}
 
 void
-IR::ValueBoxDef::IR_ValueBoxDef_setup_collocation (int collocated)
+IR_ValueBoxDef::IR_ValueBoxDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_ValueBoxDef_Proxy_Broker_ =
-      ::IR__TAO_ValueBoxDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_ValueBoxDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_ValueBoxDef_Proxy_Broker_ =
-      ::IR::_TAO_ValueBoxDef_Remote_Proxy_Broker::the_TAO_ValueBoxDef_Remote_Proxy_Broker ();
+      _TAO_ValueBoxDef_Remote_Proxy_Broker::the_TAO_ValueBoxDef_Remote_Proxy_Broker ();
   
   this->IR_TypedefDef_setup_collocation (collocated);
 }
 
-void IR::ValueBoxDef::_tao_any_destructor (void *x)
+void IR_ValueBoxDef::_tao_any_destructor (void *x)
 {
-  ValueBoxDef *tmp = ACE_static_cast (ValueBoxDef*,x);
+  IR_ValueBoxDef *tmp = ACE_static_cast (IR_ValueBoxDef*,x);
   CORBA::release (tmp);
 }
 
-IR::ValueBoxDef_ptr IR::ValueBoxDef::_narrow (
+IR_ValueBoxDef_ptr IR_ValueBoxDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return ValueBoxDef::_nil ();
+    return IR_ValueBoxDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/ValueBoxDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (ValueBoxDef::_nil ());
+      ACE_CHECK_RETURN (IR_ValueBoxDef::_nil ());
       if (is_a == 0)
-        return ValueBoxDef::_nil ();
+        return IR_ValueBoxDef::_nil ();
     }
-  return ValueBoxDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_ValueBoxDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::ValueBoxDef_ptr IR::ValueBoxDef::_unchecked_narrow (
+IR_ValueBoxDef_ptr IR_ValueBoxDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return ValueBoxDef::_nil ();
+    return IR_ValueBoxDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      ValueBoxDef_ptr default_proxy = ValueBoxDef::_nil ();
+      IR_ValueBoxDef_ptr default_proxy = IR_ValueBoxDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_ValueBoxDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_ValueBoxDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::ValueBoxDef (
+          ::IR_ValueBoxDef (
             stub,
             1,
             obj->_servant ()),
             
-          ValueBoxDef::_nil ());
+          IR_ValueBoxDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::ValueBoxDef (stub, 0, obj->_servant ()), ValueBoxDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_ValueBoxDef (stub, 0, obj->_servant ()), IR_ValueBoxDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            ValueBoxDef_ptr,
+            IR_ValueBoxDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &ValueBoxDef::_narrow
+                      &IR_ValueBoxDef::_narrow
                     )
                 )
           );
 }
 
-IR::ValueBoxDef_ptr
-IR::ValueBoxDef::_duplicate (ValueBoxDef_ptr obj)
+IR_ValueBoxDef_ptr
+IR_ValueBoxDef::_duplicate (IR_ValueBoxDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::ValueBoxDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_ValueBoxDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/ValueBoxDef:1.0")) ||
@@ -43997,58 +43330,58 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::ValueBoxDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_ValueBoxDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, ValueBoxDef)::_narrow))
+      &IR_ValueBoxDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, TypedefDef)::_narrow))
+      &IR_TypedefDef::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::TypedefDef_ptr,
+            IR_TypedefDef_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, IDLType)::_narrow))
+      &IR_IDLType::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::IDLType_ptr,
+            IR_IDLType_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -44061,12 +43394,12 @@
   return retv;
 }
 
-const char* IR::ValueBoxDef::_interface_repository_id (void) const
+const char* IR_ValueBoxDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/ValueBoxDef:1.0";
 }
 
-IR::IDLType_ptr IR::ValueBoxDef::original_type_def (
+IR_IDLType_ptr IR_ValueBoxDef::original_type_def (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -44083,8 +43416,8 @@
     );
 }
 
-void IR::ValueBoxDef::original_type_def (
-    IR::IDLType_ptr original_type_def,
+void IR_ValueBoxDef::original_type_def (
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -44102,9 +43435,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_get::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_get (
+IR_ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_get::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -44113,7 +43445,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -44125,7 +43457,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -44138,7 +43470,7 @@
 
 
 CORBA::Any * 
-IR::ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -44154,16 +43486,16 @@
 }
 
 void 
-IR::ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_get::result (IR::IDLType_ptr result)
+IR_ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_get::result (IR_IDLType_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_set::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_set (
+IR_ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_set::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    IR::IDLType_ptr original_type_def,
+    IR_IDLType_ptr original_type_def,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -44171,7 +43503,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -44191,7 +43523,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -44204,7 +43536,7 @@
 
 
 CORBA::Any * 
-IR::ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ValueBoxDef::TAO_ClientRequestInfo_IR_ValueBoxDef_original_type_def_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -44217,13 +43549,14 @@
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_ValueBoxDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   31, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f56), ACE_NTOHL (0x616c7565), ACE_NTOHL (0x426f7844), ACE_NTOHL (0x65663a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/ValueBoxDef:1.0
-  12, ACE_NTOHL (0x56616c75), ACE_NTOHL (0x65426f78), ACE_NTOHL (0x44656600),  // name = ValueBoxDef
+  12, ACE_NTOHL (0x56616c75), ACE_NTOHL (0x65426f78), ACE_NTOHL (0x44656600),  // name = IR_ValueBoxDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ValueBoxDef (CORBA::tk_objref, sizeof (_oc_IR_ValueBoxDef), (char *) &_oc_IR_ValueBoxDef, 0, sizeof (IR::ValueBoxDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_ValueBoxDef (CORBA::tk_objref, sizeof (_oc_IR_ValueBoxDef), (char *) &_oc_IR_ValueBoxDef, 0, sizeof (IR_ValueBoxDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ValueBoxDef, &_tc_TAO_tc_IR_ValueBoxDef)
@@ -44233,15 +43566,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_ProvidesDef_Proxy_Impl::_TAO_ProvidesDef_Proxy_Impl (void)
+_TAO_ProvidesDef_Proxy_Impl::_TAO_ProvidesDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_ProvidesDef_Remote_Proxy_Impl::_TAO_ProvidesDef_Remote_Proxy_Impl (void)
+_TAO_ProvidesDef_Remote_Proxy_Impl::_TAO_ProvidesDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-IR::InterfaceDef_ptr IR::_TAO_ProvidesDef_Remote_Proxy_Impl::interface_type (
+IR_InterfaceDef_ptr _TAO_ProvidesDef_Remote_Proxy_Impl::interface_type (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -44250,8 +43583,8 @@
   ))
 {
   
-  IR::InterfaceDef_ptr _tao_retval = IR::InterfaceDef::_nil ();
-  IR::InterfaceDef_var _tao_safe_retval (_tao_retval);
+  IR_InterfaceDef_ptr _tao_retval = IR_InterfaceDef::_nil ();
+  IR_InterfaceDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -44279,7 +43612,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ProvidesDef::TAO_ClientRequestInfo_IR_ProvidesDef_interface_type_get ri (
+      IR_ProvidesDef::TAO_ClientRequestInfo_IR_ProvidesDef_interface_type_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -44335,7 +43668,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::InterfaceDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_InterfaceDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -44411,37 +43744,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_ProvidesDef_Proxy_Broker::_TAO_ProvidesDef_Proxy_Broker (void)
+_TAO_ProvidesDef_Proxy_Broker::_TAO_ProvidesDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ProvidesDef_Proxy_Broker::~_TAO_ProvidesDef_Proxy_Broker (void)
+_TAO_ProvidesDef_Proxy_Broker::~_TAO_ProvidesDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ProvidesDef_Proxy_Broker * (*IR__TAO_ProvidesDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_ProvidesDef_Proxy_Broker * (*_TAO_ProvidesDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_ProvidesDef_Remote_Proxy_Broker *
-IR::_TAO_ProvidesDef_Remote_Proxy_Broker::the_TAO_ProvidesDef_Remote_Proxy_Broker (void)
+_TAO_ProvidesDef_Remote_Proxy_Broker *
+_TAO_ProvidesDef_Remote_Proxy_Broker::the_TAO_ProvidesDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_ProvidesDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_ProvidesDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_ProvidesDef_Remote_Proxy_Broker::_TAO_ProvidesDef_Remote_Proxy_Broker (void)
+_TAO_ProvidesDef_Remote_Proxy_Broker::_TAO_ProvidesDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ProvidesDef_Remote_Proxy_Broker::~_TAO_ProvidesDef_Remote_Proxy_Broker (void)
+_TAO_ProvidesDef_Remote_Proxy_Broker::~_TAO_ProvidesDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ProvidesDef_Proxy_Impl&
-IR::_TAO_ProvidesDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::ProvidesDef *object,
+_TAO_ProvidesDef_Proxy_Impl&
+_TAO_ProvidesDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_ProvidesDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -44457,109 +43790,109 @@
 
 
 // default constructor
-IR::ProvidesDef::ProvidesDef (int collocated)
+IR_ProvidesDef::IR_ProvidesDef (int collocated)
 {
   this->IR_ProvidesDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::ProvidesDef::~ProvidesDef (void)
+IR_ProvidesDef::~IR_ProvidesDef (void)
 {}
 
 void
-IR::ProvidesDef::IR_ProvidesDef_setup_collocation (int collocated)
+IR_ProvidesDef::IR_ProvidesDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_ProvidesDef_Proxy_Broker_ =
-      ::IR__TAO_ProvidesDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_ProvidesDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_ProvidesDef_Proxy_Broker_ =
-      ::IR::_TAO_ProvidesDef_Remote_Proxy_Broker::the_TAO_ProvidesDef_Remote_Proxy_Broker ();
+      _TAO_ProvidesDef_Remote_Proxy_Broker::the_TAO_ProvidesDef_Remote_Proxy_Broker ();
   
   this->IR_Contained_setup_collocation (collocated);
 }
 
-void IR::ProvidesDef::_tao_any_destructor (void *x)
+void IR_ProvidesDef::_tao_any_destructor (void *x)
 {
-  ProvidesDef *tmp = ACE_static_cast (ProvidesDef*,x);
+  IR_ProvidesDef *tmp = ACE_static_cast (IR_ProvidesDef*,x);
   CORBA::release (tmp);
 }
 
-IR::ProvidesDef_ptr IR::ProvidesDef::_narrow (
+IR_ProvidesDef_ptr IR_ProvidesDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return ProvidesDef::_nil ();
+    return IR_ProvidesDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/ProvidesDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (ProvidesDef::_nil ());
+      ACE_CHECK_RETURN (IR_ProvidesDef::_nil ());
       if (is_a == 0)
-        return ProvidesDef::_nil ();
+        return IR_ProvidesDef::_nil ();
     }
-  return ProvidesDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_ProvidesDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::ProvidesDef_ptr IR::ProvidesDef::_unchecked_narrow (
+IR_ProvidesDef_ptr IR_ProvidesDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return ProvidesDef::_nil ();
+    return IR_ProvidesDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      ProvidesDef_ptr default_proxy = ProvidesDef::_nil ();
+      IR_ProvidesDef_ptr default_proxy = IR_ProvidesDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_ProvidesDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_ProvidesDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::ProvidesDef (
+          ::IR_ProvidesDef (
             stub,
             1,
             obj->_servant ()),
             
-          ProvidesDef::_nil ());
+          IR_ProvidesDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::ProvidesDef (stub, 0, obj->_servant ()), ProvidesDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_ProvidesDef (stub, 0, obj->_servant ()), IR_ProvidesDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            ProvidesDef_ptr,
+            IR_ProvidesDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &ProvidesDef::_narrow
+                      &IR_ProvidesDef::_narrow
                     )
                 )
           );
 }
 
-IR::ProvidesDef_ptr
-IR::ProvidesDef::_duplicate (ProvidesDef_ptr obj)
+IR_ProvidesDef_ptr
+IR_ProvidesDef::_duplicate (IR_ProvidesDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::ProvidesDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_ProvidesDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/ProvidesDef:1.0")) ||
@@ -44571,34 +43904,34 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::ProvidesDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_ProvidesDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, ProvidesDef)::_narrow))
+      &IR_ProvidesDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -44611,12 +43944,12 @@
   return retv;
 }
 
-const char* IR::ProvidesDef::_interface_repository_id (void) const
+const char* IR_ProvidesDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/ProvidesDef:1.0";
 }
 
-IR::InterfaceDef_ptr IR::ProvidesDef::interface_type (
+IR_InterfaceDef_ptr IR_ProvidesDef::interface_type (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -44633,9 +43966,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::ProvidesDef::TAO_ClientRequestInfo_IR_ProvidesDef_interface_type_get::TAO_ClientRequestInfo_IR_ProvidesDef_interface_type_get (
+IR_ProvidesDef::TAO_ClientRequestInfo_IR_ProvidesDef_interface_type_get::TAO_ClientRequestInfo_IR_ProvidesDef_interface_type_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -44644,7 +43976,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ProvidesDef::TAO_ClientRequestInfo_IR_ProvidesDef_interface_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ProvidesDef::TAO_ClientRequestInfo_IR_ProvidesDef_interface_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -44656,7 +43988,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ProvidesDef::TAO_ClientRequestInfo_IR_ProvidesDef_interface_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ProvidesDef::TAO_ClientRequestInfo_IR_ProvidesDef_interface_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -44669,7 +44001,7 @@
 
 
 CORBA::Any * 
-IR::ProvidesDef::TAO_ClientRequestInfo_IR_ProvidesDef_interface_type_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ProvidesDef::TAO_ClientRequestInfo_IR_ProvidesDef_interface_type_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -44685,24 +44017,26 @@
 }
 
 void 
-IR::ProvidesDef::TAO_ClientRequestInfo_IR_ProvidesDef_interface_type_get::result (IR::InterfaceDef_ptr result)
+IR_ProvidesDef::TAO_ClientRequestInfo_IR_ProvidesDef_interface_type_get::result (IR_InterfaceDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_ProvidesDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   31, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f50), ACE_NTOHL (0x726f7669), ACE_NTOHL (0x64657344), ACE_NTOHL (0x65663a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/ProvidesDef:1.0
-  12, ACE_NTOHL (0x50726f76), ACE_NTOHL (0x69646573), ACE_NTOHL (0x44656600),  // name = ProvidesDef
+  12, ACE_NTOHL (0x50726f76), ACE_NTOHL (0x69646573), ACE_NTOHL (0x44656600),  // name = IR_ProvidesDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ProvidesDef (CORBA::tk_objref, sizeof (_oc_IR_ProvidesDef), (char *) &_oc_IR_ProvidesDef, 0, sizeof (IR::ProvidesDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_ProvidesDef (CORBA::tk_objref, sizeof (_oc_IR_ProvidesDef), (char *) &_oc_IR_ProvidesDef, 0, sizeof (IR_ProvidesDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ProvidesDef, &_tc_TAO_tc_IR_ProvidesDef)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_ProvidesDescription[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -44750,17 +44084,18 @@
   60, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x6e746572), ACE_NTOHL (0x66616365), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/InterfaceDef:1.0
-    13, ACE_NTOHL (0x496e7465), ACE_NTOHL (0x72666163), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = InterfaceDef
+    13, ACE_NTOHL (0x496e7465), ACE_NTOHL (0x72666163), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = IR_InterfaceDef
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ProvidesDescription (CORBA::tk_struct, sizeof (_oc_IR_ProvidesDescription), (char *) &_oc_IR_ProvidesDescription, 0, sizeof (IR::ProvidesDescription));
+static CORBA::TypeCode _tc_TAO_tc_IR_ProvidesDescription (CORBA::tk_struct, sizeof (_oc_IR_ProvidesDescription), (char *) &_oc_IR_ProvidesDescription, 0, sizeof (IR_ProvidesDescription));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ProvidesDescription, &_tc_TAO_tc_IR_ProvidesDescription)
 TAO_NAMESPACE_END
-void IR::ProvidesDescription::_tao_any_destructor (void *x)
+
+void IR_ProvidesDescription::_tao_any_destructor (void *x)
 {
-  ProvidesDescription *tmp = ACE_static_cast (ProvidesDescription*,x);
+  IR_ProvidesDescription *tmp = ACE_static_cast (IR_ProvidesDescription*,x);
   delete tmp;
 }
 
@@ -44769,15 +44104,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_UsesDef_Proxy_Impl::_TAO_UsesDef_Proxy_Impl (void)
+_TAO_UsesDef_Proxy_Impl::_TAO_UsesDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_UsesDef_Remote_Proxy_Impl::_TAO_UsesDef_Remote_Proxy_Impl (void)
+_TAO_UsesDef_Remote_Proxy_Impl::_TAO_UsesDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-IR::InterfaceDef_ptr IR::_TAO_UsesDef_Remote_Proxy_Impl::interface_type (
+IR_InterfaceDef_ptr _TAO_UsesDef_Remote_Proxy_Impl::interface_type (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -44786,8 +44121,8 @@
   ))
 {
   
-  IR::InterfaceDef_ptr _tao_retval = IR::InterfaceDef::_nil ();
-  IR::InterfaceDef_var _tao_safe_retval (_tao_retval);
+  IR_InterfaceDef_ptr _tao_retval = IR_InterfaceDef::_nil ();
+  IR_InterfaceDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -44815,7 +44150,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::UsesDef::TAO_ClientRequestInfo_IR_UsesDef_interface_type_get ri (
+      IR_UsesDef::TAO_ClientRequestInfo_IR_UsesDef_interface_type_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -44871,7 +44206,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::InterfaceDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_InterfaceDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -44937,7 +44272,7 @@
   return _tao_safe_retval._retn ();
 }
 
-CORBA::Boolean IR::_TAO_UsesDef_Remote_Proxy_Impl::is_multiple (
+CORBA::Boolean _TAO_UsesDef_Remote_Proxy_Impl::is_multiple (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -44974,7 +44309,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::UsesDef::TAO_ClientRequestInfo_IR_UsesDef_is_multiple_get ri (
+      IR_UsesDef::TAO_ClientRequestInfo_IR_UsesDef_is_multiple_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -45105,37 +44440,38 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_UsesDef_Proxy_Broker::_TAO_UsesDef_Proxy_Broker (void)
+_TAO_UsesDef_Proxy_Broker::_TAO_UsesDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_UsesDef_Proxy_Broker::~_TAO_UsesDef_Proxy_Broker (void)
+_TAO_UsesDef_Proxy_Broker::~_TAO_UsesDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_UsesDef_Proxy_Broker * (*IR__TAO_UsesDef_Proxy_Broker_Factory_function_pointer) (
+
+_TAO_UsesDef_Proxy_Broker * (*_TAO_UsesDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_UsesDef_Remote_Proxy_Broker *
-IR::_TAO_UsesDef_Remote_Proxy_Broker::the_TAO_UsesDef_Remote_Proxy_Broker (void)
+_TAO_UsesDef_Remote_Proxy_Broker *
+_TAO_UsesDef_Remote_Proxy_Broker::the_TAO_UsesDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_UsesDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_UsesDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_UsesDef_Remote_Proxy_Broker::_TAO_UsesDef_Remote_Proxy_Broker (void)
+_TAO_UsesDef_Remote_Proxy_Broker::_TAO_UsesDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_UsesDef_Remote_Proxy_Broker::~_TAO_UsesDef_Remote_Proxy_Broker (void)
+_TAO_UsesDef_Remote_Proxy_Broker::~_TAO_UsesDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_UsesDef_Proxy_Impl&
-IR::_TAO_UsesDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::UsesDef *object,
+_TAO_UsesDef_Proxy_Impl&
+_TAO_UsesDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_UsesDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -45151,109 +44487,109 @@
 
 
 // default constructor
-IR::UsesDef::UsesDef (int collocated)
+IR_UsesDef::IR_UsesDef (int collocated)
 {
   this->IR_UsesDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::UsesDef::~UsesDef (void)
+IR_UsesDef::~IR_UsesDef (void)
 {}
 
 void
-IR::UsesDef::IR_UsesDef_setup_collocation (int collocated)
+IR_UsesDef::IR_UsesDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_UsesDef_Proxy_Broker_ =
-      ::IR__TAO_UsesDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_UsesDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_UsesDef_Proxy_Broker_ =
-      ::IR::_TAO_UsesDef_Remote_Proxy_Broker::the_TAO_UsesDef_Remote_Proxy_Broker ();
+      _TAO_UsesDef_Remote_Proxy_Broker::the_TAO_UsesDef_Remote_Proxy_Broker ();
   
   this->IR_Contained_setup_collocation (collocated);
 }
 
-void IR::UsesDef::_tao_any_destructor (void *x)
+void IR_UsesDef::_tao_any_destructor (void *x)
 {
-  UsesDef *tmp = ACE_static_cast (UsesDef*,x);
+  IR_UsesDef *tmp = ACE_static_cast (IR_UsesDef*,x);
   CORBA::release (tmp);
 }
 
-IR::UsesDef_ptr IR::UsesDef::_narrow (
+IR_UsesDef_ptr IR_UsesDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return UsesDef::_nil ();
+    return IR_UsesDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/UsesDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (UsesDef::_nil ());
+      ACE_CHECK_RETURN (IR_UsesDef::_nil ());
       if (is_a == 0)
-        return UsesDef::_nil ();
+        return IR_UsesDef::_nil ();
     }
-  return UsesDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_UsesDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::UsesDef_ptr IR::UsesDef::_unchecked_narrow (
+IR_UsesDef_ptr IR_UsesDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return UsesDef::_nil ();
+    return IR_UsesDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      UsesDef_ptr default_proxy = UsesDef::_nil ();
+      IR_UsesDef_ptr default_proxy = IR_UsesDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_UsesDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_UsesDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::UsesDef (
+          ::IR_UsesDef (
             stub,
             1,
             obj->_servant ()),
             
-          UsesDef::_nil ());
+          IR_UsesDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::UsesDef (stub, 0, obj->_servant ()), UsesDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_UsesDef (stub, 0, obj->_servant ()), IR_UsesDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            UsesDef_ptr,
+            IR_UsesDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &UsesDef::_narrow
+                      &IR_UsesDef::_narrow
                     )
                 )
           );
 }
 
-IR::UsesDef_ptr
-IR::UsesDef::_duplicate (UsesDef_ptr obj)
+IR_UsesDef_ptr
+IR_UsesDef::_duplicate (IR_UsesDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::UsesDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_UsesDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/UsesDef:1.0")) ||
@@ -45265,34 +44601,34 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::UsesDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_UsesDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, UsesDef)::_narrow))
+      &IR_UsesDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -45305,12 +44641,12 @@
   return retv;
 }
 
-const char* IR::UsesDef::_interface_repository_id (void) const
+const char* IR_UsesDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/UsesDef:1.0";
 }
 
-IR::InterfaceDef_ptr IR::UsesDef::interface_type (
+IR_InterfaceDef_ptr IR_UsesDef::interface_type (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -45327,7 +44663,7 @@
     );
 }
 
-CORBA::Boolean IR::UsesDef::is_multiple (
+CORBA::Boolean IR_UsesDef::is_multiple (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -45344,9 +44680,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::UsesDef::TAO_ClientRequestInfo_IR_UsesDef_interface_type_get::TAO_ClientRequestInfo_IR_UsesDef_interface_type_get (
+IR_UsesDef::TAO_ClientRequestInfo_IR_UsesDef_interface_type_get::TAO_ClientRequestInfo_IR_UsesDef_interface_type_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -45355,7 +44690,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::UsesDef::TAO_ClientRequestInfo_IR_UsesDef_interface_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_UsesDef::TAO_ClientRequestInfo_IR_UsesDef_interface_type_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -45367,7 +44702,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::UsesDef::TAO_ClientRequestInfo_IR_UsesDef_interface_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_UsesDef::TAO_ClientRequestInfo_IR_UsesDef_interface_type_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -45380,7 +44715,7 @@
 
 
 CORBA::Any * 
-IR::UsesDef::TAO_ClientRequestInfo_IR_UsesDef_interface_type_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_UsesDef::TAO_ClientRequestInfo_IR_UsesDef_interface_type_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -45396,13 +44731,13 @@
 }
 
 void 
-IR::UsesDef::TAO_ClientRequestInfo_IR_UsesDef_interface_type_get::result (IR::InterfaceDef_ptr result)
+IR_UsesDef::TAO_ClientRequestInfo_IR_UsesDef_interface_type_get::result (IR_InterfaceDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::UsesDef::TAO_ClientRequestInfo_IR_UsesDef_is_multiple_get::TAO_ClientRequestInfo_IR_UsesDef_is_multiple_get (
+IR_UsesDef::TAO_ClientRequestInfo_IR_UsesDef_is_multiple_get::TAO_ClientRequestInfo_IR_UsesDef_is_multiple_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -45411,7 +44746,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::UsesDef::TAO_ClientRequestInfo_IR_UsesDef_is_multiple_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_UsesDef::TAO_ClientRequestInfo_IR_UsesDef_is_multiple_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -45423,7 +44758,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::UsesDef::TAO_ClientRequestInfo_IR_UsesDef_is_multiple_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_UsesDef::TAO_ClientRequestInfo_IR_UsesDef_is_multiple_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -45436,7 +44771,7 @@
 
 
 CORBA::Any * 
-IR::UsesDef::TAO_ClientRequestInfo_IR_UsesDef_is_multiple_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_UsesDef::TAO_ClientRequestInfo_IR_UsesDef_is_multiple_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -45452,24 +44787,26 @@
 }
 
 void 
-IR::UsesDef::TAO_ClientRequestInfo_IR_UsesDef_is_multiple_get::result (CORBA::Boolean result)
+IR_UsesDef::TAO_ClientRequestInfo_IR_UsesDef_is_multiple_get::result (CORBA::Boolean result)
 {
   // update the result 
   this->_result = result;
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_UsesDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f55), ACE_NTOHL (0x73657344), ACE_NTOHL (0x65663a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/UsesDef:1.0
-  8, ACE_NTOHL (0x55736573), ACE_NTOHL (0x44656600),  // name = UsesDef
+  8, ACE_NTOHL (0x55736573), ACE_NTOHL (0x44656600),  // name = IR_UsesDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_UsesDef (CORBA::tk_objref, sizeof (_oc_IR_UsesDef), (char *) &_oc_IR_UsesDef, 0, sizeof (IR::UsesDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_UsesDef (CORBA::tk_objref, sizeof (_oc_IR_UsesDef), (char *) &_oc_IR_UsesDef, 0, sizeof (IR_UsesDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_UsesDef, &_tc_TAO_tc_IR_UsesDef)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_UsesDescription[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -45517,38 +44854,35 @@
   60, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x6e746572), ACE_NTOHL (0x66616365), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/InterfaceDef:1.0
-    13, ACE_NTOHL (0x496e7465), ACE_NTOHL (0x72666163), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = InterfaceDef
+    13, ACE_NTOHL (0x496e7465), ACE_NTOHL (0x72666163), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = IR_InterfaceDef
 
   12, ACE_NTOHL (0x69735f6d), ACE_NTOHL (0x756c7469), ACE_NTOHL (0x706c6500),  // name = is_multiple
   CORBA::tk_boolean,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_UsesDescription (CORBA::tk_struct, sizeof (_oc_IR_UsesDescription), (char *) &_oc_IR_UsesDescription, 0, sizeof (IR::UsesDescription));
+static CORBA::TypeCode _tc_TAO_tc_IR_UsesDescription (CORBA::tk_struct, sizeof (_oc_IR_UsesDescription), (char *) &_oc_IR_UsesDescription, 0, sizeof (IR_UsesDescription));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_UsesDescription, &_tc_TAO_tc_IR_UsesDescription)
 TAO_NAMESPACE_END
-void IR::UsesDescription::_tao_any_destructor (void *x)
+
+void IR_UsesDescription::_tao_any_destructor (void *x)
 {
-  UsesDescription *tmp = ACE_static_cast (UsesDescription*,x);
+  IR_UsesDescription *tmp = ACE_static_cast (IR_UsesDescription*,x);
   delete tmp;
 }
 
-
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_SEQUENCE_IR_PROVIDESDESCSEQ_CS_)
-#define __TAO_UNBOUNDED_SEQUENCE_IR_PROVIDESDESCSEQ_CS_
-
   void
-  IR::_TAO_Unbounded_Sequence_IR_ProvidesDescSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Sequence_IR_ProvidesDescSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::ProvidesDescription* tmp = 0;
+    IR_ProvidesDescription* tmp = 0;
     tmp = _TAO_Unbounded_Sequence_IR_ProvidesDescSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::ProvidesDescription *old = ACE_reinterpret_cast (IR::ProvidesDescription *,this->buffer_);
+      IR_ProvidesDescription *old = ACE_reinterpret_cast (IR_ProvidesDescription *,this->buffer_);
       
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         tmp[i] = old[i];
@@ -45561,75 +44895,65 @@
   }
   
   void
-  IR::_TAO_Unbounded_Sequence_IR_ProvidesDescSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Sequence_IR_ProvidesDescSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
     
-    IR::ProvidesDescription *tmp = ACE_reinterpret_cast (IR::ProvidesDescription *,this->buffer_);
+    IR_ProvidesDescription *tmp = ACE_reinterpret_cast (IR_ProvidesDescription *,this->buffer_);
     
     _TAO_Unbounded_Sequence_IR_ProvidesDescSeq::freebuf (tmp);
     this->buffer_ = 0;
   } 
   
-  IR::_TAO_Unbounded_Sequence_IR_ProvidesDescSeq::~_TAO_Unbounded_Sequence_IR_ProvidesDescSeq (void) // Dtor.
+  _TAO_Unbounded_Sequence_IR_ProvidesDescSeq::~_TAO_Unbounded_Sequence_IR_ProvidesDescSeq (void) // Dtor.
   {
     this->_deallocate_buffer ();
   }
   
-  
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_PROVIDESDESCSEQ_CS_)
-#define _IR_PROVIDESDESCSEQ_CS_
-
 // *************************************************************
-// IR::ProvidesDescSeq
+// IR_ProvidesDescSeq
 // *************************************************************
 
-IR::ProvidesDescSeq::ProvidesDescSeq (void)
+IR_ProvidesDescSeq::IR_ProvidesDescSeq (void)
 {}
-IR::ProvidesDescSeq::ProvidesDescSeq (CORBA::ULong max) // uses max size
+IR_ProvidesDescSeq::IR_ProvidesDescSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_ProvidesDescSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::ProvidesDescription>
+  TAO_Unbounded_Sequence<IR_ProvidesDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::ProvidesDescSeq::ProvidesDescSeq (CORBA::ULong max, CORBA::ULong length, IR::ProvidesDescription *buffer, CORBA::Boolean release)
+IR_ProvidesDescSeq::IR_ProvidesDescSeq (CORBA::ULong max, CORBA::ULong length, IR_ProvidesDescription *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_ProvidesDescSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::ProvidesDescription>
+  TAO_Unbounded_Sequence<IR_ProvidesDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::ProvidesDescSeq::ProvidesDescSeq (const ProvidesDescSeq &seq) // copy ctor
+IR_ProvidesDescSeq::IR_ProvidesDescSeq (const IR_ProvidesDescSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_ProvidesDescSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::ProvidesDescription>
+  TAO_Unbounded_Sequence<IR_ProvidesDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::ProvidesDescSeq::~ProvidesDescSeq (void) // dtor
+IR_ProvidesDescSeq::~IR_ProvidesDescSeq (void) // dtor
 {}
-void IR::ProvidesDescSeq::_tao_any_destructor (void *x)
+void IR_ProvidesDescSeq::_tao_any_destructor (void *x)
 {
-  ProvidesDescSeq *tmp = ACE_static_cast (ProvidesDescSeq*,x);
+  IR_ProvidesDescSeq *tmp = ACE_static_cast (IR_ProvidesDescSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_ProvidesDescSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -45685,13 +45009,13 @@
       60, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x6e746572), ACE_NTOHL (0x66616365), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/InterfaceDef:1.0
-        13, ACE_NTOHL (0x496e7465), ACE_NTOHL (0x72666163), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = InterfaceDef
+        13, ACE_NTOHL (0x496e7465), ACE_NTOHL (0x72666163), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = IR_InterfaceDef
 
 
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ProvidesDescSeq (CORBA::tk_alias, sizeof (_oc_IR_ProvidesDescSeq), (char *) &_oc_IR_ProvidesDescSeq, 0, sizeof (IR::ProvidesDescSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_ProvidesDescSeq (CORBA::tk_alias, sizeof (_oc_IR_ProvidesDescSeq), (char *) &_oc_IR_ProvidesDescSeq, 0, sizeof (IR_ProvidesDescSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ProvidesDescSeq, &_tc_TAO_tc_IR_ProvidesDescSeq)
@@ -45699,18 +45023,15 @@
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
-#if !defined (__TAO_UNBOUNDED_SEQUENCE_IR_USESDESCSEQ_CS_)
-#define __TAO_UNBOUNDED_SEQUENCE_IR_USESDESCSEQ_CS_
-
   void
-  IR::_TAO_Unbounded_Sequence_IR_UsesDescSeq::_allocate_buffer (CORBA::ULong length)
+  _TAO_Unbounded_Sequence_IR_UsesDescSeq::_allocate_buffer (CORBA::ULong length)
   {
-    IR::UsesDescription* tmp = 0;
+    IR_UsesDescription* tmp = 0;
     tmp = _TAO_Unbounded_Sequence_IR_UsesDescSeq::allocbuf (length);
     
     if (this->buffer_ != 0)
     {
-      IR::UsesDescription *old = ACE_reinterpret_cast (IR::UsesDescription *,this->buffer_);
+      IR_UsesDescription *old = ACE_reinterpret_cast (IR_UsesDescription *,this->buffer_);
       
       for (CORBA::ULong i = 0; i < this->length_; ++i)
         tmp[i] = old[i];
@@ -45723,75 +45044,65 @@
   }
   
   void
-  IR::_TAO_Unbounded_Sequence_IR_UsesDescSeq::_deallocate_buffer (void)
+  _TAO_Unbounded_Sequence_IR_UsesDescSeq::_deallocate_buffer (void)
   {
     if (this->buffer_ == 0 || this->release_ == 0)
       return;
     
-    IR::UsesDescription *tmp = ACE_reinterpret_cast (IR::UsesDescription *,this->buffer_);
+    IR_UsesDescription *tmp = ACE_reinterpret_cast (IR_UsesDescription *,this->buffer_);
     
     _TAO_Unbounded_Sequence_IR_UsesDescSeq::freebuf (tmp);
     this->buffer_ = 0;
   } 
   
-  IR::_TAO_Unbounded_Sequence_IR_UsesDescSeq::~_TAO_Unbounded_Sequence_IR_UsesDescSeq (void) // Dtor.
+  _TAO_Unbounded_Sequence_IR_UsesDescSeq::~_TAO_Unbounded_Sequence_IR_UsesDescSeq (void) // Dtor.
   {
     this->_deallocate_buffer ();
   }
   
-  
-#endif /* end #if !defined */
-
-
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
 
-#if !defined (_IR_USESDESCSEQ_CS_)
-#define _IR_USESDESCSEQ_CS_
-
 // *************************************************************
-// IR::UsesDescSeq
+// IR_UsesDescSeq
 // *************************************************************
 
-IR::UsesDescSeq::UsesDescSeq (void)
+IR_UsesDescSeq::IR_UsesDescSeq (void)
 {}
-IR::UsesDescSeq::UsesDescSeq (CORBA::ULong max) // uses max size
+IR_UsesDescSeq::IR_UsesDescSeq (CORBA::ULong max) // uses max size
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_UsesDescSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::UsesDescription>
+  TAO_Unbounded_Sequence<IR_UsesDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max)
 {}
-IR::UsesDescSeq::UsesDescSeq (CORBA::ULong max, CORBA::ULong length, IR::UsesDescription *buffer, CORBA::Boolean release)
+IR_UsesDescSeq::IR_UsesDescSeq (CORBA::ULong max, CORBA::ULong length, IR_UsesDescription *buffer, CORBA::Boolean release)
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_UsesDescSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::UsesDescription>
+  TAO_Unbounded_Sequence<IR_UsesDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (max, length, buffer, release)
 {}
-IR::UsesDescSeq::UsesDescSeq (const UsesDescSeq &seq) // copy ctor
+IR_UsesDescSeq::IR_UsesDescSeq (const IR_UsesDescSeq &seq) // copy ctor
   : 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   _TAO_Unbounded_Sequence_IR_UsesDescSeq
 #else /* TAO_USE_SEQUENCE_TEMPLATES */
-  TAO_Unbounded_Sequence<IR::UsesDescription>
+  TAO_Unbounded_Sequence<IR_UsesDescription>
 #endif /* !TAO_USE_SEQUENCE_TEMPLATES */ 
  (seq)
 {}
-IR::UsesDescSeq::~UsesDescSeq (void) // dtor
+IR_UsesDescSeq::~IR_UsesDescSeq (void) // dtor
 {}
-void IR::UsesDescSeq::_tao_any_destructor (void *x)
+void IR_UsesDescSeq::_tao_any_destructor (void *x)
 {
-  UsesDescSeq *tmp = ACE_static_cast (UsesDescSeq*,x);
+  IR_UsesDescSeq *tmp = ACE_static_cast (IR_UsesDescSeq*,x);
   delete tmp;
 }
 
-
-#endif /* end #if !defined */
-
 static const CORBA::Long _oc_IR_UsesDescSeq[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -45847,7 +45158,7 @@
       60, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x6e746572), ACE_NTOHL (0x66616365), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/InterfaceDef:1.0
-        13, ACE_NTOHL (0x496e7465), ACE_NTOHL (0x72666163), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = InterfaceDef
+        13, ACE_NTOHL (0x496e7465), ACE_NTOHL (0x72666163), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = IR_InterfaceDef
 
       12, ACE_NTOHL (0x69735f6d), ACE_NTOHL (0x756c7469), ACE_NTOHL (0x706c6500),  // name = is_multiple
       CORBA::tk_boolean,
@@ -45856,7 +45167,7 @@
     0U,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_UsesDescSeq (CORBA::tk_alias, sizeof (_oc_IR_UsesDescSeq), (char *) &_oc_IR_UsesDescSeq, 0, sizeof (IR::UsesDescSeq));
+static CORBA::TypeCode _tc_TAO_tc_IR_UsesDescSeq (CORBA::tk_alias, sizeof (_oc_IR_UsesDescSeq), (char *) &_oc_IR_UsesDescSeq, 0, sizeof (IR_UsesDescSeq));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_UsesDescSeq, &_tc_TAO_tc_IR_UsesDescSeq)
@@ -45866,15 +45177,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_EventDef_Proxy_Impl::_TAO_EventDef_Proxy_Impl (void)
+_TAO_EventDef_Proxy_Impl::_TAO_EventDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_EventDef_Remote_Proxy_Impl::_TAO_EventDef_Remote_Proxy_Impl (void)
+_TAO_EventDef_Remote_Proxy_Impl::_TAO_EventDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-CORBA::Boolean IR::_TAO_EventDef_Remote_Proxy_Impl::is_a (
+CORBA::Boolean _TAO_EventDef_Remote_Proxy_Impl::is_a (
     CORBA_Object *_collocated_tao_target_,
     const char * event_id,
     CORBA::Environment &ACE_TRY_ENV
@@ -45912,7 +45223,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::EventDef::TAO_ClientRequestInfo_IR_EventDef_is_a ri (
+      IR_EventDef::TAO_ClientRequestInfo_IR_EventDef_is_a ri (
         &_tao_call,
         _collocated_tao_target_,
         event_id,
@@ -46044,7 +45355,7 @@
   return _tao_retval;
 }
 
-IR::ValueDef_ptr IR::_TAO_EventDef_Remote_Proxy_Impl::event (
+IR_ValueDef_ptr _TAO_EventDef_Remote_Proxy_Impl::event (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -46053,8 +45364,8 @@
   ))
 {
   
-  IR::ValueDef_ptr _tao_retval = IR::ValueDef::_nil ();
-  IR::ValueDef_var _tao_safe_retval (_tao_retval);
+  IR_ValueDef_ptr _tao_retval = IR_ValueDef::_nil ();
+  IR_ValueDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -46082,7 +45393,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::EventDef::TAO_ClientRequestInfo_IR_EventDef_event_get ri (
+      IR_EventDef::TAO_ClientRequestInfo_IR_EventDef_event_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -46138,7 +45449,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ValueDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ValueDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -46214,37 +45525,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_EventDef_Proxy_Broker::_TAO_EventDef_Proxy_Broker (void)
+_TAO_EventDef_Proxy_Broker::_TAO_EventDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_EventDef_Proxy_Broker::~_TAO_EventDef_Proxy_Broker (void)
+_TAO_EventDef_Proxy_Broker::~_TAO_EventDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_EventDef_Proxy_Broker * (*IR__TAO_EventDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_EventDef_Proxy_Broker * (*_TAO_EventDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_EventDef_Remote_Proxy_Broker *
-IR::_TAO_EventDef_Remote_Proxy_Broker::the_TAO_EventDef_Remote_Proxy_Broker (void)
+_TAO_EventDef_Remote_Proxy_Broker *
+_TAO_EventDef_Remote_Proxy_Broker::the_TAO_EventDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_EventDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_EventDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_EventDef_Remote_Proxy_Broker::_TAO_EventDef_Remote_Proxy_Broker (void)
+_TAO_EventDef_Remote_Proxy_Broker::_TAO_EventDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_EventDef_Remote_Proxy_Broker::~_TAO_EventDef_Remote_Proxy_Broker (void)
+_TAO_EventDef_Remote_Proxy_Broker::~_TAO_EventDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_EventDef_Proxy_Impl&
-IR::_TAO_EventDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::EventDef *object,
+_TAO_EventDef_Proxy_Impl&
+_TAO_EventDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_EventDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -46260,109 +45571,109 @@
 
 
 // default constructor
-IR::EventDef::EventDef (int collocated)
+IR_EventDef::IR_EventDef (int collocated)
 {
   this->IR_EventDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::EventDef::~EventDef (void)
+IR_EventDef::~IR_EventDef (void)
 {}
 
 void
-IR::EventDef::IR_EventDef_setup_collocation (int collocated)
+IR_EventDef::IR_EventDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_EventDef_Proxy_Broker_ =
-      ::IR__TAO_EventDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_EventDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_EventDef_Proxy_Broker_ =
-      ::IR::_TAO_EventDef_Remote_Proxy_Broker::the_TAO_EventDef_Remote_Proxy_Broker ();
+      _TAO_EventDef_Remote_Proxy_Broker::the_TAO_EventDef_Remote_Proxy_Broker ();
   
   this->IR_Contained_setup_collocation (collocated);
 }
 
-void IR::EventDef::_tao_any_destructor (void *x)
+void IR_EventDef::_tao_any_destructor (void *x)
 {
-  EventDef *tmp = ACE_static_cast (EventDef*,x);
+  IR_EventDef *tmp = ACE_static_cast (IR_EventDef*,x);
   CORBA::release (tmp);
 }
 
-IR::EventDef_ptr IR::EventDef::_narrow (
+IR_EventDef_ptr IR_EventDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return EventDef::_nil ();
+    return IR_EventDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/EventDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (EventDef::_nil ());
+      ACE_CHECK_RETURN (IR_EventDef::_nil ());
       if (is_a == 0)
-        return EventDef::_nil ();
+        return IR_EventDef::_nil ();
     }
-  return EventDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_EventDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::EventDef_ptr IR::EventDef::_unchecked_narrow (
+IR_EventDef_ptr IR_EventDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return EventDef::_nil ();
+    return IR_EventDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      EventDef_ptr default_proxy = EventDef::_nil ();
+      IR_EventDef_ptr default_proxy = IR_EventDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_EventDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_EventDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::EventDef (
+          ::IR_EventDef (
             stub,
             1,
             obj->_servant ()),
             
-          EventDef::_nil ());
+          IR_EventDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::EventDef (stub, 0, obj->_servant ()), EventDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_EventDef (stub, 0, obj->_servant ()), IR_EventDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            EventDef_ptr,
+            IR_EventDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &EventDef::_narrow
+                      &IR_EventDef::_narrow
                     )
                 )
           );
 }
 
-IR::EventDef_ptr
-IR::EventDef::_duplicate (EventDef_ptr obj)
+IR_EventDef_ptr
+IR_EventDef::_duplicate (IR_EventDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::EventDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_EventDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/EventDef:1.0")) ||
@@ -46374,34 +45685,34 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::EventDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_EventDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, EventDef)::_narrow))
+      &IR_EventDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -46414,12 +45725,12 @@
   return retv;
 }
 
-const char* IR::EventDef::_interface_repository_id (void) const
+const char* IR_EventDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/EventDef:1.0";
 }
 
-CORBA::Boolean IR::EventDef::is_a (
+CORBA::Boolean IR_EventDef::is_a (
     const char * event_id,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -46438,7 +45749,7 @@
     );
 }
 
-IR::ValueDef_ptr IR::EventDef::event (
+IR_ValueDef_ptr IR_EventDef::event (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -46455,9 +45766,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::EventDef::TAO_ClientRequestInfo_IR_EventDef_is_a::TAO_ClientRequestInfo_IR_EventDef_is_a (
+IR_EventDef::TAO_ClientRequestInfo_IR_EventDef_is_a::TAO_ClientRequestInfo_IR_EventDef_is_a (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * event_id,
@@ -46468,7 +45778,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::EventDef::TAO_ClientRequestInfo_IR_EventDef_is_a::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_EventDef::TAO_ClientRequestInfo_IR_EventDef_is_a::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -46487,7 +45797,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::EventDef::TAO_ClientRequestInfo_IR_EventDef_is_a::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_EventDef::TAO_ClientRequestInfo_IR_EventDef_is_a::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -46500,7 +45810,7 @@
 
 
 CORBA::Any * 
-IR::EventDef::TAO_ClientRequestInfo_IR_EventDef_is_a::result (CORBA::Environment &ACE_TRY_ENV)
+IR_EventDef::TAO_ClientRequestInfo_IR_EventDef_is_a::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -46516,13 +45826,13 @@
 }
 
 void 
-IR::EventDef::TAO_ClientRequestInfo_IR_EventDef_is_a::result (CORBA::Boolean result)
+IR_EventDef::TAO_ClientRequestInfo_IR_EventDef_is_a::result (CORBA::Boolean result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::EventDef::TAO_ClientRequestInfo_IR_EventDef_event_get::TAO_ClientRequestInfo_IR_EventDef_event_get (
+IR_EventDef::TAO_ClientRequestInfo_IR_EventDef_event_get::TAO_ClientRequestInfo_IR_EventDef_event_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -46531,7 +45841,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::EventDef::TAO_ClientRequestInfo_IR_EventDef_event_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_EventDef::TAO_ClientRequestInfo_IR_EventDef_event_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -46543,7 +45853,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::EventDef::TAO_ClientRequestInfo_IR_EventDef_event_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_EventDef::TAO_ClientRequestInfo_IR_EventDef_event_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -46556,7 +45866,7 @@
 
 
 CORBA::Any * 
-IR::EventDef::TAO_ClientRequestInfo_IR_EventDef_event_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_EventDef::TAO_ClientRequestInfo_IR_EventDef_event_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -46572,24 +45882,26 @@
 }
 
 void 
-IR::EventDef::TAO_ClientRequestInfo_IR_EventDef_event_get::result (IR::ValueDef_ptr result)
+IR_EventDef::TAO_ClientRequestInfo_IR_EventDef_event_get::result (IR_ValueDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_EventDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   28, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f45), ACE_NTOHL (0x76656e74), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/EventDef:1.0
-  9, ACE_NTOHL (0x4576656e), ACE_NTOHL (0x74446566), ACE_NTOHL (0x0),  // name = EventDef
+  9, ACE_NTOHL (0x4576656e), ACE_NTOHL (0x74446566), ACE_NTOHL (0x0),  // name = IR_EventDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_EventDef (CORBA::tk_objref, sizeof (_oc_IR_EventDef), (char *) &_oc_IR_EventDef, 0, sizeof (IR::EventDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_EventDef (CORBA::tk_objref, sizeof (_oc_IR_EventDef), (char *) &_oc_IR_EventDef, 0, sizeof (IR_EventDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_EventDef, &_tc_TAO_tc_IR_EventDef)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_EventDescription[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -46637,17 +45949,18 @@
   52, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     28, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f56), ACE_NTOHL (0x616c7565), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/ValueDef:1.0
-    9, ACE_NTOHL (0x56616c75), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = ValueDef
+    9, ACE_NTOHL (0x56616c75), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = IR_ValueDef
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_EventDescription (CORBA::tk_struct, sizeof (_oc_IR_EventDescription), (char *) &_oc_IR_EventDescription, 0, sizeof (IR::EventDescription));
+static CORBA::TypeCode _tc_TAO_tc_IR_EventDescription (CORBA::tk_struct, sizeof (_oc_IR_EventDescription), (char *) &_oc_IR_EventDescription, 0, sizeof (IR_EventDescription));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_EventDescription, &_tc_TAO_tc_IR_EventDescription)
 TAO_NAMESPACE_END
-void IR::EventDescription::_tao_any_destructor (void *x)
+
+void IR_EventDescription::_tao_any_destructor (void *x)
 {
-  EventDescription *tmp = ACE_static_cast (EventDescription*,x);
+  IR_EventDescription *tmp = ACE_static_cast (IR_EventDescription*,x);
   delete tmp;
 }
 
@@ -46656,10 +45969,10 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_EmitsDef_Proxy_Impl::_TAO_EmitsDef_Proxy_Impl (void)
+_TAO_EmitsDef_Proxy_Impl::_TAO_EmitsDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_EmitsDef_Remote_Proxy_Impl::_TAO_EmitsDef_Remote_Proxy_Impl (void)
+_TAO_EmitsDef_Remote_Proxy_Impl::_TAO_EmitsDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
@@ -46674,37 +45987,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_EmitsDef_Proxy_Broker::_TAO_EmitsDef_Proxy_Broker (void)
+_TAO_EmitsDef_Proxy_Broker::_TAO_EmitsDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_EmitsDef_Proxy_Broker::~_TAO_EmitsDef_Proxy_Broker (void)
+_TAO_EmitsDef_Proxy_Broker::~_TAO_EmitsDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_EmitsDef_Proxy_Broker * (*IR__TAO_EmitsDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_EmitsDef_Proxy_Broker * (*_TAO_EmitsDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_EmitsDef_Remote_Proxy_Broker *
-IR::_TAO_EmitsDef_Remote_Proxy_Broker::the_TAO_EmitsDef_Remote_Proxy_Broker (void)
+_TAO_EmitsDef_Remote_Proxy_Broker *
+_TAO_EmitsDef_Remote_Proxy_Broker::the_TAO_EmitsDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_EmitsDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_EmitsDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_EmitsDef_Remote_Proxy_Broker::_TAO_EmitsDef_Remote_Proxy_Broker (void)
+_TAO_EmitsDef_Remote_Proxy_Broker::_TAO_EmitsDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_EmitsDef_Remote_Proxy_Broker::~_TAO_EmitsDef_Remote_Proxy_Broker (void)
+_TAO_EmitsDef_Remote_Proxy_Broker::~_TAO_EmitsDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_EmitsDef_Proxy_Impl&
-IR::_TAO_EmitsDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::EmitsDef *object,
+_TAO_EmitsDef_Proxy_Impl&
+_TAO_EmitsDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_EmitsDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -46720,109 +46033,109 @@
 
 
 // default constructor
-IR::EmitsDef::EmitsDef (int collocated)
+IR_EmitsDef::IR_EmitsDef (int collocated)
 {
   this->IR_EmitsDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::EmitsDef::~EmitsDef (void)
+IR_EmitsDef::~IR_EmitsDef (void)
 {}
 
 void
-IR::EmitsDef::IR_EmitsDef_setup_collocation (int collocated)
+IR_EmitsDef::IR_EmitsDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_EmitsDef_Proxy_Broker_ =
-      ::IR__TAO_EmitsDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_EmitsDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_EmitsDef_Proxy_Broker_ =
-      ::IR::_TAO_EmitsDef_Remote_Proxy_Broker::the_TAO_EmitsDef_Remote_Proxy_Broker ();
+      _TAO_EmitsDef_Remote_Proxy_Broker::the_TAO_EmitsDef_Remote_Proxy_Broker ();
   
   this->IR_EventDef_setup_collocation (collocated);
 }
 
-void IR::EmitsDef::_tao_any_destructor (void *x)
+void IR_EmitsDef::_tao_any_destructor (void *x)
 {
-  EmitsDef *tmp = ACE_static_cast (EmitsDef*,x);
+  IR_EmitsDef *tmp = ACE_static_cast (IR_EmitsDef*,x);
   CORBA::release (tmp);
 }
 
-IR::EmitsDef_ptr IR::EmitsDef::_narrow (
+IR_EmitsDef_ptr IR_EmitsDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return EmitsDef::_nil ();
+    return IR_EmitsDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/EmitsDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (EmitsDef::_nil ());
+      ACE_CHECK_RETURN (IR_EmitsDef::_nil ());
       if (is_a == 0)
-        return EmitsDef::_nil ();
+        return IR_EmitsDef::_nil ();
     }
-  return EmitsDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_EmitsDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::EmitsDef_ptr IR::EmitsDef::_unchecked_narrow (
+IR_EmitsDef_ptr IR_EmitsDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return EmitsDef::_nil ();
+    return IR_EmitsDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      EmitsDef_ptr default_proxy = EmitsDef::_nil ();
+      IR_EmitsDef_ptr default_proxy = IR_EmitsDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_EmitsDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_EmitsDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::EmitsDef (
+          ::IR_EmitsDef (
             stub,
             1,
             obj->_servant ()),
             
-          EmitsDef::_nil ());
+          IR_EmitsDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::EmitsDef (stub, 0, obj->_servant ()), EmitsDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_EmitsDef (stub, 0, obj->_servant ()), IR_EmitsDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            EmitsDef_ptr,
+            IR_EmitsDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &EmitsDef::_narrow
+                      &IR_EmitsDef::_narrow
                     )
                 )
           );
 }
 
-IR::EmitsDef_ptr
-IR::EmitsDef::_duplicate (EmitsDef_ptr obj)
+IR_EmitsDef_ptr
+IR_EmitsDef::_duplicate (IR_EmitsDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::EmitsDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_EmitsDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/EmitsDef:1.0")) ||
@@ -46835,46 +46148,46 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::EmitsDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_EmitsDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, EmitsDef)::_narrow))
+      &IR_EmitsDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, EventDef)::_narrow))
+      &IR_EventDef::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::EventDef_ptr,
+            IR_EventDef_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -46887,21 +46200,18 @@
   return retv;
 }
 
-const char* IR::EmitsDef::_interface_repository_id (void) const
+const char* IR_EmitsDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/EmitsDef:1.0";
 }
 
-
-#if (TAO_HAS_INTERCEPTORS == 1)
-#endif /* TAO_HAS_INTERCEPTORS */
 static const CORBA::Long _oc_IR_EmitsDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   28, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f45), ACE_NTOHL (0x6d697473), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/EmitsDef:1.0
-  9, ACE_NTOHL (0x456d6974), ACE_NTOHL (0x73446566), ACE_NTOHL (0x0),  // name = EmitsDef
+  9, ACE_NTOHL (0x456d6974), ACE_NTOHL (0x73446566), ACE_NTOHL (0x0),  // name = IR_EmitsDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_EmitsDef (CORBA::tk_objref, sizeof (_oc_IR_EmitsDef), (char *) &_oc_IR_EmitsDef, 0, sizeof (IR::EmitsDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_EmitsDef (CORBA::tk_objref, sizeof (_oc_IR_EmitsDef), (char *) &_oc_IR_EmitsDef, 0, sizeof (IR_EmitsDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_EmitsDef, &_tc_TAO_tc_IR_EmitsDef)
@@ -46911,10 +46221,10 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_PublishesDef_Proxy_Impl::_TAO_PublishesDef_Proxy_Impl (void)
+_TAO_PublishesDef_Proxy_Impl::_TAO_PublishesDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_PublishesDef_Remote_Proxy_Impl::_TAO_PublishesDef_Remote_Proxy_Impl (void)
+_TAO_PublishesDef_Remote_Proxy_Impl::_TAO_PublishesDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
@@ -46929,37 +46239,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_PublishesDef_Proxy_Broker::_TAO_PublishesDef_Proxy_Broker (void)
+_TAO_PublishesDef_Proxy_Broker::_TAO_PublishesDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_PublishesDef_Proxy_Broker::~_TAO_PublishesDef_Proxy_Broker (void)
+_TAO_PublishesDef_Proxy_Broker::~_TAO_PublishesDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_PublishesDef_Proxy_Broker * (*IR__TAO_PublishesDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_PublishesDef_Proxy_Broker * (*_TAO_PublishesDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_PublishesDef_Remote_Proxy_Broker *
-IR::_TAO_PublishesDef_Remote_Proxy_Broker::the_TAO_PublishesDef_Remote_Proxy_Broker (void)
+_TAO_PublishesDef_Remote_Proxy_Broker *
+_TAO_PublishesDef_Remote_Proxy_Broker::the_TAO_PublishesDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_PublishesDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_PublishesDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_PublishesDef_Remote_Proxy_Broker::_TAO_PublishesDef_Remote_Proxy_Broker (void)
+_TAO_PublishesDef_Remote_Proxy_Broker::_TAO_PublishesDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_PublishesDef_Remote_Proxy_Broker::~_TAO_PublishesDef_Remote_Proxy_Broker (void)
+_TAO_PublishesDef_Remote_Proxy_Broker::~_TAO_PublishesDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_PublishesDef_Proxy_Impl&
-IR::_TAO_PublishesDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::PublishesDef *object,
+_TAO_PublishesDef_Proxy_Impl&
+_TAO_PublishesDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_PublishesDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -46975,109 +46285,109 @@
 
 
 // default constructor
-IR::PublishesDef::PublishesDef (int collocated)
+IR_PublishesDef::IR_PublishesDef (int collocated)
 {
   this->IR_PublishesDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::PublishesDef::~PublishesDef (void)
+IR_PublishesDef::~IR_PublishesDef (void)
 {}
 
 void
-IR::PublishesDef::IR_PublishesDef_setup_collocation (int collocated)
+IR_PublishesDef::IR_PublishesDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_PublishesDef_Proxy_Broker_ =
-      ::IR__TAO_PublishesDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_PublishesDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_PublishesDef_Proxy_Broker_ =
-      ::IR::_TAO_PublishesDef_Remote_Proxy_Broker::the_TAO_PublishesDef_Remote_Proxy_Broker ();
+      _TAO_PublishesDef_Remote_Proxy_Broker::the_TAO_PublishesDef_Remote_Proxy_Broker ();
   
   this->IR_EventDef_setup_collocation (collocated);
 }
 
-void IR::PublishesDef::_tao_any_destructor (void *x)
+void IR_PublishesDef::_tao_any_destructor (void *x)
 {
-  PublishesDef *tmp = ACE_static_cast (PublishesDef*,x);
+  IR_PublishesDef *tmp = ACE_static_cast (IR_PublishesDef*,x);
   CORBA::release (tmp);
 }
 
-IR::PublishesDef_ptr IR::PublishesDef::_narrow (
+IR_PublishesDef_ptr IR_PublishesDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return PublishesDef::_nil ();
+    return IR_PublishesDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/PublishesDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (PublishesDef::_nil ());
+      ACE_CHECK_RETURN (IR_PublishesDef::_nil ());
       if (is_a == 0)
-        return PublishesDef::_nil ();
+        return IR_PublishesDef::_nil ();
     }
-  return PublishesDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_PublishesDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::PublishesDef_ptr IR::PublishesDef::_unchecked_narrow (
+IR_PublishesDef_ptr IR_PublishesDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return PublishesDef::_nil ();
+    return IR_PublishesDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      PublishesDef_ptr default_proxy = PublishesDef::_nil ();
+      IR_PublishesDef_ptr default_proxy = IR_PublishesDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_PublishesDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_PublishesDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::PublishesDef (
+          ::IR_PublishesDef (
             stub,
             1,
             obj->_servant ()),
             
-          PublishesDef::_nil ());
+          IR_PublishesDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::PublishesDef (stub, 0, obj->_servant ()), PublishesDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_PublishesDef (stub, 0, obj->_servant ()), IR_PublishesDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            PublishesDef_ptr,
+            IR_PublishesDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &PublishesDef::_narrow
+                      &IR_PublishesDef::_narrow
                     )
                 )
           );
 }
 
-IR::PublishesDef_ptr
-IR::PublishesDef::_duplicate (PublishesDef_ptr obj)
+IR_PublishesDef_ptr
+IR_PublishesDef::_duplicate (IR_PublishesDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::PublishesDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_PublishesDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/PublishesDef:1.0")) ||
@@ -47090,46 +46400,46 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::PublishesDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_PublishesDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, PublishesDef)::_narrow))
+      &IR_PublishesDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, EventDef)::_narrow))
+      &IR_EventDef::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::EventDef_ptr,
+            IR_EventDef_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -47142,21 +46452,18 @@
   return retv;
 }
 
-const char* IR::PublishesDef::_interface_repository_id (void) const
+const char* IR_PublishesDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/PublishesDef:1.0";
 }
 
-
-#if (TAO_HAS_INTERCEPTORS == 1)
-#endif /* TAO_HAS_INTERCEPTORS */
 static const CORBA::Long _oc_IR_PublishesDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f50), ACE_NTOHL (0x75626c69), ACE_NTOHL (0x73686573), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/PublishesDef:1.0
-  13, ACE_NTOHL (0x5075626c), ACE_NTOHL (0x69736865), ACE_NTOHL (0x73446566), ACE_NTOHL (0x0),  // name = PublishesDef
+  13, ACE_NTOHL (0x5075626c), ACE_NTOHL (0x69736865), ACE_NTOHL (0x73446566), ACE_NTOHL (0x0),  // name = IR_PublishesDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_PublishesDef (CORBA::tk_objref, sizeof (_oc_IR_PublishesDef), (char *) &_oc_IR_PublishesDef, 0, sizeof (IR::PublishesDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_PublishesDef (CORBA::tk_objref, sizeof (_oc_IR_PublishesDef), (char *) &_oc_IR_PublishesDef, 0, sizeof (IR_PublishesDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_PublishesDef, &_tc_TAO_tc_IR_PublishesDef)
@@ -47166,10 +46473,10 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_ConsumesDef_Proxy_Impl::_TAO_ConsumesDef_Proxy_Impl (void)
+_TAO_ConsumesDef_Proxy_Impl::_TAO_ConsumesDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_ConsumesDef_Remote_Proxy_Impl::_TAO_ConsumesDef_Remote_Proxy_Impl (void)
+_TAO_ConsumesDef_Remote_Proxy_Impl::_TAO_ConsumesDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
@@ -47184,37 +46491,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_ConsumesDef_Proxy_Broker::_TAO_ConsumesDef_Proxy_Broker (void)
+_TAO_ConsumesDef_Proxy_Broker::_TAO_ConsumesDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ConsumesDef_Proxy_Broker::~_TAO_ConsumesDef_Proxy_Broker (void)
+_TAO_ConsumesDef_Proxy_Broker::~_TAO_ConsumesDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ConsumesDef_Proxy_Broker * (*IR__TAO_ConsumesDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_ConsumesDef_Proxy_Broker * (*_TAO_ConsumesDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_ConsumesDef_Remote_Proxy_Broker *
-IR::_TAO_ConsumesDef_Remote_Proxy_Broker::the_TAO_ConsumesDef_Remote_Proxy_Broker (void)
+_TAO_ConsumesDef_Remote_Proxy_Broker *
+_TAO_ConsumesDef_Remote_Proxy_Broker::the_TAO_ConsumesDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_ConsumesDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_ConsumesDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_ConsumesDef_Remote_Proxy_Broker::_TAO_ConsumesDef_Remote_Proxy_Broker (void)
+_TAO_ConsumesDef_Remote_Proxy_Broker::_TAO_ConsumesDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ConsumesDef_Remote_Proxy_Broker::~_TAO_ConsumesDef_Remote_Proxy_Broker (void)
+_TAO_ConsumesDef_Remote_Proxy_Broker::~_TAO_ConsumesDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ConsumesDef_Proxy_Impl&
-IR::_TAO_ConsumesDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::ConsumesDef *object,
+_TAO_ConsumesDef_Proxy_Impl&
+_TAO_ConsumesDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_ConsumesDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -47230,109 +46537,109 @@
 
 
 // default constructor
-IR::ConsumesDef::ConsumesDef (int collocated)
+IR_ConsumesDef::IR_ConsumesDef (int collocated)
 {
   this->IR_ConsumesDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::ConsumesDef::~ConsumesDef (void)
+IR_ConsumesDef::~IR_ConsumesDef (void)
 {}
 
 void
-IR::ConsumesDef::IR_ConsumesDef_setup_collocation (int collocated)
+IR_ConsumesDef::IR_ConsumesDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_ConsumesDef_Proxy_Broker_ =
-      ::IR__TAO_ConsumesDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_ConsumesDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_ConsumesDef_Proxy_Broker_ =
-      ::IR::_TAO_ConsumesDef_Remote_Proxy_Broker::the_TAO_ConsumesDef_Remote_Proxy_Broker ();
+      _TAO_ConsumesDef_Remote_Proxy_Broker::the_TAO_ConsumesDef_Remote_Proxy_Broker ();
   
   this->IR_EventDef_setup_collocation (collocated);
 }
 
-void IR::ConsumesDef::_tao_any_destructor (void *x)
+void IR_ConsumesDef::_tao_any_destructor (void *x)
 {
-  ConsumesDef *tmp = ACE_static_cast (ConsumesDef*,x);
+  IR_ConsumesDef *tmp = ACE_static_cast (IR_ConsumesDef*,x);
   CORBA::release (tmp);
 }
 
-IR::ConsumesDef_ptr IR::ConsumesDef::_narrow (
+IR_ConsumesDef_ptr IR_ConsumesDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return ConsumesDef::_nil ();
+    return IR_ConsumesDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/ConsumesDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (ConsumesDef::_nil ());
+      ACE_CHECK_RETURN (IR_ConsumesDef::_nil ());
       if (is_a == 0)
-        return ConsumesDef::_nil ();
+        return IR_ConsumesDef::_nil ();
     }
-  return ConsumesDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_ConsumesDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::ConsumesDef_ptr IR::ConsumesDef::_unchecked_narrow (
+IR_ConsumesDef_ptr IR_ConsumesDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return ConsumesDef::_nil ();
+    return IR_ConsumesDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      ConsumesDef_ptr default_proxy = ConsumesDef::_nil ();
+      IR_ConsumesDef_ptr default_proxy = IR_ConsumesDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_ConsumesDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_ConsumesDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::ConsumesDef (
+          ::IR_ConsumesDef (
             stub,
             1,
             obj->_servant ()),
             
-          ConsumesDef::_nil ());
+          IR_ConsumesDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::ConsumesDef (stub, 0, obj->_servant ()), ConsumesDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_ConsumesDef (stub, 0, obj->_servant ()), IR_ConsumesDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            ConsumesDef_ptr,
+            IR_ConsumesDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &ConsumesDef::_narrow
+                      &IR_ConsumesDef::_narrow
                     )
                 )
           );
 }
 
-IR::ConsumesDef_ptr
-IR::ConsumesDef::_duplicate (ConsumesDef_ptr obj)
+IR_ConsumesDef_ptr
+IR_ConsumesDef::_duplicate (IR_ConsumesDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::ConsumesDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_ConsumesDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/ConsumesDef:1.0")) ||
@@ -47345,46 +46652,46 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::ConsumesDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_ConsumesDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, ConsumesDef)::_narrow))
+      &IR_ConsumesDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, EventDef)::_narrow))
+      &IR_EventDef::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::EventDef_ptr,
+            IR_EventDef_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -47397,21 +46704,18 @@
   return retv;
 }
 
-const char* IR::ConsumesDef::_interface_repository_id (void) const
+const char* IR_ConsumesDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/ConsumesDef:1.0";
 }
 
-
-#if (TAO_HAS_INTERCEPTORS == 1)
-#endif /* TAO_HAS_INTERCEPTORS */
 static const CORBA::Long _oc_IR_ConsumesDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   31, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f43), ACE_NTOHL (0x6f6e7375), ACE_NTOHL (0x6d657344), ACE_NTOHL (0x65663a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/ConsumesDef:1.0
-  12, ACE_NTOHL (0x436f6e73), ACE_NTOHL (0x756d6573), ACE_NTOHL (0x44656600),  // name = ConsumesDef
+  12, ACE_NTOHL (0x436f6e73), ACE_NTOHL (0x756d6573), ACE_NTOHL (0x44656600),  // name = IR_ConsumesDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ConsumesDef (CORBA::tk_objref, sizeof (_oc_IR_ConsumesDef), (char *) &_oc_IR_ConsumesDef, 0, sizeof (IR::ConsumesDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_ConsumesDef (CORBA::tk_objref, sizeof (_oc_IR_ConsumesDef), (char *) &_oc_IR_ConsumesDef, 0, sizeof (IR_ConsumesDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ConsumesDef, &_tc_TAO_tc_IR_ConsumesDef)
@@ -47421,15 +46725,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_ComponentDef_Proxy_Impl::_TAO_ComponentDef_Proxy_Impl (void)
+_TAO_ComponentDef_Proxy_Impl::_TAO_ComponentDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_ComponentDef_Remote_Proxy_Impl::_TAO_ComponentDef_Remote_Proxy_Impl (void)
+_TAO_ComponentDef_Remote_Proxy_Impl::_TAO_ComponentDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-IR::InterfaceDefSeq * IR::_TAO_ComponentDef_Remote_Proxy_Impl::supported_interfaces (
+IR_InterfaceDefSeq * _TAO_ComponentDef_Remote_Proxy_Impl::supported_interfaces (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -47438,7 +46742,7 @@
   ))
 {
   
-  IR::InterfaceDefSeq *_tao_retval = 0;
+  IR_InterfaceDefSeq *_tao_retval = 0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -47446,8 +46750,8 @@
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
   
-  ACE_NEW_RETURN (_tao_retval, IR::InterfaceDefSeq, _tao_retval);
-  IR::InterfaceDefSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_InterfaceDefSeq, _tao_retval);
+  IR_InterfaceDefSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_supported_interfaces",
@@ -47468,7 +46772,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_get ri (
+      IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -47524,7 +46828,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::InterfaceDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_InterfaceDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -47590,19 +46894,15 @@
   return _tao_safe_retval._retn ();
 }
 
-void IR::_TAO_ComponentDef_Remote_Proxy_Impl::supported_interfaces (
+void _TAO_ComponentDef_Remote_Proxy_Impl::supported_interfaces (
     CORBA_Object *_collocated_tao_target_,
-    const IR::InterfaceDefSeq & supported_interfaces,
+    const IR_InterfaceDefSeq & supported_interfaces,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
     CORBA::SystemException
   ))
 {
-  
-
-  
-  
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
   if (istub == 0)
     ACE_THROW (CORBA::INTERNAL ());
@@ -47628,7 +46928,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_set ri (
+      IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_set ri (
         &_tao_call,
         _collocated_tao_target_,
         supported_interfaces,
@@ -47742,7 +47042,7 @@
   
 }
 
-IR::ComponentDef_ptr IR::_TAO_ComponentDef_Remote_Proxy_Impl::base_component (
+IR_ComponentDef_ptr _TAO_ComponentDef_Remote_Proxy_Impl::base_component (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -47751,8 +47051,8 @@
   ))
 {
   
-  IR::ComponentDef_ptr _tao_retval = IR::ComponentDef::_nil ();
-  IR::ComponentDef_var _tao_safe_retval (_tao_retval);
+  IR_ComponentDef_ptr _tao_retval = IR_ComponentDef::_nil ();
+  IR_ComponentDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -47780,7 +47080,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_base_component_get ri (
+      IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_base_component_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -47836,7 +47136,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ComponentDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ComponentDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -47902,7 +47202,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::ProvidesDefSeq * IR::_TAO_ComponentDef_Remote_Proxy_Impl::provides_interfaces (
+IR_ProvidesDefSeq * _TAO_ComponentDef_Remote_Proxy_Impl::provides_interfaces (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -47911,7 +47211,7 @@
   ))
 {
   
-  IR::ProvidesDefSeq *_tao_retval = 0;
+  IR_ProvidesDefSeq *_tao_retval = 0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -47919,8 +47219,8 @@
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
   
-  ACE_NEW_RETURN (_tao_retval, IR::ProvidesDefSeq, _tao_retval);
-  IR::ProvidesDefSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_ProvidesDefSeq, _tao_retval);
+  IR_ProvidesDefSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_provides_interfaces",
@@ -47941,7 +47241,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_provides_interfaces_get ri (
+      IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_provides_interfaces_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -47997,7 +47297,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ProvidesDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ProvidesDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -48063,7 +47363,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::UsesDefSeq * IR::_TAO_ComponentDef_Remote_Proxy_Impl::uses_interfaces (
+IR_UsesDefSeq * _TAO_ComponentDef_Remote_Proxy_Impl::uses_interfaces (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -48072,7 +47372,7 @@
   ))
 {
   
-  IR::UsesDefSeq *_tao_retval = 0;
+  IR_UsesDefSeq *_tao_retval = 0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -48080,8 +47380,8 @@
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
   
-  ACE_NEW_RETURN (_tao_retval, IR::UsesDefSeq, _tao_retval);
-  IR::UsesDefSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_UsesDefSeq, _tao_retval);
+  IR_UsesDefSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_uses_interfaces",
@@ -48102,7 +47402,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_uses_interfaces_get ri (
+      IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_uses_interfaces_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -48158,7 +47458,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::UsesDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_UsesDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -48224,7 +47524,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::EmitsDefSeq * IR::_TAO_ComponentDef_Remote_Proxy_Impl::emits_events (
+IR_EmitsDefSeq * _TAO_ComponentDef_Remote_Proxy_Impl::emits_events (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -48233,7 +47533,7 @@
   ))
 {
   
-  IR::EmitsDefSeq *_tao_retval = 0;
+  IR_EmitsDefSeq *_tao_retval = 0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -48241,8 +47541,8 @@
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
   
-  ACE_NEW_RETURN (_tao_retval, IR::EmitsDefSeq, _tao_retval);
-  IR::EmitsDefSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_EmitsDefSeq, _tao_retval);
+  IR_EmitsDefSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_emits_events",
@@ -48263,7 +47563,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_emits_events_get ri (
+      IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_emits_events_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -48319,7 +47619,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::EmitsDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_EmitsDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -48385,7 +47685,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::PublishesDefSeq * IR::_TAO_ComponentDef_Remote_Proxy_Impl::publishes_events (
+IR_PublishesDefSeq * _TAO_ComponentDef_Remote_Proxy_Impl::publishes_events (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -48394,7 +47694,7 @@
   ))
 {
   
-  IR::PublishesDefSeq *_tao_retval = 0;
+  IR_PublishesDefSeq *_tao_retval = 0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -48402,8 +47702,8 @@
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
   
-  ACE_NEW_RETURN (_tao_retval, IR::PublishesDefSeq, _tao_retval);
-  IR::PublishesDefSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_PublishesDefSeq, _tao_retval);
+  IR_PublishesDefSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_publishes_events",
@@ -48424,7 +47724,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_publishes_events_get ri (
+      IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_publishes_events_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -48480,7 +47780,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::PublishesDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_PublishesDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -48546,7 +47846,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::ConsumesDefSeq * IR::_TAO_ComponentDef_Remote_Proxy_Impl::consumes_events (
+IR_ConsumesDefSeq * _TAO_ComponentDef_Remote_Proxy_Impl::consumes_events (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -48555,7 +47855,7 @@
   ))
 {
   
-  IR::ConsumesDefSeq *_tao_retval = 0;
+  IR_ConsumesDefSeq *_tao_retval = 0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -48563,8 +47863,8 @@
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
   
-  ACE_NEW_RETURN (_tao_retval, IR::ConsumesDefSeq, _tao_retval);
-  IR::ConsumesDefSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_ConsumesDefSeq, _tao_retval);
+  IR_ConsumesDefSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_consumes_events",
@@ -48585,7 +47885,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_consumes_events_get ri (
+      IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_consumes_events_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -48641,7 +47941,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ConsumesDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ConsumesDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -48707,7 +48007,7 @@
   return _tao_safe_retval._retn ();
 }
 
-CORBA::Boolean IR::_TAO_ComponentDef_Remote_Proxy_Impl::is_basic (
+CORBA::Boolean _TAO_ComponentDef_Remote_Proxy_Impl::is_basic (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -48744,7 +48044,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_is_basic_get ri (
+      IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_is_basic_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -48865,12 +48165,12 @@
   return _tao_retval;
 }
 
-IR::ProvidesDef_ptr IR::_TAO_ComponentDef_Remote_Proxy_Impl::create_provides (
+IR_ProvidesDef_ptr _TAO_ComponentDef_Remote_Proxy_Impl::create_provides (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    IR::InterfaceDef_ptr interface_type,
+    IR_InterfaceDef_ptr interface_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -48878,8 +48178,8 @@
   ))
 {
   
-  IR::ProvidesDef_ptr _tao_retval = IR::ProvidesDef::_nil ();
-  IR::ProvidesDef_var _tao_safe_retval (_tao_retval);
+  IR_ProvidesDef_ptr _tao_retval = IR_ProvidesDef::_nil ();
+  IR_ProvidesDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -48907,7 +48207,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_provides ri (
+      IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_provides ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -48980,7 +48280,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ProvidesDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ProvidesDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -49046,12 +48346,12 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::UsesDef_ptr IR::_TAO_ComponentDef_Remote_Proxy_Impl::create_uses (
+IR_UsesDef_ptr _TAO_ComponentDef_Remote_Proxy_Impl::create_uses (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    IR::InterfaceDef_ptr interface_type,
+    IR_InterfaceDef_ptr interface_type,
     CORBA::Boolean is_multiple,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -49060,8 +48360,8 @@
   ))
 {
   
-  IR::UsesDef_ptr _tao_retval = IR::UsesDef::_nil ();
-  IR::UsesDef_var _tao_safe_retval (_tao_retval);
+  IR_UsesDef_ptr _tao_retval = IR_UsesDef::_nil ();
+  IR_UsesDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -49089,7 +48389,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_uses ri (
+      IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_uses ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -49164,7 +48464,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::UsesDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_UsesDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -49230,12 +48530,12 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::EmitsDef_ptr IR::_TAO_ComponentDef_Remote_Proxy_Impl::create_emits (
+IR_EmitsDef_ptr _TAO_ComponentDef_Remote_Proxy_Impl::create_emits (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr value,
+    IR_ValueDef_ptr value,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -49243,8 +48543,8 @@
   ))
 {
   
-  IR::EmitsDef_ptr _tao_retval = IR::EmitsDef::_nil ();
-  IR::EmitsDef_var _tao_safe_retval (_tao_retval);
+  IR_EmitsDef_ptr _tao_retval = IR_EmitsDef::_nil ();
+  IR_EmitsDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -49272,7 +48572,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_emits ri (
+      IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_emits ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -49345,7 +48645,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::EmitsDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_EmitsDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -49411,12 +48711,12 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::PublishesDef_ptr IR::_TAO_ComponentDef_Remote_Proxy_Impl::create_publishes (
+IR_PublishesDef_ptr _TAO_ComponentDef_Remote_Proxy_Impl::create_publishes (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr value,
+    IR_ValueDef_ptr value,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -49424,8 +48724,8 @@
   ))
 {
   
-  IR::PublishesDef_ptr _tao_retval = IR::PublishesDef::_nil ();
-  IR::PublishesDef_var _tao_safe_retval (_tao_retval);
+  IR_PublishesDef_ptr _tao_retval = IR_PublishesDef::_nil ();
+  IR_PublishesDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -49453,7 +48753,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_publishes ri (
+      IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_publishes ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -49526,7 +48826,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::PublishesDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_PublishesDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -49592,12 +48892,12 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::ConsumesDef_ptr IR::_TAO_ComponentDef_Remote_Proxy_Impl::create_consumes (
+IR_ConsumesDef_ptr _TAO_ComponentDef_Remote_Proxy_Impl::create_consumes (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr value,
+    IR_ValueDef_ptr value,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -49605,8 +48905,8 @@
   ))
 {
   
-  IR::ConsumesDef_ptr _tao_retval = IR::ConsumesDef::_nil ();
-  IR::ConsumesDef_var _tao_safe_retval (_tao_retval);
+  IR_ConsumesDef_ptr _tao_retval = IR_ConsumesDef::_nil ();
+  IR_ConsumesDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -49634,7 +48934,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_consumes ri (
+      IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_consumes ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -49707,7 +49007,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ConsumesDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ConsumesDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -49783,37 +49083,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_ComponentDef_Proxy_Broker::_TAO_ComponentDef_Proxy_Broker (void)
+_TAO_ComponentDef_Proxy_Broker::_TAO_ComponentDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ComponentDef_Proxy_Broker::~_TAO_ComponentDef_Proxy_Broker (void)
+_TAO_ComponentDef_Proxy_Broker::~_TAO_ComponentDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ComponentDef_Proxy_Broker * (*IR__TAO_ComponentDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_ComponentDef_Proxy_Broker * (*_TAO_ComponentDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_ComponentDef_Remote_Proxy_Broker *
-IR::_TAO_ComponentDef_Remote_Proxy_Broker::the_TAO_ComponentDef_Remote_Proxy_Broker (void)
+_TAO_ComponentDef_Remote_Proxy_Broker *
+_TAO_ComponentDef_Remote_Proxy_Broker::the_TAO_ComponentDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_ComponentDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_ComponentDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_ComponentDef_Remote_Proxy_Broker::_TAO_ComponentDef_Remote_Proxy_Broker (void)
+_TAO_ComponentDef_Remote_Proxy_Broker::_TAO_ComponentDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ComponentDef_Remote_Proxy_Broker::~_TAO_ComponentDef_Remote_Proxy_Broker (void)
+_TAO_ComponentDef_Remote_Proxy_Broker::~_TAO_ComponentDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_ComponentDef_Proxy_Impl&
-IR::_TAO_ComponentDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::ComponentDef *object,
+_TAO_ComponentDef_Proxy_Impl&
+_TAO_ComponentDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_ComponentDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -49829,109 +49129,109 @@
 
 
 // default constructor
-IR::ComponentDef::ComponentDef (int collocated)
+IR_ComponentDef::IR_ComponentDef (int collocated)
 {
   this->IR_ComponentDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::ComponentDef::~ComponentDef (void)
+IR_ComponentDef::~IR_ComponentDef (void)
 {}
 
 void
-IR::ComponentDef::IR_ComponentDef_setup_collocation (int collocated)
+IR_ComponentDef::IR_ComponentDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_ComponentDef_Proxy_Broker_ =
-      ::IR__TAO_ComponentDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_ComponentDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_ComponentDef_Proxy_Broker_ =
-      ::IR::_TAO_ComponentDef_Remote_Proxy_Broker::the_TAO_ComponentDef_Remote_Proxy_Broker ();
+      _TAO_ComponentDef_Remote_Proxy_Broker::the_TAO_ComponentDef_Remote_Proxy_Broker ();
   
   this->IR_InterfaceDef_setup_collocation (collocated);
 }
 
-void IR::ComponentDef::_tao_any_destructor (void *x)
+void IR_ComponentDef::_tao_any_destructor (void *x)
 {
-  ComponentDef *tmp = ACE_static_cast (ComponentDef*,x);
+  IR_ComponentDef *tmp = ACE_static_cast (IR_ComponentDef*,x);
   CORBA::release (tmp);
 }
 
-IR::ComponentDef_ptr IR::ComponentDef::_narrow (
+IR_ComponentDef_ptr IR_ComponentDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return ComponentDef::_nil ();
+    return IR_ComponentDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/ComponentDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (ComponentDef::_nil ());
+      ACE_CHECK_RETURN (IR_ComponentDef::_nil ());
       if (is_a == 0)
-        return ComponentDef::_nil ();
+        return IR_ComponentDef::_nil ();
     }
-  return ComponentDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_ComponentDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::ComponentDef_ptr IR::ComponentDef::_unchecked_narrow (
+IR_ComponentDef_ptr IR_ComponentDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return ComponentDef::_nil ();
+    return IR_ComponentDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      ComponentDef_ptr default_proxy = ComponentDef::_nil ();
+      IR_ComponentDef_ptr default_proxy = IR_ComponentDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_ComponentDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_ComponentDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::ComponentDef (
+          ::IR_ComponentDef (
             stub,
             1,
             obj->_servant ()),
             
-          ComponentDef::_nil ());
+          IR_ComponentDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::ComponentDef (stub, 0, obj->_servant ()), ComponentDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_ComponentDef (stub, 0, obj->_servant ()), IR_ComponentDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            ComponentDef_ptr,
+            IR_ComponentDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &ComponentDef::_narrow
+                      &IR_ComponentDef::_narrow
                     )
                 )
           );
 }
 
-IR::ComponentDef_ptr
-IR::ComponentDef::_duplicate (ComponentDef_ptr obj)
+IR_ComponentDef_ptr
+IR_ComponentDef::_duplicate (IR_ComponentDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::ComponentDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_ComponentDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/ComponentDef:1.0")) ||
@@ -49946,70 +49246,70 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::ComponentDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_ComponentDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, ComponentDef)::_narrow))
+      &IR_ComponentDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, InterfaceDef)::_narrow))
+      &IR_InterfaceDef::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::InterfaceDef_ptr,
+            IR_InterfaceDef_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Container)::_narrow))
+      &IR_Container::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Container_ptr,
+            IR_Container_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, IDLType)::_narrow))
+      &IR_IDLType::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::IDLType_ptr,
+            IR_IDLType_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -50022,12 +49322,12 @@
   return retv;
 }
 
-const char* IR::ComponentDef::_interface_repository_id (void) const
+const char* IR_ComponentDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/ComponentDef:1.0";
 }
 
-IR::InterfaceDefSeq * IR::ComponentDef::supported_interfaces (
+IR_InterfaceDefSeq * IR_ComponentDef::supported_interfaces (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -50044,8 +49344,8 @@
     );
 }
 
-void IR::ComponentDef::supported_interfaces (
-    const IR::InterfaceDefSeq & supported_interfaces,
+void IR_ComponentDef::supported_interfaces (
+    const IR_InterfaceDefSeq & supported_interfaces,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -50063,7 +49363,7 @@
     );
 }
 
-IR::ComponentDef_ptr IR::ComponentDef::base_component (
+IR_ComponentDef_ptr IR_ComponentDef::base_component (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -50080,7 +49380,7 @@
     );
 }
 
-IR::ProvidesDefSeq * IR::ComponentDef::provides_interfaces (
+IR_ProvidesDefSeq * IR_ComponentDef::provides_interfaces (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -50097,7 +49397,7 @@
     );
 }
 
-IR::UsesDefSeq * IR::ComponentDef::uses_interfaces (
+IR_UsesDefSeq * IR_ComponentDef::uses_interfaces (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -50114,7 +49414,7 @@
     );
 }
 
-IR::EmitsDefSeq * IR::ComponentDef::emits_events (
+IR_EmitsDefSeq * IR_ComponentDef::emits_events (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -50131,7 +49431,7 @@
     );
 }
 
-IR::PublishesDefSeq * IR::ComponentDef::publishes_events (
+IR_PublishesDefSeq * IR_ComponentDef::publishes_events (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -50148,7 +49448,7 @@
     );
 }
 
-IR::ConsumesDefSeq * IR::ComponentDef::consumes_events (
+IR_ConsumesDefSeq * IR_ComponentDef::consumes_events (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -50165,7 +49465,7 @@
     );
 }
 
-CORBA::Boolean IR::ComponentDef::is_basic (
+CORBA::Boolean IR_ComponentDef::is_basic (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -50182,11 +49482,11 @@
     );
 }
 
-IR::ProvidesDef_ptr IR::ComponentDef::create_provides (
+IR_ProvidesDef_ptr IR_ComponentDef::create_provides (
     const char * id,
     const char * name,
     const char * version,
-    IR::InterfaceDef_ptr interface_type,
+    IR_InterfaceDef_ptr interface_type,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -50207,11 +49507,11 @@
     );
 }
 
-IR::UsesDef_ptr IR::ComponentDef::create_uses (
+IR_UsesDef_ptr IR_ComponentDef::create_uses (
     const char * id,
     const char * name,
     const char * version,
-    IR::InterfaceDef_ptr interface_type,
+    IR_InterfaceDef_ptr interface_type,
     CORBA::Boolean is_multiple,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -50234,11 +49534,11 @@
     );
 }
 
-IR::EmitsDef_ptr IR::ComponentDef::create_emits (
+IR_EmitsDef_ptr IR_ComponentDef::create_emits (
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr value,
+    IR_ValueDef_ptr value,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -50259,11 +49559,11 @@
     );
 }
 
-IR::PublishesDef_ptr IR::ComponentDef::create_publishes (
+IR_PublishesDef_ptr IR_ComponentDef::create_publishes (
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr value,
+    IR_ValueDef_ptr value,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -50284,11 +49584,11 @@
     );
 }
 
-IR::ConsumesDef_ptr IR::ComponentDef::create_consumes (
+IR_ConsumesDef_ptr IR_ComponentDef::create_consumes (
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr value,
+    IR_ValueDef_ptr value,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -50309,9 +49609,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_get::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_get (
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_get::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -50320,7 +49619,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -50332,7 +49631,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -50345,7 +49644,7 @@
 
 
 CORBA::Any * 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -50361,16 +49660,16 @@
 }
 
 void 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_get::result (IR::InterfaceDefSeq * result)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_get::result (IR_InterfaceDefSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_set::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_set (
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_set::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_set (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
-    const IR::InterfaceDefSeq & supported_interfaces,
+    const IR_InterfaceDefSeq & supported_interfaces,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -50378,7 +49677,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_set::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_set::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -50398,7 +49697,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_set::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -50411,7 +49710,7 @@
 
 
 CORBA::Any * 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_set::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_supported_interfaces_set::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -50423,7 +49722,7 @@
   return result_any;
 }
 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_base_component_get::TAO_ClientRequestInfo_IR_ComponentDef_base_component_get (
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_base_component_get::TAO_ClientRequestInfo_IR_ComponentDef_base_component_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -50432,7 +49731,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_base_component_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_base_component_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -50444,7 +49743,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_base_component_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_base_component_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -50457,7 +49756,7 @@
 
 
 CORBA::Any * 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_base_component_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_base_component_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -50473,13 +49772,13 @@
 }
 
 void 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_base_component_get::result (IR::ComponentDef_ptr result)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_base_component_get::result (IR_ComponentDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_provides_interfaces_get::TAO_ClientRequestInfo_IR_ComponentDef_provides_interfaces_get (
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_provides_interfaces_get::TAO_ClientRequestInfo_IR_ComponentDef_provides_interfaces_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -50488,7 +49787,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_provides_interfaces_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_provides_interfaces_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -50500,7 +49799,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_provides_interfaces_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_provides_interfaces_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -50513,7 +49812,7 @@
 
 
 CORBA::Any * 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_provides_interfaces_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_provides_interfaces_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -50529,13 +49828,13 @@
 }
 
 void 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_provides_interfaces_get::result (IR::ProvidesDefSeq * result)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_provides_interfaces_get::result (IR_ProvidesDefSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_uses_interfaces_get::TAO_ClientRequestInfo_IR_ComponentDef_uses_interfaces_get (
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_uses_interfaces_get::TAO_ClientRequestInfo_IR_ComponentDef_uses_interfaces_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -50544,7 +49843,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_uses_interfaces_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_uses_interfaces_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -50556,7 +49855,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_uses_interfaces_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_uses_interfaces_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -50569,7 +49868,7 @@
 
 
 CORBA::Any * 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_uses_interfaces_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_uses_interfaces_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -50585,13 +49884,13 @@
 }
 
 void 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_uses_interfaces_get::result (IR::UsesDefSeq * result)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_uses_interfaces_get::result (IR_UsesDefSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_emits_events_get::TAO_ClientRequestInfo_IR_ComponentDef_emits_events_get (
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_emits_events_get::TAO_ClientRequestInfo_IR_ComponentDef_emits_events_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -50600,7 +49899,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_emits_events_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_emits_events_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -50612,7 +49911,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_emits_events_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_emits_events_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -50625,7 +49924,7 @@
 
 
 CORBA::Any * 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_emits_events_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_emits_events_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -50641,13 +49940,13 @@
 }
 
 void 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_emits_events_get::result (IR::EmitsDefSeq * result)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_emits_events_get::result (IR_EmitsDefSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_publishes_events_get::TAO_ClientRequestInfo_IR_ComponentDef_publishes_events_get (
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_publishes_events_get::TAO_ClientRequestInfo_IR_ComponentDef_publishes_events_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -50656,7 +49955,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_publishes_events_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_publishes_events_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -50668,7 +49967,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_publishes_events_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_publishes_events_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -50681,7 +49980,7 @@
 
 
 CORBA::Any * 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_publishes_events_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_publishes_events_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -50697,13 +49996,13 @@
 }
 
 void 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_publishes_events_get::result (IR::PublishesDefSeq * result)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_publishes_events_get::result (IR_PublishesDefSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_consumes_events_get::TAO_ClientRequestInfo_IR_ComponentDef_consumes_events_get (
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_consumes_events_get::TAO_ClientRequestInfo_IR_ComponentDef_consumes_events_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -50712,7 +50011,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_consumes_events_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_consumes_events_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -50724,7 +50023,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_consumes_events_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_consumes_events_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -50737,7 +50036,7 @@
 
 
 CORBA::Any * 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_consumes_events_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_consumes_events_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -50753,13 +50052,13 @@
 }
 
 void 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_consumes_events_get::result (IR::ConsumesDefSeq * result)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_consumes_events_get::result (IR_ConsumesDefSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_is_basic_get::TAO_ClientRequestInfo_IR_ComponentDef_is_basic_get (
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_is_basic_get::TAO_ClientRequestInfo_IR_ComponentDef_is_basic_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -50768,7 +50067,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_is_basic_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_is_basic_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -50780,7 +50079,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_is_basic_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_is_basic_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -50793,7 +50092,7 @@
 
 
 CORBA::Any * 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_is_basic_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_is_basic_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -50809,19 +50108,19 @@
 }
 
 void 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_is_basic_get::result (CORBA::Boolean result)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_is_basic_get::result (CORBA::Boolean result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_provides::TAO_ClientRequestInfo_IR_ComponentDef_create_provides (
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_provides::TAO_ClientRequestInfo_IR_ComponentDef_create_provides (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    IR::InterfaceDef_ptr interface_type,
+    IR_InterfaceDef_ptr interface_type,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -50832,7 +50131,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_provides::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_provides::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -50867,7 +50166,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_provides::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_provides::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -50880,7 +50179,7 @@
 
 
 CORBA::Any * 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_provides::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_provides::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -50896,19 +50195,19 @@
 }
 
 void 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_provides::result (IR::ProvidesDef_ptr result)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_provides::result (IR_ProvidesDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_uses::TAO_ClientRequestInfo_IR_ComponentDef_create_uses (
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_uses::TAO_ClientRequestInfo_IR_ComponentDef_create_uses (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    IR::InterfaceDef_ptr interface_type,
+    IR_InterfaceDef_ptr interface_type,
     const CORBA::Boolean & is_multiple,
     CORBA::Environment &    
   )
@@ -50921,7 +50220,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_uses::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_uses::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -50961,7 +50260,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_uses::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_uses::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -50974,7 +50273,7 @@
 
 
 CORBA::Any * 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_uses::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_uses::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -50990,19 +50289,19 @@
 }
 
 void 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_uses::result (IR::UsesDef_ptr result)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_uses::result (IR_UsesDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_emits::TAO_ClientRequestInfo_IR_ComponentDef_create_emits (
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_emits::TAO_ClientRequestInfo_IR_ComponentDef_create_emits (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr value,
+    IR_ValueDef_ptr value,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -51013,7 +50312,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_emits::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_emits::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -51048,7 +50347,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_emits::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_emits::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -51061,7 +50360,7 @@
 
 
 CORBA::Any * 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_emits::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_emits::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -51077,19 +50376,19 @@
 }
 
 void 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_emits::result (IR::EmitsDef_ptr result)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_emits::result (IR_EmitsDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_publishes::TAO_ClientRequestInfo_IR_ComponentDef_create_publishes (
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_publishes::TAO_ClientRequestInfo_IR_ComponentDef_create_publishes (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr value,
+    IR_ValueDef_ptr value,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -51100,7 +50399,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_publishes::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_publishes::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -51135,7 +50434,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_publishes::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_publishes::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -51148,7 +50447,7 @@
 
 
 CORBA::Any * 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_publishes::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_publishes::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -51164,19 +50463,19 @@
 }
 
 void 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_publishes::result (IR::PublishesDef_ptr result)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_publishes::result (IR_PublishesDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_consumes::TAO_ClientRequestInfo_IR_ComponentDef_create_consumes (
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_consumes::TAO_ClientRequestInfo_IR_ComponentDef_create_consumes (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr value,
+    IR_ValueDef_ptr value,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -51187,7 +50486,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_consumes::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_consumes::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -51222,7 +50521,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_consumes::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_consumes::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -51235,7 +50534,7 @@
 
 
 CORBA::Any * 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_consumes::result (CORBA::Environment &ACE_TRY_ENV)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_consumes::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -51251,24 +50550,26 @@
 }
 
 void 
-IR::ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_consumes::result (IR::ConsumesDef_ptr result)
+IR_ComponentDef::TAO_ClientRequestInfo_IR_ComponentDef_create_consumes::result (IR_ConsumesDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_ComponentDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f43), ACE_NTOHL (0x6f6d706f), ACE_NTOHL (0x6e656e74), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/ComponentDef:1.0
-  13, ACE_NTOHL (0x436f6d70), ACE_NTOHL (0x6f6e656e), ACE_NTOHL (0x74446566), ACE_NTOHL (0x0),  // name = ComponentDef
+  13, ACE_NTOHL (0x436f6d70), ACE_NTOHL (0x6f6e656e), ACE_NTOHL (0x74446566), ACE_NTOHL (0x0),  // name = IR_ComponentDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ComponentDef (CORBA::tk_objref, sizeof (_oc_IR_ComponentDef), (char *) &_oc_IR_ComponentDef, 0, sizeof (IR::ComponentDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_ComponentDef (CORBA::tk_objref, sizeof (_oc_IR_ComponentDef), (char *) &_oc_IR_ComponentDef, 0, sizeof (IR_ComponentDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ComponentDef, &_tc_TAO_tc_IR_ComponentDef)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_ComponentDescription[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -51345,7 +50646,7 @@
   144, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     34, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f50), ACE_NTOHL (0x726f7669), ACE_NTOHL (0x64657344), ACE_NTOHL (0x65665365), ACE_NTOHL (0x713a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/ProvidesDefSeq:1.0
-    15, ACE_NTOHL (0x50726f76), ACE_NTOHL (0x69646573), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65710000),  // name = ProvidesDefSeq
+    15, ACE_NTOHL (0x50726f76), ACE_NTOHL (0x69646573), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65710000),  // name = IR_ProvidesDefSeq
     CORBA::tk_sequence, // typecode kind
     72, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
@@ -51353,7 +50654,7 @@
       56, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         31, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f50), ACE_NTOHL (0x726f7669), ACE_NTOHL (0x64657344), ACE_NTOHL (0x65663a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/ProvidesDef:1.0
-        12, ACE_NTOHL (0x50726f76), ACE_NTOHL (0x69646573), ACE_NTOHL (0x44656600),  // name = ProvidesDef
+        12, ACE_NTOHL (0x50726f76), ACE_NTOHL (0x69646573), ACE_NTOHL (0x44656600),  // name = IR_ProvidesDef
 
       0U,
 
@@ -51363,7 +50664,7 @@
   128, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     30, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f55), ACE_NTOHL (0x73657344), ACE_NTOHL (0x65665365), ACE_NTOHL (0x713a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/UsesDefSeq:1.0
-    11, ACE_NTOHL (0x55736573), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65710000),  // name = UsesDefSeq
+    11, ACE_NTOHL (0x55736573), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65710000),  // name = IR_UsesDefSeq
     CORBA::tk_sequence, // typecode kind
     64, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
@@ -51371,7 +50672,7 @@
       48, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f55), ACE_NTOHL (0x73657344), ACE_NTOHL (0x65663a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/UsesDef:1.0
-        8, ACE_NTOHL (0x55736573), ACE_NTOHL (0x44656600),  // name = UsesDef
+        8, ACE_NTOHL (0x55736573), ACE_NTOHL (0x44656600),  // name = IR_UsesDef
 
       0U,
 
@@ -51565,7 +50866,7 @@
   132, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     31, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f45), ACE_NTOHL (0x6d697473), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65713a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/EmitsDefSeq:1.0
-    12, ACE_NTOHL (0x456d6974), ACE_NTOHL (0x73446566), ACE_NTOHL (0x53657100),  // name = EmitsDefSeq
+    12, ACE_NTOHL (0x456d6974), ACE_NTOHL (0x73446566), ACE_NTOHL (0x53657100),  // name = IR_EmitsDefSeq
     CORBA::tk_sequence, // typecode kind
     68, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
@@ -51573,7 +50874,7 @@
       52, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         28, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f45), ACE_NTOHL (0x6d697473), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/EmitsDef:1.0
-        9, ACE_NTOHL (0x456d6974), ACE_NTOHL (0x73446566), ACE_NTOHL (0x0),  // name = EmitsDef
+        9, ACE_NTOHL (0x456d6974), ACE_NTOHL (0x73446566), ACE_NTOHL (0x0),  // name = IR_EmitsDef
 
       0U,
 
@@ -51583,7 +50884,7 @@
   148, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     35, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f50), ACE_NTOHL (0x75626c69), ACE_NTOHL (0x73686573), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65713a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/PublishesDefSeq:1.0
-    16, ACE_NTOHL (0x5075626c), ACE_NTOHL (0x69736865), ACE_NTOHL (0x73446566), ACE_NTOHL (0x53657100),  // name = PublishesDefSeq
+    16, ACE_NTOHL (0x5075626c), ACE_NTOHL (0x69736865), ACE_NTOHL (0x73446566), ACE_NTOHL (0x53657100),  // name = IR_PublishesDefSeq
     CORBA::tk_sequence, // typecode kind
     76, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
@@ -51591,7 +50892,7 @@
       60, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f50), ACE_NTOHL (0x75626c69), ACE_NTOHL (0x73686573), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/PublishesDef:1.0
-        13, ACE_NTOHL (0x5075626c), ACE_NTOHL (0x69736865), ACE_NTOHL (0x73446566), ACE_NTOHL (0x0),  // name = PublishesDef
+        13, ACE_NTOHL (0x5075626c), ACE_NTOHL (0x69736865), ACE_NTOHL (0x73446566), ACE_NTOHL (0x0),  // name = IR_PublishesDef
 
       0U,
 
@@ -51601,7 +50902,7 @@
   144, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     34, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f43), ACE_NTOHL (0x6f6e7375), ACE_NTOHL (0x6d657344), ACE_NTOHL (0x65665365), ACE_NTOHL (0x713a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/ConsumesDefSeq:1.0
-    15, ACE_NTOHL (0x436f6e73), ACE_NTOHL (0x756d6573), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65710000),  // name = ConsumesDefSeq
+    15, ACE_NTOHL (0x436f6e73), ACE_NTOHL (0x756d6573), ACE_NTOHL (0x44656653), ACE_NTOHL (0x65710000),  // name = IR_ConsumesDefSeq
     CORBA::tk_sequence, // typecode kind
     72, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
@@ -51609,7 +50910,7 @@
       56, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         31, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f43), ACE_NTOHL (0x6f6e7375), ACE_NTOHL (0x6d657344), ACE_NTOHL (0x65663a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/ConsumesDef:1.0
-        12, ACE_NTOHL (0x436f6e73), ACE_NTOHL (0x756d6573), ACE_NTOHL (0x44656600),  // name = ConsumesDef
+        12, ACE_NTOHL (0x436f6e73), ACE_NTOHL (0x756d6573), ACE_NTOHL (0x44656600),  // name = IR_ConsumesDef
 
       0U,
 
@@ -51618,14 +50919,15 @@
   CORBA::tk_boolean,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_ComponentDescription (CORBA::tk_struct, sizeof (_oc_IR_ComponentDescription), (char *) &_oc_IR_ComponentDescription, 0, sizeof (IR::ComponentDescription));
+static CORBA::TypeCode _tc_TAO_tc_IR_ComponentDescription (CORBA::tk_struct, sizeof (_oc_IR_ComponentDescription), (char *) &_oc_IR_ComponentDescription, 0, sizeof (IR_ComponentDescription));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_ComponentDescription, &_tc_TAO_tc_IR_ComponentDescription)
 TAO_NAMESPACE_END
-void IR::ComponentDescription::_tao_any_destructor (void *x)
+
+void IR_ComponentDescription::_tao_any_destructor (void *x)
 {
-  ComponentDescription *tmp = ACE_static_cast (ComponentDescription*,x);
+  IR_ComponentDescription *tmp = ACE_static_cast (IR_ComponentDescription*,x);
   delete tmp;
 }
 
@@ -51634,15 +50936,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_PrimaryKeyDef_Proxy_Impl::_TAO_PrimaryKeyDef_Proxy_Impl (void)
+_TAO_PrimaryKeyDef_Proxy_Impl::_TAO_PrimaryKeyDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_PrimaryKeyDef_Remote_Proxy_Impl::_TAO_PrimaryKeyDef_Remote_Proxy_Impl (void)
+_TAO_PrimaryKeyDef_Remote_Proxy_Impl::_TAO_PrimaryKeyDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-CORBA::Boolean IR::_TAO_PrimaryKeyDef_Remote_Proxy_Impl::is_a (
+CORBA::Boolean _TAO_PrimaryKeyDef_Remote_Proxy_Impl::is_a (
     CORBA_Object *_collocated_tao_target_,
     const char * primary_key_id,
     CORBA::Environment &ACE_TRY_ENV
@@ -51680,7 +50982,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_is_a ri (
+      IR_PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_is_a ri (
         &_tao_call,
         _collocated_tao_target_,
         primary_key_id,
@@ -51812,7 +51114,7 @@
   return _tao_retval;
 }
 
-IR::ValueDef_ptr IR::_TAO_PrimaryKeyDef_Remote_Proxy_Impl::primary_key (
+IR_ValueDef_ptr _TAO_PrimaryKeyDef_Remote_Proxy_Impl::primary_key (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -51821,8 +51123,8 @@
   ))
 {
   
-  IR::ValueDef_ptr _tao_retval = IR::ValueDef::_nil ();
-  IR::ValueDef_var _tao_safe_retval (_tao_retval);
+  IR_ValueDef_ptr _tao_retval = IR_ValueDef::_nil ();
+  IR_ValueDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -51850,7 +51152,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_primary_key_get ri (
+      IR_PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_primary_key_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -51906,7 +51208,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ValueDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ValueDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -51982,37 +51284,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_PrimaryKeyDef_Proxy_Broker::_TAO_PrimaryKeyDef_Proxy_Broker (void)
+_TAO_PrimaryKeyDef_Proxy_Broker::_TAO_PrimaryKeyDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_PrimaryKeyDef_Proxy_Broker::~_TAO_PrimaryKeyDef_Proxy_Broker (void)
+_TAO_PrimaryKeyDef_Proxy_Broker::~_TAO_PrimaryKeyDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_PrimaryKeyDef_Proxy_Broker * (*IR__TAO_PrimaryKeyDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_PrimaryKeyDef_Proxy_Broker * (*_TAO_PrimaryKeyDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_PrimaryKeyDef_Remote_Proxy_Broker *
-IR::_TAO_PrimaryKeyDef_Remote_Proxy_Broker::the_TAO_PrimaryKeyDef_Remote_Proxy_Broker (void)
+_TAO_PrimaryKeyDef_Remote_Proxy_Broker *
+_TAO_PrimaryKeyDef_Remote_Proxy_Broker::the_TAO_PrimaryKeyDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_PrimaryKeyDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_PrimaryKeyDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_PrimaryKeyDef_Remote_Proxy_Broker::_TAO_PrimaryKeyDef_Remote_Proxy_Broker (void)
+_TAO_PrimaryKeyDef_Remote_Proxy_Broker::_TAO_PrimaryKeyDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_PrimaryKeyDef_Remote_Proxy_Broker::~_TAO_PrimaryKeyDef_Remote_Proxy_Broker (void)
+_TAO_PrimaryKeyDef_Remote_Proxy_Broker::~_TAO_PrimaryKeyDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_PrimaryKeyDef_Proxy_Impl&
-IR::_TAO_PrimaryKeyDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::PrimaryKeyDef *object,
+_TAO_PrimaryKeyDef_Proxy_Impl&
+_TAO_PrimaryKeyDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_PrimaryKeyDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -52028,109 +51330,109 @@
 
 
 // default constructor
-IR::PrimaryKeyDef::PrimaryKeyDef (int collocated)
+IR_PrimaryKeyDef::IR_PrimaryKeyDef (int collocated)
 {
   this->IR_PrimaryKeyDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::PrimaryKeyDef::~PrimaryKeyDef (void)
+IR_PrimaryKeyDef::~IR_PrimaryKeyDef (void)
 {}
 
 void
-IR::PrimaryKeyDef::IR_PrimaryKeyDef_setup_collocation (int collocated)
+IR_PrimaryKeyDef::IR_PrimaryKeyDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_PrimaryKeyDef_Proxy_Broker_ =
-      ::IR__TAO_PrimaryKeyDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_PrimaryKeyDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_PrimaryKeyDef_Proxy_Broker_ =
-      ::IR::_TAO_PrimaryKeyDef_Remote_Proxy_Broker::the_TAO_PrimaryKeyDef_Remote_Proxy_Broker ();
+      _TAO_PrimaryKeyDef_Remote_Proxy_Broker::the_TAO_PrimaryKeyDef_Remote_Proxy_Broker ();
   
   this->IR_Contained_setup_collocation (collocated);
 }
 
-void IR::PrimaryKeyDef::_tao_any_destructor (void *x)
+void IR_PrimaryKeyDef::_tao_any_destructor (void *x)
 {
-  PrimaryKeyDef *tmp = ACE_static_cast (PrimaryKeyDef*,x);
+  IR_PrimaryKeyDef *tmp = ACE_static_cast (IR_PrimaryKeyDef*,x);
   CORBA::release (tmp);
 }
 
-IR::PrimaryKeyDef_ptr IR::PrimaryKeyDef::_narrow (
+IR_PrimaryKeyDef_ptr IR_PrimaryKeyDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return PrimaryKeyDef::_nil ();
+    return IR_PrimaryKeyDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/PrimaryKeyDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (PrimaryKeyDef::_nil ());
+      ACE_CHECK_RETURN (IR_PrimaryKeyDef::_nil ());
       if (is_a == 0)
-        return PrimaryKeyDef::_nil ();
+        return IR_PrimaryKeyDef::_nil ();
     }
-  return PrimaryKeyDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_PrimaryKeyDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::PrimaryKeyDef_ptr IR::PrimaryKeyDef::_unchecked_narrow (
+IR_PrimaryKeyDef_ptr IR_PrimaryKeyDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return PrimaryKeyDef::_nil ();
+    return IR_PrimaryKeyDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      PrimaryKeyDef_ptr default_proxy = PrimaryKeyDef::_nil ();
+      IR_PrimaryKeyDef_ptr default_proxy = IR_PrimaryKeyDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_PrimaryKeyDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_PrimaryKeyDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::PrimaryKeyDef (
+          ::IR_PrimaryKeyDef (
             stub,
             1,
             obj->_servant ()),
             
-          PrimaryKeyDef::_nil ());
+          IR_PrimaryKeyDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::PrimaryKeyDef (stub, 0, obj->_servant ()), PrimaryKeyDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_PrimaryKeyDef (stub, 0, obj->_servant ()), IR_PrimaryKeyDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            PrimaryKeyDef_ptr,
+            IR_PrimaryKeyDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &PrimaryKeyDef::_narrow
+                      &IR_PrimaryKeyDef::_narrow
                     )
                 )
           );
 }
 
-IR::PrimaryKeyDef_ptr
-IR::PrimaryKeyDef::_duplicate (PrimaryKeyDef_ptr obj)
+IR_PrimaryKeyDef_ptr
+IR_PrimaryKeyDef::_duplicate (IR_PrimaryKeyDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::PrimaryKeyDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_PrimaryKeyDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/PrimaryKeyDef:1.0")) ||
@@ -52142,34 +51444,34 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::PrimaryKeyDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_PrimaryKeyDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, PrimaryKeyDef)::_narrow))
+      &IR_PrimaryKeyDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -52182,12 +51484,12 @@
   return retv;
 }
 
-const char* IR::PrimaryKeyDef::_interface_repository_id (void) const
+const char* IR_PrimaryKeyDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/PrimaryKeyDef:1.0";
 }
 
-CORBA::Boolean IR::PrimaryKeyDef::is_a (
+CORBA::Boolean IR_PrimaryKeyDef::is_a (
     const char * primary_key_id,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -52206,7 +51508,7 @@
     );
 }
 
-IR::ValueDef_ptr IR::PrimaryKeyDef::primary_key (
+IR_ValueDef_ptr IR_PrimaryKeyDef::primary_key (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -52223,9 +51525,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_is_a::TAO_ClientRequestInfo_IR_PrimaryKeyDef_is_a (
+IR_PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_is_a::TAO_ClientRequestInfo_IR_PrimaryKeyDef_is_a (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * primary_key_id,
@@ -52236,7 +51537,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_is_a::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_is_a::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -52255,7 +51556,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_is_a::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_is_a::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -52268,7 +51569,7 @@
 
 
 CORBA::Any * 
-IR::PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_is_a::result (CORBA::Environment &ACE_TRY_ENV)
+IR_PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_is_a::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -52284,13 +51585,13 @@
 }
 
 void 
-IR::PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_is_a::result (CORBA::Boolean result)
+IR_PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_is_a::result (CORBA::Boolean result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_primary_key_get::TAO_ClientRequestInfo_IR_PrimaryKeyDef_primary_key_get (
+IR_PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_primary_key_get::TAO_ClientRequestInfo_IR_PrimaryKeyDef_primary_key_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -52299,7 +51600,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_primary_key_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_primary_key_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -52311,7 +51612,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_primary_key_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_primary_key_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -52324,7 +51625,7 @@
 
 
 CORBA::Any * 
-IR::PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_primary_key_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_primary_key_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -52340,24 +51641,26 @@
 }
 
 void 
-IR::PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_primary_key_get::result (IR::ValueDef_ptr result)
+IR_PrimaryKeyDef::TAO_ClientRequestInfo_IR_PrimaryKeyDef_primary_key_get::result (IR_ValueDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_PrimaryKeyDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   33, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f50), ACE_NTOHL (0x72696d61), ACE_NTOHL (0x72794b65), ACE_NTOHL (0x79446566), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IR/PrimaryKeyDef:1.0
-  14, ACE_NTOHL (0x5072696d), ACE_NTOHL (0x6172794b), ACE_NTOHL (0x65794465), ACE_NTOHL (0x66000000),  // name = PrimaryKeyDef
+  14, ACE_NTOHL (0x5072696d), ACE_NTOHL (0x6172794b), ACE_NTOHL (0x65794465), ACE_NTOHL (0x66000000),  // name = IR_PrimaryKeyDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_PrimaryKeyDef (CORBA::tk_objref, sizeof (_oc_IR_PrimaryKeyDef), (char *) &_oc_IR_PrimaryKeyDef, 0, sizeof (IR::PrimaryKeyDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_PrimaryKeyDef (CORBA::tk_objref, sizeof (_oc_IR_PrimaryKeyDef), (char *) &_oc_IR_PrimaryKeyDef, 0, sizeof (IR_PrimaryKeyDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_PrimaryKeyDef, &_tc_TAO_tc_IR_PrimaryKeyDef)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_PrimaryKeyDescription[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -52405,17 +51708,18 @@
   52, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     28, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f56), ACE_NTOHL (0x616c7565), ACE_NTOHL (0x4465663a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/ValueDef:1.0
-    9, ACE_NTOHL (0x56616c75), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = ValueDef
+    9, ACE_NTOHL (0x56616c75), ACE_NTOHL (0x65446566), ACE_NTOHL (0x0),  // name = IR_ValueDef
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_PrimaryKeyDescription (CORBA::tk_struct, sizeof (_oc_IR_PrimaryKeyDescription), (char *) &_oc_IR_PrimaryKeyDescription, 0, sizeof (IR::PrimaryKeyDescription));
+static CORBA::TypeCode _tc_TAO_tc_IR_PrimaryKeyDescription (CORBA::tk_struct, sizeof (_oc_IR_PrimaryKeyDescription), (char *) &_oc_IR_PrimaryKeyDescription, 0, sizeof (IR_PrimaryKeyDescription));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_PrimaryKeyDescription, &_tc_TAO_tc_IR_PrimaryKeyDescription)
 TAO_NAMESPACE_END
-void IR::PrimaryKeyDescription::_tao_any_destructor (void *x)
+
+void IR_PrimaryKeyDescription::_tao_any_destructor (void *x)
 {
-  PrimaryKeyDescription *tmp = ACE_static_cast (PrimaryKeyDescription*,x);
+  IR_PrimaryKeyDescription *tmp = ACE_static_cast (IR_PrimaryKeyDescription*,x);
   delete tmp;
 }
 
@@ -52424,10 +51728,10 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_FactoryDef_Proxy_Impl::_TAO_FactoryDef_Proxy_Impl (void)
+_TAO_FactoryDef_Proxy_Impl::_TAO_FactoryDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_FactoryDef_Remote_Proxy_Impl::_TAO_FactoryDef_Remote_Proxy_Impl (void)
+_TAO_FactoryDef_Remote_Proxy_Impl::_TAO_FactoryDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
@@ -52442,37 +51746,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_FactoryDef_Proxy_Broker::_TAO_FactoryDef_Proxy_Broker (void)
+_TAO_FactoryDef_Proxy_Broker::_TAO_FactoryDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_FactoryDef_Proxy_Broker::~_TAO_FactoryDef_Proxy_Broker (void)
+_TAO_FactoryDef_Proxy_Broker::~_TAO_FactoryDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_FactoryDef_Proxy_Broker * (*IR__TAO_FactoryDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_FactoryDef_Proxy_Broker * (*_TAO_FactoryDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_FactoryDef_Remote_Proxy_Broker *
-IR::_TAO_FactoryDef_Remote_Proxy_Broker::the_TAO_FactoryDef_Remote_Proxy_Broker (void)
+_TAO_FactoryDef_Remote_Proxy_Broker *
+_TAO_FactoryDef_Remote_Proxy_Broker::the_TAO_FactoryDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_FactoryDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_FactoryDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_FactoryDef_Remote_Proxy_Broker::_TAO_FactoryDef_Remote_Proxy_Broker (void)
+_TAO_FactoryDef_Remote_Proxy_Broker::_TAO_FactoryDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_FactoryDef_Remote_Proxy_Broker::~_TAO_FactoryDef_Remote_Proxy_Broker (void)
+_TAO_FactoryDef_Remote_Proxy_Broker::~_TAO_FactoryDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_FactoryDef_Proxy_Impl&
-IR::_TAO_FactoryDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::FactoryDef *object,
+_TAO_FactoryDef_Proxy_Impl&
+_TAO_FactoryDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_FactoryDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -52488,109 +51792,109 @@
 
 
 // default constructor
-IR::FactoryDef::FactoryDef (int collocated)
+IR_FactoryDef::IR_FactoryDef (int collocated)
 {
   this->IR_FactoryDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::FactoryDef::~FactoryDef (void)
+IR_FactoryDef::~IR_FactoryDef (void)
 {}
 
 void
-IR::FactoryDef::IR_FactoryDef_setup_collocation (int collocated)
+IR_FactoryDef::IR_FactoryDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_FactoryDef_Proxy_Broker_ =
-      ::IR__TAO_FactoryDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_FactoryDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_FactoryDef_Proxy_Broker_ =
-      ::IR::_TAO_FactoryDef_Remote_Proxy_Broker::the_TAO_FactoryDef_Remote_Proxy_Broker ();
+      _TAO_FactoryDef_Remote_Proxy_Broker::the_TAO_FactoryDef_Remote_Proxy_Broker ();
   
   this->IR_OperationDef_setup_collocation (collocated);
 }
 
-void IR::FactoryDef::_tao_any_destructor (void *x)
+void IR_FactoryDef::_tao_any_destructor (void *x)
 {
-  FactoryDef *tmp = ACE_static_cast (FactoryDef*,x);
+  IR_FactoryDef *tmp = ACE_static_cast (IR_FactoryDef*,x);
   CORBA::release (tmp);
 }
 
-IR::FactoryDef_ptr IR::FactoryDef::_narrow (
+IR_FactoryDef_ptr IR_FactoryDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return FactoryDef::_nil ();
+    return IR_FactoryDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/FactoryDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (FactoryDef::_nil ());
+      ACE_CHECK_RETURN (IR_FactoryDef::_nil ());
       if (is_a == 0)
-        return FactoryDef::_nil ();
+        return IR_FactoryDef::_nil ();
     }
-  return FactoryDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_FactoryDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::FactoryDef_ptr IR::FactoryDef::_unchecked_narrow (
+IR_FactoryDef_ptr IR_FactoryDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return FactoryDef::_nil ();
+    return IR_FactoryDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      FactoryDef_ptr default_proxy = FactoryDef::_nil ();
+      IR_FactoryDef_ptr default_proxy = IR_FactoryDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_FactoryDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_FactoryDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::FactoryDef (
+          ::IR_FactoryDef (
             stub,
             1,
             obj->_servant ()),
             
-          FactoryDef::_nil ());
+          IR_FactoryDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::FactoryDef (stub, 0, obj->_servant ()), FactoryDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_FactoryDef (stub, 0, obj->_servant ()), IR_FactoryDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            FactoryDef_ptr,
+            IR_FactoryDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &FactoryDef::_narrow
+                      &IR_FactoryDef::_narrow
                     )
                 )
           );
 }
 
-IR::FactoryDef_ptr
-IR::FactoryDef::_duplicate (FactoryDef_ptr obj)
+IR_FactoryDef_ptr
+IR_FactoryDef::_duplicate (IR_FactoryDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::FactoryDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_FactoryDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/FactoryDef:1.0")) ||
@@ -52603,46 +51907,46 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::FactoryDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_FactoryDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, FactoryDef)::_narrow))
+      &IR_FactoryDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, OperationDef)::_narrow))
+      &IR_OperationDef::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::OperationDef_ptr,
+            IR_OperationDef_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -52655,21 +51959,18 @@
   return retv;
 }
 
-const char* IR::FactoryDef::_interface_repository_id (void) const
+const char* IR_FactoryDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/FactoryDef:1.0";
 }
 
-
-#if (TAO_HAS_INTERCEPTORS == 1)
-#endif /* TAO_HAS_INTERCEPTORS */
 static const CORBA::Long _oc_IR_FactoryDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   30, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f46), ACE_NTOHL (0x6163746f), ACE_NTOHL (0x72794465), ACE_NTOHL (0x663a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/FactoryDef:1.0
-  11, ACE_NTOHL (0x46616374), ACE_NTOHL (0x6f727944), ACE_NTOHL (0x65660000),  // name = FactoryDef
+  11, ACE_NTOHL (0x46616374), ACE_NTOHL (0x6f727944), ACE_NTOHL (0x65660000),  // name = IR_FactoryDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_FactoryDef (CORBA::tk_objref, sizeof (_oc_IR_FactoryDef), (char *) &_oc_IR_FactoryDef, 0, sizeof (IR::FactoryDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_FactoryDef (CORBA::tk_objref, sizeof (_oc_IR_FactoryDef), (char *) &_oc_IR_FactoryDef, 0, sizeof (IR_FactoryDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_FactoryDef, &_tc_TAO_tc_IR_FactoryDef)
@@ -52679,10 +51980,10 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_FinderDef_Proxy_Impl::_TAO_FinderDef_Proxy_Impl (void)
+_TAO_FinderDef_Proxy_Impl::_TAO_FinderDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_FinderDef_Remote_Proxy_Impl::_TAO_FinderDef_Remote_Proxy_Impl (void)
+_TAO_FinderDef_Remote_Proxy_Impl::_TAO_FinderDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
@@ -52697,37 +51998,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_FinderDef_Proxy_Broker::_TAO_FinderDef_Proxy_Broker (void)
+_TAO_FinderDef_Proxy_Broker::_TAO_FinderDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_FinderDef_Proxy_Broker::~_TAO_FinderDef_Proxy_Broker (void)
+_TAO_FinderDef_Proxy_Broker::~_TAO_FinderDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_FinderDef_Proxy_Broker * (*IR__TAO_FinderDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_FinderDef_Proxy_Broker * (*_TAO_FinderDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_FinderDef_Remote_Proxy_Broker *
-IR::_TAO_FinderDef_Remote_Proxy_Broker::the_TAO_FinderDef_Remote_Proxy_Broker (void)
+_TAO_FinderDef_Remote_Proxy_Broker *
+_TAO_FinderDef_Remote_Proxy_Broker::the_TAO_FinderDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_FinderDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_FinderDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_FinderDef_Remote_Proxy_Broker::_TAO_FinderDef_Remote_Proxy_Broker (void)
+_TAO_FinderDef_Remote_Proxy_Broker::_TAO_FinderDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_FinderDef_Remote_Proxy_Broker::~_TAO_FinderDef_Remote_Proxy_Broker (void)
+_TAO_FinderDef_Remote_Proxy_Broker::~_TAO_FinderDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_FinderDef_Proxy_Impl&
-IR::_TAO_FinderDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::FinderDef *object,
+_TAO_FinderDef_Proxy_Impl&
+_TAO_FinderDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_FinderDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -52743,109 +52044,109 @@
 
 
 // default constructor
-IR::FinderDef::FinderDef (int collocated)
+IR_FinderDef::IR_FinderDef (int collocated)
 {
   this->IR_FinderDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::FinderDef::~FinderDef (void)
+IR_FinderDef::~IR_FinderDef (void)
 {}
 
 void
-IR::FinderDef::IR_FinderDef_setup_collocation (int collocated)
+IR_FinderDef::IR_FinderDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_FinderDef_Proxy_Broker_ =
-      ::IR__TAO_FinderDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_FinderDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_FinderDef_Proxy_Broker_ =
-      ::IR::_TAO_FinderDef_Remote_Proxy_Broker::the_TAO_FinderDef_Remote_Proxy_Broker ();
+      _TAO_FinderDef_Remote_Proxy_Broker::the_TAO_FinderDef_Remote_Proxy_Broker ();
   
   this->IR_OperationDef_setup_collocation (collocated);
 }
 
-void IR::FinderDef::_tao_any_destructor (void *x)
+void IR_FinderDef::_tao_any_destructor (void *x)
 {
-  FinderDef *tmp = ACE_static_cast (FinderDef*,x);
+  IR_FinderDef *tmp = ACE_static_cast (IR_FinderDef*,x);
   CORBA::release (tmp);
 }
 
-IR::FinderDef_ptr IR::FinderDef::_narrow (
+IR_FinderDef_ptr IR_FinderDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return FinderDef::_nil ();
+    return IR_FinderDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/FinderDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (FinderDef::_nil ());
+      ACE_CHECK_RETURN (IR_FinderDef::_nil ());
       if (is_a == 0)
-        return FinderDef::_nil ();
+        return IR_FinderDef::_nil ();
     }
-  return FinderDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_FinderDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::FinderDef_ptr IR::FinderDef::_unchecked_narrow (
+IR_FinderDef_ptr IR_FinderDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return FinderDef::_nil ();
+    return IR_FinderDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      FinderDef_ptr default_proxy = FinderDef::_nil ();
+      IR_FinderDef_ptr default_proxy = IR_FinderDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_FinderDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_FinderDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::FinderDef (
+          ::IR_FinderDef (
             stub,
             1,
             obj->_servant ()),
             
-          FinderDef::_nil ());
+          IR_FinderDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::FinderDef (stub, 0, obj->_servant ()), FinderDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_FinderDef (stub, 0, obj->_servant ()), IR_FinderDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            FinderDef_ptr,
+            IR_FinderDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &FinderDef::_narrow
+                      &IR_FinderDef::_narrow
                     )
                 )
           );
 }
 
-IR::FinderDef_ptr
-IR::FinderDef::_duplicate (FinderDef_ptr obj)
+IR_FinderDef_ptr
+IR_FinderDef::_duplicate (IR_FinderDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::FinderDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_FinderDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/FinderDef:1.0")) ||
@@ -52858,46 +52159,46 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::FinderDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_FinderDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, FinderDef)::_narrow))
+      &IR_FinderDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, OperationDef)::_narrow))
+      &IR_OperationDef::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::OperationDef_ptr,
+            IR_OperationDef_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -52910,21 +52211,18 @@
   return retv;
 }
 
-const char* IR::FinderDef::_interface_repository_id (void) const
+const char* IR_FinderDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/FinderDef:1.0";
 }
 
-
-#if (TAO_HAS_INTERCEPTORS == 1)
-#endif /* TAO_HAS_INTERCEPTORS */
 static const CORBA::Long _oc_IR_FinderDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   29, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f46), ACE_NTOHL (0x696e6465), ACE_NTOHL (0x72446566), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IR/FinderDef:1.0
-  10, ACE_NTOHL (0x46696e64), ACE_NTOHL (0x65724465), ACE_NTOHL (0x66000000),  // name = FinderDef
+  10, ACE_NTOHL (0x46696e64), ACE_NTOHL (0x65724465), ACE_NTOHL (0x66000000),  // name = IR_FinderDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_FinderDef (CORBA::tk_objref, sizeof (_oc_IR_FinderDef), (char *) &_oc_IR_FinderDef, 0, sizeof (IR::FinderDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_FinderDef (CORBA::tk_objref, sizeof (_oc_IR_FinderDef), (char *) &_oc_IR_FinderDef, 0, sizeof (IR_FinderDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_FinderDef, &_tc_TAO_tc_IR_FinderDef)
@@ -52934,15 +52232,15 @@
 //                Base & Remote Proxy  Implementation. 
 //
 
-IR::_TAO_HomeDef_Proxy_Impl::_TAO_HomeDef_Proxy_Impl (void)
+_TAO_HomeDef_Proxy_Impl::_TAO_HomeDef_Proxy_Impl (void)
 {}
 
-IR::_TAO_HomeDef_Remote_Proxy_Impl::_TAO_HomeDef_Remote_Proxy_Impl (void)
+_TAO_HomeDef_Remote_Proxy_Impl::_TAO_HomeDef_Remote_Proxy_Impl (void)
 {}
 
 // Remote Implementation of the IDL interface methods
 
-IR::HomeDef_ptr IR::_TAO_HomeDef_Remote_Proxy_Impl::base_home (
+IR_HomeDef_ptr _TAO_HomeDef_Remote_Proxy_Impl::base_home (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -52951,8 +52249,8 @@
   ))
 {
   
-  IR::HomeDef_ptr _tao_retval = IR::HomeDef::_nil ();
-  IR::HomeDef_var _tao_safe_retval (_tao_retval);
+  IR_HomeDef_ptr _tao_retval = IR_HomeDef::_nil ();
+  IR_HomeDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -52980,7 +52278,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_base_home_get ri (
+      IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_base_home_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -53036,7 +52334,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::HomeDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_HomeDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -53102,7 +52400,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::ComponentDef_ptr IR::_TAO_HomeDef_Remote_Proxy_Impl::managed_component (
+IR_ComponentDef_ptr _TAO_HomeDef_Remote_Proxy_Impl::managed_component (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -53111,8 +52409,8 @@
   ))
 {
   
-  IR::ComponentDef_ptr _tao_retval = IR::ComponentDef::_nil ();
-  IR::ComponentDef_var _tao_safe_retval (_tao_retval);
+  IR_ComponentDef_ptr _tao_retval = IR_ComponentDef::_nil ();
+  IR_ComponentDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -53140,7 +52438,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_managed_component_get ri (
+      IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_managed_component_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -53196,7 +52494,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::ComponentDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_ComponentDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -53262,7 +52560,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::PrimaryKeyDef_ptr IR::_TAO_HomeDef_Remote_Proxy_Impl::primary_key (
+IR_PrimaryKeyDef_ptr _TAO_HomeDef_Remote_Proxy_Impl::primary_key (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -53271,8 +52569,8 @@
   ))
 {
   
-  IR::PrimaryKeyDef_ptr _tao_retval = IR::PrimaryKeyDef::_nil ();
-  IR::PrimaryKeyDef_var _tao_safe_retval (_tao_retval);
+  IR_PrimaryKeyDef_ptr _tao_retval = IR_PrimaryKeyDef::_nil ();
+  IR_PrimaryKeyDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -53300,7 +52598,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_primary_key_get ri (
+      IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_primary_key_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -53356,7 +52654,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::PrimaryKeyDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_PrimaryKeyDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -53422,7 +52720,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::FactoryDefSeq * IR::_TAO_HomeDef_Remote_Proxy_Impl::factories (
+IR_FactoryDefSeq * _TAO_HomeDef_Remote_Proxy_Impl::factories (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -53431,7 +52729,7 @@
   ))
 {
   
-  IR::FactoryDefSeq *_tao_retval = 0;
+  IR_FactoryDefSeq *_tao_retval = 0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -53439,8 +52737,8 @@
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
   
-  ACE_NEW_RETURN (_tao_retval, IR::FactoryDefSeq, _tao_retval);
-  IR::FactoryDefSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_FactoryDefSeq, _tao_retval);
+  IR_FactoryDefSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_factories",
@@ -53461,7 +52759,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_factories_get ri (
+      IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_factories_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -53517,7 +52815,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::FactoryDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_FactoryDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -53583,7 +52881,7 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::FinderDefSeq * IR::_TAO_HomeDef_Remote_Proxy_Impl::finders (
+IR_FinderDefSeq * _TAO_HomeDef_Remote_Proxy_Impl::finders (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -53592,7 +52890,7 @@
   ))
 {
   
-  IR::FinderDefSeq *_tao_retval = 0;
+  IR_FinderDefSeq *_tao_retval = 0;
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -53600,8 +52898,8 @@
     ACE_THROW_RETURN (CORBA::INTERNAL (), 0);
 
   
-  ACE_NEW_RETURN (_tao_retval, IR::FinderDefSeq, _tao_retval);
-  IR::FinderDefSeq_var _tao_safe_retval (_tao_retval);
+  ACE_NEW_RETURN (_tao_retval, IR_FinderDefSeq, _tao_retval);
+  IR_FinderDefSeq_var _tao_safe_retval (_tao_retval);
   TAO_GIOP_Twoway_Invocation _tao_call (
       istub,
       "_get_finders",
@@ -53622,7 +52920,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_finders_get ri (
+      IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_finders_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -53678,7 +52976,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::FinderDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
+              IR_FinderDefSeq * _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -53744,7 +53042,7 @@
   return _tao_safe_retval._retn ();
 }
 
-CORBA::Boolean IR::_TAO_HomeDef_Remote_Proxy_Impl::is_basic (
+CORBA::Boolean _TAO_HomeDef_Remote_Proxy_Impl::is_basic (
     CORBA_Object *_collocated_tao_target_,
     CORBA::Environment &ACE_TRY_ENV
   )
@@ -53781,7 +53079,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_is_basic_get ri (
+      IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_is_basic_get ri (
         &_tao_call,
         _collocated_tao_target_,
         ACE_TRY_ENV
@@ -53902,12 +53200,12 @@
   return _tao_retval;
 }
 
-IR::PrimaryKeyDef_ptr IR::_TAO_HomeDef_Remote_Proxy_Impl::create_primary_key (
+IR_PrimaryKeyDef_ptr _TAO_HomeDef_Remote_Proxy_Impl::create_primary_key (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr primary_key,
+    IR_ValueDef_ptr primary_key,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -53915,8 +53213,8 @@
   ))
 {
   
-  IR::PrimaryKeyDef_ptr _tao_retval = IR::PrimaryKeyDef::_nil ();
-  IR::PrimaryKeyDef_var _tao_safe_retval (_tao_retval);
+  IR_PrimaryKeyDef_ptr _tao_retval = IR_PrimaryKeyDef::_nil ();
+  IR_PrimaryKeyDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -53944,7 +53242,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_primary_key ri (
+      IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_primary_key ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -54017,7 +53315,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::PrimaryKeyDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_PrimaryKeyDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -54083,13 +53381,13 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::FactoryDef_ptr IR::_TAO_HomeDef_Remote_Proxy_Impl::create_factory (
+IR_FactoryDef_ptr _TAO_HomeDef_Remote_Proxy_Impl::create_factory (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
+    const IR_ParDescriptionSeq & params,
+    const IR_ExceptionDefSeq & exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -54097,8 +53395,8 @@
   ))
 {
   
-  IR::FactoryDef_ptr _tao_retval = IR::FactoryDef::_nil ();
-  IR::FactoryDef_var _tao_safe_retval (_tao_retval);
+  IR_FactoryDef_ptr _tao_retval = IR_FactoryDef::_nil ();
+  IR_FactoryDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -54126,7 +53424,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_factory ri (
+      IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_factory ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -54201,7 +53499,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::FactoryDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_FactoryDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -54267,13 +53565,13 @@
   return _tao_safe_retval._retn ();
 }
 
-IR::FinderDef_ptr IR::_TAO_HomeDef_Remote_Proxy_Impl::create_finder (
+IR_FinderDef_ptr _TAO_HomeDef_Remote_Proxy_Impl::create_finder (
     CORBA_Object *_collocated_tao_target_,
     const char * id,
     const char * name,
     const char * version,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
+    const IR_ParDescriptionSeq & params,
+    const IR_ExceptionDefSeq & exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -54281,8 +53579,8 @@
   ))
 {
   
-  IR::FinderDef_ptr _tao_retval = IR::FinderDef::_nil ();
-  IR::FinderDef_var _tao_safe_retval (_tao_retval);
+  IR_FinderDef_ptr _tao_retval = IR_FinderDef::_nil ();
+  IR_FinderDef_var _tao_safe_retval (_tao_retval);
   
   
   TAO_Stub *istub = _collocated_tao_target_->_stubobj ();
@@ -54310,7 +53608,7 @@
       int _invoke_status = TAO_INVOKE_EXCEPTION;
       
 #if TAO_HAS_INTERCEPTORS == 1
-      IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_finder ri (
+      IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_finder ri (
         &_tao_call,
         _collocated_tao_target_,
         id,
@@ -54385,7 +53683,7 @@
             }
           
           TAO_INTERCEPTOR (
-              IR::FinderDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
+              IR_FinderDef_ptr _tao_retval_info = _tao_safe_retval._retn ();
               ri.result (_tao_retval_info);
               _tao_safe_retval = _tao_retval_info;
             );
@@ -54461,37 +53759,37 @@
 //           Remote & Base  Proxy Broker Implementation
 //
 
-IR::_TAO_HomeDef_Proxy_Broker::_TAO_HomeDef_Proxy_Broker (void)
+_TAO_HomeDef_Proxy_Broker::_TAO_HomeDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_HomeDef_Proxy_Broker::~_TAO_HomeDef_Proxy_Broker (void)
+_TAO_HomeDef_Proxy_Broker::~_TAO_HomeDef_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_HomeDef_Proxy_Broker * (*IR__TAO_HomeDef_Proxy_Broker_Factory_function_pointer) (
+_TAO_HomeDef_Proxy_Broker * (*_TAO_HomeDef_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   ) = 0;
 
 // Factory Member function Implementation.
-IR::_TAO_HomeDef_Remote_Proxy_Broker *
-IR::_TAO_HomeDef_Remote_Proxy_Broker::the_TAO_HomeDef_Remote_Proxy_Broker (void)
+_TAO_HomeDef_Remote_Proxy_Broker *
+_TAO_HomeDef_Remote_Proxy_Broker::the_TAO_HomeDef_Remote_Proxy_Broker (void)
 {
-  static ::IR::_TAO_HomeDef_Remote_Proxy_Broker remote_proxy_broker;
+  static ::_TAO_HomeDef_Remote_Proxy_Broker remote_proxy_broker;
   return &remote_proxy_broker;
 }
 
-IR::_TAO_HomeDef_Remote_Proxy_Broker::_TAO_HomeDef_Remote_Proxy_Broker (void)
+_TAO_HomeDef_Remote_Proxy_Broker::_TAO_HomeDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_HomeDef_Remote_Proxy_Broker::~_TAO_HomeDef_Remote_Proxy_Broker (void)
+_TAO_HomeDef_Remote_Proxy_Broker::~_TAO_HomeDef_Remote_Proxy_Broker (void)
 {
 }
 
-IR::_TAO_HomeDef_Proxy_Impl&
-IR::_TAO_HomeDef_Remote_Proxy_Broker::select_proxy (
-  ::IR::HomeDef *object,
+_TAO_HomeDef_Proxy_Impl&
+_TAO_HomeDef_Remote_Proxy_Broker::select_proxy (
+  ::IR_HomeDef *object,
   CORBA::Environment &ACE_TRY_ENV
 )
 {
@@ -54507,109 +53805,109 @@
 
 
 // default constructor
-IR::HomeDef::HomeDef (int collocated)
+IR_HomeDef::IR_HomeDef (int collocated)
 {
   this->IR_HomeDef_setup_collocation (collocated);
 }
 
 // destructor
-IR::HomeDef::~HomeDef (void)
+IR_HomeDef::~IR_HomeDef (void)
 {}
 
 void
-IR::HomeDef::IR_HomeDef_setup_collocation (int collocated)
+IR_HomeDef::IR_HomeDef_setup_collocation (int collocated)
 {
   if (collocated)
     this->the_TAO_HomeDef_Proxy_Broker_ =
-      ::IR__TAO_HomeDef_Proxy_Broker_Factory_function_pointer (this);
+      _TAO_HomeDef_Proxy_Broker_Factory_function_pointer (this);
   else
     this->the_TAO_HomeDef_Proxy_Broker_ =
-      ::IR::_TAO_HomeDef_Remote_Proxy_Broker::the_TAO_HomeDef_Remote_Proxy_Broker ();
+      _TAO_HomeDef_Remote_Proxy_Broker::the_TAO_HomeDef_Remote_Proxy_Broker ();
   
   this->IR_InterfaceDef_setup_collocation (collocated);
 }
 
-void IR::HomeDef::_tao_any_destructor (void *x)
+void IR_HomeDef::_tao_any_destructor (void *x)
 {
-  HomeDef *tmp = ACE_static_cast (HomeDef*,x);
+  IR_HomeDef *tmp = ACE_static_cast (IR_HomeDef*,x);
   CORBA::release (tmp);
 }
 
-IR::HomeDef_ptr IR::HomeDef::_narrow (
+IR_HomeDef_ptr IR_HomeDef::_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &ACE_TRY_ENV
   )
 {
   if (CORBA::is_nil (obj))
-    return HomeDef::_nil ();
+    return IR_HomeDef::_nil ();
   if (! obj->_is_local ())
     {
       CORBA::Boolean is_a = obj->_is_a ("IDL:omg.org/IR/HomeDef:1.0", ACE_TRY_ENV);
-      ACE_CHECK_RETURN (HomeDef::_nil ());
+      ACE_CHECK_RETURN (IR_HomeDef::_nil ());
       if (is_a == 0)
-        return HomeDef::_nil ();
+        return IR_HomeDef::_nil ();
     }
-  return HomeDef::_unchecked_narrow (obj, ACE_TRY_ENV);
+  return IR_HomeDef::_unchecked_narrow (obj, ACE_TRY_ENV);
 }
 
-IR::HomeDef_ptr IR::HomeDef::_unchecked_narrow (
+IR_HomeDef_ptr IR_HomeDef::_unchecked_narrow (
     CORBA::Object_ptr obj,
     CORBA::Environment &
   )
 {
   if (CORBA::is_nil (obj))
-    return HomeDef::_nil ();
+    return IR_HomeDef::_nil ();
   if (! obj->_is_local ())
     {
       TAO_Stub* stub = obj->_stubobj ();
       if (stub)
         stub->_incr_refcnt ();
-      HomeDef_ptr default_proxy = HomeDef::_nil ();
+      IR_HomeDef_ptr default_proxy = IR_HomeDef::_nil ();
 
       if (
           !CORBA::is_nil (stub->servant_orb_var ().ptr ()) &&
           stub->servant_orb_var ()->orb_core ()->optimize_collocation_objects () &&
-          obj->_is_collocated () &&IR__TAO_HomeDef_Proxy_Broker_Factory_function_pointer != 0
+          obj->_is_collocated () &&_TAO_HomeDef_Proxy_Broker_Factory_function_pointer != 0
         )
       {
         ACE_NEW_RETURN (
           default_proxy,
-          ::IR::HomeDef (
+          ::IR_HomeDef (
             stub,
             1,
             obj->_servant ()),
             
-          HomeDef::_nil ());
+          IR_HomeDef::_nil ());
         }
       if (CORBA::is_nil (default_proxy))
-        ACE_NEW_RETURN (default_proxy, ::IR::HomeDef (stub, 0, obj->_servant ()), HomeDef::_nil ());
+        ACE_NEW_RETURN (default_proxy, ::IR_HomeDef (stub, 0, obj->_servant ()), IR_HomeDef::_nil ());
         return default_proxy;
       }
     else 
       return
         ACE_reinterpret_cast
           (
-            HomeDef_ptr,
+            IR_HomeDef_ptr,
               obj->_tao_QueryInterface
                 (
                   ACE_reinterpret_cast
                     (
                       ptr_arith_t,
-                      &HomeDef::_narrow
+                      &IR_HomeDef::_narrow
                     )
                 )
           );
 }
 
-IR::HomeDef_ptr
-IR::HomeDef::_duplicate (HomeDef_ptr obj)
+IR_HomeDef_ptr
+IR_HomeDef::_duplicate (IR_HomeDef_ptr obj)
 {
   if (!CORBA::is_nil (obj))
     obj->_add_ref ();
   return obj;
 }
 
-CORBA::Boolean IR::HomeDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
+CORBA::Boolean IR_HomeDef::_is_a (const CORBA::Char *value, CORBA::Environment &ACE_TRY_ENV)
 {
   if (
     (!ACE_OS::strcmp ((char *)value, "IDL:omg.org/IR/HomeDef:1.0")) ||
@@ -54624,70 +53922,70 @@
     return this->CORBA_Object::_is_a (value, ACE_TRY_ENV);
 }
 
-void *IR::HomeDef::_tao_QueryInterface (ptr_arith_t type)
+void *IR_HomeDef::_tao_QueryInterface (ptr_arith_t type)
 {
   void *retv = 0;
   if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, HomeDef)::_narrow))
+      &IR_HomeDef::_narrow))
     retv = ACE_reinterpret_cast (void*, this);
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, InterfaceDef)::_narrow))
+      &IR_InterfaceDef::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::InterfaceDef_ptr,
+            IR_InterfaceDef_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Container)::_narrow))
+      &IR_Container::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Container_ptr,
+            IR_Container_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, Contained)::_narrow))
+      &IR_Contained::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::Contained_ptr,
+            IR_Contained_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &ACE_NESTED_CLASS (::IR, IDLType)::_narrow))
+      &IR_IDLType::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            IR::IDLType_ptr,
+            IR_IDLType_ptr,
             this
           )
       );
   else if (type == ACE_reinterpret_cast
     (ptr_arith_t,
-      &::CORBA::IRObject::_narrow))
+      &CORBA_IRObject::_narrow))
     retv = ACE_reinterpret_cast
       (
         void *,
         ACE_static_cast
           (
-            CORBA::IRObject_ptr,
+            CORBA_IRObject_ptr,
             this
           )
       );
@@ -54700,12 +53998,12 @@
   return retv;
 }
 
-const char* IR::HomeDef::_interface_repository_id (void) const
+const char* IR_HomeDef::_interface_repository_id (void) const
 {
   return "IDL:omg.org/IR/HomeDef:1.0";
 }
 
-IR::HomeDef_ptr IR::HomeDef::base_home (
+IR_HomeDef_ptr IR_HomeDef::base_home (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -54722,7 +54020,7 @@
     );
 }
 
-IR::ComponentDef_ptr IR::HomeDef::managed_component (
+IR_ComponentDef_ptr IR_HomeDef::managed_component (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -54739,7 +54037,7 @@
     );
 }
 
-IR::PrimaryKeyDef_ptr IR::HomeDef::primary_key (
+IR_PrimaryKeyDef_ptr IR_HomeDef::primary_key (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -54756,7 +54054,7 @@
     );
 }
 
-IR::FactoryDefSeq * IR::HomeDef::factories (
+IR_FactoryDefSeq * IR_HomeDef::factories (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -54773,7 +54071,7 @@
     );
 }
 
-IR::FinderDefSeq * IR::HomeDef::finders (
+IR_FinderDefSeq * IR_HomeDef::finders (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -54790,7 +54088,7 @@
     );
 }
 
-CORBA::Boolean IR::HomeDef::is_basic (
+CORBA::Boolean IR_HomeDef::is_basic (
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -54807,11 +54105,11 @@
     );
 }
 
-IR::PrimaryKeyDef_ptr IR::HomeDef::create_primary_key (
+IR_PrimaryKeyDef_ptr IR_HomeDef::create_primary_key (
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr primary_key,
+    IR_ValueDef_ptr primary_key,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -54832,12 +54130,12 @@
     );
 }
 
-IR::FactoryDef_ptr IR::HomeDef::create_factory (
+IR_FactoryDef_ptr IR_HomeDef::create_factory (
     const char * id,
     const char * name,
     const char * version,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
+    const IR_ParDescriptionSeq & params,
+    const IR_ExceptionDefSeq & exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -54859,12 +54157,12 @@
     );
 }
 
-IR::FinderDef_ptr IR::HomeDef::create_finder (
+IR_FinderDef_ptr IR_HomeDef::create_finder (
     const char * id,
     const char * name,
     const char * version,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
+    const IR_ParDescriptionSeq & params,
+    const IR_ExceptionDefSeq & exceptions,
     CORBA::Environment &ACE_TRY_ENV
   )
   ACE_THROW_SPEC ((
@@ -54886,9 +54184,8 @@
     );
 }
 
-
 #if (TAO_HAS_INTERCEPTORS == 1)
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_base_home_get::TAO_ClientRequestInfo_IR_HomeDef_base_home_get (
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_base_home_get::TAO_ClientRequestInfo_IR_HomeDef_base_home_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -54897,7 +54194,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_base_home_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_base_home_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -54909,7 +54206,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_base_home_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_base_home_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -54922,7 +54219,7 @@
 
 
 CORBA::Any * 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_base_home_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_base_home_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -54938,13 +54235,13 @@
 }
 
 void 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_base_home_get::result (IR::HomeDef_ptr result)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_base_home_get::result (IR_HomeDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_managed_component_get::TAO_ClientRequestInfo_IR_HomeDef_managed_component_get (
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_managed_component_get::TAO_ClientRequestInfo_IR_HomeDef_managed_component_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -54953,7 +54250,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_managed_component_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_managed_component_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -54965,7 +54262,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_managed_component_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_managed_component_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -54978,7 +54275,7 @@
 
 
 CORBA::Any * 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_managed_component_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_managed_component_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -54994,13 +54291,13 @@
 }
 
 void 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_managed_component_get::result (IR::ComponentDef_ptr result)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_managed_component_get::result (IR_ComponentDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_primary_key_get::TAO_ClientRequestInfo_IR_HomeDef_primary_key_get (
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_primary_key_get::TAO_ClientRequestInfo_IR_HomeDef_primary_key_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -55009,7 +54306,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_primary_key_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_primary_key_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -55021,7 +54318,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_primary_key_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_primary_key_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -55034,7 +54331,7 @@
 
 
 CORBA::Any * 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_primary_key_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_primary_key_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -55050,13 +54347,13 @@
 }
 
 void 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_primary_key_get::result (IR::PrimaryKeyDef_ptr result)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_primary_key_get::result (IR_PrimaryKeyDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_factories_get::TAO_ClientRequestInfo_IR_HomeDef_factories_get (
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_factories_get::TAO_ClientRequestInfo_IR_HomeDef_factories_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -55065,7 +54362,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_factories_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_factories_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -55077,7 +54374,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_factories_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_factories_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -55090,7 +54387,7 @@
 
 
 CORBA::Any * 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_factories_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_factories_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -55106,13 +54403,13 @@
 }
 
 void 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_factories_get::result (IR::FactoryDefSeq * result)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_factories_get::result (IR_FactoryDefSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_finders_get::TAO_ClientRequestInfo_IR_HomeDef_finders_get (
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_finders_get::TAO_ClientRequestInfo_IR_HomeDef_finders_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -55121,7 +54418,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_finders_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_finders_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -55133,7 +54430,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_finders_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_finders_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -55146,7 +54443,7 @@
 
 
 CORBA::Any * 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_finders_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_finders_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -55162,13 +54459,13 @@
 }
 
 void 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_finders_get::result (IR::FinderDefSeq * result)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_finders_get::result (IR_FinderDefSeq * result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_is_basic_get::TAO_ClientRequestInfo_IR_HomeDef_is_basic_get (
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_is_basic_get::TAO_ClientRequestInfo_IR_HomeDef_is_basic_get (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     CORBA::Environment &    
@@ -55177,7 +54474,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_is_basic_get::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_is_basic_get::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -55189,7 +54486,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_is_basic_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_is_basic_get::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -55202,7 +54499,7 @@
 
 
 CORBA::Any * 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_is_basic_get::result (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_is_basic_get::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -55218,19 +54515,19 @@
 }
 
 void 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_is_basic_get::result (CORBA::Boolean result)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_is_basic_get::result (CORBA::Boolean result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_primary_key::TAO_ClientRequestInfo_IR_HomeDef_create_primary_key (
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_primary_key::TAO_ClientRequestInfo_IR_HomeDef_create_primary_key (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    IR::ValueDef_ptr primary_key,
+    IR_ValueDef_ptr primary_key,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -55241,7 +54538,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_primary_key::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_primary_key::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -55276,7 +54573,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_primary_key::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_primary_key::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -55289,7 +54586,7 @@
 
 
 CORBA::Any * 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_primary_key::result (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_primary_key::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -55305,20 +54602,20 @@
 }
 
 void 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_primary_key::result (IR::PrimaryKeyDef_ptr result)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_primary_key::result (IR_PrimaryKeyDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_factory::TAO_ClientRequestInfo_IR_HomeDef_create_factory (
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_factory::TAO_ClientRequestInfo_IR_HomeDef_create_factory (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
+    const IR_ParDescriptionSeq & params,
+    const IR_ExceptionDefSeq & exceptions,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -55330,7 +54627,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_factory::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_factory::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -55371,7 +54668,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_factory::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_factory::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -55384,7 +54681,7 @@
 
 
 CORBA::Any * 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_factory::result (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_factory::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -55400,20 +54697,20 @@
 }
 
 void 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_factory::result (IR::FactoryDef_ptr result)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_factory::result (IR_FactoryDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_finder::TAO_ClientRequestInfo_IR_HomeDef_create_finder (
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_finder::TAO_ClientRequestInfo_IR_HomeDef_create_finder (
     TAO_GIOP_Invocation *_tao_invocation,
     CORBA::Object_ptr _tao_target,
     const char * id,
     const char * name,
     const char * version,
-    const IR::ParDescriptionSeq & params,
-    const IR::ExceptionDefSeq & exceptions,
+    const IR_ParDescriptionSeq & params,
+    const IR_ExceptionDefSeq & exceptions,
     CORBA::Environment &    
   )
   : TAO_ClientRequestInfo (_tao_invocation, _tao_target),
@@ -55425,7 +54722,7 @@
 {}
 
 Dynamic::ParameterList *
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_finder::arguments (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_finder::arguments (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the argument list on demand.
@@ -55466,7 +54763,7 @@
 }
 
 Dynamic::ExceptionList *
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_finder::exceptions (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_finder::exceptions (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the exception list on demand.
@@ -55479,7 +54776,7 @@
 
 
 CORBA::Any * 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_finder::result (CORBA::Environment &ACE_TRY_ENV)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_finder::result (CORBA::Environment &ACE_TRY_ENV)
   ACE_THROW_SPEC ((CORBA::SystemException))
 {
   // Generate the result on demand.
@@ -55495,24 +54792,26 @@
 }
 
 void 
-IR::HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_finder::result (IR::FinderDef_ptr result)
+IR_HomeDef::TAO_ClientRequestInfo_IR_HomeDef_create_finder::result (IR_FinderDef_ptr result)
 {
   // update the result 
   this->_result = result;
 }
 
 #endif /* TAO_HAS_INTERCEPTORS */
+
 static const CORBA::Long _oc_IR_HomeDef[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
   27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f48), ACE_NTOHL (0x6f6d6544), ACE_NTOHL (0x65663a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/HomeDef:1.0
-  8, ACE_NTOHL (0x486f6d65), ACE_NTOHL (0x44656600),  // name = HomeDef
+  8, ACE_NTOHL (0x486f6d65), ACE_NTOHL (0x44656600),  // name = IR_HomeDef
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_HomeDef (CORBA::tk_objref, sizeof (_oc_IR_HomeDef), (char *) &_oc_IR_HomeDef, 0, sizeof (IR::HomeDef));
+static CORBA::TypeCode _tc_TAO_tc_IR_HomeDef (CORBA::tk_objref, sizeof (_oc_IR_HomeDef), (char *) &_oc_IR_HomeDef, 0, sizeof (IR_HomeDef));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_HomeDef, &_tc_TAO_tc_IR_HomeDef)
 TAO_NAMESPACE_END
+
 static const CORBA::Long _oc_IR_HomeDescription[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -55578,14 +54877,14 @@
   64, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     33, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f50), ACE_NTOHL (0x72696d61), ACE_NTOHL (0x72794b65), ACE_NTOHL (0x79446566), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IR/PrimaryKeyDef:1.0
-    14, ACE_NTOHL (0x5072696d), ACE_NTOHL (0x6172794b), ACE_NTOHL (0x65794465), ACE_NTOHL (0x66000000),  // name = PrimaryKeyDef
+    14, ACE_NTOHL (0x5072696d), ACE_NTOHL (0x6172794b), ACE_NTOHL (0x65794465), ACE_NTOHL (0x66000000),  // name = IR_PrimaryKeyDef
 
   10, ACE_NTOHL (0x66616374), ACE_NTOHL (0x6f726965), ACE_NTOHL (0x73000000),  // name = factories
   CORBA::tk_alias, // typecode kind for typedefs
   144, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     33, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f46), ACE_NTOHL (0x6163746f), ACE_NTOHL (0x72794465), ACE_NTOHL (0x66536571), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IR/FactoryDefSeq:1.0
-    14, ACE_NTOHL (0x46616374), ACE_NTOHL (0x6f727944), ACE_NTOHL (0x65665365), ACE_NTOHL (0x71000000),  // name = FactoryDefSeq
+    14, ACE_NTOHL (0x46616374), ACE_NTOHL (0x6f727944), ACE_NTOHL (0x65665365), ACE_NTOHL (0x71000000),  // name = IR_FactoryDefSeq
     CORBA::tk_sequence, // typecode kind
     72, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
@@ -55593,7 +54892,7 @@
       56, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         30, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f46), ACE_NTOHL (0x6163746f), ACE_NTOHL (0x72794465), ACE_NTOHL (0x663a312e), ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/IR/FactoryDef:1.0
-        11, ACE_NTOHL (0x46616374), ACE_NTOHL (0x6f727944), ACE_NTOHL (0x65660000),  // name = FactoryDef
+        11, ACE_NTOHL (0x46616374), ACE_NTOHL (0x6f727944), ACE_NTOHL (0x65660000),  // name = IR_FactoryDef
 
       0U,
 
@@ -55603,7 +54902,7 @@
   140, // encapsulation length
     TAO_ENCAP_BYTE_ORDER, // byte order
     32, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f46), ACE_NTOHL (0x696e6465), ACE_NTOHL (0x72446566), ACE_NTOHL (0x5365713a), ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/IR/FinderDefSeq:1.0
-    13, ACE_NTOHL (0x46696e64), ACE_NTOHL (0x65724465), ACE_NTOHL (0x66536571), ACE_NTOHL (0x0),  // name = FinderDefSeq
+    13, ACE_NTOHL (0x46696e64), ACE_NTOHL (0x65724465), ACE_NTOHL (0x66536571), ACE_NTOHL (0x0),  // name = IR_FinderDefSeq
     CORBA::tk_sequence, // typecode kind
     72, // encapsulation length
       TAO_ENCAP_BYTE_ORDER, // byte order
@@ -55611,7 +54910,7 @@
       56, // encapsulation length
         TAO_ENCAP_BYTE_ORDER, // byte order
         29, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f46), ACE_NTOHL (0x696e6465), ACE_NTOHL (0x72446566), ACE_NTOHL (0x3a312e30), ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/IR/FinderDef:1.0
-        10, ACE_NTOHL (0x46696e64), ACE_NTOHL (0x65724465), ACE_NTOHL (0x66000000),  // name = FinderDef
+        10, ACE_NTOHL (0x46696e64), ACE_NTOHL (0x65724465), ACE_NTOHL (0x66000000),  // name = IR_FinderDef
 
       0U,
 
@@ -55738,7 +55037,7 @@
               48, // encapsulation length
                 TAO_ENCAP_BYTE_ORDER, // byte order
                 27, ACE_NTOHL (0x49444c3a), ACE_NTOHL (0x6f6d672e), ACE_NTOHL (0x6f72672f), ACE_NTOHL (0x49522f49), ACE_NTOHL (0x444c5479), ACE_NTOHL (0x70653a31), ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/IR/IDLType:1.0
-                8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IDLType
+                8, ACE_NTOHL (0x49444c54), ACE_NTOHL (0x79706500),  // name = IR_IDLType
 
               5, ACE_NTOHL (0x6d6f6465), ACE_NTOHL (0x0),  // name = mode
               CORBA::tk_enum, // typecode kind
@@ -56005,18 +55304,19 @@
   CORBA::tk_boolean,
 
 };
-static CORBA::TypeCode _tc_TAO_tc_IR_HomeDescription (CORBA::tk_struct, sizeof (_oc_IR_HomeDescription), (char *) &_oc_IR_HomeDescription, 0, sizeof (IR::HomeDescription));
+static CORBA::TypeCode _tc_TAO_tc_IR_HomeDescription (CORBA::tk_struct, sizeof (_oc_IR_HomeDescription), (char *) &_oc_IR_HomeDescription, 0, sizeof (IR_HomeDescription));
 TAO_NAMESPACE_TYPE (CORBA::TypeCode_ptr)
 TAO_NAMESPACE_BEGIN (IR)
 TAO_NAMESPACE_DEFINE (CORBA::TypeCode_ptr, _tc_HomeDescription, &_tc_TAO_tc_IR_HomeDescription)
 TAO_NAMESPACE_END
-void IR::HomeDescription::_tao_any_destructor (void *x)
+
+void IR_HomeDescription::_tao_any_destructor (void *x)
 {
-  HomeDescription *tmp = ACE_static_cast (HomeDescription*,x);
+  IR_HomeDescription *tmp = ACE_static_cast (IR_HomeDescription*,x);
   delete tmp;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::DefinitionKind _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_DefinitionKind _tao_elem)
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -56027,18 +55327,16 @@
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::DefinitionKind &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_DefinitionKind &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_DefinitionKind, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_DefinitionKind, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -56056,7 +55354,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, CORBA::IRObject_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, CORBA_IRObject_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -56066,25 +55364,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        CORBA::IRObject::_duplicate (_tao_elem),
-        CORBA::IRObject::_tao_any_destructor
+        CORBA_IRObject::_duplicate (_tao_elem),
+        CORBA_IRObject::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, CORBA::IRObject_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, CORBA_IRObject_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = CORBA::IRObject::_nil ();
+    _tao_elem = CORBA_IRObject::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (CORBA::_tc_IRObject, ACE_TRY_ENV);
+    if (!type->equivalent (CORBA::_tc_IRObject, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -56095,29 +55391,29 @@
           CORBA::_tc_IRObject,
           1,
           _tao_elem,
-          CORBA::IRObject::_tao_any_destructor
+          CORBA_IRObject::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = CORBA::IRObject::_nil ();
+    _tao_elem = CORBA_IRObject::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = CORBA::IRObject::_nil ();
+  _tao_elem = CORBA_IRObject::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<CORBA::IRObject,CORBA::IRObject_var>;
+    template class TAO_Object_Manager<CORBA_IRObject,CORBA_IRObject_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<CORBA::IRObject,CORBA::IRObject_var>
+  #  pragma instantiate TAO_Object_Manager<CORBA_IRObject,CORBA_IRObject_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::Contained_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_Contained_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -56127,25 +55423,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::Contained::_duplicate (_tao_elem),
-        IR::Contained::_tao_any_destructor
+        IR_Contained::_duplicate (_tao_elem),
+        IR_Contained::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::Contained_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_Contained_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::Contained::_nil ();
+    _tao_elem = IR_Contained::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_Contained, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_Contained, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -56156,83 +55450,81 @@
           IR::_tc_Contained,
           1,
           _tao_elem,
-          IR::Contained::_tao_any_destructor
+          IR_Contained::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::Contained::_nil ();
+    _tao_elem = IR_Contained::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::Contained::_nil ();
+  _tao_elem = IR_Contained::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::Contained,IR::Contained_var>;
+    template class TAO_Object_Manager<IR_Contained,IR_Contained_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::Contained,IR::Contained_var>
+  #  pragma instantiate TAO_Object_Manager<IR_Contained,IR_Contained_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, const IR::Contained::Description &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_Contained::Description &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
   _tao_any._tao_replace (
-      IR::Contained::_tc_Description,
+      IR_Contained::_tc_Description,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin ()
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::Contained::Description *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_Contained::Description *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      IR::Contained::_tc_Description,
+      IR_Contained::_tc_Description,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
       _tao_elem,
-      IR::Contained::Description::_tao_any_destructor
+      IR_Contained::Description::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::Contained::Description *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_Contained::Description *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::Contained::Description*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_Contained::Description*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::Contained::Description *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_Contained::Description *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::Contained::_tc_Description, ACE_TRY_ENV);
+    if (!type->equivalent (IR_Contained::_tc_Description, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::Contained::Description*,
+          const IR_Contained::Description*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::Contained::Description *tmp;
-      ACE_NEW_RETURN (tmp, IR::Contained::Description, 0);
+      IR_Contained::Description *tmp;
+      ACE_NEW_RETURN (tmp, IR_Contained::Description, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -56240,10 +55532,10 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            IR::Contained::_tc_Description,
+            IR_Contained::_tc_Description,
             1,
             ACE_static_cast (void *, tmp),
-            IR::Contained::Description::_tao_any_destructor
+            IR_Contained::Description::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -56263,7 +55555,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::InterfaceDefSeq &_tao_elem
+    const IR_InterfaceDefSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -56277,7 +55569,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::InterfaceDefSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_InterfaceDefSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -56287,43 +55579,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::InterfaceDefSeq::_tao_any_destructor
+      IR_InterfaceDefSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::InterfaceDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_InterfaceDefSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::InterfaceDefSeq*&,
+      const IR_InterfaceDefSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::InterfaceDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_InterfaceDefSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_InterfaceDefSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_InterfaceDefSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::InterfaceDefSeq*,
+          const IR_InterfaceDefSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::InterfaceDefSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::InterfaceDefSeq, 0);
+      IR_InterfaceDefSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_InterfaceDefSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -56334,7 +55624,7 @@
             IR::_tc_InterfaceDefSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::InterfaceDefSeq::_tao_any_destructor
+            IR_InterfaceDefSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -56354,7 +55644,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::ValueDefSeq &_tao_elem
+    const IR_ValueDefSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -56368,7 +55658,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ValueDefSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ValueDefSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -56378,43 +55668,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ValueDefSeq::_tao_any_destructor
+      IR_ValueDefSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ValueDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ValueDefSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::ValueDefSeq*&,
+      const IR_ValueDefSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ValueDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ValueDefSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ValueDefSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ValueDefSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ValueDefSeq*,
+          const IR_ValueDefSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ValueDefSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::ValueDefSeq, 0);
+      IR_ValueDefSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_ValueDefSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -56425,7 +55713,7 @@
             IR::_tc_ValueDefSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ValueDefSeq::_tao_any_destructor
+            IR_ValueDefSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -56445,7 +55733,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::ComponentDefSeq &_tao_elem
+    const IR_ComponentDefSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -56459,7 +55747,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ComponentDefSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ComponentDefSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -56469,43 +55757,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ComponentDefSeq::_tao_any_destructor
+      IR_ComponentDefSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ComponentDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ComponentDefSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::ComponentDefSeq*&,
+      const IR_ComponentDefSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ComponentDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ComponentDefSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ComponentDefSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ComponentDefSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ComponentDefSeq*,
+          const IR_ComponentDefSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ComponentDefSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::ComponentDefSeq, 0);
+      IR_ComponentDefSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_ComponentDefSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -56516,7 +55802,7 @@
             IR::_tc_ComponentDefSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ComponentDefSeq::_tao_any_destructor
+            IR_ComponentDefSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -56536,7 +55822,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::ProvidesDefSeq &_tao_elem
+    const IR_ProvidesDefSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -56550,7 +55836,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ProvidesDefSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ProvidesDefSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -56560,43 +55846,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ProvidesDefSeq::_tao_any_destructor
+      IR_ProvidesDefSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ProvidesDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ProvidesDefSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::ProvidesDefSeq*&,
+      const IR_ProvidesDefSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ProvidesDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ProvidesDefSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ProvidesDefSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ProvidesDefSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ProvidesDefSeq*,
+          const IR_ProvidesDefSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ProvidesDefSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::ProvidesDefSeq, 0);
+      IR_ProvidesDefSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_ProvidesDefSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -56607,7 +55891,7 @@
             IR::_tc_ProvidesDefSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ProvidesDefSeq::_tao_any_destructor
+            IR_ProvidesDefSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -56627,7 +55911,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::UsesDefSeq &_tao_elem
+    const IR_UsesDefSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -56641,7 +55925,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::UsesDefSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_UsesDefSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -56651,43 +55935,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::UsesDefSeq::_tao_any_destructor
+      IR_UsesDefSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::UsesDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_UsesDefSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::UsesDefSeq*&,
+      const IR_UsesDefSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::UsesDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_UsesDefSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_UsesDefSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_UsesDefSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::UsesDefSeq*,
+          const IR_UsesDefSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::UsesDefSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::UsesDefSeq, 0);
+      IR_UsesDefSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_UsesDefSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -56698,7 +55980,7 @@
             IR::_tc_UsesDefSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::UsesDefSeq::_tao_any_destructor
+            IR_UsesDefSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -56718,7 +56000,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::HomeDefSeq &_tao_elem
+    const IR_HomeDefSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -56732,7 +56014,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::HomeDefSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_HomeDefSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -56742,43 +56024,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::HomeDefSeq::_tao_any_destructor
+      IR_HomeDefSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::HomeDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_HomeDefSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::HomeDefSeq*&,
+      const IR_HomeDefSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::HomeDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_HomeDefSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_HomeDefSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_HomeDefSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::HomeDefSeq*,
+          const IR_HomeDefSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::HomeDefSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::HomeDefSeq, 0);
+      IR_HomeDefSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_HomeDefSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -56789,7 +56069,7 @@
             IR::_tc_HomeDefSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::HomeDefSeq::_tao_any_destructor
+            IR_HomeDefSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -56809,7 +56089,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::EmitsDefSeq &_tao_elem
+    const IR_EmitsDefSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -56823,7 +56103,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::EmitsDefSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_EmitsDefSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -56833,43 +56113,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::EmitsDefSeq::_tao_any_destructor
+      IR_EmitsDefSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::EmitsDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_EmitsDefSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::EmitsDefSeq*&,
+      const IR_EmitsDefSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::EmitsDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_EmitsDefSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_EmitsDefSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_EmitsDefSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::EmitsDefSeq*,
+          const IR_EmitsDefSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::EmitsDefSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::EmitsDefSeq, 0);
+      IR_EmitsDefSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_EmitsDefSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -56880,7 +56158,7 @@
             IR::_tc_EmitsDefSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::EmitsDefSeq::_tao_any_destructor
+            IR_EmitsDefSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -56900,7 +56178,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::PublishesDefSeq &_tao_elem
+    const IR_PublishesDefSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -56914,7 +56192,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::PublishesDefSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_PublishesDefSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -56924,43 +56202,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::PublishesDefSeq::_tao_any_destructor
+      IR_PublishesDefSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::PublishesDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_PublishesDefSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::PublishesDefSeq*&,
+      const IR_PublishesDefSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::PublishesDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_PublishesDefSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_PublishesDefSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_PublishesDefSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::PublishesDefSeq*,
+          const IR_PublishesDefSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::PublishesDefSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::PublishesDefSeq, 0);
+      IR_PublishesDefSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_PublishesDefSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -56971,7 +56247,7 @@
             IR::_tc_PublishesDefSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::PublishesDefSeq::_tao_any_destructor
+            IR_PublishesDefSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -56991,7 +56267,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::ConsumesDefSeq &_tao_elem
+    const IR_ConsumesDefSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -57005,7 +56281,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ConsumesDefSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ConsumesDefSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -57015,43 +56291,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ConsumesDefSeq::_tao_any_destructor
+      IR_ConsumesDefSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ConsumesDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ConsumesDefSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::ConsumesDefSeq*&,
+      const IR_ConsumesDefSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ConsumesDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ConsumesDefSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ConsumesDefSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ConsumesDefSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ConsumesDefSeq*,
+          const IR_ConsumesDefSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ConsumesDefSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::ConsumesDefSeq, 0);
+      IR_ConsumesDefSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_ConsumesDefSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -57062,7 +56336,7 @@
             IR::_tc_ConsumesDefSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ConsumesDefSeq::_tao_any_destructor
+            IR_ConsumesDefSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -57082,7 +56356,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::FactoryDefSeq &_tao_elem
+    const IR_FactoryDefSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -57096,7 +56370,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::FactoryDefSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_FactoryDefSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -57106,43 +56380,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::FactoryDefSeq::_tao_any_destructor
+      IR_FactoryDefSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::FactoryDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_FactoryDefSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::FactoryDefSeq*&,
+      const IR_FactoryDefSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::FactoryDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_FactoryDefSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_FactoryDefSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_FactoryDefSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::FactoryDefSeq*,
+          const IR_FactoryDefSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::FactoryDefSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::FactoryDefSeq, 0);
+      IR_FactoryDefSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_FactoryDefSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -57153,7 +56425,7 @@
             IR::_tc_FactoryDefSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::FactoryDefSeq::_tao_any_destructor
+            IR_FactoryDefSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -57173,7 +56445,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::FinderDefSeq &_tao_elem
+    const IR_FinderDefSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -57187,7 +56459,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::FinderDefSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_FinderDefSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -57197,43 +56469,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::FinderDefSeq::_tao_any_destructor
+      IR_FinderDefSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::FinderDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_FinderDefSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::FinderDefSeq*&,
+      const IR_FinderDefSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::FinderDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_FinderDefSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_FinderDefSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_FinderDefSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::FinderDefSeq*,
+          const IR_FinderDefSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::FinderDefSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::FinderDefSeq, 0);
+      IR_FinderDefSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_FinderDefSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -57244,7 +56514,7 @@
             IR::_tc_FinderDefSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::FinderDefSeq::_tao_any_destructor
+            IR_FinderDefSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -57264,7 +56534,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::ContainedSeq &_tao_elem
+    const IR_ContainedSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -57278,7 +56548,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ContainedSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ContainedSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -57288,43 +56558,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ContainedSeq::_tao_any_destructor
+      IR_ContainedSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ContainedSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ContainedSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::ContainedSeq*&,
+      const IR_ContainedSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ContainedSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ContainedSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ContainedSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ContainedSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ContainedSeq*,
+          const IR_ContainedSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ContainedSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::ContainedSeq, 0);
+      IR_ContainedSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_ContainedSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -57335,7 +56603,7 @@
             IR::_tc_ContainedSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ContainedSeq::_tao_any_destructor
+            IR_ContainedSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -57353,7 +56621,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, const IR::StructMember &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_StructMember &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -57364,7 +56632,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::StructMember *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_StructMember *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -57374,40 +56642,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::StructMember::_tao_any_destructor
+      IR_StructMember::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::StructMember *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_StructMember *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::StructMember*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_StructMember*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::StructMember *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_StructMember *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_StructMember, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_StructMember, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::StructMember*,
+          const IR_StructMember*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::StructMember *tmp;
-      ACE_NEW_RETURN (tmp, IR::StructMember, 0);
+      IR_StructMember *tmp;
+      ACE_NEW_RETURN (tmp, IR_StructMember, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -57418,7 +56684,7 @@
             IR::_tc_StructMember,
             1,
             ACE_static_cast (void *, tmp),
-            IR::StructMember::_tao_any_destructor
+            IR_StructMember::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -57438,7 +56704,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::StructMemberSeq &_tao_elem
+    const IR_StructMemberSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -57452,7 +56718,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::StructMemberSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_StructMemberSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -57462,43 +56728,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::StructMemberSeq::_tao_any_destructor
+      IR_StructMemberSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::StructMemberSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_StructMemberSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::StructMemberSeq*&,
+      const IR_StructMemberSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::StructMemberSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_StructMemberSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_StructMemberSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_StructMemberSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::StructMemberSeq*,
+          const IR_StructMemberSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::StructMemberSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::StructMemberSeq, 0);
+      IR_StructMemberSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_StructMemberSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -57509,7 +56773,7 @@
             IR::_tc_StructMemberSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::StructMemberSeq::_tao_any_destructor
+            IR_StructMemberSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -57527,7 +56791,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, const IR::Initializer &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_Initializer &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -57538,7 +56802,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::Initializer *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_Initializer *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -57548,40 +56812,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::Initializer::_tao_any_destructor
+      IR_Initializer::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::Initializer *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_Initializer *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::Initializer*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_Initializer*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::Initializer *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_Initializer *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_Initializer, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_Initializer, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::Initializer*,
+          const IR_Initializer*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::Initializer *tmp;
-      ACE_NEW_RETURN (tmp, IR::Initializer, 0);
+      IR_Initializer *tmp;
+      ACE_NEW_RETURN (tmp, IR_Initializer, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -57592,7 +56854,7 @@
             IR::_tc_Initializer,
             1,
             ACE_static_cast (void *, tmp),
-            IR::Initializer::_tao_any_destructor
+            IR_Initializer::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -57612,7 +56874,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::InitializerSeq &_tao_elem
+    const IR_InitializerSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -57626,7 +56888,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::InitializerSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_InitializerSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -57636,43 +56898,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::InitializerSeq::_tao_any_destructor
+      IR_InitializerSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::InitializerSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_InitializerSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::InitializerSeq*&,
+      const IR_InitializerSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::InitializerSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_InitializerSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_InitializerSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_InitializerSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::InitializerSeq*,
+          const IR_InitializerSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::InitializerSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::InitializerSeq, 0);
+      IR_InitializerSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_InitializerSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -57683,7 +56943,7 @@
             IR::_tc_InitializerSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::InitializerSeq::_tao_any_destructor
+            IR_InitializerSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -57701,7 +56961,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, const IR::UnionMember &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_UnionMember &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -57712,7 +56972,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::UnionMember *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_UnionMember *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -57722,40 +56982,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::UnionMember::_tao_any_destructor
+      IR_UnionMember::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::UnionMember *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_UnionMember *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::UnionMember*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_UnionMember*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::UnionMember *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_UnionMember *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_UnionMember, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_UnionMember, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::UnionMember*,
+          const IR_UnionMember*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::UnionMember *tmp;
-      ACE_NEW_RETURN (tmp, IR::UnionMember, 0);
+      IR_UnionMember *tmp;
+      ACE_NEW_RETURN (tmp, IR_UnionMember, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -57766,7 +57024,7 @@
             IR::_tc_UnionMember,
             1,
             ACE_static_cast (void *, tmp),
-            IR::UnionMember::_tao_any_destructor
+            IR_UnionMember::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -57786,7 +57044,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::UnionMemberSeq &_tao_elem
+    const IR_UnionMemberSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -57800,7 +57058,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::UnionMemberSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_UnionMemberSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -57810,43 +57068,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::UnionMemberSeq::_tao_any_destructor
+      IR_UnionMemberSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::UnionMemberSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_UnionMemberSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::UnionMemberSeq*&,
+      const IR_UnionMemberSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::UnionMemberSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_UnionMemberSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_UnionMemberSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_UnionMemberSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::UnionMemberSeq*,
+          const IR_UnionMemberSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::UnionMemberSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::UnionMemberSeq, 0);
+      IR_UnionMemberSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_UnionMemberSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -57857,7 +57113,7 @@
             IR::_tc_UnionMemberSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::UnionMemberSeq::_tao_any_destructor
+            IR_UnionMemberSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -57877,7 +57133,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::EnumMemberSeq &_tao_elem
+    const IR_EnumMemberSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -57891,7 +57147,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::EnumMemberSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_EnumMemberSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -57901,43 +57157,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::EnumMemberSeq::_tao_any_destructor
+      IR_EnumMemberSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::EnumMemberSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_EnumMemberSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::EnumMemberSeq*&,
+      const IR_EnumMemberSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::EnumMemberSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_EnumMemberSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_EnumMemberSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_EnumMemberSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::EnumMemberSeq*,
+          const IR_EnumMemberSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::EnumMemberSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::EnumMemberSeq, 0);
+      IR_EnumMemberSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_EnumMemberSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -57948,7 +57202,7 @@
             IR::_tc_EnumMemberSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::EnumMemberSeq::_tao_any_destructor
+            IR_EnumMemberSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -57966,7 +57220,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::Container_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_Container_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -57976,25 +57230,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::Container::_duplicate (_tao_elem),
-        IR::Container::_tao_any_destructor
+        IR_Container::_duplicate (_tao_elem),
+        IR_Container::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::Container_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_Container_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::Container::_nil ();
+    _tao_elem = IR_Container::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_Container, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_Container, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -58005,83 +57257,81 @@
           IR::_tc_Container,
           1,
           _tao_elem,
-          IR::Container::_tao_any_destructor
+          IR_Container::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::Container::_nil ();
+    _tao_elem = IR_Container::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::Container::_nil ();
+  _tao_elem = IR_Container::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::Container,IR::Container_var>;
+    template class TAO_Object_Manager<IR_Container,IR_Container_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::Container,IR::Container_var>
+  #  pragma instantiate TAO_Object_Manager<IR_Container,IR_Container_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, const IR::Container::Description &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_Container::Description &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
   _tao_any._tao_replace (
-      IR::Container::_tc_Description,
+      IR_Container::_tc_Description,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin ()
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::Container::Description *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_Container::Description *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      IR::Container::_tc_Description,
+      IR_Container::_tc_Description,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
       _tao_elem,
-      IR::Container::Description::_tao_any_destructor
+      IR_Container::Description::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::Container::Description *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_Container::Description *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::Container::Description*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_Container::Description*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::Container::Description *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_Container::Description *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::Container::_tc_Description, ACE_TRY_ENV);
+    if (!type->equivalent (IR_Container::_tc_Description, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::Container::Description*,
+          const IR_Container::Description*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::Container::Description *tmp;
-      ACE_NEW_RETURN (tmp, IR::Container::Description, 0);
+      IR_Container::Description *tmp;
+      ACE_NEW_RETURN (tmp, IR_Container::Description, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -58089,10 +57339,10 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            IR::Container::_tc_Description,
+            IR_Container::_tc_Description,
             1,
             ACE_static_cast (void *, tmp),
-            IR::Container::Description::_tao_any_destructor
+            IR_Container::Description::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -58112,67 +57362,65 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::Container::DescriptionSeq &_tao_elem
+    const IR_Container::DescriptionSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
   {
     _tao_any._tao_replace (
-        IR::Container::_tc_DescriptionSeq,
+        IR_Container::_tc_DescriptionSeq,
         TAO_ENCAP_BYTE_ORDER,
         stream.begin ()
       );
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::Container::DescriptionSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_Container::DescriptionSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
   _tao_any._tao_replace (
-      IR::Container::_tc_DescriptionSeq,
+      IR_Container::_tc_DescriptionSeq,
       TAO_ENCAP_BYTE_ORDER,
       stream.begin (),
       1,
       _tao_elem,
-      IR::Container::DescriptionSeq::_tao_any_destructor
+      IR_Container::DescriptionSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::Container::DescriptionSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_Container::DescriptionSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::Container::DescriptionSeq*&,
+      const IR_Container::DescriptionSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::Container::DescriptionSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_Container::DescriptionSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::Container::_tc_DescriptionSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR_Container::_tc_DescriptionSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::Container::DescriptionSeq*,
+          const IR_Container::DescriptionSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::Container::DescriptionSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::Container::DescriptionSeq, 0);
+      IR_Container::DescriptionSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_Container::DescriptionSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -58180,10 +57428,10 @@
       if (stream >> *tmp)
       {
         ((CORBA::Any *)&_tao_any)->_tao_replace (
-            IR::Container::_tc_DescriptionSeq,
+            IR_Container::_tc_DescriptionSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::Container::DescriptionSeq::_tao_any_destructor
+            IR_Container::DescriptionSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -58201,7 +57449,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::IDLType_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_IDLType_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -58211,25 +57459,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::IDLType::_duplicate (_tao_elem),
-        IR::IDLType::_tao_any_destructor
+        IR_IDLType::_duplicate (_tao_elem),
+        IR_IDLType::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::IDLType_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_IDLType_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::IDLType::_nil ();
+    _tao_elem = IR_IDLType::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_IDLType, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_IDLType, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -58240,29 +57486,29 @@
           IR::_tc_IDLType,
           1,
           _tao_elem,
-          IR::IDLType::_tao_any_destructor
+          IR_IDLType::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::IDLType::_nil ();
+    _tao_elem = IR_IDLType::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::IDLType::_nil ();
+  _tao_elem = IR_IDLType::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::IDLType,IR::IDLType_var>;
+    template class TAO_Object_Manager<IR_IDLType,IR_IDLType_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::IDLType,IR::IDLType_var>
+  #  pragma instantiate TAO_Object_Manager<IR_IDLType,IR_IDLType_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::PrimitiveKind _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_PrimitiveKind _tao_elem)
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -58273,18 +57519,16 @@
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::PrimitiveKind &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_PrimitiveKind &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_PrimitiveKind, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_PrimitiveKind, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -58302,7 +57546,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::Repository_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_Repository_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -58312,25 +57556,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::Repository::_duplicate (_tao_elem),
-        IR::Repository::_tao_any_destructor
+        IR_Repository::_duplicate (_tao_elem),
+        IR_Repository::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::Repository_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_Repository_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::Repository::_nil ();
+    _tao_elem = IR_Repository::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_Repository, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_Repository, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -58341,29 +57583,29 @@
           IR::_tc_Repository,
           1,
           _tao_elem,
-          IR::Repository::_tao_any_destructor
+          IR_Repository::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::Repository::_nil ();
+    _tao_elem = IR_Repository::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::Repository::_nil ();
+  _tao_elem = IR_Repository::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::Repository,IR::Repository_var>;
+    template class TAO_Object_Manager<IR_Repository,IR_Repository_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::Repository,IR::Repository_var>
+  #  pragma instantiate TAO_Object_Manager<IR_Repository,IR_Repository_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::ComponentRepository_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_ComponentRepository_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -58373,25 +57615,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::ComponentRepository::_duplicate (_tao_elem),
-        IR::ComponentRepository::_tao_any_destructor
+        IR_ComponentRepository::_duplicate (_tao_elem),
+        IR_ComponentRepository::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ComponentRepository_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ComponentRepository_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::ComponentRepository::_nil ();
+    _tao_elem = IR_ComponentRepository::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ComponentRepository, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ComponentRepository, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -58402,29 +57642,29 @@
           IR::_tc_ComponentRepository,
           1,
           _tao_elem,
-          IR::ComponentRepository::_tao_any_destructor
+          IR_ComponentRepository::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::ComponentRepository::_nil ();
+    _tao_elem = IR_ComponentRepository::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::ComponentRepository::_nil ();
+  _tao_elem = IR_ComponentRepository::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::ComponentRepository,IR::ComponentRepository_var>;
+    template class TAO_Object_Manager<IR_ComponentRepository,IR_ComponentRepository_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::ComponentRepository,IR::ComponentRepository_var>
+  #  pragma instantiate TAO_Object_Manager<IR_ComponentRepository,IR_ComponentRepository_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::ModuleDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_ModuleDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -58434,25 +57674,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::ModuleDef::_duplicate (_tao_elem),
-        IR::ModuleDef::_tao_any_destructor
+        IR_ModuleDef::_duplicate (_tao_elem),
+        IR_ModuleDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ModuleDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ModuleDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::ModuleDef::_nil ();
+    _tao_elem = IR_ModuleDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ModuleDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ModuleDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -58463,29 +57701,29 @@
           IR::_tc_ModuleDef,
           1,
           _tao_elem,
-          IR::ModuleDef::_tao_any_destructor
+          IR_ModuleDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::ModuleDef::_nil ();
+    _tao_elem = IR_ModuleDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::ModuleDef::_nil ();
+  _tao_elem = IR_ModuleDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::ModuleDef,IR::ModuleDef_var>;
+    template class TAO_Object_Manager<IR_ModuleDef,IR_ModuleDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::ModuleDef,IR::ModuleDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_ModuleDef,IR_ModuleDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, const IR::ModuleDescription &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_ModuleDescription &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -58496,7 +57734,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ModuleDescription *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ModuleDescription *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -58506,40 +57744,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ModuleDescription::_tao_any_destructor
+      IR_ModuleDescription::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ModuleDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ModuleDescription *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::ModuleDescription*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_ModuleDescription*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ModuleDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ModuleDescription *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ModuleDescription, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ModuleDescription, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ModuleDescription*,
+          const IR_ModuleDescription*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ModuleDescription *tmp;
-      ACE_NEW_RETURN (tmp, IR::ModuleDescription, 0);
+      IR_ModuleDescription *tmp;
+      ACE_NEW_RETURN (tmp, IR_ModuleDescription, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -58550,7 +57786,7 @@
             IR::_tc_ModuleDescription,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ModuleDescription::_tao_any_destructor
+            IR_ModuleDescription::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -58568,7 +57804,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ConstantDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_ConstantDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -58578,25 +57814,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::ConstantDef::_duplicate (_tao_elem),
-        IR::ConstantDef::_tao_any_destructor
+        IR_ConstantDef::_duplicate (_tao_elem),
+        IR_ConstantDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ConstantDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ConstantDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::ConstantDef::_nil ();
+    _tao_elem = IR_ConstantDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ConstantDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ConstantDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -58607,29 +57841,29 @@
           IR::_tc_ConstantDef,
           1,
           _tao_elem,
-          IR::ConstantDef::_tao_any_destructor
+          IR_ConstantDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::ConstantDef::_nil ();
+    _tao_elem = IR_ConstantDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::ConstantDef::_nil ();
+  _tao_elem = IR_ConstantDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::ConstantDef,IR::ConstantDef_var>;
+    template class TAO_Object_Manager<IR_ConstantDef,IR_ConstantDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::ConstantDef,IR::ConstantDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_ConstantDef,IR_ConstantDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, const IR::ConstantDescription &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_ConstantDescription &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -58640,7 +57874,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ConstantDescription *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ConstantDescription *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -58650,40 +57884,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ConstantDescription::_tao_any_destructor
+      IR_ConstantDescription::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ConstantDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ConstantDescription *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::ConstantDescription*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_ConstantDescription*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ConstantDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ConstantDescription *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ConstantDescription, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ConstantDescription, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ConstantDescription*,
+          const IR_ConstantDescription*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ConstantDescription *tmp;
-      ACE_NEW_RETURN (tmp, IR::ConstantDescription, 0);
+      IR_ConstantDescription *tmp;
+      ACE_NEW_RETURN (tmp, IR_ConstantDescription, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -58694,7 +57926,7 @@
             IR::_tc_ConstantDescription,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ConstantDescription::_tao_any_destructor
+            IR_ConstantDescription::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -58712,7 +57944,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::TypedefDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_TypedefDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -58722,25 +57954,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::TypedefDef::_duplicate (_tao_elem),
-        IR::TypedefDef::_tao_any_destructor
+        IR_TypedefDef::_duplicate (_tao_elem),
+        IR_TypedefDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::TypedefDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_TypedefDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::TypedefDef::_nil ();
+    _tao_elem = IR_TypedefDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_TypedefDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_TypedefDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -58751,29 +57981,29 @@
           IR::_tc_TypedefDef,
           1,
           _tao_elem,
-          IR::TypedefDef::_tao_any_destructor
+          IR_TypedefDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::TypedefDef::_nil ();
+    _tao_elem = IR_TypedefDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::TypedefDef::_nil ();
+  _tao_elem = IR_TypedefDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::TypedefDef,IR::TypedefDef_var>;
+    template class TAO_Object_Manager<IR_TypedefDef,IR_TypedefDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::TypedefDef,IR::TypedefDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_TypedefDef,IR_TypedefDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, const IR::TypeDescription &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_TypeDescription &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -58784,7 +58014,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::TypeDescription *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_TypeDescription *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -58794,40 +58024,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::TypeDescription::_tao_any_destructor
+      IR_TypeDescription::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::TypeDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_TypeDescription *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::TypeDescription*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_TypeDescription*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::TypeDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_TypeDescription *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_TypeDescription, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_TypeDescription, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::TypeDescription*,
+          const IR_TypeDescription*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::TypeDescription *tmp;
-      ACE_NEW_RETURN (tmp, IR::TypeDescription, 0);
+      IR_TypeDescription *tmp;
+      ACE_NEW_RETURN (tmp, IR_TypeDescription, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -58838,7 +58066,7 @@
             IR::_tc_TypeDescription,
             1,
             ACE_static_cast (void *, tmp),
-            IR::TypeDescription::_tao_any_destructor
+            IR_TypeDescription::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -58856,7 +58084,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::StructDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_StructDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -58866,25 +58094,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::StructDef::_duplicate (_tao_elem),
-        IR::StructDef::_tao_any_destructor
+        IR_StructDef::_duplicate (_tao_elem),
+        IR_StructDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::StructDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_StructDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::StructDef::_nil ();
+    _tao_elem = IR_StructDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_StructDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_StructDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -58895,29 +58121,29 @@
           IR::_tc_StructDef,
           1,
           _tao_elem,
-          IR::StructDef::_tao_any_destructor
+          IR_StructDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::StructDef::_nil ();
+    _tao_elem = IR_StructDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::StructDef::_nil ();
+  _tao_elem = IR_StructDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::StructDef,IR::StructDef_var>;
+    template class TAO_Object_Manager<IR_StructDef,IR_StructDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::StructDef,IR::StructDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_StructDef,IR_StructDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::UnionDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_UnionDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -58927,25 +58153,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::UnionDef::_duplicate (_tao_elem),
-        IR::UnionDef::_tao_any_destructor
+        IR_UnionDef::_duplicate (_tao_elem),
+        IR_UnionDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::UnionDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_UnionDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::UnionDef::_nil ();
+    _tao_elem = IR_UnionDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_UnionDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_UnionDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -58956,29 +58180,29 @@
           IR::_tc_UnionDef,
           1,
           _tao_elem,
-          IR::UnionDef::_tao_any_destructor
+          IR_UnionDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::UnionDef::_nil ();
+    _tao_elem = IR_UnionDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::UnionDef::_nil ();
+  _tao_elem = IR_UnionDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::UnionDef,IR::UnionDef_var>;
+    template class TAO_Object_Manager<IR_UnionDef,IR_UnionDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::UnionDef,IR::UnionDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_UnionDef,IR_UnionDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::EnumDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_EnumDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -58988,25 +58212,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::EnumDef::_duplicate (_tao_elem),
-        IR::EnumDef::_tao_any_destructor
+        IR_EnumDef::_duplicate (_tao_elem),
+        IR_EnumDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::EnumDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_EnumDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::EnumDef::_nil ();
+    _tao_elem = IR_EnumDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_EnumDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_EnumDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -59017,29 +58239,29 @@
           IR::_tc_EnumDef,
           1,
           _tao_elem,
-          IR::EnumDef::_tao_any_destructor
+          IR_EnumDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::EnumDef::_nil ();
+    _tao_elem = IR_EnumDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::EnumDef::_nil ();
+  _tao_elem = IR_EnumDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::EnumDef,IR::EnumDef_var>;
+    template class TAO_Object_Manager<IR_EnumDef,IR_EnumDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::EnumDef,IR::EnumDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_EnumDef,IR_EnumDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::AliasDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_AliasDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -59049,25 +58271,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::AliasDef::_duplicate (_tao_elem),
-        IR::AliasDef::_tao_any_destructor
+        IR_AliasDef::_duplicate (_tao_elem),
+        IR_AliasDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::AliasDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_AliasDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::AliasDef::_nil ();
+    _tao_elem = IR_AliasDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_AliasDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_AliasDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -59078,29 +58298,29 @@
           IR::_tc_AliasDef,
           1,
           _tao_elem,
-          IR::AliasDef::_tao_any_destructor
+          IR_AliasDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::AliasDef::_nil ();
+    _tao_elem = IR_AliasDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::AliasDef::_nil ();
+  _tao_elem = IR_AliasDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::AliasDef,IR::AliasDef_var>;
+    template class TAO_Object_Manager<IR_AliasDef,IR_AliasDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::AliasDef,IR::AliasDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_AliasDef,IR_AliasDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::NativeDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_NativeDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -59110,25 +58330,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::NativeDef::_duplicate (_tao_elem),
-        IR::NativeDef::_tao_any_destructor
+        IR_NativeDef::_duplicate (_tao_elem),
+        IR_NativeDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::NativeDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_NativeDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::NativeDef::_nil ();
+    _tao_elem = IR_NativeDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_NativeDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_NativeDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -59139,29 +58357,29 @@
           IR::_tc_NativeDef,
           1,
           _tao_elem,
-          IR::NativeDef::_tao_any_destructor
+          IR_NativeDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::NativeDef::_nil ();
+    _tao_elem = IR_NativeDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::NativeDef::_nil ();
+  _tao_elem = IR_NativeDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::NativeDef,IR::NativeDef_var>;
+    template class TAO_Object_Manager<IR_NativeDef,IR_NativeDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::NativeDef,IR::NativeDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_NativeDef,IR_NativeDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::PrimitiveDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_PrimitiveDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -59171,25 +58389,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::PrimitiveDef::_duplicate (_tao_elem),
-        IR::PrimitiveDef::_tao_any_destructor
+        IR_PrimitiveDef::_duplicate (_tao_elem),
+        IR_PrimitiveDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::PrimitiveDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_PrimitiveDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::PrimitiveDef::_nil ();
+    _tao_elem = IR_PrimitiveDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_PrimitiveDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_PrimitiveDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -59200,29 +58416,29 @@
           IR::_tc_PrimitiveDef,
           1,
           _tao_elem,
-          IR::PrimitiveDef::_tao_any_destructor
+          IR_PrimitiveDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::PrimitiveDef::_nil ();
+    _tao_elem = IR_PrimitiveDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::PrimitiveDef::_nil ();
+  _tao_elem = IR_PrimitiveDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::PrimitiveDef,IR::PrimitiveDef_var>;
+    template class TAO_Object_Manager<IR_PrimitiveDef,IR_PrimitiveDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::PrimitiveDef,IR::PrimitiveDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_PrimitiveDef,IR_PrimitiveDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::StringDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_StringDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -59232,25 +58448,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::StringDef::_duplicate (_tao_elem),
-        IR::StringDef::_tao_any_destructor
+        IR_StringDef::_duplicate (_tao_elem),
+        IR_StringDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::StringDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_StringDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::StringDef::_nil ();
+    _tao_elem = IR_StringDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_StringDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_StringDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -59261,29 +58475,29 @@
           IR::_tc_StringDef,
           1,
           _tao_elem,
-          IR::StringDef::_tao_any_destructor
+          IR_StringDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::StringDef::_nil ();
+    _tao_elem = IR_StringDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::StringDef::_nil ();
+  _tao_elem = IR_StringDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::StringDef,IR::StringDef_var>;
+    template class TAO_Object_Manager<IR_StringDef,IR_StringDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::StringDef,IR::StringDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_StringDef,IR_StringDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::WstringDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_WstringDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -59293,25 +58507,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::WstringDef::_duplicate (_tao_elem),
-        IR::WstringDef::_tao_any_destructor
+        IR_WstringDef::_duplicate (_tao_elem),
+        IR_WstringDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::WstringDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_WstringDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::WstringDef::_nil ();
+    _tao_elem = IR_WstringDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_WstringDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_WstringDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -59322,29 +58534,29 @@
           IR::_tc_WstringDef,
           1,
           _tao_elem,
-          IR::WstringDef::_tao_any_destructor
+          IR_WstringDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::WstringDef::_nil ();
+    _tao_elem = IR_WstringDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::WstringDef::_nil ();
+  _tao_elem = IR_WstringDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::WstringDef,IR::WstringDef_var>;
+    template class TAO_Object_Manager<IR_WstringDef,IR_WstringDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::WstringDef,IR::WstringDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_WstringDef,IR_WstringDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::FixedDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_FixedDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -59354,25 +58566,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::FixedDef::_duplicate (_tao_elem),
-        IR::FixedDef::_tao_any_destructor
+        IR_FixedDef::_duplicate (_tao_elem),
+        IR_FixedDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::FixedDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_FixedDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::FixedDef::_nil ();
+    _tao_elem = IR_FixedDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_FixedDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_FixedDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -59383,29 +58593,29 @@
           IR::_tc_FixedDef,
           1,
           _tao_elem,
-          IR::FixedDef::_tao_any_destructor
+          IR_FixedDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::FixedDef::_nil ();
+    _tao_elem = IR_FixedDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::FixedDef::_nil ();
+  _tao_elem = IR_FixedDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::FixedDef,IR::FixedDef_var>;
+    template class TAO_Object_Manager<IR_FixedDef,IR_FixedDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::FixedDef,IR::FixedDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_FixedDef,IR_FixedDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::SequenceDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_SequenceDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -59415,25 +58625,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::SequenceDef::_duplicate (_tao_elem),
-        IR::SequenceDef::_tao_any_destructor
+        IR_SequenceDef::_duplicate (_tao_elem),
+        IR_SequenceDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::SequenceDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_SequenceDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::SequenceDef::_nil ();
+    _tao_elem = IR_SequenceDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_SequenceDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_SequenceDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -59444,29 +58652,29 @@
           IR::_tc_SequenceDef,
           1,
           _tao_elem,
-          IR::SequenceDef::_tao_any_destructor
+          IR_SequenceDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::SequenceDef::_nil ();
+    _tao_elem = IR_SequenceDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::SequenceDef::_nil ();
+  _tao_elem = IR_SequenceDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::SequenceDef,IR::SequenceDef_var>;
+    template class TAO_Object_Manager<IR_SequenceDef,IR_SequenceDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::SequenceDef,IR::SequenceDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_SequenceDef,IR_SequenceDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::ArrayDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_ArrayDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -59476,25 +58684,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::ArrayDef::_duplicate (_tao_elem),
-        IR::ArrayDef::_tao_any_destructor
+        IR_ArrayDef::_duplicate (_tao_elem),
+        IR_ArrayDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ArrayDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ArrayDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::ArrayDef::_nil ();
+    _tao_elem = IR_ArrayDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ArrayDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ArrayDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -59505,29 +58711,29 @@
           IR::_tc_ArrayDef,
           1,
           _tao_elem,
-          IR::ArrayDef::_tao_any_destructor
+          IR_ArrayDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::ArrayDef::_nil ();
+    _tao_elem = IR_ArrayDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::ArrayDef::_nil ();
+  _tao_elem = IR_ArrayDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::ArrayDef,IR::ArrayDef_var>;
+    template class TAO_Object_Manager<IR_ArrayDef,IR_ArrayDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::ArrayDef,IR::ArrayDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_ArrayDef,IR_ArrayDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::ExceptionDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_ExceptionDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -59537,25 +58743,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::ExceptionDef::_duplicate (_tao_elem),
-        IR::ExceptionDef::_tao_any_destructor
+        IR_ExceptionDef::_duplicate (_tao_elem),
+        IR_ExceptionDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ExceptionDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ExceptionDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::ExceptionDef::_nil ();
+    _tao_elem = IR_ExceptionDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ExceptionDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ExceptionDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -59566,29 +58770,29 @@
           IR::_tc_ExceptionDef,
           1,
           _tao_elem,
-          IR::ExceptionDef::_tao_any_destructor
+          IR_ExceptionDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::ExceptionDef::_nil ();
+    _tao_elem = IR_ExceptionDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::ExceptionDef::_nil ();
+  _tao_elem = IR_ExceptionDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::ExceptionDef,IR::ExceptionDef_var>;
+    template class TAO_Object_Manager<IR_ExceptionDef,IR_ExceptionDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::ExceptionDef,IR::ExceptionDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_ExceptionDef,IR_ExceptionDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, const IR::ExceptionDescription &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_ExceptionDescription &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -59599,7 +58803,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ExceptionDescription *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ExceptionDescription *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -59609,40 +58813,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ExceptionDescription::_tao_any_destructor
+      IR_ExceptionDescription::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ExceptionDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ExceptionDescription *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::ExceptionDescription*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_ExceptionDescription*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ExceptionDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ExceptionDescription *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ExceptionDescription, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ExceptionDescription, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ExceptionDescription*,
+          const IR_ExceptionDescription*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ExceptionDescription *tmp;
-      ACE_NEW_RETURN (tmp, IR::ExceptionDescription, 0);
+      IR_ExceptionDescription *tmp;
+      ACE_NEW_RETURN (tmp, IR_ExceptionDescription, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -59653,7 +58855,7 @@
             IR::_tc_ExceptionDescription,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ExceptionDescription::_tao_any_destructor
+            IR_ExceptionDescription::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -59673,7 +58875,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::ExceptionDefSeq &_tao_elem
+    const IR_ExceptionDefSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -59687,7 +58889,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ExceptionDefSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ExceptionDefSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -59697,43 +58899,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ExceptionDefSeq::_tao_any_destructor
+      IR_ExceptionDefSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ExceptionDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ExceptionDefSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::ExceptionDefSeq*&,
+      const IR_ExceptionDefSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ExceptionDefSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ExceptionDefSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ExceptionDefSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ExceptionDefSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ExceptionDefSeq*,
+          const IR_ExceptionDefSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ExceptionDefSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::ExceptionDefSeq, 0);
+      IR_ExceptionDefSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_ExceptionDefSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -59744,7 +58944,7 @@
             IR::_tc_ExceptionDefSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ExceptionDefSeq::_tao_any_destructor
+            IR_ExceptionDefSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -59764,7 +58964,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::ExcDescriptionSeq &_tao_elem
+    const IR_ExcDescriptionSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -59778,7 +58978,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ExcDescriptionSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ExcDescriptionSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -59788,43 +58988,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ExcDescriptionSeq::_tao_any_destructor
+      IR_ExcDescriptionSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ExcDescriptionSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ExcDescriptionSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::ExcDescriptionSeq*&,
+      const IR_ExcDescriptionSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ExcDescriptionSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ExcDescriptionSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ExcDescriptionSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ExcDescriptionSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ExcDescriptionSeq*,
+          const IR_ExcDescriptionSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ExcDescriptionSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::ExcDescriptionSeq, 0);
+      IR_ExcDescriptionSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_ExcDescriptionSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -59835,7 +59033,7 @@
             IR::_tc_ExcDescriptionSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ExcDescriptionSeq::_tao_any_destructor
+            IR_ExcDescriptionSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -59853,7 +59051,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::AttributeMode _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_AttributeMode _tao_elem)
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -59864,18 +59062,16 @@
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::AttributeMode &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_AttributeMode &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_AttributeMode, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_AttributeMode, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -59893,7 +59089,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::AttributeDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_AttributeDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -59903,25 +59099,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::AttributeDef::_duplicate (_tao_elem),
-        IR::AttributeDef::_tao_any_destructor
+        IR_AttributeDef::_duplicate (_tao_elem),
+        IR_AttributeDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::AttributeDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_AttributeDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::AttributeDef::_nil ();
+    _tao_elem = IR_AttributeDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_AttributeDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_AttributeDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -59932,29 +59126,29 @@
           IR::_tc_AttributeDef,
           1,
           _tao_elem,
-          IR::AttributeDef::_tao_any_destructor
+          IR_AttributeDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::AttributeDef::_nil ();
+    _tao_elem = IR_AttributeDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::AttributeDef::_nil ();
+  _tao_elem = IR_AttributeDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::AttributeDef,IR::AttributeDef_var>;
+    template class TAO_Object_Manager<IR_AttributeDef,IR_AttributeDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::AttributeDef,IR::AttributeDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_AttributeDef,IR_AttributeDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, const IR::AttributeDescription &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_AttributeDescription &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -59965,7 +59159,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::AttributeDescription *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_AttributeDescription *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -59975,40 +59169,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::AttributeDescription::_tao_any_destructor
+      IR_AttributeDescription::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::AttributeDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_AttributeDescription *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::AttributeDescription*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_AttributeDescription*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::AttributeDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_AttributeDescription *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_AttributeDescription, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_AttributeDescription, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::AttributeDescription*,
+          const IR_AttributeDescription*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::AttributeDescription *tmp;
-      ACE_NEW_RETURN (tmp, IR::AttributeDescription, 0);
+      IR_AttributeDescription *tmp;
+      ACE_NEW_RETURN (tmp, IR_AttributeDescription, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -60019,7 +59211,7 @@
             IR::_tc_AttributeDescription,
             1,
             ACE_static_cast (void *, tmp),
-            IR::AttributeDescription::_tao_any_destructor
+            IR_AttributeDescription::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -60037,7 +59229,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::OperationMode _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_OperationMode _tao_elem)
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -60048,18 +59240,16 @@
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::OperationMode &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_OperationMode &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_OperationMode, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_OperationMode, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -60077,7 +59267,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ParameterMode _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_ParameterMode _tao_elem)
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -60088,18 +59278,16 @@
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ParameterMode &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ParameterMode &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ParameterMode, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ParameterMode, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -60117,7 +59305,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, const IR::ParameterDescription &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_ParameterDescription &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -60128,7 +59316,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ParameterDescription *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ParameterDescription *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -60138,40 +59326,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ParameterDescription::_tao_any_destructor
+      IR_ParameterDescription::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ParameterDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ParameterDescription *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::ParameterDescription*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_ParameterDescription*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ParameterDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ParameterDescription *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ParameterDescription, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ParameterDescription, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ParameterDescription*,
+          const IR_ParameterDescription*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ParameterDescription *tmp;
-      ACE_NEW_RETURN (tmp, IR::ParameterDescription, 0);
+      IR_ParameterDescription *tmp;
+      ACE_NEW_RETURN (tmp, IR_ParameterDescription, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -60182,7 +59368,7 @@
             IR::_tc_ParameterDescription,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ParameterDescription::_tao_any_destructor
+            IR_ParameterDescription::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -60202,7 +59388,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::ParDescriptionSeq &_tao_elem
+    const IR_ParDescriptionSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -60216,7 +59402,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ParDescriptionSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ParDescriptionSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -60226,43 +59412,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ParDescriptionSeq::_tao_any_destructor
+      IR_ParDescriptionSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ParDescriptionSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ParDescriptionSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::ParDescriptionSeq*&,
+      const IR_ParDescriptionSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ParDescriptionSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ParDescriptionSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ParDescriptionSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ParDescriptionSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ParDescriptionSeq*,
+          const IR_ParDescriptionSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ParDescriptionSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::ParDescriptionSeq, 0);
+      IR_ParDescriptionSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_ParDescriptionSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -60273,7 +59457,7 @@
             IR::_tc_ParDescriptionSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ParDescriptionSeq::_tao_any_destructor
+            IR_ParDescriptionSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -60293,7 +59477,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::ContextIdSeq &_tao_elem
+    const IR_ContextIdSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -60307,7 +59491,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ContextIdSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ContextIdSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -60317,43 +59501,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ContextIdSeq::_tao_any_destructor
+      IR_ContextIdSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ContextIdSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ContextIdSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::ContextIdSeq*&,
+      const IR_ContextIdSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ContextIdSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ContextIdSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ContextIdSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ContextIdSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ContextIdSeq*,
+          const IR_ContextIdSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ContextIdSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::ContextIdSeq, 0);
+      IR_ContextIdSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_ContextIdSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -60364,7 +59546,7 @@
             IR::_tc_ContextIdSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ContextIdSeq::_tao_any_destructor
+            IR_ContextIdSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -60382,7 +59564,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::OperationDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_OperationDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -60392,25 +59574,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::OperationDef::_duplicate (_tao_elem),
-        IR::OperationDef::_tao_any_destructor
+        IR_OperationDef::_duplicate (_tao_elem),
+        IR_OperationDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::OperationDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_OperationDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::OperationDef::_nil ();
+    _tao_elem = IR_OperationDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_OperationDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_OperationDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -60421,29 +59601,29 @@
           IR::_tc_OperationDef,
           1,
           _tao_elem,
-          IR::OperationDef::_tao_any_destructor
+          IR_OperationDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::OperationDef::_nil ();
+    _tao_elem = IR_OperationDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::OperationDef::_nil ();
+  _tao_elem = IR_OperationDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::OperationDef,IR::OperationDef_var>;
+    template class TAO_Object_Manager<IR_OperationDef,IR_OperationDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::OperationDef,IR::OperationDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_OperationDef,IR_OperationDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, const IR::OperationDescription &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_OperationDescription &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -60454,7 +59634,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::OperationDescription *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_OperationDescription *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -60464,40 +59644,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::OperationDescription::_tao_any_destructor
+      IR_OperationDescription::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::OperationDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_OperationDescription *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::OperationDescription*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_OperationDescription*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::OperationDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_OperationDescription *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_OperationDescription, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_OperationDescription, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::OperationDescription*,
+          const IR_OperationDescription*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::OperationDescription *tmp;
-      ACE_NEW_RETURN (tmp, IR::OperationDescription, 0);
+      IR_OperationDescription *tmp;
+      ACE_NEW_RETURN (tmp, IR_OperationDescription, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -60508,7 +59686,7 @@
             IR::_tc_OperationDescription,
             1,
             ACE_static_cast (void *, tmp),
-            IR::OperationDescription::_tao_any_destructor
+            IR_OperationDescription::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -60528,7 +59706,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::RepositoryIdSeq &_tao_elem
+    const IR_RepositoryIdSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -60542,7 +59720,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::RepositoryIdSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_RepositoryIdSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -60552,43 +59730,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::RepositoryIdSeq::_tao_any_destructor
+      IR_RepositoryIdSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::RepositoryIdSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_RepositoryIdSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::RepositoryIdSeq*&,
+      const IR_RepositoryIdSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::RepositoryIdSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_RepositoryIdSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_RepositoryIdSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_RepositoryIdSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::RepositoryIdSeq*,
+          const IR_RepositoryIdSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::RepositoryIdSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::RepositoryIdSeq, 0);
+      IR_RepositoryIdSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_RepositoryIdSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -60599,7 +59775,7 @@
             IR::_tc_RepositoryIdSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::RepositoryIdSeq::_tao_any_destructor
+            IR_RepositoryIdSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -60619,7 +59795,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::OpDescriptionSeq &_tao_elem
+    const IR_OpDescriptionSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -60633,7 +59809,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::OpDescriptionSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_OpDescriptionSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -60643,43 +59819,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::OpDescriptionSeq::_tao_any_destructor
+      IR_OpDescriptionSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::OpDescriptionSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_OpDescriptionSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::OpDescriptionSeq*&,
+      const IR_OpDescriptionSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::OpDescriptionSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_OpDescriptionSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_OpDescriptionSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_OpDescriptionSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::OpDescriptionSeq*,
+          const IR_OpDescriptionSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::OpDescriptionSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::OpDescriptionSeq, 0);
+      IR_OpDescriptionSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_OpDescriptionSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -60690,7 +59864,7 @@
             IR::_tc_OpDescriptionSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::OpDescriptionSeq::_tao_any_destructor
+            IR_OpDescriptionSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -60710,7 +59884,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::AttrDescriptionSeq &_tao_elem
+    const IR_AttrDescriptionSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -60724,7 +59898,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::AttrDescriptionSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_AttrDescriptionSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -60734,43 +59908,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::AttrDescriptionSeq::_tao_any_destructor
+      IR_AttrDescriptionSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::AttrDescriptionSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_AttrDescriptionSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::AttrDescriptionSeq*&,
+      const IR_AttrDescriptionSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::AttrDescriptionSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_AttrDescriptionSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_AttrDescriptionSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_AttrDescriptionSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::AttrDescriptionSeq*,
+          const IR_AttrDescriptionSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::AttrDescriptionSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::AttrDescriptionSeq, 0);
+      IR_AttrDescriptionSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_AttrDescriptionSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -60781,7 +59953,7 @@
             IR::_tc_AttrDescriptionSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::AttrDescriptionSeq::_tao_any_destructor
+            IR_AttrDescriptionSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -60799,7 +59971,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::InterfaceDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_InterfaceDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -60809,25 +59981,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::InterfaceDef::_duplicate (_tao_elem),
-        IR::InterfaceDef::_tao_any_destructor
+        IR_InterfaceDef::_duplicate (_tao_elem),
+        IR_InterfaceDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::InterfaceDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_InterfaceDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::InterfaceDef::_nil ();
+    _tao_elem = IR_InterfaceDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_InterfaceDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_InterfaceDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -60838,29 +60008,29 @@
           IR::_tc_InterfaceDef,
           1,
           _tao_elem,
-          IR::InterfaceDef::_tao_any_destructor
+          IR_InterfaceDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::InterfaceDef::_nil ();
+    _tao_elem = IR_InterfaceDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::InterfaceDef::_nil ();
+  _tao_elem = IR_InterfaceDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::InterfaceDef,IR::InterfaceDef_var>;
+    template class TAO_Object_Manager<IR_InterfaceDef,IR_InterfaceDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::InterfaceDef,IR::InterfaceDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_InterfaceDef,IR_InterfaceDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, const IR::InterfaceDescription &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_InterfaceDescription &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -60871,7 +60041,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::InterfaceDescription *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_InterfaceDescription *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -60881,40 +60051,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::InterfaceDescription::_tao_any_destructor
+      IR_InterfaceDescription::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::InterfaceDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_InterfaceDescription *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::InterfaceDescription*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_InterfaceDescription*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::InterfaceDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_InterfaceDescription *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_InterfaceDescription, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_InterfaceDescription, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::InterfaceDescription*,
+          const IR_InterfaceDescription*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::InterfaceDescription *tmp;
-      ACE_NEW_RETURN (tmp, IR::InterfaceDescription, 0);
+      IR_InterfaceDescription *tmp;
+      ACE_NEW_RETURN (tmp, IR_InterfaceDescription, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -60925,7 +60093,7 @@
             IR::_tc_InterfaceDescription,
             1,
             ACE_static_cast (void *, tmp),
-            IR::InterfaceDescription::_tao_any_destructor
+            IR_InterfaceDescription::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -60943,7 +60111,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, const IR::ValueMember &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_ValueMember &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -60954,7 +60122,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ValueMember *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ValueMember *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -60964,40 +60132,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ValueMember::_tao_any_destructor
+      IR_ValueMember::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ValueMember *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ValueMember *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::ValueMember*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_ValueMember*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ValueMember *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ValueMember *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ValueMember, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ValueMember, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ValueMember*,
+          const IR_ValueMember*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ValueMember *tmp;
-      ACE_NEW_RETURN (tmp, IR::ValueMember, 0);
+      IR_ValueMember *tmp;
+      ACE_NEW_RETURN (tmp, IR_ValueMember, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -61008,7 +60174,7 @@
             IR::_tc_ValueMember,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ValueMember::_tao_any_destructor
+            IR_ValueMember::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -61028,7 +60194,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::ValueMemberSeq &_tao_elem
+    const IR_ValueMemberSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -61042,7 +60208,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ValueMemberSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ValueMemberSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -61052,43 +60218,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ValueMemberSeq::_tao_any_destructor
+      IR_ValueMemberSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ValueMemberSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ValueMemberSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::ValueMemberSeq*&,
+      const IR_ValueMemberSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ValueMemberSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ValueMemberSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ValueMemberSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ValueMemberSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ValueMemberSeq*,
+          const IR_ValueMemberSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ValueMemberSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::ValueMemberSeq, 0);
+      IR_ValueMemberSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_ValueMemberSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -61099,7 +60263,7 @@
             IR::_tc_ValueMemberSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ValueMemberSeq::_tao_any_destructor
+            IR_ValueMemberSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -61117,7 +60281,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ValueMemberDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_ValueMemberDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -61127,25 +60291,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::ValueMemberDef::_duplicate (_tao_elem),
-        IR::ValueMemberDef::_tao_any_destructor
+        IR_ValueMemberDef::_duplicate (_tao_elem),
+        IR_ValueMemberDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ValueMemberDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ValueMemberDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::ValueMemberDef::_nil ();
+    _tao_elem = IR_ValueMemberDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ValueMemberDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ValueMemberDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -61156,29 +60318,29 @@
           IR::_tc_ValueMemberDef,
           1,
           _tao_elem,
-          IR::ValueMemberDef::_tao_any_destructor
+          IR_ValueMemberDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::ValueMemberDef::_nil ();
+    _tao_elem = IR_ValueMemberDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::ValueMemberDef::_nil ();
+  _tao_elem = IR_ValueMemberDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::ValueMemberDef,IR::ValueMemberDef_var>;
+    template class TAO_Object_Manager<IR_ValueMemberDef,IR_ValueMemberDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::ValueMemberDef,IR::ValueMemberDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_ValueMemberDef,IR_ValueMemberDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::ValueDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_ValueDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -61188,25 +60350,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::ValueDef::_duplicate (_tao_elem),
-        IR::ValueDef::_tao_any_destructor
+        IR_ValueDef::_duplicate (_tao_elem),
+        IR_ValueDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ValueDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ValueDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::ValueDef::_nil ();
+    _tao_elem = IR_ValueDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ValueDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ValueDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -61217,29 +60377,29 @@
           IR::_tc_ValueDef,
           1,
           _tao_elem,
-          IR::ValueDef::_tao_any_destructor
+          IR_ValueDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::ValueDef::_nil ();
+    _tao_elem = IR_ValueDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::ValueDef::_nil ();
+  _tao_elem = IR_ValueDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::ValueDef,IR::ValueDef_var>;
+    template class TAO_Object_Manager<IR_ValueDef,IR_ValueDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::ValueDef,IR::ValueDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_ValueDef,IR_ValueDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, const IR::ValueDescription &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_ValueDescription &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -61250,7 +60410,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ValueDescription *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ValueDescription *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -61260,40 +60420,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ValueDescription::_tao_any_destructor
+      IR_ValueDescription::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ValueDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ValueDescription *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::ValueDescription*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_ValueDescription*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ValueDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ValueDescription *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ValueDescription, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ValueDescription, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ValueDescription*,
+          const IR_ValueDescription*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ValueDescription *tmp;
-      ACE_NEW_RETURN (tmp, IR::ValueDescription, 0);
+      IR_ValueDescription *tmp;
+      ACE_NEW_RETURN (tmp, IR_ValueDescription, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -61304,7 +60462,7 @@
             IR::_tc_ValueDescription,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ValueDescription::_tao_any_destructor
+            IR_ValueDescription::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -61322,7 +60480,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ValueBoxDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_ValueBoxDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -61332,25 +60490,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::ValueBoxDef::_duplicate (_tao_elem),
-        IR::ValueBoxDef::_tao_any_destructor
+        IR_ValueBoxDef::_duplicate (_tao_elem),
+        IR_ValueBoxDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ValueBoxDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ValueBoxDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::ValueBoxDef::_nil ();
+    _tao_elem = IR_ValueBoxDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ValueBoxDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ValueBoxDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -61361,29 +60517,29 @@
           IR::_tc_ValueBoxDef,
           1,
           _tao_elem,
-          IR::ValueBoxDef::_tao_any_destructor
+          IR_ValueBoxDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::ValueBoxDef::_nil ();
+    _tao_elem = IR_ValueBoxDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::ValueBoxDef::_nil ();
+  _tao_elem = IR_ValueBoxDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::ValueBoxDef,IR::ValueBoxDef_var>;
+    template class TAO_Object_Manager<IR_ValueBoxDef,IR_ValueBoxDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::ValueBoxDef,IR::ValueBoxDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_ValueBoxDef,IR_ValueBoxDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::ProvidesDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_ProvidesDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -61393,25 +60549,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::ProvidesDef::_duplicate (_tao_elem),
-        IR::ProvidesDef::_tao_any_destructor
+        IR_ProvidesDef::_duplicate (_tao_elem),
+        IR_ProvidesDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ProvidesDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ProvidesDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::ProvidesDef::_nil ();
+    _tao_elem = IR_ProvidesDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ProvidesDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ProvidesDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -61422,29 +60576,29 @@
           IR::_tc_ProvidesDef,
           1,
           _tao_elem,
-          IR::ProvidesDef::_tao_any_destructor
+          IR_ProvidesDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::ProvidesDef::_nil ();
+    _tao_elem = IR_ProvidesDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::ProvidesDef::_nil ();
+  _tao_elem = IR_ProvidesDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::ProvidesDef,IR::ProvidesDef_var>;
+    template class TAO_Object_Manager<IR_ProvidesDef,IR_ProvidesDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::ProvidesDef,IR::ProvidesDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_ProvidesDef,IR_ProvidesDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, const IR::ProvidesDescription &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_ProvidesDescription &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -61455,7 +60609,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ProvidesDescription *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ProvidesDescription *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -61465,40 +60619,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ProvidesDescription::_tao_any_destructor
+      IR_ProvidesDescription::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ProvidesDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ProvidesDescription *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::ProvidesDescription*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_ProvidesDescription*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ProvidesDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ProvidesDescription *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ProvidesDescription, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ProvidesDescription, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ProvidesDescription*,
+          const IR_ProvidesDescription*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ProvidesDescription *tmp;
-      ACE_NEW_RETURN (tmp, IR::ProvidesDescription, 0);
+      IR_ProvidesDescription *tmp;
+      ACE_NEW_RETURN (tmp, IR_ProvidesDescription, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -61509,7 +60661,7 @@
             IR::_tc_ProvidesDescription,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ProvidesDescription::_tao_any_destructor
+            IR_ProvidesDescription::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -61527,7 +60679,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::UsesDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_UsesDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -61537,25 +60689,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::UsesDef::_duplicate (_tao_elem),
-        IR::UsesDef::_tao_any_destructor
+        IR_UsesDef::_duplicate (_tao_elem),
+        IR_UsesDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::UsesDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_UsesDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::UsesDef::_nil ();
+    _tao_elem = IR_UsesDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_UsesDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_UsesDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -61566,29 +60716,29 @@
           IR::_tc_UsesDef,
           1,
           _tao_elem,
-          IR::UsesDef::_tao_any_destructor
+          IR_UsesDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::UsesDef::_nil ();
+    _tao_elem = IR_UsesDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::UsesDef::_nil ();
+  _tao_elem = IR_UsesDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::UsesDef,IR::UsesDef_var>;
+    template class TAO_Object_Manager<IR_UsesDef,IR_UsesDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::UsesDef,IR::UsesDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_UsesDef,IR_UsesDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, const IR::UsesDescription &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_UsesDescription &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -61599,7 +60749,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::UsesDescription *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_UsesDescription *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -61609,40 +60759,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::UsesDescription::_tao_any_destructor
+      IR_UsesDescription::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::UsesDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_UsesDescription *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::UsesDescription*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_UsesDescription*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::UsesDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_UsesDescription *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_UsesDescription, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_UsesDescription, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::UsesDescription*,
+          const IR_UsesDescription*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::UsesDescription *tmp;
-      ACE_NEW_RETURN (tmp, IR::UsesDescription, 0);
+      IR_UsesDescription *tmp;
+      ACE_NEW_RETURN (tmp, IR_UsesDescription, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -61653,7 +60801,7 @@
             IR::_tc_UsesDescription,
             1,
             ACE_static_cast (void *, tmp),
-            IR::UsesDescription::_tao_any_destructor
+            IR_UsesDescription::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -61673,7 +60821,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::ProvidesDescSeq &_tao_elem
+    const IR_ProvidesDescSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -61687,7 +60835,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ProvidesDescSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ProvidesDescSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -61697,43 +60845,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ProvidesDescSeq::_tao_any_destructor
+      IR_ProvidesDescSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ProvidesDescSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ProvidesDescSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::ProvidesDescSeq*&,
+      const IR_ProvidesDescSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ProvidesDescSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ProvidesDescSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ProvidesDescSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ProvidesDescSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ProvidesDescSeq*,
+          const IR_ProvidesDescSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ProvidesDescSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::ProvidesDescSeq, 0);
+      IR_ProvidesDescSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_ProvidesDescSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -61744,7 +60890,7 @@
             IR::_tc_ProvidesDescSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ProvidesDescSeq::_tao_any_destructor
+            IR_ProvidesDescSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -61764,7 +60910,7 @@
 
 void operator<<= (
     CORBA::Any &_tao_any,
-    const IR::UsesDescSeq &_tao_elem
+    const IR_UsesDescSeq &_tao_elem
   ) // copying
 {
   TAO_OutputCDR stream;
@@ -61778,7 +60924,7 @@
   }
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::UsesDescSeq *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_UsesDescSeq *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -61788,43 +60934,41 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::UsesDescSeq::_tao_any_destructor
+      IR_UsesDescSeq::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::UsesDescSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_UsesDescSeq *&_tao_elem)
 {
   return _tao_any >>= ACE_const_cast(
-      const IR::UsesDescSeq*&,
+      const IR_UsesDescSeq*&,
       _tao_elem
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::UsesDescSeq *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_UsesDescSeq *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_UsesDescSeq, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_UsesDescSeq, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::UsesDescSeq*,
+          const IR_UsesDescSeq*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::UsesDescSeq *tmp;
-      ACE_NEW_RETURN (tmp, IR::UsesDescSeq, 0);
+      IR_UsesDescSeq *tmp;
+      ACE_NEW_RETURN (tmp, IR_UsesDescSeq, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -61835,7 +60979,7 @@
             IR::_tc_UsesDescSeq,
             1,
             ACE_static_cast (void *, tmp),
-            IR::UsesDescSeq::_tao_any_destructor
+            IR_UsesDescSeq::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -61853,7 +60997,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::EventDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_EventDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -61863,25 +61007,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::EventDef::_duplicate (_tao_elem),
-        IR::EventDef::_tao_any_destructor
+        IR_EventDef::_duplicate (_tao_elem),
+        IR_EventDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::EventDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_EventDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::EventDef::_nil ();
+    _tao_elem = IR_EventDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_EventDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_EventDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -61892,29 +61034,29 @@
           IR::_tc_EventDef,
           1,
           _tao_elem,
-          IR::EventDef::_tao_any_destructor
+          IR_EventDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::EventDef::_nil ();
+    _tao_elem = IR_EventDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::EventDef::_nil ();
+  _tao_elem = IR_EventDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::EventDef,IR::EventDef_var>;
+    template class TAO_Object_Manager<IR_EventDef,IR_EventDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::EventDef,IR::EventDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_EventDef,IR_EventDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, const IR::EventDescription &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_EventDescription &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -61925,7 +61067,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::EventDescription *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_EventDescription *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -61935,40 +61077,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::EventDescription::_tao_any_destructor
+      IR_EventDescription::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::EventDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_EventDescription *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::EventDescription*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_EventDescription*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::EventDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_EventDescription *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_EventDescription, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_EventDescription, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::EventDescription*,
+          const IR_EventDescription*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::EventDescription *tmp;
-      ACE_NEW_RETURN (tmp, IR::EventDescription, 0);
+      IR_EventDescription *tmp;
+      ACE_NEW_RETURN (tmp, IR_EventDescription, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -61979,7 +61119,7 @@
             IR::_tc_EventDescription,
             1,
             ACE_static_cast (void *, tmp),
-            IR::EventDescription::_tao_any_destructor
+            IR_EventDescription::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -61997,7 +61137,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::EmitsDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_EmitsDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -62007,25 +61147,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::EmitsDef::_duplicate (_tao_elem),
-        IR::EmitsDef::_tao_any_destructor
+        IR_EmitsDef::_duplicate (_tao_elem),
+        IR_EmitsDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::EmitsDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_EmitsDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::EmitsDef::_nil ();
+    _tao_elem = IR_EmitsDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_EmitsDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_EmitsDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -62036,29 +61174,29 @@
           IR::_tc_EmitsDef,
           1,
           _tao_elem,
-          IR::EmitsDef::_tao_any_destructor
+          IR_EmitsDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::EmitsDef::_nil ();
+    _tao_elem = IR_EmitsDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::EmitsDef::_nil ();
+  _tao_elem = IR_EmitsDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::EmitsDef,IR::EmitsDef_var>;
+    template class TAO_Object_Manager<IR_EmitsDef,IR_EmitsDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::EmitsDef,IR::EmitsDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_EmitsDef,IR_EmitsDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::PublishesDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_PublishesDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -62068,25 +61206,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::PublishesDef::_duplicate (_tao_elem),
-        IR::PublishesDef::_tao_any_destructor
+        IR_PublishesDef::_duplicate (_tao_elem),
+        IR_PublishesDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::PublishesDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_PublishesDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::PublishesDef::_nil ();
+    _tao_elem = IR_PublishesDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_PublishesDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_PublishesDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -62097,29 +61233,29 @@
           IR::_tc_PublishesDef,
           1,
           _tao_elem,
-          IR::PublishesDef::_tao_any_destructor
+          IR_PublishesDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::PublishesDef::_nil ();
+    _tao_elem = IR_PublishesDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::PublishesDef::_nil ();
+  _tao_elem = IR_PublishesDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::PublishesDef,IR::PublishesDef_var>;
+    template class TAO_Object_Manager<IR_PublishesDef,IR_PublishesDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::PublishesDef,IR::PublishesDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_PublishesDef,IR_PublishesDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::ConsumesDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_ConsumesDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -62129,25 +61265,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::ConsumesDef::_duplicate (_tao_elem),
-        IR::ConsumesDef::_tao_any_destructor
+        IR_ConsumesDef::_duplicate (_tao_elem),
+        IR_ConsumesDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ConsumesDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ConsumesDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::ConsumesDef::_nil ();
+    _tao_elem = IR_ConsumesDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ConsumesDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ConsumesDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -62158,29 +61292,29 @@
           IR::_tc_ConsumesDef,
           1,
           _tao_elem,
-          IR::ConsumesDef::_tao_any_destructor
+          IR_ConsumesDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::ConsumesDef::_nil ();
+    _tao_elem = IR_ConsumesDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::ConsumesDef::_nil ();
+  _tao_elem = IR_ConsumesDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::ConsumesDef,IR::ConsumesDef_var>;
+    template class TAO_Object_Manager<IR_ConsumesDef,IR_ConsumesDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::ConsumesDef,IR::ConsumesDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_ConsumesDef,IR_ConsumesDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::ComponentDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_ComponentDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -62190,25 +61324,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::ComponentDef::_duplicate (_tao_elem),
-        IR::ComponentDef::_tao_any_destructor
+        IR_ComponentDef::_duplicate (_tao_elem),
+        IR_ComponentDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ComponentDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ComponentDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::ComponentDef::_nil ();
+    _tao_elem = IR_ComponentDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ComponentDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ComponentDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -62219,29 +61351,29 @@
           IR::_tc_ComponentDef,
           1,
           _tao_elem,
-          IR::ComponentDef::_tao_any_destructor
+          IR_ComponentDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::ComponentDef::_nil ();
+    _tao_elem = IR_ComponentDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::ComponentDef::_nil ();
+  _tao_elem = IR_ComponentDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::ComponentDef,IR::ComponentDef_var>;
+    template class TAO_Object_Manager<IR_ComponentDef,IR_ComponentDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::ComponentDef,IR::ComponentDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_ComponentDef,IR_ComponentDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, const IR::ComponentDescription &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_ComponentDescription &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -62252,7 +61384,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::ComponentDescription *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_ComponentDescription *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -62262,40 +61394,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::ComponentDescription::_tao_any_destructor
+      IR_ComponentDescription::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::ComponentDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_ComponentDescription *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::ComponentDescription*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_ComponentDescription*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::ComponentDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_ComponentDescription *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_ComponentDescription, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_ComponentDescription, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::ComponentDescription*,
+          const IR_ComponentDescription*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::ComponentDescription *tmp;
-      ACE_NEW_RETURN (tmp, IR::ComponentDescription, 0);
+      IR_ComponentDescription *tmp;
+      ACE_NEW_RETURN (tmp, IR_ComponentDescription, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -62306,7 +61436,7 @@
             IR::_tc_ComponentDescription,
             1,
             ACE_static_cast (void *, tmp),
-            IR::ComponentDescription::_tao_any_destructor
+            IR_ComponentDescription::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -62324,7 +61454,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::PrimaryKeyDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_PrimaryKeyDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -62334,25 +61464,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::PrimaryKeyDef::_duplicate (_tao_elem),
-        IR::PrimaryKeyDef::_tao_any_destructor
+        IR_PrimaryKeyDef::_duplicate (_tao_elem),
+        IR_PrimaryKeyDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::PrimaryKeyDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_PrimaryKeyDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::PrimaryKeyDef::_nil ();
+    _tao_elem = IR_PrimaryKeyDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_PrimaryKeyDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_PrimaryKeyDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -62363,29 +61491,29 @@
           IR::_tc_PrimaryKeyDef,
           1,
           _tao_elem,
-          IR::PrimaryKeyDef::_tao_any_destructor
+          IR_PrimaryKeyDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::PrimaryKeyDef::_nil ();
+    _tao_elem = IR_PrimaryKeyDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::PrimaryKeyDef::_nil ();
+  _tao_elem = IR_PrimaryKeyDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::PrimaryKeyDef,IR::PrimaryKeyDef_var>;
+    template class TAO_Object_Manager<IR_PrimaryKeyDef,IR_PrimaryKeyDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::PrimaryKeyDef,IR::PrimaryKeyDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_PrimaryKeyDef,IR_PrimaryKeyDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, const IR::PrimaryKeyDescription &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_PrimaryKeyDescription &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -62396,7 +61524,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::PrimaryKeyDescription *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_PrimaryKeyDescription *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -62406,40 +61534,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::PrimaryKeyDescription::_tao_any_destructor
+      IR_PrimaryKeyDescription::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::PrimaryKeyDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_PrimaryKeyDescription *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::PrimaryKeyDescription*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_PrimaryKeyDescription*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::PrimaryKeyDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_PrimaryKeyDescription *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_PrimaryKeyDescription, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_PrimaryKeyDescription, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::PrimaryKeyDescription*,
+          const IR_PrimaryKeyDescription*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::PrimaryKeyDescription *tmp;
-      ACE_NEW_RETURN (tmp, IR::PrimaryKeyDescription, 0);
+      IR_PrimaryKeyDescription *tmp;
+      ACE_NEW_RETURN (tmp, IR_PrimaryKeyDescription, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -62450,7 +61576,7 @@
             IR::_tc_PrimaryKeyDescription,
             1,
             ACE_static_cast (void *, tmp),
-            IR::PrimaryKeyDescription::_tao_any_destructor
+            IR_PrimaryKeyDescription::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -62468,7 +61594,7 @@
   return 0;
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::FactoryDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_FactoryDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -62478,25 +61604,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::FactoryDef::_duplicate (_tao_elem),
-        IR::FactoryDef::_tao_any_destructor
+        IR_FactoryDef::_duplicate (_tao_elem),
+        IR_FactoryDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::FactoryDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_FactoryDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::FactoryDef::_nil ();
+    _tao_elem = IR_FactoryDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_FactoryDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_FactoryDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -62507,29 +61631,29 @@
           IR::_tc_FactoryDef,
           1,
           _tao_elem,
-          IR::FactoryDef::_tao_any_destructor
+          IR_FactoryDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::FactoryDef::_nil ();
+    _tao_elem = IR_FactoryDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::FactoryDef::_nil ();
+  _tao_elem = IR_FactoryDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::FactoryDef,IR::FactoryDef_var>;
+    template class TAO_Object_Manager<IR_FactoryDef,IR_FactoryDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::FactoryDef,IR::FactoryDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_FactoryDef,IR_FactoryDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::FinderDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_FinderDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -62539,25 +61663,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::FinderDef::_duplicate (_tao_elem),
-        IR::FinderDef::_tao_any_destructor
+        IR_FinderDef::_duplicate (_tao_elem),
+        IR_FinderDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::FinderDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_FinderDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::FinderDef::_nil ();
+    _tao_elem = IR_FinderDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_FinderDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_FinderDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -62568,29 +61690,29 @@
           IR::_tc_FinderDef,
           1,
           _tao_elem,
-          IR::FinderDef::_tao_any_destructor
+          IR_FinderDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::FinderDef::_nil ();
+    _tao_elem = IR_FinderDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::FinderDef::_nil ();
+  _tao_elem = IR_FinderDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::FinderDef,IR::FinderDef_var>;
+    template class TAO_Object_Manager<IR_FinderDef,IR_FinderDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::FinderDef,IR::FinderDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_FinderDef,IR_FinderDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, IR::HomeDef_ptr _tao_elem)
+void operator<<= (CORBA::Any &_tao_any, IR_HomeDef_ptr _tao_elem)
 {
   TAO_OutputCDR stream;
   if (stream << _tao_elem)
@@ -62600,25 +61722,23 @@
         TAO_ENCAP_BYTE_ORDER,
         stream.begin (),
         1,
-        IR::HomeDef::_duplicate (_tao_elem),
-        IR::HomeDef::_tao_any_destructor
+        IR_HomeDef::_duplicate (_tao_elem),
+        IR_HomeDef::_tao_any_destructor
       );
   }
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::HomeDef_ptr &_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_HomeDef_ptr &_tao_elem)
 {
   ACE_TRY_NEW_ENV
   {
-    _tao_elem = IR::HomeDef::_nil ();
+    _tao_elem = IR_HomeDef::_nil ();
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_HomeDef, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_HomeDef, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     TAO_InputCDR stream (
         _tao_any._tao_get_cdr (),
         _tao_any._tao_byte_order ()
@@ -62629,29 +61749,29 @@
           IR::_tc_HomeDef,
           1,
           _tao_elem,
-          IR::HomeDef::_tao_any_destructor
+          IR_HomeDef::_tao_any_destructor
         );
       return 1;
     }
   }
   ACE_CATCHANY
   {
-    _tao_elem = IR::HomeDef::_nil ();
+    _tao_elem = IR_HomeDef::_nil ();
     return 0;
   }
   ACE_ENDTRY;
-  _tao_elem = IR::HomeDef::_nil ();
+  _tao_elem = IR_HomeDef::_nil ();
   return 0;
 }
 
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
-    template class TAO_Object_Manager<IR::HomeDef,IR::HomeDef_var>;
+    template class TAO_Object_Manager<IR_HomeDef,IR_HomeDef_var>;
   #elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)
-  #  pragma instantiate TAO_Object_Manager<IR::HomeDef,IR::HomeDef_var>
+  #  pragma instantiate TAO_Object_Manager<IR_HomeDef,IR_HomeDef_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
-void operator<<= (CORBA::Any &_tao_any, const IR::HomeDescription &_tao_elem) // copying
+void operator<<= (CORBA::Any &_tao_any, const IR_HomeDescription &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
   stream << _tao_elem;
@@ -62662,7 +61782,7 @@
     );
 }
 
-void operator<<= (CORBA::Any &_tao_any, IR::HomeDescription *_tao_elem) // non copying
+void operator<<= (CORBA::Any &_tao_any, IR_HomeDescription *_tao_elem) // non copying
 {
   TAO_OutputCDR stream;
   stream << *_tao_elem;
@@ -62672,40 +61792,38 @@
       stream.begin (),
       1,
       _tao_elem,
-      IR::HomeDescription::_tao_any_destructor
+      IR_HomeDescription::_tao_any_destructor
     );
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR::HomeDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, IR_HomeDescription *&_tao_elem)
 {
-  return _tao_any >>= ACE_const_cast(const IR::HomeDescription*&,_tao_elem);
+  return _tao_any >>= ACE_const_cast(const IR_HomeDescription*&,_tao_elem);
 }
 
-CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR::HomeDescription *&_tao_elem)
+CORBA::Boolean operator>>= (const CORBA::Any &_tao_any, const IR_HomeDescription *&_tao_elem)
 {
   _tao_elem = 0;
   ACE_TRY_NEW_ENV
   {
     CORBA::TypeCode_var type = _tao_any.type ();
-    
-    CORBA::Boolean result = type->equivalent (IR::_tc_HomeDescription, ACE_TRY_ENV);
+    if (!type->equivalent (IR::_tc_HomeDescription, ACE_TRY_ENV)) // not equal
+      {
+        return 0;
+      }
     ACE_TRY_CHECK;
-    
-    if (!result)
-      return 0; // not equivalent
-    
     if (_tao_any.any_owns_data ())
     {
       _tao_elem = ACE_static_cast(
-          const IR::HomeDescription*,
+          const IR_HomeDescription*,
           _tao_any.value ()
         );
       return 1;
     }
     else
     {
-      IR::HomeDescription *tmp;
-      ACE_NEW_RETURN (tmp, IR::HomeDescription, 0);
+      IR_HomeDescription *tmp;
+      ACE_NEW_RETURN (tmp, IR_HomeDescription, 0);
       TAO_InputCDR stream (
           _tao_any._tao_get_cdr (),
           _tao_any._tao_byte_order ()
@@ -62716,7 +61834,7 @@
             IR::_tc_HomeDescription,
             1,
             ACE_static_cast (void *, tmp),
-            IR::HomeDescription::_tao_any_destructor
+            IR_HomeDescription::_tao_any_destructor
           );
         _tao_elem = tmp;
         return 1;
@@ -62736,7 +61854,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::InterfaceDefSeq &_tao_sequence
+    const IR_InterfaceDefSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -62754,7 +61872,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::InterfaceDefSeq &_tao_sequence
+    IR_InterfaceDefSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -62778,7 +61896,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::ValueDefSeq &_tao_sequence
+    const IR_ValueDefSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -62796,7 +61914,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::ValueDefSeq &_tao_sequence
+    IR_ValueDefSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -62820,7 +61938,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::ComponentDefSeq &_tao_sequence
+    const IR_ComponentDefSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -62838,7 +61956,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::ComponentDefSeq &_tao_sequence
+    IR_ComponentDefSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -62862,7 +61980,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::ProvidesDefSeq &_tao_sequence
+    const IR_ProvidesDefSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -62880,7 +61998,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::ProvidesDefSeq &_tao_sequence
+    IR_ProvidesDefSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -62904,7 +62022,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::UsesDefSeq &_tao_sequence
+    const IR_UsesDefSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -62922,7 +62040,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::UsesDefSeq &_tao_sequence
+    IR_UsesDefSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -62946,7 +62064,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::HomeDefSeq &_tao_sequence
+    const IR_HomeDefSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -62964,7 +62082,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::HomeDefSeq &_tao_sequence
+    IR_HomeDefSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -62988,7 +62106,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::EmitsDefSeq &_tao_sequence
+    const IR_EmitsDefSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63006,7 +62124,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::EmitsDefSeq &_tao_sequence
+    IR_EmitsDefSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63030,7 +62148,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::PublishesDefSeq &_tao_sequence
+    const IR_PublishesDefSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63048,7 +62166,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::PublishesDefSeq &_tao_sequence
+    IR_PublishesDefSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63072,7 +62190,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::ConsumesDefSeq &_tao_sequence
+    const IR_ConsumesDefSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63090,7 +62208,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::ConsumesDefSeq &_tao_sequence
+    IR_ConsumesDefSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63114,7 +62232,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::FactoryDefSeq &_tao_sequence
+    const IR_FactoryDefSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63132,7 +62250,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::FactoryDefSeq &_tao_sequence
+    IR_FactoryDefSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63156,7 +62274,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::FinderDefSeq &_tao_sequence
+    const IR_FinderDefSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63174,7 +62292,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::FinderDefSeq &_tao_sequence
+    IR_FinderDefSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63198,7 +62316,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::ContainedSeq &_tao_sequence
+    const IR_ContainedSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63216,7 +62334,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::ContainedSeq &_tao_sequence
+    IR_ContainedSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63240,7 +62358,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::StructMemberSeq &_tao_sequence
+    const IR_StructMemberSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63258,7 +62376,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::StructMemberSeq &_tao_sequence
+    IR_StructMemberSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63282,7 +62400,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::InitializerSeq &_tao_sequence
+    const IR_InitializerSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63300,7 +62418,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::InitializerSeq &_tao_sequence
+    IR_InitializerSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63324,7 +62442,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::UnionMemberSeq &_tao_sequence
+    const IR_UnionMemberSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63342,7 +62460,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::UnionMemberSeq &_tao_sequence
+    IR_UnionMemberSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63366,7 +62484,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::EnumMemberSeq &_tao_sequence
+    const IR_EnumMemberSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63384,7 +62502,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::EnumMemberSeq &_tao_sequence
+    IR_EnumMemberSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63408,7 +62526,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::Container::DescriptionSeq &_tao_sequence
+    const IR_Container::DescriptionSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63426,7 +62544,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::Container::DescriptionSeq &_tao_sequence
+    IR_Container::DescriptionSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63450,7 +62568,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::ExceptionDefSeq &_tao_sequence
+    const IR_ExceptionDefSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63468,7 +62586,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::ExceptionDefSeq &_tao_sequence
+    IR_ExceptionDefSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63492,7 +62610,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::ExcDescriptionSeq &_tao_sequence
+    const IR_ExcDescriptionSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63510,7 +62628,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::ExcDescriptionSeq &_tao_sequence
+    IR_ExcDescriptionSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63534,7 +62652,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::ParDescriptionSeq &_tao_sequence
+    const IR_ParDescriptionSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63552,7 +62670,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::ParDescriptionSeq &_tao_sequence
+    IR_ParDescriptionSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63576,7 +62694,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::ContextIdSeq &_tao_sequence
+    const IR_ContextIdSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63594,7 +62712,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::ContextIdSeq &_tao_sequence
+    IR_ContextIdSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63618,7 +62736,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::RepositoryIdSeq &_tao_sequence
+    const IR_RepositoryIdSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63636,7 +62754,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::RepositoryIdSeq &_tao_sequence
+    IR_RepositoryIdSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63660,7 +62778,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::OpDescriptionSeq &_tao_sequence
+    const IR_OpDescriptionSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63678,7 +62796,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::OpDescriptionSeq &_tao_sequence
+    IR_OpDescriptionSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63702,7 +62820,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::AttrDescriptionSeq &_tao_sequence
+    const IR_AttrDescriptionSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63720,7 +62838,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::AttrDescriptionSeq &_tao_sequence
+    IR_AttrDescriptionSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63744,7 +62862,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::ValueMemberSeq &_tao_sequence
+    const IR_ValueMemberSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63762,7 +62880,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::ValueMemberSeq &_tao_sequence
+    IR_ValueMemberSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63786,7 +62904,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::ProvidesDescSeq &_tao_sequence
+    const IR_ProvidesDescSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63804,7 +62922,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::ProvidesDescSeq &_tao_sequence
+    IR_ProvidesDescSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
@@ -63828,7 +62946,7 @@
 
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
-    const IR::UsesDescSeq &_tao_sequence
+    const IR_UsesDescSeq &_tao_sequence
   )
 {
   if (strm << _tao_sequence.length ())
@@ -63846,7 +62964,7 @@
 
 CORBA::Boolean operator>> (
     TAO_InputCDR &strm,
-    IR::UsesDescSeq &_tao_sequence
+    IR_UsesDescSeq &_tao_sequence
   )
 {
   CORBA::ULong _tao_seq_len;
