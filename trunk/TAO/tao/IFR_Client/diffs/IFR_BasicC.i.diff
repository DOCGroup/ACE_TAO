--- orig/IFR_BasicC.i	Mon Apr 23 20:55:30 2001
+++ IFR_BasicC.i	Mon Apr 23 20:05:29 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -897,9 +897,9 @@
 #if !defined (_CORBA_PRIMITIVEDEF___CI_)
 #define _CORBA_PRIMITIVEDEF___CI_
 
-ACE_INLINE CORBA_PrimitiveDef_ptr
+ACE_INLINE CORBA::PrimitiveDef_ptr
 tao_CORBA_PrimitiveDef_duplicate (
-    CORBA_PrimitiveDef_ptr p
+    CORBA::PrimitiveDef_ptr p
   )
 {
   return CORBA_PrimitiveDef::_duplicate (p);
@@ -907,13 +907,13 @@
 
 ACE_INLINE void
 tao_CORBA_PrimitiveDef_release (
-    CORBA_PrimitiveDef_ptr p
+    CORBA::PrimitiveDef_ptr p
   )
 {
   CORBA::release (p);
 }
 
-ACE_INLINE CORBA_PrimitiveDef_ptr
+ACE_INLINE CORBA::PrimitiveDef_ptr
 tao_CORBA_PrimitiveDef_nil (
     void
   )
@@ -921,7 +921,7 @@
   return CORBA_PrimitiveDef::_nil ();
 }
 
-ACE_INLINE CORBA_PrimitiveDef_ptr
+ACE_INLINE CORBA::PrimitiveDef_ptr
 tao_CORBA_PrimitiveDef_narrow (
     CORBA::Object *p,
     CORBA::Environment &ACE_TRY_ENV
@@ -5096,90 +5096,14 @@
 
 #endif /* end #if !defined */
 
-ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const CORBA::PrimitiveKind &_tao_enumval)
-{
-  CORBA::ULong _tao_temp = _tao_enumval;
-  return strm << _tao_temp;
-}
-
-ACE_INLINE CORBA::Boolean operator>> (TAO_InputCDR &strm, CORBA::PrimitiveKind &_tao_enumval)
-{
-  CORBA::ULong _tao_temp = 0;
-  CORBA::Boolean _tao_result = strm >> _tao_temp;
-  
-  if (_tao_result == 1)
-    {
-      _tao_enumval = ACE_static_cast (CORBA::PrimitiveKind, _tao_temp);
-    }
-  
-  return _tao_result;
-}
-
-ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const CORBA::AttributeMode &_tao_enumval)
-{
-  CORBA::ULong _tao_temp = _tao_enumval;
-  return strm << _tao_temp;
-}
-
-ACE_INLINE CORBA::Boolean operator>> (TAO_InputCDR &strm, CORBA::AttributeMode &_tao_enumval)
-{
-  CORBA::ULong _tao_temp = 0;
-  CORBA::Boolean _tao_result = strm >> _tao_temp;
-  
-  if (_tao_result == 1)
-    {
-      _tao_enumval = ACE_static_cast (CORBA::AttributeMode, _tao_temp);
-    }
-  
-  return _tao_result;
-}
-
-ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const CORBA::OperationMode &_tao_enumval)
-{
-  CORBA::ULong _tao_temp = _tao_enumval;
-  return strm << _tao_temp;
-}
-
-ACE_INLINE CORBA::Boolean operator>> (TAO_InputCDR &strm, CORBA::OperationMode &_tao_enumval)
-{
-  CORBA::ULong _tao_temp = 0;
-  CORBA::Boolean _tao_result = strm >> _tao_temp;
-  
-  if (_tao_result == 1)
-    {
-      _tao_enumval = ACE_static_cast (CORBA::OperationMode, _tao_temp);
-    }
-  
-  return _tao_result;
-}
-
-ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const CORBA::ParameterMode &_tao_enumval)
-{
-  CORBA::ULong _tao_temp = _tao_enumval;
-  return strm << _tao_temp;
-}
-
-ACE_INLINE CORBA::Boolean operator>> (TAO_InputCDR &strm, CORBA::ParameterMode &_tao_enumval)
-{
-  CORBA::ULong _tao_temp = 0;
-  CORBA::Boolean _tao_result = strm >> _tao_temp;
-  
-  if (_tao_result == 1)
-    {
-      _tao_enumval = ACE_static_cast (CORBA::ParameterMode, _tao_temp);
-    }
-  
-  return _tao_result;
-}
-
 TAO_IFR_Client_Export CORBA::Boolean operator<< (
     TAO_OutputCDR &,
-    const CORBA_PrimitiveDef_ptr
+    const CORBA::PrimitiveDef_ptr
   );
 
 TAO_IFR_Client_Export CORBA::Boolean operator>> (
     TAO_InputCDR &,
-    CORBA_PrimitiveDef_ptr &
+    CORBA::PrimitiveDef_ptr &
   );
 
 TAO_IFR_Client_Export CORBA::Boolean operator<< (
@@ -5232,6 +5156,25 @@
     CORBA_FixedDef_ptr &
   );
 
+ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const CORBA::PrimitiveKind &_tao_enumval)
+{
+  CORBA::ULong _tao_temp = _tao_enumval;
+  return strm << _tao_temp;
+}
+
+ACE_INLINE CORBA::Boolean operator>> (TAO_InputCDR &strm, CORBA::PrimitiveKind &_tao_enumval)
+{
+  CORBA::ULong _tao_temp = 0;
+  CORBA::Boolean _tao_result = strm >> _tao_temp;
+  
+  if (_tao_result == 1)
+    {
+      _tao_enumval = ACE_static_cast (CORBA::PrimitiveKind, _tao_temp);
+    }
+  
+  return _tao_result;
+}
+
 TAO_IFR_Client_Export CORBA::Boolean operator<< (
     TAO_OutputCDR &,
     const CORBA_Repository_ptr
@@ -5442,6 +5385,25 @@
 
 #endif /* _TAO_CDR_OP_CORBA_ExcDescriptionSeq_I_ */
 
+ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const CORBA::AttributeMode &_tao_enumval)
+{
+  CORBA::ULong _tao_temp = _tao_enumval;
+  return strm << _tao_temp;
+}
+
+ACE_INLINE CORBA::Boolean operator>> (TAO_InputCDR &strm, CORBA::AttributeMode &_tao_enumval)
+{
+  CORBA::ULong _tao_temp = 0;
+  CORBA::Boolean _tao_result = strm >> _tao_temp;
+  
+  if (_tao_result == 1)
+    {
+      _tao_enumval = ACE_static_cast (CORBA::AttributeMode, _tao_temp);
+    }
+  
+  return _tao_result;
+}
+
 TAO_IFR_Client_Export CORBA::Boolean operator<< (
     TAO_OutputCDR &,
     const CORBA_AttributeDef_ptr
@@ -5482,6 +5444,44 @@
   else
     return 0;
   
+}
+
+ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const CORBA::OperationMode &_tao_enumval)
+{
+  CORBA::ULong _tao_temp = _tao_enumval;
+  return strm << _tao_temp;
+}
+
+ACE_INLINE CORBA::Boolean operator>> (TAO_InputCDR &strm, CORBA::OperationMode &_tao_enumval)
+{
+  CORBA::ULong _tao_temp = 0;
+  CORBA::Boolean _tao_result = strm >> _tao_temp;
+  
+  if (_tao_result == 1)
+    {
+      _tao_enumval = ACE_static_cast (CORBA::OperationMode, _tao_temp);
+    }
+  
+  return _tao_result;
+}
+
+ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const CORBA::ParameterMode &_tao_enumval)
+{
+  CORBA::ULong _tao_temp = _tao_enumval;
+  return strm << _tao_temp;
+}
+
+ACE_INLINE CORBA::Boolean operator>> (TAO_InputCDR &strm, CORBA::ParameterMode &_tao_enumval)
+{
+  CORBA::ULong _tao_temp = 0;
+  CORBA::Boolean _tao_result = strm >> _tao_temp;
+  
+  if (_tao_result == 1)
+    {
+      _tao_enumval = ACE_static_cast (CORBA::ParameterMode, _tao_temp);
+    }
+  
+  return _tao_result;
 }
 
 ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const CORBA_ParameterDescription &_tao_aggregate)
