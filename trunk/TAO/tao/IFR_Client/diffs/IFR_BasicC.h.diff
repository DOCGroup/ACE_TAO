--- orig/IFR_BasicC.h	Tue Apr 24 23:25:50 2001
+++ IFR_BasicC.h	Tue Apr 24 22:38:54 2001
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -23,15 +23,12 @@
 #define _TAO_IDL_IFR_BASICC_H_
 
 #include "ace/pre.h"
-#include "tao/corba.h"
+#include "IFR_BaseC.h"
 
 #if !defined (ACE_LACKS_PRAGMA_ONCE)
 # pragma once
 #endif /* ACE_LACKS_PRAGMA_ONCE */
 
-#include "ifr_client_export.h"
-#include "IFR_BaseC.h"
-
 #if defined (TAO_EXPORT_MACRO)
 #undef TAO_EXPORT_MACRO
 #endif
@@ -55,65 +52,6 @@
 #pragma option push -w-rvl -w-rch -w-ccc -w-inl
 #endif /* __BORLANDC__ */
 
-TAO_NAMESPACE  CORBA
-{
-  enum PrimitiveKind
-  {
-        pk_null,
-        pk_void,
-        pk_short,
-        pk_long,
-        pk_ushort,
-        pk_ulong,
-        pk_float,
-        pk_double,
-        pk_boolean,
-        pk_char,
-        pk_octet,
-        pk_any,
-        pk_TypeCode,
-        pk_Principal,
-        pk_string,
-        pk_objref,
-        pk_longlong,
-        pk_ulonglong,
-        pk_longdouble,
-        pk_wchar,
-        pk_wstring,
-        pk_value_base    
-  };
-  typedef PrimitiveKind &PrimitiveKind_out;
-  TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_PrimitiveKind;
-
-  enum AttributeMode
-  {
-        ATTR_NORMAL,
-        ATTR_READONLY    
-  };
-  typedef AttributeMode &AttributeMode_out;
-  TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_AttributeMode;
-
-  enum OperationMode
-  {
-        OP_NORMAL,
-        OP_ONEWAY    
-  };
-  typedef OperationMode &OperationMode_out;
-  TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_OperationMode;
-
-  enum ParameterMode
-  {
-        PARAM_IN,
-        PARAM_OUT,
-        PARAM_INOUT    
-  };
-  typedef ParameterMode &ParameterMode_out;
-  TAO_NAMESPACE_STORAGE_CLASS CORBA::TypeCode_ptr _tc_ParameterMode;
-
-
-}
-TAO_NAMESPACE_CLOSE // module CORBA
-
 class CORBA_PrimitiveDef;
 
 #if !defined (_CORBA_PRIMITIVEDEF___PTR_CH_)
@@ -131,33 +69,33 @@
 {
 public:
   CORBA_PrimitiveDef_var (void); // default constructor
-  CORBA_PrimitiveDef_var (CORBA_PrimitiveDef_ptr p) : ptr_ (p) {} 
+  CORBA_PrimitiveDef_var (CORBA::PrimitiveDef_ptr p) : ptr_ (p) {} 
   CORBA_PrimitiveDef_var (const CORBA_PrimitiveDef_var &); // copy constructor
   ~CORBA_PrimitiveDef_var (void); // destructor
   
-  CORBA_PrimitiveDef_var &operator= (CORBA_PrimitiveDef_ptr);
+  CORBA_PrimitiveDef_var &operator= (CORBA::PrimitiveDef_ptr);
   CORBA_PrimitiveDef_var &operator= (const CORBA_PrimitiveDef_var &);
-  CORBA_PrimitiveDef_ptr operator-> (void) const;
+  CORBA::PrimitiveDef_ptr operator-> (void) const;
   
-  operator const CORBA_PrimitiveDef_ptr &() const;
-  operator CORBA_PrimitiveDef_ptr &();
+  operator const CORBA::PrimitiveDef_ptr &() const;
+  operator CORBA::PrimitiveDef_ptr &();
   // in, inout, out, _retn 
-  CORBA_PrimitiveDef_ptr in (void) const;
-  CORBA_PrimitiveDef_ptr &inout (void);
-  CORBA_PrimitiveDef_ptr &out (void);
-  CORBA_PrimitiveDef_ptr _retn (void);
-  CORBA_PrimitiveDef_ptr ptr (void) const;
+  CORBA::PrimitiveDef_ptr in (void) const;
+  CORBA::PrimitiveDef_ptr &inout (void);
+  CORBA::PrimitiveDef_ptr &out (void);
+  CORBA::PrimitiveDef_ptr _retn (void);
+  CORBA::PrimitiveDef_ptr ptr (void) const;
   
   // Hooks used by template sequence and object manager classes
   // for non-defined forward declared interfaces.
-  static CORBA_PrimitiveDef_ptr duplicate (CORBA_PrimitiveDef_ptr);
-  static void release (CORBA_PrimitiveDef_ptr);
-  static CORBA_PrimitiveDef_ptr nil (void);
-  static CORBA_PrimitiveDef_ptr narrow (CORBA::Object *, CORBA::Environment &);
+  static CORBA::PrimitiveDef_ptr duplicate (CORBA::PrimitiveDef_ptr);
+  static void release (CORBA::PrimitiveDef_ptr);
+  static CORBA::PrimitiveDef_ptr nil (void);
+  static CORBA::PrimitiveDef_ptr narrow (CORBA::Object *, CORBA::Environment &);
   static CORBA::Object * upcast (void *);
 
 private:
-  CORBA_PrimitiveDef_ptr ptr_;
+  CORBA::PrimitiveDef_ptr ptr_;
   // Unimplemented - prevents widening assignment.
   CORBA_PrimitiveDef_var (const TAO_Base_var &rhs);
   CORBA_PrimitiveDef_var &operator= (const TAO_Base_var &rhs);
@@ -173,18 +111,18 @@
 class TAO_IFR_Client_Export CORBA_PrimitiveDef_out
 {
 public:
-  CORBA_PrimitiveDef_out (CORBA_PrimitiveDef_ptr &);
+  CORBA_PrimitiveDef_out (CORBA::PrimitiveDef_ptr &);
   CORBA_PrimitiveDef_out (CORBA_PrimitiveDef_var &);
   CORBA_PrimitiveDef_out (const CORBA_PrimitiveDef_out &);
   CORBA_PrimitiveDef_out &operator= (const CORBA_PrimitiveDef_out &);
   CORBA_PrimitiveDef_out &operator= (const CORBA_PrimitiveDef_var &);
-  CORBA_PrimitiveDef_out &operator= (CORBA_PrimitiveDef_ptr);
-  operator CORBA_PrimitiveDef_ptr &();
-  CORBA_PrimitiveDef_ptr &ptr (void);
-  CORBA_PrimitiveDef_ptr operator-> (void);
+  CORBA_PrimitiveDef_out &operator= (CORBA::PrimitiveDef_ptr);
+  operator CORBA::PrimitiveDef_ptr &();
+  CORBA::PrimitiveDef_ptr &ptr (void);
+  CORBA::PrimitiveDef_ptr operator-> (void);
 
 private:
-  CORBA_PrimitiveDef_ptr &ptr_;
+  CORBA::PrimitiveDef_ptr &ptr_;
 };
 
 
@@ -570,7 +508,6 @@
 
 #endif /* end #if !defined */
 
-
 #if !defined (_CORBA_REPOSITORY___PTR_CH_)
 #define _CORBA_REPOSITORY___PTR_CH_
 
@@ -701,7 +638,7 @@
       CORBA::SystemException
     ));
 
-  virtual CORBA_PrimitiveDef_ptr get_primitive (
+  virtual CORBA::PrimitiveDef_ptr get_primitive (
       CORBA::PrimitiveKind kind,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
@@ -828,7 +765,7 @@
       CORBA::SystemException
     )) = 0;
 
-  virtual CORBA_PrimitiveDef_ptr get_primitive (
+  virtual CORBA::PrimitiveDef_ptr get_primitive (
       CORBA_Object *_collocated_tao_target_,
       CORBA::PrimitiveKind kind,
       CORBA::Environment &ACE_TRY_ENV
@@ -927,7 +864,7 @@
       CORBA::SystemException
     ));
 
-  virtual CORBA_PrimitiveDef_ptr get_primitive (
+  virtual CORBA::PrimitiveDef_ptr get_primitive (
       CORBA_Object *_collocated_tao_target_,
       CORBA::PrimitiveKind kind,
       CORBA::Environment &ACE_TRY_ENV
@@ -1055,8 +992,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_Repository;
-
 
 #if !defined (_CORBA_MODULEDEF___PTR_CH_)
 #define _CORBA_MODULEDEF___PTR_CH_
@@ -1319,8 +1254,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_ModuleDef;
-
 struct CORBA_ModuleDescription;
 class CORBA_ModuleDescription_var;
 
@@ -1386,8 +1319,6 @@
   void operator= (const CORBA_ModuleDescription_var &);
 };
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_ModuleDescription;
-
 
 #if !defined (_CORBA_CONSTANTDEF___PTR_CH_)
 #define _CORBA_CONSTANTDEF___PTR_CH_
@@ -1774,8 +1705,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_ConstantDef;
-
 struct CORBA_ConstantDescription;
 class CORBA_ConstantDescription_var;
 
@@ -1843,8 +1772,6 @@
   void operator= (const CORBA_ConstantDescription_var &);
 };
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_ConstantDescription;
-
 
 #if !defined (_CORBA_STRUCTDEF___PTR_CH_)
 #define _CORBA_STRUCTDEF___PTR_CH_
@@ -2158,8 +2085,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_StructDef;
-
 
 #if !defined (_CORBA_UNIONDEF___PTR_CH_)
 #define _CORBA_UNIONDEF___PTR_CH_
@@ -2548,8 +2473,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_UnionDef;
-
 
 #if !defined (_CORBA_ENUMDEF___PTR_CH_)
 #define _CORBA_ENUMDEF___PTR_CH_
@@ -2861,8 +2784,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_EnumDef;
-
 
 #if !defined (_CORBA_ALIASDEF___PTR_CH_)
 #define _CORBA_ALIASDEF___PTR_CH_
@@ -3174,8 +3095,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_AliasDef;
-
 
 #if !defined (_CORBA_NATIVEDEF___PTR_CH_)
 #define _CORBA_NATIVEDEF___PTR_CH_
@@ -3436,8 +3355,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_NativeDef;
-
 
 #if !defined (_CORBA_PRIMITIVEDEF_CH_)
 #define _CORBA_PRIMITIVEDEF_CH_
@@ -3452,25 +3369,25 @@
 {
 public:
 #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
-  typedef CORBA_PrimitiveDef_ptr _ptr_type;
+  typedef CORBA::PrimitiveDef_ptr _ptr_type;
   typedef CORBA_PrimitiveDef_var _var_type;
 #endif /* ! __GNUC__ || g++ >= 2.8 */
 
   // the static operations
-  static CORBA_PrimitiveDef_ptr _duplicate (CORBA_PrimitiveDef_ptr obj);
-  static CORBA_PrimitiveDef_ptr _narrow (
+  static CORBA::PrimitiveDef_ptr _duplicate (CORBA::PrimitiveDef_ptr obj);
+  static CORBA::PrimitiveDef_ptr _narrow (
       CORBA::Object_ptr obj,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
-  static CORBA_PrimitiveDef_ptr _unchecked_narrow (
+  static CORBA::PrimitiveDef_ptr _unchecked_narrow (
       CORBA::Object_ptr obj,
       CORBA::Environment &ACE_TRY_ENV = 
         TAO_default_environment ()
     );
-  static CORBA_PrimitiveDef_ptr _nil (void)
+  static CORBA::PrimitiveDef_ptr _nil (void)
     {
-      return (CORBA_PrimitiveDef_ptr)0;
+      return (CORBA::PrimitiveDef_ptr)0;
     }
 
   static void _tao_any_destructor (void*);
@@ -3646,8 +3563,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_PrimitiveDef;
-
 
 #if !defined (_CORBA_STRINGDEF_CH_)
 #define _CORBA_STRINGDEF_CH_
@@ -3883,8 +3798,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_StringDef;
-
 
 #if !defined (_CORBA_WSTRINGDEF_CH_)
 #define _CORBA_WSTRINGDEF_CH_
@@ -4120,8 +4033,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_WstringDef;
-
 
 #if !defined (_CORBA_SEQUENCEDEF_CH_)
 #define _CORBA_SEQUENCEDEF_CH_
@@ -4247,8 +4158,7 @@
 //                    Base  Impl. Declaration
 //
 
-class TAO_IFR_Client_Export _TAO_CORBA_SequenceDef_Proxy_Impl : 
-  public virtual _TAO_CORBA_IDLType_Proxy_Impl
+class TAO_IFR_Client_Export _TAO_CORBA_SequenceDef_Proxy_Impl : public virtual TAO_Object_Proxy_Impl
 {
 public:
   virtual ~_TAO_CORBA_SequenceDef_Proxy_Impl (void) { }
@@ -4310,9 +4220,7 @@
 
 class TAO_IFR_Client_Export _TAO_CORBA_SequenceDef_Remote_Proxy_Impl : 
   public virtual _TAO_CORBA_SequenceDef_Proxy_Impl,
-  public virtual TAO_Remote_Object_Proxy_Impl,
-  public virtual _TAO_CORBA_IDLType_Remote_Proxy_Impl
-  
+  public virtual TAO_Remote_Object_Proxy_Impl
 {
 public:
   _TAO_CORBA_SequenceDef_Remote_Proxy_Impl (void);
@@ -4432,8 +4340,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_SequenceDef;
-
 
 #if !defined (_CORBA_ARRAYDEF_CH_)
 #define _CORBA_ARRAYDEF_CH_
@@ -4744,8 +4650,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_ArrayDef;
-
 
 #if !defined (_CORBA_EXCEPTIONDEF___PTR_CH_)
 #define _CORBA_EXCEPTIONDEF___PTR_CH_
@@ -5083,8 +4987,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_ExceptionDef;
-
 struct CORBA_ExceptionDescription;
 class CORBA_ExceptionDescription_var;
 
@@ -5151,8 +5053,6 @@
   void operator= (const CORBA_ExceptionDescription_var &);
 };
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_ExceptionDescription;
-
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
@@ -5303,8 +5203,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_ExceptionDefSeq;
-
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
@@ -5455,8 +5353,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_ExcDescriptionSeq;
-
 
 #if !defined (_CORBA_ATTRIBUTEDEF___PTR_CH_)
 #define _CORBA_ATTRIBUTEDEF___PTR_CH_
@@ -5843,8 +5739,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_AttributeDef;
-
 struct CORBA_AttributeDescription;
 class CORBA_AttributeDescription_var;
 
@@ -5912,8 +5806,6 @@
   void operator= (const CORBA_AttributeDescription_var &);
 };
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_AttributeDescription;
-
 struct CORBA_ParameterDescription;
 class CORBA_ParameterDescription_var;
 
@@ -5979,8 +5871,6 @@
   void operator= (const CORBA_ParameterDescription_var &);
 };
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_ParameterDescription;
-
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
@@ -6131,8 +6021,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_ParDescriptionSeq;
-
 
 #if !defined (_CORBA_CONTEXTIDSEQ_CH_)
 #define _CORBA_CONTEXTIDSEQ_CH_
@@ -6240,8 +6128,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_ContextIdSeq;
-
 
 #if !defined (_CORBA_OPERATIONDEF___PTR_CH_)
 #define _CORBA_OPERATIONDEF___PTR_CH_
@@ -6781,8 +6667,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_OperationDef;
-
 struct CORBA_OperationDescription;
 class CORBA_OperationDescription_var;
 
@@ -6853,8 +6737,6 @@
   void operator= (const CORBA_OperationDescription_var &);
 };
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_OperationDescription;
-
 
 #if !defined (_CORBA_REPOSITORYIDSEQ_CH_)
 #define _CORBA_REPOSITORYIDSEQ_CH_
@@ -6962,8 +6844,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_RepositoryIdSeq;
-
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
@@ -7114,8 +6994,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_OpDescriptionSeq;
-
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
   
@@ -7266,8 +7144,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_AttrDescriptionSeq;
-
 
 #if !defined (_CORBA_INTERFACEDEF___PTR_CH_)
 #define _CORBA_INTERFACEDEF___PTR_CH_
@@ -7792,8 +7668,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_InterfaceDef;
-
 struct CORBA_InterfaceDescription;
 class CORBA_InterfaceDescription_var;
 
@@ -7860,8 +7734,6 @@
   void operator= (const CORBA_InterfaceDescription_var &);
 };
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_InterfaceDescription;
-
 
 #if !defined (_CORBA_ABSTRACTINTERFACEDEF___PTR_CH_)
 #define _CORBA_ABSTRACTINTERFACEDEF___PTR_CH_
@@ -8122,8 +7994,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_AbstractInterfaceDef;
-
 
 #if !defined (_CORBA_LOCALINTERFACEDEF___PTR_CH_)
 #define _CORBA_LOCALINTERFACEDEF___PTR_CH_
@@ -8384,8 +8254,6 @@
 
 #endif /* end #if !defined */
 
-extern TAO_IFR_Client_Export CORBA::TypeCode_ptr  _tc_CORBA_LocalInterfaceDef;
-
 // Proxy Broker Factory function pointer declarations.
 
 extern TAO_IFR_Client_Export
@@ -8502,46 +8370,40 @@
     CORBA::Object_ptr obj
   );
 
-// External declarations for undefined interface
+// Declarations for undefined interface
 // CORBA_FixedDef
 TAO_IFR_Client_Export
 CORBA_FixedDef_ptr
 tao_CORBA_FixedDef_duplicate (
     CORBA_FixedDef_ptr
   );
-extern TAO_IFR_Client_Export
+TAO_IFR_Client_Export
 void
 tao_CORBA_FixedDef_release (
     CORBA_FixedDef_ptr
   );
-extern TAO_IFR_Client_Export
+TAO_IFR_Client_Export
 CORBA_FixedDef_ptr
 tao_CORBA_FixedDef_nil (
     void
   );
-extern TAO_IFR_Client_Export
+TAO_IFR_Client_Export
 CORBA_FixedDef_ptr
 tao_CORBA_FixedDef_narrow (
     CORBA::Object *,
     CORBA::Environment &
   );
-extern TAO_IFR_Client_Export
+TAO_IFR_Client_Export
 CORBA::Object *
 tao_CORBA_FixedDef_upcast (
     void *
   );
 
-TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::PrimitiveKind);
-TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::PrimitiveKind &);
-TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AttributeMode);
-TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::AttributeMode &);
-TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::OperationMode);
-TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::OperationMode &);
-TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ParameterMode);
-TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ParameterMode &);
 // Any operators for interface CORBA_FixedDef
 TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA_FixedDef_ptr);
 TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA_FixedDef *&);
+TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::PrimitiveKind);
+TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::PrimitiveKind &);
 // Any operators for interface CORBA_Repository
 TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA_Repository_ptr);
 TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA_Repository *&);
@@ -8575,7 +8437,7 @@
 TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA_NativeDef_ptr);
 TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA_NativeDef *&);
 // Any operators for interface CORBA_PrimitiveDef
-TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA_PrimitiveDef_ptr);
+TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::PrimitiveDef_ptr);
 TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA_PrimitiveDef *&);
 // Any operators for interface CORBA_StringDef
 TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA_StringDef_ptr);
@@ -8604,6 +8466,8 @@
 TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA_ExcDescriptionSeq*); // noncopying version
 TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA_ExcDescriptionSeq *&); // deprecated
 TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA_ExcDescriptionSeq *&);
+TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::AttributeMode);
+TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::AttributeMode &);
 // Any operators for interface CORBA_AttributeDef
 TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA_AttributeDef_ptr);
 TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA_AttributeDef *&);
@@ -8611,6 +8475,10 @@
 TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA_AttributeDescription*); // noncopying version
 TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA_AttributeDescription *&); // deprecated
 TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, const CORBA_AttributeDescription *&);
+TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::OperationMode);
+TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::OperationMode &);
+TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA::ParameterMode);
+TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA::ParameterMode &);
 TAO_IFR_Client_Export void operator<<= (CORBA::Any &, const CORBA_ParameterDescription &); // copying version
 TAO_IFR_Client_Export void operator<<= (CORBA::Any &, CORBA_ParameterDescription*); // noncopying version
 TAO_IFR_Client_Export CORBA::Boolean operator>>= (const CORBA::Any &, CORBA_ParameterDescription *&); // deprecated
@@ -8662,16 +8530,10 @@
 
 #ifndef __ACE_INLINE__
 
-TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::PrimitiveKind &); // 
-TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::PrimitiveKind &);
-TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AttributeMode &); // 
-TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AttributeMode &);
-TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::OperationMode &); // 
-TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::OperationMode &);
-TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ParameterMode &); // 
-TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ParameterMode &);
 TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA_FixedDef_ptr );
 TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA_FixedDef_ptr &);
+TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::PrimitiveKind &); // 
+TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::PrimitiveKind &);
 TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA_Repository_ptr );
 TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA_Repository_ptr &);
 TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA_ModuleDef_ptr );
@@ -8692,8 +8554,8 @@
 TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA_AliasDef_ptr &);
 TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA_NativeDef_ptr );
 TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA_NativeDef_ptr &);
-TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA_PrimitiveDef_ptr );
-TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA_PrimitiveDef_ptr &);
+TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::PrimitiveDef_ptr );
+TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::PrimitiveDef_ptr &);
 TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA_StringDef_ptr );
 TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA_StringDef_ptr &);
 TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA_WstringDef_ptr );
@@ -8736,10 +8598,16 @@
 
 #endif /* _TAO_CDR_OP_CORBA_ExcDescriptionSeq_H_ */
 
+TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::AttributeMode &); // 
+TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::AttributeMode &);
 TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA_AttributeDef_ptr );
 TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA_AttributeDef_ptr &);
 TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA_AttributeDescription &);
 TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA_AttributeDescription &);
+TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::OperationMode &); // 
+TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::OperationMode &);
+TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA::ParameterMode &); // 
+TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA::ParameterMode &);
 TAO_IFR_Client_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const CORBA_ParameterDescription &);
 TAO_IFR_Client_Export CORBA::Boolean operator>> (TAO_InputCDR &, CORBA_ParameterDescription &);
 
