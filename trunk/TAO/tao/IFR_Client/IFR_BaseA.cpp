// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

#include "IFR_BaseC.h"
#include "tao/Null_RefCount_Policy.h"
#include "tao/TypeCode_Constants.h"
#include "tao/Alias_TypeCode.h"
#include "tao/Enum_TypeCode.h"
#include "tao/Objref_TypeCode.h"
#include "tao/Sequence_TypeCode.h"
#include "tao/String_TypeCode.h"
#include "tao/Struct_TypeCode.h"
#include "tao/CDR.h"
#include "tao/Any.h"
#include "tao/Any_Impl_T.h"
#include "tao/Any_Dual_Impl_T.h"
#include "tao/Any_Basic_Impl_T.h"

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            CORBA::tk_alias,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ScopedName (
    "IDL:omg.org/CORBA/ScopedName:1.0",
    "ScopedName",
    &CORBA::_tc_string);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ScopedName =
    &_tao_tc_CORBA_ScopedName;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/enum_typecode.cpp:34

static char const * const _tao_enumerators_CORBA_DefinitionKind[] =
  {
    "dk_none",
    "dk_all",
    "dk_Attribute",
    "dk_Constant",
    "dk_Exception",
    "dk_Interface",
    "dk_Module",
    "dk_Operation",
    "dk_Typedef",
    "dk_Alias",
    "dk_Struct",
    "dk_Union",
    "dk_Enum",
    "dk_Primitive",
    "dk_String",
    "dk_Sequence",
    "dk_Array",
    "dk_Repository",
    "dk_Wstring",
    "dk_Fixed",
    "dk_Value",
    "dk_ValueBox",
    "dk_ValueMember",
    "dk_Native",
    "dk_AbstractInterface",
    "dk_LocalInterface",
    "dk_Component",
    "dk_Home",
    "dk_Factory",
    "dk_Finder",
    "dk_Emits",
    "dk_Publishes",
    "dk_Consumes",
    "dk_Provides",
    "dk_Uses",
    "dk_Event"
    
  };

static TAO::TypeCode::Enum<char const *,
                           char const * const *,
                           TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_DefinitionKind (
    "IDL:omg.org/CORBA/DefinitionKind:1.0",
    "DefinitionKind",
    _tao_enumerators_CORBA_DefinitionKind,
    36);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_DefinitionKind =
    &_tao_tc_CORBA_DefinitionKind;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:73

static TAO::TypeCode::Objref<char const *,
                             CORBA::tk_objref,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_IRObject (
    "IDL:omg.org/CORBA/IRObject:1.0",
    "IRObject");
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_IRObject =
    &_tao_tc_CORBA_IRObject;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            CORBA::tk_alias,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_VersionSpec (
    "IDL:omg.org/CORBA/VersionSpec:1.0",
    "VersionSpec",
    &CORBA::_tc_string);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_VersionSpec =
    &_tao_tc_CORBA_VersionSpec;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:34

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_Contained_Description[] =
  {
    { "kind", &CORBA::_tc_DefinitionKind },
    { "value", &CORBA::_tc_any }
    
  };
static TAO::TypeCode::Struct<char const *,
                             CORBA::TypeCode_ptr const *,
                             TAO::TypeCode::Struct_Field<char const *,
                                                         CORBA::TypeCode_ptr const *> const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_Contained_Description (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/Contained/Description:1.0",
    "Description",
    _tao_fields_CORBA_Contained_Description,
    2);
  
::CORBA::TypeCode_ptr const CORBA::Contained::_tc_Description =
  &_tao_tc_CORBA_Contained_Description;

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:73

static TAO::TypeCode::Objref<char const *,
                             CORBA::tk_objref,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_Contained (
    "IDL:omg.org/CORBA/Contained:1.0",
    "Contained");
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_Contained =
    &_tao_tc_CORBA_Contained;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:914

namespace CORBA
{
  extern ::CORBA::TypeCode_ptr const _tc_InterfaceDef;
}

namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence<CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_InterfaceDefSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_InterfaceDef,
        0U);
      
    ::CORBA::TypeCode_ptr const tc_CORBA_InterfaceDefSeq_0 =
      &CORBA_InterfaceDefSeq_0;
    
  }
}

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            CORBA::tk_alias,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_InterfaceDefSeq (
    "IDL:omg.org/CORBA/InterfaceDefSeq:1.0",
    "InterfaceDefSeq",
    &TAO::TypeCode::tc_CORBA_InterfaceDefSeq_0);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_InterfaceDefSeq =
    &_tao_tc_CORBA_InterfaceDefSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:914

namespace CORBA
{
  extern ::CORBA::TypeCode_ptr const _tc_ValueDef;
}

namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence<CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ValueDefSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ValueDef,
        0U);
      
    ::CORBA::TypeCode_ptr const tc_CORBA_ValueDefSeq_0 =
      &CORBA_ValueDefSeq_0;
    
  }
}

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            CORBA::tk_alias,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ValueDefSeq (
    "IDL:omg.org/CORBA/ValueDefSeq:1.0",
    "ValueDefSeq",
    &TAO::TypeCode::tc_CORBA_ValueDefSeq_0);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ValueDefSeq =
    &_tao_tc_CORBA_ValueDefSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:914

namespace CORBA
{
  extern ::CORBA::TypeCode_ptr const _tc_AbstractInterfaceDef;
}

namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence<CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_AbstractInterfaceDefSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_AbstractInterfaceDef,
        0U);
      
    ::CORBA::TypeCode_ptr const tc_CORBA_AbstractInterfaceDefSeq_0 =
      &CORBA_AbstractInterfaceDefSeq_0;
    
  }
}

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            CORBA::tk_alias,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_AbstractInterfaceDefSeq (
    "IDL:omg.org/CORBA/AbstractInterfaceDefSeq:1.0",
    "AbstractInterfaceDefSeq",
    &TAO::TypeCode::tc_CORBA_AbstractInterfaceDefSeq_0);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_AbstractInterfaceDefSeq =
    &_tao_tc_CORBA_AbstractInterfaceDefSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:914

namespace CORBA
{
  extern ::CORBA::TypeCode_ptr const _tc_LocalInterfaceDef;
}

namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence<CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_LocalInterfaceDefSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_LocalInterfaceDef,
        0U);
      
    ::CORBA::TypeCode_ptr const tc_CORBA_LocalInterfaceDefSeq_0 =
      &CORBA_LocalInterfaceDefSeq_0;
    
  }
}

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            CORBA::tk_alias,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_LocalInterfaceDefSeq (
    "IDL:omg.org/CORBA/LocalInterfaceDefSeq:1.0",
    "LocalInterfaceDefSeq",
    &TAO::TypeCode::tc_CORBA_LocalInterfaceDefSeq_0);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_LocalInterfaceDefSeq =
    &_tao_tc_CORBA_LocalInterfaceDefSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:914

namespace CORBA
{
  extern ::CORBA::TypeCode_ptr const _tc_ExtInterfaceDef;
}

namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence<CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ExtInterfaceDefSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ExtInterfaceDef,
        0U);
      
    ::CORBA::TypeCode_ptr const tc_CORBA_ExtInterfaceDefSeq_0 =
      &CORBA_ExtInterfaceDefSeq_0;
    
  }
}

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            CORBA::tk_alias,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtInterfaceDefSeq (
    "IDL:omg.org/CORBA/ExtInterfaceDefSeq:1.0",
    "ExtInterfaceDefSeq",
    &TAO::TypeCode::tc_CORBA_ExtInterfaceDefSeq_0);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtInterfaceDefSeq =
    &_tao_tc_CORBA_ExtInterfaceDefSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:914

namespace CORBA
{
  extern ::CORBA::TypeCode_ptr const _tc_ExtValueDef;
}

namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence<CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ExtValueDefSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ExtValueDef,
        0U);
      
    ::CORBA::TypeCode_ptr const tc_CORBA_ExtValueDefSeq_0 =
      &CORBA_ExtValueDefSeq_0;
    
  }
}

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            CORBA::tk_alias,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtValueDefSeq (
    "IDL:omg.org/CORBA/ExtValueDefSeq:1.0",
    "ExtValueDefSeq",
    &TAO::TypeCode::tc_CORBA_ExtValueDefSeq_0);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtValueDefSeq =
    &_tao_tc_CORBA_ExtValueDefSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:914

namespace CORBA
{
  extern ::CORBA::TypeCode_ptr const _tc_ExtAbstractInterfaceDef;
}

namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence<CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ExtAbstractInterfaceDefSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ExtAbstractInterfaceDef,
        0U);
      
    ::CORBA::TypeCode_ptr const tc_CORBA_ExtAbstractInterfaceDefSeq_0 =
      &CORBA_ExtAbstractInterfaceDefSeq_0;
    
  }
}

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            CORBA::tk_alias,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtAbstractInterfaceDefSeq (
    "IDL:omg.org/CORBA/ExtAbstractInterfaceDefSeq:1.0",
    "ExtAbstractInterfaceDefSeq",
    &TAO::TypeCode::tc_CORBA_ExtAbstractInterfaceDefSeq_0);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtAbstractInterfaceDefSeq =
    &_tao_tc_CORBA_ExtAbstractInterfaceDefSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:914

namespace CORBA
{
  extern ::CORBA::TypeCode_ptr const _tc_ExtLocalInterfaceDef;
}

namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence<CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ExtLocalInterfaceDefSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ExtLocalInterfaceDef,
        0U);
      
    ::CORBA::TypeCode_ptr const tc_CORBA_ExtLocalInterfaceDefSeq_0 =
      &CORBA_ExtLocalInterfaceDefSeq_0;
    
  }
}

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            CORBA::tk_alias,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtLocalInterfaceDefSeq (
    "IDL:omg.org/CORBA/ExtLocalInterfaceDefSeq:1.0",
    "ExtLocalInterfaceDefSeq",
    &TAO::TypeCode::tc_CORBA_ExtLocalInterfaceDefSeq_0);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtLocalInterfaceDefSeq =
    &_tao_tc_CORBA_ExtLocalInterfaceDefSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:914

namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence<CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ContainedSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_Contained,
        0U);
      
    ::CORBA::TypeCode_ptr const tc_CORBA_ContainedSeq_0 =
      &CORBA_ContainedSeq_0;
    
  }
}

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            CORBA::tk_alias,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ContainedSeq (
    "IDL:omg.org/CORBA/ContainedSeq:1.0",
    "ContainedSeq",
    &TAO::TypeCode::tc_CORBA_ContainedSeq_0);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ContainedSeq =
    &_tao_tc_CORBA_ContainedSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:34

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_StructMember[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "type", &CORBA::_tc_TypeCode },
    { "type_def", &CORBA::_tc_IDLType }
    
  };
static TAO::TypeCode::Struct<char const *,
                             CORBA::TypeCode_ptr const *,
                             TAO::TypeCode::Struct_Field<char const *,
                                                         CORBA::TypeCode_ptr const *> const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_StructMember (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/StructMember:1.0",
    "StructMember",
    _tao_fields_CORBA_StructMember,
    3);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_StructMember =
    &_tao_tc_CORBA_StructMember;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:914

namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence<CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_StructMemberSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_StructMember,
        0U);
      
    ::CORBA::TypeCode_ptr const tc_CORBA_StructMemberSeq_0 =
      &CORBA_StructMemberSeq_0;
    
  }
}

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            CORBA::tk_alias,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_StructMemberSeq (
    "IDL:omg.org/CORBA/StructMemberSeq:1.0",
    "StructMemberSeq",
    &TAO::TypeCode::tc_CORBA_StructMemberSeq_0);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_StructMemberSeq =
    &_tao_tc_CORBA_StructMemberSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:34

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_Initializer[] =
  {
    { "members", &CORBA::_tc_StructMemberSeq },
    { "name", &CORBA::_tc_Identifier }
    
  };
static TAO::TypeCode::Struct<char const *,
                             CORBA::TypeCode_ptr const *,
                             TAO::TypeCode::Struct_Field<char const *,
                                                         CORBA::TypeCode_ptr const *> const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_Initializer (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/Initializer:1.0",
    "Initializer",
    _tao_fields_CORBA_Initializer,
    2);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_Initializer =
    &_tao_tc_CORBA_Initializer;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:914

namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence<CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_InitializerSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_Initializer,
        0U);
      
    ::CORBA::TypeCode_ptr const tc_CORBA_InitializerSeq_0 =
      &CORBA_InitializerSeq_0;
    
  }
}

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            CORBA::tk_alias,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_InitializerSeq (
    "IDL:omg.org/CORBA/InitializerSeq:1.0",
    "InitializerSeq",
    &TAO::TypeCode::tc_CORBA_InitializerSeq_0);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_InitializerSeq =
    &_tao_tc_CORBA_InitializerSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:34

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_ExceptionDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "type", &CORBA::_tc_TypeCode }
    
  };
static TAO::TypeCode::Struct<char const *,
                             CORBA::TypeCode_ptr const *,
                             TAO::TypeCode::Struct_Field<char const *,
                                                         CORBA::TypeCode_ptr const *> const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExceptionDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/ExceptionDescription:1.0",
    "ExceptionDescription",
    _tao_fields_CORBA_ExceptionDescription,
    5);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExceptionDescription =
    &_tao_tc_CORBA_ExceptionDescription;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:914

namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence<CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ExcDescriptionSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ExceptionDescription,
        0U);
      
    ::CORBA::TypeCode_ptr const tc_CORBA_ExcDescriptionSeq_0 =
      &CORBA_ExcDescriptionSeq_0;
    
  }
}

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            CORBA::tk_alias,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExcDescriptionSeq (
    "IDL:omg.org/CORBA/ExcDescriptionSeq:1.0",
    "ExcDescriptionSeq",
    &TAO::TypeCode::tc_CORBA_ExcDescriptionSeq_0);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExcDescriptionSeq =
    &_tao_tc_CORBA_ExcDescriptionSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:34

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_ExtInitializer[] =
  {
    { "members", &CORBA::_tc_StructMemberSeq },
    { "exceptions", &CORBA::_tc_ExcDescriptionSeq },
    { "name", &CORBA::_tc_Identifier }
    
  };
static TAO::TypeCode::Struct<char const *,
                             CORBA::TypeCode_ptr const *,
                             TAO::TypeCode::Struct_Field<char const *,
                                                         CORBA::TypeCode_ptr const *> const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtInitializer (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/ExtInitializer:1.0",
    "ExtInitializer",
    _tao_fields_CORBA_ExtInitializer,
    3);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtInitializer =
    &_tao_tc_CORBA_ExtInitializer;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:914

namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence<CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_ExtInitializerSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_ExtInitializer,
        0U);
      
    ::CORBA::TypeCode_ptr const tc_CORBA_ExtInitializerSeq_0 =
      &CORBA_ExtInitializerSeq_0;
    
  }
}

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            CORBA::tk_alias,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_ExtInitializerSeq (
    "IDL:omg.org/CORBA/ExtInitializerSeq:1.0",
    "ExtInitializerSeq",
    &TAO::TypeCode::tc_CORBA_ExtInitializerSeq_0);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_ExtInitializerSeq =
    &_tao_tc_CORBA_ExtInitializerSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:34

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_UnionMember[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "label", &CORBA::_tc_any },
    { "type", &CORBA::_tc_TypeCode },
    { "type_def", &CORBA::_tc_IDLType }
    
  };
static TAO::TypeCode::Struct<char const *,
                             CORBA::TypeCode_ptr const *,
                             TAO::TypeCode::Struct_Field<char const *,
                                                         CORBA::TypeCode_ptr const *> const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_UnionMember (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/UnionMember:1.0",
    "UnionMember",
    _tao_fields_CORBA_UnionMember,
    4);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_UnionMember =
    &_tao_tc_CORBA_UnionMember;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:914

namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence<CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_UnionMemberSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_UnionMember,
        0U);
      
    ::CORBA::TypeCode_ptr const tc_CORBA_UnionMemberSeq_0 =
      &CORBA_UnionMemberSeq_0;
    
  }
}

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            CORBA::tk_alias,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_UnionMemberSeq (
    "IDL:omg.org/CORBA/UnionMemberSeq:1.0",
    "UnionMemberSeq",
    &TAO::TypeCode::tc_CORBA_UnionMemberSeq_0);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_UnionMemberSeq =
    &_tao_tc_CORBA_UnionMemberSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:914

namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence<CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_EnumMemberSeq_0 (
        CORBA::tk_sequence,
        &CORBA::_tc_Identifier,
        0U);
      
    ::CORBA::TypeCode_ptr const tc_CORBA_EnumMemberSeq_0 =
      &CORBA_EnumMemberSeq_0;
    
  }
}

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            CORBA::tk_alias,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_EnumMemberSeq (
    "IDL:omg.org/CORBA/EnumMemberSeq:1.0",
    "EnumMemberSeq",
    &TAO::TypeCode::tc_CORBA_EnumMemberSeq_0);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_EnumMemberSeq =
    &_tao_tc_CORBA_EnumMemberSeq;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:34

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_Container_Description[] =
  {
    { "contained_object", &CORBA::_tc_Contained },
    { "kind", &CORBA::_tc_DefinitionKind },
    { "value", &CORBA::_tc_any }
    
  };
static TAO::TypeCode::Struct<char const *,
                             CORBA::TypeCode_ptr const *,
                             TAO::TypeCode::Struct_Field<char const *,
                                                         CORBA::TypeCode_ptr const *> const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_Container_Description (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/Container/Description:1.0",
    "Description",
    _tao_fields_CORBA_Container_Description,
    3);
  
::CORBA::TypeCode_ptr const CORBA::Container::_tc_Description =
  &_tao_tc_CORBA_Container_Description;

// TAO_IDL - Generated from
// be/be_visitor_typecode/alias_typecode.cpp:31



// TAO_IDL - Generated from
// be/be_visitor_typecode/typecode_defn.cpp:914

namespace TAO
{
  namespace TypeCode
  {
    TAO::TypeCode::Sequence<CORBA::TypeCode_ptr const *,
                            TAO::Null_RefCount_Policy>
      CORBA_Container_DescriptionSeq_0 (
        CORBA::tk_sequence,
        &CORBA::Container::_tc_Description,
        0U);
      
    ::CORBA::TypeCode_ptr const tc_CORBA_Container_DescriptionSeq_0 =
      &CORBA_Container_DescriptionSeq_0;
    
  }
}

static TAO::TypeCode::Alias<char const *,
                            CORBA::TypeCode_ptr const *,
                            CORBA::tk_alias,
                            TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_Container_DescriptionSeq (
    "IDL:omg.org/CORBA/Container/DescriptionSeq:1.0",
    "DescriptionSeq",
    &TAO::TypeCode::tc_CORBA_Container_DescriptionSeq_0);
  
::CORBA::TypeCode_ptr const CORBA::Container::_tc_DescriptionSeq =
  &_tao_tc_CORBA_Container_DescriptionSeq;

// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:73

static TAO::TypeCode::Objref<char const *,
                             CORBA::tk_objref,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_Container (
    "IDL:omg.org/CORBA/Container:1.0",
    "Container");
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_Container =
    &_tao_tc_CORBA_Container;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:73

static TAO::TypeCode::Objref<char const *,
                             CORBA::tk_objref,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_IDLType (
    "IDL:omg.org/CORBA/IDLType:1.0",
    "IDLType");
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_IDLType =
    &_tao_tc_CORBA_IDLType;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/objref_typecode.cpp:73

static TAO::TypeCode::Objref<char const *,
                             CORBA::tk_objref,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_TypedefDef (
    "IDL:omg.org/CORBA/TypedefDef:1.0",
    "TypedefDef");
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_TypedefDef =
    &_tao_tc_CORBA_TypedefDef;
}



// TAO_IDL - Generated from
// be/be_visitor_typecode/struct_typecode.cpp:34

static TAO::TypeCode::Struct_Field<char const *, CORBA::TypeCode_ptr const *> const _tao_fields_CORBA_TypeDescription[] =
  {
    { "name", &CORBA::_tc_Identifier },
    { "id", &CORBA::_tc_RepositoryId },
    { "defined_in", &CORBA::_tc_RepositoryId },
    { "version", &CORBA::_tc_VersionSpec },
    { "type", &CORBA::_tc_TypeCode }
    
  };
static TAO::TypeCode::Struct<char const *,
                             CORBA::TypeCode_ptr const *,
                             TAO::TypeCode::Struct_Field<char const *,
                                                         CORBA::TypeCode_ptr const *> const *,
                             TAO::Null_RefCount_Policy>
  _tao_tc_CORBA_TypeDescription (
    CORBA::tk_struct,
    "IDL:omg.org/CORBA/TypeDescription:1.0",
    "TypeDescription",
    _tao_fields_CORBA_TypeDescription,
    5);
  
namespace CORBA
{
  ::CORBA::TypeCode_ptr const _tc_TypeDescription =
    &_tao_tc_CORBA_TypeDescription;
}



// TAO_IDL - Generated from
// be/be_visitor_enum/any_op_cs.cpp:52

void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::DefinitionKind _tao_elem
  )
{
  TAO::Any_Basic_Impl_T<CORBA::DefinitionKind>::insert (
      _tao_any,
      CORBA::_tc_DefinitionKind,
      _tao_elem
    );
}

CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::DefinitionKind &_tao_elem
  )
{
  return
    TAO::Any_Basic_Impl_T<CORBA::DefinitionKind>::extract (
        _tao_any,
        CORBA::_tc_DefinitionKind,
        _tao_elem 
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

template<>
CORBA::Boolean
TAO::Any_Impl_T<CORBA::IRObject>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return true;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::IRObject_ptr _tao_elem
  )
{
  CORBA::IRObject_ptr _tao_objptr =
    CORBA::IRObject::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::IRObject_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::IRObject>::insert (
      _tao_any,
      CORBA::IRObject::_tao_any_destructor,
      CORBA::_tc_IRObject,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::IRObject_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::IRObject>::extract (
        _tao_any,
        CORBA::IRObject::_tao_any_destructor,
        CORBA::_tc_IRObject,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

template<>
CORBA::Boolean
TAO::Any_Impl_T<CORBA::Contained>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return true;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Contained_ptr _tao_elem
  )
{
  CORBA::Contained_ptr _tao_objptr =
    CORBA::Contained::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Contained_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::Contained>::insert (
      _tao_any,
      CORBA::Contained::_tao_any_destructor,
      CORBA::_tc_Contained,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::Contained_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::Contained>::extract (
        _tao_any,
        CORBA::Contained::_tao_any_destructor,
        CORBA::_tc_Contained,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::Contained::Description &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::Contained::Description>::insert_copy (
      _tao_any,
      CORBA::Contained::Description::_tao_any_destructor,
      CORBA::Contained::_tc_Description,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Contained::Description *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::Contained::Description>::insert (
      _tao_any,
      CORBA::Contained::Description::_tao_any_destructor,
      CORBA::Contained::_tc_Description,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::Contained::Description *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::Contained::Description *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::Contained::Description *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::Contained::Description>::extract (
        _tao_any,
        CORBA::Contained::Description::_tao_any_destructor,
        CORBA::Contained::_tc_Description,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::InterfaceDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceDefSeq>::insert_copy (
      _tao_any,
      CORBA::InterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_InterfaceDefSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InterfaceDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InterfaceDefSeq>::insert (
      _tao_any,
      CORBA::InterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_InterfaceDefSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InterfaceDefSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::InterfaceDefSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::InterfaceDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::InterfaceDefSeq>::extract (
        _tao_any,
        CORBA::InterfaceDefSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_InterfaceDefSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ValueDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ValueDefSeq>::insert_copy (
      _tao_any,
      CORBA::ValueDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ValueDefSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ValueDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ValueDefSeq>::insert (
      _tao_any,
      CORBA::ValueDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ValueDefSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ValueDefSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ValueDefSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ValueDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ValueDefSeq>::extract (
        _tao_any,
        CORBA::ValueDefSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ValueDefSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::AbstractInterfaceDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::AbstractInterfaceDefSeq>::insert_copy (
      _tao_any,
      CORBA::AbstractInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_AbstractInterfaceDefSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::AbstractInterfaceDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::AbstractInterfaceDefSeq>::insert (
      _tao_any,
      CORBA::AbstractInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_AbstractInterfaceDefSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::AbstractInterfaceDefSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::AbstractInterfaceDefSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::AbstractInterfaceDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::AbstractInterfaceDefSeq>::extract (
        _tao_any,
        CORBA::AbstractInterfaceDefSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_AbstractInterfaceDefSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::LocalInterfaceDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::LocalInterfaceDefSeq>::insert_copy (
      _tao_any,
      CORBA::LocalInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_LocalInterfaceDefSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::LocalInterfaceDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::LocalInterfaceDefSeq>::insert (
      _tao_any,
      CORBA::LocalInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_LocalInterfaceDefSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::LocalInterfaceDefSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::LocalInterfaceDefSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::LocalInterfaceDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::LocalInterfaceDefSeq>::extract (
        _tao_any,
        CORBA::LocalInterfaceDefSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_LocalInterfaceDefSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExtInterfaceDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtInterfaceDefSeq>::insert_copy (
      _tao_any,
      CORBA::ExtInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtInterfaceDefSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtInterfaceDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtInterfaceDefSeq>::insert (
      _tao_any,
      CORBA::ExtInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtInterfaceDefSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtInterfaceDefSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExtInterfaceDefSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExtInterfaceDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExtInterfaceDefSeq>::extract (
        _tao_any,
        CORBA::ExtInterfaceDefSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ExtInterfaceDefSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExtValueDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtValueDefSeq>::insert_copy (
      _tao_any,
      CORBA::ExtValueDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtValueDefSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtValueDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtValueDefSeq>::insert (
      _tao_any,
      CORBA::ExtValueDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtValueDefSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtValueDefSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExtValueDefSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExtValueDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExtValueDefSeq>::extract (
        _tao_any,
        CORBA::ExtValueDefSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ExtValueDefSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExtAbstractInterfaceDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtAbstractInterfaceDefSeq>::insert_copy (
      _tao_any,
      CORBA::ExtAbstractInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtAbstractInterfaceDefSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtAbstractInterfaceDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtAbstractInterfaceDefSeq>::insert (
      _tao_any,
      CORBA::ExtAbstractInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtAbstractInterfaceDefSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtAbstractInterfaceDefSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExtAbstractInterfaceDefSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExtAbstractInterfaceDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExtAbstractInterfaceDefSeq>::extract (
        _tao_any,
        CORBA::ExtAbstractInterfaceDefSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ExtAbstractInterfaceDefSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExtLocalInterfaceDefSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtLocalInterfaceDefSeq>::insert_copy (
      _tao_any,
      CORBA::ExtLocalInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtLocalInterfaceDefSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtLocalInterfaceDefSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtLocalInterfaceDefSeq>::insert (
      _tao_any,
      CORBA::ExtLocalInterfaceDefSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtLocalInterfaceDefSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtLocalInterfaceDefSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExtLocalInterfaceDefSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExtLocalInterfaceDefSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExtLocalInterfaceDefSeq>::extract (
        _tao_any,
        CORBA::ExtLocalInterfaceDefSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ExtLocalInterfaceDefSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ContainedSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ContainedSeq>::insert_copy (
      _tao_any,
      CORBA::ContainedSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ContainedSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ContainedSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ContainedSeq>::insert (
      _tao_any,
      CORBA::ContainedSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ContainedSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ContainedSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ContainedSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ContainedSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ContainedSeq>::extract (
        _tao_any,
        CORBA::ContainedSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ContainedSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::StructMember &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::StructMember>::insert_copy (
      _tao_any,
      CORBA::StructMember::_tao_any_destructor,
      CORBA::_tc_StructMember,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::StructMember *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::StructMember>::insert (
      _tao_any,
      CORBA::StructMember::_tao_any_destructor,
      CORBA::_tc_StructMember,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::StructMember *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::StructMember *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::StructMember *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::StructMember>::extract (
        _tao_any,
        CORBA::StructMember::_tao_any_destructor,
        CORBA::_tc_StructMember,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::StructMemberSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::StructMemberSeq>::insert_copy (
      _tao_any,
      CORBA::StructMemberSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_StructMemberSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::StructMemberSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::StructMemberSeq>::insert (
      _tao_any,
      CORBA::StructMemberSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_StructMemberSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::StructMemberSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::StructMemberSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::StructMemberSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::StructMemberSeq>::extract (
        _tao_any,
        CORBA::StructMemberSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_StructMemberSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::Initializer &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::Initializer>::insert_copy (
      _tao_any,
      CORBA::Initializer::_tao_any_destructor,
      CORBA::_tc_Initializer,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Initializer *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::Initializer>::insert (
      _tao_any,
      CORBA::Initializer::_tao_any_destructor,
      CORBA::_tc_Initializer,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::Initializer *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::Initializer *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::Initializer *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::Initializer>::extract (
        _tao_any,
        CORBA::Initializer::_tao_any_destructor,
        CORBA::_tc_Initializer,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::InitializerSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InitializerSeq>::insert_copy (
      _tao_any,
      CORBA::InitializerSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_InitializerSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::InitializerSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::InitializerSeq>::insert (
      _tao_any,
      CORBA::InitializerSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_InitializerSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::InitializerSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::InitializerSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::InitializerSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::InitializerSeq>::extract (
        _tao_any,
        CORBA::InitializerSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_InitializerSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExceptionDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExceptionDescription>::insert_copy (
      _tao_any,
      CORBA::ExceptionDescription::_tao_any_destructor,
      CORBA::_tc_ExceptionDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExceptionDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExceptionDescription>::insert (
      _tao_any,
      CORBA::ExceptionDescription::_tao_any_destructor,
      CORBA::_tc_ExceptionDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExceptionDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExceptionDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExceptionDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExceptionDescription>::extract (
        _tao_any,
        CORBA::ExceptionDescription::_tao_any_destructor,
        CORBA::_tc_ExceptionDescription,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExcDescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExcDescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::ExcDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExcDescriptionSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExcDescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExcDescriptionSeq>::insert (
      _tao_any,
      CORBA::ExcDescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExcDescriptionSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExcDescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExcDescriptionSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExcDescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExcDescriptionSeq>::extract (
        _tao_any,
        CORBA::ExcDescriptionSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ExcDescriptionSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExtInitializer &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtInitializer>::insert_copy (
      _tao_any,
      CORBA::ExtInitializer::_tao_any_destructor,
      CORBA::_tc_ExtInitializer,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtInitializer *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtInitializer>::insert (
      _tao_any,
      CORBA::ExtInitializer::_tao_any_destructor,
      CORBA::_tc_ExtInitializer,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtInitializer *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExtInitializer *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExtInitializer *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExtInitializer>::extract (
        _tao_any,
        CORBA::ExtInitializer::_tao_any_destructor,
        CORBA::_tc_ExtInitializer,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::ExtInitializerSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtInitializerSeq>::insert_copy (
      _tao_any,
      CORBA::ExtInitializerSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtInitializerSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::ExtInitializerSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::ExtInitializerSeq>::insert (
      _tao_any,
      CORBA::ExtInitializerSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_ExtInitializerSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::ExtInitializerSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::ExtInitializerSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::ExtInitializerSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::ExtInitializerSeq>::extract (
        _tao_any,
        CORBA::ExtInitializerSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_ExtInitializerSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::UnionMember &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::UnionMember>::insert_copy (
      _tao_any,
      CORBA::UnionMember::_tao_any_destructor,
      CORBA::_tc_UnionMember,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::UnionMember *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::UnionMember>::insert (
      _tao_any,
      CORBA::UnionMember::_tao_any_destructor,
      CORBA::_tc_UnionMember,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::UnionMember *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::UnionMember *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::UnionMember *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::UnionMember>::extract (
        _tao_any,
        CORBA::UnionMember::_tao_any_destructor,
        CORBA::_tc_UnionMember,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::UnionMemberSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::UnionMemberSeq>::insert_copy (
      _tao_any,
      CORBA::UnionMemberSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_UnionMemberSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::UnionMemberSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::UnionMemberSeq>::insert (
      _tao_any,
      CORBA::UnionMemberSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_UnionMemberSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::UnionMemberSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::UnionMemberSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::UnionMemberSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::UnionMemberSeq>::extract (
        _tao_any,
        CORBA::UnionMemberSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_UnionMemberSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::EnumMemberSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::EnumMemberSeq>::insert_copy (
      _tao_any,
      CORBA::EnumMemberSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_EnumMemberSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::EnumMemberSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::EnumMemberSeq>::insert (
      _tao_any,
      CORBA::EnumMemberSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_EnumMemberSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::EnumMemberSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::EnumMemberSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::EnumMemberSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::EnumMemberSeq>::extract (
        _tao_any,
        CORBA::EnumMemberSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_EnumMemberSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

template<>
CORBA::Boolean
TAO::Any_Impl_T<CORBA::Container>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return true;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Container_ptr _tao_elem
  )
{
  CORBA::Container_ptr _tao_objptr =
    CORBA::Container::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Container_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::Container>::insert (
      _tao_any,
      CORBA::Container::_tao_any_destructor,
      CORBA::_tc_Container,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::Container_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::Container>::extract (
        _tao_any,
        CORBA::Container::_tao_any_destructor,
        CORBA::_tc_Container,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::Container::Description &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::Container::Description>::insert_copy (
      _tao_any,
      CORBA::Container::Description::_tao_any_destructor,
      CORBA::Container::_tc_Description,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Container::Description *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::Container::Description>::insert (
      _tao_any,
      CORBA::Container::Description::_tao_any_destructor,
      CORBA::Container::_tc_Description,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::Container::Description *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::Container::Description *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::Container::Description *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::Container::Description>::extract (
        _tao_any,
        CORBA::Container::Description::_tao_any_destructor,
        CORBA::Container::_tc_Description,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::Container::DescriptionSeq &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::Container::DescriptionSeq>::insert_copy (
      _tao_any,
      CORBA::Container::DescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_Container_DescriptionSeq_0,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::Container::DescriptionSeq *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::Container::DescriptionSeq>::insert (
      _tao_any,
      CORBA::Container::DescriptionSeq::_tao_any_destructor,
      TAO::TypeCode::tc_CORBA_Container_DescriptionSeq_0,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::Container::DescriptionSeq *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::Container::DescriptionSeq *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::Container::DescriptionSeq *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::Container::DescriptionSeq>::extract (
        _tao_any,
        CORBA::Container::DescriptionSeq::_tao_any_destructor,
        TAO::TypeCode::tc_CORBA_Container_DescriptionSeq_0,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

template<>
CORBA::Boolean
TAO::Any_Impl_T<CORBA::IDLType>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return true;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::IDLType_ptr _tao_elem
  )
{
  CORBA::IDLType_ptr _tao_objptr =
    CORBA::IDLType::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::IDLType_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::IDLType>::insert (
      _tao_any,
      CORBA::IDLType::_tao_any_destructor,
      CORBA::_tc_IDLType,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::IDLType_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::IDLType>::extract (
        _tao_any,
        CORBA::IDLType::_tao_any_destructor,
        CORBA::_tc_IDLType,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_cs.cpp:50

template<>
CORBA::Boolean
TAO::Any_Impl_T<CORBA::TypedefDef>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return true;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::TypedefDef_ptr _tao_elem
  )
{
  CORBA::TypedefDef_ptr _tao_objptr =
    CORBA::TypedefDef::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    CORBA::TypedefDef_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<CORBA::TypedefDef>::insert (
      _tao_any,
      CORBA::TypedefDef::_tao_any_destructor,
      CORBA::_tc_TypedefDef,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::TypedefDef_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<CORBA::TypedefDef>::extract (
        _tao_any,
        CORBA::TypedefDef::_tao_any_destructor,
        CORBA::_tc_TypedefDef,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be/be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const CORBA::TypeDescription &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::TypeDescription>::insert_copy (
      _tao_any,
      CORBA::TypeDescription::_tao_any_destructor,
      CORBA::_tc_TypeDescription,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    CORBA::TypeDescription *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<CORBA::TypeDescription>::insert (
      _tao_any,
      CORBA::TypeDescription::_tao_any_destructor,
      CORBA::_tc_TypeDescription,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    CORBA::TypeDescription *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const CORBA::TypeDescription *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const CORBA::TypeDescription *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<CORBA::TypeDescription>::extract (
        _tao_any,
        CORBA::TypeDescription::_tao_any_destructor,
        CORBA::_tc_TypeDescription,
        _tao_elem
      );
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)

  template class
    TAO::Any_Basic_Impl_T<
        CORBA::DefinitionKind
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::IRObject
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::Contained::Description
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::Contained
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::Container::Description
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::Container::DescriptionSeq
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::Container
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::IDLType
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::InterfaceDefSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::ValueDefSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::AbstractInterfaceDefSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::LocalInterfaceDefSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::ExtInterfaceDefSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::ExtValueDefSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::ExtAbstractInterfaceDefSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::ExtLocalInterfaceDefSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::ContainedSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::StructMember
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::StructMemberSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::Initializer
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::InitializerSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::ExceptionDescription
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::ExcDescriptionSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::ExtInitializer
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::ExtInitializerSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::UnionMember
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::UnionMemberSeq
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::EnumMemberSeq
      >;

  template class
    TAO::Any_Impl_T<
        CORBA::TypedefDef
      >;

  template class
    TAO::Any_Dual_Impl_T<
        CORBA::TypeDescription
      >;

#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)

# pragma instantiate \
    TAO::Any_Basic_Impl_T< \
        CORBA::DefinitionKind \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::IRObject \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::Contained::Description \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::Contained \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::Container::Description \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::Container::DescriptionSeq \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::Container \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::IDLType \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::InterfaceDefSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::ValueDefSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::AbstractInterfaceDefSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::LocalInterfaceDefSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::ExtInterfaceDefSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::ExtValueDefSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::ExtAbstractInterfaceDefSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::ExtLocalInterfaceDefSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::ContainedSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::StructMember \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::StructMemberSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::Initializer \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::InitializerSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::ExceptionDescription \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::ExcDescriptionSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::ExtInitializer \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::ExtInitializerSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::UnionMember \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::UnionMemberSeq \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::EnumMemberSeq \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        CORBA::TypedefDef \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        CORBA::TypeDescription \
      >

#endif /* !ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */ 
