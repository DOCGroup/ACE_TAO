// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:302


#include "IFR_BasicC.h"
#include "tao/CDR.h"
#include "tao/Exception_Data.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Object_Argument_T.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/UB_String_Arguments.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Any_Arg_Traits.h"
#include "ace/OS_NS_string.h"

#if defined (__BORLANDC__)
#pragma option -w-rvl -w-rch -w-ccc -w-aus -w-sig
#endif /* __BORLANDC__ */

#if !defined (__ACE_INLINE__)
#include "IFR_BasicC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be\be_visitor_arg_traits.cpp:66

// Arg traits specializations.
namespace TAO
{

#if !defined (_CORBA_CONTAINED__ARG_TRAITS_CS_)
#define _CORBA_CONTAINED__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::Contained>
    : public
        Object_Arg_Traits_T<
            CORBA::Contained_ptr,
            CORBA::Contained_var,
            CORBA::Contained_out,
            TAO::Objref_Traits<CORBA::Contained>
          >
  {
  };

#endif /* end #if !defined */

#if !defined (_CORBA_IDLTYPE__ARG_TRAITS_CS_)
#define _CORBA_IDLTYPE__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::IDLType>
    : public
        Object_Arg_Traits_T<
            CORBA::IDLType_ptr,
            CORBA::IDLType_var,
            CORBA::IDLType_out,
            TAO::Objref_Traits<CORBA::IDLType>
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:662

#if !defined (_CORBA_INTERFACEDEF_FULLINTERFACEDESCRIPTION__ARG_TRAITS_CS_)
#define _CORBA_INTERFACEDEF_FULLINTERFACEDESCRIPTION__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::InterfaceDef::FullInterfaceDescription>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::InterfaceDef::FullInterfaceDescription,
            CORBA::InterfaceDef::FullInterfaceDescription_var,
            CORBA::InterfaceDef::FullInterfaceDescription_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:433

#if !defined (_CORBA_INTERFACEDEFSEQ__ARG_TRAITS_CS_)
#define _CORBA_INTERFACEDEFSEQ__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::InterfaceDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::InterfaceDefSeq,
            CORBA::InterfaceDefSeq_var,
            CORBA::InterfaceDefSeq_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:433

#if !defined (_CORBA_STRUCTMEMBERSEQ__ARG_TRAITS_CS_)
#define _CORBA_STRUCTMEMBERSEQ__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::StructMemberSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::StructMemberSeq,
            CORBA::StructMemberSeq_var,
            CORBA::StructMemberSeq_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:433

#if !defined (_CORBA_EXCDESCRIPTIONSEQ__ARG_TRAITS_CS_)
#define _CORBA_EXCDESCRIPTIONSEQ__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::ExcDescriptionSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::ExcDescriptionSeq,
            CORBA::ExcDescriptionSeq_var,
            CORBA::ExcDescriptionSeq_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:433

#if !defined (_CORBA_UNIONMEMBERSEQ__ARG_TRAITS_CS_)
#define _CORBA_UNIONMEMBERSEQ__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::UnionMemberSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::UnionMemberSeq,
            CORBA::UnionMemberSeq_var,
            CORBA::UnionMemberSeq_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:433

#if !defined (_CORBA_ENUMMEMBERSEQ__ARG_TRAITS_CS_)
#define _CORBA_ENUMMEMBERSEQ__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::EnumMemberSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::EnumMemberSeq,
            CORBA::EnumMemberSeq_var,
            CORBA::EnumMemberSeq_out
          >
  {
  };

#endif /* end #if !defined */

#if !defined (_CORBA_PRIMITIVEDEF__ARG_TRAITS_CS_)
#define _CORBA_PRIMITIVEDEF__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::PrimitiveDef>
    : public
        Object_Arg_Traits_T<
            CORBA::PrimitiveDef_ptr,
            CORBA::PrimitiveDef_var,
            CORBA::PrimitiveDef_out,
            TAO::Objref_Traits<CORBA::PrimitiveDef>
          >
  {
  };

#endif /* end #if !defined */

#if !defined (_CORBA_STRINGDEF__ARG_TRAITS_CS_)
#define _CORBA_STRINGDEF__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::StringDef>
    : public
        Object_Arg_Traits_T<
            CORBA::StringDef_ptr,
            CORBA::StringDef_var,
            CORBA::StringDef_out,
            TAO::Objref_Traits<CORBA::StringDef>
          >
  {
  };

#endif /* end #if !defined */

#if !defined (_CORBA_SEQUENCEDEF__ARG_TRAITS_CS_)
#define _CORBA_SEQUENCEDEF__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::SequenceDef>
    : public
        Object_Arg_Traits_T<
            CORBA::SequenceDef_ptr,
            CORBA::SequenceDef_var,
            CORBA::SequenceDef_out,
            TAO::Objref_Traits<CORBA::SequenceDef>
          >
  {
  };

#endif /* end #if !defined */

#if !defined (_CORBA_ARRAYDEF__ARG_TRAITS_CS_)
#define _CORBA_ARRAYDEF__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::ArrayDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ArrayDef_ptr,
            CORBA::ArrayDef_var,
            CORBA::ArrayDef_out,
            TAO::Objref_Traits<CORBA::ArrayDef>
          >
  {
  };

#endif /* end #if !defined */

#if !defined (_CORBA_WSTRINGDEF__ARG_TRAITS_CS_)
#define _CORBA_WSTRINGDEF__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::WstringDef>
    : public
        Object_Arg_Traits_T<
            CORBA::WstringDef_ptr,
            CORBA::WstringDef_var,
            CORBA::WstringDef_out,
            TAO::Objref_Traits<CORBA::WstringDef>
          >
  {
  };

#endif /* end #if !defined */

#if !defined (_CORBA_FIXEDDEF__ARG_TRAITS_CS_)
#define _CORBA_FIXEDDEF__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::FixedDef>
    : public
        Object_Arg_Traits_T<
            CORBA::FixedDef_ptr,
            CORBA::FixedDef_var,
            CORBA::FixedDef_out,
            TAO::Objref_Traits<CORBA::FixedDef>
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:624

#if !defined (_CORBA_PRIMITIVEKIND__ARG_TRAITS_CS_)
#define _CORBA_PRIMITIVEKIND__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::PrimitiveKind>
    : public
        Basic_Arg_Traits_T<
            CORBA::PrimitiveKind
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:433

#if !defined (_CORBA_EXCEPTIONDEFSEQ__ARG_TRAITS_CS_)
#define _CORBA_EXCEPTIONDEFSEQ__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::ExceptionDefSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::ExceptionDefSeq,
            CORBA::ExceptionDefSeq_var,
            CORBA::ExceptionDefSeq_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:624

#if !defined (_CORBA_ATTRIBUTEMODE__ARG_TRAITS_CS_)
#define _CORBA_ATTRIBUTEMODE__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::AttributeMode>
    : public
        Basic_Arg_Traits_T<
            CORBA::AttributeMode
          >
  {
  };

#endif /* end #if !defined */

#if !defined (_CORBA_ATTRIBUTEDEF__ARG_TRAITS_CS_)
#define _CORBA_ATTRIBUTEDEF__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::AttributeDef>
    : public
        Object_Arg_Traits_T<
            CORBA::AttributeDef_ptr,
            CORBA::AttributeDef_var,
            CORBA::AttributeDef_out,
            TAO::Objref_Traits<CORBA::AttributeDef>
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:662

#if !defined (_CORBA_EXTATTRIBUTEDESCRIPTION__ARG_TRAITS_CS_)
#define _CORBA_EXTATTRIBUTEDESCRIPTION__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::ExtAttributeDescription>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::ExtAttributeDescription,
            CORBA::ExtAttributeDescription_var,
            CORBA::ExtAttributeDescription_out
          >
  {
  };

#endif /* end #if !defined */

#if !defined (_CORBA_EXTATTRIBUTEDEF__ARG_TRAITS_CS_)
#define _CORBA_EXTATTRIBUTEDEF__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::ExtAttributeDef>
    : public
        Object_Arg_Traits_T<
            CORBA::ExtAttributeDef_ptr,
            CORBA::ExtAttributeDef_var,
            CORBA::ExtAttributeDef_out,
            TAO::Objref_Traits<CORBA::ExtAttributeDef>
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:624

#if !defined (_CORBA_OPERATIONMODE__ARG_TRAITS_CS_)
#define _CORBA_OPERATIONMODE__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::OperationMode>
    : public
        Basic_Arg_Traits_T<
            CORBA::OperationMode
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:433

#if !defined (_CORBA_PARDESCRIPTIONSEQ__ARG_TRAITS_CS_)
#define _CORBA_PARDESCRIPTIONSEQ__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::ParDescriptionSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::ParDescriptionSeq,
            CORBA::ParDescriptionSeq_var,
            CORBA::ParDescriptionSeq_out
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:433

#if !defined (_CORBA_CONTEXTIDSEQ__ARG_TRAITS_CS_)
#define _CORBA_CONTEXTIDSEQ__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::ContextIdSeq>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::ContextIdSeq,
            CORBA::ContextIdSeq_var,
            CORBA::ContextIdSeq_out
          >
  {
  };

#endif /* end #if !defined */

#if !defined (_CORBA_OPERATIONDEF__ARG_TRAITS_CS_)
#define _CORBA_OPERATIONDEF__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::OperationDef>
    : public
        Object_Arg_Traits_T<
            CORBA::OperationDef_ptr,
            CORBA::OperationDef_var,
            CORBA::OperationDef_out,
            TAO::Objref_Traits<CORBA::OperationDef>
          >
  {
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be\be_visitor_arg_traits.cpp:662

#if !defined (_CORBA_INTERFACEATTREXTENSION_EXTFULLINTERFACEDESCRIPTION__ARG_TRAITS_CS_)
#define _CORBA_INTERFACEATTREXTENSION_EXTFULLINTERFACEDESCRIPTION__ARG_TRAITS_CS_
  
  ACE_TEMPLATE_SPECIALIZATION
  class TAO_IFR_Client_Export Arg_Traits<CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription>
    : public
        Var_Size_Arg_Traits_T<
            CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription,
            CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription_var,
            CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription_out
          >
  {
  };

#endif /* end #if !defined */
}


// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::Repository.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Repository_ptr
TAO::Objref_Traits<CORBA::Repository>::duplicate (
    CORBA::Repository_ptr p
  )
{
  return CORBA::Repository::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::Repository>::release (
    CORBA::Repository_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Repository_ptr
TAO::Objref_Traits<CORBA::Repository>::nil (void)
{
  return CORBA::Repository::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::Repository>::marshal (
    CORBA::Repository_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_Repository_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::Contained_ptr CORBA::Repository::lookup_id (
    const char * search_id
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Repository_Proxy_Broker_ == 0)
    {
      CORBA_Repository_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::Contained>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::RepositoryId>::in_arg_val _tao_search_id (search_id);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_search_id
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "lookup_id",
      9,
      this->the_TAO_Repository_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::TypeCode_ptr CORBA::Repository::get_canonical_typecode (
    ::CORBA::TypeCode_ptr tc
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Repository_Proxy_Broker_ == 0)
    {
      CORBA_Repository_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::TypeCode>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::TypeCode>::in_arg_val _tao_tc (tc);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_tc
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "get_canonical_typecode",
      22,
      this->the_TAO_Repository_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::PrimitiveDef_ptr CORBA::Repository::get_primitive (
    ::CORBA::PrimitiveKind kind
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Repository_Proxy_Broker_ == 0)
    {
      CORBA_Repository_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::PrimitiveDef>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::PrimitiveKind>::in_arg_val _tao_kind (kind);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_kind
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "get_primitive",
      13,
      this->the_TAO_Repository_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::StringDef_ptr CORBA::Repository::create_string (
    ::CORBA::ULong bound
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Repository_Proxy_Broker_ == 0)
    {
      CORBA_Repository_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::StringDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val _tao_bound (bound);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_bound
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "create_string",
      13,
      this->the_TAO_Repository_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::WstringDef_ptr CORBA::Repository::create_wstring (
    ::CORBA::ULong bound
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Repository_Proxy_Broker_ == 0)
    {
      CORBA_Repository_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::WstringDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val _tao_bound (bound);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_bound
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "create_wstring",
      14,
      this->the_TAO_Repository_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::SequenceDef_ptr CORBA::Repository::create_sequence (
    ::CORBA::ULong bound,
    ::CORBA::IDLType_ptr element_type
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Repository_Proxy_Broker_ == 0)
    {
      CORBA_Repository_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::SequenceDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val _tao_bound (bound);
  TAO::Arg_Traits< CORBA::IDLType>::in_arg_val _tao_element_type (element_type);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_bound,
      &_tao_element_type
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "create_sequence",
      15,
      this->the_TAO_Repository_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ArrayDef_ptr CORBA::Repository::create_array (
    ::CORBA::ULong length,
    ::CORBA::IDLType_ptr element_type
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Repository_Proxy_Broker_ == 0)
    {
      CORBA_Repository_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::ArrayDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val _tao_length (length);
  TAO::Arg_Traits< CORBA::IDLType>::in_arg_val _tao_element_type (element_type);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_length,
      &_tao_element_type
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "create_array",
      12,
      this->the_TAO_Repository_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::FixedDef_ptr CORBA::Repository::create_fixed (
    ::CORBA::UShort digits,
    ::CORBA::Short scale
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_Repository_Proxy_Broker_ == 0)
    {
      CORBA_Repository_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::FixedDef>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::UShort>::in_arg_val _tao_digits (digits);
  TAO::Arg_Traits< ::CORBA::Short>::in_arg_val _tao_scale (scale);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_digits,
      &_tao_scale
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "create_fixed",
      12,
      this->the_TAO_Repository_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

CORBA::Repository::Repository (void)
 : the_TAO_Repository_Proxy_Broker_ (0)
{
  this->CORBA_Repository_setup_collocation ();
}

void
CORBA::Repository::CORBA_Repository_setup_collocation ()
{
  if (::CORBA__TAO_Repository_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_Repository_Proxy_Broker_ =
        ::CORBA__TAO_Repository_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_Container_setup_collocation ();
}

CORBA::Repository::~Repository (void)
{}

void 
CORBA::Repository::_tao_any_destructor (void *_tao_void_pointer)
{
  Repository *_tao_tmp_pointer =
    static_cast<Repository *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::Repository_ptr
CORBA::Repository::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<Repository>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/Repository:1.0",
        CORBA__TAO_Repository_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::Repository_ptr
CORBA::Repository::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<Repository>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/Repository:1.0",
        CORBA__TAO_Repository_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::Repository_ptr
CORBA::Repository::_duplicate (Repository_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::Repository::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Repository:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::Repository::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/Repository:1.0";
}

CORBA::Boolean
CORBA::Repository::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ModuleDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::ModuleDef_ptr
TAO::Objref_Traits<CORBA::ModuleDef>::duplicate (
    CORBA::ModuleDef_ptr p
  )
{
  return CORBA::ModuleDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::ModuleDef>::release (
    CORBA::ModuleDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::ModuleDef_ptr
TAO::Objref_Traits<CORBA::ModuleDef>::nil (void)
{
  return CORBA::ModuleDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::ModuleDef>::marshal (
    CORBA::ModuleDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::ModuleDef::ModuleDef (void)
 : the_TAO_ModuleDef_Proxy_Broker_ (0)
{
  this->CORBA_ModuleDef_setup_collocation ();
}

void
CORBA::ModuleDef::CORBA_ModuleDef_setup_collocation ()
{
  if (::CORBA__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ModuleDef_Proxy_Broker_ =
        ::CORBA__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_Container_setup_collocation ();
  this->CORBA_Contained_setup_collocation ();
}

CORBA::ModuleDef::~ModuleDef (void)
{}

void 
CORBA::ModuleDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ModuleDef *_tao_tmp_pointer =
    static_cast<ModuleDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ModuleDef_ptr
CORBA::ModuleDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ModuleDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ModuleDef:1.0",
        CORBA__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ModuleDef_ptr
CORBA::ModuleDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ModuleDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ModuleDef:1.0",
        CORBA__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ModuleDef_ptr
CORBA::ModuleDef::_duplicate (ModuleDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::ModuleDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ModuleDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ModuleDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ModuleDef:1.0";
}

CORBA::Boolean
CORBA::ModuleDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from 
// be\be_visitor_structure/structure_cs.cpp:66

void 
CORBA::ModuleDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  ModuleDescription *_tao_tmp_pointer =
    static_cast<ModuleDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ConstantDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::ConstantDef_ptr
TAO::Objref_Traits<CORBA::ConstantDef>::duplicate (
    CORBA::ConstantDef_ptr p
  )
{
  return CORBA::ConstantDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::ConstantDef>::release (
    CORBA::ConstantDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::ConstantDef_ptr
TAO::Objref_Traits<CORBA::ConstantDef>::nil (void)
{
  return CORBA::ConstantDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::ConstantDef>::marshal (
    CORBA::ConstantDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_ConstantDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::TypeCode_ptr CORBA::ConstantDef::type (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ConstantDef_Proxy_Broker_ == 0)
    {
      CORBA_ConstantDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::TypeCode>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_type",
      9,
      this->the_TAO_ConstantDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::IDLType_ptr CORBA::ConstantDef::type_def (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ConstantDef_Proxy_Broker_ == 0)
    {
      CORBA_ConstantDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::IDLType>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_type_def",
      13,
      this->the_TAO_ConstantDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ConstantDef::type_def (
    ::CORBA::IDLType_ptr type_def
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ConstantDef_Proxy_Broker_ == 0)
    {
      CORBA_ConstantDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::IDLType>::in_arg_val _tao_type_def (type_def);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_type_def
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_type_def",
      13,
      this->the_TAO_ConstantDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::Any * CORBA::ConstantDef::value (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ConstantDef_Proxy_Broker_ == 0)
    {
      CORBA_ConstantDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::Any>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_value",
      10,
      this->the_TAO_ConstantDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ConstantDef::value (
    const ::CORBA::Any & value
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ConstantDef_Proxy_Broker_ == 0)
    {
      CORBA_ConstantDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Any>::in_arg_val _tao_value (value);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_value
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_value",
      10,
      this->the_TAO_ConstantDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::ConstantDef::ConstantDef (void)
 : the_TAO_ConstantDef_Proxy_Broker_ (0)
{
  this->CORBA_ConstantDef_setup_collocation ();
}

void
CORBA::ConstantDef::CORBA_ConstantDef_setup_collocation ()
{
  if (::CORBA__TAO_ConstantDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ConstantDef_Proxy_Broker_ =
        ::CORBA__TAO_ConstantDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_Contained_setup_collocation ();
}

CORBA::ConstantDef::~ConstantDef (void)
{}

void 
CORBA::ConstantDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ConstantDef *_tao_tmp_pointer =
    static_cast<ConstantDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ConstantDef_ptr
CORBA::ConstantDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ConstantDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ConstantDef:1.0",
        CORBA__TAO_ConstantDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ConstantDef_ptr
CORBA::ConstantDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ConstantDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ConstantDef:1.0",
        CORBA__TAO_ConstantDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ConstantDef_ptr
CORBA::ConstantDef::_duplicate (ConstantDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::ConstantDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ConstantDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ConstantDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ConstantDef:1.0";
}

CORBA::Boolean
CORBA::ConstantDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from 
// be\be_visitor_structure/structure_cs.cpp:66

void 
CORBA::ConstantDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  ConstantDescription *_tao_tmp_pointer =
    static_cast<ConstantDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::StructDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::StructDef_ptr
TAO::Objref_Traits<CORBA::StructDef>::duplicate (
    CORBA::StructDef_ptr p
  )
{
  return CORBA::StructDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::StructDef>::release (
    CORBA::StructDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::StructDef_ptr
TAO::Objref_Traits<CORBA::StructDef>::nil (void)
{
  return CORBA::StructDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::StructDef>::marshal (
    CORBA::StructDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_StructDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::StructMemberSeq * CORBA::StructDef::members (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_StructDef_Proxy_Broker_ == 0)
    {
      CORBA_StructDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::StructMemberSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_members",
      12,
      this->the_TAO_StructDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::StructDef::members (
    const ::CORBA::StructMemberSeq & members
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_StructDef_Proxy_Broker_ == 0)
    {
      CORBA_StructDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::StructMemberSeq>::in_arg_val _tao_members (members);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_members
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_members",
      12,
      this->the_TAO_StructDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::StructDef::StructDef (void)
 : the_TAO_StructDef_Proxy_Broker_ (0)
{
  this->CORBA_StructDef_setup_collocation ();
}

void
CORBA::StructDef::CORBA_StructDef_setup_collocation ()
{
  if (::CORBA__TAO_StructDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_StructDef_Proxy_Broker_ =
        ::CORBA__TAO_StructDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_TypedefDef_setup_collocation ();
  this->CORBA_Container_setup_collocation ();
}

CORBA::StructDef::~StructDef (void)
{}

void 
CORBA::StructDef::_tao_any_destructor (void *_tao_void_pointer)
{
  StructDef *_tao_tmp_pointer =
    static_cast<StructDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::StructDef_ptr
CORBA::StructDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<StructDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/StructDef:1.0",
        CORBA__TAO_StructDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::StructDef_ptr
CORBA::StructDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<StructDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/StructDef:1.0",
        CORBA__TAO_StructDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::StructDef_ptr
CORBA::StructDef::_duplicate (StructDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::StructDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/TypedefDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/StructDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::StructDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/StructDef:1.0";
}

CORBA::Boolean
CORBA::StructDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::UnionDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::UnionDef_ptr
TAO::Objref_Traits<CORBA::UnionDef>::duplicate (
    CORBA::UnionDef_ptr p
  )
{
  return CORBA::UnionDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::UnionDef>::release (
    CORBA::UnionDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::UnionDef_ptr
TAO::Objref_Traits<CORBA::UnionDef>::nil (void)
{
  return CORBA::UnionDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::UnionDef>::marshal (
    CORBA::UnionDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_UnionDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::TypeCode_ptr CORBA::UnionDef::discriminator_type (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_UnionDef_Proxy_Broker_ == 0)
    {
      CORBA_UnionDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::TypeCode>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_discriminator_type",
      23,
      this->the_TAO_UnionDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::IDLType_ptr CORBA::UnionDef::discriminator_type_def (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_UnionDef_Proxy_Broker_ == 0)
    {
      CORBA_UnionDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::IDLType>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_discriminator_type_def",
      27,
      this->the_TAO_UnionDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::UnionDef::discriminator_type_def (
    ::CORBA::IDLType_ptr discriminator_type_def
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_UnionDef_Proxy_Broker_ == 0)
    {
      CORBA_UnionDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::IDLType>::in_arg_val _tao_discriminator_type_def (discriminator_type_def);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_discriminator_type_def
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_discriminator_type_def",
      27,
      this->the_TAO_UnionDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::UnionMemberSeq * CORBA::UnionDef::members (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_UnionDef_Proxy_Broker_ == 0)
    {
      CORBA_UnionDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::UnionMemberSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_members",
      12,
      this->the_TAO_UnionDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::UnionDef::members (
    const ::CORBA::UnionMemberSeq & members
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_UnionDef_Proxy_Broker_ == 0)
    {
      CORBA_UnionDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::UnionMemberSeq>::in_arg_val _tao_members (members);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_members
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_members",
      12,
      this->the_TAO_UnionDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::UnionDef::UnionDef (void)
 : the_TAO_UnionDef_Proxy_Broker_ (0)
{
  this->CORBA_UnionDef_setup_collocation ();
}

void
CORBA::UnionDef::CORBA_UnionDef_setup_collocation ()
{
  if (::CORBA__TAO_UnionDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_UnionDef_Proxy_Broker_ =
        ::CORBA__TAO_UnionDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_TypedefDef_setup_collocation ();
  this->CORBA_Container_setup_collocation ();
}

CORBA::UnionDef::~UnionDef (void)
{}

void 
CORBA::UnionDef::_tao_any_destructor (void *_tao_void_pointer)
{
  UnionDef *_tao_tmp_pointer =
    static_cast<UnionDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::UnionDef_ptr
CORBA::UnionDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<UnionDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/UnionDef:1.0",
        CORBA__TAO_UnionDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::UnionDef_ptr
CORBA::UnionDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<UnionDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/UnionDef:1.0",
        CORBA__TAO_UnionDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::UnionDef_ptr
CORBA::UnionDef::_duplicate (UnionDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::UnionDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/TypedefDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/UnionDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::UnionDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/UnionDef:1.0";
}

CORBA::Boolean
CORBA::UnionDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::EnumDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::EnumDef_ptr
TAO::Objref_Traits<CORBA::EnumDef>::duplicate (
    CORBA::EnumDef_ptr p
  )
{
  return CORBA::EnumDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::EnumDef>::release (
    CORBA::EnumDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::EnumDef_ptr
TAO::Objref_Traits<CORBA::EnumDef>::nil (void)
{
  return CORBA::EnumDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::EnumDef>::marshal (
    CORBA::EnumDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_EnumDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::EnumMemberSeq * CORBA::EnumDef::members (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EnumDef_Proxy_Broker_ == 0)
    {
      CORBA_EnumDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::EnumMemberSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_members",
      12,
      this->the_TAO_EnumDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::EnumDef::members (
    const ::CORBA::EnumMemberSeq & members
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_EnumDef_Proxy_Broker_ == 0)
    {
      CORBA_EnumDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::EnumMemberSeq>::in_arg_val _tao_members (members);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_members
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_members",
      12,
      this->the_TAO_EnumDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::EnumDef::EnumDef (void)
 : the_TAO_EnumDef_Proxy_Broker_ (0)
{
  this->CORBA_EnumDef_setup_collocation ();
}

void
CORBA::EnumDef::CORBA_EnumDef_setup_collocation ()
{
  if (::CORBA__TAO_EnumDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_EnumDef_Proxy_Broker_ =
        ::CORBA__TAO_EnumDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_TypedefDef_setup_collocation ();
}

CORBA::EnumDef::~EnumDef (void)
{}

void 
CORBA::EnumDef::_tao_any_destructor (void *_tao_void_pointer)
{
  EnumDef *_tao_tmp_pointer =
    static_cast<EnumDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::EnumDef_ptr
CORBA::EnumDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<EnumDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/EnumDef:1.0",
        CORBA__TAO_EnumDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::EnumDef_ptr
CORBA::EnumDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<EnumDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/EnumDef:1.0",
        CORBA__TAO_EnumDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::EnumDef_ptr
CORBA::EnumDef::_duplicate (EnumDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::EnumDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/TypedefDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/EnumDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::EnumDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/EnumDef:1.0";
}

CORBA::Boolean
CORBA::EnumDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::AliasDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::AliasDef_ptr
TAO::Objref_Traits<CORBA::AliasDef>::duplicate (
    CORBA::AliasDef_ptr p
  )
{
  return CORBA::AliasDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::AliasDef>::release (
    CORBA::AliasDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::AliasDef_ptr
TAO::Objref_Traits<CORBA::AliasDef>::nil (void)
{
  return CORBA::AliasDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::AliasDef>::marshal (
    CORBA::AliasDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_AliasDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::IDLType_ptr CORBA::AliasDef::original_type_def (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_AliasDef_Proxy_Broker_ == 0)
    {
      CORBA_AliasDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::IDLType>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_original_type_def",
      22,
      this->the_TAO_AliasDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::AliasDef::original_type_def (
    ::CORBA::IDLType_ptr original_type_def
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_AliasDef_Proxy_Broker_ == 0)
    {
      CORBA_AliasDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::IDLType>::in_arg_val _tao_original_type_def (original_type_def);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_original_type_def
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_original_type_def",
      22,
      this->the_TAO_AliasDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::AliasDef::AliasDef (void)
 : the_TAO_AliasDef_Proxy_Broker_ (0)
{
  this->CORBA_AliasDef_setup_collocation ();
}

void
CORBA::AliasDef::CORBA_AliasDef_setup_collocation ()
{
  if (::CORBA__TAO_AliasDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_AliasDef_Proxy_Broker_ =
        ::CORBA__TAO_AliasDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_TypedefDef_setup_collocation ();
}

CORBA::AliasDef::~AliasDef (void)
{}

void 
CORBA::AliasDef::_tao_any_destructor (void *_tao_void_pointer)
{
  AliasDef *_tao_tmp_pointer =
    static_cast<AliasDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::AliasDef_ptr
CORBA::AliasDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<AliasDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/AliasDef:1.0",
        CORBA__TAO_AliasDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::AliasDef_ptr
CORBA::AliasDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<AliasDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/AliasDef:1.0",
        CORBA__TAO_AliasDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::AliasDef_ptr
CORBA::AliasDef::_duplicate (AliasDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::AliasDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/TypedefDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/AliasDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::AliasDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/AliasDef:1.0";
}

CORBA::Boolean
CORBA::AliasDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::NativeDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::NativeDef_ptr
TAO::Objref_Traits<CORBA::NativeDef>::duplicate (
    CORBA::NativeDef_ptr p
  )
{
  return CORBA::NativeDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::NativeDef>::release (
    CORBA::NativeDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::NativeDef_ptr
TAO::Objref_Traits<CORBA::NativeDef>::nil (void)
{
  return CORBA::NativeDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::NativeDef>::marshal (
    CORBA::NativeDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_NativeDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::NativeDef::NativeDef (void)
 : the_TAO_NativeDef_Proxy_Broker_ (0)
{
  this->CORBA_NativeDef_setup_collocation ();
}

void
CORBA::NativeDef::CORBA_NativeDef_setup_collocation ()
{
  if (::CORBA__TAO_NativeDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_NativeDef_Proxy_Broker_ =
        ::CORBA__TAO_NativeDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_TypedefDef_setup_collocation ();
}

CORBA::NativeDef::~NativeDef (void)
{}

void 
CORBA::NativeDef::_tao_any_destructor (void *_tao_void_pointer)
{
  NativeDef *_tao_tmp_pointer =
    static_cast<NativeDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::NativeDef_ptr
CORBA::NativeDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<NativeDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/NativeDef:1.0",
        CORBA__TAO_NativeDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::NativeDef_ptr
CORBA::NativeDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<NativeDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/NativeDef:1.0",
        CORBA__TAO_NativeDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::NativeDef_ptr
CORBA::NativeDef::_duplicate (NativeDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::NativeDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/TypedefDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/NativeDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::NativeDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/NativeDef:1.0";
}

CORBA::Boolean
CORBA::NativeDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::PrimitiveDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::PrimitiveDef_ptr
TAO::Objref_Traits<CORBA::PrimitiveDef>::duplicate (
    CORBA::PrimitiveDef_ptr p
  )
{
  return CORBA::PrimitiveDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::PrimitiveDef>::release (
    CORBA::PrimitiveDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::PrimitiveDef_ptr
TAO::Objref_Traits<CORBA::PrimitiveDef>::nil (void)
{
  return CORBA::PrimitiveDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::PrimitiveDef>::marshal (
    CORBA::PrimitiveDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::PrimitiveKind CORBA::PrimitiveDef::kind (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_PrimitiveDef_Proxy_Broker_ == 0)
    {
      CORBA_PrimitiveDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::PrimitiveKind>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_kind",
      9,
      this->the_TAO_PrimitiveDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

CORBA::PrimitiveDef::PrimitiveDef (void)
 : the_TAO_PrimitiveDef_Proxy_Broker_ (0)
{
  this->CORBA_PrimitiveDef_setup_collocation ();
}

void
CORBA::PrimitiveDef::CORBA_PrimitiveDef_setup_collocation ()
{
  if (::CORBA__TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_PrimitiveDef_Proxy_Broker_ =
        ::CORBA__TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_IDLType_setup_collocation ();
}

CORBA::PrimitiveDef::~PrimitiveDef (void)
{}

void 
CORBA::PrimitiveDef::_tao_any_destructor (void *_tao_void_pointer)
{
  PrimitiveDef *_tao_tmp_pointer =
    static_cast<PrimitiveDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::PrimitiveDef_ptr
CORBA::PrimitiveDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<PrimitiveDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/PrimitiveDef:1.0",
        CORBA__TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::PrimitiveDef_ptr
CORBA::PrimitiveDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<PrimitiveDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/PrimitiveDef:1.0",
        CORBA__TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::PrimitiveDef_ptr
CORBA::PrimitiveDef::_duplicate (PrimitiveDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::PrimitiveDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/PrimitiveDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::PrimitiveDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/PrimitiveDef:1.0";
}

CORBA::Boolean
CORBA::PrimitiveDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::StringDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::StringDef_ptr
TAO::Objref_Traits<CORBA::StringDef>::duplicate (
    CORBA::StringDef_ptr p
  )
{
  return CORBA::StringDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::StringDef>::release (
    CORBA::StringDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::StringDef_ptr
TAO::Objref_Traits<CORBA::StringDef>::nil (void)
{
  return CORBA::StringDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::StringDef>::marshal (
    CORBA::StringDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_StringDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::ULong CORBA::StringDef::bound (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_StringDef_Proxy_Broker_ == 0)
    {
      CORBA_StringDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::ULong>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_bound",
      10,
      this->the_TAO_StringDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::StringDef::bound (
    ::CORBA::ULong bound
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_StringDef_Proxy_Broker_ == 0)
    {
      CORBA_StringDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val _tao_bound (bound);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_bound
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_bound",
      10,
      this->the_TAO_StringDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::StringDef::StringDef (void)
 : the_TAO_StringDef_Proxy_Broker_ (0)
{
  this->CORBA_StringDef_setup_collocation ();
}

void
CORBA::StringDef::CORBA_StringDef_setup_collocation ()
{
  if (::CORBA__TAO_StringDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_StringDef_Proxy_Broker_ =
        ::CORBA__TAO_StringDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_IDLType_setup_collocation ();
}

CORBA::StringDef::~StringDef (void)
{}

void 
CORBA::StringDef::_tao_any_destructor (void *_tao_void_pointer)
{
  StringDef *_tao_tmp_pointer =
    static_cast<StringDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::StringDef_ptr
CORBA::StringDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<StringDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/StringDef:1.0",
        CORBA__TAO_StringDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::StringDef_ptr
CORBA::StringDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<StringDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/StringDef:1.0",
        CORBA__TAO_StringDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::StringDef_ptr
CORBA::StringDef::_duplicate (StringDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::StringDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/StringDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::StringDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/StringDef:1.0";
}

CORBA::Boolean
CORBA::StringDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::WstringDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::WstringDef_ptr
TAO::Objref_Traits<CORBA::WstringDef>::duplicate (
    CORBA::WstringDef_ptr p
  )
{
  return CORBA::WstringDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::WstringDef>::release (
    CORBA::WstringDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::WstringDef_ptr
TAO::Objref_Traits<CORBA::WstringDef>::nil (void)
{
  return CORBA::WstringDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::WstringDef>::marshal (
    CORBA::WstringDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_WstringDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::ULong CORBA::WstringDef::bound (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_WstringDef_Proxy_Broker_ == 0)
    {
      CORBA_WstringDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::ULong>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_bound",
      10,
      this->the_TAO_WstringDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::WstringDef::bound (
    ::CORBA::ULong bound
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_WstringDef_Proxy_Broker_ == 0)
    {
      CORBA_WstringDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val _tao_bound (bound);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_bound
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_bound",
      10,
      this->the_TAO_WstringDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::WstringDef::WstringDef (void)
 : the_TAO_WstringDef_Proxy_Broker_ (0)
{
  this->CORBA_WstringDef_setup_collocation ();
}

void
CORBA::WstringDef::CORBA_WstringDef_setup_collocation ()
{
  if (::CORBA__TAO_WstringDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_WstringDef_Proxy_Broker_ =
        ::CORBA__TAO_WstringDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_IDLType_setup_collocation ();
}

CORBA::WstringDef::~WstringDef (void)
{}

void 
CORBA::WstringDef::_tao_any_destructor (void *_tao_void_pointer)
{
  WstringDef *_tao_tmp_pointer =
    static_cast<WstringDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::WstringDef_ptr
CORBA::WstringDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<WstringDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/WstringDef:1.0",
        CORBA__TAO_WstringDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::WstringDef_ptr
CORBA::WstringDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<WstringDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/WstringDef:1.0",
        CORBA__TAO_WstringDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::WstringDef_ptr
CORBA::WstringDef::_duplicate (WstringDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::WstringDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/WstringDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::WstringDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/WstringDef:1.0";
}

CORBA::Boolean
CORBA::WstringDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::SequenceDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::SequenceDef_ptr
TAO::Objref_Traits<CORBA::SequenceDef>::duplicate (
    CORBA::SequenceDef_ptr p
  )
{
  return CORBA::SequenceDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::SequenceDef>::release (
    CORBA::SequenceDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::SequenceDef_ptr
TAO::Objref_Traits<CORBA::SequenceDef>::nil (void)
{
  return CORBA::SequenceDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::SequenceDef>::marshal (
    CORBA::SequenceDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_SequenceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::ULong CORBA::SequenceDef::bound (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_SequenceDef_Proxy_Broker_ == 0)
    {
      CORBA_SequenceDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::ULong>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_bound",
      10,
      this->the_TAO_SequenceDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::SequenceDef::bound (
    ::CORBA::ULong bound
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_SequenceDef_Proxy_Broker_ == 0)
    {
      CORBA_SequenceDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val _tao_bound (bound);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_bound
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_bound",
      10,
      this->the_TAO_SequenceDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::TypeCode_ptr CORBA::SequenceDef::element_type (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_SequenceDef_Proxy_Broker_ == 0)
    {
      CORBA_SequenceDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::TypeCode>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_element_type",
      17,
      this->the_TAO_SequenceDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::IDLType_ptr CORBA::SequenceDef::element_type_def (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_SequenceDef_Proxy_Broker_ == 0)
    {
      CORBA_SequenceDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::IDLType>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_element_type_def",
      21,
      this->the_TAO_SequenceDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::SequenceDef::element_type_def (
    ::CORBA::IDLType_ptr element_type_def
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_SequenceDef_Proxy_Broker_ == 0)
    {
      CORBA_SequenceDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::IDLType>::in_arg_val _tao_element_type_def (element_type_def);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_element_type_def
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_element_type_def",
      21,
      this->the_TAO_SequenceDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::SequenceDef::SequenceDef (void)
 : the_TAO_SequenceDef_Proxy_Broker_ (0)
{
  this->CORBA_SequenceDef_setup_collocation ();
}

void
CORBA::SequenceDef::CORBA_SequenceDef_setup_collocation ()
{
  if (::CORBA__TAO_SequenceDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_SequenceDef_Proxy_Broker_ =
        ::CORBA__TAO_SequenceDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_IDLType_setup_collocation ();
}

CORBA::SequenceDef::~SequenceDef (void)
{}

void 
CORBA::SequenceDef::_tao_any_destructor (void *_tao_void_pointer)
{
  SequenceDef *_tao_tmp_pointer =
    static_cast<SequenceDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::SequenceDef_ptr
CORBA::SequenceDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<SequenceDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/SequenceDef:1.0",
        CORBA__TAO_SequenceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::SequenceDef_ptr
CORBA::SequenceDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<SequenceDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/SequenceDef:1.0",
        CORBA__TAO_SequenceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::SequenceDef_ptr
CORBA::SequenceDef::_duplicate (SequenceDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::SequenceDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/SequenceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::SequenceDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/SequenceDef:1.0";
}

CORBA::Boolean
CORBA::SequenceDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ArrayDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::ArrayDef_ptr
TAO::Objref_Traits<CORBA::ArrayDef>::duplicate (
    CORBA::ArrayDef_ptr p
  )
{
  return CORBA::ArrayDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::ArrayDef>::release (
    CORBA::ArrayDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::ArrayDef_ptr
TAO::Objref_Traits<CORBA::ArrayDef>::nil (void)
{
  return CORBA::ArrayDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::ArrayDef>::marshal (
    CORBA::ArrayDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_ArrayDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::ULong CORBA::ArrayDef::length (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ArrayDef_Proxy_Broker_ == 0)
    {
      CORBA_ArrayDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::ULong>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_length",
      11,
      this->the_TAO_ArrayDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ArrayDef::length (
    ::CORBA::ULong length
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ArrayDef_Proxy_Broker_ == 0)
    {
      CORBA_ArrayDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::ULong>::in_arg_val _tao_length (length);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_length
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_length",
      11,
      this->the_TAO_ArrayDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::TypeCode_ptr CORBA::ArrayDef::element_type (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ArrayDef_Proxy_Broker_ == 0)
    {
      CORBA_ArrayDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::TypeCode>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_element_type",
      17,
      this->the_TAO_ArrayDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::IDLType_ptr CORBA::ArrayDef::element_type_def (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ArrayDef_Proxy_Broker_ == 0)
    {
      CORBA_ArrayDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::IDLType>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_element_type_def",
      21,
      this->the_TAO_ArrayDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ArrayDef::element_type_def (
    ::CORBA::IDLType_ptr element_type_def
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ArrayDef_Proxy_Broker_ == 0)
    {
      CORBA_ArrayDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::IDLType>::in_arg_val _tao_element_type_def (element_type_def);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_element_type_def
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_element_type_def",
      21,
      this->the_TAO_ArrayDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::ArrayDef::ArrayDef (void)
 : the_TAO_ArrayDef_Proxy_Broker_ (0)
{
  this->CORBA_ArrayDef_setup_collocation ();
}

void
CORBA::ArrayDef::CORBA_ArrayDef_setup_collocation ()
{
  if (::CORBA__TAO_ArrayDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ArrayDef_Proxy_Broker_ =
        ::CORBA__TAO_ArrayDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_IDLType_setup_collocation ();
}

CORBA::ArrayDef::~ArrayDef (void)
{}

void 
CORBA::ArrayDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ArrayDef *_tao_tmp_pointer =
    static_cast<ArrayDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ArrayDef_ptr
CORBA::ArrayDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ArrayDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ArrayDef:1.0",
        CORBA__TAO_ArrayDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ArrayDef_ptr
CORBA::ArrayDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ArrayDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ArrayDef:1.0",
        CORBA__TAO_ArrayDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ArrayDef_ptr
CORBA::ArrayDef::_duplicate (ArrayDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::ArrayDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ArrayDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ArrayDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ArrayDef:1.0";
}

CORBA::Boolean
CORBA::ArrayDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ExceptionDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::ExceptionDef_ptr
TAO::Objref_Traits<CORBA::ExceptionDef>::duplicate (
    CORBA::ExceptionDef_ptr p
  )
{
  return CORBA::ExceptionDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::ExceptionDef>::release (
    CORBA::ExceptionDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::ExceptionDef_ptr
TAO::Objref_Traits<CORBA::ExceptionDef>::nil (void)
{
  return CORBA::ExceptionDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::ExceptionDef>::marshal (
    CORBA::ExceptionDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::TypeCode_ptr CORBA::ExceptionDef::type (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ExceptionDef_Proxy_Broker_ == 0)
    {
      CORBA_ExceptionDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::TypeCode>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_type",
      9,
      this->the_TAO_ExceptionDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::StructMemberSeq * CORBA::ExceptionDef::members (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ExceptionDef_Proxy_Broker_ == 0)
    {
      CORBA_ExceptionDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::StructMemberSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_members",
      12,
      this->the_TAO_ExceptionDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ExceptionDef::members (
    const ::CORBA::StructMemberSeq & members
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ExceptionDef_Proxy_Broker_ == 0)
    {
      CORBA_ExceptionDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::StructMemberSeq>::in_arg_val _tao_members (members);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_members
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_members",
      12,
      this->the_TAO_ExceptionDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::ExceptionDef::ExceptionDef (void)
 : the_TAO_ExceptionDef_Proxy_Broker_ (0)
{
  this->CORBA_ExceptionDef_setup_collocation ();
}

void
CORBA::ExceptionDef::CORBA_ExceptionDef_setup_collocation ()
{
  if (::CORBA__TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ExceptionDef_Proxy_Broker_ =
        ::CORBA__TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_Contained_setup_collocation ();
  this->CORBA_Container_setup_collocation ();
}

CORBA::ExceptionDef::~ExceptionDef (void)
{}

void 
CORBA::ExceptionDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ExceptionDef *_tao_tmp_pointer =
    static_cast<ExceptionDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ExceptionDef_ptr
CORBA::ExceptionDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExceptionDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExceptionDef:1.0",
        CORBA__TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExceptionDef_ptr
CORBA::ExceptionDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExceptionDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExceptionDef:1.0",
        CORBA__TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExceptionDef_ptr
CORBA::ExceptionDef::_duplicate (ExceptionDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::ExceptionDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ExceptionDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ExceptionDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ExceptionDef:1.0";
}

CORBA::Boolean
CORBA::ExceptionDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from 
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_EXCEPTIONDEFSEQ_CS_)
#define _CORBA_EXCEPTIONDEFSEQ_CS_

CORBA::ExceptionDefSeq::ExceptionDefSeq (void)
{}

CORBA::ExceptionDefSeq::ExceptionDefSeq (
    CORBA::ULong max
  )
  : TAO_Unbounded_Object_Sequence<
        CORBA::ExceptionDef,
        CORBA::ExceptionDef_var
      >
    (max)
{}

CORBA::ExceptionDefSeq::ExceptionDefSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::ExceptionDef_ptr * buffer,
    CORBA::Boolean release
  )
  : TAO_Unbounded_Object_Sequence<
        CORBA::ExceptionDef,
        CORBA::ExceptionDef_var
      >
    (max, length, buffer, release)
{}

CORBA::ExceptionDefSeq::ExceptionDefSeq (
    const ExceptionDefSeq &seq
  )
  : TAO_Unbounded_Object_Sequence<
        CORBA::ExceptionDef,
        CORBA::ExceptionDef_var
      >
    (seq)
{}

CORBA::ExceptionDefSeq::~ExceptionDefSeq (void)
{}

void CORBA::ExceptionDefSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ExceptionDefSeq * _tao_tmp_pointer =
    static_cast<ExceptionDefSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::AttributeDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::AttributeDef_ptr
TAO::Objref_Traits<CORBA::AttributeDef>::duplicate (
    CORBA::AttributeDef_ptr p
  )
{
  return CORBA::AttributeDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::AttributeDef>::release (
    CORBA::AttributeDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::AttributeDef_ptr
TAO::Objref_Traits<CORBA::AttributeDef>::nil (void)
{
  return CORBA::AttributeDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::AttributeDef>::marshal (
    CORBA::AttributeDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_AttributeDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::TypeCode_ptr CORBA::AttributeDef::type (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_AttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_AttributeDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::TypeCode>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_type",
      9,
      this->the_TAO_AttributeDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::IDLType_ptr CORBA::AttributeDef::type_def (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_AttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_AttributeDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::IDLType>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_type_def",
      13,
      this->the_TAO_AttributeDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::AttributeDef::type_def (
    ::CORBA::IDLType_ptr type_def
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_AttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_AttributeDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::IDLType>::in_arg_val _tao_type_def (type_def);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_type_def
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_type_def",
      13,
      this->the_TAO_AttributeDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::AttributeMode CORBA::AttributeDef::mode (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_AttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_AttributeDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::AttributeMode>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_mode",
      9,
      this->the_TAO_AttributeDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::AttributeDef::mode (
    ::CORBA::AttributeMode mode
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_AttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_AttributeDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::AttributeMode>::in_arg_val _tao_mode (mode);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_mode
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_mode",
      9,
      this->the_TAO_AttributeDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::AttributeDef::AttributeDef (void)
 : the_TAO_AttributeDef_Proxy_Broker_ (0)
{
  this->CORBA_AttributeDef_setup_collocation ();
}

void
CORBA::AttributeDef::CORBA_AttributeDef_setup_collocation ()
{
  if (::CORBA__TAO_AttributeDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_AttributeDef_Proxy_Broker_ =
        ::CORBA__TAO_AttributeDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_Contained_setup_collocation ();
}

CORBA::AttributeDef::~AttributeDef (void)
{}

void 
CORBA::AttributeDef::_tao_any_destructor (void *_tao_void_pointer)
{
  AttributeDef *_tao_tmp_pointer =
    static_cast<AttributeDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::AttributeDef_ptr
CORBA::AttributeDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<AttributeDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/AttributeDef:1.0",
        CORBA__TAO_AttributeDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::AttributeDef_ptr
CORBA::AttributeDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<AttributeDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/AttributeDef:1.0",
        CORBA__TAO_AttributeDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::AttributeDef_ptr
CORBA::AttributeDef::_duplicate (AttributeDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::AttributeDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/AttributeDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::AttributeDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/AttributeDef:1.0";
}

CORBA::Boolean
CORBA::AttributeDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from 
// be\be_visitor_structure/structure_cs.cpp:66

void 
CORBA::AttributeDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  AttributeDescription *_tao_tmp_pointer =
    static_cast<AttributeDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from 
// be\be_visitor_structure/structure_cs.cpp:66

void 
CORBA::ExtAttributeDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  ExtAttributeDescription *_tao_tmp_pointer =
    static_cast<ExtAttributeDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ExtAttributeDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::ExtAttributeDef_ptr
TAO::Objref_Traits<CORBA::ExtAttributeDef>::duplicate (
    CORBA::ExtAttributeDef_ptr p
  )
{
  return CORBA::ExtAttributeDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::ExtAttributeDef>::release (
    CORBA::ExtAttributeDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::ExtAttributeDef_ptr
TAO::Objref_Traits<CORBA::ExtAttributeDef>::nil (void)
{
  return CORBA::ExtAttributeDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::ExtAttributeDef>::marshal (
    CORBA::ExtAttributeDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_ExtAttributeDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ExcDescriptionSeq * CORBA::ExtAttributeDef::get_exceptions (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ExtAttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_ExtAttributeDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::ExcDescriptionSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_get_exceptions",
      19,
      this->the_TAO_ExtAttributeDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ExtAttributeDef::get_exceptions (
    const ::CORBA::ExcDescriptionSeq & get_exceptions
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ExtAttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_ExtAttributeDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::ExcDescriptionSeq>::in_arg_val _tao_get_exceptions (get_exceptions);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_get_exceptions
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_get_exceptions",
      19,
      this->the_TAO_ExtAttributeDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ExcDescriptionSeq * CORBA::ExtAttributeDef::set_exceptions (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ExtAttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_ExtAttributeDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::ExcDescriptionSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_set_exceptions",
      19,
      this->the_TAO_ExtAttributeDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::ExtAttributeDef::set_exceptions (
    const ::CORBA::ExcDescriptionSeq & set_exceptions
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ExtAttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_ExtAttributeDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::ExcDescriptionSeq>::in_arg_val _tao_set_exceptions (set_exceptions);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_set_exceptions
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_set_exceptions",
      19,
      this->the_TAO_ExtAttributeDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ExtAttributeDescription * CORBA::ExtAttributeDef::describe_attribute (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_ExtAttributeDef_Proxy_Broker_ == 0)
    {
      CORBA_ExtAttributeDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::ExtAttributeDescription>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "describe_attribute",
      18,
      this->the_TAO_ExtAttributeDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

CORBA::ExtAttributeDef::ExtAttributeDef (void)
 : the_TAO_ExtAttributeDef_Proxy_Broker_ (0)
{
  this->CORBA_ExtAttributeDef_setup_collocation ();
}

void
CORBA::ExtAttributeDef::CORBA_ExtAttributeDef_setup_collocation ()
{
  if (::CORBA__TAO_ExtAttributeDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ExtAttributeDef_Proxy_Broker_ =
        ::CORBA__TAO_ExtAttributeDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_AttributeDef_setup_collocation ();
}

CORBA::ExtAttributeDef::~ExtAttributeDef (void)
{}

void 
CORBA::ExtAttributeDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ExtAttributeDef *_tao_tmp_pointer =
    static_cast<ExtAttributeDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ExtAttributeDef_ptr
CORBA::ExtAttributeDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExtAttributeDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExtAttributeDef:1.0",
        CORBA__TAO_ExtAttributeDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExtAttributeDef_ptr
CORBA::ExtAttributeDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExtAttributeDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExtAttributeDef:1.0",
        CORBA__TAO_ExtAttributeDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExtAttributeDef_ptr
CORBA::ExtAttributeDef::_duplicate (ExtAttributeDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::ExtAttributeDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/AttributeDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ExtAttributeDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ExtAttributeDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ExtAttributeDef:1.0";
}

CORBA::Boolean
CORBA::ExtAttributeDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from 
// be\be_visitor_structure/structure_cs.cpp:66

void 
CORBA::ParameterDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  ParameterDescription *_tao_tmp_pointer =
    static_cast<ParameterDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from 
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_PARDESCRIPTIONSEQ_CS_)
#define _CORBA_PARDESCRIPTIONSEQ_CS_

CORBA::ParDescriptionSeq::ParDescriptionSeq (void)
{}

CORBA::ParDescriptionSeq::ParDescriptionSeq (
    CORBA::ULong max
  )
  : TAO_Unbounded_Sequence<
        CORBA::ParameterDescription
      >
    (max)
{}

CORBA::ParDescriptionSeq::ParDescriptionSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::ParameterDescription * buffer,
    CORBA::Boolean release
  )
  : TAO_Unbounded_Sequence<
        CORBA::ParameterDescription
      >
    (max, length, buffer, release)
{}

CORBA::ParDescriptionSeq::ParDescriptionSeq (
    const ParDescriptionSeq &seq
  )
  : TAO_Unbounded_Sequence<
        CORBA::ParameterDescription
      >
    (seq)
{}

CORBA::ParDescriptionSeq::~ParDescriptionSeq (void)
{}

void CORBA::ParDescriptionSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ParDescriptionSeq * _tao_tmp_pointer =
    static_cast<ParDescriptionSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_CONTEXTIDSEQ_CS_)
#define _CORBA_CONTEXTIDSEQ_CS_

CORBA::ContextIdSeq::ContextIdSeq (void)
{}

CORBA::ContextIdSeq::ContextIdSeq (
    CORBA::ULong max
  )
  : TAO_Unbounded_String_Sequence
    (max)
{}

CORBA::ContextIdSeq::ContextIdSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    char * * buffer,
    CORBA::Boolean release
  )
  : TAO_Unbounded_String_Sequence
    (max, length, buffer, release)
{}

CORBA::ContextIdSeq::ContextIdSeq (
    const ContextIdSeq &seq
  )
  : TAO_Unbounded_String_Sequence
    (seq)
{}

CORBA::ContextIdSeq::~ContextIdSeq (void)
{}

void CORBA::ContextIdSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ContextIdSeq * _tao_tmp_pointer =
    static_cast<ContextIdSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::OperationDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::OperationDef_ptr
TAO::Objref_Traits<CORBA::OperationDef>::duplicate (
    CORBA::OperationDef_ptr p
  )
{
  return CORBA::OperationDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::OperationDef>::release (
    CORBA::OperationDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::OperationDef_ptr
TAO::Objref_Traits<CORBA::OperationDef>::nil (void)
{
  return CORBA::OperationDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::OperationDef>::marshal (
    CORBA::OperationDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_OperationDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::TypeCode_ptr CORBA::OperationDef::result (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::CORBA::TypeCode>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_result",
      11,
      this->the_TAO_OperationDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::IDLType_ptr CORBA::OperationDef::result_def (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::IDLType>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_result_def",
      15,
      this->the_TAO_OperationDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::OperationDef::result_def (
    ::CORBA::IDLType_ptr result_def
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::IDLType>::in_arg_val _tao_result_def (result_def);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_result_def
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_result_def",
      15,
      this->the_TAO_OperationDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ParDescriptionSeq * CORBA::OperationDef::params (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::ParDescriptionSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_params",
      11,
      this->the_TAO_OperationDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::OperationDef::params (
    const ::CORBA::ParDescriptionSeq & params
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::ParDescriptionSeq>::in_arg_val _tao_params (params);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_params
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_params",
      11,
      this->the_TAO_OperationDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::OperationMode CORBA::OperationDef::mode (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::OperationMode>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_mode",
      9,
      this->the_TAO_OperationDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::OperationDef::mode (
    ::CORBA::OperationMode mode
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::OperationMode>::in_arg_val _tao_mode (mode);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_mode
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_mode",
      9,
      this->the_TAO_OperationDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ContextIdSeq * CORBA::OperationDef::contexts (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::ContextIdSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_contexts",
      13,
      this->the_TAO_OperationDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::OperationDef::contexts (
    const ::CORBA::ContextIdSeq & contexts
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::ContextIdSeq>::in_arg_val _tao_contexts (contexts);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_contexts
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_contexts",
      13,
      this->the_TAO_OperationDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ExceptionDefSeq * CORBA::OperationDef::exceptions (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::ExceptionDefSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_exceptions",
      15,
      this->the_TAO_OperationDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::OperationDef::exceptions (
    const ::CORBA::ExceptionDefSeq & exceptions
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_OperationDef_Proxy_Broker_ == 0)
    {
      CORBA_OperationDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::ExceptionDefSeq>::in_arg_val _tao_exceptions (exceptions);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_exceptions
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_exceptions",
      15,
      this->the_TAO_OperationDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

CORBA::OperationDef::OperationDef (void)
 : the_TAO_OperationDef_Proxy_Broker_ (0)
{
  this->CORBA_OperationDef_setup_collocation ();
}

void
CORBA::OperationDef::CORBA_OperationDef_setup_collocation ()
{
  if (::CORBA__TAO_OperationDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_OperationDef_Proxy_Broker_ =
        ::CORBA__TAO_OperationDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_Contained_setup_collocation ();
}

CORBA::OperationDef::~OperationDef (void)
{}

void 
CORBA::OperationDef::_tao_any_destructor (void *_tao_void_pointer)
{
  OperationDef *_tao_tmp_pointer =
    static_cast<OperationDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::OperationDef_ptr
CORBA::OperationDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<OperationDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/OperationDef:1.0",
        CORBA__TAO_OperationDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::OperationDef_ptr
CORBA::OperationDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<OperationDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/OperationDef:1.0",
        CORBA__TAO_OperationDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::OperationDef_ptr
CORBA::OperationDef::_duplicate (OperationDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::OperationDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/OperationDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::OperationDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/OperationDef:1.0";
}

CORBA::Boolean
CORBA::OperationDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from 
// be\be_visitor_structure/structure_cs.cpp:66

void 
CORBA::OperationDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  OperationDescription *_tao_tmp_pointer =
    static_cast<OperationDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from 
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_REPOSITORYIDSEQ_CS_)
#define _CORBA_REPOSITORYIDSEQ_CS_

CORBA::RepositoryIdSeq::RepositoryIdSeq (void)
{}

CORBA::RepositoryIdSeq::RepositoryIdSeq (
    CORBA::ULong max
  )
  : TAO_Unbounded_String_Sequence
    (max)
{}

CORBA::RepositoryIdSeq::RepositoryIdSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    char * * buffer,
    CORBA::Boolean release
  )
  : TAO_Unbounded_String_Sequence
    (max, length, buffer, release)
{}

CORBA::RepositoryIdSeq::RepositoryIdSeq (
    const RepositoryIdSeq &seq
  )
  : TAO_Unbounded_String_Sequence
    (seq)
{}

CORBA::RepositoryIdSeq::~RepositoryIdSeq (void)
{}

void CORBA::RepositoryIdSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  RepositoryIdSeq * _tao_tmp_pointer =
    static_cast<RepositoryIdSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_OPDESCRIPTIONSEQ_CS_)
#define _CORBA_OPDESCRIPTIONSEQ_CS_

CORBA::OpDescriptionSeq::OpDescriptionSeq (void)
{}

CORBA::OpDescriptionSeq::OpDescriptionSeq (
    CORBA::ULong max
  )
  : TAO_Unbounded_Sequence<
        CORBA::OperationDescription
      >
    (max)
{}

CORBA::OpDescriptionSeq::OpDescriptionSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::OperationDescription * buffer,
    CORBA::Boolean release
  )
  : TAO_Unbounded_Sequence<
        CORBA::OperationDescription
      >
    (max, length, buffer, release)
{}

CORBA::OpDescriptionSeq::OpDescriptionSeq (
    const OpDescriptionSeq &seq
  )
  : TAO_Unbounded_Sequence<
        CORBA::OperationDescription
      >
    (seq)
{}

CORBA::OpDescriptionSeq::~OpDescriptionSeq (void)
{}

void CORBA::OpDescriptionSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  OpDescriptionSeq * _tao_tmp_pointer =
    static_cast<OpDescriptionSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_ATTRDESCRIPTIONSEQ_CS_)
#define _CORBA_ATTRDESCRIPTIONSEQ_CS_

CORBA::AttrDescriptionSeq::AttrDescriptionSeq (void)
{}

CORBA::AttrDescriptionSeq::AttrDescriptionSeq (
    CORBA::ULong max
  )
  : TAO_Unbounded_Sequence<
        CORBA::AttributeDescription
      >
    (max)
{}

CORBA::AttrDescriptionSeq::AttrDescriptionSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::AttributeDescription * buffer,
    CORBA::Boolean release
  )
  : TAO_Unbounded_Sequence<
        CORBA::AttributeDescription
      >
    (max, length, buffer, release)
{}

CORBA::AttrDescriptionSeq::AttrDescriptionSeq (
    const AttrDescriptionSeq &seq
  )
  : TAO_Unbounded_Sequence<
        CORBA::AttributeDescription
      >
    (seq)
{}

CORBA::AttrDescriptionSeq::~AttrDescriptionSeq (void)
{}

void CORBA::AttrDescriptionSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  AttrDescriptionSeq * _tao_tmp_pointer =
    static_cast<AttrDescriptionSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be\be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_CORBA_EXTATTRDESCRIPTIONSEQ_CS_)
#define _CORBA_EXTATTRDESCRIPTIONSEQ_CS_

CORBA::ExtAttrDescriptionSeq::ExtAttrDescriptionSeq (void)
{}

CORBA::ExtAttrDescriptionSeq::ExtAttrDescriptionSeq (
    CORBA::ULong max
  )
  : TAO_Unbounded_Sequence<
        CORBA::ExtAttributeDescription
      >
    (max)
{}

CORBA::ExtAttrDescriptionSeq::ExtAttrDescriptionSeq (
    CORBA::ULong max,
    CORBA::ULong length,
    CORBA::ExtAttributeDescription * buffer,
    CORBA::Boolean release
  )
  : TAO_Unbounded_Sequence<
        CORBA::ExtAttributeDescription
      >
    (max, length, buffer, release)
{}

CORBA::ExtAttrDescriptionSeq::ExtAttrDescriptionSeq (
    const ExtAttrDescriptionSeq &seq
  )
  : TAO_Unbounded_Sequence<
        CORBA::ExtAttributeDescription
      >
    (seq)
{}

CORBA::ExtAttrDescriptionSeq::~ExtAttrDescriptionSeq (void)
{}

void CORBA::ExtAttrDescriptionSeq::_tao_any_destructor (
    void * _tao_void_pointer
  )
{
  ExtAttrDescriptionSeq * _tao_tmp_pointer =
    static_cast<ExtAttrDescriptionSeq *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::InterfaceDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::InterfaceDef_ptr
TAO::Objref_Traits<CORBA::InterfaceDef>::duplicate (
    CORBA::InterfaceDef_ptr p
  )
{
  return CORBA::InterfaceDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::InterfaceDef>::release (
    CORBA::InterfaceDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::InterfaceDef_ptr
TAO::Objref_Traits<CORBA::InterfaceDef>::nil (void)
{
  return CORBA::InterfaceDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::InterfaceDef>::marshal (
    CORBA::InterfaceDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::InterfaceDefSeq * CORBA::InterfaceDef::base_interfaces (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_InterfaceDef_Proxy_Broker_ == 0)
    {
      CORBA_InterfaceDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::InterfaceDefSeq>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "_get_base_interfaces",
      20,
      this->the_TAO_InterfaceDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

void CORBA::InterfaceDef::base_interfaces (
    const ::CORBA::InterfaceDefSeq & base_interfaces
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_InterfaceDef_Proxy_Broker_ == 0)
    {
      CORBA_InterfaceDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< void>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::InterfaceDefSeq>::in_arg_val _tao_base_interfaces (base_interfaces);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_base_interfaces
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "_set_base_interfaces",
      20,
      this->the_TAO_InterfaceDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

CORBA::Boolean CORBA::InterfaceDef::is_a (
    const char * interface_id
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_InterfaceDef_Proxy_Broker_ == 0)
    {
      CORBA_InterfaceDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< ::ACE_InputCDR::to_boolean>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::RepositoryId>::in_arg_val _tao_interface_id (interface_id);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_interface_id
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "is_a",
      4,
      this->the_TAO_InterfaceDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from 
// be\be_visitor_structure/structure_cs.cpp:66

void 
CORBA::InterfaceDef::FullInterfaceDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  FullInterfaceDescription *_tao_tmp_pointer =
    static_cast<FullInterfaceDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::InterfaceDef::FullInterfaceDescription * CORBA::InterfaceDef::describe_interface (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_InterfaceDef_Proxy_Broker_ == 0)
    {
      CORBA_InterfaceDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::InterfaceDef::FullInterfaceDescription>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "describe_interface",
      18,
      this->the_TAO_InterfaceDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::AttributeDef_ptr CORBA::InterfaceDef::create_attribute (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::IDLType_ptr type,
    ::CORBA::AttributeMode mode
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_InterfaceDef_Proxy_Broker_ == 0)
    {
      CORBA_InterfaceDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::AttributeDef>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< CORBA::IDLType>::in_arg_val _tao_type (type);
  TAO::Arg_Traits< CORBA::AttributeMode>::in_arg_val _tao_mode (mode);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_type,
      &_tao_mode
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      6,
      "create_attribute",
      16,
      this->the_TAO_InterfaceDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::OperationDef_ptr CORBA::InterfaceDef::create_operation (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::IDLType_ptr result,
    ::CORBA::OperationMode mode,
    const ::CORBA::ParDescriptionSeq & params,
    const ::CORBA::ExceptionDefSeq & exceptions,
    const ::CORBA::ContextIdSeq & contexts
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_InterfaceDef_Proxy_Broker_ == 0)
    {
      CORBA_InterfaceDef_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::OperationDef>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< CORBA::IDLType>::in_arg_val _tao_result (result);
  TAO::Arg_Traits< CORBA::OperationMode>::in_arg_val _tao_mode (mode);
  TAO::Arg_Traits< CORBA::ParDescriptionSeq>::in_arg_val _tao_params (params);
  TAO::Arg_Traits< CORBA::ExceptionDefSeq>::in_arg_val _tao_exceptions (exceptions);
  TAO::Arg_Traits< CORBA::ContextIdSeq>::in_arg_val _tao_contexts (contexts);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_result,
      &_tao_mode,
      &_tao_params,
      &_tao_exceptions,
      &_tao_contexts
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      9,
      "create_operation",
      16,
      this->the_TAO_InterfaceDef_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

CORBA::InterfaceDef::InterfaceDef (void)
 : the_TAO_InterfaceDef_Proxy_Broker_ (0)
{
  this->CORBA_InterfaceDef_setup_collocation ();
}

void
CORBA::InterfaceDef::CORBA_InterfaceDef_setup_collocation ()
{
  if (::CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_InterfaceDef_Proxy_Broker_ =
        ::CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_Container_setup_collocation ();
  this->CORBA_Contained_setup_collocation ();
  this->CORBA_IDLType_setup_collocation ();
}

CORBA::InterfaceDef::~InterfaceDef (void)
{}

void 
CORBA::InterfaceDef::_tao_any_destructor (void *_tao_void_pointer)
{
  InterfaceDef *_tao_tmp_pointer =
    static_cast<InterfaceDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::InterfaceDef_ptr
CORBA::InterfaceDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<InterfaceDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/InterfaceDef:1.0",
        CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::InterfaceDef_ptr
CORBA::InterfaceDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<InterfaceDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/InterfaceDef:1.0",
        CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::InterfaceDef_ptr
CORBA::InterfaceDef::_duplicate (InterfaceDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::InterfaceDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::InterfaceDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/InterfaceDef:1.0";
}

CORBA::Boolean
CORBA::InterfaceDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from 
// be\be_visitor_structure/structure_cs.cpp:66

void 
CORBA::InterfaceDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  InterfaceDescription *_tao_tmp_pointer =
    static_cast<InterfaceDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::InterfaceAttrExtension.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::InterfaceAttrExtension_ptr
TAO::Objref_Traits<CORBA::InterfaceAttrExtension>::duplicate (
    CORBA::InterfaceAttrExtension_ptr p
  )
{
  return CORBA::InterfaceAttrExtension::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::InterfaceAttrExtension>::release (
    CORBA::InterfaceAttrExtension_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::InterfaceAttrExtension_ptr
TAO::Objref_Traits<CORBA::InterfaceAttrExtension>::nil (void)
{
  return CORBA::InterfaceAttrExtension::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::InterfaceAttrExtension>::marshal (
    CORBA::InterfaceAttrExtension_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_InterfaceAttrExtension_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

// TAO_IDL - Generated from 
// be\be_visitor_structure/structure_cs.cpp:66

void 
CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  ExtFullInterfaceDescription *_tao_tmp_pointer =
    static_cast<ExtFullInterfaceDescription *> (_tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription * CORBA::InterfaceAttrExtension::describe_ext_interface (
    ACE_ENV_SINGLE_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_InterfaceAttrExtension_Proxy_Broker_ == 0)
    {
      CORBA_InterfaceAttrExtension_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription>::ret_val _tao_retval;
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "describe_ext_interface",
      22,
      this->the_TAO_InterfaceAttrExtension_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be\be_visitor_operation/operation_cs.cpp:78

::CORBA::ExtAttributeDef_ptr CORBA::InterfaceAttrExtension::create_ext_attribute (
    const char * id,
    const char * name,
    const char * version,
    ::CORBA::IDLType_ptr type,
    ::CORBA::AttributeMode mode,
    const ::CORBA::ExceptionDefSeq & get_exceptions,
    const ::CORBA::ExceptionDefSeq & set_exceptions
    ACE_ENV_ARG_DECL
  )
  ACE_THROW_SPEC ((
    CORBA::SystemException
  ))
{
  if (!this->is_evaluated ())
    {
      ACE_NESTED_CLASS (CORBA, Object)::tao_object_initialize (this);
    }
  
  if (this->the_TAO_InterfaceAttrExtension_Proxy_Broker_ == 0)
    {
      CORBA_InterfaceAttrExtension_setup_collocation ();
    }
  
  TAO::Arg_Traits< CORBA::ExtAttributeDef>::ret_val _tao_retval;
  TAO::Arg_Traits< CORBA::RepositoryId>::in_arg_val _tao_id (id);
  TAO::Arg_Traits< CORBA::Identifier>::in_arg_val _tao_name (name);
  TAO::Arg_Traits< CORBA::VersionSpec>::in_arg_val _tao_version (version);
  TAO::Arg_Traits< CORBA::IDLType>::in_arg_val _tao_type (type);
  TAO::Arg_Traits< CORBA::AttributeMode>::in_arg_val _tao_mode (mode);
  TAO::Arg_Traits< CORBA::ExceptionDefSeq>::in_arg_val _tao_get_exceptions (get_exceptions);
  TAO::Arg_Traits< CORBA::ExceptionDefSeq>::in_arg_val _tao_set_exceptions (set_exceptions);
  
  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_id,
      &_tao_name,
      &_tao_version,
      &_tao_type,
      &_tao_mode,
      &_tao_get_exceptions,
      &_tao_set_exceptions
    };
  
  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      8,
      "create_ext_attribute",
      20,
      this->the_TAO_InterfaceAttrExtension_Proxy_Broker_
    );
  
  _tao_call.invoke (0, 0 ACE_ENV_ARG_PARAMETER);
  ACE_CHECK_RETURN (_tao_retval.excp ());
  
  return _tao_retval.retn ();
}

CORBA::InterfaceAttrExtension::InterfaceAttrExtension (void)
 : the_TAO_InterfaceAttrExtension_Proxy_Broker_ (0)
{
  this->CORBA_InterfaceAttrExtension_setup_collocation ();
}

void
CORBA::InterfaceAttrExtension::CORBA_InterfaceAttrExtension_setup_collocation ()
{
  if (::CORBA__TAO_InterfaceAttrExtension_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_InterfaceAttrExtension_Proxy_Broker_ =
        ::CORBA__TAO_InterfaceAttrExtension_Proxy_Broker_Factory_function_pointer (this);
    }
}

CORBA::InterfaceAttrExtension::~InterfaceAttrExtension (void)
{}

void 
CORBA::InterfaceAttrExtension::_tao_any_destructor (void *_tao_void_pointer)
{
  InterfaceAttrExtension *_tao_tmp_pointer =
    static_cast<InterfaceAttrExtension *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::InterfaceAttrExtension_ptr
CORBA::InterfaceAttrExtension::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<InterfaceAttrExtension>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0",
        CORBA__TAO_InterfaceAttrExtension_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::InterfaceAttrExtension_ptr
CORBA::InterfaceAttrExtension::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<InterfaceAttrExtension>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0",
        CORBA__TAO_InterfaceAttrExtension_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::InterfaceAttrExtension_ptr
CORBA::InterfaceAttrExtension::_duplicate (InterfaceAttrExtension_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::InterfaceAttrExtension::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::InterfaceAttrExtension::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0";
}

CORBA::Boolean
CORBA::InterfaceAttrExtension::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ExtInterfaceDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::ExtInterfaceDef_ptr
TAO::Objref_Traits<CORBA::ExtInterfaceDef>::duplicate (
    CORBA::ExtInterfaceDef_ptr p
  )
{
  return CORBA::ExtInterfaceDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::ExtInterfaceDef>::release (
    CORBA::ExtInterfaceDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::ExtInterfaceDef_ptr
TAO::Objref_Traits<CORBA::ExtInterfaceDef>::nil (void)
{
  return CORBA::ExtInterfaceDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::ExtInterfaceDef>::marshal (
    CORBA::ExtInterfaceDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_ExtInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::ExtInterfaceDef::ExtInterfaceDef (void)
 : the_TAO_ExtInterfaceDef_Proxy_Broker_ (0)
{
  this->CORBA_ExtInterfaceDef_setup_collocation ();
}

void
CORBA::ExtInterfaceDef::CORBA_ExtInterfaceDef_setup_collocation ()
{
  if (::CORBA__TAO_ExtInterfaceDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ExtInterfaceDef_Proxy_Broker_ =
        ::CORBA__TAO_ExtInterfaceDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_InterfaceDef_setup_collocation ();
  this->CORBA_InterfaceAttrExtension_setup_collocation ();
}

CORBA::ExtInterfaceDef::~ExtInterfaceDef (void)
{}

void 
CORBA::ExtInterfaceDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ExtInterfaceDef *_tao_tmp_pointer =
    static_cast<ExtInterfaceDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ExtInterfaceDef_ptr
CORBA::ExtInterfaceDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExtInterfaceDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExtInterfaceDef:1.0",
        CORBA__TAO_ExtInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExtInterfaceDef_ptr
CORBA::ExtInterfaceDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExtInterfaceDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExtInterfaceDef:1.0",
        CORBA__TAO_ExtInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExtInterfaceDef_ptr
CORBA::ExtInterfaceDef::_duplicate (ExtInterfaceDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::ExtInterfaceDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ExtInterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ExtInterfaceDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ExtInterfaceDef:1.0";
}

CORBA::Boolean
CORBA::ExtInterfaceDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::AbstractInterfaceDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::AbstractInterfaceDef_ptr
TAO::Objref_Traits<CORBA::AbstractInterfaceDef>::duplicate (
    CORBA::AbstractInterfaceDef_ptr p
  )
{
  return CORBA::AbstractInterfaceDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::AbstractInterfaceDef>::release (
    CORBA::AbstractInterfaceDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::AbstractInterfaceDef_ptr
TAO::Objref_Traits<CORBA::AbstractInterfaceDef>::nil (void)
{
  return CORBA::AbstractInterfaceDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::AbstractInterfaceDef>::marshal (
    CORBA::AbstractInterfaceDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_AbstractInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::AbstractInterfaceDef::AbstractInterfaceDef (void)
 : the_TAO_AbstractInterfaceDef_Proxy_Broker_ (0)
{
  this->CORBA_AbstractInterfaceDef_setup_collocation ();
}

void
CORBA::AbstractInterfaceDef::CORBA_AbstractInterfaceDef_setup_collocation ()
{
  if (::CORBA__TAO_AbstractInterfaceDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_AbstractInterfaceDef_Proxy_Broker_ =
        ::CORBA__TAO_AbstractInterfaceDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_InterfaceDef_setup_collocation ();
}

CORBA::AbstractInterfaceDef::~AbstractInterfaceDef (void)
{}

void 
CORBA::AbstractInterfaceDef::_tao_any_destructor (void *_tao_void_pointer)
{
  AbstractInterfaceDef *_tao_tmp_pointer =
    static_cast<AbstractInterfaceDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::AbstractInterfaceDef_ptr
CORBA::AbstractInterfaceDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<AbstractInterfaceDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/AbstractInterfaceDef:1.0",
        CORBA__TAO_AbstractInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::AbstractInterfaceDef_ptr
CORBA::AbstractInterfaceDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<AbstractInterfaceDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/AbstractInterfaceDef:1.0",
        CORBA__TAO_AbstractInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::AbstractInterfaceDef_ptr
CORBA::AbstractInterfaceDef::_duplicate (AbstractInterfaceDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::AbstractInterfaceDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/AbstractInterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::AbstractInterfaceDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/AbstractInterfaceDef:1.0";
}

CORBA::Boolean
CORBA::AbstractInterfaceDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ExtAbstractInterfaceDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::ExtAbstractInterfaceDef_ptr
TAO::Objref_Traits<CORBA::ExtAbstractInterfaceDef>::duplicate (
    CORBA::ExtAbstractInterfaceDef_ptr p
  )
{
  return CORBA::ExtAbstractInterfaceDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::ExtAbstractInterfaceDef>::release (
    CORBA::ExtAbstractInterfaceDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::ExtAbstractInterfaceDef_ptr
TAO::Objref_Traits<CORBA::ExtAbstractInterfaceDef>::nil (void)
{
  return CORBA::ExtAbstractInterfaceDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::ExtAbstractInterfaceDef>::marshal (
    CORBA::ExtAbstractInterfaceDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_ExtAbstractInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::ExtAbstractInterfaceDef::ExtAbstractInterfaceDef (void)
 : the_TAO_ExtAbstractInterfaceDef_Proxy_Broker_ (0)
{
  this->CORBA_ExtAbstractInterfaceDef_setup_collocation ();
}

void
CORBA::ExtAbstractInterfaceDef::CORBA_ExtAbstractInterfaceDef_setup_collocation ()
{
  if (::CORBA__TAO_ExtAbstractInterfaceDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ExtAbstractInterfaceDef_Proxy_Broker_ =
        ::CORBA__TAO_ExtAbstractInterfaceDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_AbstractInterfaceDef_setup_collocation ();
  this->CORBA_InterfaceAttrExtension_setup_collocation ();
}

CORBA::ExtAbstractInterfaceDef::~ExtAbstractInterfaceDef (void)
{}

void 
CORBA::ExtAbstractInterfaceDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ExtAbstractInterfaceDef *_tao_tmp_pointer =
    static_cast<ExtAbstractInterfaceDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ExtAbstractInterfaceDef_ptr
CORBA::ExtAbstractInterfaceDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExtAbstractInterfaceDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExtAbstractInterfaceDef:1.0",
        CORBA__TAO_ExtAbstractInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExtAbstractInterfaceDef_ptr
CORBA::ExtAbstractInterfaceDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExtAbstractInterfaceDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExtAbstractInterfaceDef:1.0",
        CORBA__TAO_ExtAbstractInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExtAbstractInterfaceDef_ptr
CORBA::ExtAbstractInterfaceDef::_duplicate (ExtAbstractInterfaceDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::ExtAbstractInterfaceDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/AbstractInterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ExtAbstractInterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ExtAbstractInterfaceDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ExtAbstractInterfaceDef:1.0";
}

CORBA::Boolean
CORBA::ExtAbstractInterfaceDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::LocalInterfaceDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::LocalInterfaceDef_ptr
TAO::Objref_Traits<CORBA::LocalInterfaceDef>::duplicate (
    CORBA::LocalInterfaceDef_ptr p
  )
{
  return CORBA::LocalInterfaceDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::LocalInterfaceDef>::release (
    CORBA::LocalInterfaceDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::LocalInterfaceDef_ptr
TAO::Objref_Traits<CORBA::LocalInterfaceDef>::nil (void)
{
  return CORBA::LocalInterfaceDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::LocalInterfaceDef>::marshal (
    CORBA::LocalInterfaceDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_LocalInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::LocalInterfaceDef::LocalInterfaceDef (void)
 : the_TAO_LocalInterfaceDef_Proxy_Broker_ (0)
{
  this->CORBA_LocalInterfaceDef_setup_collocation ();
}

void
CORBA::LocalInterfaceDef::CORBA_LocalInterfaceDef_setup_collocation ()
{
  if (::CORBA__TAO_LocalInterfaceDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_LocalInterfaceDef_Proxy_Broker_ =
        ::CORBA__TAO_LocalInterfaceDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_InterfaceDef_setup_collocation ();
}

CORBA::LocalInterfaceDef::~LocalInterfaceDef (void)
{}

void 
CORBA::LocalInterfaceDef::_tao_any_destructor (void *_tao_void_pointer)
{
  LocalInterfaceDef *_tao_tmp_pointer =
    static_cast<LocalInterfaceDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::LocalInterfaceDef_ptr
CORBA::LocalInterfaceDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<LocalInterfaceDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/LocalInterfaceDef:1.0",
        CORBA__TAO_LocalInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::LocalInterfaceDef_ptr
CORBA::LocalInterfaceDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<LocalInterfaceDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/LocalInterfaceDef:1.0",
        CORBA__TAO_LocalInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::LocalInterfaceDef_ptr
CORBA::LocalInterfaceDef::_duplicate (LocalInterfaceDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::LocalInterfaceDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalInterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::LocalInterfaceDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/LocalInterfaceDef:1.0";
}

CORBA::Boolean
CORBA::LocalInterfaceDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for CORBA::ExtLocalInterfaceDef.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::ExtLocalInterfaceDef_ptr
TAO::Objref_Traits<CORBA::ExtLocalInterfaceDef>::duplicate (
    CORBA::ExtLocalInterfaceDef_ptr p
  )
{
  return CORBA::ExtLocalInterfaceDef::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<CORBA::ExtLocalInterfaceDef>::release (
    CORBA::ExtLocalInterfaceDef_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::ExtLocalInterfaceDef_ptr
TAO::Objref_Traits<CORBA::ExtLocalInterfaceDef>::nil (void)
{
  return CORBA::ExtLocalInterfaceDef::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<CORBA::ExtLocalInterfaceDef>::marshal (
    CORBA::ExtLocalInterfaceDef_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return CORBA::Object::marshal (p, cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*CORBA__TAO_ExtLocalInterfaceDef_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

CORBA::ExtLocalInterfaceDef::ExtLocalInterfaceDef (void)
 : the_TAO_ExtLocalInterfaceDef_Proxy_Broker_ (0)
{
  this->CORBA_ExtLocalInterfaceDef_setup_collocation ();
}

void
CORBA::ExtLocalInterfaceDef::CORBA_ExtLocalInterfaceDef_setup_collocation ()
{
  if (::CORBA__TAO_ExtLocalInterfaceDef_Proxy_Broker_Factory_function_pointer)
    {
      this->the_TAO_ExtLocalInterfaceDef_Proxy_Broker_ =
        ::CORBA__TAO_ExtLocalInterfaceDef_Proxy_Broker_Factory_function_pointer (this);
    }
  
  this->CORBA_LocalInterfaceDef_setup_collocation ();
  this->CORBA_InterfaceAttrExtension_setup_collocation ();
}

CORBA::ExtLocalInterfaceDef::~ExtLocalInterfaceDef (void)
{}

void 
CORBA::ExtLocalInterfaceDef::_tao_any_destructor (void *_tao_void_pointer)
{
  ExtLocalInterfaceDef *_tao_tmp_pointer =
    static_cast<ExtLocalInterfaceDef *> (_tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

CORBA::ExtLocalInterfaceDef_ptr
CORBA::ExtLocalInterfaceDef::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExtLocalInterfaceDef>::narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExtLocalInterfaceDef:1.0",
        CORBA__TAO_ExtLocalInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExtLocalInterfaceDef_ptr
CORBA::ExtLocalInterfaceDef::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL
  )
{
  return
    TAO::Narrow_Utils<ExtLocalInterfaceDef>::unchecked_narrow (
        _tao_objref,
        "IDL:omg.org/CORBA/ExtLocalInterfaceDef:1.0",
        CORBA__TAO_ExtLocalInterfaceDef_Proxy_Broker_Factory_function_pointer
        ACE_ENV_ARG_PARAMETER
      );
}

CORBA::ExtLocalInterfaceDef_ptr
CORBA::ExtLocalInterfaceDef::_duplicate (ExtLocalInterfaceDef_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
CORBA::ExtLocalInterfaceDef::_is_a (
    const char *value
    ACE_ENV_ARG_DECL
  )
{
  if (
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IRObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Container:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Contained:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/IDLType:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalInterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/InterfaceAttrExtension:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/ExtLocalInterfaceDef:1.0"
        ) ||
      !ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
    )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return this->ACE_NESTED_CLASS (CORBA, Object)::_is_a (
          value
          ACE_ENV_ARG_PARAMETER
        );
    }
}

const char* CORBA::ExtLocalInterfaceDef::_interface_repository_id (void) const
{
  return "IDL:omg.org/CORBA/ExtLocalInterfaceDef:1.0";
}

CORBA::Boolean
CORBA::ExtLocalInterfaceDef::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be\be_visitor_enum/cdr_op_cs.cpp:51

CORBA::Boolean operator<< (TAO_OutputCDR &strm, const CORBA::PrimitiveKind &_tao_enumval)
{
  CORBA::ULong _tao_temp = _tao_enumval;
  return strm << _tao_temp;
}

CORBA::Boolean operator>> (TAO_InputCDR &strm, CORBA::PrimitiveKind &_tao_enumval)
{
  CORBA::ULong _tao_temp = 0;
  CORBA::Boolean _tao_result = strm >> _tao_temp;
  
  if (_tao_result == 1)
    {
      _tao_enumval = static_cast<CORBA::PrimitiveKind> (_tao_temp);
    }
  
  return _tao_result;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::Repository_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::Repository_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::Repository RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_Repository_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ModuleDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ModuleDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::ModuleDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_ModuleDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ModuleDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ());
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ModuleDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ());
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ConstantDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ConstantDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::ConstantDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_ConstantDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ConstantDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.type.in ()) &&
    (strm << _tao_aggregate.value);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ConstantDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.type.out ()) &&
    (strm >> _tao_aggregate.value);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::StructDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::StructDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::StructDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_StructDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::UnionDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::UnionDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::UnionDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_UnionDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::EnumDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::EnumDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::EnumDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_EnumDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::AliasDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::AliasDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::AliasDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_AliasDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::NativeDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::NativeDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::NativeDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_NativeDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::PrimitiveDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::PrimitiveDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::PrimitiveDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_PrimitiveDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::StringDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::StringDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::StringDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_StringDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::WstringDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::WstringDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::WstringDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_WstringDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::SequenceDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::SequenceDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::SequenceDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_SequenceDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ArrayDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ArrayDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::ArrayDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_ArrayDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExceptionDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExceptionDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::ExceptionDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_ExceptionDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ExceptionDefSeq_CPP_
#define _TAO_CDR_OP_CORBA_ExceptionDefSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExceptionDefSeq &_tao_sequence
  )
{
  const CORBA::ULong _tao_seq_len = _tao_sequence.length ();
  
  if (strm << _tao_seq_len)
    {
      // Encode all elements.
      CORBA::Boolean _tao_marshal_flag = true;
      
      for (CORBA::ULong i = 0; i < _tao_seq_len && _tao_marshal_flag; ++i)
        {
          _tao_marshal_flag =
            TAO::Objref_Traits<CORBA::ExceptionDef>::marshal (
                _tao_sequence[i].in (), strm
              );
        }
      
      return _tao_marshal_flag;
    }
  
  return false;
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExceptionDefSeq &_tao_sequence
  )
{
  CORBA::ULong _tao_seq_len;
  
  if (strm >> _tao_seq_len)
    {
      // Add a check to the length of the sequence
      // to make sure it does not exceed the length
      // of the stream. (See bug 58.)
      if (_tao_seq_len > strm.length ())
        {
          return false;
        }
      
      // Set the length of the sequence.
      _tao_sequence.length (_tao_seq_len);
      
      // If length is 0 we return true.
      if (0 >= _tao_seq_len) 
        {
          return true;
        }
      
      // Retrieve all the elements.
      CORBA::Boolean _tao_marshal_flag = true;
      
      for (CORBA::ULong i = 0; i < _tao_seq_len && _tao_marshal_flag; ++i)
        {
          _tao_marshal_flag = (strm >> _tao_sequence[i].out ());
        }
      
      return _tao_marshal_flag;
    
    }
  
  return false;
}

#endif /* _TAO_CDR_OP_CORBA_ExceptionDefSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_enum/cdr_op_cs.cpp:51

CORBA::Boolean operator<< (TAO_OutputCDR &strm, const CORBA::AttributeMode &_tao_enumval)
{
  CORBA::ULong _tao_temp = _tao_enumval;
  return strm << _tao_temp;
}

CORBA::Boolean operator>> (TAO_InputCDR &strm, CORBA::AttributeMode &_tao_enumval)
{
  CORBA::ULong _tao_temp = 0;
  CORBA::Boolean _tao_result = strm >> _tao_temp;
  
  if (_tao_result == 1)
    {
      _tao_enumval = static_cast<CORBA::AttributeMode> (_tao_temp);
    }
  
  return _tao_result;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::AttributeDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::AttributeDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::AttributeDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_AttributeDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::AttributeDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.type.in ()) &&
    (strm << _tao_aggregate.mode);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::AttributeDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.type.out ()) &&
    (strm >> _tao_aggregate.mode);
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtAttributeDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.type.in ()) &&
    (strm << _tao_aggregate.mode) &&
    (strm << _tao_aggregate.get_exceptions) &&
    (strm << _tao_aggregate.put_exceptions);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtAttributeDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.type.out ()) &&
    (strm >> _tao_aggregate.mode) &&
    (strm >> _tao_aggregate.get_exceptions) &&
    (strm >> _tao_aggregate.put_exceptions);
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtAttributeDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtAttributeDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::ExtAttributeDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_ExtAttributeDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_enum/cdr_op_cs.cpp:51

CORBA::Boolean operator<< (TAO_OutputCDR &strm, const CORBA::OperationMode &_tao_enumval)
{
  CORBA::ULong _tao_temp = _tao_enumval;
  return strm << _tao_temp;
}

CORBA::Boolean operator>> (TAO_InputCDR &strm, CORBA::OperationMode &_tao_enumval)
{
  CORBA::ULong _tao_temp = 0;
  CORBA::Boolean _tao_result = strm >> _tao_temp;
  
  if (_tao_result == 1)
    {
      _tao_enumval = static_cast<CORBA::OperationMode> (_tao_temp);
    }
  
  return _tao_result;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ParameterDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.type.in ()) &&
    CORBA::Object::marshal (
        _tao_aggregate.type_def.in (),
        strm
      ) &&
    (strm << _tao_aggregate.mode);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ParameterDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.type.out ()) &&
    (strm >> _tao_aggregate.type_def.out ()) &&
    (strm >> _tao_aggregate.mode);
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ParDescriptionSeq_CPP_
#define _TAO_CDR_OP_CORBA_ParDescriptionSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ParDescriptionSeq &_tao_sequence
  )
{
  const CORBA::ULong _tao_seq_len = _tao_sequence.length ();
  
  if (strm << _tao_seq_len)
    {
      // Encode all elements.
      CORBA::Boolean _tao_marshal_flag = true;
      
      for (CORBA::ULong i = 0; i < _tao_seq_len && _tao_marshal_flag; ++i)
        {
          _tao_marshal_flag = (strm << _tao_sequence[i]);
        }
      
      return _tao_marshal_flag;
    }
  
  return false;
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ParDescriptionSeq &_tao_sequence
  )
{
  CORBA::ULong _tao_seq_len;
  
  if (strm >> _tao_seq_len)
    {
      // Add a check to the length of the sequence
      // to make sure it does not exceed the length
      // of the stream. (See bug 58.)
      if (_tao_seq_len > strm.length ())
        {
          return false;
        }
      
      // Set the length of the sequence.
      _tao_sequence.length (_tao_seq_len);
      
      // If length is 0 we return true.
      if (0 >= _tao_seq_len) 
        {
          return true;
        }
      
      // Retrieve all the elements.
      CORBA::Boolean _tao_marshal_flag = true;
      
      for (CORBA::ULong i = 0; i < _tao_seq_len && _tao_marshal_flag; ++i)
        {
          _tao_marshal_flag = (strm >> _tao_sequence[i]);
        }
      
      return _tao_marshal_flag;
    
    }
  
  return false;
}

#endif /* _TAO_CDR_OP_CORBA_ParDescriptionSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ContextIdSeq_CPP_
#define _TAO_CDR_OP_CORBA_ContextIdSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ContextIdSeq &_tao_sequence
  )
{
  const CORBA::ULong _tao_seq_len = _tao_sequence.length ();
  
  if (strm << _tao_seq_len)
    {
      // Encode all elements.
      CORBA::Boolean _tao_marshal_flag = true;
      
      for (CORBA::ULong i = 0; i < _tao_seq_len && _tao_marshal_flag; ++i)
        {
          _tao_marshal_flag = (strm << _tao_sequence[i].in ());
        }
      
      return _tao_marshal_flag;
    }
  
  return false;
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ContextIdSeq &_tao_sequence
  )
{
  CORBA::ULong _tao_seq_len;
  
  if (strm >> _tao_seq_len)
    {
      // Add a check to the length of the sequence
      // to make sure it does not exceed the length
      // of the stream. (See bug 58.)
      if (_tao_seq_len > strm.length ())
        {
          return false;
        }
      
      // Set the length of the sequence.
      _tao_sequence.length (_tao_seq_len);
      
      // If length is 0 we return true.
      if (0 >= _tao_seq_len) 
        {
          return true;
        }
      
      // Retrieve all the elements.
      CORBA::Boolean _tao_marshal_flag = true;
      
      for (CORBA::ULong i = 0; i < _tao_seq_len && _tao_marshal_flag; ++i)
        {
          _tao_marshal_flag = (strm >> _tao_sequence[i].out ());
        
      }
    
    return _tao_marshal_flag;
  
  }

return false;
}

#endif /* _TAO_CDR_OP_CORBA_ContextIdSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::OperationDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::OperationDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::OperationDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_OperationDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::OperationDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.result.in ()) &&
    (strm << _tao_aggregate.mode) &&
    (strm << _tao_aggregate.contexts) &&
    (strm << _tao_aggregate.parameters) &&
    (strm << _tao_aggregate.exceptions);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::OperationDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.result.out ()) &&
    (strm >> _tao_aggregate.mode) &&
    (strm >> _tao_aggregate.contexts) &&
    (strm >> _tao_aggregate.parameters) &&
    (strm >> _tao_aggregate.exceptions);
}

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_RepositoryIdSeq_CPP_
#define _TAO_CDR_OP_CORBA_RepositoryIdSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::RepositoryIdSeq &_tao_sequence
  )
{
  const CORBA::ULong _tao_seq_len = _tao_sequence.length ();
  
  if (strm << _tao_seq_len)
    {
      // Encode all elements.
      CORBA::Boolean _tao_marshal_flag = true;
      
      for (CORBA::ULong i = 0; i < _tao_seq_len && _tao_marshal_flag; ++i)
        {
          _tao_marshal_flag = (strm << _tao_sequence[i].in ());
        }
      
      return _tao_marshal_flag;
    }
  
  return false;
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::RepositoryIdSeq &_tao_sequence
  )
{
  CORBA::ULong _tao_seq_len;
  
  if (strm >> _tao_seq_len)
    {
      // Add a check to the length of the sequence
      // to make sure it does not exceed the length
      // of the stream. (See bug 58.)
      if (_tao_seq_len > strm.length ())
        {
          return false;
        }
      
      // Set the length of the sequence.
      _tao_sequence.length (_tao_seq_len);
      
      // If length is 0 we return true.
      if (0 >= _tao_seq_len) 
        {
          return true;
        }
      
      // Retrieve all the elements.
      CORBA::Boolean _tao_marshal_flag = true;
      
      for (CORBA::ULong i = 0; i < _tao_seq_len && _tao_marshal_flag; ++i)
        {
          _tao_marshal_flag = (strm >> _tao_sequence[i].out ());
        
      }
    
    return _tao_marshal_flag;
  
  }

return false;
}

#endif /* _TAO_CDR_OP_CORBA_RepositoryIdSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_OpDescriptionSeq_CPP_
#define _TAO_CDR_OP_CORBA_OpDescriptionSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::OpDescriptionSeq &_tao_sequence
  )
{
  const CORBA::ULong _tao_seq_len = _tao_sequence.length ();
  
  if (strm << _tao_seq_len)
    {
      // Encode all elements.
      CORBA::Boolean _tao_marshal_flag = true;
      
      for (CORBA::ULong i = 0; i < _tao_seq_len && _tao_marshal_flag; ++i)
        {
          _tao_marshal_flag = (strm << _tao_sequence[i]);
        }
      
      return _tao_marshal_flag;
    }
  
  return false;
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::OpDescriptionSeq &_tao_sequence
  )
{
  CORBA::ULong _tao_seq_len;
  
  if (strm >> _tao_seq_len)
    {
      // Add a check to the length of the sequence
      // to make sure it does not exceed the length
      // of the stream. (See bug 58.)
      if (_tao_seq_len > strm.length ())
        {
          return false;
        }
      
      // Set the length of the sequence.
      _tao_sequence.length (_tao_seq_len);
      
      // If length is 0 we return true.
      if (0 >= _tao_seq_len) 
        {
          return true;
        }
      
      // Retrieve all the elements.
      CORBA::Boolean _tao_marshal_flag = true;
      
      for (CORBA::ULong i = 0; i < _tao_seq_len && _tao_marshal_flag; ++i)
        {
          _tao_marshal_flag = (strm >> _tao_sequence[i]);
        }
      
      return _tao_marshal_flag;
    
    }
  
  return false;
}

#endif /* _TAO_CDR_OP_CORBA_OpDescriptionSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_AttrDescriptionSeq_CPP_
#define _TAO_CDR_OP_CORBA_AttrDescriptionSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::AttrDescriptionSeq &_tao_sequence
  )
{
  const CORBA::ULong _tao_seq_len = _tao_sequence.length ();
  
  if (strm << _tao_seq_len)
    {
      // Encode all elements.
      CORBA::Boolean _tao_marshal_flag = true;
      
      for (CORBA::ULong i = 0; i < _tao_seq_len && _tao_marshal_flag; ++i)
        {
          _tao_marshal_flag = (strm << _tao_sequence[i]);
        }
      
      return _tao_marshal_flag;
    }
  
  return false;
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::AttrDescriptionSeq &_tao_sequence
  )
{
  CORBA::ULong _tao_seq_len;
  
  if (strm >> _tao_seq_len)
    {
      // Add a check to the length of the sequence
      // to make sure it does not exceed the length
      // of the stream. (See bug 58.)
      if (_tao_seq_len > strm.length ())
        {
          return false;
        }
      
      // Set the length of the sequence.
      _tao_sequence.length (_tao_seq_len);
      
      // If length is 0 we return true.
      if (0 >= _tao_seq_len) 
        {
          return true;
        }
      
      // Retrieve all the elements.
      CORBA::Boolean _tao_marshal_flag = true;
      
      for (CORBA::ULong i = 0; i < _tao_seq_len && _tao_marshal_flag; ++i)
        {
          _tao_marshal_flag = (strm >> _tao_sequence[i]);
        }
      
      return _tao_marshal_flag;
    
    }
  
  return false;
}

#endif /* _TAO_CDR_OP_CORBA_AttrDescriptionSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_sequence/cdr_op_cs.cpp:96

#if !defined _TAO_CDR_OP_CORBA_ExtAttrDescriptionSeq_CPP_
#define _TAO_CDR_OP_CORBA_ExtAttrDescriptionSeq_CPP_

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtAttrDescriptionSeq &_tao_sequence
  )
{
  const CORBA::ULong _tao_seq_len = _tao_sequence.length ();
  
  if (strm << _tao_seq_len)
    {
      // Encode all elements.
      CORBA::Boolean _tao_marshal_flag = true;
      
      for (CORBA::ULong i = 0; i < _tao_seq_len && _tao_marshal_flag; ++i)
        {
          _tao_marshal_flag = (strm << _tao_sequence[i]);
        }
      
      return _tao_marshal_flag;
    }
  
  return false;
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtAttrDescriptionSeq &_tao_sequence
  )
{
  CORBA::ULong _tao_seq_len;
  
  if (strm >> _tao_seq_len)
    {
      // Add a check to the length of the sequence
      // to make sure it does not exceed the length
      // of the stream. (See bug 58.)
      if (_tao_seq_len > strm.length ())
        {
          return false;
        }
      
      // Set the length of the sequence.
      _tao_sequence.length (_tao_seq_len);
      
      // If length is 0 we return true.
      if (0 >= _tao_seq_len) 
        {
          return true;
        }
      
      // Retrieve all the elements.
      CORBA::Boolean _tao_marshal_flag = true;
      
      for (CORBA::ULong i = 0; i < _tao_seq_len && _tao_marshal_flag; ++i)
        {
          _tao_marshal_flag = (strm >> _tao_sequence[i]);
        }
      
      return _tao_marshal_flag;
    
    }
  
  return false;
}

#endif /* _TAO_CDR_OP_CORBA_ExtAttrDescriptionSeq_CPP_ */

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::InterfaceDef::FullInterfaceDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.operations) &&
    (strm << _tao_aggregate.attributes) &&
    (strm << _tao_aggregate.base_interfaces) &&
    (strm << _tao_aggregate.type.in ());
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::InterfaceDef::FullInterfaceDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.operations) &&
    (strm >> _tao_aggregate.attributes) &&
    (strm >> _tao_aggregate.base_interfaces) &&
    (strm >> _tao_aggregate.type.out ());
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::InterfaceDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::InterfaceDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::InterfaceDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_InterfaceDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::InterfaceDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.base_interfaces);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::InterfaceDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.base_interfaces);
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.id.in ()) &&
    (strm << _tao_aggregate.defined_in.in ()) &&
    (strm << _tao_aggregate.version.in ()) &&
    (strm << _tao_aggregate.operations) &&
    (strm << _tao_aggregate.attributes) &&
    (strm << _tao_aggregate.base_interfaces) &&
    (strm << _tao_aggregate.type.in ());
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.id.out ()) &&
    (strm >> _tao_aggregate.defined_in.out ()) &&
    (strm >> _tao_aggregate.version.out ()) &&
    (strm >> _tao_aggregate.operations) &&
    (strm >> _tao_aggregate.attributes) &&
    (strm >> _tao_aggregate.base_interfaces) &&
    (strm >> _tao_aggregate.type.out ());
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::InterfaceAttrExtension_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::InterfaceAttrExtension_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::InterfaceAttrExtension RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_InterfaceAttrExtension_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtInterfaceDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtInterfaceDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::ExtInterfaceDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_ExtInterfaceDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::AbstractInterfaceDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::AbstractInterfaceDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::AbstractInterfaceDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_AbstractInterfaceDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtAbstractInterfaceDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtAbstractInterfaceDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::ExtAbstractInterfaceDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_ExtAbstractInterfaceDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::LocalInterfaceDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::LocalInterfaceDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::LocalInterfaceDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_LocalInterfaceDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/cdr_op_cs.cpp:63

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CORBA::ExtLocalInterfaceDef_ptr _tao_objref
  )
{
  CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CORBA::ExtLocalInterfaceDef_ptr &_tao_objref
  )
{
  CORBA::Object_var obj;
  
  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::CORBA::ExtLocalInterfaceDef RHS_SCOPED_NAME;
  
  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        CORBA__TAO_ExtLocalInterfaceDef_Proxy_Broker_Factory_function_pointer
      );
    
  return 1;
}

// TAO_IDL - Generated from
// be\be_visitor_root/root.cpp:1629

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)

#if !defined (_CORBA_CONTAINED__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_CONTAINED__ARG_TRAITS_TMPLINST_CS_

  template class
    TAO::Arg_Traits<
        CORBA::Contained
      >;

  template class
    TAO::Object_Arg_Traits_T<
        CORBA::Contained_ptr,
        CORBA::Contained_var,
        CORBA::Contained_out,
        TAO::Objref_Traits<CORBA::Contained>
      >;

#endif /* end #if !defined */

  template class
    TAO::Ret_Object_Argument_T<
        CORBA::Contained_ptr,
        CORBA::Contained_var
      >;

  template class
    TAO::Ret_Object_Argument_T<
        CORBA::PrimitiveDef_ptr,
        CORBA::PrimitiveDef_var
      >;

  template class
    TAO::In_Basic_Argument_T<
        CORBA::PrimitiveKind
      >;

  template class
    TAO::Ret_Object_Argument_T<
        CORBA::StringDef_ptr,
        CORBA::StringDef_var
      >;

  template class
    TAO::Ret_Object_Argument_T<
        CORBA::WstringDef_ptr,
        CORBA::WstringDef_var
      >;

  template class
    TAO::Ret_Object_Argument_T<
        CORBA::SequenceDef_ptr,
        CORBA::SequenceDef_var
      >;

  template class
    TAO::In_Object_Argument_T<
        CORBA::IDLType_ptr
      >;

  template class
    TAO::Ret_Object_Argument_T<
        CORBA::ArrayDef_ptr,
        CORBA::ArrayDef_var
      >;

  template class
    TAO::Ret_Object_Argument_T<
        CORBA::FixedDef_ptr,
        CORBA::FixedDef_var
      >;

  template class
    TAO::Objref_Traits<
        CORBA::Repository
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::Repository
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::Repository
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::Repository
      >;

  template class
    TAO::Objref_Traits<
        CORBA::ModuleDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::ModuleDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::ModuleDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::ModuleDef
      >;

  template class
    TAO::Ret_Object_Argument_T<
        CORBA::IDLType_ptr,
        CORBA::IDLType_var
      >;

  template class
    TAO::Objref_Traits<
        CORBA::ConstantDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::ConstantDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::ConstantDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::ConstantDef
      >;

#if !defined (_CORBA_IDLTYPE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_IDLTYPE__ARG_TRAITS_TMPLINST_CS_

  template class
    TAO::Arg_Traits<
        CORBA::IDLType
      >;

  template class
    TAO::Object_Arg_Traits_T<
        CORBA::IDLType_ptr,
        CORBA::IDLType_var,
        CORBA::IDLType_out,
        TAO::Objref_Traits<CORBA::IDLType>
      >;

#endif /* end #if !defined */

  template class
    TAO::Ret_Var_Size_Argument_T<
        CORBA::StructMemberSeq,
        CORBA::StructMemberSeq_var
      >;

  template class
    TAO::In_Var_Size_Argument_T<
        CORBA::StructMemberSeq
      >;

  template class
    TAO::Objref_Traits<
        CORBA::StructDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::StructDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::StructDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::StructDef
      >;

  template class
    TAO::Ret_Var_Size_Argument_T<
        CORBA::UnionMemberSeq,
        CORBA::UnionMemberSeq_var
      >;

  template class
    TAO::In_Var_Size_Argument_T<
        CORBA::UnionMemberSeq
      >;

  template class
    TAO::Objref_Traits<
        CORBA::UnionDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::UnionDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::UnionDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::UnionDef
      >;

  template class
    TAO::Ret_Var_Size_Argument_T<
        CORBA::EnumMemberSeq,
        CORBA::EnumMemberSeq_var
      >;

  template class
    TAO::In_Var_Size_Argument_T<
        CORBA::EnumMemberSeq
      >;

  template class
    TAO::Objref_Traits<
        CORBA::EnumDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::EnumDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::EnumDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::EnumDef
      >;

  template class
    TAO::Objref_Traits<
        CORBA::AliasDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::AliasDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::AliasDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::AliasDef
      >;

  template class
    TAO::Ret_Var_Size_Argument_T<
        CORBA::InterfaceDefSeq,
        CORBA::InterfaceDefSeq_var
      >;

  template class
    TAO::In_Var_Size_Argument_T<
        CORBA::InterfaceDefSeq
      >;

#if !defined (_CORBA_INTERFACEDEF_FULLINTERFACEDESCRIPTION__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_INTERFACEDEF_FULLINTERFACEDESCRIPTION__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<CORBA::InterfaceDef::FullInterfaceDescription>;

  template class
    TAO::Var_Size_Arg_Traits_T<
        CORBA::InterfaceDef::FullInterfaceDescription,
        CORBA::InterfaceDef::FullInterfaceDescription_var,
        CORBA::InterfaceDef::FullInterfaceDescription_out
      >;

#endif /* end #if !defined */

  template class
    TAO_VarSeq_Var_T<
        CORBA::OpDescriptionSeq,
        CORBA::OperationDescription
      >;

  template class
    TAO_Seq_Var_Base_T<
        CORBA::OpDescriptionSeq,
        CORBA::OperationDescription
      >;

  template class
    TAO_Seq_Out_T<
        CORBA::OpDescriptionSeq,
        CORBA::OpDescriptionSeq_var,
        CORBA::OperationDescription
      >;

#if !defined (_CORBA_OPERATIONDESCRIPTION__EXPLICIT_CS_)
#define _CORBA_OPERATIONDESCRIPTION__EXPLICIT_CS_

  template class
    TAO_Unbounded_Sequence<
        CORBA::OperationDescription
      >;

#endif /* end #if !defined */

  template class
    TAO_VarSeq_Var_T<
        CORBA::AttrDescriptionSeq,
        CORBA::AttributeDescription
      >;

  template class
    TAO_Seq_Var_Base_T<
        CORBA::AttrDescriptionSeq,
        CORBA::AttributeDescription
      >;

  template class
    TAO_Seq_Out_T<
        CORBA::AttrDescriptionSeq,
        CORBA::AttrDescriptionSeq_var,
        CORBA::AttributeDescription
      >;

#if !defined (_CORBA_ATTRIBUTEDESCRIPTION__EXPLICIT_CS_)
#define _CORBA_ATTRIBUTEDESCRIPTION__EXPLICIT_CS_

  template class
    TAO_Unbounded_Sequence<
        CORBA::AttributeDescription
      >;

#endif /* end #if !defined */

  template class
    TAO_MngSeq_Var_T<
        CORBA::RepositoryIdSeq,
        TAO_SeqElem_String_Manager
      >;

  template class
    TAO_Seq_Var_Base_T<
        CORBA::RepositoryIdSeq,
        TAO_SeqElem_String_Manager
      >;

  template class
    TAO_MngSeq_Out_T<
        CORBA::RepositoryIdSeq,
        CORBA::RepositoryIdSeq_var,
        TAO_SeqElem_String_Manager
      >;

  template class
    TAO_Var_Var_T<
        CORBA::InterfaceDef::FullInterfaceDescription
      >;

  template class
    TAO_Var_Base_T<
        CORBA::InterfaceDef::FullInterfaceDescription
      >;

  template class
    TAO_Out_T<
        CORBA::InterfaceDef::FullInterfaceDescription,
        CORBA::InterfaceDef::FullInterfaceDescription_var
      >;

  template class
    TAO::Ret_Var_Size_Argument_T<
        CORBA::InterfaceDef::FullInterfaceDescription,
        CORBA::InterfaceDef::FullInterfaceDescription_var
      >;

  template class
    TAO::Ret_Object_Argument_T<
        CORBA::AttributeDef_ptr,
        CORBA::AttributeDef_var
      >;

  template class
    TAO::In_Basic_Argument_T<
        CORBA::AttributeMode
      >;

  template class
    TAO::Ret_Object_Argument_T<
        CORBA::OperationDef_ptr,
        CORBA::OperationDef_var
      >;

  template class
    TAO::In_Basic_Argument_T<
        CORBA::OperationMode
      >;

  template class
    TAO::In_Var_Size_Argument_T<
        CORBA::ParDescriptionSeq
      >;

  template class
    TAO::In_Var_Size_Argument_T<
        CORBA::ExceptionDefSeq
      >;

  template class
    TAO::In_Var_Size_Argument_T<
        CORBA::ContextIdSeq
      >;

  template class
    TAO::Objref_Traits<
        CORBA::InterfaceDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::InterfaceDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::InterfaceDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::InterfaceDef
      >;

#if !defined (_CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<CORBA::InterfaceDefSeq>;

  template class
    TAO::Var_Size_Arg_Traits_T<
        CORBA::InterfaceDefSeq,
        CORBA::InterfaceDefSeq_var,
        CORBA::InterfaceDefSeq_out
      >;

#endif /* end #if !defined */

  template class
    TAO::Objref_Traits<
        CORBA::ExceptionDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::ExceptionDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::ExceptionDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::ExceptionDef
      >;

  template class
    TAO::Objref_Traits<
        CORBA::NativeDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::NativeDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::NativeDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::NativeDef
      >;

  template class
    TAO::Objref_Traits<
        CORBA::AbstractInterfaceDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::AbstractInterfaceDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::AbstractInterfaceDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::AbstractInterfaceDef
      >;

  template class
    TAO::Objref_Traits<
        CORBA::LocalInterfaceDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::LocalInterfaceDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::LocalInterfaceDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::LocalInterfaceDef
      >;

  template class
    TAO::Objref_Traits<
        CORBA::ExtInterfaceDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::ExtInterfaceDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::ExtInterfaceDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::ExtInterfaceDef
      >;

  template class
    TAO::Objref_Traits<
        CORBA::ExtAbstractInterfaceDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::ExtAbstractInterfaceDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::ExtAbstractInterfaceDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::ExtAbstractInterfaceDef
      >;

  template class
    TAO::Objref_Traits<
        CORBA::ExtLocalInterfaceDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::ExtLocalInterfaceDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::ExtLocalInterfaceDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::ExtLocalInterfaceDef
      >;

#if !defined (_CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<CORBA::StructMemberSeq>;

  template class
    TAO::Var_Size_Arg_Traits_T<
        CORBA::StructMemberSeq,
        CORBA::StructMemberSeq_var,
        CORBA::StructMemberSeq_out
      >;

#endif /* end #if !defined */

#if !defined (_CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<CORBA::ExcDescriptionSeq>;

  template class
    TAO::Var_Size_Arg_Traits_T<
        CORBA::ExcDescriptionSeq,
        CORBA::ExcDescriptionSeq_var,
        CORBA::ExcDescriptionSeq_out
      >;

#endif /* end #if !defined */

#if !defined (_CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<CORBA::UnionMemberSeq>;

  template class
    TAO::Var_Size_Arg_Traits_T<
        CORBA::UnionMemberSeq,
        CORBA::UnionMemberSeq_var,
        CORBA::UnionMemberSeq_out
      >;

#endif /* end #if !defined */

#if !defined (_CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<CORBA::EnumMemberSeq>;

  template class
    TAO::Var_Size_Arg_Traits_T<
        CORBA::EnumMemberSeq,
        CORBA::EnumMemberSeq_var,
        CORBA::EnumMemberSeq_out
      >;

#endif /* end #if !defined */

#if !defined (_CORBA_PRIMITIVEDEF__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_PRIMITIVEDEF__ARG_TRAITS_TMPLINST_CS_

  template class
    TAO::Arg_Traits<
        CORBA::PrimitiveDef
      >;

  template class
    TAO::Object_Arg_Traits_T<
        CORBA::PrimitiveDef_ptr,
        CORBA::PrimitiveDef_var,
        CORBA::PrimitiveDef_out,
        TAO::Objref_Traits<CORBA::PrimitiveDef>
      >;

#endif /* end #if !defined */

  template class
    TAO::Ret_Basic_Argument_T<
        CORBA::PrimitiveKind
      >;

  template class
    TAO::Objref_Traits<
        CORBA::PrimitiveDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::PrimitiveDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::PrimitiveDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::PrimitiveDef
      >;

#if !defined (_CORBA_STRINGDEF__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_STRINGDEF__ARG_TRAITS_TMPLINST_CS_

  template class
    TAO::Arg_Traits<
        CORBA::StringDef
      >;

  template class
    TAO::Object_Arg_Traits_T<
        CORBA::StringDef_ptr,
        CORBA::StringDef_var,
        CORBA::StringDef_out,
        TAO::Objref_Traits<CORBA::StringDef>
      >;

#endif /* end #if !defined */

  template class
    TAO::Objref_Traits<
        CORBA::StringDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::StringDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::StringDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::StringDef
      >;

#if !defined (_CORBA_SEQUENCEDEF__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCEDEF__ARG_TRAITS_TMPLINST_CS_

  template class
    TAO::Arg_Traits<
        CORBA::SequenceDef
      >;

  template class
    TAO::Object_Arg_Traits_T<
        CORBA::SequenceDef_ptr,
        CORBA::SequenceDef_var,
        CORBA::SequenceDef_out,
        TAO::Objref_Traits<CORBA::SequenceDef>
      >;

#endif /* end #if !defined */

  template class
    TAO::Objref_Traits<
        CORBA::SequenceDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::SequenceDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::SequenceDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::SequenceDef
      >;

#if !defined (_CORBA_ARRAYDEF__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_ARRAYDEF__ARG_TRAITS_TMPLINST_CS_

  template class
    TAO::Arg_Traits<
        CORBA::ArrayDef
      >;

  template class
    TAO::Object_Arg_Traits_T<
        CORBA::ArrayDef_ptr,
        CORBA::ArrayDef_var,
        CORBA::ArrayDef_out,
        TAO::Objref_Traits<CORBA::ArrayDef>
      >;

#endif /* end #if !defined */

  template class
    TAO::Objref_Traits<
        CORBA::ArrayDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::ArrayDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::ArrayDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::ArrayDef
      >;

#if !defined (_CORBA_WSTRINGDEF__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_WSTRINGDEF__ARG_TRAITS_TMPLINST_CS_

  template class
    TAO::Arg_Traits<
        CORBA::WstringDef
      >;

  template class
    TAO::Object_Arg_Traits_T<
        CORBA::WstringDef_ptr,
        CORBA::WstringDef_var,
        CORBA::WstringDef_out,
        TAO::Objref_Traits<CORBA::WstringDef>
      >;

#endif /* end #if !defined */

  template class
    TAO::Objref_Traits<
        CORBA::WstringDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::WstringDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::WstringDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::WstringDef
      >;

#if !defined (_CORBA_FIXEDDEF__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_FIXEDDEF__ARG_TRAITS_TMPLINST_CS_

  template class
    TAO::Arg_Traits<
        CORBA::FixedDef
      >;

  template class
    TAO::Object_Arg_Traits_T<
        CORBA::FixedDef_ptr,
        CORBA::FixedDef_var,
        CORBA::FixedDef_out,
        TAO::Objref_Traits<CORBA::FixedDef>
      >;

#endif /* end #if !defined */

#if !defined (_CORBA_PRIMITIVEKIND__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_PRIMITIVEKIND__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<CORBA::PrimitiveKind>;

  template class TAO::Basic_Arg_Traits_T<CORBA::PrimitiveKind>;

#endif /* end #if !defined */

  template class
    TAO_Var_Var_T<
        CORBA::ModuleDescription
      >;

  template class
    TAO_Var_Base_T<
        CORBA::ModuleDescription
      >;

  template class
    TAO_Out_T<
        CORBA::ModuleDescription,
        CORBA::ModuleDescription_var
      >;

  template class
    TAO_Var_Var_T<
        CORBA::ConstantDescription
      >;

  template class
    TAO_Var_Base_T<
        CORBA::ConstantDescription
      >;

  template class
    TAO_Out_T<
        CORBA::ConstantDescription,
        CORBA::ConstantDescription_var
      >;

#if !defined (_CORBA_EXCEPTIONDEFSEQ__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_EXCEPTIONDEFSEQ__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<CORBA::ExceptionDefSeq>;

  template class
    TAO::Var_Size_Arg_Traits_T<
        CORBA::ExceptionDefSeq,
        CORBA::ExceptionDefSeq_var,
        CORBA::ExceptionDefSeq_out
      >;

#endif /* end #if !defined */

  template class
    TAO_Object_Manager<
        CORBA::ExceptionDef,
        CORBA::ExceptionDef_var
      >;

  template class
    TAO_MngSeq_Var_T<
        CORBA::ExceptionDefSeq,
        TAO_Object_Manager<
            CORBA::ExceptionDef,
            CORBA::ExceptionDef_var
          >
      >;

  template class
    TAO_Seq_Var_Base_T<
        CORBA::ExceptionDefSeq,
        TAO_Object_Manager<
            CORBA::ExceptionDef,
            CORBA::ExceptionDef_var
          >
      >;

  template class
    TAO_MngSeq_Out_T<
        CORBA::ExceptionDefSeq,
        CORBA::ExceptionDefSeq_var,
        TAO_Object_Manager<
            CORBA::ExceptionDef,
            CORBA::ExceptionDef_var
          >
      >;

#if !defined (_CORBA_EXCEPTIONDEF__EXPLICIT_CS_)
#define _CORBA_EXCEPTIONDEF__EXPLICIT_CS_

  template class
    TAO_Unbounded_Object_Sequence<
        CORBA::ExceptionDef,
        CORBA::ExceptionDef_var
      >;

#endif /* end #if !defined */

#if !defined (_CORBA_ATTRIBUTEMODE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_ATTRIBUTEMODE__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<CORBA::AttributeMode>;

  template class TAO::Basic_Arg_Traits_T<CORBA::AttributeMode>;

#endif /* end #if !defined */

#if !defined (_CORBA_ATTRIBUTEDEF__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_ATTRIBUTEDEF__ARG_TRAITS_TMPLINST_CS_

  template class
    TAO::Arg_Traits<
        CORBA::AttributeDef
      >;

  template class
    TAO::Object_Arg_Traits_T<
        CORBA::AttributeDef_ptr,
        CORBA::AttributeDef_var,
        CORBA::AttributeDef_out,
        TAO::Objref_Traits<CORBA::AttributeDef>
      >;

#endif /* end #if !defined */

  template class
    TAO::Ret_Basic_Argument_T<
        CORBA::AttributeMode
      >;

  template class
    TAO::Objref_Traits<
        CORBA::AttributeDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::AttributeDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::AttributeDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::AttributeDef
      >;

  template class
    TAO_Var_Var_T<
        CORBA::AttributeDescription
      >;

  template class
    TAO_Var_Base_T<
        CORBA::AttributeDescription
      >;

  template class
    TAO_Out_T<
        CORBA::AttributeDescription,
        CORBA::AttributeDescription_var
      >;

#if !defined (_CORBA_EXTATTRIBUTEDESCRIPTION__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_EXTATTRIBUTEDESCRIPTION__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<CORBA::ExtAttributeDescription>;

  template class
    TAO::Var_Size_Arg_Traits_T<
        CORBA::ExtAttributeDescription,
        CORBA::ExtAttributeDescription_var,
        CORBA::ExtAttributeDescription_out
      >;

#endif /* end #if !defined */

  template class
    TAO_Var_Var_T<
        CORBA::ExtAttributeDescription
      >;

  template class
    TAO_Var_Base_T<
        CORBA::ExtAttributeDescription
      >;

  template class
    TAO_Out_T<
        CORBA::ExtAttributeDescription,
        CORBA::ExtAttributeDescription_var
      >;

#if !defined (_CORBA_EXTATTRIBUTEDEF__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_EXTATTRIBUTEDEF__ARG_TRAITS_TMPLINST_CS_

  template class
    TAO::Arg_Traits<
        CORBA::ExtAttributeDef
      >;

  template class
    TAO::Object_Arg_Traits_T<
        CORBA::ExtAttributeDef_ptr,
        CORBA::ExtAttributeDef_var,
        CORBA::ExtAttributeDef_out,
        TAO::Objref_Traits<CORBA::ExtAttributeDef>
      >;

#endif /* end #if !defined */

  template class
    TAO::Ret_Var_Size_Argument_T<
        CORBA::ExcDescriptionSeq,
        CORBA::ExcDescriptionSeq_var
      >;

  template class
    TAO::In_Var_Size_Argument_T<
        CORBA::ExcDescriptionSeq
      >;

  template class
    TAO::Ret_Var_Size_Argument_T<
        CORBA::ExtAttributeDescription,
        CORBA::ExtAttributeDescription_var
      >;

  template class
    TAO::Objref_Traits<
        CORBA::ExtAttributeDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::ExtAttributeDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::ExtAttributeDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::ExtAttributeDef
      >;

#if !defined (_CORBA_OPERATIONMODE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_OPERATIONMODE__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<CORBA::OperationMode>;

  template class TAO::Basic_Arg_Traits_T<CORBA::OperationMode>;

#endif /* end #if !defined */

  template class
    TAO_Var_Var_T<
        CORBA::ParameterDescription
      >;

  template class
    TAO_Var_Base_T<
        CORBA::ParameterDescription
      >;

  template class
    TAO_Out_T<
        CORBA::ParameterDescription,
        CORBA::ParameterDescription_var
      >;

#if !defined (_CORBA_PARDESCRIPTIONSEQ__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_PARDESCRIPTIONSEQ__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<CORBA::ParDescriptionSeq>;

  template class
    TAO::Var_Size_Arg_Traits_T<
        CORBA::ParDescriptionSeq,
        CORBA::ParDescriptionSeq_var,
        CORBA::ParDescriptionSeq_out
      >;

#endif /* end #if !defined */

  template class
    TAO_VarSeq_Var_T<
        CORBA::ParDescriptionSeq,
        CORBA::ParameterDescription
      >;

  template class
    TAO_Seq_Var_Base_T<
        CORBA::ParDescriptionSeq,
        CORBA::ParameterDescription
      >;

  template class
    TAO_Seq_Out_T<
        CORBA::ParDescriptionSeq,
        CORBA::ParDescriptionSeq_var,
        CORBA::ParameterDescription
      >;

#if !defined (_CORBA_PARAMETERDESCRIPTION__EXPLICIT_CS_)
#define _CORBA_PARAMETERDESCRIPTION__EXPLICIT_CS_

  template class
    TAO_Unbounded_Sequence<
        CORBA::ParameterDescription
      >;

#endif /* end #if !defined */

#if !defined (_CORBA_CONTEXTIDSEQ__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_CONTEXTIDSEQ__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<CORBA::ContextIdSeq>;

  template class
    TAO::Var_Size_Arg_Traits_T<
        CORBA::ContextIdSeq,
        CORBA::ContextIdSeq_var,
        CORBA::ContextIdSeq_out
      >;

#endif /* end #if !defined */

  template class
    TAO_MngSeq_Var_T<
        CORBA::ContextIdSeq,
        TAO_SeqElem_String_Manager
      >;

  template class
    TAO_Seq_Var_Base_T<
        CORBA::ContextIdSeq,
        TAO_SeqElem_String_Manager
      >;

  template class
    TAO_MngSeq_Out_T<
        CORBA::ContextIdSeq,
        CORBA::ContextIdSeq_var,
        TAO_SeqElem_String_Manager
      >;

#if !defined (_CORBA_OPERATIONDEF__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_OPERATIONDEF__ARG_TRAITS_TMPLINST_CS_

  template class
    TAO::Arg_Traits<
        CORBA::OperationDef
      >;

  template class
    TAO::Object_Arg_Traits_T<
        CORBA::OperationDef_ptr,
        CORBA::OperationDef_var,
        CORBA::OperationDef_out,
        TAO::Objref_Traits<CORBA::OperationDef>
      >;

#endif /* end #if !defined */

  template class
    TAO::Ret_Var_Size_Argument_T<
        CORBA::ParDescriptionSeq,
        CORBA::ParDescriptionSeq_var
      >;

  template class
    TAO::Ret_Basic_Argument_T<
        CORBA::OperationMode
      >;

  template class
    TAO::Ret_Var_Size_Argument_T<
        CORBA::ContextIdSeq,
        CORBA::ContextIdSeq_var
      >;

  template class
    TAO::Ret_Var_Size_Argument_T<
        CORBA::ExceptionDefSeq,
        CORBA::ExceptionDefSeq_var
      >;

  template class
    TAO::Objref_Traits<
        CORBA::OperationDef
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::OperationDef
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::OperationDef
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::OperationDef
      >;

  template class
    TAO_Var_Var_T<
        CORBA::OperationDescription
      >;

  template class
    TAO_Var_Base_T<
        CORBA::OperationDescription
      >;

  template class
    TAO_Out_T<
        CORBA::OperationDescription,
        CORBA::OperationDescription_var
      >;

  template class
    TAO_VarSeq_Var_T<
        CORBA::ExtAttrDescriptionSeq,
        CORBA::ExtAttributeDescription
      >;

  template class
    TAO_Seq_Var_Base_T<
        CORBA::ExtAttrDescriptionSeq,
        CORBA::ExtAttributeDescription
      >;

  template class
    TAO_Seq_Out_T<
        CORBA::ExtAttrDescriptionSeq,
        CORBA::ExtAttrDescriptionSeq_var,
        CORBA::ExtAttributeDescription
      >;

#if !defined (_CORBA_EXTATTRIBUTEDESCRIPTION__EXPLICIT_CS_)
#define _CORBA_EXTATTRIBUTEDESCRIPTION__EXPLICIT_CS_

  template class
    TAO_Unbounded_Sequence<
        CORBA::ExtAttributeDescription
      >;

#endif /* end #if !defined */

  template class
    TAO_Var_Var_T<
        CORBA::InterfaceDescription
      >;

  template class
    TAO_Var_Base_T<
        CORBA::InterfaceDescription
      >;

  template class
    TAO_Out_T<
        CORBA::InterfaceDescription,
        CORBA::InterfaceDescription_var
      >;

#if !defined (_CORBA_INTERFACEATTREXTENSION_EXTFULLINTERFACEDESCRIPTION__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_INTERFACEATTREXTENSION_EXTFULLINTERFACEDESCRIPTION__ARG_TRAITS_TMPLINST_CS_

  template class TAO::Arg_Traits<CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription>;

  template class
    TAO::Var_Size_Arg_Traits_T<
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription,
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription_var,
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription_out
      >;

#endif /* end #if !defined */

  template class
    TAO_Var_Var_T<
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription
      >;

  template class
    TAO_Var_Base_T<
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription
      >;

  template class
    TAO_Out_T<
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription,
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription_var
      >;

  template class
    TAO::Ret_Var_Size_Argument_T<
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription,
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription_var
      >;

  template class
    TAO::Ret_Object_Argument_T<
        CORBA::ExtAttributeDef_ptr,
        CORBA::ExtAttributeDef_var
      >;

  template class
    TAO::Objref_Traits<
        CORBA::InterfaceAttrExtension
      >;

  template class
    TAO_Objref_Var_T<
        CORBA::InterfaceAttrExtension
      >;
  
  template class
    TAO_Objref_Out_T<
        CORBA::InterfaceAttrExtension
      >;

  template class
    TAO::Narrow_Utils<
        CORBA::InterfaceAttrExtension
      >;

#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)

#if !defined (_CORBA_CONTAINED__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_CONTAINED__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate \
    TAO::Arg_Traits< \
        CORBA::Contained \
      >

# pragma instantiate \
    TAO::Object_Arg_Traits_T< \
        CORBA::Contained_ptr, \
        CORBA::Contained_var, \
        CORBA::Contained_out, \
        TAO::Objref_Traits<CORBA::Contained> \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO::Ret_Object_Argument_T< \
        CORBA::Contained_ptr, \
        CORBA::Contained_var \
      >

# pragma instantiate \
    TAO::Ret_Object_Argument_T< \
        CORBA::PrimitiveDef_ptr, \
        CORBA::PrimitiveDef_var \
      >

# pragma instantiate \
    TAO::In_Basic_Argument_T< \
        CORBA::PrimitiveKind \
      >

# pragma instantiate \
    TAO::Ret_Object_Argument_T< \
        CORBA::StringDef_ptr, \
        CORBA::StringDef_var \
      >

# pragma instantiate \
    TAO::Ret_Object_Argument_T< \
        CORBA::WstringDef_ptr, \
        CORBA::WstringDef_var \
      >

# pragma instantiate \
    TAO::Ret_Object_Argument_T< \
        CORBA::SequenceDef_ptr, \
        CORBA::SequenceDef_var \
      >

# pragma instantiate \
    TAO::In_Object_Argument_T< \
        CORBA::IDLType_ptr \
      >

# pragma instantiate \
    TAO::Ret_Object_Argument_T< \
        CORBA::ArrayDef_ptr, \
        CORBA::ArrayDef_var \
      >

# pragma instantiate \
    TAO::Ret_Object_Argument_T< \
        CORBA::FixedDef_ptr, \
        CORBA::FixedDef_var \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::Repository \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::Repository
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::Repository
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::Repository \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::ModuleDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::ModuleDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::ModuleDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::ModuleDef \
      >

# pragma instantiate \
    TAO::Ret_Object_Argument_T< \
        CORBA::IDLType_ptr, \
        CORBA::IDLType_var \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::ConstantDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::ConstantDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::ConstantDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::ConstantDef \
      >

#if !defined (_CORBA_IDLTYPE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_IDLTYPE__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate \
    TAO::Arg_Traits< \
        CORBA::IDLType \
      >

# pragma instantiate \
    TAO::Object_Arg_Traits_T< \
        CORBA::IDLType_ptr, \
        CORBA::IDLType_var, \
        CORBA::IDLType_out, \
        TAO::Objref_Traits<CORBA::IDLType> \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO::Ret_Var_Size_Argument_T< \
        CORBA::StructMemberSeq, \
        CORBA::StructMemberSeq_var \
      >

# pragma instantiate \
    TAO::In_Var_Size_Argument_T< \
        CORBA::StructMemberSeq \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::StructDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::StructDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::StructDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::StructDef \
      >

# pragma instantiate \
    TAO::Ret_Var_Size_Argument_T< \
        CORBA::UnionMemberSeq, \
        CORBA::UnionMemberSeq_var \
      >

# pragma instantiate \
    TAO::In_Var_Size_Argument_T< \
        CORBA::UnionMemberSeq \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::UnionDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::UnionDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::UnionDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::UnionDef \
      >

# pragma instantiate \
    TAO::Ret_Var_Size_Argument_T< \
        CORBA::EnumMemberSeq, \
        CORBA::EnumMemberSeq_var \
      >

# pragma instantiate \
    TAO::In_Var_Size_Argument_T< \
        CORBA::EnumMemberSeq \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::EnumDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::EnumDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::EnumDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::EnumDef \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::AliasDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::AliasDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::AliasDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::AliasDef \
      >

# pragma instantiate \
    TAO::Ret_Var_Size_Argument_T< \
        CORBA::InterfaceDefSeq, \
        CORBA::InterfaceDefSeq_var \
      >

# pragma instantiate \
    TAO::In_Var_Size_Argument_T< \
        CORBA::InterfaceDefSeq \
      >

#if !defined (_CORBA_INTERFACEDEF_FULLINTERFACEDESCRIPTION__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_INTERFACEDEF_FULLINTERFACEDESCRIPTION__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<CORBA::InterfaceDef::FullInterfaceDescription>

# pragma instantiate \
    TAO::Var_Size_Arg_Traits_T< \
        CORBA::InterfaceDef::FullInterfaceDescription, \
        CORBA::InterfaceDef::FullInterfaceDescription_var, \
        CORBA::InterfaceDef::FullInterfaceDescription_out \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO_VarSeq_Var_T< \
        CORBA::OpDescriptionSeq, \
        CORBA::OperationDescription \
      >

# pragma instantiate \
    TAO_Seq_Var_Base_T< \
        CORBA::OpDescriptionSeq, \
        CORBA::OperationDescription \
      >

# pragma instantiate \
    TAO_Seq_Out_T< \
        CORBA::OpDescriptionSeq, \
        CORBA::OpDescriptionSeq_var, \
        CORBA::OperationDescription \
      >

#if !defined (_CORBA_OPERATIONDESCRIPTION__EXPLICIT_CS_)
#define _CORBA_OPERATIONDESCRIPTION__EXPLICIT_CS_

# pragma instantiate \
    TAO_Unbounded_Sequence< \
        CORBA::OperationDescription \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO_VarSeq_Var_T< \
        CORBA::AttrDescriptionSeq, \
        CORBA::AttributeDescription \
      >

# pragma instantiate \
    TAO_Seq_Var_Base_T< \
        CORBA::AttrDescriptionSeq, \
        CORBA::AttributeDescription \
      >

# pragma instantiate \
    TAO_Seq_Out_T< \
        CORBA::AttrDescriptionSeq, \
        CORBA::AttrDescriptionSeq_var, \
        CORBA::AttributeDescription \
      >

#if !defined (_CORBA_ATTRIBUTEDESCRIPTION__EXPLICIT_CS_)
#define _CORBA_ATTRIBUTEDESCRIPTION__EXPLICIT_CS_

# pragma instantiate \
    TAO_Unbounded_Sequence< \
        CORBA::AttributeDescription \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO_MngSeq_Var_T< \
        CORBA::RepositoryIdSeq, \
        TAO_SeqElem_String_Manager \
      >

# pragma instantiate \
    TAO_Seq_Var_Base_T< \
        CORBA::RepositoryIdSeq, \
        TAO_SeqElem_String_Manager \
      >

# pragma instantiate \
    TAO_MngSeq_Out_T< \
        CORBA::RepositoryIdSeq, \
        CORBA::RepositoryIdSeq_var, \
        TAO_SeqElem_String_Manager \
      >

# pragma instantiate \
    TAO_Var_Var_T< \
        CORBA::InterfaceDef::FullInterfaceDescription \
      >

# pragma instantiate \
    TAO_Var_Base_T< \
        CORBA::InterfaceDef::FullInterfaceDescription \
      >

# pragma instantiate \
    TAO_Out_T< \
        CORBA::InterfaceDef::FullInterfaceDescription, \
        CORBA::InterfaceDef::FullInterfaceDescription_var \
      >

# pragma instantiate \
    TAO::Ret_Var_Size_Argument_T< \
        CORBA::InterfaceDef::FullInterfaceDescription, \
        CORBA::InterfaceDef::FullInterfaceDescription_var \
      >

# pragma instantiate \
    TAO::Ret_Object_Argument_T< \
        CORBA::AttributeDef_ptr, \
        CORBA::AttributeDef_var \
      >

# pragma instantiate \
    TAO::In_Basic_Argument_T< \
        CORBA::AttributeMode \
      >

# pragma instantiate \
    TAO::Ret_Object_Argument_T< \
        CORBA::OperationDef_ptr, \
        CORBA::OperationDef_var \
      >

# pragma instantiate \
    TAO::In_Basic_Argument_T< \
        CORBA::OperationMode \
      >

# pragma instantiate \
    TAO::In_Var_Size_Argument_T< \
        CORBA::ParDescriptionSeq \
      >

# pragma instantiate \
    TAO::In_Var_Size_Argument_T< \
        CORBA::ExceptionDefSeq \
      >

# pragma instantiate \
    TAO::In_Var_Size_Argument_T< \
        CORBA::ContextIdSeq \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::InterfaceDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::InterfaceDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::InterfaceDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::InterfaceDef \
      >

#if !defined (_CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<CORBA::InterfaceDefSeq>

# pragma instantiate \
    TAO::Var_Size_Arg_Traits_T< \
        CORBA::InterfaceDefSeq, \
        CORBA::InterfaceDefSeq_var, \
        CORBA::InterfaceDefSeq_out \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::ExceptionDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::ExceptionDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::ExceptionDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::ExceptionDef \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::NativeDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::NativeDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::NativeDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::NativeDef \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::AbstractInterfaceDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::AbstractInterfaceDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::AbstractInterfaceDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::AbstractInterfaceDef \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::LocalInterfaceDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::LocalInterfaceDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::LocalInterfaceDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::LocalInterfaceDef \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::ExtInterfaceDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::ExtInterfaceDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::ExtInterfaceDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::ExtInterfaceDef \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::ExtAbstractInterfaceDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::ExtAbstractInterfaceDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::ExtAbstractInterfaceDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::ExtAbstractInterfaceDef \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::ExtLocalInterfaceDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::ExtLocalInterfaceDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::ExtLocalInterfaceDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::ExtLocalInterfaceDef \
      >

#if !defined (_CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<CORBA::StructMemberSeq>

# pragma instantiate \
    TAO::Var_Size_Arg_Traits_T< \
        CORBA::StructMemberSeq, \
        CORBA::StructMemberSeq_var, \
        CORBA::StructMemberSeq_out \
      >

#endif /* end #if !defined */

#if !defined (_CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<CORBA::ExcDescriptionSeq>

# pragma instantiate \
    TAO::Var_Size_Arg_Traits_T< \
        CORBA::ExcDescriptionSeq, \
        CORBA::ExcDescriptionSeq_var, \
        CORBA::ExcDescriptionSeq_out \
      >

#endif /* end #if !defined */

#if !defined (_CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<CORBA::UnionMemberSeq>

# pragma instantiate \
    TAO::Var_Size_Arg_Traits_T< \
        CORBA::UnionMemberSeq, \
        CORBA::UnionMemberSeq_var, \
        CORBA::UnionMemberSeq_out \
      >

#endif /* end #if !defined */

#if !defined (_CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCE__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<CORBA::EnumMemberSeq>

# pragma instantiate \
    TAO::Var_Size_Arg_Traits_T< \
        CORBA::EnumMemberSeq, \
        CORBA::EnumMemberSeq_var, \
        CORBA::EnumMemberSeq_out \
      >

#endif /* end #if !defined */

#if !defined (_CORBA_PRIMITIVEDEF__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_PRIMITIVEDEF__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate \
    TAO::Arg_Traits< \
        CORBA::PrimitiveDef \
      >

# pragma instantiate \
    TAO::Object_Arg_Traits_T< \
        CORBA::PrimitiveDef_ptr, \
        CORBA::PrimitiveDef_var, \
        CORBA::PrimitiveDef_out, \
        TAO::Objref_Traits<CORBA::PrimitiveDef> \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO::Ret_Basic_Argument_T< \
        CORBA::PrimitiveKind \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::PrimitiveDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::PrimitiveDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::PrimitiveDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::PrimitiveDef \
      >

#if !defined (_CORBA_STRINGDEF__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_STRINGDEF__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate \
    TAO::Arg_Traits< \
        CORBA::StringDef \
      >

# pragma instantiate \
    TAO::Object_Arg_Traits_T< \
        CORBA::StringDef_ptr, \
        CORBA::StringDef_var, \
        CORBA::StringDef_out, \
        TAO::Objref_Traits<CORBA::StringDef> \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::StringDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::StringDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::StringDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::StringDef \
      >

#if !defined (_CORBA_SEQUENCEDEF__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_SEQUENCEDEF__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate \
    TAO::Arg_Traits< \
        CORBA::SequenceDef \
      >

# pragma instantiate \
    TAO::Object_Arg_Traits_T< \
        CORBA::SequenceDef_ptr, \
        CORBA::SequenceDef_var, \
        CORBA::SequenceDef_out, \
        TAO::Objref_Traits<CORBA::SequenceDef> \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::SequenceDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::SequenceDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::SequenceDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::SequenceDef \
      >

#if !defined (_CORBA_ARRAYDEF__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_ARRAYDEF__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate \
    TAO::Arg_Traits< \
        CORBA::ArrayDef \
      >

# pragma instantiate \
    TAO::Object_Arg_Traits_T< \
        CORBA::ArrayDef_ptr, \
        CORBA::ArrayDef_var, \
        CORBA::ArrayDef_out, \
        TAO::Objref_Traits<CORBA::ArrayDef> \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::ArrayDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::ArrayDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::ArrayDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::ArrayDef \
      >

#if !defined (_CORBA_WSTRINGDEF__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_WSTRINGDEF__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate \
    TAO::Arg_Traits< \
        CORBA::WstringDef \
      >

# pragma instantiate \
    TAO::Object_Arg_Traits_T< \
        CORBA::WstringDef_ptr, \
        CORBA::WstringDef_var, \
        CORBA::WstringDef_out, \
        TAO::Objref_Traits<CORBA::WstringDef> \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::WstringDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::WstringDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::WstringDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::WstringDef \
      >

#if !defined (_CORBA_FIXEDDEF__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_FIXEDDEF__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate \
    TAO::Arg_Traits< \
        CORBA::FixedDef \
      >

# pragma instantiate \
    TAO::Object_Arg_Traits_T< \
        CORBA::FixedDef_ptr, \
        CORBA::FixedDef_var, \
        CORBA::FixedDef_out, \
        TAO::Objref_Traits<CORBA::FixedDef> \
      >

#endif /* end #if !defined */

#if !defined (_CORBA_PRIMITIVEKIND__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_PRIMITIVEKIND__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<CORBA::PrimitiveKind>

# pragma instantiate TAO::Basic_Arg_Traits_T<CORBA::PrimitiveKind>

#endif /* end #if !defined */

# pragma instantiate \
    TAO_Var_Var_T< \
        CORBA::ModuleDescription \
      >

# pragma instantiate \
    TAO_Var_Base_T< \
        CORBA::ModuleDescription \
      >

# pragma instantiate \
    TAO_Out_T< \
        CORBA::ModuleDescription, \
        CORBA::ModuleDescription_var \
      >

# pragma instantiate \
    TAO_Var_Var_T< \
        CORBA::ConstantDescription \
      >

# pragma instantiate \
    TAO_Var_Base_T< \
        CORBA::ConstantDescription \
      >

# pragma instantiate \
    TAO_Out_T< \
        CORBA::ConstantDescription, \
        CORBA::ConstantDescription_var \
      >

#if !defined (_CORBA_EXCEPTIONDEFSEQ__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_EXCEPTIONDEFSEQ__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<CORBA::ExceptionDefSeq>

# pragma instantiate \
    TAO::Var_Size_Arg_Traits_T< \
        CORBA::ExceptionDefSeq, \
        CORBA::ExceptionDefSeq_var, \
        CORBA::ExceptionDefSeq_out \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO_MngSeq_Var_T< \
        CORBA::ExceptionDefSeq, \
        TAO_Object_Manager< \
            CORBA::ExceptionDef, \
            CORBA::ExceptionDef_var \
          > \
      >

# pragma instantiate \
    TAO_Seq_Var_Base_T< \
        CORBA::ExceptionDefSeq, \
        TAO_Object_Manager< \
            CORBA::ExceptionDef, \
            CORBA::ExceptionDef_var \
          > \
      >

# pragma instantiate \
    TAO_MngSeq_Out_T< \
        CORBA::ExceptionDefSeq, \
        CORBA::ExceptionDefSeq_var, \
        TAO_Object_Manager< \
            CORBA::ExceptionDef, \
            CORBA::ExceptionDef_var \
          > \
      >

#if !defined (_CORBA_EXCEPTIONDEF__EXPLICIT_CS_)
#define _CORBA_EXCEPTIONDEF__EXPLICIT_CS_

# pragma instantiate \
    TAO_Unbounded_Object_Sequence< \
        CORBA::ExceptionDef, \
        CORBA::ExceptionDef_var \
      >

#endif /* end #if !defined */

#if !defined (_CORBA_ATTRIBUTEMODE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_ATTRIBUTEMODE__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<CORBA::AttributeMode>

# pragma instantiate TAO::Basic_Arg_Traits_T<CORBA::AttributeMode>

#endif /* end #if !defined */

#if !defined (_CORBA_ATTRIBUTEDEF__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_ATTRIBUTEDEF__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate \
    TAO::Arg_Traits< \
        CORBA::AttributeDef \
      >

# pragma instantiate \
    TAO::Object_Arg_Traits_T< \
        CORBA::AttributeDef_ptr, \
        CORBA::AttributeDef_var, \
        CORBA::AttributeDef_out, \
        TAO::Objref_Traits<CORBA::AttributeDef> \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO::Ret_Basic_Argument_T< \
        CORBA::AttributeMode \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::AttributeDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::AttributeDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::AttributeDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::AttributeDef \
      >

# pragma instantiate \
    TAO_Var_Var_T< \
        CORBA::AttributeDescription \
      >

# pragma instantiate \
    TAO_Var_Base_T< \
        CORBA::AttributeDescription \
      >

# pragma instantiate \
    TAO_Out_T< \
        CORBA::AttributeDescription, \
        CORBA::AttributeDescription_var \
      >

#if !defined (_CORBA_EXTATTRIBUTEDESCRIPTION__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_EXTATTRIBUTEDESCRIPTION__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<CORBA::ExtAttributeDescription>

# pragma instantiate \
    TAO::Var_Size_Arg_Traits_T< \
        CORBA::ExtAttributeDescription, \
        CORBA::ExtAttributeDescription_var, \
        CORBA::ExtAttributeDescription_out \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO_Var_Var_T< \
        CORBA::ExtAttributeDescription \
      >

# pragma instantiate \
    TAO_Var_Base_T< \
        CORBA::ExtAttributeDescription \
      >

# pragma instantiate \
    TAO_Out_T< \
        CORBA::ExtAttributeDescription, \
        CORBA::ExtAttributeDescription_var \
      >

#if !defined (_CORBA_EXTATTRIBUTEDEF__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_EXTATTRIBUTEDEF__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate \
    TAO::Arg_Traits< \
        CORBA::ExtAttributeDef \
      >

# pragma instantiate \
    TAO::Object_Arg_Traits_T< \
        CORBA::ExtAttributeDef_ptr, \
        CORBA::ExtAttributeDef_var, \
        CORBA::ExtAttributeDef_out, \
        TAO::Objref_Traits<CORBA::ExtAttributeDef> \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO::Ret_Var_Size_Argument_T< \
        CORBA::ExcDescriptionSeq, \
        CORBA::ExcDescriptionSeq_var \
      >

# pragma instantiate \
    TAO::In_Var_Size_Argument_T< \
        CORBA::ExcDescriptionSeq \
      >

# pragma instantiate \
    TAO::Ret_Var_Size_Argument_T< \
        CORBA::ExtAttributeDescription, \
        CORBA::ExtAttributeDescription_var \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::ExtAttributeDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::ExtAttributeDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::ExtAttributeDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::ExtAttributeDef \
      >

#if !defined (_CORBA_OPERATIONMODE__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_OPERATIONMODE__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<CORBA::OperationMode>

# pragma instantiate TAO::Basic_Arg_Traits_T<CORBA::OperationMode>

#endif /* end #if !defined */

# pragma instantiate \
    TAO_Var_Var_T< \
        CORBA::ParameterDescription \
      >

# pragma instantiate \
    TAO_Var_Base_T< \
        CORBA::ParameterDescription \
      >

# pragma instantiate \
    TAO_Out_T< \
        CORBA::ParameterDescription, \
        CORBA::ParameterDescription_var \
      >

#if !defined (_CORBA_PARDESCRIPTIONSEQ__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_PARDESCRIPTIONSEQ__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<CORBA::ParDescriptionSeq>

# pragma instantiate \
    TAO::Var_Size_Arg_Traits_T< \
        CORBA::ParDescriptionSeq, \
        CORBA::ParDescriptionSeq_var, \
        CORBA::ParDescriptionSeq_out \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO_VarSeq_Var_T< \
        CORBA::ParDescriptionSeq, \
        CORBA::ParameterDescription \
      >

# pragma instantiate \
    TAO_Seq_Var_Base_T< \
        CORBA::ParDescriptionSeq, \
        CORBA::ParameterDescription \
      >

# pragma instantiate \
    TAO_Seq_Out_T< \
        CORBA::ParDescriptionSeq, \
        CORBA::ParDescriptionSeq_var, \
        CORBA::ParameterDescription \
      >

#if !defined (_CORBA_PARAMETERDESCRIPTION__EXPLICIT_CS_)
#define _CORBA_PARAMETERDESCRIPTION__EXPLICIT_CS_

# pragma instantiate \
    TAO_Unbounded_Sequence< \
        CORBA::ParameterDescription \
      >

#endif /* end #if !defined */

#if !defined (_CORBA_CONTEXTIDSEQ__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_CONTEXTIDSEQ__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<CORBA::ContextIdSeq>

# pragma instantiate \
    TAO::Var_Size_Arg_Traits_T< \
        CORBA::ContextIdSeq, \
        CORBA::ContextIdSeq_var, \
        CORBA::ContextIdSeq_out \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO_MngSeq_Var_T< \
        CORBA::ContextIdSeq, \
        TAO_SeqElem_String_Manager \
      >

# pragma instantiate \
    TAO_Seq_Var_Base_T< \
        CORBA::ContextIdSeq, \
        TAO_SeqElem_String_Manager \
      >

# pragma instantiate \
    TAO_MngSeq_Out_T< \
        CORBA::ContextIdSeq, \
        CORBA::ContextIdSeq_var, \
        TAO_SeqElem_String_Manager \
      >

#if !defined (_CORBA_OPERATIONDEF__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_OPERATIONDEF__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate \
    TAO::Arg_Traits< \
        CORBA::OperationDef \
      >

# pragma instantiate \
    TAO::Object_Arg_Traits_T< \
        CORBA::OperationDef_ptr, \
        CORBA::OperationDef_var, \
        CORBA::OperationDef_out, \
        TAO::Objref_Traits<CORBA::OperationDef> \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO::Ret_Var_Size_Argument_T< \
        CORBA::ParDescriptionSeq, \
        CORBA::ParDescriptionSeq_var \
      >

# pragma instantiate \
    TAO::Ret_Basic_Argument_T< \
        CORBA::OperationMode \
      >

# pragma instantiate \
    TAO::Ret_Var_Size_Argument_T< \
        CORBA::ContextIdSeq, \
        CORBA::ContextIdSeq_var \
      >

# pragma instantiate \
    TAO::Ret_Var_Size_Argument_T< \
        CORBA::ExceptionDefSeq, \
        CORBA::ExceptionDefSeq_var \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::OperationDef \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::OperationDef
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::OperationDef
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::OperationDef \
      >

# pragma instantiate \
    TAO_Var_Var_T< \
        CORBA::OperationDescription \
      >

# pragma instantiate \
    TAO_Var_Base_T< \
        CORBA::OperationDescription \
      >

# pragma instantiate \
    TAO_Out_T< \
        CORBA::OperationDescription, \
        CORBA::OperationDescription_var \
      >

# pragma instantiate \
    TAO_VarSeq_Var_T< \
        CORBA::ExtAttrDescriptionSeq, \
        CORBA::ExtAttributeDescription \
      >

# pragma instantiate \
    TAO_Seq_Var_Base_T< \
        CORBA::ExtAttrDescriptionSeq, \
        CORBA::ExtAttributeDescription \
      >

# pragma instantiate \
    TAO_Seq_Out_T< \
        CORBA::ExtAttrDescriptionSeq, \
        CORBA::ExtAttrDescriptionSeq_var, \
        CORBA::ExtAttributeDescription \
      >

#if !defined (_CORBA_EXTATTRIBUTEDESCRIPTION__EXPLICIT_CS_)
#define _CORBA_EXTATTRIBUTEDESCRIPTION__EXPLICIT_CS_

# pragma instantiate \
    TAO_Unbounded_Sequence< \
        CORBA::ExtAttributeDescription \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO_Var_Var_T< \
        CORBA::InterfaceDescription \
      >

# pragma instantiate \
    TAO_Var_Base_T< \
        CORBA::InterfaceDescription \
      >

# pragma instantiate \
    TAO_Out_T< \
        CORBA::InterfaceDescription, \
        CORBA::InterfaceDescription_var \
      >

#if !defined (_CORBA_INTERFACEATTREXTENSION_EXTFULLINTERFACEDESCRIPTION__ARG_TRAITS_TMPLINST_CS_)
#define _CORBA_INTERFACEATTREXTENSION_EXTFULLINTERFACEDESCRIPTION__ARG_TRAITS_TMPLINST_CS_

# pragma instantiate TAO::Arg_Traits<CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription>

# pragma instantiate \
    TAO::Var_Size_Arg_Traits_T< \
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription, \
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription_var, \
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription_out \
      >

#endif /* end #if !defined */

# pragma instantiate \
    TAO_Var_Var_T< \
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription \
      >

# pragma instantiate \
    TAO_Var_Base_T< \
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription \
      >

# pragma instantiate \
    TAO_Out_T< \
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription, \
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription_var \
      >

# pragma instantiate \
    TAO::Ret_Var_Size_Argument_T< \
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription, \
        CORBA::InterfaceAttrExtension::ExtFullInterfaceDescription_var \
      >

# pragma instantiate \
    TAO::Ret_Object_Argument_T< \
        CORBA::ExtAttributeDef_ptr, \
        CORBA::ExtAttributeDef_var \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        CORBA::InterfaceAttrExtension \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        CORBA::InterfaceAttrExtension
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        CORBA::InterfaceAttrExtension
      >

# pragma instantiate \
    TAO::Narrow_Utils< \
        CORBA::InterfaceAttrExtension \
      >

#endif /* !ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */ 
