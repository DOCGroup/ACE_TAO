--- orig/MessagingC.h	Mon Feb 25 13:40:33 2002
+++ MessagingC.h	Mon Feb 25 13:58:15 2002
@@ -23,17 +23,31 @@
 #define _TAO_IDL_ORIG_MESSAGINGC_H_
 
 #include "ace/pre.h"
+#include "tao/orbconf.h"
 #include "tao/corba.h"
 
+#if (TAO_HAS_CORBA_MESSAGING == 1)
+
+#include "tao/corbafwd.h"
+
+#include "messaging_export.h"
+
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1)
+#include "tao/ValueBase.h"
+#include "tao/ValueFactory.h"
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
+
 #if !defined (ACE_LACKS_PRAGMA_ONCE)
 # pragma once
 #endif /* ACE_LACKS_PRAGMA_ONCE */
 
-#include "messaging_export.h"
-#include "TimeBaseC.h"
-#include "PolicyC.h"
-#include "PollableC.h"
-#include "Messaging_SyncScopeC.h"
+#include "tao/Any.h"
+#include "tao/CDR.h"
+#include "tao/Remote_Object_Proxy_Impl.h"
+#include "tao/TimeBaseC.h"
+#include "tao/PolicyC.h"
+#include "tao/PollableC.h"
+#include "tao/Messaging_SyncScopeC.h"
 
 #if defined (TAO_EXPORT_MACRO)
 #undef TAO_EXPORT_MACRO
@@ -58,6 +72,11 @@
 #pragma option push -w-rvl -w-rch -w-ccc -w-inl
 #endif /* __BORLANDC__ */
 
+#if defined(TRANSPARENT)
+// Some platforms define this macro for ioctl()
+#undef TRANSPARENT
+#endif
+
 TAO_NAMESPACE  Messaging
 {
   typedef CORBA::Short RebindMode;
@@ -100,6 +119,9 @@
   
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::UShort ORDER_DEADLINE;
   
+#if (TAO_HAS_REBIND_POLICY == 1)
+
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong REBIND_POLICY_TYPE;
   
   
@@ -249,6 +271,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RebindPolicy;
   
+#endif /* TAO_HAS_REBIND_POLICY == 1 */
+
+#if (TAO_HAS_SYNC_SCOPE_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong SYNC_SCOPE_POLICY_TYPE;
   
   
@@ -398,6 +424,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_SyncScopePolicy;
   
+#endif /* TAO_HAS_SYNC_SCOPE_POLICY == 1 */
+
+#if (TAO_HAS_PRIORITY_POLICIES == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong REQUEST_PRIORITY_POLICY_TYPE;
   
   struct PriorityRange;
@@ -749,6 +779,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ReplyPriorityPolicy;
   
+#endif /* TAO_HAS_PRIORITY_POLICIES == 1 */
+
+#if (TAO_HAS_REQUEST_START_TIME_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong REQUEST_START_TIME_POLICY_TYPE;
   
   
@@ -898,6 +932,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RequestStartTimePolicy;
   
+#endif /* TAO_HAS_REQUEST_START_TIME_POLICY == 1 */
+
+#if (TAO_HAS_REQUEST_END_TIME_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong REQUEST_END_TIME_POLICY_TYPE;
   
   
@@ -1047,6 +1085,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RequestEndTimePolicy;
   
+#endif /* TAO_HAS_REQUEST_END_TIME_POLICY == 1 */
+
+#if (TAO_HAS_REPLY_START_TIME_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong REPLY_START_TIME_POLICY_TYPE;
   
   
@@ -1196,6 +1238,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ReplyStartTimePolicy;
   
+#endif /* TAO_HAS_REPLY_START_TIME_POLICY == 1 */
+
+#if (TAO_HAS_REPLY_END_TIME_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong REPLY_END_TIME_POLICY_TYPE;
   
   
@@ -1345,6 +1391,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ReplyEndTimePolicy;
   
+#endif /* TAO_HAS_REPLY_END_TIME_POLICY == 1 */
+
+#if (TAO_HAS_RELATIVE_REQUEST_TIMEOUT_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong RELATIVE_REQ_TIMEOUT_POLICY_TYPE;
   
   
@@ -1494,6 +1544,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RelativeRequestTimeoutPolicy;
   
+#endif /* TAO_HAS_RELATIVE_REQUEST_TIMEOUT_POLICY == 1 */
+
+#if (TAO_HAS_RELATIVE_ROUNDTRIP_TIMEOUT_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong RELATIVE_RT_TIMEOUT_POLICY_TYPE;
   
   
@@ -1643,6 +1697,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RelativeRoundtripTimeoutPolicy;
   
+#endif /* TAO_HAS_RELATIVE_ROUNDTRIP_TIMEOUT_POLICY == 1 */
+
+#if (TAO_HAS_ROUTING_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong ROUTING_POLICY_TYPE;
   
   struct RoutingTypeRange;
@@ -1845,6 +1903,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RoutingPolicy;
   
+#endif /* TAO_HAS_ROUTING_POLICY == 1 */
+
+#if (TAO_HAS_MAX_HOPS_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong MAX_HOPS_POLICY_TYPE;
   
   
@@ -1994,6 +2056,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_MaxHopsPolicy;
   
+#endif /* TAO_HAS_MAX_HOPS_POLICY == 1 */
+
+#if (TAO_HAS_QUEUE_ORDER_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong QUEUE_ORDER_POLICY_TYPE;
   
   
@@ -2005,6 +2071,8 @@
   
 #endif /* end #if !defined */
   
+#endif /* TAO_HAS_QUEUE_ORDER_POLICY == 1 */
+  
   
 #if !defined (_MESSAGING_QUEUEORDERPOLICY___VAR_CH_)
 #define _MESSAGING_QUEUEORDERPOLICY___VAR_CH_
@@ -2616,12 +2684,17 @@
 
 // Proxy Broker Factory function pointer declarations.
 
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1 )
 extern TAO_Messaging_Export
 Messaging::_TAO_ReplyHandler_Proxy_Broker *
 (*Messaging__TAO_ReplyHandler_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   );
 
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
+
+#if (TAO_HAS_AMI_CALLBACK == 1)
+
 TAO_NAMESPACE  OBV_Messaging
 {
 
@@ -2675,10 +2748,17 @@
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::SyncScopePolicy_ptr); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::SyncScopePolicy_ptr *); // non-copying
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::SyncScopePolicy_ptr &);
+#endif /* TAO_HAS_AMI_CALLBACK == 1 */
+
+#if (TAO_HAS_PRIORITY_POLICIES == 1)
+
 TAO_Messaging_Export void operator<<= (CORBA::Any &, const Messaging::PriorityRange &); // copying version
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::PriorityRange*); // noncopying version
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::PriorityRange *&); // deprecated
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Messaging::PriorityRange *&);
+
+#endif /* TAO_HAS_PRIORITY_POLICIES == 1 */
+
 // Any operators for interface Messaging::RequestPriorityPolicy
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RequestPriorityPolicy_ptr); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RequestPriorityPolicy_ptr *); // non-copying
@@ -2711,10 +2791,16 @@
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RelativeRoundtripTimeoutPolicy_ptr); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RelativeRoundtripTimeoutPolicy_ptr *); // non-copying
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::RelativeRoundtripTimeoutPolicy_ptr &);
+
+#if (TAO_HAS_ROUTING_POLICY == 1)
+
 TAO_Messaging_Export void operator<<= (CORBA::Any &, const Messaging::RoutingTypeRange &); // copying version
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RoutingTypeRange*); // noncopying version
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::RoutingTypeRange *&); // deprecated
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Messaging::RoutingTypeRange *&);
+
+#endif /* TAO_HAS_ROUTING_POLICY == 1 */
+
 // Any operators for interface Messaging::RoutingPolicy
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RoutingPolicy_ptr); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RoutingPolicy_ptr *); // non-copying
@@ -2731,17 +2817,32 @@
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ExceptionHolder *); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ExceptionHolder **); // non-copying
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::ExceptionHolder *&);
+
+#if (TAO_HAS_AMI_CALLBACK == 1)
+
 // Any operators for interface Messaging::ReplyHandler
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ReplyHandler_ptr); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ReplyHandler_ptr *); // non-copying
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::ReplyHandler_ptr &);
 
+#endif /* TAO_HAS_AMI_CALLBACK */
+
 #ifndef __ACE_INLINE__
 
+#if (TAO_HAS_PRIORITY_POLICIES == 1)
+
 TAO_Messaging_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Messaging::PriorityRange &);
 TAO_Messaging_Export CORBA::Boolean operator>> (TAO_InputCDR &, Messaging::PriorityRange &);
+
+#endif /* TAO_HAS_PRIORITY_POLICIES == 1 */
+
+#if (TAO_HAS_ROUTING_POLICY == 1)
+
 TAO_Messaging_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Messaging::RoutingTypeRange &);
 TAO_Messaging_Export CORBA::Boolean operator>> (TAO_InputCDR &, Messaging::RoutingTypeRange &);
+
+#endif /* TAO_HAS_ROUTING_POLICY == 1 */
+
 //@@ Boris: begin experimental
 TAO_NAMESPACE CORBA
 {
@@ -2750,6 +2851,9 @@
 }
 TAO_NAMESPACE_CLOSE
 //@@ Boris: end experimental
+//
+//
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1)
 
 TAO_Messaging_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Messaging::ExceptionHolder *);
 TAO_Messaging_Export CORBA::Boolean operator>> (TAO_InputCDR &, Messaging::ExceptionHolder *&);
@@ -2771,6 +2875,7 @@
 TAO_Messaging_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Messaging::ReplyHandler_ptr );
 TAO_Messaging_Export CORBA::Boolean operator>> (TAO_InputCDR &, Messaging::ReplyHandler_ptr &);
 
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
 #endif /* __ACE_INLINE__ */
 
 
@@ -2787,4 +2892,6 @@
 #endif /* __BORLANDC__ */
 
 #include "ace/post.h"
+
+#endif /* TAO_HAS_CORBA_MESSAGING == 1 */
 #endif /* ifndef */
--- orig/MessagingC.i	Mon Feb 25 13:40:33 2002
+++ MessagingC.i	Mon Feb 25 13:59:39 2002
@@ -400,6 +400,8 @@
 
 #endif /* end #if !defined */
 
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1)
+
 ACE_INLINE
 Messaging::ExceptionHolder::ExceptionHolder () // default constructor
 {}
@@ -432,6 +434,9 @@
 
 #endif /* end #if !defined */
 
+
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
+
 ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const Messaging::PriorityRange &_tao_aggregate)
 {
   if (
@@ -481,6 +486,9 @@
 }
 
 #if defined (__ACE_INLINE__)
+
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1)
+
 //@@ Boris: begin experimental
 TAO_NAMESPACE CORBA
 {
@@ -502,3 +510,4 @@
     Messaging::ReplyHandler_ptr &
   );
 
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
--- orig/MessagingC.cpp	Mon Feb 25 13:40:33 2002
+++ MessagingC.cpp	Mon Feb 25 13:44:57 2002
@@ -21,6 +21,8 @@
 
 #include "MessagingC.h"
 
+#if (TAO_HAS_CORBA_MESSAGING == 1)
+
 #include "tao/Stub.h"
 #include "tao/Invocation.h"
 #include "tao/PortableInterceptor.h"
@@ -266,6 +268,8 @@
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::UShort, ORDER_DEADLINE, 8U)
 TAO_NAMESPACE_END
+
+#if (TAO_HAS_REBIND_POLICY == 1)
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, REBIND_POLICY_TYPE, 23U)
@@ -627,6 +631,7 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_RebindPolicy, &_tc_TAO_tc_Messaging_RebindPolicy)
 TAO_NAMESPACE_END
 
+#if (TAO_HAS_SYNC_SCOPE_POLICY == 1)
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, SYNC_SCOPE_POLICY_TYPE, 24U)
@@ -696,6 +701,8 @@
   return this->ptr_;
 }
 
+#endif /* TAO_HAS_REBIND_POLICY == 1 */
+
 Messaging::SyncScopePolicy_var::SyncScopePolicy_var (const ::Messaging::SyncScopePolicy_var &p) // copy constructor
   : TAO_Base_var (),
     ptr_ (SyncScopePolicy::_duplicate (p.ptr ()))
@@ -989,6 +996,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_SyncScopePolicy, &_tc_TAO_tc_Messaging_SyncScopePolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_SYNC_SCOPE_POLICY == 1 */
+
+#if (TAO_HAS_PRIORITY_POLICIES == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, REQUEST_PRIORITY_POLICY_TYPE, 25U)
@@ -1785,6 +1796,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_ReplyPriorityPolicy, &_tc_TAO_tc_Messaging_ReplyPriorityPolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_PRIORITY_POLICIES == 1 */
+
+#if (TAO_HAS_REQUEST_START_TIME_POLICY == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, REQUEST_START_TIME_POLICY_TYPE, 27U)
@@ -2151,6 +2166,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_RequestStartTimePolicy, &_tc_TAO_tc_Messaging_RequestStartTimePolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_REQUEST_START_TIME_POLICY == 1 */
+
+#if (TAO_HAS_REQUEST_END_TIME_POLICY == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, REQUEST_END_TIME_POLICY_TYPE, 28U)
@@ -2516,6 +2535,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_RequestEndTimePolicy, &_tc_TAO_tc_Messaging_RequestEndTimePolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_REQUEST_END_TIME_POLICY == 1 */
+
+#if (TAO_HAS_REPLY_START_TIME_POLICY == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, REPLY_START_TIME_POLICY_TYPE, 29U)
@@ -2881,6 +2904,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_ReplyStartTimePolicy, &_tc_TAO_tc_Messaging_ReplyStartTimePolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_REPLY_START_TIME_POLICY == 1 */
+
+#if (TAO_HAS_REPLY_END_TIME_POLICY == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, REPLY_END_TIME_POLICY_TYPE, 30U)
@@ -3245,6 +3272,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_ReplyEndTimePolicy, &_tc_TAO_tc_Messaging_ReplyEndTimePolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_REPLY_END_TIME_POLICY == 1 */
+
+#if (TAO_HAS_RELATIVE_REQUEST_TIMEOUT_POLICY == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, RELATIVE_REQ_TIMEOUT_POLICY_TYPE, 31U)
@@ -3614,6 +3645,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_RelativeRequestTimeoutPolicy, &_tc_TAO_tc_Messaging_RelativeRequestTimeoutPolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_RELATIVE_REQUEST_TIMEOUT_POLICY == 1 */
+
+#if (TAO_HAS_RELATIVE_ROUNDTRIP_TIMEOUT_POLICY == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, RELATIVE_RT_TIMEOUT_POLICY_TYPE, 32U)
@@ -3984,6 +4019,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_RelativeRoundtripTimeoutPolicy, &_tc_TAO_tc_Messaging_RelativeRoundtripTimeoutPolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_RELATIVE_ROUNDTRIP_TIMEOUT_POLICY == 1 */
+
+#if (TAO_HAS_ROUTING_POLICY == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, ROUTING_POLICY_TYPE, 33U)
@@ -4415,6 +4454,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_RoutingPolicy, &_tc_TAO_tc_Messaging_RoutingPolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_ROUTING_POLICY == 1 */
+
+#if (TAO_HAS_MAX_HOPS_POLICY == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, MAX_HOPS_POLICY_TYPE, 34U)
@@ -4776,6 +4819,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_MaxHopsPolicy, &_tc_TAO_tc_Messaging_MaxHopsPolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_MAX_HOPS_POLICY == 1 */
+
+#if (TAO_HAS_QUEUE_ORDER_POLICY == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, QUEUE_ORDER_POLICY_TYPE, 35U)
@@ -5139,6 +5186,9 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_QueueOrderPolicy, &_tc_TAO_tc_Messaging_QueueOrderPolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_QUEUE_ORDER_POLICY == 1 */
+
+
 static const CORBA::Long _oc_Messaging_ExceptionHolder[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -5371,6 +5421,8 @@
   return this->ptr_;
 }
 
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1)
+
 Messaging::ExceptionHolder* Messaging::ExceptionHolder::_downcast (CORBA::ValueBase* v)
 {
   if (v == 0) return 0;
@@ -5943,6 +5995,11 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_ReplyHandler, &_tc_TAO_tc_Messaging_ReplyHandler)
 TAO_NAMESPACE_END
 
+
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
+
+#if (TAO_HAS_AMI_CALLBACK == 1)
+
 CORBA::Boolean 
 OBV_Messaging::ExceptionHolder::_tao_marshal__Messaging_ExceptionHolder (TAO_OutputCDR &strm){
   return _tao_marshal_state (strm);
@@ -6207,6 +6263,7 @@
 #  pragma instantiate TAO_Object_Manager<Messaging::SyncScopePolicy,Messaging::SyncScopePolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#endif /* TAO_HAS_AMI_CALLBACK == 1 */
 
 // TAO_IDL - Generated from 
 // be/be_visitor_structure/any_op_cs.cpp:58
@@ -6486,6 +6543,8 @@
   ACE_ENDTRY;
 }
 
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
+
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
   template class TAO_Object_Manager<Messaging::ReplyPriorityPolicy,Messaging::ReplyPriorityPolicy_var>;
@@ -7419,6 +7478,8 @@
   #  pragma instantiate TAO_Valuetype_Manager<Messaging::ExceptionHolder, Messaging::ExceptionHolder_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1)
+
 
 // TAO_IDL - Generated from 
 // be/be_visitor_interface/any_op_cs.cpp:60
@@ -7582,6 +7643,8 @@
   
 }
 
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1)
+
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
     const Messaging::ReplyHandler_ptr _tao_objref
@@ -7618,3 +7681,6 @@
   return 0;
 }
 
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
+
+#endif /* TAO_HAS_CORBA_MESSAGING == 1 */
--- orig/MessagingS.h	Mon Feb 25 13:40:33 2002
+++ MessagingS.h	Mon Feb 25 14:00:56 2002
@@ -23,12 +23,11 @@
 #define _TAO_IDL_ORIG_MESSAGINGS_H_
 
 #include "ace/pre.h"
-#include "TimeBaseS.h"
-#include "PolicyS.h"
-#include "PollableS.h"
-#include "Messaging_SyncScopeS.h"
-#include "MessagingC.h"
 
+#include "MessagingC.h"
+#include "tao/PortableServer/PolicyS.h"
+#include "tao/TimeBaseS.h"
+#include "tao/Messaging_SyncScopeC.h"
 
 #if !defined (ACE_LACKS_PRAGMA_ONCE)
 # pragma once
