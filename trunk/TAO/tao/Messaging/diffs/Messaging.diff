--- orig/MessagingC.h	Wed Mar  6 15:04:36 2002
+++ MessagingC.h	Wed Mar  6 15:08:22 2002
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -23,17 +23,28 @@
 #define _TAO_IDL_ORIG_MESSAGINGC_H_
 
 #include "ace/pre.h"
-#include "tao/corba.h"
+#include "tao/orbconf.h"
+
+#include "tao/corbafwd.h"
+
+#include "messaging_export.h"
+
+
+#include "tao/ValueBase.h"
+#include "tao/ValueFactory.h"
+
 
 #if !defined (ACE_LACKS_PRAGMA_ONCE)
 # pragma once
 #endif /* ACE_LACKS_PRAGMA_ONCE */
 
-#include "messaging_export.h"
-#include "TimeBaseC.h"
-#include "PolicyC.h"
-#include "PollableC.h"
-#include "Messaging_SyncScopeC.h"
+#include "tao/Any.h"
+#include "tao/CDR.h"
+#include "tao/Remote_Object_Proxy_Impl.h"
+#include "tao/TimeBaseC.h"
+#include "tao/PolicyC.h"
+#include "tao/PollableC.h"
+#include "tao/Messaging_SyncScopeC.h"
 
 #if defined (TAO_EXPORT_MACRO)
 #undef TAO_EXPORT_MACRO
@@ -58,6 +69,11 @@
 #pragma option push -w-rvl -w-rch -w-ccc -w-inl
 #endif /* __BORLANDC__ */
 
+#if defined(TRANSPARENT)
+// Some platforms define this macro for ioctl()
+#undef TRANSPARENT
+#endif
+
 TAO_NAMESPACE  Messaging
 {
   typedef CORBA::Short RebindMode;
@@ -100,6 +116,9 @@
   
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::UShort ORDER_DEADLINE;
   
+#if (TAO_HAS_REBIND_POLICY == 1)
+
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong REBIND_POLICY_TYPE;
   
   
@@ -249,6 +268,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RebindPolicy;
   
+#endif /* TAO_HAS_REBIND_POLICY == 1 */
+
+#if (TAO_HAS_SYNC_SCOPE_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong SYNC_SCOPE_POLICY_TYPE;
   
   
@@ -398,6 +421,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_SyncScopePolicy;
   
+#endif /* TAO_HAS_SYNC_SCOPE_POLICY == 1 */
+
+#if (TAO_HAS_PRIORITY_POLICIES == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong REQUEST_PRIORITY_POLICY_TYPE;
   
   struct PriorityRange;
@@ -749,6 +776,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ReplyPriorityPolicy;
   
+#endif /* TAO_HAS_PRIORITY_POLICIES == 1 */
+
+#if (TAO_HAS_REQUEST_START_TIME_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong REQUEST_START_TIME_POLICY_TYPE;
   
   
@@ -898,6 +929,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RequestStartTimePolicy;
   
+#endif /* TAO_HAS_REQUEST_START_TIME_POLICY == 1 */
+
+#if (TAO_HAS_REQUEST_END_TIME_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong REQUEST_END_TIME_POLICY_TYPE;
   
   
@@ -1047,6 +1082,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RequestEndTimePolicy;
   
+#endif /* TAO_HAS_REQUEST_END_TIME_POLICY == 1 */
+
+#if (TAO_HAS_REPLY_START_TIME_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong REPLY_START_TIME_POLICY_TYPE;
   
   
@@ -1196,6 +1235,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ReplyStartTimePolicy;
   
+#endif /* TAO_HAS_REPLY_START_TIME_POLICY == 1 */
+
+#if (TAO_HAS_REPLY_END_TIME_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong REPLY_END_TIME_POLICY_TYPE;
   
   
@@ -1345,6 +1388,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ReplyEndTimePolicy;
   
+#endif /* TAO_HAS_REPLY_END_TIME_POLICY == 1 */
+
+#if (TAO_HAS_RELATIVE_REQUEST_TIMEOUT_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong RELATIVE_REQ_TIMEOUT_POLICY_TYPE;
   
   
@@ -1494,6 +1541,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RelativeRequestTimeoutPolicy;
   
+#endif /* TAO_HAS_RELATIVE_REQUEST_TIMEOUT_POLICY == 1 */
+
+#if (TAO_HAS_RELATIVE_ROUNDTRIP_TIMEOUT_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong RELATIVE_RT_TIMEOUT_POLICY_TYPE;
   
   
@@ -1643,6 +1694,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RelativeRoundtripTimeoutPolicy;
   
+#endif /* TAO_HAS_RELATIVE_ROUNDTRIP_TIMEOUT_POLICY == 1 */
+
+#if (TAO_HAS_ROUTING_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong ROUTING_POLICY_TYPE;
   
   struct RoutingTypeRange;
@@ -1845,6 +1900,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RoutingPolicy;
   
+#endif /* TAO_HAS_ROUTING_POLICY == 1 */
+
+#if (TAO_HAS_MAX_HOPS_POLICY == 1)
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong MAX_HOPS_POLICY_TYPE;
   
   
@@ -1994,6 +2053,10 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_MaxHopsPolicy;
   
+#endif /* TAO_HAS_MAX_HOPS_POLICY == 1 */
+
+
+  
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong QUEUE_ORDER_POLICY_TYPE;
   
   
@@ -2006,6 +2069,8 @@
 #endif /* end #if !defined */
   
   
+  
+  
 #if !defined (_MESSAGING_QUEUEORDERPOLICY___VAR_CH_)
 #define _MESSAGING_QUEUEORDERPOLICY___VAR_CH_
   
@@ -2143,6 +2208,8 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_QueueOrderPolicy;
   
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1)
+
   // Valuetype class
   class ExceptionHolder;
   
@@ -2610,6 +2677,7 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ReplyHandler;
   
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
   
 }
 TAO_NAMESPACE_CLOSE // module Messaging
@@ -2614,14 +2682,20 @@
 }
 TAO_NAMESPACE_CLOSE // module Messaging
 
+
 // Proxy Broker Factory function pointer declarations.
 
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1 )
 extern TAO_Messaging_Export
 Messaging::_TAO_ReplyHandler_Proxy_Broker *
 (*Messaging__TAO_ReplyHandler_Proxy_Broker_Factory_function_pointer) (
     CORBA::Object_ptr obj
   );
 
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
+
+#if (TAO_HAS_AMI_CALLBACK == 1)
+
 TAO_NAMESPACE  OBV_Messaging
 {
 
@@ -2675,42 +2749,91 @@
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::SyncScopePolicy_ptr); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::SyncScopePolicy_ptr *); // non-copying
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::SyncScopePolicy_ptr &);
+#endif /* TAO_HAS_AMI_CALLBACK == 1 */
+
+#if (TAO_HAS_PRIORITY_POLICIES == 1)
+
 TAO_Messaging_Export void operator<<= (CORBA::Any &, const Messaging::PriorityRange &); // copying version
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::PriorityRange*); // noncopying version
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::PriorityRange *&); // deprecated
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Messaging::PriorityRange *&);
+
+#endif /* TAO_HAS_PRIORITY_POLICIES == 1 */
+
+#if (TAO_HAS_REQUEST_PRIORITY_POLICIES == 1)
+
 // Any operators for interface Messaging::RequestPriorityPolicy
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RequestPriorityPolicy_ptr); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RequestPriorityPolicy_ptr *); // non-copying
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::RequestPriorityPolicy_ptr &);
+
+#endif /* TAO_HAS_REQUEST_PRIORITY_POLICIES == 1 */
+
+#if (TAO_HAS_REPLY_PRIORITY_POLICIES == 1)
+
 // Any operators for interface Messaging::ReplyPriorityPolicy
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ReplyPriorityPolicy_ptr); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ReplyPriorityPolicy_ptr *); // non-copying
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::ReplyPriorityPolicy_ptr &);
+
+#endif /* TAO_HAS_REPLY_PRIORITY_POLICIES == 1 */
+
+#if (TAO_HAS_REQUEST_START_TIME_POLICIES == 1)
+
 // Any operators for interface Messaging::RequestStartTimePolicy
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RequestStartTimePolicy_ptr); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RequestStartTimePolicy_ptr *); // non-copying
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::RequestStartTimePolicy_ptr &);
+
+#endif /* TAO_HAS_REQUEST_START_TIME_POLICIES == 1 */
+
+#if (TAO_HAS_REQUEST_END_TIME_POLICIES == 1)
+
 // Any operators for interface Messaging::RequestEndTimePolicy
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RequestEndTimePolicy_ptr); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RequestEndTimePolicy_ptr *); // non-copying
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::RequestEndTimePolicy_ptr &);
+
+#endif /* TAO_HAS_REQUEST_END_TIME_POLICIES == 1 */
+
+#if (TAO_HAS_REPLY_START_TIME_POLICIES == 1)
+
 // Any operators for interface Messaging::ReplyStartTimePolicy
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ReplyStartTimePolicy_ptr); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ReplyStartTimePolicy_ptr *); // non-copying
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::ReplyStartTimePolicy_ptr &);
+
+#endif /* TAO_HAS_REPLY_START_TIME_POLICIES == 1 */
+
+#if (TAO_HAS_REPLY_END_TIME_POLICIES == 1)
+
 // Any operators for interface Messaging::ReplyEndTimePolicy
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ReplyEndTimePolicy_ptr); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ReplyEndTimePolicy_ptr *); // non-copying
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::ReplyEndTimePolicy_ptr &);
+
+#endif /* TAO_HAS_REPLY_END_TIME_POLICIES == 1 */
+
+#if (TAO_HAS_RELATIVE_REQ_TIMEOUT_POLICIES == 1)
+
 // Any operators for interface Messaging::RelativeRequestTimeoutPolicy
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RelativeRequestTimeoutPolicy_ptr); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RelativeRequestTimeoutPolicy_ptr *); // non-copying
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::RelativeRequestTimeoutPolicy_ptr &);
+
+#endif /* TAO_HAS_RELATIVE_REQ_TIMEOUT_POLICIES == 1 */
+
+#if (TAO_HAS_RELATIVE_RT_TIMEOUT_POLICIES == 1)
+
 // Any operators for interface Messaging::RelativeRoundtripTimeoutPolicy
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RelativeRoundtripTimeoutPolicy_ptr); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RelativeRoundtripTimeoutPolicy_ptr *); // non-copying
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::RelativeRoundtripTimeoutPolicy_ptr &);
+
+#endif /* TAO_HAS_RELATIVE_RT_TIMEOUT_POLICIES == 1 */
+
+#if (TAO_HAS_ROUTING_POLICY == 1)
+
 TAO_Messaging_Export void operator<<= (CORBA::Any &, const Messaging::RoutingTypeRange &); // copying version
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RoutingTypeRange*); // noncopying version
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::RoutingTypeRange *&); // deprecated
@@ -2719,14 +2843,29 @@
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RoutingPolicy_ptr); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RoutingPolicy_ptr *); // non-copying
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::RoutingPolicy_ptr &);
+
+#endif /* TAO_HAS_ROUTING_POLICY == 1 */
+
+#if (TAO_HAS_MAX_HOPS_POLICY == 1)
+
 // Any operators for interface Messaging::MaxHopsPolicy
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::MaxHopsPolicy_ptr); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::MaxHopsPolicy_ptr *); // non-copying
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::MaxHopsPolicy_ptr &);
+
+#endif /* TAO_HAS_MAX_HOPS_POLICY == 1 */
+
+#if (TAO_HAS_QUEUE_ORDER_POLICY == 1)
+
 // Any operators for interface Messaging::QueueOrderPolicy
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::QueueOrderPolicy_ptr); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::QueueOrderPolicy_ptr *); // non-copying
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::QueueOrderPolicy_ptr &);
+
+#endif /* TAO_HAS_QUEUE_ORDER_POLICY == 1 */
+
+#if (TAO_HAS_AMI_CALLBACK == 1)
+
 // Any operators for valuetype Messaging::ExceptionHolder
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ExceptionHolder *); // copying
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ExceptionHolder **); // non-copying
@@ -2736,12 +2876,26 @@
 TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ReplyHandler_ptr *); // non-copying
 TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::ReplyHandler_ptr &);
 
+#endif /* TAO_HAS_AMI_CALLBACK */
+
 #ifndef __ACE_INLINE__
 
+#if (TAO_HAS_PRIORITY_POLICIES == 1)
+
 TAO_Messaging_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Messaging::PriorityRange &);
 TAO_Messaging_Export CORBA::Boolean operator>> (TAO_InputCDR &, Messaging::PriorityRange &);
+
+#endif /* TAO_HAS_PRIORITY_POLICIES == 1 */
+
+#if (TAO_HAS_ROUTING_POLICY == 1)
+
 TAO_Messaging_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Messaging::RoutingTypeRange &);
 TAO_Messaging_Export CORBA::Boolean operator>> (TAO_InputCDR &, Messaging::RoutingTypeRange &);
+
+#endif /* TAO_HAS_ROUTING_POLICY == 1 */
+
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1)
+
 //@@ Boris: begin experimental
 TAO_NAMESPACE CORBA
 {
@@ -2750,6 +2904,8 @@
 }
 TAO_NAMESPACE_CLOSE
 //@@ Boris: end experimental
+//
+//
 
 TAO_Messaging_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Messaging::ExceptionHolder *);
 TAO_Messaging_Export CORBA::Boolean operator>> (TAO_InputCDR &, Messaging::ExceptionHolder *&);
@@ -2757,6 +2913,7 @@
 #if !defined _TAO_CDR_OP_Messaging_ExceptionHolder__tao_seq_Octet_H_
 #define _TAO_CDR_OP_Messaging_ExceptionHolder__tao_seq_Octet_H_
 
+#if 0
 TAO_Messaging_Export CORBA::Boolean operator<< (
     TAO_OutputCDR &,
     const Messaging::ExceptionHolder::_tao_seq_Octet &
@@ -2765,12 +2922,14 @@
     TAO_InputCDR &,
     Messaging::ExceptionHolder::_tao_seq_Octet &
   );
+#endif /* 0 */
 
 #endif /* _TAO_CDR_OP_Messaging_ExceptionHolder__tao_seq_Octet_H_ */
 
 TAO_Messaging_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Messaging::ReplyHandler_ptr );
 TAO_Messaging_Export CORBA::Boolean operator>> (TAO_InputCDR &, Messaging::ReplyHandler_ptr &);
 
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
 #endif /* __ACE_INLINE__ */
 
 
--- orig/MessagingC.i	Wed Mar  6 15:04:36 2002
+++ MessagingC.i	Mon Mar  4 15:38:07 2002
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -37,6 +37,8 @@
 // Inline operations for class Messaging::PriorityRange_var
 // *************************************************************
 
+#if (TAO_HAS_REQUEST_PRIORITY_POLICIES == 1)
+
 ACE_INLINE
 Messaging::PriorityRange_var::PriorityRange_var (void) // default constructor
   : ptr_ (0)
@@ -185,6 +187,8 @@
 
 #endif /* end #if !defined */
 
+#endif /* TAO_HAS_REQUEST_PRIORITY_POLICIES == 1 */
+
 
 #if !defined (_MESSAGING_REPLYPRIORITYPOLICY___CI_)
 #define _MESSAGING_REPLYPRIORITYPOLICY___CI_
@@ -238,6 +242,8 @@
 // Inline operations for class Messaging::RoutingTypeRange_var
 // *************************************************************
 
+#if (TAO_HAS_ROUTING_POLICY == 1)
+
 ACE_INLINE
 Messaging::RoutingTypeRange_var::RoutingTypeRange_var (void) // default constructor
   : ptr_ (0)
@@ -386,6 +392,8 @@
 
 #endif /* end #if !defined */
 
+#endif /* TAO_HAS_ROUTING_POLICY == 1 */
+
 
 #if !defined (_MESSAGING_MAXHOPSPOLICY___CI_)
 #define _MESSAGING_MAXHOPSPOLICY___CI_
@@ -400,6 +408,8 @@
 
 #endif /* end #if !defined */
 
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1)
+
 ACE_INLINE
 Messaging::ExceptionHolder::ExceptionHolder () // default constructor
 {}
@@ -432,6 +442,11 @@
 
 #endif /* end #if !defined */
 
+
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
+
+#if (TAO_HAS_PRIORITY_POLICIES == 1)
+
 ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const Messaging::PriorityRange &_tao_aggregate)
 {
   if (
@@ -456,6 +471,10 @@
   
 }
 
+#endif /* TAO_HAS_PRIORITY_POLICIES == 1 */
+
+#if (TAO_HAS_ROUTING_POLICY == 1)
+
 ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const Messaging::RoutingTypeRange &_tao_aggregate)
 {
   if (
@@ -480,7 +499,12 @@
   
 }
 
+#endif /* TAO_HAS_ROUTING_POLICY == 1 */
+
 #if defined (__ACE_INLINE__)
+
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1)
+
 //@@ Boris: begin experimental
 TAO_NAMESPACE CORBA
 {
@@ -489,7 +513,6 @@
 }
 TAO_NAMESPACE_CLOSE
 //@@ Boris: end experimental
-#endif /*__ACE_INLINE__*/
 TAO_Messaging_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Messaging::ExceptionHolder *);
 TAO_Messaging_Export CORBA::Boolean operator>> (TAO_InputCDR &, Messaging::ExceptionHolder *&);
 TAO_Messaging_Export CORBA::Boolean operator<< (
@@ -502,3 +525,5 @@
     Messaging::ReplyHandler_ptr &
   );
 
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
+#endif /*__ACE_INLINE__*/
--- orig/MessagingC.cpp	Wed Mar  6 15:04:36 2002
+++ MessagingC.cpp	Wed Mar  6 15:08:08 2002
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -266,6 +266,8 @@
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::UShort, ORDER_DEADLINE, 8U)
 TAO_NAMESPACE_END
+
+#if (TAO_HAS_REBIND_POLICY == 1)
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, REBIND_POLICY_TYPE, 23U)
@@ -627,6 +629,7 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_RebindPolicy, &_tc_TAO_tc_Messaging_RebindPolicy)
 TAO_NAMESPACE_END
 
+#if (TAO_HAS_SYNC_SCOPE_POLICY == 1)
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, SYNC_SCOPE_POLICY_TYPE, 24U)
@@ -696,6 +699,8 @@
   return this->ptr_;
 }
 
+#endif /* TAO_HAS_REBIND_POLICY == 1 */
+
 Messaging::SyncScopePolicy_var::SyncScopePolicy_var (const ::Messaging::SyncScopePolicy_var &p) // copy constructor
   : TAO_Base_var (),
     ptr_ (SyncScopePolicy::_duplicate (p.ptr ()))
@@ -989,6 +994,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_SyncScopePolicy, &_tc_TAO_tc_Messaging_SyncScopePolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_SYNC_SCOPE_POLICY == 1 */
+
+#if (TAO_HAS_PRIORITY_POLICIES == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, REQUEST_PRIORITY_POLICY_TYPE, 25U)
@@ -1785,6 +1794,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_ReplyPriorityPolicy, &_tc_TAO_tc_Messaging_ReplyPriorityPolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_PRIORITY_POLICIES == 1 */
+
+#if (TAO_HAS_REQUEST_START_TIME_POLICY == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, REQUEST_START_TIME_POLICY_TYPE, 27U)
@@ -2151,6 +2164,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_RequestStartTimePolicy, &_tc_TAO_tc_Messaging_RequestStartTimePolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_REQUEST_START_TIME_POLICY == 1 */
+
+#if (TAO_HAS_REQUEST_END_TIME_POLICY == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, REQUEST_END_TIME_POLICY_TYPE, 28U)
@@ -2516,6 +2533,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_RequestEndTimePolicy, &_tc_TAO_tc_Messaging_RequestEndTimePolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_REQUEST_END_TIME_POLICY == 1 */
+
+#if (TAO_HAS_REPLY_START_TIME_POLICY == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, REPLY_START_TIME_POLICY_TYPE, 29U)
@@ -2881,6 +2902,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_ReplyStartTimePolicy, &_tc_TAO_tc_Messaging_ReplyStartTimePolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_REPLY_START_TIME_POLICY == 1 */
+
+#if (TAO_HAS_REPLY_END_TIME_POLICY == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, REPLY_END_TIME_POLICY_TYPE, 30U)
@@ -3245,6 +3270,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_ReplyEndTimePolicy, &_tc_TAO_tc_Messaging_ReplyEndTimePolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_REPLY_END_TIME_POLICY == 1 */
+
+#if (TAO_HAS_RELATIVE_REQUEST_TIMEOUT_POLICY == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, RELATIVE_REQ_TIMEOUT_POLICY_TYPE, 31U)
@@ -3614,6 +3643,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_RelativeRequestTimeoutPolicy, &_tc_TAO_tc_Messaging_RelativeRequestTimeoutPolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_RELATIVE_REQUEST_TIMEOUT_POLICY == 1 */
+
+#if (TAO_HAS_RELATIVE_ROUNDTRIP_TIMEOUT_POLICY == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, RELATIVE_RT_TIMEOUT_POLICY_TYPE, 32U)
@@ -3984,6 +4017,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_RelativeRoundtripTimeoutPolicy, &_tc_TAO_tc_Messaging_RelativeRoundtripTimeoutPolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_RELATIVE_ROUNDTRIP_TIMEOUT_POLICY == 1 */
+
+#if (TAO_HAS_ROUTING_POLICY == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, ROUTING_POLICY_TYPE, 33U)
@@ -4415,6 +4452,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_RoutingPolicy, &_tc_TAO_tc_Messaging_RoutingPolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_ROUTING_POLICY == 1 */
+
+#if (TAO_HAS_MAX_HOPS_POLICY == 1)
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, MAX_HOPS_POLICY_TYPE, 34U)
@@ -4776,6 +4817,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_MaxHopsPolicy, &_tc_TAO_tc_Messaging_MaxHopsPolicy)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_MAX_HOPS_POLICY == 1 */
+
+
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (Messaging)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, QUEUE_ORDER_POLICY_TYPE, 35U)
@@ -5139,6 +5184,10 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_QueueOrderPolicy, &_tc_TAO_tc_Messaging_QueueOrderPolicy)
 TAO_NAMESPACE_END
 
+
+
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1)
+
 static const CORBA::Long _oc_Messaging_ExceptionHolder[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -5943,6 +5993,11 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_ReplyHandler, &_tc_TAO_tc_Messaging_ReplyHandler)
 TAO_NAMESPACE_END
 
+
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
+
+#if (TAO_HAS_AMI_CALLBACK == 1)
+
 CORBA::Boolean 
 OBV_Messaging::ExceptionHolder::_tao_marshal__Messaging_ExceptionHolder (TAO_OutputCDR &strm){
   return _tao_marshal_state (strm);
@@ -6083,6 +6138,7 @@
   _tao_any.contains_local (1);
 }
 
+TAO_Messaging_Export
 CORBA::Boolean operator>>= (
     const CORBA::Any &_tao_any,
     Messaging::RebindPolicy_ptr &_tao_elem
@@ -6117,7 +6173,6 @@
   {
   }
   ACE_ENDTRY;
-  
   _tao_elem = Messaging::RebindPolicy::_nil ();
   return 0;
 }
@@ -6163,7 +6217,7 @@
   _tao_any.contains_local (1);
 }
 
-CORBA::Boolean operator>>= (
+TAO_Messaging_Export CORBA::Boolean operator>>= (
     const CORBA::Any &_tao_any,
     Messaging::SyncScopePolicy_ptr &_tao_elem
   )
@@ -6197,7 +6251,6 @@
   {
   }
   ACE_ENDTRY;
-  
   _tao_elem = Messaging::SyncScopePolicy::_nil ();
   return 0;
 }
@@ -6209,11 +6262,15 @@
 #  pragma instantiate TAO_Object_Manager<Messaging::SyncScopePolicy,Messaging::SyncScopePolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#endif /* TAO_HAS_AMI_CALLBACK == 1 */
+
+#if (TAO_HAS_PRIORITY_POLICIES == 1)
 
 // TAO_IDL - Generated from 
 // be/be_visitor_structure/any_op_cs.cpp:58
 
 // Copying insertion.
+TAO_Messaging_Export
 void operator<<= (
     CORBA::Any &_tao_any,
     const Messaging::PriorityRange &_tao_elem
@@ -6232,7 +6289,7 @@
 }
 
 // Non-copying insertion.
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::PriorityRange *_tao_elem
   )
@@ -6253,7 +6310,7 @@
 }
 
 // Extraction to non-const pointer (deprecated).
-CORBA::Boolean operator>>= (
+TAO_Messaging_Export CORBA::Boolean operator>>= (
     const CORBA::Any &_tao_any,
     Messaging::PriorityRange *&_tao_elem
   )
@@ -6265,7 +6322,7 @@
 }
 
 // Extraction to const pointer.
-CORBA::Boolean operator>>= (
+TAO_Messaging_Export CORBA::Boolean operator>>= (
     const CORBA::Any &_tao_any,
     const Messaging::PriorityRange *&_tao_elem
   )
@@ -6337,11 +6394,14 @@
   return 0;
 }
 
+#endif /* TAO_HAS_PRIORITY_POLICIES == 1 */
+
+#if (TAO_HAS_REQUEST_PRIORITY_POLICIES == 1)
 
 // TAO_IDL - Generated from 
 // be/be_visitor_interface/any_op_cs.cpp:60
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::RequestPriorityPolicy_ptr _tao_elem
   )
@@ -6356,7 +6416,7 @@
   _tao_any.contains_local (1);
 }
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::RequestPriorityPolicy_ptr *_tao_elem
   )
@@ -6371,7 +6431,7 @@
   _tao_any.contains_local (1);
 }
 
-CORBA::Boolean operator>>= (
+TAO_Messaging_Export CORBA::Boolean operator>>= (
     const CORBA::Any &_tao_any,
     Messaging::RequestPriorityPolicy_ptr &_tao_elem
   )
@@ -6405,11 +6465,12 @@
   {
   }
   ACE_ENDTRY;
-  
   _tao_elem = Messaging::RequestPriorityPolicy::_nil ();
   return 0;
 }
 
+#endif /* TAO_HAS_REQUEST_PRIORITY_POLICIES == 1 */
+
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
   template class TAO_Object_Manager<Messaging::RequestPriorityPolicy,Messaging::RequestPriorityPolicy_var>;
@@ -6417,11 +6478,12 @@
 #  pragma instantiate TAO_Object_Manager<Messaging::RequestPriorityPolicy,Messaging::RequestPriorityPolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#if (TAO_HAS_REPLY_PRIORITY_POLICIES == 1)
 
 // TAO_IDL - Generated from 
 // be/be_visitor_interface/any_op_cs.cpp:60
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::ReplyPriorityPolicy_ptr _tao_elem
   )
@@ -6436,7 +6498,7 @@
   _tao_any.contains_local (1);
 }
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::ReplyPriorityPolicy_ptr *_tao_elem
   )
@@ -6451,7 +6513,7 @@
   _tao_any.contains_local (1);
 }
 
-CORBA::Boolean operator>>= (
+TAO_Messaging_Export CORBA::Boolean operator>>= (
     const CORBA::Any &_tao_any,
     Messaging::ReplyPriorityPolicy_ptr &_tao_elem
   )
@@ -6485,11 +6547,13 @@
   {
   }
   ACE_ENDTRY;
-  
   _tao_elem = Messaging::ReplyPriorityPolicy::_nil ();
   return 0;
 }
 
+#endif /* TAO_HAS_REPLY_PRIORITY_POLICIES == 1 */
+
+
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
   template class TAO_Object_Manager<Messaging::ReplyPriorityPolicy,Messaging::ReplyPriorityPolicy_var>;
@@ -6497,11 +6561,12 @@
 #  pragma instantiate TAO_Object_Manager<Messaging::ReplyPriorityPolicy,Messaging::ReplyPriorityPolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#if (TAO_HAS_REQUEST_START_TIME_POLICIES == 1)
 
 // TAO_IDL - Generated from 
 // be/be_visitor_interface/any_op_cs.cpp:60
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::RequestStartTimePolicy_ptr _tao_elem
   )
@@ -6516,7 +6581,7 @@
   _tao_any.contains_local (1);
 }
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::RequestStartTimePolicy_ptr *_tao_elem
   )
@@ -6531,7 +6596,7 @@
   _tao_any.contains_local (1);
 }
 
-CORBA::Boolean operator>>= (
+TAO_Messaging_Export CORBA::Boolean operator>>= (
     const CORBA::Any &_tao_any,
     Messaging::RequestStartTimePolicy_ptr &_tao_elem
   )
@@ -6565,11 +6630,13 @@
   {
   }
   ACE_ENDTRY;
-  
   _tao_elem = Messaging::RequestStartTimePolicy::_nil ();
   return 0;
 }
 
+#endif /* TAO_HAS_REQUEST_START_TIME_POLICIES == 1 */
+
+
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
   template class TAO_Object_Manager<Messaging::RequestStartTimePolicy,Messaging::RequestStartTimePolicy_var>;
@@ -6577,11 +6644,12 @@
 #  pragma instantiate TAO_Object_Manager<Messaging::RequestStartTimePolicy,Messaging::RequestStartTimePolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#if (TAO_HAS_REQUEST_END_TIME_POLICIES == 1)
 
 // TAO_IDL - Generated from 
 // be/be_visitor_interface/any_op_cs.cpp:60
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::RequestEndTimePolicy_ptr _tao_elem
   )
@@ -6596,7 +6664,7 @@
   _tao_any.contains_local (1);
 }
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::RequestEndTimePolicy_ptr *_tao_elem
   )
@@ -6611,7 +6679,7 @@
   _tao_any.contains_local (1);
 }
 
-CORBA::Boolean operator>>= (
+TAO_Messaging_Export CORBA::Boolean operator>>= (
     const CORBA::Any &_tao_any,
     Messaging::RequestEndTimePolicy_ptr &_tao_elem
   )
@@ -6645,11 +6713,12 @@
   {
   }
   ACE_ENDTRY;
-  
   _tao_elem = Messaging::RequestEndTimePolicy::_nil ();
   return 0;
 }
 
+#endif /* TAO_HAS_REQUEST_END_TIME_POLICIES == 1 */
+
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
   template class TAO_Object_Manager<Messaging::RequestEndTimePolicy,Messaging::RequestEndTimePolicy_var>;
@@ -6657,11 +6726,12 @@
 #  pragma instantiate TAO_Object_Manager<Messaging::RequestEndTimePolicy,Messaging::RequestEndTimePolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#if (TAO_HAS_REPLY_START_TIME_POLICIES == 1)
 
 // TAO_IDL - Generated from 
 // be/be_visitor_interface/any_op_cs.cpp:60
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::ReplyStartTimePolicy_ptr _tao_elem
   )
@@ -6676,7 +6746,7 @@
   _tao_any.contains_local (1);
 }
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::ReplyStartTimePolicy_ptr *_tao_elem
   )
@@ -6691,7 +6761,7 @@
   _tao_any.contains_local (1);
 }
 
-CORBA::Boolean operator>>= (
+TAO_Messaging_Export CORBA::Boolean operator>>= (
     const CORBA::Any &_tao_any,
     Messaging::ReplyStartTimePolicy_ptr &_tao_elem
   )
@@ -6725,11 +6795,12 @@
   {
   }
   ACE_ENDTRY;
-  
   _tao_elem = Messaging::ReplyStartTimePolicy::_nil ();
   return 0;
 }
 
+#endif /* TAO_HAS_REPLY_START_TIME_POLICIES == 1 */
+
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
   template class TAO_Object_Manager<Messaging::ReplyStartTimePolicy,Messaging::ReplyStartTimePolicy_var>;
@@ -6737,11 +6808,12 @@
 #  pragma instantiate TAO_Object_Manager<Messaging::ReplyStartTimePolicy,Messaging::ReplyStartTimePolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#if (TAO_HAS_REPLY_END_TIME_POLICIES == 1)
 
 // TAO_IDL - Generated from 
 // be/be_visitor_interface/any_op_cs.cpp:60
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::ReplyEndTimePolicy_ptr _tao_elem
   )
@@ -6756,7 +6828,7 @@
   _tao_any.contains_local (1);
 }
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::ReplyEndTimePolicy_ptr *_tao_elem
   )
@@ -6771,7 +6843,7 @@
   _tao_any.contains_local (1);
 }
 
-CORBA::Boolean operator>>= (
+TAO_Messaging_Export CORBA::Boolean operator>>= (
     const CORBA::Any &_tao_any,
     Messaging::ReplyEndTimePolicy_ptr &_tao_elem
   )
@@ -6805,11 +6877,12 @@
   {
   }
   ACE_ENDTRY;
-  
   _tao_elem = Messaging::ReplyEndTimePolicy::_nil ();
   return 0;
 }
 
+#endif /* TAO_HAS_REPLY_END_TIME_POLICIES == 1 */
+
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
   template class TAO_Object_Manager<Messaging::ReplyEndTimePolicy,Messaging::ReplyEndTimePolicy_var>;
@@ -6817,11 +6890,12 @@
 #  pragma instantiate TAO_Object_Manager<Messaging::ReplyEndTimePolicy,Messaging::ReplyEndTimePolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#if (TAO_HAS_RELATIVE_REQ_TIMEOUT_POLICIES == 1)
 
 // TAO_IDL - Generated from 
 // be/be_visitor_interface/any_op_cs.cpp:60
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::RelativeRequestTimeoutPolicy_ptr _tao_elem
   )
@@ -6836,7 +6910,7 @@
   _tao_any.contains_local (1);
 }
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::RelativeRequestTimeoutPolicy_ptr *_tao_elem
   )
@@ -6851,7 +6925,7 @@
   _tao_any.contains_local (1);
 }
 
-CORBA::Boolean operator>>= (
+TAO_Messaging_Export CORBA::Boolean operator>>= (
     const CORBA::Any &_tao_any,
     Messaging::RelativeRequestTimeoutPolicy_ptr &_tao_elem
   )
@@ -6885,11 +6959,12 @@
   {
   }
   ACE_ENDTRY;
-  
   _tao_elem = Messaging::RelativeRequestTimeoutPolicy::_nil ();
   return 0;
 }
 
+#endif /* TAO_HAS_RELATIVE_REQ_TIMEOUT_POLICIES == 1 */
+
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
   template class TAO_Object_Manager<Messaging::RelativeRequestTimeoutPolicy,Messaging::RelativeRequestTimeoutPolicy_var>;
@@ -6897,11 +6972,12 @@
 #  pragma instantiate TAO_Object_Manager<Messaging::RelativeRequestTimeoutPolicy,Messaging::RelativeRequestTimeoutPolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#if (TAO_HAS_RELATIVE_RT_TIMEOUT_POLICIES == 1)
 
 // TAO_IDL - Generated from 
 // be/be_visitor_interface/any_op_cs.cpp:60
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::RelativeRoundtripTimeoutPolicy_ptr _tao_elem
   )
@@ -6916,7 +6992,7 @@
   _tao_any.contains_local (1);
 }
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::RelativeRoundtripTimeoutPolicy_ptr *_tao_elem
   )
@@ -6931,7 +7007,7 @@
   _tao_any.contains_local (1);
 }
 
-CORBA::Boolean operator>>= (
+TAO_Messaging_Export CORBA::Boolean operator>>= (
     const CORBA::Any &_tao_any,
     Messaging::RelativeRoundtripTimeoutPolicy_ptr &_tao_elem
   )
@@ -6965,11 +7041,12 @@
   {
   }
   ACE_ENDTRY;
-  
   _tao_elem = Messaging::RelativeRoundtripTimeoutPolicy::_nil ();
   return 0;
 }
 
+#endif /* TAO_HAS_RELATIVE_RT_TIMEOUT_POLICIES == 1 */
+
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
   template class TAO_Object_Manager<Messaging::RelativeRoundtripTimeoutPolicy,Messaging::RelativeRoundtripTimeoutPolicy_var>;
@@ -6977,12 +7054,13 @@
 #  pragma instantiate TAO_Object_Manager<Messaging::RelativeRoundtripTimeoutPolicy,Messaging::RelativeRoundtripTimeoutPolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#if (TAO_HAS_ROUTING_POLICY == 1)
 
 // TAO_IDL - Generated from 
 // be/be_visitor_structure/any_op_cs.cpp:58
 
 // Copying insertion.
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     const Messaging::RoutingTypeRange &_tao_elem
   )
@@ -7000,7 +7078,7 @@
 }
 
 // Non-copying insertion.
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::RoutingTypeRange *_tao_elem
   )
@@ -7033,7 +7111,7 @@
 }
 
 // Extraction to const pointer.
-CORBA::Boolean operator>>= (
+TAO_Messaging_Export CORBA::Boolean operator>>= (
     const CORBA::Any &_tao_any,
     const Messaging::RoutingTypeRange *&_tao_elem
   )
@@ -7109,7 +7187,7 @@
 // TAO_IDL - Generated from 
 // be/be_visitor_interface/any_op_cs.cpp:60
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::RoutingPolicy_ptr _tao_elem
   )
@@ -7124,7 +7202,7 @@
   _tao_any.contains_local (1);
 }
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::RoutingPolicy_ptr *_tao_elem
   )
@@ -7139,7 +7217,7 @@
   _tao_any.contains_local (1);
 }
 
-CORBA::Boolean operator>>= (
+TAO_Messaging_Export CORBA::Boolean operator>>= (
     const CORBA::Any &_tao_any,
     Messaging::RoutingPolicy_ptr &_tao_elem
   )
@@ -7173,11 +7251,12 @@
   {
   }
   ACE_ENDTRY;
-  
   _tao_elem = Messaging::RoutingPolicy::_nil ();
   return 0;
 }
 
+#endif /* TAO_HAS_ROUTING_POLICY == 1 */
+
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
   template class TAO_Object_Manager<Messaging::RoutingPolicy,Messaging::RoutingPolicy_var>;
@@ -7185,11 +7264,12 @@
 #  pragma instantiate TAO_Object_Manager<Messaging::RoutingPolicy,Messaging::RoutingPolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#if (TAO_HAS_MAX_HOPS_POLICY == 1)
 
 // TAO_IDL - Generated from 
 // be/be_visitor_interface/any_op_cs.cpp:60
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::MaxHopsPolicy_ptr _tao_elem
   )
@@ -7204,7 +7284,7 @@
   _tao_any.contains_local (1);
 }
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::MaxHopsPolicy_ptr *_tao_elem
   )
@@ -7219,7 +7299,7 @@
   _tao_any.contains_local (1);
 }
 
-CORBA::Boolean operator>>= (
+TAO_Messaging_Export CORBA::Boolean operator>>= (
     const CORBA::Any &_tao_any,
     Messaging::MaxHopsPolicy_ptr &_tao_elem
   )
@@ -7253,11 +7333,12 @@
   {
   }
   ACE_ENDTRY;
-  
   _tao_elem = Messaging::MaxHopsPolicy::_nil ();
   return 0;
 }
 
+#endif /* TAO_HAS_MAX_HOPS_POLICY == 1 */
+
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
   template class TAO_Object_Manager<Messaging::MaxHopsPolicy,Messaging::MaxHopsPolicy_var>;
@@ -7265,11 +7346,12 @@
 #  pragma instantiate TAO_Object_Manager<Messaging::MaxHopsPolicy,Messaging::MaxHopsPolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#if (TAO_HAS_QUEUE_ORDER_POLICY == 1)
 
 // TAO_IDL - Generated from 
 // be/be_visitor_interface/any_op_cs.cpp:60
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::QueueOrderPolicy_ptr _tao_elem
   )
@@ -7284,7 +7366,7 @@
   _tao_any.contains_local (1);
 }
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::QueueOrderPolicy_ptr *_tao_elem
   )
@@ -7299,7 +7381,7 @@
   _tao_any.contains_local (1);
 }
 
-CORBA::Boolean operator>>= (
+TAO_Messaging_Export CORBA::Boolean operator>>= (
     const CORBA::Any &_tao_any,
     Messaging::QueueOrderPolicy_ptr &_tao_elem
   )
@@ -7333,11 +7415,12 @@
   {
   }
   ACE_ENDTRY;
-  
   _tao_elem = Messaging::QueueOrderPolicy::_nil ();
   return 0;
 }
 
+#endif /* TAO_HAS_QUEUE_ORDER_POLICY == 1 */
+
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
   template class TAO_Object_Manager<Messaging::QueueOrderPolicy,Messaging::QueueOrderPolicy_var>;
@@ -7345,6 +7428,8 @@
 #  pragma instantiate TAO_Object_Manager<Messaging::QueueOrderPolicy,Messaging::QueueOrderPolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1)
+
 TAO_Messaging_Export void
 operator<<= (CORBA::Any &any, Messaging::ExceptionHolder *value) // copying
 {
@@ -7436,7 +7521,7 @@
 // TAO_IDL - Generated from 
 // be/be_visitor_interface/any_op_cs.cpp:60
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::ReplyHandler_ptr _tao_elem
   )
@@ -7456,7 +7541,7 @@
     }
 }
 
-void operator<<= (
+TAO_Messaging_Export void operator<<= (
     CORBA::Any &_tao_any,
     Messaging::ReplyHandler_ptr *_tao_elem
   )
@@ -7476,7 +7561,7 @@
     }
 }
 
-CORBA::Boolean operator>>= (
+TAO_Messaging_Export CORBA::Boolean operator>>= (
     const CORBA::Any &_tao_any,
     Messaging::ReplyHandler_ptr &_tao_elem
   )
@@ -7517,6 +7602,8 @@
   }
   ACE_CATCHANY
   {
+    _tao_elem = Messaging::ReplyHandler::_nil ();
+    return 0;
   }
   ACE_ENDTRY;
   
@@ -7628,4 +7717,7 @@
   ACE_ENDTRY;
   return 0;
 }
+
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
+
 
--- orig/MessagingS.h	Wed Mar  6 15:04:36 2002
+++ MessagingS.h	Wed Mar  6 15:01:05 2002
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -23,12 +23,12 @@
 #define _TAO_IDL_ORIG_MESSAGINGS_H_
 
 #include "ace/pre.h"
-#include "TimeBaseS.h"
-#include "PolicyS.h"
-#include "PollableS.h"
-#include "Messaging_SyncScopeS.h"
-#include "MessagingC.h"
 
+#include "messaging_export.h"
+#include "MessagingC.h"
+#include "tao/PortableServer/PolicyS.h"
+#include "tao/TimeBaseS.h"
+#include "tao/Messaging_SyncScopeC.h"
 
 #if !defined (ACE_LACKS_PRAGMA_ONCE)
 # pragma once
@@ -51,8 +51,10 @@
 #pragma option push -w-rvl -w-rch -w-ccc -w-inl
 #endif /* __BORLANDC__ */
 
+
 TAO_NAMESPACE  POA_Messaging
 {
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1)
   class ReplyHandler;
   typedef ReplyHandler *ReplyHandler_ptr;
   // Forward Classes Declaration
@@ -115,8 +118,10 @@
 
 
   };
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
 
   
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1)
   ///////////////////////////////////////////////////////////////////////
   //               Strategized Proxy Broker Declaration 
   //
@@ -203,6 +208,7 @@
 //                Direct  Proxy Impl. Declaration
 ///////////////////////////////////////////////////////////////////////
 
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
 
 }
 TAO_NAMESPACE_CLOSE // module Messaging
--- orig/MessagingS.i	Wed Mar  6 15:04:36 2002
+++ MessagingS.i	Fri Mar  1 11:43:03 2002
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
--- orig/MessagingS.cpp	Wed Mar  6 15:04:36 2002
+++ MessagingS.cpp	Mon Mar  4 15:38:07 2002
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -48,6 +48,8 @@
 #include "MessagingS.i"
 #endif /* !defined INLINE */
 
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1)
+
 class TAO_Messaging_ReplyHandler_Perfect_Hash_OpTable : public TAO_Perfect_Hash_OpTable
 {
 private:
@@ -55,7 +57,7 @@
 public:
  const TAO_operation_db_entry * lookup (const char *str, unsigned int len);
 };
-/* starting time is 15:04:36 */
+/* starting time is 13:40:33 */
 /* C++ code produced by gperf version 2.8 (ACE version) */
 /* Command-line: /project/balar/jai/ace/ACE_wrappers/bin/gperf -m -M -J -c -C -D -E -T -f 0 -F 0 -a -o -t -p -K opname_ -L C++ -Z TAO_Messaging_ReplyHandler_Perfect_Hash_OpTable -N lookup  */
 unsigned int
@@ -148,7 +150,7 @@
     }
   return 0;
 }
-/* ending time is 15:04:36 */
+/* ending time is 13:40:33 */
 static TAO_Messaging_ReplyHandler_Perfect_Hash_OpTable tao_Messaging_ReplyHandler_optable;
 
 #if (TAO_HAS_INTERCEPTORS == 1)
@@ -244,11 +247,14 @@
   }
 }
 
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
+
 
 //
 //        End Strategized Proxy Broker Implementation
 ///////////////////////////////////////////////////////////////////////
 
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1 )
 
 Messaging::_TAO_ReplyHandler_Proxy_Broker *
 Messaging__TAO_ReplyHandler_Proxy_Broker_Factory_function (CORBA::Object_ptr obj)
@@ -269,10 +276,12 @@
 static int Messaging__TAO_ReplyHandler_Proxy_Broker_Stub_Factory_Initializer_Scarecrow = 
   Messaging__TAO_ReplyHandler_Proxy_Broker_Factory_Initializer (ACE_reinterpret_cast (long, Messaging__TAO_ReplyHandler_Proxy_Broker_Factory_Initializer));
 
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
 
 ///////////////////////////////////////////////////////////////////////
 //                 ThruPOA Proxy  Implementation
 //
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1 )
 
 POA_Messaging::_TAO_ReplyHandler_ThruPOA_Proxy_Impl::_TAO_ReplyHandler_ThruPOA_Proxy_Impl (void)
 {}
@@ -465,6 +474,6 @@
   return ::Messaging::ReplyHandler::_unchecked_narrow (obj.in ());
 }
 
-
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
 
 #endif /* ifndef */
--- orig/MessagingS_T.h	Wed Mar  6 15:04:36 2002
+++ MessagingS_T.h	Mon Mar  4 15:38:07 2002
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -33,6 +33,8 @@
 #if defined (ACE_HAS_USING_KEYWORD)
 TAO_NAMESPACE  POA_Messaging
 {
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1)
+
   // TIE class: Refer to CORBA v2.2, Section 20.34.4
   template <class T>
   class  ReplyHandler_tie : public ReplyHandler
@@ -74,6 +76,7 @@
     ReplyHandler_tie (const ReplyHandler_tie &);
     void operator= (const ReplyHandler_tie &);
   };
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
 
 }
 TAO_NAMESPACE_CLOSE // module Messaging
--- orig/MessagingS_T.i	Wed Mar  6 15:04:36 2002
+++ MessagingS_T.i	Mon Mar  4 15:38:07 2002
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
@@ -21,6 +21,8 @@
 
 #if defined (ACE_HAS_USING_KEYWORD)
 
+#if (TAO_HAS_AMI_CALLBACK == 1) || (TAO_HAS_AMI_POLLER == 1)
+
 template <class T> ACE_INLINE
 POA_Messaging::ReplyHandler_tie<T>::ReplyHandler_tie (T &t)
 	: ptr_ (&t),
@@ -97,6 +99,6 @@
 
   return this->ReplyHandler::_default_POA (ACE_ENV_SINGLE_ARG_PARAMETER);
 }
-
+#endif /* TAO_HAS_AMI_CALLBACK == 1 || TAO_HAS_AMI_POLLER == 1 */
 #endif /* ACE_HAS_USING_KEYWORD */
 
--- orig/MessagingS_T.cpp	Wed Mar  6 15:04:36 2002
+++ MessagingS_T.cpp	Fri Mar  1 11:43:04 2002
@@ -1,6 +1,6 @@
 // -*- C++ -*-
 //
-// $Id$
+// $Id$
 
 // ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
 // TAO and the TAO IDL Compiler have been developed by:
