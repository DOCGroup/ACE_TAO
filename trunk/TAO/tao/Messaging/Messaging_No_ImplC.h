// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:151

#ifndef _TAO_IDL_ORIG_MESSAGING_NO_IMPLC_H_
#define _TAO_IDL_ORIG_MESSAGING_NO_IMPLC_H_

#include "ace/pre.h"
#include "tao/corbafwd.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "messaging_export.h"
#include "tao/PolicyC.h"
#include "tao/TimeBaseC.h"

#if defined(TRANSPARENT)
// Some platforms define this macro for ioctl()
#undef TRANSPARENT
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO TAO_Messaging_Export

#if defined (TAO_EXPORT_NESTED_CLASSES)
#  if defined (TAO_EXPORT_NESTED_MACRO)
#    undef TAO_EXPORT_NESTED_MACRO
#  endif /* defined (TAO_EXPORT_NESTED_MACRO) */
#  define TAO_EXPORT_NESTED_MACRO TAO_Messaging_Export
#endif /* TAO_EXPORT_NESTED_CLASSES */

#if defined(_MSC_VER)
#if (_MSC_VER >= 1200)
#pragma warning(push)
#endif /* _MSC_VER >= 1200 */
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:48

TAO_NAMESPACE  Messaging
{

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:333

  typedef CORBA::Short Priority;
  typedef CORBA::Short_out Priority_out;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Priority;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:333

  typedef CORBA::Short RebindMode;
  typedef CORBA::Short_out RebindMode_out;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RebindMode;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const Messaging::RebindMode TRANSPARENT = 0;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const Messaging::RebindMode NO_REBIND = 1;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const Messaging::RebindMode NO_RECONNECT = 2;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:333

  typedef CORBA::Short RoutingType;
  typedef CORBA::Short_out RoutingType_out;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RoutingType;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const Messaging::RoutingType ROUTE_NONE = 0;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const Messaging::RoutingType ROUTE_FORWARD = 1;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const Messaging::RoutingType ROUTE_STORE_AND_FORWARD = 2;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typedef/typedef_ch.cpp:333

  typedef CORBA::UShort Ordering;
  typedef CORBA::UShort_out Ordering_out;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Ordering;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const Messaging::Ordering ORDER_ANY = 1U;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const Messaging::Ordering ORDER_TEMPORAL = 2U;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const Messaging::Ordering ORDER_PRIORITY = 4U;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const Messaging::Ordering ORDER_DEADLINE = 8U;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const CORBA::PolicyType REBIND_POLICY_TYPE = 23U;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_MESSAGING_REBINDPOLICY__ODDS_N_ENDS_CH_)
#define _MESSAGING_REBINDPOLICY__ODDS_N_ENDS_CH_

  class RebindPolicy;
  typedef RebindPolicy *RebindPolicy_ptr;
  struct tao_RebindPolicy_life;

  typedef
    TAO_Objref_Var_T<
        RebindPolicy,
        tao_RebindPolicy_life
      >
    RebindPolicy_var;

  typedef
    TAO_Objref_Out_T<
        RebindPolicy,
        tao_RebindPolicy_life
      >
    RebindPolicy_out;

  struct TAO_Messaging_Export tao_RebindPolicy_life
  {
    static RebindPolicy_ptr tao_duplicate (RebindPolicy_ptr);
    static void tao_release (RebindPolicy_ptr);
    static RebindPolicy_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        RebindPolicy_ptr,
        TAO_OutputCDR &
      );
  };

  struct TAO_Messaging_Export tao_RebindPolicy_cast
  {
    static RebindPolicy_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_MESSAGING_REBINDPOLICY_CH_)
#define _MESSAGING_REBINDPOLICY_CH_

  class TAO_Messaging_Export RebindPolicy
    : public virtual CORBA::Policy
  {
  public:
    typedef RebindPolicy_ptr _ptr_type;
    typedef RebindPolicy_var _var_type;
    static int _tao_class_id;

    // The static operations.
    static RebindPolicy_ptr _duplicate (RebindPolicy_ptr obj);

    static RebindPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static RebindPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static RebindPolicy_ptr _nil (void)
      {
        return (RebindPolicy_ptr)0;
      }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual Messaging::RebindMode rebind_mode (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211

    virtual void *_tao_QueryInterface (ptr_arith_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    RebindPolicy (void);
    virtual ~RebindPolicy (void);

  private:
    RebindPolicy (const RebindPolicy &);
    void operator= (const RebindPolicy &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RebindPolicy;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const CORBA::PolicyType REQUEST_PRIORITY_POLICY_TYPE = 25U;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_type.cpp:231

  struct PriorityRange;

  typedef
    TAO_Fixed_Var_T<
        PriorityRange
      >
    PriorityRange_var;

  typedef
    PriorityRange &
    PriorityRange_out;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/structure_ch.cpp:52

  struct TAO_Messaging_Export PriorityRange
  {
    typedef PriorityRange_var _var_type;

    static void _tao_any_destructor (void *);
    Messaging::Priority min;
    Messaging::Priority max;
  };

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_PriorityRange;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_MESSAGING_REQUESTPRIORITYPOLICY__ODDS_N_ENDS_CH_)
#define _MESSAGING_REQUESTPRIORITYPOLICY__ODDS_N_ENDS_CH_

  class RequestPriorityPolicy;
  typedef RequestPriorityPolicy *RequestPriorityPolicy_ptr;
  struct tao_RequestPriorityPolicy_life;

  typedef
    TAO_Objref_Var_T<
        RequestPriorityPolicy,
        tao_RequestPriorityPolicy_life
      >
    RequestPriorityPolicy_var;

  typedef
    TAO_Objref_Out_T<
        RequestPriorityPolicy,
        tao_RequestPriorityPolicy_life
      >
    RequestPriorityPolicy_out;

  struct TAO_Messaging_Export tao_RequestPriorityPolicy_life
  {
    static RequestPriorityPolicy_ptr tao_duplicate (RequestPriorityPolicy_ptr);
    static void tao_release (RequestPriorityPolicy_ptr);
    static RequestPriorityPolicy_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        RequestPriorityPolicy_ptr,
        TAO_OutputCDR &
      );
  };

  struct TAO_Messaging_Export tao_RequestPriorityPolicy_cast
  {
    static RequestPriorityPolicy_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_MESSAGING_REQUESTPRIORITYPOLICY_CH_)
#define _MESSAGING_REQUESTPRIORITYPOLICY_CH_

  class TAO_Messaging_Export RequestPriorityPolicy
    : public virtual CORBA::Policy
  {
  public:
    typedef RequestPriorityPolicy_ptr _ptr_type;
    typedef RequestPriorityPolicy_var _var_type;
    static int _tao_class_id;

    // The static operations.
    static RequestPriorityPolicy_ptr _duplicate (RequestPriorityPolicy_ptr obj);

    static RequestPriorityPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static RequestPriorityPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static RequestPriorityPolicy_ptr _nil (void)
      {
        return (RequestPriorityPolicy_ptr)0;
      }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual ::Messaging::PriorityRange priority_range (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211

    virtual void *_tao_QueryInterface (ptr_arith_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    RequestPriorityPolicy (void);
    virtual ~RequestPriorityPolicy (void);

  private:
    RequestPriorityPolicy (const RequestPriorityPolicy &);
    void operator= (const RequestPriorityPolicy &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RequestPriorityPolicy;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const CORBA::PolicyType REPLY_PRIORITY_POLICY_TYPE = 26U;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_MESSAGING_REPLYPRIORITYPOLICY__ODDS_N_ENDS_CH_)
#define _MESSAGING_REPLYPRIORITYPOLICY__ODDS_N_ENDS_CH_

  class ReplyPriorityPolicy;
  typedef ReplyPriorityPolicy *ReplyPriorityPolicy_ptr;
  struct tao_ReplyPriorityPolicy_life;

  typedef
    TAO_Objref_Var_T<
        ReplyPriorityPolicy,
        tao_ReplyPriorityPolicy_life
      >
    ReplyPriorityPolicy_var;

  typedef
    TAO_Objref_Out_T<
        ReplyPriorityPolicy,
        tao_ReplyPriorityPolicy_life
      >
    ReplyPriorityPolicy_out;

  struct TAO_Messaging_Export tao_ReplyPriorityPolicy_life
  {
    static ReplyPriorityPolicy_ptr tao_duplicate (ReplyPriorityPolicy_ptr);
    static void tao_release (ReplyPriorityPolicy_ptr);
    static ReplyPriorityPolicy_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        ReplyPriorityPolicy_ptr,
        TAO_OutputCDR &
      );
  };

  struct TAO_Messaging_Export tao_ReplyPriorityPolicy_cast
  {
    static ReplyPriorityPolicy_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_MESSAGING_REPLYPRIORITYPOLICY_CH_)
#define _MESSAGING_REPLYPRIORITYPOLICY_CH_

  class TAO_Messaging_Export ReplyPriorityPolicy
    : public virtual CORBA::Policy
  {
  public:
    typedef ReplyPriorityPolicy_ptr _ptr_type;
    typedef ReplyPriorityPolicy_var _var_type;
    static int _tao_class_id;

    // The static operations.
    static ReplyPriorityPolicy_ptr _duplicate (ReplyPriorityPolicy_ptr obj);

    static ReplyPriorityPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ReplyPriorityPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ReplyPriorityPolicy_ptr _nil (void)
      {
        return (ReplyPriorityPolicy_ptr)0;
      }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual ::Messaging::PriorityRange priority_range (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211

    virtual void *_tao_QueryInterface (ptr_arith_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    ReplyPriorityPolicy (void);
    virtual ~ReplyPriorityPolicy (void);

  private:
    ReplyPriorityPolicy (const ReplyPriorityPolicy &);
    void operator= (const ReplyPriorityPolicy &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ReplyPriorityPolicy;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const CORBA::PolicyType REQUEST_START_TIME_POLICY_TYPE = 27U;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_MESSAGING_REQUESTSTARTTIMEPOLICY__ODDS_N_ENDS_CH_)
#define _MESSAGING_REQUESTSTARTTIMEPOLICY__ODDS_N_ENDS_CH_

  class RequestStartTimePolicy;
  typedef RequestStartTimePolicy *RequestStartTimePolicy_ptr;
  struct tao_RequestStartTimePolicy_life;

  typedef
    TAO_Objref_Var_T<
        RequestStartTimePolicy,
        tao_RequestStartTimePolicy_life
      >
    RequestStartTimePolicy_var;

  typedef
    TAO_Objref_Out_T<
        RequestStartTimePolicy,
        tao_RequestStartTimePolicy_life
      >
    RequestStartTimePolicy_out;

  struct TAO_Messaging_Export tao_RequestStartTimePolicy_life
  {
    static RequestStartTimePolicy_ptr tao_duplicate (RequestStartTimePolicy_ptr);
    static void tao_release (RequestStartTimePolicy_ptr);
    static RequestStartTimePolicy_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        RequestStartTimePolicy_ptr,
        TAO_OutputCDR &
      );
  };

  struct TAO_Messaging_Export tao_RequestStartTimePolicy_cast
  {
    static RequestStartTimePolicy_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_MESSAGING_REQUESTSTARTTIMEPOLICY_CH_)
#define _MESSAGING_REQUESTSTARTTIMEPOLICY_CH_

  class TAO_Messaging_Export RequestStartTimePolicy
    : public virtual CORBA::Policy
  {
  public:
    typedef RequestStartTimePolicy_ptr _ptr_type;
    typedef RequestStartTimePolicy_var _var_type;
    static int _tao_class_id;

    // The static operations.
    static RequestStartTimePolicy_ptr _duplicate (RequestStartTimePolicy_ptr obj);

    static RequestStartTimePolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static RequestStartTimePolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static RequestStartTimePolicy_ptr _nil (void)
      {
        return (RequestStartTimePolicy_ptr)0;
      }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual ::TimeBase::UtcT start_time (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211

    virtual void *_tao_QueryInterface (ptr_arith_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    RequestStartTimePolicy (void);
    virtual ~RequestStartTimePolicy (void);

  private:
    RequestStartTimePolicy (const RequestStartTimePolicy &);
    void operator= (const RequestStartTimePolicy &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RequestStartTimePolicy;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const CORBA::PolicyType REQUEST_END_TIME_POLICY_TYPE = 28U;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_MESSAGING_REQUESTENDTIMEPOLICY__ODDS_N_ENDS_CH_)
#define _MESSAGING_REQUESTENDTIMEPOLICY__ODDS_N_ENDS_CH_

  class RequestEndTimePolicy;
  typedef RequestEndTimePolicy *RequestEndTimePolicy_ptr;
  struct tao_RequestEndTimePolicy_life;

  typedef
    TAO_Objref_Var_T<
        RequestEndTimePolicy,
        tao_RequestEndTimePolicy_life
      >
    RequestEndTimePolicy_var;

  typedef
    TAO_Objref_Out_T<
        RequestEndTimePolicy,
        tao_RequestEndTimePolicy_life
      >
    RequestEndTimePolicy_out;

  struct TAO_Messaging_Export tao_RequestEndTimePolicy_life
  {
    static RequestEndTimePolicy_ptr tao_duplicate (RequestEndTimePolicy_ptr);
    static void tao_release (RequestEndTimePolicy_ptr);
    static RequestEndTimePolicy_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        RequestEndTimePolicy_ptr,
        TAO_OutputCDR &
      );
  };

  struct TAO_Messaging_Export tao_RequestEndTimePolicy_cast
  {
    static RequestEndTimePolicy_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_MESSAGING_REQUESTENDTIMEPOLICY_CH_)
#define _MESSAGING_REQUESTENDTIMEPOLICY_CH_

  class TAO_Messaging_Export RequestEndTimePolicy
    : public virtual CORBA::Policy
  {
  public:
    typedef RequestEndTimePolicy_ptr _ptr_type;
    typedef RequestEndTimePolicy_var _var_type;
    static int _tao_class_id;

    // The static operations.
    static RequestEndTimePolicy_ptr _duplicate (RequestEndTimePolicy_ptr obj);

    static RequestEndTimePolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static RequestEndTimePolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static RequestEndTimePolicy_ptr _nil (void)
      {
        return (RequestEndTimePolicy_ptr)0;
      }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual ::TimeBase::UtcT end_time (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211

    virtual void *_tao_QueryInterface (ptr_arith_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    RequestEndTimePolicy (void);
    virtual ~RequestEndTimePolicy (void);

  private:
    RequestEndTimePolicy (const RequestEndTimePolicy &);
    void operator= (const RequestEndTimePolicy &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RequestEndTimePolicy;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const CORBA::PolicyType REPLY_START_TIME_POLICY_TYPE = 29U;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_MESSAGING_REPLYSTARTTIMEPOLICY__ODDS_N_ENDS_CH_)
#define _MESSAGING_REPLYSTARTTIMEPOLICY__ODDS_N_ENDS_CH_

  class ReplyStartTimePolicy;
  typedef ReplyStartTimePolicy *ReplyStartTimePolicy_ptr;
  struct tao_ReplyStartTimePolicy_life;

  typedef
    TAO_Objref_Var_T<
        ReplyStartTimePolicy,
        tao_ReplyStartTimePolicy_life
      >
    ReplyStartTimePolicy_var;

  typedef
    TAO_Objref_Out_T<
        ReplyStartTimePolicy,
        tao_ReplyStartTimePolicy_life
      >
    ReplyStartTimePolicy_out;

  struct TAO_Messaging_Export tao_ReplyStartTimePolicy_life
  {
    static ReplyStartTimePolicy_ptr tao_duplicate (ReplyStartTimePolicy_ptr);
    static void tao_release (ReplyStartTimePolicy_ptr);
    static ReplyStartTimePolicy_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        ReplyStartTimePolicy_ptr,
        TAO_OutputCDR &
      );
  };

  struct TAO_Messaging_Export tao_ReplyStartTimePolicy_cast
  {
    static ReplyStartTimePolicy_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_MESSAGING_REPLYSTARTTIMEPOLICY_CH_)
#define _MESSAGING_REPLYSTARTTIMEPOLICY_CH_

  class TAO_Messaging_Export ReplyStartTimePolicy
    : public virtual CORBA::Policy
  {
  public:
    typedef ReplyStartTimePolicy_ptr _ptr_type;
    typedef ReplyStartTimePolicy_var _var_type;
    static int _tao_class_id;

    // The static operations.
    static ReplyStartTimePolicy_ptr _duplicate (ReplyStartTimePolicy_ptr obj);

    static ReplyStartTimePolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ReplyStartTimePolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ReplyStartTimePolicy_ptr _nil (void)
      {
        return (ReplyStartTimePolicy_ptr)0;
      }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual ::TimeBase::UtcT start_time (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211

    virtual void *_tao_QueryInterface (ptr_arith_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    ReplyStartTimePolicy (void);
    virtual ~ReplyStartTimePolicy (void);

  private:
    ReplyStartTimePolicy (const ReplyStartTimePolicy &);
    void operator= (const ReplyStartTimePolicy &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ReplyStartTimePolicy;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const CORBA::PolicyType REPLY_END_TIME_POLICY_TYPE = 30U;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_MESSAGING_REPLYENDTIMEPOLICY__ODDS_N_ENDS_CH_)
#define _MESSAGING_REPLYENDTIMEPOLICY__ODDS_N_ENDS_CH_

  class ReplyEndTimePolicy;
  typedef ReplyEndTimePolicy *ReplyEndTimePolicy_ptr;
  struct tao_ReplyEndTimePolicy_life;

  typedef
    TAO_Objref_Var_T<
        ReplyEndTimePolicy,
        tao_ReplyEndTimePolicy_life
      >
    ReplyEndTimePolicy_var;

  typedef
    TAO_Objref_Out_T<
        ReplyEndTimePolicy,
        tao_ReplyEndTimePolicy_life
      >
    ReplyEndTimePolicy_out;

  struct TAO_Messaging_Export tao_ReplyEndTimePolicy_life
  {
    static ReplyEndTimePolicy_ptr tao_duplicate (ReplyEndTimePolicy_ptr);
    static void tao_release (ReplyEndTimePolicy_ptr);
    static ReplyEndTimePolicy_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        ReplyEndTimePolicy_ptr,
        TAO_OutputCDR &
      );
  };

  struct TAO_Messaging_Export tao_ReplyEndTimePolicy_cast
  {
    static ReplyEndTimePolicy_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_MESSAGING_REPLYENDTIMEPOLICY_CH_)
#define _MESSAGING_REPLYENDTIMEPOLICY_CH_

  class TAO_Messaging_Export ReplyEndTimePolicy
    : public virtual CORBA::Policy
  {
  public:
    typedef ReplyEndTimePolicy_ptr _ptr_type;
    typedef ReplyEndTimePolicy_var _var_type;
    static int _tao_class_id;

    // The static operations.
    static ReplyEndTimePolicy_ptr _duplicate (ReplyEndTimePolicy_ptr obj);

    static ReplyEndTimePolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ReplyEndTimePolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static ReplyEndTimePolicy_ptr _nil (void)
      {
        return (ReplyEndTimePolicy_ptr)0;
      }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual ::TimeBase::UtcT end_time (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211

    virtual void *_tao_QueryInterface (ptr_arith_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    ReplyEndTimePolicy (void);
    virtual ~ReplyEndTimePolicy (void);

  private:
    ReplyEndTimePolicy (const ReplyEndTimePolicy &);
    void operator= (const ReplyEndTimePolicy &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ReplyEndTimePolicy;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const CORBA::PolicyType RELATIVE_REQ_TIMEOUT_POLICY_TYPE = 31U;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_MESSAGING_RELATIVEREQUESTTIMEOUTPOLICY__ODDS_N_ENDS_CH_)
#define _MESSAGING_RELATIVEREQUESTTIMEOUTPOLICY__ODDS_N_ENDS_CH_

  class RelativeRequestTimeoutPolicy;
  typedef RelativeRequestTimeoutPolicy *RelativeRequestTimeoutPolicy_ptr;
  struct tao_RelativeRequestTimeoutPolicy_life;

  typedef
    TAO_Objref_Var_T<
        RelativeRequestTimeoutPolicy,
        tao_RelativeRequestTimeoutPolicy_life
      >
    RelativeRequestTimeoutPolicy_var;

  typedef
    TAO_Objref_Out_T<
        RelativeRequestTimeoutPolicy,
        tao_RelativeRequestTimeoutPolicy_life
      >
    RelativeRequestTimeoutPolicy_out;

  struct TAO_Messaging_Export tao_RelativeRequestTimeoutPolicy_life
  {
    static RelativeRequestTimeoutPolicy_ptr tao_duplicate (RelativeRequestTimeoutPolicy_ptr);
    static void tao_release (RelativeRequestTimeoutPolicy_ptr);
    static RelativeRequestTimeoutPolicy_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        RelativeRequestTimeoutPolicy_ptr,
        TAO_OutputCDR &
      );
  };

  struct TAO_Messaging_Export tao_RelativeRequestTimeoutPolicy_cast
  {
    static RelativeRequestTimeoutPolicy_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_MESSAGING_RELATIVEREQUESTTIMEOUTPOLICY_CH_)
#define _MESSAGING_RELATIVEREQUESTTIMEOUTPOLICY_CH_

  class TAO_Messaging_Export RelativeRequestTimeoutPolicy
    : public virtual CORBA::Policy
  {
  public:
    typedef RelativeRequestTimeoutPolicy_ptr _ptr_type;
    typedef RelativeRequestTimeoutPolicy_var _var_type;
    static int _tao_class_id;

    // The static operations.
    static RelativeRequestTimeoutPolicy_ptr _duplicate (RelativeRequestTimeoutPolicy_ptr obj);

    static RelativeRequestTimeoutPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static RelativeRequestTimeoutPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static RelativeRequestTimeoutPolicy_ptr _nil (void)
      {
        return (RelativeRequestTimeoutPolicy_ptr)0;
      }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual TimeBase::TimeT relative_expiry (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211

    virtual void *_tao_QueryInterface (ptr_arith_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    RelativeRequestTimeoutPolicy (void);
    virtual ~RelativeRequestTimeoutPolicy (void);

  private:
    RelativeRequestTimeoutPolicy (const RelativeRequestTimeoutPolicy &);
    void operator= (const RelativeRequestTimeoutPolicy &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RelativeRequestTimeoutPolicy;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const CORBA::PolicyType ROUTING_POLICY_TYPE = 33U;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_type.cpp:231

  struct RoutingTypeRange;

  typedef
    TAO_Fixed_Var_T<
        RoutingTypeRange
      >
    RoutingTypeRange_var;

  typedef
    RoutingTypeRange &
    RoutingTypeRange_out;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/structure_ch.cpp:52

  struct TAO_Messaging_Export RoutingTypeRange
  {
    typedef RoutingTypeRange_var _var_type;

    static void _tao_any_destructor (void *);
    Messaging::RoutingType min;
    Messaging::RoutingType max;
  };

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RoutingTypeRange;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_MESSAGING_ROUTINGPOLICY__ODDS_N_ENDS_CH_)
#define _MESSAGING_ROUTINGPOLICY__ODDS_N_ENDS_CH_

  class RoutingPolicy;
  typedef RoutingPolicy *RoutingPolicy_ptr;
  struct tao_RoutingPolicy_life;

  typedef
    TAO_Objref_Var_T<
        RoutingPolicy,
        tao_RoutingPolicy_life
      >
    RoutingPolicy_var;

  typedef
    TAO_Objref_Out_T<
        RoutingPolicy,
        tao_RoutingPolicy_life
      >
    RoutingPolicy_out;

  struct TAO_Messaging_Export tao_RoutingPolicy_life
  {
    static RoutingPolicy_ptr tao_duplicate (RoutingPolicy_ptr);
    static void tao_release (RoutingPolicy_ptr);
    static RoutingPolicy_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        RoutingPolicy_ptr,
        TAO_OutputCDR &
      );
  };

  struct TAO_Messaging_Export tao_RoutingPolicy_cast
  {
    static RoutingPolicy_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_MESSAGING_ROUTINGPOLICY_CH_)
#define _MESSAGING_ROUTINGPOLICY_CH_

  class TAO_Messaging_Export RoutingPolicy
    : public virtual CORBA::Policy
  {
  public:
    typedef RoutingPolicy_ptr _ptr_type;
    typedef RoutingPolicy_var _var_type;
    static int _tao_class_id;

    // The static operations.
    static RoutingPolicy_ptr _duplicate (RoutingPolicy_ptr obj);

    static RoutingPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static RoutingPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static RoutingPolicy_ptr _nil (void)
      {
        return (RoutingPolicy_ptr)0;
      }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual ::Messaging::RoutingTypeRange routing_range (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211

    virtual void *_tao_QueryInterface (ptr_arith_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    RoutingPolicy (void);
    virtual ~RoutingPolicy (void);

  private:
    RoutingPolicy (const RoutingPolicy &);
    void operator= (const RoutingPolicy &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RoutingPolicy;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const CORBA::PolicyType MAX_HOPS_POLICY_TYPE = 34U;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_MESSAGING_MAXHOPSPOLICY__ODDS_N_ENDS_CH_)
#define _MESSAGING_MAXHOPSPOLICY__ODDS_N_ENDS_CH_

  class MaxHopsPolicy;
  typedef MaxHopsPolicy *MaxHopsPolicy_ptr;
  struct tao_MaxHopsPolicy_life;

  typedef
    TAO_Objref_Var_T<
        MaxHopsPolicy,
        tao_MaxHopsPolicy_life
      >
    MaxHopsPolicy_var;

  typedef
    TAO_Objref_Out_T<
        MaxHopsPolicy,
        tao_MaxHopsPolicy_life
      >
    MaxHopsPolicy_out;

  struct TAO_Messaging_Export tao_MaxHopsPolicy_life
  {
    static MaxHopsPolicy_ptr tao_duplicate (MaxHopsPolicy_ptr);
    static void tao_release (MaxHopsPolicy_ptr);
    static MaxHopsPolicy_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        MaxHopsPolicy_ptr,
        TAO_OutputCDR &
      );
  };

  struct TAO_Messaging_Export tao_MaxHopsPolicy_cast
  {
    static MaxHopsPolicy_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_MESSAGING_MAXHOPSPOLICY_CH_)
#define _MESSAGING_MAXHOPSPOLICY_CH_

  class TAO_Messaging_Export MaxHopsPolicy
    : public virtual CORBA::Policy
  {
  public:
    typedef MaxHopsPolicy_ptr _ptr_type;
    typedef MaxHopsPolicy_var _var_type;
    static int _tao_class_id;

    // The static operations.
    static MaxHopsPolicy_ptr _duplicate (MaxHopsPolicy_ptr obj);

    static MaxHopsPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static MaxHopsPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static MaxHopsPolicy_ptr _nil (void)
      {
        return (MaxHopsPolicy_ptr)0;
      }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual CORBA::UShort max_hops (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211

    virtual void *_tao_QueryInterface (ptr_arith_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    MaxHopsPolicy (void);
    virtual ~MaxHopsPolicy (void);

  private:
    MaxHopsPolicy (const MaxHopsPolicy &);
    void operator= (const MaxHopsPolicy &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_MaxHopsPolicy;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_constant/constant_ch.cpp:52

  const CORBA::PolicyType QUEUE_ORDER_POLICY_TYPE = 35U;

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_interface.cpp:567

#if !defined (_MESSAGING_QUEUEORDERPOLICY__ODDS_N_ENDS_CH_)
#define _MESSAGING_QUEUEORDERPOLICY__ODDS_N_ENDS_CH_

  class QueueOrderPolicy;
  typedef QueueOrderPolicy *QueueOrderPolicy_ptr;
  struct tao_QueueOrderPolicy_life;

  typedef
    TAO_Objref_Var_T<
        QueueOrderPolicy,
        tao_QueueOrderPolicy_life
      >
    QueueOrderPolicy_var;

  typedef
    TAO_Objref_Out_T<
        QueueOrderPolicy,
        tao_QueueOrderPolicy_life
      >
    QueueOrderPolicy_out;

  struct TAO_Messaging_Export tao_QueueOrderPolicy_life
  {
    static QueueOrderPolicy_ptr tao_duplicate (QueueOrderPolicy_ptr);
    static void tao_release (QueueOrderPolicy_ptr);
    static QueueOrderPolicy_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        QueueOrderPolicy_ptr,
        TAO_OutputCDR &
      );
  };

  struct TAO_Messaging_Export tao_QueueOrderPolicy_cast
  {
    static QueueOrderPolicy_ptr tao_narrow (
        CORBA::Object_ptr
        ACE_ENV_ARG_DECL
      );
    static CORBA::Object_ptr tao_upcast (void *);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:54

#if !defined (_MESSAGING_QUEUEORDERPOLICY_CH_)
#define _MESSAGING_QUEUEORDERPOLICY_CH_

  class TAO_Messaging_Export QueueOrderPolicy
    : public virtual CORBA::Policy
  {
  public:
    typedef QueueOrderPolicy_ptr _ptr_type;
    typedef QueueOrderPolicy_var _var_type;
    static int _tao_class_id;

    // The static operations.
    static QueueOrderPolicy_ptr _duplicate (QueueOrderPolicy_ptr obj);

    static QueueOrderPolicy_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static QueueOrderPolicy_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );

    static QueueOrderPolicy_ptr _nil (void)
      {
        return (QueueOrderPolicy_ptr)0;
      }

    static void _tao_any_destructor (void *);

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_operation/operation_ch.cpp:46

    virtual Messaging::Ordering allowed_orders (
        ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      )) = 0;

    // TAO_IDL - Generated from
    // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/interface_ch.cpp:211

    virtual void *_tao_QueryInterface (ptr_arith_t type);

    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);

  protected:
    QueueOrderPolicy (void);
    virtual ~QueueOrderPolicy (void);

  private:
    QueueOrderPolicy (const QueueOrderPolicy &);
    void operator= (const QueueOrderPolicy &);
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_typecode/typecode_decl.cpp:44

  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_QueueOrderPolicy;

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_module/module_ch.cpp:67

}
TAO_NAMESPACE_CLOSE // module Messaging

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RebindPolicy_ptr); // copying
TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RebindPolicy_ptr *); // non-copying
TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::RebindPolicy_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/any_op_ch.cpp:52

TAO_Messaging_Export void operator<<= (CORBA::Any &, const Messaging::PriorityRange &); // copying version
TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::PriorityRange*); // noncopying version
TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::PriorityRange *&); // deprecated
TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Messaging::PriorityRange *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RequestPriorityPolicy_ptr); // copying
TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RequestPriorityPolicy_ptr *); // non-copying
TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::RequestPriorityPolicy_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ReplyPriorityPolicy_ptr); // copying
TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ReplyPriorityPolicy_ptr *); // non-copying
TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::ReplyPriorityPolicy_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RequestStartTimePolicy_ptr); // copying
TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RequestStartTimePolicy_ptr *); // non-copying
TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::RequestStartTimePolicy_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RequestEndTimePolicy_ptr); // copying
TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RequestEndTimePolicy_ptr *); // non-copying
TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::RequestEndTimePolicy_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ReplyStartTimePolicy_ptr); // copying
TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ReplyStartTimePolicy_ptr *); // non-copying
TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::ReplyStartTimePolicy_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ReplyEndTimePolicy_ptr); // copying
TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::ReplyEndTimePolicy_ptr *); // non-copying
TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::ReplyEndTimePolicy_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RelativeRequestTimeoutPolicy_ptr); // copying
TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RelativeRequestTimeoutPolicy_ptr *); // non-copying
TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::RelativeRequestTimeoutPolicy_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/any_op_ch.cpp:52

TAO_Messaging_Export void operator<<= (CORBA::Any &, const Messaging::RoutingTypeRange &); // copying version
TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RoutingTypeRange*); // noncopying version
TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::RoutingTypeRange *&); // deprecated
TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, const Messaging::RoutingTypeRange *&);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RoutingPolicy_ptr); // copying
TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::RoutingPolicy_ptr *); // non-copying
TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::RoutingPolicy_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::MaxHopsPolicy_ptr); // copying
TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::MaxHopsPolicy_ptr *); // non-copying
TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::MaxHopsPolicy_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_interface/any_op_ch.cpp:52

TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::QueueOrderPolicy_ptr); // copying
TAO_Messaging_Export void operator<<= (CORBA::Any &, Messaging::QueueOrderPolicy_ptr *); // non-copying
TAO_Messaging_Export CORBA::Boolean operator>>= (const CORBA::Any &, Messaging::QueueOrderPolicy_ptr &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:48

#ifndef __ACE_INLINE__

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_Messaging_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Messaging::PriorityRange &);
TAO_Messaging_Export CORBA::Boolean operator>> (TAO_InputCDR &, Messaging::PriorityRange &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_structure/cdr_op_ch.cpp:54

TAO_Messaging_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const Messaging::RoutingTypeRange &);
TAO_Messaging_Export CORBA::Boolean operator>> (TAO_InputCDR &, Messaging::RoutingTypeRange &);

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_visitor_root/cdr_op.cpp:64

#endif /* __ACE_INLINE__ */

// TAO_IDL - Generated from
// W:\ACE_wrappers\TAO\TAO_IDL\be\be_codegen.cpp:1018

#if defined (__ACE_INLINE__)
#include "Messaging_No_ImplC.i"
#endif /* defined INLINE */

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#include "ace/post.h"
#endif /* ifndef */
