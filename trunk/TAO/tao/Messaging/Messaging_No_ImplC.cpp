// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be\be_codegen.cpp:323


#include "Messaging_No_ImplC.h"
#include "tao/Typecode.h"
#include "tao/Any_Impl_T.h"
#include "tao/Any_Dual_Impl_T.h"
#include "ace/OS_NS_string.h"

#if defined (__BORLANDC__)
#pragma option -w-rvl -w-rch -w-ccc -w-aus -w-sig
#endif /* __BORLANDC__ */

#if !defined (__ACE_INLINE__)
#include "Messaging_No_ImplC.i"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be\be_visitor_arg_traits.cpp:64

// Arg traits specializations.
namespace TAO
{
}


// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_Priority[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  35,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5072), 
  ACE_NTOHL (0x696f7269), 
  ACE_NTOHL (0x74793a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/Priority:1.0
    9,
  ACE_NTOHL (0x5072696f), 
  ACE_NTOHL (0x72697479), 
  ACE_NTOHL (0x0),  // name = Priority
    CORBA::tk_short,

};

static CORBA::TypeCode _tc_TAO_tc_Messaging_Priority (
    CORBA::tk_alias,
    sizeof (_oc_Messaging_Priority),
    (char *) &_oc_Messaging_Priority,
    0,
    sizeof (Messaging::Priority)
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr _tc_Priority =
    &_tc_TAO_tc_Messaging_Priority;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_RebindMode[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  37,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5265), 
  ACE_NTOHL (0x62696e64), 
  ACE_NTOHL (0x4d6f6465), 
  ACE_NTOHL (0x3a312e30), 
  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/Messaging/RebindMode:1.0
    11,
  ACE_NTOHL (0x52656269), 
  ACE_NTOHL (0x6e644d6f), 
  ACE_NTOHL (0x64650000),  // name = RebindMode
    CORBA::tk_short,

};

static CORBA::TypeCode _tc_TAO_tc_Messaging_RebindMode (
    CORBA::tk_alias,
    sizeof (_oc_Messaging_RebindMode),
    (char *) &_oc_Messaging_RebindMode,
    0,
    sizeof (Messaging::RebindMode)
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr _tc_RebindMode =
    &_tc_TAO_tc_Messaging_RebindMode;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_RoutingType[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  38,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f526f), 
  ACE_NTOHL (0x7574696e), 
  ACE_NTOHL (0x67547970), 
  ACE_NTOHL (0x653a312e), 
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/Messaging/RoutingType:1.0
    12,
  ACE_NTOHL (0x526f7574), 
  ACE_NTOHL (0x696e6754), 
  ACE_NTOHL (0x79706500),  // name = RoutingType
    CORBA::tk_short,

};

static CORBA::TypeCode _tc_TAO_tc_Messaging_RoutingType (
    CORBA::tk_alias,
    sizeof (_oc_Messaging_RoutingType),
    (char *) &_oc_Messaging_RoutingType,
    0,
    sizeof (Messaging::RoutingType)
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr _tc_RoutingType =
    &_tc_TAO_tc_Messaging_RoutingType;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_Ordering[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  35,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f4f72), 
  ACE_NTOHL (0x64657269), 
  ACE_NTOHL (0x6e673a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/Ordering:1.0
    9,
  ACE_NTOHL (0x4f726465), 
  ACE_NTOHL (0x72696e67), 
  ACE_NTOHL (0x0),  // name = Ordering
    CORBA::tk_ushort,

};

static CORBA::TypeCode _tc_TAO_tc_Messaging_Ordering (
    CORBA::tk_alias,
    sizeof (_oc_Messaging_Ordering),
    (char *) &_oc_Messaging_Ordering,
    0,
    sizeof (Messaging::Ordering)
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr _tc_Ordering =
    &_tc_TAO_tc_Messaging_Ordering;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for Messaging::RebindPolicy.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::RebindPolicy_ptr
TAO::Objref_Traits<Messaging::RebindPolicy>::tao_duplicate (
    Messaging::RebindPolicy_ptr p
  )
{
  return Messaging::RebindPolicy::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<Messaging::RebindPolicy>::tao_release (
    Messaging::RebindPolicy_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::RebindPolicy_ptr
TAO::Objref_Traits<Messaging::RebindPolicy>::tao_nil (void)
{
  return Messaging::RebindPolicy::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<Messaging::RebindPolicy>::tao_marshal (
    Messaging::RebindPolicy_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return p->marshal (cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*Messaging__TAO_RebindPolicy_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

Messaging::RebindPolicy::RebindPolicy (void)
{}

Messaging::RebindPolicy::~RebindPolicy (void)
{}

void 
Messaging::RebindPolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  RebindPolicy *_tao_tmp_pointer =
    ACE_static_cast (RebindPolicy *, _tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

Messaging::RebindPolicy_ptr
Messaging::RebindPolicy::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return RebindPolicy::_nil ();
    }
  
  RebindPolicy_ptr proxy =
    dynamic_cast<RebindPolicy_ptr> (_tao_objref);
  
  return RebindPolicy::_duplicate (proxy);
}

Messaging::RebindPolicy_ptr
Messaging::RebindPolicy::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return RebindPolicy::_nil ();
    }
  
  RebindPolicy_ptr proxy =
    dynamic_cast<RebindPolicy_ptr> (_tao_objref);
  
  return RebindPolicy::_duplicate (proxy);
}

Messaging::RebindPolicy_ptr
Messaging::RebindPolicy::_duplicate (RebindPolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
Messaging::RebindPolicy::_is_a (
    const char *value
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Policy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/Messaging/RebindPolicy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return 0;
    }
}

const char* Messaging::RebindPolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/RebindPolicy:1.0";
}

CORBA::Boolean
Messaging::RebindPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_RebindPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  39,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5265), 
  ACE_NTOHL (0x62696e64), 
  ACE_NTOHL (0x506f6c69), 
  ACE_NTOHL (0x63793a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/RebindPolicy:1.0
    13,
  ACE_NTOHL (0x52656269), 
  ACE_NTOHL (0x6e64506f), 
  ACE_NTOHL (0x6c696379), 
  ACE_NTOHL (0x0),  // name = RebindPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_RebindPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_RebindPolicy),
    (char *) &_oc_Messaging_RebindPolicy,
    0,
    sizeof (Messaging::RebindPolicy)
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr _tc_RebindPolicy =
    &_tc_TAO_tc_Messaging_RebindPolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_PriorityRange[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  40,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5072), 
  ACE_NTOHL (0x696f7269), 
  ACE_NTOHL (0x74795261), 
  ACE_NTOHL (0x6e67653a), 
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/Messaging/PriorityRange:1.0
    14,
  ACE_NTOHL (0x5072696f), 
  ACE_NTOHL (0x72697479), 
  ACE_NTOHL (0x52616e67), 
  ACE_NTOHL (0x65000000),  // name = PriorityRange
  2, // member count
    4,
  ACE_NTOHL (0x6d696e00),  // name = min
    CORBA::tk_alias, // typecode kind for typedefs
  64, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a), 
    ACE_NTOHL (0x6f6d672e), 
    ACE_NTOHL (0x6f72672f), 
    ACE_NTOHL (0x4d657373), 
    ACE_NTOHL (0x6167696e), 
    ACE_NTOHL (0x672f5072), 
    ACE_NTOHL (0x696f7269), 
    ACE_NTOHL (0x74793a31), 
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/Priority:1.0
        9,
    ACE_NTOHL (0x5072696f), 
    ACE_NTOHL (0x72697479), 
    ACE_NTOHL (0x0),  // name = Priority
        CORBA::tk_short,


  4,
  ACE_NTOHL (0x6d617800),  // name = max
    CORBA::tk_alias, // typecode kind for typedefs
  64, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    35,
    ACE_NTOHL (0x49444c3a), 
    ACE_NTOHL (0x6f6d672e), 
    ACE_NTOHL (0x6f72672f), 
    ACE_NTOHL (0x4d657373), 
    ACE_NTOHL (0x6167696e), 
    ACE_NTOHL (0x672f5072), 
    ACE_NTOHL (0x696f7269), 
    ACE_NTOHL (0x74793a31), 
    ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/Priority:1.0
        9,
    ACE_NTOHL (0x5072696f), 
    ACE_NTOHL (0x72697479), 
    ACE_NTOHL (0x0),  // name = Priority
        CORBA::tk_short,


};

static CORBA::TypeCode _tc_TAO_tc_Messaging_PriorityRange (
    CORBA::tk_struct,
    sizeof (_oc_Messaging_PriorityRange),
    (char *) &_oc_Messaging_PriorityRange,
    0,
    sizeof (Messaging::PriorityRange)
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr _tc_PriorityRange =
    &_tc_TAO_tc_Messaging_PriorityRange;
}

// TAO_IDL - Generated from 
// be\be_visitor_structure/structure_cs.cpp:66

void 
Messaging::PriorityRange::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  PriorityRange *_tao_tmp_pointer =
    ACE_static_cast (PriorityRange *, _tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for Messaging::RequestPriorityPolicy.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::RequestPriorityPolicy_ptr
TAO::Objref_Traits<Messaging::RequestPriorityPolicy>::tao_duplicate (
    Messaging::RequestPriorityPolicy_ptr p
  )
{
  return Messaging::RequestPriorityPolicy::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<Messaging::RequestPriorityPolicy>::tao_release (
    Messaging::RequestPriorityPolicy_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::RequestPriorityPolicy_ptr
TAO::Objref_Traits<Messaging::RequestPriorityPolicy>::tao_nil (void)
{
  return Messaging::RequestPriorityPolicy::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<Messaging::RequestPriorityPolicy>::tao_marshal (
    Messaging::RequestPriorityPolicy_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return p->marshal (cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*Messaging__TAO_RequestPriorityPolicy_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

Messaging::RequestPriorityPolicy::RequestPriorityPolicy (void)
{}

Messaging::RequestPriorityPolicy::~RequestPriorityPolicy (void)
{}

void 
Messaging::RequestPriorityPolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  RequestPriorityPolicy *_tao_tmp_pointer =
    ACE_static_cast (RequestPriorityPolicy *, _tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

Messaging::RequestPriorityPolicy_ptr
Messaging::RequestPriorityPolicy::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return RequestPriorityPolicy::_nil ();
    }
  
  RequestPriorityPolicy_ptr proxy =
    dynamic_cast<RequestPriorityPolicy_ptr> (_tao_objref);
  
  return RequestPriorityPolicy::_duplicate (proxy);
}

Messaging::RequestPriorityPolicy_ptr
Messaging::RequestPriorityPolicy::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return RequestPriorityPolicy::_nil ();
    }
  
  RequestPriorityPolicy_ptr proxy =
    dynamic_cast<RequestPriorityPolicy_ptr> (_tao_objref);
  
  return RequestPriorityPolicy::_duplicate (proxy);
}

Messaging::RequestPriorityPolicy_ptr
Messaging::RequestPriorityPolicy::_duplicate (RequestPriorityPolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
Messaging::RequestPriorityPolicy::_is_a (
    const char *value
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Policy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/Messaging/RequestPriorityPolicy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return 0;
    }
}

const char* Messaging::RequestPriorityPolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/RequestPriorityPolicy:1.0";
}

CORBA::Boolean
Messaging::RequestPriorityPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_RequestPriorityPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  48,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5265), 
  ACE_NTOHL (0x71756573), 
  ACE_NTOHL (0x74507269), 
  ACE_NTOHL (0x6f726974), 
  ACE_NTOHL (0x79506f6c), 
  ACE_NTOHL (0x6963793a), 
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/Messaging/RequestPriorityPolicy:1.0
    22,
  ACE_NTOHL (0x52657175), 
  ACE_NTOHL (0x65737450), 
  ACE_NTOHL (0x72696f72), 
  ACE_NTOHL (0x69747950), 
  ACE_NTOHL (0x6f6c6963), 
  ACE_NTOHL (0x79000000),  // name = RequestPriorityPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_RequestPriorityPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_RequestPriorityPolicy),
    (char *) &_oc_Messaging_RequestPriorityPolicy,
    0,
    sizeof (Messaging::RequestPriorityPolicy)
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr _tc_RequestPriorityPolicy =
    &_tc_TAO_tc_Messaging_RequestPriorityPolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for Messaging::ReplyPriorityPolicy.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::ReplyPriorityPolicy_ptr
TAO::Objref_Traits<Messaging::ReplyPriorityPolicy>::tao_duplicate (
    Messaging::ReplyPriorityPolicy_ptr p
  )
{
  return Messaging::ReplyPriorityPolicy::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<Messaging::ReplyPriorityPolicy>::tao_release (
    Messaging::ReplyPriorityPolicy_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::ReplyPriorityPolicy_ptr
TAO::Objref_Traits<Messaging::ReplyPriorityPolicy>::tao_nil (void)
{
  return Messaging::ReplyPriorityPolicy::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<Messaging::ReplyPriorityPolicy>::tao_marshal (
    Messaging::ReplyPriorityPolicy_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return p->marshal (cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*Messaging__TAO_ReplyPriorityPolicy_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

Messaging::ReplyPriorityPolicy::ReplyPriorityPolicy (void)
{}

Messaging::ReplyPriorityPolicy::~ReplyPriorityPolicy (void)
{}

void 
Messaging::ReplyPriorityPolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  ReplyPriorityPolicy *_tao_tmp_pointer =
    ACE_static_cast (ReplyPriorityPolicy *, _tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

Messaging::ReplyPriorityPolicy_ptr
Messaging::ReplyPriorityPolicy::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return ReplyPriorityPolicy::_nil ();
    }
  
  ReplyPriorityPolicy_ptr proxy =
    dynamic_cast<ReplyPriorityPolicy_ptr> (_tao_objref);
  
  return ReplyPriorityPolicy::_duplicate (proxy);
}

Messaging::ReplyPriorityPolicy_ptr
Messaging::ReplyPriorityPolicy::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return ReplyPriorityPolicy::_nil ();
    }
  
  ReplyPriorityPolicy_ptr proxy =
    dynamic_cast<ReplyPriorityPolicy_ptr> (_tao_objref);
  
  return ReplyPriorityPolicy::_duplicate (proxy);
}

Messaging::ReplyPriorityPolicy_ptr
Messaging::ReplyPriorityPolicy::_duplicate (ReplyPriorityPolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
Messaging::ReplyPriorityPolicy::_is_a (
    const char *value
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Policy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/Messaging/ReplyPriorityPolicy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return 0;
    }
}

const char* Messaging::ReplyPriorityPolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/ReplyPriorityPolicy:1.0";
}

CORBA::Boolean
Messaging::ReplyPriorityPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_ReplyPriorityPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  46,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5265), 
  ACE_NTOHL (0x706c7950), 
  ACE_NTOHL (0x72696f72), 
  ACE_NTOHL (0x69747950), 
  ACE_NTOHL (0x6f6c6963), 
  ACE_NTOHL (0x793a312e), 
  ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/Messaging/ReplyPriorityPolicy:1.0
    20,
  ACE_NTOHL (0x5265706c), 
  ACE_NTOHL (0x79507269), 
  ACE_NTOHL (0x6f726974), 
  ACE_NTOHL (0x79506f6c), 
  ACE_NTOHL (0x69637900),  // name = ReplyPriorityPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_ReplyPriorityPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_ReplyPriorityPolicy),
    (char *) &_oc_Messaging_ReplyPriorityPolicy,
    0,
    sizeof (Messaging::ReplyPriorityPolicy)
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr _tc_ReplyPriorityPolicy =
    &_tc_TAO_tc_Messaging_ReplyPriorityPolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for Messaging::RequestStartTimePolicy.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::RequestStartTimePolicy_ptr
TAO::Objref_Traits<Messaging::RequestStartTimePolicy>::tao_duplicate (
    Messaging::RequestStartTimePolicy_ptr p
  )
{
  return Messaging::RequestStartTimePolicy::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<Messaging::RequestStartTimePolicy>::tao_release (
    Messaging::RequestStartTimePolicy_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::RequestStartTimePolicy_ptr
TAO::Objref_Traits<Messaging::RequestStartTimePolicy>::tao_nil (void)
{
  return Messaging::RequestStartTimePolicy::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<Messaging::RequestStartTimePolicy>::tao_marshal (
    Messaging::RequestStartTimePolicy_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return p->marshal (cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*Messaging__TAO_RequestStartTimePolicy_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

Messaging::RequestStartTimePolicy::RequestStartTimePolicy (void)
{}

Messaging::RequestStartTimePolicy::~RequestStartTimePolicy (void)
{}

void 
Messaging::RequestStartTimePolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  RequestStartTimePolicy *_tao_tmp_pointer =
    ACE_static_cast (RequestStartTimePolicy *, _tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

Messaging::RequestStartTimePolicy_ptr
Messaging::RequestStartTimePolicy::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return RequestStartTimePolicy::_nil ();
    }
  
  RequestStartTimePolicy_ptr proxy =
    dynamic_cast<RequestStartTimePolicy_ptr> (_tao_objref);
  
  return RequestStartTimePolicy::_duplicate (proxy);
}

Messaging::RequestStartTimePolicy_ptr
Messaging::RequestStartTimePolicy::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return RequestStartTimePolicy::_nil ();
    }
  
  RequestStartTimePolicy_ptr proxy =
    dynamic_cast<RequestStartTimePolicy_ptr> (_tao_objref);
  
  return RequestStartTimePolicy::_duplicate (proxy);
}

Messaging::RequestStartTimePolicy_ptr
Messaging::RequestStartTimePolicy::_duplicate (RequestStartTimePolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
Messaging::RequestStartTimePolicy::_is_a (
    const char *value
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Policy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/Messaging/RequestStartTimePolicy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return 0;
    }
}

const char* Messaging::RequestStartTimePolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/RequestStartTimePolicy:1.0";
}

CORBA::Boolean
Messaging::RequestStartTimePolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_RequestStartTimePolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  49,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5265), 
  ACE_NTOHL (0x71756573), 
  ACE_NTOHL (0x74537461), 
  ACE_NTOHL (0x72745469), 
  ACE_NTOHL (0x6d65506f), 
  ACE_NTOHL (0x6c696379), 
  ACE_NTOHL (0x3a312e30), 
  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/Messaging/RequestStartTimePolicy:1.0
    23,
  ACE_NTOHL (0x52657175), 
  ACE_NTOHL (0x65737453), 
  ACE_NTOHL (0x74617274), 
  ACE_NTOHL (0x54696d65), 
  ACE_NTOHL (0x506f6c69), 
  ACE_NTOHL (0x63790000),  // name = RequestStartTimePolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_RequestStartTimePolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_RequestStartTimePolicy),
    (char *) &_oc_Messaging_RequestStartTimePolicy,
    0,
    sizeof (Messaging::RequestStartTimePolicy)
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr _tc_RequestStartTimePolicy =
    &_tc_TAO_tc_Messaging_RequestStartTimePolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for Messaging::RequestEndTimePolicy.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::RequestEndTimePolicy_ptr
TAO::Objref_Traits<Messaging::RequestEndTimePolicy>::tao_duplicate (
    Messaging::RequestEndTimePolicy_ptr p
  )
{
  return Messaging::RequestEndTimePolicy::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<Messaging::RequestEndTimePolicy>::tao_release (
    Messaging::RequestEndTimePolicy_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::RequestEndTimePolicy_ptr
TAO::Objref_Traits<Messaging::RequestEndTimePolicy>::tao_nil (void)
{
  return Messaging::RequestEndTimePolicy::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<Messaging::RequestEndTimePolicy>::tao_marshal (
    Messaging::RequestEndTimePolicy_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return p->marshal (cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*Messaging__TAO_RequestEndTimePolicy_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

Messaging::RequestEndTimePolicy::RequestEndTimePolicy (void)
{}

Messaging::RequestEndTimePolicy::~RequestEndTimePolicy (void)
{}

void 
Messaging::RequestEndTimePolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  RequestEndTimePolicy *_tao_tmp_pointer =
    ACE_static_cast (RequestEndTimePolicy *, _tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

Messaging::RequestEndTimePolicy_ptr
Messaging::RequestEndTimePolicy::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return RequestEndTimePolicy::_nil ();
    }
  
  RequestEndTimePolicy_ptr proxy =
    dynamic_cast<RequestEndTimePolicy_ptr> (_tao_objref);
  
  return RequestEndTimePolicy::_duplicate (proxy);
}

Messaging::RequestEndTimePolicy_ptr
Messaging::RequestEndTimePolicy::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return RequestEndTimePolicy::_nil ();
    }
  
  RequestEndTimePolicy_ptr proxy =
    dynamic_cast<RequestEndTimePolicy_ptr> (_tao_objref);
  
  return RequestEndTimePolicy::_duplicate (proxy);
}

Messaging::RequestEndTimePolicy_ptr
Messaging::RequestEndTimePolicy::_duplicate (RequestEndTimePolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
Messaging::RequestEndTimePolicy::_is_a (
    const char *value
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Policy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/Messaging/RequestEndTimePolicy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return 0;
    }
}

const char* Messaging::RequestEndTimePolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/RequestEndTimePolicy:1.0";
}

CORBA::Boolean
Messaging::RequestEndTimePolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_RequestEndTimePolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  47,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5265), 
  ACE_NTOHL (0x71756573), 
  ACE_NTOHL (0x74456e64), 
  ACE_NTOHL (0x54696d65), 
  ACE_NTOHL (0x506f6c69), 
  ACE_NTOHL (0x63793a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/RequestEndTimePolicy:1.0
    21,
  ACE_NTOHL (0x52657175), 
  ACE_NTOHL (0x65737445), 
  ACE_NTOHL (0x6e645469), 
  ACE_NTOHL (0x6d65506f), 
  ACE_NTOHL (0x6c696379), 
  ACE_NTOHL (0x0),  // name = RequestEndTimePolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_RequestEndTimePolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_RequestEndTimePolicy),
    (char *) &_oc_Messaging_RequestEndTimePolicy,
    0,
    sizeof (Messaging::RequestEndTimePolicy)
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr _tc_RequestEndTimePolicy =
    &_tc_TAO_tc_Messaging_RequestEndTimePolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for Messaging::ReplyStartTimePolicy.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::ReplyStartTimePolicy_ptr
TAO::Objref_Traits<Messaging::ReplyStartTimePolicy>::tao_duplicate (
    Messaging::ReplyStartTimePolicy_ptr p
  )
{
  return Messaging::ReplyStartTimePolicy::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<Messaging::ReplyStartTimePolicy>::tao_release (
    Messaging::ReplyStartTimePolicy_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::ReplyStartTimePolicy_ptr
TAO::Objref_Traits<Messaging::ReplyStartTimePolicy>::tao_nil (void)
{
  return Messaging::ReplyStartTimePolicy::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<Messaging::ReplyStartTimePolicy>::tao_marshal (
    Messaging::ReplyStartTimePolicy_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return p->marshal (cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*Messaging__TAO_ReplyStartTimePolicy_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

Messaging::ReplyStartTimePolicy::ReplyStartTimePolicy (void)
{}

Messaging::ReplyStartTimePolicy::~ReplyStartTimePolicy (void)
{}

void 
Messaging::ReplyStartTimePolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  ReplyStartTimePolicy *_tao_tmp_pointer =
    ACE_static_cast (ReplyStartTimePolicy *, _tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

Messaging::ReplyStartTimePolicy_ptr
Messaging::ReplyStartTimePolicy::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return ReplyStartTimePolicy::_nil ();
    }
  
  ReplyStartTimePolicy_ptr proxy =
    dynamic_cast<ReplyStartTimePolicy_ptr> (_tao_objref);
  
  return ReplyStartTimePolicy::_duplicate (proxy);
}

Messaging::ReplyStartTimePolicy_ptr
Messaging::ReplyStartTimePolicy::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return ReplyStartTimePolicy::_nil ();
    }
  
  ReplyStartTimePolicy_ptr proxy =
    dynamic_cast<ReplyStartTimePolicy_ptr> (_tao_objref);
  
  return ReplyStartTimePolicy::_duplicate (proxy);
}

Messaging::ReplyStartTimePolicy_ptr
Messaging::ReplyStartTimePolicy::_duplicate (ReplyStartTimePolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
Messaging::ReplyStartTimePolicy::_is_a (
    const char *value
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Policy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/Messaging/ReplyStartTimePolicy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return 0;
    }
}

const char* Messaging::ReplyStartTimePolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/ReplyStartTimePolicy:1.0";
}

CORBA::Boolean
Messaging::ReplyStartTimePolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_ReplyStartTimePolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  47,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5265), 
  ACE_NTOHL (0x706c7953), 
  ACE_NTOHL (0x74617274), 
  ACE_NTOHL (0x54696d65), 
  ACE_NTOHL (0x506f6c69), 
  ACE_NTOHL (0x63793a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/ReplyStartTimePolicy:1.0
    21,
  ACE_NTOHL (0x5265706c), 
  ACE_NTOHL (0x79537461), 
  ACE_NTOHL (0x72745469), 
  ACE_NTOHL (0x6d65506f), 
  ACE_NTOHL (0x6c696379), 
  ACE_NTOHL (0x0),  // name = ReplyStartTimePolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_ReplyStartTimePolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_ReplyStartTimePolicy),
    (char *) &_oc_Messaging_ReplyStartTimePolicy,
    0,
    sizeof (Messaging::ReplyStartTimePolicy)
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr _tc_ReplyStartTimePolicy =
    &_tc_TAO_tc_Messaging_ReplyStartTimePolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for Messaging::ReplyEndTimePolicy.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::ReplyEndTimePolicy_ptr
TAO::Objref_Traits<Messaging::ReplyEndTimePolicy>::tao_duplicate (
    Messaging::ReplyEndTimePolicy_ptr p
  )
{
  return Messaging::ReplyEndTimePolicy::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<Messaging::ReplyEndTimePolicy>::tao_release (
    Messaging::ReplyEndTimePolicy_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::ReplyEndTimePolicy_ptr
TAO::Objref_Traits<Messaging::ReplyEndTimePolicy>::tao_nil (void)
{
  return Messaging::ReplyEndTimePolicy::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<Messaging::ReplyEndTimePolicy>::tao_marshal (
    Messaging::ReplyEndTimePolicy_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return p->marshal (cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*Messaging__TAO_ReplyEndTimePolicy_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

Messaging::ReplyEndTimePolicy::ReplyEndTimePolicy (void)
{}

Messaging::ReplyEndTimePolicy::~ReplyEndTimePolicy (void)
{}

void 
Messaging::ReplyEndTimePolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  ReplyEndTimePolicy *_tao_tmp_pointer =
    ACE_static_cast (ReplyEndTimePolicy *, _tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

Messaging::ReplyEndTimePolicy_ptr
Messaging::ReplyEndTimePolicy::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return ReplyEndTimePolicy::_nil ();
    }
  
  ReplyEndTimePolicy_ptr proxy =
    dynamic_cast<ReplyEndTimePolicy_ptr> (_tao_objref);
  
  return ReplyEndTimePolicy::_duplicate (proxy);
}

Messaging::ReplyEndTimePolicy_ptr
Messaging::ReplyEndTimePolicy::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return ReplyEndTimePolicy::_nil ();
    }
  
  ReplyEndTimePolicy_ptr proxy =
    dynamic_cast<ReplyEndTimePolicy_ptr> (_tao_objref);
  
  return ReplyEndTimePolicy::_duplicate (proxy);
}

Messaging::ReplyEndTimePolicy_ptr
Messaging::ReplyEndTimePolicy::_duplicate (ReplyEndTimePolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
Messaging::ReplyEndTimePolicy::_is_a (
    const char *value
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Policy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/Messaging/ReplyEndTimePolicy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return 0;
    }
}

const char* Messaging::ReplyEndTimePolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/ReplyEndTimePolicy:1.0";
}

CORBA::Boolean
Messaging::ReplyEndTimePolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_ReplyEndTimePolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  45,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5265), 
  ACE_NTOHL (0x706c7945), 
  ACE_NTOHL (0x6e645469), 
  ACE_NTOHL (0x6d65506f), 
  ACE_NTOHL (0x6c696379), 
  ACE_NTOHL (0x3a312e30), 
  ACE_NTOHL (0x0),  // repository ID = IDL:omg.org/Messaging/ReplyEndTimePolicy:1.0
    19,
  ACE_NTOHL (0x5265706c), 
  ACE_NTOHL (0x79456e64), 
  ACE_NTOHL (0x54696d65), 
  ACE_NTOHL (0x506f6c69), 
  ACE_NTOHL (0x63790000),  // name = ReplyEndTimePolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_ReplyEndTimePolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_ReplyEndTimePolicy),
    (char *) &_oc_Messaging_ReplyEndTimePolicy,
    0,
    sizeof (Messaging::ReplyEndTimePolicy)
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr _tc_ReplyEndTimePolicy =
    &_tc_TAO_tc_Messaging_ReplyEndTimePolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for Messaging::RelativeRequestTimeoutPolicy.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::RelativeRequestTimeoutPolicy_ptr
TAO::Objref_Traits<Messaging::RelativeRequestTimeoutPolicy>::tao_duplicate (
    Messaging::RelativeRequestTimeoutPolicy_ptr p
  )
{
  return Messaging::RelativeRequestTimeoutPolicy::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<Messaging::RelativeRequestTimeoutPolicy>::tao_release (
    Messaging::RelativeRequestTimeoutPolicy_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::RelativeRequestTimeoutPolicy_ptr
TAO::Objref_Traits<Messaging::RelativeRequestTimeoutPolicy>::tao_nil (void)
{
  return Messaging::RelativeRequestTimeoutPolicy::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<Messaging::RelativeRequestTimeoutPolicy>::tao_marshal (
    Messaging::RelativeRequestTimeoutPolicy_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return p->marshal (cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*Messaging__TAO_RelativeRequestTimeoutPolicy_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

Messaging::RelativeRequestTimeoutPolicy::RelativeRequestTimeoutPolicy (void)
{}

Messaging::RelativeRequestTimeoutPolicy::~RelativeRequestTimeoutPolicy (void)
{}

void 
Messaging::RelativeRequestTimeoutPolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  RelativeRequestTimeoutPolicy *_tao_tmp_pointer =
    ACE_static_cast (RelativeRequestTimeoutPolicy *, _tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

Messaging::RelativeRequestTimeoutPolicy_ptr
Messaging::RelativeRequestTimeoutPolicy::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return RelativeRequestTimeoutPolicy::_nil ();
    }
  
  RelativeRequestTimeoutPolicy_ptr proxy =
    dynamic_cast<RelativeRequestTimeoutPolicy_ptr> (_tao_objref);
  
  return RelativeRequestTimeoutPolicy::_duplicate (proxy);
}

Messaging::RelativeRequestTimeoutPolicy_ptr
Messaging::RelativeRequestTimeoutPolicy::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return RelativeRequestTimeoutPolicy::_nil ();
    }
  
  RelativeRequestTimeoutPolicy_ptr proxy =
    dynamic_cast<RelativeRequestTimeoutPolicy_ptr> (_tao_objref);
  
  return RelativeRequestTimeoutPolicy::_duplicate (proxy);
}

Messaging::RelativeRequestTimeoutPolicy_ptr
Messaging::RelativeRequestTimeoutPolicy::_duplicate (RelativeRequestTimeoutPolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
Messaging::RelativeRequestTimeoutPolicy::_is_a (
    const char *value
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Policy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/Messaging/RelativeRequestTimeoutPolicy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return 0;
    }
}

const char* Messaging::RelativeRequestTimeoutPolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/RelativeRequestTimeoutPolicy:1.0";
}

CORBA::Boolean
Messaging::RelativeRequestTimeoutPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_RelativeRequestTimeoutPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  55,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5265), 
  ACE_NTOHL (0x6c617469), 
  ACE_NTOHL (0x76655265), 
  ACE_NTOHL (0x71756573), 
  ACE_NTOHL (0x7454696d), 
  ACE_NTOHL (0x656f7574), 
  ACE_NTOHL (0x506f6c69), 
  ACE_NTOHL (0x63793a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/RelativeRequestTimeoutPolicy:1.0
    29,
  ACE_NTOHL (0x52656c61), 
  ACE_NTOHL (0x74697665), 
  ACE_NTOHL (0x52657175), 
  ACE_NTOHL (0x65737454), 
  ACE_NTOHL (0x696d656f), 
  ACE_NTOHL (0x7574506f), 
  ACE_NTOHL (0x6c696379), 
  ACE_NTOHL (0x0),  // name = RelativeRequestTimeoutPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_RelativeRequestTimeoutPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_RelativeRequestTimeoutPolicy),
    (char *) &_oc_Messaging_RelativeRequestTimeoutPolicy,
    0,
    sizeof (Messaging::RelativeRequestTimeoutPolicy)
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr _tc_RelativeRequestTimeoutPolicy =
    &_tc_TAO_tc_Messaging_RelativeRequestTimeoutPolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_RoutingTypeRange[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  43,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f526f), 
  ACE_NTOHL (0x7574696e), 
  ACE_NTOHL (0x67547970), 
  ACE_NTOHL (0x6552616e), 
  ACE_NTOHL (0x67653a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/RoutingTypeRange:1.0
    17,
  ACE_NTOHL (0x526f7574), 
  ACE_NTOHL (0x696e6754), 
  ACE_NTOHL (0x79706552), 
  ACE_NTOHL (0x616e6765), 
  ACE_NTOHL (0x0),  // name = RoutingTypeRange
  2, // member count
    4,
  ACE_NTOHL (0x6d696e00),  // name = min
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    38,
    ACE_NTOHL (0x49444c3a), 
    ACE_NTOHL (0x6f6d672e), 
    ACE_NTOHL (0x6f72672f), 
    ACE_NTOHL (0x4d657373), 
    ACE_NTOHL (0x6167696e), 
    ACE_NTOHL (0x672f526f), 
    ACE_NTOHL (0x7574696e), 
    ACE_NTOHL (0x67547970), 
    ACE_NTOHL (0x653a312e), 
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/Messaging/RoutingType:1.0
        12,
    ACE_NTOHL (0x526f7574), 
    ACE_NTOHL (0x696e6754), 
    ACE_NTOHL (0x79706500),  // name = RoutingType
        CORBA::tk_short,


  4,
  ACE_NTOHL (0x6d617800),  // name = max
    CORBA::tk_alias, // typecode kind for typedefs
  68, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    38,
    ACE_NTOHL (0x49444c3a), 
    ACE_NTOHL (0x6f6d672e), 
    ACE_NTOHL (0x6f72672f), 
    ACE_NTOHL (0x4d657373), 
    ACE_NTOHL (0x6167696e), 
    ACE_NTOHL (0x672f526f), 
    ACE_NTOHL (0x7574696e), 
    ACE_NTOHL (0x67547970), 
    ACE_NTOHL (0x653a312e), 
    ACE_NTOHL (0x30000000),  // repository ID = IDL:omg.org/Messaging/RoutingType:1.0
        12,
    ACE_NTOHL (0x526f7574), 
    ACE_NTOHL (0x696e6754), 
    ACE_NTOHL (0x79706500),  // name = RoutingType
        CORBA::tk_short,


};

static CORBA::TypeCode _tc_TAO_tc_Messaging_RoutingTypeRange (
    CORBA::tk_struct,
    sizeof (_oc_Messaging_RoutingTypeRange),
    (char *) &_oc_Messaging_RoutingTypeRange,
    0,
    sizeof (Messaging::RoutingTypeRange)
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr _tc_RoutingTypeRange =
    &_tc_TAO_tc_Messaging_RoutingTypeRange;
}

// TAO_IDL - Generated from 
// be\be_visitor_structure/structure_cs.cpp:66

void 
Messaging::RoutingTypeRange::_tao_any_destructor (
    void *_tao_void_pointer
  )
{
  RoutingTypeRange *_tao_tmp_pointer =
    ACE_static_cast (RoutingTypeRange *, _tao_void_pointer);
  delete _tao_tmp_pointer;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for Messaging::RoutingPolicy.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::RoutingPolicy_ptr
TAO::Objref_Traits<Messaging::RoutingPolicy>::tao_duplicate (
    Messaging::RoutingPolicy_ptr p
  )
{
  return Messaging::RoutingPolicy::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<Messaging::RoutingPolicy>::tao_release (
    Messaging::RoutingPolicy_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::RoutingPolicy_ptr
TAO::Objref_Traits<Messaging::RoutingPolicy>::tao_nil (void)
{
  return Messaging::RoutingPolicy::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<Messaging::RoutingPolicy>::tao_marshal (
    Messaging::RoutingPolicy_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return p->marshal (cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*Messaging__TAO_RoutingPolicy_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

Messaging::RoutingPolicy::RoutingPolicy (void)
{}

Messaging::RoutingPolicy::~RoutingPolicy (void)
{}

void 
Messaging::RoutingPolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  RoutingPolicy *_tao_tmp_pointer =
    ACE_static_cast (RoutingPolicy *, _tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

Messaging::RoutingPolicy_ptr
Messaging::RoutingPolicy::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return RoutingPolicy::_nil ();
    }
  
  RoutingPolicy_ptr proxy =
    dynamic_cast<RoutingPolicy_ptr> (_tao_objref);
  
  return RoutingPolicy::_duplicate (proxy);
}

Messaging::RoutingPolicy_ptr
Messaging::RoutingPolicy::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return RoutingPolicy::_nil ();
    }
  
  RoutingPolicy_ptr proxy =
    dynamic_cast<RoutingPolicy_ptr> (_tao_objref);
  
  return RoutingPolicy::_duplicate (proxy);
}

Messaging::RoutingPolicy_ptr
Messaging::RoutingPolicy::_duplicate (RoutingPolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
Messaging::RoutingPolicy::_is_a (
    const char *value
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Policy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/Messaging/RoutingPolicy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return 0;
    }
}

const char* Messaging::RoutingPolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/RoutingPolicy:1.0";
}

CORBA::Boolean
Messaging::RoutingPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_RoutingPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  40,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f526f), 
  ACE_NTOHL (0x7574696e), 
  ACE_NTOHL (0x67506f6c), 
  ACE_NTOHL (0x6963793a), 
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/Messaging/RoutingPolicy:1.0
    14,
  ACE_NTOHL (0x526f7574), 
  ACE_NTOHL (0x696e6750), 
  ACE_NTOHL (0x6f6c6963), 
  ACE_NTOHL (0x79000000),  // name = RoutingPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_RoutingPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_RoutingPolicy),
    (char *) &_oc_Messaging_RoutingPolicy,
    0,
    sizeof (Messaging::RoutingPolicy)
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr _tc_RoutingPolicy =
    &_tc_TAO_tc_Messaging_RoutingPolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for Messaging::MaxHopsPolicy.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::MaxHopsPolicy_ptr
TAO::Objref_Traits<Messaging::MaxHopsPolicy>::tao_duplicate (
    Messaging::MaxHopsPolicy_ptr p
  )
{
  return Messaging::MaxHopsPolicy::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<Messaging::MaxHopsPolicy>::tao_release (
    Messaging::MaxHopsPolicy_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::MaxHopsPolicy_ptr
TAO::Objref_Traits<Messaging::MaxHopsPolicy>::tao_nil (void)
{
  return Messaging::MaxHopsPolicy::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<Messaging::MaxHopsPolicy>::tao_marshal (
    Messaging::MaxHopsPolicy_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return p->marshal (cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*Messaging__TAO_MaxHopsPolicy_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

Messaging::MaxHopsPolicy::MaxHopsPolicy (void)
{}

Messaging::MaxHopsPolicy::~MaxHopsPolicy (void)
{}

void 
Messaging::MaxHopsPolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  MaxHopsPolicy *_tao_tmp_pointer =
    ACE_static_cast (MaxHopsPolicy *, _tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

Messaging::MaxHopsPolicy_ptr
Messaging::MaxHopsPolicy::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return MaxHopsPolicy::_nil ();
    }
  
  MaxHopsPolicy_ptr proxy =
    dynamic_cast<MaxHopsPolicy_ptr> (_tao_objref);
  
  return MaxHopsPolicy::_duplicate (proxy);
}

Messaging::MaxHopsPolicy_ptr
Messaging::MaxHopsPolicy::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return MaxHopsPolicy::_nil ();
    }
  
  MaxHopsPolicy_ptr proxy =
    dynamic_cast<MaxHopsPolicy_ptr> (_tao_objref);
  
  return MaxHopsPolicy::_duplicate (proxy);
}

Messaging::MaxHopsPolicy_ptr
Messaging::MaxHopsPolicy::_duplicate (MaxHopsPolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
Messaging::MaxHopsPolicy::_is_a (
    const char *value
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Policy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/Messaging/MaxHopsPolicy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return 0;
    }
}

const char* Messaging::MaxHopsPolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/MaxHopsPolicy:1.0";
}

CORBA::Boolean
Messaging::MaxHopsPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_MaxHopsPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  40,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f4d61), 
  ACE_NTOHL (0x78486f70), 
  ACE_NTOHL (0x73506f6c), 
  ACE_NTOHL (0x6963793a), 
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:omg.org/Messaging/MaxHopsPolicy:1.0
    14,
  ACE_NTOHL (0x4d617848), 
  ACE_NTOHL (0x6f707350), 
  ACE_NTOHL (0x6f6c6963), 
  ACE_NTOHL (0x79000000),  // name = MaxHopsPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_MaxHopsPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_MaxHopsPolicy),
    (char *) &_oc_Messaging_MaxHopsPolicy,
    0,
    sizeof (Messaging::MaxHopsPolicy)
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr _tc_MaxHopsPolicy =
    &_tc_TAO_tc_Messaging_MaxHopsPolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/interface_cs.cpp:60

// Traits specializations for Messaging::QueueOrderPolicy.

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::QueueOrderPolicy_ptr
TAO::Objref_Traits<Messaging::QueueOrderPolicy>::tao_duplicate (
    Messaging::QueueOrderPolicy_ptr p
  )
{
  return Messaging::QueueOrderPolicy::_duplicate (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
void
TAO::Objref_Traits<Messaging::QueueOrderPolicy>::tao_release (
    Messaging::QueueOrderPolicy_ptr p
  )
{
  CORBA::release (p);
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
Messaging::QueueOrderPolicy_ptr
TAO::Objref_Traits<Messaging::QueueOrderPolicy>::tao_nil (void)
{
  return Messaging::QueueOrderPolicy::_nil ();
}

ACE_TEMPLATE_CLASS_MEMBER_SPECIALIZATION
CORBA::Boolean
TAO::Objref_Traits<Messaging::QueueOrderPolicy>::tao_marshal (
    Messaging::QueueOrderPolicy_ptr p,
    TAO_OutputCDR & cdr
  )
{
  return p->marshal (cdr);
}

// Function pointer for collocation factory initialization.
TAO::Collocation_Proxy_Broker * 
(*Messaging__TAO_QueueOrderPolicy_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  ) = 0;

Messaging::QueueOrderPolicy::QueueOrderPolicy (void)
{}

Messaging::QueueOrderPolicy::~QueueOrderPolicy (void)
{}

void 
Messaging::QueueOrderPolicy::_tao_any_destructor (void *_tao_void_pointer)
{
  QueueOrderPolicy *_tao_tmp_pointer =
    ACE_static_cast (QueueOrderPolicy *, _tao_void_pointer);
  CORBA::release (_tao_tmp_pointer);
}

Messaging::QueueOrderPolicy_ptr
Messaging::QueueOrderPolicy::_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return QueueOrderPolicy::_nil ();
    }
  
  QueueOrderPolicy_ptr proxy =
    dynamic_cast<QueueOrderPolicy_ptr> (_tao_objref);
  
  return QueueOrderPolicy::_duplicate (proxy);
}

Messaging::QueueOrderPolicy_ptr
Messaging::QueueOrderPolicy::_unchecked_narrow (
    CORBA::Object_ptr _tao_objref
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (CORBA::is_nil (_tao_objref))
    {
      return QueueOrderPolicy::_nil ();
    }
  
  QueueOrderPolicy_ptr proxy =
    dynamic_cast<QueueOrderPolicy_ptr> (_tao_objref);
  
  return QueueOrderPolicy::_duplicate (proxy);
}

Messaging::QueueOrderPolicy_ptr
Messaging::QueueOrderPolicy::_duplicate (QueueOrderPolicy_ptr obj)
{
  if (! CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

CORBA::Boolean
Messaging::QueueOrderPolicy::_is_a (
    const char *value
    ACE_ENV_ARG_DECL_NOT_USED
  )
{
  if (
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Policy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/Messaging/QueueOrderPolicy:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) ||
      !ACE_OS::strcmp (
          (char *)value,
          "IDL:omg.org/CORBA/Object:1.0"
        )
     )
    {
      return 1; // success using local knowledge
    }
  else
    {
      return 0;
    }
}

const char* Messaging::QueueOrderPolicy::_interface_repository_id (void) const
{
  return "IDL:omg.org/Messaging/QueueOrderPolicy:1.0";
}

CORBA::Boolean
Messaging::QueueOrderPolicy::marshal (TAO_OutputCDR &)
{
  return 0;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:284

static const CORBA::Long _oc_Messaging_QueueOrderPolicy[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  43,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x6f6d672e), 
  ACE_NTOHL (0x6f72672f), 
  ACE_NTOHL (0x4d657373), 
  ACE_NTOHL (0x6167696e), 
  ACE_NTOHL (0x672f5175), 
  ACE_NTOHL (0x6575654f), 
  ACE_NTOHL (0x72646572), 
  ACE_NTOHL (0x506f6c69), 
  ACE_NTOHL (0x63793a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:omg.org/Messaging/QueueOrderPolicy:1.0
    17,
  ACE_NTOHL (0x51756575), 
  ACE_NTOHL (0x654f7264), 
  ACE_NTOHL (0x6572506f), 
  ACE_NTOHL (0x6c696379), 
  ACE_NTOHL (0x0),  // name = QueueOrderPolicy
  };

static CORBA::TypeCode _tc_TAO_tc_Messaging_QueueOrderPolicy (
    CORBA::tk_objref,
    sizeof (_oc_Messaging_QueueOrderPolicy),
    (char *) &_oc_Messaging_QueueOrderPolicy,
    0,
    sizeof (Messaging::QueueOrderPolicy)
  );

namespace Messaging
{
  ::CORBA::TypeCode_ptr _tc_QueueOrderPolicy =
    &_tc_TAO_tc_Messaging_QueueOrderPolicy;
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RebindPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RebindPolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RebindPolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RebindPolicy_ptr _tao_elem
  )
{
  Messaging::RebindPolicy_ptr _tao_objptr =
    Messaging::RebindPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RebindPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::RebindPolicy>::insert (
      _tao_any,
      Messaging::RebindPolicy::_tao_any_destructor,
      Messaging::_tc_RebindPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RebindPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::RebindPolicy>::extract (
        _tao_any,
        Messaging::RebindPolicy::_tao_any_destructor,
        Messaging::_tc_RebindPolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const Messaging::PriorityRange &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<Messaging::PriorityRange>::insert_copy (
      _tao_any,
      Messaging::PriorityRange::_tao_any_destructor,
      Messaging::_tc_PriorityRange,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    Messaging::PriorityRange *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<Messaging::PriorityRange>::insert (
      _tao_any,
      Messaging::PriorityRange::_tao_any_destructor,
      Messaging::_tc_PriorityRange,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::PriorityRange *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const Messaging::PriorityRange *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const Messaging::PriorityRange *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<Messaging::PriorityRange>::extract (
        _tao_any,
        Messaging::PriorityRange::_tao_any_destructor,
        Messaging::_tc_PriorityRange,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestPriorityPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestPriorityPolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestPriorityPolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RequestPriorityPolicy_ptr _tao_elem
  )
{
  Messaging::RequestPriorityPolicy_ptr _tao_objptr =
    Messaging::RequestPriorityPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RequestPriorityPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::RequestPriorityPolicy>::insert (
      _tao_any,
      Messaging::RequestPriorityPolicy::_tao_any_destructor,
      Messaging::_tc_RequestPriorityPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RequestPriorityPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::RequestPriorityPolicy>::extract (
        _tao_any,
        Messaging::RequestPriorityPolicy::_tao_any_destructor,
        Messaging::_tc_RequestPriorityPolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyPriorityPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyPriorityPolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyPriorityPolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::ReplyPriorityPolicy_ptr _tao_elem
  )
{
  Messaging::ReplyPriorityPolicy_ptr _tao_objptr =
    Messaging::ReplyPriorityPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::ReplyPriorityPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::ReplyPriorityPolicy>::insert (
      _tao_any,
      Messaging::ReplyPriorityPolicy::_tao_any_destructor,
      Messaging::_tc_ReplyPriorityPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::ReplyPriorityPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::ReplyPriorityPolicy>::extract (
        _tao_any,
        Messaging::ReplyPriorityPolicy::_tao_any_destructor,
        Messaging::_tc_ReplyPriorityPolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestStartTimePolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestStartTimePolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestStartTimePolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RequestStartTimePolicy_ptr _tao_elem
  )
{
  Messaging::RequestStartTimePolicy_ptr _tao_objptr =
    Messaging::RequestStartTimePolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RequestStartTimePolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::RequestStartTimePolicy>::insert (
      _tao_any,
      Messaging::RequestStartTimePolicy::_tao_any_destructor,
      Messaging::_tc_RequestStartTimePolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RequestStartTimePolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::RequestStartTimePolicy>::extract (
        _tao_any,
        Messaging::RequestStartTimePolicy::_tao_any_destructor,
        Messaging::_tc_RequestStartTimePolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestEndTimePolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestEndTimePolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RequestEndTimePolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RequestEndTimePolicy_ptr _tao_elem
  )
{
  Messaging::RequestEndTimePolicy_ptr _tao_objptr =
    Messaging::RequestEndTimePolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RequestEndTimePolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::RequestEndTimePolicy>::insert (
      _tao_any,
      Messaging::RequestEndTimePolicy::_tao_any_destructor,
      Messaging::_tc_RequestEndTimePolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RequestEndTimePolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::RequestEndTimePolicy>::extract (
        _tao_any,
        Messaging::RequestEndTimePolicy::_tao_any_destructor,
        Messaging::_tc_RequestEndTimePolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyStartTimePolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyStartTimePolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyStartTimePolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::ReplyStartTimePolicy_ptr _tao_elem
  )
{
  Messaging::ReplyStartTimePolicy_ptr _tao_objptr =
    Messaging::ReplyStartTimePolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::ReplyStartTimePolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::ReplyStartTimePolicy>::insert (
      _tao_any,
      Messaging::ReplyStartTimePolicy::_tao_any_destructor,
      Messaging::_tc_ReplyStartTimePolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::ReplyStartTimePolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::ReplyStartTimePolicy>::extract (
        _tao_any,
        Messaging::ReplyStartTimePolicy::_tao_any_destructor,
        Messaging::_tc_ReplyStartTimePolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyEndTimePolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyEndTimePolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::ReplyEndTimePolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::ReplyEndTimePolicy_ptr _tao_elem
  )
{
  Messaging::ReplyEndTimePolicy_ptr _tao_objptr =
    Messaging::ReplyEndTimePolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::ReplyEndTimePolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::ReplyEndTimePolicy>::insert (
      _tao_any,
      Messaging::ReplyEndTimePolicy::_tao_any_destructor,
      Messaging::_tc_ReplyEndTimePolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::ReplyEndTimePolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::ReplyEndTimePolicy>::extract (
        _tao_any,
        Messaging::ReplyEndTimePolicy::_tao_any_destructor,
        Messaging::_tc_ReplyEndTimePolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RelativeRequestTimeoutPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RelativeRequestTimeoutPolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RelativeRequestTimeoutPolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RelativeRequestTimeoutPolicy_ptr _tao_elem
  )
{
  Messaging::RelativeRequestTimeoutPolicy_ptr _tao_objptr =
    Messaging::RelativeRequestTimeoutPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RelativeRequestTimeoutPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::RelativeRequestTimeoutPolicy>::insert (
      _tao_any,
      Messaging::RelativeRequestTimeoutPolicy::_tao_any_destructor,
      Messaging::_tc_RelativeRequestTimeoutPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RelativeRequestTimeoutPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::RelativeRequestTimeoutPolicy>::extract (
        _tao_any,
        Messaging::RelativeRequestTimeoutPolicy::_tao_any_destructor,
        Messaging::_tc_RelativeRequestTimeoutPolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const Messaging::RoutingTypeRange &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<Messaging::RoutingTypeRange>::insert_copy (
      _tao_any,
      Messaging::RoutingTypeRange::_tao_any_destructor,
      Messaging::_tc_RoutingTypeRange,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RoutingTypeRange *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<Messaging::RoutingTypeRange>::insert (
      _tao_any,
      Messaging::RoutingTypeRange::_tao_any_destructor,
      Messaging::_tc_RoutingTypeRange,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RoutingTypeRange *&_tao_elem
  )
{
  return _tao_any >>= ACE_const_cast (
      const Messaging::RoutingTypeRange *&,
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const Messaging::RoutingTypeRange *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<Messaging::RoutingTypeRange>::extract (
        _tao_any,
        Messaging::RoutingTypeRange::_tao_any_destructor,
        Messaging::_tc_RoutingTypeRange,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RoutingPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RoutingPolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::RoutingPolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RoutingPolicy_ptr _tao_elem
  )
{
  Messaging::RoutingPolicy_ptr _tao_objptr =
    Messaging::RoutingPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::RoutingPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::RoutingPolicy>::insert (
      _tao_any,
      Messaging::RoutingPolicy::_tao_any_destructor,
      Messaging::_tc_RoutingPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::RoutingPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::RoutingPolicy>::extract (
        _tao_any,
        Messaging::RoutingPolicy::_tao_any_destructor,
        Messaging::_tc_RoutingPolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::MaxHopsPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::MaxHopsPolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::MaxHopsPolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::MaxHopsPolicy_ptr _tao_elem
  )
{
  Messaging::MaxHopsPolicy_ptr _tao_objptr =
    Messaging::MaxHopsPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::MaxHopsPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::MaxHopsPolicy>::insert (
      _tao_any,
      Messaging::MaxHopsPolicy::_tao_any_destructor,
      Messaging::_tc_MaxHopsPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::MaxHopsPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::MaxHopsPolicy>::extract (
        _tao_any,
        Messaging::MaxHopsPolicy::_tao_any_destructor,
        Messaging::_tc_MaxHopsPolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::QueueOrderPolicy>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::QueueOrderPolicy>::marshal_value (TAO_OutputCDR &)
{
  return 0;
}

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<Messaging::QueueOrderPolicy>::demarshal_value (TAO_InputCDR &)
{
  return 0;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::QueueOrderPolicy_ptr _tao_elem
  )
{
  Messaging::QueueOrderPolicy_ptr _tao_objptr =
    Messaging::QueueOrderPolicy::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    Messaging::QueueOrderPolicy_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<Messaging::QueueOrderPolicy>::insert (
      _tao_any,
      Messaging::QueueOrderPolicy::_tao_any_destructor,
      Messaging::_tc_QueueOrderPolicy,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    Messaging::QueueOrderPolicy_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<Messaging::QueueOrderPolicy>::extract (
        _tao_any,
        Messaging::QueueOrderPolicy::_tao_any_destructor,
        Messaging::_tc_QueueOrderPolicy,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Messaging::PriorityRange &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.min) &&
    (strm << _tao_aggregate.max);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Messaging::PriorityRange &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.min) &&
    (strm >> _tao_aggregate.max);
}

// TAO_IDL - Generated from
// be\be_visitor_structure/cdr_op_cs.cpp:61

CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Messaging::RoutingTypeRange &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.min) &&
    (strm << _tao_aggregate.max);
}

CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Messaging::RoutingTypeRange &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.min) &&
    (strm >> _tao_aggregate.max);
}

// TAO_IDL - Generated from
// be\be_visitor_root/root.cpp:1633

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)

  template class
    TAO::Objref_Traits<
        Messaging::RebindPolicy
      >;

  template class
    TAO_Objref_Var_T<
        Messaging::RebindPolicy
      >;
  
  template class
    TAO_Objref_Out_T<
        Messaging::RebindPolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::RebindPolicy
      >;

  template class
    TAO_Fixed_Var_T<
        Messaging::PriorityRange
      >;

  template class
    TAO_Var_Base_T<
        Messaging::PriorityRange
      >;

  template class
    TAO::Any_Dual_Impl_T<
        Messaging::PriorityRange
      >;

  template class
    TAO::Objref_Traits<
        Messaging::RequestPriorityPolicy
      >;

  template class
    TAO_Objref_Var_T<
        Messaging::RequestPriorityPolicy
      >;
  
  template class
    TAO_Objref_Out_T<
        Messaging::RequestPriorityPolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::RequestPriorityPolicy
      >;

  template class
    TAO::Objref_Traits<
        Messaging::ReplyPriorityPolicy
      >;

  template class
    TAO_Objref_Var_T<
        Messaging::ReplyPriorityPolicy
      >;
  
  template class
    TAO_Objref_Out_T<
        Messaging::ReplyPriorityPolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::ReplyPriorityPolicy
      >;

  template class
    TAO::Objref_Traits<
        Messaging::RequestStartTimePolicy
      >;

  template class
    TAO_Objref_Var_T<
        Messaging::RequestStartTimePolicy
      >;
  
  template class
    TAO_Objref_Out_T<
        Messaging::RequestStartTimePolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::RequestStartTimePolicy
      >;

  template class
    TAO::Objref_Traits<
        Messaging::RequestEndTimePolicy
      >;

  template class
    TAO_Objref_Var_T<
        Messaging::RequestEndTimePolicy
      >;
  
  template class
    TAO_Objref_Out_T<
        Messaging::RequestEndTimePolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::RequestEndTimePolicy
      >;

  template class
    TAO::Objref_Traits<
        Messaging::ReplyStartTimePolicy
      >;

  template class
    TAO_Objref_Var_T<
        Messaging::ReplyStartTimePolicy
      >;
  
  template class
    TAO_Objref_Out_T<
        Messaging::ReplyStartTimePolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::ReplyStartTimePolicy
      >;

  template class
    TAO::Objref_Traits<
        Messaging::ReplyEndTimePolicy
      >;

  template class
    TAO_Objref_Var_T<
        Messaging::ReplyEndTimePolicy
      >;
  
  template class
    TAO_Objref_Out_T<
        Messaging::ReplyEndTimePolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::ReplyEndTimePolicy
      >;

  template class
    TAO::Objref_Traits<
        Messaging::RelativeRequestTimeoutPolicy
      >;

  template class
    TAO_Objref_Var_T<
        Messaging::RelativeRequestTimeoutPolicy
      >;
  
  template class
    TAO_Objref_Out_T<
        Messaging::RelativeRequestTimeoutPolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::RelativeRequestTimeoutPolicy
      >;

  template class
    TAO_Fixed_Var_T<
        Messaging::RoutingTypeRange
      >;

  template class
    TAO_Var_Base_T<
        Messaging::RoutingTypeRange
      >;

  template class
    TAO::Any_Dual_Impl_T<
        Messaging::RoutingTypeRange
      >;

  template class
    TAO::Objref_Traits<
        Messaging::RoutingPolicy
      >;

  template class
    TAO_Objref_Var_T<
        Messaging::RoutingPolicy
      >;
  
  template class
    TAO_Objref_Out_T<
        Messaging::RoutingPolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::RoutingPolicy
      >;

  template class
    TAO::Objref_Traits<
        Messaging::MaxHopsPolicy
      >;

  template class
    TAO_Objref_Var_T<
        Messaging::MaxHopsPolicy
      >;
  
  template class
    TAO_Objref_Out_T<
        Messaging::MaxHopsPolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::MaxHopsPolicy
      >;

  template class
    TAO::Objref_Traits<
        Messaging::QueueOrderPolicy
      >;

  template class
    TAO_Objref_Var_T<
        Messaging::QueueOrderPolicy
      >;
  
  template class
    TAO_Objref_Out_T<
        Messaging::QueueOrderPolicy
      >;

  template class
    TAO::Any_Impl_T<
        Messaging::QueueOrderPolicy
      >;

#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)

# pragma instantiate \
    TAO::Objref_Traits< \
        Messaging::RebindPolicy \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::RebindPolicy
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::RebindPolicy
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::RebindPolicy \
      >

# pragma instantiate \
    TAO_Fixed_Var_T< \
        Messaging::PriorityRange \
      >

# pragma instantiate \
    TAO_Var_Base_T< \
        Messaging::PriorityRange \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        Messaging::PriorityRange \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        Messaging::RequestPriorityPolicy \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::RequestPriorityPolicy
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::RequestPriorityPolicy
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::RequestPriorityPolicy \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        Messaging::ReplyPriorityPolicy \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::ReplyPriorityPolicy
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::ReplyPriorityPolicy
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::ReplyPriorityPolicy \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        Messaging::RequestStartTimePolicy \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::RequestStartTimePolicy
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::RequestStartTimePolicy
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::RequestStartTimePolicy \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        Messaging::RequestEndTimePolicy \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::RequestEndTimePolicy
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::RequestEndTimePolicy
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::RequestEndTimePolicy \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        Messaging::ReplyStartTimePolicy \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::ReplyStartTimePolicy
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::ReplyStartTimePolicy
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::ReplyStartTimePolicy \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        Messaging::ReplyEndTimePolicy \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::ReplyEndTimePolicy
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::ReplyEndTimePolicy
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::ReplyEndTimePolicy \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        Messaging::RelativeRequestTimeoutPolicy \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::RelativeRequestTimeoutPolicy
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::RelativeRequestTimeoutPolicy
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::RelativeRequestTimeoutPolicy \
      >

# pragma instantiate \
    TAO_Fixed_Var_T< \
        Messaging::RoutingTypeRange \
      >

# pragma instantiate \
    TAO_Var_Base_T< \
        Messaging::RoutingTypeRange \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        Messaging::RoutingTypeRange \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        Messaging::RoutingPolicy \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::RoutingPolicy
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::RoutingPolicy
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::RoutingPolicy \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        Messaging::MaxHopsPolicy \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::MaxHopsPolicy
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::MaxHopsPolicy
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::MaxHopsPolicy \
      >

# pragma instantiate \
    TAO::Objref_Traits< \
        Messaging::QueueOrderPolicy \
      >

# pragma instantiate \
    TAO_Objref_Var_T< \
        Messaging::QueueOrderPolicy
      >
  
# pragma instantiate \
    TAO_Objref_Out_T< \
        Messaging::QueueOrderPolicy
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        Messaging::QueueOrderPolicy \
      >

#endif /* !ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */ 

