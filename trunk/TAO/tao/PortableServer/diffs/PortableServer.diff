--- orig/PortableServerC.h	Tue Feb  5 16:29:50 2002
+++ PortableServerC.h	Wed Feb  6 19:07:49 2002
@@ -23,14 +23,17 @@
 #define _TAO_IDL_ORIG_PORTABLESERVERC_H_
 
 #include "ace/pre.h"
-#include "tao/corba.h"
+#include "tao/corbafwd.h"
 
 #if !defined (ACE_LACKS_PRAGMA_ONCE)
 # pragma once
 #endif /* ACE_LACKS_PRAGMA_ONCE */
 
 #include "portableserver_export.h"
-#include "CurrentC.h"
+#include "tao/CurrentC.h"
+#include "tao/Sequence.h"
+#include "tao/Exception.h"
+#include "tao/PolicyC.h"
 
 #if defined (TAO_EXPORT_MACRO)
 #undef TAO_EXPORT_MACRO
@@ -55,8 +58,23 @@
 #pragma option push -w-rvl -w-rch -w-ccc -w-inl
 #endif /* __BORLANDC__ */
 
+class TAO_ServantBase;
+class TAO_ServantBase_var;
+class TAO_RefCountServantBase;
+class TAO_Local_ServantBase;
+class TAO_DynamicImplementation;
+class TAO_POA;
+
 TAO_NAMESPACE  PortableServer
 {
+  typedef TAO_ServantBase ServantBase;
+  typedef TAO_ServantBase_var ServantBase_var;
+  typedef TAO_RefCountServantBase RefCountServantBase;
+  typedef ServantBase *Servant;
+
+  typedef TAO_Local_ServantBase LocalServantBase;
+  typedef TAO_DynamicImplementation DynamicImplementation;
+
   class POA;
   
 #if !defined (_PORTABLESERVER_POA___PTR_CH_)
@@ -422,6 +440,7 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ObjectId;
   
+#if (TAO_HAS_MINIMUM_CORBA == 0)
   
 #if !defined (_PORTABLESERVER_FORWARDREQUEST_CH_)
 #define _PORTABLESERVER_FORWARDREQUEST_CH_
@@ -468,6 +487,9 @@
   
 #endif /* end #if !defined */
   
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
+
+#if (TAO_HAS_MINIMUM_POA == 0)
   
 #if !defined (_PORTABLESERVER_NOTAGROUPOBJECT_CH_)
 #define _PORTABLESERVER_NOTAGROUPOBJECT_CH_
@@ -673,6 +695,8 @@
   
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_IDs;
   
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong THREAD_POLICY_ID;
   
   TAO_NAMESPACE_STORAGE_CLASS const CORBA::ULong LIFESPAN_POLICY_ID;
@@ -693,6 +717,8 @@
     SINGLE_THREAD_MODEL
   };
   
+#if (TAO_HAS_MINIMUM_POA == 0)
+
   typedef ThreadPolicyValue &ThreadPolicyValue_out;
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ThreadPolicyValue;
   
@@ -833,6 +859,8 @@
   
 #endif /* end #if !defined */
   
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
   enum LifespanPolicyValue
   {
     TRANSIENT,
@@ -1277,6 +1305,8 @@
     NO_IMPLICIT_ACTIVATION
   };
   
+#if (TAO_HAS_MINIMUM_POA == 0)
+
   typedef ImplicitActivationPolicyValue &ImplicitActivationPolicyValue_out;
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ImplicitActivationPolicyValue;
   
@@ -1417,12 +1447,16 @@
   
 #endif /* end #if !defined */
   
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
   enum ServantRetentionPolicyValue
   {
     RETAIN,
     NON_RETAIN
   };
   
+#if (TAO_HAS_MINIMUM_POA == 0)
+
   typedef ServantRetentionPolicyValue &ServantRetentionPolicyValue_out;
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ServantRetentionPolicyValue;
   
@@ -1563,6 +1597,8 @@
   
 #endif /* end #if !defined */
   
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
   enum RequestProcessingPolicyValue
   {
     USE_ACTIVE_OBJECT_MAP_ONLY,
@@ -1570,6 +1606,8 @@
     USE_SERVANT_MANAGER
   };
   
+#if (TAO_HAS_MINIMUM_POA == 0)
+
   typedef RequestProcessingPolicyValue &RequestProcessingPolicyValue_out;
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_RequestProcessingPolicyValue;
   
@@ -1710,6 +1748,7 @@
   
 #endif /* end #if !defined */
   
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
   
 #if !defined (_PORTABLESERVER_POAMANAGER___PTR_CH_)
 #define _PORTABLESERVER_POAMANAGER___PTR_CH_
@@ -1877,6 +1916,8 @@
         , PortableServer::POAManager::AdapterInactive
       )) = 0;
     
+#if (TAO_HAS_MINIMUM_POA == 0)
+
     virtual void hold_requests (
         CORBA::Boolean wait_for_completion
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
@@ -1905,6 +1946,8 @@
         , PortableServer::POAManager::AdapterInactive
       )) = 0;
     
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
     virtual ::PortableServer::POAManager::State get_state (
         
         ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
@@ -1930,6 +1973,7 @@
   
 #endif /* end #if !defined */
   
+#if (TAO_HAS_MINIMUM_POA == 0)
   
 #if !defined (_PORTABLESERVER_ADAPTERACTIVATOR___PTR_CH_)
 #define _PORTABLESERVER_ADAPTERACTIVATOR___PTR_CH_
@@ -2314,10 +2358,16 @@
         PortableServer::POA_ptr adapter
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
       )
+#if (TAO_HAS_MINIMUM_CORBA == 0)
       ACE_THROW_SPEC ((
         CORBA::SystemException
         , PortableServer::ForwardRequest
       )) = 0;
+#else
+      ACE_THROW_SPEC ((
+        CORBA::SystemException
+      )) = 0;
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
     
     virtual void etherealize (
         const PortableServer::ObjectId & oid,
@@ -2435,6 +2485,9 @@
     : public virtual PortableServer::ServantManager
   {
   public:
+
+    typedef void *Cookie;
+
   #if !defined(__GNUC__) || !defined (ACE_HAS_GNUG_PRE_2_8)
     typedef ServantLocator_ptr _ptr_type;
     typedef ServantLocator_var _var_type;
@@ -2467,10 +2520,16 @@
         PortableServer::ServantLocator::Cookie & the_cookie
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
       )
+#if (TAO_HAS_MINIMUM_CORBA == 0)
       ACE_THROW_SPEC ((
         CORBA::SystemException
         , PortableServer::ForwardRequest
       )) = 0;
+#else
+      ACE_THROW_SPEC ((
+        CORBA::SystemException
+      )) = 0;
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
     
     virtual void postinvoke (
         const PortableServer::ObjectId & oid,
@@ -2580,6 +2639,7 @@
   
 #endif /* end #if !defined */
   
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
   
 #if !defined (_PORTABLESERVER_POA_CH_)
 #define _PORTABLESERVER_POA_CH_
@@ -2613,6 +2673,10 @@
         return (POA_ptr)0;
       }
     
+    virtual TAO_POA* _tao_poa_downcast(void)
+      {
+        return 0;
+      }
     
 #if !defined (_PORTABLESERVER_POA_ADAPTERALREADYEXISTS_CH_)
 #define _PORTABLESERVER_POA_ADAPTERALREADYEXISTS_CH_
@@ -2728,6 +2792,7 @@
 
 #endif /* end #if !defined */
     
+#if (TAO_HAS_MINIMUM_POA == 0)
     
 #if !defined (_PORTABLESERVER_POA_NOSERVANT_CH_)
 #define _PORTABLESERVER_POA_NOSERVANT_CH_
@@ -2765,6 +2830,7 @@
 
 #endif /* end #if !defined */
     
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
     
 #if !defined (_PORTABLESERVER_POA_OBJECTALREADYACTIVE_CH_)
 #define _PORTABLESERVER_POA_OBJECTALREADYACTIVE_CH_
@@ -2839,7 +2905,6 @@
 
 #endif /* end #if !defined */
     
-    
 #if !defined (_PORTABLESERVER_POA_SERVANTALREADYACTIVE_CH_)
 #define _PORTABLESERVER_POA_SERVANTALREADYACTIVE_CH_
     
@@ -3018,6 +3083,8 @@
         CORBA::SystemException
       )) = 0;
     
+#if (TAO_HAS_MINIMUM_POA == 0)
+
     virtual ::PortableServer::ThreadPolicy_ptr create_thread_policy (
         PortableServer::ThreadPolicyValue value
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
@@ -3026,6 +3093,8 @@
         CORBA::SystemException
       )) = 0;
     
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
     virtual ::PortableServer::LifespanPolicy_ptr create_lifespan_policy (
         PortableServer::LifespanPolicyValue value
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
@@ -3050,6 +3119,8 @@
         CORBA::SystemException
       )) = 0;
     
+#if (TAO_HAS_MINIMUM_POA == 0)
+
     virtual ::PortableServer::ImplicitActivationPolicy_ptr create_implicit_activation_policy (
         PortableServer::ImplicitActivationPolicyValue value
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
@@ -3074,6 +3145,8 @@
         CORBA::SystemException
       )) = 0;
     
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
     virtual char * the_name (
         
         ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
@@ -3106,6 +3179,7 @@
         CORBA::SystemException
       )) = 0;
     
+#if (TAO_HAS_MINIMUM_POA == 0)
     virtual ::PortableServer::AdapterActivator_ptr the_activator (
         
         ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
@@ -3159,6 +3233,8 @@
         , PortableServer::POA::WrongPolicy
       )) = 0;
     
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
     virtual ::PortableServer::ObjectId * activate_object (
         PortableServer::Servant p_servant
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
@@ -3279,6 +3355,8 @@
         CORBA::SystemException
       )) = 0;
     
+#if (TAO_HAS_MINIMUM_POA == 0)
+
     virtual ::PortableServer::ObjectId * create_id_for_reference (
         CORBA::Object_ptr the_ref
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
@@ -3317,6 +3395,8 @@
         , PortableServer::NotAGroupObject
       )) = 0;
     
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
     virtual void *_tao_QueryInterface (ptr_arith_t type);
     
     virtual const char* _interface_repository_id (void) const;
@@ -3519,6 +3599,10 @@
 #endif /* end #if !defined */
   
   
+  TAO_NAMESPACE_STORAGE_CLASS char *ObjectId_to_string (const PortableServer::ObjectId &id);
+  TAO_NAMESPACE_STORAGE_CLASS CORBA::WChar *ObjectId_to_wstring (const PortableServer::ObjectId &id);
+  TAO_NAMESPACE_STORAGE_CLASS PortableServer::ObjectId *string_to_ObjectId (const char *id);
+  TAO_NAMESPACE_STORAGE_CLASS PortableServer::ObjectId *wstring_to_ObjectId (const CORBA::WChar *id);
 }
 TAO_NAMESPACE_CLOSE // module PortableServer
 
@@ -3526,10 +3610,18 @@
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::ObjectId*); // noncopying version
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::ObjectId *&); // deprecated
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, const PortableServer::ObjectId *&);
+
+#if (TAO_HAS_MINIMUM_CORBA == 0)
+
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, const PortableServer::ForwardRequest &); // copying version
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::ForwardRequest*); // noncopying version
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::ForwardRequest *&); // deprecated
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, const PortableServer::ForwardRequest *&);
+
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, const PortableServer::NotAGroupObject &); // copying version
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::NotAGroupObject*); // noncopying version
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::NotAGroupObject *&); // deprecated
@@ -3540,12 +3632,18 @@
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, const PortableServer::IDs *&);
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::ThreadPolicyValue);
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::ThreadPolicyValue &);
+
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::LifespanPolicyValue);
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::LifespanPolicyValue &);
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::IdUniquenessPolicyValue);
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::IdUniquenessPolicyValue &);
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::IdAssignmentPolicyValue);
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::IdAssignmentPolicyValue &);
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::ImplicitActivationPolicyValue);
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::ImplicitActivationPolicyValue &);
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::ServantRetentionPolicyValue);
@@ -3553,6 +3651,8 @@
 TAO_PortableServer_Export void operator<<= (CORBA::Any &, PortableServer::RequestProcessingPolicyValue);
 TAO_PortableServer_Export CORBA::Boolean operator>>= (const CORBA::Any &, PortableServer::RequestProcessingPolicyValue &);
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 #ifndef __ACE_INLINE__
 
 
@@ -3570,9 +3670,15 @@
 
 #endif /* _TAO_CDR_OP_PortableServer_ObjectId_H_ */
 
+#if (TAO_HAS_MINIMUM_CORBA == 0)
+
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::ForwardRequest &);
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::ForwardRequest &);
 
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::NotAGroupObject &);
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::NotAGroupObject &);
 
@@ -3593,18 +3699,26 @@
 
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::ThreadPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::ThreadPolicyValue &);
+
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::LifespanPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::LifespanPolicyValue &);
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::IdUniquenessPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::IdUniquenessPolicyValue &);
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::IdAssignmentPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::IdAssignmentPolicyValue &);
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::ImplicitActivationPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::ImplicitActivationPolicyValue &);
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::ServantRetentionPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::ServantRetentionPolicyValue &);
 TAO_PortableServer_Export CORBA::Boolean operator<< (TAO_OutputCDR &, const PortableServer::RequestProcessingPolicyValue &); // 
 TAO_PortableServer_Export CORBA::Boolean operator>> (TAO_InputCDR &, PortableServer::RequestProcessingPolicyValue &);
+
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
 
 #endif /* __ACE_INLINE__ */
 
--- orig/PortableServerC.i	Tue Feb  5 16:29:50 2002
+++ PortableServerC.i	Tue Feb  5 17:04:22 2002
@@ -627,6 +627,8 @@
 // Inline operations for exception PortableServer::ForwardRequest
 // *************************************************************
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 // *************************************************************
 // Inline operations for exception PortableServer::NotAGroupObject
 // *************************************************************
@@ -1025,6 +1027,10 @@
 
 #endif /* end #if !defined */
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
+
+#if (TAO_HAS_MINIMUM_POA == 0)
 
 #if !defined (_PORTABLESERVER_THREADPOLICY___CI_)
 #define _PORTABLESERVER_THREADPOLICY___CI_
@@ -1054,6 +1060,8 @@
 #endif /* end #if !defined */
 
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 #if !defined (_PORTABLESERVER_IMPLICITACTIVATIONPOLICY___CI_)
 #define _PORTABLESERVER_IMPLICITACTIVATIONPOLICY___CI_
 
@@ -1074,6 +1082,8 @@
 
 #endif /* end #if !defined */
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 // *************************************************************
 // Inline operations for exception PortableServer::POAManager::AdapterInactive
 // *************************************************************
@@ -1113,6 +1123,8 @@
 
 #endif /* end #if !defined */
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 // *************************************************************
 // Inline operations for exception PortableServer::POA::AdapterAlreadyExists
 // *************************************************************
@@ -1186,6 +1198,8 @@
 
 #endif /* _TAO_CDR_OP_PortableServer_ObjectId_I_ */
 
+#if (TAO_HAS_MINIMUM_CORBA == 0)
+
 ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const PortableServer::ForwardRequest &_tao_aggregate)
 {
   // first marshal the repository ID
@@ -1214,6 +1228,10 @@
     return 0;
 }
 
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const PortableServer::NotAGroupObject &_tao_aggregate)
 {
   // first marshal the repository ID
@@ -1243,6 +1261,10 @@
 
 #endif /* _TAO_CDR_OP_PortableServer_IDs_I_ */
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const PortableServer::ThreadPolicyValue &_tao_enumval)
 {
   CORBA::ULong _tao_temp = _tao_enumval;
@@ -1262,6 +1284,8 @@
   return _tao_result;
 }
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const PortableServer::LifespanPolicyValue &_tao_enumval)
 {
   CORBA::ULong _tao_temp = _tao_enumval;
@@ -1319,6 +1343,8 @@
   return _tao_result;
 }
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const PortableServer::ImplicitActivationPolicyValue &_tao_enumval)
 {
   CORBA::ULong _tao_temp = _tao_enumval;
@@ -1375,4 +1401,4 @@
   
   return _tao_result;
 }
-
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
--- orig/PortableServerC.cpp	Tue Feb  5 16:29:50 2002
+++ PortableServerC.cpp	Tue Feb  5 17:15:19 2002
@@ -31,6 +31,8 @@
 #include "tao/ClientInterceptorAdapter.h"
 #endif  /* TAO_HAS_INTERCEPTORS == 1 */
 
+#include "POA.h"
+
 #if defined (__BORLANDC__)
 #pragma option -w-rvl -w-rch -w-ccc -w-aus -w-sig
 #endif /* __BORLANDC__ */
@@ -39,6 +41,29 @@
 #include "PortableServerC.i"
 #endif /* !defined INLINE */
 
+char *
+PortableServer::ObjectId_to_string (const PortableServer::ObjectId &id)
+{
+  return TAO_POA::ObjectId_to_string (id);
+}
+
+CORBA::WChar *
+PortableServer::ObjectId_to_wstring (const PortableServer::ObjectId &id)
+{
+  return TAO_POA::ObjectId_to_wstring (id);
+}
+
+PortableServer::ObjectId *
+PortableServer::string_to_ObjectId (const char *id)
+{
+  return TAO_POA::string_to_ObjectId (id);
+}
+
+PortableServer::ObjectId *
+PortableServer::wstring_to_ObjectId (const CORBA::WChar *id)
+{
+  return TAO_POA::wstring_to_ObjectId (id);
+}
 
 #if !defined (TAO_USE_SEQUENCE_TEMPLATES)
 
@@ -268,6 +293,8 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_ObjectId, &_tc_TAO_tc_PortableServer_ObjectId)
 TAO_NAMESPACE_END
 
+#if (TAO_HAS_MINIMUM_CORBA == 0)
+
 // Default constructor.
 PortableServer::ForwardRequest::ForwardRequest (void)
   : CORBA_UserException ("IDL:omg.org/PortableServer/ForwardRequest:1.0")
@@ -438,6 +465,10 @@
   return ::PortableServer::_tc_ForwardRequest;
 }
 
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 // Default constructor.
 PortableServer::NotAGroupObject::NotAGroupObject (void)
   : CORBA_UserException ("IDL:omg.org/PortableServer/NotAGroupObject:1.0")
@@ -733,6 +764,8 @@
 TAO_NAMESPACE_DEFINE (::CORBA::TypeCode_ptr, _tc_IDs, &_tc_TAO_tc_PortableServer_IDs)
 TAO_NAMESPACE_END
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 TAO_NAMESPACE_TYPE (const CORBA::ULong)
 TAO_NAMESPACE_BEGIN (PortableServer)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, THREAD_POLICY_ID, 16U)
@@ -761,6 +794,9 @@
 TAO_NAMESPACE_BEGIN (PortableServer)
 TAO_NAMESPACE_DEFINE (const CORBA::ULong, REQUEST_PROCESSING_POLICY_ID, 22U)
 TAO_NAMESPACE_END
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 static const CORBA::Long _oc_PortableServer_ThreadPolicyValue[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -1124,6 +1160,8 @@
   return "IDL:omg.org/PortableServer/ThreadPolicy:1.0";
 }
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 static const CORBA::Long _oc_PortableServer_LifespanPolicyValue[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -2207,6 +2245,8 @@
   return "IDL:omg.org/PortableServer/IdAssignmentPolicy:1.0";
 }
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 static const CORBA::Long _oc_PortableServer_ImplicitActivationPolicyValue[] =
 {
   TAO_ENCAP_BYTE_ORDER, // byte order
@@ -3318,6 +3358,8 @@
   return "IDL:omg.org/PortableServer/RequestProcessingPolicy:1.0";
 }
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 int PortableServer::POAManager::_tao_class_id = 0;
 
 PortableServer::POAManager_ptr
@@ -3697,6 +3739,7 @@
   ACE_THROW (CORBA::MARSHAL ());
 }
 
+#if (TAO_HAS_MINIMUM_POA == 0)
 int PortableServer::AdapterActivator::_tao_class_id = 0;
 
 PortableServer::AdapterActivator_ptr
@@ -4925,6 +4968,8 @@
   return "IDL:omg.org/PortableServer/ServantLocator:2.3";
 }
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 int PortableServer::POA::_tao_class_id = 0;
 
 PortableServer::POA_ptr
@@ -5470,6 +5515,8 @@
   this->index = _tao_index;
 }
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 // Default constructor.
 PortableServer::POA::NoServant::NoServant (void)
   : CORBA_UserException ("IDL:omg.org/PortableServer/POA/NoServant:1.0")
@@ -5548,6 +5595,8 @@
   ACE_THROW (CORBA::MARSHAL ());
 }
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 // Default constructor.
 PortableServer::POA::ObjectAlreadyActive::ObjectAlreadyActive (void)
   : CORBA_UserException ("IDL:omg.org/PortableServer/POA/ObjectAlreadyActive:1.0")
@@ -6498,6 +6547,8 @@
   return 0;
 }
 
+#if (TAO_HAS_MINIMUM_CORBA == 0)
+
 void operator<<= (CORBA::Any &_tao_any, const PortableServer::ForwardRequest &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
@@ -6588,6 +6639,10 @@
   return 0;
 }
 
+#endif /* TAO_HAS_MINIMUM_CORBA == 0 */
+
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 void operator<<= (CORBA::Any &_tao_any, const PortableServer::NotAGroupObject &_tao_elem) // copying
 {
   TAO_OutputCDR stream;
@@ -6816,6 +6871,8 @@
   #  pragma instantiate TAO_Object_Manager<PortableServer::ThreadPolicy,PortableServer::ThreadPolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 void operator<<= (CORBA::Any &_tao_any, PortableServer::LifespanPolicyValue _tao_elem)
 {
   TAO_OutputCDR stream;
@@ -6957,6 +7014,8 @@
   #  pragma instantiate TAO_Object_Manager<PortableServer::IdAssignmentPolicy,PortableServer::IdAssignmentPolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 void operator<<= (CORBA::Any &_tao_any, PortableServer::ImplicitActivationPolicyValue _tao_elem)
 {
   TAO_OutputCDR stream;
@@ -7098,6 +7157,8 @@
   #  pragma instantiate TAO_Object_Manager<PortableServer::RequestProcessingPolicy,PortableServer::RequestProcessingPolicy_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
     template class TAO_Object_Manager<PortableServer::POAManager,PortableServer::POAManager_var>;
@@ -7105,6 +7166,8 @@
   #  pragma instantiate TAO_Object_Manager<PortableServer::POAManager,PortableServer::POAManager_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
     template class TAO_Object_Manager<PortableServer::AdapterActivator,PortableServer::AdapterActivator_var>;
@@ -7133,6 +7196,8 @@
   #  pragma instantiate TAO_Object_Manager<PortableServer::ServantLocator,PortableServer::ServantLocator_var>
 #endif /* ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
+
 #if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)  || \
     defined (ACE_HAS_GNU_REPO)
     template class TAO_Object_Manager<PortableServer::POA,PortableServer::POA_var>;
@@ -7220,6 +7285,8 @@
   return 0; // error
 }
 
+#if (TAO_HAS_MINIMUM_POA == 0)
+
 CORBA::Boolean operator<< (
     TAO_OutputCDR &strm,
     const PortableServer::IDs &_tao_sequence
@@ -7267,3 +7334,4 @@
   return 0; // error
 }
 
+#endif /* TAO_HAS_MINIMUM_POA == 0 */
