--- orig/ImplRepoC.h	2003-04-25 17:36:28.000000000 -0500
+++ ./ImplRepoC.h	2003-04-25 17:38:12.000000000 -0500
@@ -30,17 +30,19 @@
 
 #ifndef _TAO_IDL_ORIG_IMPLREPOC_H_
 #define _TAO_IDL_ORIG_IMPLREPOC_H_
-
 #include "ace/pre.h"
-
-#include "tao/corba.h"
+#include "portableserver_export.h"
 
 #if !defined (ACE_LACKS_PRAGMA_ONCE)
 # pragma once
 #endif /* ACE_LACKS_PRAGMA_ONCE */
 
-
-#include "portableserver_export.h"
+#include "tao/Exception.h"
+#include "tao/Object.h"
+#include "tao/Sequence.h"
+#include "tao/Remote_Object_Proxy_Impl.h"
+#include "tao/VarOut_T.h"
+#include "tao/Any_T.h"
 
 #if defined (TAO_EXPORT_MACRO)
 #undef TAO_EXPORT_MACRO
@@ -70,31 +72,31 @@
 
 TAO_NAMESPACE  ImplementationRepository
 {
-  
+
   // TAO_IDL - Generated from
   // be/be_interface.cpp:570
 
 #if !defined (_IMPLEMENTATIONREPOSITORY_SERVEROBJECT__ODDS_N_ENDS_CH_)
 #define _IMPLEMENTATIONREPOSITORY_SERVEROBJECT__ODDS_N_ENDS_CH_
-  
+
   class ServerObject;
   typedef ServerObject *ServerObject_ptr;
   struct tao_ServerObject_life;
-  
+
   typedef
     TAO_Objref_Var_T<
         ServerObject,
         tao_ServerObject_life
       >
     ServerObject_var;
-  
+
   typedef
     TAO_Objref_Out_T<
         ServerObject,
         tao_ServerObject_life
       >
     ServerObject_out;
-  
+
   struct TAO_PortableServer_Export tao_ServerObject_life
   {
     static ServerObject_ptr tao_duplicate (ServerObject_ptr);
@@ -105,7 +107,7 @@
         TAO_OutputCDR &
       );
   };
-  
+
   struct TAO_PortableServer_Export tao_ServerObject_cast
   {
     static ServerObject_ptr tao_narrow (
@@ -116,18 +118,18 @@
   };
 
 #endif /* end #if !defined */
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/interface_ch.cpp:50
 
 #if !defined (_IMPLEMENTATIONREPOSITORY_SERVEROBJECT_CH_)
 #define _IMPLEMENTATIONREPOSITORY_SERVEROBJECT_CH_
-  
+
   class _TAO_ServerObject_Proxy_Impl;
   class _TAO_ServerObject_Remote_Proxy_Impl;
   class _TAO_ServerObject_Proxy_Broker;
   class _TAO_ServerObject_Remote_Proxy_Broker;
-  
+
   class TAO_PortableServer_Export ServerObject
     : public virtual CORBA::Object
   {
@@ -135,110 +137,110 @@
     typedef ServerObject_ptr _ptr_type;
     typedef ServerObject_var _var_type;
     static int _tao_class_id;
-    
+
     // The static operations.
     static ServerObject_ptr _duplicate (ServerObject_ptr obj);
-    
+
     static ServerObject_ptr _narrow (
         CORBA::Object_ptr obj
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
       );
-    
+
     static ServerObject_ptr _unchecked_narrow (
         CORBA::Object_ptr obj
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
       );
-    
+
     static ServerObject_ptr _nil (void)
       {
         return (ServerObject_ptr)0;
       }
-    
+
     static void _tao_any_destructor (void *);
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual void ping (
         ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
       )
       ACE_THROW_SPEC ((
         CORBA::SystemException
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual void shutdown (
         ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
       )
       ACE_THROW_SPEC ((
         CORBA::SystemException
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_interface/interface_ch.cpp:207
-    
+
     virtual CORBA::Boolean _is_a (
         const char *type_id
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
       );
-    
+
     virtual void *_tao_QueryInterface (ptr_arith_t type);
-    
+
     virtual const char* _interface_repository_id (void) const;
     virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
   private:
     _TAO_ServerObject_Proxy_Broker *the_TAO_ServerObject_Proxy_Broker_;
-  
+
   protected:
     ServerObject (int collocated = 0);
-    
+
     // These methods travese the inheritance tree and set the
     // parents piece of the given class in the right mode.
     virtual void ImplementationRepository_ServerObject_setup_collocation (int collocated);
-    
+
     ServerObject (IOP::IOR *ior,
       TAO_ORB_Core *orb_core = 0);
-      
+
     ServerObject (
-        TAO_Stub *objref, 
+        TAO_Stub *objref,
         CORBA::Boolean _tao_collocated = 0,
         TAO_Abstract_ServantBase *servant = 0,
         TAO_ORB_Core *orb_core = 0
       );
     virtual ~ServerObject (void);
-    
+
     friend class _TAO_ServerObject_Remote_Proxy_Impl;
     friend class _TAO_ServerObject_ThruPOA_Proxy_Impl;
     friend class _TAO_ServerObject_Direct_Proxy_Impl;
-  
+
   private:
     ServerObject (const ServerObject &);
     void operator= (const ServerObject &);
   };
-  
+
   // The Proxy Implementations are used by each interface to
   // perform a call. Each different implementation encapsulates
   // an invocation logic.
-  
-  
+
+
   ///////////////////////////////////////////////////////////////////////
   //                    Base Proxy Impl. Declaration
   //
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/base_proxy_impl_ch.cpp:35
-  
+
   class TAO_PortableServer_Export _TAO_ServerObject_Proxy_Impl
     : public virtual TAO_Object_Proxy_Impl
   {
   public:
     virtual ~_TAO_ServerObject_Proxy_Impl (void) {}
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual void ping (
         CORBA::Object *_collocated_tao_target_
         ACE_ENV_ARG_DECL
@@ -246,10 +248,10 @@
       ACE_THROW_SPEC ((
         CORBA::SystemException
       )) = 0;
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual void shutdown (
         CORBA::Object *_collocated_tao_target_
         ACE_ENV_ARG_DECL
@@ -257,35 +259,35 @@
       ACE_THROW_SPEC ((
         CORBA::SystemException
       )) = 0;
-  
+
   protected:
     _TAO_ServerObject_Proxy_Impl (void);
   };
-  
+
   //
   //               End Base Proxy Impl. Declaration
   ///////////////////////////////////////////////////////////////////////
-  
-  
+
+
   ///////////////////////////////////////////////////////////////////////
   //                Remote Proxy Impl. Declaration
   //
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/remote_proxy_impl_ch.cpp:37
-  
+
   class TAO_PortableServer_Export _TAO_ServerObject_Remote_Proxy_Impl
     : public virtual _TAO_ServerObject_Proxy_Impl,
       public virtual TAO_Remote_Object_Proxy_Impl
   {
   public:
     _TAO_ServerObject_Remote_Proxy_Impl (void);
-    
+
     virtual ~_TAO_ServerObject_Remote_Proxy_Impl (void) {}
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual void ping (
         CORBA::Object *_collocated_tao_target_
         ACE_ENV_ARG_DECL
@@ -293,10 +295,10 @@
       ACE_THROW_SPEC ((
         CORBA::SystemException
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual void shutdown (
         CORBA::Object *_collocated_tao_target_
         ACE_ENV_ARG_DECL
@@ -305,23 +307,23 @@
         CORBA::SystemException
       ));
   };
-  
+
   //
   //             End Remote Proxy Impl. Declaration
   ///////////////////////////////////////////////////////////////////////
-  
+
   // The Proxy Brokers are used by each interface to get
-  // the right proxy for performing a call. In the new 
+  // the right proxy for performing a call. In the new
   // collocation scheme, the proxy to be used can vary on
   // a call by call basis.
-  
+
   ///////////////////////////////////////////////////////////////////////
-  //                 Base Proxy Broker Declaration 
+  //                 Base Proxy Broker Declaration
   //
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/base_proxy_broker_ch.cpp:35
-  
+
   class TAO_PortableServer_Export _TAO_ServerObject_Proxy_Broker
   {
   public:
@@ -330,76 +332,76 @@
         ServerObject *object
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
       ) = 0;
-    
+
   protected:
     _TAO_ServerObject_Proxy_Broker (void);
-    
+
   };
-  
+
   //
-  //              End Base Proxy Broker Declaration 
+  //              End Base Proxy Broker Declaration
   ///////////////////////////////////////////////////////////////////////
-  
-    
+
+
   ///////////////////////////////////////////////////////////////////////
-  //                 Remote Proxy Broker Declaration 
+  //                 Remote Proxy Broker Declaration
   //
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/remote_proxy_broker_ch.cpp:40
-  
+
   class TAO_PortableServer_Export _TAO_ServerObject_Remote_Proxy_Broker
     : public virtual _TAO_ServerObject_Proxy_Broker
   {
-  public: 
+  public:
     _TAO_ServerObject_Remote_Proxy_Broker (void);
-    
+
     virtual ~_TAO_ServerObject_Remote_Proxy_Broker (void);
-    
+
     virtual _TAO_ServerObject_Proxy_Impl &select_proxy (
         ServerObject *object
         ACE_ENV_ARG_DECL
       );
-    
+
   private:
     _TAO_ServerObject_Remote_Proxy_Impl remote_proxy_impl_;
-  
+
   public:
     // This member function is used to get an handle to the unique instance
     // of the Remote Proxy Broker that is available for a given
     // interface.
     static _TAO_ServerObject_Remote_Proxy_Broker *the_TAO_ServerObject_Remote_Proxy_Broker (void);
   };
-  
+
   //
-  //              End Remote Proxy Broker Declaration 
+  //              End Remote Proxy Broker Declaration
   ///////////////////////////////////////////////////////////////////////
 
 #endif /* end #if !defined */
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_typecode/typecode_decl.cpp:44
-  
+
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ServerObject;
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_exception/exception_ch.cpp:51
 
 #if !defined (_IMPLEMENTATIONREPOSITORY_ALREADYREGISTERED_CH_)
 #define _IMPLEMENTATIONREPOSITORY_ALREADYREGISTERED_CH_
-  
+
   class TAO_PortableServer_Export AlreadyRegistered : public CORBA::UserException
   {
   public:
-    
+
     AlreadyRegistered (void);
     AlreadyRegistered (const AlreadyRegistered &);
     ~AlreadyRegistered (void);
 
     AlreadyRegistered &operator= (const AlreadyRegistered &);
-    
+
     static void _tao_any_destructor (void *);
-    
+
     static AlreadyRegistered *_downcast (CORBA::Exception *);
     static CORBA::Exception *_alloc (void);
 
@@ -411,44 +413,44 @@
         TAO_OutputCDR &
         ACE_ENV_ARG_DECL_NOT_USED
       ) const;
-    
+
     virtual void _tao_decode (
         TAO_InputCDR &
         ACE_ENV_ARG_DECL_NOT_USED
       );
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_exception/exception_ch.cpp:125
-    
+
     virtual CORBA::TypeCode_ptr _type (void) const;
   };
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_typecode/typecode_decl.cpp:44
-  
+
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_AlreadyRegistered;
 
 #endif /* end #if !defined */
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_exception/exception_ch.cpp:51
 
 #if !defined (_IMPLEMENTATIONREPOSITORY_CANNOTACTIVATE_CH_)
 #define _IMPLEMENTATIONREPOSITORY_CANNOTACTIVATE_CH_
-  
+
   class TAO_PortableServer_Export CannotActivate : public CORBA::UserException
   {
   public:
-    
+
     TAO_String_Manager reason;
     CannotActivate (void);
     CannotActivate (const CannotActivate &);
     ~CannotActivate (void);
 
     CannotActivate &operator= (const CannotActivate &);
-    
+
     static void _tao_any_destructor (void *);
-    
+
     static CannotActivate *_downcast (CORBA::Exception *);
     static CORBA::Exception *_alloc (void);
 
@@ -460,50 +462,50 @@
         TAO_OutputCDR &
         ACE_ENV_ARG_DECL_NOT_USED
       ) const;
-    
+
     virtual void _tao_decode (
         TAO_InputCDR &
         ACE_ENV_ARG_DECL_NOT_USED
       );
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_exception/exception_ctor.cpp:66
-    
+
     CannotActivate (
         const char * _tao_reason
       );
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_exception/exception_ch.cpp:125
-    
+
     virtual CORBA::TypeCode_ptr _type (void) const;
   };
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_typecode/typecode_decl.cpp:44
-  
+
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_CannotActivate;
 
 #endif /* end #if !defined */
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_exception/exception_ch.cpp:51
 
 #if !defined (_IMPLEMENTATIONREPOSITORY_NOTFOUND_CH_)
 #define _IMPLEMENTATIONREPOSITORY_NOTFOUND_CH_
-  
+
   class TAO_PortableServer_Export NotFound : public CORBA::UserException
   {
   public:
-    
+
     NotFound (void);
     NotFound (const NotFound &);
     ~NotFound (void);
 
     NotFound &operator= (const NotFound &);
-    
+
     static void _tao_any_destructor (void *);
-    
+
     static NotFound *_downcast (CORBA::Exception *);
     static CORBA::Exception *_alloc (void);
 
@@ -515,87 +517,87 @@
         TAO_OutputCDR &
         ACE_ENV_ARG_DECL_NOT_USED
       ) const;
-    
+
     virtual void _tao_decode (
         TAO_InputCDR &
         ACE_ENV_ARG_DECL_NOT_USED
       );
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_exception/exception_ch.cpp:125
-    
+
     virtual CORBA::TypeCode_ptr _type (void) const;
   };
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_typecode/typecode_decl.cpp:44
-  
+
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_NotFound;
 
 #endif /* end #if !defined */
-  
+
   // TAO_IDL - Generated from
   // be/be_type.cpp:249
-  
+
   struct EnvironmentVariable;
-  
+
   typedef
     TAO_Var_Var_T<
         EnvironmentVariable
       >
     EnvironmentVariable_var;
-  
+
   typedef
     TAO_Out_T<
         EnvironmentVariable,
         EnvironmentVariable_var
       >
     EnvironmentVariable_out;
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_structure/structure_ch.cpp:52
-  
+
   struct TAO_PortableServer_Export EnvironmentVariable
   {
     typedef EnvironmentVariable_var _var_type;
-    
+
     static void _tao_any_destructor (void *);
     TAO_String_Manager name;
     TAO_String_Manager value;
   };
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_typecode/typecode_decl.cpp:44
-  
+
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_EnvironmentVariable;
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_typedef/typedef_ch.cpp:367
-  
+
   typedef char * Address;
   typedef CORBA::String_var Address_var;
   typedef CORBA::String_out Address_out;
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_typecode/typecode_decl.cpp:44
-  
+
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Address;
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_sequence/sequence_ch.cpp:89
 
 #if !defined (_IMPLEMENTATIONREPOSITORY_ENVIRONMENTLIST_CH_)
 #define _IMPLEMENTATIONREPOSITORY_ENVIRONMENTLIST_CH_
-  
+
   class EnvironmentList;
-  
+
   typedef
     TAO_VarSeq_Var_T<
         EnvironmentList,
         EnvironmentVariable
       >
     EnvironmentList_var;
-  
+
   typedef
     TAO_Seq_Out_T<
         EnvironmentList,
@@ -603,7 +605,7 @@
         EnvironmentVariable
       >
     EnvironmentList_out;
-  
+
   class TAO_PortableServer_Export EnvironmentList
     : public
         TAO_Unbounded_Sequence<
@@ -616,27 +618,27 @@
     EnvironmentList (
         CORBA::ULong max,
         CORBA::ULong length,
-        EnvironmentVariable* buffer, 
+        EnvironmentVariable* buffer,
         CORBA::Boolean release = 0
       );
     EnvironmentList (const EnvironmentList &);
     ~EnvironmentList (void);
-    
+
     static void _tao_any_destructor (void *);
-    
+
     typedef EnvironmentList_var _var_type;
   };
 
 #endif /* end #if !defined */
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_typecode/typecode_decl.cpp:44
-  
+
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_EnvironmentList;
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_enum/enum_ch.cpp:57
-  
+
   enum ActivationMode
   {
     NORMAL,
@@ -644,39 +646,39 @@
     PER_CLIENT,
     AUTO_START
   };
-  
+
   typedef ActivationMode &ActivationMode_out;
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_typecode/typecode_decl.cpp:44
-  
+
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ActivationMode;
-  
+
   // TAO_IDL - Generated from
   // be/be_type.cpp:249
-  
+
   struct StartupOptions;
-  
+
   typedef
     TAO_Var_Var_T<
         StartupOptions
       >
     StartupOptions_var;
-  
+
   typedef
     TAO_Out_T<
         StartupOptions,
         StartupOptions_var
       >
     StartupOptions_out;
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_structure/structure_ch.cpp:52
-  
+
   struct TAO_PortableServer_Export StartupOptions
   {
     typedef StartupOptions_var _var_type;
-    
+
     static void _tao_any_destructor (void *);
     TAO_String_Manager command_line;
     ImplementationRepository::EnvironmentList environment;
@@ -684,64 +686,64 @@
     ImplementationRepository::ActivationMode activation;
     TAO_String_Manager location;
   };
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_typecode/typecode_decl.cpp:44
-  
+
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_StartupOptions;
-  
+
   // TAO_IDL - Generated from
   // be/be_type.cpp:249
-  
+
   struct ServerInformation;
-  
+
   typedef
     TAO_Var_Var_T<
         ServerInformation
       >
     ServerInformation_var;
-  
+
   typedef
     TAO_Out_T<
         ServerInformation,
         ServerInformation_var
       >
     ServerInformation_out;
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_structure/structure_ch.cpp:52
-  
+
   struct TAO_PortableServer_Export ServerInformation
   {
     typedef ServerInformation_var _var_type;
-    
+
     static void _tao_any_destructor (void *);
     TAO_String_Manager logical_server;
     TAO_String_Manager server;
     ImplementationRepository::StartupOptions startup;
     TAO_String_Manager location;
   };
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_typecode/typecode_decl.cpp:44
-  
+
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ServerInformation;
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_sequence/sequence_ch.cpp:89
 
 #if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST_CH_)
 #define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONLIST_CH_
-  
+
   class ServerInformationList;
-  
+
   typedef
     TAO_VarSeq_Var_T<
         ServerInformationList,
         ServerInformation
       >
     ServerInformationList_var;
-  
+
   typedef
     TAO_Seq_Out_T<
         ServerInformationList,
@@ -749,7 +751,7 @@
         ServerInformation
       >
     ServerInformationList_out;
-  
+
   class TAO_PortableServer_Export ServerInformationList
     : public
         TAO_Unbounded_Sequence<
@@ -762,48 +764,48 @@
     ServerInformationList (
         CORBA::ULong max,
         CORBA::ULong length,
-        ServerInformation* buffer, 
+        ServerInformation* buffer,
         CORBA::Boolean release = 0
       );
     ServerInformationList (const ServerInformationList &);
     ~ServerInformationList (void);
-    
+
     static void _tao_any_destructor (void *);
-    
+
     typedef ServerInformationList_var _var_type;
   };
 
 #endif /* end #if !defined */
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_typecode/typecode_decl.cpp:44
-  
+
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ServerInformationList;
-  
+
   // TAO_IDL - Generated from
   // be/be_interface.cpp:570
 
 #if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__ODDS_N_ENDS_CH_)
 #define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR__ODDS_N_ENDS_CH_
-  
+
   class ServerInformationIterator;
   typedef ServerInformationIterator *ServerInformationIterator_ptr;
   struct tao_ServerInformationIterator_life;
-  
+
   typedef
     TAO_Objref_Var_T<
         ServerInformationIterator,
         tao_ServerInformationIterator_life
       >
     ServerInformationIterator_var;
-  
+
   typedef
     TAO_Objref_Out_T<
         ServerInformationIterator,
         tao_ServerInformationIterator_life
       >
     ServerInformationIterator_out;
-  
+
   struct TAO_PortableServer_Export tao_ServerInformationIterator_life
   {
     static ServerInformationIterator_ptr tao_duplicate (ServerInformationIterator_ptr);
@@ -814,7 +816,7 @@
         TAO_OutputCDR &
       );
   };
-  
+
   struct TAO_PortableServer_Export tao_ServerInformationIterator_cast
   {
     static ServerInformationIterator_ptr tao_narrow (
@@ -825,31 +827,31 @@
   };
 
 #endif /* end #if !defined */
-  
+
   // TAO_IDL - Generated from
   // be/be_interface.cpp:570
 
 #if !defined (_IMPLEMENTATIONREPOSITORY_ADMINISTRATION__ODDS_N_ENDS_CH_)
 #define _IMPLEMENTATIONREPOSITORY_ADMINISTRATION__ODDS_N_ENDS_CH_
-  
+
   class Administration;
   typedef Administration *Administration_ptr;
   struct tao_Administration_life;
-  
+
   typedef
     TAO_Objref_Var_T<
         Administration,
         tao_Administration_life
       >
     Administration_var;
-  
+
   typedef
     TAO_Objref_Out_T<
         Administration,
         tao_Administration_life
       >
     Administration_out;
-  
+
   struct TAO_PortableServer_Export tao_Administration_life
   {
     static Administration_ptr tao_duplicate (Administration_ptr);
@@ -860,7 +862,7 @@
         TAO_OutputCDR &
       );
   };
-  
+
   struct TAO_PortableServer_Export tao_Administration_cast
   {
     static Administration_ptr tao_narrow (
@@ -871,18 +873,18 @@
   };
 
 #endif /* end #if !defined */
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/interface_ch.cpp:50
 
 #if !defined (_IMPLEMENTATIONREPOSITORY_ADMINISTRATION_CH_)
 #define _IMPLEMENTATIONREPOSITORY_ADMINISTRATION_CH_
-  
+
   class _TAO_Administration_Proxy_Impl;
   class _TAO_Administration_Remote_Proxy_Impl;
   class _TAO_Administration_Proxy_Broker;
   class _TAO_Administration_Remote_Proxy_Broker;
-  
+
   class TAO_PortableServer_Export Administration
     : public virtual CORBA::Object
   {
@@ -890,30 +892,30 @@
     typedef Administration_ptr _ptr_type;
     typedef Administration_var _var_type;
     static int _tao_class_id;
-    
+
     // The static operations.
     static Administration_ptr _duplicate (Administration_ptr obj);
-    
+
     static Administration_ptr _narrow (
         CORBA::Object_ptr obj
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
       );
-    
+
     static Administration_ptr _unchecked_narrow (
         CORBA::Object_ptr obj
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
       );
-    
+
     static Administration_ptr _nil (void)
       {
         return (Administration_ptr)0;
       }
-    
+
     static void _tao_any_destructor (void *);
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual void activate_server (
         const char * server
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
@@ -923,10 +925,10 @@
         , ImplementationRepository::NotFound
         , ImplementationRepository::CannotActivate
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual char * activate_server_with_startup (
         const char * server,
         CORBA::Long check_startup
@@ -937,10 +939,10 @@
         , ImplementationRepository::NotFound
         , ImplementationRepository::CannotActivate
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual void register_server (
         const char * server,
         const ImplementationRepository::StartupOptions & options
@@ -950,10 +952,10 @@
         CORBA::SystemException
         , ImplementationRepository::AlreadyRegistered
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual void reregister_server (
         const char * server,
         const ImplementationRepository::StartupOptions & options
@@ -962,10 +964,10 @@
       ACE_THROW_SPEC ((
         CORBA::SystemException
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual void remove_server (
         const char * server
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
@@ -974,10 +976,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual void shutdown_server (
         const char * server
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
@@ -986,10 +988,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual char * server_is_running (
         const char * server,
         const char * addr,
@@ -1000,10 +1002,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual void server_is_shutting_down (
         const char * server
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
@@ -1012,10 +1014,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual void find (
         const char * server,
         ImplementationRepository::ServerInformation_out info
@@ -1025,10 +1027,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual void list (
         CORBA::ULong how_many,
         ImplementationRepository::ServerInformationList_out server_list,
@@ -1038,70 +1040,70 @@
       ACE_THROW_SPEC ((
         CORBA::SystemException
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_interface/interface_ch.cpp:207
-    
+
     virtual CORBA::Boolean _is_a (
         const char *type_id
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
       );
-    
+
     virtual void *_tao_QueryInterface (ptr_arith_t type);
-    
+
     virtual const char* _interface_repository_id (void) const;
     virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
   private:
     _TAO_Administration_Proxy_Broker *the_TAO_Administration_Proxy_Broker_;
-  
+
   protected:
     Administration (int collocated = 0);
-    
+
     // These methods travese the inheritance tree and set the
     // parents piece of the given class in the right mode.
     virtual void ImplementationRepository_Administration_setup_collocation (int collocated);
-    
+
     Administration (IOP::IOR *ior,
       TAO_ORB_Core *orb_core = 0);
-      
+
     Administration (
-        TAO_Stub *objref, 
+        TAO_Stub *objref,
         CORBA::Boolean _tao_collocated = 0,
         TAO_Abstract_ServantBase *servant = 0,
         TAO_ORB_Core *orb_core = 0
       );
     virtual ~Administration (void);
-    
+
     friend class _TAO_Administration_Remote_Proxy_Impl;
     friend class _TAO_Administration_ThruPOA_Proxy_Impl;
     friend class _TAO_Administration_Direct_Proxy_Impl;
-  
+
   private:
     Administration (const Administration &);
     void operator= (const Administration &);
   };
-  
+
   // The Proxy Implementations are used by each interface to
   // perform a call. Each different implementation encapsulates
   // an invocation logic.
-  
-  
+
+
   ///////////////////////////////////////////////////////////////////////
   //                    Base Proxy Impl. Declaration
   //
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/base_proxy_impl_ch.cpp:35
-  
+
   class TAO_PortableServer_Export _TAO_Administration_Proxy_Impl
     : public virtual TAO_Object_Proxy_Impl
   {
   public:
     virtual ~_TAO_Administration_Proxy_Impl (void) {}
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual void activate_server (
         CORBA::Object *_collocated_tao_target_,
         const char * server
@@ -1112,10 +1114,10 @@
         , ImplementationRepository::NotFound
         , ImplementationRepository::CannotActivate
       )) = 0;
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual char * activate_server_with_startup (
         CORBA::Object *_collocated_tao_target_,
         const char * server,
@@ -1127,10 +1129,10 @@
         , ImplementationRepository::NotFound
         , ImplementationRepository::CannotActivate
       )) = 0;
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual void register_server (
         CORBA::Object *_collocated_tao_target_,
         const char * server,
@@ -1141,10 +1143,10 @@
         CORBA::SystemException
         , ImplementationRepository::AlreadyRegistered
       )) = 0;
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual void reregister_server (
         CORBA::Object *_collocated_tao_target_,
         const char * server,
@@ -1154,10 +1156,10 @@
       ACE_THROW_SPEC ((
         CORBA::SystemException
       )) = 0;
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual void remove_server (
         CORBA::Object *_collocated_tao_target_,
         const char * server
@@ -1167,10 +1169,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       )) = 0;
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual void shutdown_server (
         CORBA::Object *_collocated_tao_target_,
         const char * server
@@ -1180,10 +1182,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       )) = 0;
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual char * server_is_running (
         CORBA::Object *_collocated_tao_target_,
         const char * server,
@@ -1195,10 +1197,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       )) = 0;
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual void server_is_shutting_down (
         CORBA::Object *_collocated_tao_target_,
         const char * server
@@ -1208,10 +1210,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       )) = 0;
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual void find (
         CORBA::Object *_collocated_tao_target_,
         const char * server,
@@ -1222,10 +1224,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       )) = 0;
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual void list (
         CORBA::Object *_collocated_tao_target_,
         CORBA::ULong how_many,
@@ -1236,35 +1238,35 @@
       ACE_THROW_SPEC ((
         CORBA::SystemException
       )) = 0;
-  
+
   protected:
     _TAO_Administration_Proxy_Impl (void);
   };
-  
+
   //
   //               End Base Proxy Impl. Declaration
   ///////////////////////////////////////////////////////////////////////
-  
-  
+
+
   ///////////////////////////////////////////////////////////////////////
   //                Remote Proxy Impl. Declaration
   //
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/remote_proxy_impl_ch.cpp:37
-  
+
   class TAO_PortableServer_Export _TAO_Administration_Remote_Proxy_Impl
     : public virtual _TAO_Administration_Proxy_Impl,
       public virtual TAO_Remote_Object_Proxy_Impl
   {
   public:
     _TAO_Administration_Remote_Proxy_Impl (void);
-    
+
     virtual ~_TAO_Administration_Remote_Proxy_Impl (void) {}
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual void activate_server (
         CORBA::Object *_collocated_tao_target_,
         const char * server
@@ -1275,10 +1277,10 @@
         , ImplementationRepository::NotFound
         , ImplementationRepository::CannotActivate
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual char * activate_server_with_startup (
         CORBA::Object *_collocated_tao_target_,
         const char * server,
@@ -1290,10 +1292,10 @@
         , ImplementationRepository::NotFound
         , ImplementationRepository::CannotActivate
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual void register_server (
         CORBA::Object *_collocated_tao_target_,
         const char * server,
@@ -1304,10 +1306,10 @@
         CORBA::SystemException
         , ImplementationRepository::AlreadyRegistered
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual void reregister_server (
         CORBA::Object *_collocated_tao_target_,
         const char * server,
@@ -1317,10 +1319,10 @@
       ACE_THROW_SPEC ((
         CORBA::SystemException
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual void remove_server (
         CORBA::Object *_collocated_tao_target_,
         const char * server
@@ -1330,10 +1332,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual void shutdown_server (
         CORBA::Object *_collocated_tao_target_,
         const char * server
@@ -1343,10 +1345,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual char * server_is_running (
         CORBA::Object *_collocated_tao_target_,
         const char * server,
@@ -1358,10 +1360,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual void server_is_shutting_down (
         CORBA::Object *_collocated_tao_target_,
         const char * server
@@ -1371,10 +1373,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual void find (
         CORBA::Object *_collocated_tao_target_,
         const char * server,
@@ -1385,10 +1387,10 @@
         CORBA::SystemException
         , ImplementationRepository::NotFound
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual void list (
         CORBA::Object *_collocated_tao_target_,
         CORBA::ULong how_many,
@@ -1400,23 +1402,23 @@
         CORBA::SystemException
       ));
   };
-  
+
   //
   //             End Remote Proxy Impl. Declaration
   ///////////////////////////////////////////////////////////////////////
-  
+
   // The Proxy Brokers are used by each interface to get
-  // the right proxy for performing a call. In the new 
+  // the right proxy for performing a call. In the new
   // collocation scheme, the proxy to be used can vary on
   // a call by call basis.
-  
+
   ///////////////////////////////////////////////////////////////////////
-  //                 Base Proxy Broker Declaration 
+  //                 Base Proxy Broker Declaration
   //
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/base_proxy_broker_ch.cpp:35
-  
+
   class TAO_PortableServer_Export _TAO_Administration_Proxy_Broker
   {
   public:
@@ -1425,69 +1427,69 @@
         Administration *object
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
       ) = 0;
-    
+
   protected:
     _TAO_Administration_Proxy_Broker (void);
-    
+
   };
-  
+
   //
-  //              End Base Proxy Broker Declaration 
+  //              End Base Proxy Broker Declaration
   ///////////////////////////////////////////////////////////////////////
-  
-    
+
+
   ///////////////////////////////////////////////////////////////////////
-  //                 Remote Proxy Broker Declaration 
+  //                 Remote Proxy Broker Declaration
   //
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/remote_proxy_broker_ch.cpp:40
-  
+
   class TAO_PortableServer_Export _TAO_Administration_Remote_Proxy_Broker
     : public virtual _TAO_Administration_Proxy_Broker
   {
-  public: 
+  public:
     _TAO_Administration_Remote_Proxy_Broker (void);
-    
+
     virtual ~_TAO_Administration_Remote_Proxy_Broker (void);
-    
+
     virtual _TAO_Administration_Proxy_Impl &select_proxy (
         Administration *object
         ACE_ENV_ARG_DECL
       );
-    
+
   private:
     _TAO_Administration_Remote_Proxy_Impl remote_proxy_impl_;
-  
+
   public:
     // This member function is used to get an handle to the unique instance
     // of the Remote Proxy Broker that is available for a given
     // interface.
     static _TAO_Administration_Remote_Proxy_Broker *the_TAO_Administration_Remote_Proxy_Broker (void);
   };
-  
+
   //
-  //              End Remote Proxy Broker Declaration 
+  //              End Remote Proxy Broker Declaration
   ///////////////////////////////////////////////////////////////////////
 
 #endif /* end #if !defined */
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_typecode/typecode_decl.cpp:44
-  
+
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_Administration;
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/interface_ch.cpp:50
 
 #if !defined (_IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR_CH_)
 #define _IMPLEMENTATIONREPOSITORY_SERVERINFORMATIONITERATOR_CH_
-  
+
   class _TAO_ServerInformationIterator_Proxy_Impl;
   class _TAO_ServerInformationIterator_Remote_Proxy_Impl;
   class _TAO_ServerInformationIterator_Proxy_Broker;
   class _TAO_ServerInformationIterator_Remote_Proxy_Broker;
-  
+
   class TAO_PortableServer_Export ServerInformationIterator
     : public virtual CORBA::Object
   {
@@ -1495,30 +1497,30 @@
     typedef ServerInformationIterator_ptr _ptr_type;
     typedef ServerInformationIterator_var _var_type;
     static int _tao_class_id;
-    
+
     // The static operations.
     static ServerInformationIterator_ptr _duplicate (ServerInformationIterator_ptr obj);
-    
+
     static ServerInformationIterator_ptr _narrow (
         CORBA::Object_ptr obj
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
       );
-    
+
     static ServerInformationIterator_ptr _unchecked_narrow (
         CORBA::Object_ptr obj
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
       );
-    
+
     static ServerInformationIterator_ptr _nil (void)
       {
         return (ServerInformationIterator_ptr)0;
       }
-    
+
     static void _tao_any_destructor (void *);
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual CORBA::Boolean next_n (
         CORBA::ULong how_many,
         ImplementationRepository::ServerInformationList_out server_list
@@ -1527,80 +1529,80 @@
       ACE_THROW_SPEC ((
         CORBA::SystemException
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/operation_ch.cpp:46
-    
+
     virtual void destroy (
         ACE_ENV_SINGLE_ARG_DECL_WITH_DEFAULTS
       )
       ACE_THROW_SPEC ((
         CORBA::SystemException
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_interface/interface_ch.cpp:207
-    
+
     virtual CORBA::Boolean _is_a (
         const char *type_id
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
       );
-    
+
     virtual void *_tao_QueryInterface (ptr_arith_t type);
-    
+
     virtual const char* _interface_repository_id (void) const;
     virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
   private:
     _TAO_ServerInformationIterator_Proxy_Broker *the_TAO_ServerInformationIterator_Proxy_Broker_;
-  
+
   protected:
     ServerInformationIterator (int collocated = 0);
-    
+
     // These methods travese the inheritance tree and set the
     // parents piece of the given class in the right mode.
     virtual void ImplementationRepository_ServerInformationIterator_setup_collocation (int collocated);
-    
+
     ServerInformationIterator (IOP::IOR *ior,
       TAO_ORB_Core *orb_core = 0);
-      
+
     ServerInformationIterator (
-        TAO_Stub *objref, 
+        TAO_Stub *objref,
         CORBA::Boolean _tao_collocated = 0,
         TAO_Abstract_ServantBase *servant = 0,
         TAO_ORB_Core *orb_core = 0
       );
     virtual ~ServerInformationIterator (void);
-    
+
     friend class _TAO_ServerInformationIterator_Remote_Proxy_Impl;
     friend class _TAO_ServerInformationIterator_ThruPOA_Proxy_Impl;
     friend class _TAO_ServerInformationIterator_Direct_Proxy_Impl;
-  
+
   private:
     ServerInformationIterator (const ServerInformationIterator &);
     void operator= (const ServerInformationIterator &);
   };
-  
+
   // The Proxy Implementations are used by each interface to
   // perform a call. Each different implementation encapsulates
   // an invocation logic.
-  
-  
+
+
   ///////////////////////////////////////////////////////////////////////
   //                    Base Proxy Impl. Declaration
   //
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/base_proxy_impl_ch.cpp:35
-  
+
   class TAO_PortableServer_Export _TAO_ServerInformationIterator_Proxy_Impl
     : public virtual TAO_Object_Proxy_Impl
   {
   public:
     virtual ~_TAO_ServerInformationIterator_Proxy_Impl (void) {}
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual CORBA::Boolean next_n (
         CORBA::Object *_collocated_tao_target_,
         CORBA::ULong how_many,
@@ -1610,10 +1612,10 @@
       ACE_THROW_SPEC ((
         CORBA::SystemException
       )) = 0;
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/base_proxy_impl_ch.cpp:24
-    
+
     virtual void destroy (
         CORBA::Object *_collocated_tao_target_
         ACE_ENV_ARG_DECL
@@ -1621,35 +1623,35 @@
       ACE_THROW_SPEC ((
         CORBA::SystemException
       )) = 0;
-  
+
   protected:
     _TAO_ServerInformationIterator_Proxy_Impl (void);
   };
-  
+
   //
   //               End Base Proxy Impl. Declaration
   ///////////////////////////////////////////////////////////////////////
-  
-  
+
+
   ///////////////////////////////////////////////////////////////////////
   //                Remote Proxy Impl. Declaration
   //
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/remote_proxy_impl_ch.cpp:37
-  
+
   class TAO_PortableServer_Export _TAO_ServerInformationIterator_Remote_Proxy_Impl
     : public virtual _TAO_ServerInformationIterator_Proxy_Impl,
       public virtual TAO_Remote_Object_Proxy_Impl
   {
   public:
     _TAO_ServerInformationIterator_Remote_Proxy_Impl (void);
-    
+
     virtual ~_TAO_ServerInformationIterator_Remote_Proxy_Impl (void) {}
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual CORBA::Boolean next_n (
         CORBA::Object *_collocated_tao_target_,
         CORBA::ULong how_many,
@@ -1659,10 +1661,10 @@
       ACE_THROW_SPEC ((
         CORBA::SystemException
       ));
-    
+
     // TAO_IDL - Generated from
     // be/be_visitor_operation/proxy_impl_xh.cpp:24
-    
+
     virtual void destroy (
         CORBA::Object *_collocated_tao_target_
         ACE_ENV_ARG_DECL
@@ -1671,23 +1673,23 @@
         CORBA::SystemException
       ));
   };
-  
+
   //
   //             End Remote Proxy Impl. Declaration
   ///////////////////////////////////////////////////////////////////////
-  
+
   // The Proxy Brokers are used by each interface to get
-  // the right proxy for performing a call. In the new 
+  // the right proxy for performing a call. In the new
   // collocation scheme, the proxy to be used can vary on
   // a call by call basis.
-  
+
   ///////////////////////////////////////////////////////////////////////
-  //                 Base Proxy Broker Declaration 
+  //                 Base Proxy Broker Declaration
   //
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/base_proxy_broker_ch.cpp:35
-  
+
   class TAO_PortableServer_Export _TAO_ServerInformationIterator_Proxy_Broker
   {
   public:
@@ -1696,56 +1698,56 @@
         ServerInformationIterator *object
         ACE_ENV_ARG_DECL_WITH_DEFAULTS
       ) = 0;
-    
+
   protected:
     _TAO_ServerInformationIterator_Proxy_Broker (void);
-    
+
   };
-  
+
   //
-  //              End Base Proxy Broker Declaration 
+  //              End Base Proxy Broker Declaration
   ///////////////////////////////////////////////////////////////////////
-  
-    
+
+
   ///////////////////////////////////////////////////////////////////////
-  //                 Remote Proxy Broker Declaration 
+  //                 Remote Proxy Broker Declaration
   //
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_interface/remote_proxy_broker_ch.cpp:40
-  
+
   class TAO_PortableServer_Export _TAO_ServerInformationIterator_Remote_Proxy_Broker
     : public virtual _TAO_ServerInformationIterator_Proxy_Broker
   {
-  public: 
+  public:
     _TAO_ServerInformationIterator_Remote_Proxy_Broker (void);
-    
+
     virtual ~_TAO_ServerInformationIterator_Remote_Proxy_Broker (void);
-    
+
     virtual _TAO_ServerInformationIterator_Proxy_Impl &select_proxy (
         ServerInformationIterator *object
         ACE_ENV_ARG_DECL
       );
-    
+
   private:
     _TAO_ServerInformationIterator_Remote_Proxy_Impl remote_proxy_impl_;
-  
+
   public:
     // This member function is used to get an handle to the unique instance
     // of the Remote Proxy Broker that is available for a given
     // interface.
     static _TAO_ServerInformationIterator_Remote_Proxy_Broker *the_TAO_ServerInformationIterator_Remote_Proxy_Broker (void);
   };
-  
+
   //
-  //              End Remote Proxy Broker Declaration 
+  //              End Remote Proxy Broker Declaration
   ///////////////////////////////////////////////////////////////////////
 
 #endif /* end #if !defined */
-  
+
   // TAO_IDL - Generated from
   // be/be_visitor_typecode/typecode_decl.cpp:44
-  
+
   TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_ServerInformationIterator;
 
 // TAO_IDL - Generated from
@@ -1989,4 +1991,3 @@
 
 #include "ace/post.h"
 #endif /* ifndef */
-
