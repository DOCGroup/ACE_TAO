// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

#include "ImplRepoC.h"
#include "tao/Typecode.h"
#include "tao/CDR.h"
#include "tao/Any.h"
#include "tao/Any_Impl_T.h"
#include "tao/Any_Dual_Impl_T.h"
#include "tao/Any_Basic_Impl_T.h"

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_ImplementationRepository_EnvironmentVariable[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  53,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f456e76), 
  ACE_NTOHL (0x69726f6e), 
  ACE_NTOHL (0x6d656e74), 
  ACE_NTOHL (0x56617269), 
  ACE_NTOHL (0x61626c65), 
  ACE_NTOHL (0x3a312e30), 
  ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/EnvironmentVariable:1.0
    20,
  ACE_NTOHL (0x456e7669), 
  ACE_NTOHL (0x726f6e6d), 
  ACE_NTOHL (0x656e7456), 
  ACE_NTOHL (0x61726961), 
  ACE_NTOHL (0x626c6500),  // name = EnvironmentVariable
  2, // member count
    5,
  ACE_NTOHL (0x6e616d65), 
  ACE_NTOHL (0x0),  // name = name
    CORBA::tk_string, 
  0U, // string length
  6,
  ACE_NTOHL (0x76616c75), 
  ACE_NTOHL (0x65000000),  // name = value
    CORBA::tk_string, 
  0U, // string length
};

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_EnvironmentVariable (
    CORBA::tk_struct,
    sizeof (_oc_ImplementationRepository_EnvironmentVariable),
    (char *) &_oc_ImplementationRepository_EnvironmentVariable,
    0,
    0
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr _tc_EnvironmentVariable =
    &_tc_TAO_tc_ImplementationRepository_EnvironmentVariable;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_ImplementationRepository_EnvironmentList[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  49,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f456e76), 
  ACE_NTOHL (0x69726f6e), 
  ACE_NTOHL (0x6d656e74), 
  ACE_NTOHL (0x4c697374), 
  ACE_NTOHL (0x3a312e30), 
  ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/EnvironmentList:1.0
    16,
  ACE_NTOHL (0x456e7669), 
  ACE_NTOHL (0x726f6e6d), 
  ACE_NTOHL (0x656e744c), 
  ACE_NTOHL (0x69737400),  // name = EnvironmentList
    CORBA::tk_sequence, // typecode kind
  148, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    CORBA::tk_struct, // typecode kind
    132, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      53,
      ACE_NTOHL (0x49444c3a), 
      ACE_NTOHL (0x496d706c), 
      ACE_NTOHL (0x656d656e), 
      ACE_NTOHL (0x74617469), 
      ACE_NTOHL (0x6f6e5265), 
      ACE_NTOHL (0x706f7369), 
      ACE_NTOHL (0x746f7279), 
      ACE_NTOHL (0x2f456e76), 
      ACE_NTOHL (0x69726f6e), 
      ACE_NTOHL (0x6d656e74), 
      ACE_NTOHL (0x56617269), 
      ACE_NTOHL (0x61626c65), 
      ACE_NTOHL (0x3a312e30), 
      ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/EnvironmentVariable:1.0
            20,
      ACE_NTOHL (0x456e7669), 
      ACE_NTOHL (0x726f6e6d), 
      ACE_NTOHL (0x656e7456), 
      ACE_NTOHL (0x61726961), 
      ACE_NTOHL (0x626c6500),  // name = EnvironmentVariable
      2, // member count
            5,
      ACE_NTOHL (0x6e616d65), 
      ACE_NTOHL (0x0),  // name = name
            CORBA::tk_string, 
      0U, // string length
      6,
      ACE_NTOHL (0x76616c75), 
      ACE_NTOHL (0x65000000),  // name = value
            CORBA::tk_string, 
      0U, // string length

    0U,

};

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_EnvironmentList (
    CORBA::tk_alias,
    sizeof (_oc_ImplementationRepository_EnvironmentList),
    (char *) &_oc_ImplementationRepository_EnvironmentList,
    0,
    0
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr _tc_EnvironmentList =
    &_tc_TAO_tc_ImplementationRepository_EnvironmentList;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_ImplementationRepository_ActivationMode[] =
{
  TAO_ENCAP_BYTE_ORDER, // byte order
  48,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f416374), 
  ACE_NTOHL (0x69766174), 
  ACE_NTOHL (0x696f6e4d), 
  ACE_NTOHL (0x6f64653a), 
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:ImplementationRepository/ActivationMode:1.0
  15,
  ACE_NTOHL (0x41637469), 
  ACE_NTOHL (0x76617469), 
  ACE_NTOHL (0x6f6e4d6f), 
  ACE_NTOHL (0x64650000),  // name = ActivationMode
  4, // member count
  7,
  ACE_NTOHL (0x4e4f524d), 
  ACE_NTOHL (0x414c0000),  // name = NORMAL
  7,
  ACE_NTOHL (0x4d414e55), 
  ACE_NTOHL (0x414c0000),  // name = MANUAL
  11,
  ACE_NTOHL (0x5045525f), 
  ACE_NTOHL (0x434c4945), 
  ACE_NTOHL (0x4e540000),  // name = PER_CLIENT
  11,
  ACE_NTOHL (0x4155544f), 
  ACE_NTOHL (0x5f535441), 
  ACE_NTOHL (0x52540000),  // name = AUTO_START
  };

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_ActivationMode (
    CORBA::tk_enum,
    sizeof (_oc_ImplementationRepository_ActivationMode),
    (char *) &_oc_ImplementationRepository_ActivationMode,
    0,
    0
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr _tc_ActivationMode =
    &_tc_TAO_tc_ImplementationRepository_ActivationMode;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_ImplementationRepository_StartupOptions[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  48,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f537461), 
  ACE_NTOHL (0x72747570), 
  ACE_NTOHL (0x4f707469), 
  ACE_NTOHL (0x6f6e733a), 
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:ImplementationRepository/StartupOptions:1.0
    15,
  ACE_NTOHL (0x53746172), 
  ACE_NTOHL (0x7475704f), 
  ACE_NTOHL (0x7074696f), 
  ACE_NTOHL (0x6e730000),  // name = StartupOptions
  6, // member count
    13,
  ACE_NTOHL (0x636f6d6d), 
  ACE_NTOHL (0x616e645f), 
  ACE_NTOHL (0x6c696e65), 
  ACE_NTOHL (0x0),  // name = command_line
    CORBA::tk_string, 
  0U, // string length
  12,
  ACE_NTOHL (0x656e7669), 
  ACE_NTOHL (0x726f6e6d), 
  ACE_NTOHL (0x656e7400),  // name = environment
    CORBA::tk_alias, // typecode kind for typedefs
  236, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    49,
    ACE_NTOHL (0x49444c3a), 
    ACE_NTOHL (0x496d706c), 
    ACE_NTOHL (0x656d656e), 
    ACE_NTOHL (0x74617469), 
    ACE_NTOHL (0x6f6e5265), 
    ACE_NTOHL (0x706f7369), 
    ACE_NTOHL (0x746f7279), 
    ACE_NTOHL (0x2f456e76), 
    ACE_NTOHL (0x69726f6e), 
    ACE_NTOHL (0x6d656e74), 
    ACE_NTOHL (0x4c697374), 
    ACE_NTOHL (0x3a312e30), 
    ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/EnvironmentList:1.0
        16,
    ACE_NTOHL (0x456e7669), 
    ACE_NTOHL (0x726f6e6d), 
    ACE_NTOHL (0x656e744c), 
    ACE_NTOHL (0x69737400),  // name = EnvironmentList
        CORBA::tk_sequence, // typecode kind
    148, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      CORBA::tk_struct, // typecode kind
      132, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        53,
        ACE_NTOHL (0x49444c3a), 
        ACE_NTOHL (0x496d706c), 
        ACE_NTOHL (0x656d656e), 
        ACE_NTOHL (0x74617469), 
        ACE_NTOHL (0x6f6e5265), 
        ACE_NTOHL (0x706f7369), 
        ACE_NTOHL (0x746f7279), 
        ACE_NTOHL (0x2f456e76), 
        ACE_NTOHL (0x69726f6e), 
        ACE_NTOHL (0x6d656e74), 
        ACE_NTOHL (0x56617269), 
        ACE_NTOHL (0x61626c65), 
        ACE_NTOHL (0x3a312e30), 
        ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/EnvironmentVariable:1.0
                20,
        ACE_NTOHL (0x456e7669), 
        ACE_NTOHL (0x726f6e6d), 
        ACE_NTOHL (0x656e7456), 
        ACE_NTOHL (0x61726961), 
        ACE_NTOHL (0x626c6500),  // name = EnvironmentVariable
        2, // member count
                5,
        ACE_NTOHL (0x6e616d65), 
        ACE_NTOHL (0x0),  // name = name
                CORBA::tk_string, 
        0U, // string length
        6,
        ACE_NTOHL (0x76616c75), 
        ACE_NTOHL (0x65000000),  // name = value
                CORBA::tk_string, 
        0U, // string length

      0U,


  18,
  ACE_NTOHL (0x776f726b), 
  ACE_NTOHL (0x696e675f), 
  ACE_NTOHL (0x64697265), 
  ACE_NTOHL (0x63746f72), 
  ACE_NTOHL (0x79000000),  // name = working_directory
    CORBA::tk_string, 
  0U, // string length
  11,
  ACE_NTOHL (0x61637469), 
  ACE_NTOHL (0x76617469), 
  ACE_NTOHL (0x6f6e0000),  // name = activation
    CORBA::tk_enum, // typecode kind
  136, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
    48,
    ACE_NTOHL (0x49444c3a), 
    ACE_NTOHL (0x496d706c), 
    ACE_NTOHL (0x656d656e), 
    ACE_NTOHL (0x74617469), 
    ACE_NTOHL (0x6f6e5265), 
    ACE_NTOHL (0x706f7369), 
    ACE_NTOHL (0x746f7279), 
    ACE_NTOHL (0x2f416374), 
    ACE_NTOHL (0x69766174), 
    ACE_NTOHL (0x696f6e4d), 
    ACE_NTOHL (0x6f64653a), 
    ACE_NTOHL (0x312e3000),  // repository ID = IDL:ImplementationRepository/ActivationMode:1.0
    15,
    ACE_NTOHL (0x41637469), 
    ACE_NTOHL (0x76617469), 
    ACE_NTOHL (0x6f6e4d6f), 
    ACE_NTOHL (0x64650000),  // name = ActivationMode
    4, // member count
    7,
    ACE_NTOHL (0x4e4f524d), 
    ACE_NTOHL (0x414c0000),  // name = NORMAL
    7,
    ACE_NTOHL (0x4d414e55), 
    ACE_NTOHL (0x414c0000),  // name = MANUAL
    11,
    ACE_NTOHL (0x5045525f), 
    ACE_NTOHL (0x434c4945), 
    ACE_NTOHL (0x4e540000),  // name = PER_CLIENT
    11,
    ACE_NTOHL (0x4155544f), 
    ACE_NTOHL (0x5f535441), 
    ACE_NTOHL (0x52540000),  // name = AUTO_START
    
  10,
  ACE_NTOHL (0x61637469), 
  ACE_NTOHL (0x7661746f), 
  ACE_NTOHL (0x72000000),  // name = activator
    CORBA::tk_string, 
  0U, // string length
  12,
  ACE_NTOHL (0x73746172), 
  ACE_NTOHL (0x745f6c69), 
  ACE_NTOHL (0x6d697400),  // name = start_limit
    CORBA::tk_long,

};

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_StartupOptions (
    CORBA::tk_struct,
    sizeof (_oc_ImplementationRepository_StartupOptions),
    (char *) &_oc_ImplementationRepository_StartupOptions,
    0,
    0
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr _tc_StartupOptions =
    &_tc_TAO_tc_ImplementationRepository_StartupOptions;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_ImplementationRepository_ServerInformation[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  51,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f536572), 
  ACE_NTOHL (0x76657249), 
  ACE_NTOHL (0x6e666f72), 
  ACE_NTOHL (0x6d617469), 
  ACE_NTOHL (0x6f6e3a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:ImplementationRepository/ServerInformation:1.0
    18,
  ACE_NTOHL (0x53657276), 
  ACE_NTOHL (0x6572496e), 
  ACE_NTOHL (0x666f726d), 
  ACE_NTOHL (0x6174696f), 
  ACE_NTOHL (0x6e000000),  // name = ServerInformation
  3, // member count
    7,
  ACE_NTOHL (0x73657276), 
  ACE_NTOHL (0x65720000),  // name = server
    CORBA::tk_string, 
  0U, // string length
  8,
  ACE_NTOHL (0x73746172), 
  ACE_NTOHL (0x74757000),  // name = startup
    CORBA::tk_struct, // typecode kind
  604, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    48,
    ACE_NTOHL (0x49444c3a), 
    ACE_NTOHL (0x496d706c), 
    ACE_NTOHL (0x656d656e), 
    ACE_NTOHL (0x74617469), 
    ACE_NTOHL (0x6f6e5265), 
    ACE_NTOHL (0x706f7369), 
    ACE_NTOHL (0x746f7279), 
    ACE_NTOHL (0x2f537461), 
    ACE_NTOHL (0x72747570), 
    ACE_NTOHL (0x4f707469), 
    ACE_NTOHL (0x6f6e733a), 
    ACE_NTOHL (0x312e3000),  // repository ID = IDL:ImplementationRepository/StartupOptions:1.0
        15,
    ACE_NTOHL (0x53746172), 
    ACE_NTOHL (0x7475704f), 
    ACE_NTOHL (0x7074696f), 
    ACE_NTOHL (0x6e730000),  // name = StartupOptions
    6, // member count
        13,
    ACE_NTOHL (0x636f6d6d), 
    ACE_NTOHL (0x616e645f), 
    ACE_NTOHL (0x6c696e65), 
    ACE_NTOHL (0x0),  // name = command_line
        CORBA::tk_string, 
    0U, // string length
    12,
    ACE_NTOHL (0x656e7669), 
    ACE_NTOHL (0x726f6e6d), 
    ACE_NTOHL (0x656e7400),  // name = environment
        CORBA::tk_alias, // typecode kind for typedefs
    236, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      49,
      ACE_NTOHL (0x49444c3a), 
      ACE_NTOHL (0x496d706c), 
      ACE_NTOHL (0x656d656e), 
      ACE_NTOHL (0x74617469), 
      ACE_NTOHL (0x6f6e5265), 
      ACE_NTOHL (0x706f7369), 
      ACE_NTOHL (0x746f7279), 
      ACE_NTOHL (0x2f456e76), 
      ACE_NTOHL (0x69726f6e), 
      ACE_NTOHL (0x6d656e74), 
      ACE_NTOHL (0x4c697374), 
      ACE_NTOHL (0x3a312e30), 
      ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/EnvironmentList:1.0
            16,
      ACE_NTOHL (0x456e7669), 
      ACE_NTOHL (0x726f6e6d), 
      ACE_NTOHL (0x656e744c), 
      ACE_NTOHL (0x69737400),  // name = EnvironmentList
            CORBA::tk_sequence, // typecode kind
      148, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        CORBA::tk_struct, // typecode kind
        132, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          53,
          ACE_NTOHL (0x49444c3a), 
          ACE_NTOHL (0x496d706c), 
          ACE_NTOHL (0x656d656e), 
          ACE_NTOHL (0x74617469), 
          ACE_NTOHL (0x6f6e5265), 
          ACE_NTOHL (0x706f7369), 
          ACE_NTOHL (0x746f7279), 
          ACE_NTOHL (0x2f456e76), 
          ACE_NTOHL (0x69726f6e), 
          ACE_NTOHL (0x6d656e74), 
          ACE_NTOHL (0x56617269), 
          ACE_NTOHL (0x61626c65), 
          ACE_NTOHL (0x3a312e30), 
          ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/EnvironmentVariable:1.0
                    20,
          ACE_NTOHL (0x456e7669), 
          ACE_NTOHL (0x726f6e6d), 
          ACE_NTOHL (0x656e7456), 
          ACE_NTOHL (0x61726961), 
          ACE_NTOHL (0x626c6500),  // name = EnvironmentVariable
          2, // member count
                    5,
          ACE_NTOHL (0x6e616d65), 
          ACE_NTOHL (0x0),  // name = name
                    CORBA::tk_string, 
          0U, // string length
          6,
          ACE_NTOHL (0x76616c75), 
          ACE_NTOHL (0x65000000),  // name = value
                    CORBA::tk_string, 
          0U, // string length

        0U,


    18,
    ACE_NTOHL (0x776f726b), 
    ACE_NTOHL (0x696e675f), 
    ACE_NTOHL (0x64697265), 
    ACE_NTOHL (0x63746f72), 
    ACE_NTOHL (0x79000000),  // name = working_directory
        CORBA::tk_string, 
    0U, // string length
    11,
    ACE_NTOHL (0x61637469), 
    ACE_NTOHL (0x76617469), 
    ACE_NTOHL (0x6f6e0000),  // name = activation
        CORBA::tk_enum, // typecode kind
    136, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
      48,
      ACE_NTOHL (0x49444c3a), 
      ACE_NTOHL (0x496d706c), 
      ACE_NTOHL (0x656d656e), 
      ACE_NTOHL (0x74617469), 
      ACE_NTOHL (0x6f6e5265), 
      ACE_NTOHL (0x706f7369), 
      ACE_NTOHL (0x746f7279), 
      ACE_NTOHL (0x2f416374), 
      ACE_NTOHL (0x69766174), 
      ACE_NTOHL (0x696f6e4d), 
      ACE_NTOHL (0x6f64653a), 
      ACE_NTOHL (0x312e3000),  // repository ID = IDL:ImplementationRepository/ActivationMode:1.0
      15,
      ACE_NTOHL (0x41637469), 
      ACE_NTOHL (0x76617469), 
      ACE_NTOHL (0x6f6e4d6f), 
      ACE_NTOHL (0x64650000),  // name = ActivationMode
      4, // member count
      7,
      ACE_NTOHL (0x4e4f524d), 
      ACE_NTOHL (0x414c0000),  // name = NORMAL
      7,
      ACE_NTOHL (0x4d414e55), 
      ACE_NTOHL (0x414c0000),  // name = MANUAL
      11,
      ACE_NTOHL (0x5045525f), 
      ACE_NTOHL (0x434c4945), 
      ACE_NTOHL (0x4e540000),  // name = PER_CLIENT
      11,
      ACE_NTOHL (0x4155544f), 
      ACE_NTOHL (0x5f535441), 
      ACE_NTOHL (0x52540000),  // name = AUTO_START
      
    10,
    ACE_NTOHL (0x61637469), 
    ACE_NTOHL (0x7661746f), 
    ACE_NTOHL (0x72000000),  // name = activator
        CORBA::tk_string, 
    0U, // string length
    12,
    ACE_NTOHL (0x73746172), 
    ACE_NTOHL (0x745f6c69), 
    ACE_NTOHL (0x6d697400),  // name = start_limit
        CORBA::tk_long,


  12,
  ACE_NTOHL (0x70617274), 
  ACE_NTOHL (0x69616c5f), 
  ACE_NTOHL (0x696f7200),  // name = partial_ior
    CORBA::tk_string, 
  0U, // string length
};

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_ServerInformation (
    CORBA::tk_struct,
    sizeof (_oc_ImplementationRepository_ServerInformation),
    (char *) &_oc_ImplementationRepository_ServerInformation,
    0,
    0
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr _tc_ServerInformation =
    &_tc_TAO_tc_ImplementationRepository_ServerInformation;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_ImplementationRepository_ServerInformationList[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  55,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f536572), 
  ACE_NTOHL (0x76657249), 
  ACE_NTOHL (0x6e666f72), 
  ACE_NTOHL (0x6d617469), 
  ACE_NTOHL (0x6f6e4c69), 
  ACE_NTOHL (0x73743a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:ImplementationRepository/ServerInformationList:1.0
    22,
  ACE_NTOHL (0x53657276), 
  ACE_NTOHL (0x6572496e), 
  ACE_NTOHL (0x666f726d), 
  ACE_NTOHL (0x6174696f), 
  ACE_NTOHL (0x6e4c6973), 
  ACE_NTOHL (0x74000000),  // name = ServerInformationList
    CORBA::tk_sequence, // typecode kind
  772, // encapsulation length
    TAO_ENCAP_BYTE_ORDER, // byte order
    CORBA::tk_struct, // typecode kind
    756, // encapsulation length
      TAO_ENCAP_BYTE_ORDER, // byte order
      51,
      ACE_NTOHL (0x49444c3a), 
      ACE_NTOHL (0x496d706c), 
      ACE_NTOHL (0x656d656e), 
      ACE_NTOHL (0x74617469), 
      ACE_NTOHL (0x6f6e5265), 
      ACE_NTOHL (0x706f7369), 
      ACE_NTOHL (0x746f7279), 
      ACE_NTOHL (0x2f536572), 
      ACE_NTOHL (0x76657249), 
      ACE_NTOHL (0x6e666f72), 
      ACE_NTOHL (0x6d617469), 
      ACE_NTOHL (0x6f6e3a31), 
      ACE_NTOHL (0x2e300000),  // repository ID = IDL:ImplementationRepository/ServerInformation:1.0
            18,
      ACE_NTOHL (0x53657276), 
      ACE_NTOHL (0x6572496e), 
      ACE_NTOHL (0x666f726d), 
      ACE_NTOHL (0x6174696f), 
      ACE_NTOHL (0x6e000000),  // name = ServerInformation
      3, // member count
            7,
      ACE_NTOHL (0x73657276), 
      ACE_NTOHL (0x65720000),  // name = server
            CORBA::tk_string, 
      0U, // string length
      8,
      ACE_NTOHL (0x73746172), 
      ACE_NTOHL (0x74757000),  // name = startup
            CORBA::tk_struct, // typecode kind
      604, // encapsulation length
        TAO_ENCAP_BYTE_ORDER, // byte order
        48,
        ACE_NTOHL (0x49444c3a), 
        ACE_NTOHL (0x496d706c), 
        ACE_NTOHL (0x656d656e), 
        ACE_NTOHL (0x74617469), 
        ACE_NTOHL (0x6f6e5265), 
        ACE_NTOHL (0x706f7369), 
        ACE_NTOHL (0x746f7279), 
        ACE_NTOHL (0x2f537461), 
        ACE_NTOHL (0x72747570), 
        ACE_NTOHL (0x4f707469), 
        ACE_NTOHL (0x6f6e733a), 
        ACE_NTOHL (0x312e3000),  // repository ID = IDL:ImplementationRepository/StartupOptions:1.0
                15,
        ACE_NTOHL (0x53746172), 
        ACE_NTOHL (0x7475704f), 
        ACE_NTOHL (0x7074696f), 
        ACE_NTOHL (0x6e730000),  // name = StartupOptions
        6, // member count
                13,
        ACE_NTOHL (0x636f6d6d), 
        ACE_NTOHL (0x616e645f), 
        ACE_NTOHL (0x6c696e65), 
        ACE_NTOHL (0x0),  // name = command_line
                CORBA::tk_string, 
        0U, // string length
        12,
        ACE_NTOHL (0x656e7669), 
        ACE_NTOHL (0x726f6e6d), 
        ACE_NTOHL (0x656e7400),  // name = environment
                CORBA::tk_alias, // typecode kind for typedefs
        236, // encapsulation length
          TAO_ENCAP_BYTE_ORDER, // byte order
          49,
          ACE_NTOHL (0x49444c3a), 
          ACE_NTOHL (0x496d706c), 
          ACE_NTOHL (0x656d656e), 
          ACE_NTOHL (0x74617469), 
          ACE_NTOHL (0x6f6e5265), 
          ACE_NTOHL (0x706f7369), 
          ACE_NTOHL (0x746f7279), 
          ACE_NTOHL (0x2f456e76), 
          ACE_NTOHL (0x69726f6e), 
          ACE_NTOHL (0x6d656e74), 
          ACE_NTOHL (0x4c697374), 
          ACE_NTOHL (0x3a312e30), 
          ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/EnvironmentList:1.0
                    16,
          ACE_NTOHL (0x456e7669), 
          ACE_NTOHL (0x726f6e6d), 
          ACE_NTOHL (0x656e744c), 
          ACE_NTOHL (0x69737400),  // name = EnvironmentList
                    CORBA::tk_sequence, // typecode kind
          148, // encapsulation length
            TAO_ENCAP_BYTE_ORDER, // byte order
            CORBA::tk_struct, // typecode kind
            132, // encapsulation length
              TAO_ENCAP_BYTE_ORDER, // byte order
              53,
              ACE_NTOHL (0x49444c3a), 
              ACE_NTOHL (0x496d706c), 
              ACE_NTOHL (0x656d656e), 
              ACE_NTOHL (0x74617469), 
              ACE_NTOHL (0x6f6e5265), 
              ACE_NTOHL (0x706f7369), 
              ACE_NTOHL (0x746f7279), 
              ACE_NTOHL (0x2f456e76), 
              ACE_NTOHL (0x69726f6e), 
              ACE_NTOHL (0x6d656e74), 
              ACE_NTOHL (0x56617269), 
              ACE_NTOHL (0x61626c65), 
              ACE_NTOHL (0x3a312e30), 
              ACE_NTOHL (0x0),  // repository ID = IDL:ImplementationRepository/EnvironmentVariable:1.0
                            20,
              ACE_NTOHL (0x456e7669), 
              ACE_NTOHL (0x726f6e6d), 
              ACE_NTOHL (0x656e7456), 
              ACE_NTOHL (0x61726961), 
              ACE_NTOHL (0x626c6500),  // name = EnvironmentVariable
              2, // member count
                            5,
              ACE_NTOHL (0x6e616d65), 
              ACE_NTOHL (0x0),  // name = name
                            CORBA::tk_string, 
              0U, // string length
              6,
              ACE_NTOHL (0x76616c75), 
              ACE_NTOHL (0x65000000),  // name = value
                            CORBA::tk_string, 
              0U, // string length

            0U,


        18,
        ACE_NTOHL (0x776f726b), 
        ACE_NTOHL (0x696e675f), 
        ACE_NTOHL (0x64697265), 
        ACE_NTOHL (0x63746f72), 
        ACE_NTOHL (0x79000000),  // name = working_directory
                CORBA::tk_string, 
        0U, // string length
        11,
        ACE_NTOHL (0x61637469), 
        ACE_NTOHL (0x76617469), 
        ACE_NTOHL (0x6f6e0000),  // name = activation
                CORBA::tk_enum, // typecode kind
        136, // encapsulation length
TAO_ENCAP_BYTE_ORDER, // byte order
          48,
          ACE_NTOHL (0x49444c3a), 
          ACE_NTOHL (0x496d706c), 
          ACE_NTOHL (0x656d656e), 
          ACE_NTOHL (0x74617469), 
          ACE_NTOHL (0x6f6e5265), 
          ACE_NTOHL (0x706f7369), 
          ACE_NTOHL (0x746f7279), 
          ACE_NTOHL (0x2f416374), 
          ACE_NTOHL (0x69766174), 
          ACE_NTOHL (0x696f6e4d), 
          ACE_NTOHL (0x6f64653a), 
          ACE_NTOHL (0x312e3000),  // repository ID = IDL:ImplementationRepository/ActivationMode:1.0
          15,
          ACE_NTOHL (0x41637469), 
          ACE_NTOHL (0x76617469), 
          ACE_NTOHL (0x6f6e4d6f), 
          ACE_NTOHL (0x64650000),  // name = ActivationMode
          4, // member count
          7,
          ACE_NTOHL (0x4e4f524d), 
          ACE_NTOHL (0x414c0000),  // name = NORMAL
          7,
          ACE_NTOHL (0x4d414e55), 
          ACE_NTOHL (0x414c0000),  // name = MANUAL
          11,
          ACE_NTOHL (0x5045525f), 
          ACE_NTOHL (0x434c4945), 
          ACE_NTOHL (0x4e540000),  // name = PER_CLIENT
          11,
          ACE_NTOHL (0x4155544f), 
          ACE_NTOHL (0x5f535441), 
          ACE_NTOHL (0x52540000),  // name = AUTO_START
          
        10,
        ACE_NTOHL (0x61637469), 
        ACE_NTOHL (0x7661746f), 
        ACE_NTOHL (0x72000000),  // name = activator
                CORBA::tk_string, 
        0U, // string length
        12,
        ACE_NTOHL (0x73746172), 
        ACE_NTOHL (0x745f6c69), 
        ACE_NTOHL (0x6d697400),  // name = start_limit
                CORBA::tk_long,


      12,
      ACE_NTOHL (0x70617274), 
      ACE_NTOHL (0x69616c5f), 
      ACE_NTOHL (0x696f7200),  // name = partial_ior
            CORBA::tk_string, 
      0U, // string length

    0U,

};

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_ServerInformationList (
    CORBA::tk_alias,
    sizeof (_oc_ImplementationRepository_ServerInformationList),
    (char *) &_oc_ImplementationRepository_ServerInformationList,
    0,
    0
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr _tc_ServerInformationList =
    &_tc_TAO_tc_ImplementationRepository_ServerInformationList;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_ImplementationRepository_ServerInformationIterator[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  59,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f536572), 
  ACE_NTOHL (0x76657249), 
  ACE_NTOHL (0x6e666f72), 
  ACE_NTOHL (0x6d617469), 
  ACE_NTOHL (0x6f6e4974), 
  ACE_NTOHL (0x65726174), 
  ACE_NTOHL (0x6f723a31), 
  ACE_NTOHL (0x2e300000),  // repository ID = IDL:ImplementationRepository/ServerInformationIterator:1.0
    26,
  ACE_NTOHL (0x53657276), 
  ACE_NTOHL (0x6572496e), 
  ACE_NTOHL (0x666f726d), 
  ACE_NTOHL (0x6174696f), 
  ACE_NTOHL (0x6e497465), 
  ACE_NTOHL (0x7261746f), 
  ACE_NTOHL (0x72000000),  // name = ServerInformationIterator
  };

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_ServerInformationIterator (
    CORBA::tk_objref,
    sizeof (_oc_ImplementationRepository_ServerInformationIterator),
    (char *) &_oc_ImplementationRepository_ServerInformationIterator,
    0,
    0
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr _tc_ServerInformationIterator =
    &_tc_TAO_tc_ImplementationRepository_ServerInformationIterator;
}

// TAO_IDL - Generated from
// be\be_visitor_typecode/typecode_defn.cpp:295

static const CORBA::Long _oc_ImplementationRepository_Administration[] =
{
    TAO_ENCAP_BYTE_ORDER, // byte order
  48,
  ACE_NTOHL (0x49444c3a), 
  ACE_NTOHL (0x496d706c), 
  ACE_NTOHL (0x656d656e), 
  ACE_NTOHL (0x74617469), 
  ACE_NTOHL (0x6f6e5265), 
  ACE_NTOHL (0x706f7369), 
  ACE_NTOHL (0x746f7279), 
  ACE_NTOHL (0x2f41646d), 
  ACE_NTOHL (0x696e6973), 
  ACE_NTOHL (0x74726174), 
  ACE_NTOHL (0x696f6e3a), 
  ACE_NTOHL (0x312e3000),  // repository ID = IDL:ImplementationRepository/Administration:1.0
    15,
  ACE_NTOHL (0x41646d69), 
  ACE_NTOHL (0x6e697374), 
  ACE_NTOHL (0x72617469), 
  ACE_NTOHL (0x6f6e0000),  // name = Administration
  };

static CORBA::TypeCode _tc_TAO_tc_ImplementationRepository_Administration (
    CORBA::tk_objref,
    sizeof (_oc_ImplementationRepository_Administration),
    (char *) &_oc_ImplementationRepository_Administration,
    0,
    0
  );

namespace ImplementationRepository
{
  ::CORBA::TypeCode_ptr _tc_Administration =
    &_tc_TAO_tc_ImplementationRepository_Administration;
}

// TAO_IDL - Generated from 
// be\be_visitor_exception/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Dual_Impl_T<ImplementationRepository::AlreadyRegistered>::demarshal_value (
    TAO_InputCDR & cdr
  )
{
  CORBA::String_var id;
  
  if (!(cdr >> id.out ()))
    {
      return false;
    }
  
  ACE_TRY_NEW_ENV
    {
      this->value_->_tao_decode (cdr ACE_ENV_ARG_PARAMETER);
      ACE_TRY_CHECK;
    }
  ACE_CATCHANY
    {
      return false;
    }
  ACE_ENDTRY;
  
  return true;
}

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const ImplementationRepository::AlreadyRegistered &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::AlreadyRegistered>::insert_copy (
      _tao_any,
      ImplementationRepository::AlreadyRegistered::_tao_any_destructor,
      ImplementationRepository::_tc_AlreadyRegistered,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::AlreadyRegistered *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::AlreadyRegistered>::insert (
      _tao_any,
      ImplementationRepository::AlreadyRegistered::_tao_any_destructor,
      ImplementationRepository::_tc_AlreadyRegistered,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::AlreadyRegistered *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::AlreadyRegistered *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const ImplementationRepository::AlreadyRegistered *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::AlreadyRegistered>::extract (
        _tao_any,
        ImplementationRepository::AlreadyRegistered::_tao_any_destructor,
        ImplementationRepository::_tc_AlreadyRegistered,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be\be_visitor_exception/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Dual_Impl_T<ImplementationRepository::CannotActivate>::demarshal_value (
    TAO_InputCDR & cdr
  )
{
  CORBA::String_var id;
  
  if (!(cdr >> id.out ()))
    {
      return false;
    }
  
  ACE_TRY_NEW_ENV
    {
      this->value_->_tao_decode (cdr ACE_ENV_ARG_PARAMETER);
      ACE_TRY_CHECK;
    }
  ACE_CATCHANY
    {
      return false;
    }
  ACE_ENDTRY;
  
  return true;
}

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const ImplementationRepository::CannotActivate &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::CannotActivate>::insert_copy (
      _tao_any,
      ImplementationRepository::CannotActivate::_tao_any_destructor,
      ImplementationRepository::_tc_CannotActivate,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::CannotActivate *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::CannotActivate>::insert (
      _tao_any,
      ImplementationRepository::CannotActivate::_tao_any_destructor,
      ImplementationRepository::_tc_CannotActivate,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::CannotActivate *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::CannotActivate *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const ImplementationRepository::CannotActivate *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::CannotActivate>::extract (
        _tao_any,
        ImplementationRepository::CannotActivate::_tao_any_destructor,
        ImplementationRepository::_tc_CannotActivate,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be\be_visitor_exception/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Dual_Impl_T<ImplementationRepository::NotFound>::demarshal_value (
    TAO_InputCDR & cdr
  )
{
  CORBA::String_var id;
  
  if (!(cdr >> id.out ()))
    {
      return false;
    }
  
  ACE_TRY_NEW_ENV
    {
      this->value_->_tao_decode (cdr ACE_ENV_ARG_PARAMETER);
      ACE_TRY_CHECK;
    }
  ACE_CATCHANY
    {
      return false;
    }
  ACE_ENDTRY;
  
  return true;
}

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const ImplementationRepository::NotFound &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::NotFound>::insert_copy (
      _tao_any,
      ImplementationRepository::NotFound::_tao_any_destructor,
      ImplementationRepository::_tc_NotFound,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::NotFound *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::NotFound>::insert (
      _tao_any,
      ImplementationRepository::NotFound::_tao_any_destructor,
      ImplementationRepository::_tc_NotFound,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::NotFound *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::NotFound *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const ImplementationRepository::NotFound *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::NotFound>::extract (
        _tao_any,
        ImplementationRepository::NotFound::_tao_any_destructor,
        ImplementationRepository::_tc_NotFound,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const ImplementationRepository::EnvironmentVariable &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::EnvironmentVariable>::insert_copy (
      _tao_any,
      ImplementationRepository::EnvironmentVariable::_tao_any_destructor,
      ImplementationRepository::_tc_EnvironmentVariable,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::EnvironmentVariable *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::EnvironmentVariable>::insert (
      _tao_any,
      ImplementationRepository::EnvironmentVariable::_tao_any_destructor,
      ImplementationRepository::_tc_EnvironmentVariable,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::EnvironmentVariable *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::EnvironmentVariable *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const ImplementationRepository::EnvironmentVariable *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::EnvironmentVariable>::extract (
        _tao_any,
        ImplementationRepository::EnvironmentVariable::_tao_any_destructor,
        ImplementationRepository::_tc_EnvironmentVariable,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be\be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const ImplementationRepository::EnvironmentList &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::EnvironmentList>::insert_copy (
      _tao_any,
      ImplementationRepository::EnvironmentList::_tao_any_destructor,
      ImplementationRepository::_tc_EnvironmentList,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::EnvironmentList *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::EnvironmentList>::insert (
      _tao_any,
      ImplementationRepository::EnvironmentList::_tao_any_destructor,
      ImplementationRepository::_tc_EnvironmentList,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::EnvironmentList *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::EnvironmentList *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const ImplementationRepository::EnvironmentList *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::EnvironmentList>::extract (
        _tao_any,
        ImplementationRepository::EnvironmentList::_tao_any_destructor,
        ImplementationRepository::_tc_EnvironmentList,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_enum/any_op_cs.cpp:52

void operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::ActivationMode _tao_elem
  )
{
  TAO::Any_Basic_Impl_T<ImplementationRepository::ActivationMode>::insert (
      _tao_any,
      ImplementationRepository::_tc_ActivationMode,
      _tao_elem
    );
}

CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::ActivationMode &_tao_elem
  )
{
  return
    TAO::Any_Basic_Impl_T<ImplementationRepository::ActivationMode>::extract (
        _tao_any,
        ImplementationRepository::_tc_ActivationMode,
        _tao_elem 
      );
}

// TAO_IDL - Generated from 
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const ImplementationRepository::StartupOptions &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::StartupOptions>::insert_copy (
      _tao_any,
      ImplementationRepository::StartupOptions::_tao_any_destructor,
      ImplementationRepository::_tc_StartupOptions,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::StartupOptions *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::StartupOptions>::insert (
      _tao_any,
      ImplementationRepository::StartupOptions::_tao_any_destructor,
      ImplementationRepository::_tc_StartupOptions,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::StartupOptions *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::StartupOptions *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const ImplementationRepository::StartupOptions *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::StartupOptions>::extract (
        _tao_any,
        ImplementationRepository::StartupOptions::_tao_any_destructor,
        ImplementationRepository::_tc_StartupOptions,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be\be_visitor_structure/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const ImplementationRepository::ServerInformation &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::ServerInformation>::insert_copy (
      _tao_any,
      ImplementationRepository::ServerInformation::_tao_any_destructor,
      ImplementationRepository::_tc_ServerInformation,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformation *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::ServerInformation>::insert (
      _tao_any,
      ImplementationRepository::ServerInformation::_tao_any_destructor,
      ImplementationRepository::_tc_ServerInformation,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformation *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::ServerInformation *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const ImplementationRepository::ServerInformation *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::ServerInformation>::extract (
        _tao_any,
        ImplementationRepository::ServerInformation::_tao_any_destructor,
        ImplementationRepository::_tc_ServerInformation,
        _tao_elem
      );
}

// TAO_IDL - Generated from 
// be\be_visitor_sequence/any_op_cs.cpp:54

// Copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    const ImplementationRepository::ServerInformationList &_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::ServerInformationList>::insert_copy (
      _tao_any,
      ImplementationRepository::ServerInformationList::_tao_any_destructor,
      ImplementationRepository::_tc_ServerInformationList,
      _tao_elem
    );
}

// Non-copying insertion.
void operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformationList *_tao_elem
  )
{
  TAO::Any_Dual_Impl_T<ImplementationRepository::ServerInformationList>::insert (
      _tao_any,
      ImplementationRepository::ServerInformationList::_tao_any_destructor,
      ImplementationRepository::_tc_ServerInformationList,
      _tao_elem
    );
}

// Extraction to non-const pointer (deprecated).
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformationList *&_tao_elem
  )
{
  return _tao_any >>= const_cast<
      const ImplementationRepository::ServerInformationList *&> (
      _tao_elem
    );
}

// Extraction to const pointer.
CORBA::Boolean operator>>= (
    const CORBA::Any &_tao_any,
    const ImplementationRepository::ServerInformationList *&_tao_elem
  )
{
  return
    TAO::Any_Dual_Impl_T<ImplementationRepository::ServerInformationList>::extract (
        _tao_any,
        ImplementationRepository::ServerInformationList::_tao_any_destructor,
        ImplementationRepository::_tc_ServerInformationList,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<ImplementationRepository::ServerInformationIterator>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformationIterator_ptr _tao_elem
  )
{
  ImplementationRepository::ServerInformationIterator_ptr _tao_objptr =
    ImplementationRepository::ServerInformationIterator::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformationIterator_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<ImplementationRepository::ServerInformationIterator>::insert (
      _tao_any,
      ImplementationRepository::ServerInformationIterator::_tao_any_destructor,
      ImplementationRepository::_tc_ServerInformationIterator,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::ServerInformationIterator_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<ImplementationRepository::ServerInformationIterator>::extract (
        _tao_any,
        ImplementationRepository::ServerInformationIterator::_tao_any_destructor,
        ImplementationRepository::_tc_ServerInformationIterator,
        _tao_elem
      );
}

// TAO_IDL - Generated from
// be\be_visitor_interface/any_op_cs.cpp:50

ACE_TEMPLATE_SPECIALIZATION
CORBA::Boolean
TAO::Any_Impl_T<ImplementationRepository::Administration>::to_object (
    CORBA::Object_ptr &_tao_elem
  ) const
{
  _tao_elem = CORBA::Object::_duplicate (this->value_);
  return 1;
}

// Copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::Administration_ptr _tao_elem
  )
{
  ImplementationRepository::Administration_ptr _tao_objptr =
    ImplementationRepository::Administration::_duplicate (_tao_elem);
  _tao_any <<= &_tao_objptr;
}

// Non-copying insertion.
void
operator<<= (
    CORBA::Any &_tao_any,
    ImplementationRepository::Administration_ptr *_tao_elem
  )
{
  TAO::Any_Impl_T<ImplementationRepository::Administration>::insert (
      _tao_any,
      ImplementationRepository::Administration::_tao_any_destructor,
      ImplementationRepository::_tc_Administration,
      *_tao_elem
    );
}

CORBA::Boolean
operator>>= (
    const CORBA::Any &_tao_any,
    ImplementationRepository::Administration_ptr &_tao_elem
  )
{
  return
    TAO::Any_Impl_T<ImplementationRepository::Administration>::extract (
        _tao_any,
        ImplementationRepository::Administration::_tao_any_destructor,
        ImplementationRepository::_tc_Administration,
        _tao_elem
      );
}

#if defined (ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION)

  template class
    TAO::Any_Dual_Impl_T<
        ImplementationRepository::AlreadyRegistered
      >;

  template class
    TAO::Any_Dual_Impl_T<
        ImplementationRepository::CannotActivate
      >;

  template class
    TAO::Any_Dual_Impl_T<
        ImplementationRepository::NotFound
      >;

  template class
    TAO::Any_Dual_Impl_T<
        ImplementationRepository::EnvironmentVariable
      >;

  template class
    TAO::Any_Dual_Impl_T<
        ImplementationRepository::EnvironmentList
      >;

  template class
    TAO::Any_Basic_Impl_T<
        ImplementationRepository::ActivationMode
      >;

  template class
    TAO::Any_Dual_Impl_T<
        ImplementationRepository::StartupOptions
      >;

  template class
    TAO::Any_Dual_Impl_T<
        ImplementationRepository::ServerInformation
      >;

  template class
    TAO::Any_Dual_Impl_T<
        ImplementationRepository::ServerInformationList
      >;

  template class
    TAO::Any_Impl_T<
        ImplementationRepository::ServerInformationIterator
      >;

  template class
    TAO::Any_Impl_T<
        ImplementationRepository::Administration
      >;

#elif defined (ACE_HAS_TEMPLATE_INSTANTIATION_PRAGMA)

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        ImplementationRepository::AlreadyRegistered \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        ImplementationRepository::CannotActivate \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        ImplementationRepository::NotFound \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        ImplementationRepository::EnvironmentVariable \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        ImplementationRepository::EnvironmentList \
      >

# pragma instantiate \
    TAO::Any_Basic_Impl_T< \
        ImplementationRepository::ActivationMode \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        ImplementationRepository::StartupOptions \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        ImplementationRepository::ServerInformation \
      >

# pragma instantiate \
    TAO::Any_Dual_Impl_T< \
        ImplementationRepository::ServerInformationList \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        ImplementationRepository::ServerInformationIterator \
      >

# pragma instantiate \
    TAO::Any_Impl_T< \
        ImplementationRepository::Administration \
      >

#endif /* !ACE_HAS_EXPLICIT_TEMPLATE_INSTANTIATION */ 
