//$Id$
project(TAO) : acelib, taoversion, core, tao_output, taodefaults, pidl, extra_core {
  sharedname   = TAO
  dynamicflags = TAO_BUILD_DLL

  // It is no longer necessary to override IDL_Files since it is a
  // custom build type and comes from the taoidldefaults base project.

  Source_Files(TAO_COMPONENTS) {
    Abstract_Servant_Base.cpp
    Acceptor_Filter.cpp
    Acceptor_Registry.cpp
    Adapter.cpp
    Adapter_Factory.cpp
    Adapter_Registry.cpp
    Any.cpp
    Any_Basic_Impl.cpp
    Any_Impl.cpp
    Any_SystemException.cpp
    Any_Unknown_IDL_Type.cpp
    AnySeqA.cpp
    AnySeqC.cpp
    append.cpp
    Argument.cpp
    Asynch_Queued_Message.cpp
    Asynch_Reply_Dispatcher_Base.cpp
    Base_Transport_Property.cpp
    Basic_Arguments.cpp
    BiDir_Adapter.cpp
    Bind_Dispatcher_Guard.cpp
    Block_Flushing_Strategy.cpp
    Blocked_Connect_Strategy.cpp
    BooleanSeqA.cpp
    BooleanSeqC.cpp
    BoundsA.cpp
    BoundsC.cpp
    Cache_Entries.cpp
    CDR.cpp
    CDR_Encaps_Codec.cpp
    CharSeqA.cpp
    CharSeqC.cpp
    Cleanup_Func_Registry.cpp
    Client_Strategy_Factory.cpp
    ClientRequestInfo.cpp
    ClientRequestInfo_i.cpp
    ClientRequestInterceptor_Adapter.cpp
    CodecFactory.cpp
    CodecFactory_ORBInitializer.cpp
    Codeset_Manager.cpp
    Codeset_Translator_Factory.cpp
    Collocated_Invocation.cpp
    Collocation_Resolver.cpp
    Connect_Strategy.cpp
    Connection_Handler.cpp
    Connection_Purging_Strategy.cpp
    Connector_Registry.cpp
    CONV_FRAMEA.cpp
    CONV_FRAMEC.cpp
    CORBA_String.cpp
    CORBALOC_Parser.cpp
    CORBANAME_Parser.cpp
    CurrentA.cpp
    CurrentC.cpp
    debug.cpp
    default_client.cpp
    Default_Collocation_Resolver.cpp
    Default_Endpoint_Selector_Factory.cpp
    Default_Protocols_Hooks.cpp
    default_resource.cpp
    default_server.cpp
    Default_Stub_Factory.cpp
    Default_Thread_Lane_Resources_Manager.cpp
    DLL_Parser.cpp
    DomainA.cpp
    DomainC.cpp
    DoubleSeqA.cpp
    DoubleSeqC.cpp
    Dynamic_ParameterA.cpp
    Dynamic_ParameterC.cpp
    DynamicA.cpp
    DynamicC.cpp
    Encodable.cpp
    Endpoint.cpp
    Endpoint_Selector_Factory.cpp
    Environment.cpp
    Exception.cpp
    Exclusive_TMS.cpp
    Fault_Tolerance_Service.cpp
    FILE_Parser.cpp
    FloatSeqA.cpp
    FloatSeqC.cpp
    Flushing_Strategy.cpp
    GIOP_Message_Base.cpp
    GIOP_Message_Generator_Parser.cpp
    GIOP_Message_Generator_Parser_10.cpp
    GIOP_Message_Generator_Parser_11.cpp
    GIOP_Message_Generator_Parser_12.cpp
    GIOP_Message_Generator_Parser_Impl.cpp
    GIOP_Message_Lite.cpp
    GIOP_Message_Locate_Header.cpp
    GIOP_Message_State.cpp
    GIOP_Message_Version.cpp
    GIOP_Utils.cpp
    GIOPA.cpp
    GIOPC.cpp
    IFR_Client_Adapter.cpp
    IIOP_Acceptor.cpp
    IIOP_Connection_Handler.cpp
    IIOP_Connector.cpp
    IIOP_Endpoint.cpp
    IIOP_EndpointsA.cpp
    IIOP_EndpointsC.cpp
    IIOP_Factory.cpp
    IIOP_Lite_Factory.cpp
    IIOP_Profile.cpp
    IIOP_Transport.cpp
    IIOPA.cpp
    IIOPC.cpp
    Incoming_Message_Queue.cpp
    Interceptor_List.cpp
    Invocation_Adapter.cpp
    Invocation_Base.cpp
    Invocation_Endpoint_Selectors.cpp
    IOP_CodecA.cpp
    IOP_CodecC.cpp
    IOP_IORA.cpp
    IOP_IORC.cpp
    IOPC.cpp
    IOR_Parser.cpp
    IORInterceptor_Adapter.cpp
    IORInterceptor_Adapter_Factory.cpp
    Leader_Follower.cpp
    Leader_Follower_Flushing_Strategy.cpp
    LF_CH_Event.cpp
    LF_Connect_Strategy.cpp
    LF_Event.cpp
    LF_Event_Binder.cpp
    LF_Event_Loop_Thread_Helper.cpp
    LF_Follower.cpp
    LF_Follower_Auto_Adder.cpp
    LF_Follower_Auto_Ptr.cpp
    LF_Invocation_Event.cpp
    LF_Strategy.cpp
    LF_Strategy_Complete.cpp
    LocalObject.cpp
    LocateRequest_Invocation.cpp
    LocateRequest_Invocation_Adapter.cpp
    LongDoubleSeqA.cpp
    LongDoubleSeqC.cpp
    LongLongSeqA.cpp
    LongLongSeqC.cpp
    LongSeqA.cpp
    LongSeqC.cpp
    LRU_Connection_Purging_Strategy.cpp
    Managed_Types.cpp
    Marshal.cpp
    MCAST_Parser.cpp
    Messaging_SyncScopeC.cpp
    MProfile.cpp
    Muxed_TMS.cpp
    Object.cpp
    Object_KeyC.cpp
    Object_Loader.cpp
    Object_Proxy_Broker.cpp
    Object_Proxy_Impl.cpp
    Object_Ref_Table.cpp
    ObjectIdListA.cpp
    ObjectIdListC.cpp
    ObjectKey_Table.cpp
    OctetSeqA.cpp
    OctetSeqC.cpp
    operation_details.cpp
    ORB.cpp
    orb_typesA.cpp
    orb_typesC.cpp
    ORB_Core.cpp
    ORB_Core_Auto_Ptr.cpp
    ORB_Table.cpp
    ORBInitializer_Registry.cpp
    ORBInitInfo.cpp
    ParameterModeC.cpp
    params.cpp
    Parser_Registry.cpp
    PI_ForwardC.cpp
    PICurrent.cpp
    PICurrent_Copy_Callback.cpp
    PICurrent_ORBInitializer.cpp
    Pluggable_Messaging.cpp
    Pluggable_Messaging_Utils.cpp
    Policy_ForwardA.cpp
    Policy_ForwardC.cpp
    Policy_Set.cpp
    Policy_Validator.cpp
    PolicyA.cpp
    PolicyC.cpp
    PolicyFactory_Registry.cpp
    PollableC.cpp
    PortableInterceptorA.cpp
    PortableInterceptorC.cpp
    PredefinedType_Seq_Tmplinst.cpp
    Principal.cpp
    Profile.cpp
    Profile_Transport_Resolver.cpp
    Protocol_Factory.cpp
    Protocols_Hooks.cpp
    qt_resource.cpp
    Queued_Message.cpp
    Reactive_Connect_Strategy.cpp
    Reactive_Flushing_Strategy.cpp
    Refcounted_ObjectKey.cpp
    Remote_Invocation.cpp
    Remote_Object_Proxy_Broker.cpp
    Reply_Dispatcher.cpp
    Request_Dispatcher.cpp
    RequestInfo_Util.cpp
    Resource_Factory.cpp
    Resume_Handle.cpp
    Sequence.cpp
    Server_Strategy_Factory.cpp
    Service_Callbacks.cpp
    Service_Context.cpp
    Services_Activate.cpp
    ShortSeqA.cpp
    ShortSeqC.cpp
    skip.cpp
    Special_Basic_Arguments.cpp
    StringSeqA.cpp
    StringSeqC.cpp
    Stub.cpp
    Stub_Factory.cpp
    Sync_Strategies.cpp
    Synch_Invocation.cpp
    Synch_Queued_Message.cpp
    Synch_Refcountable.cpp
    Synch_Reply_Dispatcher.cpp
    SystemException.cpp
    Tagged_Components.cpp
    Tagged_Profile.cpp
    TAO_Internal.cpp
    TAO_Server_Request.cpp
    TAO_Singleton_Manager.cpp
    TAOA.cpp
    TAOC.cpp
    target_specification.cpp
    Thread_Lane_Resources.cpp
    Thread_Lane_Resources_Manager.cpp
    Thread_Per_Connection_Handler.cpp
    TimeBaseA.cpp
    TimeBaseC.cpp
    Transport.cpp
    Transport_Acceptor.cpp
    Transport_Cache_Manager.cpp
    Transport_Connector.cpp
    Transport_Descriptor_Interface.cpp
    Transport_Mux_Strategy.cpp
    Transport_Timer.cpp
    TSS_Resources.cpp
    Typecode.cpp
    Typecode_typesC.cpp
    Typecode_Constants.cpp
    TypeCodeFactory_Adapter.cpp
    ULongLongSeqA.cpp
    ULongLongSeqC.cpp
    ULongSeqA.cpp
    ULongSeqC.cpp
    UserException.cpp
    UShortSeqA.cpp
    UShortSeqC.cpp
    UTF16_BOM_Factory.cpp
    UTF16_BOM_Translator.cpp
    Valuetype_Adapter.cpp
    Wait_On_Leader_Follower.cpp
    Wait_On_LF_No_Upcall.cpp
    Wait_On_Reactor.cpp
    Wait_On_Read.cpp
    Wait_Strategy.cpp
    WCharSeqA.cpp
    WCharSeqC.cpp
    WrongTransactionA.cpp
    WrongTransactionC.cpp
    WStringSeqA.cpp
    WStringSeqC.cpp
    xt_resource.cpp
  }

  Header_Files {
    *.h
  }

  Inline_Files {
    *.i
    *.inl
  }

  Template_Files {
    *_T.cpp
    Acceptor_Impl.cpp
    Condition.cpp
    Connector_Impl.cpp
    TAO_Singleton.cpp
    orb.idl
  }
}
