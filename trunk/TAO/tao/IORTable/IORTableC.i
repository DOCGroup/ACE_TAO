// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// *************************************************************
// Inline operations for exception IORTable::AlreadyBound
// *************************************************************

// *************************************************************
// Inline operations for exception IORTable::NotFound
// *************************************************************


#if !defined (_IORTABLE_TABLE___CI_)
#define _IORTABLE_TABLE___CI_


#endif /* end #if !defined */


#if !defined (_IORTABLE_LOCATOR___CI_)
#define _IORTABLE_LOCATOR___CI_


#endif /* end #if !defined */

ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const IORTable::AlreadyBound &_tao_aggregate)
{
  // first marshal the repository ID
  if (strm << _tao_aggregate._id ())
    return 1;
  else
    return 0;
}

ACE_INLINE CORBA::Boolean operator>> (TAO_InputCDR &,IORTable::AlreadyBound&)
{
  return 1;
}

ACE_INLINE CORBA::Boolean operator<< (TAO_OutputCDR &strm, const IORTable::NotFound &_tao_aggregate)
{
  // first marshal the repository ID
  if (strm << _tao_aggregate._id ())
    return 1;
  else
    return 0;
}

ACE_INLINE CORBA::Boolean operator>> (TAO_InputCDR &,IORTable::NotFound&)
{
  return 1;
}

