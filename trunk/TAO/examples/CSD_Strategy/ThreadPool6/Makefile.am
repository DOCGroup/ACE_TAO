##  Process this file with automake to create Makefile.in
##
## $Id$
##
## This file was generated by MPC.  Any changes made directly to
## this file will be lost the next time it is generated.
##
## MPC Command:
## ../bin/mwc.pl -type automake -noreldefs TAO.mwc

ACE_BUILDDIR = $(top_builddir)/..
ACE_ROOT = $(top_srcdir)/..
TAO_BUILDDIR = $(top_builddir)
TAO_IDL = ACE_ROOT=$(ACE_ROOT) TAO_ROOT=$(TAO_ROOT) $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDL_DEP = $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDLFLAGS = -Ge 1 -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I$(TAO_ROOT) -I$(srcdir) -g $(ACE_BUILDDIR)/apps/gperf/src/gperf
TAO_ROOT = $(top_srcdir)

CLEANFILES =
noinst_PROGRAMS =
BUILT_SOURCES =

## Makefile.CSD_Test_ThreadPool6_Server.am

if !BUILD_MINIMUM_CORBA

BUILT_SOURCES += \
  FooC.cpp \
  FooC.h \
  FooC.inl \
  FooS.cpp \
  FooS.h \
  FooS.inl \
  FooS_T.cpp \
  FooS_T.h \
  FooS_T.inl

CLEANFILES += \
  Foo-stamp \
  FooC.cpp \
  FooC.h \
  FooC.inl \
  FooS.cpp \
  FooS.h \
  FooS.inl \
  FooS_T.cpp \
  FooS_T.h \
  FooS_T.inl

FooC.cpp FooC.h FooC.inl FooS.cpp FooS.h FooS.inl FooS_T.cpp FooS_T.h FooS_T.inl: Foo-stamp

Foo-stamp: $(srcdir)/Foo.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -GT $(srcdir)/Foo.idl
	@touch $@

noinst_PROGRAMS += server_main

server_main_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR)

server_main_SOURCES = \
  FooC.cpp \
  FooS.cpp \
  Foo_i.cpp \
  OrbShutdownTask.cpp \
  ServerApp.cpp \
  server_main.cpp \
  FooC.h \
  FooC.inl \
  FooS.h \
  FooS.inl \
  FooS_T.h \
  FooS_T.inl \
  Foo_i.h \
  OrbShutdownTask.h \
  ServerApp.h

server_main_LDADD = \
  $(TAO_BUILDDIR)/tao/libTAO_CSD_ThreadPool.la \
  $(TAO_BUILDDIR)/tao/libTAO_CSD_Framework.la \
  $(TAO_BUILDDIR)/tao/libTAO_PI.la \
  $(TAO_BUILDDIR)/tao/libTAO_CodecFactory.la \
  $(TAO_BUILDDIR)/tao/libTAO_PortableServer.la \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

endif !BUILD_MINIMUM_CORBA

## Makefile.CSD_Test_ThreadPool6_Client.am

BUILT_SOURCES += \
  FooC.cpp \
  FooC.h \
  FooC.inl \
  FooS.h \
  FooS.inl

CLEANFILES += \
  Foo-stamp \
  FooC.cpp \
  FooC.h \
  FooC.inl \
  FooS.h \
  FooS.inl

FooC.cpp FooC.h FooC.inl FooS.h FooS.inl: Foo-stamp

Foo-stamp: $(srcdir)/Foo.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) $(srcdir)/Foo.idl
	@touch $@

noinst_PROGRAMS += client_main

client_main_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR)

client_main_SOURCES = \
  ClientApp.cpp \
  FooC.cpp \
  client_main.cpp \
  ClientApp.h \
  FooC.h \
  FooC.inl \
  FooS.h \
  FooS.inl

client_main_LDADD = \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

## Clean up template repositories, etc.
clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
