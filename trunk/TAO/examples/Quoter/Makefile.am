##  Process this file with automake to create Makefile.in
##
## $Id$
##
## This file was generated by MPC.  Any changes made directly to
## this file will be lost the next time it is generated.
##
## MPC Command:
## ../bin/mwc.pl -include /home/jtc/ACE/ACE-autoconf/ACE_wrappers/TAO/../MPC/config -include /home/jtc/ACE/ACE-autoconf/ACE_wrappers/TAO/../MPC/templates -type automake -noreldefs TAO.mwc

ACE_BUILDDIR = $(top_builddir)/..
ACE_ROOT = $(top_srcdir)/..
TAO_BUILDDIR = $(top_builddir)
TAO_IDL = ACE_ROOT=$(ACE_ROOT) TAO_ROOT=$(TAO_ROOT) $(TAO_BUILDDIR)/TAO_IDL/tao_idl
TAO_IDL_DEP = $(TAO_BUILDDIR)/TAO/TAO_IDL/tao_idl
TAO_IDLFLAGS = -Ge 1 -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I$(TAO_ROOT) -I$(srcdir) -g $(ACE_BUILDDIR)/apps/gperf/src/gperf
TAO_ROOT = $(top_srcdir)

CLEANFILES =
noinst_PROGRAMS =
BUILT_SOURCES =

## Makefile.Quoter_Client.am

if !BUILD_MINIMUM_CORBA

BUILT_SOURCES += \
  QuoterC.cpp \
  QuoterC.h \
  QuoterC.inl \
  QuoterS.cpp \
  QuoterS.h \
  QuoterS.inl \
  QuoterS_T.cpp \
  QuoterS_T.h \
  QuoterS_T.inl

CLEANFILES += \
  Quoter-stamp \
  QuoterC.cpp \
  QuoterC.h \
  QuoterC.inl \
  QuoterS.cpp \
  QuoterS.h \
  QuoterS.inl \
  QuoterS_T.cpp \
  QuoterS_T.h \
  QuoterS_T.inl

QuoterC.cpp QuoterC.h QuoterC.inl QuoterS.cpp QuoterS.h QuoterS.inl QuoterS_T.cpp QuoterS_T.h QuoterS_T.inl: Quoter-stamp

Quoter-stamp: $(srcdir)/Quoter.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -I$(TAO_ROOT)/orbsvcs -I../../orbsvcs/orbsvcs $(srcdir)/Quoter.idl
	@touch $@

noinst_PROGRAMS += client

client_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs \
  -I$(srcdir)/../../orbsvcs/orbsvcs

client_SOURCES = \
  QuoterC.cpp \
  QuoterS.cpp \
  client.cpp \
  QuoterC.h \
  QuoterC.inl \
  QuoterS.h \
  QuoterS_T.h \
  QuoterS_T.inl \
  client.h

client_LDADD = \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_CosLifeCycle.la \
  $(TAO_BUILDDIR)/tao/libTAO_PortableServer.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_CosNaming.la \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

endif !BUILD_MINIMUM_CORBA

## Makefile.Quoter_Factory_Finder.am

if !BUILD_MINIMUM_CORBA

BUILT_SOURCES += \
  QuoterC.cpp \
  QuoterC.h \
  QuoterC.inl \
  QuoterS.cpp \
  QuoterS.h \
  QuoterS.inl \
  QuoterS_T.cpp \
  QuoterS_T.h \
  QuoterS_T.inl

CLEANFILES += \
  Quoter-stamp \
  QuoterC.cpp \
  QuoterC.h \
  QuoterC.inl \
  QuoterS.cpp \
  QuoterS.h \
  QuoterS.inl \
  QuoterS_T.cpp \
  QuoterS_T.h \
  QuoterS_T.inl

QuoterC.cpp QuoterC.h QuoterC.inl QuoterS.cpp QuoterS.h QuoterS.inl QuoterS_T.cpp QuoterS_T.h QuoterS_T.inl: Quoter-stamp

Quoter-stamp: $(srcdir)/Quoter.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -I$(TAO_ROOT)/orbsvcs -I../../orbsvcs/orbsvcs $(srcdir)/Quoter.idl
	@touch $@

noinst_PROGRAMS += Factory_Finder

Factory_Finder_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs \
  -I$(srcdir)/../../orbsvcs/orbsvcs

Factory_Finder_SOURCES = \
  Factory_Finder.cpp \
  Factory_Finder_i.cpp \
  QuoterC.cpp \
  QuoterS.cpp \
  Factory_Finder.h \
  Factory_Finder_i.h \
  QuoterC.h \
  QuoterC.inl \
  QuoterS.h \
  QuoterS_T.h \
  QuoterS_T.inl

Factory_Finder_LDADD = \
  $(TAO_BUILDDIR)/tao/libTAO_Utils.la \
  $(TAO_BUILDDIR)/tao/libTAO_PI.la \
  $(TAO_BUILDDIR)/tao/libTAO_CodecFactory.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_CosLifeCycle.la \
  $(TAO_BUILDDIR)/tao/libTAO_PortableServer.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_CosNaming.la \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

endif !BUILD_MINIMUM_CORBA

## Makefile.Quoter_Generic_Factory.am

if !BUILD_MINIMUM_CORBA

BUILT_SOURCES += \
  QuoterC.cpp \
  QuoterC.h \
  QuoterC.inl \
  QuoterS.cpp \
  QuoterS.h \
  QuoterS.inl \
  QuoterS_T.cpp \
  QuoterS_T.h \
  QuoterS_T.inl

CLEANFILES += \
  Quoter-stamp \
  QuoterC.cpp \
  QuoterC.h \
  QuoterC.inl \
  QuoterS.cpp \
  QuoterS.h \
  QuoterS.inl \
  QuoterS_T.cpp \
  QuoterS_T.h \
  QuoterS_T.inl

QuoterC.cpp QuoterC.h QuoterC.inl QuoterS.cpp QuoterS.h QuoterS.inl QuoterS_T.cpp QuoterS_T.h QuoterS_T.inl: Quoter-stamp

Quoter-stamp: $(srcdir)/Quoter.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -I$(TAO_ROOT)/orbsvcs -I../../orbsvcs/orbsvcs $(srcdir)/Quoter.idl
	@touch $@

noinst_PROGRAMS += Generic_Factory

Generic_Factory_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs \
  -I$(srcdir)/../../orbsvcs/orbsvcs

Generic_Factory_SOURCES = \
  Generic_Factory.cpp \
  Generic_Factory_i.cpp \
  QuoterC.cpp \
  QuoterS.cpp \
  Generic_Factory.h \
  Generic_Factory_i.h \
  QuoterC.h \
  QuoterC.inl \
  QuoterS.h \
  QuoterS_T.h \
  QuoterS_T.inl

Generic_Factory_LDADD = \
  $(TAO_BUILDDIR)/tao/libTAO_Utils.la \
  $(TAO_BUILDDIR)/tao/libTAO_PI.la \
  $(TAO_BUILDDIR)/tao/libTAO_CodecFactory.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_CosLifeCycle.la \
  $(TAO_BUILDDIR)/tao/libTAO_PortableServer.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_CosNaming.la \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

endif !BUILD_MINIMUM_CORBA

## Makefile.Quoter_Server.am

if !BUILD_MINIMUM_CORBA

BUILT_SOURCES += \
  QuoterC.cpp \
  QuoterC.h \
  QuoterC.inl \
  QuoterS.cpp \
  QuoterS.h \
  QuoterS.inl \
  QuoterS_T.cpp \
  QuoterS_T.h \
  QuoterS_T.inl

CLEANFILES += \
  Quoter-stamp \
  QuoterC.cpp \
  QuoterC.h \
  QuoterC.inl \
  QuoterS.cpp \
  QuoterS.h \
  QuoterS.inl \
  QuoterS_T.cpp \
  QuoterS_T.h \
  QuoterS_T.inl

QuoterC.cpp QuoterC.h QuoterC.inl QuoterS.cpp QuoterS.h QuoterS.inl QuoterS_T.cpp QuoterS_T.h QuoterS_T.inl: Quoter-stamp

Quoter-stamp: $(srcdir)/Quoter.idl $(TAO_IDL_DEP)
	$(TAO_IDL) $(TAO_IDLFLAGS) -I$(TAO_ROOT)/orbsvcs -I../../orbsvcs/orbsvcs $(srcdir)/Quoter.idl
	@touch $@

noinst_PROGRAMS += server

server_CPPFLAGS = \
  -I$(ACE_ROOT) \
  -I$(ACE_BUILDDIR) \
  -I$(TAO_ROOT) \
  -I$(TAO_BUILDDIR) \
  -I$(TAO_ROOT)/orbsvcs \
  -I$(TAO_BUILDDIR)/orbsvcs \
  -I$(srcdir)/../../orbsvcs/orbsvcs

server_SOURCES = \
  QuoterC.cpp \
  QuoterS.cpp \
  Quoter_i.cpp \
  server.cpp \
  QuoterC.h \
  QuoterC.inl \
  QuoterS.h \
  QuoterS_T.h \
  QuoterS_T.inl \
  Quoter_i.h \
  server.h

server_LDADD = \
  $(TAO_BUILDDIR)/tao/libTAO_Utils.la \
  $(TAO_BUILDDIR)/tao/libTAO_PI.la \
  $(TAO_BUILDDIR)/tao/libTAO_CodecFactory.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_CosLifeCycle.la \
  $(TAO_BUILDDIR)/tao/libTAO_PortableServer.la \
  $(TAO_BUILDDIR)/orbsvcs/orbsvcs/libTAO_CosNaming.la \
  $(TAO_BUILDDIR)/tao/libTAO_AnyTypeCode.la \
  $(TAO_BUILDDIR)/tao/libTAO.la \
  $(ACE_BUILDDIR)/ace/libACE.la

endif !BUILD_MINIMUM_CORBA

## Clean up template repositories, etc.
clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
	-rm -f gcctemp.c gcctemp so_locations *.ics
	-rm -rf cxx_repository ptrepository ti_files
	-rm -rf templateregistry ir.out
	-rm -rf ptrepository SunWS_cache Templates.DB
