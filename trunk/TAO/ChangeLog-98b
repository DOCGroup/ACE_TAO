Wed Sep 30 15:47:26 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Connect.h:
        * tao/Connect.cpp:
        * tao/Invocation.cpp:
          Removed some calls to TAO_ORB_Core_instance(), we use the
          ORB_Core cached in the Invocation and pass it down to the GIOP
          module and eventually to the Client_Connection_Handler.

        * tao/ORB_Core.cpp:
          Fixed silly syntax errors.

Wed Sep 30 14:58:16 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tao/ORB_Core.{h,i}: Had problems with the explicit template
          instantiation for two hash_i functions on MSVC 6.  So, Irfan
          and I decided to move it into the .h and make them real
          "inline" functions for now.  Otherwise, the compiler doesn't
          seem to understand the hint made by the prototype and will
          not use the explicitly defined method.

Wed Sep 30 11:14:35 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tao/POA.cpp: Needed to properly terminate a CString in
          locate_poa_and_servant_i () by copying it to another
          CString and then extracting the char * from it.

        * tao/POA.cpp: Needed to properly terminate a CString in
          locate_poa_and_servant_i () by copying it to another
          CString and then extracting the char * from it.

Wed Sep 30 10:32:00 1998  Chris Gill  <cdgill@cs.wustl.edu>

        * docs/releasenotes/index.html
          orbsvcs/tests/Simulator/README
          orbsvcs/tests/Simulator/NavWeap.idl
          orbsvcs/tests/Simulator/DOVEBrowser/DataHandler.java
          orbsvcs/tests/Simulator/DOVEBrowser/DemoCore.java
          orbsvcs/tests/Simulator/DOVEBrowser/NavWeapDataHandler.java
          orbsvcs/tests/Simulator/DOVEBrowser/Properties.java
          orbsvcs/tests/Simulator/DOVEBrowser/PushConsumer.java
          orbsvcs/tests/Simulator/DOVEBrowser/make.bat
          orbsvcs/tests/Simulator/Event_Supplier/DOVE_Supplier.cpp
          orbsvcs/tests/Simulator/Event_Supplier/Event_Sup.{cpp, dsp}
          orbsvcs/tests/Simulator/Event_Supplier/Logging_Sup.{cpp, dsp, h}:
          Enhancements for Boeing demo: expanded and revised make.bat to build
          java browser using Visibroker on NT.  Revised supplier and consumer
          logic to allow an ACT to indicate whether or not to update the
          scheduling information with actual data xollected by the EC.  Added
          a logging supplier that sets this ACT to request actual data update.
          Modified java consumer so entire event is passed to data handler.
          This allows the DOVE Browser to view either simulated or "live"
          scheduling data.
          logic to allow an ACT to indicate whether or not to update the
          scheduling information with actual data xollected by the EC.  Added
          a logging supplier that sets this ACT to request actual data update.
          Modified java consumer so entire event is passed to data handler.
          This allows the DOVE Browser to view either simulated or "live"
          scheduling data.


Wed Sep 30 03:47:31 1998  Nagarajan Surendran  <naga@cs.wust
        * performance-tests/Thruput/TAO/server.cpp:
          Added code to write ior to a file with the option -o.

        * performance-tests/Thruput/TAO/client.cpp:
          Added code to read ior from a file with option -f.

        * performance-tests/Thruput/TAO/run_server:
        * performance-tests/Thruput/TAO/run_test:
        * performance-tests/Thruput/TAO/run_client:
          Used the -o and -f options on server and client to avoid cut and
          paste of iors.
        * performance-tests/Thruput/TAO/server.cpp:
          Added code to write ior to a file with the option -o.

        * performance-tests/Thruput/TAO/client.cpp:
          Added code to read ior from a file with option -f.

        * performance-tests/Thruput/TAO/run_server:
        * performance-tests/Thruput/TAO/run_test:
        * performance-tests/Thruput/TAO/run_client:
          Used the -o and -f options on server and client to avoid cut and
          paste of iors.


Wed Sep 30 02:44:59 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao: Removed some cases of explicit template instantiation of
          ACE_Hash_Addr from TAO since it is no longer used inside the
          cached connector. It is still necessary since it is used inside
          the collocation table.

        * tao/ORB_Core: Changed return type of ACE_Hash_Addr::hash_i() to
          u_long.  Also added template specialization for
          ACE_Refcounted_Hash_Recyclable<ACE_INET_Addr>::hash_i().

        * tao/POA.cpp (dispatch_servant_i): Reduced access to
          TAO_ORB_Core_instance() inside the POA.

        * tao: Removed some cases of explicit template instantiation of
          ACE_Hash_Addr from TAO since it is no longer used inside the
          cached connector. It is still necessary since it is used inside
          the collocation table.

        * tao/ORB_Core: Changed return type of ACE_Hash_Addr::hash_i() to
          u_long.  Also added template specialization for
          ACE_Refcounted_Hash_Recyclable<ACE_INET_Addr>::hash_i().

        * tao/POA.cpp (dispatch_servant_i): Reduced access to
          TAO_ORB_Core_instance() inside the POA.

Wed Sep 30 02:18:36 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * performance-tests/Cubit/TAO/IDL_Cubit/README:
        * performance-tests/Cubit/TAO/IDL_Cubit/run_test.pl:
        * performance-tests/Cubit/TAO/IDL_Cubit/Makefile:
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Server.h:
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Server.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Client.h:
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Client.cpp:
          IDL_Cubit does *not* use the Naming Service anymore. It was
          simply too slow to compile orbsvcs and the Naming Service has
          many other examples that show how to use it and this test is
          compiled often after changin the ORB.
        * performance-tests/Cubit/TAO/IDL_Cubit/README:
        * performance-tests/Cubit/TAO/IDL_Cubit/run_test.pl:
        * performance-tests/Cubit/TAO/IDL_Cubit/Makefile:
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Server.h:
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Server.cpp:
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Client.h:
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Client.cpp:
          IDL_Cubit does *not* use the Naming Service anymore. It was
          simply too slow to compile orbsvcs and the Naming Service has
          many other examples that show how to use it and this test is
          compiled often after changin the ORB.

Wed Sep 30 00:26:44 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/ORB_Core.h:
        * tao/ORB_Core.i:
        * tao/ORB_Core.cpp:
        * tao/CDR.h:
        * tao/CDR.cpp:
        * tao/Connect.cpp:
        * tao/Invocation.i:
        * tao/Invocation.cpp:
          The resource factory can create either TSS or global allocators
          for the InputCDR stream, thus applications that don't need the
          CDR stream buffer to survive after the upcall, or release it in
          another thread (most CORBA compliant apps fall in this category)
          can benefit from this feature that reduces locks and
          fragmentation in the global heap.

        * tao/default_client.h:
          Fixed minor syntax error (comma at the end of an enum).

        * orbsvcs/tests/EC_Custom_Marshal/svc.conf:
        * orbsvcs/tests/EC_Custom_Marshal/svc.conf:
          Use a global allocator for the CDR stream.

        * tao/ORB_Core.h:
        * tao/ORB_Core.i:
        * tao/ORB_Core.cpp:
        * tao/CDR.h:
        * tao/CDR.cpp:
        * tao/Connect.cpp:
        * tao/Invocation.i:
        * tao/Invocation.cpp:
          The resource factory can create either TSS or global allocators
          for the InputCDR stream, thus applications that don't need the
          CDR stream buffer to survive after the upcall, or release it in
          another thread (most CORBA compliant apps fall in this category)
          can benefit from this feature that reduces locks and
          fragmentation in the global heap.

        * tao/default_client.h:
          Fixed minor syntax error (comma at the end of an enum).

        * orbsvcs/tests/EC_Custom_Marshal/svc.conf:
        * orbsvcs/tests/EC_Custom_Marshal/svc.conf:
          Use a global allocator for the CDR stream.


Tue Sep 29 21:57:02 1998  Irfan Pyarali  <irfan@cs.wustl.edu>


        * examples/TAO_Examples.dsw: Removed incorrect dependency.

        * examples/TAO_Examples.dsw: Removed incorrect dependency.

        * examples/POA/FindPOA/FindPOA.dsp: Renamed from FindPOA Server to
          simply FindPOA.

Tue Sep 29 19:17:17 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * Tao/tests/DynAny_Test/server.dsp:
        * Tao/tests/DynAny_Test/client.dsp:
        * Tao/tests/DynAny_Test/tckind.idl:
        * Tao/tests/DynAny_Test/DynAny.idl:
        * Tao/tests/DynAny_Test/DynAny_i.{h,cpp}:
        * Tao/tests/DynAny_Test/DynArray_i.{h,cpp}:
        * Tao/tests/DynAny_Test/DynEnum_i.{h,cpp}:
        * Tao/tests/DynAny_Test/DynSequence_i.{h,cpp}:
        * Tao/tests/DynAny_Test/DynStruct_i.{h,cpp}:
        * Tao/tests/DynAny_Test/DynUnion_i.{h,cpp}:
          Removed from repository. Some are going to TAO and some
          are just obsolete (new test code will be written).

        * Tao/tests/DynAny_Test/DynAny_Test.dsw:
          Updated to reflect removed projects.

Tue Sep 29 15:33:52 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * examples/POA/Explicit_Activation/run_test.pl: Added the ability
          to pass through extra command line options to the client and
          server.

        * performance-tests/Cubit/TAO/IDL_Cubit/svc.conf: Added
          ORBclientconnectionhandler ST and changed -ORBconcurrency
          thread-per-connection.

        * tao/default_client.cpp (parse_args): Added a new option to
          TAO_Default_Client_Strategy_Factory. -ORBclientconnectionhandler
          allows the user to select the correct type of client connection
          handler creation strategy.

        * tao/ORB_Core.cpp (Pre_Allocated): Initialize the
          <cached_connect_strategy_> correctly with a creation factory
          from <TAO_ORB_CORE::instance ()->client_factory ()>.

        * tao/Connect.h (TAO_ST_Client_Connection_Handler and
          TAO_MT_Client_Connection_Handler): Added new classes that
          override handle_input and send_request. The MT class uses the
          leader-follower scheme, while the ST class uses the old simple
          reactive strategy.

        * tao/Client_Strategy_Factory.cpp (create_client_creation_strategy):
        * tao/default_client.cpp (create_client_creation_strategy):

          Added new method to create the correct type of the client
          connection handler creation strategy.

Tue Sep 29 13:23:25 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * TAO/docs/releasenotes/orbcore.html
          Added entry for current status of DynAny support.

Tue Sep 29 13:09:49 1998  Sergio Flores  <sergio@tango.cs.wustl.edu>

        * TAO/performance-tests/Cubit/TAO/MT_Cubit/client.cpp:
        * TAO/performance-tests/Cubit/TAO/MT_Cubit/Task_Client.cpp: Used
        begin() to obtain iterator fom the ACE_Unbounded_Queue class.  In
        addition, I made changes to fix minor warnings.

Tue Sep 29 12:20:16 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * docs/releasenotes/ec.html:
          Documented the latest feaures of the EC.

        * docs/releasenotes/orbcore.html:
          Documented some of the latest optimizations implemented in the
          ORB.

        * docs/releasenotes/TODO.html:
          Yet another task for the EC.

Tue Sep 29 11:08:08 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Makefile:
        * orbsvcs/orbsvcs/Event/Timer_Module.h:
        * orbsvcs/orbsvcs/Event/Timer_Module.i:
        * orbsvcs/orbsvcs/Event/Timer_Module.cpp:
        * orbsvcs/orbsvcs/Event/Task_Manager.h:
        * orbsvcs/orbsvcs/Event/Task_Manager.i:
        * orbsvcs/orbsvcs/Event/Task_Manager.cpp:
          New class Timer_Module that replaces the Task_Manager
          class. This module of the EC is in charge of implementing the
          timer queue.  Currently there are two implementations of the
          module: a pool of Reactors running at different priorities
          to dispatch the timers; a single reactor (shared with the ORB)
          to dispatch all the timers.
          In the future we plan to implement the timers using the
          Thread_Timer_Queue_Adapter or a similar mechanism.

        * orbsvcs/orbsvcs/Event/Dispatching_Modules.h:
        * orbsvcs/orbsvcs/Event/Dispatching_Modules.i:
        * orbsvcs/orbsvcs/Event/Dispatching_Modules.cpp:
        * orbsvcs/orbsvcs/Event/Event_Channel.h:
        * orbsvcs/orbsvcs/Event/Event_Channel.i:
        * orbsvcs/orbsvcs/Event/Event_Channel.cpp:
          Use the new abstractions in the Timer_Module to schedule and
          cancel timers.

        * orbsvcs/orbsvcs/Event/Module_Factory.h:
        * orbsvcs/orbsvcs/Event/Module_Factory.cpp:
          Added methods to create the new module.

        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
          Some experimental changes to test the new single threaded module
          factory for the Event Channel.

        * Many makefiles were updated because the dependencies changed.

        * tests/Param_Test/README:
          Removed outdated arguments.

        * docs/releasenotes/TODO.html:
          Minor updates.

Tue Sep 29 07:18:28 1998  David L. Levine  <levine@cs.wustl.edu>

        * performance-tests/Thruput/COOL/ttcp_decl.h,client.cpp,server.cpp:
          replaced USE_QUANTIFY with ACE_HAS_QUANTIFY.

        * performance-tests/Thruput/COOL/client.cpp,server.cpp,
          performance-tests/Thruput/CORBAplus/ttcp_i.cpp:
          replaced direct {f,io}stream.h #includes with #include of
          ace/streams.h.

        * performance-tests/Thruput/TAO/ttcp_decl.h,ttcp_i.cpp,client.cpp,
          server.cpp:
          performance-tests/Thruput/CORBAplus/ttcp_decl.h,client.cpp,
          server.cpp: replaced USE_QUANTIFY with ACE_HAS_QUANTIFY.

Tue Sep 29 00:18:22 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * examples/POA/FindPOA/run_test.pl
        * examples/POA/Forwarding/run_test.pl
          Perl escripts to run the tests in their respective
          directories. The Forwarding script is kinda hairy and was a pain
          in the tookas.

Mon Sep 28 21:35:47 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Time_Utilities.cpp: removed #define ACE_BUILD_DLL.
          Thanks to Irfan for reporting that it's not correct.

        * performance-tests/Cubit/COOL/MT_Cubit/Task_Client.cpp: changed
          USE_QUANTIFY to ACE_HAS_QUANTIFY.

Mon Sep 28 16:39:30 1998  Sergio Flores  <sergio@tango.cs.wustl.edu>

        * TAO/performance-tests/Cubit/TAO/MT_Cubit/Task_Client.h:
        * TAO/performance-tests/Cubit/TAO/MT_Cubit/Task_Client.cpp:
        * TAO/performance-tests/Cubit/TAO/MT_Cubit/client.cpp: Replaced
        the use of ACE_Unbounded_Set with ACE_Unbounded_Queue, fixing the
        inconsistent results of stats.

Mon Sep 28 15:39:40 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/POA.cpp (create_object_key): Don't add the space for
          persistent_key_type_length and creation_time_length when
          POA_NO_TIMESTAMP is defined.

Mon Sep 28 15:03:02 1998  Marina Igorevna Spivak  <marina@mambo.cs.wustl.edu>

        * TAO/orbsvcs/orbsvcs/Naming/CosNaming_i.cpp: updated destroy
          method to commit suicide only if not root.

        * TAO/docs/releasenotes/index.html: updated releasenotes for the
          Naming Service to reflect recent changes.

Mon Sep 28 14:41:48 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Time_Utilities.cpp: added #define ACE_BUILD_DLL.
          Thanks to Brian Mendel <brian.r.mendel@boeing.com> for
          reporting link failure without it on NT.

        * tao/Object_Table.i (TAO_Object_Table_Impl::create_object_id): added
          comment noting that the function is supposed to always fail.
          Only TAO_Active_Demux_ObjTable::create_object_id is supposed to
          succeed.

        * TAO-INSTALL.html: updated instructions for installing gperf
          in host-target (cross-compile) environments.

Mon Sep 28 02:26:39 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * examples/POA: Added ability to support perl scripts for running
          the tests and writing IORs to files:

          - ACE_wrappers/TAO/examples/POA/DSI/client.cpp
          - ACE_wrappers/TAO/examples/POA/DSI/server.cpp
          - ACE_wrappers/TAO/examples/POA/Generic_Servant/client.cpp
          - ACE_wrappers/TAO/examples/POA/On_Demand_Activation/server.cpp

Sun Sep 27 23:00:06 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/POA: Changed the creation time to have a binary encoding
          rather than the hex encoding.  Binary is better than the hex
          representation because it takes half the space to store.

          Also, changed the Object Id generation and parsing code to not
          use MAX_SPACE_REQUIRED_FOR_TWO_CORBA_ULONG_TO_HEX but use
          (2 * sizeof (CORBA::ULong)).

Sun Sep 27 22:53:08 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * examples/POA/Explicit_Activation/run_test.pl: Changed
          permissions to allow execution. Nothing special. Feh.

Sun Sep 27 22:37:11 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * examples/POA/Default_Servant/server.cpp
        * examples/POA/Default_Servant/client.cpp
        * examples/POA/DSI/server.cpp
        * examples/POA/DSI/client.cpp
          Fixed a small misuse of strdup

        * tests/OctetSeq/run_test.pl: Small script to run OctetSeq test

        * tests/Multiple_Inheritance/run_test.pl: Script to run client and
          server

        * tests/Multiple_Inheritance/server.cpp
        * tests/Multiple_Inheritance/client.cpp
          Added command line parsing and ability to output the IOR to a
          file (server) and read from a file (client)

        * tests/Multiple_Inheritance/Makefile: Fixed realclean to remove
          server and client binaries

Sun Sep 27 21:05:40 1998  David L. Levine  <levine@cs.wustl.edu>

        * tao/Object_Table.i (create_object_id): added
          ACE_UNUSED_ARG (servant).

        * tao/Object_Table.cpp (TAO_Dynamic_Hash_ObjTable,
          TAO_Linear_ObjTable ctors): added static cast of
          TAO_Object_Table_Impl::DEFAULT_TABLE_SIZE to size_t,
          to avoid g++ complaints about enumeral and non-enumeral
          type in conditional expression.

Sun Sep 27 19:25:08 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.cpp:
          Added some more comments.

Sun Sep 27 00:58:31 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tao/Object_Table.cpp: Cleaned up the code a bit and got it to
          work on SunC++ again.  This may break DU's C++ compiler, but
          we'll take on step at a time here...

        * TAO_IDL/be/be_interface.cpp: Generate the "unsigned int"
          signatures for hash() and lookup() to match the changes in
          gperf.

        * TAO_IDL/be/be_interface.cpp (gen_perfect_hash_methods): Removed
          the -S1 flag to GPERF.  This is now implicit if GPERF can't
          generate a proper "lookup array" duplicate solution...
          Naturally, this means that you MUST update GPERF...

Sun Sep 27 00:02:57 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/Object_Table and POA:

          - Added no-op destructors to all class. g++ was having problems.

          - Moved the Hash_Map_Manager template specialization to the .i
            file.  Hopefully, the DU compiler will pick it up.

          - There was a bug in TAO_POA::encode_sequence_to_string where
            the order of encoding higher order bits vs the lower order
            bits was reversed relative to the decoding routine.

          - Changed the object id in the SYSTEM_ID case so that it now
            contains the binary values for the index and the generation
            count.  This should make the parsing of the id faster.

          - Made sure that the POA policies are getting registered with
            the RootPOA rather than the creator POA.  This allows implicit
            activation of the policies.

          - There was a bug in create_object_id which was fixed by moving
            <next_> along if index is not reused.

Sat Sep 26 20:25:18 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.cpp:
          Fixed problem in TAO_ECG_Mcast_EH::unsubscribe() method.

Sat Sep 26 09:59:59 1998  Chris Gill  <cdgill@cs.wustl.edu>

        * orbsvcs/tests/Simulator/NavWeap.idl
          orbsvcs/tests/Simulator/Event_Supplier/Event_Sup.cpp
          orbsvcs/tests/Simulator/DOVEBrowser/NavWeapDataHandler.java
          orbsvcs/tests/Simulator/DOVEBrowser/PushConsumerFactory.java:
          Expanded time members of Navigation and Weapons structures to have
          secs and usecs, as for ACE_Time_Value class in C++

        * orbsvcs/tests/Simulator/DOVEBrowser/DemoCore.java:
          Made Latency, Jitter, and Deadlines GUI components the
          defaults for demo startup.

        * orbsvcs/tests/Simulator/DOVEBrowser/make.bat:
          Massive cleanup and expansion of this script: now does make clean,
          make realclean, nicer VB rebuild on NT.

        * orbsvcs/tests/Simulator/Event_Supplier/Event_Sup.dsp:
          Added copy line to NavWeap.idl custom build step - copies the
          file from the parent directory before calling TAO_IDL.

        * orbsvcs/tests/Simulator/Event_Supplier/Logging_Sup.{cpp, dsp, h}:
          New event supplier application to be used with actual runtime
          logging of scheduling behavior in the EC: does not depend on data
          being fed from simulation results file.

Sat Sep 26 09:59:59 1998  Chris Gill  <cdgill@cs.wustl.edu>

        * orbsvcs/tests/Simulator/DOVEBrowser/NS_Resolve.java:
          Reverted TAO_DEFAULT_NAME_SERVER_REQUEST_PORT to 10013.

Sat Sep 26 09:24:10 1998  David L. Levine  <levine@cs.wustl.edu>

        * tao/Object_Table.i (TAO_Dynamic_Hash_ObjTable_Iterator):
          moved this constructor up in the file, to avoid use
          before definition.

        * tao/Object_Table.cpp (bind,find,unbind): removed check
          for "index" < 0.  Because it's unsigned, it can never
          be less than 0.  GreenHills warned about that.

Sat Sep 26 00:07:14 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Object_Table.i:
        * tao/Object_Table.cpp:
          Optimized object id parsing for the active demultiplexing object
          table.
          Moved the TAO_Object_Table constructor to the .cpp file, EGCS
          did not like it there.

Fri Sep 25 22:00:49 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/POA: Changed the POA so that the IOR it generates when the
          SYSTEM_ID policy is used can be used to actively find the
          servant.  This new IOR contains an extra byte to indicate
          whether the IOR is from a POA with SYSTEM_ID or USER_ID policy.
          When the SYSTEM_ID is used, the IOR contains two pieces of
          information. (a) The index of the slot where the servant is
          registered. (b) The generation count of that slot.  The
          generation count is used to identify old IORs and allows the
          recycling of the slots in the Active Object Map.

          Another advantage of the SYSTEM_ID policy is that the Object Id
          is of fixed size.  This makes the parsing of the incoming IOR
          quicker.

          Obviously, the changes in the IOR required changes to the
          parsing routines and the IOR generation routines.

          Also, fixed a bug in TAO_POA::destroy.  We must destroy self
          only after releasing the lock.  This is the same bug I found in
          Marina's code ;-)

        * tao/IIOP_Object.cpp (operator!=): Added operator!= for
          TAO_opaque.  Also, fixed IIOP::Profile::set() so that it does
          not try to do get_host_name() if use_dotted_decimal_addresses ()
          is set.

        * tao/Object_Table: New file (Object_Table.i) which contains the
          smaller functions from Object_Table.cpp.  The new Object_Table
          files contain an almost complete rewrite of TAO_Linear_ObjTable
          and specially of TAO_Active_Demux_ObjTable.  Also, moved the
          responsibility of object id creation from the POA to the Object
          Table.

        * tao/Server_Strategy_Factory.cpp (object_table_size): Added
          method to access user specified object table size.

Fri Sep 25 22:07:55 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/tests/EC_Mcast/README:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.h:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.cpp:
          The UDP_Receiver is a RtecEventChannelAdmin::Observer so it can
          update its set of mcast group subscriptions automatically. We
          still need to improve the underlying socket abstractions to
          handle multiple groups (even when the number grows beyond the
          limits of a single socket).

        * orbsvcs/orbsvcs/Event_Utilities.cpp:
          The debug routine for QoS structures did not print the
          is_gateway field.

        * orbsvcs/orbsvcs/Event/Event_Channel.h:
        * orbsvcs/orbsvcs/Event/Event_Channel.cpp:
          Fixed some problems on shutdown, related to observer updates.

Fri Sep 25 19:02:03 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tao/try_macros.h: Fixed the TAO_THROW_ENV_RETURN macro for
          native exceptions.  It was not taking in the RETURN value
          argument

Fri Sep 25 15:31:17 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * tests/CDR/run_test.pl: New script to run all three CDR tests and
          format the output.

        * tests/CDR/growth.cpp: Added ability to set a few basic variables
          from the command line.

        * tests/CDR/basic_types.cpp: Added ability to set a few basic
          variables from the command line

Fri Sep 25 07:37:01 1998  David L. Levine  <levine@cs.wustl.edu>

        * examples/Simple/echo/Client_i.cpp (Client_i): reordered
          initializers to match declaration order.

        * orbsvcs/orbsvcs/Event/Event_Channel.cpp: added
          ACE_Map_Manager<RtecEventChannelAdmin::Observer_Handle,
          ACE_EventChannel::Observer_Entry, ACE_Null_Mutex template
          instantiations.

        * IIOP/tests/Thruput_test/client.cpp,server.cpp,ttcp_decl.h,
          ttcp_i.cpp: replaced USE_QUANTIFY with ACE_HAS_QUANTIFY.

        * IIOP/tests/Thruput_test/client.cpp: replaced direct
          #includes of iostream.h and fstream.h with ace/streams.h.

        * IIOP/tests/Thruput_test/ttcp_i.cpp: replaced some
          iostream printouts with ACE_DEBUGs.

        * performance-tests/Cubit/TAO/MT_Cubit/plot: added this script,
          which plots the output of summarize.

        * performance-tests/Demux/Makefile: removed quantify relic.

        * performance-tests/Demux/server.cpp: replaced USE_QUANTIFY
          with ACE_HAS_QUANTIFY, and iostream/fstream.h with ace/streams.h.

Thu Sep 24 21:45:57 1998  David L. Levine  <levine@cs.wustl.edu>

        * TAO_IDL/be/be_codegen.cpp (gperf_input_stream): don't
          delete the gperf_input_stream on Linux, only, because
          it causes tao_idl to seg fault.

Thu Sep 24 20:55:01 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/Event_Channel.h:
        * orbsvcs/orbsvcs/Event/Event_Channel.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway.cpp:
          Completed the implementation of (potentially) remote observers
          for the subcription and/or publication list of an Event
          Channel.

        * orbsvcs/orbsvcs/Event/Dispatching_Modules.cpp:
          Fixed yet another error message.

        * orbsvcs/orbsvcs/RtecEventChannelAdmin.idl:
          The observer handle can be an unsigned long.
          Added exceptions to report problems when adding and/or removing
          observers.

        * orbsvcs/orbsvcs/RtecEventComm.idl:
          Added a "#pragma prefix" to cancel the "omg.org" prefix.

        * orbsvcs/orbsvcs/Makefile:
          Updated dependencies.

Thu Sep 24 18:01:47 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao (Current.pidl Object_Key.pidl POA.pidl Policy.pidl): The
          makefiles in ACE look for files with the .idl extension to run
          the IDL compiler on.  Therefore, to prevent the IDL files in
          TAO/tao to get compiled by the user, we named them with a .IDL
          extension.  Unfortunately, the NT filesystem is not case
          sensitive.  Therefore, when one typed make, it ran the IDL
          compiler on those files.

          I have fixed this by renaming the IDL files in TAO/tao with a
          .pidl extension instead of the .IDL extension.

Thu Sep 24 15:39:39 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/corba.h: * tao/try_macros.h: Moved the TAO_TRY macros (and
        friends) to a separate file.

        * tao/poa_macros.h:
          Removed extra scope that was releasing locks too soon.
          Use the new macros TAO_GUARD_THROW macros.

        * Many Makefile dependencies updated.

Thu Sep 24 13:41:19 1998  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        * examples/Simple/bank/AccountManager_i.cpp:
          Removed the warning TAO_TRY_LABEL unreferenced.

Wed Sep 23 23:30:28 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Naming/CosNaming_i.cpp:
          TAO_THROW requires calls like this:
            TAO_THROW (Type());
          instead of simply
            TAO_THROW (Type);
          the latter works in platforms without native C++ exceptions the
          former does not.

Wed Sep 23 10:02:20 1998  David L. Levine  <levine@cs.wustl.edu>

        * performance-tests/Cubit/TAO/MT_Cubit/summarize: fixed
          calculation of number of low-priority threads.

        * performance-tests/Cubit/TAO/MT_Cubit/MT_Cubit_Test: fixed
          typo in $iiop_lite.

        * performance-tests/Cubit/TAO/MT_Cubit/Task_Client.cpp:
          cleaned up latency/jitter code, and added printouts with
          number of samples.

        * performance-tests/Cubit/TAO/MT_Cubit/Task_Client.cpp:
          increment number_of_samples in iteration loops, instead of
          relying on loop_count.  Without this change, the jitter
          calculation is incorrect, and underestimates jitter.  It's
          not clear why the actual number of messages and loop count
          differ by so much, e.g, 150 instead of 1000.

        * utils/IOR-parser/ior-handler.cpp (findIfVisiIor,interpretIor):
          removed unused locals "nullOctet".

        * orbsvcs/tests/Sched/Makefile: removed Quantify relics.

        * orbsvcs/tests/Sched/DynSched_Test.cpp: replaced quantify with
          ACE_HAS_QUANTIFY.

        * orbsvcs/orbsvcs/Scheduler_Factory.cpp (preemption_priority,
          set_preemption_priority):  for HPUX aCC only, added typedef
          to replace direct use of RtecScheduler::Preemption_Priority
          as an operator name.  It can't handle it.  Thanks to
          Alan Scheinine <scheinin@crs4.it> for reporting this problem
          and providing the fix.

Wed Sep 23 02:39:29 1998  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.2.14 released.

Wed Sep 23 01:24:09 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/ORB.h (struct TAO_Leader_Follower_Info): Added constructor
          cause all the fields were not being initialized properly.

1998-09-22  Nagarajan Surendran  <naga@tango.cs.wustl.edu>

        * performance-tests/Cubit/TAO/MT_Cubit/Task_Client.cpp :
          Fixed the stats.sample to just pass the
          latency as it in microseconds and also removed the 0.5 addition
          since it caused an floating point exception on chorus.
          Also fixed the (1/frequency) error while calculating sleep_time
          for a thread which caused the high priority to keep running in
          chorus.

        * performance-tests/Cubit/TAO/MT_Cubit/Globals.h:
          Fixed the pccTimerInit macro for chorus.

        * performance-tests/Cubit/TAO/MT_Cubit/Timer.cpp:
          performance-tests/Cubit/TAO/MT_Cubit/client.cpp:
          Fixed chorus compile errors.

        * performance-tests/Cubit/TAO/MT_Cubit/client.cpp:

Tue Sep 22 23:04:01 1998  David L. Levine  <levine@cs.wustl.edu>

        * performance-tests/Cubit/TAO/MT_Cubit/MT_Cubit_Test:
          enable -ORBiioplite by default, and added -l option to
          disable.

        * performance-tests/Cubit/TAO/MT_Cubit/summarize:
          added this script, which summarizes the results
          from multiple MT_Cubit_Test runs.

Tue Sep 22 22:46:52 1998  Sergio Flores  <sergio@tango.cs.wustl.edu>

        * performance-tests/Cubit/TAO/MT_Cubit/Makefile: Updated
        dependencies.

Tue Sep 22 22:29:30 1998  David L. Levine  <levine@cs.wustl.edu>

        * exmaples/POA/{Forwarding,TIE}: added FooS_T.* to
          realclean target.

Tue Sep 22 19:18:36 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/tests/EC_Mcast/EC_Mcast.h:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
          Updated the comments and removed some warnings.

        * utils/IOR-parser/ior-handler.cpp:
          Fixed out-of-bounds error in an array.
          the IorHander::hexChar2int() function was not returning a value
          on every execution path.

        * examples/Simple/chat/Client_i.cpp:
        * examples/Simple/bank/Server_i.cpp:
          Removed unreached statement.

        * examples/Simple/bank/Client_i.cpp:
          Removed unused variable.

        * examples/Simple/grid/Client_i.cpp:
        * examples/Simple/chat/Client_i.cpp:
          Reordered initializers to match the declaration.

        * examples/POA/On_Demand_Activation/server.cpp:
          Removed signed/unsigned comparison warning.

Tue Sep 22 18:19:42 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/IIOP_Object.cpp:
          Fixed unreachable statement warning: this was an excellent
          warning because the semantics were broken.

        * TAO_IDL/util/utl_scope.cpp:
          Removed unused variable.

        * docs/releasenotes/TODO.html:
          Added brief note about a (potential) EC bug.

        * docs/configurations.html:
          Added more documentation about the use of dotted decimal
          addresses to work in platforms without a DNS server.

Tue Sep 22 18:03:13 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * examples/Simple/chat/Client_i.h:
          Added missing file.

Tue Sep 22 16:59:30 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tao/ORB.cpp (CORBA_ORB): Changed
          leader_follower_info_.leader_thread_ID_ = 0;

          to

          leader_follower_info_.leader_thread_ID_ = ACE_OS::NULL_thread;

          Thanks to Alan Scheinine <scheinin@crs4.it> for reporting this.

Tue Sep 22 16:16:49 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * Updated dependencies for many Makefiles.

Tue Sep 22 15:33:48 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/tests/EC_Mcast/EC_Mcast.h:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
          Added simple support for dynamic reconfiguration of the consumer
          subscriptions; we still have to propagate this to the multicast
          groups that we join.

        * orbsvcs/orbsvcs/Scheduler_Factory.h:
        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:
          Added support for configuring a local scheduler, without using
          the naming service.

Tue Sep 22 14:29:29 1998  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        Made changes to the ACE_DEBUG to print the server/client Process
        ID/ thread ID for all messages to console. Also modified README to
        include the description of tests done by client.

        * examples/Simple/bank/README:
        * examples/Simple/bank/ AccountManager_i.cpp
        * examples/Simple/bank/ Account_i.cpp
        * examples/Simple/bank/ Client_i.cpp
        * examples/Simple/bank/Server_i.cpp
        * examples/Simple/bank/client.cpp
        * examples/Simple/bank/server.cpp

Tue Sep 22 13:21:02 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * orbsvcs/Naming_Service/Naming_Service.cpp (init): Don't look for
          an existing naming service, just become one.

        * orbsvcs/orbsvcs/Naming/CosNaming_i.cpp (destroy): Must destroy
          self only after releasing the lock.

Tue Sep 22 07:12:31 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Naming/CosNaming_i.cpp (TAO_NamingContext ctor):
          reordered initializers to match declaration order.

        * orbsvcs/tests/Event_Latency/Event_Latency.cpp: replaced
          quantify with ACE_HAS_QUANTIFY.

        * orbsvcs/tests/Event_Latency/Makefile,
          orbsvcs/tests/EC_Multiple/Makefile,
          orbsvcs/tests/EC_Throughput/Makefile,
          orbsvcs/tests/EC_Custom_Marshal/Makefile: removed Quantify
          support, now that it's in wrapper_macros.GNU.

        * performance-tests/Cubit/TAO/MT_Cubit/MT_Cubit_Test:
          put the sleep in a loop that checks for the server ior file.
          The old 4 second sleep wasn't always long enough.

        * tests/Makefile: removed DynAny_Test from DIRS because it
          doesn't yet have a Makefile.

Tue Sep 22 03:22:56 1998  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.2.13 released.

Tue Sep 22 02:40:33 1998  Douglas C. Schmidt  <schmidt@lambada.cs.wustl.edu>

        * examples/Simple/grid: Printout the process id and thread id
          for the client and server.

        * examples/Simple/Makefile (DIRS): Enabled all the "Simple" test
          examples in the Makefile so we can see if they compile on other
          platforms.

        * TAO_IDL/be/be_interface.cpp (gen_perfect_hash_methods): Added
          the -S1 flag, which generates a switch statement if duplicate
          keys are encountered.  This works around a bug with gperf that
          needs to be fixed soon...

Mon Sep 22 01:08:51 1998  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * changed examples/Simple/echo/Client_i.cpp
                 - the initialization of the naming service just
                needs a single argument now.

        * changed examples/Simple/echo/Server_i.cpp
                - return values from TAO_CHECK_ENV have been removed.

        * checked in
                examples/Simple/echo/Echo.dsw,
                examples/Simple/echo/client.dsp,
                examples/Simple/echo/server.dsp.

Mon Sep 21 22:24:45 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Naming/Naming_Utils.h (TAO_Naming_Client): Added
          timeout to init().

Mon Sep 21 21:44:39 1998  David L. Levine  <levine@cs.wustl.edu>

        * tao/CDR.i,tao/Connect.cpp,
          performance-tests/Cubit/CORBAplus/MT_Cubit/server/Makefile
          performance-tests/Cubit/TAO/MT_Cubit/Makefile
          performance-tests/Thruput/COOL/ttcp_i.cpp
          performance-tests/Thruput/CORBAplus/ttcp_i.cpp
          performance-tests/Thruput/TAO/ttcp_i.cpp:
          use ACE_HAS_PURIFY instead of ACE_PURIFY.  And, removed
          purify settings from Makefiles now that they're in ACE's
          wrapper_macros.GNU.

Mon Sep 21 21:32:31 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * orbsvcs: Removed the extra args after all the
          TAO_Naming_Client::init() calls.

Mon Sep 21 18:20:35 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/ORB_Core.cpp (init): Added compile time option
          TAO_USE_DOTTED_DECIMAL_ADDRESSES that makes the use of dotted
          decimal addresses the default.  Also changed the
          -ORBdotteddecimaladdresses option to take an argument (0 or 1).

        * tao/ORB.cpp:
        * tao/Connect.cpp:

          g++ cannot gork templates typedefs.

        * orbsvcs/orbsvcs/Naming/CosNaming_i.cpp (new_context and list):
          Cannot call _this() directly since the POA has the USER_ID
          policy.  Therefore, added a simple scheme for producing names
          based on a counter value.

Mon Sep 21 18:15:13 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/ORB.cpp:
        * tao/Connect.cpp:
          Fixed template instantiations, thanks to Irfan for his help
          tracking this down.

Mon Sep 21 01:38:46 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * performance-tests/Cubit/TAO/DII_Cubit/client.cpp (init_naming_service):
        * performance-tests/Cubit/TAO/IDL_Cubit/Cubit_Client.cpp
          (init_naming_service): Fixed initialization of Naming_Server.

        * orbsvcs/orbsvcs/IOR_Multicast.h (TAO_IOR_Multicast): Changed
          char * to const char *.

        * orbsvcs/orbsvcs/Naming/Naming_Utils.h (TAO_Naming_Server):
          Complete revamp of Naming_Server and Naming_Client. New
          implementation is better with respect to functionality, memory
          management and other indescribable things ;-)

        * orbsvcs/orbsvcs/Naming/CosNaming_i.cpp (TAO_NamingContext):
          Deprecated init(). Also fixed some other simple stuff.

        * tao/IIOP_Object.cpp (IIOP_Object): Fixed initialization for
          this->fwd_profile_lock_ptr_.

        * tao/IIOP_Object.i (reset_handler) and (~IIOP_Object): Added code
          to cleanup hint svc_handler.

        * tao/ORB.cpp: Fixed template instantiations.

        * tao/GIOP:
        * tao/Invocation.cpp

          Changed close to handle_close.

        * tao/Environment.cpp (print_exception): Check for zero exception
          before printing.

        * tao/Connect.cpp (handle_close): Close socket but don't delete
          instance.  Instance will be deleted when all "hints" are
          removed. Instance is deleted in close().

Sun Sep 20 23:30:20 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tao/ORB: It is now possible to give an ACE_Time_Value to the
          ORB's resolve_initial_references() method in order to bound the
          amount of time spent waiting for a service to be resolved via
          multicast.

        * tao/orbconf.h: Renamed TAO_DEFAULT_NAME_SERVER_TIMEOUT to
          TAO_DEFAULT_SERVICE_RESOLUTION_TIMEOUT, which is more
          descriptive.

Sun Sep 20 22:57:28 1998  Marina Igorevna Spivak  <marina@mambo.cs.wustl.edu>

        * TAO/orbsvcs/orbsvcs/Naming/CosNaming_i.h,
          TAO/orbsvcs/orbsvcs/Naming/CosNaming_i.cpp:
          updated servants to keep a reference to their POA (which might be
          different from the root POA).

Sun Sep 20 22:41:02 1998  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * examples/Simple/echo/Echo_i.cpp:
          changes in Echo::echo() made.

Sun Sep 20 01:21:07 1998  Darrell E. Brunsch  <brunsch@waltz.cs.wustl.edu>

        * ChangeLog: IIOP_Object changes.

        * tao/IIOP_Object.cpp, tao/IIOP_Object.h, tao/IIOP_Object.i:
        Fixed the static call to revert back to the original profile when the
        forwarded profile fails.

1998-09-20  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * examples/Simple/echo/Echo_i.cpp:
        changes in method Echo::echo.

Sun Sep 20 21:20:05 1998  Marina Igorevna Spivak  <marina@mambo.cs.wustl.edu>

        * TAO/orbsvcs/orbsvcs/CosNaming.idl: added comments.

        * TAO/orbsvcs/orbsvcs/Naming/*:
        renamed all classes NS_* to be TAO_*

        * TAO/orbsvcs/orbsvcs/Naming/CosNaming_i.*:
        modified implementation to support C++ exception via use of TAO's
        portable exception macros. Updated destroy methods.  Created
        <root_> flag, which can be set in the constructor to identify a
        root context.

        * tao/corba.h: added TAO_TRY_THROW macro, which should be used
        inside  a TAO_TRY block, and caught by the following TAO_CATCH...

Sun Sep 20 20:20:20 1998 Vishal Kachroo <vishal@merengue.cs.wustl.edu>

        * TAO/tests/Simple/bank : Checked in the final versions of the following files :
                /Account_i.cpp
                /Account_i.h
                /AccountManager_i.cpp
                /AccountManager_i.h
                /Server_i.cpp
                /Server_i.h
                /Client_i.cpp
                /Client_i.h
                /server.cpp
                /client.cpp
                /Bank.idl

Sun Sep 20 01:19:16 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tao/IIOP_Object.{cpp,i,h}: Fixed the static call to
          revert back to the original profile when the forwarded
          profile fails.

Sat Sep 19 21:35:28 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tests/Simple_Naming/client.dsp:
        * tests/Trading/TradingLib.dsp:
          More projects that need to be changed because of the
          TAO_IDL's move.

Sat Sep 19 21:27:38 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tao/GIOP.cpp: Fixed a signed/unsigned comparison in
          writev_n.

Sat Sep 19 14:26:54 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * examples/TAO_Examples.dsw:
        * performance-tests/TAO_Perf_Tests.dsw:
        * tests/TAO_Tests.dsw:
          Split up the workspaces to work with the new structure
          of examples, performance-tests, and tests.

        * TAO_IDL/tao_idl.dsp:
        * tao/tao.dsp:
        * examples/POA/Generic_Servant/server.dsp:
          Changed behavior of all DLL projects and utilities (like
          tao_idl) to put the dll and executables in $ACE_ROOT/bin.

        * examples/POA/DSI/client.dsp:
        * examples/POA/Forwarding/client.dsp:
        * examples/POA/Forwarding/server.dsp:
        * examples/POA/Generic_Servant/client.dsp:
        * examples/POA/TIE/client.dsp:
        * examples/POA/TIE/server.dsp:
        * examples/Quoter/Factory_Finder.dsp:
        * examples/Quoter/Generic_Factory.dsp:
        * examples/Quoter/client.dsp:
        * examples/Quoter/server.dsp:
        * examples/Simple/time/client.dsp:
        * examples/Simple/time/server.dsp:
        * orbsvcs/Naming_Service/Naming_Service.dsp:
        * orbsvcs/orbsvcs/orbsvcs.dsp:
        * performance-tests/Cubit/TAO/IDL_Cubit/client.dsp:
        * performance-tests/Cubit/TAO/IDL_Cubit/collocation_test.dsp:
        * performance-tests/Cubit/TAO/IDL_Cubit/server.dsp:
        * performance-tests/Cubit/TAO/MT_Cubit/client.dsp:
        * performance-tests/Cubit/TAO/MT_Cubit/server.dsp:
        * tests/Multiple_Inheritance/client.dsp:
        * tests/Multiple_Inheritance/server.dsp:
        * tests/NestedUpcall/MT_Client_Test/client.dsp:
        * tests/NestedUpcall/MT_Client_Test/server.dsp:
        * tests/NestedUpcall/Reactor/client.dsp:
        * tests/NestedUpcall/Reactor/server.dsp:
        * tests/NestedUpcall/Triangle_Test/initiator.dsp:
        * tests/NestedUpcall/Triangle_Test/server_A.dsp:
        * tests/NestedUpcall/Triangle_Test/server_B.dsp:
        * tests/OctetSeq/OctetSeq.dsp:
        * tests/Param_Test/client.dsp:
        * tests/Param_Test/server.dsp:
          Had to update projects that compile IDL files since tao_idl
          was moved to $ACE_ROOT/bin.

        * TAO-INSTALL.html
          Updated the instructions for all this.

Sat Sep 19 14:03:27 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * examples/POA/Explicit_Activation/alternate.conf: Fixed service
          config directive since directory name of the alternate resource
          factory was changed.

Sat Sep 19 13:13:46 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp (consumer_push): added
          another ACE_CAST_CONST.  Thanks to Hans for reporting that
          it was needed to compile with Sun C++.

Fri Sep 18 17:39:03 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * TAO/tests/DynAny_Test/DynUnion_i.{h,cpp}:
        * TAO/tests/DynAny_Test/README:
          Checked in the finished DynUnion code and updated the
          README file.

          Quickly tested what I could of DynUnion functions, but TAO
          IDL compiler doesn't yet deal with a union default case or
          with more than one label for the same element. There were
          also problems with insertion into an Any for unions with a
          string or typecode active member, but these are also IDL
          problems and are also present with structs.

          Aside from the above limitations, preliminary check on
          DynUnion is a thumbs-up.

Fri Sep 18 16:44:42 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * utils: Added the latest and greatest IOR parser.  Thanks to
          Priya Narasimhan <priya@lambda.ece.ucsb.edu> for this.

Fri Sep 18 11:27:00 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * orbsvcs/orbsvcs/AV/Endpoint_Strategy_T.{h,cpp}: Moved all the
          template code from Endpoint_Strategy.{h,cpp} into these separate
          files.

Fri Sep 18 08:48:20 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * orbsvcs/orbsvcs/orbsvcs.dsp:  Fixed some idl custom build
          settings for release version. Thanks to jmorey@tbi.com (John
          Morey) for reporting this.

Fri Sep 18 08:39:13 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/EC_Mcast/EC_Mcast.i
          ({consumer,supplier}_{ipaddr,name}): added ACE_CAST_CONST to please
          Sun C++.  Thanks to Hans Rohnert for reporting this.

        * performance-tests/Cubit/TAO/MT_Cubit/Cubit_Task.cpp (svc):
          (svc): print out errno string if ORB initialization fails.

        * tao/POA.i (operator ==,!=): added ACE_UNUSED_ARG (rhs) with
          POA_NO_TIMESTAMP.

        * orbsvcs/tests/EC_Custom_Marshal/Makefile: ran make depend.
          Thanks to Hans Rohnert for reporting that the build failed
          without it.

Fri Sep 18 02:15:23 1998  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.2.12 released.

Fri Sep 18 00:11:07 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be_include/be_interface.h:
        * TAO_IDL/be/be_interface.cpp:

        Used ACE::open_temp_file () instead of ACE_OS::open ().
        Commented out be_interface::cleanup_gperf_temp_file ().

Thu Sep 17 23:47:31 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Constraint_Visitors.cpp:
          Added the correct template instantiations for IRIX 6.2

        * tao/ORB_Core.cpp:
          Minor fix in argument parsing.

Thu Sep 17 22:52:48 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be/be_sunsoft.cpp:
          For character constants we print the hex escape sequence if the
          character is not printable.

Thu Sep 17 22:22:51 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * docs/configurations.html:
          Updated the section about homogenous configurations.

Thu Sep 17 21:48:21 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:
          Added support for hex scape sequences for char constants.

Thu Sep 17 21:22:42 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * TAO/tests/DynAny_Test/README.txt
          Updated and edited file.

Thu Sep 17 18:52:14 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.cpp:
        * tao/GIOP.cpp:
          We now use the iovec structure becauce ACE_IO_Vector has been
          deprecated.

        * orbsvcs/orbsvcs/Event/Event_Channel.cpp:
          Removed some debug messages.

Thu Sep 17 14:18:19 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * TAO/tests/DynAny_Test/README.txt
          Added this new file.

Thu Sep 17 09:04:34 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/ORB_Core.cpp:
          More fixes for HP-UX 10.2, we have to use ACE_OS::thr_equal()
          instead of operator==, thanks to Anne Blankert <anne@geodan.nl>
          for pointing out this problems.

Wed Sep 16 22:36:55 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/EC_Mcast/EC_Mcast.i
          ({supplier,consumer}_{name,ipaddr}):  added static
          casts to CORBA::ULong to avoid signed/unsigned comparisons.

        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp (consumer_push):
          added static cast to avoid signed/unsigned comparison.
          Added ACE_UNUSED_ARG (_env).

        * examples/POA/Explicit_Activation/server.cpp (write_iors_to_file):
          changed type of local "result" from int to u_int to
          avoid signed/unsigned comparison.

1998-09-16  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * examples/Simple/echo/Client_i.h (class Client_i):
        initialized the use_naimg_service variable to 1.

        * examples/Simple/echo/Client_i.cpp:
        changed the names of the variables needed for the naming_service.

Wed Sep 16 20:39:14 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Constraint_Visitors.cpp:
          Fixed template instantiation problem on IRIX, thanks to
          Margherita Vittone Wiersma <vittone@fndaub.fnal.gov> for
          reminding me of this.

        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.h:
          Removed TAO_Register<>::find_property() it wasn't defined or
          used in any place and it caused problems on IRIX.

        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
          Use the new ACE_OS::rand_r() interface.

        * orbsvcs/orbsvcs/Sched/Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/DynSched.cpp:
          Changed some debug messages so it would be easier to recognize
          the source.

Wed Sep 16 20:30:53 1998  Vishal Kachroo  <vishal@cs.wustl.edu>

         * examples/Simple/bank/run_test.pl: Added this script
          with proper sleep time between server and client.

1998-09-16  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * examples/Simple/echo/run_test.pl:
        modified the script so that it works for the test
        example with Naming service.

Wed Sep 16 18:47:55 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.cpp (push): Added a cast to
          (const ACE_IO_Vector_Base *) so that aCC can correctly
          disambiguate the send() call.  Thanks to John Mulhern for
          reporting this.

Wed Sep 16 15:25:01 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * performance-tests/Cubit/TAO/MT_Cubit/Globals.h (SCHED_PRIORITY):
          Changed the scheduling scheme in the macro to ACE_SCHED_FIFO on
          Win32.  Thanks to David's hint.

Wed Sep 16 12:21:20 1998  Marina Igorevna Spivak  <marina@mambo.cs.wustl.edu>

        * TAO/orbsvcs/tests/Simple_Naming/run-test.pl
          Updated perl script to run all client tests.

        * TAO/orbsvcs/tests/Simple_Naming/client.cpp
          Updated Tree_Test to provide output in case a test is successful.

Wed Sep 16 09:14:16 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Connect.cpp:
          Fixed several portability problems, some ACE_thread_t variables
          were initialized to 0 instead of ACE_OS::NULL_thread and == was
          used to compare them, instead of ACE_OS::thr_equal.

        * tao/CDR.cpp:
          A faster implementation of read_array() for the case were
          byteswapping is required. Thanks to Anders W. Tell
          <anderst@toolsmiths.se> for this patch.

Tue Sep 15 21:37:07 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/IIOP_Object.cpp:
          Fixed Sun/CC warning, a local variable named <host> was hiding
          the class field with the same name in IIOP::Profile::set()

Tue Sep 15 20:10:37 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * Makefile: Completely revised TAO's directory structure so that
          there are now two new top-level directories: examples and
          performance-tests.  This structure is designed to mimick the
          directory structure in ACE.

1998-09-15  Vishal Kachroo  <vishal@merengue.cs.wustl.edu>

        * TAO/tests/Simple/bank : Added the client and server files for this test.
        /Account_i.cpp
        /Account_i.h
        /AccountManager_i.cpp
        /AccountManager_i.h
        /Server_i.cpp
        /Server_i.h
        /Client_i.cpp
        /Client_i.h
        /server.cpp
        /client.cpp
        /Bank.idl

1998-09-15  Kirthika Parameswaran  <kirthika@cs.wustl.edu>

        * tests/Simple/echo : Checked in the following files.
        /Client_i.cpp
        /Client_i.h
        /Echo_i.cpp
        /Echo_i.h
        /Echo.idl
        /Makefile
        /Server_i.cpp
        /Server_i.h
        /client.cpp
        /run_test.pl
        /server.cpp

Tue Sep 15 18:00:55 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * tests/POA/DSI/README: A few caveats for the users. Nothing major.

        * tests/POA/DSI/run_test.pl: New test script. Runs the client and
          server.

        * tests/POA/DSI/server.cpp: Added a parse_args method and changed
          to output the IOR to a file. Added an argument to set the
          TAO_debug_level

        * tests/POA/DSI/client.cpp: Altered to get the IOR from a file and
          added an argument to set the TAO_debug_level

Tue Sep 15 17:47:07 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * tests/POA/Default_Servant/client.cpp: Added TAO_debug_level
          option to the arguments list

Tue Sep 15 17:07:19 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * tests/POA/Default_Servant/test: Modified the permissions (they
          were breaking things). There were _no_ permissions set, so I
          added read and write access.

        * tests/POA/Default_Servant/run_test.pl: The wonderful new test
          script (huzzah!).

        * tests/POA/Default_Servant/server.cpp: Changed the syntax for
          writing the IOR to a file to be more in line with the syntax of
          the new test scripts.

        * tests/POA/Default_Servant/client.cpp: Added support for reading
          the IOR from a file, a requirement for the new test script.

Tue Sep 15 16:23:31 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/client.cpp(~Client_i) :
          Used delete [] instead of delete for this->low_priority_client_.

        * tests/Cubit/TAO/MT_Cubit/Task_Client.cpp (~Task_State):
          Used delete [] for this->iors_ in place of the wrong delete.
          Thanks to David and Sergio for reporting this.

Tue Sep 15 15:35:31 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * TAO_IDL/util/utl_global.cpp (IDL_GlobalData): Replaced "\"s with
        "\\"s.

Tue Sep 15 14:34:04 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/CDR.h:
        * tao/CDR.i:
          Removed the << and >> operators involving the Boolean, Octet,
          Char or WChar. The helper classes from_boolean/char/wchar/octet
          or to_boolean/char/wchar/octet have to be used.

        * TAO_IDL/be/be_visitor_field/cdr_op_cs.cpp:
          The generated code now uses the from_boolean/char/wchar/octet
          helpers for the << operators and the corresponding to_* form
          for the >> operators

        * tao/Invocation.cpp:
          Use the from_boolean and to_boolean helpers.

        * TAO_IDL/be/be_visitor_root/cdr_op.cpp:
          Cosmetic changes.

Tue Sep 15 13:51:36 1998  Marina Igorevna Spivak  <marina@mambo.cs.wustl.edu>

        * TAO/orbsvcs/tests/Simple_Naming/client.cpp :
          Added return values to all <execute> methods.

Tue Sep 15 13:10:51 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * TAO_IDL/util/utl_global.cpp (IDL_GlobalData): Replaced "/"s with
        "\"s while specifying absolute path for gperf on WIN32.

Tue Sep 15 12:54:22 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * TAO_IDL/driver/drv_args.cpp (DRV_parse_args): Added a new line
        after the warning.

Tue Sep 15 10:26:45 1998  Aniruddha Gokhale  <gokhale@sahyadri.research.bell-labs.com>

        * TAO_IDL/be/be_visitor_array/{cdr_op_ch, cdr_op_cs}.cpp:

          The CDR <<, >> operators now use the <array>_forany type as
          parameter. This was necessary to distinguish between a
          degenerate pointer versus an array. We use the same strategy as
          used by the Any <<= and >>= operators.

          In addition, for types such as arrays of strings and object
          references, the generated implementation for the CDR operators
          use the "in" and "inout" types. Special handling is also
          necessary for arrays of arrays.

        * TAO_IDL/be/be_visitor_field/cdr_op_cs.cpp:

          Fields that are array types (typedefined or anonymous) must be
          passed using their forany types. Special care must be taken to
          distinguish between typedefed arrays and anonymous arrays.

        * TAO_IDL/be/be_visitor_root/cdr_op.cpp:

          Reactivated the CDR operator code generation. This was
          temporarily commented out.

        * tao/CDR>{h, i}:

          Added << and >> operators that take the Any's helper classes
          like from_boolean, to_boolean and others. This is necessary to
          distinguish between these types.

        * tao/IIOP_Object.cpp:

          There was a local variable called "host" that was hiding the
          data member "host". This is now fixed.

Tue Sep 15 10:11:03 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be/be_visitor_root/cdr_op.cpp:
          Disabled generation of << and >> operators for InputCDR and
          OutputCDR.

Tue Sep 15 10:08:05 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * TAO-INSTALL.html (NOTE): Revised adding IDL files into your MSVC
          project setion to all IDL generated files should be put into
          both client and server projects.

Tue Sep 15 00:21:39 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/ORB_Core.cpp (init): Added new option
          -ORBdotteddecimaladdresses.

Mon Sep 14 23:41:22 1998  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.2.11 released.

Mon Sep 14 22:23:15 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * orbsvcs/tests/Simple_Naming/client.cpp (class My_Test_Object):
          Added a default value for the My_Test_Object constructor so that
          it compiles properly.  Thanks to Hans Rohnert for reporting
          this.

Mon Sep 14 20:44:56 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * docs/compiler.html: Added a section about Operation Lookup Strategy.

Mon Sep 14 20:33:46 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * TAO_IDL/util/utl_global.cpp :
        * TAO_IDL/driver/drv_args.cpp :
                Some more robust handling for failure on running
        <gperf>. Also updated the warning message when failure on
        running.

                We try to run the $ACE_ROOT/bin/gperf. If $ACE_ROOT doesnt
                exist then we try to execute "gperf" hoping that PATH is
                set correctly. If -g option is used, we use that path to
                execute gperf. If nothing works, we print the following
                the note.
        "TAO_IDL:Note:GPERF could not be executed. Using Dynamich Hashed OpLookup instead of Perfect Hashing\n"
        "To make use of Perfect Hashing\n"
        "\t-Build the <gperf> program at $ACE_ROOT/apps/gperf\n"
        "\t-Set the environment variable $ACE_ROOT appropriately or add $ACE_ROOT/bin to the PATH\n"
        "\t-Refer to Operation Lookup section in the TAO IDL User Guide ($TAO_ROOT/docs/compiler.html) for more details"


Mon Sep 14 17:47:41 1998  Chris Gill <cdgill@cs.wustl.edu>
                          Irfan Pyarali  <irfan@cs.wustl.edu>

        * orbsvcs/tests/Simulator/Event_Supplier/Event_Sup.cpp:
          Changed ownership of data to 0 in reused any so the
          any does not try to delete the data out from under us

Mon Sep 14 17:47:41 1998  Chris Gill <cdgill@cs.wustl.edu>

        * orbsvcs/tests/Simulator/DOVEBrowser/PushConsumer.java:
          converted nested struct memberwise initializations into
          new calls to nested class ctors.

Mon Sep 14 14:33:41 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * TAOACE.dsw: Added gperf to the projects here.

Mon Sep 14 13:50:25 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/client.cpp: Fixed memory problems
          reported by purify.

Mon Sep 14 11:06:00 1998  David L. Levine  <levine@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/{Globals.cpp,Task_Client.cpp}:
          moved ACE_Condition<ACE_SYNCH_MUTEX> instantiation from
          Task_Client.cpp to Globals.cpp so that the server can link it.

        * tests/Cubit/TAO/MT_Cubit/client.cpp (do_priority_inversion_test):
          changed type of loop index "j" from unsigned to signed to
          avoid signed/unsigned comparison with argc_.

Sun Sep 13 22:40:57 1998  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.2.10 released.

Sun Sep 13 18:16:46 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/Globals.{h,cpp}: Converted some old
          #ifdefed code in server.cpp and client.cpp into macros
          for sched_params and new method for fifo scheduling initialization.

        * tests/Cubit/TAO/MT_Cubit/Util_Thread.cpp: Replaced magic numbers
          with symbolic constants.

        * tests/Cubit/TAO/MT_Cubit/Timer.cpp: Fixed the elapsed time
          calculation for vxworks. Thanks to sergio for finding this.

        * tests/Cubit/TAO/MT_Cubit/Task_Client.cpp:
        * tests/Cubit/TAO/MT_Cubit/client.cpp:
                Fixed memory leaks.

Sun Sep 13 00:44:07 1998  Sergio Flores  <sergio@tango.cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.cpp:
        * tests/Cubit/TAO/MT_Cubit/client.cpp: Added some template
        instantiations. Fixed bug related to the task name when creating
        the active object.

        * tests/Cubit/TAO/MT_Cubit/Makefile (CUBIT_SVR_OBJS): Deleted some
        unnecessary object files.

Sat Sep 12 23:34:17 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * tao/Typecode.h:
          Fixed the equivalent(0 function I added a few days ago -
          seems the .h and .cpp signatures didn't agree. Must be
          Alzheimer's.

Sat Sep 12 21:54:04 1998  Seth Widoff  <swidoff@sophocles.cimds.ri.cmu.edu>

        * orbsvcs/orbsvcs/Trader/constraint.l:
        * orbsvcs/orbsvcs/Trader/Constraint_l.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Database.cpp:
        TAO_Literal_Constraint has constructors that need to distinguish
        between CORBA::Long and CORBA::Boolean parameters. When CORBA::B_FALSE
        and CORBA::B_TRUE in the TAO_Literal_Constraint constructors were
        changed to 0 and 1, they were interpreted as longs and not
        booleans. Bad things happened. So I added explicit casts.

Sat Sep 12 20:42:49 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/Task_Client.cpp: Fixed the bugs in
          latency and jitter calculation.

        * tests/Cubit/TAO/MT_Cubit/Globals.h : Removed the
          TIME_IN_MICROSEC macro as all time calculations are made
          uniformly in microseconds.

Sat Sep 12 18:45:03 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/IDL_Cubit/Cubit_Client.cpp: Guarded the
          print_RtiPacket statements with TAO_debug_level > 0 condition.

Sat Sep 12 18:05:22 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Invocation.cpp:
          Added compatibility with ORBs that return a status of
          SYSTEM_EXCEPTION, but are actually returning a UserException;
          Visibroker does this.

        * tao/encode.cpp:
        * tao/decode.cpp:
          Fixed decoding and encoding of structures that have object
          references as fields.

Sat Sep 12 16:07:21 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * TAO-INSTALL.html: Updated the location of the MSVC project
          file for IDL Cubit.

Fri Sep 11 22:28:26 1998  Marina Igorevna Spivak  <marina@mambo.cs.wustl.edu>

        * TAO/orbsvcs/tests/Simple_Naming/client.h
        * TAO/orbsvcs/tests/Simple_Naming/client.cpp
        * TAO/orbsvcs/tests/Simple_Naming/README
          Replaced simple test with a set of tests for Naming Service.

Fri Sep 11 22:08:25 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit: Added my name to the authors in the
          header files and also added some comments.

Fri Sep 11 17:49:31 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * tao/TypeCode.{h,cpp}:
        * tao/Any.cpp;
          Added an equivalent() function to typecode, similar to equal(),
          but disregarding aliases. Changed the extraction operators in
          Any to use equivalent() instead of equal().

Fri Sep 11 17:29:11 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/Task_Client.{h,cpp} : Replaced the
          ACE_timer_t based global_jitter_array with ACE_Unbounded_Set.

1998-09-11  Pradeep Gore  <pradeep@flamenco.cs.wustl.edu>

        * tests/Simple/chat: Added new test program.  This simple chat
          program was originally a test in ORBacus and should help ORBacus
          users to move to TAO and the POA.

Fri Sep 11 12:14:03 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.cpp : Fixed a memory allocation
          error where ior array was allocated before parsing the arguments.

Thu Sep 10 15:22:16 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be_include/be_predefined_type.h:
        * TAO_IDL/be/be_predefined_type.cpp:
          The repository ID in the TypeCode of a structure containing a
          CORBA_Object was invalid.

        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
          Use CORBA::Object::_duplicate() instead of foo->_duplicate() the
          first one is more readable.

        * orbsvcs/orbsvcs/Trader/Trader_Utils.cpp:
          An object was stored in a T_var and then as the field of a
          structure, resulting in a double delete.

Tue Sep 08 14:05:56 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/POA/On_Demand_Activation/run_test.pl: Added a perl script
          that makes it easier to run this test.

        * tests/POA/On_Demand_Activation/svc.conf:  Removed this file.

        * tests/POA/On_Demand_Activation/server.cpp: Added the ability to
          write IORs to files.

        * TAO_IDL/be/be_decl.cpp (compute_repoID): Add the "/" only if
          there is a prefix.

Wed Sep 10 13:14:30 1998  Chris Gill  <cdgill@cs.wustl.edu>

        * orbsvcs/tests/Simulator/DOVEBrowser/PushConsumer.java:
          cleaned up a couple more inconsistencies with the new
          RtecEventComm::Event interface.

Wed Sep 10 11:48:34 1998  Chris Gill  <cdgill@cs.wustl.edu>

        * orbsvcs/tests/Simulator/DOVEMIB/DOVEMIB.cpp
          orbsvcs/tests/Simulator/Event_Supplier/DOVE_Supplier.cpp
          orbsvcs/tests/Simulator/Event_Supplier/Event_Con.cpp:
          cleaned up remaining inconsistencies with new RtecEventComm::Event
          interface.

Thu Sep 10 09:49:39 1998  David L. Levine  <levine@cs.wustl.edu>

        * tests/Cubit/TAO/IDL_Cubit/run_test.pl: set default
          $exepref to '.' . $DIR_SEPARATOR, so that the user
          need not have '.' in their PATH.

Wed Sep 09 22:33:34 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * TAO_IDL/util/utl_global.cpp (IDL_GlobalData): Don't warn about
          undefined ACE_ROOT on Win32 at all.  It is not used and we don't
          use gperf on NT for now.

Wed Sep  9 15:28:24 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tao/Connect.cpp:
        * tao/GIOP.cpp:
        * tao/Invocation.cpp:
          Added ORBdebug functionality to several debug messages

Wed Sep  9 15:00:16 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * TAO/tests/DynAny_Test/server.dsp:
        * TAO/tests/DynAny_Test/client.dsp:
        * TAO/tests/DynAny_Test/DynAny_Test.dsw:
        * TAO/tests/DynAny_Test/driver.cpp:
        * TAO/tests/DynAny_Test/DynAny.idl:
        * TAO/tests/DynAny_Test/tckind.idl:
        * TAO/tests/DynAny_Test/da_tests.idl:
        * TAO/tests/DynAny_Test/DynAny_i.{h,cpp}:
        * TAO/tests/DynAny_Test/DynArray_i.{h,cpp}:
        * TAO/tests/DynAny_Test/DynStruct_i.{h,cpp}:
        * TAO/tests/DynAny_Test/DynEnum_i.{h,cpp}:
        * TAO/tests/DynAny_Test/DynUnion_i.{h,cpp}:
        * TAO/tests/DynAny_Test/DynSequence_i.{h,cpp}:
          All the DynAny stuff so far. DynUnion isn't finished yet.
          The client project is just a repository for the idl files
          and driver.cpp has nothing in it. IDL-generated files need
          to be modified before this will compile. These files have
          been committed so Carlos can start moving stuff into TAO
          while I work on class assignments and modifications to
          TypeCode.cpp and Any.cpp in order to finish DynUnion.

Wed Sep  9 13:03:20 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tao/ORB_Core.cpp: Adapted the behavior to use the new
          ACE::debug () instead of sending -d to the Service
          Configurator.

Wed Sep 09 07:01:26 1998  David L. Levine  <levine@cs.wustl.edu>

        * tao/IIOP_Interpreter.cpp (calc_union_attr_is_var_sized_member):
          wrapped the unreachable return statement with ACE_NOTREACHED.

        * tests/Cubit/TAO/MT_Cubit/Makefile: fixed dependencies, many
          were missing a / after $(ACE_ROOT).

        * TAO_IDL/be/be_interface.cpp (cleanup_gperf_temp_file): added
          comment on why we don't delete ss on Linux.

        * BUG-REPORT-FORM,Makefile: added BUG-REPORT-FORM.  Thanks
          to Susan Liebeskind <shl@cc.gatech.edu> for the form.

Tue Sep  8 21:47:46 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tests/Simple/grid/Grid_i.cpp: Changed some RANGE_ERRORs
          to Grid::RANGE_ERROR to compile on MSVC.

        * tests/Simple/grid/run_test.pl: Some changes with ACE
          object, and use lib.

        * tests/Simple/grid/Grid.dsw:
        * tests/Simple/grid/client.dsp:
        * tests/Simple/grid/server.dsp:
          MSVC 5/6 project files.

Tue Sep  8 21:45:32 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * *.{dsp,dsw}: Updated for VC 6.

Tue Sep  8 20:34:08 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/Task_Client.cpp : Split the run_tests
          and svc method into smaller functions.

        * tests/Cubit/TAO/MT_Cubit/Cubit_Task.h: Moved Cubit_Task class
          from server.h to this file.

        * tests/Cubit/TAO/MT_Cubit/client.cpp: Replaced magic numbers with
          #defines. Fixed vxWorks errors.

        * tests/Cubit/TAO/MT_Cubit/Globals.h : Added #defines for the
          constants.

Tue Sep  8 17:28:27 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/decode.cpp:
        * tao/Sequence.i:
          The correct way to set the length of the Message_Block inside a
          decoded octet sequences is to do it on the decoding code, using
          the ::replace() method brings all kind of problems a
          crashes. Especially if the sequence is encoded, as in the
          $TAO_ROOT/orbsvcs/EC_Custom_Marshal example.  Thanks to Dave
          Meyer <dmeyer@std.saic.com> for finding out this problem.

Tue Sep 08 14:05:56 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/ORB_Core.cpp (init): Turn on Service_Config debugging only
          when debugging != 0.

        * tests/POA/Explicit_Activation/server.cpp (write_iors_to_file):
          Added checks to catch potential failures in fprintf.

Tue Sep 08 16:12:36 1998  David L. Levine  <levine@cs.wustl.edu>

        * TAO_IDL/be/be_interface.cpp (cleanup_gperf_temp_file):
          replaced the #ifdef that prevented deletion of ss on linux.
          It's not OK without it.

Tue Sep  8 15:09:14 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Simple/time/run_test.pl:
          The waitforfile() function has to be qualified as
          ACE::waitforfile().

Tue Sep  8 13:55:02 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * orbsvcs/Naming_Service/Naming_Service.{dsp,dsw}:
          Updated for MSVC 6.  (dsp was done a slightly different
          way than Nanbor did at 10:47.

Tue Sep  8 12:57:44 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be/be_interface.cpp:
          The table for perfect hashing of operations did not include the
          _non_existent skeleton.

Tue Sep 08 10:47:49 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * orbsvcs/Event_Service/Event_Service.dsp:
        * orbsvcs/Naming_Service/Naming_Service.dsp:
        * orbsvcs/Scheduling_Service/Scheduling_Service.dsp:
        * orbsvcs/tests/Event_Latency/Event_Latency.dsp: Performed VC 6
          modification.

Tue Sep 08 07:30:33 1998  David L. Levine  <levine@cs.wustl.edu>

        * TAO_IDL/be/be_interface.cpp (cleanup_gperf_temp_file):
          removed the #ifdef that prevented deletion of ss on linux.
          It should be OK to delete it now, thanks to the recent
          fix provided by Ravi Nagabhyru <ravi@future-minds.com>.

        * tao/POA.cpp: removed explicit ACE_Guard <ACE_Lock> instantiation
          because it is now in ace/Message_Block.cpp.

        * tao/IIOP_Interpreter.cpp (calc_union_attr_is_var_sized_member):
          wrapped a couple of break statements with ACE_NOTREACHED.

        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.cpp (TAO_ECG_UDP_Sender::push):
          commented out unused local "count".

        * tests/POA/TIE/Makefile: use ACE_HAS_GNUG_PRE_2_8 to suppress builds
          with old g++.

Mon Sep  7 21:10:06 1998  Balachandran Natarajan  <bala@cumbia.cs.wustl.edu>

        * tests/Simple/grid:  Made some changes to Constructors

Mon Sep  7 20:39:06 1998  Balachandran Natarajan  <bala@cumbia.cs.wustl.edu>
        * tests/Simple/grid: Added the first implementation of the Grid
          example.  This example is loosely modeled on the Grid demo that
          is distributed with Orbix.

Mon Sep  7 19:45:15 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/Trading_Service/README:
        * orbsvcs/tests/Trading/README:
        Added README files directing the user to the
        docs/releasenotes/trader.html Trading Service documentation.

Mon Sep  7 19:31:28 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Simple/time/run_test.pl: Added require Process. Changed
          ACE::waitforfile to waitforfile. Thanks to Bala for reporting
          this.

Mon Sep  7 10:22:19 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit: Fixed a bunch of warnings.  Thanks to
          David Levine for reporting this.

Mon Sep 07 09:37:07 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.cpp (TAO_ECG_UDP_Sender::push):
          renamed loop index "i" to "b" to avoid shadowing local of the
          same name.

1998-09-07  Torben Worm  <tworm@cumbia.cs.wustl.edu>

        * orbsvcs/tests/Concurrency/CC_client.cpp
          Updated to handle missing commandline arguments

Sun Sep  6 23:06:38 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * TAO_IDL/be/be_decl.cpp,
          TAO_IDL/util/utl_global.cpp,
          orbsvcs/tests/ImplRepo/ir_implrepo_impl.cpp:
          Replaced all uses of ACE_OS::strnew() with ACE::strnew() to
          reflect the new changes.

Sun Sep  6 17:57:16 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tests/Simple/time/Client_i.cpp: Changed the use of exceptions in
          Client_i::time () to the macros, TAO_TRY, etc.

Sun Sep  6 14:07:49 1998  Douglas C. Schmidt  <schmidt@cumbia.cs.wustl.edu>

        * orbsvcs/orbsvcs/Log/Logger_i.h: Moved to ACE_NEW_THROW macros
          that Matt Braun wrote into $ACE_ROOt/ace/OS.h so they can be
          accessed by other applications.

Sun Sep  6 10:34:11 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be/be_interface.cpp:
          Fixed some memory corruption problems, thanks to Ravi Nagabhyru
          <ravi@future-minds.com> for reporting them and providing a
          patch.

Fri Sep 04 20:46:07 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * orbsvcs/orbsvcs/orbsvcs.dsp: Updated project source file list.

Fri Sep  4 18:46:10 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Thruput/TAO/ttcp_i.cpp:
          The use of iostream.h was removed, thanks to John Mulhern
          <9107@mn3.lawson.lawson.com> for reporting this.

        * TAO_IDL/Makefile:
        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/fe/y.tab.cpp.diff:
          Fixed problems for HP-UX 11, thanks to John Mulhern
          <9107@mn3.lawson.lawson.com> for reporting this.

Fri Sep  4 17:10:36 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * utils/catior/catior.cpp (catior): Removed a check for "if (tmp
          [0] && !isspace (tmp [0]))" since not all ORBs encode IORs
          consistently.  Thanks to Jeff Hopper for reporting this.

        * utils/catior/foo/catior.cpp (main): Added a fix for IORs with
          embedded '\0' characters.  Thanks to Jeff Hopper
          <jhopper@nosc.mil> for this.

Fri Sep  4 16:44:19 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Makefile:
        * orbsvcs/orbsvcs/RtecUDPAdmin.idl:
        * orbsvcs/orbsvcs/RtecEventChannelAdmin.idl:
        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.cpp:
        * orbsvcs/orbsvcs/Event/EC_UDP_Admin.h:
        * orbsvcs/orbsvcs/Event/EC_UDP_Admin.cpp:
        * orbsvcs/orbsvcs/Event/Event_Channel.h:
        * orbsvcs/orbsvcs/Event/Event_Channel.i:
        * orbsvcs/orbsvcs/Event/Event_Channel.cpp:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.h:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.i:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
        * orbsvcs/tests/EC_Mcast/sample.cfg:
        * orbsvcs/tests/EC_Mcast/README:
          New implementation of the EC_Mcast test, the test can now handle
          multiple processes, each process joins several multicast groups
          and push events to a (potentially different) set of multicast
          groups.  Since the configuration is more complicated a sample
          file is included.
          The test is prepared to support several interesting features,
          such as:
            + Dynamic changes in the multicast group joined.
            + Handle OS limitations wrt the maximum number of mcast groups
              per socket.
            + Support different mappings for the type->mcast group
              relation (currently the event type *is* the multicast
              group).
          The current implementation also offers the initial interfaces to
          observe changes in the subcription and/or publication list of a
          *remote* event channel, this will enable the automation and
          optimization of the local publication list (there is no sense in
          sending an event if nobody is currently interested).

        * orbsvcs/orbsvcs/Event_Utilities.cpp:
        * orbsvcs/orbsvcs/Event_Utilities.i:
        * orbsvcs/orbsvcs/Event/Dispatching_Modules.h:
        * orbsvcs/orbsvcs/Event/Dispatching_Modules.i:
        * orbsvcs/orbsvcs/RtecEventComm.idl:
        * orbsvcs/orbsvcs/Event/EC_Gateway.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway.cpp:
        * orbsvcs/orbsvcs/Event/Event_Channel.h:
        * orbsvcs/orbsvcs/Event/Event_Channel.i:
        * orbsvcs/orbsvcs/Event/Event_Channel.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Supplier.cpp:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Consumer.cpp:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.cpp:
        * orbsvcs/tests/Event_Latency/Event_Latency.cpp:
        * orbsvcs/tests/Simulator/Event_Supplier/DOVE_Supplier.cpp:
          Added a new IDL structure to represent the Event Header, this
          will let us factor out the minimum information needed to
          transmit QoS and subscription/publication info.
          I also normalized some of the field names in the RtecEventComm
          structures.

Fri Sep  4 16:22:17 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/Globals.{h,cpp}: Added macro VX_VME_INIT
          for the VME initialization code in VXWORKS. Added a
          MT_priority class that is used by both the client and server
          side for determining the thread priorities.

        * tests/Cubit/TAO/MT_Cubit/server.{h,cpp}: cleaned up the #ifdefs
          using the new ACE_DEBUG with %A for ACE_timer_t and other macros.
          Thanx to Nanbor for implementing the %A option in ACE_DEBUG.

        * tests/Cubit/TAO/MT_Cubit/client.{h,cpp}: Modularized the code.
          Defining a Client_i helper class. Moved all the static functions to
          this class. Clenaed up the #ifdefs using the new ACE_DEBUG support.

        * tests/Cubit/TAO/MT_Cubit/Task_Client.{h,cpp}: cleaned the #ifdefs.

        * tests/Cubit/TAO/MT_Cubit/Timer.{h,cpp}: Changed the double to
          ACE_timer_t. Defines a  class MT_Cubit_Timer which uses pccTimer
          for  CHORUS and ACE_High_Res_Timer for other platforms.

Fri Sep  4 14:20:28 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * tao/Any.cpp:
          Slight modification to the constructor-from-cdr. Since this
          constructor sets any_owns_data, the value_ should be set to
          0, because the destructor deals only with the cdr for anys
          that own their data.

Fri Sep 04 14:10:28 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/Cubit/TAO/IDL_Cubit/Cubit_Client.cpp (run): Re-enable
          cube_rti_data test.

Fri Sep  4 14:35:58 1998  Aniruddha Gokhale  <gokhale@cs.wustl.edu>

        * tao/IIOP_Interpreter.{h, cpp}:

          Added a new static method called
          "calc_union_attr_is_var_sized_member".

          It turns out that since variable sized data typed become pointer
          variables inside the C++ mapping of union members, the "size"
          calculation in IIOP_Interpreter.cpp (calc_union_attributes) was
          completely wrong. In addition, it did not take into the account
          the size of the vtable. This is necessary since our C++ union
          mapping is a class that derives from the TAO_Base_Union class.

          This code has been verified to work on the Cubit example for the
          RTI test which was previously failing.

Fri Sep 04 13:25:58 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/Scheduling_Service/Makefile,
          orbsvcs/Event_Service/Makefile,
          orbsvcs/Dump_Schedule/Makefile,
          orbsvcs/LifeCycle_Service/Makefile,
          orbsvcs/Logging_Service/Makefile,
          orbsvcs/tests/Logger/Makefile,
          orbsvcs/tests/Event_Latency/Makefile,
          orbsvcs/tests/EC_Multiple/Makefile,
          orbsvcs/tests/EC_Throughput/Makefile,
          orbsvcs/tests/EC_Mcast/Makefile,
          orbsvcs/tests/EC_Custom_Marshal/Makefile,
          tests/Quoter/Makefile:
          removed VBIN definition, now that it's in wrapper_macros.GNU.

Fri Sep  4 12:54:58 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/Naming_Service/Naming_Service.cpp: Parse-args was not
          recognizing the "-d" argument to set the debug level. Fixed.

Fri Sep 04 02:37:05 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/POA/Explicit_Activation/:
          tests/POA/Generic_Servant/:

          Added the ability to read and write IORs from files.  Also,
          added a perl script.

Fri Sep 04 02:17:43 1998  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.2.9 released.

Thu Sep 03 23:06:35 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/Param_Test/driver.{h,cpp}: Stop instantiating Driver class
          as a singleton object.  Instead, put it in main's local stack.
          This was causing trouble because we used the singleton Driver to
          initialize the ORB, which in turn, instantiated TAO_ORB_Core by
          creating a TSS_Singleton object of it and then initialized it.
          What this implies is TAO_ORB_Core would get removed from
          Object_Manager's cleanup stack before Driver.  Since Driver
          contains an ORB_var, it needs to access TAO_ORB_Core when
          removing the ORB.  The result is ORB destructor ended up using
          an newly created but uninitialized ORB_Core to perform the
          shutdown.

Thu Sep  3 22:52:39 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * utils/catior/catior.cpp:
          Fixed off-by-one problem in the substring extraction.

Thu Sep  3 20:49:13 1998  Sergio Flores  <sergio@tango.cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.cpp: Removed some warnings about
        signed with unsigned comparisons.

Thu Sep 03 18:57:47 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/start_services: removed -ORBobjrefstyle url
          from Naming_Service startup.  It caused interoperability problems
          with VisiBroker java when running Simulator/DOVEBrowser.

        * tests/POA/TIE/Makefile: fixed g++ exclusion to work in
          with nested makes, by specifying all, clean, and realclean
          targets.  Also, enhanced the g++ check so that it allows
          egcs (and g++ 2.8.x) to build this module.

Thu Sep  3 16:22:54 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/driver/drv_args.cpp: Fixed the case where ACE_ROOT is not
        set. OpLookup strategy changes over to Dynamic Hash.

Thu Sep  3 15:52:33 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * orbsvcs/orbsvcs/AV/Endpoint_Strategy.cpp: Fixed g++ warnings.

Thu Sep 03 14:00:47 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/MT_Cubit.dsw:
        * tests/Cubit/TAO/MT_Cubit/{client,server}.dsp: Updated project
          settings.

        * tests/Cubit/TAO/MT_Cubit/server.cpp: Removed an unused local
          variable.

Thu Sep  3 13:36:36 1998  Sergio Flores  <sergio@tango.cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/Timer.cpp: Fixed syntax errors that
        appeared with VxWorks.

        * tests/Cubit/TAO/MT_Cubit/server.cpp:
        * tests/Cubit/TAO/MT_Cubit/Task_Client.cpp: Fixed some warnings
        and cleaned up some code.

Thu Sep  3 13:22:08 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.cpp:
        * tests/Cubit/TAO/MT_Cubit/Task_Client.cpp:
          Split the huge functions into smaller functions.

        * tests/Cubit/TAO/MT_Cubit/Task_Client.h:
                Added MACROS for quantify calls.

        * tests/Cubit/TAO/MT_Cubit/Timer.{h,cpp}:
                A class that abstracts the timer over pcctimer for Chorus
          platforms and uses ACE_Timer for other platforms.

        * tests/Cubit/TAO/MT_Cubit/Cubit_i.{h,cpp}:
                Added an ORB member so that shutdown is done using that
          instead of TAO_ORB_Core_instance.

Thu Sep 03 10:36:07 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/EC_Mcast/Makefile: added VBIN definition so that
          the Makefile will work again.  This was supposed to have been
          done in my Tue Aug 25 11:11:54 1998 change, but wasn't.  Thanks
          to Carlos for finding it.

Wed Sep  2 22:50:30 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * utils/catior/catior.cpp (catpoop): Fixed an unused variable
          warning.  Thanks to David Levine for reporting this.

Wed Sep 02 21:12:40 1998  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.2.8 released.

Wed Sep  2 19:24:24 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Sequence.i:
        * tao/Sequence.cpp:
          Another method made inline (::replace()) to workaround a bug in
          Sun/CC on Solaris 2.6. Thanks to Don Davis
          <ded@heart.jhuapl.edu> for reporting this and providing a fix!

        * tao/POA.cpp:
          Added some missing template instantiations.

Wed Sep  2 18:59:22 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * TAO_IDL/driver/drv_args.cpp : Updated the print statements to
        include  the recent command line options.

Wed Sep  2 18:16:32 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/Trading_Service/Trading_Service.cpp:
          Removed some TAO_HAS_OBJECT_IN_STRUCT_MARSHAL_BUG uses.

Wed Sep 02 16:59:56 1998  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.2.7 released.

Wed Sep  2 14:48:11 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * orbsvcs/orbsvcs/Log/Logger_i.cpp (make_logger): Removed all
          vestiges of the exception specification.

        * TAO/utils/catior: Integrated Jeff Hopper's new version of his
          "catior" program, which now parses Orbix "POOP" object
          references.  Made a few minor syntax changes, as well.

        * TAO/orbsvcs/Logger.idl,
          TAO/orbsvcs/orbsvcs/Log/Logger_i: Added some minor fixes to get
          rid of the special-purpose exception and use system exceptions.

Wed Sep  2 14:30:46 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tests/Param_Test/Param_Test.dsw:
        * tests/Param_Test/client.dsp:
        * tests/Param_Test/server.dsp:
          Updated to use new filenames for TAO_IDL generated files
          and also updated to MSVC 6.

        * tests/Param_Test/ub_objref_seq.cpp:
          Fixed warnings on MSVC 6 -- an extra semicolon after a
          TAO_CATCHANY and a return 0 needed at the end of a method.

Wed Sep  2 14:28:54 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Sequence.i:
          The replace() method that use a Message_Block was setting the
          length of the sequence but not of the message block, this was at
          the very least confusing. Thanks to Dave Meyer
          <dmeyer@std.saic.com> for reporting this problem and testing the
          fix.

Wed Sep  2 11:38:35 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/tests/Logger/Logging_Test_i.cpp: Now checks for the
          new exceptions thrown by make_logger

        * orbsvcs/orbsvcs/Log/Logger_i.{h,cpp}:
          Logger_Factory_i::make_logger now checks the results of binding
          entries into the hash_map_manager and throws exceptions if that
          or new fails. Added new macros to Logger_i.h for eventual
          incorporation into OS.h.

Wed Sep  2 09:37:42 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Environment.cpp:
          The exception() modifier was trying to _raise() the new
          exception even if it was 0. Thanks to J. Russell Noseworthy
          <rnosewor@objectsciences.com> for reporting this problem.

Tue Sep 01 21:45:05 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/EC_Multiple: added VBIN so that the executable
          will be built when only shared libs are built.

        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp: replaced a bunch of
          static casts with ACE_U64_TO_U32 so that it will compile on
          platforms that don't have native 64-bit ints.

Tue Sep  1 19:57:46 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tests/Simple/Time/Time.dsw:
        * tests/Simple/Time/client.dsp:
        * tests/Simple/Time/client_static.dsp:
        * tests/Simple/Time/server.dsp:
        * tests/Simple/Time/server_static.dsp:
        * tests/Cubit/TAO/IDL_Cubit/IDL_Cubit.dsw:
        * tests/Cubit/TAO/IDL_Cubit/client.dsp:
        * tests/Cubit/TAO/IDL_Cubit/server.dsp:
        * tests/Cubit/TAO/IDL_Cubit/collocation_test.dsp:
          Updated for MSVC 6.

        * tests/Cubit/TAO/IDL_Cubit/run_test.pl:
          Fixed a problem on NT with ACE_ROOT and updated it to use all
          the stuff I learned about Perl since the last time I was here.

Tue Sep 01 19:28:28 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/POA/Generic_Servant/client.cpp and
          tests/POA/TIE/client.cpp (main): Fixed incorrect test condition.

Tue Sep  1 19:06:44 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * TAO_IDL/util/utl_global.cpp : Fixed "strdup + delete"
        bug!!! Replaced the strdup's with ACE_OS::strnew. Thanks to Darrell
        for pointing this out.

Tue Sep  1 16:29:30 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Exception.h:
        * tao/Exception.cpp:
          CORBA_SystemException shoul be a concrete class.  Thanks to Tom
          Dobridge <dobridge@persimmon.com> for pointing this out.

        * tao/default_server.h:
        * tao/default_server.cpp:
          Added new default creation strategy for Server side connection
          handlers. This reduces the number of calls to
          ORB_Core_instance() a notch.

        * tao/Makefile:
          Updated dependencies.

Tue Sep  1 10:43:24 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * utils/catior/catior.cpp: Replaced the use of
          CORBA::B_{TRUE,FALSE} with 1 and 0 to be compatible with the
          CORBA spec.

Tue Sep  1 09:37:01 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * utils/catior/catior.cpp (main): Fixed a minor printing bug
          -- a loop wasn't breaking out when '\n' or EOF was reached...

        * utils/catior: Added several new tests for Jeff Hopper's catior
          program, as well as a new version of his program.  Thanks Jeff.

Mon Aug 31 18:08:10 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * TAO-INSTALL.html: Now mentions the perl scripts (run_test.pl)
          that we use, and the versions of perl that we work with.

Mon Aug 31 13:44:27 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * orbsvcs/Naming_Service/Naming_Service.cpp (main): Renamed the
          class TAO_Naming_Service to be more specific...

Mon Aug 31 15:22:42 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * TAOACE.dsw:
        * TAOACE_Static.dsw:
        * tao/TAO.dsw:
        * tao/TAO.dsp:
        * tao/TAO_Static.dsp:
        * TAO_IDL/tao_idl.dsw:
        * TAO_IDL/tao_idl.dsp:
        * TAO_IDL/tao_idl_static.dsp:
          Updated for MSVC 6.

Mon Aug 31 07:50:23 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Scheduler_Factory.cpp (dump_schedule):
          ooops, the 64-to-32 bit cast had to be const.

Sun Aug 30 22:17:06 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Scheduler_Factory.cpp (dump_schedule):
          orbsvcs/orbsvcs/Sched/DynSched.cpp:
          explicitly convert 64 bit RtecScheduler::Times to
          32 bits with ACE_U64_TO_U32 in ACE_OS::fprintf () call.

Sun Aug 30 15:11:37 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Cubit/TAO/IDL_Cubit/Makefile:
        * tests/Param_Test/Makefile:
        * tests/NestedUpcall/Reactor/Makefile:
        * tests/Simple/time/Makefile:
          Updated dependencies.

        * utils/Makefile:
          Fixed the directory name for IorParser (again).

Sun Aug 30 01:57:51 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/GIOP.cpp (recv_request): Fixed type mismatch.

Sat Aug 29 23:23:32 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/GIOP.cpp (close_connection): We realized that use of
          CORBA::B_TRUE and CORBA::B_FALSE is not standard.  Therefore, we
          have deprecated CORBA::B_TRUE and CORBA::B_FALSE.  The
          replacements are 1 and 0 respectively.  This script will help in
          the conversion:

          http://www.cs.wustl.edu/~schmidt/ACE_wrappers/bin/corba-boolean.perl

Sat Aug 29 20:58:08 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Connect.h:
        * tao/Connect.i:
        * tao/Connect.cpp:
        * tao/GIOP.h:
        * tao/GIOP.cpp:
        * tao/Invocation.h:
        * tao/Invocation.cpp:
        * tao/Server_Request.h:
        * tao/Server_Request.i:
        * tao/Server_Request.cpp:
        * tao/params.h:
        * tao/params.i:
        * tao/params.cpp:
          Added support for a modified version of IIOP that tries to
          minimize overhead in the case of a totally homogeneous system,
          for instance:
          + It removes the GIOP magic number
          + It does not include a protocol version on the header.
          + It does not include a byte order on the header.
          + It does not include a Service Context or a Principal on the
            Requests.
          This protocol can be activated by using the -ORBiioplite
          option.
          Another round trying to minimize calls to the
          ORB_Core_instance() function; in general we try to keep the
          pointer during the upcalls and downcalls.

        * tests/Cubit/TAO/IDL_Cubit/Cubit_Client.cpp:
          Run the onewau test at the end, otherwise it fills up the pipe
          to the server, and the next test gives bad results.

        * orbsvcs/Dump_Schedule/Dump_Schedule.cpp:
          Added option to let the user pick the scheduler. Thanks to Dave
          Meyer <dmeyer@std.saic.com> for giving us this patch.

Sat Aug 29 20:29:53 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/ORB_Core.cpp (TAO_Resource_Factory): Changed
          use_lock_freed_reactor_ and its access function to
          reactor_lock_.  Also declare new enum TAO_NULL_LOCK and
          TAO_TOKEN to specify the type of lock to use with
          Select_Reactor.

Sat Aug 29 18:56:06 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/POA/TIE: Change Foo to A, B, and C.  Hopefully g++ can
          gork this.

Sat Aug 29 12:40:56 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/POA/TIE/client.cpp:
        * tests/POA/TIE/server.cpp:
          Added missing template instantiations.

        * tests/POA/Forwarding/MyFooServant.cpp:
          A call to is_nil() using a T_var was missing the .in ()
          invocation.

        * tests/POA/Makefile:
          Fixed order.  Thanks to David for reporting this problems.

Sat Aug 29 09:15:02 1998  David L. Levine  <levine@cs.wustl.edu>

        * utils/catior/catior.cpp (iiop_string_to_object): commented out
          because it's currently unused.  (main): commented out unused local
          "orb_ptr".

        * TAO_IDL/be/be_interface.cpp (cleanup_gperf_temp_file):
          don't delete ss on linux.  It causes a core dump on
          RedHat 5.1/Intel.  Thanks to James CE Johnson <jcej@lads.com>
          for reporting this.  Also, at James' suggestion, removed
          check for ss being 0 before deleting it.

Fri Aug 28 19:43:36 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/orbconf.h (TAO_DEFAULT_RESOURCE_FACTORY_ARGS): Added
          "-ORBreactorlock null" as default resource factory args on
          platforms that require "fake_service_entries."  Notice that this
          options should not be used thread-per-connection concurrency
          strategy.

Fri Aug 28 17:57:34 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Constraint_Interpreter.h:
          Moved some declarations out of the private section of
          TAO_Preference_Interpreter because that made some IRIX compilers
          really mad. Thanks to Margherita Vittone Wiersma
          <vittone@fndaub.fnal.gov> for reporting this problem.

Fri Aug 28 13:49:10 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * rules.tao.GNU (TAO_IDL): Added suffixes Ser.* and Cli.* in
        addition to the S.* and C.* to the set of the IDL generated
        files.

Fri Aug 28 12:25:36 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * utils/IorParser/ior-handler.[h,cpp]: Fixed some struct/class
          discrepancies and returning refs to a local variable error.

        * utils/IorParser/IOR_Parser.[dsp,dsw]: Added these submitted
          project files from Lothar Werzinger <lwerzinger@krones.de>.
          (with a few small modifications to make them ACE/TAO-like)

Fri Aug 28 11:19:04 1998  David L. Levine  <levine@cs.wustl.edu>

        * tao/Sequence.{i,cpp} (TAO_String_Manager::out):
          uninlined to avoid use before definition.  It calls
          CORBA::string_free (), which is defined in tao/ORB.i.
          That file is included after Sequence.i:

          tao/corba.h
          [...]
           tao/ORB.h
            tao/corba.h
            tao/Sequence.h
             tao/Sequence.i        <==== called CORBA::string_free ()
            tao/Sequence_T.h
             tao/Sequence_T.i
             tao/Sequence_T.cpp
              tao/Sequence_T.h
            tao/Object_KeyC.h
             tao/Object_KeyC.i
            tao/Union.h
            tao/ORB.i              <==== CORBA::string_free () defined here

          Thanks to Carlos for suggesting the fix.

        * utils/Ior-Parser/ior-handler.cpp (interpretIor): removed
          unused local "nullOctet".

        * tests/POA/Forwarding/Servant_Locator.cpp (MyFooServantLocator ctor):
          reordered initializers to match declaration order.

Fri Aug 28 02:45:36 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/POA/TIE/client.cpp (run_test): Fixed the use of explicit
          template functions so that this test can work with the CC
          compiler.

Thu Aug 27 21:48:48 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * docs/Options.html:
        * tao/ORB_Core.cpp (parse_args): Renamed the option
          -ORBlockfreedreactor of Resource_Factory to -ORBreactorlock.
          Valid options become "null"/"token".  Default is "token".

Thu Aug 27 20:09:41 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/IIOP_Interpreter.h:
          The TAO_attribute_calculator typedef had a default value. This
          is illegal. Thanks to John Mulhern for pointing this out.

Thu Aug 27 20:01:55 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * utils/IOR-parser: Added a number of enhancements from Priya
          Narasimhan <priya@lambda.ece.ucsb.edu> and cleaned up the code a
          bit more to make it more ACE/TAO-like!

Thu Aug 27 17:52:38 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be/be_visitor_operation/tie_si.cpp:
        * TAO_IDL/be/be_visitor_interface/tie_si.cpp:
        * TAO_IDL/be/be_visitor_operation/arglist.cpp:
          The destructor for the _tie classes was trying to release an
          object of type POA_var; there is no need to do that.

Thu Aug 27 17:20:07 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * tests/Param_Test/:
                Modified the Makefiles and the following source files to
                have the IDL-compiler-generated  stubs to have "Ser.h" &
                "Ser.cpp" suffixes and the skeletons to have "Cli.h" &
                "Cli.cpp". Just an example to show the newly added IDL
                compiler options for optional file name endings.

        Modified Files:
        Makefile any.h bd_long_seq.h bd_short_seq.h bd_str_seq.h
        bd_string.h bd_struct_seq.h client.dsp client.h except.h
        fixed_array.h fixed_struct.h helper.h nested_struct.h objref.h
        objref_struct.h param_test_i.h server.dsp short.h tmplinst.cpp
        typecode.h ub_any_seq.h ub_long_seq.h ub_objref_seq.h
        ub_short_seq.h ub_str_seq.h ub_string.h ub_struct_seq.h
        ulonglong.h var_array.h var_struct.h

Thu Aug 27 17:20:00 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/POA/Makefile (DIRS): Added TIE and Forwarding to the list
          of directories that are built and tested.

Thu Aug 27 15:41:44 1998  Sergio Flores  <sergio@tango.cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.cpp:
        * tests/Cubit/TAO/MT_Cubit/Task_Client.cpp:
        * tests/Cubit/TAO/MT_Cubit/client.cpp: Deleted some unnecessary
        ACE_DEBUG statements.  Cleaned up code.

Thu Aug 27 12:38:20 1998  Carlos O'Ryan  <coryan@swarm.cs.wustl.edu>

        * TAO_IDL/be/be_visitor_sequence/cdr_op_cs.cpp:
          Fixed some problems in the generated code; the counter was
          compared to 0 and not the sequence length.

        * TAO_IDL/be/*/*.cpp:
          Removed tons of warnings due to unused variables.

Thu Aug 27 12:23:37 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * Makefile:
        * utils/Makefile:
          Added a Makefile for the utils directory.

        * utils/catior/catior.cpp:
          Fixed some problems with EGCS and the new scope rules in for()
          loops.

        * utils/IorParser/ior-handler.h:
        * utils/IorParser/ior-handler.cpp:
          Removed a hardcoded ASCII code (yikes!) and moved some buffers
          to the class, so we don't return local variables (re-yikes!),
          using a fixed size buffer looks like a bad idea also; but I'm
          not going there yet.

        * tao/Environment.cpp:
          Fixed the initialization for the first default environment.

Thu Aug 27 11:55:29 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * utils/IOR-parser/ior-handler.cpp (hexChar2int): Added a return 0
          to make the compiler happy.  Thanks to Lothar Werzinger
          <lwerzinger@krones.de> for reporting this.

Thu Aug 27 09:55:31 1998  David L. Levine  <levine@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/Task_Client.{h,cpp}: changed argc_ from
          int to u_int so to avoid g++ compiler warning.

        * tests/Cubit/TAO/MT_Cubit/client.cpp: added
          ACE_Singleton<Globals,ACE_Null_Mutex> instantiation.

        * orbsvcs/tests/Simulator/DOVEBrowser/Makefile:
          change all _long to long in Visibroker 3.2 idl2java output.
          _long doesn't seem to be defined anywhere, so compilation
          of java output with it fails.

        * orbsvcs/tests/Simulator/DOVEBrowser/PushConsumer.java:
          added required fields to EventData constructor call.

Thu Aug 27 07:59:18 1998  Aniruddha Gokhale  <gokhale@cs.wustl.edu>

        * TAO_IDL/Makefile:

          Added dependencies and targets to build the C++ keywords lookup
          table using GPERF generated perfect hash functions.

          Also, redid "make depend".

        * TAO_IDL/be/be_array.cpp:
          TAO_IDL/be/be_interface.cpp:
          TAO_IDL/be/be_interface_fwd.cpp:
          TAO_IDL/be/be_structure.cpp:
          TAO_IDL/be/be_union.cpp:
          TAO_IDL/be_visitor_sequence/sequence_ch.cpp:
          TAO_IDL/be_visitor_sequence/sequence_ci.cpp:

          The _out class' copy constructor and assignment operator (from a
          _out) now use the "const" parameter. The CORBA v2.2 spec has a
          flaw in which it does not specify the "const"ness. Without the
          "const" keyword, however, we were getting warnings/errors from
          the C++  compilers because they were trying to create
          temporaries. To circumvent these warnings/errors, we were until
          now instantiating variables of the _out class. According to the
          spec, however, the _out types are to be used only in the
          signatures. The above fix will make everything CORBA
          compliant. The spec will also be fixed regarding the
          "const" keyword.

          In addition, as per Carlos's instructions, since the private
          data member (ptr_) is not a const, we have to use the
          "ACE_const_cast" macro to cast away the "const"ness.

        * The first step towards supporting compiled marshaling stubs and
          skeletons. At this time, we generate the CDR << and >> operators
          for different IDL data types. Unions still need to be
          handled. They do not do anything at time.

          *NOTE* CDR operators are defined in the global scope just as the
          Any <<=, >>= operators are. At this time, both the Any operators
          as well as the CDR operators are defined. As a policy decision,
          this is going to be the default case. Users who choose to use the
          compiled marshaling approach and do not want the excess code for
          the Any operators and the TypeCodes will be required to use a
          "disable" flag. This is still TO-DO.

          Affected files and new entries are shown below:

          TAO_IDL/be_include/be_decl.h
          TAO_IDL/be/be_decl.cpp:

            Accesors and mutators that check if the CDR <<, >> operators
            for a given IDL type have been generated or not. Once
            generated, the mutator sets a boolean value to TRUE and the
            accessor prevents multiple declaration/definition.

          TAO_IDL/be_include/be_codegen.h
          TAO_IDL/be/be_codegen.cpp:

            Added a number of code generation states for the generation of
            CDR operators for various types.

            In addition, we define a new enumeration indicating the sub
            state during the CDR operator code generation. These sub
            states are necessary to prevent explosion of visitors. For
            example, consider generation of the CDR operators for
            interfaces or structures. The three possible substates are (1)
            generating the << (output) operator, (2) generating the >>
            (input) operators, and (3) generating code for the elements
            defined in that scope.

          TAO_IDL/be_include/be_visitor_context.h:
          TAO_IDL/be/be_visitor_context.cpp:

            Maintain the code generation substate required for the CDR
            operators and provide accesor/mutator for it.

          TAO_IDL/be_include/be_visitor_array/{cdr_op_ch, cdr_op_cs}.h:
          TAO_IDL/be/be_visitor_array/{cdr_op_ch, cdr_op_cs}.cpp:
          TAO_IDL/be_include/be_visitor_array.h:
          TAO_IDL/be/be_visitor_array.cpp:

            New visitors for generation of CDR operators for
            arrays. Included the newly added files to the top level
            be_visitor_array.{h,cpp} files.

          TAO_IDL/be_include/be_visitor_enum/{cdr_op_ch, cdr_op_cs}.h:
          TAO_IDL/be/be_visitor_enum/{cdr_op_ch, cdr_op_cs}.cpp:
          TAO_IDL/be_include/be_visitor_enum.h:
          TAO_IDL/be/be_visitor_enum.cpp:

            New visitors for generation of CDR operators for
            enums. Included the newly added files to the top level
            be_visitor_enum.{h,cpp} files.

          TAO_IDL/be_include/be_visitor_exception/{cdr_op_ch, cdr_op_cs}.h:
          TAO_IDL/be/be_visitor_exception/{cdr_op_ch, cdr_op_cs}.cpp:
          TAO_IDL/be_include/be_visitor_exception.h:
          TAO_IDL/be/be_visitor_exception.cpp:

            New visitors for generation of CDR operators for
            exceptions. Included the newly added files to the top level
            be_visitor_exception.{h,cpp} files.

          TAO_IDL/be_visitor_exception/exception.cpp:

            In the event that we are generating code for the CDR operators
            the types defined in our scope, the appropriate visitors for
            the "field" node are grabbed here.

          TAO_IDL/be_include/be_visitor_field/{cdr_op_ch, cdr_op_cs}.h:
          TAO_IDL/be/be_visitor_field/{cdr_op_ch, cdr_op_cs}.cpp:
          TAO_IDL/be_include/be_visitor_field.h:
          TAO_IDL/be/be_visitor_field.cpp:

            New visitors for generation of CDR operators for
            fields. Included the newly added files to the top level
            be_visitor_field.{h,cpp} files.

          TAO_IDL/be_include/be_visitor_interface/{cdr_op_ch, cdr_op_cs}.h:
          TAO_IDL/be/be_visitor_interface/{cdr_op_ch, cdr_op_cs}.cpp:
          TAO_IDL/be_include/be_visitor_interface.h:
          TAO_IDL/be/be_visitor_interface.cpp:

            New visitors for generation of CDR operators for
            Interfaces. Included the newly added files to the top level
            be_visitor_interface.{h,cpp} files.

          TAO_IDL/be_visitor_interface/interface.cpp:

            In the event that we are generating code for the CDR operators
            for the types defined in our scope, the appropriate visitors
            for the nodes in our scope are grabbed here.

          TAO_IDL/be_include/be_visitor_module/cdr_op.h:
          TAO_IDL/be/be_visitor_module/cdr_op.cpp:
          TAO_IDL/be_include/be_visitor_module.h:
          TAO_IDL/be/be_visitor_module.cpp:

            New visitors for generation of CDR operators for
            elements of the Module scope. Included the newly added files
            to the top level be_visitor_module.{h,cpp} files.

          TAO_IDL/be_visitor_module/module.cpp:

            In the event that we are generating code for the CDR operators
            for the types defined in our scope, the appropriate visitors
            for the nodes in our scope are grabbed here.

          TAO_IDL/be_include/be_visitor_root/cdr_op.h:
          TAO_IDL/be/be_visitor_root/cdr_op.cpp:
          TAO_IDL/be_include/be_visitor_root.h:
          TAO_IDL/be/be_visitor_root.cpp:

            New visitors for generation of CDR operators for
            elements of the Module scope. Included the newly added files
            to the top level be_visitor_module.{h,cpp} files.

          TAO_IDL/be_visitor_operation/arglist.cpp:

            Cosmetic changes to get the indentation right.

          TAO_IDL/be_visitor_root/root.cpp:

            In the event that we are generating code for the CDR operators
            for the types defined in our scope, the appropriate visitors
            for the nodes in our scope are grabbed here.

            In addition, we invoke generation of the CDR operators at the
            very end i.e., in the global scope, just after all the Any
            operators are generated.

          TAO_IDL/be_include/be_visitor_sequence/{cdr_op_ch, cdr_op_cs}.h:
          TAO_IDL/be/be_visitor_sequence/{cdr_op_ch, cdr_op_cs}.cpp:
          TAO_IDL/be_include/be_visitor_sequence.h:
          TAO_IDL/be/be_visitor_sequence.cpp:

            New visitors for generation of CDR operators for
            sequences. Included the newly added files to the top level
            be_visitor_sequences.{h,cpp} files. Code generated for the
            sequences of primitive types uses TAO's internal, optimized
            CDR functions.

          TAO_IDL/be/be_visitor_sequence/gen_object_manager_ch.cpp:

            Generate the in (), inout (), out (), and _retn () methods for
            the object manager class. These are required in the CDR
            operators for sequences of object references.

          TAO_IDL/be_include/be_visitor_structure/{cdr_op_ch, cdr_op_cs}.h:
          TAO_IDL/be/be_visitor_structure/{cdr_op_ch, cdr_op_cs}.cpp:
          TAO_IDL/be_include/be_visitor_structure.h:
          TAO_IDL/be/be_visitor_structure.cpp:

            New visitors for generation of CDR operators for
            structures. Included the newly added files to the top level
            be_visitor_structure.{h,cpp} files.

          TAO_IDL/be_visitor_structure/structure.cpp:

            In the event that we are generating code for the CDR operators
            for the types defined in our scope, the appropriate visitors
            for the field nodes in our scope are grabbed here.

          TAO_IDL/be_include/be_visitor_typedef/{cdr_op_ch, cdr_op_cs}.h:
          TAO_IDL/be/be_visitor_typedef/{cdr_op_ch, cdr_op_cs}.cpp:
          TAO_IDL/be_include/be_visitor_typedef.h:
          TAO_IDL/be/be_visitor_typedef.cpp:

            New visitors for generation of CDR operators for
            typedefs. Included the newly added files to the top level
            be_visitor_typedef.{h,cpp} files.

          TAO_IDL/be_include/be_visitor_union/{cdr_op_ch, cdr_op_cs}.h:
          TAO_IDL/be/be_visitor_union/{cdr_op_ch, cdr_op_cs}.cpp:
          TAO_IDL/be_include/be_visitor_union.h:
          TAO_IDL/be/be_visitor_union.cpp:

            New visitors for generation of CDR operators for
            unions. Included the newly added files to the top level
            be_visitor_union.{h,cpp} files.

          TAO_IDL/be_include/be_visitor_union_branch/{cdr_op_ch, cdr_op_cs}.h:
          TAO_IDL/be/be_visitor_union_branch/{cdr_op_ch, cdr_op_cs}.cpp:
          TAO_IDL/be_include/be_visitor_union_branch.h:
          TAO_IDL/be/be_visitor_union_branch.cpp:

            New visitors for generation of CDR operators for
            union_branchs. Included the newly added files to the top level
            be_visitor_union_branch.{h,cpp} files.

          TAO_IDL/be/be_interpretive.cpp:

            Return the appropriate visitors for the newly defined CDR
            states. *NOTE* these should really go into a "be_compiled.cpp"
            file. However, all the elegant patterns will be added in the
            next attempt.

        * TAO_IDL/fe/idl.ll:
          TAO_IDL/fe/lex.yy.cpp:
          TAO_IDL/fe/fe_lookup.cpp:
          TAO_IDL/fe/keywords.dat:
          TAO_IDL/be_include/fe_private.h:

            Added code to handle C++ keywords. We now use ACE's GPERF
            generated perfect hash functions for keyword lookup. The
            fe_private.h file defines an entry for the lookup table used
            by the lexical analyzer (scanner). When the scanner comes
            across an identifier, it first checks if this identifier is a
            C++ keyword or not. If it is, then according to the C++
            mapping, a new identifier with a _cxx_ prepended to the C++
            keyword is generated. The keywords.dat file maintains the
            GPERF input file of C++ keywords. The fe_lookup.cpp is the
            file generated by GPERF with some additional ACE-specific
            include files. This file is not to be regenerated everytime.

        * tao/CDR.{h, i}:

          Added << and >> operators for CORBA::Object, CORBA::TypeCode,
          and CORBA::Any.

        * tao/Environment.h:

          Cosmetic changes to adhere to the ACE programming style.

        * tao/Sequence.h:
          tao/Sequence.i:
          tao/Sequence_T.h:
          tao/Sequence_T.cpp:

          Added the in (), inout (), out (), and _retn () methods for the
          String and Object manager classes. These are necessary for the
          CDR operators for sequences of strings and object references.

        * tao/corba.h:

          Added new macros called TAO_THROW_ENV and TAO_THROW_ENV_RETURN
          that allow us to specify our own environment variable rather
          than getting tied to the _env variable.

          Moved the #include "singletons.h" earlier.

Thu Aug 27 01:22:53 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/POA/Explicit_Activation/alternate.conf:
        * tests/POA/Explicit_Activation/Alternate_Resource_Factory/Resource_Factory.cpp:
          tests/POA/Explicit_Activation/Alternate_Resource_Factory/Resource_Factory.h:
          tests/POA/Explicit_Activation/Alternate_Resource_Factory/Alt_Resource_Factory.h:

          Fixed Nanbor's changes.

Wed Aug 26 23:57:09 1998  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.2.6 released.

Wed Aug 26 22:29:51 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/POA/Explicit_Activation/Alternate_Resource_Factory/*:
          Renamed Alternate_Resource_Factory.* to Alt_Resource_Factory.*.

        * tao/ORB_Core.h (TAO_ORB_Core): Don't need to specify default
          parameters when declaring friend relationship.

Wed Aug 26 22:52:14 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/ORB_Core.cpp:
          The ACE_Select_Reactor_Token_T<ACE_Noop_Token> class and the
          Select_Reactor_T over this class are used even when threads are
          enabled.

Wed Aug 26 22:29:51 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/tao.dsp:
        * orbsvcs/orbsvcs/orbsvcs.dsp: Changed the destination directories
        for release libraries to the default directories.

Wed Aug 26 22:04:37 1998  David L. Levine  <levine@cs.wustl.edu>

        * TAO_IDL/driver/drv_preproc.cpp (DRV_check_for_include): declare
          for loop indices "fi" and "i" before the loops, because they are
          used after.

Wed Aug 26 19:13:49 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Sequence.i:
        * tao/Sequence.cpp:
          Moved the sequence<octet>::get_buffer method to the .i file to
          work around a Sun/C++ bug (apparently it only shows up on
          Solaris 2.6 for x86).

        * tao/CDR.cpp:
          Fixed syntax error when compiling without
          TAO_NO_COPY_OCTET_SEQUENCES.

Wed Aug 26 20:37:33 1998  Sergio Flores  <sergio@tango.cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/Cubit_Task.cpp:
        * tests/Cubit/TAO/MT_Cubit/Globals.cpp:
        * tests/Cubit/TAO/MT_Cubit/Globals.h:
        * tests/Cubit/TAO/MT_Cubit/Makefile:
        * tests/Cubit/TAO/MT_Cubit/Task_Client.cpp:
        * tests/Cubit/TAO/MT_Cubit/Task_Client.h:
        * tests/Cubit/TAO/MT_Cubit/Util_Thread.cpp:
        * tests/Cubit/TAO/MT_Cubit/client.cpp:
        * tests/Cubit/TAO/MT_Cubit/cubit_i.cpp:
        * tests/Cubit/TAO/MT_Cubit/cubit_i.h:
        * tests/Cubit/TAO/MT_Cubit/server.cpp:
        * tests/Cubit/TAO/MT_Cubit/server.h: Added code to test ORB/OS CPU
        overhead.  Separated code into different source files.  The server
        does not depend on the Task_State class anymore.

Wed Aug 26 20:13:27 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * utils/IOR-parser/*: Added this another utility (which was
          donated by Priya Narasimhan <priya@lambda.ece.ucsb.edu>) that
          takes in a stringified IOR and decodes it, printing out the
          information contained in it.

        * tao/ORB.h (CORBA): Added default arguments to the final two
          parameters of ORB_init() to simplify common use-cases.

Wed Aug 26 19:13:33 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * utils/catior/*: Added this utility (which was donated by Jeff
          Hopper <jhopper@nosc.mil>) that takes in a stringified IOR and
          decodes it, printing out the information contained in it.

Wed Aug 26 17:00:38 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * TAO_IDL/driver/drv_preproc.cpp (DRV_check_for_include): Removed
          an unused local variable <nm>.

Wed Aug 26 19:13:33 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * utils/catior/*: Added this little utility (which was donated
          by Jeff Hopper <jhopper@nosc.mil>) which will take in a
          stringified IOR and decode it, printing out the information
          contained in it.

Wed Aug 26 18:15:37 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * orbsvcs/tests/AVStreams/mpeg/: Added a README file and
          renamed the README and INSTALL files to README.OGI and
          INSTALL.OGI.

Wed Aug 26 18:07:31 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * tao/orb.h:
          Removed static declarations of _tc_struct, _tc_enum,
          _tc_sequence, _tc_array, _tc_union. These need to be
          generated by the IDL compiler.

        * any.{h,i,cpp}:
          At Carlos' recommendation, added a constructor that takes
          a typecode pointer and a CDR stream, and a CDR accessor
          method.

Wed Aug 26 17:00:38 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/Environment.cpp (CORBA_Environment): Disable updating the
          default environment for now.  (Per Carlos' instruction.)

        * tests/Cubit/TAO/IDL_Cubit/Cubit_Client.cpp (run): Don't run the
          cube_rti_data test for now.

        * tao/orbconf.h:  Defined TAO_NULL_LOCK_REACTOR as
          ACE_Select_Reactor_T<
          ACE_Select_Reactor_Token_T<ACE_Noop_Token>>.

        * tao/ORB_Core.{h,cpp}: Added a new option '-ORBlockfreereactor'
          for TAO_Resource_Factory.  Specify it to 'yes' if you don't want
          any locking with the reactor.  Use with care, e.g., if you are
          running a completely single-threaded ORB or a Reactor-per-thread
          model.

Wed Aug 26 17:05:27 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * docs/releasenotes/index.html: Updated the IDL compiler portion,
        adding a note about the recent options and the fixing of the
        relative path name problems.

Wed Aug 26 16:32:18 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/driver/drv_preproc.cpp:
                Fixed the relative #include path generation. tao_idl now
        puts header names derived from the #include'd idl files as they
        appear originally in the main idl file.
                Thanks to Carlos and Andy for their suggestions and
        guidance.

Wed Aug 26 13:12:57 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * tests/Cubit/TAO/DII_Cubit/client.cpp
        * orbsvcs/tests/Concurrency/CC_naming_service.cpp
          Added ".in ()" to orb argument for my_name_client.init.

Wed Aug 26 12:11:23 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp : Fixed the _out warnings
          given by the SunCC compiler. Thanks to David for the fix.

Mon Aug 24 15:07:29 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tests/Cubit/TAO_IDL_Cubit/{client,server}.dsp: Added RTI_IO.cpp
          into the project.

        * tests/Cubit/TAO/IDL_Cubit/RTI_IO.h: Make sure we use "ace/OS.h"
          instead of <iostream.h> directly.

Tue Aug 25 14:32:41 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Cubit/TAO/IDL_Cubit/Cubit_Client.cpp (cube_rti_data):
        * tests/Cubit/TAO/IDL_Cubit/Cubit_i.cpp (cube_rti_data):

          Fixed the use of _out variables.

        * tests/Cubit/TAO/IDL_Cubit/RTI_IO.cpp (print_RtiPacket): Changed
          code to use ACE_DEBUG instead of iostreams.

Tue Aug 25 11:11:54 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/Simulator/{Event_Supplier,DOVEMIB}/Makefile:
          cleaned up to work on both Solaris and VxWorks.

        * orbsvcs/tests/Simulator/DOVEBrowser/Makefile: added.

        * orbsvcs/tests/Simulator/Makefile,README: added DOVEBrowser
          module to top-level Simulator Makefile.

        * orbsvcs/tests/Simulator/DOVEMIB/AnyAnalyser.cpp (analyze):
          removed unused variable "size".  ghs complained that it
          was defined but not used.

        * orbsvcs/tests/Simulator/DOVEBrowser/PushConsumer.java:
          initialize ulonglong with (0) instead of (0, 0) now.

        * orbsvcs/Scheduling_Service/Makefile,
          orbsvcs/Event_Service/Makefile,
          orbsvcs/Dump_Schedule/Makefile,
          orbsvcs/LifeCycle_Service/Makefile,
          orbsvcs/Logging_Service/Makefile,
          orbsvcs/tests/Logger/Makefile,
          orbsvcs/tests/Event_Latency/Makefile,
          orbsvcs/tests/EC_Multiple/Makefile,
          orbsvcs/tests/EC_Throughput/Makefile,
          orbsvcs/tests/EC_Mcast/Makefile,
          orbsvcs/tests/EC_Custom_Marshal/Makefile,
          tests/Quoter/Makefile:
          replaced BUILD macro with VBIN, because that's what
          wrapper_macros.GNU uses.  Many of the Makefile don't
          use rules.bin.GNU (why?); it provides the same VBIN
          definition.

Tue Aug 25 11:03:12 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be/be_visitor_union/union_ci.cpp:
        * TAO_IDL/be/be_visitor_union/union_cs.cpp:
          The default constructor for unions is now generated on the .cpp
          file, this removes a warning in some versions of g++.

        * TAO_IDL/be/be_visitor_argument/arglist.cpp:
          Fixed an indentation problem in the C.cpp file.

Mon Aug 24 21:24:55 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/ORB_Core.cpp (TAO_ORB_Core): Added code to clean up memory
          pools.

Mon Aug 24 20:58:36 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tao/ORB.h: Changed CORBA_Boolean for CHORUS platforms to
          unsigned long as it was same as CORBA::ULong before.
          Thanks to David for this.

Mon Aug 24 18:14:58 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/tests/Concurrency/CC_naming_service.{h,cpp}
        * orbsvcs/tests/Concurrency/NS_client.{h,cpp}
          Added TAO_Naming_Client code. This test doesn't appear to do
          anything, however.

Mon Aug 24 15:33:25 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/Simulator/Event_Supplier/Makefile:
          fixed so that it builds the executables.

        * orbsvcs/tests/Simulator/Event_Supplier/Event_Sup.h:
          removed unnecessary (and bothersome to ghs) Event_Sup
          qualifier from get_options () declaration.

        * orbsvcs/tests/Simulator/Event_Supplier/Event_Con.cpp:
          removed unused constant "SOURCE_ID" and local variable "temp".

Mon Aug 24 10:53:17 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Cubit/TAO/IDL_Cubit/Cubit_i.cpp (cube_rti_data): Improved
          the I/O printing a bit more.

        * tests/Cubit/TAO/IDL_Cubit/RTI_IO.cpp (operator<<): Only
          print out the RTI structure of TAO_debug_level is > 0.

        * tests/Cubit/TAO/IDL_Cubit: Renamed a number of files to be more
          consistent.  Also, integrated the RTI test operation.  Thanks to
          Dave Meyer <dmeyer@std.saic.com> for contributing this.

Mon Aug 24 14:45:55 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/tests/Property/run_test.pl: Now uses uniqueid for the
          -ORBnameserviceport argument

        * orbsvcs/tests/Property/run_test.pl: New file. Script to execute
          the test (Naming_Service + server + client).

Mon Aug 24 10:31:39 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Environment.cpp:
          When the ORB is getting destroyed the Environment created with
          it should *not* pop itself from the environment stack.

        * The IDL compiler support #pragma prefix

        * TAO_IDL/be_include/be_decl.h:
        * TAO_IDL/be/be_decl.cpp:
          Added method to compute the prefix based on the pragmas
          defined.
          This is used to generate the implementation repository ID.

        * TAO_IDL/be/be_visitor_scope.cpp:
          Added some code useful for debugging pragmas.

        * TAO_IDL/Makefile:
        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/idl.yy:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/y.tab.cpp:
        * TAO_IDL/fe/y.tab.h:
        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_error.cpp:
        * TAO_IDL/util/utl_stack.cpp:
          The pragma collection was far from perfect. Once a scope was
          closed the old pragmas (defined before the scope) were lost. We
          need to restore, in the global pragma list, the list of pragmas
          as defined before entering the scope. This restore must make a
          *copy* otherwise the list of pragmas associated with the scope
          are modified.

        * orbsvcs/orbsvcs/AVStreams.idl:
        * orbsvcs/orbsvcs/CosConcurrencyControl.idl:
        * orbsvcs/orbsvcs/CosLifeCycle.idl:
        * orbsvcs/orbsvcs/CosNaming.idl:
        * orbsvcs/orbsvcs/CosPropertyService.idl:
        * orbsvcs/orbsvcs/CosTimeBase.idl:
        * orbsvcs/orbsvcs/CosTrading.idl:
          Added the #pragma "omg.org" directive.  This should allow
          TAO's services to interoperate seamlessly with other standard
          CORBA ORBs.

        * orbsvcs/Trading_Service/Makefile:
          More dependencies were outdated.

Sun Aug 23 18:37:26 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * orbsvcs: Changed all occurrences of *_Impl to *_i to be more
          consistent.  Thanks to David Levine for reporting this.

Sun Aug 23 16:17:03 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * docs/compiler.html: Updated documentation about new options.

Sun Aug 23 16:11:58 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * TAO_IDL/driver/drv_args.cpp: Commented out
        warning message on failure to execute GPERF. Added <-H perfect>
        and <-H dynamic> options.

Sun Aug 23 14:17:03 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp (connect): return
          CORBA::B_FALSE instead of -1 on failure.

Sun Aug 23 13:40:11 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Quoter/Makefile:
        * orbsvcs/LifeCycle_Service/Makefile:
          Updated dependencies.

Sun Aug 23 13:12:53 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * docs/compiler.html: Documented the recent options to the IDL
        compiler.

Sat Aug 22 23:11:41 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * tests/Cubit/TAO/IDL_Cubit/Makefile: Removed -P option from the
        Makefile. Perfect hashing (using GPERF)  is the default OpLookup
        strategy now. To force dynamic hashing use -H flag of tao_idl.

Sat Aug 22 22:51:44 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        Added the following options :
        -g : To specify the path for perfect hasing program
                (GPERF). Default is $ACE_ROOT/bin/gperf.
        -H : To force IDL compiler to use dynamic hashed operation lookup
                strategy. Default is Perfect Hashing strategy NOW.
        -o : To specify the output directory to IDL compiler as to where
                all the IDL-compiler-generated files are to be put. By
                default, all the files are put in the current directory
                from where <tao_idl> is called.

        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/be/be_codegen.cpp:
                Tries executing GPERF and checks the wait status of the
        spawned process. If <exec> on GPERF has failed, changing to
        Dynamic Hashed Operation Lookup strategy.

        * TAO_IDL/include/idl_global.h:
        * TAO_IDL/util/utl_global.cpp:
                Added addition parameter to the helper functions that
        deals with stubs and skeleton names, to give base name or the full
        path, depending on the value of the flag. This helps when we need
        full names while storing stubs and skeletons, but only the base
        names when using them with "#include"s.

Sat Aug 22 21:59:54 1998  David L. Levine  <levine@cs.wustl.edu>

        * tests/NestedUpcall/MT_Client_Test/Makefile:
          updated dependencies so that the module can build.

Sat Aug 22 16:01:07 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/Makefile:
                Changed to reflect the moving of pccTimer.cpp to
          /project/doc/mvme.

Sat Aug 22 14:47:07 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/COOL/MT_Cubit/cubit_impl.{h,cpp}:
          Renamed these files to cubit_i.{h,cpp} to be consistent.

Sat Aug 22 13:17:06 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/NestedUpcall/{MT_Client_Test,Triangle_Test},
          tests/Quoter: Changed all *_Impl to *_i to be more consistent.

        * tests/Simple/time: Added more comments and cleaned up the test
          so that it minimizes the use of dynamic memory allocation.  Also,
          renamed some files to be more consistent.

Sat Aug 22 11:01:15 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Simple/Makefile:
          Added a Makefile so making everything from the top-level would
          work.

Sat Aug 22 02:30:26 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Cubit/TAO/IDL_Cubit/client_i.cpp (read_ior): Use the
          buffer's allocator to free the memory.

        * tests/Simple/time/: Made a big pass through the example to clean
          things up, remove extra code, and rename things.

Sat Aug 22 01:41:38 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tao/TAO.dsp:
        * orbsvcs/Naming_Service/Naming_Service.dsp:
        * orbsvcs/orbsvcs/orbsvcs.dsp:
          Forgot to fix the output directories.

        * TAO_IDL/tao_idl.dsp:
        * tests/Simple/time/server.dsp:
        * tests/Simple/time/client.dsp:
          More Alpha configurations added.

Fri Aug 21 23:16:47 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tao/TAO.dsp:
        * orbsvcs/Naming_Service/Naming_Service.dsp:
        * orbsvcs/orbsvcs/orbsvcs.dsp:
          Added Alpha configurations.

Fri Aug 21 20:12:29 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Thruput/TAO/client.cpp:
        * orbsvcs/tests/Event_Latency/Event_Latency.cpp:
          Removed uneeded #include's that made some HP-UX platforms very
          angry. Thanks to John Mulhern <9107@mn3.lawson.lawson.com>
          for reporting this.

        * orbsvcs/orbsvcs/AV/AVStreams_i.h:
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
          EGCS (on Solaris) complained about a missing function, but the
          function was pure virtual! My attempts to teach it better failed
          so I resorted to define the function anyway.

Fri Aug 21 19:22:27 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_visitor_interface/collocated_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/tie_sh.cpp:
        * TAO_IDL/be/be_visitor_operation/arglist.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_sh.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_obj_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_obj_sequence_ch.cpp:
          The IDL compiler generates all the method definitions with a
          default value for the CORBA::Environment argument.

        * tao/Makefile:
        * tao/ORB_Core.h:
        * tao/ORB_Core.i:
        * tao/ORB_Core.cpp:
        * tao/Environment.h:
        * tao/Environment.i:
        * tao/Environment.cpp:
        * tao/Exception.h:
        * tao/Exception.i:
        * tao/Exception.cpp:
          The ORB provides a default for the CORBA_Environment, this
          default is stored in TSS storage. Creating a new
          CORBA_Environment pushes that default and replaces it with the
          new variable; the old default is restores when the variable is
          destroyed.
          The CORBA_Environment class was moved to its own file to avoid
          cyclic dependencies with the ORB_Core.

        * tao/Any.h:
        * tao/CDR.h:
        * tao/Connect.h:
        * tao/CurrentC.h:
        * tao/Forwarding_Servant.h:
        * tao/GIOP.h:
        * tao/IIOP_Interpreter.h:
        * tao/IIOP_ORB.h:
        * tao/IIOP_Object.h:
        * tao/Invocation.h:
        * tao/Marshal.h:
        * tao/NVList.h:
        * tao/ORB.h:
        * tao/Object.h:
        * tao/POA.h:
        * tao/POAC.h:
        * tao/POAS.h:
        * tao/POA_CORBA.h:
        * tao/PolicyC.h:
        * tao/Request.h:
        * tao/Sequence.h:
        * tao/Sequence_T.h:
        * tao/Servant_Base.h:
        * tao/Server_Request.h:
        * tao/Stub.h:
        * tao/TAO.h:
        * tao/Typecode.h:
        * tao/corba.h:
        * tao/poa_T.h:
        * tao/varout.h:
          All methods taking a CORBA_Environment as the last argument
          provide a default value for it.

        * The new files in $TAO_ROOT/tao required the regeneration of the
          dependencies for all the Makefiles.

Fri Aug 21 19:06:21 1998  Carlos O'Ryan <coryan@CHA-CHA>

        * tests/Param_Test/client.dsp:
          Added the new except.cpp and except.h

        * TAO_IDL/driver/drv_preproc.cpp:
          Check the error result when running the preprocessor.

Fri Aug 21 15:00:21 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * tao/Any.i:
          Oops, forgot to implement the from_wchar and to_wchar
          constructors (see my last ChangeLog entry).

Fri Aug 21 14:27:27 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * orbsvcs/orbsvcs/AV/Endpoint_Strategy.{h,cpp}: Added virtual
          destructors to all the classes. Thanks to Carlos for reporting
          this. Fixed a few template warnings.

Fri Aug 21 13:47:27 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * tao/Typecode.cpp:
          private_equal() was missing tk_ulonglong in the switch
          statement.

        * tao/Any.{h,i,cpp):
          Added <<= and >>= for long long, unsigned long long
          and wchar.

Fri Aug 21 11:34:42 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/IDL_Cubit/client_i.cpp (init_naming_service):
        * tests/Cubit/TAO/MT_Cubit/server.cpp (initialize_orb):
          Fixed the g++ warning for passing ORB_var to an ORB_ptr
          argument.

Fri Aug 21 00:04:11 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Exception.cpp:
        * tao/corba.h:
        * tao/orbconf.h:
          The ORB is ready to work with exceptions now. I was able to
          throw an exception on the server side, catch it, transmit it to
          the client, the client is able to build the exception with the
          right dynamic type and then raise it again. This, of course,
          using SII. We still have to do some more work to support DII.

        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp:
        * orbsvcs/orbsvcs/Concurrency/CC_Lock.cpp:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSet.cpp:
        * orbsvcs/orbsvcs/Event/Dispatching_Modules.cpp:
        * orbsvcs/orbsvcs/Event/Event_Channel.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Utils.cpp:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators.cpp:
          Fixed misuses of TAO_THROW and TAO_TRY macros that did not work
          when the code was used with exceptions enabled.

        * tests/Param_Test/except.cpp:
        * tests/Param_Test/param_test_i.cpp:
        * tests/Param_Test/param_test_i.h:
          Removed throw specs from the servant implementation, they just
          complicate things. Cleanup the client side.

Thu Aug 20 19:42:07 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Invocation.cpp:
          Fixed two warnings reported by David. They were only a problem
          when using user exceptions in DII, something that still requires
          some work.

Thu Aug 20 18:24:04 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/tests/Property/client.{h,cpp}
        * orbsvcs/tests/Property/server.cpp}
          Added Naming_Utils code to simplify Naming Service
          operations. Note that this code is shakey, and will not always
          execute properly. For better results, try executing the client
          and server with -ORBnameserviceport set

Thu Aug 20 18:18:43 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
          Modified IDL compiler to reflect the CORBA spec, which
          states that objects need only one version of the <<=
          operator.

        * tao/CurrentC.{h,cpp}:
          Modified this IDL-generated file to reflect the above
          change.

Thu Aug 20 17:36:52 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/tests/CosPropertyService/: Removed. For equivalent
          code, see orbsvcs/tests/Property

Thu Aug 20 17:21:32 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * tao/Any.{h,i,cpp}:
          Misread the CORBA spec - do not need two versions of <<=
          for objects and (presumably) other pointer types, so
          fixed earlier commit.

Thu Aug 20 16:14:54 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/tests/Sched_Conf/Sched_Conf.cpp: Added Naming_Utils code
          to simplify Naming Service operations

        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_shared/sendpt.h
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/util32.cpp
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/util.cpp
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/ordered2.cpp
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/ordered.cpp
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/motionvector.cpp
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/mono.cpp
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/mb_ordered.cpp
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/jrevdct.cpp
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/hybriderr.cpp
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/hybrid.cpp
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/gray.cpp
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/fs4.h
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/fs2fast.cpp
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/fs2.h
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/decoders.h
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/2x2.cpp
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/24bit.cpp
          Added "ace/OS.h" to fix RCSID errors

        * orbsvcs/tests/AVStreams/mpeg/source/server/server.{h,cpp}
        * orbsvcs/tests/AVStreams/mpeg/source/server/augmented_server.{h,cpp}
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/Command_Handler.{h,cpp}
          Added Naming_Utils code to simplify Naming Service
          operations. Also added "ace/OS.h" include to fix RCSID errors


Thu Aug 20 14:32:12 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * tao/Any.{h,i,cpp}:
          We now have <<= and >>= (copying and non-copying
          versions) for typecodes and CORBA objects.

Thu Aug 20 14:14:30 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp :
        * orbsvcs/orbsvcs/AV/Endpoint_Strategy.cpp :
                Fixed compile errors and warning shown by g++.

Thu Aug 20 13:58:53 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/orbconf.h:
        * tao/corba.h:
          Exception support is controlled my the TAO_USE_EXCEPTIONS
          macro.

        * tao/POAC.h:
        * tao/POAC.cpp:
        * tao/Typecode.cpp:
          Added the _raise () methods, they use a macro (TAO_RAISE) to
          actually throw the exception, the macro expands to nothing if
          exceptions are not supported.

        * tao/Exception.h:
        * tao/Exception.i:
        * tao/Exception.cpp:
          Fixed problems with operator=
          The modifier for the CORBA_Environment::exception() would raise
          the exception if native C++ exceptions are supported.

        * tao/Connect.h:
        * tao/Connect.cpp:
          Use TAO_TRY macros to catch the exceptions in the upcall, this
          is in preparation for the support for native C++ exceptions.

        * TAO_IDL/be/be_visitor_exception/exception_ch.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:
          The compiler generates the _raise() method now.

        * tao/debug.h:
        * tao/debug.cpp:
          Removed some _FAR uses.

Thu Aug 20 11:57:04 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * orbsvcs/orbsvcs/CosPropertyService.idl :
          Changed the struct PropertyException back to exception
          PropertyException as AVStreams.idl has one method raising this
          exception.

Thu Aug 20 11:41:03 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/Simulator/Event_Supplier/Makefile:
          define TAO_ROOT if not already defined.

        * orbsvcs/tests/Simulator/Event_Supplier/DOVE_Supplier.cpp
          (DOVE_Supplier): reordered initializers to match declaration order.

        * orbsvcs/tests/Simulator/Event_Supplier/Event_Sup.cpp:
          added explicit template instantiations.

        * orbsvcs/tests/Simulator/Event_Supplier/Event_Sup.cpp
          (load_schedule_data): don't dereference data->operation_name,
          because it already is a char *.

        * orbsvcs/tests/Simulator/DOVEMIB/PrintVisitor.h (~PrintVisitor):
          made destructor virtual because PrintVisitor inherits from a
          class, NodeVisitor, that has virtual functions.

        * orbsvcs/tests/Simulator/DOVEMIB/Node.cpp: added explicit
          template instantiations.

        * orbsvcs/tests/Simulator/{DOVEMIB,Event_Supplier}/Makefile,
          orbsvcs/tests/Simulator/README:
          added rules to copy .idl files, so that it doesn't have
          to be done manually.  And, added the .idl and generated
          files to the realclean target.

        * orbsvcs/tests/Simulator/Makefile: added.

        * orbsvcs/orbsvcs/RtecEventComm.idl: added an any field,
          unless TAO_LACKS_EVENT_CHANNEL_ANY is defined.  This
          field is needed by orbsvcs/tests/Simulator.  It can
          be omitted by a make flag:

        * orbsvcs/orbsvcs/Makefile: added support for tao_idl
          -DTAO_LACKS_EVENT_CHANNEL_ANY.  To enable, either uncomment
          the marked line in the Makefile, or add
          TAO_LACKS_EVENT_CHANNEL_ANY=1 to your make invocation.

Thu Aug 20 08:29:13 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be/be_visitor_operation/tie_si.cpp:
        * TAO_IDL/be/be_operation.cpp:
          The _tie classes generated improper code when one of the base
          classes was imported from another file and the number of
          arguments was non-zero.  Thanks to Christa Schwanninger
          <christa.schwanninger@mchp.siemens.de>, for patiently convincing
          me that this problem was real.

Wed Aug 19 21:03:38 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/Task_Client.{h,cpp} :
          Fixed memory leaks. Added a destructor to
          Task_State.
        * tests/Cubit/TAO/MT_Cubit/client.cpp:
          Added code to delete dynamically allocated
          memory.
        * tests/Cubit/TAO/MT_Cubit/server.cpp:
          Removed unnecessary argv code and fixed memory leaks.

Wed Aug 19 19:20:57 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:
          Fixed the declarations for <<= and >>= operators.

Wed Aug 19 19:18:11 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.{h,cpp]: Added Naming_Utils code
          to simplify Naming Service operations. Also added variable
          definitions that was affecting compilation (around line 457).

Wed Aug 19 17:54:13 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/tests/AVStreams/benchmark/client.{h,cpp}
        * orbsvcs/tests/AVStreams/benchmark/server.{h,cpp}
          Added Naming_Utils code to simplify Naming Service
          operations. Note: Due to multicast weirdness yet to be resolved
          sometimes the Naming Service will not be properly detected. I
          found that running the Naming Service and the server in the same
          window helped. I added comments to that effect.

Wed Aug 19 17:37:51 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * orbsvcs/orbsvcs/Makefile: Integrated the Audio/video streams
          stuff into the mainstream orbsvcs.

Wed Aug 19 17:32:40 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/orbsvcs/Naming/Naming_Utils.{h,cpp}: I decided not to
          add an init_old_naming () method to the Naming_Server since it
          seemed inappropriate. I added a get_context () method which is
          basically the same as "->" (they both return the
          Naming_Context_ptr) for stylistic reasons.

Wed Aug 19 16:49:21 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * tests/Cubit/TAO/DII_Cubit/client.cpp: Added Naming_Utils code to
          simplify Naming Service operations.

Wed Aug 19 16:43:36 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * Param_Test/objref.{h,cpp}:
          Fixed the DII version of the objref test. They should all
          work now.

Wed Aug 19 16:38:37 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * orbsvcs/orbsvcs/CosPropertyService.idl:
                Changed <exception PropertyException> to <struct
                PropertyException>.

Wed Aug 19 15:25:07 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * $ACE_wrappers/TAO/orbsvcs/tests/CosPropertyService/client.cpp:
                Fixed the SunCC warnings.

Wed Aug 19 11:48:57 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * tests/Cubit/TAO/IDL_Cubit/README: Removed the note on
        IDL_Cubit_Test. It is no more there. run_test.pl does all.

Wed Aug 19 15:58:23 1998  David L. Levine  <levine@cs.wustl.edu>

        * TAO-INSTALL.html: added instructions for cross-compiled targets.

Wed Aug 19 15:18:36 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/orbsvcs/AV/Endpoint_Strategy.{h,cpp}:
          Fixed template errors that derailed compilation

        * orbsvcs/tests/Property/client.{h,cpp}:
        * tests/Cubit/TAO/MT_Cubit/Task_Client.{h,cpp}:
        * tests/Cubit/TAO/MT_client/server.{h,cpp}
        * tests/Cubit/TAO/IDL_Cubit/client_i.{h,cpp}
          Replaced old code with Naming_Utils code. Added a
          TAO_Naming_Client to the *.h, and used it in the *.cpp to
          contact the Naming Service for binds and resolves.

Wed Aug 19 15:06:59 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/ORB.h:
        * tao/Exception.h:
        * tao/Exception.cpp:
        * tao/Invocation.cpp:
          Added the new CORBA::UnknownUserException, that is used with DII
          when a user exception is raised.
          User and system exceptions are created using the right dynamic
          type.
          Minimized code size by using a factory method for the system
          exceptions in the TAO_Exceptions class.

        * tao/Typecode.h:
        * tao/Typecode.cpp:
          Completed the implementation for the Bounds and BadKind
          exceptions.

        * tests/Param_Test/Makefile:
        * tests/Param_Test/README:
        * tests/Param_Test/driver.cpp:
        * tests/Param_Test/options.cpp:
        * tests/Param_Test/options.h:
        * tests/Param_Test/param_test.idl:
        * tests/Param_Test/param_test_i.cpp:
        * tests/Param_Test/param_test_i.h:
        * tests/Param_Test/run_test.pl:
        * tests/Param_Test/tests.h:
          Added a new test for exceptions, it verifies that user
          exceptions are properly transmitted and demarshaled and that
          unexpected exceptions are converted into CORBA::UNKNOWN.

        * tests/Param_Test/any.cpp:
        * tests/Param_Test/ub_any_seq.cpp:
          The tests (specially the server side) are silent unless the
          TAO_debug_level is greater than 0.

Wed Aug 19 14:24:18 1998  David L. Levine  <levine@cs.wustl.edu>

        * TAO version 0.2.5 released.

Wed Aug 19 10:48:37 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/tests/EC_Custom_Marshal/run_test.pl:
        * orbsvcs/tests/EC_Throughput/run_test.pl:
          Fixed syntax errors, wrong paths and increased sleep time, seems
          to work now.

        * tests/Cubit/TAO/DII_Cubit/run_test.pl:
          The script was giving the wrong options to the server.

        * tests/NestedUpcall/Reactor/run_test.pl:
          Increased sleep time, simplify command line args.

Wed Aug 19 09:47:58 1998  David L. Levine  <levine@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/README: removed instructions for
          building client w/o libraries for VxWorks.  They were out-of-date,
          and too much of libACE/TAO are needed now for it to be done easily.

        * tests/Cubit/TAO/MT_Cubit/Task_Client.cpp (parse_args): check
          for success of ACE_OS::fopen () call on the IOR file.  Print
          an ACE_ERROR message and return -1 if it failed.

        * orbsvcs/tests/Sched_Conf/Sched_Conf.cpp (main): replaced {0, 0}
          initializers for Times with 0, now that CORBA::ULongLong is an
          int type.

        * orbsvcs/tests/Sched_Conf/Makefile: replaced explicit build
          rule for Sched_Conf with include of rules.bin.GNU.  There's
          no net difference on Unix, and now it builds on VxWorks.

Wed Aug 19 08:07:38 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tao/debug: Fixed a couple of uses of TAO_Export to make MSVC 6.0
          happy.  Thanks to Goran Lowkrantz
          <Goran.Lowkrantz@infologigruppen.se> for reporting this.

Tue Aug 18 23:58:05 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/ORB_Core.h (TAO_Resource_Factory): Changed this class so
          that most of the methods are virtual and the private section is
          protected.  This makes it easier for users to inherit and extend
          this class.

Tue Aug 18 19:14:27 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * tests/Cubit/TAO/DII_Cubit/clinet.cpp:
          Had an incorrect "owns-data" boolean arg in all the cubit
          test request constructions.

Tue Aug 18 17:54:16 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Naming/Naming_Utils.cpp (init): Fixed incorrect
          assignment.

        * tests/Cubit/TAO/IDL_Cubit/server.cpp (main): Added print
          statements for initialization errors.

Tue Aug 18 16:54:24 1998  David L. Levine  <levine@cs.wustl.edu>

        * TAO version 0.2.4 released.

Tue Aug 18 15:43:16 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * Param_Test/ub_objref_seq.cpp:
        * Param_Test/client.dsp:
        * Param_Test/README:
          DII test now works with objref sequences. Also changed client
          file to reflect that longlong.cpp was changed to ulonglong.cpp.
          Updated README file.

Tue Aug 18 15:23:21 1998  Steve Huston  <shuston@riverace.com>

        * tao/Any.cpp: Use operator delete directly, rather than delete, to
          free un-typed memory.  Thanks to John Mulhern for this fix.

Tue Aug 18 09:39:50 1998  David L. Levine  <levine@cs.wustl.edu>

        * tests/Param_Test/Makefile,driver.cpp,longlong.{h,cpp},
          options.{h,cpp},param_test.idl,param_test_i.{h,cpp},
          run_test.pl,tests.h,ulonglong.{h,cpp}: replaced
          long long with unsigned long long, so that the test
          builds and runs on platforms that don't have a native
          64-bit int type.

Mon Aug 17 22:01:05 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/fe/lex.yy.cpp:
          Removed unwanted #includes that produced warnings in some
          platforms; thanks to David Levine for catching this one.

        * TAO_IDL/Makefile:
          Yet another RCS id that was not properly protected, I also need
          to thank David for this report.

Mon Aug 17 17:16:29 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * TAO_IDL: Renamed README to README.sun and INSTALL to INSTALL.sun
          to reflect the fact that these documents are now very much out
          of date.  Thanks to Marherita Vittone <vittone@fndaub.fnal.gov>
          for reporting this.

Mon Aug 17 15:10:25 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be_include/be_visitor_context.h:
        * TAO_IDL/be/be_visitor_context.cpp:
        * TAO_IDL/be_include/be_visitor_interface/tie_si.h:
        * TAO_IDL/be_include/be_visitor_interface/tie_sh.h:
        * TAO_IDL/be/be_visitor_operation/tie_si.cpp:
        * TAO_IDL/be/be_visitor_interface/tie_si.cpp:
        * TAO_IDL/be/be_visitor_interface/tie_sh.cpp:
          The _tie classes did not override the methods of the base
          classes, thus, some _tie classes were abstract and thus
          useless.

Mon Aug 17 15:27:22 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * docs/releasenotes/ec.html:
          Updated the "Known Issues" section.

        * docs/releasenotes/trader.html:
          The problems in TAO that affected the trading server were
          solved.

Mon Aug 17 15:16:13 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * docs/releasenotes/index.html: Removed some outdated notes
        on A/V streaming service.

Mon Aug 17 11:07:09 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/tests/Concurrency/CC_command.tab.cpp.diff:
        * orbsvcs/tests/Concurrency/CC_command.tab.cpp:
          Removed unused label. Thanks to David for pointing this out.

Mon Aug 17 10:45:09 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/Trading/Makefile: removed shared_libs_only=1,
          because that's taken care of in the platform_macros.GNU file.
          This module now builds on VxWorks.

        * tests/Cubit/TAO/IDL_Cubit/README: removed instructions for
          building client w/o libraries for VxWorks.  They were out-of-date,
          and too much of libACE is needed now for it to be done easily.

        * orbsvcs/orbsvcs/Log/Logger_i.{h,cpp}: use ACE_Cstring instead
          of const char * for the hash_map_ EXT_ID.

Sun Aug 16 23:49:20 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * orbsvcs/tests/EC_Throughput/ECT_Consumer.dsp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.dsp:
          Updated project files.

        * orbsvcs/tests/EC_Custom_Marshal/EC_Custom_Marshal.dsw:
        * orbsvcs/tests/EC_Custom_Marshal/ECCM_Supplier.dsp:
        * orbsvcs/tests/EC_Custom_Marshal/ECCM_Consumer.dsp:
          New projects/workspace added.

Sun Aug 16 17:15:39 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Connect.h:
        * tao/Connect.cpp:
          Fixed incosistent use of response_required, sometimes it was an
          int and other it was a CORBA_Boolean. Thanks to Naga for
          reporting this problem.

Sun Aug 16 11:52:47 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Offer_Database.h:
        * orbsvcs/orbsvcs/Trader/Offer_Database.cpp:
          Fixed unproper use of private typedefs and of ACE_TYPENAME
          macro, thanks to John Mulhern <9107@mn3.lawson.lawson.com> for
          this patches.

Sun Aug 16 09:11:33 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Trader.cpp: added #include
          "Trader_Interfaces.h", for use by instantiation pragmas.

        * orbsvcs/orbsvcs/Trader/Trader.cpp: only instantiate
          ACE_Unbounded_Queue<char *>, etc., if ACE_HAS_MOSTLY_UNICODE_APIS.
          Otherwise, they're in ace/ARGV.cpp.

Sat Aug 15 12:00:15 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/varout.h:
        * tao/varout.i:
          Fixed some cast-away-const problems in the new
          TAO_Object_Field_T class.

        * orbsvcs/orbsvcs/tmplinst-orbsvcs.cpp:
          Typecodes use a TAO_Unbounded_Pseudo_Sequence, not a
          TAO_Unbounded_Object_Sequence.

Sat Aug 15 08:19:26 1998  David L. Levine  <levine@cs.wustl.edu>

        * tao/deep_free.cpp (deep_free),
          tao/decode.cpp (decode),
          tao/encode.cpp (encode):
          replaced ACE_static_cast with an ACE_reinterpret_cast/ACE_const_cast.

        * orbsvcs/tests/Trading/Offer_Exporter.cpp (export_offers_to_all):
          added a TAO_CHECK_ENV for platforms without
          TAO_HAS_OBJECT_IN_STRUCT_MARSHAL_BUG.  This avoids a warning
          about TAO_TRY_LABEL being declared but not referenced.

        * orbsvcs/tests/Trading/Offer_Exporter.cpp (export_offers_to_all):
          dereference link_info->target_reg with .in ().

        * orbsvcs/tests/Trading/Offer_Importer.cpp (perform_directed_queries):
          dereference link_info->target with .in ().

        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp,Trader_Utils.cpp:
          added a few .in () dereferences.

        * orbsvcs/tests/Trading/Makefile: added LIBS, for use when
          building libTTest.

        * orbsvcs/orbsvcs/Event_Utilities.h,Scheduler_Utilities.h,
          Time_Utilities.h,Event/EC_Gateway.h,Event/EC_Gateway_UDP.h,
          Trader/Trader.h:
          added #include "orbsvcs/orbsvcs_export.h".  Thanks to
          Joseph E. LaPrade <laprade@engw.ana.bna.boeing.com> for
          reporting this.

Fri Aug 14 22:09:41 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/Logger/Logging_Test_i.cpp (init_naming_service):
          dereferenced orb_ with .in () to please g++.

        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp (run):
          dereferenced local_ec with .in () to please g++.
          (shutdown): added ACE_UNUSED_ARG (_env).

Fri Aug 14 20:13:28 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/CDR.h:
        * tao/GIOP.h:
        * tao/GIOP.cpp:
        * tao/corba.h:
        * tao/ORB.cpp:
        * tao/Principal.h:
        * tao/Principal.cpp:
          The operator<< and operator>> for marshaling and demarhaling
          return a CORBA_Boolean, this makes the detection of errors
          faster that returning a TAO_OutputCDR& or TAO_InputCDR&.

        * orbsvcs/tests/EC_Custom_Marshal/ECM_Data.h:
        * orbsvcs/tests/EC_Custom_Marshal/ECM_Data.cpp:
          The custom marshalling methods follow the same protocol as the
          (proposed) compiled marshalling ones.

Fri Aug 14 14:44:49 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/IIOP_Interpreter.cpp:
        * tao/deep_free.cpp:
        * tao/encode.cpp:
        * tao/decode.cpp:
          Completed support for object references inside structures.

        * tao/Object.h:
        * tao/Object.i:
        * tao/Object.cpp:
        * tao/varout.h:
        * tao/varout.i:
        * tao/varout.cpp:
          Added a new class to represent an object reference when
          contained inside a structure, it is similar to a T_var class

        * tao/Sequence.h:
        * tao/Sequence.i:
        * tao/Sequence.cpp:
        * tao/Sequence_T.h:
        * tao/Sequence_T.i:
        * tao/Sequence_T.cpp:
          Sequences contain new methods (_upcast() and _downcast()) that
          help in the correct marshaling and demarshaling of sequences of
          object references.
          New parametric classes were added to support sequences of
          pseudo-objects.


        * TAO_IDL/be_include/be_sequence.h:
        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
          Added support for the new TAO_Unbounded_Pseudo_Sequence<T> used
          for pseudo-objects.

        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_obj_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_obj_sequence_ch.cpp:
          Generate the new _upcast() and _downcast() methods for sequences
          of objects.

        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
          Generate the template instantiation for the
          TAO_Object_Field_T<T> class.

        * TAO_IDL/be/be_visitor_field/field_ch.cpp:
          Object references in structures are defined using a
          TAO_Object_Field_T<T> object.

        * orbsvcs/orbsvcs/CosTrading.idl:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.cpp:
          The ORB supports object rereferences inside structures.

        * orbsvcs/orbsvcs/CosPropertyService.idl:
          Cosmetic changes.

        * tests/Param_Test/Makefile:
        * tests/Param_Test/README:
        * tests/Param_Test/run_test.pl:
        * tests/Param_Test/driver.cpp:
        * tests/Param_Test/objref_struct.cpp:
        * tests/Param_Test/objref_struct.h:
        * tests/Param_Test/options.cpp:
        * tests/Param_Test/options.h:
        * tests/Param_Test/param_test.idl:
        * tests/Param_Test/param_test_i.cpp:
        * tests/Param_Test/param_test_i.h:
        * tests/Param_Test/tests.h:
        * tests/Param_Test/ub_objref_seq.cpp:
          Cleanup the object reference sequence test and added a test for
          sequences inside structures.

Fri Aug 14 09:46:44 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Sched/DynSched.cpp (calculate_utilization_params):
          removed ACE_UINT64_DBLCAST_ADAPTER from effective_period (),
          because it's 32 bits, not 64.

        * orbsvcs/orbsvcs/Sched/SchedEntry.i (effective_execution_time):
          replaced ACE_UINT32 static cast with ACE_U64_TO_U32, so that
          it works with ACE_LACKS_LONGLONG_T.

        * orbsvcs/orbsvcs/Sched/Strategy_Scheduler.cpp:
          replaced long static casts with ACE_U64_TO_U32, so that
          they work with ACE_LACKS_LONGLONG_T.

        * tao/POA.cpp: reordered template instantiations so that they
          build with g++ 2.7.2.3, and removed some unneeded ones so that links
          succeed with ghs/VxWorks.

Fri Aug 14 09:15:51 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/CosTimeBase.idl:
          Removed outdated comment, thanks to David Levine for pointing
          this out.

Thu Aug 13 17:45:00 1998  Chris Gill  <cdgill@cs.wustl.edu>

        * orbsvcs/orbsvcs/Scheduler_Factory.cpp: changed dump_schedule
          so that if one of the arrays is length 0, 0 is output for its size
          (instead of a formula with a built-in access violation ;-)

        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp
          orbsvcs/orbsvcs/Sched/DynSched.cpp
          orbsvcs/orbsvcs/Sched/SchedEntry.{cpp, h, i}
          orbsvcs/orbsvcs/Sched/Strategy_Scheduler.{cpp, h}: fixes related to
          the new 64 bit times for NT.

        * orbsvcs/tests/Sched_Conf/Sched_Conf.cpp: expanded the test to
          16 operations, ranging across 4 rates, and 2 criticalities
          (half are still consumers, the other half suppliers)


Thu Aug 13 15:20:06 1998  David L. Levine  <levine@cs.wustl.edu>

        * tao/ORB_Core.i (hash_i): suppress the specialization with
          non-egcs g++.  Older versions of g++, such as 2.7.2.3,
          can't compile it.

        * orbsvcs/orbsvcs/Sched/Scheduler.cpp (dispatch_configuration):
          made int return type explicit.

        * orbsvcs/orbsvcs/Sched/DynSched.cpp: added
          ACE_Unbounded_Set<RtecScheduler::Config_Info> template instatiations.

        * orbsvcs/tests/EC_Throughput/ECT_Supplier.cpp (supplier_task),
          orbsvcs/tests/EC_Custom_Marshal/ECM_Supplier.cpp (supplier_task):
          cast event_count_ to CORBA::Long instead of CORBA::ULong,
          to avoid signed/unsigned comparison.

Thu Aug 13 15:16:38 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * TAOACE.dsw:  When I changed the name of TAO_IDL's project
          file, the dependencies got messed up.  Now they should be
          back to normal.

Thu Aug 13 15:03:01 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:
        * TAO_IDL/fe/lex.yy.cpp.diff:
          The scanner was looking for wchar_t and wstring_t but the IDL
          types are called wchar and wstring.
          The patch is not needed when using a modern flex, like 2.5.4
          (available in /pkg/gnu/bin/flex for the DOC group).

        * TAO_IDL/Makefile:
          Added a rule to generate (upon the user *explicit* request) the
          lex.yy.cpp file.

Thu Aug 13 09:14:12 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Param_Test/Makefile:
        * tests/Param_Test/README:
        * tests/Param_Test/driver.cpp:
        * tests/Param_Test/options.cpp:
        * tests/Param_Test/options.h:
        * tests/Param_Test/param_test.idl:
        * tests/Param_Test/param_test_i.cpp:
        * tests/Param_Test/param_test_i.h:
        * tests/Param_Test/run_test.pl:
        * tests/Param_Test/run_test.sh:
        * tests/Param_Test/tests.h:
        * tests/Param_Test/longlong.h:
        * tests/Param_Test/longlong.cpp:
          Added a new test to check if <long long> works.

        * orbsvcs/orbsvcs/CosTimeBase.idl:
        * orbsvcs/orbsvcs/Event_Service_Constants.h:
        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp:
        * orbsvcs/orbsvcs/Runtime_Scheduler.h:
        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:
        * orbsvcs/orbsvcs/Time_Utilities.cpp:
        * orbsvcs/orbsvcs/Time_Utilities.h:
        * orbsvcs/orbsvcs/Time_Utilities.i:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.h:
        * orbsvcs/orbsvcs/Sched/DynSched.cpp:
        * orbsvcs/orbsvcs/Sched/SchedEntry.cpp:
        * orbsvcs/orbsvcs/Sched/SchedEntry.i:
        * orbsvcs/orbsvcs/Sched/Strategy_Scheduler.cpp:
        * orbsvcs/tests/EC_Multiple/Scheduler_Runtime1.h:
        * orbsvcs/tests/EC_Multiple/Scheduler_Runtime2.h:
        * orbsvcs/tests/EC_Multiple/Scheduler_Runtime_Dynamic.h:
        * orbsvcs/tests/Event_Latency/Event_Latency.cpp:
          Modified CosTimeBase.idl to use <long long> instead of a
          structure.

        * TAO_IDL/fe/fe_init.cpp:
          The IDL name for wchar_t is just wchar, ditto for wstring.

        * docs/releasenotes/index.html:
          Documented the fact that 64bit longs are working.

        * docs/releasenotes/ec.html:
          Fixed minor syntax error.

Wed Aug 12 14:40:00 1998  Chris Gill  <cdgill@cs.wustl.edu>

        * orbsvcs/Dump_Schedule/Dump_Schedule.cpp
          orbsvcs/tests/EC_Mcast/EC_Mcast.cpp
          orbsvcs/tests/Sched_Conf/Sched_Conf.cpp:

          Added config info to calls to compute_scheduling and dump_schedule

        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp

          Added config info to calls to compute_scheduling, dump_schedule,
          use_runtime, and ACE_Runtime_Scheduler::ACE_Runtime_Scheduler

        * orbsvcs/tests/EC_Multiple/Scheduler_Runtime1.h
          orbsvcs/tests/EC_Multiple/Scheduler_Runtime2.h
          orbsvcs/tests/EC_Multiple/Scheduler_Runtime_Dynamic.h:

          Added config info array and size value

        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:

          Added missing ;'s to output

Wed Aug 12 14:39:40 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Stub.h:
        * tao/IIOP_Object.h:
        * tao/IIOP_Object.cpp:
          The do_static_call() method uses argc/argv style to receive all
          the arguments (actually an array of void*) instead of the
          varargs style used before. This is simpler, more efficient and
          easier to debug.

        * TAO_IDL/be/be_visitor_operation/operation_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/argument.cpp:
        * TAO_IDL/be/be_visitor_argument/docall_cs.cpp:
          The generate code to use the new do_static_call() interface.

        * tao/Object.cpp:
        * tao/POAC.cpp:
        * tao/PolicyC.cpp:
          Change the calls to do_static_call()

        * orbsvcs/orbsvcs/Runtime_Scheduler.h:
        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Scheduler.h:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.h:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:
          Removed some extra "enum" keywords accompanying
          RtecScheduler::Dispatching_Type declarations that were choking
          Sun/CC.

Wed Aug 12 12:05:31 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/POA.cpp:
          Added several missing template instantiations for the new
          Hash_Map_Manager.

Wed Aug 12 12:00:00 1998  Chris Gill  <cdgill@cs.wustl.edu>

        * orbsvcs/orbsvcs/Runtime_Scheduler.{h, cpp}
          orbsvcs/orbsvcs/Sched/Scheduler.{h, cpp}
          orbsvcs/orbsvcs/Sched/DynSched.{h, cpp}
          orbsvcs/orbsvcs/Sched/Strategy_Scheduler.{h, cpp}:

          Added methods and data members to generate dispatching
          queue configuration information.

Tue Aug 11 18:24:13 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/POA.h (POA): Changed the children POA map from a Map_Manager
          to a Hash_Map_Manager.  This should improve the time it takes to
          find child POAs.

Tue Aug 11 17:27:58 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * docs/compiler.html : Updated the documentation.

Tue Aug 11 16:18:53 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * be/be_codegen.cpp
        * be/be_visitor_root/root_sh.cpp
        * driver/drv_args.cpp
        * include/idl_global.h
        * util/utl_global.cpp

        Added options to <tao_idl> to make the file names of the
        IDL-generated stubs and skeletons optional.

        The following optins have been added.

        = File name endings for all the IDL generated header files,
          stub files, skeleton files and inline files.

        = Various 'h'eader_file_name_endings.

        [-hc <Client's header file name ending>]
             Default is "C.h".
        [-hs <Server's header file name ending>]
             Default is "S.h".
        [-hT <Server's template hdr file name ending>]
             Default is "S_T.h".

        = Various 'c'lient side stub file_name_endings.

        [-cs <Client stub's file name ending>]
             Default is "C.cpp".
        [-ci <Client inline file name ending>]
             Default is "C.i".

        = Various 's'erver side skeleton file name endings.

        [-ss <Server's skeleton file name ending>]
             Default is "S.cpp".
        [-sT <Server's template skeleton file name ending>]
             Default is "S_T.cpp".
        [-si <Server's inline file name ending>]
             Default is "S.i".
        [-st <Server's template inline file name ending>]
             Default is "S_T.i".

Tue Aug 11 13:51:00 1998  Carlos O'Ryan  <coryan@CHA-CHA>

        * TAO_IDL/driver/drv_preproc.cpp:
           Under Win32 we need to convert backslashes into double
           backslashes before printing the file name in the #line
           directive, otherwise the C++ preprocessor gets confused. Thanks
           to John Geiss <jtgb@eci-esyst.com> for reporting this problem.

Tue Aug 11 13:47:53 1998  David L. Levine  <levine@cs.wustl.edu>

        * tao/ORB_Core.cpp: removed unnecessary trailing semicolons
          on a couple of IMPLEMENT_{APP,PRE}_GET_METHOD macro invocations.

Tue Aug 11 10:51:36 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Sequence.h:
        * tao/Sequence.cpp:
        * tao/CDR.cpp:
          Added support for octet sequences containing chains of message
          blocks. NOTE: the use of chains of message blocks inside octet
          sequences is *ONLY* for custom marshaling, many octet sequence
          features (such as get_buffer() or operator[]) are either hard or
          expensive to implement when the buffer is split across several
          message blocks; thus they are *not* supported. This is only an
          issue if the users decides to take advantage of some TAO
          extensions to octet sequences; using the normal octet sequences
          has *no* side effects.

        * orbsvcs/tests/EC_Throughput/README:
        * orbsvcs/tests/EC_Throughput/Makefile:
        * orbsvcs/tests/EC_Throughput/run_test.pl:
        * orbsvcs/tests/EC_Throughput/data.idl:
        * orbsvcs/tests/EC_Throughput/ECT_Data.h:
        * orbsvcs/tests/EC_Throughput/ECT_Data.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.h:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer.h:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer.cpp:
          The test was trying to achieve too much, I made it smaller by
          taking the custom marshaling example to a new test
          (EC_Custom_Marshal) and just trying to exercise throughput on
          this one.

        * orbsvcs/tests/Makefile:
        * EC_Custom_Marshal/Makefile:
        * EC_Custom_Marshal/README:
        * EC_Custom_Marshal/data.idl:
        * EC_Custom_Marshal/run_test.pl:
        * EC_Custom_Marshal/ECM_Data.h:
        * EC_Custom_Marshal/ECM_Data.cpp:
        * EC_Custom_Marshal/ECM_Consumer.h:
        * EC_Custom_Marshal/ECM_Consumer.cpp:
        * EC_Custom_Marshal/ECM_Supplier.h:
        * EC_Custom_Marshal/ECM_Supplier.cpp:
          Added a new test to show how custom marshaling works, actually
          this was already in EC_Throughput, but that test was growing too
          fat.

Mon Aug 10 22:46:39 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/Event_Channel.cpp: updated template
          instantiations to reflect Memory_Pools.h changes.

Mon Aug 10 20:02:45 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * Param_Test/README
          Added info about the perl script command line args and a note
          to the effect that there are still problems with objref.

Mon Aug 10 19:10:27 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * Param_Test/*.{h,cpp}:
          Had moved many #includes to corresponding .h files. I've
          been advised that this is not always a good idea, so I
          moved them back.

Mon Aug 10 17:03:12 1998  Jeff Parsons  <jp4@cs.wustl.edu>

        * Param_Test/bd_string.cpp:
          Opname was being set to "test_unbounded_string" (oops).

Mon Aug 10 16:54:12 1998  Jeff Parsons  <jp4@cs.wustl.edu>

        * Param_Test/run_test.pl:
          Added run-through for typecodes (it was missing) and increased wait
          between server and client startup to 5 (first time you run server, it
          takes a little longer to get going and the first test was getting
          skipped).

Mon Aug 10 16:46:50 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * orbsvcs/orbsvcs/Naming/Naming_Utils.cpp: Fixed an error
          where "not all control paths return a value" in init ().

Mon Aug 10 15:56:42 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/Memory_Pools.h:
          The memory pools are global from some time now, but they did not
          have the right kind of lock; this lead to memory corruption
          problems when sending events at a very high rate. Thanks to
          Mark L. Boriack <mboriack@std.saic.com> for reporting this
          problem.

Mon Aug 10 13:59:24 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * orbsvcs/tests/ImplRepo/Impl_Repo.idl:
        * orbsvcs/tests/ImplRepo/client.dsp:
        * orbsvcs/tests/ImplRepo/client_impl.cpp:
        * orbsvcs/tests/ImplRepo/implrepo.dsp:
        * orbsvcs/tests/ImplRepo/ir_implrepo_impl.cpp:
        * orbsvcs/tests/ImplRepo/ir_implrepo_impl.h:
        * orbsvcs/tests/ImplRepo/ir_server.cpp:
        * orbsvcs/tests/ImplRepo/server.dsp:
        * orbsvcs/tests/ImplRepo/server_impl.cpp:
        * orbsvcs/tests/ImplRepo/server_impl.h:
        * orbsvcs/tests/ImplRepo/svc.conf:
          The server now registers itself with the IR.

Mon Aug 10 13:33:52 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/RtecEventChannelAdmin.idl:
        * orbsvcs/orbsvcs/Event/Event_Channel.h:
        * orbsvcs/orbsvcs/Event/Event_Channel.i:
        * orbsvcs/orbsvcs/Event/Event_Channel.cpp:
          Added suspend_connection/resume_connection calls to the
          PushConsumerProxy interface ala Notification Service, using this
          methods a Consumer can temporarly disable the reception of
          events; the events are dropped on the Event Service side, thus
          minimizing network traffic (but the EC still has to do some
          computation).

        * orbsvcs/tests/Simple_Naming/Makefile:
          Updated dependencies.

Mon Aug 10 12:45:01 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/tests/Logger/Logging_Test_i.cpp: Added extra code to
          test the "logv ()" method.

        * orbsvcs/orbsvcs/Naming/Naming_Utils.{h,cpp}: Added new method
          "init_new_naming ()" which creates a new naming service. Modified
          "init ()" to try and resolve a preexisting NameService before
          calling "init_new_naming ()"

        * orbsvcs/orbsvcs/Log/Logger_i.{h,cpp}: Implemented new "logv ()"
          method

        * orbsvcs/orbsvcs/Logger.idl (Logger): Added new method "logv ()"
          which allows logging with a specified verbosity level.

Mon Aug 10 10:51:08 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Cubit/TAO/DII_Cubit/client.cpp:
          Removed signed/unsigned comparison, thanks to David for pointing
          this out.

Mon Aug 10 09:13:17 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Log/Logger_i.cpp: added missing
          ACE_Hash_Map_Iterator template instantiations.

Sun Aug 09 23:36:31 1998  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.2.3 released.

Sun Aug  9 23:08:51 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * Checked in a bunch of files/directories that I'd neglected
          to check in before.

Sun Aug 09 23:12:33 1998  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.2.2 released.

Sun Aug  9 19:46:33 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * Param_Test/var_array.cpp:

          Changed this->out_.out () in add_args to
          this->out_.inout (), which works with dii requests.

Sun Aug  9 19:08:53 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/ORB_Core.cpp:
          Removed explicit template instantiation for
          ACE_Malloc<ACE_LOCAL_MEMPORY_POOL,ACE_Null_Mutex> and the
          corresponding ACE_Allocator_Adapter<> because it is already
          instantiated in ACE.

        * tao/ORB.cpp:
          Added missing instantiation of
          ACE_Guard<ACE_Cached_Connector_Lock>, event it is not directly
          used in TAO it is used by the ACE_Cached_Connector<> (when
          instantiated using that lock) and some compilers do no recursive
          instantiation.

Sun Aug  9 18:20:59 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tests/Simple/client_static.dsp:
        * tests/Simple/server_static.dsp:
        * TAOACE_Static.dsw:
        * TAO_IDL/tao_idl.dsp:
        * TAO_IDL/tao_idl.dsw:
        * TAO_IDL/tao_idl_static.dsp:
        * orbsvcs/orbsvcs/orbsvcs.dsw
        * orbsvcs/orbsvcs/orbsvcs_static.dsp:
        * tao/TAO_Static.dsp:
        * tests/Simple/Simple_Object.dsw:
        * tests/Simple/client.dsp:
        * tests/Simple/server.dsp:
          Added and updated projects for a static version of the
          TAO libraries.

Sun Aug  9 12:56:12 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Param_Test/fixed_struct.cpp:
        * tests/Param_Test/objref.cpp:
        * tests/Param_Test/ub_objref_seq.cpp:
        * tests/Param_Test/ub_string.cpp:
        * tests/Param_Test/var_array.cpp:
          Added missing includes and fixed some T_var to base type
          translation problems (it wouldn't compile on Sun/CC otherwise).

Sun Aug  9 08:51:58 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Trader.cpp: Added a #include of
          Offer_Iterators_T.h so that the code will compile on VxWorks.
          Thanks to Sergio for reporting this.

Sun Aug  9 000:45:55 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * Param_Test/client.dsp:

          Added a missing header file to FileView and created separate
          client and server directories under Debug\ so separate .pdb
          files can be kept for client and server projects.

        * Param_Test/ub_any_seq.{h,cpp}:

          DII test now works and is CORBA-compliant.

        * Param_Test/any.cpp:
        * Param_Test/bd_long_seq.cpp:
        * Param_Test/bd_short_seq.cpp:
        * Param_Test/bd_str_seq.cpp:
        * Param_Test/bd_struct_seq.cpp:
        * Param_Test/client.cpp:
        * Param_Test/driver,{h,cpp}:
        * Param_Test/fixed_array.cpp:
        * Param_Test/fixed_struct.cpp:
        * Param_Test/nested_struct.cpp:
        * Param_Test/objref.cpp:
        * Param_Test/short.{h,cpp}:
        * Param_Test/typecode.cpp:
        * Param_Test/ub_long_seq.cpp:
        * Param_Test/ub_objref_seq.cpp:
        * Param_Test/ub_short_seq.cpp:
        * Param_Test/ub_str_seq.cpp:
        * Param_Test/ub_string.cpp:
        * Param_Test/ub_struct_seq.cpp:
        * Param_Test/var_array.cpp:
        * Param_Test/var_struct.cpp:

          Made cosmetic changes to the code.


Sat Aug  8 22:47:22 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * Param_Test/fixed_array.{h,cpp}:
        * Param_Test/var_array.{h,cpp}:
        * Param_Test/var_struct.{h,cpp}:
        * Param_Test/nested_struct.{h,cpp}:
        * Param_Test/any.{h,cpp}:

          DII tests now work with _vars and are CORBA-compliant.

Sat Aug  8 21:28:33 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Exception.h:
        * tao/Exception.i:
        * tao/Exception.cpp:
          Removed superflous operator new and operator delete.

        * docs/releasenotes/TODO.html:
          More updates.

        * docs/configurations.html:
          Added a few hints on when to use ORB-per-thread and what the
          consequences are.

Fri Aug  7 21:39:26 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * docs/releasenotes/TODO.html:
          Update the notes.

        * docs/releasenotes/index.html:
          Added a pointer to the TODO list.

        * orbsvcs/tests/EC_Throughput/run_test.pl:
          We need to wait for the NamingService and the EventService after
          killing them. We also need a pause after starting up the
          consumer.

        * tao/CDR.cpp:
        * tao/CDR.h:
        * tao/CDR.i:
          The OutputCDR class receives allocators for the buffers and the
          data blocks.

        * tao/Connect.cpp:
          Minimize the number of calls to TAO_ORB_Core_instance() in the
          upcall.

        * tao/IIOP_Object.cpp:
          Use the ORB_Core allocators for the outgoing CDR stream.

        * tao/Invocation.cpp:
        * tao/Invocation.h:
        * tao/Invocation.i:
          Receive the ORB_Core as an argument to minimize calls to
          TAO_ORB_Core_instance.
          Use allocators for the outgoing stream.

        * tao/ORB_Core.cpp:
        * tao/ORB_Core.h:
        * tao/ORB_Core.i:
          Added TSS allocators for the outgoing stream.

        * tests/Cubit/TAO/IDL_Cubit/client_i.cpp:
        * tests/Cubit/TAO/IDL_Cubit/cubit_i.cpp:
          Fixed problems with Timeprobe registrations.
          Also made the <-x> option functional when -v or -o is used.

        * tests/Cubit/TAO/IDL_Cubit/Makefile:
          Enabled GPERF support in the IDL compiler again.

Fri Aug  7 18:00:22 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * Param_Test/bd_short_seq.{h,cpp}:
        * Param_Test/bd_long_seq.{h,cpp}:
        * Param_Test/bd_str_seq.{h,cpp}:
        * Param_Test/bd_struct_seq.{h,cpp}:
        * Param_Test/ub_short_seq.{h,cpp}:
        * Param_Test/ub_long_seq.{h,cpp}:
        * Param_Test/ub_str_seq.{h,cpp}:
        * Param_Test/ub_struct_seq.{h,cpp}:

          DII tests now work with _vars.

Fri Aug  7 15:30:06 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * tests/Param_Test/typecode.{h,cpp}:

          DII test now works.

Fri Aug 07 14:32:50 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/ORB_Core.cpp (init): Removed the public set function and
          made the ORB_Core a friend.

Fri Aug  7 10:41:23 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tao/ORB_Core.cpp (init): Changed the code to use the new
          shutdown_lock() accessor so TAO will compile.  Thanks to Andy
          Gokhale for reporting this.

        * tao/ORB: Added an accessor to set the shutdown lock.

Fri Aug 07 01:10:48 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/ORB.cpp

          (shutdown): Restored the <wait_for_completion> flag.  In
          shutdown, we try to cancel all the threads in the ORB (e.g.,
          threads from a thread-per-connection policy). If the
          <wait_for_completion> flag is set, we wait for all threads to
          exit.  Note that there is one problem with this: on platforms
          that do not support thread cancellation, the threads won't get
          cancelled.  Therefore, the only way they will wake up and
          realize that the ORB has shutdown is that a client makes a
          request to them.  Hence the <wait_for_completion> flag cannot
          reliably used on platforms that do not have thread cancellation.

          (run): Simplified code for accessing shutdown_lock_ and
          should_shutdown_

        * tao/ORB.i (should_shutdown): Added set and get methods for the
          should_shutdown_ flag.

        * tao/ORB_Core.cpp

          (Pre_Allocated): Added a constructor that makes sure that the
          thread manager does not wait for threads by default.

          (init): Set the <shutdown_lock_> for the ORB.

        * tao/Connect.cpp

          (handle_input): Check to see if we've been cancelled
          cooperatively before executing the client request.

          (TAO_Server_Connection_Handler::TAO_Server_Connection_Handler,
          TAO_Client_Connection_Handler::TAO_Client_Connection_Handler)
          If the thread manager of the svc_handlers is zero, set them to
          TAO_ORB_Core_instance ()->thr_mgr () and not
          ACE_Thread_Manager::instance ().

          (activate): There is no need to assign the thr_mgr (again) as it
          was already set correctly at creation time.

          (TAO_Client_Connection_Handler::close): Removed this method. The
          base class already does this.

        * tests/Cubit/TAO/IDL_Cubit/IDL_Cubit_Test.cpp:
          tests/NestedUpcall/Reactor/NestedUpCalls_Test.cpp:
          Removed these tests since they have been superseded by the perl
          scripts. Also updated the Makefiles.

        * tests/Cubit/CORBAplus/IDL_Cubit:
        * tests/Cubit/TAO/IDL_Cubit:
          Removed references to TAO_ORB_Core_Instance.

        * tests/Cubit/TAO/IDL_Cubit/svc.conf: Added back the tss flag for
          ORBresources.  This is necessary because the collocation test
          uses two threads.

        * tests/Cubit/TAO/IDL_Cubit/cubit.idl: Removed the Cubit_Shutdown
          object. It is not needed. Also removed the string from
          make_cubit since it was not being used.

        * tests/Cubit/TAO/IDL_Cubit/server_i:

          Changed <factory_impl_> to a Cubit_Factory_i pointer and created
          it dynamically so that we can pass it the ORB pointer.

          Removed <factory>, <shutdown_impl_>, <num_of_objs_> <shutdown_>,
          <Cubit_i_ptr>, <Cubit_i_ref>, <Cubit_Factory_i_ptr>, <obj_name>

        * tests/Cubit/TAO/IDL_Cubit/client_i:

          <cubit_key_> was removed since it was not needed anymore.

          Changed <cubit_> to a Cubit_var from a Cubit_ptr.

          Fixed the memory management for <cubit_factory_key_>.

          Instead of using the Cubit_Shutdown object, we simply turn off
          collocation, reinit all our vars (converting them from
          collocated to regular objects), and then call shutdown on the
          cubit object.

Thu Aug  6 21:49:55 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * orbsvcs/tests/Trading/Makefile: Changed

          LIBS    = -lorbsvcs -lTAO
          LDLIBS  = -lTTest $(LIBS)

          to

          LDLIBS = -lTTest -lorbsvcs -lTAO

          to work around weirdo bugs with the HP/UX GNU make...  Thanks to
          John Mulhern <9107@mn3.lawson.lawson.com> for reporting this.

Thu Aug  6 18:27:24 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tests/TAO_Tests.dsw: Added the Multiple Inheritance client
          and server projects.

        * tests/Multiple_Inheritance/client.dsp:
        * tests/Multiple_Inheritance/server.dsp:
          Updated the Release versions to be in synch with the rest
          of the tests.

Thu Aug  6 18:11:20 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * TAO-INSTALL.html: Added instructions on how to create a
          static library for TAO.

        * orbsvcs/orbsvcs/Sched/DynSched.cpp: Fixed a typo where
          there was a == when there should have been a =. This was
          in schedule_threads ().

Thu Aug  6 16:37:55 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * tests/Param_Test/typecode.{h,cpp}:
          Moved the table of typecodes used for random
          selection to be local to init_parameters ().
          When it was global and static, the CORBA::
          typecodes could not be used - they weren't yet
          initialized.

Thu Aug  6 14:24:30 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Cubit/TAO/DII_Cubit/client.cpp:
          Removed warning about unreached statement.

        * orbsvcs/orbsvcs/Trader/Trader.cpp:
          Removed duplicate instantiation of a template.

Thu Aug  6 13:39:32 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * tao_idl/be/be_visitor_argument/vardecl_ss.cpp:
        * tao_idl/be/be_visitor_argument/post_upcall_ss.cpp:
          Removed code from visit_predefined_type () in
          post_upcall_ss.cpp and changed vardecl_ss.cpp to
          accomplish the same thing in a less messy and more
          memory-robust manner. Applies to code generated for
          test_typecode_skel () in param_TestS.cpp.

Thu Aug 06 12:51:52 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/orbconf.h: Added a define for the type of reactor that TAO
          will use.  By default, this is the Select_Reactor.

        * tao/ORB_Core.cpp (TAO_Default_Reactor): Instantiate TAO_REACTOR
          instead of the Select_Reactor. Also made ~TAO_Default_Reactor
          virtual. BTW, there is no need to keep a pointer to the
          Reactor_Impl class.  Simply ask the Reactor class to delete it
          when its done.

Thu Aug  6 09:46:46 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.cpp : Used the new ARGV
          constructor which creates a new ARGV with 2 argvs. Removed all
          usages of 3*BUFSIZ.

Wed Aug  5 22:14:39 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp,
          orbsvcs/orbsvcs/Trader/Offer_Database.cpp: removed unnecessary
          typenames.  Thanks to John Mulhern <9107@mn3.lawson.lawson.com>
          for reporting this.

Wed Aug 05 17:34:52 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/Invocation.h (TAO_GIOP_Invocation): Removed the
          TAO_Client_Connection_Handler pointer from this class.  It was
          moved into the IIOP_Object where it would be easier to recycle
          it since instances of TAO_GIOP_Invocation are transient while
          IIOP_Objects are not.

        * tao/ORB_Core.cpp (TAO_Cached_Connector_Lock): Added a new
          adaptive lock type TAO_Collocation_Table_Lock that will be used
          to control the type of locking used by the connector in TAO.

          Moved all the connect strategies from the ORB_Core to the
          resource factory.  If the strategies were left in the ORB_Core,
          each thread would get its own copy of the strategies since
          ORB_Core is TSS.

          Removed all instances of TAO_HAS_CLIENT_CONCURRENCY.  They were
          incomplete, not used, and annoying.

        * tao/ORB.cpp: Changed the template instantiations of the
          Connector to specify the new TAO_Cached_Connector_Lock instead
          of ACE_SYNCH_NULL_MUTEX or ACE_SYNCH_MUTEX.

        * tao/default_server.cpp (parse_args): Added a new option
          (-ORBconnectorlock) to control the lock on the connector.  It
          defaults to a thread lock, but can set to null.

          Also, changed the lock type of the collocation table from
          ACE_SYNCH_RECURSIVE_MUTEX to ACE_SYNCH_MUTEX.

        * tests/Cubit/TAO/IDL_Cubit/svc.conf: Removed excessive options
          from the svc.conf file. Also added -ORBconnectorlock null to
          avoid locking in the connector.

        * tao: Renamed all instances of coltbl to collocation_table.

Wed Aug  5 17:48:31 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * tests/Param_Test/var_struct.{h,cpp}:
        * tests?param_Test/nested_struct.{h,cpp}:
          DII now works, but is non-compliant (OUT arg
          has to be extracted to get correct value).

Wed Aug  5 17:05:36 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * TAO-INSTALL.html: Added instruction for the addition of
          ACE_wrappers/ace to the executable directories under MSVC
          5, since this is needed for the TAO_IDL compiler to work
          inside of MSVC.

Wed Aug  5 16:43:38 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * docs/implrepo.html: Added information on the new POA policy where
          the format of the persistent IOR can be changed from that of both
          the last-known-server-IOR and Implementation Repository to that
          just of the Implementation Repository.  Also added a note on the
          use of CLOEXEC to make TAO fork-safe.

Wed Aug  5 16:04:21 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * orbsvcs/Naming_Service/Naming_Service.dsp:
        * orbsvcs/orbsvcs/orbsvcs.dsp:
        * tests/CDR/basic_types.dsp:
        * tests/CDR/growth.dsp:
        * tests/CDR/tc.dsp:
        * tests/Cubit/TAO/DII_Cubit/client.dsp:
        * tests/Cubit/TAO/IDL_Cubit/client.dsp:
        * tests/Cubit/TAO/IDL_Cubit/collocation_test.dsp:
        * tests/Cubit/TAO/IDL_Cubit/server.dsp:
        * tests/Cubit/TAO/MT_Cubit/client.dsp:
        * tests/Cubit/TAO/MT_Cubit/server.dsp:
        * tests/NestedUpcall/MT_Client_Test/client.dsp:
        * tests/NestedUpcall/MT_Client_Test/server.dsp:
        * tests/NestedUpcall/Reactor/client.dsp:
        * tests/NestedUpcall/Reactor/server.dsp:
        * tests/NestedUpcall/Triangle_Test/initiator.dsp:
        * tests/NestedUpcall/Triangle_Test/server_A.dsp:
        * tests/NestedUpcall/Triangle_Test/server_B.dsp:
        * tests/OctetSeq/OctetSeq.dsp:
        * tests/POA/DSI/client.dsp:
        * tests/POA/DSI/server.dsp:
        * tests/POA/Default_Servant/client.dsp:
        * tests/POA/Default_Servant/server.dsp:
        * tests/POA/Explicit_Activation/server.dsp:
        * tests/POA/FindPOA/FindPOA.dsp:
        * tests/POA/Forwarding/client.dsp:
        * tests/POA/Forwarding/server.dsp:
        * tests/POA/Generic_Servant/server.dsp:
        * tests/POA/NewPOA/NewPOA.dsp:
        * tests/POA/On_Demand_Activation/server.dsp:
        * tests/POA/RootPOA/RootPOA.dsp:
        * tests/POA/TIE/client.dsp:
        * tests/POA/TIE/server.dsp:
        * tests/POA/locking/locking.dsp:
        * tests/Param_Test/client.dsp:
        * tests/Param_Test/server.dsp:
        * tests/Quoter/Factory_Finder.dsp:
        * tests/Quoter/Generic_Factory.dsp:
        * tests/Quoter/client.dsp:
        * tests/Quoter/server.dsp:
        * tests/Simple/client.dsp:
        * tests/Simple/server.dsp:
          Updated all the Release versions of these projects.  I'll
          spend another session on converting the rest of the orbsvcs
          soon.

          Note: Most of the run_test.pl's do not yet have support for
          running the Release version instead of the debug version.

        * tests/TAO_Tests.dsw: Inserted a dependency between DII_Cubit
          and IDL_Cubit.

        * tests/Cubit/TAO/IDL_Cubit/run_test.pl: New and improved script
          that supports more useful options.

        * tests/Cubit/TAO/IDL_Cubit/README:  Added a reference to
          run_test.pl and updated the "output" here to what it looks like
          now.

Wed Aug  5 16:02:08 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.cpp :
          Used TAO_ORB_Manager to do the ORB and POA
          initialization and activation of servants.

Wed Aug  5 15:38:34 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * tests/Param_Test/fixed_array.{h,cpp}:
        * tests/Param_Test/var_array.{h,cpp}:
          Fixed DII implementation.

Wed Aug  5 14:17:27 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Log/Logger_i.cpp:
          Added missing template instantiations.

        * orbsvcs/Logging_Service/Makefile:
          Moved the TAO_ROOT definition to the top.

        * orbsvcs/Logging_Service/Logging_Service_i.cpp:
          Fixed usage message.

Wed Aug  5 11:21:29 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.cpp:
          Fixed couple of minor bugs: assignment of a <const char*> to a
          <char*> and a misplaced close paren.

        * tests/Cubit/TAO/DII_Cubit/client.cpp:
          Removed EGCS warning about implicit use of & with function
          pointers.

        * tests/Param_Test/bd_struct_seq.h:
          Removed fully qualified name in method declaration.

Tue Aug  4 22:23:47 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.cpp: Cleaned up some of the code
          and the comments.

Tue Aug  4 21:20:35 1998  Nagarajan Surendrany  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.cpp :
          Replaced 3*BUFSIZ with ACE_DEFAULT_ARGV_BUFSIZ and
          allocated memory after calculating the length.

Tue Aug  4 20:00:59 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * Param_Test/ub_any_seq.{h,cpp}:
          Added non-_var members for DII OUT arg and
          return value. Test now works for DII and SII.

Tue Aug  4 18:10:16 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * Param_Test/ub_short_seq.{h,cpp}:
          Param_Test/ub_long_seq.{h.cpp}:
          Param_Test/ub_str_seq.{h,cpp}:
          Param_Test/ub_struct_seq.{h,cpp}:
          Added non-_var members for DII OUT args and
          return values. Tests now work for DII and SII.

Tue Aug  4 17:32:30 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/tests/Logger/Logging_Test_i.cpp:
        * orbsvcs/Logging_Service/Logging_Service_i.cpp:
          Added some debugging code to test the <make_logger> hashing feature.

        * orbsvcs/orbsvcs/Log/Logger_i.{h,cpp}: Added ACE_Hash_Map
          code. Now calls to make_logger will use the <name> parameter as a
          hash key to return either a new Logger or a preexisting one. Added
          some debugging code to the hash-relevant portions.

Tue Aug  4 17:23:31 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * orbsvcs/tests/Trading/export_test.cpp,
          orbsvcs/tests/Trading/Trading_Service.cpp: Changed all uses of
          TAO_OBJID_TRADINGSERVICE to "TradingService" to be compliant
          with the CORBA specification.

Tue Aug 04 16:42:50 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tests/Multiple_Inheritance: This module is used as a test for
          IDL interfaces that inherit from multiple interfaces.  The
          "diamond of death" inheritance hierarchy is used in this example
          where there is a common base class (A), two classes deriving
          from the common base class (B and C) and then a final derived
          class (D) that inherits from both B and C.

          The client starts off with CORBA Object, narrows to interface A,
          then B, then C, and finally D. It calls all the methods on each
          interface.

Tue Aug  4 16:00:16 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * TAO-INSTALL.html: Added a section on the use of <corba.h>
          instead of <tao/corba.h>.  Also cleaned up some other
          sections about TAOACE.dsw and adding a IDL file to a MSVC
          project.

Tue Aug  4 15:56:34 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.cpp : Changed BUFSIZ to
          3*BUFSIZ to fit the arguments. Made the default base orb port
          as 0.

Tue Aug  4 14:52:12 1998 Jeff Parsons <jp4@cs.wustl.edu>

        * TAO/tests/Param_Test/bd_struct_seq.{h,cpp}:
          Same changes as other bounded sequence tests
          checked in yesterday (non _var members for DII
          OUT arg and return value). Test now works for DII
          as well as SII.

Tue Aug  4 12:55:06 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/tests/Logger/run_test.pl: Revised test script to call
          the executables in the correct directories.

Tue Aug  4 12:11:55 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * docs/releasenotes/index.html: Added logging service section

Tue Aug 04 11:08:56 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * TAO_IDL/GenExportH.BAT: Moved it to where it really belong,
          $ACE_ROOT/bin/.

Mon Aug  3 19:46:55 1998 Jeff Parsons <jp4@cs.wuslt.edu>

        * tao_idl/be/be_visitor_sequence/gen_bounded_sequence_ch.cpp:
          moved buffer allocation in default constructor from body to
          base class call - prevents debug assertion in param tests.

        * tao/Sequence_T.i:
          change corresponding to the above

        * TAO/tests/Param_Test/bd_short_seq.{h,cpp}:
          TAO/tests/Param_Test/bd_long_seq.{h,cpp}:
          TAO/tests/Param_Test/bd_str_seq.{h,cpp}:
          created non-_var members for OUT args and return values,
          changed add_args and check_validity accordingly. These
          param tests now work for SII and DII.

Mon Aug  3 17:21:42 1998  Gonzalo Diethelm  <gonzo@tango.cs.wustl.edu>

        * IIOP/test/clnt.cpp:
        * IIOP/test/cubit.cpp:
        * IIOP/test/cubitC.cpp:
        * IIOP/test/cubitS.cpp:
        * IIOP/test/cubit_i.cpp:
        * IIOP/test/svr.cpp:
        * IIOP/test/test1.cpp:
        * IIOP/test/test1_clnt.cpp:
        * IIOP/test/test1_svr.cpp:
        * IIOP/test/Orbeline/base_server/Profile_Timer.cpp:
        * IIOP/test/Orbeline/base_server/cubit_impl.cpp:
        * IIOP/test/Orbeline/base_server/server.cpp:
        * IIOP/test/Orbeline/client/Profile_Timer.cpp:
        * IIOP/test/Orbeline/client/client.cpp:
        * IIOP/test/Orbix/base_server/cubitC.cpp:
        * IIOP/test/Orbix/base_server/cubitS.cpp:
        * IIOP/test/Orbix/base_server/cubit_impl.cpp:
        * IIOP/test/Orbix/base_server/server.cpp:
        * IIOP/test/Orbix/base_server/tpr.cpp:
        * IIOP/test/Orbix/client/client.cpp:
        * IIOP/test/Orbix/client/cubitC.cpp:
        * IIOP/test/Orbix/factory_client/client.cpp:
        * IIOP/test/Orbix/factory_client/cubitC.cpp:
        * IIOP/test/Orbix/factory_client/cubitS.cpp:
        * IIOP/test/Orbix/tpool/cubitC.cpp:
        * IIOP/test/Orbix/tpool/cubitS.cpp:
        * IIOP/test/Orbix/tpool/cubit_impl.cpp:
        * IIOP/test/Orbix/tpool/server.cpp:
        * IIOP/test/Orbix/tpool/tpool.cpp:
        * IIOP/test/Orbix/tpr/cubitC.cpp:
        * IIOP/test/Orbix/tpr/cubitS.cpp:
        * IIOP/test/Orbix/tpr/cubit_impl.cpp:
        * IIOP/test/Orbix/tpr/server.cpp:
        * IIOP/test/Orbix/tpr/tpr.cpp:
        * IIOP/test/Orbix/tps/cubitC.cpp:
        * IIOP/test/Orbix/tps/cubitS.cpp:
        * IIOP/test/Orbix/tps/cubit_impl.cpp:
        * IIOP/test/Orbix/tps/server.cpp:
        * IIOP/test/Orbix/tps/tps.cpp:
        * IIOP/tests/Cubit/Orbix/base_server/cubitC.cpp:
        * IIOP/tests/Cubit/Orbix/base_server/cubitS.cpp:
        * IIOP/tests/Cubit/Orbix/base_server/cubit_impl.cpp:
        * IIOP/tests/Cubit/Orbix/base_server/server.cpp:
        * IIOP/tests/Cubit/Orbix/base_server/tpr.cpp:
        * IIOP/tests/Cubit/Orbix/client/client.cpp:
        * IIOP/tests/Cubit/Orbix/client/cubitC.cpp:
        * IIOP/tests/Cubit/Orbix/factory_client/client.cpp:
        * IIOP/tests/Cubit/Orbix/factory_client/cubitC.cpp:
        * IIOP/tests/Cubit/Orbix/factory_client/cubitS.cpp:
        * IIOP/tests/Cubit/Orbix/tpool/cubitC.cpp:
        * IIOP/tests/Cubit/Orbix/tpool/cubitS.cpp:
        * IIOP/tests/Cubit/Orbix/tpool/cubit_impl.cpp:
        * IIOP/tests/Cubit/Orbix/tpool/server.cpp:
        * IIOP/tests/Cubit/Orbix/tpool/tpool.cpp:
        * IIOP/tests/Cubit/Orbix/tpr/cubitC.cpp:
        * IIOP/tests/Cubit/Orbix/tpr/cubitS.cpp:
        * IIOP/tests/Cubit/Orbix/tpr/cubit_impl.cpp:
        * IIOP/tests/Cubit/Orbix/tpr/server.cpp:
        * IIOP/tests/Cubit/Orbix/tpr/tpr.cpp:
        * IIOP/tests/Cubit/Orbix/tps/cubitC.cpp:
        * IIOP/tests/Cubit/Orbix/tps/cubitS.cpp:
        * IIOP/tests/Cubit/Orbix/tps/cubit_impl.cpp:
        * IIOP/tests/Cubit/Orbix/tps/tps.cpp:
        * IIOP/tests/Cubit/TAO/clnt.cpp:
        * IIOP/tests/Cubit/TAO/cubit.cpp:
        * IIOP/tests/Cubit/TAO/cubitC.cpp:
        * IIOP/tests/Cubit/TAO/cubitS.cpp:
        * IIOP/tests/Cubit/TAO/cubit_i.cpp:
        * IIOP/tests/Cubit/TAO/svr.cpp:
        * IIOP/tests/Cubit/TAO/test1.cpp:
        * IIOP/tests/Cubit/TAO/test1_clnt.cpp:
        * IIOP/tests/Cubit/TAO/test1_svr.cpp:
        * IIOP/tests/Cubit/VisiBroker/base_server/Profile_Timer.cpp:
        * IIOP/tests/Cubit/VisiBroker/base_server/cubit_impl.cpp:
        * IIOP/tests/Cubit/VisiBroker/base_server/server.cpp:
        * IIOP/tests/Cubit/VisiBroker/client/Profile_Timer.cpp:
        * IIOP/tests/Cubit/VisiBroker/client/client.cpp:
        * IIOP/tests/Thruput_test/client.cpp:
        * IIOP/tests/Thruput_test/server.cpp:
        * IIOP/tests/Thruput_test/ttcpC.cpp:
        * IIOP/tests/Thruput_test/ttcpS.cpp:
        * IIOP/tests/Thruput_test/ttcp_i.cpp:
        * IIOP/tests/Thruput_test/utils.cpp:
        Added ACE_RCSID to these files.

Mon Aug  3 16:49:45 1998  Gonzalo Diethelm  <gonzo@tango.cs.wustl.edu>

        * TAO_IDL/Makefile:
        We don't attempt to traverse any subdirectories now.

        * TAO_IDL/ast/Makefile:
        * TAO_IDL/be/Makefile:
        * TAO_IDL/be/be_state.cpp:
        * TAO_IDL/be/be_state_argument.cpp:
        * TAO_IDL/be/be_state_array.cpp:
        * TAO_IDL/be/be_state_attribute.cpp:
        * TAO_IDL/be/be_state_exception.cpp:
        * TAO_IDL/be/be_state_operation.cpp:
        * TAO_IDL/be/be_state_sequence.cpp:
        * TAO_IDL/be/be_state_structure.cpp:
        * TAO_IDL/be/be_state_typedef.cpp:
        * TAO_IDL/be/be_state_union.cpp:
        * TAO_IDL/driver/Makefile:
        * TAO_IDL/fe/Makefile:
        * TAO_IDL/narrow/Makefile:
        * TAO_IDL/util/Makefile:
        Erased these now useless files.

        * Benchmark/Marshal_Test/Orbix/marshal.h:
        Added a RCS Id.

        * Benchmark/Marshal_Test/Orbix/client.cpp:
        * Benchmark/Marshal_Test/Orbix/marshal.h:
        * Benchmark/Marshal_Test/Orbix/orbix_marshal_client.cpp:
        * Benchmark/Marshal_Test/Orbix/orbix_marshal_impl.cpp:
        * Benchmark/Marshal_Test/Orbix/orbix_marshal_server.cpp:
        * Benchmark/Marshal_Test/Orbix/server.cpp:
        * Benchmark/Marshal_Test/TAO/client.cpp:
        * Benchmark/Marshal_Test/TAO/marshalC.cpp:
        * Benchmark/Marshal_Test/TAO/marshalS.cpp:
        * Benchmark/Marshal_Test/TAO/server.cpp:
        * Benchmark/Marshal_Test/TAO/tao_marshal_client.cpp:
        * Benchmark/Marshal_Test/TAO/tao_marshal_impl.cpp:
        * Benchmark/Marshal_Test/TAO/tao_marshal_server.cpp:
        * Benchmark/Marshal_Test/VisiBroker/client.cpp:
        * Benchmark/Marshal_Test/VisiBroker/server.cpp:
        * Benchmark/Marshal_Test/VisiBroker/visi_marshal_client.cpp:
        * Benchmark/Marshal_Test/VisiBroker/visi_marshal_impl.cpp:
        * Benchmark/Marshal_Test/VisiBroker/visi_marshal_server.cpp:
        * Benchmark/benchmark/driver.cpp:
        * Benchmark/benchmark/marshal_options.cpp:
        * Benchmark/benchmark/marshal_proxy.cpp:
        * Benchmark/benchmark/marshal_results.cpp:
        Added ACE_RCSID to these files.

Mon Aug  3 15:05:39 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * orbsvcs/tests/AVStreams/mpeg/Makefile: Added this Makefile
        which compiles the AVStreams mpeg application.

Mon Aug  3 14:23:22 1998  Gonzalo Diethelm  <gonzo@tango.cs.wustl.edu>

        * tests/CDR/basic_types.cpp:
        * tests/CDR/growth.cpp:
        * tests/CDR/tc.cpp:
        * tests/Cubit/COOL/IDL_Cubit/client.cpp:
        * tests/Cubit/COOL/IDL_Cubit/cubit_i.cpp:
        * tests/Cubit/COOL/IDL_Cubit/server.cpp:
        * tests/Cubit/COOL/IDL_Cubit/tmplinst.cpp:
        * tests/Cubit/COOL/MT_Cubit/Task_Client.cpp:
        * tests/Cubit/COOL/MT_Cubit/Util_Thread.cpp:
        * tests/Cubit/COOL/MT_Cubit/client.cpp:
        * tests/Cubit/COOL/MT_Cubit/cubit_impl.cpp:
        * tests/Cubit/COOL/MT_Cubit/pccTimer.cpp:
        * tests/Cubit/COOL/MT_Cubit/server.cpp:
        * tests/Cubit/CORBAplus/IDL_Cubit/clnt.cpp:
        * tests/Cubit/CORBAplus/IDL_Cubit/cubit_i.cpp:
        * tests/Cubit/CORBAplus/IDL_Cubit/svr.cpp:
        * tests/Cubit/CORBAplus/MT_Cubit/client/Task_Client.cpp:
        * tests/Cubit/CORBAplus/MT_Cubit/client/client.cpp:
        * tests/Cubit/CORBAplus/MT_Cubit/server/cubit_i.cpp:
        * tests/Cubit/CORBAplus/MT_Cubit/server/svr.cpp:
        * tests/Cubit/Hardpack/IDL_Cubit/client.cpp:
        * tests/Cubit/Hardpack/IDL_Cubit/client_i.cpp:
        * tests/Cubit/Hardpack/IDL_Cubit/server.cpp:
        * tests/Cubit/Hardpack/IDL_Cubit/server_i.cpp:
        * tests/Cubit/Orbix/base_server/cubit_impl.cpp:
        * tests/Cubit/Orbix/base_server/server.cpp:
        * tests/Cubit/Orbix/client/client.cpp:
        * tests/Cubit/Orbix/client/cubitC.cpp:
        * tests/Cubit/Orbix/factory_client/client.cpp:
        * tests/Cubit/Orbix/factory_client/cubitC.cpp:
        * tests/Cubit/Orbix/factory_client/cubitS.cpp:
        * tests/Cubit/Orbix/tpool/cubitC.cpp:
        * tests/Cubit/Orbix/tpool/cubitS.cpp:
        * tests/Cubit/Orbix/tpool/cubit_impl.cpp:
        * tests/Cubit/Orbix/tpool/server.cpp:
        * tests/Cubit/Orbix/tpool/tpool.cpp:
        * tests/Cubit/Orbix/tpr/cubitC.cpp:
        * tests/Cubit/Orbix/tpr/cubitS.cpp:
        * tests/Cubit/Orbix/tpr/cubit_impl.cpp:
        * tests/Cubit/Orbix/tpr/server.cpp:
        * tests/Cubit/Orbix/tpr/tpr.cpp:
        * tests/Cubit/Orbix/tps/cubitC.cpp:
        * tests/Cubit/Orbix/tps/cubitS.cpp:
        * tests/Cubit/Orbix/tps/cubit_impl.cpp:
        * tests/Cubit/Orbix/tps/tps.cpp:
        * tests/Cubit/TAO/DII_Cubit/client.cpp:
        * tests/Cubit/TAO/IDL_Cubit/IDL_Cubit_Test.cpp:
        * tests/Cubit/TAO/IDL_Cubit/client.cpp:
        * tests/Cubit/TAO/IDL_Cubit/client_i.cpp:
        * tests/Cubit/TAO/IDL_Cubit/collocation_test.cpp:
        * tests/Cubit/TAO/IDL_Cubit/cubit_i.cpp:
        * tests/Cubit/TAO/IDL_Cubit/server.cpp:
        * tests/Cubit/TAO/IDL_Cubit/server_i.cpp:
        * tests/Cubit/TAO/IDL_Cubit/tmplinst.cpp:
        * tests/Cubit/TAO/MT_Cubit/Task_Client.cpp:
        * tests/Cubit/TAO/MT_Cubit/Util_Thread.cpp:
        * tests/Cubit/TAO/MT_Cubit/client.cpp:
        * tests/Cubit/TAO/MT_Cubit/cubit_i.cpp:
        * tests/Cubit/TAO/MT_Cubit/pccTimer.cpp:
        * tests/Cubit/TAO/MT_Cubit/server.cpp:
        * tests/Cubit/TAO/MT_Cubit/tmplinst.cpp:
        * tests/Cubit/VisiBroker/base_server/Profile_Timer.cpp:
        * tests/Cubit/VisiBroker/base_server/cubit_impl.cpp:
        * tests/Cubit/VisiBroker/base_server/server.cpp:
        * tests/Cubit/VisiBroker/client/Profile_Timer.cpp:
        * tests/Cubit/VisiBroker/client/client.cpp:
        * tests/Demux_Test/client.cpp:
        * tests/Demux_Test/server.cpp:
        * tests/Demux_Test/CodeGen/client.cpp:
        * tests/Demux_Test/CodeGen/gen.cpp:
        * tests/Demux_Test/CodeGen/impl.cpp:
        * tests/Demux_Test/CodeGen/objcreate.cpp:
        * tests/Demux_Test/CodeGen/perf.cpp:
        * tests/Demux_Test/CodeGen/skel.cpp:
        * tests/Demux_Test/CodeGen/stub.cpp:
        * tests/Demux_Test/CodeGen/tao.cpp:
        * tests/NestedUpcall/MT_Client_Test/MT_Object_Impl.cpp:
        * tests/NestedUpcall/MT_Client_Test/client.cpp:
        * tests/NestedUpcall/MT_Client_Test/local_server.cpp:
        * tests/NestedUpcall/MT_Client_Test/server.cpp:
        * tests/NestedUpcall/Reactor/NestedUpCalls_Test.cpp:
        * tests/NestedUpcall/Reactor/client.cpp:
        * tests/NestedUpcall/Reactor/eh_i.cpp:
        * tests/NestedUpcall/Reactor/reactor_i.cpp:
        * tests/NestedUpcall/Reactor/server.cpp:
        * tests/NestedUpcall/Triangle_Test/Initiator_Impl.cpp:
        * tests/NestedUpcall/Triangle_Test/Object_A_Impl.cpp:
        * tests/NestedUpcall/Triangle_Test/Object_B_Impl.cpp:
        * tests/NestedUpcall/Triangle_Test/initiator.cpp:
        * tests/NestedUpcall/Triangle_Test/server_A.cpp:
        * tests/NestedUpcall/Triangle_Test/server_B.cpp:
        * tests/OctetSeq/OctetSeq.cpp:
        * tests/POA/DSI/Database_i.cpp:
        * tests/POA/DSI/client.cpp:
        * tests/POA/DSI/server.cpp:
        * tests/POA/Default_Servant/File_i.cpp:
        * tests/POA/Default_Servant/client.cpp:
        * tests/POA/Default_Servant/server.cpp:
        * tests/POA/Explicit_Activation/server.cpp:
        * tests/POA/FindPOA/FindPOA.cpp:
        * tests/POA/Forwarding/MyFooServant.cpp:
        * tests/POA/Forwarding/Servant_Locator.cpp:
        * tests/POA/Forwarding/client.cpp:
        * tests/POA/Forwarding/server.cpp:
        * tests/POA/Generic_Servant/MyFooServant.cpp:
        * tests/POA/Generic_Servant/client.cpp:
        * tests/POA/NewPOA/NewPOA.cpp:
        * tests/POA/On_Demand_Activation/Servant_Activator.cpp:
        * tests/POA/On_Demand_Activation/Servant_Locator.cpp:
        * tests/POA/On_Demand_Activation/server.cpp:
        * tests/POA/RootPOA/RootPOA.cpp:
        * tests/POA/TIE/Foo_i.cpp:
        * tests/POA/TIE/client.cpp:
        * tests/POA/TIE/server.cpp:
        * tests/POA/locking/locking.cpp:
        * tests/Param_Test/any.cpp:
        * tests/Param_Test/bd_long_seq.cpp:
        * tests/Param_Test/bd_short_seq.cpp:
        * tests/Param_Test/bd_str_seq.cpp:
        * tests/Param_Test/bd_string.cpp:
        * tests/Param_Test/bd_struct_seq.cpp:
        * tests/Param_Test/client.cpp:
        * tests/Param_Test/driver.cpp:
        * tests/Param_Test/fixed_array.cpp:
        * tests/Param_Test/fixed_struct.cpp:
        * tests/Param_Test/helper.cpp:
        * tests/Param_Test/nested_struct.cpp:
        * tests/Param_Test/objref.cpp:
        * tests/Param_Test/options.cpp:
        * tests/Param_Test/param_test_i.cpp:
        * tests/Param_Test/results.cpp:
        * tests/Param_Test/server.cpp:
        * tests/Param_Test/short.cpp:
        * tests/Param_Test/tmplinst.cpp:
        * tests/Param_Test/typecode.cpp:
        * tests/Param_Test/ub_any_seq.cpp:
        * tests/Param_Test/ub_long_seq.cpp:
        * tests/Param_Test/ub_objref_seq.cpp:
        * tests/Param_Test/ub_short_seq.cpp:
        * tests/Param_Test/ub_str_seq.cpp:
        * tests/Param_Test/ub_string.cpp:
        * tests/Param_Test/ub_struct_seq.cpp:
        * tests/Param_Test/var_array.cpp:
        * tests/Param_Test/var_struct.cpp:
        * tests/Quoter/Factory_Finder.cpp:
        * tests/Quoter/Factory_Finder_Impl.cpp:
        * tests/Quoter/Generic_Factory.cpp:
        * tests/Quoter/Generic_Factory_Impl.cpp:
        * tests/Quoter/Quoter_Impl.cpp:
        * tests/Quoter/client.cpp:
        * tests/Quoter/server.cpp:
        * tests/Simple/client.cpp:
        * tests/Simple/client_impl.cpp:
        * tests/Simple/server.cpp:
        * tests/Simple/server_impl.cpp:
        * tests/Simple/simple_object_impl.cpp:
        * tests/Thruput/COOL/client.cpp:
        * tests/Thruput/COOL/server.cpp:
        * tests/Thruput/COOL/ttcp_i.cpp:
        * tests/Thruput/COOL/utils.cpp:
        * tests/Thruput/CORBAplus/client.cpp:
        * tests/Thruput/CORBAplus/server.cpp:
        * tests/Thruput/CORBAplus/ttcp_i.cpp:
        * tests/Thruput/CORBAplus/utils.cpp:
        * tests/Thruput/Orbix/Client.cpp:
        * tests/Thruput/Orbix/Srv_Main.cpp:
        * tests/Thruput/Orbix/ttcp_i.cpp:
        * tests/Thruput/Orbix/utils.cpp:
        * tests/Thruput/TAO/client.cpp:
        * tests/Thruput/TAO/server.cpp:
        * tests/Thruput/TAO/tmplinst.cpp:
        * tests/Thruput/TAO/ttcp_i.cpp:
        * tests/Thruput/TAO/utils.cpp:
        Added ACE_RCSID to these files.

Mon Aug  3 13:51:27 1998  Gonzalo Diethelm  <gonzo@tango.cs.wustl.edu>

        * orbsvcs/Makefile:
        * orbsvcs/Concurrency_Service/Concurrency_Service.cpp:
        * orbsvcs/Dump_Schedule/Dump_Schedule.cpp:
        * orbsvcs/Event_Service/Event_Service.cpp:
        * orbsvcs/LifeCycle_Service/Criteria_Evaluator.cpp:
        * orbsvcs/LifeCycle_Service/Factory_Trader.cpp:
        * orbsvcs/LifeCycle_Service/Life_Cycle_Service.cpp:
        * orbsvcs/LifeCycle_Service/Life_Cycle_Service_Impl.cpp:
        * orbsvcs/Logging_Service/Logging_Service.cpp:
        * orbsvcs/Logging_Service/Logging_Service_i.cpp:
        * orbsvcs/Naming_Service/Naming_Service.cpp:
        * orbsvcs/Scheduling_Service/Scheduling_Service.cpp:
        * orbsvcs/Trading_Service/Trading_Service.cpp:
        * orbsvcs/orbsvcs/Channel_Clients.cpp:
        * orbsvcs/orbsvcs/Channel_Clients_T.cpp:
        * orbsvcs/orbsvcs/Event_Utilities.cpp:
        * orbsvcs/orbsvcs/IOR_Multicast.cpp:
        * orbsvcs/orbsvcs/Runtime_Scheduler.cpp:
        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:
        * orbsvcs/orbsvcs/Scheduler_Utilities.cpp:
        * orbsvcs/orbsvcs/Time_Utilities.cpp:
        * orbsvcs/orbsvcs/tmplinst-orbsvcs.cpp:
        * orbsvcs/orbsvcs/AV/AVStreams_i.cpp:
        * orbsvcs/orbsvcs/AV/Endpoint_Strategy.cpp:
        * orbsvcs/orbsvcs/Concurrency/CC_Lock.cpp:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSet.cpp:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSetFactory.cpp:
        * orbsvcs/orbsvcs/Concurrency/Concurrency_Utils.cpp:
        * orbsvcs/orbsvcs/Event/BCU.cpp:
        * orbsvcs/orbsvcs/Event/CORBA_Utils_T.cpp:
        * orbsvcs/orbsvcs/Event/Dispatching_Modules.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway.cpp:
        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.cpp:
        * orbsvcs/orbsvcs/Event/Event_Channel.cpp:
        * orbsvcs/orbsvcs/Event/GPlot_File.cpp:
        * orbsvcs/orbsvcs/Event/Local_ESTypes.cpp:
        * orbsvcs/orbsvcs/Event/Memory_Pools.cpp:
        * orbsvcs/orbsvcs/Event/Module_Factory.cpp:
        * orbsvcs/orbsvcs/Event/RT_Task.cpp:
        * orbsvcs/orbsvcs/Event/ReactorTask.cpp:
        * orbsvcs/orbsvcs/Event/Task_Manager.cpp:
        * orbsvcs/orbsvcs/Log/Logger_i.cpp:
        * orbsvcs/orbsvcs/Naming/CosNaming_i.cpp:
        * orbsvcs/orbsvcs/Naming/Entries.cpp:
        * orbsvcs/orbsvcs/Naming/Naming_Utils.cpp:
        * orbsvcs/orbsvcs/Property/CosPropertyService_i.cpp:
        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/DynSched.cpp:
        * orbsvcs/orbsvcs/Sched/SchedEntry.cpp:
        * orbsvcs/orbsvcs/Sched/Scheduler.cpp:
        * orbsvcs/orbsvcs/Sched/Scheduler_Generic.cpp:
        * orbsvcs/orbsvcs/Sched/Strategy_Scheduler.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_Interpreter.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Database.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators_T.cpp:
        * orbsvcs/orbsvcs/Trader/Service_Type_Repository.cpp:
        * orbsvcs/orbsvcs/Trader/Trader.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_T.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.cpp:
        * orbsvcs/tests/AVStreams/benchmark/child.cpp:
        * orbsvcs/tests/AVStreams/benchmark/client.cpp:
        * orbsvcs/tests/AVStreams/benchmark/server.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/client/vcr.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/24bit.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/2x2.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/Command_Handler.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/ab.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/audio.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/ctr.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/decoders.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/file.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/fs2.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/fs2fast.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/fs4.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/global.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/gray.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/hybrid.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/hybriderr.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/info.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/jrevdct.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/mb_ordered.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/mono.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/motionvector.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/ordered.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/ordered2.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/para.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/parseblock.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/prog.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/ui.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/util.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/util32.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/vb.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/vd.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/video.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_client/vp.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_mib/mibButton.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_mib/mibDrawArea.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_mib/mibFrame.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_mib/mibLabel.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_mib/mibList.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_mib/mibMenu.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_mib/mibRadioBox.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_mib/mibScale.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_mib/mibScrollBar.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_mib/mibTextBig.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_mib/mibTextBox.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_mib/mibToggle.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_mib/mibload.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_server/Audio_Control_State.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_server/Audio_Control_i.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_server/Audio_Server.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_server/Globals.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_server/Video_Control_State.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_server/Video_Control_i.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_server/Video_Server.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_server/as.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_server/las.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_server/lvs.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_server/vs.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_shared/com.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_shared/fileio.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_shared/filters.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_shared/routine.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/mpeg_shared/sendpt.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/server/Machine_Properties.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/server/Property_Exporter.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/server/Video_Repository.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/server/as.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/server/augmented_server.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/server/server.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/server/vcrs.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/server/vs.cpp:
        * orbsvcs/tests/AVStreams/server_discovery/Server_Discovery.cpp:
        * orbsvcs/tests/AVStreams/server_discovery/Trader_Client.cpp:
        * orbsvcs/tests/AVStreams/server_discovery/main.cpp:
        * orbsvcs/tests/AVStreams/sfp/client.cpp:
        * orbsvcs/tests/Concurrency/CC_client.cpp:
        * orbsvcs/tests/Concurrency/CC_command.cpp:
        * orbsvcs/tests/Concurrency/CC_naming_service.cpp:
        * orbsvcs/tests/Concurrency/CC_test_utils.cpp:
        * orbsvcs/tests/Concurrency/CC_tests.cpp:
        * orbsvcs/tests/Concurrency/NS_client.cpp:
        * orbsvcs/tests/Concurrency/tmplinst.cpp:
        * orbsvcs/tests/CosPropertyService/client.cpp:
        * orbsvcs/tests/CosPropertyService/main.cpp:
        * orbsvcs/tests/CosPropertyService/server.cpp:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Data.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.cpp:
        * orbsvcs/tests/Event_Latency/Event_Latency.cpp:
        * orbsvcs/tests/ImplRepo/client.cpp:
        * orbsvcs/tests/ImplRepo/client_impl.cpp:
        * orbsvcs/tests/ImplRepo/ir_server.cpp:
        * orbsvcs/tests/ImplRepo/ir_server_impl.cpp:
        * orbsvcs/tests/ImplRepo/ir_simple_object_impl.cpp:
        * orbsvcs/tests/ImplRepo/server.cpp:
        * orbsvcs/tests/ImplRepo/server_impl.cpp:
        * orbsvcs/tests/ImplRepo/simple_object_impl.cpp:
        * orbsvcs/tests/Logger/Logging_Test.cpp:
        * orbsvcs/tests/Logger/Logging_Test_i.cpp:
        * orbsvcs/tests/Logger/client.cpp:
        * orbsvcs/tests/Logger/client_i.cpp:
        * orbsvcs/tests/Logger/server.cpp:
        * orbsvcs/tests/Logger/server_i.cpp:
        * orbsvcs/tests/Naming/ns_tree.cpp:
        * orbsvcs/tests/Property/client.cpp:
        * orbsvcs/tests/Property/main.cpp:
        * orbsvcs/tests/Property/server.cpp:
        * orbsvcs/tests/Sched/DynSched_Test.cpp:
        * orbsvcs/tests/Sched_Conf/Sched_Conf.cpp:
        * orbsvcs/tests/Simple_Naming/client.cpp:
        * orbsvcs/tests/Simulator/DOVEMIB/AnyAnalyser.cpp:
        * orbsvcs/tests/Simulator/DOVEMIB/DOVEMIB.cpp:
        * orbsvcs/tests/Simulator/DOVEMIB/Node.cpp:
        * orbsvcs/tests/Simulator/DOVEMIB/PrintVisitor.cpp:
        * orbsvcs/tests/Simulator/DOVEMIB/any_test_i.cpp:
        * orbsvcs/tests/Simulator/DOVEMIB/clnt.cpp:
        * orbsvcs/tests/Simulator/DOVEMIB/svr.cpp:
        * orbsvcs/tests/Simulator/Event_Supplier/DOVE_Supplier.cpp:
        * orbsvcs/tests/Simulator/Event_Supplier/Event_Con.cpp:
        * orbsvcs/tests/Simulator/Event_Supplier/Event_Sup.cpp:
        * orbsvcs/tests/Trading/Offer_Exporter.cpp:
        * orbsvcs/tests/Trading/Offer_Importer.cpp:
        * orbsvcs/tests/Trading/Service_Type_Exporter.cpp:
        * orbsvcs/tests/Trading/Simple_Dynamic.cpp:
        * orbsvcs/tests/Trading/TT_Info.cpp:
        * orbsvcs/tests/Trading/colocated_test.cpp:
        * orbsvcs/tests/Trading/export_test.cpp:
        * orbsvcs/tests/Trading/import_test.cpp:
        Added ACE_RCSID to these files.

Mon Aug  3 12:08:15 1998  Gonzalo Diethelm  <gonzo@tango.cs.wustl.edu>

        * TAO_IDL/tao_idl.cpp:
        * TAO_IDL/ast/ast_argument.cpp:
        * TAO_IDL/ast/ast_array.cpp:
        * TAO_IDL/ast/ast_attribute.cpp:
        * TAO_IDL/ast/ast_check.cpp:
        * TAO_IDL/ast/ast_concrete_type.cpp:
        * TAO_IDL/ast/ast_constant.cpp:
        * TAO_IDL/ast/ast_decl.cpp:
        * TAO_IDL/ast/ast_enum.cpp:
        * TAO_IDL/ast/ast_enum_val.cpp:
        * TAO_IDL/ast/ast_exception.cpp:
        * TAO_IDL/ast/ast_expression.cpp:
        * TAO_IDL/ast/ast_field.cpp:
        * TAO_IDL/ast/ast_generator.cpp:
        * TAO_IDL/ast/ast_interface.cpp:
        * TAO_IDL/ast/ast_interface_fwd.cpp:
        * TAO_IDL/ast/ast_module.cpp:
        * TAO_IDL/ast/ast_native.cpp:
        * TAO_IDL/ast/ast_operation.cpp:
        * TAO_IDL/ast/ast_predefined_type.cpp:
        * TAO_IDL/ast/ast_recursive.cpp:
        * TAO_IDL/ast/ast_redef.cpp:
        * TAO_IDL/ast/ast_root.cpp:
        * TAO_IDL/ast/ast_sequence.cpp:
        * TAO_IDL/ast/ast_string.cpp:
        * TAO_IDL/ast/ast_structure.cpp:
        * TAO_IDL/ast/ast_type.cpp:
        * TAO_IDL/ast/ast_typedef.cpp:
        * TAO_IDL/ast/ast_union.cpp:
        * TAO_IDL/ast/ast_union_branch.cpp:
        * TAO_IDL/ast/ast_union_label.cpp:
        * TAO_IDL/be/be_args.cpp:
        * TAO_IDL/be/be_argument.cpp:
        * TAO_IDL/be/be_array.cpp:
        * TAO_IDL/be/be_attribute.cpp:
        * TAO_IDL/be/be_codegen.cpp:
        * TAO_IDL/be/be_constant.cpp:
        * TAO_IDL/be/be_decl.cpp:
        * TAO_IDL/be/be_enum.cpp:
        * TAO_IDL/be/be_enum_val.cpp:
        * TAO_IDL/be/be_exception.cpp:
        * TAO_IDL/be/be_expression.cpp:
        * TAO_IDL/be/be_factory.cpp:
        * TAO_IDL/be/be_field.cpp:
        * TAO_IDL/be/be_generator.cpp:
        * TAO_IDL/be/be_helper.cpp:
        * TAO_IDL/be/be_init.cpp:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_interface_fwd.cpp:
        * TAO_IDL/be/be_interpretive.cpp:
        * TAO_IDL/be/be_module.cpp:
        * TAO_IDL/be/be_native.cpp:
        * TAO_IDL/be/be_operation.cpp:
        * TAO_IDL/be/be_predefined_type.cpp:
        * TAO_IDL/be/be_produce.cpp:
        * TAO_IDL/be/be_root.cpp:
        * TAO_IDL/be/be_scope.cpp:
        * TAO_IDL/be/be_sequence.cpp:
        * TAO_IDL/be/be_state.cpp:
        * TAO_IDL/be/be_state_argument.cpp:
        * TAO_IDL/be/be_state_array.cpp:
        * TAO_IDL/be/be_state_attribute.cpp:
        * TAO_IDL/be/be_state_exception.cpp:
        * TAO_IDL/be/be_state_operation.cpp:
        * TAO_IDL/be/be_state_sequence.cpp:
        * TAO_IDL/be/be_state_structure.cpp:
        * TAO_IDL/be/be_state_typedef.cpp:
        * TAO_IDL/be/be_state_union.cpp:
        * TAO_IDL/be/be_string.cpp:
        * TAO_IDL/be/be_structure.cpp:
        * TAO_IDL/be/be_sunsoft.cpp:
        * TAO_IDL/be/be_type.cpp:
        * TAO_IDL/be/be_typedef.cpp:
        * TAO_IDL/be/be_union.cpp:
        * TAO_IDL/be/be_union_branch.cpp:
        * TAO_IDL/be/be_union_label.cpp:
        * TAO_IDL/be/be_visitor.cpp:
        * TAO_IDL/be/be_visitor_argument.cpp:
        * TAO_IDL/be/be_visitor_array.cpp:
        * TAO_IDL/be/be_visitor_attribute.cpp:
        * TAO_IDL/be/be_visitor_constant.cpp:
        * TAO_IDL/be/be_visitor_context.cpp:
        * TAO_IDL/be/be_visitor_decl.cpp:
        * TAO_IDL/be/be_visitor_enum.cpp:
        * TAO_IDL/be/be_visitor_exception.cpp:
        * TAO_IDL/be/be_visitor_field.cpp:
        * TAO_IDL/be/be_visitor_interface.cpp:
        * TAO_IDL/be/be_visitor_interface_fwd.cpp:
        * TAO_IDL/be/be_visitor_module.cpp:
        * TAO_IDL/be/be_visitor_operation.cpp:
        * TAO_IDL/be/be_visitor_root.cpp:
        * TAO_IDL/be/be_visitor_scope.cpp:
        * TAO_IDL/be/be_visitor_sequence.cpp:
        * TAO_IDL/be/be_visitor_structure.cpp:
        * TAO_IDL/be/be_visitor_typecode.cpp:
        * TAO_IDL/be/be_visitor_typedef.cpp:
        * TAO_IDL/be/be_visitor_union.cpp:
        * TAO_IDL/be/be_visitor_union_branch.cpp:
        * TAO_IDL/be/be_visitor_argument/arglist.cpp:
        * TAO_IDL/be/be_visitor_argument/argument.cpp:
        * TAO_IDL/be/be_visitor_argument/docall_cs.cpp:
        * TAO_IDL/be/be_visitor_argument/marshal_ss.cpp:
        * TAO_IDL/be/be_visitor_argument/post_docall_cs.cpp:
        * TAO_IDL/be/be_visitor_argument/post_marshal_ss.cpp:
        * TAO_IDL/be/be_visitor_argument/post_upcall_ss.cpp:
        * TAO_IDL/be/be_visitor_argument/pre_docall_cs.cpp:
        * TAO_IDL/be/be_visitor_argument/pre_upcall_ss.cpp:
        * TAO_IDL/be/be_visitor_argument/upcall_ss.cpp:
        * TAO_IDL/be/be_visitor_argument/vardecl_ss.cpp:
        * TAO_IDL/be/be_visitor_array/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_array/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/array.cpp:
        * TAO_IDL/be/be_visitor_array/array_ch.cpp:
        * TAO_IDL/be/be_visitor_array/array_ci.cpp:
        * TAO_IDL/be/be_visitor_array/array_cs.cpp:
        * TAO_IDL/be/be_visitor_attribute/attribute.cpp:
        * TAO_IDL/be/be_visitor_constant/constant_ch.cpp:
        * TAO_IDL/be/be_visitor_constant/constant_cs.cpp:
        * TAO_IDL/be/be_visitor_enum/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_enum/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_enum/enum_ch.cpp:
        * TAO_IDL/be/be_visitor_enum/enum_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/ctor_assign.cpp:
        * TAO_IDL/be/be_visitor_exception/exception.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_ch.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_ci.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/exception_ctor.cpp:
        * TAO_IDL/be/be_visitor_field/field_ch.cpp:
        * TAO_IDL/be/be_visitor_field/field_ci.cpp:
        * TAO_IDL/be/be_visitor_field/field_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/collocated_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/collocated_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/interface.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ch.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ci.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_si.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/tie_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/tie_si.cpp:
        * TAO_IDL/be/be_visitor_interface_fwd/interface_fwd_ch.cpp:
        * TAO_IDL/be/be_visitor_interface_fwd/interface_fwd_ci.cpp:
        * TAO_IDL/be/be_visitor_module/any_op.cpp:
        * TAO_IDL/be/be_visitor_module/module.cpp:
        * TAO_IDL/be/be_visitor_module/module_ch.cpp:
        * TAO_IDL/be/be_visitor_module/module_sh.cpp:
        * TAO_IDL/be/be_visitor_operation/arglist.cpp:
        * TAO_IDL/be/be_visitor_operation/argument.cpp:
        * TAO_IDL/be/be_visitor_operation/collocated_sh.cpp:
        * TAO_IDL/be/be_visitor_operation/collocated_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/exceptlist_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_ch.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_sh.cpp:
        * TAO_IDL/be/be_visitor_operation/operation_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype_assign_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype_docall_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype_marshal_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype_post_docall_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype_post_upcall_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype_pre_docall_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype_return_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype_vardecl_cs.cpp:
        * TAO_IDL/be/be_visitor_operation/rettype_vardecl_ss.cpp:
        * TAO_IDL/be/be_visitor_operation/tie_sh.cpp:
        * TAO_IDL/be/be_visitor_operation/tie_si.cpp:
        * TAO_IDL/be/be_visitor_root/any_op.cpp:
        * TAO_IDL/be/be_visitor_root/root.cpp:
        * TAO_IDL/be/be_visitor_root/root_ch.cpp:
        * TAO_IDL/be/be_visitor_root/root_ci.cpp:
        * TAO_IDL/be/be_visitor_root/root_cs.cpp:
        * TAO_IDL/be/be_visitor_root/root_sh.cpp:
        * TAO_IDL/be/be_visitor_root/root_si.cpp:
        * TAO_IDL/be/be_visitor_root/root_ss.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/buffer_type.cpp:
        * TAO_IDL/be/be_visitor_sequence/elemtype.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_obj_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_bounded_str_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_object_manager_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_obj_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_base.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_ci.cpp:
        * TAO_IDL/be/be_visitor_sequence/sequence_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/structure.cpp:
        * TAO_IDL/be/be_visitor_structure/structure_ch.cpp:
        * TAO_IDL/be/be_visitor_structure/structure_ci.cpp:
        * TAO_IDL/be/be_visitor_structure/structure_cs.cpp:
        * TAO_IDL/be/be_visitor_typecode/typecode_decl.cpp:
        * TAO_IDL/be/be_visitor_typecode/typecode_defn.cpp:
        * TAO_IDL/be/be_visitor_typedef/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_typedef/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_ch.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_ci.cpp:
        * TAO_IDL/be/be_visitor_typedef/typedef_cs.cpp:
        * TAO_IDL/be/be_visitor_union/any_op_ch.cpp:
        * TAO_IDL/be/be_visitor_union/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_union/discriminant_ch.cpp:
        * TAO_IDL/be/be_visitor_union/discriminant_ci.cpp:
        * TAO_IDL/be/be_visitor_union/discriminant_cs.cpp:
        * TAO_IDL/be/be_visitor_union/union.cpp:
        * TAO_IDL/be/be_visitor_union/union_ch.cpp:
        * TAO_IDL/be/be_visitor_union/union_ci.cpp:
        * TAO_IDL/be/be_visitor_union/union_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/private_ch.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_access_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_assign_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_ch.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_ci.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_cs.cpp:
        * TAO_IDL/be/be_visitor_union_branch/public_reset_cs.cpp:
        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/driver/drv_fork.cpp:
        * TAO_IDL/driver/drv_init.cpp:
        * TAO_IDL/driver/drv_link.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
        * TAO_IDL/driver/drv_private.cpp:
        * TAO_IDL/fe/fe_declarator.cpp:
        * TAO_IDL/fe/fe_extern.cpp:
        * TAO_IDL/fe/fe_init.cpp:
        * TAO_IDL/fe/fe_interface_header.cpp:
        * TAO_IDL/fe/fe_private.cpp:
        * TAO_IDL/narrow/narrow.cpp:
        * TAO_IDL/util/utl_decllist.cpp:
        * TAO_IDL/util/utl_error.cpp:
        * TAO_IDL/util/utl_exceptlist.cpp:
        * TAO_IDL/util/utl_exprlist.cpp:
        * TAO_IDL/util/utl_global.cpp:
        * TAO_IDL/util/utl_identifier.cpp:
        * TAO_IDL/util/utl_idlist.cpp:
        * TAO_IDL/util/utl_indenter.cpp:
        * TAO_IDL/util/utl_labellist.cpp:
        * TAO_IDL/util/utl_list.cpp:
        * TAO_IDL/util/utl_namelist.cpp:
        * TAO_IDL/util/utl_scope.cpp:
        * TAO_IDL/util/utl_stack.cpp:
        * TAO_IDL/util/utl_string.cpp:
        * TAO_IDL/util/utl_strlist.cpp:
        * TAO_IDL/util/utl_tmpl/utl_decllist.cpp:
        * TAO_IDL/util/utl_tmpl/utl_exceptlist.cpp:
        * TAO_IDL/util/utl_tmpl/utl_exprlist.cpp:
        * TAO_IDL/util/utl_tmpl/utl_idlist.cpp:
        * TAO_IDL/util/utl_tmpl/utl_labellist.cpp:
        * TAO_IDL/util/utl_tmpl/utl_list.cpp:
        * TAO_IDL/util/utl_tmpl/utl_namelist.cpp:
        * TAO_IDL/util/utl_tmpl/utl_strlist.cpp:
        Added ACE_RCSID to these files.

Mon Aug  3 09:27:46 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
          Bounded octet sequences do not have the Message_Block
          constructor, but we were generating it. Thanks to John Geiss
          <kim_john@sprynet.com> for reporting this problem.

Fri Jul 31 20:34:27 1998  Gonzalo Diethelm  <gonzo@tango.cs.wustl.edu>

        * tao/Any.cpp:
        * tao/CDR.cpp:
        * tao/Client_Strategy_Factory.cpp:
        * tao/Connect.cpp:
        * tao/CurrentC.cpp:
        * tao/CurrentS.cpp:
        * tao/Exception.cpp:
        * tao/Forwarding_Servant.cpp:
        * tao/GIOP.cpp:
        * tao/IIOP_Interpreter.cpp:
        * tao/IIOP_ORB.cpp:
        * tao/IIOP_Object.cpp:
        * tao/Invocation.cpp:
        * tao/Marshal.cpp:
        * tao/NVList.cpp:
        * tao/ORB.cpp:
        * tao/ORB_Core.cpp:
        * tao/ORB_Strategies_T.cpp:
        * tao/Object.cpp:
        * tao/Object_KeyC.cpp:
        * tao/Object_Table.cpp:
        * tao/Operation_Table.cpp:
        * tao/POA.cpp:
        * tao/POAC.cpp:
        * tao/POAS.cpp:
        * tao/PolicyC.cpp:
        * tao/PolicyS.cpp:
        * tao/Principal.cpp:
        * tao/Request.cpp:
        * tao/Sequence.cpp:
        * tao/Sequence_T.cpp:
        * tao/Servant_Base.cpp:
        * tao/Server_Request.cpp:
        * tao/Server_Strategy_Factory.cpp:
        * tao/Stub.cpp:
        * tao/TAO.cpp:
        * tao/TAO_Internal.cpp:
        * tao/Typecode.cpp:
        * tao/Typecode_Constants.cpp:
        * tao/Union.cpp:
        * tao/append.cpp:
        * tao/debug.cpp:
        * tao/decode.cpp:
        * tao/deep_free.cpp:
        * tao/default_client.cpp:
        * tao/default_server.cpp:
        * tao/encode.cpp:
        * tao/params.cpp:
        * tao/poa_T.cpp:
        * tao/skip.cpp:
        * tao/t-sizes.cpp:
        Added ACE_RCSID to these files.

Fri Jul 31 15:34:55 1998 Jeff Parsons <jp4@cs.wustl.edu>

      * Param_Test/bd_string.cpp:
      * Param_test/ub_string.cpp:
        I had been playing around and left the files in a state
        where dii wouldn't work - undid my oversight.

Fri Jul 31 15:10:12 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Any.h:
        * tao/Any.cpp:
        * tao/decode.cpp:
          When decoding Any's the ORB was not releasing the memory already
          held by the Any.

Fri Jul 31 13:51:46 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/tests/AVStreams/mpeg/source/server/Machine_Properties.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/server/Property_Exporter.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/server/Video_Repository.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/server/Video_Repository.h:
        * orbsvcs/tests/AVStreams/mpeg/source/server/Video_Repository.idl:
        * orbsvcs/tests/AVStreams/mpeg/source/server/augmented_server.cpp:
        * orbsvcs/tests/AVStreams/mpeg/source/server/augmented_server.h:
        Added comments and made other cosmetic changes.

        * orbsvcs/tests/AVStreams/server_discovery/Makefile:
        * orbsvcs/tests/AVStreams/server_discovery/Queue.java:
        * orbsvcs/tests/AVStreams/server_discovery/README:
        * orbsvcs/tests/AVStreams/server_discovery/Server_0005fDiscovery_0005fUtil.h:
        * orbsvcs/tests/AVStreams/server_discovery/Server_Discovery.cpp:
        * orbsvcs/tests/AVStreams/server_discovery/Server_Discovery.java:
        * orbsvcs/tests/AVStreams/server_discovery/Server_Discovery_Browser.java:
        * orbsvcs/tests/AVStreams/server_discovery/Server_Discovery_Perf.java:
        * orbsvcs/tests/AVStreams/server_discovery/Server_Discovery_Selection.java:
        * orbsvcs/tests/AVStreams/server_discovery/Server_Discovery_Util.java:
        * orbsvcs/tests/AVStreams/server_discovery/Strip_Chart.java:
        * orbsvcs/tests/AVStreams/server_discovery/Trader_Client.cpp:
        * orbsvcs/tests/AVStreams/server_discovery/Trader_Client.h:
        * orbsvcs/tests/AVStreams/server_discovery/main.cpp:
        This is the A/V Demo on the client side. The README file in this
        directory details its design and current status, and includes a
        description of the work that remains.

Fri Jul 31 14:06:22 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * tao_idl/be/be_visitor_argument/post_upcal_ss.cpp:
          added an action to visit_predefined_type for the
          PT_pseudo case (OUT arg) that fixes the typecode
          sii param test.

Fri Jul 31 07:58:36 1998  Aniruddha Gokhale  <gokhale@mambo.cs.wustl.edu>

        * TAO_IDL/be/be_visitor_union_branch/{public_ci,
        public_assign_cs}.cpp: The code for string members was using an
        incorrect, undefined type for a _var variable. We now use
        CORBA::String_var instead. Thanks to Kirk Ellett <kellet@mdc.com>
        for reporting this problem.

        * doc/releasenotes/index.html: Updated to indicate that anonymous
        arrays are suppored inside structs but not inside unions.

Thu Jul 30 17:05:09 1998  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.2.1 released.

Thu Jul 30 16:40:10 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/tests/EC_Multiple/run_test.pl:
        * orbsvcs/tests/EC_Throughput/run_test.pl:
        * orbsvcs/tests/Event_Latency/run_test.pl:
        * orbsvcs/tests/Simple_Naming/run_test.pl:
        * tests/Cubit/TAO/DII_Cubit/run_test.pl:
        * tests/Cubit/TAO/IDL_Cubit/run_test.pl:
        * tests/Cubit/TAO/MT_Cubit/run_test.pl:
        * tests/NestedUpcall/MT_Client_Test/run_test.pl:
        * tests/NestedUpcall/Triangle_Test/run_test.pl:
        * tests/Param_Test/run_test.pl:
        * tests/Quoter/run_test.pl:
        * tests/Simple/run_test.pl:
          Removed the last calls to system("del") and minor cosmetic
          fixes.

Thu Jul 30 15:38:52 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/orbsvcs/Naming/Naming_Utils.cpp
        * orbsvcs/orbsvcs/Naming/CosNaming_i.cpp:
        * orbsvcs/orbsvcs/IOR_Multicast.cpp:
        * tao/ORB.cpp
          Made some debugging messages dependent on
          TAO_debug_level.

Thu Jul 30 13:46:38 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/tests/Concurrency/Makefile:
          The CC_command.tab.{h,cpp} and lex.CC_command.cpp files are
          distributed in the TAO release, there is no need for the users
          to generate them. We do include targets to warn of potentially
          outdated files, but this is only for our own purposes.

        * orbsvcs/tests/Concurrency/CC_command.y:
        * orbsvcs/tests/Concurrency/CC_command.tab.h:
        * orbsvcs/tests/Concurrency/CC_command.tab.cpp:
        * orbsvcs/tests/Concurrency/CC_command.tab.cpp.diff:
          Generated using a modified version of yacc, that produces more
          portable code.

Thu Jul 30 13:07:00 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/Makefile:
        * orbsvcs/Logging_Service/Makefile: New file. Makefile for the
        Logging service.

        * orbsvcs/Logging_Service/Logging_Service_i.{h,cpp}: New files,
        renamed from tests/Logger/server_i.{h,cpp}. Migrated from a test
        to a service. Added ability to name the factory from the command
        line.

        * orbsvcs/tests/Logger/Makefile: Eliminated server
        compilation. Changed client name to Logging_Test

        * orbsvcs/tests/Logger/Logging_Test_i.cpp: New file, renamed from
        tests/Logger/client_i.cpp. Altered includes to reflect transition
        of server from test server to actual service.

        * orbsvcs/tests/Logger/Logging_Test_i.h: New file, renamed from
        tests/Logger/client_i.h. Added multiple include protection.

        * orbsvcs/tests/Logger/Logging_Test.cpp: New file, renamed from
        tests/Logger/server.cpp. Removed some debugging code.

        * orbsvcs/tests/Logger/Logging_Test.cpp: New file, renamed from
        tests/Logger/client.cpp. Edited to reflect changed filenames.


Thu Jul 30 00:39:10 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * orbsvcs/tests/Concurrency/{CC_command.tab,lex.CC_command}.cpp.diff:
          Updated these files to prevent complains from lex and yacc.
          Thanks to J. Russell Noseworthy <rnosewor@objectsciences.com>
          for reporting this fix.

Wed Jul 29 18:46:46 1998  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * orbsvcs/tests/Concurrency: Touched the lex and yacc files so
          that Make won't try to remake their *.cpp files.  This is just a
          temporary fix until we get this working correctly.  Thanks to
          J. Russell Noseworthy <rnosewor@objectsciences.com> for
          reporting this and to Carlos for suggesting the fix.

Wed Jul 29 18:46:46 1998  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.2 released.

Wed Jul 29 13:55:20 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/Connect.cpp: Fixed indentation.

        * tao/TAO_Internal.cpp (close_services): service_open_count_
          should be reduced by one.

Wed Jul 29 12:32:48 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Param_Test/run_test.pl:
        * tests/NestedUpcall/Triangle_Test/run_test.pl:
        * tests/NestedUpcall/MT_Client_Test/run_test.pl:
        * tests/Simple/run_test.pl:
        * tests/Cubit/TAO/IDL_Cubit/run_test.pl:
        * tests/Cubit/TAO/DII_Cubit/run_test.pl:
          Use unlink instead of system("rm") or system("del").

        * tests/Cubit/TAO/Makefile:
        * tests/Cubit/TAO/DII_Cubit/Makefile:
          Added DII_Cubit to the default compilation.

        * tests/Cubit/TAO/MT_Cubit/run_test.pl:
          Added a one-button test.

        * tests/NestedUpcall/MT_Client_Test/client.h:
        * tests/NestedUpcall/MT_Client_Test/client.cpp:
          Instead of using the thread id to decide which server we use
          each client thread is assigned a number, even threads choose the
          first server, odd threads the second one.  The thread id
          approach was non-portable.

        * tests/POA/RootPOA/README:
        * tests/POA/FindPOA/README:
        * tests/POA/NewPOA/README:
          Updated this files, the tests don't print warning messages about
          the svc.conf file anymore (actually the ORB doesn't).

Wed Jul 29 08:58:01 1998  Aniruddha Gokhale  <gokhale@mambo.cs.wustl.edu>

        * TAO_IDL/be/be_visitor_field/{field_ci, field_cs}.cpp: Added code
        to handle arrays. I had forgotten to invoke the code generator for
        arrays that are struct members. I had only handled the header file
        but not the inline file and the implementation file. The visitor
        that does this was already done, but it was not getting
        invoked. Thanks to Andreas Geisler
        <andreas.geisler@erls.siemens.de> for reporting this problem.

Wed Jul 29 06:45:54 1998  David L. Levine  <levine@cs.wustl.edu>

        * tests/NestedUpcall/MT_Client_Test/ local_server.cpp (MT_Server):
          reordered initializers to match declaration order.

        * orbsvcs/tests/EC_Multiple/EC_Multiple.h: allow up to 1024 each
          consumers and suppliers.

        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp (main): dynamically
          allocate the Test_ECG instance so that a large stack space isn't
          required.

        * orbsvcs/tests/EC_Multiple/Scheduler_Runtime_Dynamic.h,
          run_dynamic,gen_dynamic,dyn_plot:  added 1000 low-priority
          consumers.  Used these versions for DASC-98 paper.

Tue Jul 28 23:01:21 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * orbsvcs/tests/Logger/runtests.pl: Removed this since it has been
          replaced.

        * orbsvcs/tests/Logger/run_test.pl: Cleaned this script up by
          removing the code that wasn't needed.

Tue Jul 28 16:54:00 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * TAO/tests/Param_Test/bd_struct_seq.cpp: Sequence length
          initialization didn't work, so zero-length sequence always
          returned "correct" results in sii call. Fixed it so the
          sequence length is actually initialized, gets correct results
          in sii test, correct with dii as well, but request crashes on
          release, same as for var_struct. Still looking into that.

Tue Jul 28 16:43:22 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/tests/Event_Latency/run_test.pl:
        * orbsvcs/tests/EC_Multiple/run_test.pl:
        * orbsvcs/tests/EC_Throughput/run_test.pl:
        * orbsvcs/tests/Simple_Naming/run_test.pl:
          Added and updated the one-button tests for this directories.

        * tests/Param_Test/bd_string.cpp:
          The name of the test was wrong.

Tue Jul 28 16:25:11 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * tao/Sequence_T.i : Reversed the order of 2 args in
          the base class call of one of the
          constructors for TAO_Bounded_Sequence<T,MAX> and added a line to
          this and to the default constructor for TAO_Bounded_Sequence<T,MAX>
          to allocate the buffer to MAX size upon instantiation.

        * tao_idl/be/be_visitor/gen_bounded_sequence_ch.cpp:
        * tao_idl/be/be_visitor/gen_bounded_str_sequence_ch.cpp:
        * tao_idl/be/be_visitor/gen_bounded_obj_sequence_ch.cpp:
          Made the changes corresponding to the changes above in
          Sequence_T.i.

Tue Jul 28 16:22:28 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/EC_Multiple/Scheduler_Runtime_Dynamic.h:
          removed ACE_Scheduler_Factory::use_runtime () call, so that
          this header can be included by EC_Multiple.cpp even for
          local (config) runs.

        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp: added
          ACE_Scheduler_Factory::use_runtime () calls, when in
          runtime mode only.  Also, added printouts just before
          registering each supplier and consumer, to help debugging.

        * tests/NestedUpcall/MT_Client_Test/client.cpp (init): use of
          ACE_thread_t as an unsigned long requires a reinterpret_cast.

Tue Jul 28 15:07:32 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/Hardpack/IDL_Cubit/cubit.idl:
                Added cube_oneway and cube_void operations.
        * tests/Cubit/Hardpack/IDL_Cubit/cubit_impl.{h,cpp}:
        * tests/Cubit/Hardpack/IDL_Cubit/client_i.{h,cpp}:
                Added implementation code for cube_oneway and cube_void.

Tue Jul 28 14:49:52 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * TAO-INSTALL.html (HREF): The paragraph "A note on Make" was
          duplicated.  Thanks to Jeff McDaniel <jsmcdani@gte.net>
          for reporting this.

Tue Jul 28 13:49:01 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/NestedUpcall/Makefile:
          Added MT_Client_Test.

        * tests/NestedUpcall/MT_Client_Test/Makefile:
          Updated dependencies.

Tue Jul 28 11:09:35 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.cpp :
                Removed unnecessary commented code.
        * tests/Cubit/TAO/MT_Cubit/Task_Client.cpp:
                Added argument processing code for option "-r" which
                enables the thread-per-rate test.
        * tests/Cubit/TAO/MT_Cubit/client.cpp:
                Added code so that the main thread waits on a condition
                variable after activating the CB_20_HZ_CONSUMER thread so
                that it finishes the argument processing.

Tue Jul 28 10:17:18 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/EC_Multiple/Scheduler_Runtime_Dynamic.h:
          removed static storage class qualifier from declaration of
          scheduler_factory_setup.  It's the right thing to do, but
          with it, DEC cxx complains about an unused variable.

        * orbsvcs/orbsvcs/Scheduler_Factory.cpp (footer): removed
          "static" storage class qualifier so that it's not inserted
          into generated code.

Tue Jul 28 10:08:33 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/LifeCycle_service/Factory_Trader.cpp:
          Addressed one cxx and one g++ error.

Mon Jul 27 15:23:33 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/ORB.cpp (open): Changed the open_called_ flag from an atomic
          op to a normal int. Also added the open_lock_ mutex to protect
          the entire open routine. Now we do a double check instead of
          checking the simply check the open_called_ atomic op.

          (create_stub_object): Added a new method to the ORB that makes
          sure that the open routine has been called before creating any
          stubs.

        * tao/ORB_Core.cpp (init): There is no need to call ORB::open if
          the port is 0.  It will automagically be called when the first
          stub is created.

        * tao/Servant_Base.cpp (_create_stub): Made sure to call the new
          ORB method when creating stubs.

        * tao/orbconf.h (TAO_DEFAULT_SERVER_PORT): Changed the default
          port to 0.

        * tests/NestedUpcall/Reactor/client.cpp (run):
        * tests/NestedUpcall/MT_Client_Test/local_server.cpp (run_ORB_briefly):
        * tests/NestedUpcall/Triangle_Test/initiator.cpp (run):

          No need to call orb->run (ACE_Time_Value::zero)

Mon Jul 27 17:30:53 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * orbsvcs/LifeCycle_Service/Factory_Trader.{h,cpp}: Enabled all
          the functionality by default since the Trading Service is now
          in good shape.

        * tests/Quoter/client.cpp:
        * tests/Quoter/Generic_Factory.cpp:
        * tests/Quoter/run_test.pl:
          Enabled all the LifeCycle functionality and all looks good on
          NT.

        * TAO_IDL/tao_idl.dsp: Release version now has debug information
          in a separate file (or else it doesn't work at all), and the
          Release version of the compiler is placed in the Release
          subdirectory.  This will most likely be teh format we will use
          for executables: the debug version in .\ and the release in
          .\Release\ (both with the same name).

Mon Jul 27 16:59:14 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/orbsvcs/Naming/Naming_Utils.{h,cpp}: Added minor
          formating changes
        * orbsvcs/tests/Logger/README: Added minor formatting changes
        * orbsvcs/tests/Logger/client.cpp: Added minor formatting changes
        * orbsvcs/tests/Logger/server.cpp: Added minor formatting changes
        * orbscvs/tests/Logger/client_i.{h,cpp}: Added minor formatting
          changes
        * orbsvcs/tests/Logger/server_i.{h,cpp}: Added minor formatting
          changes
        * orbsvcs/tests/Logger/run_test.pl: Fixed a small error where
          script tried to kill a non-existant process.

Mon Jul 27 17:15:25 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/EC_Multiple/dyn_plot: added this perl script,
          which was used to generate plots for the DASC '98 paper.

Mon Jul 27 17:11:07 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Trader_T.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Constraint_Visitor.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.cpp:
          Fixed compiler errors with g++ 2.7.2. Thanks to good ol' Sergio
          <sergiof@microsoft.com> for pointing this out.

Mon Jul 27 16:55:18 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/NestedUpcall/MT_Client_Test/run_test.pl:
        * tests/NestedUpcall/Reactor/run_test.pl:
        * tests/NestedUpcall/Triangle_Test/run_test.pl:
        * tests/Simple/run_test.pl:
        * tests/Cubit/TAO/DII_Cubit/run_test.pl:
        * tests/Cubit/TAO/IDL_Cubit/run_test.pl:
          Capture the client status and return it, also wait (or kill) the
          server before exit.

        * tests/Param_Test/results.h:
        * tests/Param_Test/results.cpp:
        * tests/Param_Test/client.cpp:
          Print the test name *before* attempting to run it, so the output
          is visible even on a crash. Also print an easy to grep message
          on test failure.

        * tests/Param_Test/run_test.pl:
          By default use ORBport 0 and run the tests 5 times (just for
          luck).

        * orbsvcs/orbsvcs/Event/Event_Channel.h:
          Made the push() methods on the Supplier_Module and the
          Consumer_Module virtual, so users can provide their own.

Mon Jul 27 1:26:44 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * TAO/tests/Param_Test/var_struct{.h,.cpp}: Committed my
          changes so far so others can check it out. DII version
          doesn't work yet.

Mon Jul 27 12:44:12 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/Invocation.cpp (start): Modified the code in
          TAO_ARL_USES_SAME_CONNECTOR_PORT so the connector always binds
          to the host IP address specified in the ORB Core.  Thanks to
          Fred Kuhns <fredk@arl.wustl.edu> for pointing this out.

Sun Jul 26 21:01:09 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.cpp:
        * tests/Cubit/TAO/MT_Cubit/client.cpp:
                Added preliminary argument processing code so
        that we can allocate memory for data structures for the
        number of threads specified on the command line.

Sun Jul 26 16:58:54 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.cpp : Fixed the argument
        processing of  low priority servants.

Sun Jul 26 16:02:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * tao/ORB_Core.cpp: Removed a line in unset_leader_wake_up_follower
          which did not belong there any more.

Sun Jul 26 13:50:20 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Makefile:
        * orbsvcs/tests/Concurrency/Makefile:
        * orbsvcs/tests/Logger/Makefile:
        * orbsvcs/tests/Simple_Naming/Makefile:
        * orbsvcs/tests/Trading/Makefile:
        * tests/NestedUpcall/Reactor/Makefile:
        * tests/NestedUpcall/Triangle_Test/Makefile:
        * tests/POA/Default_Servant/Makefile:
        * tests/POA/Generic_Servant/Makefile:
          The realclean target was not removing all the files.

Sun Jul 26 10:11:07 1998  Carlos O'Ryan  <coryan@JIG>

        * orbsvcs/Trading_Service/Trading_Service.cpp:
        * orbsvcs/tests/Trading/colocated_test.cpp:
          MSVC++ and std::auto_ptr don't like implicit conversions from
          the pointer type to the auto_ptr, this is (I believe) the
          standard behavior.

        * orbsvcs/tests/Logger/server.dsp:
        * orbsvcs/tests/Logger/client.dsp:
          Added missing files to the project.

Sun Jul 26 09:17:58 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/EC_Multiple/EC_Multiple.h: increased
          MAX_CONSUMERS and MAX_SUPPLIERS to 100.

        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp: 1) added support
          for dynamic scheduling test (ECM3).  2) In config runs, dump
          the schedule before shutting the test down.  An exception is
          usually thrown when shutting the test down, for all but the
          first EC.  This change allows the schedule to still be dumped.

        * orbsvcs/tests/EC_Multiple/{Scheduler_Runtime_Dynamic.h,
          run_dynamic,gen_dynamic}: added support for dynamic
          scheduling test.  Currently, it requires that TAO
          be build with the CCFLAGS: -DTAO_USES_STRATEGY_SCHEDULER
          -DTAO_USES_MUF_SCHEDULING -DTAO_MIN_CRITICAL_PRIORITY=0.

        * orbsvcs/tests/EC_Multiple/run_{latency,overhead,schedule,
          throughput,utilization}: use ORBport 0 instead of hard-coded port.
          For NameService, use $NameServicePort if it is defined in the
          user's environment.

Sat Jul 25 15:21:45 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/fe/idl.ll:
        * TAO_IDL/fe/lex.yy.cpp:
          The condition for imported vs. main file changed after the
          addition of the #line directive.

Sat Jul 25 14:15:46 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Sched/Scheduler.cpp: removed
          ACE_{Read,Write)_Guard<ACE_SYNCH_MUTEX> template instantiations
          because they're in libTAO.

Sat Jul 25 13:56:45 1998  Carlos O'Ryan  <coryan@JIG>

        * TAO_IDL/driver/drv_preproc.cpp:
          Generate a #line directive which is accepted by more compilers.

Fri Jul 24 21:44:09 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Exception.i:
        * tao/Exception.cpp:
          ExceptionList was not releasing the TypeCodes in its destructor,
          this produced a memory leak at shutdown, because there is a list
          with the standard exceptions typecodes.
          A similar problem ocurred with the CORBA::_tc_* exceptions.
          NOTE: Purify-4.0.1 on Solaris 2.5 gets confused by these fixes
          and reports bogus FNH and memory leak problems. The bug is
          triggered by an interaction with TAO's use of the Service
          Configurator to dynamically load libTAO, apparently when using
          Purify the library static constructors are called two times; the
          problem does not ocurr when *not* using purify or when not
          loading the library. To test the latter just run a TAO test
          (like $TAO_ROOT/tests/Param_Test) with and without the option
          "-ORBsvcconf /dev/null".  Verifying the purify confusion
          requires more work, try stopping in one of the static
          constructors (like TypeCodes), then set a breakpoint for the
          same constructor at the same address and continue the program,
          when TAO loads the library you will see the constructor executed
          again; this will *not* happen when running without purify.

        * tao/Object_Table.h:
        * tao/Object_Table.cpp:
          Removed static object, now it is a member of the class.

        * tao/Typecode.cpp:
          Removed outdated comments.

        * tests/Param_Test/svc.conf:
          Removed obsolete comments, the web page describes the options in
          more detail.

        * orbsvcs/orbsvcs/Event/Event_Channel.cpp:
          Fixed delete of (void*).  Thanks to John Mulhern
          <9107@mn3.lawson.lawson.com> for reporting this.

        * tests/Param_Test/any.cpp:
          Fixed ambiguous call to >>= also reported by John Mulhern

        * orbsvcs/orbsvcs/Makefile:
          The maintaince of the .PRECIOUS directives for IDL generated
          files was becoming a nightmare, it is automated now.
          Some IDL files include others, we need to add an explicit
          dependency in those cases.

        * TAO_IDL/driver/drv_preproc.cpp:
          Added a #lineno "filename" directive to the temporary files, so
          the IDL compiler can generate better error messages.

Fri Jul 24 17:00:09 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/Dispatching_Modules.cpp (open_queue):
          set period of dispatch queue to its period, rather than 0,
          so that the scheduler will handle it properly.

Fri Jul 24 16:15:08 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Offer_Database.cpp:
        * orbsvcs/orbsvcs/Trader/Service_Type_Repository.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.h:
          Fixed template trait problems with HP/UX 11. Thanks to
          John Mulhern <9107@mn3.lawson.lawson.com> for reporting this.

Fri Jul 24 15:16:28 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * orbsvcs/tests/Concurrency/CC_command.tab.cpp,
          orbsvcs/tests/Concurrency/CC_command.tab.y: Fixed a couple of
          minor inconsistencies that showed up on HP/UX 11.  Thanks to
          John Mulhern <9107@mn3.lawson.lawson.com> for reporting this.

Fri Jul 24 09:56:27 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Simple/client_impl.cpp:
          On UNIX you close() the handle, not the file name.

        * tests/Makefile:
        * tests/Simple/Makefile:
          Added $TAO_ROOT/tests/Simple to the compilation.

Fri Jul 24 01:40:53 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/CDR.cpp:
          The check for memory ownership of the Message_Block was
          inverted, thanks to Dave Meyer <dmeyer@std.saic.com> for
          catching this one.

        * release.chk:
          Updated the file to include the new platforms, the new tests in
          Param_Test and to remove the old info (that is probably
          outdated)

Thu Jul 23 23:15:33 1998  David L. Levine  <levine@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.cpp (start_servants):
          fixed some signed/unsigned comparisons.  (main): removed
          unused local "temp_ptr".

Thu Jul 23 19:59:31 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.cpp: Added code so that -ORB
        arguments are passed to the low priority thread as well. Also now
        the high priority threads checks the -p and -h arguments before
        ORB_init so that it uses the port specified on the command line.

Thu Jul 23 16:54:59 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Server_Request.cpp:
          Care must be exercised when transferring the exception from the
          Environment to the Any (in set_exception()): both believe that
          they own the Exception so the refcnt() must be increased.

        * tao/Any.cpp:
          The Any owns the top-level memory for the objects it contains,
          we delete it now.

        * tao/Typecode.h:
        * tao/Typecode.cpp:
          Fixed memory leaks in the private_member_name_list and in
          Typecodes created on the stack (not owned by the ORB, yes there
          are some).

        * orbsvcs/Trading_Service/Makefile:
        * orbsvcs/tests/Trading/Makefile:
          Updated dependencies.

Thu Jul 23 13:06:10 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be/be_visitor_union/union_cs.cpp:
          Removed excesive unindentation, the generated code was
          unreadable, but correct, it just happens that I have to debug it
          every so often.

        * TAO_IDL/be/be_helper.cpp:
          Never accept negative indentation values.

Thu Jul 23 12:18:04 1998  David L. Levine  <levine@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.cpp: added
          ACE_Singleton<Globals, ACE_Null_Mutex> template instantiation.

Wed Jul 22 19:18:03 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/ORB_Core.cpp (inherit_from_parent_thread): Added the
          inheritance of the Acceptor, Reactor, and the Connector to the
          newly created thread.

Wed Jul 22 17:33:36 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/compat/initguid.h:
        * tao/compat/objbase.h:
          This files are not used anymore, in fact, I thought I had
          removed them already.

Wed Jul 22 16:37:56 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.{h,cpp}: Added a new Globals
        class which is used as a singleton by the various threads for
        accessing the global parameters. Also added code so that the
        server accepts -ORB arguments on the command line.

Wed Jul 22 16:26:34 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Makefile:
        * tao/Marshal.h:
        * tao/Marshal.i:
        * tao/deep_copy.cpp:
          The deep_copy methods are not used any more, Anys using
          marshalling instead.

        * tao/ORB.h:
        * tao/NVList.h:
        * tao/NVList.i:
        * tao/Request.h:
        * tao/Request.i:
          Added T_var and T_out classes for NVList, NamedValue and
          Request.

        * tao/Object.i:
        * tao/Object.cpp:
          All the Object_out and Object_var methods are defined as inline
          methods.

        * tests/Param_Test/client.cpp:
          Use the new CORBA::Request_var class.

        * tests/Param_Test/any.cpp:
        * tests/Param_Test/any.h:
        * tests/Param_Test/bd_long_seq.cpp:
        * tests/Param_Test/bd_long_seq.h:
        * tests/Param_Test/bd_short_seq.cpp:
        * tests/Param_Test/bd_short_seq.h:
        * tests/Param_Test/bd_str_seq.cpp:
        * tests/Param_Test/bd_str_seq.h:
        * tests/Param_Test/bd_string.cpp:
        * tests/Param_Test/bd_string.h:
        * tests/Param_Test/bd_struct_seq.cpp:
        * tests/Param_Test/bd_struct_seq.h:
        * tests/Param_Test/fixed_array.cpp:
        * tests/Param_Test/fixed_array.h:
        * tests/Param_Test/fixed_struct.cpp:
        * tests/Param_Test/fixed_struct.h:
        * tests/Param_Test/nested_struct.cpp:
        * tests/Param_Test/nested_struct.h:
        * tests/Param_Test/objref.cpp:
        * tests/Param_Test/objref.h:
        * tests/Param_Test/short.cpp:
        * tests/Param_Test/short.h:
        * tests/Param_Test/typecode.cpp:
        * tests/Param_Test/typecode.h:
        * tests/Param_Test/ub_any_seq.cpp:
        * tests/Param_Test/ub_any_seq.h:
        * tests/Param_Test/ub_long_seq.cpp:
        * tests/Param_Test/ub_long_seq.h:
        * tests/Param_Test/ub_objref_seq.cpp:
        * tests/Param_Test/ub_objref_seq.h:
        * tests/Param_Test/ub_short_seq.cpp:
        * tests/Param_Test/ub_short_seq.h:
        * tests/Param_Test/ub_str_seq.cpp:
        * tests/Param_Test/ub_str_seq.h:
        * tests/Param_Test/ub_string.cpp:
        * tests/Param_Test/ub_string.h:
        * tests/Param_Test/ub_struct_seq.cpp:
        * tests/Param_Test/ub_struct_seq.h:
        * tests/Param_Test/var_array.cpp:
        * tests/Param_Test/var_array.h:
        * tests/Param_Test/var_struct.cpp:
        * tests/Param_Test/var_struct.h:
          The add_args() method receives NVList_ptr parameters instead of
          NVList_ptr& otherwise it is too hard to use a NVList_var.

Wed Jul 22 15:58:11 1998  David L. Levine  <levine@cs.wustl.edu>

        * TAO version 0.1.41 released.

Wed Jul 22 15:00:00 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/tests/Logger/client_i.cpp: Did a little cleaning up,
        that's all.

        * orbsvcs/orbsvcs/Log/Logger_i.cpp: Adjusted the
        <Logger_i::verbosity_conversion> method to work properly.


Wed Jul 22 14:16:53 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * Makefile: Removed the reference to "client.h" which was
        confusing the compiler and causing all sorts of mayhem (since
        client.h has been removed). Huzzah.

Wed Jul 22 14:12:34 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * TAO/tests/Cubit/TAO/DII_Cubit/client.cpp
          Changed ACE_OS::strdup () in constructor initializations to
          CORBA::string_dup () and added corresponding CORBA::string_free ()
          in destructor.

Wed Jul 22 13:43:15 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * TAO/tests/Param_Test/options.{h,cpp}:
          fixed -f option in parse_args so a #define MAX_BUFFER_LENGTH
          is no longer needed. Added private member function read_ior
          which uses ACE_Read_Buffer.

Wed Jul 22 12:41:22 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Database.h:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_T.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.{h,cpp}:
          Used CORBA::is_nil consistently. Fixed purify warning.

Wed Jul 22 11:55:35 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Any.cpp:
          Removed uses == operator for TypeCode_var and TypeCode_ptr,
          NT does not like this (it is ambigous) and the semantics are
          also broken, we use TypeCode::equal() instead; thanks to Darrell
          Brunsch for reporting this.

        * tao/Server_Request.cpp:
        * tao/NVList.cpp:
          We were passing a TypeCode_var without calling .in() first,
          thansk to Seth B. Widoff for catching up this one.

Wed Jul 22 11:18:51 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * Makefile: Updated the Makefile to include the server_i and
        client_i. This should fix failing compiles. I should have done
        this in my previous commit. Gomen  ^_^

Wed Jul 22 11:15:07 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Sched/Config_Scheduler.cpp (compute_scheduling):
          dereference infos (with ptr ()) before comparing it with 0.
          No more visits from Mr. SIGSEGV.

Wed Jul 22 11:09:55 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be/be_visitor_interface/interface_si.cpp:
          The in_multiple_inheritance() method was generated for the wrong
          class.

Wed Jul 22 10:07:17 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Any.cpp:
        * tao/CurrentC.cpp:
        * tao/IIOP_Object.cpp:
        * tao/NVList.cpp:
        * tao/POAC.cpp:
        * tao/Server_Request.cpp:
        * tao/append.cpp:
        * tao/decode.cpp:
        * tao/deep_copy.cpp:
        * tao/deep_free.cpp:
        * tao/encode.cpp:
        * tao/skip.cpp:
          Callers to Any::type should be careful to release the
          TypeCode_ptr it returns.

        * TAO_IDL/be/be_visitor_union/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_exception/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_enum/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_array/any_op_cs.cpp:
        * TAO_IDL/be/be_visitor_structure/any_op_cs.cpp:
          The >>= was using Any::type() but not realeasing the memory that
          method returns.  We stick the result into a _var.  I also added
          a small optimization: for some types the >>= operator uses
          replace() to change the contents of the Any (thus minimizing
          future memory allocation and demarshalling), but it reused the
          Any typecode, usually obtained from the wire; now we use the
          global Typecode, in an attempt to free memory ASAP inside the
          ORB.

        * docs/Options.html:
          The info about the -ORBpoalock default value was wrong.

Wed Jul 22 08:56:34 1998  Aniruddha Gokhale  <gokhale@mambo.cs.wustl.edu>

        * TAO_IDL/be_include/be_interface.h
          TAO_IDL/be/be_interface.cpp:

        Added a data member (called in_mult_inheritance_) and
        corresponding set/get methods for determining if an
        interface node is involved in some form of multiple inheritance
        either directly or indirectly thru its ancestors. We make use of
        the template method "traverse_inheritance_graph" by passing a new
        helper method called "in_mult_inheritance_helper".

        * TAO_IDL/be_visitor_interface/{interface_sh, interface_si}.cpp:
        Added code to generate the inline method on the skeleton class
        that indicates if we are directly or indirectly involved in some
        form of multiple inheritance.

Wed Jul 22 00:29:32 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Invocation.cpp:
          Fixed problem in TIMEPROBE initialization.

Tue Jul 21 22:05:15 1998  David L. Levine  <levine@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/ Task_Client.cpp: added
          ACE_Condition<ACE_SYNCH_MUTEX> template instantiation.

Tue Jul 21 21:12:31 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/orbsvcs/Log/Logger_i.{h,cpp}:Added 2 new methods to get and
        set the verbosity level

        * orbsvcs/orbsvcs/Logger.idl: Enabled the verbosity method

        * orbsvcs/tests/Logger/run_test.pl: Renamed from
        runtests.pl. Removed nameservice code

        * orbsvcs/tests/Logger/README: Edited to provide more detail

        * orbsvcs/tests/Logger/client_i.{h,cpp}: New files. Interface and
        implementation of the <Logger_Client> class

        * orbsvcs/tests/Logger/server_i.{h,cpp}: New files. Interface and
        implementation of the <Logger_Server> class.

        * orbsvcs/tests/Logger/client.cpp: Restructured the code. Moved
        most of the work onto the <Logger_Client> class defined in
        client_i.h. main () is now rather stripped down

        * orbsvcs/tests/Logger/server.cpp: Restructured the code. Moved
        most of the work onto the <Logger_Server> class defined in
        server_i.h. main () is now rather stripped down.

Tue Jul 21 17:29:15 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * orbsvcs/orbsvcs/orbsvcs_lib.dsp:
        * orbsvcs/orbsvcs/orbsvcs.dsw
          Removed orbsvcs_lib since it isn't needed anymore and it is
          very out-of-date.

        * tests/Cubit/TAO/IDL_Cubit/IDL_Cubit.dsp:
          tests/Cubit/TAO/IDL_Cubit/IDL_Cubit.dsw:
          The perl script run_tests.pl replaces the executable.

        * TAOACE.dsw:
          Added Naming Service to the list, since it is used by many
          tests (and I was forgetting to rebuild it all the time).

        * tests/Simple/run_test.pl:
        * tests/Quoter/run_test.pl:
        * tests/Cubit/TAO/IDL_Cubit/run_test.pl:
          Uses common Uniqueid now.

        * tests/Cubit/TAO/DII_Cubit/DII_Cubit.dsw:
          The included project was renamed.

        * tests/TAO_Tests.dsw:
          New Workspace that includes all the project files for TAO tests.

        * orbsvcs/orbsvcs.dsw:
          Moved some tests out and some servers in.

        * TAO_IDL/tao_idl.dsp
        * orbsvcs/Concurrency_Service/Concurrency_Service.dsp:
        * orbsvcs/Dump_Schedule/Dump_Schedule.dsp:
        * orbsvcs/Event_Service/Event_Service.dsp:
        * orbsvcs/LifeCycle_Service/LifeCycle_Service.dsp:
        * orbsvcs/Naming_Service/Naming_Service.dsp:
        * orbsvcs/Scheduling_Service/Scheduling_Service.dsp:
        * orbsvcs/Trading_Service/Trading_Service.dsp:
        * orbsvcs/orbsvcs/orbsvcs.dsp:
        * orbsvcs/tests/Concurrency/CC_client.dsp:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.dsp:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.dsp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer.dsp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.dsp:
        * orbsvcs/tests/Event_Latency/Event_Latency.dsp:
        * orbsvcs/tests/Logger/client.dsp:
        * orbsvcs/tests/Logger/server.dsp:
        * orbsvcs/tests/Sched_Conf/Sched_Conf.dsp:
        * orbsvcs/tests/Simple_Naming/client.dsp:
        * orbsvcs/tests/Simulator/DOVEMIB/DOVEMIB.dsp:
        * orbsvcs/tests/Simulator/DOVEMIB/DOVEMIBx.dsp:
        * orbsvcs/tests/Simulator/DOVEMIB/TestClient.dsp:
        * orbsvcs/tests/Simulator/Event_Supplier/Event_Sup.dsp:
        * orbsvcs/tests/Trading/Colocated_Test.dsp:
        * orbsvcs/tests/Trading/Export_Test.dsp:
        * orbsvcs/tests/Trading/Import_Test.dsp:
        * orbsvcs/tests/Trading/TradingLib.dsp:
        * tao/TAO.dsp:
        * tests/CDR/basic_types.dsp:
        * tests/CDR/growth.dsp:
        * tests/CDR/tc.dsp:
        * tests/Cubit/TAO/DII_Cubit/client.dsp:
        * tests/Cubit/TAO/IDL_Cubit/client.dsp:
        * tests/Cubit/TAO/IDL_Cubit/collocation_test.dsp:
        * tests/Cubit/TAO/IDL_Cubit/server.dsp:
        * tests/Cubit/TAO/MT_Cubit/client.dsp:
        * tests/Cubit/TAO/MT_Cubit/server.dsp:
        * tests/NestedUpcall/MT_Client_Test/client.dsp:
        * tests/NestedUpcall/MT_Client_Test/server.dsp:
        * tests/NestedUpcall/Reactor/client.dsp:
        * tests/NestedUpcall/Reactor/server.dsp:
        * tests/NestedUpcall/Triangle_Test/initiator.dsp:
        * tests/NestedUpcall/Triangle_Test/server_A.dsp:
        * tests/NestedUpcall/Triangle_Test/server_B.dsp:
        * tests/OctetSeq/OctetSeq.dsp:
        * tests/POA/DSI/client.dsp:
        * tests/POA/DSI/server.dsp:
        * tests/POA/Default_Servant/client.dsp:
        * tests/POA/Default_Servant/server.dsp:
        * tests/POA/Explicit_Activation/server.dsp:
        * tests/POA/FindPOA/FindPOA.dsp:
        * tests/POA/Forwarding/client.dsp:
        * tests/POA/Forwarding/server.dsp:
        * tests/POA/Generic_Servant/client.dsp:
        * tests/POA/Generic_Servant/server.dsp:
        * tests/POA/NewPOA/NewPOA.dsp:
        * tests/POA/On_Demand_Activation/server.dsp:
        * tests/POA/RootPOA/RootPOA.dsp:
        * tests/POA/TIE/client.dsp:
        * tests/POA/TIE/server.dsp:
        * tests/POA/locking/locking.dsp:
        * tests/Param_Test/client.dsp:
        * tests/Param_Test/server.dsp:
        * tests/Quoter/Factory_Finder.dsp:
        * tests/Quoter/Generic_Factory.dsp:
        * tests/Quoter/client.dsp:
        * tests/Quoter/server.dsp:
        * tests/Simple/client.dsp:
        * tests/Simple/server.dsp:
          Changed the libraries to use the *d.dll naming convention so
          all the projects needed to be changed.  While I was there,
          also cleaned things up by adding some folders and added the
          dependency to the tao_idl compiler, so if the compiler changes,
          the idl files get recompiled.

          In the future I'll work on the release versions of the projects
          to set them up correctly.  Until now, most often the release
          version in the project was ignored since it was a major hassle
          to test it.

Tue Jul 21 17:41:26 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp
        * orbsvcs/orbsvcs/Trader/Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_T.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.cpp:
          Since according to Carlos' last ChangeLog entry the call to
          CORBA::Any::type () returns a duplicated typecode, I've ensured
          calls to type () are matched with CORBA::TypeCode::release ()s.

        * tao/Any.cpp (type): needed return statement.

Tue Jul 21 17:29:18 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Any.cpp:
          The type() method has to return a copy (per the spec).
          The replace() method first duplicate its TypeCode arg and *then*
          releases the internal TypeCode, this protect us in case both are
          the same thing.
          We still have to fix some problems in the IDL generated
          operator>>=.

Tue Jul 21 16:57:07 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/IIOP_ORB.cpp (iiop_string_to_object): Don't decrement the
          ref count on the IIOP_Object since the policy has changed such
          that the CORBA_Object is taking ownership of the IIOP_Object.

Tue Jul 21 15:49:34 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/server.{h,cpp}: Added a new Server
          class and moved all the static functions and variables to that
          class.

Tue Jul 21 15:46:49 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/Task_Client.cpp (svc): changed
          char*const* argv to char **argv so that it compiles on platforms
          like IRIX . Thanks to Carlos for reporting this.

Tue Jul 21 14:53:09 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/EC_Multiple/README: use ORBport 0 with
          EC_Multiple.

Tue Jul 21 14:19:28 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * General pass though memory managment:
          + Added the pseudo-object mandatory methods (T::_duplicate,
          T::_nil()) missing in several classes.
          + Normalized the use of reference counting, all the classes
          follow the same protocol.
          + Added locks to protect reference counting mechanisms.
          + Fixed problems in STUB_Object memory managment.
          + The CORBA::release(), CORBA::is_nil(), T::_nil() and
          T::_duplicate() methods are on the .i files now.

        * tao/Any.h:
        * tao/Any.i:
        * tao/Any.cpp:
          Anys don't need reference counting, they are regular C++ object
          and (per the spec) their contents are deep copied by the copy
          ctor, the assignment operator and other methods.
          Also fixed several methods that did *not* duplicate the
          TypeCode, per the spec, they have to do it; we use
          TypeCode::_duplicate() for that purpose, not the (propietary)
          _incr_refcnt()

        * tao/Server_Request.h:
        * tao/Server_Request.i:
        * tao/Server_Request.cpp:
          The CORBA::release(), CORBA::is_nil(), T::_nil() and
          T::_duplicate() methods are on the .i files now.
          NOTE: Server_Request objects in TAO are magical, the
          _duplicate() method returns 0 and release() does nothing.
          The problem starts because Server_Request is allocated from the
          stack (to speed up things), hence reference counting would be
          useless. Adding a clone() method will work better, but the
          Server_Request holds pointers to several positions in the CDR
          stream, we could clone the CDR stream, but a normal
          Server_Request does not own it....  In our opinion (Carlos and
          Irfan) we need not worry about this until we find a use case for
          it.

        * tao/Typecode_Constants.cpp:
          Use CORBA::release() instead of calling the delete operator
          directly, this removed some nasty FMR and FMW problems at
          shutdown.

        * TAO_IDL/be/be_visitor_argument/post_upcall_ss.cpp:
          The generated code leaked object references passed as
          inout arguments.

        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
          The generated code did not manage STUB_Object memory properly.

        * tao/IIOP_Object.h:
        * tao/IIOP_Object.i:
        * tao/IIOP_Object.cpp:
          Refcount follows the same pattern as for the pseudo-objects, it
          starts at 1, it is stored in a CORBA::ULong and delete happens
          when count reaches 0.

        * tao/NVList.h:
        * tao/NVList.i:
        * tao/NVList.cpp:
        * tao/ORB.h:
        * tao/ORB.i:
        * tao/ORB.cpp:
        * tao/Exception.h:
        * tao/Exception.cpp:
          Pseudo object methods revision.

        * tao/Object.h:
        * tao/Object.i:
        * tao/Object.cpp:
          Added locking to the reference count; this should *not* affect
          the critical path, hence it is a *good* change.

        * tao/CurrentC.cpp:
        * tao/POAC.cpp:
        * tao/PolicyC.cpp:
          Hand crafted the changes in the IDL compiler (mostly fixes to
          STUB_Object memory managment).

        * tao/Principal.h:
        * tao/Principal.i:
        * tao/Principal.cpp:
        * tao/Request.h:
        * tao/Request.i:
        * tao/Request.cpp:
          Completed the pseudo object support for this class.

        * tao/Typecode.h:
        * tao/Typecode.i:
        * tao/Typecode.cpp:
          ORB owned typecodes follow the same memory rules as normal
          ones. Since the ORB always holds a reference to them they just
          survive for a longer time.

        * tao/decode.cpp:
          Corrections to the memory managment of STUB_Objects; the
          CORBA_Object does release them, but it does not increase the
          refcnt on the ctor.

        * tao/deep_copy.cpp:
          Used T::_duplicate instead of the (propietary)
          object->_incr_refcnt().

        * tests/Param_Test/param_test_i.cpp:
          The objref test was not releasing its inout argument before
          changing it.

Tue Jul 21 12:09:40 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tests/NestedUpcall/MT_Client_Test/run_test.pl:
        * tests/NestedUpcall/Reactor/run_test.pl:
        * tests/NestedUpcall/Triangle_Test/run_test.pl:
          Added new perl scripts for the tests.

Tue Jul 21 12:02:41 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/Task_Client.cpp :
          Added code so that the client can accept -ORB arguments on
          the command line. The main thread blocks on a condition
          variable until the high priority thread does the argument
          parsing and changes the global Task_State . The main
          thread then creates the low priority threads.

        * tests/Cubit/TAO/MT_Cubit/client.cpp (do_priority_inversion_test):
          Added code for the main thread to block on a condition
          variable after activating the high priority thread until the high
          priority thread wakes it up.

Tue Jul 21 10:00:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * tao/Connect.cpp: Improved the location forwarding, now we check
          the environment for exceptions and the Server Request.

        * tao/ORB.{h,cpp}: Moved the leader_follower model variables form
          the ORB_Core to in here. The ORB_Core has methods to access
          all the variables.

        * tao/ORB_Core.{h,cpp}: Removed the leader_follower model variables
          but kept the accessing methods.

        * tao/Server_Request.{h,cpp}: Changed the exception handling slightly.
          A forwarding exception has the type USER_EXCEPTION now.
          Also, two accessor methods were added to get the forward location
          and the exception type. This is all used in the Server_Connection_Handler.

Mon Jul 20 23:09:21 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * docs/release_notes.html: Updated the status on the Audio/Video
        streaming service.

Mon Jul 20 23:10:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * docs/locate_request.html: Locate request documentation.

        * docs/releasenotes/index.html: Added a reference to the
          locate request documentation.

Mon Jul 20 21:10:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * tests/Cubit/TAO/IDL_Cubit/IDL_Cubit_Client.java:
          A class to access the IDL_Cubit server via the JavaIDL
          ORB.

        * tests/Cubit/TAO/IDL_Cubit/README: Documented how to
          use the aforementioned Java class.

Mon Jul 20 19:06:57 1998  David L. Levine  <levine@cs.wustl.edu>

        * tao/Invocation.cpp (invoke): wrapped final return statement
          with ACE_NOTREACHED.

        * orbsvcs/tests/Trading/Makefile: moved -lorbsvcs and -lTAO
          from LDLIBS to LIBS, so that the libTTest.so build will link
          against them.

Mon Jul 20 18:17:02 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * docs/releasenotes/index.html: Updated the IDL compiler entry
        (GPERF-IDL integration).

Mon Jul 20 17:51:01 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Offer_Iterators.h:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.h:
        * orbsvcd/tests/Trading/import_test.cpp:
          Fixed another g++ linker error and one compile-time error.

Mon Jul 20 17:30:49 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * TAO_IDL/be/be_interface.cpp (gen_perfect_hash_methods): Changed
        the absolute path for gperf to $ACE/bin.

Mon Jul 20 16:55:54 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * TAO_IDL/be/be_interface.cpp (copy_ctor_helper):
        * TAO_IDL/be/be_visitor_interface/interface_sh.cpp (visit_interface):
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp (visit_interface):
        * TAO_IDL/be_include/be_interface.h (copy_ctor_helper):
          To alleviate the g++ linker's confusion in the face of profuse
          virtual inheritence in the skeletons, the IDL compiler now
          explicitly generates a copy constructor in each skeleton
          class. The copy constructor calls the copy constructor of each
          superclass in the skeleton's inheritence hierarchy.

Mon Jul 20 15:08:11 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * TAO_IDL/driver/drv_args.cpp (DRV_parse_args):  Added a "#if
          !defined (ACE_HAS_GPERF)" so that IDL Compiler will use Dynamic
          Hashing if gperf is not found but -P option is specified.

        * TAO_IDL/be/be_interface.cpp (gen_perfect_hash_methods): Fixed
          the ACE_Process' command line to use absolute path
          <$ACE/apps/gperf/src/gperf>.

Mon Jul 20 13:00:41 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Cubit/TAO/IDL_Cubit/Makefile:
        * tests/Cubit/TAO/IDL_Cubit/client_i.h:
        * tests/Cubit/TAO/IDL_Cubit/client_i.cpp:
          Added options to just run the VOID or the ONEWAY test.

Mon Jul 20 12:27:29 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * docs/releasenotes/index.html:
          Added a reference to trader.html in the Trading Service portion
          of the releasenotes.

        * docs/releasenotes/trader.html:
          Minor editorial changes to the trader documentation.

Mon Jul 20 11:46:04 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/corba.h:
          TAO_THROW_SPEC is a little different than ACE_THROW_SPEC, not
          only we need support for exceptions in the platform, we also
          would need them in the IDL compiler.
          Plus it gives a lot of warnings in MSVC++ 5.0

Mon Jul 20 11:15:52 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Trader.cpp:
          Eliminated superfluous template instantiation
          ACE_Unbounded_Queue<CosTrading::Admin::OctetSeq>.

Mon Jul 20 10:57:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * tao/Connect.cpp: Changed the handle_locate method completely
          to try to upcall to the non_existent method. This method
          is not part of the standard, is TAO internal. We know
          that this method is supported by each TAO Object. So
          if we fail we know the object is not there. If we succeed,
          the object is available and if we get forward_request
          exception we will forward the call.

        * tao/IIOP_Object.{h,i,cpp}: Added code to branch to do a conditonal
          locate request, depending on two flags. One tells to
          use it at all the other tells if it is the first call-
          because we want to do it only on the first call.

        * tao/Invocation.{h,i,cpp}: Added code to the start method,
          which branches into different CDR stream generation,
          depending on the kind of message we want to send. The two
          options right now are: Request and LocateRequest.
          A new subclass has been introduces: TAO_GIOP_
          LocateRequest_Invocation, which is similar to the
          Twoway subclass but does a locate request. It has its own
          invoke method and does not call the common invoke method.
          Closing of a connection is the same in all the three cases
          (oneway, twoway, locate_request), I factored the code out
          into a close_connection method.

        * tao/Object.{h,cpp}: Added a method call to activate
          the locate request on the first call after the activation.
          The locate request will be done only once unless it is activated
          a second time.

        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp: Changed
          the code generation of the non_existent method. It accepts
          only one parameter, not two. So I changed the param_count
          from 2 to 1.

Mon Jul 20 10:35:33 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Constraint_Interpreter.{h,cpp},
          Offer_Iterators_T.cpp:
          wrapped TAO_THROW_SPEC arguments with double parens.

        * orbsvcs/orbsvcs/Trader/Offer_Iterators.h: moved = 0 (for pure
          virtual) to after the exceptions spec.

        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp,Trader_Utils.cpp:
          fixed exceptions specs to match declarations in .h files.

        * orbsvcs/tests/Trading/TT_Info.cpp (dump_properties): changed
          types of locals "seq_length" and "i" from CORBA::ULong to
          CORBA::Long to avoid signed/unsigned comparison.

Mon Jul 20 10:20:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * docs/releasenotes/index.html: Added a reference to the
          global resources and leader-follower model documentation.

        * docs/leader_follower.html: Documentation about the leader-follower
          model used for global resources, especially for one Reactor
          accessed by multiple threads.

Mon Jul 20 06:52:02 1998  Aniruddha Gokhale  <gokhale@mambo.cs.wustl.edu>

        * TAO_IDL/be/be_visitor_array/{array_ch, array_ci, array_cs}.cpp:
          Added support for anonymous arrays. This is yet to be tested

        * TAO_IDL/be/be_visitor_field/field_ch.cpp: Handled anonymous
          array declaration in structures.

          *Note* that although the above changes were made a couple of weeks
          back I have not been able to test them.

Sun Jul 19 22:58:45 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Trader.cpp: added
          ACE_Unbounded_Queue<CosTrading::Admin::OctetSeq *>, etc., template
          instantiations.

        * tao/corba.h: define TAO_THROW_SPEC using ACE_THROW_SPEC.

Sat Jul 18 23:01:51 1998  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.1.40 released.

Sat Jul 18 22:16:14 1998  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.1.39 released.

Sat Jul 18 20:22:19 1998  Michael Kircher <mk1@cs.wustl.edu>

        * tests/Quoter/run_test.sh: Removed this file,
          all the functionality is provided by the
          run_test.pl script.

        * tao/Server_Request.{h,cpp}: Added a new constructor,
          which does not need an input CDR stream. It is going
          to be used for locate requests. When we invoke
          the non_existend method on the object to see if it
          is there, forwarded or not existent.

        * orbsvcs/tests/Simulator/DOVEBrowser/PushConsumer.java.JDK1.2:
          Adopted to the new interfaces for the Event Service.

Sat Jul 18 19:37:19 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * orbsvcs/tests/Simple_Naming/client.cpp: The ORB now looks
          at argv and argc before the client does.

        * orbsvcs/tests/Simple_Naming/run_test.pl: New Perl script
          for testing.

Sat Jul 18 17:31:29 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * tests/Cubit/Hardpack/IDL_Cubit/cubit.idl:
        * tests/Cubit/Hardpack/IDL_Cubit/cubit_impl.{hh,cc}:
        * tests/Cubit/Hardpack/IDL_Cubit/client_i.{h,cpp}:
        * tests/Cubit/Hardpack/IDL_Cubit/server_i.{h,cpp}:
        * tests/Cubit/Hardpack/IDL_Cubit/client.cpp:
        * tests/Cubit/Hardpack/IDL_Cubit/server.cpp:
        * tests/Cubit/Hardpack/IDL_Cubit/Makefile:
        * tests/Cubit/Hardpack/IDL_Cubit/README:
        * tests/Cubit/Hardpack/IDL_Cubit/initref.cfg:
          Added these files for the IDL_Cubit test for the Hardpack
          ORB.

Sat Jul 18 15:44:59 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Constraint_Visitors.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Database.*:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators.*:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators_T.cpp:
        * orbsvcs/orbsvcs/Trader/Service_Type_Repository.cpp:
        * orbsvcs/orbsvcs/Trader/Trader.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.*:
        * orbsvcs/orbsvcs/Trader/Trader_T.cpp
        * orbsvcs/orbsvcs/Trader/Trader_Utils.*:
        * orbsvcs/tests/Trading/Offer_Exporter.*:
        * orbsvcs/tests/Trading/Service_Type_Exporter.*:
        * orbsvcs/tests/Trading/Offer_Importer.*:
        * orbsvcs/tests/Trading/export_test.cpp:
        * orbsvcs/tests/Trading/import_test.cpp:
        * orbsvcs/tests/Trading/collocated_test.cpp:
        * orbsvcs/tests/Trading/Makefile:
        * orbsvcs/Trading_Service/Trading_Service.cpp:
        * orbsvcs/Trading_Service/Makefile:

          Fixed g++ 2.7.2 compilation warnings/errors. Note: the tests and
          applications, although they compile now with g++ 2.7.2, don't link
          properly because the g++ linker is baffled by the profuse
          virtual/multiple inheritance in the skeletons generated from the
          CosTrading.idl file, and can't find the copy constructors it
          autogenerated. The solution is to have the IDL compiler generate
          explicit copy constructors for these skeleton classes.

Sat Jul 18 15:39:42 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * orbsvcs/tests/Simple_Naming/client.dsp: Updated this MSVC
          project file to use the latest changes to the Simple
          Naming test.

Sat Jul 18 15:30:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * docs/forwarding.html: Added some optimization
          suggestions.

Sat Jul 18 14:19:48 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * tao/orbconf.h:
        * orbsvcs/orbsvcs/Makefile:
        * orbsvcs/orbsvcs/CosTrading.idl:
          Moved the definition of TAO_HAS_OBJECT_IN_STRUCT_MARSHAL_BUG into
          orbconf.h and CosTrading.idl, and out of the orbsvcs Makefile.

Sat Jul 18 14:12:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * tests/Cubit/TAO/IDL_Cubit/svc.conf: Added the
          ORBiiopprofilelock switch to the client configuration to
          switch off the lock needed for forwarding. We know, we
          do not need it, so we use a null lock instead. This
          should improve the performance a little bit.

        * tao/Connect.cpp: Added code for handle_locate, which is still
          commented, because not tested.
          The TAO_ORB_Core_instance is now cached in send_request and
          handle_input.

Sat Jul 18 14:00:38 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tests/Cubit/TAO/IDL_Cubit/Makefile: Always try to
          generate perfect hash functions for the operation
          dispatching by enabling the -P flag.

Sat Jul 18 11:29:43 1998  Chris Gill  <cdgill@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/RT_Task.h
          orbsvcs/orbsvcs/Event/Dispatching_Modules.cpp

          Changed to always typedef ACE_ES_QUEUE as the base
          template class ACE_Message_Queue<ACE_SYNCH> and
          explicitly construct dynamic message queues as needed.

Sat Jul 18 10:19:37 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/Logger/client.cpp (nesting_test): added return 0
          at end. (init): removed unused local factory_ref2.

Sat Jul 18 08:19:24 1998  Douglas C. Schmidt  <schmidt@lambada.cs.wustl.edu>

        * orbsvcs/tests/Simple_Naming/client.cpp: Beefed up this test so
          that it illustrates how to bind(), resolve(), and unbind() an
          object reference to a remote Naming Context.  This is an
          important test to make sure that things are working properly.

        * orbsvcs/orbsvcs/Naming/Naming_Utils: Added an init() method to
          this class to begin to factor out common code for being a client
          of a Naming Service.

        * TAO/orbsvcs/tests/Naming/ns_tree.cpp (main): Cleaned up the
          formatting for this test.

        * orbsvcs/tests/Simple_Naming: Renamed clnt.* to client.* to
          be more consistent.

        * tests/Cubit/TAO/IDL_Cubit/svc.conf: Changed the default ORB
          concurrency model from reactive to thread-per-connection since
          the latter is considerably faster.

Fri Jul 17 17:42:27 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * docs/Options.html: Added documentation for the TAO environment
          variables.

        * tao/ORB.cpp (resolve_trading_service): Changed the environment
          variable for NameService and TradingService to NameServiceIOR
          and TradingServiceIOR to be more consistent.

        * orbsvcs/orbsvcs/Naming/Naming_Utils.h: Started adding the new
          TAO_Naming_Client class, which will simplify the initialization
          and access to a NamingContext.

        * orbsvcs/orbsvcs/Naming/Naming_Utils.cpp: Changed the
          capitalization of GetNamingContext() to get_naming_context(),
          which is consistent w/TAO programming style.

        * tao/skip.cpp: Replaced uses of old-style C casts with a
          static_cast.

Fri Jul 17 19:34:11 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tao/ORB.cpp: The return value for acceptor ().enable () is no
          longer being checked for -1, since platforms that don't
          support it (like NT) will return -1.

Fri Jul 17 18:46:17 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * orbsvcs/orbsvcs/Log/Logger_i.h: Added new fields for verbosity
        * orbsvcs/orbsvcs/Log/Logger_i.cpp: Adjusted for new fields
        * orbsvcs/tests/client.h: Added new methods- resolve_name () &
          nesting_test ()
        * orbsvcs/tests/client.cpp: Compacted code somewhat. Broke run () and
          init () into smaller functions
        * orbsvcs/orbsvcs/Logger.idl: Adjusted TAO_MAXLOGMSGLEN
        * orbsvcs/tests/server.cpp: Partialy incomplete incorporation of
          name service

Fri Jul 17 17:58:37 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * docs/implrepo.html: Addressed some more comments.

Fri Jul 17 11:47:42 1998  David L. Levine  <levine@cs.wustl.edu>

        * tao/IIOP_Object.cpp (do_static_call,put_params): on sparcs
          with g++ prior to 2.8, e.g., 2.7.2.3, only; added an awful
          hack to two-way va_arg processing.  The hack throws away
          the first var arg.  Apparently, g++ 2.7.2.3 provides a bogus
          arg to the first va_arg call by mistake.  This ugliness
          works around that problem.  We haven't seen this elsewhere
          with va_arg, or with later versions of g++.

        * orbsvcs/tests/Event_Latency/Event_Latency.cpp:
          fixed supplier id (it was the same for all suppliers) and other
          very minor cleanup.

        * orbsvcs/tests/Event_Latency/run_tests.sh: added.

Fri Jul 17 11:02:29 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * tao/POAC.h: unclosed comments.

        * orbsvcs/tests/AVStreams/source/mpeg/server/Machine_Properties.{h,cpp}:
        * orbsvcs/tests/AVStreams/source/mpeg/server/Video_Repository.{h,cpp}:
        * orbsvcs/tests/AVStreams/source/mpeg/server/Property_Exporter.{h,cpp}:
        * orbsvcs/tests/AVStreams/source/mpeg/server/augmented_server.{h,cpp}:
        Updated these files in light of recent changes to the Trading Service.

Fri Jul 17 09:46:56 1998  Douglas C. Schmidt  <schmidt@tango.cs.wustl.edu>

        * tao/POAC.h: Replaced #endif // ... with #endif /* ... */ since
          this is more portable...

        * tao/POAC.h: Changed CORBA::Policy to ACE_CORBA_1 (Policy) to
          work around friggin' bugs with MSVC++ 4.2.  Thanks to Ernesto
          Guisado <eguisado@saincotrafico.com> for reporting this.

Fri Jul 17 08:28:55 1998  David L. Levine  <levine@cs.wustl.edu>

        * Makefile (CONTROLLED_FILES): added TAO-inheritance.{pdf,ps}.gz
          to distribution.

Thu Jul 16 15:20:12 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Connect.cpp:
        * tao/ORB.cpp:
          Set the close-on-exec flag using the new IPC_SAP interfaces.

        * tao/ORB_Core.cpp:
        * orbsvcs/orbsvcs/Event/RT_Task.h:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.h:
        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.h:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
          Use ACE_SYNCH_CONDITION instead of
          ACE_Condition<ACE_Thread_Mutex> some template instantiations are
          removed.

Thu Jul 16 15:15:46 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/Makefile:
        * orbsvcs/tests/Makefile:
        * orbsvcs/orbsvcs/Makefile:
        Trading Service now compiles by default! Let the mayhem begin!

Thu Jul 16 12:55:54 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Connect.cpp:
          Added the close-on-exec flag the Client and Server
          Connection_Handlers, this avoid resource leaks in the event of
          fork/execs.

Thu Jul 16 12:57:08 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * tao/ORB_Core.cpp: Fixed explicit template instantiation of
        ACE_Thread_Condition and ACE_Condition on IRIX.

Thu Jul 16 11:50:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * tao/ORB_Core.{h,cpp}: Due to merging a cvs branch
          to the main trunk, the following changes went away, and
          where now reintroduced:

Thu Jul 16 00:00:20 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * Removed all the COM madness, TAO no longer uses the IUnknown
          classes, QueryInterface(), AddRef() or Release(). The new
          reference counting methods are called _incr_refcnt and
          _decr_refcnt (the leading underscore is necessary for CORBA
          complaince, but it breaks ANSI/C or ANSI/C++ complaince, yuk!).
          This change save a few microseconds on the critical path,
          because QueryInterface() was used in remote method invocation,
          invoking many virtual methods, increasing the refcnt and then
          decreasing it again; but the real motivations are:
          + It was confusing to users it what way did TAO support COM (it
          does not, yet).
          + Removing QueryInterface() and the ref counting from the
          critical path will allow us to protect the ref counts with
          mutexes (strategized, of course).

        * tao/Any.cpp:
        * tao/Any.h:
        * tao/CurrentC.cpp:
        * tao/Exception.cpp:
        * tao/Exception.h:
        * tao/IIOP_ORB.cpp:
        * tao/IIOP_Object.cpp:
        * tao/IIOP_Object.h:
        * tao/Invocation.cpp:
        * tao/Makefile:
        * tao/Marshal.i:
        * tao/NVList.cpp:
        * tao/NVList.h:
        * tao/ORB.cpp:
        * tao/ORB.h:
        * tao/ORB.i:
        * tao/Object.cpp:
        * tao/Object.h:
        * tao/Object.i:
        * tao/POAC.cpp:
        * tao/PolicyC.cpp:
        * tao/Principal.cpp:
        * tao/Principal.h:
        * tao/Request.cpp:
        * tao/Request.h:
        * tao/Server_Request.cpp:
        * tao/Server_Request.h:
        * tao/Server_Request.i:
        * tao/Stub.h:
        * tao/Typecode.cpp:
        * tao/Typecode.h:
        * tao/append.cpp:
        * tao/corba.h:
        * tao/decode.cpp:
        * tao/deep_copy.cpp:
        * tao/encode.cpp:
        * tao/skip.cpp:
          This are the files affected by the change.

        * tao/compat/initguid.h:
        * tao/compat/objbase.h:
          Removed! COM is gone from TAO.

        * TAO_IDL/be/be_visitor_operation/operation_cs.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_cs.cpp:
          Generate the new CORBA_Object methods to gain access to the
          STUB_Object, we don't generate the old COM methods.

        * taoconfig.mk:
          Removed -I$(TAO_ROOT)/tao/compat

        * Makefiles:
          Updated the dependencies in all the Makfiles of TAO (due to the
          removal of objbase.h & friends). Also fixed many problems in the
          Makefiles, like missing SRC or LSRC lists, removed the
          -I$(TAO_ROOT)/tao/compat includes, added missing TAO_ROOT
          definitions, etc.

        * docs/releasenotes/ec.html:
          Added the latest changes.

        * tests/Cubit/TAO/IDL_Cubit/client_i.cpp:
          Fixed mismatched memory free (new vs. malloc).

        * orbsvcs/tests/Logger/client.h:
          Fixed method declaration.

Wed Jul 15 22:17:20 1998  David L. Levine  <levine@cs.wustl.edu>

        * tao/ORB_Core.cpp: added ACE_Unbounded_Set<ACE_SYNCH_CONDITION *>,
          etc., template instantiations.  Added ACE_Thread_Condition and
          ACE_Condition instantiations, w/o ACE_HAS_TEMPLATE_TYPEDEFS.

Wed Jul 15 21:16:19 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * orbsvcs/Trading_Service/Trading_Service.{dsp,dsw}:
        * orbsvcs/tests/Trading/Trading.dsw:
        * orbsvcs/tests/Trading/Colocated_Test.dsp:
        * orbsvcs/tests/Trading/Export_Test.dsp:
        * orbsvcs/tests/Trading/Import_Test.dsp:
        * orbsvcs/tests/Trading/TradingLib.dsp:
          Project files for the Trading service for MSVC.

Wed Jul 15 20:12:47 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tao/ORB_Core.cpp: Changed the warnings that occur when
          a conf file is not found to be debug warnings (only show
          up with -ORBdebug)

Wed Jul 15 19:28:51 1998  Seth Widoff  <sbw1@cs.wuslt.edu>

        * orbsvcs/orbsvcs/orbsvcs.dsp: Added trader files.

Wed Jul 15 18:00:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * tao/Invocation.cpp: Made sure, that all control paths
          resume the handler - checking invoke methods.

Wed Jul 15 16:27:01 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tests/Simple: Added a new test that is just a simple test
          which can be used as a basis for new tests or just to see
          the basics of a CORBA client and server.

Wed Jul 15 16:00:39 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * client.cpp: Changed a few cast statments; added comments

        * runtests.pl: New script to automate running of tests

Wed Jul 15 15:44:10 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * tao/Invocation.cpp: Carlos corrected his omission of code to
          invoke before waiting for a reply.

Wed Jul 15 12:40:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * tao/Connect.{h,cpp}: Changed handle_input and send_request
          of the Client Connection Handler to support global
          resources and multiple threads. It is achieved through
          the leader follower model.

        * tao/Invocation.cpp: The suspended Client Connection Handler
          from Connect.cpp get resumed (TAO_GIOP_Invocation::invoke).

        * tao/ORB.{h,cpp}: The run method conforms to the rules
          of the leader follower model.

        * tao/ORB_Core.{h,cpp}: The ORB Core now supports all
          the variables for the leader follower model.

Wed Jul 15 12:07:15 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Servant_Base.cpp:
          Added timeprobes in operation lookup.

        * tests/Cubit/TAO/IDL_Cubit/client.cpp:
        * tests/Cubit/TAO/IDL_Cubit/server.cpp:
          Added TIMEPROBE_PRINT at the end.

Wed Jul 15 12:11:01 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * orbsvcs/tests/Property/Makefile:
          Removed unnecessary STL dependencies.

Wed Jul 15 11:44:57 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * orbsvcs/tests/CosPropertyService/Makefile: Removed STL stuff and
          did a make depend.

Wed Jul 15 10:55:33 1998  David L. Levine  <levine@cs.wustl.edu>

        * tests/Quoter/run_tests.pl: removed hard-coded perl path.

Wed Jul 15 09:47:17 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/Module_Factory.cpp:
          Removed a bogus include file.

        * orbsvcs/orbsvcs/Makefile:
          Updated dependencies again.

Tue Jul 14 21:56:30 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/orbsvcs/Makefile (FILES): updated dependencies.

Tue Jul 14 21:50:04 1998  David L. Levine  <levine@cs.wustl.edu>

        * tests/Quoter/run_test.sh: use sh instead of ksh, $login
          instead of mk1, and $ps_opts.

        * orbsvcs/tests/start_services: bash doesn't always supply $USER,
          so use $login with it also.

Tue Jul 14 21:25:19 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/tests/Trading/Makefile:
        * orbsvcs/tests/Trading/Offer_Exporter.{h,cpp}:
        * orbsvcs/tests/Trading/Offer_Importer.{h,cpp}:
        * orbsvcs/tests/Trading/Offer_Importer.h:
        * orbsvcs/tests/Trading/Service_Type_Exporter.{h,cpp}:
        * orbsvcs/tests/Trading/TT_Info.{h,cpp}:
        * orbsvcs/tests/Trading/colocated_test.cpp:
        * orbsvcs/tests/Trading/export_test.cpp:
        * orbsvcs/tests/Tradingimport_test.cpp:
          These tests now copmile with egcs. In addition, Added modify and
          withdraw_using_constraint tests, and the "quiet" flag, which will
          staunch the usual barrage of output by not printing the contents
          of offers and service types.

        * orbsvcs/Trading_Service/Trading_Service.cpp: compiles with
          egcs.

        * orbsvcs/orbsvcs/Trader/*.*: Compiles with egcs. Improved the
          modify method.

Tue Jul 14 19:15:41 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Makefile:
        * orbsvcs/orbsvcs/Event/Module_Factory.h:
        * orbsvcs/orbsvcs/Event/Module_Factory.cpp:
        * orbsvcs/orbsvcs/Event/Fast_Reactor.h:
        * orbsvcs/orbsvcs/Event/Dispatching_Modules.h:
        * orbsvcs/orbsvcs/Event/Dispatching_Modules.cpp:
        * orbsvcs/orbsvcs/Event/Event_Channel.h:
        * orbsvcs/orbsvcs/Event/Event_Channel.cpp:
          The Event Channel modules are constructed using a Factory class,
          that will simplify configuration of the EC, like using RTU or
          FIFO dispatching, disabling correlation, or filtering, etc.

Tue Jul 14 18:35:56 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be/be_visitor_sequence/gen_unbounded_sequence_ch.cpp:
          The generated replace() method released the buffer twice.

Tue Jul 14 15:56:46 1998  Nagarajan Surendran  <naga@cs.wustl.edu>

        * orbsvcs/tests/AVStreams/Machine_Properties.{h,cpp}:
        * orbsvcs/tests/AVStreams/Property_Exporter.{h,cpp}:
          Removed as they are moved to
          orbsvcs/tests/AVStreams/mpeg/source/server.

        * orbsvcs/tests/AVStreams/Makefile:
        * orbsvcs/tests/AVStreams/server.{h,cpp}:
          Removed as they are outdated.

Tue Jul 14 15:28:44 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be/be_visitor_field/field_ch.cpp:
          Added support for arrays inside structures. Anonymous arrays do
          *not* work. Thanks to Eric Powers <powerg@deltanet.com> for this
          patch.

Tue Jul 14 14:40:36 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/Event_Latency/Event_Latency.cpp (print_stats):
          when short-circuiting, don't print out time breakdowns to/in/from EC.

Tue Jul 14 13:30:01 1998  Chris Gill  <cdgill@cs.wustl.edu>

        * orbsvcs/orbsvcs/Event/Dispatching_Modules.cpp
          orbsvcs/orbsvcs/Event/RT_Task.h:

          Added conditional compilation logic to cause EC to use dynamic queues
          with appropriate dispatching strategies when the MUF, EDF, or MLF
          strategies are defined.  This is a temporary measure to allow
          testing of the EC performance with the dynamic queues, and will
          be relaced with a better configuration mechanism, based on the results
          of the off-line scheduling run, in the very near future.

Tue Jul 14 12:00:18 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be/be_visitor_interface/interface_ss.cpp:
        * TAO_IDL/be/be_visitor_interface/interface_sh.cpp:
        * TAO_IDL/be/be_visitor_interface/be_interface.cpp:
          Added server side support for CORBA::Object::_non_existent, in
          the future it could be implemented in the POA, saving an
          operation lookup and reducing the footprint somewhat.

        * orbsvcs/orbsvcs/Concurrency/CC_LockSet.h:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSet.cpp:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSetFactory.h:
        * orbsvcs/orbsvcs/Concurrency/CC_LockSetFactory.cpp:
          Replaced ACE_Thread_Mutex with ACE_SYNCH_MUTEX so it compiles in
          platforms without threads, not that it will work though.

Tue Jul 14 12:30:45 1998  David L. Levine  <levine@cs.wustl.edu>

        * tests/Cubit/TAO/MT_Cubit/client.cpp (do_priority_inversion_test):
          removed dependence on local context_switch on platforms that don't
          have ACE_HAS_PRUSAGE_T and ACE_HAS_GETRUSAGE.  Thanks to
          Arturo Montes <mitosys@colomsat.net.co> for reporting this.  Also,
          removed csw on those platforms, because it was no longer being used.

Tue Jul 14 11:48:23 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/ORB_Core.{h,cpp} (arl_same_port_connect):  Added the new
          member function to ORB_Core to check if we want the client to
          initiate a connection using the same local port number as
          server's.

        * tao/Invocation.cpp (start): Added code to specify the following:

          This change is only for ARL only and to enable the feature, you
          must add

             #if defined (TAO_ARL_USES_SAME_CONNECTOR_PORT)

          to your $ACE_ROOT/ace/config.h.  Add the command line option

             -ORBarlsameportconnect yes

          when starting the client.

          *** This is not for the general audience of TAO.  Don't use
          it. ***

Tue Jul 14 11:34:02 1998  David L. Levine  <levine@cs.wustl.edu>

        * tao/IIOP_Object.cpp (do_static_call): commented out unused
          local "status".

Mon Jul 13 18:35:22 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be/be_visitor_sequence/sequence_ch.cpp:
        * TAO_IDL/be/be_sequence.cpp:
          Code generation for sequences of octets was incorrect in
          platforms that do not support automatic template
          instantiation. Thanks to Eric Powers <powerg@deltanet.com> for
          pointing this out.

Mon Jul 13 17:50:35 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/TAO.dsp:  Added Invocation.cpp into project.


        The following two changes were made per Carlos' instructions.
        (I was just typing.)

        * tao/deep_free.cpp (DEEP_FREE): Commented out 'delete source' in
          case of CORBA::tk_struct.

        * tao/Any.cpp (operator=, ~CORBA_Any, replace): Added delete
          this->value after DEEP_FREEing.

Mon Jul 13 17:37:01 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Object.cpp:
          Fixed some problems in the implementation of _non_existent(),
          thanks to Dave Meyer <dmeyer@std.saic.com>

Mon Jul 13 16:20:30 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/corba.h:
        * tao/Makefile:
        * tao/Invocation.h:
        * tao/Invocation.i:
        * tao/Invocation.cpp:
        * tao/GIOP.h:
        * tao/GIOP.i:
        * tao/GIOP.cpp:
        * tao/IIOP_Object.h:
        * tao/IIOP_Object.cpp:
          On the client side we can optimize memory allocation for
          oneway requests by not allocating the response
          buffer. But to do this and take as much memory as possible from
          the stack also requires to follow different execution paths for
          the oneway vs. two way tests.
          With this changes the memory allocations are:
          + For oneways:
            1 on the client side (can be TSS allocator).
            3 on the server side (one can be TSS allocator).
          + For twoway:
            3 on the client side (1 can be a TSS allocator).
            3 on the server side (1 can be TSS allocator).


        * tests/Cubit/TAO/IDL_Cubit/cubit.idl:
        * tests/Cubit/TAO/IDL_Cubit/client_i.h:
        * tests/Cubit/TAO/IDL_Cubit/client_i.cpp:
        * tests/Cubit/TAO/IDL_Cubit/cubit_i.h:
        * tests/Cubit/TAO/IDL_Cubit/cubit_i.cpp:
          Added simple tests with no arguments or return values, also
          added a oneway test.

        * orbsvcs/Dump_Schedule/Makefile:
        * orbsvcs/Event_Service/Makefile:
        * orbsvcs/LifeCycle_Service/Makefile:
        * orbsvcs/Naming_Service/Makefile:
        * orbsvcs/Scheduling_Service/Makefile:
        * orbsvcs/orbsvcs/Makefile:
        * orbsvcs/tests/EC_Mcast/Makefile:
        * orbsvcs/tests/EC_Multiple/Makefile:
        * orbsvcs/tests/EC_Throughput/Makefile:
        * orbsvcs/tests/Event_Latency/Makefile:
        * orbsvcs/tests/Logger/Makefile:
        * orbsvcs/tests/Simple_Naming/Makefile:
        * tests/CDR/Makefile:
        * tests/Cubit/TAO/IDL_Cubit/Makefile:
        * tests/Cubit/TAO/MT_Cubit/Makefile:
        * tests/NestedUpcall/Reactor/Makefile:
        * tests/NestedUpcall/Triangle_Test/Makefile:
        * tests/OctetSeq/Makefile:
        * tests/POA/Default_Servant/Makefile:
        * tests/POA/Explicit_Activation/Makefile:
        * tests/POA/FindPOA/Makefile:
        * tests/POA/Generic_Servant/Makefile:
        * tests/POA/NewPOA/Makefile:
        * tests/POA/On_Demand_Activation/Makefile:
        * tests/POA/RootPOA/Makefile:
        * tests/Param_Test/Makefile:
        * tests/Quoter/Makefile:
        * tests/Thruput/TAO/Makefile:
          The new files in the tao library changed the dependencies.

        * orbsvcs/Dump_Schedule/Makefile:
          Sources were listed in the wrong macro.

Mon Jul 13 14:37:06 1998  David L. Levine  <levine@cs.wustl.edu>

        * Event_Latency.cpp: use ACE_CU64_TO_CU32 to convert const
          64-bit u_ints to 32-bits happily with Sun C++.  Also, replaced
          a function-style cast and some other old casts with ACE
          ANSI-style casts.

Mon Jul 13 13:59:08 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tests/Param_Test/run_test.pl:
          Fixed a few (minor) perl warnings.

Mon Jul 13 11:49:29 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * tao/Marshall.i: Now setting freed string pointer to zero.

        * tao/deep_free.cpp: Although the struct fields were being freed,
          the memory for the struct itself wasn't. Note: other types may
          also have this problem.

Sun Jul 12 19:47:34 1998  Seth Widoff  <sbw1@cs.wustl.edu>

        * docs/releasenotes/trader.html:
          Finished the initial draft of the Trading Service documentation.

Sun Jul 12 13:45:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * tests/NestedUpcalls/MT_Client_Test/*:
          Added a new test for testing multiple threads accessing
          global resources, which means, one ORB and one Reactor.
          It also tests for proper nested upcalls.

Sun Jul 12 01:40:58 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * Fixed several problems reported by John Mulhern
          <9107@mn3.lawson.lawson.com>, that fix portability problems to
          HP/aCC.

        * tao/Typecode.cpp:
          Declared a temporary buffer as CORBA::Octet* instead of void*,
          otherwise HP/aCC balks.

        * TAO_IDL/be_include/be_sequence.h:
        * TAO_IDL/be/be_sequence.cpp:
          fe_add_sequence() was redefined with different arguments and
          return value. It was not the intention and it triggered warnings
          on several compilers (HP/aCC, SGI/CC).

        * TAO_IDL/fe/y.tab.cpp:
          Removed indent pragma.
          Declared tao_yyerror as taking a const char*, it is not used
          anyway.

        * TAO_IDL/be/be_visitor_operation/tie_si.cpp:
          Tie delegation is similar to collocated upcalls, the arguments
          are T_ptr objects and not T_var, hence, no .in () calls are
          needed.

        * TAO_IDL/fe/fe_extern.cpp:
        * TAO_IDL/driver/drv_preproc.cpp:
          Changed old C-style cast to reinterpret_cast, that should make
          HP/aCC compiler happy. This is just because SunCFE uses File* as
          a compilation barrier for FILE*, IMHO a waste of time.

Sat Jul 11 10:17:35 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/tests/Makefile:
          Added EC_Mcast to the list of tests.

Fri Jul 10 22:25:44 1998  David L. Levine  <levine@cs.wustl.edu>

        * TAO version 0.1.38 released.

Fri Jul 10 22:06:16 1998  David L. Levine  <levine@cs.wustl.edu>

        * tao/CDR.i (do_byte_swap): added explicit int return type.

Fri Jul 10 17:51:13 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * Param_Test/bd_str_seq.cpp:
        * Param_Test/ub_str_seq.cpp:
          DII tests now work.

        * Param_Test/bd_short_seq.cpp:
        * Param_Test/ub_short_seq.cpp:
        * Param_Test/bd_long_seq.cpp:
        * Param_Test/ub_long_seq.cpp:
          Minor changes in notation - no new functionality.

Fri Jul 10 17:29:25 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/tests/EC_Mcast/Makefile:
        * orbsvcs/tests/EC_Mcast/svc.conf:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.h:
        * orbsvcs/tests/EC_Mcast/EC_Mcast.cpp:
        * orbsvcs/orbsvcs/Makefile:
        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.h:
        * orbsvcs/orbsvcs/Event/EC_Gateway_UDP.cpp:
          Added the first implementation of a UDP/Mcast based gateway to
          the EC. The current classes require a lot of manual
          configuration.
          Also implemented a small test to show the usage.

        * tao/CDR.h:
        * tao/CDR.i:
        * tao/CDR.cpp:
          Give access to external users of the swap_<n> methods, also
          provide an accesor for the byte swapping flag in OutputCDRs.

        * tao/GIOP.cpp:
          Use the new byte swap accessor.

        * orbsvcs/orbsvcs/Event/Event_Channel.h:
        * orbsvcs/orbsvcs/Event/Event_Channel.i:
        * orbsvcs/orbsvcs/Event/Event_Channel.cpp:
          Completed support for gateways that are interested in the
          supplier list changes. It is now possible to add Gateways
          *after* the consumer or supplier list has stabilized.

        * orbsvcs/orbsvcs/Event/EC_Gateway.cpp:
          Do nothing if receive a supplier update.

        * orbsvcs/tests/EC_Throughput/ECT_Consumer.cpp:
          Destroy the Event Channel *after* the consumers unsubscribe from
          it.

        * orbsvcs/tests/EC_Multiple/EC_Multiple.cpp:
        * orbsvcs/Event_Service/Event_Service.cpp:
          Before a normal exit we unbind the Event Service (and, if local,
          the Scheduling Service) from the Naming Service.

Fri Jul 10 17:03:11 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Constraint_Nodes.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_Visitors.h:
        * orbsvcs/orbsvcs/Trader/Offer_Database.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Iterators.cpp:
        * orbsvcs/orbsvcs/Trader/Service_Type_Repository.cpp:
        * orbsvcs/orbsvcs/Trader/Trader.{h, cpp}:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.cpp:
        * orbsvcs/orbsvcs/Trader/Trader_T.h:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.{h,cpp}:
          Addressed a number of memory leaks in the Trading
          Service. However, typecodes still leak oodles of memory.

        * orbsvcs/Trading_Service/Trading_Service.cpp:
          Cleans self up properly after catching SIGINT.

        * orbsvcs/tests/Trading/TT_Info.cpp:
        * orbsvcs/tests/Trading/Service_Type_Exporter.cpp:
        * orbsvcs/tests/Trading/export_test.cpp:
          Aesthetic changes.

Fri Jul 10 16:35:21 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * TAO/tests/Param_Test/client.cpp:
          Fixed bug in DII arg list creation.

        * TAO/tests/Param_Test/bd_short_seq.cpp:
        * TAO/tests/Param_Test/bd_long_seq.cpp:
        * TAO/tests/Param_Test/ub_short_seq.cpp:
        * TAO/tests/Param_Test/ub_long_seq.cpp:
          DII tests now work.

        * TAO/tests/Param_Test/any.cpp:
          Made some changes - not done yet. DII test still doesn't work.

Fri Jul 10 15:32:42 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * docs/implrepo.html: Another pass.

Fri Jul 10 12:21:18 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/tests/EC_Throughput/Makefile:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer.cpp:
          Fixed errors and warnings reported by David.

Fri Jul 10 00:32:51 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/be/be_visitor_argument/vardecl_ss.cpp:
          The skeletons were not releasing the strings allocated while
          demarshalling the arguments.

        * docs/implrepo.html:
          Another pass at the design document.

Thu Jul 09 23:02:48 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/POA.cpp (create_internal_lock): Change method to watch out
          for platforms without threads.  Thanks to Hongyin Quan
          <hq1@arl.wustl.edu> for pointing this out.

Thu Jul  9 17:48:37 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * docs/implrepo.html: Carlos's comments have been addressed.

Thu Jul  9 15:12:35 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * tao/deep_free.cpp: wasn't freeing string fields of structs.

        * tests/Quoter/Makefile: removed STL vestige.

Wed Jul  8 21:08:53 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * docs/implrepo.html:
          Quick revision and added comments with remaining issues.

Wed Jul  8 19:01:02 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * docs/implrepo.html: Another big revision of the paper.

Wed Jul  8 17:13:00 1998  Jeff Parsons  <jp4@cs.wustl.edu>

        * TAO/tests/Cubit/TAO/DII_Cubit/client.cpp,
          TAO/tests/Cubit/TAO/DII_Cubit/client.h,
          TAO/tests/Cubit/TAO/DII_Cubit/DII_Cubit.dsw,
          TAO/tests/Cubit/TAO/DII_Cubit/DII_Cubit_Test.cpp,
          TAO/tests/Cubit/TAO/DII_Cubit/DII_Cubit_Test.dsp,
          TAO/tests/Cubit/TAO/DII_Cubit/README,
          TAO/tests/Cubit/TAO/DII_Cubit/Makefile:
          Combined client.h and client.cpp into one file,
          initialized the return variables in all the Cubit
          operations (to get rid of some UMRs in Purify),
          removed the one-button test file DII_Cubit_Test.cpp
          and the corresponding project file in VC (the perl
          script does the same thing and more safely), updated
          the DII_Cubit.dsw, Makefile and README files.

Tue Jul  8 14:00:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * orbsvcs/orbsvcs/orbsvcs.dsp: When changing the RtecEventComm.id
          file or the RtecScheduler.idl file, it is needed to
          recompile the RtecEventChannelAdmin.idl file. This is a common
          problem. So the programmer has to take care that the
          dependencies in the Makefile or VC++ project file
          are set properly.

        * orbsvcs/tests/Simulator/Event_Supplier/DOVE_Supplier.cpp,
          orbsvcs/tests/Simulator/DOVEBrowser/PushConsumer.java,
          orbsvcs/tests/Simulator/DOVEBrowser/PushConsumer.java.JDK1.2,
          orbsvcs/tests/Simulator/README:
          Simplified the event data.

Tue Jul  7 22:11:17 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Trader.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Trader_T.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.{h,cpp}:
          Fixed DEC cxx errors, addressed a memory leak.

Tue Jul  7 20:48:37 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/Connect.{h,cpp}:  Revert my previous changes.

Tue Jul  7 19:47:15 198   Jeff Parsons <jp4@cs.wustl.edu>

        * TAO/tao/Request.cpp: Slight modification (Andy's
          suggestion) to send_oneway (), getting rid of an
          error message when shutting down the Cubit server
          via DII.

Tue Jul  7 19:25:55 1998  Jeff Parsons <jp4@cs.wustl.edu>

        * tests/Cubit/TAO/DII_Cubit/DII_Cubit_Test.cpp:
          New file that implements a "one-button" DII Cubit test.
        * DII_Cubit/Makefile: Added a build for dii_cubit_test.exe.
        * DII_Cubit/DII_Cubit_Test.dsp: New project in the workspace.
        * DII_Cubit/DII_Cubit.dsw: Updated workspace (new project).

Tue Jul  7 08:21:41 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * TAO_IDL/Makefile:
        * orbsvcs/Dump_Schedule/Makefile:
        * orbsvcs/Event_Service/Makefile:
        * orbsvcs/LifeCycle_Service/Makefile:
        * orbsvcs/Naming_Service/Makefile:
        * orbsvcs/Scheduling_Service/Makefile:
        * orbsvcs/orbsvcs/Makefile:
        * orbsvcs/tests/Concurrency/Makefile:
        * orbsvcs/tests/EC_Multiple/Makefile:
        * orbsvcs/tests/EC_Throughput/Makefile:
        * orbsvcs/tests/Event_Latency/Makefile:
        * orbsvcs/tests/Logger/Makefile:
        * orbsvcs/tests/Simple_Naming/Makefile:
        * tao/Makefile:
        * tests/CDR/Makefile:
        * tests/Cubit/TAO/IDL_Cubit/Makefile:
        * tests/Cubit/TAO/MT_Cubit/Makefile:
        * tests/OctetSeq/Makefile:
        * tests/POA/Default_Servant/Makefile:
        * tests/POA/Explicit_Activation/Makefile:
        * tests/POA/FindPOA/Makefile:
        * tests/POA/Generic_Servant/Makefile:
        * tests/POA/NewPOA/Makefile:
        * tests/POA/On_Demand_Activation/Makefile:
        * tests/POA/RootPOA/Makefile:
        * tests/Param_Test/Makefile:
        * tests/Quoter/Makefile:
        * tests/Thruput/TAO/Makefile:
        * tests/NestedUpcall/Reactor/Makefile:
        * tests/NestedUpcall/Triangle_Test/Makefile:
          Updated dependencies.

Tue Jul 07 07:36:36 1998  David L. Levine  <levine@cs.wustl.edu>

        * tao/compat/objbase.h: use #if 0 instead of // to comment out a
          multiline #define, to avoid warning about a multiline comment.

        * tests/Param_Test/results.{h,cpp}: added trailing $ to Id string.

Mon Jul  6 19:33:54 1998  Jeff Parsons  <jp4@cs.wustl,edu>

        * TAO/tests/Cubit/TAO/DII_Cubit/client.cpp:
          Made the shutdown request DII instead of SII. Everything
          works on NT except for the shutdown option. Unix is OK.
          Also, changed the parse_args call to come after initializing
          the orb, so other orb-specific args can be used and not
          confuse parse_args.

Mon Jul  6 19:17:00 1998  Michael Kircher <mk1@cs.wustl.edu>

        * docs/Options.html: Added documentation about the
          -ORBiiopprofilelock switch.

Mon Jul  6 17:00:00 1998  Jeff Parsons   <jp4@cs.wustl.edu>

        * TAO/tests/Cubit/TAO/DII_Cubit/client.{h,cpp}:
          Added a DII request on the naming service to get the
          Cubit factory IOR, plus code to implement all the
          command line options. Built with SunCC, it works on Unix,
          but not yet on NT.

Mon Jul  6 15:46:35 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/decode.cpp:
          Strings contain a nested CDR with the bounds for it, the
          demarshalling code in that case was invoking the TypeCode
          constructor with the wrong parameters, hence the bounds were
          invalid.  The problem only shows up now because we were ignoring
          the bounds in previous releases.

Mon Jul  6 15:24:21 1998  Matthew J Braun  <mjb2@cec.wustl.edu>

        * tests/Logger/client.h
        * tests/Logger/client.cpp
        * orbsvcs/orbsvcs/Log/Logger_i.h
        * orbsvcs/orbsvcs/Log/Logger_i.cpp
        * orbsvcs/orbsvcs/Logger.idl

          Routine checkin. Ignore the man behind that curtain....
          Fully working version complete, but not yet Purified.

Mon Jul 06 15:13:11 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/compat/initguid.h: Reordered some stuff.

        * tao/corba.h: Don't include in "compat/initguid.h" anymore.

Mon Jul  6 15:10:30 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/Naming_Service/Makefile:
          Updated dependencies.

        * orbsvcs/tests/EC_Throughput/ECT_Data.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer.cpp:
          The CDR size was wrong, this resulted in all kind of strange
          errors n the client side. This is another reminder that an octet
          sequence only uses a single Message_Block, not a chain of them.

Mon Jul 06 14:58:14 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/IIOP_Object.{h,cpp}:
        * tao/Object.{h,i,cpp}:
        * tao/Server_Request.{h,cpp}:
        * tao/compat/objbase.h: Renamed REFIID to TAO_REFIID and
          DEFINE_GUID to TAO_DEFINE_GUID to avoid conflict with MSVC's
          COM.  We don't support COM at this moment.

        * tao/compat/objbase.h: Disable the definition of TAO_VARENUM.  It
          is not used currently.  Thanks to Maximilian Hoferer
          <mhoferer@krones.de> for noticing this.

Mon Jul 06 09:07:36 1998  Steve Huston  <shuston@riverace.com>

        * tao/ORB_Core.{i cpp}: Removed redundant preprocessing token
          concatentations - HP-UX aCC warned about them.

        * tao/Connect.h: Added #include "tao/corba.h" so the defs are visible
          at template instantiation on AIX xlC.

Mon Jul  6 04:45:02 1998  Nanbor Wang  <nanbor@cs.wustl.edu>

        * tao/Connect.h (TAO_Client_Connect_Handler): Added a new data
          member <reactive_> to trace whether this client connection is
          running reactively or in a separate thread (other than the main
          thread.)

        * tao/Connect.cpp (open,close,send_request): Check to see if the
          client is going to run in a separate thread (by comparing its
          thread id with that of reactor's.)  If so, the handler won't try
          to register itself with the reactor and simply block on the
          socket IO calls.  This change enables the NestedUpcall/Reactor
          example to use the thread-per-connection strategy.

Sun Jul  5 21:22:42 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tao/orbconf.h: Undid the change I made on July 3.  Although it
          fixed the one problem I was looking at, it broke everything
          else.  Oops.

        * TAO_IDL/be/be_codegen.cpp: Changed the TAO_EXPORT_MACRO
          definition to override any that came before.  Without this the
          ordering of includes (putting corba.h before an orbsvc, such as
          CosNamingC.h) would break in certain configurations.  Also moved
          it after the includes so it shouldn't affect included files.

Sat Jul  4 01:18:21 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Constraint_Interpreter.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_Visitor.cpp:
        * orbsvcs/orbsvcs/Trader/Constraint_l.cpp:
        * orbsvcs/orbsvcs/Trader/Offer_Interpreters.cpp:
        * orbsvcs/orbsvcs/Trader/Service_Type_Repository.cpp:
        * orbsvcs/orbsvcs/Trader/Trader.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.cpp:
          Addressed warnings/errors on IRIX.

Fri Jul 03 21:51:44 1998  David L. Levine  <levine@cs.wustl.edu>

        * orbsvcs/tests/EC_Throughput/ECT_Supplier.cpp (parse_args):
          reset n_suppliers_ to 1, if <= 0, before the ACE_ERROR_RETURN
          instead of after.  (supplier_task): cast event_count_ to
          CORBA::ULong to avoid signed/unsigned comparison.

        * orbsvcs/tests/EC_Throughput/ECT_Consumer.cpp (push_consumer):
          commented out unused local "ID".

Fri Jul  3 19:54:03 1998  Darrell Brunsch <brunsch@cs.wustl.edu>

        * tao/orbconf.h: Changed the TAO_NAMESPACE_STORAGE_CLASS macros to
          work better with namespaces on MSVC.

Fri Jul  3 18:40:46 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.{h,cpp}:
          Debugged and tested directed queries.

        * orbsvcs/tests/Trading/Offer_Importer.{h,cpp}:
        * orbsvcs/tests/Trading/import_test.cpp:
          Added code to test directed queries.

Fri Jul 03 17:30:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * orbsvcs/tests/Simulator/README: Added more documentation.

        * orbsvcs/tests/Simulator/DOVEBrowser/PushConsumer.java: Register
          now only for notification events.

        * orbsvcs/tests/Simulator/DOVEMIB/AnyAnalyser.{h,cpp}: support time stamps.

        * orbsvcs/tests/Simulator/DOVEMIB/DOVEMIB.{h,cpp}: support time stamps.

        * orbsvcs/tests/Simulator/DOVEMIB/PrintVisitor.{h,cpp}: support time stamps

        * orbsvcs/tests/Simulator/Event_Supplier/Event_Sup.{h, cpp}: moved
          a lot of connection management into the new DOVE Supplier.

        * orbsvcs/tests/Simulator/Event_Supplier/Event_Sup.dsp: Added the DOVE
          Suplier files.

        * orbsvcs/tests/Simulator/Event_Supplier/DOVE_Supplier.{h,cpp}: All
          the connection management with the event service is done here.
          A standardized interface is now supported, thanks to
          Kevin Stanley <kstanley1@mdc.com>.

Fri Jul 03 16:38:12 1998  Steve Huston  <shuston@riverace.com>

        * tao/Sequence.h (TAO_Unbounded_Sequence<CORBA::Octet>) Removed the
          template type specification from constructor names so that this
          compiles on AIX xlC as well as Sun C++ and HPUX aCC.

Fri Jul 03 13:58:08 1998  David L. Levine  <levine@cs.wustl.edu>

        * TAO version 0.1.37 released.

Fri Jul  3 13:05:01 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/tests/EC_Throughput/ECT_Data.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.cpp:
          Fixed template instantiations.

Fri Jul 03 11:36:04 1998  David L. Levine  <levine@cs.wustl.edu>

        * tests/Param_Test/Makefile,
          tests/Cubit/TAO/IDL_Cubit/Makefile: disabled perfect
          hashing until we can stabilize its use.

Fri Jul 03 11:34:38 1998  Carlos O'Ryan  <coryan@JIG>

        * orbsvcs/tests/EC_Throughput/Makefile:
          Added new object files to the Makefile.

        * orbsvcs/orbsvcs/Event/EC_Gateway.cpp:
          Protected against null publication or subscription list.

        * orbsvcs/orbsvcs/Event/Event_Channel.cpp:
          Removed a possible race condition in consumer
          disconnections. Thanks to Thomas Venturella <tventurell@mdc.com>
          for the last two fixes.

Fri Jul 03 08:40:28 1998  Steve Huston  <shuston@riverace.com>

        * tao/corba.h: Reordered some includes to get it to compile clean on
          HP-UX aCC.

Fri Jul 03 02:03:23 1998  Carlos O'Ryan  <coryan@JIG>

        * orbsvcs/tests/EC_Throughput/ECT_Data.h:
        * orbsvcs/tests/EC_Throughput/ECT_Data.cpp:
        * orbsvcs/tests/EC_Throughput/data.idl:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.cpp:
          Added an example on how to send C++ data across the wire.

        * orbsvcs/orbsvcs.dsw:
        * orbsvcs/tests/EC_Throughput/EC_Throughput.dsw:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.dsp:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer.dsp:
          Added MSVC++ project files for the new test.

        * tao/CDR.h:
          Fixed typo in a extraction operator for InputCDR and strings, it
          was declared as operator>>.

Fri Jul  3 00:39:03 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Constraint_Interpreter.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Trader.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.{h,cpp}:
          Added code to sort by preference the merged result sequence of a
          federated query.

Thu Jul  2 19:41:46 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * tests/Param_Test/Makefile:
        * tests/Cubit/TAO/IDL_Cubit/Makefile: Added TAO_IDLFLAGS -P to enable
          Perfect-hashed-operation-lookup strategy for the idl compiler.

Thu Jul  2 19:22:24 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/tests/Makefile:
        * orbsvcs/tests/EC_Throughput/Makefile:
        * orbsvcs/tests/EC_Throughput/svc.conf:
        * orbsvcs/tests/EC_Throughput/data.idl:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer.h:
        * orbsvcs/tests/EC_Throughput/ECT_Consumer.cpp:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.h:
        * orbsvcs/tests/EC_Throughput/ECT_Supplier.cpp:
          This test shows how to use the EC for custom marshalling, later
          it will be adapted to measure throughput in the EC.

        * orbsvcs/orbsvcs/RtecEventComm.idl:
          Added some padding so the payload (an encapsulated CDR) is
          always properly aligned.

        * orbsvcs/tests/EC_Throughput/README:
        * docs/releasenotes/ec.html:
          Included some info about this new test.

Thu Jul  2 14:28:01 1998  Aniruddha Gokhale  <gokhale@mambo.cs.wustl.edu>

        * TAO_IDL/be/be_array.cpp: We were generating incorrect code for
        the out () and _retn () methods of the Array_var class.

        * TAO_IDL/be_include/be.h: Missing #include for Process.h added.

        * TAO_IDL/Makefile: Ran make depend

        * tests/Param_Test/README: Added description for the array tests.

Thu Jul  2 12:36:28 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/orbsvcs/Trader/Trader[_T].{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Constraint_Visitors.{h,cpp}:
          For the 'in' operator in the standard OMG constraint language, the
          Constraint Interpreter needs to identify and extract from Anys
          sequences of primitive types, regardless of how many times the
          sequence has been typedef'd. Added code to do this.

        * orbsvcs/tests/Trading/TTest.idl:
        * orbsvcs/tests/Trading/TT_Info.cpp:
        * orbsvcs/tests/Trading/Service_Type_Exporter.cpp:
        * orbsvcs/tests/Trading/Offer_Exporter.cpp:
          Now sends aliased sequences to the Trader to test the above
          enhancement.

Thu Jul  2 12:29:10 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        The Next round of changes for GPERF + TAO_IDL integration. NT
        related stuff have been taken care of. attributes also should work
        now.
        * TAO_IDL/driver/drv_args.cpp:
        * TAO_IDL/be_include/be_interface.h:
        * TAO_IDL/be_include/be_codegen.h:
        * TAO_IDL/be/be_interface.cpp:
        * TAO_IDL/be/be_helper.cpp:
        * TAO_IDL/be/be_codegen.cpp:

Thu Jul 02 09:17:57 1998  David L. Levine  <levine@cs.wustl.edu>

        * tests/CDR/growth.cpp (main),
          tests/OctetSeq/OctetSeq.cpp (run): replaced
          ACE_hrtime_t-to-ACE_INT32 static casts with ACE_U64_TO_U32
          for compatibility with ACE_U_LongLong.

        * tests/NestedUpcall/Triangle_Test/Object_A_Impl.cpp: added
          newline at end of file.

        * tests/POA/On_Demand_Activation/Servant_Locator.cpp (postinvoke):
          added ACE_UNUSED_ARG (my_servant) to avoid compile warning about
          unused variable with ACE_NDEBUG.

        * tests/Cubit/TAO/MT_Cubit/Task_Client (run_tests): use
          ACE_OS::fprintf instead of fprintf, and fixed the format
          specifier to match the argument type.

        * Makefile (release): use $(MAKE) instead of make for
          recursive make.

Thu Jul 02 01:50:58 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * tao/POA: Renamed TAO_POA_Locking to Synchronization.  Also
          renamed the related enums to not use the USE_ prefix.

Wed Jul  1 22:42:13 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/orbsvcs/Makefile:
        * orbsvcs/orbsvcs/CosTrading.idl:
          Merged Sequences.idl into CosTrading.idl.

        * orbsvcs/orbsvcs/Trader/Trader.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Trader_T.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Trader_Utils.{h,cpp}:
        * orbsvcs/orbsvcs/Trader/Trader_Interfaces.{h,cpp}:
          Addressed DEC cxx warnings/errors. Hopefully solved some, probbaly
          introduced more.

Wed Jul 01 21:14:11 1998  David L. Levine  <levine@cs.wustl.edu>

        * tests/Param_Test/any.cpp: commented out unused static
          any_table.

        * tests/Param_Test/fixed_array.cpp (check_validity): commented
          out unused local ret.

        * tests/Param_Test/{bd,ub}_str_seq.cpp (init_parameters):
          commented out unused local gen.

Wed Jul  1 19:20:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * orbsvcs/LifeCycle_Service/Makefile: I hopefully
          fixed the complains of the DEC cxx compiler.

Wed Jul  1 15:50:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * tao/ORB.cpp: Fixed a memory leak in the initial
          references code. The pointers (name_service_ and trading_service_)
          were not properly reused and not properly released.

        * tao/Operation_Table.h: Fixed a spelling problem with
          TAO_operation_db_entry.

Wed Jul  1 13:59:30 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * orbsvcs/LifeCycle_Service/Makefile: Removed STL flags.

        * tao/TAO.{h,cpp}: Passing in argc to the TAO_ORB_Manager by
          reference, since ORB_init takes argc by reference.

        * orbsvcs/Trading_Service/Trading_Service.{h,cpp}:
        * orbsvcs/Trading_Service/Makefile:
          Made Trading Service app resemble other orbsvcs apps. Accepts -TS*
          command line arguments. Has the ability to form a complete graph
          federation with other traders on the same multicast network.

        * orbsvcs/tests/Trading/Offer_Exporter.{h,cpp}:
        * orbsvcs/tests/Trading/Offer_Importer.{h,cpp}:
        * orbsvcs/tests/Trading/Service_Type_Exporter.{h,cpp}:
        * orbsvcs/tests/Trading/export_test.cpp:
        * orbsvcs/tests/Trading/Makfile:
          export_test will now export service types and offers to all
          traders linked to the multicast-enabled trader, so import_test
          will test federated queries.

        * orbsvcs/orbsvcs/IOR_Multicast.{h,cpp}: Added an init method for
          initialization outside the constructor.

        * orbsvcs/orbsvcs/Makefile: Changed macro name from
          TAO_HAS_DYNAMIC_PROPERTY_BUG to TAO_HAS_OBJECT_IN_STRUCT_MARSHAL_BUG.

        * orbsvcs/orbsvcs/Trader/*.*:
          o  Hopefully fixed DEC cxx errors/warnings.
          o  Added command-line configuration of trader policies, interfaces,
             and multithreading support.
          o  Debugged link interface and federated queries.
          o  Added explicit template specialization.

Wed Jul  1 1:55:23 1998 Jeff Parsons <jp4@cs.wustl.edu>

        * TAO/tests/Cubit/TAO/DII_Cubit/Makefile: It works, at least with
          SunCC. It builds the DII client and also the IDL server if
          necessary (since we run it before running client.exe) -thanks
          to David Levine for that.
        * TAO/tests/Cubit/TAO/DII_Cubit/client.h, cpp: Now builds and
          executes on Unix and NT. Also added some macros for the
          environment checking inside the operations.

Wed Jul  1 10:28:07 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        * TAO_IDL/be_include/be_interface.h (be_type): Fixed the warnings
          in g++.

Wed Jul  1 06:36:11 1998  Aniruddha Gokhale  <gokhale@mambo.cs.wustl.edu>

        * TAO_IDL/be/be_visitor_sequence/any_op_cs.cpp: For the copying
          version of the <<= operator, we were not doing a copy. Thanks to
          Seth Widoff for pointing this out.

Tue Jun 30 22:08:38 1998  David L. Levine  <levine@cs.wustl.edu>

        * TAO_IDL/be/be_codegen.cpp (lookup_strategy): added full
          qualification of TAO_CodeGen::LOOKUP_STRATEGY return type.

Tue Jun 30 18:27:49 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/Sequence_T.i:
          Another ACE_CAST_CONST problem, thanks to Seth Widoff
          (sbw1@cs.wustl.edu) for catching this one.

Tue Jun 30 18:21:04 1998  Seth Benjamin Widoff  <sbw1@waltz.cs.wustl.edu>

        * tests/Quoter/Makefile:
          Removed STL includes --- no longer needed for Trading Service.

Tue Jun 30 16:50:12 1998  Alexander Babu Arulanthu  <alex@cs.wustl.edu>

        First round of changes for GPERF + TAO_IDL integration. Execute
        tao_idl with -P option to enable PERFECT_HASH operation lookup
        strategy.

        IDL-Attributes are not supported yet.

        * TAO_IDL/driver/drv_args.cpp: Added option -P to enable
          PERFECT_HASH operation lookup strategy.

        * TAO_IDL/be_include/be_interface.h: Added methods to generate
          perfect hashing operation lookup table in the server skeleton
          code.

        * TAO_IDL/be_include/be_helper.h (class TAO_OutStream): Added a
          new stream type GPERF_INPUT to indicate the outstream is for
          gperf's input file.

        * TAO_IDL/be_include/be_codegen.h (class TAO_CodeGen):  Added <enum
          LOOKUP_STRATEGY {...}> to indicate various lookup
          strategies. Added the member and access methods that keeps track
          of the TAO_OutStream that corresponds to the gperf's input file.

        * TAO_IDL/be_include/be.h: Included "ace/Process.h".

        * TAO_IDL/be/be_interface.cpp:

        * TAO_IDL/be/be_helper.cpp:

        * TAO_IDL/be/be_codegen.cpp:

        * tao/Operation_Table.h (TAO_Perfect_Hash_OpTable):
        * tao/Operation_Table.cpp :
          Defined the class TAO_Perfect_Hash_OpTable, the factory
          class for Perfect_Hashing-Operation_Lookup strategy.

Tue Jun 30 13:23:59 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * orbsvcs/orbsvcs/Scheduler_Factory.cpp:
          Workaround Sun/CC problem when compiling with -O (but not
          -fast). Apparently it does not like to use static (file) scope
          symbols in the definition of a template.

Tue Jun 30 10:40:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * docs/configurations.html: Added documentation about the
          -ORBiiopprofilelock switch.

        * tao/Client_Strategy_Factory.{h,cpp}: Added the create_iiop_profile_lock (void)

        * tao/GIOP.cpp: Use ACE_Lock instead of ACE_SYNCH_MUTEX.

        * tao/IIOP_Object.cpp: Added the initialization of the fwd_profile_lock_ptr to
          the constructor.

        * tao/IIOP_Object.h: Changed the forward profile lock to a pointer to a lock.

        * tao/IIOP_Object.i: Added the initialization of the fwd_profile_lock_ptr to
          the constructor.

        * tao/default_client.{h,cpp}: Added the parsing of "-ORBportiiopproflielock" to
          the parse_args method. "thread" (default) means to use a mutex lock
          on the access of the forwarding iiop profile. "null" means, use a null
          mutex, which is faster, but does not provide any protection.
          Added also the function create_iiop_profile_lock () to allow
          others to create a new lock, depending on the above mentioned switch.

Tue Jun 30 00:58:57 1998  Douglas C. Schmidt  <schmidt@cs.wustl.edu>

        * TAO version 0.1.36 released.

Mon Jun 29 14:43:17 1998  David L. Levine  <levine@cs.wustl.edu>

        * TAO_IDL/be/be_array.cpp (gen_forany_defn): changed
          declaration of friend CORBA::Any to friend class CORBA_Any,
          to keep DEC cxx from complaining.  Also, commented out
          the declaration, because it doesn't appear to be necessary.

        * tests/OctetSeq/OctetSeq.cpp (main): cast sizeof to int
          to avoid egcs warning about signed/unsigned comparison.

Mon Jun 29 11:05:03 1998  Carlos O'Ryan  <coryan@cs.wustl.edu>

        * tao/encode.cpp:
          Removed unused variable.

Mon Jun 29 11:00:26 1998  Aniruddha Gokhale  <gokhale@mambo.cs.wustl.edu>

        * TAO_IDL/be/be_visitor_operation/operation_cs.cpp:

          After the call to do_static_call, we were not checking if some
          exception was raised. This was causing major problems if there was
          any post do_static_call processing such as narrowing to be
          done. Thanks to Seth Widoff for reporting the problem.

Sun Jun 28 21:33:48 1998  David L. Levine  <levine@cs.wustl.edu>

        * tao/GIOP.cpp: replaced ACE_SYNCH_RW_MUTEX with
          ACE_SYNCH_MUTEX so that it will compile with g++
          (and be correct :-).

        * tests/OctetSeq/OctetSeq.cpp (main): changed loop index
          i from u_int to int to avoid signed/unsigned comparison.

Sun Jun 28 16:10:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * tests/NestedUpcalls/Triangle_Test/Makefile: Added
          this Makefile for use on Unix machines.

Sun Jun 28 15:30:00 1998  Michael Kircher  <mk1@cs.wustl.edu>

        * tao/GIOP.cpp: In method location_forwarding, removed
          the explicit release of the IIOP_Object. It is implicitly
          released by the release of the CORBA::OBject pointer.

        * tests/Quoter/Generic_Factory_Impl.{h,cpp}: Splitted
          the create_object method into two parts.

Sat Jun 27 18:13:05 1998  Irfan Pyarali  <irfan@cs.wustl.edu>

        * TAO/tests/POA/Explicit_Activation/server.cpp (main): Changed
          #include "ace/Timeprobes.h" to #include "tao/Timeprobes.h".
