--- CC_command.tab.cpp.orig	Thu Jun 18 11:32:19 1998
+++ CC_command.tab.cpp	Thu Jun 18 11:31:03 1998
@@ -1,4 +1,4 @@
-
+// $Id$
 # line 19 "CC_command.y"
 #include "CC_command.h"
 #include "ace/ACE.h"
@@ -53,7 +53,7 @@
 #include <memory.h>
 #endif
 
-#include <values.h>
+/* #include <values.h> */
 
 #ifdef __cplusplus
 
@@ -240,7 +240,7 @@
  * Copyright (c) 1993 by Sun Microsystems, Inc.
  */
 
-#pragma ident	"@(#)yaccpar	6.12	93/06/07 SMI"
+/* #pragma ident	"@(#)yaccpar	6.12	93/06/07 SMI" */
 
 /*
 ** Skeleton parser driver for yacc output
@@ -303,7 +303,7 @@
 #define ACE_CC_YYLEX()		ace_cc_yycvtok(ace_cc_yylex())
 /*
 ** ace_cc_yycvtok - return a token if i is a wchar_t value that exceeds 255.
-**	If i<255, i itself is the token.  If i>255 but the neither 
+**	If i<255, i itself is the token.  If i>255 but the neither
 **	of the 30th or 31st bit is on, i is already a token.
 */
 #if defined(__STDC__) || defined(__cplusplus)
@@ -324,7 +324,7 @@
 		while ((last>=first)&&(first>=0)) {/*Binary search loop*/
 			mid = (first+last)/2;
 			j = ace_cc_yymbchars[mid].character;
-			if( j==i ){/*Found*/ 
+			if( j==i ){/*Found*/
 				return ace_cc_yymbchars[mid].tvalue;
 			}else if( j<i ){
 				first = mid + 1;
@@ -766,7 +766,7 @@
 	*/
 	switch( ace_cc_yytmp )
 	{
-		
+
 case 2:
 # line 52 "CC_command.y"
 { cmdlist->add(new CC_Sleep_Cmd(0));
@@ -864,4 +864,3 @@
 	}
 	goto ace_cc_yystack;		/* reset registers in driver code */
 }
-
