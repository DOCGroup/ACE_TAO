$Id$

This is the readme file for the tests of the concurrency service.

The test program has been changed to use a configuration file instead of
hard coded test procedures. The old test procedures are left in the
program for backwards compatibility, but they will be removed at a later
point in time.

The description of the old tests is in the readme file for the
concurrency service in the directory:
        $TAO_ROOT/orbsvcs/Concurrency_Control
please consult this file for a decription of these tests.

The new tests are described by this simle test language:

start:		/* empty */
                | cmd_list
		;

cmd_list:	cmd_list cmd
		| cmd
		;

cmd:		  start <config_file_name> ;
		| create <lock_set_name> ;
		| create ;
		| lock <lock_set_name> <lock_mode> ;
		| lock <lock_mode> ;
		| unlock <lock_set_name> <lock_mode> ;
		| unlock <lock_mode> ;
		| try_lock <lock_set_name> <lock_mode> ;
		| try_lock <lock_mode> ;
		| change_mode <lock_set_name> <lock_mode> <lock_mode> ;
		| change_mode <lock_mode> <lock_mode> ;
		| lookup <lock_set_name> ;
		| sleep <int> ;
		| repeat <int> ;
		| wait ;
		| wait <prompt> ;
		;

lock_mode:	read | intention_read | upgrade | write | intention_write

prompt:		" string "

If the lock set name is left out the default lock set is used. The
repeat command just sets a global variable in the test, i.e. the last
repeat command is the one that will take effect - the whole script is
run the specified number of times.

An example of a script (assuming it's called 'test.cfg'):

  // Start a new CC_client with test.txt as script file
  start test.txt;
  // Create the lock set "ls1" and register it in the naming service
  create ls1;
  // Lock the read lock in the lock set
  lock ls1 read;
  // Try the read lock
  try_lock ls1 read;
  // sleep two seconds
  sleep 2;
  // Wait for the user to press enter
  wait;
  // Unlock the read lock in the ls1 lock set
  unlock ls1 read;
  // Change the mode of the read lock in the ls1 lock set to write mode
  change_mode ls1 read write;

The test can be run with the command ./CC_client -c test.cfg.

There are currentlig the following tests in the
   $TAO_ROOT/orbsvcs/tests/Concurrency
directory:
  basic_tests.cfg    The same as running ./CC_client -b
  extended_tests.cfg The same as running ./CC_client -e '1;test'
                                         ./CC_client -e '2;test'
                                         ./CC_client -e '3;test'
  test.dinphil       Dining philosophers. Uses test.phil[1-5]