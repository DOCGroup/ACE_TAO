#
# $Id$
#

This test verifies that the ORB's secure invocation mechanism is
functioning properly in the presence of specific QoP policies.  
It expands on what the Secure_Invocation server does by activating an 
object with a POA that has a higher than SecQoPNoProtection policy 
assigned. The idea is to prevent non-secure invocations for servants,
registred with such POA, even when the ORB supports non-secure invocations.

To do that run the server with "-s 1" to set SecQoPNoProtection policy:

   $ ./server -o server.ior -s 1 -orbsvcconf server.conf

Running the client without SSL should fail:

   $ ./client -k file://./server.ior

   (28594|3085850304) EXCEPTION, Caught exception:
   system exception, ID 'IDL:omg.org/CORBA/NO_PERMISSION:1.0'
   Unknown vendor minor code id (0), minor code = 0, completed = NO

Running the client over secure transport (with SSL) should be ok:


   $ ./client -k file://./server.ior -orbsvcconf client.conf

   Policy test passed

The client accepts "-d 0|1" option to say if you want it to try setting 
a SecQoPNoProtection policy on the IOR from the server before making an 
invocation.

To run the possible combinations of protected and unprotected clients and 
server, while either requiring protection (or not), or making unprotected 
invocations (or not) - use the run_test.pl script.

 
