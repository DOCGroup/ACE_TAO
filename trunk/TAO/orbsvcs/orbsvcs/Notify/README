$Id$

README for the Notification Service
-----------------------------------

# @@ Pradeep: do you have a document that describes the internals of
#    the service?  If not, this is a good place to write that down,
#    and a good start for the paper...

The following interfaces have been implemented:
# @@ Pradeep it said 'grammer' it is 'grammar'...
CosNotifyFilter::Filter (supports the Trader TCL grammar)
CosNotifyFilter::FilterFactory

CosNotifyChannelAdmin::ProxyPushConsumer
CosNotifyChannelAdmin::StructuredProxyPushConsumer
CosNotifyChannelAdmin::SequenceProxyPushConsumer

CosNotifyChannelAdmin::ProxyPushSupplier
CosNotifyChannelAdmin::StructuredProxyPushSupplier
CosNotifyChannelAdmin::SequenceProxyPushSupplier (push not implemented)

CosNotifyChannelAdmin::ConsumerAdmin
CosNotifyChannelAdmin::SupplierAdmin
CosNotifyChannelAdmin::EventChannel

Work in progress:
----------------

* Testing of the features implemented so far.
* Support for QoS properties.

Usage:
-----
Use the $TAO_ROOT/orbsvcs/Notify_Service to register a ChannelFactory with the
Naming Service.See the README for more details.

Examples:
--------
The $TAO_ROOT/orbsvcs/examples/Notify/Filter example shows how to using
filtering.

The $TAO_ROOT/orbsvcs/examples/Notify/Subscribe example shows how consumers
can subscribe only to the required event types.

send comments/suggestions to Pradeep Gore <pradeep@cs.wustl.edu>
