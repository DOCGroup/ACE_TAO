#
# Makefile for building	the TAO	SSLIOP library
#

!ifdef SSL_ROOT
NAME = TAO_SSLIOP
!endif

TAO_IDL	= $(CORE_BINDIR)\tao_idl -g $(CORE_BINDIR)\gperf.exe \
	-I..\..	-Ge 1 -Wb,export_macro=TAO_SSLIOP_Export \
	-Wb,export_include=SSLIOP/SSLIOP_Export.h -Wb,pre_include=ace/pre.h \
	-Wb,post_include=ace/post.h

IDLFILES = \
	$(IDLDIR)\SSLIOP.idl

OBJFILES = \
	$(OBJDIR)\IIOP_SSL_Acceptor.obj \
	$(OBJDIR)\IIOP_SSL_Connection_Handler.obj \
       	$(OBJDIR)\IIOP_SSL_Transport.obj \
	$(OBJDIR)\IIOP_SSL_Connector.obj \
        $(OBJDIR)\ssl_endpoints.obj \
	$(OBJDIR)\SSLIOP_Accept_Strategy.obj \
	$(OBJDIR)\SSLIOP_Acceptor.obj \
	$(OBJDIR)\SSLIOP_Connection_Handler.obj \
	$(OBJDIR)\SSLIOP_Connector.obj \
	$(OBJDIR)\SSLIOP_Credentials.obj \
	$(OBJDIR)\SSLIOP_Current.obj \
	$(OBJDIR)\SSLIOP_Current_Impl.obj \
	$(OBJDIR)\SSLIOP_EVP_PKEY.obj \
        $(OBJDIR)\SSLIOP_Endpoint.obj \
	$(OBJDIR)\SSLIOP_Factory.obj \
	$(OBJDIR)\SSLIOP_Invocation_Interceptor.obj \
	$(OBJDIR)\SSLIOP_ORBInitializer.obj \
	$(OBJDIR)\SSLIOP_Profile.obj \
	$(OBJDIR)\SSLIOP_ReceivedCredentials.obj \
	$(OBJDIR)\SSLIOP_TargetCredentials.obj \
	$(OBJDIR)\SSLIOP_Transport.obj \
	$(OBJDIR)\SSLIOP_Util.obj \
	$(OBJDIR)\SSLIOP_Vault.obj \
	$(OBJDIR)\SSLIOP_X509.obj \
        $(OBJDIR)\SSLIOPC.obj

RESOURCE = $(OBJDIR)\SSLIOP.res

CFLAGS = \
	$(ACE_CFLAGS) \
	$(TAO_CFLAGS) \
	$(TAO_PORTABLESERVER_CFLAGS) \
	$(ACE_SSL_CFLAGS) \
	$(SSL_CFLAGS) \
	$(TAO_SECURITY_CFLAGS) \
	$(TAO_SSLIOP_CFLAGS) \
	-DTAO_SSLIOP_BUILD_DLL

CPPDIR = .;SSLIOP

IDLDIR = .

INCDIR_NAME = orbsvcs\SSLIOP
INCLUDES = SSLIOP\*.h SSLIOP\*.i

LIBFILES = \
	$(ACE_LIB) \
	$(TAO_LIB) \
	$(TAO_PORTABLESERVER_LIB) \
	$(ACE_SSL_LIB) \
	$(SSL_LIB) \
	$(TAO_SECURITY_LIB)

all: idl_src_files

!include <$(ACE_ROOT)\include\makeinclude\build_core_library.bor>


#
# IDL Build rules
#

idl_src_files: $(IDLFILES:.idl=C.cpp)

$(IDLDIR)\SSLIOPC.cpp: $(IDLDIR)\SSLIOP.idl
	$(TAO_IDL) $**
