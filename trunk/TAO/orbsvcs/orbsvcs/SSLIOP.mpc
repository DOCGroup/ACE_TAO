// -*- MPC -*-
//
// $Id$

project(SSLIOP) : orbsvcslib, orbsvcs_output, install, security, ssl, pi_server, interceptors, tao_versioning_idl_defaults, ssliop_params_dup, svc_utils {
  sharedname   = TAO_SSLIOP
  idlflags    += -Wb,export_macro=TAO_SSLIOP_Export -Wb,export_include=orbsvcs/SSLIOP/SSLIOP_Export.h -SS
  dynamicflags += TAO_SSLIOP_BUILD_DLL
  tagchecks   += SSLIOP
  pch_header   =
  pch_source   =

  IDL_Files {
    SSLIOP.idl
  }

  Source_Files(ORBSVCS_COMPONENTS) {
    SSLIOP {
      ./SSLIOP/IIOP_SSL_Acceptor.cpp
      ./SSLIOP/IIOP_SSL_Connection_Handler.cpp
      ./SSLIOP/IIOP_SSL_Connector.cpp
      ./SSLIOP/IIOP_SSL_Transport.cpp
      ./SSLIOP/ssl_endpointsC.cpp
      ./SSLIOP/SSLIOP_Accept_Strategy.cpp
      ./SSLIOP/SSLIOP_Acceptor.cpp
      ./SSLIOP/SSLIOP_ClientCredentials.cpp
      ./SSLIOP/SSLIOP_Connection_Handler.cpp
      ./SSLIOP/SSLIOP_Connector.cpp
      ./SSLIOP/SSLIOP_Credentials.cpp
      ./SSLIOP/SSLIOP_CredentialsAcquirer.cpp
      ./SSLIOP/SSLIOP_CredentialsAcquirerFactory.cpp
      ./SSLIOP/SSLIOP_Current.cpp
      ./SSLIOP/SSLIOP_Current_Impl.cpp
      ./SSLIOP/SSLIOP_Endpoint.cpp
      ./SSLIOP/SSLIOP_EVP_PKEY.cpp
      ./SSLIOP/SSLIOP_Factory.cpp
      ./SSLIOP/SSLIOP_Invocation_Interceptor.cpp
      ./SSLIOP/SSLIOP_ORBInitializer.cpp
      ./SSLIOP/SSLIOP_OwnCredentials.cpp
      ./SSLIOP/SSLIOP_Profile.cpp
      ./SSLIOP/SSLIOP_TargetCredentials.cpp
      ./SSLIOP/SSLIOP_Transport.cpp
      ./SSLIOP/SSLIOP_Util.cpp
      SSLIOPC.cpp
    }
  }

  Header_Files {
    ./SSLIOP
  }

  Inline_Files {
    ./SSLIOP
  }

  Template_Files {
    ./SSLIOP/SSLIOP_OpenSSL_st_T.cpp
  }

  IDL_Files {
    idlflags += -Sci -Gp -Gd -Sa -Sorb \
                -o SSLIOP
    idlflags -= -St
    SSLIOP/ssl_endpoints.pidl
  }
}
