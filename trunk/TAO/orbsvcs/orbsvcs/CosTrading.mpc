// -*- MPC -*-
// $Id$

project(CosTrading) : orbsvcslib, core {
  sharedname   = TAO_CosTrading
  dynamicflags = TAO_TRADING_BUILD_DLL

  idlflags    += -Wb,stub_export_macro=TAO_Trading_Export -Wb,stub_export_include=orbsvcs/Trader/trading_export.h -Wb,skel_export_macro=TAO_Trading_Skel_Export -Wb,skel_export_include=orbsvcs/Trader/trading_skel_export.h

  IDL_Files {
    CosTrading.idl
    CosTradingRepos.idl
    CosTradingDynamic.idl
  }

  Source_Files {
    CosTradingC.cpp
    CosTradingReposC.cpp
    CosTradingDynamicC.cpp
  }

  Header_Files {
    CosTradingC.h
    CosTradingReposC.h
    CosTradingDynamicC.h
  }

  Inline_Files {
    CosTradingC.inl
    CosTradingReposC.inl
    CosTradingDynamicC.inl
  }

  // explicit Resource_Files to avoid including _Skel & _Serv rc files.
  Resource_Files{
    CosTrading.rc
  }
 
}


project(CosTrading_Skel) : orbsvcslib, core, trading, portableserver {
  sharedname   = TAO_CosTrading_Skel
  dynamicflags = TAO_TRADING_SKEL_BUILD_DLL

  IDL_Files {
  }

  Source_Files {
    CosTradingS.cpp
    CosTradingReposS.cpp
    CosTradingDynamicS.cpp
  }

  Header_Files {
    CosTradingS.h
    CosTradingReposS.h
    CosTradingDynamicS.h
  }

  Inline_Files {
    CosTradingS.inl
    CosTradingReposS.inl
    CosTradingDynamicS.inl
  }
}

project(CosTrading_Serv) : orbsvcslib, core, trading_skel, dynamicany, svc_utils {
  sharedname   = TAO_CosTrading_Serv
  dynamicflags = TAO_TRADING_BUILD_DLL
  tagchecks   += Trader
  pch_header   =
  pch_source   =

  IDL_Files {
  }

  Source_Files(ORBSVCS_COMPONENTS) {
    Trader {
      Trader
    }
  }
}
