// -*- MPC -*-
// $Id$

project(FTORB_Utils) : orbsvcslib, core, iormanip, portableserver, minimum_corba {
  sharedname   = TAO_FTORB_Utils
  idlflags    += -Wb,skel_export_include=tao/PortableServer/PolicyS.h
  dynamicflags = TAO_FT_ORB_UTILS_BUILD_DLL
  tagchecks   += FTORB_Utils

  // Since the PortableGroup_Simple_DS.idl file is shared between 3 libraries,
  // we must generate using an export (for the PortableGroup library).
  // However, we don't want to export it from this library or
  // FTRT_EventChannel.
  macros += TAO_PORTABLEGROUP_SIMPLE_HAS_DLL=0
  IDL_Files {
    idlflags += -Wb,export_macro=TAO_PortableGroup_Simple_Export -Wb,export_include=orbsvcs/PortableGroup_Simple_export.h
    PortableGroup_Simple_DS.idl
  }

  IDL_Files {
    idlflags += -Wb,export_macro=TAO_FT_ORB_Utils_Export -Wb,export_include=orbsvcs/FaultTolerance/FT_ORB_Utils_export.h
    FT_CORBA_ORB.idl
  }

  Source_Files(ORBSVCS_COMPONENTS) {
    FTORB_Utils {
      PortableGroup_Simple_DSC.cpp
      FT_CORBA_ORBC.cpp
      FT_CORBA_ORBS.cpp
      FaultTolerance/FT_IOGR_Property.cpp
    }
  }

  Header_Files {
    PortableGroup_Simple_export.h
    PortableGroup_Simple_DSS.h
    PortableGroup_Simple_DSS_T.h
    FaultTolerance/FT_ORB_Utils_export.h
  }

  Inline_Files {
    PortableGroup_Simple_DSS_T.inl
  }

  Template_Files {
    PortableGroup_Simple_DSS_T.cpp
  }
}

project(FT_ClientORB) : orbsvcslib, ftorbutils, core, messaging, portablegroup {
  sharedname   = TAO_FT_ClientORB
  dynamicflags = TAO_FT_CLIENTORB_BUILD_DLL
  tagchecks   += FT_ClientORB
  libs        += TAO_FTORB_Utils
  requires    += ace_uuid

  IDL_Files {
  }

  Source_Files(ORBSVCS_COMPONENTS) {
    FT_ClientORB {
       FaultTolerance/FT_ClientRequest_Interceptor.cpp
       FaultTolerance/FT_ClientORBInitializer.cpp
       FaultTolerance/FT_ClientPolicyFactory.cpp
       FaultTolerance/FT_ClientPolicy_i.cpp
       FaultTolerance/FT_ClientService_Activate.cpp
       FaultTolerance/FT_Endpoint_Selector_Factory.cpp
       FaultTolerance/FT_Invocation_Endpoint_Selectors.cpp
       FaultTolerance/FT_Service_Callbacks.cpp
    }
  }

  Template_Files {
  }
}

project(FT_ServerORB) : orbsvcslib, ftorbutils, core, messaging, portablegroup {
  sharedname   = TAO_FT_ServerORB
  dynamicflags = TAO_FT_SERVERORB_BUILD_DLL
  tagchecks   += FT_ServerORB
  libs        += TAO_FTORB_Utils

  IDL_Files {
  }

  Source_Files(ORBSVCS_COMPONENTS) {
    FT_ServerORB {
       FaultTolerance/FT_ServerORBInitializer.cpp
       FaultTolerance/FT_ServerPolicyFactory.cpp
       FaultTolerance/FT_ServerPolicy_i.cpp
       FaultTolerance/FT_ServerRequest_Interceptor.cpp
       FaultTolerance/FT_ServerService_Activate.cpp
    }
  }

  Template_Files {
  }
}
