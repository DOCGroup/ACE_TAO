// ******  Code generated by the The ACE ORB (TAO) IDL Compiler *******
// TAO ORB and the TAO IDL Compiler have been developed by Washington 
// University Computer Science's Distributed Object Computing Group.
//
// Information on TAO is available at
//                 http://www.cs.wustl.edu/~schmidt/TAO.html

#if !defined (_TAO_IDL_RTECEVENTCOMMS_H_)
#define _TAO_IDL_RTECEVENTCOMMS_H_

#include "RtecEventCommC.h"

class POA_RtecEventComm
{
public:
  class PushConsumer;
  typedef PushConsumer *PushConsumer_ptr;
  class PushConsumer : public virtual RtecEventComm::PushConsumer
  {
  protected:
    PushConsumer (const char *obj_name = 0);
    virtual ~PushConsumer (void);
  public:
    virtual void push (const RtecEventComm::EventSet &data,  CORBA::Environment &env) = 0; // pure virtual
    static void push_skel (CORBA::ServerRequest &req, CORBA::Object_ptr obj, CORBA::Environment &env);

    virtual void disconnect_push_consumer ( CORBA::Environment &env) = 0; // pure virtual
    static void disconnect_push_consumer_skel (CORBA::ServerRequest &req, CORBA::Object_ptr obj, CORBA::Environment &env);

    static void _is_a_skel (CORBA::ServerRequest &req, CORBA::Object_ptr obj, CORBA::Environment &env);

  };

  class PushSupplier;
  typedef PushSupplier *PushSupplier_ptr;
  class PushSupplier : public virtual RtecEventComm::PushSupplier
  {
  protected:
    PushSupplier (const char *obj_name = 0);
    virtual ~PushSupplier (void);
  public:
    virtual void disconnect_push_supplier ( CORBA::Environment &env) = 0; // pure virtual
    static void disconnect_push_supplier_skel (CORBA::ServerRequest &req, CORBA::Object_ptr obj, CORBA::Environment &env);

    static void _is_a_skel (CORBA::ServerRequest &req, CORBA::Object_ptr obj, CORBA::Environment &env);

  };

};


#if defined (__ACE_INLINE__)
#include "RtecEventCommS.i"
#endif // defined INLINE


#endif // if !defined
